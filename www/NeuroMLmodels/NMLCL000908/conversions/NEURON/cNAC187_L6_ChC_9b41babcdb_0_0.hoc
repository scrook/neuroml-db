// Cell: cNAC187_L6_ChC_9b41babcdb_0_0
/*
{
  "id" : "cNAC187_L6_ChC_9b41babcdb_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.44259, -9.54825, -1.27888, 2.30647", "-1.2819, -8.63231, -1.15821, 3.63473", "-1.1212, -7.71637, -1.03754, 6.81375", "-0.960502, -6.80044, -0.916865, 9.18535", "-0.799804, -5.8845, -0.796194, 10.2157", "-0.639107, -4.96856, -0.675522, 11.1797", "-0.478409, -4.05262, -0.554851, 12.0566", "-0.317712, -3.13668, -0.43418, 12.6775", "-0.157014, -2.22074, -0.313508, 13.0617", "0.00368301, -1.3048, -0.192837, 13.2009", "0.16438, -0.388856, -0.0721652, 13.2418", "0.325078, 0.527084, 0.0485063, 12.889", "0.485775, 1.44302, 0.169178, 12.4912", "0.646473, 2.35896, 0.289849, 12.2347", "0.80717, 3.2749, 0.410521, 12.0486", "0.967868, 4.19084, 0.531192, 11.9346", "1.12856, 5.10678, 0.651864, 11.8925", "1.28926, 6.02272, 0.772535, 11.1454", "1.44996, 6.93866, 0.893206, 8.66152", "1.61066, 7.8546, 1.01388, 5.25757", "1.77135, 8.77054, 1.13455, 3.12251" ]
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-3.66144, -7.26205, -8.0337, 1.77", "-3.66144, -7.26205, -8.0337, 1.77", "-3.31546, -8.40929, -8.19546, 1.77", "-3.05196, -9.2633, -8.32432, 1.77", "-2.64922, -10.6019, -8.51448, 1.55", "-2.41268, -11.4895, -8.66551, 1.69", "-2.25075, -12.1792, -8.79711, 1.77", "-2.10889, -12.8502, -8.95629, 1.77", "-1.9288, -13.7497, -9.22386, 1.25", "-1.63687, -15.1296, -9.58457, 0.74", "-2.19803, -14.5283, -10.2025, 0.74", "-2.63564, -14.3158, -10.8601, 0.74", "-3.40296, -14.0269, -12.0423, 1.18", "-3.81544, -13.9543, -12.7163, 1.18", "-4.43415, -13.8084, -13.6481, 0.52", "-5.1663, -13.5429, -14.649, 0.52", "-5.99855, -13.5814, -15.914, 0.74", "-6.34926, -13.7747, -16.7746, 0.74", "-6.51658, -14.0726, -17.5255, 0.74", "-6.78662, -14.4565, -18.6589, 1.11", "-7.02767, -14.6569, -19.3843, 1.69", "-7.42218, -14.7949, -20.1168, 1.77", "-8.32093, -15.0603, -21.7355, 1.33", "-8.79927, -15.2978, -22.7223, 1.4", "-9.08108, -15.6142, -23.4634, 1.55", "-9.24131, -16.1405, -24.2394, 1.33", "-9.25874, -17.0479, -25.2245, 0.74", "-9.10881, -17.7908, -25.7969, 1.03", "-8.8898, -18.4145, -26.1588, 1.47", "-8.65742, -18.8245, -26.4187, 1.62", "-8.28932, -19.314, -26.7772, 1.62", "-7.87215, -19.7075, -27.1071, 0.52", "-7.37628, -20.0776, -27.471, 0.52", "-7.25291, -20.271, -27.7839, 0.52", "-7.27799, -20.6669, -28.5941, 0.66", "-7.43839, -21.0557, -29.4503, 0.74", "-7.69999, -21.2143, -30.0542, 0.44", "-8.15074, -21.2123, -30.6931, 0.44", "-8.81514, -21.1307, -31.5056, 0.44", "-9.28746, -21.1788, -32.2284, 0.44", "-9.55008, -21.2735, -32.7411, 0.44", "-10.0383, -21.5897, -33.7372, 0.66", "-10.2768, -22.0806, -34.7437, 1.11", "-10.4001, -22.2605, -35.0932, 0.96", "-10.7226, -22.6399, -35.8946, 1.18", "-10.848, -22.8023, -36.2079, 1.69", "-11.0519, -23.0522, -36.6619, 1.69", "-11.8289, -23.9368, -38.1812, 0.88", "-12.3035, -24.3577, -38.9745, 2.14", "-13.3801, -24.9266, -40.4405, 2.28", "-13.5313, -24.9677, -40.6083, 2.28", "-14.4046, -25.0484, -41.423, 0.44", "-14.9032, -25.0084, -41.7894, 0.44", "-15.4921, -24.8882, -42.1272, 0.81", "-16.0962, -24.7345, -42.488, 0.81", "-16.3716, -24.6966, -42.6854, 0.96", "-16.9188, -24.7459, -43.1664, 0.66", "-17.469, -24.933, -43.7313, 1.99", "-17.8811, -25.1569, -44.208, 2.21", "-18.2835, -25.452, -44.7058, 2.5", "-19.3906, -26.4653, -46.1815, 0.66", "-19.9646, -27.1263, -47.0531, 0.66", "-20.3191, -27.6402, -47.6518, 0.66", "-20.6842, -28.2514, -48.2926, 1.55", "-20.8537, -28.5521, -48.5763, 2.21", "-21.0173, -28.8661, -48.8471, 2.21", "-21.4685, -29.8645, -49.6614, 0.29", "-21.7098, -30.5085, -50.2275, 0.29", "-21.8676, -30.9532, -50.6107, 1.55", "-22.0644, -31.4897, -51.0629, 1.99", "-22.2453, -31.97, -51.4772, 2.36", "-22.754, -33.2763, -52.6386, 0.59", "-23.0069, -33.9459, -53.2742, 1.84", "-23.1064, -34.2567, -53.6052, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-6.50143, -1.69206, 2.1563, 1.92", "-6.50143, -1.69206, 2.1563, 1.92", "-6.86576, -2.33697, 2.12732, 1.92", "-7.48548, -3.61576, 2.0643, 1.92", "-8.12454, -4.78242, 2.00073, 2.14", "-8.61716, -5.57142, 1.94696, 2.36", "-9.31522, -6.52614, 1.87283, 2.28", "-10.0821, -7.40761, 1.78805, 2.36", "-10.9402, -8.22329, 1.67797, 2.36", "-12.272, -9.13776, 1.52086, 1.77", "-13.0045, -9.43865, 1.46581, 1.77", "-14.1531, -9.68393, 1.43519, 1.99", "-15.1766, -9.78464, 1.50018, 1.99", "-15.6831, -9.80294, 1.5627, 1.99", "-16.4379, -9.83957, 1.69738, 1.77", "-17.6064, -10.0432, 1.99967, 1.47", "-18.4497, -10.3444, 2.23828, 1.47", "-19.5127, -10.9582, 2.50688, 1.33", "-19.9959, -11.3336, 2.59686, 1.99", "-20.8172, -12.1011, 2.68701, 1.99", "-21.7632, -13.0985, 2.69909, 1.77", "-22.8096, -14.3171, 2.60701, 1.92", "-23.7773, -15.4753, 2.40959, 1.69", "-24.3722, -16.1477, 2.21824, 1.69", "-25.1178, -16.905, 1.93637, 1.84", "-25.7978, -17.5384, 1.67666, 1.84", "-26.6781, -18.3294, 1.35418, 1.69", "-27.6455, -19.2107, 1.05236, 1.55", "-28.6225, -20.1644, 0.824368, 1.4", "-29.4229, -20.9495, 0.661886, 1.25", "-30.2604, -21.8082, 0.511013, 1.33", "-31.0536, -22.7008, 0.42325, 1.47", "-31.7961, -23.6479, 0.458843, 1.62", "-32.3211, -24.5338, 0.643773, 1.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "0.448551, -8.71205, -4.9037, 3.61", "0.448551, -8.71205, -4.9037, 3.61", "0.640751, -10.071, -4.84034, 2.95", "0.916222, -12.1799, -4.74501, 2.8", "1.07506, -13.5932, -4.65418, 2.8", "1.21341, -15.1736, -4.53972, 3.02", "1.2796, -16.2225, -4.4631, 3.02", "1.30729, -17.2514, -4.38391, 3.02", "1.28059, -18.8016, -4.26247, 3.02", "1.17233, -20.4417, -4.12892, 2.36", "0.881789, -23.3104, -3.98296, 2.36", "0.672044, -24.9174, -3.96871, 2.43", "0.430754, -26.4729, -4.00509, 2.43", "0.115368, -28.2961, -4.10831, 2.43", "-0.375001, -30.8134, -4.31898, 2.28", "-0.903403, -33.3962, -4.59457, 2.14", "-1.64112, -36.8179, -5.02576, 2.06", "-2.1531, -39.1926, -5.36255, 2.43", "-2.47651, -40.7049, -5.60699, 2.58", "-2.82328, -42.2985, -5.89941, 2.58" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-0.381405, 7.60794, -7.5337, 1.62", "-0.465614, 8.36794, -7.59148, 1.62", "-0.598774, 9.48606, -7.62508, 1.92", "-0.799592, 10.9797, -7.68318, 1.33", "-1.05286, 12.5874, -7.76876, 1.69", "-1.26059, 13.7769, -7.81231, 2.21", "-1.43865, 14.7713, -7.80482, 2.21", "-1.65303, 15.8907, -7.75279, 1.99", "-1.85423, 16.8426, -7.67382, 1.77", "-2.09314, 17.9015, -7.55771, 1.99", "-2.35225, 19.0222, -7.43012, 1.99", "-2.79514, 20.9912, -7.24409, 1.11", "-3.06854, 22.2221, -7.16428, 1.11", "-3.36151, 23.4606, -7.1326, 1.25", "-3.64083, 24.5005, -7.12715, 1.4", "-4.00645, 25.637, -7.19031, 0.81", "-4.43704, 26.7136, -7.35175, 0.74", "-4.77922, 27.4176, -7.52362, 0.74", "-5.20103, 28.1812, -7.7561, 0.74", "-5.69122, 29.0129, -8.05171, 0.96", "-6.15336, 29.7957, -8.35027, 0.96", "-6.63552, 30.5817, -8.65734, 1.55", "-7.18013, 31.463, -9.01407, 2.06", "-7.64091, 32.2654, -9.34677, 2.43", "-8.16934, 33.3459, -9.79841, 2.36", "-8.76766, 34.8179, -10.3978, 2.58" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-2.32144, 8.32794, 0.346303, 2.5", "-2.37291, 8.44155, 0.346888, 2.5", "-3.18902, 10.0332, 0.315351, 1.77", "-3.75865, 11.1088, 0.321181, 1.55", "-4.42675, 12.333, 0.375588, 1.55", "-4.93582, 13.2672, 0.451486, 1.33", "-5.71254, 14.7161, 0.612988, 1.33", "-6.19826, 15.6013, 0.737251, 1.55", "-6.9311, 16.9126, 0.948438, 1.55", "-7.6922, 18.3387, 1.18269, 1.62", "-8.29986, 19.6097, 1.37943, 1.4", "-8.8664, 21.0086, 1.57157, 1.4", "-9.18868, 21.8678, 1.69091, 1.4", "-9.68984, 23.2498, 1.87231, 1.4", "-10.1656, 24.6302, 1.99894, 1.4", "-10.7006, 26.3366, 2.08479, 1.77", "-11.151, 27.8674, 2.10084, 2.73" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "6.82855, 4.18794, 1.3463, 2.58", "6.86919, 4.22759, 1.34999, 2.58", "7.38144, 4.74006, 1.40348, 2.58", "7.96264, 5.32756, 1.48215, 1.84", "8.39289, 5.75381, 1.55195, 2.06", "8.94841, 6.30263, 1.65632, 2.06", "9.31552, 6.65687, 1.74903, 2.58", "9.72294, 7.0474, 1.87546, 2.58", "9.99233, 7.30982, 1.97761, 2.58", "10.4703, 7.75461, 2.18182, 2.58", "10.8065, 8.0453, 2.33347, 2.43", "11.511, 8.61893, 2.67859, 2.21", "12.0249, 9.01319, 2.94078, 1.99", "12.4373, 9.31109, 3.13846, 1.99", "12.9721, 9.64064, 3.36946, 1.69", "13.4192, 9.82926, 3.53903, 1.69", "14.2108, 9.93766, 3.79926, 2.06", "14.7077, 9.85086, 3.93457, 2.06", "15.8818, 9.3392, 4.24869, 1.69", "16.6893, 8.89628, 4.45277, 1.92", "17.9518, 8.03819, 4.74928, 1.92", "19.154, 7.0506, 5.00558, 2.06", "19.7703, 6.43523, 5.12154, 2.28", "20.2325, 5.87458, 5.21475, 2.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.77135, 8.77054, 1.13455, 0.827998", "4.36343, 23.5449, 1.13455, 0.827998", "6.95552, 38.3192, 1.13455, 0.827998" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-23.1064, -34.2567, -53.6052, 0.96", "-21.4956, -37.384, -60.009, 0.96", "-21.2025, -38.0901, -61.2107, 0.96", "-20.8446, -39.0528, -62.6344, 0.96", "-20.3619, -40.4089, -64.4655, 1.55", "-19.9925, -41.5563, -65.8613, 0.22", "-19.6135, -42.8941, -67.2435, 0.22", "-19.4475, -43.7692, -67.8, 1.11", "-19.3105, -44.5945, -68.2508, 1.4", "-19.0822, -45.7156, -68.7659, 1.4", "-18.5063, -48.1337, -69.7203, 0.22", "-17.7744, -50.6093, -70.6271, 0.22", "-17.4922, -51.4214, -70.9122, 0.74", "-17.3291, -51.8561, -71.0509, 0.74", "-16.4289, -54.1746, -71.7191, 0.15", "-16.2812, -54.5344, -71.8072, 0.37", "-15.3616, -56.4922, -72.2243, 0.22", "-14.7938, -57.5787, -72.4882, 0.22", "-14.3424, -58.4456, -72.695, 0.74", "-13.9285, -59.3299, -72.8831, 0.88", "-13.8306, -59.632, -72.9357, 0.88" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-23.1064, -34.2567, -53.6052, 2.87", "-23.7645, -34.499, -53.6843, 2.87", "-25.8372, -35.438, -54.0303, 0.22", "-27.7028, -36.5377, -54.4014, 0.22", "-28.6019, -37.123, -54.5874, 1.69", "-28.884, -37.3191, -54.6467, 2.21", "-29.3419, -37.6517, -54.7436, 2.21", "-31.016, -39.0427, -55.0943, 0.22", "-32.4765, -40.5125, -55.4523, 0.22", "-32.9275, -41.0073, -55.5742, 1.25", "-33.2955, -41.4157, -55.675, 1.25", "-33.7848, -41.9515, -55.8157, 1.25", "-34.7861, -42.9757, -56.0991, 0.15", "-35.3552, -43.5331, -56.2531, 0.15", "-35.8062, -43.927, -56.3786, 0.96", "-36.3214, -44.332, -56.537, 1.18", "-36.5591, -44.4948, -56.6123, 1.18", "-38.1046, -45.3998, -57.182, 0.22", "-38.5197, -45.5783, -57.3507, 0.52", "-38.8985, -45.7181, -57.5072, 0.52", "-39.8745, -46.046, -57.9024, 0.22", "-40.481, -46.2427, -58.1543, 1.25", "-41.3697, -46.5656, -58.5131, 1.4", "-43.0774, -47.3498, -59.2606, 0.22", "-44.2357, -48.0382, -59.7854, 0.22", "-44.6709, -48.3688, -59.9925, 0.74", "-45.2219, -48.9085, -60.2665, 0.88", "-45.9731, -49.9904, -60.8004, 0.22", "-46.5417, -51.3816, -61.3624, 0.22", "-46.7477, -52.2887, -61.6871, 1.99", "-46.8184, -52.8441, -61.8587, 2.36", "-46.8658, -53.3888, -62.0265, 2.36", "-46.9987, -56.4419, -62.961, 0.15", "-46.996, -58.3342, -63.5786, 0.15", "-46.9814, -58.8269, -63.7209, 0.44", "-46.9239, -59.7754, -63.9725, 0.44" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-32.3211, -24.5338, 0.643773, 0.96", "-33.1367, -24.8864, 0.300678, 0.96", "-33.913, -25.2507, -0.0286729, 1.25", "-35.0319, -25.7748, -0.498253, 1.25", "-36.9858, -26.6165, -1.2673, 1.18", "-38.3191, -27.1242, -1.75173, 1.11", "-39.3469, -27.489, -2.11647, 0.88", "-40.6989, -27.98, -2.61731, 0.96", "-41.4723, -28.2617, -2.91102, 0.96", "-42.6071, -28.6847, -3.34852, 0.96", "-43.7305, -29.1, -3.7148, 0.96", "-44.69, -29.4373, -3.97078, 1.18", "-45.8739, -29.8286, -4.23507, 1.03", "-46.4645, -29.9976, -4.30726, 1.03", "-47.7099, -30.2912, -4.32584, 1.18", "-48.4749, -30.4236, -4.22889, 1.18", "-50.2223, -30.5817, -3.68776, 0.96", "-50.868, -30.5949, -3.43152, 1.11", "-52.1297, -30.5881, -2.87149, 1.11", "-53.1418, -30.607, -2.40821, 1.11", "-54.3326, -30.6746, -1.85876, 1.11", "-55.9212, -30.8977, -1.12938, 1.55", "-57.0551, -31.188, -0.639273, 1.03", "-58.4102, -31.7038, -0.0560725, 0.88", "-59.5632, -32.3125, 0.419959, 0.74", "-60.2218, -32.7745, 0.682703, 0.74", "-61.0665, -33.5435, 0.972273, 0.74", "-61.8984, -34.4886, 1.19622, 0.66", "-62.6393, -35.4724, 1.3717, 0.88", "-63.1201, -36.1948, 1.46106, 1.03", "-63.6192, -37.048, 1.54324, 1.03", "-64.2557, -38.1492, 1.63177, 0.88", "-65.0487, -39.4449, 1.71548, 0.88", "-65.4978, -40.0955, 1.74322, 0.88", "-66.166, -40.8948, 1.76966, 0.88", "-67.4719, -42.1749, 1.80152, 0.88", "-68.238, -42.7548, 1.8054, 0.88", "-69.3383, -43.3639, 1.79202, 0.88", "-70.0806, -43.6444, 1.76676, 0.96", "-70.9538, -43.8917, 1.70351, 0.96", "-71.7482, -44.0534, 1.64247, 0.96", "-72.6386, -44.2051, 1.5795, 0.52", "-73.2469, -44.4125, 1.55959, 0.52", "-73.7066, -44.7789, 1.60872, 0.52", "-74.1592, -45.4577, 1.80029, 0.81", "-74.5113, -46.1715, 2.05487, 0.96", "-74.7714, -46.9947, 2.37323, 0.96", "-75.0658, -48.4684, 2.96397, 0.81", "-75.1648, -49.1888, 3.26435, 0.81", "-75.2536, -50.097, 3.68803, 1.11", "-75.3407, -50.6071, 3.96705, 1.11" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-32.3211, -24.5338, 0.643773, 1.33", "-33.0083, -24.7484, 1.26184, 1.33", "-33.6774, -24.9764, 1.78038, 1.18", "-34.9362, -25.3741, 2.71107, 0.88", "-35.5467, -25.5361, 3.12523, 0.74", "-36.4463, -25.7251, 3.66867, 0.74", "-37.3613, -25.8601, 4.2187, 0.74", "-38.0533, -25.9419, 4.60741, 0.59", "-38.8673, -25.9922, 5.05908, 0.59", "-39.5081, -25.9895, 5.41917, 0.52", "-40.1516, -25.9122, 5.83752, 0.52", "-41.3588, -25.6106, 6.73444, 0.74", "-42.1211, -25.35, 7.36441, 0.59", "-42.8226, -25.1008, 7.96697, 0.44", "-43.5783, -24.8783, 8.63665, 0.37", "-44.1832, -24.7692, 9.17762, 0.66", "-44.7285, -24.7606, 9.58443, 0.66", "-45.0886, -24.8104, 9.76854, 0.66", "-45.5664, -24.9053, 9.98315, 0.44", "-46.1222, -25.0534, 10.2036, 0.44", "-47.1147, -25.3219, 10.5713, 0.44", "-48.4847, -25.7255, 11.0821, 0.74", "-49.2969, -25.9947, 11.3802, 0.74", "-50.4195, -26.3549, 11.7778, 0.52", "-51.4699, -26.6764, 12.1379, 0.59", "-52.3722, -26.9454, 12.4316, 0.44", "-53.6264, -27.3714, 12.8371, 0.37", "-54.5285, -27.761, 13.1298, 0.37", "-55.5112, -28.325, 13.4177, 0.29", "-55.9781, -28.6915, 13.5375, 0.29", "-56.5258, -29.2492, 13.7158, 0.29", "-56.991, -29.782, 13.9035, 0.37", "-57.5146, -30.4084, 14.1656, 0.37", "-58.0435, -31.0163, 14.4796, 0.37", "-58.6095, -31.7327, 14.8638, 0.66", "-59.1731, -32.43, 15.2666, 0.81", "-59.6083, -32.9123, 15.583, 0.81", "-60.248, -33.4885, 16.0228, 0.22", "-61.0368, -34.0792, 16.5504, 0.22", "-68.8346, -35.4599, 20.6286, 0.22" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-2.82328, -42.2985, -5.89941, 1.55", "-2.54738, -43.0972, -5.90295, 1.55", "-2.27266, -43.9109, -5.90464, 1.55", "-2.04006, -44.6261, -5.90812, 1.55", "-1.78433, -45.4377, -5.90747, 1.69", "-1.60065, -46.0607, -5.9025, 1.69", "-1.47816, -46.527, -5.89709, 1.69", "-1.31083, -47.3019, -5.88383, 1.55", "-1.13042, -48.3168, -5.86513, 1.47", "-1.02516, -49.1636, -5.83819, 1.33", "-0.97755, -49.9767, -5.8009, 1.33", "-0.988865, -51.0583, -5.74029, 1.33", "-1.05785, -51.853, -5.68026, 1.11", "-1.14442, -52.3546, -5.63144, 1.11", "-1.41197, -53.4494, -5.50496, 1.25", "-1.63177, -54.1774, -5.41259, 1.25", "-1.85609, -54.8331, -5.32515, 1.25", "-2.19132, -55.7442, -5.2083, 1.4", "-2.5359, -56.6431, -5.10199, 1.4", "-2.80863, -57.3724, -5.03302, 1.55", "-2.98281, -57.9093, -5.00789, 1.55", "-3.19209, -58.7036, -5.00109, 1.33", "-3.39578, -59.6958, -5.03688, 0.96", "-3.45467, -60.0891, -5.07065, 0.81", "-3.50076, -60.5314, -5.11453, 0.81", "-3.5686, -61.5534, -5.21481, 0.96", "-3.59038, -62.261, -5.27617, 1.33", "-3.60076, -63.0419, -5.33123, 1.69", "-3.61121, -63.5153, -5.35293, 1.84", "-3.63309, -64.0522, -5.36114, 1.99", "-3.68717, -64.6878, -5.34703, 2.06", "-3.74175, -65.2314, -5.32041, 2.06", "-3.79542, -65.7847, -5.27175, 1.84", "-3.84301, -66.3752, -5.19423, 1.62", "-3.88458, -67.0846, -5.07874, 1.18", "-3.90284, -67.6527, -4.98019, 0.88", "-3.91793, -68.429, -4.83377, 0.88", "-3.92229, -68.9633, -4.7147, 1.03", "-3.92674, -69.5129, -4.57571, 1.11", "-3.93886, -69.9044, -4.47071, 1.11", "-4.01715, -70.8815, -4.20311, 1.03", "-4.09887, -71.5194, -4.02655, 1.18", "-4.17898, -72.0402, -3.88978, 1.25", "-4.31342, -72.8327, -3.70066, 1.18", "-4.45, -73.5513, -3.54961, 1.03", "-4.60701, -74.2688, -3.41868, 0.96", "-4.80021, -75.0456, -3.30317, 0.88", "-4.94908, -75.5645, -3.2503, 0.88", "-5.21894, -76.3457, -3.23331, 1.25", "-5.52619, -77.125, -3.26604, 1.55", "-5.76865, -77.7208, -3.31683, 1.62", "-5.95125, -78.1977, -3.36901, 1.62", "-6.16584, -78.822, -3.44314, 1.4", "-6.43217, -79.706, -3.53966, 1.11", "-6.65148, -80.6171, -3.62526, 1.11", "-6.83397, -81.6231, -3.68683, 1.11", "-6.989, -82.696, -3.73061, 1.11", "-7.08707, -83.4809, -3.74821, 1.4", "-7.17634, -84.2941, -3.75526, 1.4", "-7.304, -85.5625, -3.74825, 1.25", "-7.43511, -86.8611, -3.74493, 1.25", "-7.52887, -87.7155, -3.74383, 1.62", "-7.62274, -88.4639, -3.74961, 1.77", "-7.75061, -89.4652, -3.77306, 1.33", "-7.86256, -90.3725, -3.80055, 0.88", "-7.96708, -91.3832, -3.84397, 1.25", "-8.01017, -91.884, -3.87319, 1.84", "-8.04372, -92.4445, -3.91585, 2.28", "-8.06438, -93.0249, -3.97347, 2.43" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-2.82328, -42.2985, -5.89941, 2.14", "-2.60029, -43.2718, -6.13198, 2.14", "-2.21004, -44.8126, -6.42266, 2.14", "-1.54271, -47.4474, -6.91972, 1.69", "-0.983546, -49.6552, -7.33622, 1.84", "-0.440329, -51.8, -7.74084, 1.99", "-8.89968E-4, -53.535, -8.06816, 2.36", "0.341005, -54.8084, -8.25276, 2.5" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-8.76766, 34.8179, -10.3978, 1.25", "-8.39253, 35.9181, -10.8252, 1.25", "-8.07416, 36.6525, -11.1132, 1.03", "-7.64788, 37.5228, -11.4512, 0.81", "-7.16555, 38.4988, -11.8119, 0.81", "-6.73538, 39.4795, -12.142, 1.11", "-6.45963, 40.1959, -12.3612, 1.11", "-6.1517, 41.0399, -12.5681, 0.96", "-5.77494, 42.1768, -12.8002, 0.66", "-5.54096, 42.9667, -12.9489, 0.52", "-5.26044, 44.0074, -13.1259, 0.52", "-5.07752, 44.7838, -13.2474, 0.52", "-4.68983, 46.4426, -13.5342, 1.18", "-4.48816, 47.2905, -13.6913, 1.62", "-4.33585, 47.8974, -13.8133, 1.69", "-4.05879, 48.8977, -14.0529, 1.33", "-3.89363, 49.3882, -14.1995, 0.74", "-3.60148, 50.1341, -14.4662, 0.59", "-3.12252, 51.306, -14.9648, 0.66", "-2.8789, 51.9397, -15.2486, 0.44", "-2.72307, 52.4159, -15.4547, 0.44", "-2.47982, 53.2932, -15.8245, 0.37", "-2.26994, 54.0319, -16.13, 0.37", "-2.09045, 54.5677, -16.3425, 0.37", "-1.74414, 55.4034, -16.7114, 0.37", "-1.41034, 56.1442, -17.0625, 0.44", "-1.12405, 56.8669, -17.423, 0.44", "-0.751921, 58.042, -18.0247, 0.81", "-0.522636, 58.8749, -18.4533, 1.03", "-0.308606, 59.6257, -18.8549, 1.03", "-0.119969, 60.307, -19.2478, 0.81", "0.122005, 61.3011, -19.8609, 0.29", "0.218829, 61.7967, -20.1726, 0.29", "0.393008, 63.0019, -20.9043, 1.77", "0.444714, 63.4043, -21.1414, 2.36", "0.528937, 63.9625, -21.4492, 2.36", "0.720946, 65.0247, -22.0094, 2.28", "1.00355, 66.2985, -22.6438, 0.66", "1.1658, 66.9946, -22.9929, 0.88", "1.33164, 67.7193, -23.3592, 0.88", "1.52353, 68.5338, -23.7513, 0.37", "1.65656, 69.0842, -24.0081, 0.37", "1.92896, 70.2344, -24.5154, 0.37", "2.12616, 71.1037, -24.8823, 1.11", "2.27247, 71.8001, -25.1638, 1.47", "2.36515, 72.3001, -25.3528, 1.69", "2.49753, 73.1491, -25.6478, 1.33", "2.61786, 74.0864, -25.9413, 0.44", "2.68351, 75.0913, -26.209, 0.29", "2.70685, 75.8833, -26.4069, 0.52", "2.70907, 76.4769, -26.5486, 0.52", "2.68593, 77.4741, -26.8032, 0.29", "2.67604, 78.4991, -27.0741, 0.29", "2.68774, 80.3011, -27.5904, 1.18", "2.70207, 80.9777, -27.7872, 1.62", "2.72037, 81.6991, -27.9846, 1.84", "2.75045, 82.6107, -28.2184, 1.33", "2.83658, 85.2135, -28.8624, 0.22", "2.90341, 86.8801, -29.2607, 0.22", "2.96923, 88.3879, -29.5978, 0.22", "3.02615, 89.985, -29.9193, 0.74", "3.05065, 90.8568, -30.0846, 1.03", "3.05648, 91.2687, -30.1557, 1.03", "3.00975, 92.586, -30.3952, 0.15", "2.97572, 93.0908, -30.5073, 0.15", "2.92152, 93.667, -30.6734, 0.44", "2.86468, 94.2138, -30.8564, 0.66", "2.81287, 94.7175, -31.0267, 0.66", "2.70845, 96.1667, -31.5213, 1.55", "2.66602, 97.2304, -31.8795, 2.58", "2.65605, 98.1544, -32.1959, 2.58", "2.73651, 100.2, -32.8825, 0.29", "2.88655, 101.564, -33.3002, 0.29", "3.23027, 103.516, -33.8295, 0.29", "3.53197, 104.739, -34.1199, 0.96", "3.72232, 105.366, -34.2456, 0.96", "4.46409, 107.406, -34.5911, 0.22", "5.35513, 109.577, -34.8876, 0.22", "5.95901, 110.939, -35.0387, 1.77", "6.21062, 111.472, -35.0851, 2.36", "6.52433, 112.123, -35.1374, 2.5", "7.54162, 114.226, -35.2913, 0.15", "8.04753, 115.284, -35.375, 0.29", "8.37754, 115.993, -35.4432, 0.29", "8.7821, 116.896, -35.5745, 0.15", "9.16558, 117.819, -35.7605, 1.18", "9.39622, 118.39, -35.9053, 1.55", "9.64578, 119.022, -36.0901, 1.18", "9.82404, 119.477, -36.2375, 0.74", "10.3317, 120.893, -36.6941, 0.22", "10.6999, 122.001, -37.0471, 0.22", "11.2997, 123.946, -37.6124, 0.22", "11.6057, 124.996, -37.8891, 0.81", "11.7217, 125.418, -37.9895, 0.81", "12.409, 128.071, -38.5232, 0.22", "12.7362, 129.413, -38.7109, 0.22", "12.9942, 130.629, -38.8572, 1.25", "13.041, 130.954, -38.8893, 1.69", "13.0766, 131.323, -38.9195, 1.69", "13.1277, 132.11, -38.972, 1.33", "13.1412, 132.802, -39.0187, 0.59", "13.1356, 134.24, -39.1452, 0.22", "13.1323, 136.285, -39.3914, 0.22", "13.1275, 137.543, -39.5575, 1.03", "13.1232, 138.073, -39.6303, 1.03", "13.1352, 138.626, -39.7104, 1.03", "13.1846, 139.444, -39.8298, 0.52", "13.3725, 141.273, -40.0788, 0.22", "13.5294, 142.148, -40.2133, 0.59", "13.6642, 142.707, -40.3046, 0.59", "14.3736, 145.152, -40.7128, 0.22", "14.6362, 145.908, -40.8412, 0.66", "14.8597, 146.444, -40.9404, 0.66", "15.4227, 147.686, -41.1921, 0.15", "15.7451, 148.374, -41.3451, 0.81", "15.9638, 148.848, -41.4585, 0.81", "16.2724, 149.545, -41.6409, 0.81", "16.8155, 150.879, -42.0018, 0.22", "17.3359, 152.234, -42.3969, 1.33", "17.5416, 152.803, -42.5708, 1.55", "17.6625, 153.134, -42.6746, 1.55", "17.7895, 153.485, -42.7901, 1.03", "18.3881, 155.081, -43.3484, 0.22", "18.9541, 156.497, -43.8742, 0.22", "19.2731, 157.237, -44.1754, 0.22", "19.6469, 158.112, -44.5336, 1.25", "19.8722, 158.678, -44.7651, 1.77", "20.0574, 159.192, -44.9755, 1.77", "20.201, 159.626, -45.1601, 1.18", "20.4112, 160.314, -45.4572, 0.66", "21.0348, 162.407, -46.4091, 0.22", "21.4466, 163.801, -47.0894, 0.22", "21.7365, 164.752, -47.554, 1.11", "21.946, 165.362, -47.8519, 1.4", "22.156, 165.901, -48.1206, 1.4", "22.4267, 166.522, -48.4586, 0.96", "23.2547, 168.269, -49.4852, 0.22", "24.1903, 170.078, -50.5782, 0.22", "24.9428, 171.461, -51.4141, 1.77", "25.2162, 171.949, -51.7024, 2.65", "25.6591, 172.712, -52.1418, 2.95" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-8.76766, 34.8179, -10.3978, 0.66", "-9.9702, 35.3385, -10.7975, 0.66", "-10.4481, 35.5235, -10.956, 0.66", "-11.0079, 35.7182, -11.1379, 0.66", "-11.6448, 35.9127, -11.3479, 1.11", "-12.0379, 36.0147, -11.4817, 1.33", "-12.6294, 36.1613, -11.6853, 1.33", "-13.2703, 36.2996, -11.9061, 0.96", "-13.716, 36.3972, -12.0436, 0.88", "-14.252, 36.513, -12.1906, 0.88", "-14.8956, 36.6465, -12.3342, 0.37", "-15.2302, 36.7111, -12.3937, 0.37", "-15.8062, 36.8192, -12.4749, 0.81", "-16.3075, 36.9175, -12.5313, 0.88", "-16.7735, 37.0119, -12.5767, 0.81", "-17.2672, 37.1142, -12.6172, 0.29", "-17.5811, 37.1755, -12.6469, 0.29", "-18.1193, 37.2492, -12.7232, 0.74", "-18.5156, 37.2932, -12.7973, 0.74", "-18.744, 37.3279, -12.8368, 0.74", "-19.0138, 37.3874, -12.8631, 0.74", "-19.3501, 37.4738, -12.876, 0.59", "-19.6818, 37.5524, -12.8685, 0.59", "-19.9769, 37.6105, -12.8397, 0.37", "-20.7761, 37.7246, -12.7474, 0.37", "-21.3384, 37.771, -12.6786, 0.37", "-21.6381, 37.7798, -12.6419, 0.22", "-22.1404, 37.771, -12.5864, 0.22", "-22.4077, 37.7515, -12.5697, 0.22", "-23.1859, 37.6789, -12.5574, 1.03", "-23.5677, 37.652, -12.5729, 1.4", "-23.7961, 37.6483, -12.5862, 1.4", "-24.3517, 37.6735, -12.6261, 0.81", "-25.0605, 37.7378, -12.6972, 0.22", "-25.4423, 37.7785, -12.7424, 0.22", "-26.21, 37.8723, -12.8506, 1.11", "-26.6006, 37.9258, -12.9151, 1.4", "-26.877, 37.9651, -12.966, 1.4", "-27.5194, 38.0564, -13.0978, 0.66", "-28.1214, 38.1353, -13.2288, 0.52", "-28.8466, 38.2103, -13.3969, 0.74", "-29.3161, 38.256, -13.5119, 0.88", "-29.9816, 38.3292, -13.6804, 0.66", "-30.4535, 38.3866, -13.8031, 0.66", "-30.8398, 38.4386, -13.9077, 0.66", "-31.5681, 38.5503, -14.1016, 0.29", "-32.1559, 38.6505, -14.2415, 1.03", "-32.6596, 38.7418, -14.3438, 1.25", "-32.8231, 38.7772, -14.3639, 1.25", "-33.2517, 38.8921, -14.3861, 0.81", "-33.7746, 39.0478, -14.379, 0.29", "-34.1183, 39.1579, -14.3504, 0.52", "-34.3489, 39.2395, -14.3244, 0.66", "-35.1896, 39.5549, -14.2309, 0.22", "-35.6632, 39.7392, -14.1891, 0.22", "-36.0483, 39.8919, -14.1708, 0.22", "-36.5581, 40.1029, -14.1814, 0.22", "-37.2388, 40.3928, -14.2256, 0.59", "-37.6249, 40.5634, -14.2673, 0.81", "-37.9786, 40.7369, -14.3334, 0.81", "-38.5166, 41.0302, -14.4567, 0.52", "-39.2353, 41.4596, -14.6483, 1.03", "-39.663, 41.7296, -14.7756, 1.18", "-39.9787, 41.941, -14.8783, 1.25", "-40.6791, 42.4359, -15.1213, 0.29", "-41.3104, 42.8991, -15.352, 0.74", "-41.5466, 43.0762, -15.4426, 0.96", "-41.752, 43.2305, -15.5277, 0.96", "-42.4323, 43.7265, -15.8238, 0.22", "-42.7015, 43.912, -15.9435, 0.22", "-43.0707, 44.1474, -16.1038, 0.66", "-43.3207, 44.3007, -16.219, 0.88", "-43.617, 44.4732, -16.3556, 0.44", "-44.0042, 44.6922, -16.5302, 0.37", "-44.2392, 44.8208, -16.6301, 0.44", "-44.5529, 44.9993, -16.7622, 0.44", "-44.7788, 45.1297, -16.8573, 0.44", "-45.2154, 45.3861, -17.0354, 0.22", "-45.503, 45.5592, -17.1425, 0.22", "-45.8468, 45.7831, -17.2612, 0.29", "-46.0507, 45.924, -17.3229, 0.22" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-11.151, 27.8674, 2.10084, 1.47", "-10.7844, 28.5808, 2.23677, 1.47", "-10.4516, 29.3604, 2.3741, 0.81", "-10.2439, 29.9323, 2.47019, 0.81", "-10.0222, 30.7349, 2.59307, 0.81", "-9.79349, 31.7132, 2.7372, 0.81", "-9.57924, 32.7941, 2.89166, 0.81", "-9.43589, 33.8759, 3.02975, 1.03", "-9.34263, 34.8501, 3.14859, 1.03", "-9.22511, 36.3429, 3.32117, 1.18", "-9.15827, 37.2673, 3.43136, 1.18", "-9.11546, 38.8778, 3.59897, 1.18", "-9.12284, 40.0253, 3.70471, 1.4", "-9.1197, 40.8385, 3.77932, 1.4", "-9.12181, 41.4178, 3.82828, 1.4" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-11.151, 27.8674, 2.10084, 0.96", "-12.8994, 29.3176, 0.471998, 0.96", "-13.5378, 29.8583, -0.0877272, 0.96", "-14.4235, 30.6193, -0.860112, 0.96", "-15.3384, 31.4352, -1.6703, 0.81", "-16.127, 32.1582, -2.36159, 0.81", "-17.2232, 33.1744, -3.29567, 1.03", "-17.9653, 33.9095, -3.91557, 1.03", "-18.6525, 34.6924, -4.46842, 1.03", "-19.5036, 35.7923, -5.12724, 0.81", "-20.1266, 36.6285, -5.6006, 0.81", "-20.817, 37.5712, -6.10253, 0.81", "-21.6272, 38.743, -6.68057, 0.52", "-22.3762, 39.9199, -7.17959, 0.52", "-22.8073, 40.631, -7.42868, 0.52", "-23.4351, 41.7152, -7.7477, 0.52", "-24.2197, 43.1094, -8.12127, 0.52", "-24.636, 43.8692, -8.30129, 0.52", "-25.0672, 44.6537, -8.45944, 0.52", "-25.5836, 45.5865, -8.61841, 0.66", "-26.0684, 46.5069, -8.73658, 0.88", "-26.5427, 47.4891, -8.82096, 0.88", "-27.0678, 48.6421, -8.90212, 0.59", "-27.5948, 49.7894, -9.00037, 0.88", "-27.9712, 50.6166, -9.08085, 0.88", "-28.274, 51.3538, -9.14282, 0.96", "-28.5349, 52.0295, -9.2044, 0.96", "-28.7671, 52.6224, -9.27425, 0.96", "-29.181, 53.5966, -9.433, 0.74", "-29.8355, 55.0372, -9.72771, 1.25", "-30.2892, 55.9989, -9.94965, 1.25", "-30.8063, 57.0731, -10.2083, 0.29", "-31.1535, 57.7871, -10.3735, 0.29", "-31.5097, 58.5094, -10.5277, 0.66", "-31.8384, 59.1604, -10.65, 0.81", "-32.1202, 59.7097, -10.734, 0.81", "-32.6014, 60.6792, -10.8251, 0.37", "-33.039, 61.752, -10.9027, 0.37", "-33.2794, 62.4552, -10.9547, 1.03", "-33.4748, 63.0798, -11.0116, 1.25", "-33.7213, 63.8481, -11.1102, 1.25", "-33.9327, 64.4617, -11.2212, 0.81", "-34.3919, 65.685, -11.4955, 0.59", "-34.6692, 66.3842, -11.6693, 0.44", "-35.0689, 67.3663, -11.8841, 0.88", "-35.387, 68.1198, -12.0241, 0.88", "-35.9597, 69.4287, -12.1983, 0.59", "-36.3355, 70.2977, -12.2876, 0.59", "-36.9322, 71.6997, -12.3754, 0.44", "-37.5853, 73.3117, -12.4392, 1.03", "-38.1154, 74.6772, -12.4455, 1.55", "-38.4223, 75.5198, -12.4076, 1.62", "-38.8442, 76.7482, -12.3052, 1.11", "-39.2821, 78.0927, -12.1567, 0.59", "-39.5771, 79.0179, -12.0241, 0.59", "-40.0589, 80.5582, -11.7608, 0.59", "-40.5484, 82.0896, -11.4761, 0.52", "-40.8846, 83.0882, -11.2724, 0.52", "-41.3349, 84.326, -10.9819, 0.52", "-41.823, 85.6167, -10.6766, 0.52", "-42.3826, 87.0323, -10.367, 0.37", "-43.2017, 88.9208, -10.0192, 1.55", "-43.505, 89.5462, -9.93427, 1.92", "-43.8123, 90.1179, -9.88798, 1.92", "-44.0958, 90.6089, -9.8812, 1.92", "-44.6927, 91.546, -9.94205, 0.88", "-45.4851, 92.74, -10.0824, 0.44", "-46.0794, 93.6263, -10.2095, 0.44", "-46.7097, 94.5884, -10.3623, 0.44", "-47.5822, 95.9585, -10.5731, 0.37", "-48.0459, 96.7038, -10.6833, 0.37", "-48.9995, 98.3005, -10.896, 0.74", "-49.3816, 98.9556, -10.9694, 0.74", "-49.8542, 99.7968, -11.0499, 0.52", "-50.4713, 100.96, -11.1642, 1.25", "-50.8862, 101.781, -11.2693, 1.47", "-51.1551, 102.34, -11.3541, 1.47", "-51.5098, 103.04, -11.5233, 0.81", "-51.9809, 103.924, -11.8004, 0.59", "-52.4375, 104.747, -12.1326, 0.88", "-52.8148, 105.414, -12.4414, 1.18", "-53.0464, 105.825, -12.6433, 1.18", "-53.6259, 106.866, -13.1086, 0.96", "-54.2635, 108.037, -13.5417, 0.52", "-54.6578, 108.758, -13.7208, 0.37", "-55.2655, 109.862, -13.8648, 0.37", "-55.8758, 110.999, -13.9034, 0.37", "-56.4578, 112.126, -13.8547, 0.37", "-56.8778, 112.993, -13.7455, 0.81", "-57.496, 114.376, -13.5005, 1.84", "-57.7425, 114.935, -13.3985, 1.92", "-57.9244, 115.34, -13.3391, 1.92", "-58.2441, 116.097, -13.2475, 1.62", "-58.658, 117.176, -13.1686, 0.88", "-59.0605, 118.343, -13.1058, 0.29", "-59.6608, 120.164, -13.0367, 0.29", "-60.1164, 121.476, -13.0021, 0.29", "-60.4209, 122.242, -12.9936, 0.29", "-60.5858, 122.599, -12.9983, 0.29", "-61.0169, 123.384, -13.0381, 0.66", "-61.5726, 124.249, -13.1195, 0.81", "-61.9784, 124.822, -13.1922, 0.81", "-62.7545, 125.905, -13.3393, 0.37", "-63.366, 126.737, -13.4615, 0.37", "-63.9447, 127.534, -13.5753, 0.81", "-64.354, 128.1, -13.6504, 0.81", "-64.9377, 128.914, -13.7452, 0.37", "-65.519, 129.673, -13.8465, 0.37", "-66.1167, 130.382, -13.9605, 0.88", "-66.8537, 131.215, -14.1073, 1.47", "-67.4066, 131.839, -14.222, 1.69", "-67.8521, 132.35, -14.3192, 1.69", "-69.0613, 133.719, -14.5991, 0.37", "-69.4749, 134.197, -14.6954, 0.37", "-70.2415, 135.149, -14.8722, 0.37", "-71.1133, 136.327, -15.0676, 0.81", "-71.6677, 137.186, -15.1779, 1.33", "-71.9967, 137.757, -15.2395, 1.33", "-72.4314, 138.56, -15.3201, 0.81", "-73.3019, 140.14, -15.5099, 0.52", "-74.0237, 141.368, -15.702, 0.52", "-74.8328, 142.731, -15.9356, 0.52", "-75.2773, 143.484, -16.0697, 0.52", "-75.8452, 144.459, -16.2465, 0.52", "-76.4774, 145.554, -16.4549, 0.52", "-77.5489, 147.402, -16.8264, 0.52", "-77.9367, 148.07, -16.9629, 0.52", "-78.9039, 149.703, -17.3043, 1.25", "-79.1785, 150.166, -17.398, 1.47", "-79.5364, 150.769, -17.5277, 1.47", "-80.0597, 151.608, -17.7355, 0.88", "-80.6981, 152.545, -18.0121, 0.29", "-80.9665, 152.895, -18.1341, 0.29", "-81.5294, 153.564, -18.3912, 0.44", "-81.9832, 154.075, -18.5894, 0.44", "-82.4177, 154.541, -18.7681, 0.44", "-82.6667, 154.828, -18.8799, 0.44", "-83.0292, 155.25, -19.0158, 0.29", "-83.5117, 155.93, -19.1238, 0.29", "-83.6857, 156.186, -19.1388, 0.44", "-83.9053, 156.506, -19.1411, 0.44", "-84.4946, 157.33, -19.1367, 0.37", "-85.2989, 158.401, -19.132, 0.44", "-86.5631, 160.121, -19.2199, 2.28", "-87.0534, 160.81, -19.2868, 2.5", "-87.4163, 161.361, -19.3578, 2.5", "-87.9836, 162.274, -19.5067, 1.92", "-88.5173, 163.208, -19.707, 0.81", "-89.1282, 164.512, -20.0778, 0.52", "-89.3598, 165.114, -20.2552, 0.52", "-89.8178, 166.505, -20.6501, 0.88", "-90.0582, 167.361, -20.8695, 0.88", "-90.3141, 168.394, -21.1005, 0.66", "-90.5037, 169.24, -21.2677, 0.44", "-90.7668, 170.464, -21.4592, 0.29", "-91.0307, 171.876, -21.67, 0.29", "-91.2719, 173.489, -21.9059, 0.29", "-91.3694, 174.29, -22.0238, 0.29", "-91.5026, 175.783, -22.2912, 0.52", "-91.5801, 176.816, -22.5206, 0.88", "-91.6292, 177.672, -22.7641, 0.88", "-91.6913, 178.621, -23.0927, 0.44", "-91.8822, 180.143, -23.7524, 1.11", "-92.1613, 181.475, -24.4437, 2.43", "-92.4496, 182.385, -25.0021, 2.43", "-92.6869, 182.919, -25.3837, 2.43", "-93.0783, 183.553, -25.8834, 1.69", "-93.6902, 184.358, -26.5743, 0.59", "-94.4293, 185.13, -27.2923, 0.74", "-94.7005, 185.364, -27.5099, 0.74", "-95.1642, 185.738, -27.8678, 0.52", "-95.8982, 186.311, -28.3904, 0.52" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "20.2325, 5.87458, 5.21475, 1.99", "22.2696, 6.11619, 5.19116, 1.99", "23.4593, 6.53858, 5.3148, 1.99", "24.2897, 7.14814, 5.5055, 1.69", "25.4572, 8.00504, 5.77358, 1.69", "25.9489, 8.36595, 5.8865, 1.69", "26.7659, 8.96562, 6.07411, 1.69", "27.2823, 9.58098, 6.20875, 1.92", "28.0356, 10.8422, 6.57494, 1.99" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "20.2325, 5.87458, 5.21475, 0.74", "21.2376, 7.56777, 4.69382, 0.74", "21.6312, 8.29801, 4.44849, 0.74", "22.2003, 9.43788, 4.03749, 0.74", "22.661, 10.416, 3.66881, 0.44", "23.0275, 11.2478, 3.35389, 0.44", "23.5389, 12.4847, 2.88203, 0.66", "23.7542, 13.077, 2.63853, 0.88", "24.0455, 13.9512, 2.30097, 0.88", "24.2958, 14.7768, 2.01526, 1.03", "24.6642, 15.9768, 1.6367, 0.96", "24.9379, 16.8339, 1.38374, 0.52", "25.1795, 17.5249, 1.19066, 0.52", "25.4742, 18.4479, 0.932497, 0.88", "25.7145, 19.2018, 0.725045, 0.66", "25.9862, 20.0495, 0.500311, 0.88", "26.2268, 20.809, 0.30385, 0.88", "26.568, 21.9383, 0.0223304, 0.29", "26.8221, 22.8505, -0.212696, 0.29", "26.9906, 23.4744, -0.384887, 0.29", "27.2757, 24.5412, -0.673156, 0.44", "27.4588, 25.1853, -0.827883, 0.74", "27.7075, 25.9621, -1.00166, 0.88", "27.8752, 26.4345, -1.09683, 1.11", "28.0186, 26.8063, -1.17161, 1.11", "28.3135, 27.6408, -1.37068, 0.29", "28.6244, 28.4431, -1.59725, 0.29", "28.9578, 29.1879, -1.82207, 0.29", "32.0173, 38.2602, -2.66008, 0.29", "36.2671, 46.8198, -3.68099, 0.29", "39.7359, 55.5044, -5.89801, 0.29", "42.479, 64.2323, -8.84218, 0.29" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "6.95552, 38.3192, 1.13455, 0.59", "9.5476, 53.0936, 1.13455, 0.59", "12.1397, 67.8679, 1.13455, 0.59" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-75.3407, -50.6071, 3.96705, 0.44", "-78.1294, -51.4633, 4.79964, 0.44", "-79.54, -51.9988, 5.23157, 0.29", "-81.022, -52.6456, 5.65783, 0.29", "-81.8893, -53.047, 5.8962, 0.29", "-83.7276, -53.8947, 6.35979, 0.37", "-84.5675, -54.2573, 6.57098, 0.37", "-85.8363, -54.8038, 6.78615, 0.29", "-87.054, -55.4079, 7.03814, 0.29", "-87.9867, -55.9382, 7.26287, 0.29", "-88.6343, -56.3285, 7.42324, 0.29", "-89.643, -56.9194, 7.66237, 0.29", "-90.6354, -57.4247, 7.85893, 0.44", "-92.0032, -58.0382, 8.10363, 0.44", "-92.7327, -58.377, 8.27077, 0.44", "-93.8052, -58.932, 8.59009, 0.66", "-94.8875, -59.5988, 9.01748, 0.66", "-95.4532, -60.0397, 9.32937, 0.52", "-96.4547, -61.0858, 10.1914, 0.44", "-96.8854, -61.8109, 10.8603, 0.66", "-97.1636, -62.5622, 11.5986, 0.66", "-97.3909, -63.4285, 12.4689, 0.52", "-97.6844, -64.5734, 13.6378, 0.52", "-97.9049, -65.6221, 14.699, 0.44", "-98.0635, -66.5436, 15.6282, 0.37", "-98.3726, -67.9784, 17.0565, 0.37", "-98.6921, -69.1029, 18.1927, 0.29", "-99.1563, -70.2203, 19.3871, 0.29", "-109.222, -79.0897, 22.7327, 0.29" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-75.3407, -50.6071, 3.96705, 1.11", "-76.085, -50.896, 4.04904, 1.11", "-76.6622, -51.1753, 4.11495, 1.11", "-77.8335, -51.7811, 4.2648, 0.88", "-78.726, -52.2177, 4.37061, 0.88", "-80.0826, -52.8288, 4.51271, 0.88", "-81.4955, -53.4098, 4.63177, 0.88", "-82.2692, -53.724, 4.69371, 0.88", "-82.9853, -54.0131, 4.73082, 0.81", "-83.7863, -54.331, 4.74839, 0.81", "-84.3644, -54.5388, 4.75046, 0.81", "-85.3917, -54.8715, 4.74528, 0.96", "-85.9276, -55.0632, 4.74322, 0.96", "-86.4727, -55.3195, 4.74403, 0.96", "-86.9861, -55.6508, 4.75, 0.96", "-87.6537, -56.1697, 4.77132, 0.96", "-87.8752, -56.3525, 4.7757, 0.96", "-88.5493, -56.9041, 4.76677, 0.88", "-89.3903, -57.5228, 4.70994, 0.88", "-89.9911, -57.9511, 4.65666, 1.11", "-90.597, -58.3855, 4.60054, 1.11", "-91.2947, -58.9095, 4.5272, 0.96", "-91.8883, -59.3854, 4.49245, 0.96", "-92.7089, -60.0931, 4.49011, 0.88", "-93.6489, -60.9829, 4.49979, 0.88", "-94.3677, -61.7107, 4.48171, 0.96", "-94.9376, -62.3091, 4.44274, 0.96", "-95.7452, -63.1434, 4.35375, 0.88", "-96.1248, -63.5237, 4.28586, 0.74", "-96.9708, -64.3355, 4.08326, 0.96", "-97.7176, -64.9931, 3.87657, 1.11", "-98.3275, -65.5018, 3.71122, 1.25", "-98.8602, -65.9403, 3.58364, 1.25", "-99.7226, -66.6567, 3.40279, 1.03", "-100.899, -67.6622, 3.24169, 0.88", "-101.761, -68.4443, 3.18697, 0.88", "-102.633, -69.2803, 3.1641, 0.88", "-103.36, -69.987, 3.146, 0.88", "-104.063, -70.6427, 3.12145, 1.33", "-104.616, -71.11, 3.09561, 1.33", "-105.275, -71.632, 3.05042, 1.18", "-105.739, -71.9804, 3.00847, 0.96", "-106.574, -72.5634, 2.92867, 0.96", "-107.347, -73.0416, 2.85193, 0.96", "-108.393, -73.5942, 2.75877, 0.88", "-109.307, -73.9669, 2.69153, 0.81", "-109.827, -74.1176, 2.66699, 0.81", "-110.436, -74.2647, 2.64895, 0.74", "-110.888, -74.3866, 2.64782, 0.74", "-111.466, -74.5901, 2.66663, 0.74", "-112.294, -74.9887, 2.72778, 0.74", "-112.755, -75.3087, 2.78325, 1.11", "-113.455, -75.9988, 2.90551, 1.11", "-114.308, -77.0392, 3.08268, 0.88", "-114.86, -77.8153, 3.21576, 0.88", "-115.281, -78.4687, 3.3269, 0.88", "-115.859, -79.382, 3.47687, 0.81", "-116.65, -80.5728, 3.62687, 0.81", "-117.054, -81.1365, 3.67542, 1.18", "-117.495, -81.7471, 3.70031, 1.33", "-117.971, -82.3707, 3.69962, 1.33", "-118.751, -83.3161, 3.66153, 0.88", "-119.521, -84.1894, 3.58034, 0.81", "-120.328, -85.043, 3.47437, 0.81", "-121.285, -86.0166, 3.32156, 0.81", "-122.006, -86.7325, 3.17622, 0.81", "-122.685, -87.392, 3.0275, 1.11", "-123.095, -87.7893, 2.93048, 1.25", "-123.587, -88.2624, 2.81459, 2.14", "-124.058, -88.7467, 2.69331, 2.5", "-124.703, -89.4015, 2.52455, 1.92", "-125.624, -90.4769, 2.27037, 1.11", "-126.015, -90.9971, 2.15978, 0.96", "-126.548, -91.7714, 2.015, 1.4", "-127.224, -92.8213, 1.80397, 1.69" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-8.06438, -93.0249, -3.97347, 0.37", "-7.64336, -95.3318, -2.745, 0.37", "-7.50466, -95.9287, -2.44266, 0.52", "-7.31669, -96.6613, -2.09736, 0.66", "-7.09913, -97.4965, -1.7237, 0.37", "-6.9314, -98.1141, -1.45371, 0.44", "-6.73014, -98.8333, -1.1488, 0.44", "-6.44897, -99.6944, -0.86134, 0.29", "-6.15932, -100.502, -0.577445, 0.29", "-5.86484, -101.181, -0.31779, 0.59", "-5.55217, -101.765, -0.0846124, 0.59", "-5.15565, -102.376, 0.170717, 0.37", "-4.71375, -102.953, 0.418393, 0.66", "-4.27224, -103.44, 0.64043, 0.52", "-3.58402, -104.093, 0.949248, 0.37", "-3.04747, -104.552, 1.16565, 0.37", "-2.22932, -105.23, 1.4668, 0.37", "-1.42425, -105.882, 1.7389, 1.03", "-0.83306, -106.361, 1.9216, 1.18", "-0.26905, -106.821, 2.0761, 0.81", "0.180104, -107.192, 2.1855, 0.52", "1.02081, -107.893, 2.38921, 0.52", "1.81906, -108.584, 2.58013, 0.59", "2.52239, -109.236, 2.72172, 0.59", "3.09868, -109.824, 2.82005, 0.81", "3.56846, -110.336, 2.8917, 0.81", "4.08637, -110.929, 2.96009, 0.66", "4.46135, -111.382, 3.0005, 0.29", "5.32069, -112.485, 3.07793, 0.52", "6.05316, -113.446, 3.13805, 1.03", "6.31661, -113.798, 3.15468, 1.47", "6.8001, -114.413, 3.18313, 1.62", "7.45387, -115.158, 3.2233, 1.03", "8.0857, -115.802, 3.28224, 0.29", "8.69598, -116.361, 3.3619, 0.29", "9.4126, -116.963, 3.45672, 0.37", "10.1592, -117.581, 3.55615, 0.66", "10.543, -117.897, 3.61223, 0.81", "11.1471, -118.38, 3.71666, 0.96", "11.6009, -118.739, 3.80631, 0.44", "11.9586, -119.018, 3.88858, 0.29", "12.6448, -119.548, 4.07422, 0.29", "13.1583, -119.991, 4.22265, 0.59", "13.6454, -120.468, 4.37247, 0.74", "14.0316, -120.892, 4.49665, 0.74", "14.5451, -121.524, 4.6651, 0.74", "14.9543, -122.077, 4.79519, 0.44", "15.4957, -122.871, 4.96234, 0.29", "15.8154, -123.369, 5.05459, 0.66", "16.2151, -124.004, 5.15941, 0.88", "16.5897, -124.591, 5.2522, 0.96", "17.1278, -125.412, 5.39326, 0.66", "17.6814, -126.254, 5.54481, 0.37", "18.3375, -127.203, 5.73152, 0.74", "18.7035, -127.716, 5.83757, 0.81", "19.1247, -128.316, 5.96424, 0.37", "19.6841, -129.155, 6.13837, 0.37", "20.162, -129.908, 6.29024, 0.37", "20.5579, -130.553, 6.41481, 0.37", "20.8754, -131.094, 6.51172, 0.52", "21.2567, -131.733, 6.61868, 0.52", "21.6544, -132.384, 6.71778, 0.37", "22.0667, -133.069, 6.80502, 0.37", "22.5511, -133.85, 6.90707, 0.81", "22.8463, -134.279, 6.97011, 0.88", "23.3542, -134.935, 7.07884, 0.59", "23.7966, -135.458, 7.17572, 0.37", "24.2513, -135.954, 7.27637, 0.37", "24.8336, -136.551, 7.41098, 0.44", "26.0305, -137.694, 7.69758, 0.44", "26.8173, -138.361, 7.89019, 1.18", "27.411, -138.827, 8.03994, 1.47", "28.0723, -139.315, 8.19748, 1.47", "29.0511, -140.027, 8.41523, 1.18", "29.8159, -140.615, 8.56487, 0.29", "30.2952, -141.016, 8.64283, 0.29", "30.6643, -141.342, 8.68436, 0.29", "31.3374, -141.983, 8.70584, 0.59", "31.9992, -142.678, 8.67768, 0.66", "32.37, -143.115, 8.62974, 0.74", "32.753, -143.623, 8.56176, 0.59", "33.174, -144.249, 8.47514, 0.44", "33.678, -145.048, 8.35714, 0.29", "33.9721, -145.588, 8.27797, 0.37", "34.4021, -146.493, 8.14215, 0.52", "34.6836, -147.185, 8.05797, 1.03", "34.9557, -147.909, 7.96624, 1.55", "35.1889, -148.536, 7.89546, 1.55", "35.767, -150.118, 7.71963, 0.44", "36.1664, -151.15, 7.5986, 0.37", "37.1975, -153.457, 7.2954, 0.29", "37.4614, -153.948, 7.22896, 0.29", "38.2955, -155.213, 7.069, 1.47", "38.6392, -155.625, 7.0194, 1.92", "39.3482, -156.287, 6.93112, 2.06", "40.4514, -157.107, 6.76662, 0.81", "41.9292, -157.98, 6.48854, 0.29", "42.8732, -158.496, 6.28672, 0.29", "44.1081, -159.148, 6.03195, 0.44", "44.7076, -159.473, 5.93062, 0.52", "46.1068, -160.273, 5.76385, 0.29", "47.1109, -160.892, 5.72013, 0.88", "47.6728, -161.271, 5.76196, 0.74", "48.9217, -162.245, 6.07085, 0.29", "49.7489, -162.956, 6.42603, 0.29", "50.5242, -163.669, 6.86221, 0.59", "51.0076, -164.141, 7.19121, 0.66", "51.908, -165.058, 7.85164, 0.29", "52.8068, -166.022, 8.50752, 0.29", "53.4038, -166.717, 8.89948, 0.29", "53.957, -167.439, 9.22771, 1.03", "54.3663, -168.006, 9.43608, 1.47", "54.7468, -168.555, 9.59058, 1.18", "55.4625, -169.628, 9.81022, 0.22", "56.1115, -170.62, 9.97635, 0.22", "56.9509, -171.9, 10.1556, 0.22", "57.3109, -172.428, 10.2303, 0.52", "57.9354, -173.309, 10.3561, 0.29", "58.5315, -174.124, 10.4673, 0.29", "58.9155, -174.615, 10.5269, 0.88", "59.4357, -175.275, 10.6293, 0.88", "60.1947, -176.272, 10.8002, 0.29", "60.5335, -176.733, 10.8958, 0.29", "61.1065, -177.525, 11.1202, 0.96", "61.491, -178.047, 11.3267, 1.4", "61.8848, -178.574, 11.5826, 1.77", "62.1257, -178.883, 11.7608, 1.77", "63.065, -180.024, 12.4807, 0.22", "64.019, -181.116, 13.2512, 0.22", "64.7758, -181.904, 13.8514, 0.88", "65.1227, -182.244, 14.1114, 1.33", "65.4888, -182.582, 14.3558, 1.33", "66.3376, -183.33, 14.8852, 0.22", "67.4112, -184.231, 15.4918, 0.22", "68.578, -185.206, 16.0696, 0.22", "69.6599, -186.136, 16.5345, 0.22", "70.2973, -186.704, 16.7827, 0.74", "70.6446, -187.031, 16.9045, 0.88", "71.057, -187.448, 17.0264, 0.52", "71.7944, -188.292, 17.1903, 0.22", "72.1662, -188.774, 17.2589, 0.88", "72.5688, -189.344, 17.3382, 1.33", "72.8825, -189.816, 17.4087, 1.33", "73.5993, -190.973, 17.5915, 0.29", "74.411, -192.388, 17.8388, 0.29", "74.7905, -193.091, 17.9818, 0.44", "75.1101, -193.708, 18.1269, 0.59", "75.3932, -194.273, 18.2765, 0.59", "75.8349, -195.175, 18.5414, 0.22", "76.275, -196.101, 18.8265, 0.22", "76.549, -196.666, 19.0032, 0.74", "76.7174, -197.003, 19.1036, 0.88", "76.9506, -197.435, 19.2205, 0.88", "77.4208, -198.278, 19.4494, 0.22", "78.269, -199.709, 19.8283, 0.22", "78.6577, -200.337, 19.9778, 0.52", "78.9157, -200.747, 20.0625, 0.66", "79.3252, -201.385, 20.1823, 0.44", "86.0427, -207.94, 20.5869, 0.44" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-8.06438, -93.0249, -3.97347, 2.28", "-8.43702, -93.7535, -3.88554, 2.28", "-8.79283, -94.3757, -3.78049, 1.62", "-9.24744, -95.1144, -3.6544, 1.33", "-9.70011, -95.8085, -3.54866, 0.88", "-9.92044, -96.1281, -3.50664, 0.88", "-10.2681, -96.5971, -3.4544, 1.03", "-10.957, -97.4338, -3.38298, 1.03", "-11.5476, -98.0717, -3.34975, 0.96", "-12.0124, -98.532, -3.35155, 0.88", "-12.4056, -98.9248, -3.37965, 1.11", "-12.8292, -99.4003, -3.44692, 1.33", "-13.1547, -99.8551, -3.53514, 1.55", "-13.4069, -100.321, -3.64424, 1.25", "-13.5815, -100.793, -3.75983, 0.96", "-13.7192, -101.444, -3.91169, 0.88", "-13.8047, -102.254, -4.09723, 0.88", "-13.8405, -103.121, -4.28531, 0.88", "-13.8464, -103.884, -4.44137, 1.03", "-13.8349, -104.597, -4.57638, 1.03", "-13.8149, -105.437, -4.71717, 1.03", "-13.793, -106.202, -4.82755, 1.25", "-13.7591, -107.085, -4.92626, 1.55", "-13.7202, -107.76, -4.97751, 1.55", "-13.6408, -108.691, -5.01865, 1.33", "-13.5615, -109.452, -5.03523, 1.33", "-13.4935, -110.131, -5.0418, 1.11", "-13.4219, -110.857, -5.01704, 1.11", "-13.3625, -111.655, -4.9666, 0.96", "-13.3411, -112.248, -4.91738, 0.96", "-13.3467, -113.106, -4.82064, 0.88", "-13.391, -114.236, -4.67096, 0.88", "-13.4567, -115.216, -4.5207, 1.03", "-13.5355, -116.088, -4.37132, 1.25", "-13.6284, -116.917, -4.2201, 1.33", "-13.7127, -117.569, -4.09624, 1.62", "-13.7953, -118.239, -3.95964, 2.5", "-13.8275, -118.603, -3.8845, 2.8", "-13.8545, -119.054, -3.81076, 3.02", "-13.8621, -119.477, -3.73577, 3.02", "-13.8639, -119.76, -3.68642, 3.32" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "0.341005, -54.8084, -8.25276, 0.81", "-0.0783198, -56.3478, -8.35513, 0.81", "-0.453836, -57.3762, -8.42499, 0.66", "-0.950132, -58.5191, -8.52441, 0.66", "-1.51433, -59.7124, -8.64879, 0.52", "-1.74594, -60.1887, -8.70272, 0.52", "-2.35679, -61.4432, -8.85015, 0.74", "-2.99647, -62.7176, -8.94559, 0.74", "-3.54843, -63.7697, -9.04839, 0.88", "-4.16916, -64.908, -9.20331, 0.59", "-4.56296, -65.6506, -9.33333, 1.03", "-4.92386, -66.3816, -9.45618, 1.25", "-5.28881, -67.246, -9.57273, 1.03", "-5.68656, -68.3688, -9.69019, 0.66", "-5.98817, -69.2864, -9.77877, 0.66", "-6.29086, -70.2341, -9.88247, 0.81", "-6.61429, -71.3459, -10.0238, 0.81", "-6.83332, -72.2806, -10.1609, 0.66", "-6.99289, -73.2765, -10.3182, 0.52", "-7.04724, -73.871, -10.4314, 0.52", "-7.09647, -74.6009, -10.5837, 0.52", "-7.15897, -75.6415, -10.8268, 0.66", "-7.22585, -76.5855, -11.0642, 0.66", "-7.31156, -77.5816, -11.334, 0.59", "-7.43347, -78.6714, -11.6344, 1.18", "-7.53726, -79.6208, -11.8839, 1.55", "-7.66287, -80.5267, -12.116, 1.99", "-7.8962, -81.6157, -12.4136, 2.73", "-8.13008, -82.4153, -12.6472, 2.87", "-8.38712, -83.1573, -12.8879, 3.02" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "0.341005, -54.8084, -8.25276, 0.52", "0.961872, -56.2392, -9.5731, 0.52", "1.09896, -56.5764, -9.84998, 0.52", "1.5814, -57.6903, -10.7672, 0.52", "1.98173, -58.5159, -11.4573, 0.66", "2.25238, -59.0208, -11.864, 0.66", "2.5065, -59.4468, -12.2011, 0.44", "2.81113, -60.0353, -12.6587, 0.88", "3.08447, -60.588, -13.0483, 1.33", "3.38929, -61.1833, -13.429, 1.47", "3.73382, -61.873, -13.9453, 1.03", "4.1287, -62.9463, -14.8661, 0.44", "4.17601, -63.6016, -15.5426, 0.44", "4.01778, -64.353, -16.5245, 0.37", "3.81166, -64.8981, -17.3662, 0.37", "3.53954, -65.5983, -18.6306, 0.37", "3.38795, -66.0576, -19.5904, 0.74", "3.32654, -66.3704, -20.3161, 0.96", "3.3269, -66.8055, -21.314, 0.96", "3.41267, -67.5958, -23.0588, 0.44", "3.53509, -68.1399, -24.1647, 1.33", "3.75473, -68.8877, -25.5512, 1.55", "3.96238, -69.5763, -26.7577, 1.33", "4.25276, -70.5162, -28.2666, 0.81", "4.38703, -70.9192, -28.8478, 1.25", "4.57746, -71.4187, -29.479, 0.88", "4.77891, -71.98, -30.0842, 0.37", "4.94735, -72.4749, -30.5241, 0.81", "5.11475, -73.0054, -30.9372, 1.03", "5.22679, -73.3247, -31.1573, 1.03", "5.65802, -74.4316, -31.8854, 0.29", "5.89341, -74.9939, -32.2315, 0.29", "6.23618, -75.7224, -32.6464, 1.84", "6.57318, -76.336, -32.9984, 2.14", "7.52838, -77.8505, -33.9215, 0.29", "8.03047, -78.5448, -34.3628, 0.81", "8.54772, -79.1686, -34.7719, 0.81", "9.09283, -79.7498, -35.1833, 0.52", "9.843, -80.4665, -35.7581, 1.25", "10.3351, -80.902, -36.1469, 1.4", "11.6014, -81.9791, -37.1474, 0.22", "12.3838, -82.6346, -37.7342, 0.22", "13.2707, -83.3842, -38.3643, 1.4", "13.8253, -83.8827, -38.7375, 2.21", "14.0791, -84.1299, -38.8923, 2.21", "15.7238, -85.8756, -39.7972, 0.22", "16.1643, -86.3678, -40.028, 0.74", "16.5532, -86.8242, -40.2387, 1.03", "17.1794, -87.6153, -40.5895, 0.59", "18.6386, -89.5688, -41.4245, 0.22", "20.4849, -92.1086, -42.5257, 0.22", "21.127, -93.0117, -42.9454, 0.81", "21.6029, -93.6794, -43.2697, 0.96", "23.1453, -95.8552, -44.3705, 0.22", "24.1086, -97.1988, -45.1055, 0.22", "24.6385, -97.9412, -45.5536, 0.88", "25.1592, -98.6615, -46.0376, 0.88", "26.6252, -100.674, -47.4489, 0.15", "27.7365, -102.144, -48.4521, 0.15", "28.3882, -102.974, -49.0303, 0.15", "28.9805, -103.731, -49.5462, 1.62", "29.3494, -104.219, -49.8594, 1.92", "29.6427, -104.611, -50.0847, 1.92", "31.5439, -107.218, -51.4563, 0.22", "31.952, -107.775, -51.724, 0.66", "32.2621, -108.208, -51.9197, 0.88", "32.5804, -108.65, -52.1222, 0.88", "33.5932, -110.093, -52.8957, 0.15", "34.3314, -111.263, -53.6527, 0.15", "34.7151, -111.976, -54.1805, 0.81", "34.941, -112.486, -54.5691, 1.03", "35.1049, -112.949, -54.9283, 1.03", "35.5066, -114.507, -56.1721, 0.22", "35.7684, -116.201, -57.5746, 0.22", "35.8467, -116.891, -58.1848, 0.22", "35.9432, -117.89, -59.1189, 1.03", "35.9955, -118.408, -59.6091, 1.62", "36.0483, -118.932, -60.1322, 1.62", "36.154, -119.816, -61.0724, 1.03", "36.4087, -121.626, -63.095, 0.22", "36.5218, -122.473, -64.1446, 0.44", "36.5986, -122.939, -64.7533, 0.44", "36.7822, -123.965, -66.1067, 0.66", "36.8866, -124.482, -66.7701, 0.96", "37.0222, -125.078, -67.5214, 0.37", "37.5063, -126.99, -69.8377, 0.66", "37.6223, -127.383, -70.3008, 0.66", "38.0768, -128.808, -71.9976, 0.22", "38.3512, -129.56, -72.8566, 0.22", "38.6223, -130.23, -73.6053, 0.81", "38.913, -130.831, -74.2585, 0.96", "39.1393, -131.221, -74.5794, 0.96" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "25.6591, 172.712, -52.1418, 0.37", "28.4657, 171.563, -50.1781, 0.37", "29.0383, 171.329, -49.7774, 0.37" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "25.6591, 172.712, -52.1418, 0.22", "26.8183, 174.952, -53.0991, 0.22", "27.3834, 176.178, -53.6406, 0.22", "27.8044, 177.152, -54.0785, 0.74", "27.9517, 177.515, -54.2387, 0.74", "28.6345, 179.195, -54.9808, 0.15", "29.0762, 180.282, -55.461, 0.15", "29.3367, 181.07, -55.8841, 0.66", "29.4798, 181.563, -56.1076, 0.88", "29.6535, 182.127, -56.3283, 0.29" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-9.12181, 41.4178, 3.82828, 0.66", "-9.38144, 43.4324, 3.74899, 0.66", "-9.43645, 44.1882, 3.77173, 0.96", "-9.50322, 45.0729, 3.8149, 0.96", "-9.59307, 46.2796, 3.8908, 0.59", "-9.66479, 47.3471, 3.97056, 0.59", "-9.73452, 48.6077, 4.07921, 0.59", "-9.81946, 50.431, 4.30693, 0.59", "-9.83657, 51.2895, 4.42837, 0.52", "-9.83921, 52.5698, 4.62582, 0.88", "-9.83898, 53.4985, 4.76242, 1.11", "-9.85375, 54.6095, 4.90343, 1.11", "-9.88754, 55.8896, 5.05969, 0.74", "-9.95096, 57.233, 5.21265, 0.74", "-10.0503, 58.9524, 5.40642, 0.74", "-10.1375, 60.1405, 5.52437, 0.52", "-10.2478, 61.4144, 5.623, 0.52", "-10.3332, 62.3339, 5.67837, 0.96", "-10.4514, 63.695, 5.7317, 1.11", "-10.6186, 65.7176, 5.77648, 1.11", "-10.7202, 67.0485, 5.79019, 1.11", "-10.8061, 68.373, 5.82126, 0.81", "-10.8662, 69.5352, 5.86399, 0.74", "-10.9084, 70.7436, 5.9299, 0.74", "-10.9269, 71.8731, 6.01994, 0.44", "-10.9432, 72.8257, 6.11737, 0.44", "-10.9926, 74.3887, 6.31581, 0.74", "-11.0351, 75.465, 6.47374, 0.74", "-11.0774, 76.6077, 6.65364, 0.37", "-11.0925, 77.7913, 6.86056, 0.74", "-11.0765, 78.8286, 7.01077, 0.96", "-11.0291, 80.0232, 7.14309, 0.96", "-10.9427, 81.3451, 7.22905, 0.81", "-10.8358, 82.59, 7.27868, 0.52", "-10.6961, 83.8937, 7.30819, 0.52", "-10.4614, 85.6052, 7.33897, 1.03", "-10.3155, 86.5148, 7.35436, 1.55", "-10.1731, 87.3376, 7.36423, 1.69", "-10.0794, 87.8735, 7.37147, 1.69", "-9.85078, 89.1959, 7.4133, 0.37", "-9.66973, 90.297, 7.48904, 0.44", "-9.56901, 90.8647, 7.57022, 0.44", "-9.44188, 91.5152, 7.68971, 0.44", "-9.22043, 92.5875, 7.91971, 0.29", "-9.11256, 93.0423, 8.02625, 0.59", "-8.8979, 93.8116, 8.22347, 0.44", "-8.54817, 95.0203, 8.54389, 0.29", "-8.24283, 96.1415, 8.83749, 1.18", "-8.09005, 96.7452, 8.99342, 1.18", "-7.86658, 97.6524, 9.22272, 0.52", "-7.6537, 98.5227, 9.4419, 0.29", "-7.41539, 99.5125, 9.72158, 0.29", "-7.23503, 100.404, 10.0141, 0.29", "-7.14622, 100.985, 10.223, 0.29", "-7.02199, 102.14, 10.6613, 0.81", "-6.94086, 103.151, 11.0629, 0.44", "-6.84373, 104.119, 11.4485, 0.22", "-6.69898, 105.094, 11.8435, 0.44", "-6.63699, 105.467, 12.0017, 0.44", "-6.51133, 106.267, 12.3423, 0.29", "-6.41565, 106.99, 12.6482, 0.29", "-6.27248, 107.98, 13.047, 0.29", "-6.16678, 108.614, 13.2818, 0.29", "-6.02098, 109.432, 13.5773, 0.66", "-5.90946, 110.097, 13.8218, 0.66", "-5.7649, 110.94, 14.1081, 0.74", "-5.64658, 111.859, 14.4081, 0.37", "-5.57723, 112.58, 14.6366, 0.37", "-5.47308, 113.592, 14.9245, 0.52", "-5.37869, 114.36, 15.1156, 0.59", "-5.22594, 115.529, 15.392, 0.44", "-5.11157, 116.354, 15.5807, 0.29", "-5.02572, 116.932, 15.7185, 0.29", "-4.84453, 118.207, 16.0368, 1.11", "-4.74643, 118.936, 16.2262, 1.25", "-4.68003, 119.456, 16.3664, 1.25", "-4.5241, 120.547, 16.6685, 0.66", "-4.401, 121.199, 16.8395, 0.29", "-4.17354, 122.212, 17.1072, 0.29", "-3.94246, 123.116, 17.3487, 0.29", "-3.7084, 123.933, 17.5707, 0.29", "-3.32685, 125.154, 17.9034, 0.96", "-3.15597, 125.685, 18.0398, 1.47", "-3.01865, 126.14, 18.1443, 1.47", "-2.94495, 126.411, 18.1982, 1.47", "-2.75879, 127.202, 18.3437, 0.74", "-2.56849, 128.111, 18.5084, 0.29", "-2.40241, 129.044, 18.6727, 0.52", "-2.25027, 129.905, 18.8299, 0.74", "-2.03528, 130.997, 19.0484, 0.44", "-1.8443, 131.863, 19.2366, 0.29", "-1.69466, 132.47, 19.3781, 0.29", "-1.45849, 133.3, 19.5907, 0.66", "-1.27099, 133.892, 19.7499, 0.74", "-0.99558, 134.725, 19.9774, 0.74", "-0.696547, 135.659, 20.2357, 0.29", "-0.44727, 136.495, 20.4645, 0.29", "0.0147513, 138.179, 20.9166, 0.29", "0.272037, 139.324, 21.2641, 0.52", "0.397459, 140.014, 21.4903, 1.18", "0.480081, 140.612, 21.6955, 1.4", "0.573156, 141.585, 22.0378, 1.4", "0.616819, 142.349, 22.3083, 0.66", "0.694796, 144.14, 22.9377, 0.29", "0.76727, 145.27, 23.318, 0.29", "0.846891, 145.955, 23.5206, 0.37", "0.999362, 146.881, 23.7573, 0.37", "1.19949, 147.84, 23.9752, 0.37", "1.63213, 149.542, 24.3164, 0.37", "2.20071, 151.396, 24.6243, 0.37", "2.80572, 153.193, 24.9232, 1.33", "3.13193, 154.055, 25.0625, 1.99", "3.41004, 154.739, 25.1692, 1.99", "3.53004, 155.029, 25.2117, 1.99", "3.75357, 155.564, 25.2913, 1.99", "4.21565, 156.676, 25.4783, 0.59", "4.74215, 157.963, 25.7426, 0.29", "5.09944, 158.856, 25.977, 0.59", "5.3716, 159.543, 26.1803, 0.59", "5.93204, 160.978, 26.648, 0.37", "6.22481, 161.773, 26.9249, 0.37", "6.65943, 163.059, 27.3978, 0.37", "7.12634, 164.606, 27.9878, 0.74", "7.29084, 165.244, 28.2192, 0.74", "7.42506, 165.907, 28.4506, 0.88", "7.56415, 166.872, 28.7687, 0.44", "7.73926, 168.552, 29.2508, 0.29", "7.80805, 169.461, 29.4435, 0.52", "7.914, 171.166, 29.6795, 1.25", "7.94978, 171.897, 29.7537, 1.62", "7.97734, 172.379, 29.7788, 1.62", "8.0441, 173.377, 29.7866, 0.96", "8.17626, 174.873, 29.7375, 0.29", "8.2804, 175.733, 29.7007, 0.29", "8.43275, 176.777, 29.6745, 0.29", "8.58503, 177.866, 29.6799, 0.74", "8.63989, 178.358, 29.7012, 0.96", "8.68797, 178.926, 29.7492, 0.96", "8.78724, 180.361, 29.901, 0.52", "8.92444, 182.343, 30.0996, 0.37", "9.01308, 183.703, 30.2381, 0.29", "9.08361, 184.987, 30.3558, 0.66", "9.13084, 185.851, 30.4164, 0.66", "9.21478, 187.476, 30.4943, 0.29", "9.25797, 188.283, 30.5268, 0.29", "9.3822, 190.411, 30.6106, 0.29", "9.54331, 192.725, 30.7219, 1.99", "9.57868, 193.249, 30.755, 2.28", "9.61607, 193.989, 30.8152, 1.55", "9.6365, 194.795, 30.9149, 0.88", "9.62591, 196.104, 31.1394, 0.22", "9.60082, 196.713, 31.2662, 0.22", "9.52944, 197.823, 31.5311, 0.66", "9.48392, 198.524, 31.6985, 0.66", "9.41986, 199.712, 31.9739, 0.29", "9.3394, 201.618, 32.3811, 0.22", "9.32555, 202.584, 32.5852, 0.22", "9.34115, 203.607, 32.7956, 0.52", "9.42775, 204.887, 33.0578, 0.44", "9.55828, 206.001, 33.2854, 0.44", "9.76715, 207.287, 33.5389, 0.44", "10.1849, 209.279, 33.9426, 0.22", "10.5347, 210.76, 34.2509, 0.66", "10.8511, 211.958, 34.5087, 1.77", "11.0347, 212.589, 34.65, 1.77", "11.2149, 213.155, 34.7829, 1.77", "11.5142, 213.981, 34.9942, 0.88", "11.8613, 214.892, 35.2754, 0.29", "12.0961, 215.507, 35.4919, 0.52", "12.6742, 217.094, 36.081, 0.22", "13.0073, 217.999, 36.4132, 0.52", "13.3912, 219.02, 36.7762, 0.52", "14.2328, 221.271, 37.5415, 0.22", "14.8803, 222.995, 38.0986, 0.37", "15.3009, 224.131, 38.4578, 0.37", "15.7587, 225.399, 38.8416, 1.92", "15.9633, 225.983, 39.0051, 2.21", "16.1674, 226.593, 39.1466, 2.21", "16.4285, 227.323, 39.2276, 1.18" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-9.12181, 41.4178, 3.82828, 0.66", "-8.64482, 43.395, 4.58686, 0.66", "-8.34852, 44.6001, 5.04002, 0.81", "-8.14276, 45.494, 5.39846, 0.37", "-7.91731, 46.5711, 5.82876, 0.29", "-7.5273, 48.3778, 6.54089, 0.29", "-7.27288, 49.4343, 6.96672, 0.29", "-6.96204, 50.4504, 7.37061, 0.29", "-6.4722, 51.7833, 7.95462, 0.29", "-6.03134, 52.8743, 8.4547, 0.29", "-5.59165, 53.9609, 8.95231, 0.74", "-5.28811, 54.6896, 9.29912, 0.74", "-4.70515, 55.9199, 9.9157, 0.29", "-4.36095, 56.6249, 10.2822, 0.37", "-3.56794, 58.2677, 11.1162, 0.37", "-3.1543, 59.1976, 11.582, 0.37", "-2.73906, 60.2995, 12.1037, 0.37", "-2.57551, 60.8089, 12.3329, 0.37", "-2.32427, 61.7397, 12.7388, 0.22", "-2.10408, 62.6446, 13.124, 0.22", "-1.90268, 63.3583, 13.4297, 0.66", "-1.67096, 64.2232, 13.7501, 0.96", "1.09698, 74.6639, 16.6956, 0.96", "5.47733, 83.4669, 22.0494, 0.96", "8.32965, 92.3286, 28.2688, 0.96" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "28.0356, 10.8422, 6.57494, 0.66", "29.0171, 9.02707, 6.25707, 0.66", "29.2943, 8.4538, 6.11977, 0.66", "29.7503, 7.56933, 5.93525, 0.88", "30.5741, 6.13837, 5.69255, 0.88", "31.1659, 5.22409, 5.57509, 0.88", "31.7357, 4.46381, 5.50343, 1.03", "32.4046, 3.64161, 5.43626, 1.03", "33.3702, 2.99327, 5.54987, 0.88", "34.1387, 2.82991, 5.74247, 0.88", "34.7998, 2.76486, 5.94277, 0.88", "35.8483, 2.62469, 6.28643, 0.81", "37.0582, 2.30169, 6.69362, 0.81", "37.8287, 1.94972, 6.91506, 0.81", "38.8084, 1.28139, 7.09001, 0.74", "39.8536, 0.421233, 7.20536, 0.88", "40.782, -0.436489, 7.24569, 0.88", "41.7778, -1.47147, 7.22318, 0.52", "42.2774, -2.00004, 7.16753, 0.52", "42.8891, -2.54555, 7.04158, 0.52", "43.6763, -3.08714, 6.84719, 0.52", "44.5789, -3.53215, 6.60746, 0.74", "45.497, -3.88315, 6.35216, 0.74", "46.6627, -4.24696, 6.02175, 0.74", "48.2036, -4.66592, 5.59924, 0.74", "49.2722, -4.92529, 5.30267, 0.74", "50.1184, -5.08865, 5.07911, 0.74", "51.0377, -5.17499, 4.8604, 0.74", "51.5763, -5.18699, 4.7602, 0.88", "53.0966, -5.10736, 4.52354, 0.88", "54.3925, -5.00011, 4.35283, 0.88", "55.9974, -4.88334, 4.15805, 0.66", "57.1718, -4.82507, 4.03975, 0.66", "60.1945, -4.71264, 3.80679, 0.59", "61.2431, -4.68507, 3.74349, 0.52", "62.83, -4.61188, 3.67855, 0.52", "63.7852, -4.51843, 3.66251, 0.52", "64.8224, -4.3209, 3.66312, 0.52", "66.0609, -4.00533, 3.68157, 0.52", "66.8885, -3.77633, 3.70716, 0.52", "68.241, -3.46288, 3.75557, 0.52", "69.7083, -3.12415, 3.81849, 0.52", "71.0848, -2.851, 3.88093, 0.52", "72.3678, -2.70257, 3.93651, 0.52", "73.8332, -2.71138, 3.99623, 0.52", "74.8435, -2.88427, 4.0422, 0.52", "75.7859, -3.16829, 4.13079, 0.52", "76.42, -3.38469, 4.22591, 0.52", "77.2203, -3.64343, 4.38322, 0.52", "78.8415, -4.08086, 4.80639, 0.29", "81.7384, -4.65397, 5.71906, 0.29", "84.3643, -5.00238, 6.64228, 0.29", "85.7031, -5.08109, 7.16825, 0.29", "86.664, -5.09403, 7.56877, 0.44", "87.681, -5.03147, 8.04011, 0.59", "88.3194, -4.91474, 8.41201, 0.59", "89.3542, -4.3702, 9.23858, 0.59", "89.898, -3.83347, 9.74572, 0.59", "100.752, -7.22316, 11.1853, 0.59" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "28.0356, 10.8422, 6.57494, 1.11", "29.7124, 10.5815, 6.29371, 1.11", "30.7525, 10.2994, 6.06538, 1.11", "31.9352, 10.057, 5.71872, 1.25", "32.8471, 9.96486, 5.44561, 1.47", "34.0836, 9.97716, 5.09749, 1.4", "35.1808, 10.0928, 4.81028, 1.4", "36.4117, 10.2957, 4.44884, 1.18", "38.0631, 10.8935, 3.99965, 1.18", "39.1806, 11.5584, 3.73162, 1.18", "40.129, 12.2222, 3.51237, 1.18", "40.6921, 12.6226, 3.38321, 0.88", "41.2604, 12.9608, 3.24289, 0.88", "42.1691, 13.288, 2.98034, 0.88", "43.5847, 13.437, 2.51375, 1.11", "44.669, 13.3954, 2.10885, 1.11", "45.771, 13.2743, 1.66813, 1.11", "47.0203, 13.0708, 1.15051, 1.25", "48.2983, 12.7997, 0.608019, 1.33", "48.891, 12.6475, 0.355121, 1.47", "49.8706, 12.4015, -0.0362245, 1.77" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-127.224, -92.8213, 1.80397, 0.59", "-127.118, -94.7353, 1.81084, 0.59", "-127.068, -95.5391, 1.84689, 0.59", "-127.007, -96.2397, 1.90178, 0.52", "-126.929, -97.0448, 1.98832, 0.52", "-126.867, -97.9145, 2.09245, 0.88", "-126.806, -98.8772, 2.21684, 1.03", "-126.781, -99.4485, 2.33357, 1.03", "-126.711, -100.452, 2.55847, 1.03", "-126.627, -101.313, 2.76582, 0.29", "-126.572, -101.927, 2.91684, 0.29", "-126.541, -102.433, 3.04267, 0.29", "-126.534, -103.393, 3.27043, 0.59", "-126.573, -104.174, 3.48703, 0.74", "-126.636, -104.729, 3.65925, 0.88", "-126.72, -105.264, 3.83479, 0.88", "-126.813, -105.759, 4.01079, 0.88", "-126.98, -106.417, 4.25457, 0.81", "-127.397, -107.835, 4.78064, 0.37", "-127.622, -108.6, 5.07183, 1.03", "-127.852, -109.355, 5.39338, 1.33", "-128.072, -110.042, 5.70672, 1.33", "-128.378, -110.917, 6.12125, 1.03", "-128.652, -111.65, 6.47158, 0.74", "-128.901, -112.29, 6.75254, 0.37", "-129.247, -113.124, 7.17037, 0.74", "-129.458, -113.602, 7.42317, 0.74", "-129.694, -114.194, 7.69255, 0.59", "-129.845, -114.65, 7.86841, 0.37", "-130.026, -115.327, 8.06285, 0.37", "-130.294, -116.461, 8.24764, 0.66", "-130.485, -117.28, 8.29007, 0.74", "-130.837, -118.678, 8.27015, 0.52", "-130.986, -119.266, 8.2349, 0.52", "-131.201, -119.966, 8.17082, 1.33", "-131.481, -120.841, 8.06707, 1.55", "-131.859, -121.988, 7.95168, 1.99", "-132.108, -122.667, 7.92207, 2.21", "-132.461, -123.504, 7.92992, 1.99", "-132.911, -124.512, 7.9416, 1.11", "-133.387, -125.669, 7.95163, 0.37", "-133.74, -126.656, 7.96638, 1.11", "-133.9, -127.157, 7.97231, 1.25", "-134.101, -127.804, 7.98076, 1.25", "-134.55, -129.233, 7.96302, 0.29", "-134.838, -130.146, 7.93174, 0.29", "-135.135, -130.983, 7.89446, 0.44", "-135.458, -131.852, 7.84697, 0.59", "-135.85, -132.876, 7.80022, 0.88", "-136.183, -133.724, 7.77394, 0.96", "-136.553, -134.538, 7.76124, 0.66", "-137.068, -135.499, 7.77801, 0.37", "-137.466, -136.183, 7.79856, 0.29", "-137.912, -136.89, 7.85146, 0.29", "-138.302, -137.504, 7.92704, 0.29", "-138.848, -138.326, 8.06157, 0.29", "-139.672, -139.452, 8.24271, 0.74", "-140.319, -140.225, 8.39547, 1.03", "-141.129, -141.116, 8.60251, 2.28", "-141.771, -141.759, 8.76896, 2.8", "-142.389, -142.366, 8.92778, 3.09", "-143.383, -143.382, 9.18513, 1.84", "-144.533, -144.546, 9.47172, 0.29", "-145.097, -145.147, 9.62339, 0.29", "-145.831, -146.009, 9.82833, 0.29", "-146.568, -146.956, 10.0599, 0.29", "-147.069, -147.741, 10.2659, 0.88", "-147.452, -148.447, 10.4532, 1.11", "-147.749, -149.06, 10.5949, 0.81", "-147.987, -149.589, 10.7204, 0.52", "-148.348, -150.479, 10.9383, 0.29", "-148.752, -151.532, 11.2082, 0.29", "-149.074, -152.433, 11.444, 0.29", "-149.255, -152.919, 11.5695, 0.29", "-149.599, -153.889, 11.8236, 0.81", "-149.889, -154.788, 12.0646, 1.11", "-150.096, -155.494, 12.2569, 0.88", "-150.384, -156.496, 12.5281, 0.29", "-150.73, -157.718, 12.8621, 0.29", "-151.067, -158.817, 13.1186, 0.29", "-151.196, -159.22, 13.201, 0.29", "-151.5, -160.187, 13.3752, 0.74", "-151.718, -160.882, 13.4835, 0.74", "-152.011, -161.865, 13.623, 0.44", "-152.337, -163.011, 13.7719, 0.29", "-152.505, -163.581, 13.8395, 0.29", "-152.73, -164.369, 13.9639, 0.29", "-152.961, -165.31, 14.1625, 0.29", "-153.077, -165.845, 14.3121, 0.74", "-153.181, -166.335, 14.4806, 0.74", "-153.371, -167.205, 14.8434, 0.44", "-153.606, -168.185, 15.2702, 0.29", "-153.827, -169.025, 15.6695, 0.74", "-153.99, -169.613, 15.9563, 1.11", "-154.146, -170.109, 16.193, 1.69", "-154.282, -170.527, 16.3854, 1.92", "-154.478, -171.135, 16.6478, 1.92", "-154.753, -172.061, 17.0031, 1.62", "-155.082, -173.188, 17.4102, 0.29", "-155.335, -174.095, 17.7189, 0.22", "-155.559, -174.846, 17.9615, 0.22", "-155.874, -175.865, 18.2668, 0.59", "-156.149, -176.715, 18.4996, 0.74", "-156.361, -177.308, 18.6532, 0.74", "-156.659, -178.069, 18.8554, 0.44", "-156.946, -178.714, 19.0259, 0.29", "-157.291, -179.351, 19.2141, 0.29", "-158.119, -180.614, 19.6373, 0.44", "-158.606, -181.262, 19.8494, 0.59", "-159.094, -181.865, 20.0379, 0.59", "-159.67, -182.559, 20.2251, 0.52", "-160.551, -183.605, 20.4644, 1.33", "-161.275, -184.457, 20.6225, 2.06", "-161.949, -185.287, 20.7427, 2.21", "-162.434, -185.957, 20.8152, 2.21", "-163.13, -187.06, 20.902, 0.81", "-163.544, -187.864, 20.9378, 0.29", "-163.85, -188.601, 20.9447, 0.44", "-164.036, -189.163, 20.9515, 0.44", "-164.266, -189.987, 20.9762, 0.29", "-164.435, -190.607, 20.9813, 0.29", "-164.651, -191.376, 20.9872, 0.29", "-164.815, -191.877, 20.9901, 0.74", "-164.995, -192.329, 21.0058, 0.88", "-165.236, -192.856, 21.0429, 0.88", "-165.639, -193.702, 21.1506, 0.29", "-166.052, -194.536, 21.3212, 0.29", "-166.448, -195.366, 21.5736, 0.29", "-166.891, -196.358, 21.9357, 0.52", "-167.092, -196.82, 22.1255, 0.52", "-167.438, -197.656, 22.5156, 0.29", "-167.648, -198.226, 22.8297, 0.29", "-168.006, -199.37, 23.5384, 0.59", "-168.19, -200.012, 23.9773, 0.29", "-168.32, -200.428, 24.2906, 0.29", "-168.539, -200.994, 24.7538, 0.74", "-168.942, -201.722, 25.3989, 0.88", "-169.347, -202.257, 25.8891, 0.29", "-169.819, -202.738, 26.3462, 0.29", "-170.488, -203.339, 26.8882, 0.96", "-171.038, -203.822, 27.2673, 1.11", "-171.726, -204.452, 27.6485, 1.11", "-172.454, -205.191, 27.9965, 0.29", "-172.922, -205.752, 28.2194, 0.22", "-173.293, -206.324, 28.4032, 0.44", "-173.64, -207.01, 28.5827, 0.44", "-174.101, -208.183, 28.8181, 0.22", "-174.35, -208.924, 28.928, 0.22", "-174.513, -209.481, 28.9815, 0.22", "-174.694, -210.118, 29.0203, 0.59", "-174.823, -210.577, 29.0449, 0.74", "-175.21, -211.935, 29.08, 0.29", "-175.418, -212.658, 29.0852, 0.29", "-175.683, -213.561, 29.0822, 0.44", "-175.923, -214.424, 29.081, 0.44", "-176.225, -215.567, 29.0996, 0.52", "-176.398, -216.218, 29.1225, 0.96", "-176.581, -216.863, 29.1628, 1.4", "-176.787, -217.515, 29.2008, 1.4", "-177.341, -219.006, 29.3631, 0.29", "-177.942, -220.437, 29.5955, 0.22", "-178.263, -221.125, 29.7521, 0.37", "-178.808, -222.199, 30.0692, 0.37", "-179.38, -223.238, 30.4338, 0.29", "-180.184, -224.575, 30.9742, 0.74", "-180.636, -225.247, 31.2811, 1.11", "-181.16, -225.952, 31.6137, 1.25", "-181.712, -226.646, 31.9281, 1.11", "-182.243, -227.285, 32.196, 0.59", "-182.937, -228.116, 32.4937, 0.29", "-183.343, -228.63, 32.6107, 0.29", "-184.1, -229.621, 32.7893, 0.22", "-184.598, -230.304, 32.8931, 0.22", "-184.875, -230.694, 32.9495, 0.66", "-185.301, -231.307, 33.0384, 0.66", "-186.169, -232.578, 33.2541, 0.29", "-186.698, -233.34, 33.3968, 0.29", "-187.257, -234.099, 33.5443, 0.29", "-187.843, -234.845, 33.6859, 0.66", "-188.315, -235.414, 33.788, 0.66", "-189.075, -236.289, 33.9342, 0.22", "-189.597, -236.877, 34.0232, 0.22", "-190.474, -237.865, 34.1579, 0.22", "-191.999, -239.625, 34.3502, 0.22", "-192.451, -240.199, 34.3941, 0.22", "-192.916, -240.858, 34.4272, 1.11", "-193.161, -241.272, 34.4333, 1.11", "-193.273, -241.513, 34.4363, 1.11", "-193.49, -242.149, 34.4475, 0.66", "-193.744, -243.207, 34.4643, 0.22", "-193.859, -243.856, 34.4846, 0.52", "-194.028, -245.346, 34.5598, 0.22", "-194.158, -246.556, 34.6317, 0.22", "-194.215, -247.073, 34.6674, 0.59", "-194.289, -247.727, 34.7225, 0.59", "-194.392, -248.675, 34.8012, 0.52", "-194.529, -250.073, 34.9136, 0.22", "-194.593, -250.893, 34.9789, 0.22", "-194.615, -251.382, 35.0205, 0.22", "-194.628, -251.938, 35.0684, 0.66", "-194.619, -252.73, 35.1894, 0.81", "-194.55, -253.589, 35.4032, 0.59", "-194.312, -254.789, 35.8853, 1.25", "-194.097, -255.41, 36.2241, 1.69", "-193.939, -255.709, 36.4341, 1.92", "-193.223, -256.643, 37.2623, 1.18", "-192.495, -257.319, 38.0359, 0.22", "-191.607, -257.917, 38.8811, 0.22", "-190.986, -258.236, 39.4182, 0.22", "-190.192, -258.594, 40.0411, 0.22", "-189.608, -258.844, 40.4547, 0.66", "-189.166, -259.04, 40.7247, 0.66", "-187.956, -259.585, 41.3971, 0.22", "-187.491, -259.806, 41.6362, 0.37", "-187.023, -260.084, 41.8883, 0.37", "-186.65, -260.36, 42.1117, 0.22", "-186.09, -260.845, 42.4721, 0.22", "-190.119, -269.779, 44.371, 0.22" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-127.224, -92.8213, 1.80397, 0.37", "-127.941, -92.6544, 1.71252, 0.37", "-128.242, -92.6016, 1.666, 0.37", "-128.878, -92.527, 1.53412, 0.29", "-129.361, -92.493, 1.42304, 0.44", "-129.826, -92.479, 1.31004, 0.66", "-130.092, -92.4814, 1.24016, 0.81", "-130.321, -92.4972, 1.16995, 0.81", "-131.027, -92.5796, 0.928181, 0.22", "-131.246, -92.6153, 0.842763, 0.22", "-131.64, -92.6821, 0.689229, 0.74", "-131.963, -92.7369, 0.56022, 0.88", "-132.497, -92.8364, 0.331367, 0.22", "-132.713, -92.8806, 0.217247, 0.22", "-132.909, -92.9292, 0.094873, 0.22", "-133.13, -92.9938, -0.0569279, 0.74", "-133.36, -93.0826, -0.23095, 0.88", "-133.605, -93.2239, -0.446895, 0.88", "-134.126, -93.6531, -0.982733, 0.22", "-134.306, -93.831, -1.18507, 0.22", "-134.452, -93.9899, -1.36246, 0.74", "-134.625, -94.2196, -1.61633, 0.74", "-134.995, -94.6909, -2.10415, 0.29", "-135.114, -94.8338, -2.24493, 0.29", "-135.313, -95.0605, -2.45556, 0.88", "-135.555, -95.3077, -2.69743, 1.03", "-136.295, -95.9723, -3.40413, 0.22", "-137.008, -96.5513, -4.04257, 0.22", "-137.303, -96.7605, -4.28023, 0.22", "-137.48, -96.8781, -4.41545, 1.11", "-137.696, -97.0171, -4.56894, 1.11", "-137.933, -97.1531, -4.70994, 0.81" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-13.8639, -119.76, -3.68642, 0.81", "-12.8588, -120.297, -3.56317, 0.81", "-12.0424, -120.683, -3.47691, 0.52", "-10.8748, -121.19, -3.36973, 0.52", "-10.3639, -121.419, -3.32723, 0.37", "-9.34253, -121.891, -3.24697, 0.37", "-8.9369, -122.085, -3.2158, 0.66", "-8.5728, -122.259, -3.20006, 0.88", "-8.27079, -122.407, -3.18407, 0.88", "-7.49986, -122.865, -3.14237, 0.59", "-6.8173, -123.358, -3.10326, 0.66", "-6.13935, -123.925, -3.05969, 0.74", "-5.72487, -124.269, -3.03193, 0.74", "-5.4029, -124.515, -3.00979, 0.52", "-4.87669, -124.872, -2.97583, 0.29", "-4.31486, -125.176, -2.93213, 0.96", "-3.80497, -125.409, -2.88444, 1.03", "-3.46994, -125.549, -2.84523, 1.03", "-2.71134, -125.851, -2.73783, 0.66", "-2.39246, -125.981, -2.69396, 0.52", "-1.65977, -126.293, -2.5948, 0.59", "-0.934189, -126.644, -2.49748, 0.59", "-0.266869, -127.013, -2.41222, 0.52", "0.285543, -127.357, -2.34696, 0.52", "0.864735, -127.756, -2.28489, 0.96", "1.22758, -128.01, -2.25656, 1.18", "1.83206, -128.421, -2.22785, 0.66", "2.54687, -128.867, -2.20081, 0.37", "2.99511, -129.119, -2.18739, 0.37", "3.92511, -129.587, -2.16538, 0.88", "4.74527, -129.983, -2.12441, 1.03", "5.36738, -130.285, -2.08342, 0.81", "5.9388, -130.563, -2.03203, 0.52", "6.60701, -130.891, -1.9548, 0.52", "7.12709, -131.159, -1.87871, 0.52", "7.84018, -131.583, -1.75286, 0.52", "8.43763, -131.985, -1.63081, 1.33", "8.8096, -132.264, -1.54971, 1.69", "9.23478, -132.626, -1.45169, 1.69", "9.9495, -133.273, -1.34178, 1.11", "10.7326, -133.991, -1.27859, 0.44", "11.247, -134.438, -1.28539, 0.44", "11.6676, -134.786, -1.31804, 0.29", "12.1533, -135.167, -1.39422, 0.29", "13.2661, -135.987, -1.63407, 1.03", "13.5936, -136.211, -1.72289, 1.4", "13.9502, -136.458, -1.83869, 1.4", "15.0941, -137.322, -2.25967, 0.22", "15.7001, -137.805, -2.48711, 0.52", "15.9974, -138.053, -2.59411, 0.52", "16.5042, -138.523, -2.76149, 0.29", "17.2134, -139.204, -3.00045, 0.29", "17.6464, -139.626, -3.13838, 0.29", "18.0839, -140.075, -3.28108, 0.66", "18.4028, -140.412, -3.36618, 0.81", "18.6334, -140.658, -3.42083, 0.81", "19.0173, -141.041, -3.48932, 0.59", "19.4526, -141.433, -3.55544, 0.29", "19.8637, -141.821, -3.59667, 0.29", "20.3193, -142.327, -3.61697, 0.66", "20.6556, -142.775, -3.59668, 0.66", "21.0817, -143.464, -3.51327, 0.29", "21.3069, -143.909, -3.4286, 0.29", "21.661, -144.723, -3.23189, 0.66", "21.8904, -145.301, -3.05952, 0.66", "22.1541, -146.057, -2.80069, 0.44", "22.3834, -146.827, -2.51585, 1.47", "22.5396, -147.449, -2.27869, 1.84", "22.6218, -147.814, -2.14122, 1.84", "22.6718, -148.041, -2.06689, 1.84", "22.8078, -148.62, -1.88644, 1.33", "22.9943, -149.318, -1.68115, 0.52", "23.1005, -149.686, -1.57639, 0.52", "23.2476, -150.186, -1.43454, 0.52", "23.482, -150.983, -1.20095, 0.29", "23.6067, -151.396, -1.07453, 0.29", "23.7955, -151.983, -0.879303, 0.29", "23.9816, -152.524, -0.686786, 0.44", "24.2714, -153.25, -0.417249, 0.44", "24.5555, -153.841, -0.200213, 0.44", "24.7871, -154.253, -0.0588463, 1.33", "25.0675, -154.726, 0.075678, 1.84", "25.3513, -155.144, 0.181946, 1.84", "25.8423, -155.793, 0.336867, 0.96", "26.5008, -156.583, 0.513373, 0.22", "27.0705, -157.222, 0.646733, 0.22", "27.8883, -158.082, 0.813236, 0.22", "28.3873, -158.564, 0.905535, 0.22", "28.9599, -159.057, 1.00294, 0.22", "29.4714, -159.454, 1.07645, 0.44", "30.0887, -159.887, 1.14454, 0.88", "30.6898, -160.287, 1.18582, 1.03", "31.0852, -160.546, 1.20406, 1.03", "31.5467, -160.87, 1.21976, 0.88", "32.0096, -161.176, 1.22986, 0.29", "32.3425, -161.383, 1.24596, 0.29", "32.8491, -161.67, 1.29864, 0.29", "33.4832, -162.001, 1.39539, 0.37", "33.9578, -162.228, 1.49427, 0.37", "34.3718, -162.407, 1.59931, 0.29", "35.1628, -162.704, 1.83117, 0.29", "35.7829, -162.918, 2.01518, 0.81", "36.1318, -163.038, 2.11413, 0.81", "36.8013, -163.306, 2.30535, 0.59", "37.2845, -163.559, 2.45587, 0.29", "37.6942, -163.819, 2.59523, 0.29", "38.1189, -164.127, 2.75258, 0.66", "38.4268, -164.368, 2.88276, 0.66", "39.3278, -165.106, 3.3148, 0.29", "39.8856, -165.57, 3.6261, 0.29", "40.4456, -166.05, 3.99863, 0.29", "40.8564, -166.418, 4.317, 0.29", "41.251, -166.775, 4.66738, 0.88", "41.4276, -166.935, 4.82918, 0.88", "41.8904, -167.362, 5.28406, 0.66", "42.5129, -167.937, 5.9438, 0.29", "42.826, -168.239, 6.30296, 0.29", "43.1937, -168.609, 6.73117, 0.66", "43.5081, -168.934, 7.07094, 0.44", "48.8845, -173.965, 9.50085, 0.44" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-13.8639, -119.76, -3.68642, 2.14", "-14.3457, -121.309, -4.07859, 2.14", "-14.7431, -122.72, -4.38969, 1.33", "-15.1037, -124.108, -4.65388, 1.03", "-15.3402, -125.162, -4.81497, 1.03", "-15.4884, -125.88, -4.91252, 1.25", "-15.6281, -126.582, -5.00043, 1.25", "-15.8351, -127.907, -5.11679, 0.96", "-15.9902, -128.98, -5.17482, 0.96", "-16.2807, -130.859, -5.26407, 0.88", "-16.464, -131.966, -5.29546, 0.88", "-16.6188, -133.014, -5.30038, 0.96", "-16.7685, -134.21, -5.27683, 0.96", "-16.8841, -135.23, -5.22815, 0.74", "-16.9866, -136.212, -5.15885, 0.52", "-17.0685, -137.027, -5.0815, 0.52", "-17.1667, -138.028, -4.96735, 0.37", "-17.2426, -138.825, -4.87246, 0.74", "-17.3415, -139.69, -4.77291, 0.74", "-17.4667, -140.665, -4.65278, 1.03", "-17.5577, -141.284, -4.57611, 1.18", "-17.6933, -142.141, -4.48059, 1.33", "-17.8111, -142.787, -4.41132, 1.33", "-17.9379, -143.474, -4.30197, 1.18", "-18.1524, -144.471, -4.04222, 0.96", "-18.3414, -145.231, -3.76487, 0.81", "-18.5413, -145.995, -3.42557, 0.81", "-18.7471, -146.832, -3.00235, 0.81", "-18.9182, -147.565, -2.61754, 0.59", "-19.1749, -148.776, -2.00083, 0.66", "-19.2946, -149.294, -1.76954, 0.66", "-19.5404, -150.225, -1.46098, 1.18", "-19.8606, -151.189, -1.3262, 1.47", "-20.2046, -152.026, -1.3706, 1.55", "-20.5208, -152.636, -1.50767, 1.55", "-21.0425, -153.459, -1.80444, 1.4", "-21.7867, -154.412, -2.22334, 1.18", "-22.6917, -155.418, -2.71658, 0.66", "-23.4582, -156.205, -3.11105, 0.74", "-24.471, -157.192, -3.59596, 1.18", "-25.3276, -157.983, -3.95918, 1.25", "-26.2499, -158.794, -4.28799, 1.25", "-27.0567, -159.464, -4.50996, 1.25", "-27.8952, -160.084, -4.69352, 1.33", "-28.39, -160.396, -4.77401, 1.33", "-29.214, -160.817, -4.84192, 1.03", "-29.9449, -161.113, -4.84963, 0.74", "-30.5375, -161.313, -4.83255, 0.59", "-31.3255, -161.575, -4.78797, 0.59", "-32.1173, -161.879, -4.72784, 0.88", "-32.9164, -162.294, -4.63302, 1.18", "-33.6773, -162.803, -4.49103, 1.18", "-34.3586, -163.348, -4.32407, 1.18", "-35.0012, -163.956, -4.15093, 1.18", "-35.4948, -164.489, -4.01665, 1.18", "-36.1774, -165.308, -3.83346, 0.81", "-36.5845, -165.851, -3.72981, 0.59", "-36.9566, -166.42, -3.64201, 0.52", "-37.6616, -167.636, -3.49795, 0.96", "-38.0628, -168.453, -3.43041, 1.18", "-38.3911, -169.215, -3.39405, 1.18", "-38.8007, -170.256, -3.38534, 0.88", "-39.1895, -171.307, -3.4036, 0.59", "-39.5072, -172.253, -3.42294, 0.59", "-39.8548, -173.356, -3.44201, 0.59", "-40.1791, -174.384, -3.45828, 0.74", "-40.5576, -175.535, -3.47772, 1.33", "-40.8982, -176.534, -3.49603, 1.69", "-41.3348, -177.768, -3.52163, 1.77", "-41.5847, -178.493, -3.53683, 1.77", "-41.8866, -179.409, -3.5765, 1.77", "-42.1297, -180.29, -3.62897, 1.47", "-42.3491, -181.27, -3.70451, 1.03", "-42.5403, -182.236, -3.79764, 1.03", "-42.7532, -183.364, -3.93187, 1.03", "-42.9592, -184.534, -4.07002, 1.11", "-43.1405, -185.636, -4.18769, 1.33", "-43.2745, -186.64, -4.26885, 1.03", "-43.4004, -188.001, -4.33603, 0.81", "-43.4585, -188.953, -4.35398, 1.03", "-43.4981, -190.15, -4.34016, 0.81", "-43.5074, -190.803, -4.31393, 0.81", "-43.5004, -192.567, -4.22396, 0.74", "-43.4628, -194.342, -4.11617, 0.74", "-43.4038, -195.768, -4.01936, 0.74", "-43.3214, -197.852, -3.87812, 0.74", "-43.2946, -199.289, -3.79809, 0.74", "-43.3131, -200.222, -3.75662, 1.18", "-43.4046, -201.18, -3.72425, 1.4", "-43.61, -202.169, -3.70202, 1.4", "-43.9352, -203.105, -3.69296, 1.47", "-44.4877, -204.134, -3.71067, 1.55", "-44.9273, -204.748, -3.74357, 1.55", "-45.7633, -205.699, -3.81845, 1.11", "-46.8762, -206.764, -3.92298, 0.88", "-47.6998, -207.452, -3.9795, 0.88", "-48.6546, -208.154, -4.02526, 1.03", "-49.3175, -208.61, -4.0532, 1.03", "-49.8454, -208.981, -4.06842, 1.03", "-50.6295, -209.605, -4.05101, 0.81", "-51.5421, -210.493, -3.98994, 0.59", "-52.5478, -211.717, -3.88319, 0.59", "-53.1855, -212.672, -3.78816, 0.88", "-53.668, -213.559, -3.68852, 0.88", "-54.2878, -214.955, -3.53408, 0.74", "-54.6314, -215.918, -3.43169, 0.96", "-54.9023, -216.869, -3.35749, 1.11", "-55.0602, -217.554, -3.30945, 1.11", "-55.2086, -218.275, -3.2793, 0.88", "-55.4105, -219.269, -3.29548, 0.66", "-55.5615, -219.967, -3.33269, 0.66", "-55.8137, -221.142, -3.39192, 0.96", "-55.9978, -222.04, -3.43848, 0.96", "-56.2213, -223.19, -3.50045, 0.66", "-56.4247, -224.239, -3.55867, 0.74", "-56.7456, -225.922, -3.63123, 0.96", "-56.9311, -226.892, -3.64426, 0.96", "-57.1204, -227.905, -3.65084, 0.96", "-57.3428, -229.065, -3.67896, 0.66", "-57.6682, -230.78, -3.75254, 0.66", "-57.9289, -232.419, -3.85894, 0.66", "-58.0563, -233.4, -3.94645, 0.81", "-58.2357, -235.117, -4.12683, 0.74", "-58.3411, -236.479, -4.29135, 0.74", "-58.4053, -237.917, -4.47912, 0.96", "-58.4268, -239.125, -4.64452, 0.96", "-58.4408, -239.926, -4.74681, 1.62", "-58.4752, -240.365, -4.79036, 1.62", "-58.5663, -240.941, -4.80892, 1.62", "-58.7463, -241.782, -4.8006, 1.4", "-58.982, -242.66, -4.77272, 0.88", "-59.3066, -243.781, -4.71685, 0.59", "-59.7442, -245.306, -4.62105, 0.81", "-60.0999, -246.533, -4.53394, 0.96", "-60.373, -247.524, -4.46699, 0.96", "-60.6754, -248.721, -4.40051, 1.11", "-60.8708, -249.505, -4.36709, 1.11", "-61.0319, -250.111, -4.35292, 1.33", "-61.1989, -250.701, -4.34726, 1.33", "-61.5377, -251.659, -4.33754, 1.03", "-61.9534, -252.602, -4.32689, 0.66", "-62.3029, -253.305, -4.31721, 0.37", "-62.5678, -253.818, -4.30957, 0.37", "-62.8922, -254.49, -4.2924, 0.37", "-63.1856, -255.129, -4.2702, 1.03", "-63.5035, -255.839, -4.24377, 1.25", "-63.7122, -256.368, -4.21737, 1.25", "-64.0462, -257.357, -4.16287, 0.96", "-64.4157, -258.602, -4.09541, 0.52", "-64.7299, -259.723, -4.0427, 0.52", "-65.1356, -261.287, -3.9799, 0.52", "-65.4238, -262.561, -3.9291, 0.81", "-65.6269, -263.491, -3.88783, 1.03", "-65.8181, -264.331, -3.84981, 1.03", "-65.9721, -264.978, -3.82204, 0.81", "-66.1735, -265.759, -3.79533, 0.81", "-66.4931, -266.854, -3.77549, 0.59", "-66.8998, -268.002, -3.78161, 0.44", "-67.5384, -269.443, -3.80845, 0.88", "-67.8691, -270.059, -3.82774, 0.88", "-68.3689, -270.855, -3.86331, 0.59", "-68.9022, -271.531, -3.90631, 0.59", "-69.7545, -272.374, -3.99683, 0.59", "-70.6763, -273.112, -4.11675, 0.81", "-71.2043, -273.462, -4.19018, 0.81", "-71.6312, -273.713, -4.25209, 0.81", "-72.596, -274.197, -4.40262, 0.59", "-73.6566, -274.626, -4.57746, 0.88", "-74.7107, -274.968, -4.76279, 1.03", "-75.7165, -275.242, -4.94982, 1.03", "-76.5492, -275.423, -5.1032, 0.59", "-77.302, -275.563, -5.23284, 0.59", "-77.943, -275.684, -5.33424, 0.59", "-78.497, -275.784, -5.40425, 0.59", "-79.0879, -275.917, -5.47017, 0.59", "-79.8626, -276.129, -5.5425, 0.44", "-81.0247, -276.526, -5.63181, 0.81", "-81.9963, -276.927, -5.68681, 1.11", "-83.0585, -277.445, -5.72158, 0.81", "-84.1229, -278.051, -5.73739, 0.66", "-84.6104, -278.368, -5.73921, 0.66", "-85.1967, -278.802, -5.73593, 0.52", "-85.8674, -279.348, -5.72156, 0.52", "-86.5461, -279.97, -5.69811, 0.52", "-87.2275, -280.64, -5.66747, 0.52", "-87.6386, -281.084, -5.64361, 1.11", "-88.5479, -282.171, -5.59277, 1.4", "-89.038, -282.824, -5.56615, 1.84", "-89.5721, -283.617, -5.54868, 2.43" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-8.38712, -83.1573, -12.8879, 0.66", "-8.5525, -84.3408, -12.8932, 0.66", "-8.66212, -85.0694, -12.9064, 0.37", "-8.72143, -85.5576, -12.9264, 0.81", "-8.78102, -86.19, -12.9553, 1.03", "-8.83054, -86.7399, -12.984, 1.11", "-8.8806, -87.3269, -13.0246, 0.88", "-8.92491, -88.0042, -13.092, 0.59", "-8.94641, -88.7951, -13.1792, 0.29", "-8.93897, -89.3706, -13.2449, 0.29", "-8.92193, -89.6355, -13.2723, 0.29", "-8.83593, -90.2366, -13.3262, 0.74", "-8.70749, -90.8003, -13.3632, 1.11", "-8.60506, -91.1579, -13.3757, 1.11", "-8.44022, -91.6855, -13.3853, 1.11", "-8.25071, -92.2973, -13.3686, 0.81", "-7.9643, -93.3052, -13.3041, 0.44", "-7.73146, -94.2595, -13.2162, 0.59", "-7.62176, -94.8317, -13.159, 0.88", "-7.54618, -95.4307, -13.0974, 0.88", "-7.49299, -96.2838, -13.0122, 0.81", "-7.50011, -97.1161, -12.9269, 0.44", "-7.5528, -97.7687, -12.856, 1.03", "-7.61856, -98.3132, -12.8008, 0.74", "-7.70866, -98.9949, -12.7434, 0.52", "-7.77812, -99.5225, -12.7101, 0.88", "-7.83118, -100.008, -12.7099, 1.18", "-7.87282, -100.429, -12.717, 1.18", "-7.92167, -100.911, -12.7328, 0.88", "-8.00346, -101.749, -12.7703, 0.29", "-8.0641, -102.384, -12.8084, 0.29", "-8.14423, -103.292, -12.8832, 1.03", "-8.18839, -103.896, -12.9389, 1.47", "-8.21642, -104.277, -12.9751, 1.47", "-8.24458, -104.696, -13.0135, 1.47", "-8.27548, -105.323, -13.061, 1.25", "-8.30925, -106.091, -13.105, 0.44", "-8.33198, -106.725, -13.1241, 0.44", "-8.34675, -107.345, -13.1419, 0.44", "-8.35002, -107.664, -13.1494, 0.59", "-8.35546, -108.413, -13.1666, 0.59", "-8.34959, -108.985, -13.1759, 0.37", "-8.34384, -109.463, -13.1828, 0.81", "-8.34245, -109.9, -13.1847, 1.03", "-8.34601, -110.219, -13.1828, 1.03", "-8.36283, -110.614, -13.179, 0.59", "-8.39435, -111.258, -13.1623, 0.22", "-8.40437, -111.661, -13.1415, 0.22", "-8.40663, -112.139, -13.1083, 0.22", "-8.40194, -112.654, -13.0661, 0.66", "-8.38701, -113.271, -13.0117, 0.88", "-8.3469, -114.172, -12.9231, 0.88", "-8.29215, -115.22, -12.8175, 0.96", "-8.24166, -116.011, -12.747, 1.18", "-8.20185, -116.651, -12.7067, 0.66", "-8.1715, -117.176, -12.6788, 0.52", "-8.12489, -118.178, -12.6451, 0.52", "-8.09858, -118.95, -12.6339, 0.81", "-8.07501, -119.729, -12.6334, 0.52", "-8.05783, -120.312, -12.6312, 0.52", "-8.02596, -121.002, -12.6369, 1.47", "-7.97751, -121.71, -12.6516, 1.77", "-7.92088, -122.258, -12.676, 1.77", "-7.87565, -122.574, -12.6908, 1.77", "-7.78473, -123.098, -12.7087, 1.25", "-7.66843, -123.706, -12.7235, 0.81", "-7.52837, -124.445, -12.746, 0.44", "-7.35121, -125.371, -12.7681, 0.37", "-7.24475, -125.94, -12.7785, 0.52", "-7.11121, -126.629, -12.7813, 0.52", "-7.00683, -127.145, -12.7757, 0.66", "-6.85831, -127.825, -12.761, 0.66", "-6.64006, -128.697, -12.7605, 0.88", "-6.43013, -129.431, -12.7711, 1.25", "-6.2941, -129.846, -12.7892, 1.25", "-6.16064, -130.204, -12.8106, 1.25", "-5.87119, -130.909, -12.8642, 1.11", "-5.59714, -131.532, -12.9205, 0.74", "-5.34274, -132.081, -12.9783, 0.29", "-5.18907, -132.406, -13.0187, 0.29", "-4.82841, -133.197, -13.1162, 0.44", "-4.63824, -133.65, -13.163, 0.88", "-4.49362, -134.059, -13.1951, 1.33", "-4.35384, -134.542, -13.2176, 1.47", "-4.2335, -135.063, -13.2292, 1.47", "-4.14542, -135.526, -13.2283, 1.25", "-4.04468, -136.156, -13.2143, 0.44", "-3.93371, -137.078, -13.1515, 0.29", "-3.88008, -137.806, -13.0738, 0.29", "-3.85864, -138.547, -12.9741, 0.29", "-3.86729, -139.135, -12.8833, 0.74", "-3.893, -139.55, -12.8154, 0.88", "-3.99518, -140.388, -12.6789, 0.96", "-4.12568, -141.102, -12.5797, 1.03", "-4.24959, -141.637, -12.5333, 1.03", "-4.3965, -142.167, -12.505, 0.59", "-4.56055, -142.734, -12.4868, 0.22", "-4.6578, -143.091, -12.4846, 0.22", "-4.84941, -143.917, -12.5126, 0.96", "-4.95328, -144.408, -12.5399, 1.11", "-5.06806, -144.947, -12.5544, 1.11", "-5.17515, -145.462, -12.5439, 0.59", "-5.27751, -145.987, -12.5128, 0.29", "-5.36101, -146.435, -12.4679, 0.29", "-5.43528, -146.809, -12.4202, 0.29", "-5.6019, -147.619, -12.3008, 0.44", "-5.75248, -148.304, -12.1839, 0.66", "-5.91458, -149.027, -12.0538, 0.66", "-6.02421, -149.551, -11.9601, 0.81", "-6.13512, -150.134, -11.8646, 0.81", "-6.23265, -150.691, -11.7803, 0.52", "-6.3579, -151.399, -11.6993, 0.66", "-6.45516, -151.924, -11.6476, 0.66", "-6.6156, -152.807, -11.6129, 0.37", "-6.74995, -153.59, -11.6261, 0.37", "-6.85399, -154.215, -11.6703, 1.03", "-6.94362, -154.845, -11.7602, 1.47", "-7.02256, -155.464, -11.8926, 1.62", "-7.15443, -156.568, -12.207, 0.88", "-7.24294, -157.286, -12.4875, 0.59", "-7.31781, -157.832, -12.7622, 0.37", "-7.47061, -158.707, -13.2888, 0.29", "-7.53309, -158.963, -13.4557, 0.29", "-7.65269, -159.327, -13.7024, 0.29", "-7.91434, -160.0, -14.131, 0.29", "-8.17827, -160.634, -14.5481, 0.59", "-8.45945, -161.305, -14.9748, 0.59", "-8.63918, -161.721, -15.2379, 0.44", "-8.85924, -162.219, -15.5685, 0.44", "-8.99357, -162.522, -15.8062, 0.29", "-9.17025, -162.955, -16.1843, 1.4", "-9.40151, -163.446, -16.7757, 1.62", "-9.61323, -163.777, -17.3267, 1.4", "-9.824, -164.008, -17.8557, 1.11", "-10.1911, -164.308, -18.7166, 0.81", "-10.3959, -164.46, -19.1917, 0.59", "-10.6124, -164.647, -19.7284, 0.74", "-10.8137, -164.88, -20.2574, 0.81", "-10.9682, -165.188, -20.6853, 0.52", "-11.0769, -165.504, -21.0158, 0.52", "-11.1844, -165.86, -21.3133, 0.74", "-11.3215, -166.366, -21.7371, 0.74", "-11.3927, -166.683, -21.9635, 0.74", "-11.4532, -167.042, -22.2125, 0.52", "-11.5524, -167.608, -22.5695, 0.52", "-11.6124, -167.919, -22.7561, 0.52", "-11.7466, -168.527, -23.0851, 1.69", "-11.8421, -168.929, -23.2677, 2.14", "-12.0368, -169.78, -23.5809, 1.55", "-12.2376, -170.674, -23.8486, 0.29", "-12.3547, -171.197, -23.9788, 0.29", "-12.5196, -171.915, -24.1345, 0.44", "-12.6881, -172.6, -24.2601, 0.59", "-12.8458, -173.206, -24.3586, 0.59", "-13.0196, -173.823, -24.4384, 0.29", "-13.1133, -174.155, -24.4822, 0.29", "-13.2427, -174.618, -24.5426, 0.96", "-13.3503, -175.025, -24.5917, 1.03", "-13.4851, -175.592, -24.6541, 0.52", "-13.6371, -176.333, -24.725, 0.29", "-13.7124, -176.756, -24.7585, 0.81", "-13.7925, -177.247, -24.7907, 0.96", "-13.8508, -177.626, -24.8141, 0.96", "-13.9512, -178.291, -24.8556, 0.29", "-14.0772, -179.049, -24.9088, 0.29", "-14.2059, -179.842, -24.989, 1.47", "-14.2911, -180.398, -25.0553, 1.92", "-14.3285, -180.669, -25.0885, 1.92", "-14.4222, -181.342, -25.1663, 1.33", "-14.5174, -182.092, -25.251, 0.29", "-14.6069, -182.857, -25.3395, 0.29", "-14.6686, -183.469, -25.4133, 0.29", "-14.7913, -184.8, -25.5796, 0.29", "-14.8711, -185.706, -25.6833, 1.4", "-14.9168, -186.258, -25.7387, 2.14", "-14.9356, -186.499, -25.7595, 2.28", "-14.9668, -186.892, -25.7842, 2.28", "-15.0077, -187.298, -25.8005, 1.92", "-15.0999, -187.884, -25.79, 0.88", "-15.2744, -188.774, -25.732, 0.29", "-15.3974, -189.316, -25.673, 0.29", "-15.5448, -189.922, -25.5897, 0.29", "-15.7867, -190.87, -25.4411, 0.29", "-16.0317, -191.841, -25.2855, 0.96", "-16.1878, -192.492, -25.1842, 1.62", "-16.2731, -192.86, -25.128, 1.62", "-16.3488, -193.208, -25.0815, 1.62", "-16.4963, -193.959, -25.0087, 1.11", "-16.6278, -194.885, -24.9911, 0.29", "-16.7073, -195.577, -25.0212, 0.29", "-16.7667, -196.125, -25.0623, 0.59", "-16.7971, -196.397, -25.0908, 0.66", "-16.8368, -196.727, -25.1322, 0.66", "-16.9597, -197.629, -25.2634, 0.29", "-17.1169, -198.674, -25.4528, 0.29", "-17.2534, -199.483, -25.6196, 0.96", "-17.3827, -200.117, -25.7639, 1.4", "-17.493, -200.591, -25.8735, 1.4", "-17.617, -201.081, -25.9835, 1.4", "-17.7958, -201.726, -26.1194, 0.88", "-18.0206, -202.515, -26.2834, 0.29", "-18.2299, -203.235, -26.4226, 0.29", "-18.4518, -203.961, -26.5638, 0.44", "-18.6049, -204.42, -26.6539, 0.66", "-18.7389, -204.788, -26.723, 0.66", "-18.9966, -205.441, -26.8261, 0.29", "-19.1518, -205.833, -26.8843, 0.29", "-19.3389, -206.335, -26.9777, 0.29", "-19.58, -207.024, -27.1518, 0.29", "-19.7083, -207.418, -27.278, 0.52", "-19.8655, -207.968, -27.4743, 0.66", "-19.9955, -208.518, -27.6383, 0.66", "-20.1417, -209.378, -27.8384, 1.4", "-20.2032, -210.138, -27.9664, 2.28", "-20.2085, -210.9, -28.0564, 2.5", "-20.1863, -211.33, -28.0752, 2.5", "-20.0006, -212.844, -27.9997, 0.22", "-19.8895, -213.458, -27.9064, 0.22", "-19.6964, -214.24, -27.6993, 0.37", "-19.5514, -214.705, -27.5257, 0.44", "-19.2248, -215.401, -27.2478, 0.29", "-18.7996, -216.054, -27.0134, 0.88", "-18.4976, -216.37, -26.9453, 1.4", "-18.2399, -216.6, -26.9325, 1.4", "-17.8637, -216.93, -26.9712, 1.11", "-16.6036, -218.064, -27.2726, 0.29", "-16.1799, -218.471, -27.423, 0.29", "-15.5109, -219.177, -27.7197, 0.81", "-15.1727, -219.628, -27.9005, 0.81", "-14.6263, -220.572, -28.2486, 0.22", "-14.4564, -220.963, -28.3765, 0.22", "-14.2917, -221.559, -28.522, 0.44", "-14.2258, -221.893, -28.5917, 0.59", "-14.0403, -223.286, -28.8326, 0.22", "-13.9876, -223.771, -28.9157, 0.74", "-13.9509, -224.202, -28.9874, 1.03", "-13.9126, -224.662, -29.0537, 1.03", "-13.8777, -225.112, -29.1115, 0.74", "-13.8439, -225.531, -29.1622, 0.37", "-13.7455, -226.595, -29.2876, 0.22", "-13.6538, -227.654, -29.4213, 0.22", "-13.596, -228.449, -29.5255, 0.88", "-13.5592, -229.037, -29.6052, 1.62", "-13.5426, -229.359, -29.6514, 1.84", "-13.5309, -229.747, -29.7108, 1.84", "-13.5287, -230.545, -29.8387, 0.52", "-13.5518, -231.217, -29.961, 0.22", "-13.5903, -231.753, -30.0747, 0.22", "-13.6399, -232.214, -30.1835, 0.37", "-13.6684, -232.392, -30.226, 0.37", "-13.7591, -232.831, -30.3427, 0.22", "-13.8479, -233.186, -30.4452, 0.74", "-13.9551, -233.589, -30.5692, 0.74", "-14.0605, -233.954, -30.6824, 0.59", "-14.3076, -234.74, -30.9306, 0.22", "-14.4362, -235.102, -31.0458, 0.22", "-14.6435, -235.583, -31.1903, 0.59", "-14.8206, -235.926, -31.2834, 0.59", "-15.0295, -236.277, -31.3529, 0.29", "-15.2666, -236.633, -31.4143, 0.22", "-15.6198, -237.122, -31.5279, 0.37", "-16.0757, -237.705, -31.6959, 0.44", "-16.4538, -238.114, -31.9086, 0.59", "-16.9003, -238.524, -32.254, 0.37", "-17.1519, -238.698, -32.5092, 0.22", "-17.7279, -238.949, -33.2479, 2.21", "-17.9232, -238.964, -33.5643, 2.5", "-18.604, -238.684, -34.9074, 0.22", "-18.7957, -238.515, -35.3434, 0.22", "-19.0141, -238.162, -35.9814, 0.66", "-19.101, -237.94, -36.3068, 0.66", "-19.2048, -237.564, -36.7904, 0.37", "-19.326, -237.014, -37.4964, 1.92", "-19.3649, -236.82, -37.7518, 1.92", "-19.5566, -235.994, -39.0939, 0.44", "-19.6457, -235.698, -39.6928, 0.59", "-19.7169, -235.568, -40.0352, 0.37", "-19.8682, -235.45, -40.5199, 0.37", "-20.0398, -235.379, -41.0061, 0.22", "-20.5153, -235.314, -42.0891, 0.29", "-20.7213, -235.348, -42.4174, 0.22", "-21.0852, -235.432, -42.9215, 0.22", "-21.6013, -235.541, -43.5972, 0.22" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-8.38712, -83.1573, -12.8879, 0.74", "-9.99828, -84.2494, -13.4823, 0.74", "-10.6344, -84.6354, -13.7179, 0.74", "-11.5394, -85.1119, -14.0838, 0.74", "-12.1638, -85.3844, -14.3557, 0.52", "-12.7947, -85.5674, -14.6739, 0.52", "-13.3845, -85.6748, -15.0096, 0.88", "-13.8374, -85.6029, -15.379, 0.88", "-14.5154, -85.3317, -16.0648, 0.59", "-14.9211, -85.1116, -16.5291, 0.37", "-15.5266, -84.8036, -17.2947, 0.37", "-15.8785, -84.6823, -17.8039, 1.11", "-16.1647, -84.6915, -18.2664, 1.47", "-16.4451, -84.7824, -18.7158, 1.47", "-16.6575, -84.8822, -19.0314, 1.47", "-17.1548, -85.1178, -19.733, 0.96", "-17.6081, -85.2764, -20.333, 0.59", "-18.0419, -85.3501, -20.8391, 0.59", "-18.5189, -85.3737, -21.2977, 0.59", "-19.0319, -85.3938, -21.7605, 0.81", "-19.5265, -85.4143, -22.1858, 0.81", "-19.9268, -85.4283, -22.4874, 0.81", "-20.4102, -85.4672, -22.8272, 0.81", "-20.9115, -85.7259, -23.2786, 0.22", "-21.1841, -86.3793, -23.741, 0.22", "-21.3296, -86.9078, -24.0983, 0.66", "-21.3969, -87.2241, -24.3142, 0.88", "-21.4829, -87.6841, -24.647, 0.88", "-21.5826, -88.2196, -25.1692, 0.44", "-21.7495, -88.7397, -25.8987, 1.4", "-21.9233, -89.0099, -26.5407, 2.14", "-22.0007, -89.073, -26.8255, 2.58", "-22.1699, -89.1094, -27.4062, 2.36", "-22.6269, -89.0571, -28.9763, 1.69", "-22.8753, -88.9792, -29.7853, 0.37", "-23.2147, -88.8418, -30.7059, 0.37", "-23.5173, -88.7218, -31.4136, 0.37", "-24.1762, -88.5232, -32.762, 1.92", "-24.464, -88.4712, -33.2941, 2.14", "-24.7694, -88.4681, -33.801, 2.5", "-25.6634, -88.626, -35.324, 0.44", "-25.9398, -88.7222, -35.8055, 0.44", "-26.3471, -88.8892, -36.5738, 0.44", "-26.6976, -89.0201, -37.3074, 0.44", "-27.044, -89.1052, -38.0814, 1.4", "-27.4077, -89.1654, -38.9484, 2.06", "-27.7092, -89.2111, -39.7655, 2.06", "-28.0566, -89.2162, -40.7977, 0.66", "-28.3006, -89.1973, -41.6555, 0.81", "-28.5299, -89.1761, -42.6333, 0.52", "-28.6618, -89.1982, -43.5266, 1.77", "-28.6988, -89.2664, -44.2117, 2.28", "-28.6047, -89.699, -46.4641, 1.33", "-28.4884, -89.9603, -47.3239, 1.77", "-28.3805, -90.151, -47.8634, 1.77", "-28.1402, -90.5385, -48.8923, 0.74", "-27.9374, -90.8556, -49.7059, 0.52", "-27.6631, -91.3609, -50.8905, 0.52", "-27.3994, -91.9644, -52.0891, 0.88", "-27.2279, -92.5412, -53.2081, 1.47", "-27.1283, -93.1109, -54.2775, 0.22", "-27.1058, -93.4059, -54.7991, 0.22", "-27.1051, -93.8086, -55.4317, 0.81", "-27.1263, -94.2475, -56.0107, 0.96", "-27.1775, -94.834, -56.6918, 1.55", "-27.247, -95.4209, -57.2787, 1.55", "-27.3334, -96.0604, -57.8938, 0.37", "-27.3949, -96.5142, -58.3396, 0.74", "-27.4679, -97.0743, -58.9296, 0.81", "-27.5339, -97.8116, -59.7338, 0.29", "-27.5444, -98.1671, -60.1131, 0.96", "-27.5332, -98.6898, -60.6511, 1.33", "-27.4674, -99.4259, -61.3798, 0.74", "-27.3666, -100.043, -61.9499, 0.59", "-27.1296, -101.026, -62.7686, 0.29", "-26.9255, -101.666, -63.2106, 0.29", "-26.6881, -102.26, -63.569, 0.29", "-26.4751, -102.719, -63.7861, 1.18", "-26.2392, -103.152, -63.9511, 1.69", "-25.8489, -103.783, -64.1366, 1.33", "-25.2483, -104.673, -64.3652, 0.22", "-24.9655, -105.08, -64.4739, 0.22", "-24.62, -105.606, -64.6249, 0.96", "-24.401, -105.977, -64.741, 1.11", "-24.0218, -106.688, -64.9709, 0.52", "-23.4711, -107.832, -65.3456, 0.22", "-23.2303, -108.375, -65.527, 0.22", "-22.9869, -108.969, -65.735, 0.88", "-22.8153, -109.401, -65.9101, 1.03", "-22.5207, -110.148, -66.2503, 0.22", "-22.3802, -110.492, -66.4172, 0.22", "-22.1605, -110.994, -66.6666, 0.66", "-21.9044, -111.554, -66.9363, 0.74", "-21.2989, -112.854, -67.5239, 0.22", "-20.8899, -113.802, -67.8991, 0.22", "-20.4599, -115.006, -68.3279, 0.96", "-20.3267, -115.461, -68.4754, 1.25", "-20.2116, -116.071, -68.651, 1.25", "-20.1268, -116.973, -68.8686, 0.66", "-20.1358, -118.083, -69.1086, 0.15", "-20.2523, -119.027, -69.3362, 0.37", "-20.3446, -119.465, -69.4664, 0.37", "-20.7678, -121.055, -70.0211, 0.22", "-20.8447, -121.301, -70.1248, 0.74", "-21.02, -121.822, -70.3812, 0.88", "-21.6045, -123.47, -71.271, 0.22", "-21.8307, -124.088, -71.6118, 0.74", "-22.0599, -124.688, -71.9422, 0.74", "-22.5589, -125.992, -72.6717, 0.22", "-22.979, -127.087, -73.2691, 0.22", "-23.4708, -128.347, -73.8897, 0.22", "-23.9375, -129.541, -74.3985, 0.22", "-24.1955, -130.193, -74.6341, 0.88", "-24.3983, -130.709, -74.7883, 1.11", "-24.5928, -131.238, -74.8991, 1.11", "-25.0328, -132.532, -75.0872, 0.15", "-25.3475, -133.585, -75.1961, 0.15", "-25.5075, -134.171, -75.242, 0.81", "-25.6384, -134.683, -75.2756, 0.96", "-26.0115, -136.603, -75.587, 0.22", "-26.1639, -137.505, -75.7491, 0.22", "-26.2949, -138.504, -75.9786, 0.22", "-26.3356, -138.905, -76.087, 1.18", "-26.3626, -139.288, -76.2121, 1.18", "-26.4182, -142.11, -77.5036, 0.29" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "29.0383, 171.329, -49.7774, 0.37", "29.5009, 170.643, -49.4796, 0.37", "29.8686, 170.125, -49.2784, 0.52", "30.3862, 169.423, -49.015, 0.74", "30.801, 168.865, -48.8205, 1.11", "31.0437, 168.55, -48.7106, 1.11", "31.3973, 168.094, -48.5484, 0.81", "32.2245, 167.109, -48.1403, 0.22", "32.6212, 166.627, -47.942, 0.22", "32.864, 166.304, -47.8261, 0.66", "33.1072, 165.944, -47.7064, 0.66", "33.3392, 165.569, -47.5885, 0.66", "33.77, 164.822, -47.3419, 0.44", "34.1615, 164.084, -47.0885, 0.22", "34.5601, 163.264, -46.8167, 0.22", "34.7386, 162.866, -46.6888, 0.44", "34.8463, 162.59, -46.6157, 0.59" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "29.0383, 171.329, -49.7774, 0.22", "31.0419, 171.228, -50.4373, 0.22", "31.4967, 171.236, -50.6088, 0.44", "33.5865, 171.395, -51.423, 0.22", "34.4779, 171.492, -51.8018, 0.59", "35.1506, 171.577, -52.1258, 0.59", "38.0361, 171.94, -53.5156, 0.22", "41.3439, 172.412, -55.2065, 0.22", "42.521, 172.616, -55.8406, 0.66", "43.4326, 172.818, -56.3773, 0.81", "44.7986, 173.155, -57.2321, 0.22" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "16.4285, 227.323, 39.2276, 0.59", "18.0882, 228.699, 39.1221, 0.59", "18.6251, 229.161, 39.1086, 0.44", "19.7404, 230.177, 39.0595, 0.22", "20.6953, 231.117, 39.029, 0.81", "21.1994, 231.637, 38.9992, 0.96", "21.4321, 231.883, 38.9792, 0.96", "22.1477, 232.747, 38.9084, 0.22", "23.1535, 234.152, 38.7038, 0.22", "23.9658, 235.476, 38.4495, 1.11", "24.3618, 236.216, 38.2975, 1.47", "24.5281, 236.582, 38.2047, 1.47", "25.1128, 238.191, 37.7676, 0.22", "25.5191, 239.67, 37.3335, 0.22", "25.6968, 240.542, 37.0702, 0.66", "25.7685, 240.977, 36.9286, 0.66", "25.9981, 243.049, 36.258, 0.22", "26.1231, 244.938, 35.6521, 0.22", "26.1459, 246.015, 35.2959, 0.22", "26.1359, 247.266, 34.8815, 1.47", "26.0992, 247.977, 34.6544, 1.47", "25.8579, 250.372, 33.9574, 0.22", "25.7382, 251.147, 33.7477, 0.81", "25.5976, 251.795, 33.5841, 0.81", "25.1611, 253.373, 33.2305, 0.22", "24.7525, 254.618, 32.9698, 0.22", "24.2758, 255.911, 32.7133, 1.47", "24.0616, 256.447, 32.5911, 1.84", "23.246, 258.397, 32.1318, 0.22", "22.5853, 259.89, 31.7802, 0.22", "22.3338, 260.408, 31.6495, 0.22", "21.6532, 261.769, 31.2532, 1.55", "21.2188, 262.593, 30.9799, 2.06" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "16.4285, 227.323, 39.2276, 0.22", "17.2491, 229.682, 39.4977, 0.22", "17.7136, 230.959, 39.6654, 0.22", "18.0802, 231.948, 39.8059, 0.96", "18.2398, 232.378, 39.8717, 1.18", "18.4049, 232.821, 39.9439, 1.18", "18.6698, 233.544, 40.0674, 0.22", "18.8637, 234.057, 40.1738, 0.44", "18.9564, 234.32, 40.2239, 0.44", "19.203, 235.078, 40.3613, 0.22", "19.4111, 235.744, 40.4807, 0.44", "19.6377, 236.483, 40.6131, 0.44", "20.2917, 238.742, 41.0167, 0.22", "20.8344, 240.649, 41.3385, 0.22", "21.0409, 241.366, 41.4508, 0.66", "21.1556, 241.761, 41.5072, 0.74", "21.3471, 242.392, 41.5798, 0.22", "21.839, 243.937, 41.7264, 0.22", "22.1311, 244.847, 41.7989, 1.03", "22.3269, 245.452, 41.8398, 1.25", "22.475, 245.91, 41.8671, 1.25", "22.9747, 247.452, 41.9487, 0.22", "23.8065, 249.989, 42.0735, 0.22", "24.0912, 250.843, 42.1168, 0.74", "24.2484, 251.335, 42.1529, 0.81" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "8.32965, 92.3286, 28.2688, 0.37", "9.66781, 97.738, 32.3195, 0.37", "11.485, 102.759, 36.6727, 0.37", "11.8345, 107.422, 41.7325, 0.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "8.32965, 92.3286, 28.2688, 0.22", "12.2007, 100.96, 28.4613, 0.37", "16.6309, 109.262, 27.4695, 0.37", "21.4375, 117.281, 26.0096, 0.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "100.752, -7.22316, 11.1853, 0.37", "111.39, -9.88195, 12.0808, 0.37", "122.337, -10.8402, 12.6036, 0.37", "133.251, -10.4342, 13.9253, 0.37" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "100.752, -7.22316, 11.1853, 0.22", "106.662, -8.78058, 12.0723, 0.37", "112.793, -9.50276, 12.2047, 0.37", "118.876, -10.3828, 12.8102, 0.37" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "49.8706, 12.4015, -0.0362245, 0.52", "51.4137, 12.6847, 0.342596, 0.52", "52.016, 12.765, 0.488422, 0.52", "52.6465, 12.8175, 0.676343, 0.52", "53.8598, 12.8914, 1.06872, 0.52", "54.5875, 12.9135, 1.31423, 0.88", "55.7021, 12.9284, 1.67586, 0.88", "56.5274, 12.939, 1.93171, 0.88", "57.4129, 12.8471, 2.1861, 0.81", "57.9849, 12.6775, 2.29062, 0.81", "58.8493, 12.2365, 2.36034, 0.59", "59.5404, 11.7549, 2.33099, 0.59", "60.2787, 11.1499, 2.19751, 0.59", "61.0045, 10.5193, 1.97658, 0.74", "62.1328, 9.44775, 1.52338, 0.66", "62.5951, 8.96675, 1.31241, 0.66", "63.2947, 8.17264, 0.963663, 0.52", "63.7685, 7.62487, 0.717086, 0.52", "64.3775, 6.9509, 0.394989, 0.81", "65.1335, 6.11656, -0.0171517, 0.81", "65.6353, 5.53237, -0.288, 0.81", "66.2412, 4.75799, -0.640804, 0.81", "66.9679, 3.72114, -1.09173, 0.88", "67.549, 2.79425, -1.47568, 1.11", "67.9054, 2.18259, -1.72797, 1.11", "68.5619, 0.942974, -2.2215, 0.88", "69.0129, -0.061079, -2.57089, 0.96", "69.3077, -0.860576, -2.79329, 0.96", "69.5163, -1.54068, -2.93928, 0.96", "69.6909, -2.16901, -3.0493, 0.66", "69.9738, -3.17896, -3.1697, 0.66", "70.3943, -4.51894, -3.2576, 0.81", "70.8179, -5.58035, -3.29087, 1.11", "71.3969, -6.77389, -3.2909, 0.96", "71.8917, -7.61289, -3.30792, 0.81", "72.6351, -8.65832, -3.35568, 0.81", "73.5523, -9.71649, -3.44883, 0.59", "74.3403, -10.4931, -3.56403, 0.37", "75.0698, -11.1427, -3.70189, 0.37", "76.1512, -12.0658, -3.95425, 0.59", "76.7416, -12.571, -4.13866, 0.88", "77.0668, -12.8605, -4.27192, 1.11", "77.483, -13.2665, -4.45462, 1.11", "78.0358, -13.8445, -4.68353, 0.74", "78.4796, -14.284, -4.8608, 0.74", "78.9179, -14.7324, -5.04926, 0.74", "79.5806, -15.4395, -5.38937, 0.74", "80.2478, -16.1776, -5.79397, 0.74", "80.8521, -16.8425, -6.18059, 0.66", "81.4227, -17.4576, -6.56294, 0.66", "82.1763, -18.2571, -7.0935, 0.96", "83.0593, -19.2157, -7.7709, 1.4", "83.5039, -19.7381, -8.16335, 1.62", "83.9557, -20.312, -8.61726, 1.77" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "49.8706, 12.4015, -0.0362245, 0.88", "51.1452, 13.5593, 0.678338, 0.88", "52.3109, 14.4698, 1.29287, 0.88", "53.6449, 15.332, 1.91037, 0.88", "55.1085, 16.1279, 2.49231, 0.88", "56.8601, 16.9415, 3.12366, 0.74", "57.9755, 17.4172, 3.51742, 0.74", "59.5722, 17.9675, 4.05655, 0.88", "61.0172, 18.3759, 4.4996, 0.88", "62.2155, 18.6763, 4.82537, 0.88", "63.3787, 18.9616, 5.12183, 0.66", "64.1903, 19.2021, 5.33219, 0.66", "65.2609, 19.6765, 5.62816, 0.88", "65.8901, 20.0603, 5.82451, 0.88", "66.4846, 20.4966, 6.02576, 0.88", "67.0853, 20.9623, 6.22937, 0.88", "68.2058, 21.8109, 6.59881, 0.59", "69.0113, 22.3619, 6.89236, 0.59", "69.633, 22.7768, 7.16825, 0.81", "70.4506, 23.3484, 7.60449, 0.81", "71.0746, 23.8291, 7.99941, 0.81", "71.7783, 24.4069, 8.48975, 0.66", "72.7877, 25.2553, 9.22717, 0.59", "73.8447, 26.3209, 10.115, 0.59", "74.4034, 26.997, 10.6313, 0.59", "75.0268, 27.8743, 11.2312, 0.44", "75.4117, 28.4527, 11.5774, 0.44", "75.8222, 29.0841, 11.9063, 0.44", "76.841, 30.6421, 12.635, 0.44", "77.6522, 31.8226, 13.1677, 0.66", "78.3312, 32.7905, 13.5963, 0.66", "79.1707, 33.9802, 14.1114, 0.74", "79.8251, 34.9111, 14.5081, 0.96", "80.3303, 35.6078, 14.7993, 0.96", "81.0848, 36.544, 15.1749, 0.66", "81.8281, 37.4225, 15.5213, 0.66", "83.0103, 38.7932, 16.0562, 0.59", "84.106, 40.078, 16.5949, 0.59", "84.815, 40.9151, 16.9683, 0.81", "85.3525, 41.5619, 17.2717, 0.81", "86.2771, 42.6219, 17.7796, 0.52", "86.9994, 43.3747, 18.1399, 0.52", "87.9668, 44.3075, 18.5985, 0.52", "88.7836, 45.0729, 18.9772, 0.52", "89.5672, 45.794, 19.3276, 0.37", "90.9657, 47.0564, 19.9256, 0.37", "91.8859, 47.8793, 20.2992, 0.59", "92.4741, 48.38, 20.5077, 0.59", "93.7212, 49.426, 20.8948, 0.74", "94.3715, 49.9776, 21.0988, 0.74", "94.9238, 50.4616, 21.2886, 0.74", "95.7073, 51.2191, 21.6227, 0.74", "96.2252, 51.7757, 21.824, 0.44", "96.9546, 52.5992, 22.0056, 0.44", "97.5779, 53.29, 22.0771, 0.81", "98.6212, 54.4163, 22.0968, 0.81", "99.3843, 55.2169, 22.0321, 0.66", "100.714, 56.5817, 21.8493, 0.52", "101.718, 57.6608, 21.6553, 0.44", "102.375, 58.379, 21.4696, 0.44", "102.944, 59.0197, 21.2665, 0.44", "103.385, 59.5258, 21.0666, 0.44", "104.126, 60.3283, 20.7309, 0.74", "104.795, 60.9432, 20.5894, 0.59", "105.249, 61.3861, 20.5534, 0.59", "114.256, 69.5617, 26.1706, 0.59", "123.563, 77.597, 31.4957, 0.59" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-89.5721, -283.617, -5.54868, 0.52", "-90.4847, -285.953, -5.7321, 0.52", "-90.869, -286.897, -5.79808, 0.29", "-91.4021, -288.131, -5.89571, 0.44", "-91.905, -289.278, -5.99447, 0.44", "-92.3052, -290.166, -6.07692, 0.29", "-92.9152, -291.459, -6.22016, 0.29", "-93.5437, -292.687, -6.37993, 0.81", "-94.0159, -293.63, -6.53622, 1.18", "-94.262, -294.145, -6.63158, 1.4", "-94.6469, -295.002, -6.79355, 1.4", "-94.9822, -295.827, -6.94596, 1.11", "-95.6443, -297.611, -7.25635, 0.52", "-96.0852, -299.013, -7.4666, 0.44", "-96.3889, -300.14, -7.61177, 0.74", "-96.7354, -301.497, -7.76733, 0.81", "-96.9813, -302.52, -7.87763, 0.81", "-97.2158, -303.605, -7.98944, 0.74", "-97.5048, -305.041, -8.07133, 0.22", "-97.6327, -305.705, -8.09865, 0.22", "-97.8299, -306.874, -8.14704, 0.22", "-97.9666, -307.887, -8.15525, 0.66", "-98.084, -308.944, -8.11697, 0.81", "-98.233, -310.644, -7.98819, 0.66", "-98.322, -312.191, -7.79828, 0.22", "-98.3424, -313.572, -7.56869, 0.22", "-98.3107, -314.579, -7.3588, 0.22", "-98.2695, -315.553, -7.1014, 0.96", "-98.258, -316.054, -6.95848, 1.18", "-98.2486, -316.798, -6.74864, 1.18", "-98.2491, -317.408, -6.53949, 1.18", "-98.2908, -318.573, -6.1655, 0.74", "-98.4267, -320.336, -5.665, 0.22", "-98.4922, -320.917, -5.51354, 0.22", "-98.584, -321.594, -5.34263, 0.44", "-98.6672, -322.18, -5.21, 0.44", "-98.864, -323.716, -4.89788, 0.22", "-98.9696, -324.682, -4.73219, 0.96", "-99.0194, -325.422, -4.63164, 1.18", "-99.0513, -326.132, -4.54205, 1.25", "-99.1055, -327.483, -4.38558, 0.96", "-99.2318, -329.423, -4.19146, 0.29", "-99.3653, -330.95, -4.06418, 0.22", "-99.5637, -332.674, -3.96084, 0.22", "-99.6966, -333.56, -3.92275, 0.81", "-99.8411, -334.282, -3.90806, 0.96", "-100.487, -336.788, -3.89339, 0.22", "-100.737, -337.571, -3.90049, 0.22", "-101.176, -338.815, -3.91028, 0.59", "-101.519, -339.725, -3.91246, 0.59", "-102.021, -341.092, -3.90653, 0.52", "-102.407, -342.217, -3.88622, 0.52", "-102.894, -343.745, -3.81863, 0.52", "-103.08, -344.346, -3.78227, 0.96", "-103.385, -345.375, -3.70882, 0.96", "-103.714, -346.532, -3.61575, 0.59", "-104.28, -348.488, -3.39908, 0.22", "-104.849, -350.508, -3.1604, 0.22", "-105.115, -351.454, -3.04057, 0.22", "-105.365, -352.292, -2.92993, 0.96", "-105.541, -352.865, -2.84692, 1.18", "-105.913, -354.004, -2.65769, 0.52", "-106.657, -368.087, -3.01347, 0.52" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-89.5721, -283.617, -5.54868, 0.29", "-91.8431, -282.906, -5.43217, 0.29", "-93.0517, -282.843, -5.39388, 0.37", "-93.5999, -282.959, -5.38549, 0.37", "-94.8576, -283.42, -5.33053, 0.37", "-96.0478, -283.936, -5.40096, 0.52", "-97.076, -284.41, -5.52088, 0.59", "-98.446, -285.21, -5.78208, 0.59", "-99.6518, -285.968, -6.07109, 0.37", "-100.756, -286.683, -6.37941, 0.37", "-102.702, -287.974, -7.00858, 0.37", "-103.594, -288.515, -7.32075, 0.37", "-104.418, -288.977, -7.61792, 0.29", "-105.078, -289.314, -7.84958, 0.29", "-105.827, -289.685, -8.09133, 0.81", "-106.432, -290.009, -8.25982, 0.81", "-107.282, -290.552, -8.37548, 0.81", "-108.723, -291.613, -8.51354, 0.29", "-109.412, -292.184, -8.55357, 0.66", "-109.928, -292.646, -8.55419, 0.66", "-110.409, -293.107, -8.53381, 0.66", "-112.146, -294.868, -8.40287, 0.29", "-112.916, -295.687, -8.34749, 0.44", "-113.581, -296.393, -8.30222, 0.29", "-114.374, -297.207, -8.2692, 0.74", "-114.95, -297.758, -8.28486, 0.74", "-115.892, -298.552, -8.3735, 0.52", "-117.544, -299.764, -8.63552, 0.29", "-118.522, -300.416, -8.82677, 0.52", "-119.178, -300.82, -8.99638, 0.52", "-120.534, -301.606, -9.45563, 0.29", "-121.539, -302.136, -9.8286, 0.29", "-122.148, -302.413, -10.0714, 0.59", "-122.862, -302.704, -10.3892, 0.59", "-124.146, -303.206, -10.998, 0.22", "-124.87, -303.475, -11.3259, 0.29", "-125.967, -303.888, -11.7786, 0.29", "-126.486, -304.093, -11.9874, 0.29", "-127.814, -304.682, -12.5095, 0.37", "-128.835, -305.248, -12.8032, 0.37", "-129.904, -305.955, -12.9805, 0.52", "-131.148, -306.924, -13.0903, 1.55", "-131.896, -307.598, -13.1214, 1.92", "-132.615, -308.302, -13.1159, 1.92", "-134.29, -310.058, -12.9913, 0.29", "-135.389, -311.296, -12.88, 0.29", "-136.276, -312.366, -12.7557, 0.29", "-136.983, -313.232, -12.6357, 0.74", "-137.335, -313.666, -12.5742, 0.96", "-137.648, -314.036, -12.5275, 1.11", "-138.55, -315.129, -12.3984, 0.52", "-139.123, -315.862, -12.2683, 0.29", "-139.969, -316.922, -12.0326, 0.22", "-140.551, -317.61, -11.8625, 0.44", "-141.051, -318.17, -11.7145, 0.44", "-142.442, -319.703, -11.2848, 0.22", "-143.288, -320.614, -11.0106, 0.22", "-144.103, -321.455, -10.7538, 1.25", "-144.855, -322.215, -10.5004, 1.55", "-145.216, -322.561, -10.385, 1.62" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "83.9557, -20.312, -8.61726, 0.74", "85.6119, -21.17, -7.55451, 0.74", "86.0922, -21.4353, -7.27854, 0.74", "86.9136, -21.9299, -6.87377, 0.59", "87.8776, -22.5675, -6.49295, 0.59", "88.7727, -23.2098, -6.21375, 0.59", "89.2199, -23.5419, -6.09369, 0.59", "90.0994, -24.256, -5.94584, 0.59", "90.8485, -24.8889, -5.86316, 0.81", "91.8421, -25.7205, -5.75687, 0.81", "92.6617, -26.3769, -5.66822, 0.37", "93.5113, -27.0116, -5.56294, 0.37", "94.5048, -27.7443, -5.42672, 0.37", "95.5185, -28.5, -5.25288, 0.37", "96.4886, -29.1938, -5.04985, 0.37", "97.9465, -30.192, -4.68618, 0.22", "99.5015, -31.2269, -4.26199, 0.22", "107.778, -38.7227, -3.04757, 0.22" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "83.9557, -20.312, -8.61726, 0.37", "84.0118, -21.4796, -9.47225, 0.37", "84.111, -22.2295, -9.96917, 0.37", "84.2511, -22.9323, -10.412, 0.37", "84.451, -23.6763, -10.8028, 0.37", "84.6561, -24.3226, -11.1207, 0.37", "84.93, -25.084, -11.4704, 0.29", "85.4047, -26.1427, -11.9839, 0.22", "85.9458, -27.2467, -12.5795, 0.22", "86.6648, -28.5955, -13.3887, 0.22", "86.9356, -29.0853, -13.7163, 1.18", "87.1347, -29.475, -14.0316, 1.4", "87.5458, -30.6286, -15.1806, 1.4", "87.6742, -31.5298, -16.2513, 0.44", "87.6564, -31.8347, -16.6294, 0.44", "87.5558, -32.2977, -17.2141, 0.29", "87.3084, -33.0948, -18.1259, 0.29", "86.9298, -34.1218, -19.2311, 0.22", "86.5844, -34.9484, -19.9699, 0.22", "86.3287, -35.4521, -20.3942, 1.03", "86.1906, -35.7129, -20.5956, 1.33", "85.9878, -36.0869, -20.8514, 1.33" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-145.216, -322.561, -10.385, 0.29", "-145.833, -322.007, -10.3646, 0.29", "-145.969, -321.884, -10.3641, 0.52", "-146.179, -321.691, -10.3693, 0.59", "-147.37, -320.594, -10.4728, 0.22", "-147.704, -320.289, -10.5136, 0.22", "-148.162, -319.879, -10.5814, 0.66", "-148.405, -319.656, -10.6351, 0.66", "-149.431, -318.75, -10.8976, 0.22", "-149.853, -318.393, -11.0175, 0.22", "-150.24, -318.093, -11.1317, 0.52", "-150.515, -317.896, -11.2126, 0.66", "-151.27, -317.395, -11.4315, 0.22", "-152.767, -316.424, -11.8622, 0.22", "-153.734, -315.828, -12.1348, 0.22", "-154.632, -315.283, -12.3658, 1.18", "-154.884, -315.133, -12.4304, 1.4", "-155.272, -314.91, -12.5271, 0.74" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-145.216, -322.561, -10.385, 0.22", "-145.924, -323.672, -10.3709, 0.22", "-146.497, -324.584, -10.306, 0.22", "-146.742, -324.995, -10.2665, 0.44", "-146.847, -325.175, -10.2473, 0.44", "-147.813, -326.9, -10.0556, 0.22", "-148.265, -327.707, -9.96599, 0.44", "-148.649, -328.385, -9.8823, 0.22", "-148.89, -328.843, -9.81435, 0.59", "-149.092, -329.239, -9.74829, 0.66", "-149.241, -329.543, -9.6904, 0.44", "-152.13, -336.59, -8.07813, 0.44" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_49", "dend_42", "dend_27", "dend_20", "dend_11", "dend_0", "dend_51", "dend_50", "dend_44", "dend_43", "dend_33", "dend_28", "dend_22", "dend_21", "dend_13", "dend_12", "dend_2", "dend_1", "dend_48", "dend_45", "dend_41", "dend_34", "dend_30", "dend_29", "dend_24", "dend_23", "dend_17", "dend_14", "dend_8", "dend_3", "dend_47", "dend_46", "dend_40", "dend_35", "dend_32", "dend_31", "dend_26", "dend_25", "dend_19", "dend_18", "dend_16", "dend_15", "dend_10", "dend_9", "dend_5", "dend_4", "dend_39", "dend_36", "dend_7", "dend_6", "dend_38", "dend_37" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_49", "dend_42", "dend_27", "dend_20", "dend_11", "dend_0", "dend_51", "dend_50", "dend_44", "dend_43", "dend_33", "dend_28", "dend_22", "dend_21", "dend_13", "dend_12", "dend_2", "dend_1", "dend_48", "dend_45", "dend_41", "dend_34", "dend_30", "dend_29", "dend_24", "dend_23", "dend_17", "dend_14", "dend_8", "dend_3", "dend_47", "dend_46", "dend_40", "dend_35", "dend_32", "dend_31", "dend_26", "dend_25", "dend_19", "dend_18", "dend_16", "dend_15", "dend_10", "dend_9", "dend_5", "dend_4", "dend_39", "dend_36", "dend_7", "dend_6", "dend_38", "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L6_ChC_9b41babcdb_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_49, id: dend_49, parent: soma_0
create dend_49
public dend_49
// Section: dend_42, id: dend_42, parent: soma_0
create dend_42
public dend_42
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_33, id: dend_33, parent: dend_27
create dend_33
public dend_33
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_41, id: dend_41, parent: dend_33
create dend_41
public dend_41
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_55
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_49(0), soma_0(0.49999994654580493)
    connect dend_42(0), soma_0(0.49999994654580493)
    connect dend_27(0), soma_0(0.49999994654580493)
    connect dend_20(0), soma_0(0.49999994654580493)
    connect dend_11(0), soma_0(0.49999994654580493)
    connect dend_0(0), soma_0(0.49999994654580493)
    connect axon_0(0), soma_0(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_33(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_41(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.44259, -9.54825, -1.27888, 2.30647 ) }
    soma_0 { pt3dadd( -1.2819, -8.63231, -1.15821, 3.63473 ) }
    soma_0 { pt3dadd( -1.1212, -7.71637, -1.03754, 6.81375 ) }
    soma_0 { pt3dadd( -0.960502, -6.80044, -0.916865, 9.18535 ) }
    soma_0 { pt3dadd( -0.799804, -5.8845, -0.796194, 10.2157 ) }
    soma_0 { pt3dadd( -0.639107, -4.96856, -0.675522, 11.1797 ) }
    soma_0 { pt3dadd( -0.478409, -4.05262, -0.554851, 12.0566 ) }
    soma_0 { pt3dadd( -0.317712, -3.13668, -0.43418, 12.6775 ) }
    soma_0 { pt3dadd( -0.157014, -2.22074, -0.313508, 13.0617 ) }
    soma_0 { pt3dadd( 0.00368301, -1.3048, -0.192837, 13.2009 ) }
    soma_0 { pt3dadd( 0.16438, -0.388856, -0.0721652, 13.2418 ) }
    soma_0 { pt3dadd( 0.325078, 0.527084, 0.0485063, 12.889 ) }
    soma_0 { pt3dadd( 0.485775, 1.44302, 0.169178, 12.4912 ) }
    soma_0 { pt3dadd( 0.646473, 2.35896, 0.289849, 12.2347 ) }
    soma_0 { pt3dadd( 0.80717, 3.2749, 0.410521, 12.0486 ) }
    soma_0 { pt3dadd( 0.967868, 4.19084, 0.531192, 11.9346 ) }
    soma_0 { pt3dadd( 1.12856, 5.10678, 0.651864, 11.8925 ) }
    soma_0 { pt3dadd( 1.28926, 6.02272, 0.772535, 11.1454 ) }
    soma_0 { pt3dadd( 1.44996, 6.93866, 0.893206, 8.66152 ) }
    soma_0 { pt3dadd( 1.61066, 7.8546, 1.01388, 5.25757 ) }
    soma_0 { pt3dadd( 1.77135, 8.77054, 1.13455, 3.12251 ) }
    // Section: dend_49, id: dend_49, parent: soma_0 (entry count 21/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -3.66144, -7.26205, -8.0337, 1.77 ) }
    dend_49 { pt3dadd( -3.66144, -7.26205, -8.0337, 1.77 ) }
    dend_49 { pt3dadd( -3.31546, -8.40929, -8.19546, 1.77 ) }
    dend_49 { pt3dadd( -3.05196, -9.2633, -8.32432, 1.77 ) }
    dend_49 { pt3dadd( -2.64922, -10.6019, -8.51448, 1.55 ) }
    dend_49 { pt3dadd( -2.41268, -11.4895, -8.66551, 1.69 ) }
    dend_49 { pt3dadd( -2.25075, -12.1792, -8.79711, 1.77 ) }
    dend_49 { pt3dadd( -2.10889, -12.8502, -8.95629, 1.77 ) }
    dend_49 { pt3dadd( -1.9288, -13.7497, -9.22386, 1.25 ) }
    dend_49 { pt3dadd( -1.63687, -15.1296, -9.58457, 0.74 ) }
    dend_49 { pt3dadd( -2.19803, -14.5283, -10.2025, 0.74 ) }
    dend_49 { pt3dadd( -2.63564, -14.3158, -10.8601, 0.74 ) }
    dend_49 { pt3dadd( -3.40296, -14.0269, -12.0423, 1.18 ) }
    dend_49 { pt3dadd( -3.81544, -13.9543, -12.7163, 1.18 ) }
    dend_49 { pt3dadd( -4.43415, -13.8084, -13.6481, 0.52 ) }
    dend_49 { pt3dadd( -5.1663, -13.5429, -14.649, 0.52 ) }
    dend_49 { pt3dadd( -5.99855, -13.5814, -15.914, 0.74 ) }
    dend_49 { pt3dadd( -6.34926, -13.7747, -16.7746, 0.74 ) }
    dend_49 { pt3dadd( -6.51658, -14.0726, -17.5255, 0.74 ) }
    dend_49 { pt3dadd( -6.78662, -14.4565, -18.6589, 1.11 ) }
    dend_49 { pt3dadd( -7.02767, -14.6569, -19.3843, 1.69 ) }
    dend_49 { pt3dadd( -7.42218, -14.7949, -20.1168, 1.77 ) }
    dend_49 { pt3dadd( -8.32093, -15.0603, -21.7355, 1.33 ) }
    dend_49 { pt3dadd( -8.79927, -15.2978, -22.7223, 1.4 ) }
    dend_49 { pt3dadd( -9.08108, -15.6142, -23.4634, 1.55 ) }
    dend_49 { pt3dadd( -9.24131, -16.1405, -24.2394, 1.33 ) }
    dend_49 { pt3dadd( -9.25874, -17.0479, -25.2245, 0.74 ) }
    dend_49 { pt3dadd( -9.10881, -17.7908, -25.7969, 1.03 ) }
    dend_49 { pt3dadd( -8.8898, -18.4145, -26.1588, 1.47 ) }
    dend_49 { pt3dadd( -8.65742, -18.8245, -26.4187, 1.62 ) }
    dend_49 { pt3dadd( -8.28932, -19.314, -26.7772, 1.62 ) }
    dend_49 { pt3dadd( -7.87215, -19.7075, -27.1071, 0.52 ) }
    dend_49 { pt3dadd( -7.37628, -20.0776, -27.471, 0.52 ) }
    dend_49 { pt3dadd( -7.25291, -20.271, -27.7839, 0.52 ) }
    dend_49 { pt3dadd( -7.27799, -20.6669, -28.5941, 0.66 ) }
    dend_49 { pt3dadd( -7.43839, -21.0557, -29.4503, 0.74 ) }
    dend_49 { pt3dadd( -7.69999, -21.2143, -30.0542, 0.44 ) }
    dend_49 { pt3dadd( -8.15074, -21.2123, -30.6931, 0.44 ) }
    dend_49 { pt3dadd( -8.81514, -21.1307, -31.5056, 0.44 ) }
    dend_49 { pt3dadd( -9.28746, -21.1788, -32.2284, 0.44 ) }
    dend_49 { pt3dadd( -9.55008, -21.2735, -32.7411, 0.44 ) }
    dend_49 { pt3dadd( -10.0383, -21.5897, -33.7372, 0.66 ) }
    dend_49 { pt3dadd( -10.2768, -22.0806, -34.7437, 1.11 ) }
    dend_49 { pt3dadd( -10.4001, -22.2605, -35.0932, 0.96 ) }
    dend_49 { pt3dadd( -10.7226, -22.6399, -35.8946, 1.18 ) }
    dend_49 { pt3dadd( -10.848, -22.8023, -36.2079, 1.69 ) }
    dend_49 { pt3dadd( -11.0519, -23.0522, -36.6619, 1.69 ) }
    dend_49 { pt3dadd( -11.8289, -23.9368, -38.1812, 0.88 ) }
    dend_49 { pt3dadd( -12.3035, -24.3577, -38.9745, 2.14 ) }
    dend_49 { pt3dadd( -13.3801, -24.9266, -40.4405, 2.28 ) }
    dend_49 { pt3dadd( -13.5313, -24.9677, -40.6083, 2.28 ) }
    dend_49 { pt3dadd( -14.4046, -25.0484, -41.423, 0.44 ) }
    dend_49 { pt3dadd( -14.9032, -25.0084, -41.7894, 0.44 ) }
    dend_49 { pt3dadd( -15.4921, -24.8882, -42.1272, 0.81 ) }
    dend_49 { pt3dadd( -16.0962, -24.7345, -42.488, 0.81 ) }
    dend_49 { pt3dadd( -16.3716, -24.6966, -42.6854, 0.96 ) }
    dend_49 { pt3dadd( -16.9188, -24.7459, -43.1664, 0.66 ) }
    dend_49 { pt3dadd( -17.469, -24.933, -43.7313, 1.99 ) }
    dend_49 { pt3dadd( -17.8811, -25.1569, -44.208, 2.21 ) }
    dend_49 { pt3dadd( -18.2835, -25.452, -44.7058, 2.5 ) }
    dend_49 { pt3dadd( -19.3906, -26.4653, -46.1815, 0.66 ) }
    dend_49 { pt3dadd( -19.9646, -27.1263, -47.0531, 0.66 ) }
    dend_49 { pt3dadd( -20.3191, -27.6402, -47.6518, 0.66 ) }
    dend_49 { pt3dadd( -20.6842, -28.2514, -48.2926, 1.55 ) }
    dend_49 { pt3dadd( -20.8537, -28.5521, -48.5763, 2.21 ) }
    dend_49 { pt3dadd( -21.0173, -28.8661, -48.8471, 2.21 ) }
    dend_49 { pt3dadd( -21.4685, -29.8645, -49.6614, 0.29 ) }
    dend_49 { pt3dadd( -21.7098, -30.5085, -50.2275, 0.29 ) }
    dend_49 { pt3dadd( -21.8676, -30.9532, -50.6107, 1.55 ) }
    dend_49 { pt3dadd( -22.0644, -31.4897, -51.0629, 1.99 ) }
    dend_49 { pt3dadd( -22.2453, -31.97, -51.4772, 2.36 ) }
    dend_49 { pt3dadd( -22.754, -33.2763, -52.6386, 0.59 ) }
    dend_49 { pt3dadd( -23.0069, -33.9459, -53.2742, 1.84 ) }
    dend_49 { pt3dadd( -23.1064, -34.2567, -53.6052, 1.84 ) }
    // Section: dend_42, id: dend_42, parent: soma_0 (entry count 95/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -6.50143, -1.69206, 2.1563, 1.92 ) }
    dend_42 { pt3dadd( -6.50143, -1.69206, 2.1563, 1.92 ) }
    dend_42 { pt3dadd( -6.86576, -2.33697, 2.12732, 1.92 ) }
    dend_42 { pt3dadd( -7.48548, -3.61576, 2.0643, 1.92 ) }
    dend_42 { pt3dadd( -8.12454, -4.78242, 2.00073, 2.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_42 { pt3dadd( -8.61716, -5.57142, 1.94696, 2.36 ) }
    dend_42 { pt3dadd( -9.31522, -6.52614, 1.87283, 2.28 ) }
    dend_42 { pt3dadd( -10.0821, -7.40761, 1.78805, 2.36 ) }
    dend_42 { pt3dadd( -10.9402, -8.22329, 1.67797, 2.36 ) }
    dend_42 { pt3dadd( -12.272, -9.13776, 1.52086, 1.77 ) }
    dend_42 { pt3dadd( -13.0045, -9.43865, 1.46581, 1.77 ) }
    dend_42 { pt3dadd( -14.1531, -9.68393, 1.43519, 1.99 ) }
    dend_42 { pt3dadd( -15.1766, -9.78464, 1.50018, 1.99 ) }
    dend_42 { pt3dadd( -15.6831, -9.80294, 1.5627, 1.99 ) }
    dend_42 { pt3dadd( -16.4379, -9.83957, 1.69738, 1.77 ) }
    dend_42 { pt3dadd( -17.6064, -10.0432, 1.99967, 1.47 ) }
    dend_42 { pt3dadd( -18.4497, -10.3444, 2.23828, 1.47 ) }
    dend_42 { pt3dadd( -19.5127, -10.9582, 2.50688, 1.33 ) }
    dend_42 { pt3dadd( -19.9959, -11.3336, 2.59686, 1.99 ) }
    dend_42 { pt3dadd( -20.8172, -12.1011, 2.68701, 1.99 ) }
    dend_42 { pt3dadd( -21.7632, -13.0985, 2.69909, 1.77 ) }
    dend_42 { pt3dadd( -22.8096, -14.3171, 2.60701, 1.92 ) }
    dend_42 { pt3dadd( -23.7773, -15.4753, 2.40959, 1.69 ) }
    dend_42 { pt3dadd( -24.3722, -16.1477, 2.21824, 1.69 ) }
    dend_42 { pt3dadd( -25.1178, -16.905, 1.93637, 1.84 ) }
    dend_42 { pt3dadd( -25.7978, -17.5384, 1.67666, 1.84 ) }
    dend_42 { pt3dadd( -26.6781, -18.3294, 1.35418, 1.69 ) }
    dend_42 { pt3dadd( -27.6455, -19.2107, 1.05236, 1.55 ) }
    dend_42 { pt3dadd( -28.6225, -20.1644, 0.824368, 1.4 ) }
    dend_42 { pt3dadd( -29.4229, -20.9495, 0.661886, 1.25 ) }
    dend_42 { pt3dadd( -30.2604, -21.8082, 0.511013, 1.33 ) }
    dend_42 { pt3dadd( -31.0536, -22.7008, 0.42325, 1.47 ) }
    dend_42 { pt3dadd( -31.7961, -23.6479, 0.458843, 1.62 ) }
    dend_42 { pt3dadd( -32.3211, -24.5338, 0.643773, 1.77 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 29/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 0.448551, -8.71205, -4.9037, 3.61 ) }
    dend_27 { pt3dadd( 0.448551, -8.71205, -4.9037, 3.61 ) }
    dend_27 { pt3dadd( 0.640751, -10.071, -4.84034, 2.95 ) }
    dend_27 { pt3dadd( 0.916222, -12.1799, -4.74501, 2.8 ) }
    dend_27 { pt3dadd( 1.07506, -13.5932, -4.65418, 2.8 ) }
    dend_27 { pt3dadd( 1.21341, -15.1736, -4.53972, 3.02 ) }
    dend_27 { pt3dadd( 1.2796, -16.2225, -4.4631, 3.02 ) }
    dend_27 { pt3dadd( 1.30729, -17.2514, -4.38391, 3.02 ) }
    dend_27 { pt3dadd( 1.28059, -18.8016, -4.26247, 3.02 ) }
    dend_27 { pt3dadd( 1.17233, -20.4417, -4.12892, 2.36 ) }
    dend_27 { pt3dadd( 0.881789, -23.3104, -3.98296, 2.36 ) }
    dend_27 { pt3dadd( 0.672044, -24.9174, -3.96871, 2.43 ) }
    dend_27 { pt3dadd( 0.430754, -26.4729, -4.00509, 2.43 ) }
    dend_27 { pt3dadd( 0.115368, -28.2961, -4.10831, 2.43 ) }
    dend_27 { pt3dadd( -0.375001, -30.8134, -4.31898, 2.28 ) }
    dend_27 { pt3dadd( -0.903403, -33.3962, -4.59457, 2.14 ) }
    dend_27 { pt3dadd( -1.64112, -36.8179, -5.02576, 2.06 ) }
    dend_27 { pt3dadd( -2.1531, -39.1926, -5.36255, 2.43 ) }
    dend_27 { pt3dadd( -2.47651, -40.7049, -5.60699, 2.58 ) }
    dend_27 { pt3dadd( -2.82328, -42.2985, -5.89941, 2.58 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 49/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -0.381405, 7.60794, -7.5337, 1.62 ) }
    dend_20 { pt3dadd( -0.465614, 8.36794, -7.59148, 1.62 ) }
    dend_20 { pt3dadd( -0.598774, 9.48606, -7.62508, 1.92 ) }
    dend_20 { pt3dadd( -0.799592, 10.9797, -7.68318, 1.33 ) }
    dend_20 { pt3dadd( -1.05286, 12.5874, -7.76876, 1.69 ) }
    dend_20 { pt3dadd( -1.26059, 13.7769, -7.81231, 2.21 ) }
    dend_20 { pt3dadd( -1.43865, 14.7713, -7.80482, 2.21 ) }
    dend_20 { pt3dadd( -1.65303, 15.8907, -7.75279, 1.99 ) }
    dend_20 { pt3dadd( -1.85423, 16.8426, -7.67382, 1.77 ) }
    dend_20 { pt3dadd( -2.09314, 17.9015, -7.55771, 1.99 ) }
    dend_20 { pt3dadd( -2.35225, 19.0222, -7.43012, 1.99 ) }
    dend_20 { pt3dadd( -2.79514, 20.9912, -7.24409, 1.11 ) }
    dend_20 { pt3dadd( -3.06854, 22.2221, -7.16428, 1.11 ) }
    dend_20 { pt3dadd( -3.36151, 23.4606, -7.1326, 1.25 ) }
    dend_20 { pt3dadd( -3.64083, 24.5005, -7.12715, 1.4 ) }
    dend_20 { pt3dadd( -4.00645, 25.637, -7.19031, 0.81 ) }
    dend_20 { pt3dadd( -4.43704, 26.7136, -7.35175, 0.74 ) }
    dend_20 { pt3dadd( -4.77922, 27.4176, -7.52362, 0.74 ) }
    dend_20 { pt3dadd( -5.20103, 28.1812, -7.7561, 0.74 ) }
    dend_20 { pt3dadd( -5.69122, 29.0129, -8.05171, 0.96 ) }
    dend_20 { pt3dadd( -6.15336, 29.7957, -8.35027, 0.96 ) }
    dend_20 { pt3dadd( -6.63552, 30.5817, -8.65734, 1.55 ) }
    dend_20 { pt3dadd( -7.18013, 31.463, -9.01407, 2.06 ) }
    dend_20 { pt3dadd( -7.64091, 32.2654, -9.34677, 2.43 ) }
    dend_20 { pt3dadd( -8.16934, 33.3459, -9.79841, 2.36 ) }
    dend_20 { pt3dadd( -8.76766, 34.8179, -10.3978, 2.58 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -2.32144, 8.32794, 0.346303, 2.5 ) }
    dend_11 { pt3dadd( -2.37291, 8.44155, 0.346888, 2.5 ) }
    dend_11 { pt3dadd( -3.18902, 10.0332, 0.315351, 1.77 ) }
    dend_11 { pt3dadd( -3.75865, 11.1088, 0.321181, 1.55 ) }
    dend_11 { pt3dadd( -4.42675, 12.333, 0.375588, 1.55 ) }
    dend_11 { pt3dadd( -4.93582, 13.2672, 0.451486, 1.33 ) }
    dend_11 { pt3dadd( -5.71254, 14.7161, 0.612988, 1.33 ) }
    dend_11 { pt3dadd( -6.19826, 15.6013, 0.737251, 1.55 ) }
    dend_11 { pt3dadd( -6.9311, 16.9126, 0.948438, 1.55 ) }
    dend_11 { pt3dadd( -7.6922, 18.3387, 1.18269, 1.62 ) }
    dend_11 { pt3dadd( -8.29986, 19.6097, 1.37943, 1.4 ) }
    dend_11 { pt3dadd( -8.8664, 21.0086, 1.57157, 1.4 ) }
    dend_11 { pt3dadd( -9.18868, 21.8678, 1.69091, 1.4 ) }
    dend_11 { pt3dadd( -9.68984, 23.2498, 1.87231, 1.4 ) }
    dend_11 { pt3dadd( -10.1656, 24.6302, 1.99894, 1.4 ) }
    dend_11 { pt3dadd( -10.7006, 26.3366, 2.08479, 1.77 ) }
    dend_11 { pt3dadd( -11.151, 27.8674, 2.10084, 2.73 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 92/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 6.82855, 4.18794, 1.3463, 2.58 ) }
    dend_0 { pt3dadd( 6.86919, 4.22759, 1.34999, 2.58 ) }
    dend_0 { pt3dadd( 7.38144, 4.74006, 1.40348, 2.58 ) }
    dend_0 { pt3dadd( 7.96264, 5.32756, 1.48215, 1.84 ) }
    dend_0 { pt3dadd( 8.39289, 5.75381, 1.55195, 2.06 ) }
    dend_0 { pt3dadd( 8.94841, 6.30263, 1.65632, 2.06 ) }
    dend_0 { pt3dadd( 9.31552, 6.65687, 1.74903, 2.58 ) }
    dend_0 { pt3dadd( 9.72294, 7.0474, 1.87546, 2.58 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_0 { pt3dadd( 9.99233, 7.30982, 1.97761, 2.58 ) }
    dend_0 { pt3dadd( 10.4703, 7.75461, 2.18182, 2.58 ) }
    dend_0 { pt3dadd( 10.8065, 8.0453, 2.33347, 2.43 ) }
    dend_0 { pt3dadd( 11.511, 8.61893, 2.67859, 2.21 ) }
    dend_0 { pt3dadd( 12.0249, 9.01319, 2.94078, 1.99 ) }
    dend_0 { pt3dadd( 12.4373, 9.31109, 3.13846, 1.99 ) }
    dend_0 { pt3dadd( 12.9721, 9.64064, 3.36946, 1.69 ) }
    dend_0 { pt3dadd( 13.4192, 9.82926, 3.53903, 1.69 ) }
    dend_0 { pt3dadd( 14.2108, 9.93766, 3.79926, 2.06 ) }
    dend_0 { pt3dadd( 14.7077, 9.85086, 3.93457, 2.06 ) }
    dend_0 { pt3dadd( 15.8818, 9.3392, 4.24869, 1.69 ) }
    dend_0 { pt3dadd( 16.6893, 8.89628, 4.45277, 1.92 ) }
    dend_0 { pt3dadd( 17.9518, 8.03819, 4.74928, 1.92 ) }
    dend_0 { pt3dadd( 19.154, 7.0506, 5.00558, 2.06 ) }
    dend_0 { pt3dadd( 19.7703, 6.43523, 5.12154, 2.28 ) }
    dend_0 { pt3dadd( 20.2325, 5.87458, 5.21475, 2.28 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 16/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.77135, 8.77054, 1.13455, 0.827998 ) }
    axon_0 { pt3dadd( 4.36343, 23.5449, 1.13455, 0.827998 ) }
    axon_0 { pt3dadd( 6.95552, 38.3192, 1.13455, 0.827998 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 19/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -23.1064, -34.2567, -53.6052, 0.96 ) }
    dend_51 { pt3dadd( -21.4956, -37.384, -60.009, 0.96 ) }
    dend_51 { pt3dadd( -21.2025, -38.0901, -61.2107, 0.96 ) }
    dend_51 { pt3dadd( -20.8446, -39.0528, -62.6344, 0.96 ) }
    dend_51 { pt3dadd( -20.3619, -40.4089, -64.4655, 1.55 ) }
    dend_51 { pt3dadd( -19.9925, -41.5563, -65.8613, 0.22 ) }
    dend_51 { pt3dadd( -19.6135, -42.8941, -67.2435, 0.22 ) }
    dend_51 { pt3dadd( -19.4475, -43.7692, -67.8, 1.11 ) }
    dend_51 { pt3dadd( -19.3105, -44.5945, -68.2508, 1.4 ) }
    dend_51 { pt3dadd( -19.0822, -45.7156, -68.7659, 1.4 ) }
    dend_51 { pt3dadd( -18.5063, -48.1337, -69.7203, 0.22 ) }
    dend_51 { pt3dadd( -17.7744, -50.6093, -70.6271, 0.22 ) }
    dend_51 { pt3dadd( -17.4922, -51.4214, -70.9122, 0.74 ) }
    dend_51 { pt3dadd( -17.3291, -51.8561, -71.0509, 0.74 ) }
    dend_51 { pt3dadd( -16.4289, -54.1746, -71.7191, 0.15 ) }
    dend_51 { pt3dadd( -16.2812, -54.5344, -71.8072, 0.37 ) }
    dend_51 { pt3dadd( -15.3616, -56.4922, -72.2243, 0.22 ) }
    dend_51 { pt3dadd( -14.7938, -57.5787, -72.4882, 0.22 ) }
    dend_51 { pt3dadd( -14.3424, -58.4456, -72.695, 0.74 ) }
    dend_51 { pt3dadd( -13.9285, -59.3299, -72.8831, 0.88 ) }
    dend_51 { pt3dadd( -13.8306, -59.632, -72.9357, 0.88 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 40/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -23.1064, -34.2567, -53.6052, 2.87 ) }
    dend_50 { pt3dadd( -23.7645, -34.499, -53.6843, 2.87 ) }
    dend_50 { pt3dadd( -25.8372, -35.438, -54.0303, 0.22 ) }
    dend_50 { pt3dadd( -27.7028, -36.5377, -54.4014, 0.22 ) }
    dend_50 { pt3dadd( -28.6019, -37.123, -54.5874, 1.69 ) }
    dend_50 { pt3dadd( -28.884, -37.3191, -54.6467, 2.21 ) }
    dend_50 { pt3dadd( -29.3419, -37.6517, -54.7436, 2.21 ) }
    dend_50 { pt3dadd( -31.016, -39.0427, -55.0943, 0.22 ) }
    dend_50 { pt3dadd( -32.4765, -40.5125, -55.4523, 0.22 ) }
    dend_50 { pt3dadd( -32.9275, -41.0073, -55.5742, 1.25 ) }
    dend_50 { pt3dadd( -33.2955, -41.4157, -55.675, 1.25 ) }
    dend_50 { pt3dadd( -33.7848, -41.9515, -55.8157, 1.25 ) }
    dend_50 { pt3dadd( -34.7861, -42.9757, -56.0991, 0.15 ) }
    dend_50 { pt3dadd( -35.3552, -43.5331, -56.2531, 0.15 ) }
    dend_50 { pt3dadd( -35.8062, -43.927, -56.3786, 0.96 ) }
    dend_50 { pt3dadd( -36.3214, -44.332, -56.537, 1.18 ) }
    dend_50 { pt3dadd( -36.5591, -44.4948, -56.6123, 1.18 ) }
    dend_50 { pt3dadd( -38.1046, -45.3998, -57.182, 0.22 ) }
    dend_50 { pt3dadd( -38.5197, -45.5783, -57.3507, 0.52 ) }
    dend_50 { pt3dadd( -38.8985, -45.7181, -57.5072, 0.52 ) }
    dend_50 { pt3dadd( -39.8745, -46.046, -57.9024, 0.22 ) }
    dend_50 { pt3dadd( -40.481, -46.2427, -58.1543, 1.25 ) }
    dend_50 { pt3dadd( -41.3697, -46.5656, -58.5131, 1.4 ) }
    dend_50 { pt3dadd( -43.0774, -47.3498, -59.2606, 0.22 ) }
    dend_50 { pt3dadd( -44.2357, -48.0382, -59.7854, 0.22 ) }
    dend_50 { pt3dadd( -44.6709, -48.3688, -59.9925, 0.74 ) }
    dend_50 { pt3dadd( -45.2219, -48.9085, -60.2665, 0.88 ) }
    dend_50 { pt3dadd( -45.9731, -49.9904, -60.8004, 0.22 ) }
    dend_50 { pt3dadd( -46.5417, -51.3816, -61.3624, 0.22 ) }
    dend_50 { pt3dadd( -46.7477, -52.2887, -61.6871, 1.99 ) }
    dend_50 { pt3dadd( -46.8184, -52.8441, -61.8587, 2.36 ) }
    dend_50 { pt3dadd( -46.8658, -53.3888, -62.0265, 2.36 ) }
    dend_50 { pt3dadd( -46.9987, -56.4419, -62.961, 0.15 ) }
    dend_50 { pt3dadd( -46.996, -58.3342, -63.5786, 0.15 ) }
    dend_50 { pt3dadd( -46.9814, -58.8269, -63.7209, 0.44 ) }
    dend_50 { pt3dadd( -46.9239, -59.7754, -63.9725, 0.44 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 76/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -32.3211, -24.5338, 0.643773, 0.96 ) }
    dend_44 { pt3dadd( -33.1367, -24.8864, 0.300678, 0.96 ) }
    dend_44 { pt3dadd( -33.913, -25.2507, -0.0286729, 1.25 ) }
    dend_44 { pt3dadd( -35.0319, -25.7748, -0.498253, 1.25 ) }
    dend_44 { pt3dadd( -36.9858, -26.6165, -1.2673, 1.18 ) }
    dend_44 { pt3dadd( -38.3191, -27.1242, -1.75173, 1.11 ) }
    dend_44 { pt3dadd( -39.3469, -27.489, -2.11647, 0.88 ) }
    dend_44 { pt3dadd( -40.6989, -27.98, -2.61731, 0.96 ) }
    dend_44 { pt3dadd( -41.4723, -28.2617, -2.91102, 0.96 ) }
    dend_44 { pt3dadd( -42.6071, -28.6847, -3.34852, 0.96 ) }
    dend_44 { pt3dadd( -43.7305, -29.1, -3.7148, 0.96 ) }
    dend_44 { pt3dadd( -44.69, -29.4373, -3.97078, 1.18 ) }
    dend_44 { pt3dadd( -45.8739, -29.8286, -4.23507, 1.03 ) }
    dend_44 { pt3dadd( -46.4645, -29.9976, -4.30726, 1.03 ) }
    dend_44 { pt3dadd( -47.7099, -30.2912, -4.32584, 1.18 ) }
    dend_44 { pt3dadd( -48.4749, -30.4236, -4.22889, 1.18 ) }
    dend_44 { pt3dadd( -50.2223, -30.5817, -3.68776, 0.96 ) }
    dend_44 { pt3dadd( -50.868, -30.5949, -3.43152, 1.11 ) }
    dend_44 { pt3dadd( -52.1297, -30.5881, -2.87149, 1.11 ) }
    dend_44 { pt3dadd( -53.1418, -30.607, -2.40821, 1.11 ) }
    dend_44 { pt3dadd( -54.3326, -30.6746, -1.85876, 1.11 ) }
    dend_44 { pt3dadd( -55.9212, -30.8977, -1.12938, 1.55 ) }
    dend_44 { pt3dadd( -57.0551, -31.188, -0.639273, 1.03 ) }
    dend_44 { pt3dadd( -58.4102, -31.7038, -0.0560725, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_44 { pt3dadd( -59.5632, -32.3125, 0.419959, 0.74 ) }
    dend_44 { pt3dadd( -60.2218, -32.7745, 0.682703, 0.74 ) }
    dend_44 { pt3dadd( -61.0665, -33.5435, 0.972273, 0.74 ) }
    dend_44 { pt3dadd( -61.8984, -34.4886, 1.19622, 0.66 ) }
    dend_44 { pt3dadd( -62.6393, -35.4724, 1.3717, 0.88 ) }
    dend_44 { pt3dadd( -63.1201, -36.1948, 1.46106, 1.03 ) }
    dend_44 { pt3dadd( -63.6192, -37.048, 1.54324, 1.03 ) }
    dend_44 { pt3dadd( -64.2557, -38.1492, 1.63177, 0.88 ) }
    dend_44 { pt3dadd( -65.0487, -39.4449, 1.71548, 0.88 ) }
    dend_44 { pt3dadd( -65.4978, -40.0955, 1.74322, 0.88 ) }
    dend_44 { pt3dadd( -66.166, -40.8948, 1.76966, 0.88 ) }
    dend_44 { pt3dadd( -67.4719, -42.1749, 1.80152, 0.88 ) }
    dend_44 { pt3dadd( -68.238, -42.7548, 1.8054, 0.88 ) }
    dend_44 { pt3dadd( -69.3383, -43.3639, 1.79202, 0.88 ) }
    dend_44 { pt3dadd( -70.0806, -43.6444, 1.76676, 0.96 ) }
    dend_44 { pt3dadd( -70.9538, -43.8917, 1.70351, 0.96 ) }
    dend_44 { pt3dadd( -71.7482, -44.0534, 1.64247, 0.96 ) }
    dend_44 { pt3dadd( -72.6386, -44.2051, 1.5795, 0.52 ) }
    dend_44 { pt3dadd( -73.2469, -44.4125, 1.55959, 0.52 ) }
    dend_44 { pt3dadd( -73.7066, -44.7789, 1.60872, 0.52 ) }
    dend_44 { pt3dadd( -74.1592, -45.4577, 1.80029, 0.81 ) }
    dend_44 { pt3dadd( -74.5113, -46.1715, 2.05487, 0.96 ) }
    dend_44 { pt3dadd( -74.7714, -46.9947, 2.37323, 0.96 ) }
    dend_44 { pt3dadd( -75.0658, -48.4684, 2.96397, 0.81 ) }
    dend_44 { pt3dadd( -75.1648, -49.1888, 3.26435, 0.81 ) }
    dend_44 { pt3dadd( -75.2536, -50.097, 3.68803, 1.11 ) }
    dend_44 { pt3dadd( -75.3407, -50.6071, 3.96705, 1.11 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 27/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -32.3211, -24.5338, 0.643773, 1.33 ) }
    dend_43 { pt3dadd( -33.0083, -24.7484, 1.26184, 1.33 ) }
    dend_43 { pt3dadd( -33.6774, -24.9764, 1.78038, 1.18 ) }
    dend_43 { pt3dadd( -34.9362, -25.3741, 2.71107, 0.88 ) }
    dend_43 { pt3dadd( -35.5467, -25.5361, 3.12523, 0.74 ) }
    dend_43 { pt3dadd( -36.4463, -25.7251, 3.66867, 0.74 ) }
    dend_43 { pt3dadd( -37.3613, -25.8601, 4.2187, 0.74 ) }
    dend_43 { pt3dadd( -38.0533, -25.9419, 4.60741, 0.59 ) }
    dend_43 { pt3dadd( -38.8673, -25.9922, 5.05908, 0.59 ) }
    dend_43 { pt3dadd( -39.5081, -25.9895, 5.41917, 0.52 ) }
    dend_43 { pt3dadd( -40.1516, -25.9122, 5.83752, 0.52 ) }
    dend_43 { pt3dadd( -41.3588, -25.6106, 6.73444, 0.74 ) }
    dend_43 { pt3dadd( -42.1211, -25.35, 7.36441, 0.59 ) }
    dend_43 { pt3dadd( -42.8226, -25.1008, 7.96697, 0.44 ) }
    dend_43 { pt3dadd( -43.5783, -24.8783, 8.63665, 0.37 ) }
    dend_43 { pt3dadd( -44.1832, -24.7692, 9.17762, 0.66 ) }
    dend_43 { pt3dadd( -44.7285, -24.7606, 9.58443, 0.66 ) }
    dend_43 { pt3dadd( -45.0886, -24.8104, 9.76854, 0.66 ) }
    dend_43 { pt3dadd( -45.5664, -24.9053, 9.98315, 0.44 ) }
    dend_43 { pt3dadd( -46.1222, -25.0534, 10.2036, 0.44 ) }
    dend_43 { pt3dadd( -47.1147, -25.3219, 10.5713, 0.44 ) }
    dend_43 { pt3dadd( -48.4847, -25.7255, 11.0821, 0.74 ) }
    dend_43 { pt3dadd( -49.2969, -25.9947, 11.3802, 0.74 ) }
    dend_43 { pt3dadd( -50.4195, -26.3549, 11.7778, 0.52 ) }
    dend_43 { pt3dadd( -51.4699, -26.6764, 12.1379, 0.59 ) }
    dend_43 { pt3dadd( -52.3722, -26.9454, 12.4316, 0.44 ) }
    dend_43 { pt3dadd( -53.6264, -27.3714, 12.8371, 0.37 ) }
    dend_43 { pt3dadd( -54.5285, -27.761, 13.1298, 0.37 ) }
    dend_43 { pt3dadd( -55.5112, -28.325, 13.4177, 0.29 ) }
    dend_43 { pt3dadd( -55.9781, -28.6915, 13.5375, 0.29 ) }
    dend_43 { pt3dadd( -56.5258, -29.2492, 13.7158, 0.29 ) }
    dend_43 { pt3dadd( -56.991, -29.782, 13.9035, 0.37 ) }
    dend_43 { pt3dadd( -57.5146, -30.4084, 14.1656, 0.37 ) }
    dend_43 { pt3dadd( -58.0435, -31.0163, 14.4796, 0.37 ) }
    dend_43 { pt3dadd( -58.6095, -31.7327, 14.8638, 0.66 ) }
    dend_43 { pt3dadd( -59.1731, -32.43, 15.2666, 0.81 ) }
    dend_43 { pt3dadd( -59.6083, -32.9123, 15.583, 0.81 ) }
    dend_43 { pt3dadd( -60.248, -33.4885, 16.0228, 0.22 ) }
    dend_43 { pt3dadd( -61.0368, -34.0792, 16.5504, 0.22 ) }
    dend_43 { pt3dadd( -68.8346, -35.4599, 20.6286, 0.22 ) }
    // Section: dend_33, id: dend_33, parent: dend_27 (entry count 67/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -2.82328, -42.2985, -5.89941, 1.55 ) }
    dend_33 { pt3dadd( -2.54738, -43.0972, -5.90295, 1.55 ) }
    dend_33 { pt3dadd( -2.27266, -43.9109, -5.90464, 1.55 ) }
    dend_33 { pt3dadd( -2.04006, -44.6261, -5.90812, 1.55 ) }
    dend_33 { pt3dadd( -1.78433, -45.4377, -5.90747, 1.69 ) }
    dend_33 { pt3dadd( -1.60065, -46.0607, -5.9025, 1.69 ) }
    dend_33 { pt3dadd( -1.47816, -46.527, -5.89709, 1.69 ) }
    dend_33 { pt3dadd( -1.31083, -47.3019, -5.88383, 1.55 ) }
    dend_33 { pt3dadd( -1.13042, -48.3168, -5.86513, 1.47 ) }
    dend_33 { pt3dadd( -1.02516, -49.1636, -5.83819, 1.33 ) }
    dend_33 { pt3dadd( -0.97755, -49.9767, -5.8009, 1.33 ) }
    dend_33 { pt3dadd( -0.988865, -51.0583, -5.74029, 1.33 ) }
    dend_33 { pt3dadd( -1.05785, -51.853, -5.68026, 1.11 ) }
    dend_33 { pt3dadd( -1.14442, -52.3546, -5.63144, 1.11 ) }
    dend_33 { pt3dadd( -1.41197, -53.4494, -5.50496, 1.25 ) }
    dend_33 { pt3dadd( -1.63177, -54.1774, -5.41259, 1.25 ) }
    dend_33 { pt3dadd( -1.85609, -54.8331, -5.32515, 1.25 ) }
    dend_33 { pt3dadd( -2.19132, -55.7442, -5.2083, 1.4 ) }
    dend_33 { pt3dadd( -2.5359, -56.6431, -5.10199, 1.4 ) }
    dend_33 { pt3dadd( -2.80863, -57.3724, -5.03302, 1.55 ) }
    dend_33 { pt3dadd( -2.98281, -57.9093, -5.00789, 1.55 ) }
    dend_33 { pt3dadd( -3.19209, -58.7036, -5.00109, 1.33 ) }
    dend_33 { pt3dadd( -3.39578, -59.6958, -5.03688, 0.96 ) }
    dend_33 { pt3dadd( -3.45467, -60.0891, -5.07065, 0.81 ) }
    dend_33 { pt3dadd( -3.50076, -60.5314, -5.11453, 0.81 ) }
    dend_33 { pt3dadd( -3.5686, -61.5534, -5.21481, 0.96 ) }
    dend_33 { pt3dadd( -3.59038, -62.261, -5.27617, 1.33 ) }
    dend_33 { pt3dadd( -3.60076, -63.0419, -5.33123, 1.69 ) }
    dend_33 { pt3dadd( -3.61121, -63.5153, -5.35293, 1.84 ) }
    dend_33 { pt3dadd( -3.63309, -64.0522, -5.36114, 1.99 ) }
    dend_33 { pt3dadd( -3.68717, -64.6878, -5.34703, 2.06 ) }
    dend_33 { pt3dadd( -3.74175, -65.2314, -5.32041, 2.06 ) }
    dend_33 { pt3dadd( -3.79542, -65.7847, -5.27175, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_33 { pt3dadd( -3.84301, -66.3752, -5.19423, 1.62 ) }
    dend_33 { pt3dadd( -3.88458, -67.0846, -5.07874, 1.18 ) }
    dend_33 { pt3dadd( -3.90284, -67.6527, -4.98019, 0.88 ) }
    dend_33 { pt3dadd( -3.91793, -68.429, -4.83377, 0.88 ) }
    dend_33 { pt3dadd( -3.92229, -68.9633, -4.7147, 1.03 ) }
    dend_33 { pt3dadd( -3.92674, -69.5129, -4.57571, 1.11 ) }
    dend_33 { pt3dadd( -3.93886, -69.9044, -4.47071, 1.11 ) }
    dend_33 { pt3dadd( -4.01715, -70.8815, -4.20311, 1.03 ) }
    dend_33 { pt3dadd( -4.09887, -71.5194, -4.02655, 1.18 ) }
    dend_33 { pt3dadd( -4.17898, -72.0402, -3.88978, 1.25 ) }
    dend_33 { pt3dadd( -4.31342, -72.8327, -3.70066, 1.18 ) }
    dend_33 { pt3dadd( -4.45, -73.5513, -3.54961, 1.03 ) }
    dend_33 { pt3dadd( -4.60701, -74.2688, -3.41868, 0.96 ) }
    dend_33 { pt3dadd( -4.80021, -75.0456, -3.30317, 0.88 ) }
    dend_33 { pt3dadd( -4.94908, -75.5645, -3.2503, 0.88 ) }
    dend_33 { pt3dadd( -5.21894, -76.3457, -3.23331, 1.25 ) }
    dend_33 { pt3dadd( -5.52619, -77.125, -3.26604, 1.55 ) }
    dend_33 { pt3dadd( -5.76865, -77.7208, -3.31683, 1.62 ) }
    dend_33 { pt3dadd( -5.95125, -78.1977, -3.36901, 1.62 ) }
    dend_33 { pt3dadd( -6.16584, -78.822, -3.44314, 1.4 ) }
    dend_33 { pt3dadd( -6.43217, -79.706, -3.53966, 1.11 ) }
    dend_33 { pt3dadd( -6.65148, -80.6171, -3.62526, 1.11 ) }
    dend_33 { pt3dadd( -6.83397, -81.6231, -3.68683, 1.11 ) }
    dend_33 { pt3dadd( -6.989, -82.696, -3.73061, 1.11 ) }
    dend_33 { pt3dadd( -7.08707, -83.4809, -3.74821, 1.4 ) }
    dend_33 { pt3dadd( -7.17634, -84.2941, -3.75526, 1.4 ) }
    dend_33 { pt3dadd( -7.304, -85.5625, -3.74825, 1.25 ) }
    dend_33 { pt3dadd( -7.43511, -86.8611, -3.74493, 1.25 ) }
    dend_33 { pt3dadd( -7.52887, -87.7155, -3.74383, 1.62 ) }
    dend_33 { pt3dadd( -7.62274, -88.4639, -3.74961, 1.77 ) }
    dend_33 { pt3dadd( -7.75061, -89.4652, -3.77306, 1.33 ) }
    dend_33 { pt3dadd( -7.86256, -90.3725, -3.80055, 0.88 ) }
    dend_33 { pt3dadd( -7.96708, -91.3832, -3.84397, 1.25 ) }
    dend_33 { pt3dadd( -8.01017, -91.884, -3.87319, 1.84 ) }
    dend_33 { pt3dadd( -8.04372, -92.4445, -3.91585, 2.28 ) }
    dend_33 { pt3dadd( -8.06438, -93.0249, -3.97347, 2.43 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 36/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -2.82328, -42.2985, -5.89941, 2.14 ) }
    dend_28 { pt3dadd( -2.60029, -43.2718, -6.13198, 2.14 ) }
    dend_28 { pt3dadd( -2.21004, -44.8126, -6.42266, 2.14 ) }
    dend_28 { pt3dadd( -1.54271, -47.4474, -6.91972, 1.69 ) }
    dend_28 { pt3dadd( -0.983546, -49.6552, -7.33622, 1.84 ) }
    dend_28 { pt3dadd( -0.440329, -51.8, -7.74084, 1.99 ) }
    dend_28 { pt3dadd( -8.89968E-4, -53.535, -8.06816, 2.36 ) }
    dend_28 { pt3dadd( 0.341005, -54.8084, -8.25276, 2.5 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 44/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -8.76766, 34.8179, -10.3978, 1.25 ) }
    dend_22 { pt3dadd( -8.39253, 35.9181, -10.8252, 1.25 ) }
    dend_22 { pt3dadd( -8.07416, 36.6525, -11.1132, 1.03 ) }
    dend_22 { pt3dadd( -7.64788, 37.5228, -11.4512, 0.81 ) }
    dend_22 { pt3dadd( -7.16555, 38.4988, -11.8119, 0.81 ) }
    dend_22 { pt3dadd( -6.73538, 39.4795, -12.142, 1.11 ) }
    dend_22 { pt3dadd( -6.45963, 40.1959, -12.3612, 1.11 ) }
    dend_22 { pt3dadd( -6.1517, 41.0399, -12.5681, 0.96 ) }
    dend_22 { pt3dadd( -5.77494, 42.1768, -12.8002, 0.66 ) }
    dend_22 { pt3dadd( -5.54096, 42.9667, -12.9489, 0.52 ) }
    dend_22 { pt3dadd( -5.26044, 44.0074, -13.1259, 0.52 ) }
    dend_22 { pt3dadd( -5.07752, 44.7838, -13.2474, 0.52 ) }
    dend_22 { pt3dadd( -4.68983, 46.4426, -13.5342, 1.18 ) }
    dend_22 { pt3dadd( -4.48816, 47.2905, -13.6913, 1.62 ) }
    dend_22 { pt3dadd( -4.33585, 47.8974, -13.8133, 1.69 ) }
    dend_22 { pt3dadd( -4.05879, 48.8977, -14.0529, 1.33 ) }
    dend_22 { pt3dadd( -3.89363, 49.3882, -14.1995, 0.74 ) }
    dend_22 { pt3dadd( -3.60148, 50.1341, -14.4662, 0.59 ) }
    dend_22 { pt3dadd( -3.12252, 51.306, -14.9648, 0.66 ) }
    dend_22 { pt3dadd( -2.8789, 51.9397, -15.2486, 0.44 ) }
    dend_22 { pt3dadd( -2.72307, 52.4159, -15.4547, 0.44 ) }
    dend_22 { pt3dadd( -2.47982, 53.2932, -15.8245, 0.37 ) }
    dend_22 { pt3dadd( -2.26994, 54.0319, -16.13, 0.37 ) }
    dend_22 { pt3dadd( -2.09045, 54.5677, -16.3425, 0.37 ) }
    dend_22 { pt3dadd( -1.74414, 55.4034, -16.7114, 0.37 ) }
    dend_22 { pt3dadd( -1.41034, 56.1442, -17.0625, 0.44 ) }
    dend_22 { pt3dadd( -1.12405, 56.8669, -17.423, 0.44 ) }
    dend_22 { pt3dadd( -0.751921, 58.042, -18.0247, 0.81 ) }
    dend_22 { pt3dadd( -0.522636, 58.8749, -18.4533, 1.03 ) }
    dend_22 { pt3dadd( -0.308606, 59.6257, -18.8549, 1.03 ) }
    dend_22 { pt3dadd( -0.119969, 60.307, -19.2478, 0.81 ) }
    dend_22 { pt3dadd( 0.122005, 61.3011, -19.8609, 0.29 ) }
    dend_22 { pt3dadd( 0.218829, 61.7967, -20.1726, 0.29 ) }
    dend_22 { pt3dadd( 0.393008, 63.0019, -20.9043, 1.77 ) }
    dend_22 { pt3dadd( 0.444714, 63.4043, -21.1414, 2.36 ) }
    dend_22 { pt3dadd( 0.528937, 63.9625, -21.4492, 2.36 ) }
    dend_22 { pt3dadd( 0.720946, 65.0247, -22.0094, 2.28 ) }
    dend_22 { pt3dadd( 1.00355, 66.2985, -22.6438, 0.66 ) }
    dend_22 { pt3dadd( 1.1658, 66.9946, -22.9929, 0.88 ) }
    dend_22 { pt3dadd( 1.33164, 67.7193, -23.3592, 0.88 ) }
    dend_22 { pt3dadd( 1.52353, 68.5338, -23.7513, 0.37 ) }
    dend_22 { pt3dadd( 1.65656, 69.0842, -24.0081, 0.37 ) }
    dend_22 { pt3dadd( 1.92896, 70.2344, -24.5154, 0.37 ) }
    dend_22 { pt3dadd( 2.12616, 71.1037, -24.8823, 1.11 ) }
    dend_22 { pt3dadd( 2.27247, 71.8001, -25.1638, 1.47 ) }
    dend_22 { pt3dadd( 2.36515, 72.3001, -25.3528, 1.69 ) }
    dend_22 { pt3dadd( 2.49753, 73.1491, -25.6478, 1.33 ) }
    dend_22 { pt3dadd( 2.61786, 74.0864, -25.9413, 0.44 ) }
    dend_22 { pt3dadd( 2.68351, 75.0913, -26.209, 0.29 ) }
    dend_22 { pt3dadd( 2.70685, 75.8833, -26.4069, 0.52 ) }
    dend_22 { pt3dadd( 2.70907, 76.4769, -26.5486, 0.52 ) }
    dend_22 { pt3dadd( 2.68593, 77.4741, -26.8032, 0.29 ) }
    dend_22 { pt3dadd( 2.67604, 78.4991, -27.0741, 0.29 ) }
    dend_22 { pt3dadd( 2.68774, 80.3011, -27.5904, 1.18 ) }
    dend_22 { pt3dadd( 2.70207, 80.9777, -27.7872, 1.62 ) }
    dend_22 { pt3dadd( 2.72037, 81.6991, -27.9846, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_22 { pt3dadd( 2.75045, 82.6107, -28.2184, 1.33 ) }
    dend_22 { pt3dadd( 2.83658, 85.2135, -28.8624, 0.22 ) }
    dend_22 { pt3dadd( 2.90341, 86.8801, -29.2607, 0.22 ) }
    dend_22 { pt3dadd( 2.96923, 88.3879, -29.5978, 0.22 ) }
    dend_22 { pt3dadd( 3.02615, 89.985, -29.9193, 0.74 ) }
    dend_22 { pt3dadd( 3.05065, 90.8568, -30.0846, 1.03 ) }
    dend_22 { pt3dadd( 3.05648, 91.2687, -30.1557, 1.03 ) }
    dend_22 { pt3dadd( 3.00975, 92.586, -30.3952, 0.15 ) }
    dend_22 { pt3dadd( 2.97572, 93.0908, -30.5073, 0.15 ) }
    dend_22 { pt3dadd( 2.92152, 93.667, -30.6734, 0.44 ) }
    dend_22 { pt3dadd( 2.86468, 94.2138, -30.8564, 0.66 ) }
    dend_22 { pt3dadd( 2.81287, 94.7175, -31.0267, 0.66 ) }
    dend_22 { pt3dadd( 2.70845, 96.1667, -31.5213, 1.55 ) }
    dend_22 { pt3dadd( 2.66602, 97.2304, -31.8795, 2.58 ) }
    dend_22 { pt3dadd( 2.65605, 98.1544, -32.1959, 2.58 ) }
    dend_22 { pt3dadd( 2.73651, 100.2, -32.8825, 0.29 ) }
    dend_22 { pt3dadd( 2.88655, 101.564, -33.3002, 0.29 ) }
    dend_22 { pt3dadd( 3.23027, 103.516, -33.8295, 0.29 ) }
    dend_22 { pt3dadd( 3.53197, 104.739, -34.1199, 0.96 ) }
    dend_22 { pt3dadd( 3.72232, 105.366, -34.2456, 0.96 ) }
    dend_22 { pt3dadd( 4.46409, 107.406, -34.5911, 0.22 ) }
    dend_22 { pt3dadd( 5.35513, 109.577, -34.8876, 0.22 ) }
    dend_22 { pt3dadd( 5.95901, 110.939, -35.0387, 1.77 ) }
    dend_22 { pt3dadd( 6.21062, 111.472, -35.0851, 2.36 ) }
    dend_22 { pt3dadd( 6.52433, 112.123, -35.1374, 2.5 ) }
    dend_22 { pt3dadd( 7.54162, 114.226, -35.2913, 0.15 ) }
    dend_22 { pt3dadd( 8.04753, 115.284, -35.375, 0.29 ) }
    dend_22 { pt3dadd( 8.37754, 115.993, -35.4432, 0.29 ) }
    dend_22 { pt3dadd( 8.7821, 116.896, -35.5745, 0.15 ) }
    dend_22 { pt3dadd( 9.16558, 117.819, -35.7605, 1.18 ) }
    dend_22 { pt3dadd( 9.39622, 118.39, -35.9053, 1.55 ) }
    dend_22 { pt3dadd( 9.64578, 119.022, -36.0901, 1.18 ) }
    dend_22 { pt3dadd( 9.82404, 119.477, -36.2375, 0.74 ) }
    dend_22 { pt3dadd( 10.3317, 120.893, -36.6941, 0.22 ) }
    dend_22 { pt3dadd( 10.6999, 122.001, -37.0471, 0.22 ) }
    dend_22 { pt3dadd( 11.2997, 123.946, -37.6124, 0.22 ) }
    dend_22 { pt3dadd( 11.6057, 124.996, -37.8891, 0.81 ) }
    dend_22 { pt3dadd( 11.7217, 125.418, -37.9895, 0.81 ) }
    dend_22 { pt3dadd( 12.409, 128.071, -38.5232, 0.22 ) }
    dend_22 { pt3dadd( 12.7362, 129.413, -38.7109, 0.22 ) }
    dend_22 { pt3dadd( 12.9942, 130.629, -38.8572, 1.25 ) }
    dend_22 { pt3dadd( 13.041, 130.954, -38.8893, 1.69 ) }
    dend_22 { pt3dadd( 13.0766, 131.323, -38.9195, 1.69 ) }
    dend_22 { pt3dadd( 13.1277, 132.11, -38.972, 1.33 ) }
    dend_22 { pt3dadd( 13.1412, 132.802, -39.0187, 0.59 ) }
    dend_22 { pt3dadd( 13.1356, 134.24, -39.1452, 0.22 ) }
    dend_22 { pt3dadd( 13.1323, 136.285, -39.3914, 0.22 ) }
    dend_22 { pt3dadd( 13.1275, 137.543, -39.5575, 1.03 ) }
    dend_22 { pt3dadd( 13.1232, 138.073, -39.6303, 1.03 ) }
    dend_22 { pt3dadd( 13.1352, 138.626, -39.7104, 1.03 ) }
    dend_22 { pt3dadd( 13.1846, 139.444, -39.8298, 0.52 ) }
    dend_22 { pt3dadd( 13.3725, 141.273, -40.0788, 0.22 ) }
    dend_22 { pt3dadd( 13.5294, 142.148, -40.2133, 0.59 ) }
    dend_22 { pt3dadd( 13.6642, 142.707, -40.3046, 0.59 ) }
    dend_22 { pt3dadd( 14.3736, 145.152, -40.7128, 0.22 ) }
    dend_22 { pt3dadd( 14.6362, 145.908, -40.8412, 0.66 ) }
    dend_22 { pt3dadd( 14.8597, 146.444, -40.9404, 0.66 ) }
    dend_22 { pt3dadd( 15.4227, 147.686, -41.1921, 0.15 ) }
    dend_22 { pt3dadd( 15.7451, 148.374, -41.3451, 0.81 ) }
    dend_22 { pt3dadd( 15.9638, 148.848, -41.4585, 0.81 ) }
    dend_22 { pt3dadd( 16.2724, 149.545, -41.6409, 0.81 ) }
    dend_22 { pt3dadd( 16.8155, 150.879, -42.0018, 0.22 ) }
    dend_22 { pt3dadd( 17.3359, 152.234, -42.3969, 1.33 ) }
    dend_22 { pt3dadd( 17.5416, 152.803, -42.5708, 1.55 ) }
    dend_22 { pt3dadd( 17.6625, 153.134, -42.6746, 1.55 ) }
    dend_22 { pt3dadd( 17.7895, 153.485, -42.7901, 1.03 ) }
    dend_22 { pt3dadd( 18.3881, 155.081, -43.3484, 0.22 ) }
    dend_22 { pt3dadd( 18.9541, 156.497, -43.8742, 0.22 ) }
    dend_22 { pt3dadd( 19.2731, 157.237, -44.1754, 0.22 ) }
    dend_22 { pt3dadd( 19.6469, 158.112, -44.5336, 1.25 ) }
    dend_22 { pt3dadd( 19.8722, 158.678, -44.7651, 1.77 ) }
    dend_22 { pt3dadd( 20.0574, 159.192, -44.9755, 1.77 ) }
    dend_22 { pt3dadd( 20.201, 159.626, -45.1601, 1.18 ) }
    dend_22 { pt3dadd( 20.4112, 160.314, -45.4572, 0.66 ) }
    dend_22 { pt3dadd( 21.0348, 162.407, -46.4091, 0.22 ) }
    dend_22 { pt3dadd( 21.4466, 163.801, -47.0894, 0.22 ) }
    dend_22 { pt3dadd( 21.7365, 164.752, -47.554, 1.11 ) }
    dend_22 { pt3dadd( 21.946, 165.362, -47.8519, 1.4 ) }
    dend_22 { pt3dadd( 22.156, 165.901, -48.1206, 1.4 ) }
    dend_22 { pt3dadd( 22.4267, 166.522, -48.4586, 0.96 ) }
    dend_22 { pt3dadd( 23.2547, 168.269, -49.4852, 0.22 ) }
    dend_22 { pt3dadd( 24.1903, 170.078, -50.5782, 0.22 ) }
    dend_22 { pt3dadd( 24.9428, 171.461, -51.4141, 1.77 ) }
    dend_22 { pt3dadd( 25.2162, 171.949, -51.7024, 2.65 ) }
    dend_22 { pt3dadd( 25.6591, 172.712, -52.1418, 2.95 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 85/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -8.76766, 34.8179, -10.3978, 0.66 ) }
    dend_21 { pt3dadd( -9.9702, 35.3385, -10.7975, 0.66 ) }
    dend_21 { pt3dadd( -10.4481, 35.5235, -10.956, 0.66 ) }
    dend_21 { pt3dadd( -11.0079, 35.7182, -11.1379, 0.66 ) }
    dend_21 { pt3dadd( -11.6448, 35.9127, -11.3479, 1.11 ) }
    dend_21 { pt3dadd( -12.0379, 36.0147, -11.4817, 1.33 ) }
    dend_21 { pt3dadd( -12.6294, 36.1613, -11.6853, 1.33 ) }
    dend_21 { pt3dadd( -13.2703, 36.2996, -11.9061, 0.96 ) }
    dend_21 { pt3dadd( -13.716, 36.3972, -12.0436, 0.88 ) }
    dend_21 { pt3dadd( -14.252, 36.513, -12.1906, 0.88 ) }
    dend_21 { pt3dadd( -14.8956, 36.6465, -12.3342, 0.37 ) }
    dend_21 { pt3dadd( -15.2302, 36.7111, -12.3937, 0.37 ) }
    dend_21 { pt3dadd( -15.8062, 36.8192, -12.4749, 0.81 ) }
    dend_21 { pt3dadd( -16.3075, 36.9175, -12.5313, 0.88 ) }
    dend_21 { pt3dadd( -16.7735, 37.0119, -12.5767, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_21 { pt3dadd( -17.2672, 37.1142, -12.6172, 0.29 ) }
    dend_21 { pt3dadd( -17.5811, 37.1755, -12.6469, 0.29 ) }
    dend_21 { pt3dadd( -18.1193, 37.2492, -12.7232, 0.74 ) }
    dend_21 { pt3dadd( -18.5156, 37.2932, -12.7973, 0.74 ) }
    dend_21 { pt3dadd( -18.744, 37.3279, -12.8368, 0.74 ) }
    dend_21 { pt3dadd( -19.0138, 37.3874, -12.8631, 0.74 ) }
    dend_21 { pt3dadd( -19.3501, 37.4738, -12.876, 0.59 ) }
    dend_21 { pt3dadd( -19.6818, 37.5524, -12.8685, 0.59 ) }
    dend_21 { pt3dadd( -19.9769, 37.6105, -12.8397, 0.37 ) }
    dend_21 { pt3dadd( -20.7761, 37.7246, -12.7474, 0.37 ) }
    dend_21 { pt3dadd( -21.3384, 37.771, -12.6786, 0.37 ) }
    dend_21 { pt3dadd( -21.6381, 37.7798, -12.6419, 0.22 ) }
    dend_21 { pt3dadd( -22.1404, 37.771, -12.5864, 0.22 ) }
    dend_21 { pt3dadd( -22.4077, 37.7515, -12.5697, 0.22 ) }
    dend_21 { pt3dadd( -23.1859, 37.6789, -12.5574, 1.03 ) }
    dend_21 { pt3dadd( -23.5677, 37.652, -12.5729, 1.4 ) }
    dend_21 { pt3dadd( -23.7961, 37.6483, -12.5862, 1.4 ) }
    dend_21 { pt3dadd( -24.3517, 37.6735, -12.6261, 0.81 ) }
    dend_21 { pt3dadd( -25.0605, 37.7378, -12.6972, 0.22 ) }
    dend_21 { pt3dadd( -25.4423, 37.7785, -12.7424, 0.22 ) }
    dend_21 { pt3dadd( -26.21, 37.8723, -12.8506, 1.11 ) }
    dend_21 { pt3dadd( -26.6006, 37.9258, -12.9151, 1.4 ) }
    dend_21 { pt3dadd( -26.877, 37.9651, -12.966, 1.4 ) }
    dend_21 { pt3dadd( -27.5194, 38.0564, -13.0978, 0.66 ) }
    dend_21 { pt3dadd( -28.1214, 38.1353, -13.2288, 0.52 ) }
    dend_21 { pt3dadd( -28.8466, 38.2103, -13.3969, 0.74 ) }
    dend_21 { pt3dadd( -29.3161, 38.256, -13.5119, 0.88 ) }
    dend_21 { pt3dadd( -29.9816, 38.3292, -13.6804, 0.66 ) }
    dend_21 { pt3dadd( -30.4535, 38.3866, -13.8031, 0.66 ) }
    dend_21 { pt3dadd( -30.8398, 38.4386, -13.9077, 0.66 ) }
    dend_21 { pt3dadd( -31.5681, 38.5503, -14.1016, 0.29 ) }
    dend_21 { pt3dadd( -32.1559, 38.6505, -14.2415, 1.03 ) }
    dend_21 { pt3dadd( -32.6596, 38.7418, -14.3438, 1.25 ) }
    dend_21 { pt3dadd( -32.8231, 38.7772, -14.3639, 1.25 ) }
    dend_21 { pt3dadd( -33.2517, 38.8921, -14.3861, 0.81 ) }
    dend_21 { pt3dadd( -33.7746, 39.0478, -14.379, 0.29 ) }
    dend_21 { pt3dadd( -34.1183, 39.1579, -14.3504, 0.52 ) }
    dend_21 { pt3dadd( -34.3489, 39.2395, -14.3244, 0.66 ) }
    dend_21 { pt3dadd( -35.1896, 39.5549, -14.2309, 0.22 ) }
    dend_21 { pt3dadd( -35.6632, 39.7392, -14.1891, 0.22 ) }
    dend_21 { pt3dadd( -36.0483, 39.8919, -14.1708, 0.22 ) }
    dend_21 { pt3dadd( -36.5581, 40.1029, -14.1814, 0.22 ) }
    dend_21 { pt3dadd( -37.2388, 40.3928, -14.2256, 0.59 ) }
    dend_21 { pt3dadd( -37.6249, 40.5634, -14.2673, 0.81 ) }
    dend_21 { pt3dadd( -37.9786, 40.7369, -14.3334, 0.81 ) }
    dend_21 { pt3dadd( -38.5166, 41.0302, -14.4567, 0.52 ) }
    dend_21 { pt3dadd( -39.2353, 41.4596, -14.6483, 1.03 ) }
    dend_21 { pt3dadd( -39.663, 41.7296, -14.7756, 1.18 ) }
    dend_21 { pt3dadd( -39.9787, 41.941, -14.8783, 1.25 ) }
    dend_21 { pt3dadd( -40.6791, 42.4359, -15.1213, 0.29 ) }
    dend_21 { pt3dadd( -41.3104, 42.8991, -15.352, 0.74 ) }
    dend_21 { pt3dadd( -41.5466, 43.0762, -15.4426, 0.96 ) }
    dend_21 { pt3dadd( -41.752, 43.2305, -15.5277, 0.96 ) }
    dend_21 { pt3dadd( -42.4323, 43.7265, -15.8238, 0.22 ) }
    dend_21 { pt3dadd( -42.7015, 43.912, -15.9435, 0.22 ) }
    dend_21 { pt3dadd( -43.0707, 44.1474, -16.1038, 0.66 ) }
    dend_21 { pt3dadd( -43.3207, 44.3007, -16.219, 0.88 ) }
    dend_21 { pt3dadd( -43.617, 44.4732, -16.3556, 0.44 ) }
    dend_21 { pt3dadd( -44.0042, 44.6922, -16.5302, 0.37 ) }
    dend_21 { pt3dadd( -44.2392, 44.8208, -16.6301, 0.44 ) }
    dend_21 { pt3dadd( -44.5529, 44.9993, -16.7622, 0.44 ) }
    dend_21 { pt3dadd( -44.7788, 45.1297, -16.8573, 0.44 ) }
    dend_21 { pt3dadd( -45.2154, 45.3861, -17.0354, 0.22 ) }
    dend_21 { pt3dadd( -45.503, 45.5592, -17.1425, 0.22 ) }
    dend_21 { pt3dadd( -45.8468, 45.7831, -17.2612, 0.29 ) }
    dend_21 { pt3dadd( -46.0507, 45.924, -17.3229, 0.22 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 66/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -11.151, 27.8674, 2.10084, 1.47 ) }
    dend_13 { pt3dadd( -10.7844, 28.5808, 2.23677, 1.47 ) }
    dend_13 { pt3dadd( -10.4516, 29.3604, 2.3741, 0.81 ) }
    dend_13 { pt3dadd( -10.2439, 29.9323, 2.47019, 0.81 ) }
    dend_13 { pt3dadd( -10.0222, 30.7349, 2.59307, 0.81 ) }
    dend_13 { pt3dadd( -9.79349, 31.7132, 2.7372, 0.81 ) }
    dend_13 { pt3dadd( -9.57924, 32.7941, 2.89166, 0.81 ) }
    dend_13 { pt3dadd( -9.43589, 33.8759, 3.02975, 1.03 ) }
    dend_13 { pt3dadd( -9.34263, 34.8501, 3.14859, 1.03 ) }
    dend_13 { pt3dadd( -9.22511, 36.3429, 3.32117, 1.18 ) }
    dend_13 { pt3dadd( -9.15827, 37.2673, 3.43136, 1.18 ) }
    dend_13 { pt3dadd( -9.11546, 38.8778, 3.59897, 1.18 ) }
    dend_13 { pt3dadd( -9.12284, 40.0253, 3.70471, 1.4 ) }
    dend_13 { pt3dadd( -9.1197, 40.8385, 3.77932, 1.4 ) }
    dend_13 { pt3dadd( -9.12181, 41.4178, 3.82828, 1.4 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 81/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -11.151, 27.8674, 2.10084, 0.96 ) }
    dend_12 { pt3dadd( -12.8994, 29.3176, 0.471998, 0.96 ) }
    dend_12 { pt3dadd( -13.5378, 29.8583, -0.0877272, 0.96 ) }
    dend_12 { pt3dadd( -14.4235, 30.6193, -0.860112, 0.96 ) }
    dend_12 { pt3dadd( -15.3384, 31.4352, -1.6703, 0.81 ) }
    dend_12 { pt3dadd( -16.127, 32.1582, -2.36159, 0.81 ) }
    dend_12 { pt3dadd( -17.2232, 33.1744, -3.29567, 1.03 ) }
    dend_12 { pt3dadd( -17.9653, 33.9095, -3.91557, 1.03 ) }
    dend_12 { pt3dadd( -18.6525, 34.6924, -4.46842, 1.03 ) }
    dend_12 { pt3dadd( -19.5036, 35.7923, -5.12724, 0.81 ) }
    dend_12 { pt3dadd( -20.1266, 36.6285, -5.6006, 0.81 ) }
    dend_12 { pt3dadd( -20.817, 37.5712, -6.10253, 0.81 ) }
    dend_12 { pt3dadd( -21.6272, 38.743, -6.68057, 0.52 ) }
    dend_12 { pt3dadd( -22.3762, 39.9199, -7.17959, 0.52 ) }
    dend_12 { pt3dadd( -22.8073, 40.631, -7.42868, 0.52 ) }
    dend_12 { pt3dadd( -23.4351, 41.7152, -7.7477, 0.52 ) }
    dend_12 { pt3dadd( -24.2197, 43.1094, -8.12127, 0.52 ) }
    dend_12 { pt3dadd( -24.636, 43.8692, -8.30129, 0.52 ) }
    dend_12 { pt3dadd( -25.0672, 44.6537, -8.45944, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_12 { pt3dadd( -25.5836, 45.5865, -8.61841, 0.66 ) }
    dend_12 { pt3dadd( -26.0684, 46.5069, -8.73658, 0.88 ) }
    dend_12 { pt3dadd( -26.5427, 47.4891, -8.82096, 0.88 ) }
    dend_12 { pt3dadd( -27.0678, 48.6421, -8.90212, 0.59 ) }
    dend_12 { pt3dadd( -27.5948, 49.7894, -9.00037, 0.88 ) }
    dend_12 { pt3dadd( -27.9712, 50.6166, -9.08085, 0.88 ) }
    dend_12 { pt3dadd( -28.274, 51.3538, -9.14282, 0.96 ) }
    dend_12 { pt3dadd( -28.5349, 52.0295, -9.2044, 0.96 ) }
    dend_12 { pt3dadd( -28.7671, 52.6224, -9.27425, 0.96 ) }
    dend_12 { pt3dadd( -29.181, 53.5966, -9.433, 0.74 ) }
    dend_12 { pt3dadd( -29.8355, 55.0372, -9.72771, 1.25 ) }
    dend_12 { pt3dadd( -30.2892, 55.9989, -9.94965, 1.25 ) }
    dend_12 { pt3dadd( -30.8063, 57.0731, -10.2083, 0.29 ) }
    dend_12 { pt3dadd( -31.1535, 57.7871, -10.3735, 0.29 ) }
    dend_12 { pt3dadd( -31.5097, 58.5094, -10.5277, 0.66 ) }
    dend_12 { pt3dadd( -31.8384, 59.1604, -10.65, 0.81 ) }
    dend_12 { pt3dadd( -32.1202, 59.7097, -10.734, 0.81 ) }
    dend_12 { pt3dadd( -32.6014, 60.6792, -10.8251, 0.37 ) }
    dend_12 { pt3dadd( -33.039, 61.752, -10.9027, 0.37 ) }
    dend_12 { pt3dadd( -33.2794, 62.4552, -10.9547, 1.03 ) }
    dend_12 { pt3dadd( -33.4748, 63.0798, -11.0116, 1.25 ) }
    dend_12 { pt3dadd( -33.7213, 63.8481, -11.1102, 1.25 ) }
    dend_12 { pt3dadd( -33.9327, 64.4617, -11.2212, 0.81 ) }
    dend_12 { pt3dadd( -34.3919, 65.685, -11.4955, 0.59 ) }
    dend_12 { pt3dadd( -34.6692, 66.3842, -11.6693, 0.44 ) }
    dend_12 { pt3dadd( -35.0689, 67.3663, -11.8841, 0.88 ) }
    dend_12 { pt3dadd( -35.387, 68.1198, -12.0241, 0.88 ) }
    dend_12 { pt3dadd( -35.9597, 69.4287, -12.1983, 0.59 ) }
    dend_12 { pt3dadd( -36.3355, 70.2977, -12.2876, 0.59 ) }
    dend_12 { pt3dadd( -36.9322, 71.6997, -12.3754, 0.44 ) }
    dend_12 { pt3dadd( -37.5853, 73.3117, -12.4392, 1.03 ) }
    dend_12 { pt3dadd( -38.1154, 74.6772, -12.4455, 1.55 ) }
    dend_12 { pt3dadd( -38.4223, 75.5198, -12.4076, 1.62 ) }
    dend_12 { pt3dadd( -38.8442, 76.7482, -12.3052, 1.11 ) }
    dend_12 { pt3dadd( -39.2821, 78.0927, -12.1567, 0.59 ) }
    dend_12 { pt3dadd( -39.5771, 79.0179, -12.0241, 0.59 ) }
    dend_12 { pt3dadd( -40.0589, 80.5582, -11.7608, 0.59 ) }
    dend_12 { pt3dadd( -40.5484, 82.0896, -11.4761, 0.52 ) }
    dend_12 { pt3dadd( -40.8846, 83.0882, -11.2724, 0.52 ) }
    dend_12 { pt3dadd( -41.3349, 84.326, -10.9819, 0.52 ) }
    dend_12 { pt3dadd( -41.823, 85.6167, -10.6766, 0.52 ) }
    dend_12 { pt3dadd( -42.3826, 87.0323, -10.367, 0.37 ) }
    dend_12 { pt3dadd( -43.2017, 88.9208, -10.0192, 1.55 ) }
    dend_12 { pt3dadd( -43.505, 89.5462, -9.93427, 1.92 ) }
    dend_12 { pt3dadd( -43.8123, 90.1179, -9.88798, 1.92 ) }
    dend_12 { pt3dadd( -44.0958, 90.6089, -9.8812, 1.92 ) }
    dend_12 { pt3dadd( -44.6927, 91.546, -9.94205, 0.88 ) }
    dend_12 { pt3dadd( -45.4851, 92.74, -10.0824, 0.44 ) }
    dend_12 { pt3dadd( -46.0794, 93.6263, -10.2095, 0.44 ) }
    dend_12 { pt3dadd( -46.7097, 94.5884, -10.3623, 0.44 ) }
    dend_12 { pt3dadd( -47.5822, 95.9585, -10.5731, 0.37 ) }
    dend_12 { pt3dadd( -48.0459, 96.7038, -10.6833, 0.37 ) }
    dend_12 { pt3dadd( -48.9995, 98.3005, -10.896, 0.74 ) }
    dend_12 { pt3dadd( -49.3816, 98.9556, -10.9694, 0.74 ) }
    dend_12 { pt3dadd( -49.8542, 99.7968, -11.0499, 0.52 ) }
    dend_12 { pt3dadd( -50.4713, 100.96, -11.1642, 1.25 ) }
    dend_12 { pt3dadd( -50.8862, 101.781, -11.2693, 1.47 ) }
    dend_12 { pt3dadd( -51.1551, 102.34, -11.3541, 1.47 ) }
    dend_12 { pt3dadd( -51.5098, 103.04, -11.5233, 0.81 ) }
    dend_12 { pt3dadd( -51.9809, 103.924, -11.8004, 0.59 ) }
    dend_12 { pt3dadd( -52.4375, 104.747, -12.1326, 0.88 ) }
    dend_12 { pt3dadd( -52.8148, 105.414, -12.4414, 1.18 ) }
    dend_12 { pt3dadd( -53.0464, 105.825, -12.6433, 1.18 ) }
    dend_12 { pt3dadd( -53.6259, 106.866, -13.1086, 0.96 ) }
    dend_12 { pt3dadd( -54.2635, 108.037, -13.5417, 0.52 ) }
    dend_12 { pt3dadd( -54.6578, 108.758, -13.7208, 0.37 ) }
    dend_12 { pt3dadd( -55.2655, 109.862, -13.8648, 0.37 ) }
    dend_12 { pt3dadd( -55.8758, 110.999, -13.9034, 0.37 ) }
    dend_12 { pt3dadd( -56.4578, 112.126, -13.8547, 0.37 ) }
    dend_12 { pt3dadd( -56.8778, 112.993, -13.7455, 0.81 ) }
    dend_12 { pt3dadd( -57.496, 114.376, -13.5005, 1.84 ) }
    dend_12 { pt3dadd( -57.7425, 114.935, -13.3985, 1.92 ) }
    dend_12 { pt3dadd( -57.9244, 115.34, -13.3391, 1.92 ) }
    dend_12 { pt3dadd( -58.2441, 116.097, -13.2475, 1.62 ) }
    dend_12 { pt3dadd( -58.658, 117.176, -13.1686, 0.88 ) }
    dend_12 { pt3dadd( -59.0605, 118.343, -13.1058, 0.29 ) }
    dend_12 { pt3dadd( -59.6608, 120.164, -13.0367, 0.29 ) }
    dend_12 { pt3dadd( -60.1164, 121.476, -13.0021, 0.29 ) }
    dend_12 { pt3dadd( -60.4209, 122.242, -12.9936, 0.29 ) }
    dend_12 { pt3dadd( -60.5858, 122.599, -12.9983, 0.29 ) }
    dend_12 { pt3dadd( -61.0169, 123.384, -13.0381, 0.66 ) }
    dend_12 { pt3dadd( -61.5726, 124.249, -13.1195, 0.81 ) }
    dend_12 { pt3dadd( -61.9784, 124.822, -13.1922, 0.81 ) }
    dend_12 { pt3dadd( -62.7545, 125.905, -13.3393, 0.37 ) }
    dend_12 { pt3dadd( -63.366, 126.737, -13.4615, 0.37 ) }
    dend_12 { pt3dadd( -63.9447, 127.534, -13.5753, 0.81 ) }
    dend_12 { pt3dadd( -64.354, 128.1, -13.6504, 0.81 ) }
    dend_12 { pt3dadd( -64.9377, 128.914, -13.7452, 0.37 ) }
    dend_12 { pt3dadd( -65.519, 129.673, -13.8465, 0.37 ) }
    dend_12 { pt3dadd( -66.1167, 130.382, -13.9605, 0.88 ) }
    dend_12 { pt3dadd( -66.8537, 131.215, -14.1073, 1.47 ) }
    dend_12 { pt3dadd( -67.4066, 131.839, -14.222, 1.69 ) }
    dend_12 { pt3dadd( -67.8521, 132.35, -14.3192, 1.69 ) }
    dend_12 { pt3dadd( -69.0613, 133.719, -14.5991, 0.37 ) }
    dend_12 { pt3dadd( -69.4749, 134.197, -14.6954, 0.37 ) }
    dend_12 { pt3dadd( -70.2415, 135.149, -14.8722, 0.37 ) }
    dend_12 { pt3dadd( -71.1133, 136.327, -15.0676, 0.81 ) }
    dend_12 { pt3dadd( -71.6677, 137.186, -15.1779, 1.33 ) }
    dend_12 { pt3dadd( -71.9967, 137.757, -15.2395, 1.33 ) }
    dend_12 { pt3dadd( -72.4314, 138.56, -15.3201, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_12 { pt3dadd( -73.3019, 140.14, -15.5099, 0.52 ) }
    dend_12 { pt3dadd( -74.0237, 141.368, -15.702, 0.52 ) }
    dend_12 { pt3dadd( -74.8328, 142.731, -15.9356, 0.52 ) }
    dend_12 { pt3dadd( -75.2773, 143.484, -16.0697, 0.52 ) }
    dend_12 { pt3dadd( -75.8452, 144.459, -16.2465, 0.52 ) }
    dend_12 { pt3dadd( -76.4774, 145.554, -16.4549, 0.52 ) }
    dend_12 { pt3dadd( -77.5489, 147.402, -16.8264, 0.52 ) }
    dend_12 { pt3dadd( -77.9367, 148.07, -16.9629, 0.52 ) }
    dend_12 { pt3dadd( -78.9039, 149.703, -17.3043, 1.25 ) }
    dend_12 { pt3dadd( -79.1785, 150.166, -17.398, 1.47 ) }
    dend_12 { pt3dadd( -79.5364, 150.769, -17.5277, 1.47 ) }
    dend_12 { pt3dadd( -80.0597, 151.608, -17.7355, 0.88 ) }
    dend_12 { pt3dadd( -80.6981, 152.545, -18.0121, 0.29 ) }
    dend_12 { pt3dadd( -80.9665, 152.895, -18.1341, 0.29 ) }
    dend_12 { pt3dadd( -81.5294, 153.564, -18.3912, 0.44 ) }
    dend_12 { pt3dadd( -81.9832, 154.075, -18.5894, 0.44 ) }
    dend_12 { pt3dadd( -82.4177, 154.541, -18.7681, 0.44 ) }
    dend_12 { pt3dadd( -82.6667, 154.828, -18.8799, 0.44 ) }
    dend_12 { pt3dadd( -83.0292, 155.25, -19.0158, 0.29 ) }
    dend_12 { pt3dadd( -83.5117, 155.93, -19.1238, 0.29 ) }
    dend_12 { pt3dadd( -83.6857, 156.186, -19.1388, 0.44 ) }
    dend_12 { pt3dadd( -83.9053, 156.506, -19.1411, 0.44 ) }
    dend_12 { pt3dadd( -84.4946, 157.33, -19.1367, 0.37 ) }
    dend_12 { pt3dadd( -85.2989, 158.401, -19.132, 0.44 ) }
    dend_12 { pt3dadd( -86.5631, 160.121, -19.2199, 2.28 ) }
    dend_12 { pt3dadd( -87.0534, 160.81, -19.2868, 2.5 ) }
    dend_12 { pt3dadd( -87.4163, 161.361, -19.3578, 2.5 ) }
    dend_12 { pt3dadd( -87.9836, 162.274, -19.5067, 1.92 ) }
    dend_12 { pt3dadd( -88.5173, 163.208, -19.707, 0.81 ) }
    dend_12 { pt3dadd( -89.1282, 164.512, -20.0778, 0.52 ) }
    dend_12 { pt3dadd( -89.3598, 165.114, -20.2552, 0.52 ) }
    dend_12 { pt3dadd( -89.8178, 166.505, -20.6501, 0.88 ) }
    dend_12 { pt3dadd( -90.0582, 167.361, -20.8695, 0.88 ) }
    dend_12 { pt3dadd( -90.3141, 168.394, -21.1005, 0.66 ) }
    dend_12 { pt3dadd( -90.5037, 169.24, -21.2677, 0.44 ) }
    dend_12 { pt3dadd( -90.7668, 170.464, -21.4592, 0.29 ) }
    dend_12 { pt3dadd( -91.0307, 171.876, -21.67, 0.29 ) }
    dend_12 { pt3dadd( -91.2719, 173.489, -21.9059, 0.29 ) }
    dend_12 { pt3dadd( -91.3694, 174.29, -22.0238, 0.29 ) }
    dend_12 { pt3dadd( -91.5026, 175.783, -22.2912, 0.52 ) }
    dend_12 { pt3dadd( -91.5801, 176.816, -22.5206, 0.88 ) }
    dend_12 { pt3dadd( -91.6292, 177.672, -22.7641, 0.88 ) }
    dend_12 { pt3dadd( -91.6913, 178.621, -23.0927, 0.44 ) }
    dend_12 { pt3dadd( -91.8822, 180.143, -23.7524, 1.11 ) }
    dend_12 { pt3dadd( -92.1613, 181.475, -24.4437, 2.43 ) }
    dend_12 { pt3dadd( -92.4496, 182.385, -25.0021, 2.43 ) }
    dend_12 { pt3dadd( -92.6869, 182.919, -25.3837, 2.43 ) }
    dend_12 { pt3dadd( -93.0783, 183.553, -25.8834, 1.69 ) }
    dend_12 { pt3dadd( -93.6902, 184.358, -26.5743, 0.59 ) }
    dend_12 { pt3dadd( -94.4293, 185.13, -27.2923, 0.74 ) }
    dend_12 { pt3dadd( -94.7005, 185.364, -27.5099, 0.74 ) }
    dend_12 { pt3dadd( -95.1642, 185.738, -27.8678, 0.52 ) }
    dend_12 { pt3dadd( -95.8982, 186.311, -28.3904, 0.52 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 53/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 20.2325, 5.87458, 5.21475, 1.99 ) }
    dend_2 { pt3dadd( 22.2696, 6.11619, 5.19116, 1.99 ) }
    dend_2 { pt3dadd( 23.4593, 6.53858, 5.3148, 1.99 ) }
    dend_2 { pt3dadd( 24.2897, 7.14814, 5.5055, 1.69 ) }
    dend_2 { pt3dadd( 25.4572, 8.00504, 5.77358, 1.69 ) }
    dend_2 { pt3dadd( 25.9489, 8.36595, 5.8865, 1.69 ) }
    dend_2 { pt3dadd( 26.7659, 8.96562, 6.07411, 1.69 ) }
    dend_2 { pt3dadd( 27.2823, 9.58098, 6.20875, 1.92 ) }
    dend_2 { pt3dadd( 28.0356, 10.8422, 6.57494, 1.99 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 62/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 20.2325, 5.87458, 5.21475, 0.74 ) }
    dend_1 { pt3dadd( 21.2376, 7.56777, 4.69382, 0.74 ) }
    dend_1 { pt3dadd( 21.6312, 8.29801, 4.44849, 0.74 ) }
    dend_1 { pt3dadd( 22.2003, 9.43788, 4.03749, 0.74 ) }
    dend_1 { pt3dadd( 22.661, 10.416, 3.66881, 0.44 ) }
    dend_1 { pt3dadd( 23.0275, 11.2478, 3.35389, 0.44 ) }
    dend_1 { pt3dadd( 23.5389, 12.4847, 2.88203, 0.66 ) }
    dend_1 { pt3dadd( 23.7542, 13.077, 2.63853, 0.88 ) }
    dend_1 { pt3dadd( 24.0455, 13.9512, 2.30097, 0.88 ) }
    dend_1 { pt3dadd( 24.2958, 14.7768, 2.01526, 1.03 ) }
    dend_1 { pt3dadd( 24.6642, 15.9768, 1.6367, 0.96 ) }
    dend_1 { pt3dadd( 24.9379, 16.8339, 1.38374, 0.52 ) }
    dend_1 { pt3dadd( 25.1795, 17.5249, 1.19066, 0.52 ) }
    dend_1 { pt3dadd( 25.4742, 18.4479, 0.932497, 0.88 ) }
    dend_1 { pt3dadd( 25.7145, 19.2018, 0.725045, 0.66 ) }
    dend_1 { pt3dadd( 25.9862, 20.0495, 0.500311, 0.88 ) }
    dend_1 { pt3dadd( 26.2268, 20.809, 0.30385, 0.88 ) }
    dend_1 { pt3dadd( 26.568, 21.9383, 0.0223304, 0.29 ) }
    dend_1 { pt3dadd( 26.8221, 22.8505, -0.212696, 0.29 ) }
    dend_1 { pt3dadd( 26.9906, 23.4744, -0.384887, 0.29 ) }
    dend_1 { pt3dadd( 27.2757, 24.5412, -0.673156, 0.44 ) }
    dend_1 { pt3dadd( 27.4588, 25.1853, -0.827883, 0.74 ) }
    dend_1 { pt3dadd( 27.7075, 25.9621, -1.00166, 0.88 ) }
    dend_1 { pt3dadd( 27.8752, 26.4345, -1.09683, 1.11 ) }
    dend_1 { pt3dadd( 28.0186, 26.8063, -1.17161, 1.11 ) }
    dend_1 { pt3dadd( 28.3135, 27.6408, -1.37068, 0.29 ) }
    dend_1 { pt3dadd( 28.6244, 28.4431, -1.59725, 0.29 ) }
    dend_1 { pt3dadd( 28.9578, 29.1879, -1.82207, 0.29 ) }
    dend_1 { pt3dadd( 32.0173, 38.2602, -2.66008, 0.29 ) }
    dend_1 { pt3dadd( 36.2671, 46.8198, -3.68099, 0.29 ) }
    dend_1 { pt3dadd( 39.7359, 55.5044, -5.89801, 0.29 ) }
    dend_1 { pt3dadd( 42.479, 64.2323, -8.84218, 0.29 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 94/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 6.95552, 38.3192, 1.13455, 0.59 ) }
    axon_1 { pt3dadd( 9.5476, 53.0936, 1.13455, 0.59 ) }
    axon_1 { pt3dadd( 12.1397, 67.8679, 1.13455, 0.59 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 97/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -75.3407, -50.6071, 3.96705, 0.44 ) }
    dend_48 { pt3dadd( -78.1294, -51.4633, 4.79964, 0.44 ) }
    dend_48 { pt3dadd( -79.54, -51.9988, 5.23157, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_48 { pt3dadd( -81.022, -52.6456, 5.65783, 0.29 ) }
    dend_48 { pt3dadd( -81.8893, -53.047, 5.8962, 0.29 ) }
    dend_48 { pt3dadd( -83.7276, -53.8947, 6.35979, 0.37 ) }
    dend_48 { pt3dadd( -84.5675, -54.2573, 6.57098, 0.37 ) }
    dend_48 { pt3dadd( -85.8363, -54.8038, 6.78615, 0.29 ) }
    dend_48 { pt3dadd( -87.054, -55.4079, 7.03814, 0.29 ) }
    dend_48 { pt3dadd( -87.9867, -55.9382, 7.26287, 0.29 ) }
    dend_48 { pt3dadd( -88.6343, -56.3285, 7.42324, 0.29 ) }
    dend_48 { pt3dadd( -89.643, -56.9194, 7.66237, 0.29 ) }
    dend_48 { pt3dadd( -90.6354, -57.4247, 7.85893, 0.44 ) }
    dend_48 { pt3dadd( -92.0032, -58.0382, 8.10363, 0.44 ) }
    dend_48 { pt3dadd( -92.7327, -58.377, 8.27077, 0.44 ) }
    dend_48 { pt3dadd( -93.8052, -58.932, 8.59009, 0.66 ) }
    dend_48 { pt3dadd( -94.8875, -59.5988, 9.01748, 0.66 ) }
    dend_48 { pt3dadd( -95.4532, -60.0397, 9.32937, 0.52 ) }
    dend_48 { pt3dadd( -96.4547, -61.0858, 10.1914, 0.44 ) }
    dend_48 { pt3dadd( -96.8854, -61.8109, 10.8603, 0.66 ) }
    dend_48 { pt3dadd( -97.1636, -62.5622, 11.5986, 0.66 ) }
    dend_48 { pt3dadd( -97.3909, -63.4285, 12.4689, 0.52 ) }
    dend_48 { pt3dadd( -97.6844, -64.5734, 13.6378, 0.52 ) }
    dend_48 { pt3dadd( -97.9049, -65.6221, 14.699, 0.44 ) }
    dend_48 { pt3dadd( -98.0635, -66.5436, 15.6282, 0.37 ) }
    dend_48 { pt3dadd( -98.3726, -67.9784, 17.0565, 0.37 ) }
    dend_48 { pt3dadd( -98.6921, -69.1029, 18.1927, 0.29 ) }
    dend_48 { pt3dadd( -99.1563, -70.2203, 19.3871, 0.29 ) }
    dend_48 { pt3dadd( -109.222, -79.0897, 22.7327, 0.29 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 26/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -75.3407, -50.6071, 3.96705, 1.11 ) }
    dend_45 { pt3dadd( -76.085, -50.896, 4.04904, 1.11 ) }
    dend_45 { pt3dadd( -76.6622, -51.1753, 4.11495, 1.11 ) }
    dend_45 { pt3dadd( -77.8335, -51.7811, 4.2648, 0.88 ) }
    dend_45 { pt3dadd( -78.726, -52.2177, 4.37061, 0.88 ) }
    dend_45 { pt3dadd( -80.0826, -52.8288, 4.51271, 0.88 ) }
    dend_45 { pt3dadd( -81.4955, -53.4098, 4.63177, 0.88 ) }
    dend_45 { pt3dadd( -82.2692, -53.724, 4.69371, 0.88 ) }
    dend_45 { pt3dadd( -82.9853, -54.0131, 4.73082, 0.81 ) }
    dend_45 { pt3dadd( -83.7863, -54.331, 4.74839, 0.81 ) }
    dend_45 { pt3dadd( -84.3644, -54.5388, 4.75046, 0.81 ) }
    dend_45 { pt3dadd( -85.3917, -54.8715, 4.74528, 0.96 ) }
    dend_45 { pt3dadd( -85.9276, -55.0632, 4.74322, 0.96 ) }
    dend_45 { pt3dadd( -86.4727, -55.3195, 4.74403, 0.96 ) }
    dend_45 { pt3dadd( -86.9861, -55.6508, 4.75, 0.96 ) }
    dend_45 { pt3dadd( -87.6537, -56.1697, 4.77132, 0.96 ) }
    dend_45 { pt3dadd( -87.8752, -56.3525, 4.7757, 0.96 ) }
    dend_45 { pt3dadd( -88.5493, -56.9041, 4.76677, 0.88 ) }
    dend_45 { pt3dadd( -89.3903, -57.5228, 4.70994, 0.88 ) }
    dend_45 { pt3dadd( -89.9911, -57.9511, 4.65666, 1.11 ) }
    dend_45 { pt3dadd( -90.597, -58.3855, 4.60054, 1.11 ) }
    dend_45 { pt3dadd( -91.2947, -58.9095, 4.5272, 0.96 ) }
    dend_45 { pt3dadd( -91.8883, -59.3854, 4.49245, 0.96 ) }
    dend_45 { pt3dadd( -92.7089, -60.0931, 4.49011, 0.88 ) }
    dend_45 { pt3dadd( -93.6489, -60.9829, 4.49979, 0.88 ) }
    dend_45 { pt3dadd( -94.3677, -61.7107, 4.48171, 0.96 ) }
    dend_45 { pt3dadd( -94.9376, -62.3091, 4.44274, 0.96 ) }
    dend_45 { pt3dadd( -95.7452, -63.1434, 4.35375, 0.88 ) }
    dend_45 { pt3dadd( -96.1248, -63.5237, 4.28586, 0.74 ) }
    dend_45 { pt3dadd( -96.9708, -64.3355, 4.08326, 0.96 ) }
    dend_45 { pt3dadd( -97.7176, -64.9931, 3.87657, 1.11 ) }
    dend_45 { pt3dadd( -98.3275, -65.5018, 3.71122, 1.25 ) }
    dend_45 { pt3dadd( -98.8602, -65.9403, 3.58364, 1.25 ) }
    dend_45 { pt3dadd( -99.7226, -66.6567, 3.40279, 1.03 ) }
    dend_45 { pt3dadd( -100.899, -67.6622, 3.24169, 0.88 ) }
    dend_45 { pt3dadd( -101.761, -68.4443, 3.18697, 0.88 ) }
    dend_45 { pt3dadd( -102.633, -69.2803, 3.1641, 0.88 ) }
    dend_45 { pt3dadd( -103.36, -69.987, 3.146, 0.88 ) }
    dend_45 { pt3dadd( -104.063, -70.6427, 3.12145, 1.33 ) }
    dend_45 { pt3dadd( -104.616, -71.11, 3.09561, 1.33 ) }
    dend_45 { pt3dadd( -105.275, -71.632, 3.05042, 1.18 ) }
    dend_45 { pt3dadd( -105.739, -71.9804, 3.00847, 0.96 ) }
    dend_45 { pt3dadd( -106.574, -72.5634, 2.92867, 0.96 ) }
    dend_45 { pt3dadd( -107.347, -73.0416, 2.85193, 0.96 ) }
    dend_45 { pt3dadd( -108.393, -73.5942, 2.75877, 0.88 ) }
    dend_45 { pt3dadd( -109.307, -73.9669, 2.69153, 0.81 ) }
    dend_45 { pt3dadd( -109.827, -74.1176, 2.66699, 0.81 ) }
    dend_45 { pt3dadd( -110.436, -74.2647, 2.64895, 0.74 ) }
    dend_45 { pt3dadd( -110.888, -74.3866, 2.64782, 0.74 ) }
    dend_45 { pt3dadd( -111.466, -74.5901, 2.66663, 0.74 ) }
    dend_45 { pt3dadd( -112.294, -74.9887, 2.72778, 0.74 ) }
    dend_45 { pt3dadd( -112.755, -75.3087, 2.78325, 1.11 ) }
    dend_45 { pt3dadd( -113.455, -75.9988, 2.90551, 1.11 ) }
    dend_45 { pt3dadd( -114.308, -77.0392, 3.08268, 0.88 ) }
    dend_45 { pt3dadd( -114.86, -77.8153, 3.21576, 0.88 ) }
    dend_45 { pt3dadd( -115.281, -78.4687, 3.3269, 0.88 ) }
    dend_45 { pt3dadd( -115.859, -79.382, 3.47687, 0.81 ) }
    dend_45 { pt3dadd( -116.65, -80.5728, 3.62687, 0.81 ) }
    dend_45 { pt3dadd( -117.054, -81.1365, 3.67542, 1.18 ) }
    dend_45 { pt3dadd( -117.495, -81.7471, 3.70031, 1.33 ) }
    dend_45 { pt3dadd( -117.971, -82.3707, 3.69962, 1.33 ) }
    dend_45 { pt3dadd( -118.751, -83.3161, 3.66153, 0.88 ) }
    dend_45 { pt3dadd( -119.521, -84.1894, 3.58034, 0.81 ) }
    dend_45 { pt3dadd( -120.328, -85.043, 3.47437, 0.81 ) }
    dend_45 { pt3dadd( -121.285, -86.0166, 3.32156, 0.81 ) }
    dend_45 { pt3dadd( -122.006, -86.7325, 3.17622, 0.81 ) }
    dend_45 { pt3dadd( -122.685, -87.392, 3.0275, 1.11 ) }
    dend_45 { pt3dadd( -123.095, -87.7893, 2.93048, 1.25 ) }
    dend_45 { pt3dadd( -123.587, -88.2624, 2.81459, 2.14 ) }
    dend_45 { pt3dadd( -124.058, -88.7467, 2.69331, 2.5 ) }
    dend_45 { pt3dadd( -124.703, -89.4015, 2.52455, 1.92 ) }
    dend_45 { pt3dadd( -125.624, -90.4769, 2.27037, 1.11 ) }
    dend_45 { pt3dadd( -126.015, -90.9971, 2.15978, 0.96 ) }
    dend_45 { pt3dadd( -126.548, -91.7714, 2.015, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_45 { pt3dadd( -127.224, -92.8213, 1.80397, 1.69 ) }
    // Section: dend_41, id: dend_41, parent: dend_33 (entry count 1/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -8.06438, -93.0249, -3.97347, 0.37 ) }
    dend_41 { pt3dadd( -7.64336, -95.3318, -2.745, 0.37 ) }
    dend_41 { pt3dadd( -7.50466, -95.9287, -2.44266, 0.52 ) }
    dend_41 { pt3dadd( -7.31669, -96.6613, -2.09736, 0.66 ) }
    dend_41 { pt3dadd( -7.09913, -97.4965, -1.7237, 0.37 ) }
    dend_41 { pt3dadd( -6.9314, -98.1141, -1.45371, 0.44 ) }
    dend_41 { pt3dadd( -6.73014, -98.8333, -1.1488, 0.44 ) }
    dend_41 { pt3dadd( -6.44897, -99.6944, -0.86134, 0.29 ) }
    dend_41 { pt3dadd( -6.15932, -100.502, -0.577445, 0.29 ) }
    dend_41 { pt3dadd( -5.86484, -101.181, -0.31779, 0.59 ) }
    dend_41 { pt3dadd( -5.55217, -101.765, -0.0846124, 0.59 ) }
    dend_41 { pt3dadd( -5.15565, -102.376, 0.170717, 0.37 ) }
    dend_41 { pt3dadd( -4.71375, -102.953, 0.418393, 0.66 ) }
    dend_41 { pt3dadd( -4.27224, -103.44, 0.64043, 0.52 ) }
    dend_41 { pt3dadd( -3.58402, -104.093, 0.949248, 0.37 ) }
    dend_41 { pt3dadd( -3.04747, -104.552, 1.16565, 0.37 ) }
    dend_41 { pt3dadd( -2.22932, -105.23, 1.4668, 0.37 ) }
    dend_41 { pt3dadd( -1.42425, -105.882, 1.7389, 1.03 ) }
    dend_41 { pt3dadd( -0.83306, -106.361, 1.9216, 1.18 ) }
    dend_41 { pt3dadd( -0.26905, -106.821, 2.0761, 0.81 ) }
    dend_41 { pt3dadd( 0.180104, -107.192, 2.1855, 0.52 ) }
    dend_41 { pt3dadd( 1.02081, -107.893, 2.38921, 0.52 ) }
    dend_41 { pt3dadd( 1.81906, -108.584, 2.58013, 0.59 ) }
    dend_41 { pt3dadd( 2.52239, -109.236, 2.72172, 0.59 ) }
    dend_41 { pt3dadd( 3.09868, -109.824, 2.82005, 0.81 ) }
    dend_41 { pt3dadd( 3.56846, -110.336, 2.8917, 0.81 ) }
    dend_41 { pt3dadd( 4.08637, -110.929, 2.96009, 0.66 ) }
    dend_41 { pt3dadd( 4.46135, -111.382, 3.0005, 0.29 ) }
    dend_41 { pt3dadd( 5.32069, -112.485, 3.07793, 0.52 ) }
    dend_41 { pt3dadd( 6.05316, -113.446, 3.13805, 1.03 ) }
    dend_41 { pt3dadd( 6.31661, -113.798, 3.15468, 1.47 ) }
    dend_41 { pt3dadd( 6.8001, -114.413, 3.18313, 1.62 ) }
    dend_41 { pt3dadd( 7.45387, -115.158, 3.2233, 1.03 ) }
    dend_41 { pt3dadd( 8.0857, -115.802, 3.28224, 0.29 ) }
    dend_41 { pt3dadd( 8.69598, -116.361, 3.3619, 0.29 ) }
    dend_41 { pt3dadd( 9.4126, -116.963, 3.45672, 0.37 ) }
    dend_41 { pt3dadd( 10.1592, -117.581, 3.55615, 0.66 ) }
    dend_41 { pt3dadd( 10.543, -117.897, 3.61223, 0.81 ) }
    dend_41 { pt3dadd( 11.1471, -118.38, 3.71666, 0.96 ) }
    dend_41 { pt3dadd( 11.6009, -118.739, 3.80631, 0.44 ) }
    dend_41 { pt3dadd( 11.9586, -119.018, 3.88858, 0.29 ) }
    dend_41 { pt3dadd( 12.6448, -119.548, 4.07422, 0.29 ) }
    dend_41 { pt3dadd( 13.1583, -119.991, 4.22265, 0.59 ) }
    dend_41 { pt3dadd( 13.6454, -120.468, 4.37247, 0.74 ) }
    dend_41 { pt3dadd( 14.0316, -120.892, 4.49665, 0.74 ) }
    dend_41 { pt3dadd( 14.5451, -121.524, 4.6651, 0.74 ) }
    dend_41 { pt3dadd( 14.9543, -122.077, 4.79519, 0.44 ) }
    dend_41 { pt3dadd( 15.4957, -122.871, 4.96234, 0.29 ) }
    dend_41 { pt3dadd( 15.8154, -123.369, 5.05459, 0.66 ) }
    dend_41 { pt3dadd( 16.2151, -124.004, 5.15941, 0.88 ) }
    dend_41 { pt3dadd( 16.5897, -124.591, 5.2522, 0.96 ) }
    dend_41 { pt3dadd( 17.1278, -125.412, 5.39326, 0.66 ) }
    dend_41 { pt3dadd( 17.6814, -126.254, 5.54481, 0.37 ) }
    dend_41 { pt3dadd( 18.3375, -127.203, 5.73152, 0.74 ) }
    dend_41 { pt3dadd( 18.7035, -127.716, 5.83757, 0.81 ) }
    dend_41 { pt3dadd( 19.1247, -128.316, 5.96424, 0.37 ) }
    dend_41 { pt3dadd( 19.6841, -129.155, 6.13837, 0.37 ) }
    dend_41 { pt3dadd( 20.162, -129.908, 6.29024, 0.37 ) }
    dend_41 { pt3dadd( 20.5579, -130.553, 6.41481, 0.37 ) }
    dend_41 { pt3dadd( 20.8754, -131.094, 6.51172, 0.52 ) }
    dend_41 { pt3dadd( 21.2567, -131.733, 6.61868, 0.52 ) }
    dend_41 { pt3dadd( 21.6544, -132.384, 6.71778, 0.37 ) }
    dend_41 { pt3dadd( 22.0667, -133.069, 6.80502, 0.37 ) }
    dend_41 { pt3dadd( 22.5511, -133.85, 6.90707, 0.81 ) }
    dend_41 { pt3dadd( 22.8463, -134.279, 6.97011, 0.88 ) }
    dend_41 { pt3dadd( 23.3542, -134.935, 7.07884, 0.59 ) }
    dend_41 { pt3dadd( 23.7966, -135.458, 7.17572, 0.37 ) }
    dend_41 { pt3dadd( 24.2513, -135.954, 7.27637, 0.37 ) }
    dend_41 { pt3dadd( 24.8336, -136.551, 7.41098, 0.44 ) }
    dend_41 { pt3dadd( 26.0305, -137.694, 7.69758, 0.44 ) }
    dend_41 { pt3dadd( 26.8173, -138.361, 7.89019, 1.18 ) }
    dend_41 { pt3dadd( 27.411, -138.827, 8.03994, 1.47 ) }
    dend_41 { pt3dadd( 28.0723, -139.315, 8.19748, 1.47 ) }
    dend_41 { pt3dadd( 29.0511, -140.027, 8.41523, 1.18 ) }
    dend_41 { pt3dadd( 29.8159, -140.615, 8.56487, 0.29 ) }
    dend_41 { pt3dadd( 30.2952, -141.016, 8.64283, 0.29 ) }
    dend_41 { pt3dadd( 30.6643, -141.342, 8.68436, 0.29 ) }
    dend_41 { pt3dadd( 31.3374, -141.983, 8.70584, 0.59 ) }
    dend_41 { pt3dadd( 31.9992, -142.678, 8.67768, 0.66 ) }
    dend_41 { pt3dadd( 32.37, -143.115, 8.62974, 0.74 ) }
    dend_41 { pt3dadd( 32.753, -143.623, 8.56176, 0.59 ) }
    dend_41 { pt3dadd( 33.174, -144.249, 8.47514, 0.44 ) }
    dend_41 { pt3dadd( 33.678, -145.048, 8.35714, 0.29 ) }
    dend_41 { pt3dadd( 33.9721, -145.588, 8.27797, 0.37 ) }
    dend_41 { pt3dadd( 34.4021, -146.493, 8.14215, 0.52 ) }
    dend_41 { pt3dadd( 34.6836, -147.185, 8.05797, 1.03 ) }
    dend_41 { pt3dadd( 34.9557, -147.909, 7.96624, 1.55 ) }
    dend_41 { pt3dadd( 35.1889, -148.536, 7.89546, 1.55 ) }
    dend_41 { pt3dadd( 35.767, -150.118, 7.71963, 0.44 ) }
    dend_41 { pt3dadd( 36.1664, -151.15, 7.5986, 0.37 ) }
    dend_41 { pt3dadd( 37.1975, -153.457, 7.2954, 0.29 ) }
    dend_41 { pt3dadd( 37.4614, -153.948, 7.22896, 0.29 ) }
    dend_41 { pt3dadd( 38.2955, -155.213, 7.069, 1.47 ) }
    dend_41 { pt3dadd( 38.6392, -155.625, 7.0194, 1.92 ) }
    dend_41 { pt3dadd( 39.3482, -156.287, 6.93112, 2.06 ) }
    dend_41 { pt3dadd( 40.4514, -157.107, 6.76662, 0.81 ) }
    dend_41 { pt3dadd( 41.9292, -157.98, 6.48854, 0.29 ) }
    dend_41 { pt3dadd( 42.8732, -158.496, 6.28672, 0.29 ) }
    dend_41 { pt3dadd( 44.1081, -159.148, 6.03195, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_41 { pt3dadd( 44.7076, -159.473, 5.93062, 0.52 ) }
    dend_41 { pt3dadd( 46.1068, -160.273, 5.76385, 0.29 ) }
    dend_41 { pt3dadd( 47.1109, -160.892, 5.72013, 0.88 ) }
    dend_41 { pt3dadd( 47.6728, -161.271, 5.76196, 0.74 ) }
    dend_41 { pt3dadd( 48.9217, -162.245, 6.07085, 0.29 ) }
    dend_41 { pt3dadd( 49.7489, -162.956, 6.42603, 0.29 ) }
    dend_41 { pt3dadd( 50.5242, -163.669, 6.86221, 0.59 ) }
    dend_41 { pt3dadd( 51.0076, -164.141, 7.19121, 0.66 ) }
    dend_41 { pt3dadd( 51.908, -165.058, 7.85164, 0.29 ) }
    dend_41 { pt3dadd( 52.8068, -166.022, 8.50752, 0.29 ) }
    dend_41 { pt3dadd( 53.4038, -166.717, 8.89948, 0.29 ) }
    dend_41 { pt3dadd( 53.957, -167.439, 9.22771, 1.03 ) }
    dend_41 { pt3dadd( 54.3663, -168.006, 9.43608, 1.47 ) }
    dend_41 { pt3dadd( 54.7468, -168.555, 9.59058, 1.18 ) }
    dend_41 { pt3dadd( 55.4625, -169.628, 9.81022, 0.22 ) }
    dend_41 { pt3dadd( 56.1115, -170.62, 9.97635, 0.22 ) }
    dend_41 { pt3dadd( 56.9509, -171.9, 10.1556, 0.22 ) }
    dend_41 { pt3dadd( 57.3109, -172.428, 10.2303, 0.52 ) }
    dend_41 { pt3dadd( 57.9354, -173.309, 10.3561, 0.29 ) }
    dend_41 { pt3dadd( 58.5315, -174.124, 10.4673, 0.29 ) }
    dend_41 { pt3dadd( 58.9155, -174.615, 10.5269, 0.88 ) }
    dend_41 { pt3dadd( 59.4357, -175.275, 10.6293, 0.88 ) }
    dend_41 { pt3dadd( 60.1947, -176.272, 10.8002, 0.29 ) }
    dend_41 { pt3dadd( 60.5335, -176.733, 10.8958, 0.29 ) }
    dend_41 { pt3dadd( 61.1065, -177.525, 11.1202, 0.96 ) }
    dend_41 { pt3dadd( 61.491, -178.047, 11.3267, 1.4 ) }
    dend_41 { pt3dadd( 61.8848, -178.574, 11.5826, 1.77 ) }
    dend_41 { pt3dadd( 62.1257, -178.883, 11.7608, 1.77 ) }
    dend_41 { pt3dadd( 63.065, -180.024, 12.4807, 0.22 ) }
    dend_41 { pt3dadd( 64.019, -181.116, 13.2512, 0.22 ) }
    dend_41 { pt3dadd( 64.7758, -181.904, 13.8514, 0.88 ) }
    dend_41 { pt3dadd( 65.1227, -182.244, 14.1114, 1.33 ) }
    dend_41 { pt3dadd( 65.4888, -182.582, 14.3558, 1.33 ) }
    dend_41 { pt3dadd( 66.3376, -183.33, 14.8852, 0.22 ) }
    dend_41 { pt3dadd( 67.4112, -184.231, 15.4918, 0.22 ) }
    dend_41 { pt3dadd( 68.578, -185.206, 16.0696, 0.22 ) }
    dend_41 { pt3dadd( 69.6599, -186.136, 16.5345, 0.22 ) }
    dend_41 { pt3dadd( 70.2973, -186.704, 16.7827, 0.74 ) }
    dend_41 { pt3dadd( 70.6446, -187.031, 16.9045, 0.88 ) }
    dend_41 { pt3dadd( 71.057, -187.448, 17.0264, 0.52 ) }
    dend_41 { pt3dadd( 71.7944, -188.292, 17.1903, 0.22 ) }
    dend_41 { pt3dadd( 72.1662, -188.774, 17.2589, 0.88 ) }
    dend_41 { pt3dadd( 72.5688, -189.344, 17.3382, 1.33 ) }
    dend_41 { pt3dadd( 72.8825, -189.816, 17.4087, 1.33 ) }
    dend_41 { pt3dadd( 73.5993, -190.973, 17.5915, 0.29 ) }
    dend_41 { pt3dadd( 74.411, -192.388, 17.8388, 0.29 ) }
    dend_41 { pt3dadd( 74.7905, -193.091, 17.9818, 0.44 ) }
    dend_41 { pt3dadd( 75.1101, -193.708, 18.1269, 0.59 ) }
    dend_41 { pt3dadd( 75.3932, -194.273, 18.2765, 0.59 ) }
    dend_41 { pt3dadd( 75.8349, -195.175, 18.5414, 0.22 ) }
    dend_41 { pt3dadd( 76.275, -196.101, 18.8265, 0.22 ) }
    dend_41 { pt3dadd( 76.549, -196.666, 19.0032, 0.74 ) }
    dend_41 { pt3dadd( 76.7174, -197.003, 19.1036, 0.88 ) }
    dend_41 { pt3dadd( 76.9506, -197.435, 19.2205, 0.88 ) }
    dend_41 { pt3dadd( 77.4208, -198.278, 19.4494, 0.22 ) }
    dend_41 { pt3dadd( 78.269, -199.709, 19.8283, 0.22 ) }
    dend_41 { pt3dadd( 78.6577, -200.337, 19.9778, 0.52 ) }
    dend_41 { pt3dadd( 78.9157, -200.747, 20.0625, 0.66 ) }
    dend_41 { pt3dadd( 79.3252, -201.385, 20.1823, 0.44 ) }
    dend_41 { pt3dadd( 86.0427, -207.94, 20.5869, 0.44 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 60/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -8.06438, -93.0249, -3.97347, 2.28 ) }
    dend_34 { pt3dadd( -8.43702, -93.7535, -3.88554, 2.28 ) }
    dend_34 { pt3dadd( -8.79283, -94.3757, -3.78049, 1.62 ) }
    dend_34 { pt3dadd( -9.24744, -95.1144, -3.6544, 1.33 ) }
    dend_34 { pt3dadd( -9.70011, -95.8085, -3.54866, 0.88 ) }
    dend_34 { pt3dadd( -9.92044, -96.1281, -3.50664, 0.88 ) }
    dend_34 { pt3dadd( -10.2681, -96.5971, -3.4544, 1.03 ) }
    dend_34 { pt3dadd( -10.957, -97.4338, -3.38298, 1.03 ) }
    dend_34 { pt3dadd( -11.5476, -98.0717, -3.34975, 0.96 ) }
    dend_34 { pt3dadd( -12.0124, -98.532, -3.35155, 0.88 ) }
    dend_34 { pt3dadd( -12.4056, -98.9248, -3.37965, 1.11 ) }
    dend_34 { pt3dadd( -12.8292, -99.4003, -3.44692, 1.33 ) }
    dend_34 { pt3dadd( -13.1547, -99.8551, -3.53514, 1.55 ) }
    dend_34 { pt3dadd( -13.4069, -100.321, -3.64424, 1.25 ) }
    dend_34 { pt3dadd( -13.5815, -100.793, -3.75983, 0.96 ) }
    dend_34 { pt3dadd( -13.7192, -101.444, -3.91169, 0.88 ) }
    dend_34 { pt3dadd( -13.8047, -102.254, -4.09723, 0.88 ) }
    dend_34 { pt3dadd( -13.8405, -103.121, -4.28531, 0.88 ) }
    dend_34 { pt3dadd( -13.8464, -103.884, -4.44137, 1.03 ) }
    dend_34 { pt3dadd( -13.8349, -104.597, -4.57638, 1.03 ) }
    dend_34 { pt3dadd( -13.8149, -105.437, -4.71717, 1.03 ) }
    dend_34 { pt3dadd( -13.793, -106.202, -4.82755, 1.25 ) }
    dend_34 { pt3dadd( -13.7591, -107.085, -4.92626, 1.55 ) }
    dend_34 { pt3dadd( -13.7202, -107.76, -4.97751, 1.55 ) }
    dend_34 { pt3dadd( -13.6408, -108.691, -5.01865, 1.33 ) }
    dend_34 { pt3dadd( -13.5615, -109.452, -5.03523, 1.33 ) }
    dend_34 { pt3dadd( -13.4935, -110.131, -5.0418, 1.11 ) }
    dend_34 { pt3dadd( -13.4219, -110.857, -5.01704, 1.11 ) }
    dend_34 { pt3dadd( -13.3625, -111.655, -4.9666, 0.96 ) }
    dend_34 { pt3dadd( -13.3411, -112.248, -4.91738, 0.96 ) }
    dend_34 { pt3dadd( -13.3467, -113.106, -4.82064, 0.88 ) }
    dend_34 { pt3dadd( -13.391, -114.236, -4.67096, 0.88 ) }
    dend_34 { pt3dadd( -13.4567, -115.216, -4.5207, 1.03 ) }
    dend_34 { pt3dadd( -13.5355, -116.088, -4.37132, 1.25 ) }
    dend_34 { pt3dadd( -13.6284, -116.917, -4.2201, 1.33 ) }
    dend_34 { pt3dadd( -13.7127, -117.569, -4.09624, 1.62 ) }
    dend_34 { pt3dadd( -13.7953, -118.239, -3.95964, 2.5 ) }
    dend_34 { pt3dadd( -13.8275, -118.603, -3.8845, 2.8 ) }
    dend_34 { pt3dadd( -13.8545, -119.054, -3.81076, 3.02 ) }
    dend_34 { pt3dadd( -13.8621, -119.477, -3.73577, 3.02 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_34 { pt3dadd( -13.8639, -119.76, -3.68642, 3.32 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 1/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 0.341005, -54.8084, -8.25276, 0.81 ) }
    dend_30 { pt3dadd( -0.0783198, -56.3478, -8.35513, 0.81 ) }
    dend_30 { pt3dadd( -0.453836, -57.3762, -8.42499, 0.66 ) }
    dend_30 { pt3dadd( -0.950132, -58.5191, -8.52441, 0.66 ) }
    dend_30 { pt3dadd( -1.51433, -59.7124, -8.64879, 0.52 ) }
    dend_30 { pt3dadd( -1.74594, -60.1887, -8.70272, 0.52 ) }
    dend_30 { pt3dadd( -2.35679, -61.4432, -8.85015, 0.74 ) }
    dend_30 { pt3dadd( -2.99647, -62.7176, -8.94559, 0.74 ) }
    dend_30 { pt3dadd( -3.54843, -63.7697, -9.04839, 0.88 ) }
    dend_30 { pt3dadd( -4.16916, -64.908, -9.20331, 0.59 ) }
    dend_30 { pt3dadd( -4.56296, -65.6506, -9.33333, 1.03 ) }
    dend_30 { pt3dadd( -4.92386, -66.3816, -9.45618, 1.25 ) }
    dend_30 { pt3dadd( -5.28881, -67.246, -9.57273, 1.03 ) }
    dend_30 { pt3dadd( -5.68656, -68.3688, -9.69019, 0.66 ) }
    dend_30 { pt3dadd( -5.98817, -69.2864, -9.77877, 0.66 ) }
    dend_30 { pt3dadd( -6.29086, -70.2341, -9.88247, 0.81 ) }
    dend_30 { pt3dadd( -6.61429, -71.3459, -10.0238, 0.81 ) }
    dend_30 { pt3dadd( -6.83332, -72.2806, -10.1609, 0.66 ) }
    dend_30 { pt3dadd( -6.99289, -73.2765, -10.3182, 0.52 ) }
    dend_30 { pt3dadd( -7.04724, -73.871, -10.4314, 0.52 ) }
    dend_30 { pt3dadd( -7.09647, -74.6009, -10.5837, 0.52 ) }
    dend_30 { pt3dadd( -7.15897, -75.6415, -10.8268, 0.66 ) }
    dend_30 { pt3dadd( -7.22585, -76.5855, -11.0642, 0.66 ) }
    dend_30 { pt3dadd( -7.31156, -77.5816, -11.334, 0.59 ) }
    dend_30 { pt3dadd( -7.43347, -78.6714, -11.6344, 1.18 ) }
    dend_30 { pt3dadd( -7.53726, -79.6208, -11.8839, 1.55 ) }
    dend_30 { pt3dadd( -7.66287, -80.5267, -12.116, 1.99 ) }
    dend_30 { pt3dadd( -7.8962, -81.6157, -12.4136, 2.73 ) }
    dend_30 { pt3dadd( -8.13008, -82.4153, -12.6472, 2.87 ) }
    dend_30 { pt3dadd( -8.38712, -83.1573, -12.8879, 3.02 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 31/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 0.341005, -54.8084, -8.25276, 0.52 ) }
    dend_29 { pt3dadd( 0.961872, -56.2392, -9.5731, 0.52 ) }
    dend_29 { pt3dadd( 1.09896, -56.5764, -9.84998, 0.52 ) }
    dend_29 { pt3dadd( 1.5814, -57.6903, -10.7672, 0.52 ) }
    dend_29 { pt3dadd( 1.98173, -58.5159, -11.4573, 0.66 ) }
    dend_29 { pt3dadd( 2.25238, -59.0208, -11.864, 0.66 ) }
    dend_29 { pt3dadd( 2.5065, -59.4468, -12.2011, 0.44 ) }
    dend_29 { pt3dadd( 2.81113, -60.0353, -12.6587, 0.88 ) }
    dend_29 { pt3dadd( 3.08447, -60.588, -13.0483, 1.33 ) }
    dend_29 { pt3dadd( 3.38929, -61.1833, -13.429, 1.47 ) }
    dend_29 { pt3dadd( 3.73382, -61.873, -13.9453, 1.03 ) }
    dend_29 { pt3dadd( 4.1287, -62.9463, -14.8661, 0.44 ) }
    dend_29 { pt3dadd( 4.17601, -63.6016, -15.5426, 0.44 ) }
    dend_29 { pt3dadd( 4.01778, -64.353, -16.5245, 0.37 ) }
    dend_29 { pt3dadd( 3.81166, -64.8981, -17.3662, 0.37 ) }
    dend_29 { pt3dadd( 3.53954, -65.5983, -18.6306, 0.37 ) }
    dend_29 { pt3dadd( 3.38795, -66.0576, -19.5904, 0.74 ) }
    dend_29 { pt3dadd( 3.32654, -66.3704, -20.3161, 0.96 ) }
    dend_29 { pt3dadd( 3.3269, -66.8055, -21.314, 0.96 ) }
    dend_29 { pt3dadd( 3.41267, -67.5958, -23.0588, 0.44 ) }
    dend_29 { pt3dadd( 3.53509, -68.1399, -24.1647, 1.33 ) }
    dend_29 { pt3dadd( 3.75473, -68.8877, -25.5512, 1.55 ) }
    dend_29 { pt3dadd( 3.96238, -69.5763, -26.7577, 1.33 ) }
    dend_29 { pt3dadd( 4.25276, -70.5162, -28.2666, 0.81 ) }
    dend_29 { pt3dadd( 4.38703, -70.9192, -28.8478, 1.25 ) }
    dend_29 { pt3dadd( 4.57746, -71.4187, -29.479, 0.88 ) }
    dend_29 { pt3dadd( 4.77891, -71.98, -30.0842, 0.37 ) }
    dend_29 { pt3dadd( 4.94735, -72.4749, -30.5241, 0.81 ) }
    dend_29 { pt3dadd( 5.11475, -73.0054, -30.9372, 1.03 ) }
    dend_29 { pt3dadd( 5.22679, -73.3247, -31.1573, 1.03 ) }
    dend_29 { pt3dadd( 5.65802, -74.4316, -31.8854, 0.29 ) }
    dend_29 { pt3dadd( 5.89341, -74.9939, -32.2315, 0.29 ) }
    dend_29 { pt3dadd( 6.23618, -75.7224, -32.6464, 1.84 ) }
    dend_29 { pt3dadd( 6.57318, -76.336, -32.9984, 2.14 ) }
    dend_29 { pt3dadd( 7.52838, -77.8505, -33.9215, 0.29 ) }
    dend_29 { pt3dadd( 8.03047, -78.5448, -34.3628, 0.81 ) }
    dend_29 { pt3dadd( 8.54772, -79.1686, -34.7719, 0.81 ) }
    dend_29 { pt3dadd( 9.09283, -79.7498, -35.1833, 0.52 ) }
    dend_29 { pt3dadd( 9.843, -80.4665, -35.7581, 1.25 ) }
    dend_29 { pt3dadd( 10.3351, -80.902, -36.1469, 1.4 ) }
    dend_29 { pt3dadd( 11.6014, -81.9791, -37.1474, 0.22 ) }
    dend_29 { pt3dadd( 12.3838, -82.6346, -37.7342, 0.22 ) }
    dend_29 { pt3dadd( 13.2707, -83.3842, -38.3643, 1.4 ) }
    dend_29 { pt3dadd( 13.8253, -83.8827, -38.7375, 2.21 ) }
    dend_29 { pt3dadd( 14.0791, -84.1299, -38.8923, 2.21 ) }
    dend_29 { pt3dadd( 15.7238, -85.8756, -39.7972, 0.22 ) }
    dend_29 { pt3dadd( 16.1643, -86.3678, -40.028, 0.74 ) }
    dend_29 { pt3dadd( 16.5532, -86.8242, -40.2387, 1.03 ) }
    dend_29 { pt3dadd( 17.1794, -87.6153, -40.5895, 0.59 ) }
    dend_29 { pt3dadd( 18.6386, -89.5688, -41.4245, 0.22 ) }
    dend_29 { pt3dadd( 20.4849, -92.1086, -42.5257, 0.22 ) }
    dend_29 { pt3dadd( 21.127, -93.0117, -42.9454, 0.81 ) }
    dend_29 { pt3dadd( 21.6029, -93.6794, -43.2697, 0.96 ) }
    dend_29 { pt3dadd( 23.1453, -95.8552, -44.3705, 0.22 ) }
    dend_29 { pt3dadd( 24.1086, -97.1988, -45.1055, 0.22 ) }
    dend_29 { pt3dadd( 24.6385, -97.9412, -45.5536, 0.88 ) }
    dend_29 { pt3dadd( 25.1592, -98.6615, -46.0376, 0.88 ) }
    dend_29 { pt3dadd( 26.6252, -100.674, -47.4489, 0.15 ) }
    dend_29 { pt3dadd( 27.7365, -102.144, -48.4521, 0.15 ) }
    dend_29 { pt3dadd( 28.3882, -102.974, -49.0303, 0.15 ) }
    dend_29 { pt3dadd( 28.9805, -103.731, -49.5462, 1.62 ) }
    dend_29 { pt3dadd( 29.3494, -104.219, -49.8594, 1.92 ) }
    dend_29 { pt3dadd( 29.6427, -104.611, -50.0847, 1.92 ) }
    dend_29 { pt3dadd( 31.5439, -107.218, -51.4563, 0.22 ) }
    dend_29 { pt3dadd( 31.952, -107.775, -51.724, 0.66 ) }
    dend_29 { pt3dadd( 32.2621, -108.208, -51.9197, 0.88 ) }
    dend_29 { pt3dadd( 32.5804, -108.65, -52.1222, 0.88 ) }
    dend_29 { pt3dadd( 33.5932, -110.093, -52.8957, 0.15 ) }
    dend_29 { pt3dadd( 34.3314, -111.263, -53.6527, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_29 { pt3dadd( 34.7151, -111.976, -54.1805, 0.81 ) }
    dend_29 { pt3dadd( 34.941, -112.486, -54.5691, 1.03 ) }
    dend_29 { pt3dadd( 35.1049, -112.949, -54.9283, 1.03 ) }
    dend_29 { pt3dadd( 35.5066, -114.507, -56.1721, 0.22 ) }
    dend_29 { pt3dadd( 35.7684, -116.201, -57.5746, 0.22 ) }
    dend_29 { pt3dadd( 35.8467, -116.891, -58.1848, 0.22 ) }
    dend_29 { pt3dadd( 35.9432, -117.89, -59.1189, 1.03 ) }
    dend_29 { pt3dadd( 35.9955, -118.408, -59.6091, 1.62 ) }
    dend_29 { pt3dadd( 36.0483, -118.932, -60.1322, 1.62 ) }
    dend_29 { pt3dadd( 36.154, -119.816, -61.0724, 1.03 ) }
    dend_29 { pt3dadd( 36.4087, -121.626, -63.095, 0.22 ) }
    dend_29 { pt3dadd( 36.5218, -122.473, -64.1446, 0.44 ) }
    dend_29 { pt3dadd( 36.5986, -122.939, -64.7533, 0.44 ) }
    dend_29 { pt3dadd( 36.7822, -123.965, -66.1067, 0.66 ) }
    dend_29 { pt3dadd( 36.8866, -124.482, -66.7701, 0.96 ) }
    dend_29 { pt3dadd( 37.0222, -125.078, -67.5214, 0.37 ) }
    dend_29 { pt3dadd( 37.5063, -126.99, -69.8377, 0.66 ) }
    dend_29 { pt3dadd( 37.6223, -127.383, -70.3008, 0.66 ) }
    dend_29 { pt3dadd( 38.0768, -128.808, -71.9976, 0.22 ) }
    dend_29 { pt3dadd( 38.3512, -129.56, -72.8566, 0.22 ) }
    dend_29 { pt3dadd( 38.6223, -130.23, -73.6053, 0.81 ) }
    dend_29 { pt3dadd( 38.913, -130.831, -74.2585, 0.96 ) }
    dend_29 { pt3dadd( 39.1393, -131.221, -74.5794, 0.96 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 23/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 25.6591, 172.712, -52.1418, 0.37 ) }
    dend_24 { pt3dadd( 28.4657, 171.563, -50.1781, 0.37 ) }
    dend_24 { pt3dadd( 29.0383, 171.329, -49.7774, 0.37 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 26/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 25.6591, 172.712, -52.1418, 0.22 ) }
    dend_23 { pt3dadd( 26.8183, 174.952, -53.0991, 0.22 ) }
    dend_23 { pt3dadd( 27.3834, 176.178, -53.6406, 0.22 ) }
    dend_23 { pt3dadd( 27.8044, 177.152, -54.0785, 0.74 ) }
    dend_23 { pt3dadd( 27.9517, 177.515, -54.2387, 0.74 ) }
    dend_23 { pt3dadd( 28.6345, 179.195, -54.9808, 0.15 ) }
    dend_23 { pt3dadd( 29.0762, 180.282, -55.461, 0.15 ) }
    dend_23 { pt3dadd( 29.3367, 181.07, -55.8841, 0.66 ) }
    dend_23 { pt3dadd( 29.4798, 181.563, -56.1076, 0.88 ) }
    dend_23 { pt3dadd( 29.6535, 182.127, -56.3283, 0.29 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 36/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -9.12181, 41.4178, 3.82828, 0.66 ) }
    dend_17 { pt3dadd( -9.38144, 43.4324, 3.74899, 0.66 ) }
    dend_17 { pt3dadd( -9.43645, 44.1882, 3.77173, 0.96 ) }
    dend_17 { pt3dadd( -9.50322, 45.0729, 3.8149, 0.96 ) }
    dend_17 { pt3dadd( -9.59307, 46.2796, 3.8908, 0.59 ) }
    dend_17 { pt3dadd( -9.66479, 47.3471, 3.97056, 0.59 ) }
    dend_17 { pt3dadd( -9.73452, 48.6077, 4.07921, 0.59 ) }
    dend_17 { pt3dadd( -9.81946, 50.431, 4.30693, 0.59 ) }
    dend_17 { pt3dadd( -9.83657, 51.2895, 4.42837, 0.52 ) }
    dend_17 { pt3dadd( -9.83921, 52.5698, 4.62582, 0.88 ) }
    dend_17 { pt3dadd( -9.83898, 53.4985, 4.76242, 1.11 ) }
    dend_17 { pt3dadd( -9.85375, 54.6095, 4.90343, 1.11 ) }
    dend_17 { pt3dadd( -9.88754, 55.8896, 5.05969, 0.74 ) }
    dend_17 { pt3dadd( -9.95096, 57.233, 5.21265, 0.74 ) }
    dend_17 { pt3dadd( -10.0503, 58.9524, 5.40642, 0.74 ) }
    dend_17 { pt3dadd( -10.1375, 60.1405, 5.52437, 0.52 ) }
    dend_17 { pt3dadd( -10.2478, 61.4144, 5.623, 0.52 ) }
    dend_17 { pt3dadd( -10.3332, 62.3339, 5.67837, 0.96 ) }
    dend_17 { pt3dadd( -10.4514, 63.695, 5.7317, 1.11 ) }
    dend_17 { pt3dadd( -10.6186, 65.7176, 5.77648, 1.11 ) }
    dend_17 { pt3dadd( -10.7202, 67.0485, 5.79019, 1.11 ) }
    dend_17 { pt3dadd( -10.8061, 68.373, 5.82126, 0.81 ) }
    dend_17 { pt3dadd( -10.8662, 69.5352, 5.86399, 0.74 ) }
    dend_17 { pt3dadd( -10.9084, 70.7436, 5.9299, 0.74 ) }
    dend_17 { pt3dadd( -10.9269, 71.8731, 6.01994, 0.44 ) }
    dend_17 { pt3dadd( -10.9432, 72.8257, 6.11737, 0.44 ) }
    dend_17 { pt3dadd( -10.9926, 74.3887, 6.31581, 0.74 ) }
    dend_17 { pt3dadd( -11.0351, 75.465, 6.47374, 0.74 ) }
    dend_17 { pt3dadd( -11.0774, 76.6077, 6.65364, 0.37 ) }
    dend_17 { pt3dadd( -11.0925, 77.7913, 6.86056, 0.74 ) }
    dend_17 { pt3dadd( -11.0765, 78.8286, 7.01077, 0.96 ) }
    dend_17 { pt3dadd( -11.0291, 80.0232, 7.14309, 0.96 ) }
    dend_17 { pt3dadd( -10.9427, 81.3451, 7.22905, 0.81 ) }
    dend_17 { pt3dadd( -10.8358, 82.59, 7.27868, 0.52 ) }
    dend_17 { pt3dadd( -10.6961, 83.8937, 7.30819, 0.52 ) }
    dend_17 { pt3dadd( -10.4614, 85.6052, 7.33897, 1.03 ) }
    dend_17 { pt3dadd( -10.3155, 86.5148, 7.35436, 1.55 ) }
    dend_17 { pt3dadd( -10.1731, 87.3376, 7.36423, 1.69 ) }
    dend_17 { pt3dadd( -10.0794, 87.8735, 7.37147, 1.69 ) }
    dend_17 { pt3dadd( -9.85078, 89.1959, 7.4133, 0.37 ) }
    dend_17 { pt3dadd( -9.66973, 90.297, 7.48904, 0.44 ) }
    dend_17 { pt3dadd( -9.56901, 90.8647, 7.57022, 0.44 ) }
    dend_17 { pt3dadd( -9.44188, 91.5152, 7.68971, 0.44 ) }
    dend_17 { pt3dadd( -9.22043, 92.5875, 7.91971, 0.29 ) }
    dend_17 { pt3dadd( -9.11256, 93.0423, 8.02625, 0.59 ) }
    dend_17 { pt3dadd( -8.8979, 93.8116, 8.22347, 0.44 ) }
    dend_17 { pt3dadd( -8.54817, 95.0203, 8.54389, 0.29 ) }
    dend_17 { pt3dadd( -8.24283, 96.1415, 8.83749, 1.18 ) }
    dend_17 { pt3dadd( -8.09005, 96.7452, 8.99342, 1.18 ) }
    dend_17 { pt3dadd( -7.86658, 97.6524, 9.22272, 0.52 ) }
    dend_17 { pt3dadd( -7.6537, 98.5227, 9.4419, 0.29 ) }
    dend_17 { pt3dadd( -7.41539, 99.5125, 9.72158, 0.29 ) }
    dend_17 { pt3dadd( -7.23503, 100.404, 10.0141, 0.29 ) }
    dend_17 { pt3dadd( -7.14622, 100.985, 10.223, 0.29 ) }
    dend_17 { pt3dadd( -7.02199, 102.14, 10.6613, 0.81 ) }
    dend_17 { pt3dadd( -6.94086, 103.151, 11.0629, 0.44 ) }
    dend_17 { pt3dadd( -6.84373, 104.119, 11.4485, 0.22 ) }
    dend_17 { pt3dadd( -6.69898, 105.094, 11.8435, 0.44 ) }
    dend_17 { pt3dadd( -6.63699, 105.467, 12.0017, 0.44 ) }
    dend_17 { pt3dadd( -6.51133, 106.267, 12.3423, 0.29 ) }
    dend_17 { pt3dadd( -6.41565, 106.99, 12.6482, 0.29 ) }
    dend_17 { pt3dadd( -6.27248, 107.98, 13.047, 0.29 ) }
    dend_17 { pt3dadd( -6.16678, 108.614, 13.2818, 0.29 ) }
    dend_17 { pt3dadd( -6.02098, 109.432, 13.5773, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_17 { pt3dadd( -5.90946, 110.097, 13.8218, 0.66 ) }
    dend_17 { pt3dadd( -5.7649, 110.94, 14.1081, 0.74 ) }
    dend_17 { pt3dadd( -5.64658, 111.859, 14.4081, 0.37 ) }
    dend_17 { pt3dadd( -5.57723, 112.58, 14.6366, 0.37 ) }
    dend_17 { pt3dadd( -5.47308, 113.592, 14.9245, 0.52 ) }
    dend_17 { pt3dadd( -5.37869, 114.36, 15.1156, 0.59 ) }
    dend_17 { pt3dadd( -5.22594, 115.529, 15.392, 0.44 ) }
    dend_17 { pt3dadd( -5.11157, 116.354, 15.5807, 0.29 ) }
    dend_17 { pt3dadd( -5.02572, 116.932, 15.7185, 0.29 ) }
    dend_17 { pt3dadd( -4.84453, 118.207, 16.0368, 1.11 ) }
    dend_17 { pt3dadd( -4.74643, 118.936, 16.2262, 1.25 ) }
    dend_17 { pt3dadd( -4.68003, 119.456, 16.3664, 1.25 ) }
    dend_17 { pt3dadd( -4.5241, 120.547, 16.6685, 0.66 ) }
    dend_17 { pt3dadd( -4.401, 121.199, 16.8395, 0.29 ) }
    dend_17 { pt3dadd( -4.17354, 122.212, 17.1072, 0.29 ) }
    dend_17 { pt3dadd( -3.94246, 123.116, 17.3487, 0.29 ) }
    dend_17 { pt3dadd( -3.7084, 123.933, 17.5707, 0.29 ) }
    dend_17 { pt3dadd( -3.32685, 125.154, 17.9034, 0.96 ) }
    dend_17 { pt3dadd( -3.15597, 125.685, 18.0398, 1.47 ) }
    dend_17 { pt3dadd( -3.01865, 126.14, 18.1443, 1.47 ) }
    dend_17 { pt3dadd( -2.94495, 126.411, 18.1982, 1.47 ) }
    dend_17 { pt3dadd( -2.75879, 127.202, 18.3437, 0.74 ) }
    dend_17 { pt3dadd( -2.56849, 128.111, 18.5084, 0.29 ) }
    dend_17 { pt3dadd( -2.40241, 129.044, 18.6727, 0.52 ) }
    dend_17 { pt3dadd( -2.25027, 129.905, 18.8299, 0.74 ) }
    dend_17 { pt3dadd( -2.03528, 130.997, 19.0484, 0.44 ) }
    dend_17 { pt3dadd( -1.8443, 131.863, 19.2366, 0.29 ) }
    dend_17 { pt3dadd( -1.69466, 132.47, 19.3781, 0.29 ) }
    dend_17 { pt3dadd( -1.45849, 133.3, 19.5907, 0.66 ) }
    dend_17 { pt3dadd( -1.27099, 133.892, 19.7499, 0.74 ) }
    dend_17 { pt3dadd( -0.99558, 134.725, 19.9774, 0.74 ) }
    dend_17 { pt3dadd( -0.696547, 135.659, 20.2357, 0.29 ) }
    dend_17 { pt3dadd( -0.44727, 136.495, 20.4645, 0.29 ) }
    dend_17 { pt3dadd( 0.0147513, 138.179, 20.9166, 0.29 ) }
    dend_17 { pt3dadd( 0.272037, 139.324, 21.2641, 0.52 ) }
    dend_17 { pt3dadd( 0.397459, 140.014, 21.4903, 1.18 ) }
    dend_17 { pt3dadd( 0.480081, 140.612, 21.6955, 1.4 ) }
    dend_17 { pt3dadd( 0.573156, 141.585, 22.0378, 1.4 ) }
    dend_17 { pt3dadd( 0.616819, 142.349, 22.3083, 0.66 ) }
    dend_17 { pt3dadd( 0.694796, 144.14, 22.9377, 0.29 ) }
    dend_17 { pt3dadd( 0.76727, 145.27, 23.318, 0.29 ) }
    dend_17 { pt3dadd( 0.846891, 145.955, 23.5206, 0.37 ) }
    dend_17 { pt3dadd( 0.999362, 146.881, 23.7573, 0.37 ) }
    dend_17 { pt3dadd( 1.19949, 147.84, 23.9752, 0.37 ) }
    dend_17 { pt3dadd( 1.63213, 149.542, 24.3164, 0.37 ) }
    dend_17 { pt3dadd( 2.20071, 151.396, 24.6243, 0.37 ) }
    dend_17 { pt3dadd( 2.80572, 153.193, 24.9232, 1.33 ) }
    dend_17 { pt3dadd( 3.13193, 154.055, 25.0625, 1.99 ) }
    dend_17 { pt3dadd( 3.41004, 154.739, 25.1692, 1.99 ) }
    dend_17 { pt3dadd( 3.53004, 155.029, 25.2117, 1.99 ) }
    dend_17 { pt3dadd( 3.75357, 155.564, 25.2913, 1.99 ) }
    dend_17 { pt3dadd( 4.21565, 156.676, 25.4783, 0.59 ) }
    dend_17 { pt3dadd( 4.74215, 157.963, 25.7426, 0.29 ) }
    dend_17 { pt3dadd( 5.09944, 158.856, 25.977, 0.59 ) }
    dend_17 { pt3dadd( 5.3716, 159.543, 26.1803, 0.59 ) }
    dend_17 { pt3dadd( 5.93204, 160.978, 26.648, 0.37 ) }
    dend_17 { pt3dadd( 6.22481, 161.773, 26.9249, 0.37 ) }
    dend_17 { pt3dadd( 6.65943, 163.059, 27.3978, 0.37 ) }
    dend_17 { pt3dadd( 7.12634, 164.606, 27.9878, 0.74 ) }
    dend_17 { pt3dadd( 7.29084, 165.244, 28.2192, 0.74 ) }
    dend_17 { pt3dadd( 7.42506, 165.907, 28.4506, 0.88 ) }
    dend_17 { pt3dadd( 7.56415, 166.872, 28.7687, 0.44 ) }
    dend_17 { pt3dadd( 7.73926, 168.552, 29.2508, 0.29 ) }
    dend_17 { pt3dadd( 7.80805, 169.461, 29.4435, 0.52 ) }
    dend_17 { pt3dadd( 7.914, 171.166, 29.6795, 1.25 ) }
    dend_17 { pt3dadd( 7.94978, 171.897, 29.7537, 1.62 ) }
    dend_17 { pt3dadd( 7.97734, 172.379, 29.7788, 1.62 ) }
    dend_17 { pt3dadd( 8.0441, 173.377, 29.7866, 0.96 ) }
    dend_17 { pt3dadd( 8.17626, 174.873, 29.7375, 0.29 ) }
    dend_17 { pt3dadd( 8.2804, 175.733, 29.7007, 0.29 ) }
    dend_17 { pt3dadd( 8.43275, 176.777, 29.6745, 0.29 ) }
    dend_17 { pt3dadd( 8.58503, 177.866, 29.6799, 0.74 ) }
    dend_17 { pt3dadd( 8.63989, 178.358, 29.7012, 0.96 ) }
    dend_17 { pt3dadd( 8.68797, 178.926, 29.7492, 0.96 ) }
    dend_17 { pt3dadd( 8.78724, 180.361, 29.901, 0.52 ) }
    dend_17 { pt3dadd( 8.92444, 182.343, 30.0996, 0.37 ) }
    dend_17 { pt3dadd( 9.01308, 183.703, 30.2381, 0.29 ) }
    dend_17 { pt3dadd( 9.08361, 184.987, 30.3558, 0.66 ) }
    dend_17 { pt3dadd( 9.13084, 185.851, 30.4164, 0.66 ) }
    dend_17 { pt3dadd( 9.21478, 187.476, 30.4943, 0.29 ) }
    dend_17 { pt3dadd( 9.25797, 188.283, 30.5268, 0.29 ) }
    dend_17 { pt3dadd( 9.3822, 190.411, 30.6106, 0.29 ) }
    dend_17 { pt3dadd( 9.54331, 192.725, 30.7219, 1.99 ) }
    dend_17 { pt3dadd( 9.57868, 193.249, 30.755, 2.28 ) }
    dend_17 { pt3dadd( 9.61607, 193.989, 30.8152, 1.55 ) }
    dend_17 { pt3dadd( 9.6365, 194.795, 30.9149, 0.88 ) }
    dend_17 { pt3dadd( 9.62591, 196.104, 31.1394, 0.22 ) }
    dend_17 { pt3dadd( 9.60082, 196.713, 31.2662, 0.22 ) }
    dend_17 { pt3dadd( 9.52944, 197.823, 31.5311, 0.66 ) }
    dend_17 { pt3dadd( 9.48392, 198.524, 31.6985, 0.66 ) }
    dend_17 { pt3dadd( 9.41986, 199.712, 31.9739, 0.29 ) }
    dend_17 { pt3dadd( 9.3394, 201.618, 32.3811, 0.22 ) }
    dend_17 { pt3dadd( 9.32555, 202.584, 32.5852, 0.22 ) }
    dend_17 { pt3dadd( 9.34115, 203.607, 32.7956, 0.52 ) }
    dend_17 { pt3dadd( 9.42775, 204.887, 33.0578, 0.44 ) }
    dend_17 { pt3dadd( 9.55828, 206.001, 33.2854, 0.44 ) }
    dend_17 { pt3dadd( 9.76715, 207.287, 33.5389, 0.44 ) }
    dend_17 { pt3dadd( 10.1849, 209.279, 33.9426, 0.22 ) }
    dend_17 { pt3dadd( 10.5347, 210.76, 34.2509, 0.66 ) }
    dend_17 { pt3dadd( 10.8511, 211.958, 34.5087, 1.77 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_17 { pt3dadd( 11.0347, 212.589, 34.65, 1.77 ) }
    dend_17 { pt3dadd( 11.2149, 213.155, 34.7829, 1.77 ) }
    dend_17 { pt3dadd( 11.5142, 213.981, 34.9942, 0.88 ) }
    dend_17 { pt3dadd( 11.8613, 214.892, 35.2754, 0.29 ) }
    dend_17 { pt3dadd( 12.0961, 215.507, 35.4919, 0.52 ) }
    dend_17 { pt3dadd( 12.6742, 217.094, 36.081, 0.22 ) }
    dend_17 { pt3dadd( 13.0073, 217.999, 36.4132, 0.52 ) }
    dend_17 { pt3dadd( 13.3912, 219.02, 36.7762, 0.52 ) }
    dend_17 { pt3dadd( 14.2328, 221.271, 37.5415, 0.22 ) }
    dend_17 { pt3dadd( 14.8803, 222.995, 38.0986, 0.37 ) }
    dend_17 { pt3dadd( 15.3009, 224.131, 38.4578, 0.37 ) }
    dend_17 { pt3dadd( 15.7587, 225.399, 38.8416, 1.92 ) }
    dend_17 { pt3dadd( 15.9633, 225.983, 39.0051, 2.21 ) }
    dend_17 { pt3dadd( 16.1674, 226.593, 39.1466, 2.21 ) }
    dend_17 { pt3dadd( 16.4285, 227.323, 39.2276, 1.18 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 15/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -9.12181, 41.4178, 3.82828, 0.66 ) }
    dend_14 { pt3dadd( -8.64482, 43.395, 4.58686, 0.66 ) }
    dend_14 { pt3dadd( -8.34852, 44.6001, 5.04002, 0.81 ) }
    dend_14 { pt3dadd( -8.14276, 45.494, 5.39846, 0.37 ) }
    dend_14 { pt3dadd( -7.91731, 46.5711, 5.82876, 0.29 ) }
    dend_14 { pt3dadd( -7.5273, 48.3778, 6.54089, 0.29 ) }
    dend_14 { pt3dadd( -7.27288, 49.4343, 6.96672, 0.29 ) }
    dend_14 { pt3dadd( -6.96204, 50.4504, 7.37061, 0.29 ) }
    dend_14 { pt3dadd( -6.4722, 51.7833, 7.95462, 0.29 ) }
    dend_14 { pt3dadd( -6.03134, 52.8743, 8.4547, 0.29 ) }
    dend_14 { pt3dadd( -5.59165, 53.9609, 8.95231, 0.74 ) }
    dend_14 { pt3dadd( -5.28811, 54.6896, 9.29912, 0.74 ) }
    dend_14 { pt3dadd( -4.70515, 55.9199, 9.9157, 0.29 ) }
    dend_14 { pt3dadd( -4.36095, 56.6249, 10.2822, 0.37 ) }
    dend_14 { pt3dadd( -3.56794, 58.2677, 11.1162, 0.37 ) }
    dend_14 { pt3dadd( -3.1543, 59.1976, 11.582, 0.37 ) }
    dend_14 { pt3dadd( -2.73906, 60.2995, 12.1037, 0.37 ) }
    dend_14 { pt3dadd( -2.57551, 60.8089, 12.3329, 0.37 ) }
    dend_14 { pt3dadd( -2.32427, 61.7397, 12.7388, 0.22 ) }
    dend_14 { pt3dadd( -2.10408, 62.6446, 13.124, 0.22 ) }
    dend_14 { pt3dadd( -1.90268, 63.3583, 13.4297, 0.66 ) }
    dend_14 { pt3dadd( -1.67096, 64.2232, 13.7501, 0.96 ) }
    dend_14 { pt3dadd( 1.09698, 74.6639, 16.6956, 0.96 ) }
    dend_14 { pt3dadd( 5.47733, 83.4669, 22.0494, 0.96 ) }
    dend_14 { pt3dadd( 8.32965, 92.3286, 28.2688, 0.96 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 40/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 28.0356, 10.8422, 6.57494, 0.66 ) }
    dend_8 { pt3dadd( 29.0171, 9.02707, 6.25707, 0.66 ) }
    dend_8 { pt3dadd( 29.2943, 8.4538, 6.11977, 0.66 ) }
    dend_8 { pt3dadd( 29.7503, 7.56933, 5.93525, 0.88 ) }
    dend_8 { pt3dadd( 30.5741, 6.13837, 5.69255, 0.88 ) }
    dend_8 { pt3dadd( 31.1659, 5.22409, 5.57509, 0.88 ) }
    dend_8 { pt3dadd( 31.7357, 4.46381, 5.50343, 1.03 ) }
    dend_8 { pt3dadd( 32.4046, 3.64161, 5.43626, 1.03 ) }
    dend_8 { pt3dadd( 33.3702, 2.99327, 5.54987, 0.88 ) }
    dend_8 { pt3dadd( 34.1387, 2.82991, 5.74247, 0.88 ) }
    dend_8 { pt3dadd( 34.7998, 2.76486, 5.94277, 0.88 ) }
    dend_8 { pt3dadd( 35.8483, 2.62469, 6.28643, 0.81 ) }
    dend_8 { pt3dadd( 37.0582, 2.30169, 6.69362, 0.81 ) }
    dend_8 { pt3dadd( 37.8287, 1.94972, 6.91506, 0.81 ) }
    dend_8 { pt3dadd( 38.8084, 1.28139, 7.09001, 0.74 ) }
    dend_8 { pt3dadd( 39.8536, 0.421233, 7.20536, 0.88 ) }
    dend_8 { pt3dadd( 40.782, -0.436489, 7.24569, 0.88 ) }
    dend_8 { pt3dadd( 41.7778, -1.47147, 7.22318, 0.52 ) }
    dend_8 { pt3dadd( 42.2774, -2.00004, 7.16753, 0.52 ) }
    dend_8 { pt3dadd( 42.8891, -2.54555, 7.04158, 0.52 ) }
    dend_8 { pt3dadd( 43.6763, -3.08714, 6.84719, 0.52 ) }
    dend_8 { pt3dadd( 44.5789, -3.53215, 6.60746, 0.74 ) }
    dend_8 { pt3dadd( 45.497, -3.88315, 6.35216, 0.74 ) }
    dend_8 { pt3dadd( 46.6627, -4.24696, 6.02175, 0.74 ) }
    dend_8 { pt3dadd( 48.2036, -4.66592, 5.59924, 0.74 ) }
    dend_8 { pt3dadd( 49.2722, -4.92529, 5.30267, 0.74 ) }
    dend_8 { pt3dadd( 50.1184, -5.08865, 5.07911, 0.74 ) }
    dend_8 { pt3dadd( 51.0377, -5.17499, 4.8604, 0.74 ) }
    dend_8 { pt3dadd( 51.5763, -5.18699, 4.7602, 0.88 ) }
    dend_8 { pt3dadd( 53.0966, -5.10736, 4.52354, 0.88 ) }
    dend_8 { pt3dadd( 54.3925, -5.00011, 4.35283, 0.88 ) }
    dend_8 { pt3dadd( 55.9974, -4.88334, 4.15805, 0.66 ) }
    dend_8 { pt3dadd( 57.1718, -4.82507, 4.03975, 0.66 ) }
    dend_8 { pt3dadd( 60.1945, -4.71264, 3.80679, 0.59 ) }
    dend_8 { pt3dadd( 61.2431, -4.68507, 3.74349, 0.52 ) }
    dend_8 { pt3dadd( 62.83, -4.61188, 3.67855, 0.52 ) }
    dend_8 { pt3dadd( 63.7852, -4.51843, 3.66251, 0.52 ) }
    dend_8 { pt3dadd( 64.8224, -4.3209, 3.66312, 0.52 ) }
    dend_8 { pt3dadd( 66.0609, -4.00533, 3.68157, 0.52 ) }
    dend_8 { pt3dadd( 66.8885, -3.77633, 3.70716, 0.52 ) }
    dend_8 { pt3dadd( 68.241, -3.46288, 3.75557, 0.52 ) }
    dend_8 { pt3dadd( 69.7083, -3.12415, 3.81849, 0.52 ) }
    dend_8 { pt3dadd( 71.0848, -2.851, 3.88093, 0.52 ) }
    dend_8 { pt3dadd( 72.3678, -2.70257, 3.93651, 0.52 ) }
    dend_8 { pt3dadd( 73.8332, -2.71138, 3.99623, 0.52 ) }
    dend_8 { pt3dadd( 74.8435, -2.88427, 4.0422, 0.52 ) }
    dend_8 { pt3dadd( 75.7859, -3.16829, 4.13079, 0.52 ) }
    dend_8 { pt3dadd( 76.42, -3.38469, 4.22591, 0.52 ) }
    dend_8 { pt3dadd( 77.2203, -3.64343, 4.38322, 0.52 ) }
    dend_8 { pt3dadd( 78.8415, -4.08086, 4.80639, 0.29 ) }
    dend_8 { pt3dadd( 81.7384, -4.65397, 5.71906, 0.29 ) }
    dend_8 { pt3dadd( 84.3643, -5.00238, 6.64228, 0.29 ) }
    dend_8 { pt3dadd( 85.7031, -5.08109, 7.16825, 0.29 ) }
    dend_8 { pt3dadd( 86.664, -5.09403, 7.56877, 0.44 ) }
    dend_8 { pt3dadd( 87.681, -5.03147, 8.04011, 0.59 ) }
    dend_8 { pt3dadd( 88.3194, -4.91474, 8.41201, 0.59 ) }
    dend_8 { pt3dadd( 89.3542, -4.3702, 9.23858, 0.59 ) }
    dend_8 { pt3dadd( 89.898, -3.83347, 9.74572, 0.59 ) }
    dend_8 { pt3dadd( 100.752, -7.22316, 11.1853, 0.59 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 99/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 28.0356, 10.8422, 6.57494, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_3 { pt3dadd( 29.7124, 10.5815, 6.29371, 1.11 ) }
    dend_3 { pt3dadd( 30.7525, 10.2994, 6.06538, 1.11 ) }
    dend_3 { pt3dadd( 31.9352, 10.057, 5.71872, 1.25 ) }
    dend_3 { pt3dadd( 32.8471, 9.96486, 5.44561, 1.47 ) }
    dend_3 { pt3dadd( 34.0836, 9.97716, 5.09749, 1.4 ) }
    dend_3 { pt3dadd( 35.1808, 10.0928, 4.81028, 1.4 ) }
    dend_3 { pt3dadd( 36.4117, 10.2957, 4.44884, 1.18 ) }
    dend_3 { pt3dadd( 38.0631, 10.8935, 3.99965, 1.18 ) }
    dend_3 { pt3dadd( 39.1806, 11.5584, 3.73162, 1.18 ) }
    dend_3 { pt3dadd( 40.129, 12.2222, 3.51237, 1.18 ) }
    dend_3 { pt3dadd( 40.6921, 12.6226, 3.38321, 0.88 ) }
    dend_3 { pt3dadd( 41.2604, 12.9608, 3.24289, 0.88 ) }
    dend_3 { pt3dadd( 42.1691, 13.288, 2.98034, 0.88 ) }
    dend_3 { pt3dadd( 43.5847, 13.437, 2.51375, 1.11 ) }
    dend_3 { pt3dadd( 44.669, 13.3954, 2.10885, 1.11 ) }
    dend_3 { pt3dadd( 45.771, 13.2743, 1.66813, 1.11 ) }
    dend_3 { pt3dadd( 47.0203, 13.0708, 1.15051, 1.25 ) }
    dend_3 { pt3dadd( 48.2983, 12.7997, 0.608019, 1.33 ) }
    dend_3 { pt3dadd( 48.891, 12.6475, 0.355121, 1.47 ) }
    dend_3 { pt3dadd( 49.8706, 12.4015, -0.0362245, 1.77 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 20/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -127.224, -92.8213, 1.80397, 0.59 ) }
    dend_47 { pt3dadd( -127.118, -94.7353, 1.81084, 0.59 ) }
    dend_47 { pt3dadd( -127.068, -95.5391, 1.84689, 0.59 ) }
    dend_47 { pt3dadd( -127.007, -96.2397, 1.90178, 0.52 ) }
    dend_47 { pt3dadd( -126.929, -97.0448, 1.98832, 0.52 ) }
    dend_47 { pt3dadd( -126.867, -97.9145, 2.09245, 0.88 ) }
    dend_47 { pt3dadd( -126.806, -98.8772, 2.21684, 1.03 ) }
    dend_47 { pt3dadd( -126.781, -99.4485, 2.33357, 1.03 ) }
    dend_47 { pt3dadd( -126.711, -100.452, 2.55847, 1.03 ) }
    dend_47 { pt3dadd( -126.627, -101.313, 2.76582, 0.29 ) }
    dend_47 { pt3dadd( -126.572, -101.927, 2.91684, 0.29 ) }
    dend_47 { pt3dadd( -126.541, -102.433, 3.04267, 0.29 ) }
    dend_47 { pt3dadd( -126.534, -103.393, 3.27043, 0.59 ) }
    dend_47 { pt3dadd( -126.573, -104.174, 3.48703, 0.74 ) }
    dend_47 { pt3dadd( -126.636, -104.729, 3.65925, 0.88 ) }
    dend_47 { pt3dadd( -126.72, -105.264, 3.83479, 0.88 ) }
    dend_47 { pt3dadd( -126.813, -105.759, 4.01079, 0.88 ) }
    dend_47 { pt3dadd( -126.98, -106.417, 4.25457, 0.81 ) }
    dend_47 { pt3dadd( -127.397, -107.835, 4.78064, 0.37 ) }
    dend_47 { pt3dadd( -127.622, -108.6, 5.07183, 1.03 ) }
    dend_47 { pt3dadd( -127.852, -109.355, 5.39338, 1.33 ) }
    dend_47 { pt3dadd( -128.072, -110.042, 5.70672, 1.33 ) }
    dend_47 { pt3dadd( -128.378, -110.917, 6.12125, 1.03 ) }
    dend_47 { pt3dadd( -128.652, -111.65, 6.47158, 0.74 ) }
    dend_47 { pt3dadd( -128.901, -112.29, 6.75254, 0.37 ) }
    dend_47 { pt3dadd( -129.247, -113.124, 7.17037, 0.74 ) }
    dend_47 { pt3dadd( -129.458, -113.602, 7.42317, 0.74 ) }
    dend_47 { pt3dadd( -129.694, -114.194, 7.69255, 0.59 ) }
    dend_47 { pt3dadd( -129.845, -114.65, 7.86841, 0.37 ) }
    dend_47 { pt3dadd( -130.026, -115.327, 8.06285, 0.37 ) }
    dend_47 { pt3dadd( -130.294, -116.461, 8.24764, 0.66 ) }
    dend_47 { pt3dadd( -130.485, -117.28, 8.29007, 0.74 ) }
    dend_47 { pt3dadd( -130.837, -118.678, 8.27015, 0.52 ) }
    dend_47 { pt3dadd( -130.986, -119.266, 8.2349, 0.52 ) }
    dend_47 { pt3dadd( -131.201, -119.966, 8.17082, 1.33 ) }
    dend_47 { pt3dadd( -131.481, -120.841, 8.06707, 1.55 ) }
    dend_47 { pt3dadd( -131.859, -121.988, 7.95168, 1.99 ) }
    dend_47 { pt3dadd( -132.108, -122.667, 7.92207, 2.21 ) }
    dend_47 { pt3dadd( -132.461, -123.504, 7.92992, 1.99 ) }
    dend_47 { pt3dadd( -132.911, -124.512, 7.9416, 1.11 ) }
    dend_47 { pt3dadd( -133.387, -125.669, 7.95163, 0.37 ) }
    dend_47 { pt3dadd( -133.74, -126.656, 7.96638, 1.11 ) }
    dend_47 { pt3dadd( -133.9, -127.157, 7.97231, 1.25 ) }
    dend_47 { pt3dadd( -134.101, -127.804, 7.98076, 1.25 ) }
    dend_47 { pt3dadd( -134.55, -129.233, 7.96302, 0.29 ) }
    dend_47 { pt3dadd( -134.838, -130.146, 7.93174, 0.29 ) }
    dend_47 { pt3dadd( -135.135, -130.983, 7.89446, 0.44 ) }
    dend_47 { pt3dadd( -135.458, -131.852, 7.84697, 0.59 ) }
    dend_47 { pt3dadd( -135.85, -132.876, 7.80022, 0.88 ) }
    dend_47 { pt3dadd( -136.183, -133.724, 7.77394, 0.96 ) }
    dend_47 { pt3dadd( -136.553, -134.538, 7.76124, 0.66 ) }
    dend_47 { pt3dadd( -137.068, -135.499, 7.77801, 0.37 ) }
    dend_47 { pt3dadd( -137.466, -136.183, 7.79856, 0.29 ) }
    dend_47 { pt3dadd( -137.912, -136.89, 7.85146, 0.29 ) }
    dend_47 { pt3dadd( -138.302, -137.504, 7.92704, 0.29 ) }
    dend_47 { pt3dadd( -138.848, -138.326, 8.06157, 0.29 ) }
    dend_47 { pt3dadd( -139.672, -139.452, 8.24271, 0.74 ) }
    dend_47 { pt3dadd( -140.319, -140.225, 8.39547, 1.03 ) }
    dend_47 { pt3dadd( -141.129, -141.116, 8.60251, 2.28 ) }
    dend_47 { pt3dadd( -141.771, -141.759, 8.76896, 2.8 ) }
    dend_47 { pt3dadd( -142.389, -142.366, 8.92778, 3.09 ) }
    dend_47 { pt3dadd( -143.383, -143.382, 9.18513, 1.84 ) }
    dend_47 { pt3dadd( -144.533, -144.546, 9.47172, 0.29 ) }
    dend_47 { pt3dadd( -145.097, -145.147, 9.62339, 0.29 ) }
    dend_47 { pt3dadd( -145.831, -146.009, 9.82833, 0.29 ) }
    dend_47 { pt3dadd( -146.568, -146.956, 10.0599, 0.29 ) }
    dend_47 { pt3dadd( -147.069, -147.741, 10.2659, 0.88 ) }
    dend_47 { pt3dadd( -147.452, -148.447, 10.4532, 1.11 ) }
    dend_47 { pt3dadd( -147.749, -149.06, 10.5949, 0.81 ) }
    dend_47 { pt3dadd( -147.987, -149.589, 10.7204, 0.52 ) }
    dend_47 { pt3dadd( -148.348, -150.479, 10.9383, 0.29 ) }
    dend_47 { pt3dadd( -148.752, -151.532, 11.2082, 0.29 ) }
    dend_47 { pt3dadd( -149.074, -152.433, 11.444, 0.29 ) }
    dend_47 { pt3dadd( -149.255, -152.919, 11.5695, 0.29 ) }
    dend_47 { pt3dadd( -149.599, -153.889, 11.8236, 0.81 ) }
    dend_47 { pt3dadd( -149.889, -154.788, 12.0646, 1.11 ) }
    dend_47 { pt3dadd( -150.096, -155.494, 12.2569, 0.88 ) }
    dend_47 { pt3dadd( -150.384, -156.496, 12.5281, 0.29 ) }
    dend_47 { pt3dadd( -150.73, -157.718, 12.8621, 0.29 ) }
    dend_47 { pt3dadd( -151.067, -158.817, 13.1186, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_47 { pt3dadd( -151.196, -159.22, 13.201, 0.29 ) }
    dend_47 { pt3dadd( -151.5, -160.187, 13.3752, 0.74 ) }
    dend_47 { pt3dadd( -151.718, -160.882, 13.4835, 0.74 ) }
    dend_47 { pt3dadd( -152.011, -161.865, 13.623, 0.44 ) }
    dend_47 { pt3dadd( -152.337, -163.011, 13.7719, 0.29 ) }
    dend_47 { pt3dadd( -152.505, -163.581, 13.8395, 0.29 ) }
    dend_47 { pt3dadd( -152.73, -164.369, 13.9639, 0.29 ) }
    dend_47 { pt3dadd( -152.961, -165.31, 14.1625, 0.29 ) }
    dend_47 { pt3dadd( -153.077, -165.845, 14.3121, 0.74 ) }
    dend_47 { pt3dadd( -153.181, -166.335, 14.4806, 0.74 ) }
    dend_47 { pt3dadd( -153.371, -167.205, 14.8434, 0.44 ) }
    dend_47 { pt3dadd( -153.606, -168.185, 15.2702, 0.29 ) }
    dend_47 { pt3dadd( -153.827, -169.025, 15.6695, 0.74 ) }
    dend_47 { pt3dadd( -153.99, -169.613, 15.9563, 1.11 ) }
    dend_47 { pt3dadd( -154.146, -170.109, 16.193, 1.69 ) }
    dend_47 { pt3dadd( -154.282, -170.527, 16.3854, 1.92 ) }
    dend_47 { pt3dadd( -154.478, -171.135, 16.6478, 1.92 ) }
    dend_47 { pt3dadd( -154.753, -172.061, 17.0031, 1.62 ) }
    dend_47 { pt3dadd( -155.082, -173.188, 17.4102, 0.29 ) }
    dend_47 { pt3dadd( -155.335, -174.095, 17.7189, 0.22 ) }
    dend_47 { pt3dadd( -155.559, -174.846, 17.9615, 0.22 ) }
    dend_47 { pt3dadd( -155.874, -175.865, 18.2668, 0.59 ) }
    dend_47 { pt3dadd( -156.149, -176.715, 18.4996, 0.74 ) }
    dend_47 { pt3dadd( -156.361, -177.308, 18.6532, 0.74 ) }
    dend_47 { pt3dadd( -156.659, -178.069, 18.8554, 0.44 ) }
    dend_47 { pt3dadd( -156.946, -178.714, 19.0259, 0.29 ) }
    dend_47 { pt3dadd( -157.291, -179.351, 19.2141, 0.29 ) }
    dend_47 { pt3dadd( -158.119, -180.614, 19.6373, 0.44 ) }
    dend_47 { pt3dadd( -158.606, -181.262, 19.8494, 0.59 ) }
    dend_47 { pt3dadd( -159.094, -181.865, 20.0379, 0.59 ) }
    dend_47 { pt3dadd( -159.67, -182.559, 20.2251, 0.52 ) }
    dend_47 { pt3dadd( -160.551, -183.605, 20.4644, 1.33 ) }
    dend_47 { pt3dadd( -161.275, -184.457, 20.6225, 2.06 ) }
    dend_47 { pt3dadd( -161.949, -185.287, 20.7427, 2.21 ) }
    dend_47 { pt3dadd( -162.434, -185.957, 20.8152, 2.21 ) }
    dend_47 { pt3dadd( -163.13, -187.06, 20.902, 0.81 ) }
    dend_47 { pt3dadd( -163.544, -187.864, 20.9378, 0.29 ) }
    dend_47 { pt3dadd( -163.85, -188.601, 20.9447, 0.44 ) }
    dend_47 { pt3dadd( -164.036, -189.163, 20.9515, 0.44 ) }
    dend_47 { pt3dadd( -164.266, -189.987, 20.9762, 0.29 ) }
    dend_47 { pt3dadd( -164.435, -190.607, 20.9813, 0.29 ) }
    dend_47 { pt3dadd( -164.651, -191.376, 20.9872, 0.29 ) }
    dend_47 { pt3dadd( -164.815, -191.877, 20.9901, 0.74 ) }
    dend_47 { pt3dadd( -164.995, -192.329, 21.0058, 0.88 ) }
    dend_47 { pt3dadd( -165.236, -192.856, 21.0429, 0.88 ) }
    dend_47 { pt3dadd( -165.639, -193.702, 21.1506, 0.29 ) }
    dend_47 { pt3dadd( -166.052, -194.536, 21.3212, 0.29 ) }
    dend_47 { pt3dadd( -166.448, -195.366, 21.5736, 0.29 ) }
    dend_47 { pt3dadd( -166.891, -196.358, 21.9357, 0.52 ) }
    dend_47 { pt3dadd( -167.092, -196.82, 22.1255, 0.52 ) }
    dend_47 { pt3dadd( -167.438, -197.656, 22.5156, 0.29 ) }
    dend_47 { pt3dadd( -167.648, -198.226, 22.8297, 0.29 ) }
    dend_47 { pt3dadd( -168.006, -199.37, 23.5384, 0.59 ) }
    dend_47 { pt3dadd( -168.19, -200.012, 23.9773, 0.29 ) }
    dend_47 { pt3dadd( -168.32, -200.428, 24.2906, 0.29 ) }
    dend_47 { pt3dadd( -168.539, -200.994, 24.7538, 0.74 ) }
    dend_47 { pt3dadd( -168.942, -201.722, 25.3989, 0.88 ) }
    dend_47 { pt3dadd( -169.347, -202.257, 25.8891, 0.29 ) }
    dend_47 { pt3dadd( -169.819, -202.738, 26.3462, 0.29 ) }
    dend_47 { pt3dadd( -170.488, -203.339, 26.8882, 0.96 ) }
    dend_47 { pt3dadd( -171.038, -203.822, 27.2673, 1.11 ) }
    dend_47 { pt3dadd( -171.726, -204.452, 27.6485, 1.11 ) }
    dend_47 { pt3dadd( -172.454, -205.191, 27.9965, 0.29 ) }
    dend_47 { pt3dadd( -172.922, -205.752, 28.2194, 0.22 ) }
    dend_47 { pt3dadd( -173.293, -206.324, 28.4032, 0.44 ) }
    dend_47 { pt3dadd( -173.64, -207.01, 28.5827, 0.44 ) }
    dend_47 { pt3dadd( -174.101, -208.183, 28.8181, 0.22 ) }
    dend_47 { pt3dadd( -174.35, -208.924, 28.928, 0.22 ) }
    dend_47 { pt3dadd( -174.513, -209.481, 28.9815, 0.22 ) }
    dend_47 { pt3dadd( -174.694, -210.118, 29.0203, 0.59 ) }
    dend_47 { pt3dadd( -174.823, -210.577, 29.0449, 0.74 ) }
    dend_47 { pt3dadd( -175.21, -211.935, 29.08, 0.29 ) }
    dend_47 { pt3dadd( -175.418, -212.658, 29.0852, 0.29 ) }
    dend_47 { pt3dadd( -175.683, -213.561, 29.0822, 0.44 ) }
    dend_47 { pt3dadd( -175.923, -214.424, 29.081, 0.44 ) }
    dend_47 { pt3dadd( -176.225, -215.567, 29.0996, 0.52 ) }
    dend_47 { pt3dadd( -176.398, -216.218, 29.1225, 0.96 ) }
    dend_47 { pt3dadd( -176.581, -216.863, 29.1628, 1.4 ) }
    dend_47 { pt3dadd( -176.787, -217.515, 29.2008, 1.4 ) }
    dend_47 { pt3dadd( -177.341, -219.006, 29.3631, 0.29 ) }
    dend_47 { pt3dadd( -177.942, -220.437, 29.5955, 0.22 ) }
    dend_47 { pt3dadd( -178.263, -221.125, 29.7521, 0.37 ) }
    dend_47 { pt3dadd( -178.808, -222.199, 30.0692, 0.37 ) }
    dend_47 { pt3dadd( -179.38, -223.238, 30.4338, 0.29 ) }
    dend_47 { pt3dadd( -180.184, -224.575, 30.9742, 0.74 ) }
    dend_47 { pt3dadd( -180.636, -225.247, 31.2811, 1.11 ) }
    dend_47 { pt3dadd( -181.16, -225.952, 31.6137, 1.25 ) }
    dend_47 { pt3dadd( -181.712, -226.646, 31.9281, 1.11 ) }
    dend_47 { pt3dadd( -182.243, -227.285, 32.196, 0.59 ) }
    dend_47 { pt3dadd( -182.937, -228.116, 32.4937, 0.29 ) }
    dend_47 { pt3dadd( -183.343, -228.63, 32.6107, 0.29 ) }
    dend_47 { pt3dadd( -184.1, -229.621, 32.7893, 0.22 ) }
    dend_47 { pt3dadd( -184.598, -230.304, 32.8931, 0.22 ) }
    dend_47 { pt3dadd( -184.875, -230.694, 32.9495, 0.66 ) }
    dend_47 { pt3dadd( -185.301, -231.307, 33.0384, 0.66 ) }
    dend_47 { pt3dadd( -186.169, -232.578, 33.2541, 0.29 ) }
    dend_47 { pt3dadd( -186.698, -233.34, 33.3968, 0.29 ) }
    dend_47 { pt3dadd( -187.257, -234.099, 33.5443, 0.29 ) }
    dend_47 { pt3dadd( -187.843, -234.845, 33.6859, 0.66 ) }
    dend_47 { pt3dadd( -188.315, -235.414, 33.788, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_47 { pt3dadd( -189.075, -236.289, 33.9342, 0.22 ) }
    dend_47 { pt3dadd( -189.597, -236.877, 34.0232, 0.22 ) }
    dend_47 { pt3dadd( -190.474, -237.865, 34.1579, 0.22 ) }
    dend_47 { pt3dadd( -191.999, -239.625, 34.3502, 0.22 ) }
    dend_47 { pt3dadd( -192.451, -240.199, 34.3941, 0.22 ) }
    dend_47 { pt3dadd( -192.916, -240.858, 34.4272, 1.11 ) }
    dend_47 { pt3dadd( -193.161, -241.272, 34.4333, 1.11 ) }
    dend_47 { pt3dadd( -193.273, -241.513, 34.4363, 1.11 ) }
    dend_47 { pt3dadd( -193.49, -242.149, 34.4475, 0.66 ) }
    dend_47 { pt3dadd( -193.744, -243.207, 34.4643, 0.22 ) }
    dend_47 { pt3dadd( -193.859, -243.856, 34.4846, 0.52 ) }
    dend_47 { pt3dadd( -194.028, -245.346, 34.5598, 0.22 ) }
    dend_47 { pt3dadd( -194.158, -246.556, 34.6317, 0.22 ) }
    dend_47 { pt3dadd( -194.215, -247.073, 34.6674, 0.59 ) }
    dend_47 { pt3dadd( -194.289, -247.727, 34.7225, 0.59 ) }
    dend_47 { pt3dadd( -194.392, -248.675, 34.8012, 0.52 ) }
    dend_47 { pt3dadd( -194.529, -250.073, 34.9136, 0.22 ) }
    dend_47 { pt3dadd( -194.593, -250.893, 34.9789, 0.22 ) }
    dend_47 { pt3dadd( -194.615, -251.382, 35.0205, 0.22 ) }
    dend_47 { pt3dadd( -194.628, -251.938, 35.0684, 0.66 ) }
    dend_47 { pt3dadd( -194.619, -252.73, 35.1894, 0.81 ) }
    dend_47 { pt3dadd( -194.55, -253.589, 35.4032, 0.59 ) }
    dend_47 { pt3dadd( -194.312, -254.789, 35.8853, 1.25 ) }
    dend_47 { pt3dadd( -194.097, -255.41, 36.2241, 1.69 ) }
    dend_47 { pt3dadd( -193.939, -255.709, 36.4341, 1.92 ) }
    dend_47 { pt3dadd( -193.223, -256.643, 37.2623, 1.18 ) }
    dend_47 { pt3dadd( -192.495, -257.319, 38.0359, 0.22 ) }
    dend_47 { pt3dadd( -191.607, -257.917, 38.8811, 0.22 ) }
    dend_47 { pt3dadd( -190.986, -258.236, 39.4182, 0.22 ) }
    dend_47 { pt3dadd( -190.192, -258.594, 40.0411, 0.22 ) }
    dend_47 { pt3dadd( -189.608, -258.844, 40.4547, 0.66 ) }
    dend_47 { pt3dadd( -189.166, -259.04, 40.7247, 0.66 ) }
    dend_47 { pt3dadd( -187.956, -259.585, 41.3971, 0.22 ) }
    dend_47 { pt3dadd( -187.491, -259.806, 41.6362, 0.37 ) }
    dend_47 { pt3dadd( -187.023, -260.084, 41.8883, 0.37 ) }
    dend_47 { pt3dadd( -186.65, -260.36, 42.1117, 0.22 ) }
    dend_47 { pt3dadd( -186.09, -260.845, 42.4721, 0.22 ) }
    dend_47 { pt3dadd( -190.119, -269.779, 44.371, 0.22 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 38/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -127.224, -92.8213, 1.80397, 0.37 ) }
    dend_46 { pt3dadd( -127.941, -92.6544, 1.71252, 0.37 ) }
    dend_46 { pt3dadd( -128.242, -92.6016, 1.666, 0.37 ) }
    dend_46 { pt3dadd( -128.878, -92.527, 1.53412, 0.29 ) }
    dend_46 { pt3dadd( -129.361, -92.493, 1.42304, 0.44 ) }
    dend_46 { pt3dadd( -129.826, -92.479, 1.31004, 0.66 ) }
    dend_46 { pt3dadd( -130.092, -92.4814, 1.24016, 0.81 ) }
    dend_46 { pt3dadd( -130.321, -92.4972, 1.16995, 0.81 ) }
    dend_46 { pt3dadd( -131.027, -92.5796, 0.928181, 0.22 ) }
    dend_46 { pt3dadd( -131.246, -92.6153, 0.842763, 0.22 ) }
    dend_46 { pt3dadd( -131.64, -92.6821, 0.689229, 0.74 ) }
    dend_46 { pt3dadd( -131.963, -92.7369, 0.56022, 0.88 ) }
    dend_46 { pt3dadd( -132.497, -92.8364, 0.331367, 0.22 ) }
    dend_46 { pt3dadd( -132.713, -92.8806, 0.217247, 0.22 ) }
    dend_46 { pt3dadd( -132.909, -92.9292, 0.094873, 0.22 ) }
    dend_46 { pt3dadd( -133.13, -92.9938, -0.0569279, 0.74 ) }
    dend_46 { pt3dadd( -133.36, -93.0826, -0.23095, 0.88 ) }
    dend_46 { pt3dadd( -133.605, -93.2239, -0.446895, 0.88 ) }
    dend_46 { pt3dadd( -134.126, -93.6531, -0.982733, 0.22 ) }
    dend_46 { pt3dadd( -134.306, -93.831, -1.18507, 0.22 ) }
    dend_46 { pt3dadd( -134.452, -93.9899, -1.36246, 0.74 ) }
    dend_46 { pt3dadd( -134.625, -94.2196, -1.61633, 0.74 ) }
    dend_46 { pt3dadd( -134.995, -94.6909, -2.10415, 0.29 ) }
    dend_46 { pt3dadd( -135.114, -94.8338, -2.24493, 0.29 ) }
    dend_46 { pt3dadd( -135.313, -95.0605, -2.45556, 0.88 ) }
    dend_46 { pt3dadd( -135.555, -95.3077, -2.69743, 1.03 ) }
    dend_46 { pt3dadd( -136.295, -95.9723, -3.40413, 0.22 ) }
    dend_46 { pt3dadd( -137.008, -96.5513, -4.04257, 0.22 ) }
    dend_46 { pt3dadd( -137.303, -96.7605, -4.28023, 0.22 ) }
    dend_46 { pt3dadd( -137.48, -96.8781, -4.41545, 1.11 ) }
    dend_46 { pt3dadd( -137.696, -97.0171, -4.56894, 1.11 ) }
    dend_46 { pt3dadd( -137.933, -97.1531, -4.70994, 0.81 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 70/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -13.8639, -119.76, -3.68642, 0.81 ) }
    dend_40 { pt3dadd( -12.8588, -120.297, -3.56317, 0.81 ) }
    dend_40 { pt3dadd( -12.0424, -120.683, -3.47691, 0.52 ) }
    dend_40 { pt3dadd( -10.8748, -121.19, -3.36973, 0.52 ) }
    dend_40 { pt3dadd( -10.3639, -121.419, -3.32723, 0.37 ) }
    dend_40 { pt3dadd( -9.34253, -121.891, -3.24697, 0.37 ) }
    dend_40 { pt3dadd( -8.9369, -122.085, -3.2158, 0.66 ) }
    dend_40 { pt3dadd( -8.5728, -122.259, -3.20006, 0.88 ) }
    dend_40 { pt3dadd( -8.27079, -122.407, -3.18407, 0.88 ) }
    dend_40 { pt3dadd( -7.49986, -122.865, -3.14237, 0.59 ) }
    dend_40 { pt3dadd( -6.8173, -123.358, -3.10326, 0.66 ) }
    dend_40 { pt3dadd( -6.13935, -123.925, -3.05969, 0.74 ) }
    dend_40 { pt3dadd( -5.72487, -124.269, -3.03193, 0.74 ) }
    dend_40 { pt3dadd( -5.4029, -124.515, -3.00979, 0.52 ) }
    dend_40 { pt3dadd( -4.87669, -124.872, -2.97583, 0.29 ) }
    dend_40 { pt3dadd( -4.31486, -125.176, -2.93213, 0.96 ) }
    dend_40 { pt3dadd( -3.80497, -125.409, -2.88444, 1.03 ) }
    dend_40 { pt3dadd( -3.46994, -125.549, -2.84523, 1.03 ) }
    dend_40 { pt3dadd( -2.71134, -125.851, -2.73783, 0.66 ) }
    dend_40 { pt3dadd( -2.39246, -125.981, -2.69396, 0.52 ) }
    dend_40 { pt3dadd( -1.65977, -126.293, -2.5948, 0.59 ) }
    dend_40 { pt3dadd( -0.934189, -126.644, -2.49748, 0.59 ) }
    dend_40 { pt3dadd( -0.266869, -127.013, -2.41222, 0.52 ) }
    dend_40 { pt3dadd( 0.285543, -127.357, -2.34696, 0.52 ) }
    dend_40 { pt3dadd( 0.864735, -127.756, -2.28489, 0.96 ) }
    dend_40 { pt3dadd( 1.22758, -128.01, -2.25656, 1.18 ) }
    dend_40 { pt3dadd( 1.83206, -128.421, -2.22785, 0.66 ) }
    dend_40 { pt3dadd( 2.54687, -128.867, -2.20081, 0.37 ) }
    dend_40 { pt3dadd( 2.99511, -129.119, -2.18739, 0.37 ) }
    dend_40 { pt3dadd( 3.92511, -129.587, -2.16538, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_40 { pt3dadd( 4.74527, -129.983, -2.12441, 1.03 ) }
    dend_40 { pt3dadd( 5.36738, -130.285, -2.08342, 0.81 ) }
    dend_40 { pt3dadd( 5.9388, -130.563, -2.03203, 0.52 ) }
    dend_40 { pt3dadd( 6.60701, -130.891, -1.9548, 0.52 ) }
    dend_40 { pt3dadd( 7.12709, -131.159, -1.87871, 0.52 ) }
    dend_40 { pt3dadd( 7.84018, -131.583, -1.75286, 0.52 ) }
    dend_40 { pt3dadd( 8.43763, -131.985, -1.63081, 1.33 ) }
    dend_40 { pt3dadd( 8.8096, -132.264, -1.54971, 1.69 ) }
    dend_40 { pt3dadd( 9.23478, -132.626, -1.45169, 1.69 ) }
    dend_40 { pt3dadd( 9.9495, -133.273, -1.34178, 1.11 ) }
    dend_40 { pt3dadd( 10.7326, -133.991, -1.27859, 0.44 ) }
    dend_40 { pt3dadd( 11.247, -134.438, -1.28539, 0.44 ) }
    dend_40 { pt3dadd( 11.6676, -134.786, -1.31804, 0.29 ) }
    dend_40 { pt3dadd( 12.1533, -135.167, -1.39422, 0.29 ) }
    dend_40 { pt3dadd( 13.2661, -135.987, -1.63407, 1.03 ) }
    dend_40 { pt3dadd( 13.5936, -136.211, -1.72289, 1.4 ) }
    dend_40 { pt3dadd( 13.9502, -136.458, -1.83869, 1.4 ) }
    dend_40 { pt3dadd( 15.0941, -137.322, -2.25967, 0.22 ) }
    dend_40 { pt3dadd( 15.7001, -137.805, -2.48711, 0.52 ) }
    dend_40 { pt3dadd( 15.9974, -138.053, -2.59411, 0.52 ) }
    dend_40 { pt3dadd( 16.5042, -138.523, -2.76149, 0.29 ) }
    dend_40 { pt3dadd( 17.2134, -139.204, -3.00045, 0.29 ) }
    dend_40 { pt3dadd( 17.6464, -139.626, -3.13838, 0.29 ) }
    dend_40 { pt3dadd( 18.0839, -140.075, -3.28108, 0.66 ) }
    dend_40 { pt3dadd( 18.4028, -140.412, -3.36618, 0.81 ) }
    dend_40 { pt3dadd( 18.6334, -140.658, -3.42083, 0.81 ) }
    dend_40 { pt3dadd( 19.0173, -141.041, -3.48932, 0.59 ) }
    dend_40 { pt3dadd( 19.4526, -141.433, -3.55544, 0.29 ) }
    dend_40 { pt3dadd( 19.8637, -141.821, -3.59667, 0.29 ) }
    dend_40 { pt3dadd( 20.3193, -142.327, -3.61697, 0.66 ) }
    dend_40 { pt3dadd( 20.6556, -142.775, -3.59668, 0.66 ) }
    dend_40 { pt3dadd( 21.0817, -143.464, -3.51327, 0.29 ) }
    dend_40 { pt3dadd( 21.3069, -143.909, -3.4286, 0.29 ) }
    dend_40 { pt3dadd( 21.661, -144.723, -3.23189, 0.66 ) }
    dend_40 { pt3dadd( 21.8904, -145.301, -3.05952, 0.66 ) }
    dend_40 { pt3dadd( 22.1541, -146.057, -2.80069, 0.44 ) }
    dend_40 { pt3dadd( 22.3834, -146.827, -2.51585, 1.47 ) }
    dend_40 { pt3dadd( 22.5396, -147.449, -2.27869, 1.84 ) }
    dend_40 { pt3dadd( 22.6218, -147.814, -2.14122, 1.84 ) }
    dend_40 { pt3dadd( 22.6718, -148.041, -2.06689, 1.84 ) }
    dend_40 { pt3dadd( 22.8078, -148.62, -1.88644, 1.33 ) }
    dend_40 { pt3dadd( 22.9943, -149.318, -1.68115, 0.52 ) }
    dend_40 { pt3dadd( 23.1005, -149.686, -1.57639, 0.52 ) }
    dend_40 { pt3dadd( 23.2476, -150.186, -1.43454, 0.52 ) }
    dend_40 { pt3dadd( 23.482, -150.983, -1.20095, 0.29 ) }
    dend_40 { pt3dadd( 23.6067, -151.396, -1.07453, 0.29 ) }
    dend_40 { pt3dadd( 23.7955, -151.983, -0.879303, 0.29 ) }
    dend_40 { pt3dadd( 23.9816, -152.524, -0.686786, 0.44 ) }
    dend_40 { pt3dadd( 24.2714, -153.25, -0.417249, 0.44 ) }
    dend_40 { pt3dadd( 24.5555, -153.841, -0.200213, 0.44 ) }
    dend_40 { pt3dadd( 24.7871, -154.253, -0.0588463, 1.33 ) }
    dend_40 { pt3dadd( 25.0675, -154.726, 0.075678, 1.84 ) }
    dend_40 { pt3dadd( 25.3513, -155.144, 0.181946, 1.84 ) }
    dend_40 { pt3dadd( 25.8423, -155.793, 0.336867, 0.96 ) }
    dend_40 { pt3dadd( 26.5008, -156.583, 0.513373, 0.22 ) }
    dend_40 { pt3dadd( 27.0705, -157.222, 0.646733, 0.22 ) }
    dend_40 { pt3dadd( 27.8883, -158.082, 0.813236, 0.22 ) }
    dend_40 { pt3dadd( 28.3873, -158.564, 0.905535, 0.22 ) }
    dend_40 { pt3dadd( 28.9599, -159.057, 1.00294, 0.22 ) }
    dend_40 { pt3dadd( 29.4714, -159.454, 1.07645, 0.44 ) }
    dend_40 { pt3dadd( 30.0887, -159.887, 1.14454, 0.88 ) }
    dend_40 { pt3dadd( 30.6898, -160.287, 1.18582, 1.03 ) }
    dend_40 { pt3dadd( 31.0852, -160.546, 1.20406, 1.03 ) }
    dend_40 { pt3dadd( 31.5467, -160.87, 1.21976, 0.88 ) }
    dend_40 { pt3dadd( 32.0096, -161.176, 1.22986, 0.29 ) }
    dend_40 { pt3dadd( 32.3425, -161.383, 1.24596, 0.29 ) }
    dend_40 { pt3dadd( 32.8491, -161.67, 1.29864, 0.29 ) }
    dend_40 { pt3dadd( 33.4832, -162.001, 1.39539, 0.37 ) }
    dend_40 { pt3dadd( 33.9578, -162.228, 1.49427, 0.37 ) }
    dend_40 { pt3dadd( 34.3718, -162.407, 1.59931, 0.29 ) }
    dend_40 { pt3dadd( 35.1628, -162.704, 1.83117, 0.29 ) }
    dend_40 { pt3dadd( 35.7829, -162.918, 2.01518, 0.81 ) }
    dend_40 { pt3dadd( 36.1318, -163.038, 2.11413, 0.81 ) }
    dend_40 { pt3dadd( 36.8013, -163.306, 2.30535, 0.59 ) }
    dend_40 { pt3dadd( 37.2845, -163.559, 2.45587, 0.29 ) }
    dend_40 { pt3dadd( 37.6942, -163.819, 2.59523, 0.29 ) }
    dend_40 { pt3dadd( 38.1189, -164.127, 2.75258, 0.66 ) }
    dend_40 { pt3dadd( 38.4268, -164.368, 2.88276, 0.66 ) }
    dend_40 { pt3dadd( 39.3278, -165.106, 3.3148, 0.29 ) }
    dend_40 { pt3dadd( 39.8856, -165.57, 3.6261, 0.29 ) }
    dend_40 { pt3dadd( 40.4456, -166.05, 3.99863, 0.29 ) }
    dend_40 { pt3dadd( 40.8564, -166.418, 4.317, 0.29 ) }
    dend_40 { pt3dadd( 41.251, -166.775, 4.66738, 0.88 ) }
    dend_40 { pt3dadd( 41.4276, -166.935, 4.82918, 0.88 ) }
    dend_40 { pt3dadd( 41.8904, -167.362, 5.28406, 0.66 ) }
    dend_40 { pt3dadd( 42.5129, -167.937, 5.9438, 0.29 ) }
    dend_40 { pt3dadd( 42.826, -168.239, 6.30296, 0.29 ) }
    dend_40 { pt3dadd( 43.1937, -168.609, 6.73117, 0.66 ) }
    dend_40 { pt3dadd( 43.5081, -168.934, 7.07094, 0.44 ) }
    dend_40 { pt3dadd( 48.8845, -173.965, 9.50085, 0.44 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 90/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -13.8639, -119.76, -3.68642, 2.14 ) }
    dend_35 { pt3dadd( -14.3457, -121.309, -4.07859, 2.14 ) }
    dend_35 { pt3dadd( -14.7431, -122.72, -4.38969, 1.33 ) }
    dend_35 { pt3dadd( -15.1037, -124.108, -4.65388, 1.03 ) }
    dend_35 { pt3dadd( -15.3402, -125.162, -4.81497, 1.03 ) }
    dend_35 { pt3dadd( -15.4884, -125.88, -4.91252, 1.25 ) }
    dend_35 { pt3dadd( -15.6281, -126.582, -5.00043, 1.25 ) }
    dend_35 { pt3dadd( -15.8351, -127.907, -5.11679, 0.96 ) }
    dend_35 { pt3dadd( -15.9902, -128.98, -5.17482, 0.96 ) }
    dend_35 { pt3dadd( -16.2807, -130.859, -5.26407, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_35 { pt3dadd( -16.464, -131.966, -5.29546, 0.88 ) }
    dend_35 { pt3dadd( -16.6188, -133.014, -5.30038, 0.96 ) }
    dend_35 { pt3dadd( -16.7685, -134.21, -5.27683, 0.96 ) }
    dend_35 { pt3dadd( -16.8841, -135.23, -5.22815, 0.74 ) }
    dend_35 { pt3dadd( -16.9866, -136.212, -5.15885, 0.52 ) }
    dend_35 { pt3dadd( -17.0685, -137.027, -5.0815, 0.52 ) }
    dend_35 { pt3dadd( -17.1667, -138.028, -4.96735, 0.37 ) }
    dend_35 { pt3dadd( -17.2426, -138.825, -4.87246, 0.74 ) }
    dend_35 { pt3dadd( -17.3415, -139.69, -4.77291, 0.74 ) }
    dend_35 { pt3dadd( -17.4667, -140.665, -4.65278, 1.03 ) }
    dend_35 { pt3dadd( -17.5577, -141.284, -4.57611, 1.18 ) }
    dend_35 { pt3dadd( -17.6933, -142.141, -4.48059, 1.33 ) }
    dend_35 { pt3dadd( -17.8111, -142.787, -4.41132, 1.33 ) }
    dend_35 { pt3dadd( -17.9379, -143.474, -4.30197, 1.18 ) }
    dend_35 { pt3dadd( -18.1524, -144.471, -4.04222, 0.96 ) }
    dend_35 { pt3dadd( -18.3414, -145.231, -3.76487, 0.81 ) }
    dend_35 { pt3dadd( -18.5413, -145.995, -3.42557, 0.81 ) }
    dend_35 { pt3dadd( -18.7471, -146.832, -3.00235, 0.81 ) }
    dend_35 { pt3dadd( -18.9182, -147.565, -2.61754, 0.59 ) }
    dend_35 { pt3dadd( -19.1749, -148.776, -2.00083, 0.66 ) }
    dend_35 { pt3dadd( -19.2946, -149.294, -1.76954, 0.66 ) }
    dend_35 { pt3dadd( -19.5404, -150.225, -1.46098, 1.18 ) }
    dend_35 { pt3dadd( -19.8606, -151.189, -1.3262, 1.47 ) }
    dend_35 { pt3dadd( -20.2046, -152.026, -1.3706, 1.55 ) }
    dend_35 { pt3dadd( -20.5208, -152.636, -1.50767, 1.55 ) }
    dend_35 { pt3dadd( -21.0425, -153.459, -1.80444, 1.4 ) }
    dend_35 { pt3dadd( -21.7867, -154.412, -2.22334, 1.18 ) }
    dend_35 { pt3dadd( -22.6917, -155.418, -2.71658, 0.66 ) }
    dend_35 { pt3dadd( -23.4582, -156.205, -3.11105, 0.74 ) }
    dend_35 { pt3dadd( -24.471, -157.192, -3.59596, 1.18 ) }
    dend_35 { pt3dadd( -25.3276, -157.983, -3.95918, 1.25 ) }
    dend_35 { pt3dadd( -26.2499, -158.794, -4.28799, 1.25 ) }
    dend_35 { pt3dadd( -27.0567, -159.464, -4.50996, 1.25 ) }
    dend_35 { pt3dadd( -27.8952, -160.084, -4.69352, 1.33 ) }
    dend_35 { pt3dadd( -28.39, -160.396, -4.77401, 1.33 ) }
    dend_35 { pt3dadd( -29.214, -160.817, -4.84192, 1.03 ) }
    dend_35 { pt3dadd( -29.9449, -161.113, -4.84963, 0.74 ) }
    dend_35 { pt3dadd( -30.5375, -161.313, -4.83255, 0.59 ) }
    dend_35 { pt3dadd( -31.3255, -161.575, -4.78797, 0.59 ) }
    dend_35 { pt3dadd( -32.1173, -161.879, -4.72784, 0.88 ) }
    dend_35 { pt3dadd( -32.9164, -162.294, -4.63302, 1.18 ) }
    dend_35 { pt3dadd( -33.6773, -162.803, -4.49103, 1.18 ) }
    dend_35 { pt3dadd( -34.3586, -163.348, -4.32407, 1.18 ) }
    dend_35 { pt3dadd( -35.0012, -163.956, -4.15093, 1.18 ) }
    dend_35 { pt3dadd( -35.4948, -164.489, -4.01665, 1.18 ) }
    dend_35 { pt3dadd( -36.1774, -165.308, -3.83346, 0.81 ) }
    dend_35 { pt3dadd( -36.5845, -165.851, -3.72981, 0.59 ) }
    dend_35 { pt3dadd( -36.9566, -166.42, -3.64201, 0.52 ) }
    dend_35 { pt3dadd( -37.6616, -167.636, -3.49795, 0.96 ) }
    dend_35 { pt3dadd( -38.0628, -168.453, -3.43041, 1.18 ) }
    dend_35 { pt3dadd( -38.3911, -169.215, -3.39405, 1.18 ) }
    dend_35 { pt3dadd( -38.8007, -170.256, -3.38534, 0.88 ) }
    dend_35 { pt3dadd( -39.1895, -171.307, -3.4036, 0.59 ) }
    dend_35 { pt3dadd( -39.5072, -172.253, -3.42294, 0.59 ) }
    dend_35 { pt3dadd( -39.8548, -173.356, -3.44201, 0.59 ) }
    dend_35 { pt3dadd( -40.1791, -174.384, -3.45828, 0.74 ) }
    dend_35 { pt3dadd( -40.5576, -175.535, -3.47772, 1.33 ) }
    dend_35 { pt3dadd( -40.8982, -176.534, -3.49603, 1.69 ) }
    dend_35 { pt3dadd( -41.3348, -177.768, -3.52163, 1.77 ) }
    dend_35 { pt3dadd( -41.5847, -178.493, -3.53683, 1.77 ) }
    dend_35 { pt3dadd( -41.8866, -179.409, -3.5765, 1.77 ) }
    dend_35 { pt3dadd( -42.1297, -180.29, -3.62897, 1.47 ) }
    dend_35 { pt3dadd( -42.3491, -181.27, -3.70451, 1.03 ) }
    dend_35 { pt3dadd( -42.5403, -182.236, -3.79764, 1.03 ) }
    dend_35 { pt3dadd( -42.7532, -183.364, -3.93187, 1.03 ) }
    dend_35 { pt3dadd( -42.9592, -184.534, -4.07002, 1.11 ) }
    dend_35 { pt3dadd( -43.1405, -185.636, -4.18769, 1.33 ) }
    dend_35 { pt3dadd( -43.2745, -186.64, -4.26885, 1.03 ) }
    dend_35 { pt3dadd( -43.4004, -188.001, -4.33603, 0.81 ) }
    dend_35 { pt3dadd( -43.4585, -188.953, -4.35398, 1.03 ) }
    dend_35 { pt3dadd( -43.4981, -190.15, -4.34016, 0.81 ) }
    dend_35 { pt3dadd( -43.5074, -190.803, -4.31393, 0.81 ) }
    dend_35 { pt3dadd( -43.5004, -192.567, -4.22396, 0.74 ) }
    dend_35 { pt3dadd( -43.4628, -194.342, -4.11617, 0.74 ) }
    dend_35 { pt3dadd( -43.4038, -195.768, -4.01936, 0.74 ) }
    dend_35 { pt3dadd( -43.3214, -197.852, -3.87812, 0.74 ) }
    dend_35 { pt3dadd( -43.2946, -199.289, -3.79809, 0.74 ) }
    dend_35 { pt3dadd( -43.3131, -200.222, -3.75662, 1.18 ) }
    dend_35 { pt3dadd( -43.4046, -201.18, -3.72425, 1.4 ) }
    dend_35 { pt3dadd( -43.61, -202.169, -3.70202, 1.4 ) }
    dend_35 { pt3dadd( -43.9352, -203.105, -3.69296, 1.47 ) }
    dend_35 { pt3dadd( -44.4877, -204.134, -3.71067, 1.55 ) }
    dend_35 { pt3dadd( -44.9273, -204.748, -3.74357, 1.55 ) }
    dend_35 { pt3dadd( -45.7633, -205.699, -3.81845, 1.11 ) }
    dend_35 { pt3dadd( -46.8762, -206.764, -3.92298, 0.88 ) }
    dend_35 { pt3dadd( -47.6998, -207.452, -3.9795, 0.88 ) }
    dend_35 { pt3dadd( -48.6546, -208.154, -4.02526, 1.03 ) }
    dend_35 { pt3dadd( -49.3175, -208.61, -4.0532, 1.03 ) }
    dend_35 { pt3dadd( -49.8454, -208.981, -4.06842, 1.03 ) }
    dend_35 { pt3dadd( -50.6295, -209.605, -4.05101, 0.81 ) }
    dend_35 { pt3dadd( -51.5421, -210.493, -3.98994, 0.59 ) }
    dend_35 { pt3dadd( -52.5478, -211.717, -3.88319, 0.59 ) }
    dend_35 { pt3dadd( -53.1855, -212.672, -3.78816, 0.88 ) }
    dend_35 { pt3dadd( -53.668, -213.559, -3.68852, 0.88 ) }
    dend_35 { pt3dadd( -54.2878, -214.955, -3.53408, 0.74 ) }
    dend_35 { pt3dadd( -54.6314, -215.918, -3.43169, 0.96 ) }
    dend_35 { pt3dadd( -54.9023, -216.869, -3.35749, 1.11 ) }
    dend_35 { pt3dadd( -55.0602, -217.554, -3.30945, 1.11 ) }
    dend_35 { pt3dadd( -55.2086, -218.275, -3.2793, 0.88 ) }
    dend_35 { pt3dadd( -55.4105, -219.269, -3.29548, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_35 { pt3dadd( -55.5615, -219.967, -3.33269, 0.66 ) }
    dend_35 { pt3dadd( -55.8137, -221.142, -3.39192, 0.96 ) }
    dend_35 { pt3dadd( -55.9978, -222.04, -3.43848, 0.96 ) }
    dend_35 { pt3dadd( -56.2213, -223.19, -3.50045, 0.66 ) }
    dend_35 { pt3dadd( -56.4247, -224.239, -3.55867, 0.74 ) }
    dend_35 { pt3dadd( -56.7456, -225.922, -3.63123, 0.96 ) }
    dend_35 { pt3dadd( -56.9311, -226.892, -3.64426, 0.96 ) }
    dend_35 { pt3dadd( -57.1204, -227.905, -3.65084, 0.96 ) }
    dend_35 { pt3dadd( -57.3428, -229.065, -3.67896, 0.66 ) }
    dend_35 { pt3dadd( -57.6682, -230.78, -3.75254, 0.66 ) }
    dend_35 { pt3dadd( -57.9289, -232.419, -3.85894, 0.66 ) }
    dend_35 { pt3dadd( -58.0563, -233.4, -3.94645, 0.81 ) }
    dend_35 { pt3dadd( -58.2357, -235.117, -4.12683, 0.74 ) }
    dend_35 { pt3dadd( -58.3411, -236.479, -4.29135, 0.74 ) }
    dend_35 { pt3dadd( -58.4053, -237.917, -4.47912, 0.96 ) }
    dend_35 { pt3dadd( -58.4268, -239.125, -4.64452, 0.96 ) }
    dend_35 { pt3dadd( -58.4408, -239.926, -4.74681, 1.62 ) }
    dend_35 { pt3dadd( -58.4752, -240.365, -4.79036, 1.62 ) }
    dend_35 { pt3dadd( -58.5663, -240.941, -4.80892, 1.62 ) }
    dend_35 { pt3dadd( -58.7463, -241.782, -4.8006, 1.4 ) }
    dend_35 { pt3dadd( -58.982, -242.66, -4.77272, 0.88 ) }
    dend_35 { pt3dadd( -59.3066, -243.781, -4.71685, 0.59 ) }
    dend_35 { pt3dadd( -59.7442, -245.306, -4.62105, 0.81 ) }
    dend_35 { pt3dadd( -60.0999, -246.533, -4.53394, 0.96 ) }
    dend_35 { pt3dadd( -60.373, -247.524, -4.46699, 0.96 ) }
    dend_35 { pt3dadd( -60.6754, -248.721, -4.40051, 1.11 ) }
    dend_35 { pt3dadd( -60.8708, -249.505, -4.36709, 1.11 ) }
    dend_35 { pt3dadd( -61.0319, -250.111, -4.35292, 1.33 ) }
    dend_35 { pt3dadd( -61.1989, -250.701, -4.34726, 1.33 ) }
    dend_35 { pt3dadd( -61.5377, -251.659, -4.33754, 1.03 ) }
    dend_35 { pt3dadd( -61.9534, -252.602, -4.32689, 0.66 ) }
    dend_35 { pt3dadd( -62.3029, -253.305, -4.31721, 0.37 ) }
    dend_35 { pt3dadd( -62.5678, -253.818, -4.30957, 0.37 ) }
    dend_35 { pt3dadd( -62.8922, -254.49, -4.2924, 0.37 ) }
    dend_35 { pt3dadd( -63.1856, -255.129, -4.2702, 1.03 ) }
    dend_35 { pt3dadd( -63.5035, -255.839, -4.24377, 1.25 ) }
    dend_35 { pt3dadd( -63.7122, -256.368, -4.21737, 1.25 ) }
    dend_35 { pt3dadd( -64.0462, -257.357, -4.16287, 0.96 ) }
    dend_35 { pt3dadd( -64.4157, -258.602, -4.09541, 0.52 ) }
    dend_35 { pt3dadd( -64.7299, -259.723, -4.0427, 0.52 ) }
    dend_35 { pt3dadd( -65.1356, -261.287, -3.9799, 0.52 ) }
    dend_35 { pt3dadd( -65.4238, -262.561, -3.9291, 0.81 ) }
    dend_35 { pt3dadd( -65.6269, -263.491, -3.88783, 1.03 ) }
    dend_35 { pt3dadd( -65.8181, -264.331, -3.84981, 1.03 ) }
    dend_35 { pt3dadd( -65.9721, -264.978, -3.82204, 0.81 ) }
    dend_35 { pt3dadd( -66.1735, -265.759, -3.79533, 0.81 ) }
    dend_35 { pt3dadd( -66.4931, -266.854, -3.77549, 0.59 ) }
    dend_35 { pt3dadd( -66.8998, -268.002, -3.78161, 0.44 ) }
    dend_35 { pt3dadd( -67.5384, -269.443, -3.80845, 0.88 ) }
    dend_35 { pt3dadd( -67.8691, -270.059, -3.82774, 0.88 ) }
    dend_35 { pt3dadd( -68.3689, -270.855, -3.86331, 0.59 ) }
    dend_35 { pt3dadd( -68.9022, -271.531, -3.90631, 0.59 ) }
    dend_35 { pt3dadd( -69.7545, -272.374, -3.99683, 0.59 ) }
    dend_35 { pt3dadd( -70.6763, -273.112, -4.11675, 0.81 ) }
    dend_35 { pt3dadd( -71.2043, -273.462, -4.19018, 0.81 ) }
    dend_35 { pt3dadd( -71.6312, -273.713, -4.25209, 0.81 ) }
    dend_35 { pt3dadd( -72.596, -274.197, -4.40262, 0.59 ) }
    dend_35 { pt3dadd( -73.6566, -274.626, -4.57746, 0.88 ) }
    dend_35 { pt3dadd( -74.7107, -274.968, -4.76279, 1.03 ) }
    dend_35 { pt3dadd( -75.7165, -275.242, -4.94982, 1.03 ) }
    dend_35 { pt3dadd( -76.5492, -275.423, -5.1032, 0.59 ) }
    dend_35 { pt3dadd( -77.302, -275.563, -5.23284, 0.59 ) }
    dend_35 { pt3dadd( -77.943, -275.684, -5.33424, 0.59 ) }
    dend_35 { pt3dadd( -78.497, -275.784, -5.40425, 0.59 ) }
    dend_35 { pt3dadd( -79.0879, -275.917, -5.47017, 0.59 ) }
    dend_35 { pt3dadd( -79.8626, -276.129, -5.5425, 0.44 ) }
    dend_35 { pt3dadd( -81.0247, -276.526, -5.63181, 0.81 ) }
    dend_35 { pt3dadd( -81.9963, -276.927, -5.68681, 1.11 ) }
    dend_35 { pt3dadd( -83.0585, -277.445, -5.72158, 0.81 ) }
    dend_35 { pt3dadd( -84.1229, -278.051, -5.73739, 0.66 ) }
    dend_35 { pt3dadd( -84.6104, -278.368, -5.73921, 0.66 ) }
    dend_35 { pt3dadd( -85.1967, -278.802, -5.73593, 0.52 ) }
    dend_35 { pt3dadd( -85.8674, -279.348, -5.72156, 0.52 ) }
    dend_35 { pt3dadd( -86.5461, -279.97, -5.69811, 0.52 ) }
    dend_35 { pt3dadd( -87.2275, -280.64, -5.66747, 0.52 ) }
    dend_35 { pt3dadd( -87.6386, -281.084, -5.64361, 1.11 ) }
    dend_35 { pt3dadd( -88.5479, -282.171, -5.59277, 1.4 ) }
    dend_35 { pt3dadd( -89.038, -282.824, -5.56615, 1.84 ) }
    dend_35 { pt3dadd( -89.5721, -283.617, -5.54868, 2.43 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 79/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -8.38712, -83.1573, -12.8879, 0.66 ) }
    dend_32 { pt3dadd( -8.5525, -84.3408, -12.8932, 0.66 ) }
    dend_32 { pt3dadd( -8.66212, -85.0694, -12.9064, 0.37 ) }
    dend_32 { pt3dadd( -8.72143, -85.5576, -12.9264, 0.81 ) }
    dend_32 { pt3dadd( -8.78102, -86.19, -12.9553, 1.03 ) }
    dend_32 { pt3dadd( -8.83054, -86.7399, -12.984, 1.11 ) }
    dend_32 { pt3dadd( -8.8806, -87.3269, -13.0246, 0.88 ) }
    dend_32 { pt3dadd( -8.92491, -88.0042, -13.092, 0.59 ) }
    dend_32 { pt3dadd( -8.94641, -88.7951, -13.1792, 0.29 ) }
    dend_32 { pt3dadd( -8.93897, -89.3706, -13.2449, 0.29 ) }
    dend_32 { pt3dadd( -8.92193, -89.6355, -13.2723, 0.29 ) }
    dend_32 { pt3dadd( -8.83593, -90.2366, -13.3262, 0.74 ) }
    dend_32 { pt3dadd( -8.70749, -90.8003, -13.3632, 1.11 ) }
    dend_32 { pt3dadd( -8.60506, -91.1579, -13.3757, 1.11 ) }
    dend_32 { pt3dadd( -8.44022, -91.6855, -13.3853, 1.11 ) }
    dend_32 { pt3dadd( -8.25071, -92.2973, -13.3686, 0.81 ) }
    dend_32 { pt3dadd( -7.9643, -93.3052, -13.3041, 0.44 ) }
    dend_32 { pt3dadd( -7.73146, -94.2595, -13.2162, 0.59 ) }
    dend_32 { pt3dadd( -7.62176, -94.8317, -13.159, 0.88 ) }
    dend_32 { pt3dadd( -7.54618, -95.4307, -13.0974, 0.88 ) }
    dend_32 { pt3dadd( -7.49299, -96.2838, -13.0122, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_32 { pt3dadd( -7.50011, -97.1161, -12.9269, 0.44 ) }
    dend_32 { pt3dadd( -7.5528, -97.7687, -12.856, 1.03 ) }
    dend_32 { pt3dadd( -7.61856, -98.3132, -12.8008, 0.74 ) }
    dend_32 { pt3dadd( -7.70866, -98.9949, -12.7434, 0.52 ) }
    dend_32 { pt3dadd( -7.77812, -99.5225, -12.7101, 0.88 ) }
    dend_32 { pt3dadd( -7.83118, -100.008, -12.7099, 1.18 ) }
    dend_32 { pt3dadd( -7.87282, -100.429, -12.717, 1.18 ) }
    dend_32 { pt3dadd( -7.92167, -100.911, -12.7328, 0.88 ) }
    dend_32 { pt3dadd( -8.00346, -101.749, -12.7703, 0.29 ) }
    dend_32 { pt3dadd( -8.0641, -102.384, -12.8084, 0.29 ) }
    dend_32 { pt3dadd( -8.14423, -103.292, -12.8832, 1.03 ) }
    dend_32 { pt3dadd( -8.18839, -103.896, -12.9389, 1.47 ) }
    dend_32 { pt3dadd( -8.21642, -104.277, -12.9751, 1.47 ) }
    dend_32 { pt3dadd( -8.24458, -104.696, -13.0135, 1.47 ) }
    dend_32 { pt3dadd( -8.27548, -105.323, -13.061, 1.25 ) }
    dend_32 { pt3dadd( -8.30925, -106.091, -13.105, 0.44 ) }
    dend_32 { pt3dadd( -8.33198, -106.725, -13.1241, 0.44 ) }
    dend_32 { pt3dadd( -8.34675, -107.345, -13.1419, 0.44 ) }
    dend_32 { pt3dadd( -8.35002, -107.664, -13.1494, 0.59 ) }
    dend_32 { pt3dadd( -8.35546, -108.413, -13.1666, 0.59 ) }
    dend_32 { pt3dadd( -8.34959, -108.985, -13.1759, 0.37 ) }
    dend_32 { pt3dadd( -8.34384, -109.463, -13.1828, 0.81 ) }
    dend_32 { pt3dadd( -8.34245, -109.9, -13.1847, 1.03 ) }
    dend_32 { pt3dadd( -8.34601, -110.219, -13.1828, 1.03 ) }
    dend_32 { pt3dadd( -8.36283, -110.614, -13.179, 0.59 ) }
    dend_32 { pt3dadd( -8.39435, -111.258, -13.1623, 0.22 ) }
    dend_32 { pt3dadd( -8.40437, -111.661, -13.1415, 0.22 ) }
    dend_32 { pt3dadd( -8.40663, -112.139, -13.1083, 0.22 ) }
    dend_32 { pt3dadd( -8.40194, -112.654, -13.0661, 0.66 ) }
    dend_32 { pt3dadd( -8.38701, -113.271, -13.0117, 0.88 ) }
    dend_32 { pt3dadd( -8.3469, -114.172, -12.9231, 0.88 ) }
    dend_32 { pt3dadd( -8.29215, -115.22, -12.8175, 0.96 ) }
    dend_32 { pt3dadd( -8.24166, -116.011, -12.747, 1.18 ) }
    dend_32 { pt3dadd( -8.20185, -116.651, -12.7067, 0.66 ) }
    dend_32 { pt3dadd( -8.1715, -117.176, -12.6788, 0.52 ) }
    dend_32 { pt3dadd( -8.12489, -118.178, -12.6451, 0.52 ) }
    dend_32 { pt3dadd( -8.09858, -118.95, -12.6339, 0.81 ) }
    dend_32 { pt3dadd( -8.07501, -119.729, -12.6334, 0.52 ) }
    dend_32 { pt3dadd( -8.05783, -120.312, -12.6312, 0.52 ) }
    dend_32 { pt3dadd( -8.02596, -121.002, -12.6369, 1.47 ) }
    dend_32 { pt3dadd( -7.97751, -121.71, -12.6516, 1.77 ) }
    dend_32 { pt3dadd( -7.92088, -122.258, -12.676, 1.77 ) }
    dend_32 { pt3dadd( -7.87565, -122.574, -12.6908, 1.77 ) }
    dend_32 { pt3dadd( -7.78473, -123.098, -12.7087, 1.25 ) }
    dend_32 { pt3dadd( -7.66843, -123.706, -12.7235, 0.81 ) }
    dend_32 { pt3dadd( -7.52837, -124.445, -12.746, 0.44 ) }
    dend_32 { pt3dadd( -7.35121, -125.371, -12.7681, 0.37 ) }
    dend_32 { pt3dadd( -7.24475, -125.94, -12.7785, 0.52 ) }
    dend_32 { pt3dadd( -7.11121, -126.629, -12.7813, 0.52 ) }
    dend_32 { pt3dadd( -7.00683, -127.145, -12.7757, 0.66 ) }
    dend_32 { pt3dadd( -6.85831, -127.825, -12.761, 0.66 ) }
    dend_32 { pt3dadd( -6.64006, -128.697, -12.7605, 0.88 ) }
    dend_32 { pt3dadd( -6.43013, -129.431, -12.7711, 1.25 ) }
    dend_32 { pt3dadd( -6.2941, -129.846, -12.7892, 1.25 ) }
    dend_32 { pt3dadd( -6.16064, -130.204, -12.8106, 1.25 ) }
    dend_32 { pt3dadd( -5.87119, -130.909, -12.8642, 1.11 ) }
    dend_32 { pt3dadd( -5.59714, -131.532, -12.9205, 0.74 ) }
    dend_32 { pt3dadd( -5.34274, -132.081, -12.9783, 0.29 ) }
    dend_32 { pt3dadd( -5.18907, -132.406, -13.0187, 0.29 ) }
    dend_32 { pt3dadd( -4.82841, -133.197, -13.1162, 0.44 ) }
    dend_32 { pt3dadd( -4.63824, -133.65, -13.163, 0.88 ) }
    dend_32 { pt3dadd( -4.49362, -134.059, -13.1951, 1.33 ) }
    dend_32 { pt3dadd( -4.35384, -134.542, -13.2176, 1.47 ) }
    dend_32 { pt3dadd( -4.2335, -135.063, -13.2292, 1.47 ) }
    dend_32 { pt3dadd( -4.14542, -135.526, -13.2283, 1.25 ) }
    dend_32 { pt3dadd( -4.04468, -136.156, -13.2143, 0.44 ) }
    dend_32 { pt3dadd( -3.93371, -137.078, -13.1515, 0.29 ) }
    dend_32 { pt3dadd( -3.88008, -137.806, -13.0738, 0.29 ) }
    dend_32 { pt3dadd( -3.85864, -138.547, -12.9741, 0.29 ) }
    dend_32 { pt3dadd( -3.86729, -139.135, -12.8833, 0.74 ) }
    dend_32 { pt3dadd( -3.893, -139.55, -12.8154, 0.88 ) }
    dend_32 { pt3dadd( -3.99518, -140.388, -12.6789, 0.96 ) }
    dend_32 { pt3dadd( -4.12568, -141.102, -12.5797, 1.03 ) }
    dend_32 { pt3dadd( -4.24959, -141.637, -12.5333, 1.03 ) }
    dend_32 { pt3dadd( -4.3965, -142.167, -12.505, 0.59 ) }
    dend_32 { pt3dadd( -4.56055, -142.734, -12.4868, 0.22 ) }
    dend_32 { pt3dadd( -4.6578, -143.091, -12.4846, 0.22 ) }
    dend_32 { pt3dadd( -4.84941, -143.917, -12.5126, 0.96 ) }
    dend_32 { pt3dadd( -4.95328, -144.408, -12.5399, 1.11 ) }
    dend_32 { pt3dadd( -5.06806, -144.947, -12.5544, 1.11 ) }
    dend_32 { pt3dadd( -5.17515, -145.462, -12.5439, 0.59 ) }
    dend_32 { pt3dadd( -5.27751, -145.987, -12.5128, 0.29 ) }
    dend_32 { pt3dadd( -5.36101, -146.435, -12.4679, 0.29 ) }
    dend_32 { pt3dadd( -5.43528, -146.809, -12.4202, 0.29 ) }
    dend_32 { pt3dadd( -5.6019, -147.619, -12.3008, 0.44 ) }
    dend_32 { pt3dadd( -5.75248, -148.304, -12.1839, 0.66 ) }
    dend_32 { pt3dadd( -5.91458, -149.027, -12.0538, 0.66 ) }
    dend_32 { pt3dadd( -6.02421, -149.551, -11.9601, 0.81 ) }
    dend_32 { pt3dadd( -6.13512, -150.134, -11.8646, 0.81 ) }
    dend_32 { pt3dadd( -6.23265, -150.691, -11.7803, 0.52 ) }
    dend_32 { pt3dadd( -6.3579, -151.399, -11.6993, 0.66 ) }
    dend_32 { pt3dadd( -6.45516, -151.924, -11.6476, 0.66 ) }
    dend_32 { pt3dadd( -6.6156, -152.807, -11.6129, 0.37 ) }
    dend_32 { pt3dadd( -6.74995, -153.59, -11.6261, 0.37 ) }
    dend_32 { pt3dadd( -6.85399, -154.215, -11.6703, 1.03 ) }
    dend_32 { pt3dadd( -6.94362, -154.845, -11.7602, 1.47 ) }
    dend_32 { pt3dadd( -7.02256, -155.464, -11.8926, 1.62 ) }
    dend_32 { pt3dadd( -7.15443, -156.568, -12.207, 0.88 ) }
    dend_32 { pt3dadd( -7.24294, -157.286, -12.4875, 0.59 ) }
    dend_32 { pt3dadd( -7.31781, -157.832, -12.7622, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_32 { pt3dadd( -7.47061, -158.707, -13.2888, 0.29 ) }
    dend_32 { pt3dadd( -7.53309, -158.963, -13.4557, 0.29 ) }
    dend_32 { pt3dadd( -7.65269, -159.327, -13.7024, 0.29 ) }
    dend_32 { pt3dadd( -7.91434, -160.0, -14.131, 0.29 ) }
    dend_32 { pt3dadd( -8.17827, -160.634, -14.5481, 0.59 ) }
    dend_32 { pt3dadd( -8.45945, -161.305, -14.9748, 0.59 ) }
    dend_32 { pt3dadd( -8.63918, -161.721, -15.2379, 0.44 ) }
    dend_32 { pt3dadd( -8.85924, -162.219, -15.5685, 0.44 ) }
    dend_32 { pt3dadd( -8.99357, -162.522, -15.8062, 0.29 ) }
    dend_32 { pt3dadd( -9.17025, -162.955, -16.1843, 1.4 ) }
    dend_32 { pt3dadd( -9.40151, -163.446, -16.7757, 1.62 ) }
    dend_32 { pt3dadd( -9.61323, -163.777, -17.3267, 1.4 ) }
    dend_32 { pt3dadd( -9.824, -164.008, -17.8557, 1.11 ) }
    dend_32 { pt3dadd( -10.1911, -164.308, -18.7166, 0.81 ) }
    dend_32 { pt3dadd( -10.3959, -164.46, -19.1917, 0.59 ) }
    dend_32 { pt3dadd( -10.6124, -164.647, -19.7284, 0.74 ) }
    dend_32 { pt3dadd( -10.8137, -164.88, -20.2574, 0.81 ) }
    dend_32 { pt3dadd( -10.9682, -165.188, -20.6853, 0.52 ) }
    dend_32 { pt3dadd( -11.0769, -165.504, -21.0158, 0.52 ) }
    dend_32 { pt3dadd( -11.1844, -165.86, -21.3133, 0.74 ) }
    dend_32 { pt3dadd( -11.3215, -166.366, -21.7371, 0.74 ) }
    dend_32 { pt3dadd( -11.3927, -166.683, -21.9635, 0.74 ) }
    dend_32 { pt3dadd( -11.4532, -167.042, -22.2125, 0.52 ) }
    dend_32 { pt3dadd( -11.5524, -167.608, -22.5695, 0.52 ) }
    dend_32 { pt3dadd( -11.6124, -167.919, -22.7561, 0.52 ) }
    dend_32 { pt3dadd( -11.7466, -168.527, -23.0851, 1.69 ) }
    dend_32 { pt3dadd( -11.8421, -168.929, -23.2677, 2.14 ) }
    dend_32 { pt3dadd( -12.0368, -169.78, -23.5809, 1.55 ) }
    dend_32 { pt3dadd( -12.2376, -170.674, -23.8486, 0.29 ) }
    dend_32 { pt3dadd( -12.3547, -171.197, -23.9788, 0.29 ) }
    dend_32 { pt3dadd( -12.5196, -171.915, -24.1345, 0.44 ) }
    dend_32 { pt3dadd( -12.6881, -172.6, -24.2601, 0.59 ) }
    dend_32 { pt3dadd( -12.8458, -173.206, -24.3586, 0.59 ) }
    dend_32 { pt3dadd( -13.0196, -173.823, -24.4384, 0.29 ) }
    dend_32 { pt3dadd( -13.1133, -174.155, -24.4822, 0.29 ) }
    dend_32 { pt3dadd( -13.2427, -174.618, -24.5426, 0.96 ) }
    dend_32 { pt3dadd( -13.3503, -175.025, -24.5917, 1.03 ) }
    dend_32 { pt3dadd( -13.4851, -175.592, -24.6541, 0.52 ) }
    dend_32 { pt3dadd( -13.6371, -176.333, -24.725, 0.29 ) }
    dend_32 { pt3dadd( -13.7124, -176.756, -24.7585, 0.81 ) }
    dend_32 { pt3dadd( -13.7925, -177.247, -24.7907, 0.96 ) }
    dend_32 { pt3dadd( -13.8508, -177.626, -24.8141, 0.96 ) }
    dend_32 { pt3dadd( -13.9512, -178.291, -24.8556, 0.29 ) }
    dend_32 { pt3dadd( -14.0772, -179.049, -24.9088, 0.29 ) }
    dend_32 { pt3dadd( -14.2059, -179.842, -24.989, 1.47 ) }
    dend_32 { pt3dadd( -14.2911, -180.398, -25.0553, 1.92 ) }
    dend_32 { pt3dadd( -14.3285, -180.669, -25.0885, 1.92 ) }
    dend_32 { pt3dadd( -14.4222, -181.342, -25.1663, 1.33 ) }
    dend_32 { pt3dadd( -14.5174, -182.092, -25.251, 0.29 ) }
    dend_32 { pt3dadd( -14.6069, -182.857, -25.3395, 0.29 ) }
    dend_32 { pt3dadd( -14.6686, -183.469, -25.4133, 0.29 ) }
    dend_32 { pt3dadd( -14.7913, -184.8, -25.5796, 0.29 ) }
    dend_32 { pt3dadd( -14.8711, -185.706, -25.6833, 1.4 ) }
    dend_32 { pt3dadd( -14.9168, -186.258, -25.7387, 2.14 ) }
    dend_32 { pt3dadd( -14.9356, -186.499, -25.7595, 2.28 ) }
    dend_32 { pt3dadd( -14.9668, -186.892, -25.7842, 2.28 ) }
    dend_32 { pt3dadd( -15.0077, -187.298, -25.8005, 1.92 ) }
    dend_32 { pt3dadd( -15.0999, -187.884, -25.79, 0.88 ) }
    dend_32 { pt3dadd( -15.2744, -188.774, -25.732, 0.29 ) }
    dend_32 { pt3dadd( -15.3974, -189.316, -25.673, 0.29 ) }
    dend_32 { pt3dadd( -15.5448, -189.922, -25.5897, 0.29 ) }
    dend_32 { pt3dadd( -15.7867, -190.87, -25.4411, 0.29 ) }
    dend_32 { pt3dadd( -16.0317, -191.841, -25.2855, 0.96 ) }
    dend_32 { pt3dadd( -16.1878, -192.492, -25.1842, 1.62 ) }
    dend_32 { pt3dadd( -16.2731, -192.86, -25.128, 1.62 ) }
    dend_32 { pt3dadd( -16.3488, -193.208, -25.0815, 1.62 ) }
    dend_32 { pt3dadd( -16.4963, -193.959, -25.0087, 1.11 ) }
    dend_32 { pt3dadd( -16.6278, -194.885, -24.9911, 0.29 ) }
    dend_32 { pt3dadd( -16.7073, -195.577, -25.0212, 0.29 ) }
    dend_32 { pt3dadd( -16.7667, -196.125, -25.0623, 0.59 ) }
    dend_32 { pt3dadd( -16.7971, -196.397, -25.0908, 0.66 ) }
    dend_32 { pt3dadd( -16.8368, -196.727, -25.1322, 0.66 ) }
    dend_32 { pt3dadd( -16.9597, -197.629, -25.2634, 0.29 ) }
    dend_32 { pt3dadd( -17.1169, -198.674, -25.4528, 0.29 ) }
    dend_32 { pt3dadd( -17.2534, -199.483, -25.6196, 0.96 ) }
    dend_32 { pt3dadd( -17.3827, -200.117, -25.7639, 1.4 ) }
    dend_32 { pt3dadd( -17.493, -200.591, -25.8735, 1.4 ) }
    dend_32 { pt3dadd( -17.617, -201.081, -25.9835, 1.4 ) }
    dend_32 { pt3dadd( -17.7958, -201.726, -26.1194, 0.88 ) }
    dend_32 { pt3dadd( -18.0206, -202.515, -26.2834, 0.29 ) }
    dend_32 { pt3dadd( -18.2299, -203.235, -26.4226, 0.29 ) }
    dend_32 { pt3dadd( -18.4518, -203.961, -26.5638, 0.44 ) }
    dend_32 { pt3dadd( -18.6049, -204.42, -26.6539, 0.66 ) }
    dend_32 { pt3dadd( -18.7389, -204.788, -26.723, 0.66 ) }
    dend_32 { pt3dadd( -18.9966, -205.441, -26.8261, 0.29 ) }
    dend_32 { pt3dadd( -19.1518, -205.833, -26.8843, 0.29 ) }
    dend_32 { pt3dadd( -19.3389, -206.335, -26.9777, 0.29 ) }
    dend_32 { pt3dadd( -19.58, -207.024, -27.1518, 0.29 ) }
    dend_32 { pt3dadd( -19.7083, -207.418, -27.278, 0.52 ) }
    dend_32 { pt3dadd( -19.8655, -207.968, -27.4743, 0.66 ) }
    dend_32 { pt3dadd( -19.9955, -208.518, -27.6383, 0.66 ) }
    dend_32 { pt3dadd( -20.1417, -209.378, -27.8384, 1.4 ) }
    dend_32 { pt3dadd( -20.2032, -210.138, -27.9664, 2.28 ) }
    dend_32 { pt3dadd( -20.2085, -210.9, -28.0564, 2.5 ) }
    dend_32 { pt3dadd( -20.1863, -211.33, -28.0752, 2.5 ) }
    dend_32 { pt3dadd( -20.0006, -212.844, -27.9997, 0.22 ) }
    dend_32 { pt3dadd( -19.8895, -213.458, -27.9064, 0.22 ) }
    dend_32 { pt3dadd( -19.6964, -214.24, -27.6993, 0.37 ) }
    dend_32 { pt3dadd( -19.5514, -214.705, -27.5257, 0.44 ) }
    dend_32 { pt3dadd( -19.2248, -215.401, -27.2478, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_32 { pt3dadd( -18.7996, -216.054, -27.0134, 0.88 ) }
    dend_32 { pt3dadd( -18.4976, -216.37, -26.9453, 1.4 ) }
    dend_32 { pt3dadd( -18.2399, -216.6, -26.9325, 1.4 ) }
    dend_32 { pt3dadd( -17.8637, -216.93, -26.9712, 1.11 ) }
    dend_32 { pt3dadd( -16.6036, -218.064, -27.2726, 0.29 ) }
    dend_32 { pt3dadd( -16.1799, -218.471, -27.423, 0.29 ) }
    dend_32 { pt3dadd( -15.5109, -219.177, -27.7197, 0.81 ) }
    dend_32 { pt3dadd( -15.1727, -219.628, -27.9005, 0.81 ) }
    dend_32 { pt3dadd( -14.6263, -220.572, -28.2486, 0.22 ) }
    dend_32 { pt3dadd( -14.4564, -220.963, -28.3765, 0.22 ) }
    dend_32 { pt3dadd( -14.2917, -221.559, -28.522, 0.44 ) }
    dend_32 { pt3dadd( -14.2258, -221.893, -28.5917, 0.59 ) }
    dend_32 { pt3dadd( -14.0403, -223.286, -28.8326, 0.22 ) }
    dend_32 { pt3dadd( -13.9876, -223.771, -28.9157, 0.74 ) }
    dend_32 { pt3dadd( -13.9509, -224.202, -28.9874, 1.03 ) }
    dend_32 { pt3dadd( -13.9126, -224.662, -29.0537, 1.03 ) }
    dend_32 { pt3dadd( -13.8777, -225.112, -29.1115, 0.74 ) }
    dend_32 { pt3dadd( -13.8439, -225.531, -29.1622, 0.37 ) }
    dend_32 { pt3dadd( -13.7455, -226.595, -29.2876, 0.22 ) }
    dend_32 { pt3dadd( -13.6538, -227.654, -29.4213, 0.22 ) }
    dend_32 { pt3dadd( -13.596, -228.449, -29.5255, 0.88 ) }
    dend_32 { pt3dadd( -13.5592, -229.037, -29.6052, 1.62 ) }
    dend_32 { pt3dadd( -13.5426, -229.359, -29.6514, 1.84 ) }
    dend_32 { pt3dadd( -13.5309, -229.747, -29.7108, 1.84 ) }
    dend_32 { pt3dadd( -13.5287, -230.545, -29.8387, 0.52 ) }
    dend_32 { pt3dadd( -13.5518, -231.217, -29.961, 0.22 ) }
    dend_32 { pt3dadd( -13.5903, -231.753, -30.0747, 0.22 ) }
    dend_32 { pt3dadd( -13.6399, -232.214, -30.1835, 0.37 ) }
    dend_32 { pt3dadd( -13.6684, -232.392, -30.226, 0.37 ) }
    dend_32 { pt3dadd( -13.7591, -232.831, -30.3427, 0.22 ) }
    dend_32 { pt3dadd( -13.8479, -233.186, -30.4452, 0.74 ) }
    dend_32 { pt3dadd( -13.9551, -233.589, -30.5692, 0.74 ) }
    dend_32 { pt3dadd( -14.0605, -233.954, -30.6824, 0.59 ) }
    dend_32 { pt3dadd( -14.3076, -234.74, -30.9306, 0.22 ) }
    dend_32 { pt3dadd( -14.4362, -235.102, -31.0458, 0.22 ) }
    dend_32 { pt3dadd( -14.6435, -235.583, -31.1903, 0.59 ) }
    dend_32 { pt3dadd( -14.8206, -235.926, -31.2834, 0.59 ) }
    dend_32 { pt3dadd( -15.0295, -236.277, -31.3529, 0.29 ) }
    dend_32 { pt3dadd( -15.2666, -236.633, -31.4143, 0.22 ) }
    dend_32 { pt3dadd( -15.6198, -237.122, -31.5279, 0.37 ) }
    dend_32 { pt3dadd( -16.0757, -237.705, -31.6959, 0.44 ) }
    dend_32 { pt3dadd( -16.4538, -238.114, -31.9086, 0.59 ) }
    dend_32 { pt3dadd( -16.9003, -238.524, -32.254, 0.37 ) }
    dend_32 { pt3dadd( -17.1519, -238.698, -32.5092, 0.22 ) }
    dend_32 { pt3dadd( -17.7279, -238.949, -33.2479, 2.21 ) }
    dend_32 { pt3dadd( -17.9232, -238.964, -33.5643, 2.5 ) }
    dend_32 { pt3dadd( -18.604, -238.684, -34.9074, 0.22 ) }
    dend_32 { pt3dadd( -18.7957, -238.515, -35.3434, 0.22 ) }
    dend_32 { pt3dadd( -19.0141, -238.162, -35.9814, 0.66 ) }
    dend_32 { pt3dadd( -19.101, -237.94, -36.3068, 0.66 ) }
    dend_32 { pt3dadd( -19.2048, -237.564, -36.7904, 0.37 ) }
    dend_32 { pt3dadd( -19.326, -237.014, -37.4964, 1.92 ) }
    dend_32 { pt3dadd( -19.3649, -236.82, -37.7518, 1.92 ) }
    dend_32 { pt3dadd( -19.5566, -235.994, -39.0939, 0.44 ) }
    dend_32 { pt3dadd( -19.6457, -235.698, -39.6928, 0.59 ) }
    dend_32 { pt3dadd( -19.7169, -235.568, -40.0352, 0.37 ) }
    dend_32 { pt3dadd( -19.8682, -235.45, -40.5199, 0.37 ) }
    dend_32 { pt3dadd( -20.0398, -235.379, -41.0061, 0.22 ) }
    dend_32 { pt3dadd( -20.5153, -235.314, -42.0891, 0.29 ) }
    dend_32 { pt3dadd( -20.7213, -235.348, -42.4174, 0.22 ) }
    dend_32 { pt3dadd( -21.0852, -235.432, -42.9215, 0.22 ) }
    dend_32 { pt3dadd( -21.6013, -235.541, -43.5972, 0.22 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 62/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -8.38712, -83.1573, -12.8879, 0.74 ) }
    dend_31 { pt3dadd( -9.99828, -84.2494, -13.4823, 0.74 ) }
    dend_31 { pt3dadd( -10.6344, -84.6354, -13.7179, 0.74 ) }
    dend_31 { pt3dadd( -11.5394, -85.1119, -14.0838, 0.74 ) }
    dend_31 { pt3dadd( -12.1638, -85.3844, -14.3557, 0.52 ) }
    dend_31 { pt3dadd( -12.7947, -85.5674, -14.6739, 0.52 ) }
    dend_31 { pt3dadd( -13.3845, -85.6748, -15.0096, 0.88 ) }
    dend_31 { pt3dadd( -13.8374, -85.6029, -15.379, 0.88 ) }
    dend_31 { pt3dadd( -14.5154, -85.3317, -16.0648, 0.59 ) }
    dend_31 { pt3dadd( -14.9211, -85.1116, -16.5291, 0.37 ) }
    dend_31 { pt3dadd( -15.5266, -84.8036, -17.2947, 0.37 ) }
    dend_31 { pt3dadd( -15.8785, -84.6823, -17.8039, 1.11 ) }
    dend_31 { pt3dadd( -16.1647, -84.6915, -18.2664, 1.47 ) }
    dend_31 { pt3dadd( -16.4451, -84.7824, -18.7158, 1.47 ) }
    dend_31 { pt3dadd( -16.6575, -84.8822, -19.0314, 1.47 ) }
    dend_31 { pt3dadd( -17.1548, -85.1178, -19.733, 0.96 ) }
    dend_31 { pt3dadd( -17.6081, -85.2764, -20.333, 0.59 ) }
    dend_31 { pt3dadd( -18.0419, -85.3501, -20.8391, 0.59 ) }
    dend_31 { pt3dadd( -18.5189, -85.3737, -21.2977, 0.59 ) }
    dend_31 { pt3dadd( -19.0319, -85.3938, -21.7605, 0.81 ) }
    dend_31 { pt3dadd( -19.5265, -85.4143, -22.1858, 0.81 ) }
    dend_31 { pt3dadd( -19.9268, -85.4283, -22.4874, 0.81 ) }
    dend_31 { pt3dadd( -20.4102, -85.4672, -22.8272, 0.81 ) }
    dend_31 { pt3dadd( -20.9115, -85.7259, -23.2786, 0.22 ) }
    dend_31 { pt3dadd( -21.1841, -86.3793, -23.741, 0.22 ) }
    dend_31 { pt3dadd( -21.3296, -86.9078, -24.0983, 0.66 ) }
    dend_31 { pt3dadd( -21.3969, -87.2241, -24.3142, 0.88 ) }
    dend_31 { pt3dadd( -21.4829, -87.6841, -24.647, 0.88 ) }
    dend_31 { pt3dadd( -21.5826, -88.2196, -25.1692, 0.44 ) }
    dend_31 { pt3dadd( -21.7495, -88.7397, -25.8987, 1.4 ) }
    dend_31 { pt3dadd( -21.9233, -89.0099, -26.5407, 2.14 ) }
    dend_31 { pt3dadd( -22.0007, -89.073, -26.8255, 2.58 ) }
    dend_31 { pt3dadd( -22.1699, -89.1094, -27.4062, 2.36 ) }
    dend_31 { pt3dadd( -22.6269, -89.0571, -28.9763, 1.69 ) }
    dend_31 { pt3dadd( -22.8753, -88.9792, -29.7853, 0.37 ) }
    dend_31 { pt3dadd( -23.2147, -88.8418, -30.7059, 0.37 ) }
    dend_31 { pt3dadd( -23.5173, -88.7218, -31.4136, 0.37 ) }
    dend_31 { pt3dadd( -24.1762, -88.5232, -32.762, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_31 { pt3dadd( -24.464, -88.4712, -33.2941, 2.14 ) }
    dend_31 { pt3dadd( -24.7694, -88.4681, -33.801, 2.5 ) }
    dend_31 { pt3dadd( -25.6634, -88.626, -35.324, 0.44 ) }
    dend_31 { pt3dadd( -25.9398, -88.7222, -35.8055, 0.44 ) }
    dend_31 { pt3dadd( -26.3471, -88.8892, -36.5738, 0.44 ) }
    dend_31 { pt3dadd( -26.6976, -89.0201, -37.3074, 0.44 ) }
    dend_31 { pt3dadd( -27.044, -89.1052, -38.0814, 1.4 ) }
    dend_31 { pt3dadd( -27.4077, -89.1654, -38.9484, 2.06 ) }
    dend_31 { pt3dadd( -27.7092, -89.2111, -39.7655, 2.06 ) }
    dend_31 { pt3dadd( -28.0566, -89.2162, -40.7977, 0.66 ) }
    dend_31 { pt3dadd( -28.3006, -89.1973, -41.6555, 0.81 ) }
    dend_31 { pt3dadd( -28.5299, -89.1761, -42.6333, 0.52 ) }
    dend_31 { pt3dadd( -28.6618, -89.1982, -43.5266, 1.77 ) }
    dend_31 { pt3dadd( -28.6988, -89.2664, -44.2117, 2.28 ) }
    dend_31 { pt3dadd( -28.6047, -89.699, -46.4641, 1.33 ) }
    dend_31 { pt3dadd( -28.4884, -89.9603, -47.3239, 1.77 ) }
    dend_31 { pt3dadd( -28.3805, -90.151, -47.8634, 1.77 ) }
    dend_31 { pt3dadd( -28.1402, -90.5385, -48.8923, 0.74 ) }
    dend_31 { pt3dadd( -27.9374, -90.8556, -49.7059, 0.52 ) }
    dend_31 { pt3dadd( -27.6631, -91.3609, -50.8905, 0.52 ) }
    dend_31 { pt3dadd( -27.3994, -91.9644, -52.0891, 0.88 ) }
    dend_31 { pt3dadd( -27.2279, -92.5412, -53.2081, 1.47 ) }
    dend_31 { pt3dadd( -27.1283, -93.1109, -54.2775, 0.22 ) }
    dend_31 { pt3dadd( -27.1058, -93.4059, -54.7991, 0.22 ) }
    dend_31 { pt3dadd( -27.1051, -93.8086, -55.4317, 0.81 ) }
    dend_31 { pt3dadd( -27.1263, -94.2475, -56.0107, 0.96 ) }
    dend_31 { pt3dadd( -27.1775, -94.834, -56.6918, 1.55 ) }
    dend_31 { pt3dadd( -27.247, -95.4209, -57.2787, 1.55 ) }
    dend_31 { pt3dadd( -27.3334, -96.0604, -57.8938, 0.37 ) }
    dend_31 { pt3dadd( -27.3949, -96.5142, -58.3396, 0.74 ) }
    dend_31 { pt3dadd( -27.4679, -97.0743, -58.9296, 0.81 ) }
    dend_31 { pt3dadd( -27.5339, -97.8116, -59.7338, 0.29 ) }
    dend_31 { pt3dadd( -27.5444, -98.1671, -60.1131, 0.96 ) }
    dend_31 { pt3dadd( -27.5332, -98.6898, -60.6511, 1.33 ) }
    dend_31 { pt3dadd( -27.4674, -99.4259, -61.3798, 0.74 ) }
    dend_31 { pt3dadd( -27.3666, -100.043, -61.9499, 0.59 ) }
    dend_31 { pt3dadd( -27.1296, -101.026, -62.7686, 0.29 ) }
    dend_31 { pt3dadd( -26.9255, -101.666, -63.2106, 0.29 ) }
    dend_31 { pt3dadd( -26.6881, -102.26, -63.569, 0.29 ) }
    dend_31 { pt3dadd( -26.4751, -102.719, -63.7861, 1.18 ) }
    dend_31 { pt3dadd( -26.2392, -103.152, -63.9511, 1.69 ) }
    dend_31 { pt3dadd( -25.8489, -103.783, -64.1366, 1.33 ) }
    dend_31 { pt3dadd( -25.2483, -104.673, -64.3652, 0.22 ) }
    dend_31 { pt3dadd( -24.9655, -105.08, -64.4739, 0.22 ) }
    dend_31 { pt3dadd( -24.62, -105.606, -64.6249, 0.96 ) }
    dend_31 { pt3dadd( -24.401, -105.977, -64.741, 1.11 ) }
    dend_31 { pt3dadd( -24.0218, -106.688, -64.9709, 0.52 ) }
    dend_31 { pt3dadd( -23.4711, -107.832, -65.3456, 0.22 ) }
    dend_31 { pt3dadd( -23.2303, -108.375, -65.527, 0.22 ) }
    dend_31 { pt3dadd( -22.9869, -108.969, -65.735, 0.88 ) }
    dend_31 { pt3dadd( -22.8153, -109.401, -65.9101, 1.03 ) }
    dend_31 { pt3dadd( -22.5207, -110.148, -66.2503, 0.22 ) }
    dend_31 { pt3dadd( -22.3802, -110.492, -66.4172, 0.22 ) }
    dend_31 { pt3dadd( -22.1605, -110.994, -66.6666, 0.66 ) }
    dend_31 { pt3dadd( -21.9044, -111.554, -66.9363, 0.74 ) }
    dend_31 { pt3dadd( -21.2989, -112.854, -67.5239, 0.22 ) }
    dend_31 { pt3dadd( -20.8899, -113.802, -67.8991, 0.22 ) }
    dend_31 { pt3dadd( -20.4599, -115.006, -68.3279, 0.96 ) }
    dend_31 { pt3dadd( -20.3267, -115.461, -68.4754, 1.25 ) }
    dend_31 { pt3dadd( -20.2116, -116.071, -68.651, 1.25 ) }
    dend_31 { pt3dadd( -20.1268, -116.973, -68.8686, 0.66 ) }
    dend_31 { pt3dadd( -20.1358, -118.083, -69.1086, 0.15 ) }
    dend_31 { pt3dadd( -20.2523, -119.027, -69.3362, 0.37 ) }
    dend_31 { pt3dadd( -20.3446, -119.465, -69.4664, 0.37 ) }
    dend_31 { pt3dadd( -20.7678, -121.055, -70.0211, 0.22 ) }
    dend_31 { pt3dadd( -20.8447, -121.301, -70.1248, 0.74 ) }
    dend_31 { pt3dadd( -21.02, -121.822, -70.3812, 0.88 ) }
    dend_31 { pt3dadd( -21.6045, -123.47, -71.271, 0.22 ) }
    dend_31 { pt3dadd( -21.8307, -124.088, -71.6118, 0.74 ) }
    dend_31 { pt3dadd( -22.0599, -124.688, -71.9422, 0.74 ) }
    dend_31 { pt3dadd( -22.5589, -125.992, -72.6717, 0.22 ) }
    dend_31 { pt3dadd( -22.979, -127.087, -73.2691, 0.22 ) }
    dend_31 { pt3dadd( -23.4708, -128.347, -73.8897, 0.22 ) }
    dend_31 { pt3dadd( -23.9375, -129.541, -74.3985, 0.22 ) }
    dend_31 { pt3dadd( -24.1955, -130.193, -74.6341, 0.88 ) }
    dend_31 { pt3dadd( -24.3983, -130.709, -74.7883, 1.11 ) }
    dend_31 { pt3dadd( -24.5928, -131.238, -74.8991, 1.11 ) }
    dend_31 { pt3dadd( -25.0328, -132.532, -75.0872, 0.15 ) }
    dend_31 { pt3dadd( -25.3475, -133.585, -75.1961, 0.15 ) }
    dend_31 { pt3dadd( -25.5075, -134.171, -75.242, 0.81 ) }
    dend_31 { pt3dadd( -25.6384, -134.683, -75.2756, 0.96 ) }
    dend_31 { pt3dadd( -26.0115, -136.603, -75.587, 0.22 ) }
    dend_31 { pt3dadd( -26.1639, -137.505, -75.7491, 0.22 ) }
    dend_31 { pt3dadd( -26.2949, -138.504, -75.9786, 0.22 ) }
    dend_31 { pt3dadd( -26.3356, -138.905, -76.087, 1.18 ) }
    dend_31 { pt3dadd( -26.3626, -139.288, -76.2121, 1.18 ) }
    dend_31 { pt3dadd( -26.4182, -142.11, -77.5036, 0.29 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 87/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 29.0383, 171.329, -49.7774, 0.37 ) }
    dend_26 { pt3dadd( 29.5009, 170.643, -49.4796, 0.37 ) }
    dend_26 { pt3dadd( 29.8686, 170.125, -49.2784, 0.52 ) }
    dend_26 { pt3dadd( 30.3862, 169.423, -49.015, 0.74 ) }
    dend_26 { pt3dadd( 30.801, 168.865, -48.8205, 1.11 ) }
    dend_26 { pt3dadd( 31.0437, 168.55, -48.7106, 1.11 ) }
    dend_26 { pt3dadd( 31.3973, 168.094, -48.5484, 0.81 ) }
    dend_26 { pt3dadd( 32.2245, 167.109, -48.1403, 0.22 ) }
    dend_26 { pt3dadd( 32.6212, 166.627, -47.942, 0.22 ) }
    dend_26 { pt3dadd( 32.864, 166.304, -47.8261, 0.66 ) }
    dend_26 { pt3dadd( 33.1072, 165.944, -47.7064, 0.66 ) }
    dend_26 { pt3dadd( 33.3392, 165.569, -47.5885, 0.66 ) }
    dend_26 { pt3dadd( 33.77, 164.822, -47.3419, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_26 { pt3dadd( 34.1615, 164.084, -47.0885, 0.22 ) }
    dend_26 { pt3dadd( 34.5601, 163.264, -46.8167, 0.22 ) }
    dend_26 { pt3dadd( 34.7386, 162.866, -46.6888, 0.44 ) }
    dend_26 { pt3dadd( 34.8463, 162.59, -46.6157, 0.59 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 4/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 29.0383, 171.329, -49.7774, 0.22 ) }
    dend_25 { pt3dadd( 31.0419, 171.228, -50.4373, 0.22 ) }
    dend_25 { pt3dadd( 31.4967, 171.236, -50.6088, 0.44 ) }
    dend_25 { pt3dadd( 33.5865, 171.395, -51.423, 0.22 ) }
    dend_25 { pt3dadd( 34.4779, 171.492, -51.8018, 0.59 ) }
    dend_25 { pt3dadd( 35.1506, 171.577, -52.1258, 0.59 ) }
    dend_25 { pt3dadd( 38.0361, 171.94, -53.5156, 0.22 ) }
    dend_25 { pt3dadd( 41.3439, 172.412, -55.2065, 0.22 ) }
    dend_25 { pt3dadd( 42.521, 172.616, -55.8406, 0.66 ) }
    dend_25 { pt3dadd( 43.4326, 172.818, -56.3773, 0.81 ) }
    dend_25 { pt3dadd( 44.7986, 173.155, -57.2321, 0.22 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 15/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 16.4285, 227.323, 39.2276, 0.59 ) }
    dend_19 { pt3dadd( 18.0882, 228.699, 39.1221, 0.59 ) }
    dend_19 { pt3dadd( 18.6251, 229.161, 39.1086, 0.44 ) }
    dend_19 { pt3dadd( 19.7404, 230.177, 39.0595, 0.22 ) }
    dend_19 { pt3dadd( 20.6953, 231.117, 39.029, 0.81 ) }
    dend_19 { pt3dadd( 21.1994, 231.637, 38.9992, 0.96 ) }
    dend_19 { pt3dadd( 21.4321, 231.883, 38.9792, 0.96 ) }
    dend_19 { pt3dadd( 22.1477, 232.747, 38.9084, 0.22 ) }
    dend_19 { pt3dadd( 23.1535, 234.152, 38.7038, 0.22 ) }
    dend_19 { pt3dadd( 23.9658, 235.476, 38.4495, 1.11 ) }
    dend_19 { pt3dadd( 24.3618, 236.216, 38.2975, 1.47 ) }
    dend_19 { pt3dadd( 24.5281, 236.582, 38.2047, 1.47 ) }
    dend_19 { pt3dadd( 25.1128, 238.191, 37.7676, 0.22 ) }
    dend_19 { pt3dadd( 25.5191, 239.67, 37.3335, 0.22 ) }
    dend_19 { pt3dadd( 25.6968, 240.542, 37.0702, 0.66 ) }
    dend_19 { pt3dadd( 25.7685, 240.977, 36.9286, 0.66 ) }
    dend_19 { pt3dadd( 25.9981, 243.049, 36.258, 0.22 ) }
    dend_19 { pt3dadd( 26.1231, 244.938, 35.6521, 0.22 ) }
    dend_19 { pt3dadd( 26.1459, 246.015, 35.2959, 0.22 ) }
    dend_19 { pt3dadd( 26.1359, 247.266, 34.8815, 1.47 ) }
    dend_19 { pt3dadd( 26.0992, 247.977, 34.6544, 1.47 ) }
    dend_19 { pt3dadd( 25.8579, 250.372, 33.9574, 0.22 ) }
    dend_19 { pt3dadd( 25.7382, 251.147, 33.7477, 0.81 ) }
    dend_19 { pt3dadd( 25.5976, 251.795, 33.5841, 0.81 ) }
    dend_19 { pt3dadd( 25.1611, 253.373, 33.2305, 0.22 ) }
    dend_19 { pt3dadd( 24.7525, 254.618, 32.9698, 0.22 ) }
    dend_19 { pt3dadd( 24.2758, 255.911, 32.7133, 1.47 ) }
    dend_19 { pt3dadd( 24.0616, 256.447, 32.5911, 1.84 ) }
    dend_19 { pt3dadd( 23.246, 258.397, 32.1318, 0.22 ) }
    dend_19 { pt3dadd( 22.5853, 259.89, 31.7802, 0.22 ) }
    dend_19 { pt3dadd( 22.3338, 260.408, 31.6495, 0.22 ) }
    dend_19 { pt3dadd( 21.6532, 261.769, 31.2532, 1.55 ) }
    dend_19 { pt3dadd( 21.2188, 262.593, 30.9799, 2.06 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 48/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 16.4285, 227.323, 39.2276, 0.22 ) }
    dend_18 { pt3dadd( 17.2491, 229.682, 39.4977, 0.22 ) }
    dend_18 { pt3dadd( 17.7136, 230.959, 39.6654, 0.22 ) }
    dend_18 { pt3dadd( 18.0802, 231.948, 39.8059, 0.96 ) }
    dend_18 { pt3dadd( 18.2398, 232.378, 39.8717, 1.18 ) }
    dend_18 { pt3dadd( 18.4049, 232.821, 39.9439, 1.18 ) }
    dend_18 { pt3dadd( 18.6698, 233.544, 40.0674, 0.22 ) }
    dend_18 { pt3dadd( 18.8637, 234.057, 40.1738, 0.44 ) }
    dend_18 { pt3dadd( 18.9564, 234.32, 40.2239, 0.44 ) }
    dend_18 { pt3dadd( 19.203, 235.078, 40.3613, 0.22 ) }
    dend_18 { pt3dadd( 19.4111, 235.744, 40.4807, 0.44 ) }
    dend_18 { pt3dadd( 19.6377, 236.483, 40.6131, 0.44 ) }
    dend_18 { pt3dadd( 20.2917, 238.742, 41.0167, 0.22 ) }
    dend_18 { pt3dadd( 20.8344, 240.649, 41.3385, 0.22 ) }
    dend_18 { pt3dadd( 21.0409, 241.366, 41.4508, 0.66 ) }
    dend_18 { pt3dadd( 21.1556, 241.761, 41.5072, 0.74 ) }
    dend_18 { pt3dadd( 21.3471, 242.392, 41.5798, 0.22 ) }
    dend_18 { pt3dadd( 21.839, 243.937, 41.7264, 0.22 ) }
    dend_18 { pt3dadd( 22.1311, 244.847, 41.7989, 1.03 ) }
    dend_18 { pt3dadd( 22.3269, 245.452, 41.8398, 1.25 ) }
    dend_18 { pt3dadd( 22.475, 245.91, 41.8671, 1.25 ) }
    dend_18 { pt3dadd( 22.9747, 247.452, 41.9487, 0.22 ) }
    dend_18 { pt3dadd( 23.8065, 249.989, 42.0735, 0.22 ) }
    dend_18 { pt3dadd( 24.0912, 250.843, 42.1168, 0.74 ) }
    dend_18 { pt3dadd( 24.2484, 251.335, 42.1529, 0.81 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 73/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 8.32965, 92.3286, 28.2688, 0.37 ) }
    dend_16 { pt3dadd( 9.66781, 97.738, 32.3195, 0.37 ) }
    dend_16 { pt3dadd( 11.485, 102.759, 36.6727, 0.37 ) }
    dend_16 { pt3dadd( 11.8345, 107.422, 41.7325, 0.37 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 77/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 8.32965, 92.3286, 28.2688, 0.22 ) }
    dend_15 { pt3dadd( 12.2007, 100.96, 28.4613, 0.37 ) }
    dend_15 { pt3dadd( 16.6309, 109.262, 27.4695, 0.37 ) }
    dend_15 { pt3dadd( 21.4375, 117.281, 26.0096, 0.37 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 81/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 100.752, -7.22316, 11.1853, 0.37 ) }
    dend_10 { pt3dadd( 111.39, -9.88195, 12.0808, 0.37 ) }
    dend_10 { pt3dadd( 122.337, -10.8402, 12.6036, 0.37 ) }
    dend_10 { pt3dadd( 133.251, -10.4342, 13.9253, 0.37 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 85/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 100.752, -7.22316, 11.1853, 0.22 ) }
    dend_9 { pt3dadd( 106.662, -8.78058, 12.0723, 0.37 ) }
    dend_9 { pt3dadd( 112.793, -9.50276, 12.2047, 0.37 ) }
    dend_9 { pt3dadd( 118.876, -10.3828, 12.8102, 0.37 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 89/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 49.8706, 12.4015, -0.0362245, 0.52 ) }
    dend_5 { pt3dadd( 51.4137, 12.6847, 0.342596, 0.52 ) }
    dend_5 { pt3dadd( 52.016, 12.765, 0.488422, 0.52 ) }
    dend_5 { pt3dadd( 52.6465, 12.8175, 0.676343, 0.52 ) }
    dend_5 { pt3dadd( 53.8598, 12.8914, 1.06872, 0.52 ) }
    dend_5 { pt3dadd( 54.5875, 12.9135, 1.31423, 0.88 ) }
    dend_5 { pt3dadd( 55.7021, 12.9284, 1.67586, 0.88 ) }
    dend_5 { pt3dadd( 56.5274, 12.939, 1.93171, 0.88 ) }
    dend_5 { pt3dadd( 57.4129, 12.8471, 2.1861, 0.81 ) }
    dend_5 { pt3dadd( 57.9849, 12.6775, 2.29062, 0.81 ) }
    dend_5 { pt3dadd( 58.8493, 12.2365, 2.36034, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_5 { pt3dadd( 59.5404, 11.7549, 2.33099, 0.59 ) }
    dend_5 { pt3dadd( 60.2787, 11.1499, 2.19751, 0.59 ) }
    dend_5 { pt3dadd( 61.0045, 10.5193, 1.97658, 0.74 ) }
    dend_5 { pt3dadd( 62.1328, 9.44775, 1.52338, 0.66 ) }
    dend_5 { pt3dadd( 62.5951, 8.96675, 1.31241, 0.66 ) }
    dend_5 { pt3dadd( 63.2947, 8.17264, 0.963663, 0.52 ) }
    dend_5 { pt3dadd( 63.7685, 7.62487, 0.717086, 0.52 ) }
    dend_5 { pt3dadd( 64.3775, 6.9509, 0.394989, 0.81 ) }
    dend_5 { pt3dadd( 65.1335, 6.11656, -0.0171517, 0.81 ) }
    dend_5 { pt3dadd( 65.6353, 5.53237, -0.288, 0.81 ) }
    dend_5 { pt3dadd( 66.2412, 4.75799, -0.640804, 0.81 ) }
    dend_5 { pt3dadd( 66.9679, 3.72114, -1.09173, 0.88 ) }
    dend_5 { pt3dadd( 67.549, 2.79425, -1.47568, 1.11 ) }
    dend_5 { pt3dadd( 67.9054, 2.18259, -1.72797, 1.11 ) }
    dend_5 { pt3dadd( 68.5619, 0.942974, -2.2215, 0.88 ) }
    dend_5 { pt3dadd( 69.0129, -0.061079, -2.57089, 0.96 ) }
    dend_5 { pt3dadd( 69.3077, -0.860576, -2.79329, 0.96 ) }
    dend_5 { pt3dadd( 69.5163, -1.54068, -2.93928, 0.96 ) }
    dend_5 { pt3dadd( 69.6909, -2.16901, -3.0493, 0.66 ) }
    dend_5 { pt3dadd( 69.9738, -3.17896, -3.1697, 0.66 ) }
    dend_5 { pt3dadd( 70.3943, -4.51894, -3.2576, 0.81 ) }
    dend_5 { pt3dadd( 70.8179, -5.58035, -3.29087, 1.11 ) }
    dend_5 { pt3dadd( 71.3969, -6.77389, -3.2909, 0.96 ) }
    dend_5 { pt3dadd( 71.8917, -7.61289, -3.30792, 0.81 ) }
    dend_5 { pt3dadd( 72.6351, -8.65832, -3.35568, 0.81 ) }
    dend_5 { pt3dadd( 73.5523, -9.71649, -3.44883, 0.59 ) }
    dend_5 { pt3dadd( 74.3403, -10.4931, -3.56403, 0.37 ) }
    dend_5 { pt3dadd( 75.0698, -11.1427, -3.70189, 0.37 ) }
    dend_5 { pt3dadd( 76.1512, -12.0658, -3.95425, 0.59 ) }
    dend_5 { pt3dadd( 76.7416, -12.571, -4.13866, 0.88 ) }
    dend_5 { pt3dadd( 77.0668, -12.8605, -4.27192, 1.11 ) }
    dend_5 { pt3dadd( 77.483, -13.2665, -4.45462, 1.11 ) }
    dend_5 { pt3dadd( 78.0358, -13.8445, -4.68353, 0.74 ) }
    dend_5 { pt3dadd( 78.4796, -14.284, -4.8608, 0.74 ) }
    dend_5 { pt3dadd( 78.9179, -14.7324, -5.04926, 0.74 ) }
    dend_5 { pt3dadd( 79.5806, -15.4395, -5.38937, 0.74 ) }
    dend_5 { pt3dadd( 80.2478, -16.1776, -5.79397, 0.74 ) }
    dend_5 { pt3dadd( 80.8521, -16.8425, -6.18059, 0.66 ) }
    dend_5 { pt3dadd( 81.4227, -17.4576, -6.56294, 0.66 ) }
    dend_5 { pt3dadd( 82.1763, -18.2571, -7.0935, 0.96 ) }
    dend_5 { pt3dadd( 83.0593, -19.2157, -7.7709, 1.4 ) }
    dend_5 { pt3dadd( 83.5039, -19.7381, -8.16335, 1.62 ) }
    dend_5 { pt3dadd( 83.9557, -20.312, -8.61726, 1.77 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 43/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 49.8706, 12.4015, -0.0362245, 0.88 ) }
    dend_4 { pt3dadd( 51.1452, 13.5593, 0.678338, 0.88 ) }
    dend_4 { pt3dadd( 52.3109, 14.4698, 1.29287, 0.88 ) }
    dend_4 { pt3dadd( 53.6449, 15.332, 1.91037, 0.88 ) }
    dend_4 { pt3dadd( 55.1085, 16.1279, 2.49231, 0.88 ) }
    dend_4 { pt3dadd( 56.8601, 16.9415, 3.12366, 0.74 ) }
    dend_4 { pt3dadd( 57.9755, 17.4172, 3.51742, 0.74 ) }
    dend_4 { pt3dadd( 59.5722, 17.9675, 4.05655, 0.88 ) }
    dend_4 { pt3dadd( 61.0172, 18.3759, 4.4996, 0.88 ) }
    dend_4 { pt3dadd( 62.2155, 18.6763, 4.82537, 0.88 ) }
    dend_4 { pt3dadd( 63.3787, 18.9616, 5.12183, 0.66 ) }
    dend_4 { pt3dadd( 64.1903, 19.2021, 5.33219, 0.66 ) }
    dend_4 { pt3dadd( 65.2609, 19.6765, 5.62816, 0.88 ) }
    dend_4 { pt3dadd( 65.8901, 20.0603, 5.82451, 0.88 ) }
    dend_4 { pt3dadd( 66.4846, 20.4966, 6.02576, 0.88 ) }
    dend_4 { pt3dadd( 67.0853, 20.9623, 6.22937, 0.88 ) }
    dend_4 { pt3dadd( 68.2058, 21.8109, 6.59881, 0.59 ) }
    dend_4 { pt3dadd( 69.0113, 22.3619, 6.89236, 0.59 ) }
    dend_4 { pt3dadd( 69.633, 22.7768, 7.16825, 0.81 ) }
    dend_4 { pt3dadd( 70.4506, 23.3484, 7.60449, 0.81 ) }
    dend_4 { pt3dadd( 71.0746, 23.8291, 7.99941, 0.81 ) }
    dend_4 { pt3dadd( 71.7783, 24.4069, 8.48975, 0.66 ) }
    dend_4 { pt3dadd( 72.7877, 25.2553, 9.22717, 0.59 ) }
    dend_4 { pt3dadd( 73.8447, 26.3209, 10.115, 0.59 ) }
    dend_4 { pt3dadd( 74.4034, 26.997, 10.6313, 0.59 ) }
    dend_4 { pt3dadd( 75.0268, 27.8743, 11.2312, 0.44 ) }
    dend_4 { pt3dadd( 75.4117, 28.4527, 11.5774, 0.44 ) }
    dend_4 { pt3dadd( 75.8222, 29.0841, 11.9063, 0.44 ) }
    dend_4 { pt3dadd( 76.841, 30.6421, 12.635, 0.44 ) }
    dend_4 { pt3dadd( 77.6522, 31.8226, 13.1677, 0.66 ) }
    dend_4 { pt3dadd( 78.3312, 32.7905, 13.5963, 0.66 ) }
    dend_4 { pt3dadd( 79.1707, 33.9802, 14.1114, 0.74 ) }
    dend_4 { pt3dadd( 79.8251, 34.9111, 14.5081, 0.96 ) }
    dend_4 { pt3dadd( 80.3303, 35.6078, 14.7993, 0.96 ) }
    dend_4 { pt3dadd( 81.0848, 36.544, 15.1749, 0.66 ) }
    dend_4 { pt3dadd( 81.8281, 37.4225, 15.5213, 0.66 ) }
    dend_4 { pt3dadd( 83.0103, 38.7932, 16.0562, 0.59 ) }
    dend_4 { pt3dadd( 84.106, 40.078, 16.5949, 0.59 ) }
    dend_4 { pt3dadd( 84.815, 40.9151, 16.9683, 0.81 ) }
    dend_4 { pt3dadd( 85.3525, 41.5619, 17.2717, 0.81 ) }
    dend_4 { pt3dadd( 86.2771, 42.6219, 17.7796, 0.52 ) }
    dend_4 { pt3dadd( 86.9994, 43.3747, 18.1399, 0.52 ) }
    dend_4 { pt3dadd( 87.9668, 44.3075, 18.5985, 0.52 ) }
    dend_4 { pt3dadd( 88.7836, 45.0729, 18.9772, 0.52 ) }
    dend_4 { pt3dadd( 89.5672, 45.794, 19.3276, 0.37 ) }
    dend_4 { pt3dadd( 90.9657, 47.0564, 19.9256, 0.37 ) }
    dend_4 { pt3dadd( 91.8859, 47.8793, 20.2992, 0.59 ) }
    dend_4 { pt3dadd( 92.4741, 48.38, 20.5077, 0.59 ) }
    dend_4 { pt3dadd( 93.7212, 49.426, 20.8948, 0.74 ) }
    dend_4 { pt3dadd( 94.3715, 49.9776, 21.0988, 0.74 ) }
    dend_4 { pt3dadd( 94.9238, 50.4616, 21.2886, 0.74 ) }
    dend_4 { pt3dadd( 95.7073, 51.2191, 21.6227, 0.74 ) }
    dend_4 { pt3dadd( 96.2252, 51.7757, 21.824, 0.44 ) }
    dend_4 { pt3dadd( 96.9546, 52.5992, 22.0056, 0.44 ) }
    dend_4 { pt3dadd( 97.5779, 53.29, 22.0771, 0.81 ) }
    dend_4 { pt3dadd( 98.6212, 54.4163, 22.0968, 0.81 ) }
    dend_4 { pt3dadd( 99.3843, 55.2169, 22.0321, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_4 { pt3dadd( 100.714, 56.5817, 21.8493, 0.52 ) }
    dend_4 { pt3dadd( 101.718, 57.6608, 21.6553, 0.44 ) }
    dend_4 { pt3dadd( 102.375, 58.379, 21.4696, 0.44 ) }
    dend_4 { pt3dadd( 102.944, 59.0197, 21.2665, 0.44 ) }
    dend_4 { pt3dadd( 103.385, 59.5258, 21.0666, 0.44 ) }
    dend_4 { pt3dadd( 104.126, 60.3283, 20.7309, 0.74 ) }
    dend_4 { pt3dadd( 104.795, 60.9432, 20.5894, 0.59 ) }
    dend_4 { pt3dadd( 105.249, 61.3861, 20.5534, 0.59 ) }
    dend_4 { pt3dadd( 114.256, 69.5617, 26.1706, 0.59 ) }
    dend_4 { pt3dadd( 123.563, 77.597, 31.4957, 0.59 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 10/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -89.5721, -283.617, -5.54868, 0.52 ) }
    dend_39 { pt3dadd( -90.4847, -285.953, -5.7321, 0.52 ) }
    dend_39 { pt3dadd( -90.869, -286.897, -5.79808, 0.29 ) }
    dend_39 { pt3dadd( -91.4021, -288.131, -5.89571, 0.44 ) }
    dend_39 { pt3dadd( -91.905, -289.278, -5.99447, 0.44 ) }
    dend_39 { pt3dadd( -92.3052, -290.166, -6.07692, 0.29 ) }
    dend_39 { pt3dadd( -92.9152, -291.459, -6.22016, 0.29 ) }
    dend_39 { pt3dadd( -93.5437, -292.687, -6.37993, 0.81 ) }
    dend_39 { pt3dadd( -94.0159, -293.63, -6.53622, 1.18 ) }
    dend_39 { pt3dadd( -94.262, -294.145, -6.63158, 1.4 ) }
    dend_39 { pt3dadd( -94.6469, -295.002, -6.79355, 1.4 ) }
    dend_39 { pt3dadd( -94.9822, -295.827, -6.94596, 1.11 ) }
    dend_39 { pt3dadd( -95.6443, -297.611, -7.25635, 0.52 ) }
    dend_39 { pt3dadd( -96.0852, -299.013, -7.4666, 0.44 ) }
    dend_39 { pt3dadd( -96.3889, -300.14, -7.61177, 0.74 ) }
    dend_39 { pt3dadd( -96.7354, -301.497, -7.76733, 0.81 ) }
    dend_39 { pt3dadd( -96.9813, -302.52, -7.87763, 0.81 ) }
    dend_39 { pt3dadd( -97.2158, -303.605, -7.98944, 0.74 ) }
    dend_39 { pt3dadd( -97.5048, -305.041, -8.07133, 0.22 ) }
    dend_39 { pt3dadd( -97.6327, -305.705, -8.09865, 0.22 ) }
    dend_39 { pt3dadd( -97.8299, -306.874, -8.14704, 0.22 ) }
    dend_39 { pt3dadd( -97.9666, -307.887, -8.15525, 0.66 ) }
    dend_39 { pt3dadd( -98.084, -308.944, -8.11697, 0.81 ) }
    dend_39 { pt3dadd( -98.233, -310.644, -7.98819, 0.66 ) }
    dend_39 { pt3dadd( -98.322, -312.191, -7.79828, 0.22 ) }
    dend_39 { pt3dadd( -98.3424, -313.572, -7.56869, 0.22 ) }
    dend_39 { pt3dadd( -98.3107, -314.579, -7.3588, 0.22 ) }
    dend_39 { pt3dadd( -98.2695, -315.553, -7.1014, 0.96 ) }
    dend_39 { pt3dadd( -98.258, -316.054, -6.95848, 1.18 ) }
    dend_39 { pt3dadd( -98.2486, -316.798, -6.74864, 1.18 ) }
    dend_39 { pt3dadd( -98.2491, -317.408, -6.53949, 1.18 ) }
    dend_39 { pt3dadd( -98.2908, -318.573, -6.1655, 0.74 ) }
    dend_39 { pt3dadd( -98.4267, -320.336, -5.665, 0.22 ) }
    dend_39 { pt3dadd( -98.4922, -320.917, -5.51354, 0.22 ) }
    dend_39 { pt3dadd( -98.584, -321.594, -5.34263, 0.44 ) }
    dend_39 { pt3dadd( -98.6672, -322.18, -5.21, 0.44 ) }
    dend_39 { pt3dadd( -98.864, -323.716, -4.89788, 0.22 ) }
    dend_39 { pt3dadd( -98.9696, -324.682, -4.73219, 0.96 ) }
    dend_39 { pt3dadd( -99.0194, -325.422, -4.63164, 1.18 ) }
    dend_39 { pt3dadd( -99.0513, -326.132, -4.54205, 1.25 ) }
    dend_39 { pt3dadd( -99.1055, -327.483, -4.38558, 0.96 ) }
    dend_39 { pt3dadd( -99.2318, -329.423, -4.19146, 0.29 ) }
    dend_39 { pt3dadd( -99.3653, -330.95, -4.06418, 0.22 ) }
    dend_39 { pt3dadd( -99.5637, -332.674, -3.96084, 0.22 ) }
    dend_39 { pt3dadd( -99.6966, -333.56, -3.92275, 0.81 ) }
    dend_39 { pt3dadd( -99.8411, -334.282, -3.90806, 0.96 ) }
    dend_39 { pt3dadd( -100.487, -336.788, -3.89339, 0.22 ) }
    dend_39 { pt3dadd( -100.737, -337.571, -3.90049, 0.22 ) }
    dend_39 { pt3dadd( -101.176, -338.815, -3.91028, 0.59 ) }
    dend_39 { pt3dadd( -101.519, -339.725, -3.91246, 0.59 ) }
    dend_39 { pt3dadd( -102.021, -341.092, -3.90653, 0.52 ) }
    dend_39 { pt3dadd( -102.407, -342.217, -3.88622, 0.52 ) }
    dend_39 { pt3dadd( -102.894, -343.745, -3.81863, 0.52 ) }
    dend_39 { pt3dadd( -103.08, -344.346, -3.78227, 0.96 ) }
    dend_39 { pt3dadd( -103.385, -345.375, -3.70882, 0.96 ) }
    dend_39 { pt3dadd( -103.714, -346.532, -3.61575, 0.59 ) }
    dend_39 { pt3dadd( -104.28, -348.488, -3.39908, 0.22 ) }
    dend_39 { pt3dadd( -104.849, -350.508, -3.1604, 0.22 ) }
    dend_39 { pt3dadd( -105.115, -351.454, -3.04057, 0.22 ) }
    dend_39 { pt3dadd( -105.365, -352.292, -2.92993, 0.96 ) }
    dend_39 { pt3dadd( -105.541, -352.865, -2.84692, 1.18 ) }
    dend_39 { pt3dadd( -105.913, -354.004, -2.65769, 0.52 ) }
    dend_39 { pt3dadd( -106.657, -368.087, -3.01347, 0.52 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 73/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -89.5721, -283.617, -5.54868, 0.29 ) }
    dend_36 { pt3dadd( -91.8431, -282.906, -5.43217, 0.29 ) }
    dend_36 { pt3dadd( -93.0517, -282.843, -5.39388, 0.37 ) }
    dend_36 { pt3dadd( -93.5999, -282.959, -5.38549, 0.37 ) }
    dend_36 { pt3dadd( -94.8576, -283.42, -5.33053, 0.37 ) }
    dend_36 { pt3dadd( -96.0478, -283.936, -5.40096, 0.52 ) }
    dend_36 { pt3dadd( -97.076, -284.41, -5.52088, 0.59 ) }
    dend_36 { pt3dadd( -98.446, -285.21, -5.78208, 0.59 ) }
    dend_36 { pt3dadd( -99.6518, -285.968, -6.07109, 0.37 ) }
    dend_36 { pt3dadd( -100.756, -286.683, -6.37941, 0.37 ) }
    dend_36 { pt3dadd( -102.702, -287.974, -7.00858, 0.37 ) }
    dend_36 { pt3dadd( -103.594, -288.515, -7.32075, 0.37 ) }
    dend_36 { pt3dadd( -104.418, -288.977, -7.61792, 0.29 ) }
    dend_36 { pt3dadd( -105.078, -289.314, -7.84958, 0.29 ) }
    dend_36 { pt3dadd( -105.827, -289.685, -8.09133, 0.81 ) }
    dend_36 { pt3dadd( -106.432, -290.009, -8.25982, 0.81 ) }
    dend_36 { pt3dadd( -107.282, -290.552, -8.37548, 0.81 ) }
    dend_36 { pt3dadd( -108.723, -291.613, -8.51354, 0.29 ) }
    dend_36 { pt3dadd( -109.412, -292.184, -8.55357, 0.66 ) }
    dend_36 { pt3dadd( -109.928, -292.646, -8.55419, 0.66 ) }
    dend_36 { pt3dadd( -110.409, -293.107, -8.53381, 0.66 ) }
    dend_36 { pt3dadd( -112.146, -294.868, -8.40287, 0.29 ) }
    dend_36 { pt3dadd( -112.916, -295.687, -8.34749, 0.44 ) }
    dend_36 { pt3dadd( -113.581, -296.393, -8.30222, 0.29 ) }
    dend_36 { pt3dadd( -114.374, -297.207, -8.2692, 0.74 ) }
    dend_36 { pt3dadd( -114.95, -297.758, -8.28486, 0.74 ) }
    dend_36 { pt3dadd( -115.892, -298.552, -8.3735, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_36 { pt3dadd( -117.544, -299.764, -8.63552, 0.29 ) }
    dend_36 { pt3dadd( -118.522, -300.416, -8.82677, 0.52 ) }
    dend_36 { pt3dadd( -119.178, -300.82, -8.99638, 0.52 ) }
    dend_36 { pt3dadd( -120.534, -301.606, -9.45563, 0.29 ) }
    dend_36 { pt3dadd( -121.539, -302.136, -9.8286, 0.29 ) }
    dend_36 { pt3dadd( -122.148, -302.413, -10.0714, 0.59 ) }
    dend_36 { pt3dadd( -122.862, -302.704, -10.3892, 0.59 ) }
    dend_36 { pt3dadd( -124.146, -303.206, -10.998, 0.22 ) }
    dend_36 { pt3dadd( -124.87, -303.475, -11.3259, 0.29 ) }
    dend_36 { pt3dadd( -125.967, -303.888, -11.7786, 0.29 ) }
    dend_36 { pt3dadd( -126.486, -304.093, -11.9874, 0.29 ) }
    dend_36 { pt3dadd( -127.814, -304.682, -12.5095, 0.37 ) }
    dend_36 { pt3dadd( -128.835, -305.248, -12.8032, 0.37 ) }
    dend_36 { pt3dadd( -129.904, -305.955, -12.9805, 0.52 ) }
    dend_36 { pt3dadd( -131.148, -306.924, -13.0903, 1.55 ) }
    dend_36 { pt3dadd( -131.896, -307.598, -13.1214, 1.92 ) }
    dend_36 { pt3dadd( -132.615, -308.302, -13.1159, 1.92 ) }
    dend_36 { pt3dadd( -134.29, -310.058, -12.9913, 0.29 ) }
    dend_36 { pt3dadd( -135.389, -311.296, -12.88, 0.29 ) }
    dend_36 { pt3dadd( -136.276, -312.366, -12.7557, 0.29 ) }
    dend_36 { pt3dadd( -136.983, -313.232, -12.6357, 0.74 ) }
    dend_36 { pt3dadd( -137.335, -313.666, -12.5742, 0.96 ) }
    dend_36 { pt3dadd( -137.648, -314.036, -12.5275, 1.11 ) }
    dend_36 { pt3dadd( -138.55, -315.129, -12.3984, 0.52 ) }
    dend_36 { pt3dadd( -139.123, -315.862, -12.2683, 0.29 ) }
    dend_36 { pt3dadd( -139.969, -316.922, -12.0326, 0.22 ) }
    dend_36 { pt3dadd( -140.551, -317.61, -11.8625, 0.44 ) }
    dend_36 { pt3dadd( -141.051, -318.17, -11.7145, 0.44 ) }
    dend_36 { pt3dadd( -142.442, -319.703, -11.2848, 0.22 ) }
    dend_36 { pt3dadd( -143.288, -320.614, -11.0106, 0.22 ) }
    dend_36 { pt3dadd( -144.103, -321.455, -10.7538, 1.25 ) }
    dend_36 { pt3dadd( -144.855, -322.215, -10.5004, 1.55 ) }
    dend_36 { pt3dadd( -145.216, -322.561, -10.385, 1.62 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 33/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 83.9557, -20.312, -8.61726, 0.74 ) }
    dend_7 { pt3dadd( 85.6119, -21.17, -7.55451, 0.74 ) }
    dend_7 { pt3dadd( 86.0922, -21.4353, -7.27854, 0.74 ) }
    dend_7 { pt3dadd( 86.9136, -21.9299, -6.87377, 0.59 ) }
    dend_7 { pt3dadd( 87.8776, -22.5675, -6.49295, 0.59 ) }
    dend_7 { pt3dadd( 88.7727, -23.2098, -6.21375, 0.59 ) }
    dend_7 { pt3dadd( 89.2199, -23.5419, -6.09369, 0.59 ) }
    dend_7 { pt3dadd( 90.0994, -24.256, -5.94584, 0.59 ) }
    dend_7 { pt3dadd( 90.8485, -24.8889, -5.86316, 0.81 ) }
    dend_7 { pt3dadd( 91.8421, -25.7205, -5.75687, 0.81 ) }
    dend_7 { pt3dadd( 92.6617, -26.3769, -5.66822, 0.37 ) }
    dend_7 { pt3dadd( 93.5113, -27.0116, -5.56294, 0.37 ) }
    dend_7 { pt3dadd( 94.5048, -27.7443, -5.42672, 0.37 ) }
    dend_7 { pt3dadd( 95.5185, -28.5, -5.25288, 0.37 ) }
    dend_7 { pt3dadd( 96.4886, -29.1938, -5.04985, 0.37 ) }
    dend_7 { pt3dadd( 97.9465, -30.192, -4.68618, 0.22 ) }
    dend_7 { pt3dadd( 99.5015, -31.2269, -4.26199, 0.22 ) }
    dend_7 { pt3dadd( 107.778, -38.7227, -3.04757, 0.22 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 51/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 83.9557, -20.312, -8.61726, 0.37 ) }
    dend_6 { pt3dadd( 84.0118, -21.4796, -9.47225, 0.37 ) }
    dend_6 { pt3dadd( 84.111, -22.2295, -9.96917, 0.37 ) }
    dend_6 { pt3dadd( 84.2511, -22.9323, -10.412, 0.37 ) }
    dend_6 { pt3dadd( 84.451, -23.6763, -10.8028, 0.37 ) }
    dend_6 { pt3dadd( 84.6561, -24.3226, -11.1207, 0.37 ) }
    dend_6 { pt3dadd( 84.93, -25.084, -11.4704, 0.29 ) }
    dend_6 { pt3dadd( 85.4047, -26.1427, -11.9839, 0.22 ) }
    dend_6 { pt3dadd( 85.9458, -27.2467, -12.5795, 0.22 ) }
    dend_6 { pt3dadd( 86.6648, -28.5955, -13.3887, 0.22 ) }
    dend_6 { pt3dadd( 86.9356, -29.0853, -13.7163, 1.18 ) }
    dend_6 { pt3dadd( 87.1347, -29.475, -14.0316, 1.4 ) }
    dend_6 { pt3dadd( 87.5458, -30.6286, -15.1806, 1.4 ) }
    dend_6 { pt3dadd( 87.6742, -31.5298, -16.2513, 0.44 ) }
    dend_6 { pt3dadd( 87.6564, -31.8347, -16.6294, 0.44 ) }
    dend_6 { pt3dadd( 87.5558, -32.2977, -17.2141, 0.29 ) }
    dend_6 { pt3dadd( 87.3084, -33.0948, -18.1259, 0.29 ) }
    dend_6 { pt3dadd( 86.9298, -34.1218, -19.2311, 0.22 ) }
    dend_6 { pt3dadd( 86.5844, -34.9484, -19.9699, 0.22 ) }
    dend_6 { pt3dadd( 86.3287, -35.4521, -20.3942, 1.03 ) }
    dend_6 { pt3dadd( 86.1906, -35.7129, -20.5956, 1.33 ) }
    dend_6 { pt3dadd( 85.9878, -36.0869, -20.8514, 1.33 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 73/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -145.216, -322.561, -10.385, 0.29 ) }
    dend_38 { pt3dadd( -145.833, -322.007, -10.3646, 0.29 ) }
    dend_38 { pt3dadd( -145.969, -321.884, -10.3641, 0.52 ) }
    dend_38 { pt3dadd( -146.179, -321.691, -10.3693, 0.59 ) }
    dend_38 { pt3dadd( -147.37, -320.594, -10.4728, 0.22 ) }
    dend_38 { pt3dadd( -147.704, -320.289, -10.5136, 0.22 ) }
    dend_38 { pt3dadd( -148.162, -319.879, -10.5814, 0.66 ) }
    dend_38 { pt3dadd( -148.405, -319.656, -10.6351, 0.66 ) }
    dend_38 { pt3dadd( -149.431, -318.75, -10.8976, 0.22 ) }
    dend_38 { pt3dadd( -149.853, -318.393, -11.0175, 0.22 ) }
    dend_38 { pt3dadd( -150.24, -318.093, -11.1317, 0.52 ) }
    dend_38 { pt3dadd( -150.515, -317.896, -11.2126, 0.66 ) }
    dend_38 { pt3dadd( -151.27, -317.395, -11.4315, 0.22 ) }
    dend_38 { pt3dadd( -152.767, -316.424, -11.8622, 0.22 ) }
    dend_38 { pt3dadd( -153.734, -315.828, -12.1348, 0.22 ) }
    dend_38 { pt3dadd( -154.632, -315.283, -12.3658, 1.18 ) }
    dend_38 { pt3dadd( -154.884, -315.133, -12.4304, 1.4 ) }
    dend_38 { pt3dadd( -155.272, -314.91, -12.5271, 0.74 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 91/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -145.216, -322.561, -10.385, 0.22 ) }
    dend_37 { pt3dadd( -145.924, -323.672, -10.3709, 0.22 ) }
    dend_37 { pt3dadd( -146.497, -324.584, -10.306, 0.22 ) }
    dend_37 { pt3dadd( -146.742, -324.995, -10.2665, 0.44 ) }
    dend_37 { pt3dadd( -146.847, -325.175, -10.2473, 0.44 ) }
    dend_37 { pt3dadd( -147.813, -326.9, -10.0556, 0.22 ) }
    dend_37 { pt3dadd( -148.265, -327.707, -9.96599, 0.44 ) }
    dend_37 { pt3dadd( -148.649, -328.385, -9.8823, 0.22 ) }
    dend_37 { pt3dadd( -148.89, -328.843, -9.81435, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_37 { pt3dadd( -149.092, -329.239, -9.74829, 0.66 ) }
    dend_37 { pt3dadd( -149.241, -329.543, -9.6904, 0.44 ) }
    dend_37 { pt3dadd( -152.13, -336.59, -8.07813, 0.44 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
    ModelViewParmSubset_2 = new SectionList()
    dend_49 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_49 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_44 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_43 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_33 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_22 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_21 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_12 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_1 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_48 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_45 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_41 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_29 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_17 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_14 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_8 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_47 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_40 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_35 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_32 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_31 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_19 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_5 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_4 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_39 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_36 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_11 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_2 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_20 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_27 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_13 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_42 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_28 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_3 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_30 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_51 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_50 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_34 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_16 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_15 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_6 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_9 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_7 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_10 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_46 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_24 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_23 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_26 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_25 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_18 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_38 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_37 OneSecGrp_SectionRef_55.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_49 nseg = 3
    dend_44 nseg = 3
    dend_43 nseg = 3
    dend_33 nseg = 3
    dend_22 nseg = 7
    dend_21 nseg = 3
    dend_12 nseg = 9
    dend_1 nseg = 3
    dend_48 nseg = 3
    dend_45 nseg = 3
    dend_41 nseg = 7
    dend_29 nseg = 5
    dend_17 nseg = 9
    dend_14 nseg = 3
    dend_8 nseg = 5
    dend_47 nseg = 11
    dend_40 nseg = 5
    dend_35 nseg = 9
    dend_32 nseg = 9
    dend_31 nseg = 5
    dend_19 nseg = 3
    dend_5 nseg = 3
    dend_4 nseg = 5
    dend_39 nseg = 5
    dend_36 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L6_ChC_9b41babcdb_0_0


