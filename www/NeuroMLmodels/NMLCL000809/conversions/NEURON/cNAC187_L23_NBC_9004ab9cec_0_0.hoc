// Cell: cNAC187_L23_NBC_9004ab9cec_0_0
/*
{
  "id" : "cNAC187_L23_NBC_9004ab9cec_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.89093, 6.3846, -1.48625, 2.82016", "-2.66386, 5.61657, -1.27833, 4.98681", "-2.43678, 4.84853, -1.07041, 7.51044", "-2.20971, 4.0805, -0.862483, 8.92538", "-1.98264, 3.31246, -0.65456, 10.0669", "-1.75557, 2.54443, -0.446636, 10.3676", "-1.52849, 1.7764, -0.238713, 10.6171", "-1.30142, 1.00836, -0.0307891, 10.1846", "-1.07435, 0.240325, 0.177134, 9.79445", "-0.847273, -0.52771, 0.385058, 9.58423", "-0.6202, -1.29574, 0.592981, 9.374", "-0.393128, -2.06378, 0.800905, 9.16378", "-0.166055, -2.83181, 1.00883, 8.95369", "0.0610184, -3.59985, 1.21675, 8.74371", "0.288091, -4.36788, 1.42468, 8.44292", "0.515164, -5.13592, 1.6326, 7.88171", "0.742237, -5.90395, 1.84052, 7.32051", "0.96931, -6.67199, 2.04845, 6.7381", "1.19638, -7.44002, 2.25637, 5.93312", "1.42346, -8.20806, 2.46429, 5.04519", "1.65053, -8.97609, 2.67222, 2.76105" ]
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-2.9567, 3.65529, 8.71987, 1.11", "-3.96629, 6.29105, 8.67914, 0.83", "-4.39064, 7.82397, 8.83991, 0.83", "-5.44291, 12.2764, 9.55917, 0.83", "-5.80815, 14.8234, 10.2263, 0.83", "-6.0536, 16.9837, 10.9022, 1.11", "-6.10213, 19.8336, 12.0539, 0.83", "-5.78329, 23.3346, 13.8984, 0.83", "-5.61641, 24.5366, 14.6405, 0.83", "-5.00261, 27.9671, 17.0673, 0.55", "-4.2327, 32.2576, 20.5161, 0.55", "-3.54482, 36.5367, 24.1415, 0.55", "-3.11839, 39.7166, 26.916, 0.55", "-2.83353, 41.6453, 28.5529, 0.28", "-2.59722, 43.2712, 29.9877, 0.55", "-2.44377, 45.4754, 31.9584, 0.55", "-3.76817, 55.2636, 34.3754, 0.55", "-6.59226, 64.7686, 36.7573, 0.55", "-10.6401, 73.3623, 40.6993, 0.55", "-15.0559, 81.7317, 44.7786, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999965882319475,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-5.4967, 3.41779, -7.38013, 1.66", "-7.33835, 3.9817, -8.7866, 1.66", "-9.95552, 4.78307, -10.7854, 1.66", "-11.7953, 5.34641, -12.1904, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999965882319475
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-4.2067, -0.667208, -10.0602, 1.11", "-5.6205, -0.69289, -9.98283, 1.11", "-7.48118, -0.644992, -9.85078, 1.11", "-9.4568, -0.511736, -9.70287, 1.11", "-11.1475, -0.381305, -9.61977, 1.11", "-13.7848, -0.18499, -9.54112, 0.83", "-15.6939, -0.0702192, -9.52609, 0.83", "-17.081, 0.00703632, -9.54783, 1.39", "-18.6211, 0.100885, -9.60848, 1.11", "-20.0236, 0.210527, -9.70826, 1.11", "-22.3684, 0.351303, -9.93726, 1.11", "-24.5927, 0.361235, -10.2007, 1.11", "-26.2169, 0.338347, -10.4652, 0.83", "-27.1506, 0.331388, -10.6281, 0.83", "-30.2766, 0.189544, -11.4864, 0.83", "-31.0786, 0.0878014, -11.8249, 0.83", "-32.9636, -0.274753, -12.9865, 0.83", "-34.8591, -0.671863, -14.3768, 0.83", "-36.8103, -1.06202, -16.0429, 0.83", "-40.4662, -1.75411, -19.285, 0.83", "-43.6737, -2.34174, -22.3602, 0.83", "-46.0969, -2.7266, -24.7951, 0.83", "-49.1942, -3.14535, -28.0854, 0.55", "-51.2627, -3.40564, -30.343, 0.28", "-53.3666, -3.61258, -32.7021, 0.55", "-55.4197, -3.59182, -34.7562, 0.55", "-55.9027, -3.53214, -35.2165, 0.55", "-56.6783, -3.43132, -35.9325, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999965882319475,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-4.5167, -3.02321, 11.1598, 1.66", "-5.45008, -3.95309, 12.1973, 1.39", "-7.48177, -5.97715, 14.4555, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999965882319475
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-2.0967, -5.94921, 15.1098, 1.39", "-3.20143, -9.22455, 14.5449, 1.39", "-4.35819, -12.6541, 13.9533, 1.39", "-5.15695, -15.0223, 13.5448, 1.39" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999965882319475
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "2.8933, -8.40021, 6.44987, 4.16", "3.21296, -8.7323, 5.70132, 4.16", "4.38251, -9.9473, 2.96258, 3.05" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999965882319475
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "0.0933001, -4.0872, 3.93987, 1.11", "0.957568, -3.8903, 4.26467, 1.11", "1.70645, -3.41551, 5.10679, 1.11", "2.89148, -2.66419, 6.43937, 1.11", "3.85587, -2.05277, 7.52384, 0.83", "5.39267, -1.07844, 9.25199, 0.83", "6.83998, -0.160838, 10.8795, 1.11", "8.08651, 0.94724, 13.0396, 1.11", "11.9249, 3.84109, 17.5262, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999965882319475
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.8933, 4.6243, 1.41987, 1.39", "3.91117, 6.52535, 1.41987, 1.39" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999965882319475
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.65053, -8.97609, 2.67222, 0.813732", "5.90337, -23.3606, 2.67222, 0.813732", "10.1562, -37.7451, 2.67222, 0.813732" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-15.0559, 81.7317, 44.7786, 0.55", "-16.8056, 88.824, 47.7149, 0.55", "-17.6891, 96.4586, 49.1451, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-15.0559, 81.7317, 44.7786, 0.55", "-15.2534, 89.2781, 48.817, 0.55", "-14.7091, 95.8808, 54.3646, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-11.7953, 5.34641, -12.1904, 0.83", "-13.7766, 7.68585, -13.4564, 0.83", "-16.5613, 10.9737, -15.2356, 1.11" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-11.7953, 5.34641, -12.1904, 1.11", "-15.5925, 7.55038, -13.1913, 1.11", "-18.3803, 9.16842, -13.9261, 1.11", "-19.8698, 10.033, -14.3187, 1.11", "-23.4913, 12.1349, -15.2732, 0.83", "-25.6971, 13.4152, -15.8546, 0.83", "-27.7777, 14.6228, -16.403, 1.11" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-56.6783, -3.43132, -35.9325, 0.28", "-56.4735, -4.71111, -38.8986, 0.28", "-56.429, -4.98923, -39.5432, 0.83" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-56.6783, -3.43132, -35.9325, 0.28", "-58.0832, -4.95887, -39.1606, 0.28", "-58.867, -5.76849, -40.7741, 1.11", "-59.6889, -6.54841, -42.2564, 1.11", "-60.3183, -7.09784, -43.2747, 0.28", "-60.8274, -7.42426, -43.9772, 1.39", "-63.2102, -8.68145, -47.1365, 0.28", "-64.39, -9.16009, -48.4644, 1.11", "-65.2064, -9.42594, -49.277, 0.55", "-66.3577, -9.74678, -50.3779, 0.28", "-71.7008, -10.9899, -55.3854, 0.28", "-73.5936, -11.3624, -57.0881, 0.83", "-75.4648, -11.6308, -58.6851, 0.28", "-76.4757, -11.7387, -59.5513, 0.83" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-7.48177, -5.97715, 14.4555, 0.83", "-8.19592, -7.63951, 17.0329, 0.83", "-8.63053, -8.56732, 18.2182, 0.55", "-9.39531, -9.74973, 19.9429, 0.55", "-10.2981, -10.7405, 21.7284, 0.55", "-11.7123, -11.8632, 24.2253, 0.55", "-12.7087, -12.6543, 25.9846, 0.55", "-13.8853, -13.3049, 27.6197, 0.55", "-15.7957, -13.9203, 30.1876, 0.55", "-16.9114, -13.9411, 31.3543, 0.55", "-18.164, -13.6962, 32.5186, 0.55", "-22.817, -16.4414, 39.6897, 0.55", "-28.457, -20.599, 45.2179, 0.55", "-33.0872, -24.5388, 51.7611, 0.55", "-39.5069, -26.9052, 57.5977, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-7.48177, -5.97715, 14.4555, 0.83", "-8.43979, -6.67596, 13.3573, 0.83", "-9.69106, -7.58867, 11.9229, 0.83", "-12.167, -9.3947, 9.08458, 0.83", "-12.6648, -9.75777, 8.514, 0.83" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-5.15695, -15.0223, 13.5448, 0.83", "-7.03839, -18.0445, 13.5248, 0.83", "-8.25446, -19.6068, 13.5085, 0.83", "-10.3565, -22.195, 13.4505, 0.83", "-12.8687, -25.2882, 13.3812, 0.83", "-13.7531, -26.377, 13.3568, 0.83", "-16.0892, -29.2534, 13.2923, 1.11", "-19.4511, -33.0563, 13.1884, 0.83", "-20.8453, -34.4932, 13.1407, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-5.15695, -15.0223, 13.5448, 0.83", "-4.86163, -17.4932, 14.6643, 0.83", "-4.73908, -19.2365, 15.3223, 0.83", "-4.59634, -20.5286, 15.7123, 0.83", "-4.15691, -24.3013, 16.6995, 0.83", "-3.88634, -26.1145, 17.1227, 0.83", "-3.49022, -28.1904, 17.5633, 0.83", "-2.7641, -31.758, 18.2307, 0.83", "-2.04719, -35.1899, 18.8263, 0.83", "-1.90557, -36.4811, 19.054, 0.83", "-1.8149, -38.6989, 19.4792, 0.83", "-1.82497, -40.3211, 19.843, 0.83", "-1.9153, -42.1757, 20.2907, 0.83", "-2.25023, -46.4506, 21.374, 0.83", "-3.00515, -52.9506, 22.9831, 0.55", "-3.26672, -55.7408, 23.6075, 0.55", "-3.4855, -58.2012, 24.0823, 0.55", "-3.67912, -60.9969, 24.4833, 0.55", "-3.72945, -63.9773, 24.7326, 0.55", "-3.55016, -66.3449, 24.7212, 0.55", "-2.95165, -69.6597, 24.5548, 0.55", "-2.38599, -72.7499, 24.2944, 0.55", "-2.02056, -74.6494, 24.1401, 0.28", "-1.7837, -75.8038, 24.0405, 0.83", "-1.517, -76.9324, 23.939, 0.55", "-0.631775, -80.1783, 23.6725, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "4.38251, -9.9473, 2.96258, 2.49", "5.83995, -12.3341, 1.94322, 2.49" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "4.38251, -9.9473, 2.96258, 1.39", "7.30551, -9.48594, -0.56767, 1.39", "8.73425, -9.26043, -2.29323, 1.11", "10.3517, -9.00513, -4.24675, 1.66" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "11.9249, 3.84109, 17.5262, 0.55", "16.5579, 8.03481, 24.9396, 0.55", "21.5963, 11.4488, 32.5321, 0.55", "27.281, 16.5091, 38.5144, 0.55", "33.0473, 20.3394, 45.3482, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "11.9249, 3.84109, 17.5262, 0.55", "19.8821, 7.22355, 23.1668, 0.55", "28.544, 10.9363, 27.3791, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "3.91117, 6.52535, 1.41987, 1.11", "5.47181, 9.47933, 2.37165, 1.11", "6.81233, 12.0353, 2.77686, 1.11", "8.79035, 15.901, 2.60577, 1.11", "10.1301, 18.6267, 2.31254, 1.11", "11.4627, 21.3658, 1.85337, 0.83", "13.3136, 24.8727, 1.00882, 0.83", "16.3915, 30.1124, -1.07383, 0.83", "19.0119, 34.2678, -3.52489, 0.83", "20.0225, 35.796, -4.66969, 0.83", "21.7704, 38.4035, -6.98846, 0.55", "23.627, 41.0994, -9.70023, 0.83", "25.6928, 44.0639, -12.8573, 0.55", "27.2131, 46.3098, -15.3517, 0.55", "28.0164, 47.5608, -16.7901, 0.55", "29.5686, 50.0636, -19.8473, 0.28", "29.9088, 50.7034, -20.6307, 0.83", "30.3095, 51.7397, -21.8016, 0.83", "31.9134, 56.8345, -27.4046, 0.55", "32.2428, 57.9833, -28.8356, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "3.91117, 6.52535, 1.41987, 0.55", "6.80667, 8.20801, -0.344023, 0.55", "7.88343, 8.80002, -1.21001, 0.55", "9.85537, 9.86576, -2.95905, 0.83", "11.1337, 10.6061, -4.31541, 0.83", "14.2442, 12.6546, -7.91766, 0.83", "14.8809, 13.1069, -8.70335, 0.83", "17.1139, 14.7822, -11.8935, 0.83", "19.9545, 17.0596, -16.3666, 0.83", "22.3539, 19.3092, -20.6595, 0.83", "24.0565, 21.146, -23.9419, 0.83", "24.7269, 21.9725, -25.2874, 0.83", "25.8878, 23.6062, -27.6318, 0.83", "26.1634, 24.0889, -28.1897, 0.83", "26.6305, 25.0616, -29.136, 0.28", "27.1568, 26.1513, -30.0032, 0.83", "28.5482, 28.9143, -31.9645, 0.83", "29.7836, 30.8486, -33.095, 0.83", "31.7679, 33.4003, -34.5403, 0.55", "32.3613, 34.062, -34.9372, 0.83", "34.0424, 35.7503, -36.1642, 0.55", "34.7751, 36.444, -36.7257, 0.83", "38.1561, 39.5757, -39.6106, 0.28", "39.9196, 41.2463, -41.3454, 0.83", "40.3113, 41.6526, -41.9001, 0.83", "42.7146, 44.2257, -46.0579, 0.28", "43.0183, 44.5702, -46.7014, 0.55", "44.0126, 45.8503, -49.2847, 0.28", "44.3338, 46.3588, -50.3996, 1.11", "46.2499, 49.6473, -57.2383, 0.55", "46.8044, 50.6013, -59.1467, 0.28", "47.1903, 51.238, -60.4335, 0.55", "47.5571, 51.8273, -61.6445, 0.28", "48.158, 52.7539, -63.4764, 0.55", "48.9147, 53.9397, -65.6911, 0.28", "49.5177, 55.1071, -66.82, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "10.1562, -37.7451, 2.67222, 0.28", "14.409, -52.1295, 2.67222, 0.28", "18.6619, -66.514, 2.67222, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-16.5613, 10.9737, -15.2356, 0.55", "-19.6316, 12.8245, -18.3645, 0.55", "-21.6906, 14.2628, -19.951, 1.11", "-24.299, 16.1818, -21.9098, 0.83", "-25.9347, 17.3849, -23.072, 0.83", "-28.1005, 18.9714, -24.6314, 0.83", "-30.8214, 21.0688, -26.6102, 0.83", "-32.5823, 22.4283, -27.7591, 0.55", "-34.5703, 24.1696, -28.9934, 0.28", "-35.2978, 24.8882, -29.4416, 0.83", "-36.7383, 26.4131, -30.5403, 0.83", "-37.8434, 27.6555, -31.5978, 0.55", "-39.0906, 29.0593, -33.1507, 0.83", "-40.333, 30.4872, -34.7776, 0.28", "-41.0736, 31.3844, -35.8126, 0.28", "-41.7403, 32.2152, -36.8436, 0.55", "-42.137, 32.7099, -37.4983, 0.83", "-43.6258, 34.4551, -40.155, 0.28", "-44.1436, 35.0719, -41.1171, 0.83", "-45.3295, 36.542, -43.4065, 0.55", "-45.7255, 37.0409, -44.1849, 0.28", "-46.4754, 38.0911, -45.7498, 1.11", "-47.3669, 39.3733, -47.5275, 0.28", "-48.1189, 40.3791, -48.79, 0.55", "-48.6533, 40.9877, -49.5774, 0.28", "-49.1393, 41.518, -50.2134, 0.83", "-49.9169, 42.2476, -51.2748, 0.28", "-50.7586, 42.9354, -52.3866, 0.55", "-51.9115, 43.8107, -53.8197, 0.83", "-54.6512, 45.9303, -57.4037, 0.28", "-55.2985, 46.4482, -58.2629, 0.83", "-57.9023, 48.7569, -61.7672, 0.28", "-58.238, 49.0917, -62.2358, 0.55", "-58.8568, 49.9013, -63.2078, 1.11", "-60.1864, 52.2069, -65.5907, 0.28", "-60.3942, 52.7071, -66.0215, 0.55", "-60.849, 54.0111, -67.0118, 0.28", "-60.9586, 54.402, -67.2844, 0.55", "-61.6456, 56.7919, -69.1087, 0.28", "-62.1555, 58.1951, -70.4099, 0.83", "-62.5566, 59.0557, -71.2758, 0.28", "-62.7266, 59.3599, -71.618, 0.83", "-64.4015, 62.0523, -74.7642, 0.28", "-64.6432, 62.4164, -75.2078, 0.83", "-66.0529, 64.278, -77.6172, 0.28", "-66.482, 64.8221, -78.3009, 0.55", "-68.0362, 66.6458, -80.722, 0.28", "-68.8628, 67.5552, -81.9299, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-16.5613, 10.9737, -15.2356, 0.83", "-18.7021, 13.1393, -14.1678, 0.83", "-20.076, 14.6043, -13.5783, 0.55", "-24.2715, 18.9704, -12.1998, 0.55", "-28.9604, 23.8205, -11.0946, 0.55", "-31.622, 26.4353, -10.6992, 0.55", "-33.4561, 28.1442, -10.5768, 0.55", "-36.96, 31.1655, -10.6651, 0.55", "-39.0875, 32.7568, -11.0117, 0.55", "-41.0827, 34.0364, -11.5369, 0.55", "-43.2623, 35.1528, -12.4328, 0.55", "-46.8077, 36.6303, -13.9847, 0.55", "-50.5347, 37.9134, -15.6413, 0.55", "-51.855, 38.2683, -16.1961, 0.28", "-53.9657, 38.8223, -17.0148, 1.39", "-58.6719, 39.9689, -18.6243, 0.28", "-59.8645, 40.3083, -19.021, 0.83", "-61.3557, 40.748, -19.5128, 0.28", "-62.9887, 41.381, -20.0246, 0.55", "-63.484, 41.6106, -20.1705, 0.28", "-65.67, 42.7873, -20.8058, 0.83", "-69.2417, 44.9385, -21.5724, 0.28", "-70.292, 45.5901, -21.8274, 0.55", "-72.05, 46.7109, -22.2824, 0.28", "-73.3354, 47.4809, -22.6012, 0.55", "-75.7599, 48.8289, -23.1416, 0.28", "-76.455, 49.1344, -23.2247, 0.83", "-79.9488, 50.2809, -23.301, 0.28", "-80.6251, 50.4779, -23.3061, 0.55", "-82.74, 50.9763, -23.2676, 0.28", "-84.405, 51.3049, -23.1824, 0.55", "-90.9874, 52.2788, -22.4695, 0.28", "-92.0133, 52.3918, -22.321, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-27.7777, 14.6228, -16.403, 0.55", "-29.9603, 15.4032, -19.0056, 0.55", "-31.9817, 16.1632, -21.2244, 0.55", "-33.7022, 16.8386, -22.8728, 0.83", "-34.9729, 17.4313, -23.8701, 0.83", "-36.6543, 18.2475, -25.0453, 0.28", "-37.2433, 18.5222, -25.4261, 0.28", "-38.9812, 19.3163, -26.3279, 0.83", "-40.612, 20.0141, -27.0467, 0.55", "-44.047, 21.3059, -28.3892, 0.55", "-46.4165, 22.0698, -29.3099, 0.83", "-48.3344, 22.5841, -30.1994, 0.28", "-48.7892, 22.6834, -30.4458, 0.55", "-51.3374, 23.1421, -31.8181, 0.28", "-52.4777, 23.2965, -32.4738, 0.55", "-54.3861, 23.5766, -33.6176, 0.55", "-56.8922, 24.1052, -35.0433, 0.28", "-57.6211, 24.3044, -35.4399, 0.28", "-60.8804, 25.3647, -37.1295, 0.55", "-63.9532, 26.5424, -38.5003, 0.83", "-67.9131, 28.2036, -39.9692, 0.28", "-68.7689, 28.5824, -40.2249, 0.55", "-70.7878, 29.5171, -40.7057, 0.55", "-71.7156, 29.9626, -40.9206, 0.55", "-74.4246, 31.2634, -41.5599, 0.83", "-76.5609, 32.353, -41.8594, 0.28", "-77.1479, 32.6549, -41.9034, 0.55", "-79.236, 33.767, -42.0554, 0.28", "-80.2855, 34.303, -42.1788, 0.55", "-81.4742, 34.8643, -42.3696, 0.28", "-82.2375, 35.2203, -42.5322, 0.83", "-83.5203, 35.864, -42.8303, 0.28", "-84.7404, 36.5363, -43.1371, 0.83", "-87.8188, 38.6223, -44.0207, 0.28", "-88.8754, 39.4918, -44.4287, 0.28", "-89.5586, 40.1268, -44.7785, 0.28", "-90.7882, 41.3557, -45.6427, 0.83", "-91.8755, 42.532, -46.5784, 0.28", "-93.4733, 44.3953, -48.224, 0.55", "-95.6553, 47.1503, -50.7933, 0.28", "-96.6407, 48.4473, -52.011, 0.83", "-98.2097, 50.4986, -53.9584, 0.28", "-98.726, 51.1614, -54.5622, 0.55", "-99.8577, 52.6343, -55.7847, 0.28", "-100.123, 52.9731, -56.0527, 0.83", "-102.361, 55.9161, -57.8524, 0.28", "-102.822, 56.554, -58.1354, 0.55", "-104.339, 58.829, -58.8003, 0.55", "-104.616, 59.2561, -58.9046, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-27.7777, 14.6228, -16.403, 0.55", "-30.6157, 14.1739, -15.5283, 0.55", "-36.1876, 13.3379, -14.6031, 0.83", "-41.5785, 12.5755, -14.1012, 0.83", "-44.6026, 12.1626, -14.0669, 0.55", "-46.2277, 11.9455, -14.1243, 0.55", "-51.095, 11.2439, -14.5891, 0.55", "-57.3244, 10.4797, -15.8114, 0.28", "-58.3997, 10.3245, -16.2223, 0.55", "-61.169, 9.85339, -17.663, 0.28", "-62.2608, 9.65819, -18.2599, 0.83", "-65.1786, 9.0245, -19.8464, 0.55", "-66.4309, 8.66922, -20.3994, 0.55", "-70.494, 7.50355, -21.2695, 0.28", "-72.1082, 6.98276, -21.41, 0.83", "-74.7336, 6.03585, -21.2179, 0.28", "-75.6696, 5.69465, -21.0039, 0.83", "-79.8313, 4.19186, -19.2789, 0.28", "-80.8335, 3.75767, -18.8109, 0.83", "-81.82, 3.28745, -18.2572, 0.28", "-82.2549, 3.05701, -17.9998, 0.83", "-84.3919, 1.8523, -16.7347, 0.28", "-85.5161, 1.2008, -16.2151, 0.55", "-88.7114, -0.685364, -15.9262, 0.28", "-88.9585, -0.830298, -15.9247, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-12.6648, -9.75777, 8.514, 0.83", "-13.3232, -10.0839, 9.0267, 0.83", "-15.2196, -11.1041, 10.2179, 0.55", "-17.7609, -12.2296, 11.8106, 0.55", "-19.1123, -12.7592, 12.6752, 0.55", "-19.8108, -13.0032, 13.1612, 0.55", "-20.8181, -13.3008, 13.9055, 0.83", "-24.2777, -14.1536, 16.5591, 0.55", "-27.2932, -14.7972, 18.8355, 0.55", "-29.8567, -15.2255, 20.6083, 0.55", "-31.5034, -15.4314, 21.7665, 0.55", "-33.8706, -15.6363, 23.4125, 0.55", "-35.322, -15.697, 24.3754, 0.55", "-37.25, -15.8117, 25.5034, 0.55", "-39.0576, -16.0981, 26.3381, 0.55", "-40.1514, -16.3339, 26.6913, 0.28", "-40.8219, -16.5169, 26.8578, 0.55", "-42.2846, -16.9104, 27.1432, 0.55", "-45.9361, -17.9048, 27.8993, 0.55", "-47.9039, -18.4557, 28.3966, 0.55", "-49.9786, -19.1046, 28.8769, 0.28", "-50.9854, -19.4338, 29.0761, 0.55", "-53.098, -20.0735, 29.4714, 0.55", "-58.6523, -22.4827, 33.1918, 0.55", "-63.5268, -24.4137, 38.0256, 0.55", "-67.7426, -26.8245, 43.238, 0.55", "-72.1012, -29.6407, 48.0958, 0.55", "-77.5909, -31.4077, 52.287, 0.55", "-83.9495, -31.9966, 55.4911, 0.55", "-90.7616, -32.0831, 57.6514, 0.55", "-97.3401, -31.8014, 60.4409, 0.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-12.6648, -9.75777, 8.514, 0.83", "-15.7334, -12.2125, 5.58213, 0.83", "-18.4994, -13.9447, 3.15052, 0.83", "-21.8295, -15.7529, 0.229048, 0.83", "-26.5562, -17.9502, -3.707, 0.83", "-30.1777, -19.6766, -7.00592, 0.83", "-32.3551, -20.7701, -9.07547, 0.83", "-36.0956, -22.7451, -12.9043, 0.83", "-39.4364, -24.4069, -16.2788, 0.83", "-45.0916, -27.1155, -21.6184, 0.83", "-51.8689, -30.1877, -27.3471, 0.28", "-53.4924, -30.975, -28.5998, 0.83", "-54.9543, -31.7588, -29.6828, 0.83", "-56.6533, -32.7537, -30.856, 0.55", "-58.2031, -33.5765, -31.6758, 0.28", "-59.8645, -34.3064, -32.2337, 0.55", "-60.9053, -34.6211, -32.4087, 0.28", "-62.8029, -35.1434, -32.7753, 0.83", "-68.5556, -36.7039, -34.1287, 0.28", "-69.8555, -37.0238, -34.5765, 0.55", "-71.2845, -37.3636, -35.1551, 0.28", "-71.9671, -37.5294, -35.5067, 0.55", "-73.7028, -37.9495, -36.5359, 0.28", "-74.2804, -38.0973, -36.9656, 0.83", "-77.2329, -38.9849, -39.6866, 0.55", "-78.5245, -39.4016, -41.029, 0.83", "-80.901, -40.1751, -43.7952, 0.28", "-81.3752, -40.3276, -44.3978, 0.55", "-83.4755, -40.9757, -47.3499, 0.28", "-84.5381, -41.3761, -48.927, 0.83" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-20.8453, -34.4932, 13.1407, 0.55", "-24.0394, -36.7251, 11.5865, 0.55", "-29.2786, -40.3352, 9.25461, 0.55", "-30.8547, -41.3995, 8.5997, 0.55", "-34.6965, -44.0487, 7.14203, 0.28", "-36.9709, -45.6289, 6.33522, 0.55", "-38.7269, -46.8727, 5.72379, 0.28", "-40.4743, -48.101, 5.19836, 0.28", "-41.2006, -48.6199, 5.04936, 0.55", "-43.8675, -50.5086, 4.68142, 0.28", "-44.3538, -50.898, 4.67178, 0.83", "-46.3758, -52.7509, 4.71505, 0.28", "-47.475, -53.8336, 4.77317, 0.55", "-48.9331, -55.3548, 4.87842, 0.28", "-50.3295, -56.8679, 5.01276, 0.55", "-52.2525, -58.9849, 5.28658, 0.55", "-52.4362, -59.198, 5.32085, 0.83", "-53.6402, -60.68, 5.65353, 0.28", "-53.8033, -60.8965, 5.68083, 0.83", "-62.095, -66.8079, 5.66742, 0.83", "-71.4476, -71.0092, 5.0399, 0.83", "-80.5453, -75.7275, 4.94853, 0.83", "-89.0174, -81.1854, 6.58848, 0.83", "-97.0158, -86.5139, 10.0581, 0.83", "-105.548, -89.6887, 14.8999, 0.83", "-113.74, -92.8108, 20.3298, 0.83", "-122.812, -94.7304, 24.9072, 0.83", "-132.138, -97.7408, 28.1289, 0.83" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-20.8453, -34.4932, 13.1407, 0.83", "-21.0005, -37.4058, 14.2423, 0.83", "-21.4028, -41.511, 15.9343, 0.83", "-21.4913, -43.599, 16.8133, 0.83", "-21.6761, -48.6227, 18.8491, 0.83", "-21.6921, -49.3131, 19.1139, 0.83", "-21.7615, -52.2698, 20.125, 0.83", "-21.9102, -55.466, 21.1507, 0.83", "-22.2165, -60.1528, 22.6894, 0.83", "-22.4231, -64.3087, 23.9654, 0.83", "-22.4742, -66.1416, 24.4253, 0.83", "-22.5745, -70.798, 25.5184, 0.83", "-22.651, -75.4953, 26.5801, 0.83", "-20.7881, -84.3618, 31.3508, 0.83", "-19.2917, -92.9579, 36.7594, 0.83", "-17.9223, -102.088, 41.1231, 0.83", "-14.5037, -110.998, 44.8159, 0.83", "-9.94236, -119.628, 47.9684, 0.83" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-0.631775, -80.1783, 23.6725, 0.28", "-1.68157, -81.9868, 23.4461, 0.28", "-1.88179, -82.3317, 23.4029, 0.83", "-2.94685, -84.1665, 23.1733, 0.28", "-6.2585, -91.047, 22.7976, 0.28", "-8.00662, -98.4366, 23.2052, 0.28", "-8.80662, -105.843, 24.766, 0.28", "-10.0408, -112.784, 27.7596, 0.28", "-9.89668, -120.2, 29.4941, 0.28", "-9.04746, -127.611, 31.0608, 0.28", "-9.82286, -135.16, 31.3093, 0.28" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-0.631775, -80.1783, 23.6725, 0.55", "-0.0969672, -82.1346, 23.4663, 0.55", "0.229544, -83.3289, 23.3403, 0.55", "0.524539, -84.4079, 23.2266, 0.28", "3.09188, -91.5205, 21.239, 0.28", "4.70125, -99.0797, 20.4378, 0.28", "5.6584, -106.545, 18.4985, 0.28", "7.8173, -113.834, 16.7561, 0.28" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "5.83995, -12.3341, 1.94322, 1.94", "9.89363, -16.1006, 1.2575, 1.94" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "5.83995, -12.3341, 1.94322, 1.11", "6.30842, -15.9859, -7.67154, 1.11", "6.34938, -16.3121, -8.75106, 1.11", "6.73035, -18.0, -14.3914, 1.11", "6.98149, -18.6375, -16.6286, 1.11", "7.44438, -19.6774, -20.4502, 1.11", "7.99885, -20.9122, -25.0482, 1.11", "8.54038, -22.2979, -30.5616, 1.11", "8.75214, -22.8236, -33.2663, 0.83", "9.00836, -23.4869, -37.8788, 0.83", "9.07659, -23.7785, -39.6904, 0.55", "9.07841, -23.9116, -40.4725, 0.83", "8.91392, -24.6108, -44.2799, 1.39", "8.36869, -25.4831, -49.1247, 1.11", "8.00134, -25.9939, -52.1251, 0.55", "7.79415, -26.2863, -53.7376, 0.83", "7.25005, -27.4045, -59.6307, 0.55", "7.11227, -27.8785, -61.9339, 0.28", "7.11709, -28.0925, -62.9431, 0.55", "7.17438, -29.7051, -70.3869, 0.28", "7.20016, -29.8899, -71.2621, 0.55", "7.32494, -30.3081, -73.2499, 0.28", "7.56717, -30.9075, -75.6309, 1.39", "8.53557, -32.7572, -83.9435, 0.28" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "10.3517, -9.00513, -4.24675, 1.11", "9.94645, -8.89743, -5.61235, 1.11", "9.6569, -8.77853, -6.59467, 0.83", "9.41452, -8.60987, -7.74593, 0.83", "8.82583, -8.13589, -11.0203, 0.83", "8.48339, -7.81102, -13.6397, 0.83", "8.40307, -7.71163, -14.4357, 0.83", "8.3148, -7.59408, -15.4911, 0.83", "7.86119, -6.84724, -20.8303, 0.83", "7.65532, -6.3867, -23.4612, 0.83", "7.47171, -5.91878, -25.4931, 0.83", "7.26689, -5.5578, -26.9592, 0.28", "7.08365, -5.312, -27.9189, 1.39", "6.52504, -4.65381, -30.2326, 0.55", "5.61398, -3.68388, -33.2517, 0.55", "4.94207, -3.01427, -35.2108, 1.11", "3.12098, -1.37486, -39.9071, 0.55", "2.63452, -0.984475, -41.1274, 0.55", "1.93419, -0.480191, -42.9368, 1.11" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "10.3517, -9.00513, -4.24675, 1.11", "12.7939, -9.74182, -6.14757, 1.11", "17.623, -10.6279, -9.32832, 1.11", "20.5201, -11.1924, -11.3072, 0.83", "22.15, -11.5631, -12.5706, 0.83", "24.2504, -12.0565, -14.671, 1.11", "26.6706, -12.603, -17.4848, 1.11", "29.5607, -13.1362, -21.0803, 1.11", "32.041, -13.5137, -24.3336, 0.83", "34.9799, -14.0192, -28.5964, 1.39", "39.228, -14.9838, -35.5547, 0.83", "42.1229, -15.9204, -40.9982, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "28.544, 10.9363, 27.3791, 0.55", "37.7387, 16.0809, 33.259, 0.55", "47.7506, 21.378, 37.4709, 0.55", "57.3998, 26.614, 42.501, 0.55", "67.5677, 29.8945, 48.2029, 0.55", "78.2819, 32.235, 53.3607, 0.55", "87.8169, 35.4265, 60.098, 0.55", "96.8028, 37.5656, 67.9286, 0.55", "106.009, 38.5872, 75.7424, 0.55", "114.427, 37.5795, 84.3981, 0.55", "124.414, 36.8531, 91.2028, 0.55", "134.039, 38.212, 98.4403, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "28.544, 10.9363, 27.3791, 0.55", "38.8571, 14.4799, 33.0997, 0.55", "48.8911, 18.9793, 38.6056, 0.55", "59.6986, 23.1349, 42.8009, 0.55", "70.0707, 28.2662, 46.961, 0.55", "79.2723, 35.4623, 50.5876, 0.55", "89.8067, 41.1832, 53.3255, 0.55", "100.653, 46.8302, 54.7216, 0.55", "112.352, 50.7118, 54.7437, 0.55", "124.398, 53.2647, 55.096, 0.55", "136.576, 54.6636, 56.1484, 0.55", "148.823, 54.406, 56.0299, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "9.89363, -16.1006, 1.2575, 0.83", "12.0125, -15.2453, 2.05222, 0.83", "17.7918, -12.2767, 4.09423, 0.83", "19.5077, -11.1972, 4.89081, 0.83", "21.8409, -9.57615, 6.17677, 0.83", "27.5759, -5.19887, 9.99204, 0.83", "30.3349, -3.07497, 11.9631, 0.83", "32.3394, -1.43235, 13.5259, 0.83", "36.208, 1.9425, 16.8102, 0.83", "39.6859, 4.7793, 19.6291, 0.55", "44.0796, 7.85645, 22.954, 0.55", "46.4376, 9.13594, 24.5744, 0.55", "49.2114, 10.2594, 26.2436, 0.55", "52.1834, 11.1344, 27.6615, 0.55", "56.2383, 12.1069, 29.1603, 0.55", "60.1421, 12.8172, 30.448, 0.55", "62.7771, 13.1625, 31.2216, 0.55", "66.7234, 13.5597, 32.416, 0.55", "70.6693, 13.9759, 33.7018, 0.55", "73.6464, 14.2766, 34.7735, 0.55", "76.922, 14.7292, 36.1601, 0.55", "78.8247, 15.0415, 36.9497, 0.55", "81.1975, 15.5146, 37.9245, 0.55", "85.4165, 16.6303, 39.5968, 0.55", "91.4751, 18.6274, 41.9801, 0.55", "93.9441, 19.5033, 42.8537, 0.55", "98.4965, 21.3291, 44.3577, 0.55", "100.988, 22.4404, 45.0807, 0.55", "105.674, 24.6644, 46.2503, 0.55", "108.405, 25.9637, 46.8439, 0.55", "112.591, 28.1076, 47.6715, 0.55", "114.332, 29.005, 47.9876, 0.55", "116.872, 30.4791, 48.5069, 0.55", "120.003, 32.1201, 49.0876, 0.55", "121.482, 32.8882, 49.3521, 0.55", "123.112, 33.6919, 49.6404, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "9.89363, -16.1006, 1.2575, 1.39", "11.9999, -19.3547, -0.0450869, 1.39", "13.6662, -21.9291, -1.07561, 1.39", "14.9801, -23.959, -1.88816, 1.11", "16.9792, -27.0475, -3.12444, 1.11" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "42.1229, -15.9204, -40.9982, 0.55", "41.6187, -13.0833, -48.1629, 0.55", "41.4626, -12.1473, -50.2543, 0.28", "41.4424, -12.0028, -50.5477, 0.83", "41.2953, -10.8839, -52.655, 0.28", "41.2339, -10.5026, -53.3885, 0.55", "41.0817, -9.61355, -55.0971, 0.28", "41.0098, -9.24465, -55.7352, 0.55", "40.7289, -8.02129, -58.058, 0.28", "40.675, -7.78825, -58.5145, 0.55", "40.1226, -5.53694, -63.0538, 0.28", "40.0987, -5.43133, -63.2627, 0.55", "39.776, -4.05731, -65.888, 0.28", "39.717, -3.80517, -66.3369, 0.83", "39.3951, -2.38153, -68.6208, 0.28", "39.3322, -2.05025, -69.103, 0.55", "38.6711, 1.82371, -73.9036, 0.28", "38.6367, 2.0316, -74.1498, 0.55", "38.4954, 2.8699, -75.2329, 0.28", "38.45, 3.15064, -75.6042, 0.55", "38.1901, 4.63945, -77.626, 0.28", "38.1157, 5.05355, -78.217, 0.55", "37.9015, 5.9986, -79.8116, 0.28", "37.2672, 8.88639, -85.3212, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "42.1229, -15.9204, -40.9982, 0.55", "43.4878, -16.2385, -43.5629, 0.55", "45.0986, -16.6153, -46.2725, 1.39", "45.3262, -16.6553, -46.6165, 1.39", "45.8533, -16.7282, -47.3614, 0.55", "47.4977, -16.8873, -49.5019, 0.55", "48.5327, -16.9613, -50.772, 0.55", "49.9528, -17.0071, -52.2192, 0.55", "50.9334, -17.0218, -53.085, 0.28", "51.2499, -17.0256, -53.3538, 0.55", "52.7146, -17.0188, -54.532, 0.28", "53.032, -17.0109, -54.7762, 0.55", "54.7845, -16.9838, -56.2291, 0.28", "55.4506, -16.9865, -56.8913, 0.28", "55.8303, -17.0047, -57.3478, 0.28", "56.0097, -17.0108, -57.5852, 0.55", "56.9544, -17.031, -59.0287, 0.55", "58.0107, -16.9868, -60.8136, 0.28", "58.3695, -16.935, -61.4884, 0.55", "58.9556, -16.8299, -62.6928, 0.28", "59.2579, -16.7579, -63.3298, 0.55", "59.6278, -16.6354, -64.0912, 0.55", "59.8683, -16.4855, -64.5562, 0.28", "59.9935, -16.3815, -64.799, 0.55", "60.3301, -16.0679, -65.5191, 0.28", "60.4356, -15.966, -65.7739, 0.55", "60.8195, -15.6044, -66.7048, 0.28", "61.1436, -15.3011, -67.4734, 0.55", "61.7459, -14.7711, -68.9149, 0.28", "61.7942, -14.7283, -69.0332, 0.55", "62.3701, -14.2193, -70.4263, 0.28", "62.6081, -14.0148, -71.0098, 0.28" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "123.112, 33.6919, 49.6404, 0.55", "126.604, 29.5911, 56.967, 0.55", "128.341, 27.551, 60.6118, 0.55", "131.456, 23.8928, 67.1475, 0.28", "135.82, 19.072, 75.9179, 0.28" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "123.112, 33.6919, 49.6404, 0.28", "122.021, 35.6429, 52.8018, 0.28", "121.118, 37.2577, 55.4182, 0.55", "120.084, 40.9165, 63.4821, 0.55", "118.326, 44.8164, 71.2945, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "16.9792, -27.0475, -3.12444, 0.83", "18.9047, -28.956, -4.55255, 0.83", "20.0705, -30.2303, -5.02754, 0.83", "20.9191, -31.3371, -5.14293, 0.83", "22.7253, -34.0841, -4.92095, 0.83", "24.9793, -37.7661, -4.32134, 0.83", "27.3784, -41.8755, -3.41309, 0.83", "29.8768, -46.6016, -1.93969, 0.83", "31.5253, -49.8342, -0.716479, 1.11", "32.8717, -52.6302, 0.538873, 0.83", "33.3203, -53.6515, 1.10954, 0.83", "34.0769, -55.8139, 2.49361, 0.83", "34.7222, -58.6485, 4.26423, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "16.9792, -27.0475, -3.12444, 0.83", "18.5851, -27.4002, -8.474, 0.83", "18.8506, -27.4586, -9.35868, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "34.7222, -58.6485, 4.26423, 0.83", "34.9215, -60.2515, 4.86756, 0.83", "35.0539, -61.4058, 5.20323, 0.83", "35.5534, -65.7586, 6.46905, 0.83", "36.0107, -69.7443, 7.62814, 0.83", "36.6216, -75.0687, 9.17654, 0.83", "37.1569, -79.7335, 10.5331, 0.55", "37.7236, -84.6128, 11.9809, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "34.7222, -58.6485, 4.26423, 0.55", "37.9334, -59.6466, 3.18143, 0.55", "43.0787, -61.5219, 1.25806, 0.55", "45.5819, -62.8424, 0.0534463, 0.55", "47.1329, -63.8243, -0.685117, 0.55", "49.4067, -65.3764, -1.59072, 0.55", "51.2509, -66.7061, -2.23825, 0.55", "55.0193, -70.152, -3.36596, 0.55", "59.3578, -75.0682, -4.15267, 0.55", "62.1463, -78.8603, -4.49545, 0.55", "65.7469, -84.4563, -4.75158, 0.55", "67.0904, -86.7928, -4.80439, 0.55", "71.4844, -95.2314, -4.68068, 0.55", "73.5451, -99.7458, -4.44027, 0.55", "74.7189, -102.622, -4.23578, 0.55", "75.5368, -105.185, -4.16722, 0.55", "76.221, -107.84, -4.31763, 0.28", "76.4362, -108.566, -4.42703, 0.55", "77.5618, -111.122, -5.273, 0.28", "78.1929, -112.122, -5.80475, 0.55", "78.9662, -113.167, -6.42287, 0.55", "81.0867, -115.952, -7.95541, 0.55", "82.1317, -117.16, -8.65891, 0.55", "83.8487, -118.96, -9.81098, 0.55", "86.7577, -121.778, -11.5611, 0.28", "87.3137, -122.268, -11.8849, 0.55", "90.587, -124.944, -13.6872, 0.55", "94.7222, -128.036, -15.8294, 0.55", "99.4337, -131.223, -18.171, 0.28", "101.52, -132.399, -19.1249, 0.55", "104.44, -133.801, -20.2287, 0.28", "105.17, -134.076, -20.4407, 0.55", "107.565, -134.647, -20.8618, 0.28", "108.374, -134.761, -20.8474, 0.55", "112.021, -135.138, -20.3376, 0.28", "114.287, -135.362, -19.9858, 0.55", "117.921, -135.717, -19.1607, 0.28", "119.471, -135.892, -18.7652, 0.28", "121.856, -136.266, -18.0283, 0.55", "127.087, -137.228, -16.2073, 0.28" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "18.8506, -27.4586, -9.35868, 0.83", "16.9801, -30.6209, -15.8427, 0.83", "16.4349, -31.6057, -17.8258, 0.83", "15.669, -33.2112, -21.3637, 0.55", "15.3936, -33.9017, -22.7892, 0.55", "15.0948, -34.8383, -24.6956, 0.55", "14.6419, -36.5673, -28.0772, 0.55", "14.3075, -38.5372, -31.1843, 0.55", "14.105, -41.4235, -35.2735, 0.28", "14.1686, -43.0719, -37.3354, 0.83", "14.336, -45.1548, -39.7019, 0.28", "14.4459, -46.059, -40.6797, 1.11", "15.0539, -50.8046, -45.4671, 0.28", "15.2703, -52.5164, -47.0867, 1.39", "16.1081, -59.5147, -53.3404, 0.28", "16.2342, -60.5598, -54.3054, 1.11", "16.5254, -63.2217, -56.7347, 0.28", "16.5883, -63.7497, -57.2599, 0.83" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "18.8506, -27.4586, -9.35868, 0.83", "22.3165, -28.5414, -15.2308, 0.83", "24.4725, -29.215, -18.8836, 0.83", "25.9685, -29.6824, -21.4182, 0.83" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "37.7236, -84.6128, 11.9809, 0.55", "36.9254, -87.3655, 5.99541, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "37.7236, -84.6128, 11.9809, 0.55", "38.4732, -87.0631, 11.7726, 0.55", "39.0729, -88.8021, 11.5901, 0.55", "39.74, -90.8633, 11.3651, 0.55", "40.2766, -92.5746, 11.1775, 0.55", "41.2791, -95.8748, 10.7226, 0.28", "41.5665, -96.8719, 10.5731, 0.55", "42.0626, -98.7544, 10.1767, 0.28", "42.4166, -100.057, 9.89513, 0.28", "42.5643, -100.589, 9.76181, 0.55", "43.3364, -103.396, 9.02982, 0.28", "43.4597, -103.942, 8.89807, 0.55", "43.8575, -105.824, 8.40107, 0.28", "43.9951, -106.506, 8.18417, 0.55", "44.6157, -109.19, 7.26089, 0.28", "44.7413, -109.708, 7.05307, 0.55", "45.0061, -110.627, 6.68127, 0.28", "45.1812, -111.148, 6.49875, 0.55", "46.2398, -113.623, 5.89974, 0.28", "46.6145, -114.338, 5.79313, 0.55", "47.7056, -116.06, 5.85857, 0.28", "49.5814, -118.826, 6.26785, 0.55", "50.8339, -120.569, 6.81576, 0.55", "52.8431, -123.384, 8.09593, 0.28", "53.4559, -124.225, 8.61258, 0.55", "55.3186, -126.832, 10.4258, 0.28", "55.598, -127.233, 10.752, 0.55", "57.046, -129.474, 12.6473, 0.28", "57.423, -130.152, 13.1845, 0.28", "57.5439, -130.427, 13.3947, 0.55", "58.0752, -131.809, 14.3092, 0.28", "58.0866, -131.841, 14.3229, 0.55", "58.9858, -134.209, 15.2139, 0.28", "59.3683, -135.262, 15.455, 0.55", "62.4869, -143.646, 17.7394, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "25.9685, -29.6824, -21.4182, 0.55", "24.3287, -32.223, -24.0025, 0.55", "23.5091, -33.6656, -25.6528, 0.55", "22.838, -35.0389, -27.1828, 0.28", "22.2433, -36.3139, -28.5702, 0.28", "22.0475, -36.8996, -29.3316, 0.83", "21.5923, -38.6288, -31.5871, 0.28", "21.49, -39.3935, -32.6019, 0.83", "21.2894, -41.1554, -34.8359, 0.83", "21.2263, -41.8985, -35.6836, 0.83", "20.9219, -46.1699, -40.1315, 0.28", "20.7481, -48.5983, -42.5845, 0.28", "20.6587, -49.7137, -43.6451, 0.55", "20.5809, -50.722, -44.5798, 0.55", "20.1402, -57.1587, -50.4226, 0.28", "20.0781, -57.9098, -51.0403, 0.83" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "25.9685, -29.6824, -21.4182, 0.83", "30.1328, -32.7988, -27.8977, 0.83", "31.7022, -34.5051, -30.177, 0.28", "32.4657, -35.6166, -31.1963, 0.83", "35.6308, -41.121, -35.019, 0.55", "36.5212, -42.7767, -35.9983, 0.55", "38.2028, -45.9318, -37.94, 0.28", "39.9064, -49.444, -39.855, 0.55", "41.6963, -53.0089, -41.8387, 0.55", "44.7091, -58.8265, -45.1392, 0.28", "45.8066, -60.9876, -46.2999, 1.11", "50.8445, -70.5357, -51.5745, 0.28", "52.0939, -72.8146, -52.8979, 1.11", "55.2928, -78.6706, -56.344, 0.28", "55.9886, -80.0476, -57.0627, 1.11", "59.2677, -87.4461, -60.2711, 0.28", "59.6116, -88.3771, -60.585, 0.83", "60.0964, -90.1095, -60.9847, 0.28", "60.4654, -92.182, -61.4244, 0.55", "61.2749, -101.754, -63.5284, 0.28", "61.2993, -103.08, -63.874, 0.55", "61.1297, -105.591, -64.7929, 0.28", "60.8295, -109.696, -66.5709, 1.11", "60.4206, -114.322, -68.9224, 0.28", "60.2904, -115.966, -69.9763, 0.83", "60.0972, -117.808, -71.5739, 0.28", "60.137, -121.308, -74.8325, 0.55", "60.6851, -123.769, -77.457, 0.28", "60.7848, -123.99, -77.7009, 0.83", "61.6505, -124.954, -79.0081, 0.28", "61.9185, -125.199, -79.3246, 0.55", "63.9659, -126.701, -81.2747, 0.28", "65.8028, -128.182, -82.5316, 1.11" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "36.9254, -87.3655, 5.99541, 0.55", "34.9138, -90.4779, 3.29968, 0.55", "33.2008, -93.4725, 0.547792, 0.55", "32.4392, -95.0454, -1.04191, 0.55", "31.5297, -97.6284, -3.64475, 0.55", "30.793, -100.263, -6.25957, 0.28", "30.5886, -101.314, -7.32447, 0.55", "30.4596, -102.928, -8.95887, 0.28", "30.5428, -104.753, -10.8579, 1.39", "30.7392, -107.663, -13.6628, 0.28", "30.7545, -108.45, -14.3369, 0.83", "30.6247, -111.531, -16.6907, 0.28", "30.5081, -112.593, -17.4102, 0.55", "30.2979, -113.73, -18.0427, 0.55", "29.2326, -118.009, -19.9281, 0.28", "28.6266, -119.951, -20.7148, 0.28", "28.039, -121.666, -21.3366, 0.55", "27.1014, -124.096, -22.0353, 0.28", "26.6984, -125.203, -22.3691, 0.55", "25.755, -128.151, -23.1139, 0.28" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "36.9254, -87.3655, 5.99541, 0.55", "35.1967, -86.7325, 5.9975, 0.55" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_55", "dend_48", "dend_45", "dend_40", "dend_33", "dend_8", "dend_3", "dend_0", "dend_57", "dend_56", "dend_52", "dend_49", "dend_47", "dend_46", "dend_44", "dend_41", "dend_37", "dend_34", "dend_14", "dend_9", "dend_7", "dend_4", "dend_2", "dend_1", "dend_54", "dend_53", "dend_51", "dend_50", "dend_43", "dend_42", "dend_39", "dend_38", "dend_36", "dend_35", "dend_16", "dend_15", "dend_13", "dend_10", "dend_6", "dend_5", "dend_30", "dend_17", "dend_12", "dend_11", "dend_32", "dend_31", "dend_23", "dend_18", "dend_25", "dend_24", "dend_22", "dend_19", "dend_27", "dend_26", "dend_21", "dend_20", "dend_29", "dend_28" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_55", "dend_48", "dend_45", "dend_40", "dend_33", "dend_8", "dend_3", "dend_0", "dend_57", "dend_56", "dend_52", "dend_49", "dend_47", "dend_46", "dend_44", "dend_41", "dend_37", "dend_34", "dend_14", "dend_9", "dend_7", "dend_4", "dend_2", "dend_1", "dend_54", "dend_53", "dend_51", "dend_50", "dend_43", "dend_42", "dend_39", "dend_38", "dend_36", "dend_35", "dend_16", "dend_15", "dend_13", "dend_10", "dend_6", "dend_5", "dend_30", "dend_17", "dend_12", "dend_11", "dend_32", "dend_31", "dend_23", "dend_18", "dend_25", "dend_24", "dend_22", "dend_19", "dend_27", "dend_26", "dend_21", "dend_20", "dend_29", "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_40", "dend_40", "dend_33", "dend_33", "dend_33", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_0", "axon_0", "axon_0", "dend_57", "dend_57", "dend_56", "dend_56", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_14", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L23_NBC_9004ab9cec_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_55, id: dend_55, parent: soma_0
create dend_55
public dend_55
// Section: dend_48, id: dend_48, parent: soma_0
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: soma_0
create dend_45
public dend_45
// Section: dend_40, id: dend_40, parent: soma_0
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: soma_0
create dend_33
public dend_33
// Section: dend_8, id: dend_8, parent: soma_0
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_44, id: dend_44, parent: dend_40
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_14, id: dend_14, parent: dend_8
create dend_14
public dend_14
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_30, id: dend_30, parent: dend_16
create dend_30
public dend_30
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_18
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_55, dend_48, dend_45, dend_40, dend_33, dend_8, dend_3, dend_0, dend_57, dend_56, dend_52, dend_49, dend_47, dend_46, dend_44, dend_41, dend_37, dend_34, dend_14, dend_9, dend_7, dend_4, dend_2, dend_1, dend_54, dend_53, dend_51, dend_50, dend_43, dend_42, dend_39, dend_38, dend_36, dend_35, dend_16, dend_15, dend_13, dend_10, dend_6, dend_5, dend_30, dend_17, dend_12, dend_11, dend_32, dend_31, dend_23, dend_18, dend_25, dend_24, dend_22, dend_19, dend_27, dend_26, dend_21, dend_20, dend_29, dend_28]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_55, dend_48, dend_45, dend_40, dend_33, dend_8, dend_3, dend_0, dend_57, dend_56, dend_52, dend_49, dend_47, dend_46, dend_44, dend_41, dend_37, dend_34, dend_14, dend_9, dend_7, dend_4, dend_2, dend_1, dend_54, dend_53, dend_51, dend_50, dend_43, dend_42, dend_39, dend_38, dend_36, dend_35, dend_16, dend_15, dend_13, dend_10, dend_6, dend_5, dend_30, dend_17, dend_12, dend_11, dend_32, dend_31, dend_23, dend_18, dend_25, dend_24, dend_22, dend_19, dend_27, dend_26, dend_21, dend_20, dend_29, dend_28]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_48
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_33, dend_33, dend_33, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, axon_0, axon_0, dend_57, dend_57, dend_56, dend_56, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_14, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_55(0), soma_0(0.49999965882319475)
    connect dend_48(0), soma_0(0.49999965882319475)
    connect dend_45(0), soma_0(0.49999965882319475)
    connect dend_40(0), soma_0(0.49999965882319475)
    connect dend_33(0), soma_0(0.49999965882319475)
    connect dend_8(0), soma_0(0.49999965882319475)
    connect dend_3(0), soma_0(0.49999965882319475)
    connect dend_0(0), soma_0(0.49999965882319475)
    connect axon_0(0), soma_0(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_44(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_14(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_30(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.89093, 6.3846, -1.48625, 2.82016 ) }
    soma_0 { pt3dadd( -2.66386, 5.61657, -1.27833, 4.98681 ) }
    soma_0 { pt3dadd( -2.43678, 4.84853, -1.07041, 7.51044 ) }
    soma_0 { pt3dadd( -2.20971, 4.0805, -0.862483, 8.92538 ) }
    soma_0 { pt3dadd( -1.98264, 3.31246, -0.65456, 10.0669 ) }
    soma_0 { pt3dadd( -1.75557, 2.54443, -0.446636, 10.3676 ) }
    soma_0 { pt3dadd( -1.52849, 1.7764, -0.238713, 10.6171 ) }
    soma_0 { pt3dadd( -1.30142, 1.00836, -0.0307891, 10.1846 ) }
    soma_0 { pt3dadd( -1.07435, 0.240325, 0.177134, 9.79445 ) }
    soma_0 { pt3dadd( -0.847273, -0.52771, 0.385058, 9.58423 ) }
    soma_0 { pt3dadd( -0.6202, -1.29574, 0.592981, 9.374 ) }
    soma_0 { pt3dadd( -0.393128, -2.06378, 0.800905, 9.16378 ) }
    soma_0 { pt3dadd( -0.166055, -2.83181, 1.00883, 8.95369 ) }
    soma_0 { pt3dadd( 0.0610184, -3.59985, 1.21675, 8.74371 ) }
    soma_0 { pt3dadd( 0.288091, -4.36788, 1.42468, 8.44292 ) }
    soma_0 { pt3dadd( 0.515164, -5.13592, 1.6326, 7.88171 ) }
    soma_0 { pt3dadd( 0.742237, -5.90395, 1.84052, 7.32051 ) }
    soma_0 { pt3dadd( 0.96931, -6.67199, 2.04845, 6.7381 ) }
    soma_0 { pt3dadd( 1.19638, -7.44002, 2.25637, 5.93312 ) }
    soma_0 { pt3dadd( 1.42346, -8.20806, 2.46429, 5.04519 ) }
    soma_0 { pt3dadd( 1.65053, -8.97609, 2.67222, 2.76105 ) }
    // Section: dend_55, id: dend_55, parent: soma_0 (entry count 21/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -2.9567, 3.65529, 8.71987, 1.11 ) }
    dend_55 { pt3dadd( -3.96629, 6.29105, 8.67914, 0.83 ) }
    dend_55 { pt3dadd( -4.39064, 7.82397, 8.83991, 0.83 ) }
    dend_55 { pt3dadd( -5.44291, 12.2764, 9.55917, 0.83 ) }
    dend_55 { pt3dadd( -5.80815, 14.8234, 10.2263, 0.83 ) }
    dend_55 { pt3dadd( -6.0536, 16.9837, 10.9022, 1.11 ) }
    dend_55 { pt3dadd( -6.10213, 19.8336, 12.0539, 0.83 ) }
    dend_55 { pt3dadd( -5.78329, 23.3346, 13.8984, 0.83 ) }
    dend_55 { pt3dadd( -5.61641, 24.5366, 14.6405, 0.83 ) }
    dend_55 { pt3dadd( -5.00261, 27.9671, 17.0673, 0.55 ) }
    dend_55 { pt3dadd( -4.2327, 32.2576, 20.5161, 0.55 ) }
    dend_55 { pt3dadd( -3.54482, 36.5367, 24.1415, 0.55 ) }
    dend_55 { pt3dadd( -3.11839, 39.7166, 26.916, 0.55 ) }
    dend_55 { pt3dadd( -2.83353, 41.6453, 28.5529, 0.28 ) }
    dend_55 { pt3dadd( -2.59722, 43.2712, 29.9877, 0.55 ) }
    dend_55 { pt3dadd( -2.44377, 45.4754, 31.9584, 0.55 ) }
    dend_55 { pt3dadd( -3.76817, 55.2636, 34.3754, 0.55 ) }
    dend_55 { pt3dadd( -6.59226, 64.7686, 36.7573, 0.55 ) }
    dend_55 { pt3dadd( -10.6401, 73.3623, 40.6993, 0.55 ) }
    dend_55 { pt3dadd( -15.0559, 81.7317, 44.7786, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: soma_0 (entry count 41/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -5.4967, 3.41779, -7.38013, 1.66 ) }
    dend_48 { pt3dadd( -7.33835, 3.9817, -8.7866, 1.66 ) }
    dend_48 { pt3dadd( -9.95552, 4.78307, -10.7854, 1.66 ) }
    dend_48 { pt3dadd( -11.7953, 5.34641, -12.1904, 1.66 ) }
    // Section: dend_45, id: dend_45, parent: soma_0 (entry count 45/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -4.2067, -0.667208, -10.0602, 1.11 ) }
    dend_45 { pt3dadd( -5.6205, -0.69289, -9.98283, 1.11 ) }
    dend_45 { pt3dadd( -7.48118, -0.644992, -9.85078, 1.11 ) }
    dend_45 { pt3dadd( -9.4568, -0.511736, -9.70287, 1.11 ) }
    dend_45 { pt3dadd( -11.1475, -0.381305, -9.61977, 1.11 ) }
    dend_45 { pt3dadd( -13.7848, -0.18499, -9.54112, 0.83 ) }
    dend_45 { pt3dadd( -15.6939, -0.0702192, -9.52609, 0.83 ) }
    dend_45 { pt3dadd( -17.081, 0.00703632, -9.54783, 1.39 ) }
    dend_45 { pt3dadd( -18.6211, 0.100885, -9.60848, 1.11 ) }
    dend_45 { pt3dadd( -20.0236, 0.210527, -9.70826, 1.11 ) }
    dend_45 { pt3dadd( -22.3684, 0.351303, -9.93726, 1.11 ) }
    dend_45 { pt3dadd( -24.5927, 0.361235, -10.2007, 1.11 ) }
    dend_45 { pt3dadd( -26.2169, 0.338347, -10.4652, 0.83 ) }
    dend_45 { pt3dadd( -27.1506, 0.331388, -10.6281, 0.83 ) }
    dend_45 { pt3dadd( -30.2766, 0.189544, -11.4864, 0.83 ) }
    dend_45 { pt3dadd( -31.0786, 0.0878014, -11.8249, 0.83 ) }
    dend_45 { pt3dadd( -32.9636, -0.274753, -12.9865, 0.83 ) }
    dend_45 { pt3dadd( -34.8591, -0.671863, -14.3768, 0.83 ) }
    dend_45 { pt3dadd( -36.8103, -1.06202, -16.0429, 0.83 ) }
    dend_45 { pt3dadd( -40.4662, -1.75411, -19.285, 0.83 ) }
    dend_45 { pt3dadd( -43.6737, -2.34174, -22.3602, 0.83 ) }
    dend_45 { pt3dadd( -46.0969, -2.7266, -24.7951, 0.83 ) }
    dend_45 { pt3dadd( -49.1942, -3.14535, -28.0854, 0.55 ) }
    dend_45 { pt3dadd( -51.2627, -3.40564, -30.343, 0.28 ) }
    dend_45 { pt3dadd( -53.3666, -3.61258, -32.7021, 0.55 ) }
    dend_45 { pt3dadd( -55.4197, -3.59182, -34.7562, 0.55 ) }
    dend_45 { pt3dadd( -55.9027, -3.53214, -35.2165, 0.55 ) }
    dend_45 { pt3dadd( -56.6783, -3.43132, -35.9325, 1.11 ) }
    // Section: dend_40, id: dend_40, parent: soma_0 (entry count 73/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -4.5167, -3.02321, 11.1598, 1.66 ) }
    dend_40 { pt3dadd( -5.45008, -3.95309, 12.1973, 1.39 ) }
    dend_40 { pt3dadd( -7.48177, -5.97715, 14.4555, 1.66 ) }
    // Section: dend_33, id: dend_33, parent: soma_0 (entry count 76/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -2.0967, -5.94921, 15.1098, 1.39 ) }
    dend_33 { pt3dadd( -3.20143, -9.22455, 14.5449, 1.39 ) }
    dend_33 { pt3dadd( -4.35819, -12.6541, 13.9533, 1.39 ) }
    dend_33 { pt3dadd( -5.15695, -15.0223, 13.5448, 1.39 ) }
    // Section: dend_8, id: dend_8, parent: soma_0 (entry count 80/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 2.8933, -8.40021, 6.44987, 4.16 ) }
    dend_8 { pt3dadd( 3.21296, -8.7323, 5.70132, 4.16 ) }
    dend_8 { pt3dadd( 4.38251, -9.9473, 2.96258, 3.05 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 83/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 0.0933001, -4.0872, 3.93987, 1.11 ) }
    dend_3 { pt3dadd( 0.957568, -3.8903, 4.26467, 1.11 ) }
    dend_3 { pt3dadd( 1.70645, -3.41551, 5.10679, 1.11 ) }
    dend_3 { pt3dadd( 2.89148, -2.66419, 6.43937, 1.11 ) }
    dend_3 { pt3dadd( 3.85587, -2.05277, 7.52384, 0.83 ) }
    dend_3 { pt3dadd( 5.39267, -1.07844, 9.25199, 0.83 ) }
    dend_3 { pt3dadd( 6.83998, -0.160838, 10.8795, 1.11 ) }
    dend_3 { pt3dadd( 8.08651, 0.94724, 13.0396, 1.11 ) }
    dend_3 { pt3dadd( 11.9249, 3.84109, 17.5262, 1.11 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 92/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.8933, 4.6243, 1.41987, 1.39 ) }
    dend_0 { pt3dadd( 3.91117, 6.52535, 1.41987, 1.39 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 94/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.65053, -8.97609, 2.67222, 0.813732 ) }
    axon_0 { pt3dadd( 5.90337, -23.3606, 2.67222, 0.813732 ) }
    axon_0 { pt3dadd( 10.1562, -37.7451, 2.67222, 0.813732 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 97/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -15.0559, 81.7317, 44.7786, 0.55 ) }
    dend_57 { pt3dadd( -16.8056, 88.824, 47.7149, 0.55 ) }
    dend_57 { pt3dadd( -17.6891, 96.4586, 49.1451, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 0/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -15.0559, 81.7317, 44.7786, 0.55 ) }
    dend_56 { pt3dadd( -15.2534, 89.2781, 48.817, 0.55 ) }
    dend_56 { pt3dadd( -14.7091, 95.8808, 54.3646, 0.55 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 3/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -11.7953, 5.34641, -12.1904, 0.83 ) }
    dend_52 { pt3dadd( -13.7766, 7.68585, -13.4564, 0.83 ) }
    dend_52 { pt3dadd( -16.5613, 10.9737, -15.2356, 1.11 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 6/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -11.7953, 5.34641, -12.1904, 1.11 ) }
    dend_49 { pt3dadd( -15.5925, 7.55038, -13.1913, 1.11 ) }
    dend_49 { pt3dadd( -18.3803, 9.16842, -13.9261, 1.11 ) }
    dend_49 { pt3dadd( -19.8698, 10.033, -14.3187, 1.11 ) }
    dend_49 { pt3dadd( -23.4913, 12.1349, -15.2732, 0.83 ) }
    dend_49 { pt3dadd( -25.6971, 13.4152, -15.8546, 0.83 ) }
    dend_49 { pt3dadd( -27.7777, 14.6228, -16.403, 1.11 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 13/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -56.6783, -3.43132, -35.9325, 0.28 ) }
    dend_47 { pt3dadd( -56.4735, -4.71111, -38.8986, 0.28 ) }
    dend_47 { pt3dadd( -56.429, -4.98923, -39.5432, 0.83 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 16/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -56.6783, -3.43132, -35.9325, 0.28 ) }
    dend_46 { pt3dadd( -58.0832, -4.95887, -39.1606, 0.28 ) }
    dend_46 { pt3dadd( -58.867, -5.76849, -40.7741, 1.11 ) }
    dend_46 { pt3dadd( -59.6889, -6.54841, -42.2564, 1.11 ) }
    dend_46 { pt3dadd( -60.3183, -7.09784, -43.2747, 0.28 ) }
    dend_46 { pt3dadd( -60.8274, -7.42426, -43.9772, 1.39 ) }
    dend_46 { pt3dadd( -63.2102, -8.68145, -47.1365, 0.28 ) }
    dend_46 { pt3dadd( -64.39, -9.16009, -48.4644, 1.11 ) }
    dend_46 { pt3dadd( -65.2064, -9.42594, -49.277, 0.55 ) }
    dend_46 { pt3dadd( -66.3577, -9.74678, -50.3779, 0.28 ) }
    dend_46 { pt3dadd( -71.7008, -10.9899, -55.3854, 0.28 ) }
    dend_46 { pt3dadd( -73.5936, -11.3624, -57.0881, 0.83 ) }
    dend_46 { pt3dadd( -75.4648, -11.6308, -58.6851, 0.28 ) }
    dend_46 { pt3dadd( -76.4757, -11.7387, -59.5513, 0.83 ) }
    // Section: dend_44, id: dend_44, parent: dend_40 (entry count 30/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -7.48177, -5.97715, 14.4555, 0.83 ) }
    dend_44 { pt3dadd( -8.19592, -7.63951, 17.0329, 0.83 ) }
    dend_44 { pt3dadd( -8.63053, -8.56732, 18.2182, 0.55 ) }
    dend_44 { pt3dadd( -9.39531, -9.74973, 19.9429, 0.55 ) }
    dend_44 { pt3dadd( -10.2981, -10.7405, 21.7284, 0.55 ) }
    dend_44 { pt3dadd( -11.7123, -11.8632, 24.2253, 0.55 ) }
    dend_44 { pt3dadd( -12.7087, -12.6543, 25.9846, 0.55 ) }
    dend_44 { pt3dadd( -13.8853, -13.3049, 27.6197, 0.55 ) }
    dend_44 { pt3dadd( -15.7957, -13.9203, 30.1876, 0.55 ) }
    dend_44 { pt3dadd( -16.9114, -13.9411, 31.3543, 0.55 ) }
    dend_44 { pt3dadd( -18.164, -13.6962, 32.5186, 0.55 ) }
    dend_44 { pt3dadd( -22.817, -16.4414, 39.6897, 0.55 ) }
    dend_44 { pt3dadd( -28.457, -20.599, 45.2179, 0.55 ) }
    dend_44 { pt3dadd( -33.0872, -24.5388, 51.7611, 0.55 ) }
    dend_44 { pt3dadd( -39.5069, -26.9052, 57.5977, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 45/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -7.48177, -5.97715, 14.4555, 0.83 ) }
    dend_41 { pt3dadd( -8.43979, -6.67596, 13.3573, 0.83 ) }
    dend_41 { pt3dadd( -9.69106, -7.58867, 11.9229, 0.83 ) }
    dend_41 { pt3dadd( -12.167, -9.3947, 9.08458, 0.83 ) }
    dend_41 { pt3dadd( -12.6648, -9.75777, 8.514, 0.83 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 50/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -5.15695, -15.0223, 13.5448, 0.83 ) }
    dend_37 { pt3dadd( -7.03839, -18.0445, 13.5248, 0.83 ) }
    dend_37 { pt3dadd( -8.25446, -19.6068, 13.5085, 0.83 ) }
    dend_37 { pt3dadd( -10.3565, -22.195, 13.4505, 0.83 ) }
    dend_37 { pt3dadd( -12.8687, -25.2882, 13.3812, 0.83 ) }
    dend_37 { pt3dadd( -13.7531, -26.377, 13.3568, 0.83 ) }
    dend_37 { pt3dadd( -16.0892, -29.2534, 13.2923, 1.11 ) }
    dend_37 { pt3dadd( -19.4511, -33.0563, 13.1884, 0.83 ) }
    dend_37 { pt3dadd( -20.8453, -34.4932, 13.1407, 0.83 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 59/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -5.15695, -15.0223, 13.5448, 0.83 ) }
    dend_34 { pt3dadd( -4.86163, -17.4932, 14.6643, 0.83 ) }
    dend_34 { pt3dadd( -4.73908, -19.2365, 15.3223, 0.83 ) }
    dend_34 { pt3dadd( -4.59634, -20.5286, 15.7123, 0.83 ) }
    dend_34 { pt3dadd( -4.15691, -24.3013, 16.6995, 0.83 ) }
    dend_34 { pt3dadd( -3.88634, -26.1145, 17.1227, 0.83 ) }
    dend_34 { pt3dadd( -3.49022, -28.1904, 17.5633, 0.83 ) }
    dend_34 { pt3dadd( -2.7641, -31.758, 18.2307, 0.83 ) }
    dend_34 { pt3dadd( -2.04719, -35.1899, 18.8263, 0.83 ) }
    dend_34 { pt3dadd( -1.90557, -36.4811, 19.054, 0.83 ) }
    dend_34 { pt3dadd( -1.8149, -38.6989, 19.4792, 0.83 ) }
    dend_34 { pt3dadd( -1.82497, -40.3211, 19.843, 0.83 ) }
    dend_34 { pt3dadd( -1.9153, -42.1757, 20.2907, 0.83 ) }
    dend_34 { pt3dadd( -2.25023, -46.4506, 21.374, 0.83 ) }
    dend_34 { pt3dadd( -3.00515, -52.9506, 22.9831, 0.55 ) }
    dend_34 { pt3dadd( -3.26672, -55.7408, 23.6075, 0.55 ) }
    dend_34 { pt3dadd( -3.4855, -58.2012, 24.0823, 0.55 ) }
    dend_34 { pt3dadd( -3.67912, -60.9969, 24.4833, 0.55 ) }
    dend_34 { pt3dadd( -3.72945, -63.9773, 24.7326, 0.55 ) }
    dend_34 { pt3dadd( -3.55016, -66.3449, 24.7212, 0.55 ) }
    dend_34 { pt3dadd( -2.95165, -69.6597, 24.5548, 0.55 ) }
    dend_34 { pt3dadd( -2.38599, -72.7499, 24.2944, 0.55 ) }
    dend_34 { pt3dadd( -2.02056, -74.6494, 24.1401, 0.28 ) }
    dend_34 { pt3dadd( -1.7837, -75.8038, 24.0405, 0.83 ) }
    dend_34 { pt3dadd( -1.517, -76.9324, 23.939, 0.55 ) }
    dend_34 { pt3dadd( -0.631775, -80.1783, 23.6725, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_8 (entry count 85/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 4.38251, -9.9473, 2.96258, 2.49 ) }
    dend_14 { pt3dadd( 5.83995, -12.3341, 1.94322, 2.49 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 87/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 4.38251, -9.9473, 2.96258, 1.39 ) }
    dend_9 { pt3dadd( 7.30551, -9.48594, -0.56767, 1.39 ) }
    dend_9 { pt3dadd( 8.73425, -9.26043, -2.29323, 1.11 ) }
    dend_9 { pt3dadd( 10.3517, -9.00513, -4.24675, 1.66 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 91/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 11.9249, 3.84109, 17.5262, 0.55 ) }
    dend_7 { pt3dadd( 16.5579, 8.03481, 24.9396, 0.55 ) }
    dend_7 { pt3dadd( 21.5963, 11.4488, 32.5321, 0.55 ) }
    dend_7 { pt3dadd( 27.281, 16.5091, 38.5144, 0.55 ) }
    dend_7 { pt3dadd( 33.0473, 20.3394, 45.3482, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 96/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 11.9249, 3.84109, 17.5262, 0.55 ) }
    dend_4 { pt3dadd( 19.8821, 7.22355, 23.1668, 0.55 ) }
    dend_4 { pt3dadd( 28.544, 10.9363, 27.3791, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 99/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 3.91117, 6.52535, 1.41987, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_2 { pt3dadd( 5.47181, 9.47933, 2.37165, 1.11 ) }
    dend_2 { pt3dadd( 6.81233, 12.0353, 2.77686, 1.11 ) }
    dend_2 { pt3dadd( 8.79035, 15.901, 2.60577, 1.11 ) }
    dend_2 { pt3dadd( 10.1301, 18.6267, 2.31254, 1.11 ) }
    dend_2 { pt3dadd( 11.4627, 21.3658, 1.85337, 0.83 ) }
    dend_2 { pt3dadd( 13.3136, 24.8727, 1.00882, 0.83 ) }
    dend_2 { pt3dadd( 16.3915, 30.1124, -1.07383, 0.83 ) }
    dend_2 { pt3dadd( 19.0119, 34.2678, -3.52489, 0.83 ) }
    dend_2 { pt3dadd( 20.0225, 35.796, -4.66969, 0.83 ) }
    dend_2 { pt3dadd( 21.7704, 38.4035, -6.98846, 0.55 ) }
    dend_2 { pt3dadd( 23.627, 41.0994, -9.70023, 0.83 ) }
    dend_2 { pt3dadd( 25.6928, 44.0639, -12.8573, 0.55 ) }
    dend_2 { pt3dadd( 27.2131, 46.3098, -15.3517, 0.55 ) }
    dend_2 { pt3dadd( 28.0164, 47.5608, -16.7901, 0.55 ) }
    dend_2 { pt3dadd( 29.5686, 50.0636, -19.8473, 0.28 ) }
    dend_2 { pt3dadd( 29.9088, 50.7034, -20.6307, 0.83 ) }
    dend_2 { pt3dadd( 30.3095, 51.7397, -21.8016, 0.83 ) }
    dend_2 { pt3dadd( 31.9134, 56.8345, -27.4046, 0.55 ) }
    dend_2 { pt3dadd( 32.2428, 57.9833, -28.8356, 0.55 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 19/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 3.91117, 6.52535, 1.41987, 0.55 ) }
    dend_1 { pt3dadd( 6.80667, 8.20801, -0.344023, 0.55 ) }
    dend_1 { pt3dadd( 7.88343, 8.80002, -1.21001, 0.55 ) }
    dend_1 { pt3dadd( 9.85537, 9.86576, -2.95905, 0.83 ) }
    dend_1 { pt3dadd( 11.1337, 10.6061, -4.31541, 0.83 ) }
    dend_1 { pt3dadd( 14.2442, 12.6546, -7.91766, 0.83 ) }
    dend_1 { pt3dadd( 14.8809, 13.1069, -8.70335, 0.83 ) }
    dend_1 { pt3dadd( 17.1139, 14.7822, -11.8935, 0.83 ) }
    dend_1 { pt3dadd( 19.9545, 17.0596, -16.3666, 0.83 ) }
    dend_1 { pt3dadd( 22.3539, 19.3092, -20.6595, 0.83 ) }
    dend_1 { pt3dadd( 24.0565, 21.146, -23.9419, 0.83 ) }
    dend_1 { pt3dadd( 24.7269, 21.9725, -25.2874, 0.83 ) }
    dend_1 { pt3dadd( 25.8878, 23.6062, -27.6318, 0.83 ) }
    dend_1 { pt3dadd( 26.1634, 24.0889, -28.1897, 0.83 ) }
    dend_1 { pt3dadd( 26.6305, 25.0616, -29.136, 0.28 ) }
    dend_1 { pt3dadd( 27.1568, 26.1513, -30.0032, 0.83 ) }
    dend_1 { pt3dadd( 28.5482, 28.9143, -31.9645, 0.83 ) }
    dend_1 { pt3dadd( 29.7836, 30.8486, -33.095, 0.83 ) }
    dend_1 { pt3dadd( 31.7679, 33.4003, -34.5403, 0.55 ) }
    dend_1 { pt3dadd( 32.3613, 34.062, -34.9372, 0.83 ) }
    dend_1 { pt3dadd( 34.0424, 35.7503, -36.1642, 0.55 ) }
    dend_1 { pt3dadd( 34.7751, 36.444, -36.7257, 0.83 ) }
    dend_1 { pt3dadd( 38.1561, 39.5757, -39.6106, 0.28 ) }
    dend_1 { pt3dadd( 39.9196, 41.2463, -41.3454, 0.83 ) }
    dend_1 { pt3dadd( 40.3113, 41.6526, -41.9001, 0.83 ) }
    dend_1 { pt3dadd( 42.7146, 44.2257, -46.0579, 0.28 ) }
    dend_1 { pt3dadd( 43.0183, 44.5702, -46.7014, 0.55 ) }
    dend_1 { pt3dadd( 44.0126, 45.8503, -49.2847, 0.28 ) }
    dend_1 { pt3dadd( 44.3338, 46.3588, -50.3996, 1.11 ) }
    dend_1 { pt3dadd( 46.2499, 49.6473, -57.2383, 0.55 ) }
    dend_1 { pt3dadd( 46.8044, 50.6013, -59.1467, 0.28 ) }
    dend_1 { pt3dadd( 47.1903, 51.238, -60.4335, 0.55 ) }
    dend_1 { pt3dadd( 47.5571, 51.8273, -61.6445, 0.28 ) }
    dend_1 { pt3dadd( 48.158, 52.7539, -63.4764, 0.55 ) }
    dend_1 { pt3dadd( 48.9147, 53.9397, -65.6911, 0.28 ) }
    dend_1 { pt3dadd( 49.5177, 55.1071, -66.82, 0.83 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 55/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 10.1562, -37.7451, 2.67222, 0.28 ) }
    axon_1 { pt3dadd( 14.409, -52.1295, 2.67222, 0.28 ) }
    axon_1 { pt3dadd( 18.6619, -66.514, 2.67222, 0.28 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 58/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -16.5613, 10.9737, -15.2356, 0.55 ) }
    dend_54 { pt3dadd( -19.6316, 12.8245, -18.3645, 0.55 ) }
    dend_54 { pt3dadd( -21.6906, 14.2628, -19.951, 1.11 ) }
    dend_54 { pt3dadd( -24.299, 16.1818, -21.9098, 0.83 ) }
    dend_54 { pt3dadd( -25.9347, 17.3849, -23.072, 0.83 ) }
    dend_54 { pt3dadd( -28.1005, 18.9714, -24.6314, 0.83 ) }
    dend_54 { pt3dadd( -30.8214, 21.0688, -26.6102, 0.83 ) }
    dend_54 { pt3dadd( -32.5823, 22.4283, -27.7591, 0.55 ) }
    dend_54 { pt3dadd( -34.5703, 24.1696, -28.9934, 0.28 ) }
    dend_54 { pt3dadd( -35.2978, 24.8882, -29.4416, 0.83 ) }
    dend_54 { pt3dadd( -36.7383, 26.4131, -30.5403, 0.83 ) }
    dend_54 { pt3dadd( -37.8434, 27.6555, -31.5978, 0.55 ) }
    dend_54 { pt3dadd( -39.0906, 29.0593, -33.1507, 0.83 ) }
    dend_54 { pt3dadd( -40.333, 30.4872, -34.7776, 0.28 ) }
    dend_54 { pt3dadd( -41.0736, 31.3844, -35.8126, 0.28 ) }
    dend_54 { pt3dadd( -41.7403, 32.2152, -36.8436, 0.55 ) }
    dend_54 { pt3dadd( -42.137, 32.7099, -37.4983, 0.83 ) }
    dend_54 { pt3dadd( -43.6258, 34.4551, -40.155, 0.28 ) }
    dend_54 { pt3dadd( -44.1436, 35.0719, -41.1171, 0.83 ) }
    dend_54 { pt3dadd( -45.3295, 36.542, -43.4065, 0.55 ) }
    dend_54 { pt3dadd( -45.7255, 37.0409, -44.1849, 0.28 ) }
    dend_54 { pt3dadd( -46.4754, 38.0911, -45.7498, 1.11 ) }
    dend_54 { pt3dadd( -47.3669, 39.3733, -47.5275, 0.28 ) }
    dend_54 { pt3dadd( -48.1189, 40.3791, -48.79, 0.55 ) }
    dend_54 { pt3dadd( -48.6533, 40.9877, -49.5774, 0.28 ) }
    dend_54 { pt3dadd( -49.1393, 41.518, -50.2134, 0.83 ) }
    dend_54 { pt3dadd( -49.9169, 42.2476, -51.2748, 0.28 ) }
    dend_54 { pt3dadd( -50.7586, 42.9354, -52.3866, 0.55 ) }
    dend_54 { pt3dadd( -51.9115, 43.8107, -53.8197, 0.83 ) }
    dend_54 { pt3dadd( -54.6512, 45.9303, -57.4037, 0.28 ) }
    dend_54 { pt3dadd( -55.2985, 46.4482, -58.2629, 0.83 ) }
    dend_54 { pt3dadd( -57.9023, 48.7569, -61.7672, 0.28 ) }
    dend_54 { pt3dadd( -58.238, 49.0917, -62.2358, 0.55 ) }
    dend_54 { pt3dadd( -58.8568, 49.9013, -63.2078, 1.11 ) }
    dend_54 { pt3dadd( -60.1864, 52.2069, -65.5907, 0.28 ) }
    dend_54 { pt3dadd( -60.3942, 52.7071, -66.0215, 0.55 ) }
    dend_54 { pt3dadd( -60.849, 54.0111, -67.0118, 0.28 ) }
    dend_54 { pt3dadd( -60.9586, 54.402, -67.2844, 0.55 ) }
    dend_54 { pt3dadd( -61.6456, 56.7919, -69.1087, 0.28 ) }
    dend_54 { pt3dadd( -62.1555, 58.1951, -70.4099, 0.83 ) }
    dend_54 { pt3dadd( -62.5566, 59.0557, -71.2758, 0.28 ) }
    dend_54 { pt3dadd( -62.7266, 59.3599, -71.618, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_54 { pt3dadd( -64.4015, 62.0523, -74.7642, 0.28 ) }
    dend_54 { pt3dadd( -64.6432, 62.4164, -75.2078, 0.83 ) }
    dend_54 { pt3dadd( -66.0529, 64.278, -77.6172, 0.28 ) }
    dend_54 { pt3dadd( -66.482, 64.8221, -78.3009, 0.55 ) }
    dend_54 { pt3dadd( -68.0362, 66.6458, -80.722, 0.28 ) }
    dend_54 { pt3dadd( -68.8628, 67.5552, -81.9299, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 6/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -16.5613, 10.9737, -15.2356, 0.83 ) }
    dend_53 { pt3dadd( -18.7021, 13.1393, -14.1678, 0.83 ) }
    dend_53 { pt3dadd( -20.076, 14.6043, -13.5783, 0.55 ) }
    dend_53 { pt3dadd( -24.2715, 18.9704, -12.1998, 0.55 ) }
    dend_53 { pt3dadd( -28.9604, 23.8205, -11.0946, 0.55 ) }
    dend_53 { pt3dadd( -31.622, 26.4353, -10.6992, 0.55 ) }
    dend_53 { pt3dadd( -33.4561, 28.1442, -10.5768, 0.55 ) }
    dend_53 { pt3dadd( -36.96, 31.1655, -10.6651, 0.55 ) }
    dend_53 { pt3dadd( -39.0875, 32.7568, -11.0117, 0.55 ) }
    dend_53 { pt3dadd( -41.0827, 34.0364, -11.5369, 0.55 ) }
    dend_53 { pt3dadd( -43.2623, 35.1528, -12.4328, 0.55 ) }
    dend_53 { pt3dadd( -46.8077, 36.6303, -13.9847, 0.55 ) }
    dend_53 { pt3dadd( -50.5347, 37.9134, -15.6413, 0.55 ) }
    dend_53 { pt3dadd( -51.855, 38.2683, -16.1961, 0.28 ) }
    dend_53 { pt3dadd( -53.9657, 38.8223, -17.0148, 1.39 ) }
    dend_53 { pt3dadd( -58.6719, 39.9689, -18.6243, 0.28 ) }
    dend_53 { pt3dadd( -59.8645, 40.3083, -19.021, 0.83 ) }
    dend_53 { pt3dadd( -61.3557, 40.748, -19.5128, 0.28 ) }
    dend_53 { pt3dadd( -62.9887, 41.381, -20.0246, 0.55 ) }
    dend_53 { pt3dadd( -63.484, 41.6106, -20.1705, 0.28 ) }
    dend_53 { pt3dadd( -65.67, 42.7873, -20.8058, 0.83 ) }
    dend_53 { pt3dadd( -69.2417, 44.9385, -21.5724, 0.28 ) }
    dend_53 { pt3dadd( -70.292, 45.5901, -21.8274, 0.55 ) }
    dend_53 { pt3dadd( -72.05, 46.7109, -22.2824, 0.28 ) }
    dend_53 { pt3dadd( -73.3354, 47.4809, -22.6012, 0.55 ) }
    dend_53 { pt3dadd( -75.7599, 48.8289, -23.1416, 0.28 ) }
    dend_53 { pt3dadd( -76.455, 49.1344, -23.2247, 0.83 ) }
    dend_53 { pt3dadd( -79.9488, 50.2809, -23.301, 0.28 ) }
    dend_53 { pt3dadd( -80.6251, 50.4779, -23.3061, 0.55 ) }
    dend_53 { pt3dadd( -82.74, 50.9763, -23.2676, 0.28 ) }
    dend_53 { pt3dadd( -84.405, 51.3049, -23.1824, 0.55 ) }
    dend_53 { pt3dadd( -90.9874, 52.2788, -22.4695, 0.28 ) }
    dend_53 { pt3dadd( -92.0133, 52.3918, -22.321, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 39/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -27.7777, 14.6228, -16.403, 0.55 ) }
    dend_51 { pt3dadd( -29.9603, 15.4032, -19.0056, 0.55 ) }
    dend_51 { pt3dadd( -31.9817, 16.1632, -21.2244, 0.55 ) }
    dend_51 { pt3dadd( -33.7022, 16.8386, -22.8728, 0.83 ) }
    dend_51 { pt3dadd( -34.9729, 17.4313, -23.8701, 0.83 ) }
    dend_51 { pt3dadd( -36.6543, 18.2475, -25.0453, 0.28 ) }
    dend_51 { pt3dadd( -37.2433, 18.5222, -25.4261, 0.28 ) }
    dend_51 { pt3dadd( -38.9812, 19.3163, -26.3279, 0.83 ) }
    dend_51 { pt3dadd( -40.612, 20.0141, -27.0467, 0.55 ) }
    dend_51 { pt3dadd( -44.047, 21.3059, -28.3892, 0.55 ) }
    dend_51 { pt3dadd( -46.4165, 22.0698, -29.3099, 0.83 ) }
    dend_51 { pt3dadd( -48.3344, 22.5841, -30.1994, 0.28 ) }
    dend_51 { pt3dadd( -48.7892, 22.6834, -30.4458, 0.55 ) }
    dend_51 { pt3dadd( -51.3374, 23.1421, -31.8181, 0.28 ) }
    dend_51 { pt3dadd( -52.4777, 23.2965, -32.4738, 0.55 ) }
    dend_51 { pt3dadd( -54.3861, 23.5766, -33.6176, 0.55 ) }
    dend_51 { pt3dadd( -56.8922, 24.1052, -35.0433, 0.28 ) }
    dend_51 { pt3dadd( -57.6211, 24.3044, -35.4399, 0.28 ) }
    dend_51 { pt3dadd( -60.8804, 25.3647, -37.1295, 0.55 ) }
    dend_51 { pt3dadd( -63.9532, 26.5424, -38.5003, 0.83 ) }
    dend_51 { pt3dadd( -67.9131, 28.2036, -39.9692, 0.28 ) }
    dend_51 { pt3dadd( -68.7689, 28.5824, -40.2249, 0.55 ) }
    dend_51 { pt3dadd( -70.7878, 29.5171, -40.7057, 0.55 ) }
    dend_51 { pt3dadd( -71.7156, 29.9626, -40.9206, 0.55 ) }
    dend_51 { pt3dadd( -74.4246, 31.2634, -41.5599, 0.83 ) }
    dend_51 { pt3dadd( -76.5609, 32.353, -41.8594, 0.28 ) }
    dend_51 { pt3dadd( -77.1479, 32.6549, -41.9034, 0.55 ) }
    dend_51 { pt3dadd( -79.236, 33.767, -42.0554, 0.28 ) }
    dend_51 { pt3dadd( -80.2855, 34.303, -42.1788, 0.55 ) }
    dend_51 { pt3dadd( -81.4742, 34.8643, -42.3696, 0.28 ) }
    dend_51 { pt3dadd( -82.2375, 35.2203, -42.5322, 0.83 ) }
    dend_51 { pt3dadd( -83.5203, 35.864, -42.8303, 0.28 ) }
    dend_51 { pt3dadd( -84.7404, 36.5363, -43.1371, 0.83 ) }
    dend_51 { pt3dadd( -87.8188, 38.6223, -44.0207, 0.28 ) }
    dend_51 { pt3dadd( -88.8754, 39.4918, -44.4287, 0.28 ) }
    dend_51 { pt3dadd( -89.5586, 40.1268, -44.7785, 0.28 ) }
    dend_51 { pt3dadd( -90.7882, 41.3557, -45.6427, 0.83 ) }
    dend_51 { pt3dadd( -91.8755, 42.532, -46.5784, 0.28 ) }
    dend_51 { pt3dadd( -93.4733, 44.3953, -48.224, 0.55 ) }
    dend_51 { pt3dadd( -95.6553, 47.1503, -50.7933, 0.28 ) }
    dend_51 { pt3dadd( -96.6407, 48.4473, -52.011, 0.83 ) }
    dend_51 { pt3dadd( -98.2097, 50.4986, -53.9584, 0.28 ) }
    dend_51 { pt3dadd( -98.726, 51.1614, -54.5622, 0.55 ) }
    dend_51 { pt3dadd( -99.8577, 52.6343, -55.7847, 0.28 ) }
    dend_51 { pt3dadd( -100.123, 52.9731, -56.0527, 0.83 ) }
    dend_51 { pt3dadd( -102.361, 55.9161, -57.8524, 0.28 ) }
    dend_51 { pt3dadd( -102.822, 56.554, -58.1354, 0.55 ) }
    dend_51 { pt3dadd( -104.339, 58.829, -58.8003, 0.55 ) }
    dend_51 { pt3dadd( -104.616, 59.2561, -58.9046, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 88/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -27.7777, 14.6228, -16.403, 0.55 ) }
    dend_50 { pt3dadd( -30.6157, 14.1739, -15.5283, 0.55 ) }
    dend_50 { pt3dadd( -36.1876, 13.3379, -14.6031, 0.83 ) }
    dend_50 { pt3dadd( -41.5785, 12.5755, -14.1012, 0.83 ) }
    dend_50 { pt3dadd( -44.6026, 12.1626, -14.0669, 0.55 ) }
    dend_50 { pt3dadd( -46.2277, 11.9455, -14.1243, 0.55 ) }
    dend_50 { pt3dadd( -51.095, 11.2439, -14.5891, 0.55 ) }
    dend_50 { pt3dadd( -57.3244, 10.4797, -15.8114, 0.28 ) }
    dend_50 { pt3dadd( -58.3997, 10.3245, -16.2223, 0.55 ) }
    dend_50 { pt3dadd( -61.169, 9.85339, -17.663, 0.28 ) }
    dend_50 { pt3dadd( -62.2608, 9.65819, -18.2599, 0.83 ) }
    dend_50 { pt3dadd( -65.1786, 9.0245, -19.8464, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_50 { pt3dadd( -66.4309, 8.66922, -20.3994, 0.55 ) }
    dend_50 { pt3dadd( -70.494, 7.50355, -21.2695, 0.28 ) }
    dend_50 { pt3dadd( -72.1082, 6.98276, -21.41, 0.83 ) }
    dend_50 { pt3dadd( -74.7336, 6.03585, -21.2179, 0.28 ) }
    dend_50 { pt3dadd( -75.6696, 5.69465, -21.0039, 0.83 ) }
    dend_50 { pt3dadd( -79.8313, 4.19186, -19.2789, 0.28 ) }
    dend_50 { pt3dadd( -80.8335, 3.75767, -18.8109, 0.83 ) }
    dend_50 { pt3dadd( -81.82, 3.28745, -18.2572, 0.28 ) }
    dend_50 { pt3dadd( -82.2549, 3.05701, -17.9998, 0.83 ) }
    dend_50 { pt3dadd( -84.3919, 1.8523, -16.7347, 0.28 ) }
    dend_50 { pt3dadd( -85.5161, 1.2008, -16.2151, 0.55 ) }
    dend_50 { pt3dadd( -88.7114, -0.685364, -15.9262, 0.28 ) }
    dend_50 { pt3dadd( -88.9585, -0.830298, -15.9247, 0.55 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 13/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -12.6648, -9.75777, 8.514, 0.83 ) }
    dend_43 { pt3dadd( -13.3232, -10.0839, 9.0267, 0.83 ) }
    dend_43 { pt3dadd( -15.2196, -11.1041, 10.2179, 0.55 ) }
    dend_43 { pt3dadd( -17.7609, -12.2296, 11.8106, 0.55 ) }
    dend_43 { pt3dadd( -19.1123, -12.7592, 12.6752, 0.55 ) }
    dend_43 { pt3dadd( -19.8108, -13.0032, 13.1612, 0.55 ) }
    dend_43 { pt3dadd( -20.8181, -13.3008, 13.9055, 0.83 ) }
    dend_43 { pt3dadd( -24.2777, -14.1536, 16.5591, 0.55 ) }
    dend_43 { pt3dadd( -27.2932, -14.7972, 18.8355, 0.55 ) }
    dend_43 { pt3dadd( -29.8567, -15.2255, 20.6083, 0.55 ) }
    dend_43 { pt3dadd( -31.5034, -15.4314, 21.7665, 0.55 ) }
    dend_43 { pt3dadd( -33.8706, -15.6363, 23.4125, 0.55 ) }
    dend_43 { pt3dadd( -35.322, -15.697, 24.3754, 0.55 ) }
    dend_43 { pt3dadd( -37.25, -15.8117, 25.5034, 0.55 ) }
    dend_43 { pt3dadd( -39.0576, -16.0981, 26.3381, 0.55 ) }
    dend_43 { pt3dadd( -40.1514, -16.3339, 26.6913, 0.28 ) }
    dend_43 { pt3dadd( -40.8219, -16.5169, 26.8578, 0.55 ) }
    dend_43 { pt3dadd( -42.2846, -16.9104, 27.1432, 0.55 ) }
    dend_43 { pt3dadd( -45.9361, -17.9048, 27.8993, 0.55 ) }
    dend_43 { pt3dadd( -47.9039, -18.4557, 28.3966, 0.55 ) }
    dend_43 { pt3dadd( -49.9786, -19.1046, 28.8769, 0.28 ) }
    dend_43 { pt3dadd( -50.9854, -19.4338, 29.0761, 0.55 ) }
    dend_43 { pt3dadd( -53.098, -20.0735, 29.4714, 0.55 ) }
    dend_43 { pt3dadd( -58.6523, -22.4827, 33.1918, 0.55 ) }
    dend_43 { pt3dadd( -63.5268, -24.4137, 38.0256, 0.55 ) }
    dend_43 { pt3dadd( -67.7426, -26.8245, 43.238, 0.55 ) }
    dend_43 { pt3dadd( -72.1012, -29.6407, 48.0958, 0.55 ) }
    dend_43 { pt3dadd( -77.5909, -31.4077, 52.287, 0.55 ) }
    dend_43 { pt3dadd( -83.9495, -31.9966, 55.4911, 0.55 ) }
    dend_43 { pt3dadd( -90.7616, -32.0831, 57.6514, 0.55 ) }
    dend_43 { pt3dadd( -97.3401, -31.8014, 60.4409, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 44/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -12.6648, -9.75777, 8.514, 0.83 ) }
    dend_42 { pt3dadd( -15.7334, -12.2125, 5.58213, 0.83 ) }
    dend_42 { pt3dadd( -18.4994, -13.9447, 3.15052, 0.83 ) }
    dend_42 { pt3dadd( -21.8295, -15.7529, 0.229048, 0.83 ) }
    dend_42 { pt3dadd( -26.5562, -17.9502, -3.707, 0.83 ) }
    dend_42 { pt3dadd( -30.1777, -19.6766, -7.00592, 0.83 ) }
    dend_42 { pt3dadd( -32.3551, -20.7701, -9.07547, 0.83 ) }
    dend_42 { pt3dadd( -36.0956, -22.7451, -12.9043, 0.83 ) }
    dend_42 { pt3dadd( -39.4364, -24.4069, -16.2788, 0.83 ) }
    dend_42 { pt3dadd( -45.0916, -27.1155, -21.6184, 0.83 ) }
    dend_42 { pt3dadd( -51.8689, -30.1877, -27.3471, 0.28 ) }
    dend_42 { pt3dadd( -53.4924, -30.975, -28.5998, 0.83 ) }
    dend_42 { pt3dadd( -54.9543, -31.7588, -29.6828, 0.83 ) }
    dend_42 { pt3dadd( -56.6533, -32.7537, -30.856, 0.55 ) }
    dend_42 { pt3dadd( -58.2031, -33.5765, -31.6758, 0.28 ) }
    dend_42 { pt3dadd( -59.8645, -34.3064, -32.2337, 0.55 ) }
    dend_42 { pt3dadd( -60.9053, -34.6211, -32.4087, 0.28 ) }
    dend_42 { pt3dadd( -62.8029, -35.1434, -32.7753, 0.83 ) }
    dend_42 { pt3dadd( -68.5556, -36.7039, -34.1287, 0.28 ) }
    dend_42 { pt3dadd( -69.8555, -37.0238, -34.5765, 0.55 ) }
    dend_42 { pt3dadd( -71.2845, -37.3636, -35.1551, 0.28 ) }
    dend_42 { pt3dadd( -71.9671, -37.5294, -35.5067, 0.55 ) }
    dend_42 { pt3dadd( -73.7028, -37.9495, -36.5359, 0.28 ) }
    dend_42 { pt3dadd( -74.2804, -38.0973, -36.9656, 0.83 ) }
    dend_42 { pt3dadd( -77.2329, -38.9849, -39.6866, 0.55 ) }
    dend_42 { pt3dadd( -78.5245, -39.4016, -41.029, 0.83 ) }
    dend_42 { pt3dadd( -80.901, -40.1751, -43.7952, 0.28 ) }
    dend_42 { pt3dadd( -81.3752, -40.3276, -44.3978, 0.55 ) }
    dend_42 { pt3dadd( -83.4755, -40.9757, -47.3499, 0.28 ) }
    dend_42 { pt3dadd( -84.5381, -41.3761, -48.927, 0.83 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 74/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -20.8453, -34.4932, 13.1407, 0.55 ) }
    dend_39 { pt3dadd( -24.0394, -36.7251, 11.5865, 0.55 ) }
    dend_39 { pt3dadd( -29.2786, -40.3352, 9.25461, 0.55 ) }
    dend_39 { pt3dadd( -30.8547, -41.3995, 8.5997, 0.55 ) }
    dend_39 { pt3dadd( -34.6965, -44.0487, 7.14203, 0.28 ) }
    dend_39 { pt3dadd( -36.9709, -45.6289, 6.33522, 0.55 ) }
    dend_39 { pt3dadd( -38.7269, -46.8727, 5.72379, 0.28 ) }
    dend_39 { pt3dadd( -40.4743, -48.101, 5.19836, 0.28 ) }
    dend_39 { pt3dadd( -41.2006, -48.6199, 5.04936, 0.55 ) }
    dend_39 { pt3dadd( -43.8675, -50.5086, 4.68142, 0.28 ) }
    dend_39 { pt3dadd( -44.3538, -50.898, 4.67178, 0.83 ) }
    dend_39 { pt3dadd( -46.3758, -52.7509, 4.71505, 0.28 ) }
    dend_39 { pt3dadd( -47.475, -53.8336, 4.77317, 0.55 ) }
    dend_39 { pt3dadd( -48.9331, -55.3548, 4.87842, 0.28 ) }
    dend_39 { pt3dadd( -50.3295, -56.8679, 5.01276, 0.55 ) }
    dend_39 { pt3dadd( -52.2525, -58.9849, 5.28658, 0.55 ) }
    dend_39 { pt3dadd( -52.4362, -59.198, 5.32085, 0.83 ) }
    dend_39 { pt3dadd( -53.6402, -60.68, 5.65353, 0.28 ) }
    dend_39 { pt3dadd( -53.8033, -60.8965, 5.68083, 0.83 ) }
    dend_39 { pt3dadd( -62.095, -66.8079, 5.66742, 0.83 ) }
    dend_39 { pt3dadd( -71.4476, -71.0092, 5.0399, 0.83 ) }
    dend_39 { pt3dadd( -80.5453, -75.7275, 4.94853, 0.83 ) }
    dend_39 { pt3dadd( -89.0174, -81.1854, 6.58848, 0.83 ) }
    dend_39 { pt3dadd( -97.0158, -86.5139, 10.0581, 0.83 ) }
    dend_39 { pt3dadd( -105.548, -89.6887, 14.8999, 0.83 ) }
    dend_39 { pt3dadd( -113.74, -92.8108, 20.3298, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_39 { pt3dadd( -122.812, -94.7304, 24.9072, 0.83 ) }
    dend_39 { pt3dadd( -132.138, -97.7408, 28.1289, 0.83 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 2/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -20.8453, -34.4932, 13.1407, 0.83 ) }
    dend_38 { pt3dadd( -21.0005, -37.4058, 14.2423, 0.83 ) }
    dend_38 { pt3dadd( -21.4028, -41.511, 15.9343, 0.83 ) }
    dend_38 { pt3dadd( -21.4913, -43.599, 16.8133, 0.83 ) }
    dend_38 { pt3dadd( -21.6761, -48.6227, 18.8491, 0.83 ) }
    dend_38 { pt3dadd( -21.6921, -49.3131, 19.1139, 0.83 ) }
    dend_38 { pt3dadd( -21.7615, -52.2698, 20.125, 0.83 ) }
    dend_38 { pt3dadd( -21.9102, -55.466, 21.1507, 0.83 ) }
    dend_38 { pt3dadd( -22.2165, -60.1528, 22.6894, 0.83 ) }
    dend_38 { pt3dadd( -22.4231, -64.3087, 23.9654, 0.83 ) }
    dend_38 { pt3dadd( -22.4742, -66.1416, 24.4253, 0.83 ) }
    dend_38 { pt3dadd( -22.5745, -70.798, 25.5184, 0.83 ) }
    dend_38 { pt3dadd( -22.651, -75.4953, 26.5801, 0.83 ) }
    dend_38 { pt3dadd( -20.7881, -84.3618, 31.3508, 0.83 ) }
    dend_38 { pt3dadd( -19.2917, -92.9579, 36.7594, 0.83 ) }
    dend_38 { pt3dadd( -17.9223, -102.088, 41.1231, 0.83 ) }
    dend_38 { pt3dadd( -14.5037, -110.998, 44.8159, 0.83 ) }
    dend_38 { pt3dadd( -9.94236, -119.628, 47.9684, 0.83 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 20/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -0.631775, -80.1783, 23.6725, 0.28 ) }
    dend_36 { pt3dadd( -1.68157, -81.9868, 23.4461, 0.28 ) }
    dend_36 { pt3dadd( -1.88179, -82.3317, 23.4029, 0.83 ) }
    dend_36 { pt3dadd( -2.94685, -84.1665, 23.1733, 0.28 ) }
    dend_36 { pt3dadd( -6.2585, -91.047, 22.7976, 0.28 ) }
    dend_36 { pt3dadd( -8.00662, -98.4366, 23.2052, 0.28 ) }
    dend_36 { pt3dadd( -8.80662, -105.843, 24.766, 0.28 ) }
    dend_36 { pt3dadd( -10.0408, -112.784, 27.7596, 0.28 ) }
    dend_36 { pt3dadd( -9.89668, -120.2, 29.4941, 0.28 ) }
    dend_36 { pt3dadd( -9.04746, -127.611, 31.0608, 0.28 ) }
    dend_36 { pt3dadd( -9.82286, -135.16, 31.3093, 0.28 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 31/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -0.631775, -80.1783, 23.6725, 0.55 ) }
    dend_35 { pt3dadd( -0.0969672, -82.1346, 23.4663, 0.55 ) }
    dend_35 { pt3dadd( 0.229544, -83.3289, 23.3403, 0.55 ) }
    dend_35 { pt3dadd( 0.524539, -84.4079, 23.2266, 0.28 ) }
    dend_35 { pt3dadd( 3.09188, -91.5205, 21.239, 0.28 ) }
    dend_35 { pt3dadd( 4.70125, -99.0797, 20.4378, 0.28 ) }
    dend_35 { pt3dadd( 5.6584, -106.545, 18.4985, 0.28 ) }
    dend_35 { pt3dadd( 7.8173, -113.834, 16.7561, 0.28 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 39/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 5.83995, -12.3341, 1.94322, 1.94 ) }
    dend_16 { pt3dadd( 9.89363, -16.1006, 1.2575, 1.94 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 41/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 5.83995, -12.3341, 1.94322, 1.11 ) }
    dend_15 { pt3dadd( 6.30842, -15.9859, -7.67154, 1.11 ) }
    dend_15 { pt3dadd( 6.34938, -16.3121, -8.75106, 1.11 ) }
    dend_15 { pt3dadd( 6.73035, -18.0, -14.3914, 1.11 ) }
    dend_15 { pt3dadd( 6.98149, -18.6375, -16.6286, 1.11 ) }
    dend_15 { pt3dadd( 7.44438, -19.6774, -20.4502, 1.11 ) }
    dend_15 { pt3dadd( 7.99885, -20.9122, -25.0482, 1.11 ) }
    dend_15 { pt3dadd( 8.54038, -22.2979, -30.5616, 1.11 ) }
    dend_15 { pt3dadd( 8.75214, -22.8236, -33.2663, 0.83 ) }
    dend_15 { pt3dadd( 9.00836, -23.4869, -37.8788, 0.83 ) }
    dend_15 { pt3dadd( 9.07659, -23.7785, -39.6904, 0.55 ) }
    dend_15 { pt3dadd( 9.07841, -23.9116, -40.4725, 0.83 ) }
    dend_15 { pt3dadd( 8.91392, -24.6108, -44.2799, 1.39 ) }
    dend_15 { pt3dadd( 8.36869, -25.4831, -49.1247, 1.11 ) }
    dend_15 { pt3dadd( 8.00134, -25.9939, -52.1251, 0.55 ) }
    dend_15 { pt3dadd( 7.79415, -26.2863, -53.7376, 0.83 ) }
    dend_15 { pt3dadd( 7.25005, -27.4045, -59.6307, 0.55 ) }
    dend_15 { pt3dadd( 7.11227, -27.8785, -61.9339, 0.28 ) }
    dend_15 { pt3dadd( 7.11709, -28.0925, -62.9431, 0.55 ) }
    dend_15 { pt3dadd( 7.17438, -29.7051, -70.3869, 0.28 ) }
    dend_15 { pt3dadd( 7.20016, -29.8899, -71.2621, 0.55 ) }
    dend_15 { pt3dadd( 7.32494, -30.3081, -73.2499, 0.28 ) }
    dend_15 { pt3dadd( 7.56717, -30.9075, -75.6309, 1.39 ) }
    dend_15 { pt3dadd( 8.53557, -32.7572, -83.9435, 0.28 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 65/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 10.3517, -9.00513, -4.24675, 1.11 ) }
    dend_13 { pt3dadd( 9.94645, -8.89743, -5.61235, 1.11 ) }
    dend_13 { pt3dadd( 9.6569, -8.77853, -6.59467, 0.83 ) }
    dend_13 { pt3dadd( 9.41452, -8.60987, -7.74593, 0.83 ) }
    dend_13 { pt3dadd( 8.82583, -8.13589, -11.0203, 0.83 ) }
    dend_13 { pt3dadd( 8.48339, -7.81102, -13.6397, 0.83 ) }
    dend_13 { pt3dadd( 8.40307, -7.71163, -14.4357, 0.83 ) }
    dend_13 { pt3dadd( 8.3148, -7.59408, -15.4911, 0.83 ) }
    dend_13 { pt3dadd( 7.86119, -6.84724, -20.8303, 0.83 ) }
    dend_13 { pt3dadd( 7.65532, -6.3867, -23.4612, 0.83 ) }
    dend_13 { pt3dadd( 7.47171, -5.91878, -25.4931, 0.83 ) }
    dend_13 { pt3dadd( 7.26689, -5.5578, -26.9592, 0.28 ) }
    dend_13 { pt3dadd( 7.08365, -5.312, -27.9189, 1.39 ) }
    dend_13 { pt3dadd( 6.52504, -4.65381, -30.2326, 0.55 ) }
    dend_13 { pt3dadd( 5.61398, -3.68388, -33.2517, 0.55 ) }
    dend_13 { pt3dadd( 4.94207, -3.01427, -35.2108, 1.11 ) }
    dend_13 { pt3dadd( 3.12098, -1.37486, -39.9071, 0.55 ) }
    dend_13 { pt3dadd( 2.63452, -0.984475, -41.1274, 0.55 ) }
    dend_13 { pt3dadd( 1.93419, -0.480191, -42.9368, 1.11 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 84/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 10.3517, -9.00513, -4.24675, 1.11 ) }
    dend_10 { pt3dadd( 12.7939, -9.74182, -6.14757, 1.11 ) }
    dend_10 { pt3dadd( 17.623, -10.6279, -9.32832, 1.11 ) }
    dend_10 { pt3dadd( 20.5201, -11.1924, -11.3072, 0.83 ) }
    dend_10 { pt3dadd( 22.15, -11.5631, -12.5706, 0.83 ) }
    dend_10 { pt3dadd( 24.2504, -12.0565, -14.671, 1.11 ) }
    dend_10 { pt3dadd( 26.6706, -12.603, -17.4848, 1.11 ) }
    dend_10 { pt3dadd( 29.5607, -13.1362, -21.0803, 1.11 ) }
    dend_10 { pt3dadd( 32.041, -13.5137, -24.3336, 0.83 ) }
    dend_10 { pt3dadd( 34.9799, -14.0192, -28.5964, 1.39 ) }
    dend_10 { pt3dadd( 39.228, -14.9838, -35.5547, 0.83 ) }
    dend_10 { pt3dadd( 42.1229, -15.9204, -40.9982, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 96/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 28.544, 10.9363, 27.3791, 0.55 ) }
    dend_6 { pt3dadd( 37.7387, 16.0809, 33.259, 0.55 ) }
    dend_6 { pt3dadd( 47.7506, 21.378, 37.4709, 0.55 ) }
    dend_6 { pt3dadd( 57.3998, 26.614, 42.501, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_6 { pt3dadd( 67.5677, 29.8945, 48.2029, 0.55 ) }
    dend_6 { pt3dadd( 78.2819, 32.235, 53.3607, 0.55 ) }
    dend_6 { pt3dadd( 87.8169, 35.4265, 60.098, 0.55 ) }
    dend_6 { pt3dadd( 96.8028, 37.5656, 67.9286, 0.55 ) }
    dend_6 { pt3dadd( 106.009, 38.5872, 75.7424, 0.55 ) }
    dend_6 { pt3dadd( 114.427, 37.5795, 84.3981, 0.55 ) }
    dend_6 { pt3dadd( 124.414, 36.8531, 91.2028, 0.55 ) }
    dend_6 { pt3dadd( 134.039, 38.212, 98.4403, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 8/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 28.544, 10.9363, 27.3791, 0.55 ) }
    dend_5 { pt3dadd( 38.8571, 14.4799, 33.0997, 0.55 ) }
    dend_5 { pt3dadd( 48.8911, 18.9793, 38.6056, 0.55 ) }
    dend_5 { pt3dadd( 59.6986, 23.1349, 42.8009, 0.55 ) }
    dend_5 { pt3dadd( 70.0707, 28.2662, 46.961, 0.55 ) }
    dend_5 { pt3dadd( 79.2723, 35.4623, 50.5876, 0.55 ) }
    dend_5 { pt3dadd( 89.8067, 41.1832, 53.3255, 0.55 ) }
    dend_5 { pt3dadd( 100.653, 46.8302, 54.7216, 0.55 ) }
    dend_5 { pt3dadd( 112.352, 50.7118, 54.7437, 0.55 ) }
    dend_5 { pt3dadd( 124.398, 53.2647, 55.096, 0.55 ) }
    dend_5 { pt3dadd( 136.576, 54.6636, 56.1484, 0.55 ) }
    dend_5 { pt3dadd( 148.823, 54.406, 56.0299, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_16 (entry count 20/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 9.89363, -16.1006, 1.2575, 0.83 ) }
    dend_30 { pt3dadd( 12.0125, -15.2453, 2.05222, 0.83 ) }
    dend_30 { pt3dadd( 17.7918, -12.2767, 4.09423, 0.83 ) }
    dend_30 { pt3dadd( 19.5077, -11.1972, 4.89081, 0.83 ) }
    dend_30 { pt3dadd( 21.8409, -9.57615, 6.17677, 0.83 ) }
    dend_30 { pt3dadd( 27.5759, -5.19887, 9.99204, 0.83 ) }
    dend_30 { pt3dadd( 30.3349, -3.07497, 11.9631, 0.83 ) }
    dend_30 { pt3dadd( 32.3394, -1.43235, 13.5259, 0.83 ) }
    dend_30 { pt3dadd( 36.208, 1.9425, 16.8102, 0.83 ) }
    dend_30 { pt3dadd( 39.6859, 4.7793, 19.6291, 0.55 ) }
    dend_30 { pt3dadd( 44.0796, 7.85645, 22.954, 0.55 ) }
    dend_30 { pt3dadd( 46.4376, 9.13594, 24.5744, 0.55 ) }
    dend_30 { pt3dadd( 49.2114, 10.2594, 26.2436, 0.55 ) }
    dend_30 { pt3dadd( 52.1834, 11.1344, 27.6615, 0.55 ) }
    dend_30 { pt3dadd( 56.2383, 12.1069, 29.1603, 0.55 ) }
    dend_30 { pt3dadd( 60.1421, 12.8172, 30.448, 0.55 ) }
    dend_30 { pt3dadd( 62.7771, 13.1625, 31.2216, 0.55 ) }
    dend_30 { pt3dadd( 66.7234, 13.5597, 32.416, 0.55 ) }
    dend_30 { pt3dadd( 70.6693, 13.9759, 33.7018, 0.55 ) }
    dend_30 { pt3dadd( 73.6464, 14.2766, 34.7735, 0.55 ) }
    dend_30 { pt3dadd( 76.922, 14.7292, 36.1601, 0.55 ) }
    dend_30 { pt3dadd( 78.8247, 15.0415, 36.9497, 0.55 ) }
    dend_30 { pt3dadd( 81.1975, 15.5146, 37.9245, 0.55 ) }
    dend_30 { pt3dadd( 85.4165, 16.6303, 39.5968, 0.55 ) }
    dend_30 { pt3dadd( 91.4751, 18.6274, 41.9801, 0.55 ) }
    dend_30 { pt3dadd( 93.9441, 19.5033, 42.8537, 0.55 ) }
    dend_30 { pt3dadd( 98.4965, 21.3291, 44.3577, 0.55 ) }
    dend_30 { pt3dadd( 100.988, 22.4404, 45.0807, 0.55 ) }
    dend_30 { pt3dadd( 105.674, 24.6644, 46.2503, 0.55 ) }
    dend_30 { pt3dadd( 108.405, 25.9637, 46.8439, 0.55 ) }
    dend_30 { pt3dadd( 112.591, 28.1076, 47.6715, 0.55 ) }
    dend_30 { pt3dadd( 114.332, 29.005, 47.9876, 0.55 ) }
    dend_30 { pt3dadd( 116.872, 30.4791, 48.5069, 0.55 ) }
    dend_30 { pt3dadd( 120.003, 32.1201, 49.0876, 0.55 ) }
    dend_30 { pt3dadd( 121.482, 32.8882, 49.3521, 0.55 ) }
    dend_30 { pt3dadd( 123.112, 33.6919, 49.6404, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 56/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 9.89363, -16.1006, 1.2575, 1.39 ) }
    dend_17 { pt3dadd( 11.9999, -19.3547, -0.0450869, 1.39 ) }
    dend_17 { pt3dadd( 13.6662, -21.9291, -1.07561, 1.39 ) }
    dend_17 { pt3dadd( 14.9801, -23.959, -1.88816, 1.11 ) }
    dend_17 { pt3dadd( 16.9792, -27.0475, -3.12444, 1.11 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 61/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 42.1229, -15.9204, -40.9982, 0.55 ) }
    dend_12 { pt3dadd( 41.6187, -13.0833, -48.1629, 0.55 ) }
    dend_12 { pt3dadd( 41.4626, -12.1473, -50.2543, 0.28 ) }
    dend_12 { pt3dadd( 41.4424, -12.0028, -50.5477, 0.83 ) }
    dend_12 { pt3dadd( 41.2953, -10.8839, -52.655, 0.28 ) }
    dend_12 { pt3dadd( 41.2339, -10.5026, -53.3885, 0.55 ) }
    dend_12 { pt3dadd( 41.0817, -9.61355, -55.0971, 0.28 ) }
    dend_12 { pt3dadd( 41.0098, -9.24465, -55.7352, 0.55 ) }
    dend_12 { pt3dadd( 40.7289, -8.02129, -58.058, 0.28 ) }
    dend_12 { pt3dadd( 40.675, -7.78825, -58.5145, 0.55 ) }
    dend_12 { pt3dadd( 40.1226, -5.53694, -63.0538, 0.28 ) }
    dend_12 { pt3dadd( 40.0987, -5.43133, -63.2627, 0.55 ) }
    dend_12 { pt3dadd( 39.776, -4.05731, -65.888, 0.28 ) }
    dend_12 { pt3dadd( 39.717, -3.80517, -66.3369, 0.83 ) }
    dend_12 { pt3dadd( 39.3951, -2.38153, -68.6208, 0.28 ) }
    dend_12 { pt3dadd( 39.3322, -2.05025, -69.103, 0.55 ) }
    dend_12 { pt3dadd( 38.6711, 1.82371, -73.9036, 0.28 ) }
    dend_12 { pt3dadd( 38.6367, 2.0316, -74.1498, 0.55 ) }
    dend_12 { pt3dadd( 38.4954, 2.8699, -75.2329, 0.28 ) }
    dend_12 { pt3dadd( 38.45, 3.15064, -75.6042, 0.55 ) }
    dend_12 { pt3dadd( 38.1901, 4.63945, -77.626, 0.28 ) }
    dend_12 { pt3dadd( 38.1157, 5.05355, -78.217, 0.55 ) }
    dend_12 { pt3dadd( 37.9015, 5.9986, -79.8116, 0.28 ) }
    dend_12 { pt3dadd( 37.2672, 8.88639, -85.3212, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 85/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 42.1229, -15.9204, -40.9982, 0.55 ) }
    dend_11 { pt3dadd( 43.4878, -16.2385, -43.5629, 0.55 ) }
    dend_11 { pt3dadd( 45.0986, -16.6153, -46.2725, 1.39 ) }
    dend_11 { pt3dadd( 45.3262, -16.6553, -46.6165, 1.39 ) }
    dend_11 { pt3dadd( 45.8533, -16.7282, -47.3614, 0.55 ) }
    dend_11 { pt3dadd( 47.4977, -16.8873, -49.5019, 0.55 ) }
    dend_11 { pt3dadd( 48.5327, -16.9613, -50.772, 0.55 ) }
    dend_11 { pt3dadd( 49.9528, -17.0071, -52.2192, 0.55 ) }
    dend_11 { pt3dadd( 50.9334, -17.0218, -53.085, 0.28 ) }
    dend_11 { pt3dadd( 51.2499, -17.0256, -53.3538, 0.55 ) }
    dend_11 { pt3dadd( 52.7146, -17.0188, -54.532, 0.28 ) }
    dend_11 { pt3dadd( 53.032, -17.0109, -54.7762, 0.55 ) }
    dend_11 { pt3dadd( 54.7845, -16.9838, -56.2291, 0.28 ) }
    dend_11 { pt3dadd( 55.4506, -16.9865, -56.8913, 0.28 ) }
    dend_11 { pt3dadd( 55.8303, -17.0047, -57.3478, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_11 { pt3dadd( 56.0097, -17.0108, -57.5852, 0.55 ) }
    dend_11 { pt3dadd( 56.9544, -17.031, -59.0287, 0.55 ) }
    dend_11 { pt3dadd( 58.0107, -16.9868, -60.8136, 0.28 ) }
    dend_11 { pt3dadd( 58.3695, -16.935, -61.4884, 0.55 ) }
    dend_11 { pt3dadd( 58.9556, -16.8299, -62.6928, 0.28 ) }
    dend_11 { pt3dadd( 59.2579, -16.7579, -63.3298, 0.55 ) }
    dend_11 { pt3dadd( 59.6278, -16.6354, -64.0912, 0.55 ) }
    dend_11 { pt3dadd( 59.8683, -16.4855, -64.5562, 0.28 ) }
    dend_11 { pt3dadd( 59.9935, -16.3815, -64.799, 0.55 ) }
    dend_11 { pt3dadd( 60.3301, -16.0679, -65.5191, 0.28 ) }
    dend_11 { pt3dadd( 60.4356, -15.966, -65.7739, 0.55 ) }
    dend_11 { pt3dadd( 60.8195, -15.6044, -66.7048, 0.28 ) }
    dend_11 { pt3dadd( 61.1436, -15.3011, -67.4734, 0.55 ) }
    dend_11 { pt3dadd( 61.7459, -14.7711, -68.9149, 0.28 ) }
    dend_11 { pt3dadd( 61.7942, -14.7283, -69.0332, 0.55 ) }
    dend_11 { pt3dadd( 62.3701, -14.2193, -70.4263, 0.28 ) }
    dend_11 { pt3dadd( 62.6081, -14.0148, -71.0098, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 17/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 123.112, 33.6919, 49.6404, 0.55 ) }
    dend_32 { pt3dadd( 126.604, 29.5911, 56.967, 0.55 ) }
    dend_32 { pt3dadd( 128.341, 27.551, 60.6118, 0.55 ) }
    dend_32 { pt3dadd( 131.456, 23.8928, 67.1475, 0.28 ) }
    dend_32 { pt3dadd( 135.82, 19.072, 75.9179, 0.28 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 22/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 123.112, 33.6919, 49.6404, 0.28 ) }
    dend_31 { pt3dadd( 122.021, 35.6429, 52.8018, 0.28 ) }
    dend_31 { pt3dadd( 121.118, 37.2577, 55.4182, 0.55 ) }
    dend_31 { pt3dadd( 120.084, 40.9165, 63.4821, 0.55 ) }
    dend_31 { pt3dadd( 118.326, 44.8164, 71.2945, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 27/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 16.9792, -27.0475, -3.12444, 0.83 ) }
    dend_23 { pt3dadd( 18.9047, -28.956, -4.55255, 0.83 ) }
    dend_23 { pt3dadd( 20.0705, -30.2303, -5.02754, 0.83 ) }
    dend_23 { pt3dadd( 20.9191, -31.3371, -5.14293, 0.83 ) }
    dend_23 { pt3dadd( 22.7253, -34.0841, -4.92095, 0.83 ) }
    dend_23 { pt3dadd( 24.9793, -37.7661, -4.32134, 0.83 ) }
    dend_23 { pt3dadd( 27.3784, -41.8755, -3.41309, 0.83 ) }
    dend_23 { pt3dadd( 29.8768, -46.6016, -1.93969, 0.83 ) }
    dend_23 { pt3dadd( 31.5253, -49.8342, -0.716479, 1.11 ) }
    dend_23 { pt3dadd( 32.8717, -52.6302, 0.538873, 0.83 ) }
    dend_23 { pt3dadd( 33.3203, -53.6515, 1.10954, 0.83 ) }
    dend_23 { pt3dadd( 34.0769, -55.8139, 2.49361, 0.83 ) }
    dend_23 { pt3dadd( 34.7222, -58.6485, 4.26423, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 40/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 16.9792, -27.0475, -3.12444, 0.83 ) }
    dend_18 { pt3dadd( 18.5851, -27.4002, -8.474, 0.83 ) }
    dend_18 { pt3dadd( 18.8506, -27.4586, -9.35868, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 43/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 34.7222, -58.6485, 4.26423, 0.83 ) }
    dend_25 { pt3dadd( 34.9215, -60.2515, 4.86756, 0.83 ) }
    dend_25 { pt3dadd( 35.0539, -61.4058, 5.20323, 0.83 ) }
    dend_25 { pt3dadd( 35.5534, -65.7586, 6.46905, 0.83 ) }
    dend_25 { pt3dadd( 36.0107, -69.7443, 7.62814, 0.83 ) }
    dend_25 { pt3dadd( 36.6216, -75.0687, 9.17654, 0.83 ) }
    dend_25 { pt3dadd( 37.1569, -79.7335, 10.5331, 0.55 ) }
    dend_25 { pt3dadd( 37.7236, -84.6128, 11.9809, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 51/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 34.7222, -58.6485, 4.26423, 0.55 ) }
    dend_24 { pt3dadd( 37.9334, -59.6466, 3.18143, 0.55 ) }
    dend_24 { pt3dadd( 43.0787, -61.5219, 1.25806, 0.55 ) }
    dend_24 { pt3dadd( 45.5819, -62.8424, 0.0534463, 0.55 ) }
    dend_24 { pt3dadd( 47.1329, -63.8243, -0.685117, 0.55 ) }
    dend_24 { pt3dadd( 49.4067, -65.3764, -1.59072, 0.55 ) }
    dend_24 { pt3dadd( 51.2509, -66.7061, -2.23825, 0.55 ) }
    dend_24 { pt3dadd( 55.0193, -70.152, -3.36596, 0.55 ) }
    dend_24 { pt3dadd( 59.3578, -75.0682, -4.15267, 0.55 ) }
    dend_24 { pt3dadd( 62.1463, -78.8603, -4.49545, 0.55 ) }
    dend_24 { pt3dadd( 65.7469, -84.4563, -4.75158, 0.55 ) }
    dend_24 { pt3dadd( 67.0904, -86.7928, -4.80439, 0.55 ) }
    dend_24 { pt3dadd( 71.4844, -95.2314, -4.68068, 0.55 ) }
    dend_24 { pt3dadd( 73.5451, -99.7458, -4.44027, 0.55 ) }
    dend_24 { pt3dadd( 74.7189, -102.622, -4.23578, 0.55 ) }
    dend_24 { pt3dadd( 75.5368, -105.185, -4.16722, 0.55 ) }
    dend_24 { pt3dadd( 76.221, -107.84, -4.31763, 0.28 ) }
    dend_24 { pt3dadd( 76.4362, -108.566, -4.42703, 0.55 ) }
    dend_24 { pt3dadd( 77.5618, -111.122, -5.273, 0.28 ) }
    dend_24 { pt3dadd( 78.1929, -112.122, -5.80475, 0.55 ) }
    dend_24 { pt3dadd( 78.9662, -113.167, -6.42287, 0.55 ) }
    dend_24 { pt3dadd( 81.0867, -115.952, -7.95541, 0.55 ) }
    dend_24 { pt3dadd( 82.1317, -117.16, -8.65891, 0.55 ) }
    dend_24 { pt3dadd( 83.8487, -118.96, -9.81098, 0.55 ) }
    dend_24 { pt3dadd( 86.7577, -121.778, -11.5611, 0.28 ) }
    dend_24 { pt3dadd( 87.3137, -122.268, -11.8849, 0.55 ) }
    dend_24 { pt3dadd( 90.587, -124.944, -13.6872, 0.55 ) }
    dend_24 { pt3dadd( 94.7222, -128.036, -15.8294, 0.55 ) }
    dend_24 { pt3dadd( 99.4337, -131.223, -18.171, 0.28 ) }
    dend_24 { pt3dadd( 101.52, -132.399, -19.1249, 0.55 ) }
    dend_24 { pt3dadd( 104.44, -133.801, -20.2287, 0.28 ) }
    dend_24 { pt3dadd( 105.17, -134.076, -20.4407, 0.55 ) }
    dend_24 { pt3dadd( 107.565, -134.647, -20.8618, 0.28 ) }
    dend_24 { pt3dadd( 108.374, -134.761, -20.8474, 0.55 ) }
    dend_24 { pt3dadd( 112.021, -135.138, -20.3376, 0.28 ) }
    dend_24 { pt3dadd( 114.287, -135.362, -19.9858, 0.55 ) }
    dend_24 { pt3dadd( 117.921, -135.717, -19.1607, 0.28 ) }
    dend_24 { pt3dadd( 119.471, -135.892, -18.7652, 0.28 ) }
    dend_24 { pt3dadd( 121.856, -136.266, -18.0283, 0.55 ) }
    dend_24 { pt3dadd( 127.087, -137.228, -16.2073, 0.28 ) }
    // Section: dend_22, id: dend_22, parent: dend_18 (entry count 91/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 18.8506, -27.4586, -9.35868, 0.83 ) }
    dend_22 { pt3dadd( 16.9801, -30.6209, -15.8427, 0.83 ) }
    dend_22 { pt3dadd( 16.4349, -31.6057, -17.8258, 0.83 ) }
    dend_22 { pt3dadd( 15.669, -33.2112, -21.3637, 0.55 ) }
    dend_22 { pt3dadd( 15.3936, -33.9017, -22.7892, 0.55 ) }
    dend_22 { pt3dadd( 15.0948, -34.8383, -24.6956, 0.55 ) }
    dend_22 { pt3dadd( 14.6419, -36.5673, -28.0772, 0.55 ) }
    dend_22 { pt3dadd( 14.3075, -38.5372, -31.1843, 0.55 ) }
    dend_22 { pt3dadd( 14.105, -41.4235, -35.2735, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_22 { pt3dadd( 14.1686, -43.0719, -37.3354, 0.83 ) }
    dend_22 { pt3dadd( 14.336, -45.1548, -39.7019, 0.28 ) }
    dend_22 { pt3dadd( 14.4459, -46.059, -40.6797, 1.11 ) }
    dend_22 { pt3dadd( 15.0539, -50.8046, -45.4671, 0.28 ) }
    dend_22 { pt3dadd( 15.2703, -52.5164, -47.0867, 1.39 ) }
    dend_22 { pt3dadd( 16.1081, -59.5147, -53.3404, 0.28 ) }
    dend_22 { pt3dadd( 16.2342, -60.5598, -54.3054, 1.11 ) }
    dend_22 { pt3dadd( 16.5254, -63.2217, -56.7347, 0.28 ) }
    dend_22 { pt3dadd( 16.5883, -63.7497, -57.2599, 0.83 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 9/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 18.8506, -27.4586, -9.35868, 0.83 ) }
    dend_19 { pt3dadd( 22.3165, -28.5414, -15.2308, 0.83 ) }
    dend_19 { pt3dadd( 24.4725, -29.215, -18.8836, 0.83 ) }
    dend_19 { pt3dadd( 25.9685, -29.6824, -21.4182, 0.83 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 13/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 37.7236, -84.6128, 11.9809, 0.55 ) }
    dend_27 { pt3dadd( 36.9254, -87.3655, 5.99541, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 15/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 37.7236, -84.6128, 11.9809, 0.55 ) }
    dend_26 { pt3dadd( 38.4732, -87.0631, 11.7726, 0.55 ) }
    dend_26 { pt3dadd( 39.0729, -88.8021, 11.5901, 0.55 ) }
    dend_26 { pt3dadd( 39.74, -90.8633, 11.3651, 0.55 ) }
    dend_26 { pt3dadd( 40.2766, -92.5746, 11.1775, 0.55 ) }
    dend_26 { pt3dadd( 41.2791, -95.8748, 10.7226, 0.28 ) }
    dend_26 { pt3dadd( 41.5665, -96.8719, 10.5731, 0.55 ) }
    dend_26 { pt3dadd( 42.0626, -98.7544, 10.1767, 0.28 ) }
    dend_26 { pt3dadd( 42.4166, -100.057, 9.89513, 0.28 ) }
    dend_26 { pt3dadd( 42.5643, -100.589, 9.76181, 0.55 ) }
    dend_26 { pt3dadd( 43.3364, -103.396, 9.02982, 0.28 ) }
    dend_26 { pt3dadd( 43.4597, -103.942, 8.89807, 0.55 ) }
    dend_26 { pt3dadd( 43.8575, -105.824, 8.40107, 0.28 ) }
    dend_26 { pt3dadd( 43.9951, -106.506, 8.18417, 0.55 ) }
    dend_26 { pt3dadd( 44.6157, -109.19, 7.26089, 0.28 ) }
    dend_26 { pt3dadd( 44.7413, -109.708, 7.05307, 0.55 ) }
    dend_26 { pt3dadd( 45.0061, -110.627, 6.68127, 0.28 ) }
    dend_26 { pt3dadd( 45.1812, -111.148, 6.49875, 0.55 ) }
    dend_26 { pt3dadd( 46.2398, -113.623, 5.89974, 0.28 ) }
    dend_26 { pt3dadd( 46.6145, -114.338, 5.79313, 0.55 ) }
    dend_26 { pt3dadd( 47.7056, -116.06, 5.85857, 0.28 ) }
    dend_26 { pt3dadd( 49.5814, -118.826, 6.26785, 0.55 ) }
    dend_26 { pt3dadd( 50.8339, -120.569, 6.81576, 0.55 ) }
    dend_26 { pt3dadd( 52.8431, -123.384, 8.09593, 0.28 ) }
    dend_26 { pt3dadd( 53.4559, -124.225, 8.61258, 0.55 ) }
    dend_26 { pt3dadd( 55.3186, -126.832, 10.4258, 0.28 ) }
    dend_26 { pt3dadd( 55.598, -127.233, 10.752, 0.55 ) }
    dend_26 { pt3dadd( 57.046, -129.474, 12.6473, 0.28 ) }
    dend_26 { pt3dadd( 57.423, -130.152, 13.1845, 0.28 ) }
    dend_26 { pt3dadd( 57.5439, -130.427, 13.3947, 0.55 ) }
    dend_26 { pt3dadd( 58.0752, -131.809, 14.3092, 0.28 ) }
    dend_26 { pt3dadd( 58.0866, -131.841, 14.3229, 0.55 ) }
    dend_26 { pt3dadd( 58.9858, -134.209, 15.2139, 0.28 ) }
    dend_26 { pt3dadd( 59.3683, -135.262, 15.455, 0.55 ) }
    dend_26 { pt3dadd( 62.4869, -143.646, 17.7394, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 50/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 25.9685, -29.6824, -21.4182, 0.55 ) }
    dend_21 { pt3dadd( 24.3287, -32.223, -24.0025, 0.55 ) }
    dend_21 { pt3dadd( 23.5091, -33.6656, -25.6528, 0.55 ) }
    dend_21 { pt3dadd( 22.838, -35.0389, -27.1828, 0.28 ) }
    dend_21 { pt3dadd( 22.2433, -36.3139, -28.5702, 0.28 ) }
    dend_21 { pt3dadd( 22.0475, -36.8996, -29.3316, 0.83 ) }
    dend_21 { pt3dadd( 21.5923, -38.6288, -31.5871, 0.28 ) }
    dend_21 { pt3dadd( 21.49, -39.3935, -32.6019, 0.83 ) }
    dend_21 { pt3dadd( 21.2894, -41.1554, -34.8359, 0.83 ) }
    dend_21 { pt3dadd( 21.2263, -41.8985, -35.6836, 0.83 ) }
    dend_21 { pt3dadd( 20.9219, -46.1699, -40.1315, 0.28 ) }
    dend_21 { pt3dadd( 20.7481, -48.5983, -42.5845, 0.28 ) }
    dend_21 { pt3dadd( 20.6587, -49.7137, -43.6451, 0.55 ) }
    dend_21 { pt3dadd( 20.5809, -50.722, -44.5798, 0.55 ) }
    dend_21 { pt3dadd( 20.1402, -57.1587, -50.4226, 0.28 ) }
    dend_21 { pt3dadd( 20.0781, -57.9098, -51.0403, 0.83 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 66/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 25.9685, -29.6824, -21.4182, 0.83 ) }
    dend_20 { pt3dadd( 30.1328, -32.7988, -27.8977, 0.83 ) }
    dend_20 { pt3dadd( 31.7022, -34.5051, -30.177, 0.28 ) }
    dend_20 { pt3dadd( 32.4657, -35.6166, -31.1963, 0.83 ) }
    dend_20 { pt3dadd( 35.6308, -41.121, -35.019, 0.55 ) }
    dend_20 { pt3dadd( 36.5212, -42.7767, -35.9983, 0.55 ) }
    dend_20 { pt3dadd( 38.2028, -45.9318, -37.94, 0.28 ) }
    dend_20 { pt3dadd( 39.9064, -49.444, -39.855, 0.55 ) }
    dend_20 { pt3dadd( 41.6963, -53.0089, -41.8387, 0.55 ) }
    dend_20 { pt3dadd( 44.7091, -58.8265, -45.1392, 0.28 ) }
    dend_20 { pt3dadd( 45.8066, -60.9876, -46.2999, 1.11 ) }
    dend_20 { pt3dadd( 50.8445, -70.5357, -51.5745, 0.28 ) }
    dend_20 { pt3dadd( 52.0939, -72.8146, -52.8979, 1.11 ) }
    dend_20 { pt3dadd( 55.2928, -78.6706, -56.344, 0.28 ) }
    dend_20 { pt3dadd( 55.9886, -80.0476, -57.0627, 1.11 ) }
    dend_20 { pt3dadd( 59.2677, -87.4461, -60.2711, 0.28 ) }
    dend_20 { pt3dadd( 59.6116, -88.3771, -60.585, 0.83 ) }
    dend_20 { pt3dadd( 60.0964, -90.1095, -60.9847, 0.28 ) }
    dend_20 { pt3dadd( 60.4654, -92.182, -61.4244, 0.55 ) }
    dend_20 { pt3dadd( 61.2749, -101.754, -63.5284, 0.28 ) }
    dend_20 { pt3dadd( 61.2993, -103.08, -63.874, 0.55 ) }
    dend_20 { pt3dadd( 61.1297, -105.591, -64.7929, 0.28 ) }
    dend_20 { pt3dadd( 60.8295, -109.696, -66.5709, 1.11 ) }
    dend_20 { pt3dadd( 60.4206, -114.322, -68.9224, 0.28 ) }
    dend_20 { pt3dadd( 60.2904, -115.966, -69.9763, 0.83 ) }
    dend_20 { pt3dadd( 60.0972, -117.808, -71.5739, 0.28 ) }
    dend_20 { pt3dadd( 60.137, -121.308, -74.8325, 0.55 ) }
    dend_20 { pt3dadd( 60.6851, -123.769, -77.457, 0.28 ) }
    dend_20 { pt3dadd( 60.7848, -123.99, -77.7009, 0.83 ) }
    dend_20 { pt3dadd( 61.6505, -124.954, -79.0081, 0.28 ) }
    dend_20 { pt3dadd( 61.9185, -125.199, -79.3246, 0.55 ) }
    dend_20 { pt3dadd( 63.9659, -126.701, -81.2747, 0.28 ) }
    dend_20 { pt3dadd( 65.8028, -128.182, -82.5316, 1.11 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 99/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 36.9254, -87.3655, 5.99541, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_29 { pt3dadd( 34.9138, -90.4779, 3.29968, 0.55 ) }
    dend_29 { pt3dadd( 33.2008, -93.4725, 0.547792, 0.55 ) }
    dend_29 { pt3dadd( 32.4392, -95.0454, -1.04191, 0.55 ) }
    dend_29 { pt3dadd( 31.5297, -97.6284, -3.64475, 0.55 ) }
    dend_29 { pt3dadd( 30.793, -100.263, -6.25957, 0.28 ) }
    dend_29 { pt3dadd( 30.5886, -101.314, -7.32447, 0.55 ) }
    dend_29 { pt3dadd( 30.4596, -102.928, -8.95887, 0.28 ) }
    dend_29 { pt3dadd( 30.5428, -104.753, -10.8579, 1.39 ) }
    dend_29 { pt3dadd( 30.7392, -107.663, -13.6628, 0.28 ) }
    dend_29 { pt3dadd( 30.7545, -108.45, -14.3369, 0.83 ) }
    dend_29 { pt3dadd( 30.6247, -111.531, -16.6907, 0.28 ) }
    dend_29 { pt3dadd( 30.5081, -112.593, -17.4102, 0.55 ) }
    dend_29 { pt3dadd( 30.2979, -113.73, -18.0427, 0.55 ) }
    dend_29 { pt3dadd( 29.2326, -118.009, -19.9281, 0.28 ) }
    dend_29 { pt3dadd( 28.6266, -119.951, -20.7148, 0.28 ) }
    dend_29 { pt3dadd( 28.039, -121.666, -21.3366, 0.55 ) }
    dend_29 { pt3dadd( 27.1014, -124.096, -22.0353, 0.28 ) }
    dend_29 { pt3dadd( 26.6984, -125.203, -22.3691, 0.55 ) }
    dend_29 { pt3dadd( 25.755, -128.151, -23.1139, 0.28 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 19/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 36.9254, -87.3655, 5.99541, 0.55 ) }
    dend_28 { pt3dadd( 35.1967, -86.7325, 5.9975, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_55, dend_48, dend_45, dend_40, dend_33, dend_8, dend_3, dend_0, dend_57, dend_56, dend_52, dend_49, dend_47, dend_46, dend_44, dend_41, dend_37, dend_34, dend_14, dend_9, dend_7, dend_4, dend_2, dend_1, dend_54, dend_53, dend_51, dend_50, dend_43, dend_42, dend_39, dend_38, dend_36, dend_35, dend_16, dend_15, dend_13, dend_10, dend_6, dend_5, dend_30, dend_17, dend_12, dend_11, dend_32, dend_31, dend_23, dend_18, dend_25, dend_24, dend_22, dend_19, dend_27, dend_26, dend_21, dend_20, dend_29, dend_28]}
    ModelViewParmSubset_2 = new SectionList()
    dend_55 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_55, dend_48, dend_45, dend_40, dend_33, dend_8, dend_3, dend_0, dend_57, dend_56, dend_52, dend_49, dend_47, dend_46, dend_44, dend_41, dend_37, dend_34, dend_14, dend_9, dend_7, dend_4, dend_2, dend_1, dend_54, dend_53, dend_51, dend_50, dend_43, dend_42, dend_39, dend_38, dend_36, dend_35, dend_16, dend_15, dend_13, dend_10, dend_6, dend_5, dend_30, dend_17, dend_12, dend_11, dend_32, dend_31, dend_23, dend_18, dend_25, dend_24, dend_22, dend_19, dend_27, dend_26, dend_21, dend_20, dend_29, dend_28]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_55 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_45 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_44 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_34 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_2 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_1 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_54 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_53 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_51 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_50 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_43 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_42 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_39 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_38 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_36 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_15 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_13 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_10 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_6 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_5 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_30 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_12 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_24 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_22 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_26 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_21 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_20 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_29 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_0 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_8 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_40 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_14 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_48 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_33 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_16 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_9 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_41 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_52 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_3 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_17 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_49 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_37 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_4 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_19 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_7 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_47 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_25 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_46 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_27 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_11 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_28 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_57 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_56 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_35 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_31 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_32 OneSecGrp_SectionRef_48.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_33, dend_33, dend_33, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, axon_0, axon_0, dend_57, dend_57, dend_56, dend_56, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_14, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_14 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_29 all.append()
    dend_28 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_55 nseg = 5
    dend_45 nseg = 3
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_2 nseg = 3
    dend_1 nseg = 5
    dend_54 nseg = 5
    dend_53 nseg = 5
    dend_51 nseg = 5
    dend_50 nseg = 3
    dend_43 nseg = 5
    dend_42 nseg = 5
    dend_39 nseg = 7
    dend_38 nseg = 5
    dend_36 nseg = 3
    dend_15 nseg = 5
    dend_13 nseg = 3
    dend_10 nseg = 3
    dend_6 nseg = 7
    dend_5 nseg = 7
    dend_30 nseg = 7
    dend_12 nseg = 3
    dend_24 nseg = 7
    dend_22 nseg = 3
    dend_26 nseg = 3
    dend_21 nseg = 3
    dend_20 nseg = 7
    dend_29 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L23_NBC_9004ab9cec_0_0


