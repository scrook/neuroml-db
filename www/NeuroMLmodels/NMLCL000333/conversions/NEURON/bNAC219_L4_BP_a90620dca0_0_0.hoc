// Cell: bNAC219_L4_BP_a90620dca0_0_0
/*
{
  "id" : "bNAC219_L4_BP_a90620dca0_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.08452, 6.27464, 0.312461, 1.46623", "-2.79927, 5.64032, 0.287115, 2.64844", "-2.51401, 5.00599, 0.26177, 4.10361", "-2.22875, 4.37167, 0.236425, 4.91598", "-1.94349, 3.73735, 0.21108, 5.72835", "-1.65823, 3.10303, 0.185734, 6.53421", "-1.37297, 2.46871, 0.160389, 7.31212", "-1.08771, 1.83438, 0.135044, 8.08989", "-0.802456, 1.20006, 0.109699, 8.85679", "-0.517198, 0.56574, 0.0843534, 8.93483", "-0.23194, -0.0685822, 0.0590082, 8.92633", "0.0533189, -0.702904, 0.033663, 8.91784", "0.338577, -1.33723, 0.00831775, 8.90934", "0.623836, -1.97155, -0.0170275, 8.90084", "0.909094, -2.60587, -0.0423727, 8.82493", "1.19435, -3.24019, -0.067718, 7.82232", "1.47961, -3.87451, -0.0930632, 6.5965", "1.76487, -4.50884, -0.118408, 5.37067", "2.05013, -5.14316, -0.143754, 4.14485", "2.33539, -5.77748, -0.169099, 2.91903", "2.62064, -6.4118, -0.194444, 1.76337" ]
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.61629, -5.55298, -1.26548, 1.33", "2.66269, -9.87312, -2.10448, 1.33", "4.39759, -17.0358, -3.49554, 0.66", "5.74079, -22.5814, -4.57253, 0.66", "7.1721, -28.4908, -5.72016, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001318721313
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.62064, -6.4118, -0.194444, 0.33", "8.77276, -20.0921, -0.194444, 0.33", "14.9249, -33.7725, -0.194444, 0.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "7.1721, -28.4908, -5.72016, 0.66", "7.58411, -38.0914, -3.28831, 0.66", "8.18145, -52.3517, 0.342952, 0.66", "8.90473, -69.7591, 4.91759, 0.66", "9.52276, -83.1933, 8.46587, 0.66", "9.89187, -90.9882, 10.5181, 0.66", "10.0045, -93.5753, 11.1939, 0.66", "10.1699, -97.0843, 12.1371, 0.66", "10.2661, -100.366, 13.0438, 0.66", "10.3752, -104.154, 14.0177, 0.66", "10.443, -106.2, 14.2785, 0.66", "10.4966, -108.755, 14.3624, 0.66", "10.6101, -112.609, 14.0287, 0.66", "10.7264, -117.675, 13.3383, 0.66", "10.8218, -119.881, 13.0179, 0.66", "11.3543, -130.24, 11.4148, 0.66", "11.5411, -132.685, 10.9949, 0.66", "12.2623, -140.234, 9.50392, 0.66", "12.6034, -143.421, 8.8467, 0.66", "13.3362, -149.275, 7.71869, 0.66", "13.7624, -152.629, 7.30173, 0.66", "14.1836, -155.892, 7.23866, 0.66", "14.5922, -159.041, 7.29431, 0.66", "14.8647, -162.078, 7.35549, 0.66", "15.1017, -165.294, 7.28942, 0.66", "15.2855, -170.266, 7.11165, 0.66", "15.4291, -173.287, 7.15055, 0.66", "15.5497, -176.952, 7.25195, 0.66", "15.696, -181.914, 7.36427, 0.66", "15.7585, -185.082, 7.2831, 0.66", "15.8711, -189.344, 6.97927, 0.66", "16.1092, -193.357, 6.65628, 0.66" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "7.1721, -28.4908, -5.72016, 0.66", "10.4832, -31.0129, -5.98845, 0.66", "18.095, -36.8113, -6.60522, 0.33", "35.5188, -50.0838, -8.01703, 0.33", "36.1762, -50.5846, -8.0703, 0.66", "43.2076, -55.9407, -8.64003, 0.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "14.9249, -33.7725, -0.194444, 0.33", "21.077, -47.4528, -0.194444, 0.33", "27.2291, -61.1331, -0.194444, 0.33" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "16.1092, -193.357, 6.65628, 0.66", "18.6468, -196.393, 8.53035, 0.66", "19.948, -198.128, 9.84249, 0.66", "21.6771, -200.822, 12.6671, 0.66", "22.6858, -202.434, 14.6319, 0.66", "24.495, -205.402, 18.6155, 0.66", "25.8871, -207.562, 21.6684, 0.66", "27.1365, -209.535, 24.8187, 0.66", "29.8681, -213.348, 31.5763, 0.66", "31.4489, -215.337, 35.4071, 0.66", "33.2666, -217.639, 39.9402, 0.33", "34.0371, -218.54, 41.6978, 0.33", "34.3308, -218.824, 42.2849, 0.66", "36.2303, -220.313, 45.6093, 0.33", "36.738, -220.589, 46.1435, 0.66" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "16.1092, -193.357, 6.65628, 0.66", "16.7276, -197.521, 8.03574, 0.66", "17.5176, -202.902, 9.84693, 0.66", "19.2656, -213.663, 13.306, 0.66", "19.9794, -218.352, 14.7582, 0.66", "20.9431, -224.06, 16.5717, 0.66", "21.8651, -229.861, 18.2396, 0.66", "22.3748, -233.123, 19.0684, 0.66", "22.9149, -237.64, 20.0233, 0.66", "23.8674, -246.332, 21.5206, 0.66", "24.4, -251.274, 22.1354, 0.66", "24.9694, -257.073, 22.7604, 0.66", "25.3095, -261.985, 22.9722, 0.66", "25.4197, -264.649, 23.0587, 0.66", "25.6247, -273.605, 23.2148, 0.66", "25.705, -278.241, 23.1491, 0.66", "25.6983, -284.669, 23.0047, 0.66", "25.8328, -289.814, 23.0979, 0.66", "25.8923, -292.098, 23.1129, 0.66" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "25.8923, -292.098, 23.1129, 0.66", "26.2832, -294.608, 23.3499, 0.66", "26.6804, -298.689, 24.1515, 0.66", "27.028, -303.045, 25.1438, 0.66", "27.1776, -305.905, 25.8097, 0.66", "27.365, -309.859, 26.6375, 0.66", "27.6005, -316.856, 27.8674, 0.66", "27.6374, -321.645, 28.6103, 0.66", "27.6006, -324.933, 29.1522, 0.66", "27.5999, -328.371, 29.6303, 0.66", "27.6372, -332.226, 30.1263, 0.66", "27.6962, -334.863, 30.4388, 0.66", "27.8831, -338.481, 30.7733, 0.66", "28.1323, -341.807, 31.0662, 0.66", "28.7184, -349.627, 31.9436, 0.66", "29.0054, -352.734, 32.3514, 0.66", "29.6476, -360.536, 33.3078, 0.66", "29.883, -363.683, 33.5771, 0.66", "30.0709, -366.715, 33.7183, 0.66", "30.2229, -369.444, 33.7278, 0.66", "30.4127, -373.915, 33.6806, 0.66", "30.5216, -377.74, 33.5934, 0.66", "30.7039, -385.096, 33.1569, 0.66", "30.8815, -388.809, 32.9519, 0.66", "31.0377, -391.699, 32.8104, 0.66", "31.2864, -395.586, 32.6504, 0.66", "32.2489, -410.211, 32.017, 0.66", "32.687, -415.581, 31.6958, 0.66", "33.917, -429.679, 30.6585, 0.66", "34.4074, -435.005, 30.1985, 0.66", "34.9129, -440.246, 29.7885, 0.66", "35.2957, -443.89, 29.531, 0.66", "35.883, -448.876, 29.1561, 0.66", "36.4226, -454.425, 28.75, 0.66", "36.9747, -460.475, 28.0733, 0.66", "37.2593, -463.856, 27.7, 0.66", "37.4555, -466.214, 27.5122, 0.66", "38.1445, -475.359, 27.3084, 0.66", "38.3558, -478.21, 27.253, 0.66", "38.6636, -482.889, 26.9446, 0.66", "38.9886, -487.567, 26.5608, 0.66", "39.3026, -491.19, 26.3039, 0.66", "40.1276, -500.059, 26.0536, 0.66", "41.1851, -510.242, 26.0496, 0.66", "41.9567, -517.172, 26.0164, 0.66", "42.3413, -520.656, 25.9306, 0.66", "43.8002, -533.399, 25.366, 0.66", "44.647, -541.576, 24.6713, 0.66", "44.9, -543.965, 24.4179, 0.66", "45.3363, -547.836, 23.9159, 0.66", "45.9909, -553.51, 23.002, 0.66", "46.2271, -555.962, 22.5084, 0.66", "46.7723, -562.528, 20.8893, 0.66", "47.9972, -576.217, 17.291, 0.66", "48.6585, -583.281, 15.6735, 0.66", "48.9321, -585.918, 15.1697, 0.33", "49.1373, -587.68, 14.9039, 1.33", "49.736, -591.856, 14.5473, 0.66", "50.6541, -596.892, 14.462, 0.66", "51.3869, -600.466, 14.5279, 0.66", "52.1756, -604.084, 14.7186, 0.66", "52.8987, -607.041, 14.8662, 0.66", "55.897, -619.193, 15.812, 0.66", "56.3045, -620.908, 15.9905, 0.33", "56.8372, -623.36, 16.2354, 1.33", "57.3585, -625.792, 16.4206, 0.66", "57.7419, -627.705, 16.5557, 0.33", "58.7353, -632.987, 16.9528, 0.66", "59.0018, -635.723, 17.4196, 0.66", "59.2484, -639.343, 18.2097, 0.33" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "25.8923, -292.098, 23.1129, 0.66", "23.8097, -297.625, 23.6164, 0.66", "22.0817, -302.318, 23.9699, 0.66", "20.9541, -305.839, 24.4434, 0.33", "19.4606, -310.79, 25.2897, 0.33", "19.2264, -311.598, 25.4697, 0.66", "18.533, -314.219, 26.1078, 0.33", "18.0999, -316.129, 26.6758, 0.66", "17.1902, -320.659, 27.8548, 0.33", "17.0658, -321.375, 28.0592, 0.66", "16.2124, -326.224, 29.4303, 0.33", "15.9108, -328.736, 30.2022, 0.33", "15.7243, -331.466, 31.0805, 0.66", "15.6058, -334.735, 32.2011, 0.33", "15.5923, -336.501, 32.7595, 0.33", "15.6631, -337.492, 33.1085, 0.66", "16.4709, -341.644, 35.1054, 0.33", "16.6163, -342.247, 35.479, 0.66", "17.0883, -343.765, 36.5595, 0.33", "17.3202, -344.544, 37.1355, 0.33", "17.5142, -345.372, 37.664, 0.66", "18.0021, -348.481, 39.342, 0.33", "18.0647, -350.39, 40.0861, 0.33", "18.0853, -351.113, 40.3149, 0.66", "18.1301, -352.519, 40.6257, 0.33", "18.1321, -353.266, 40.741, 0.66", "18.1128, -354.216, 40.8324, 0.33", "18.0665, -355.201, 40.8571, 0.66", "17.9818, -356.645, 40.9263, 0.33", "17.9433, -357.171, 40.9654, 0.66", "17.5796, -361.525, 41.4109, 0.33", "17.5505, -361.804, 41.4423, 0.66", "17.4133, -362.804, 41.5708, 0.33", "17.3278, -363.325, 41.6441, 0.66", "17.1789, -364.741, 41.9736, 0.33", "17.1432, -365.389, 42.163, 0.66", "17.1399, -366.547, 42.5452, 0.33", "17.1544, -367.367, 42.8234, 0.66", "17.207, -368.305, 43.1594, 0.33", "17.568, -372.669, 44.8472, 0.33", "17.7189, -373.942, 45.397, 0.66" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "59.2484, -639.343, 18.2097, 0.66", "59.9663, -642.843, 17.4381, 0.66", "60.3657, -644.66, 17.4843, 1.33", "60.6895, -646.224, 17.6653, 0.66", "61.0516, -648.192, 17.8376, 0.66", "61.826, -652.433, 18.4201, 0.33", "62.8107, -657.562, 19.2602, 0.66", "64.0814, -664.191, 20.7812, 0.66", "64.7708, -667.49, 21.6675, 0.66", "65.6201, -671.164, 22.5629, 0.33", "66.7407, -675.861, 23.5104, 0.33", "67.0377, -677.189, 23.6783, 0.66", "67.3332, -678.285, 23.6026, 0.33", "67.581, -679.232, 23.3806, 0.66", "69.0639, -684.752, 21.8179, 0.33", "69.7121, -687.056, 21.1627, 0.66", "70.2992, -689.24, 20.4579, 0.33", "71.8286, -695.453, 18.7441, 0.33", "72.7394, -699.094, 17.8983, 0.66", "74.3964, -705.691, 16.639, 0.33", "75.1496, -708.806, 16.2163, 0.66", "75.8995, -711.882, 15.8777, 1.33", "77.605, -718.906, 15.403, 0.33", "78.3958, -722.389, 15.4002, 0.33", "78.6997, -723.76, 15.4352, 0.66", "79.3918, -727.218, 15.6572, 0.33", "80.2541, -731.862, 16.0383, 0.33", "80.5801, -733.558, 16.2339, 1.33", "81.4889, -738.43, 16.793, 0.33", "81.7269, -740.121, 17.0058, 0.66" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "59.2484, -639.343, 18.2097, 0.66", "58.5837, -641.111, 16.0289, 0.66" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "81.7269, -740.121, 17.0058, 0.66", "79.9364, -739.833, 17.9383, 0.66" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "81.7269, -740.121, 17.0058, 0.66", "81.9068, -741.314, 16.8398, 0.66", "82.7078, -746.626, 16.1006, 0.33", "82.9625, -748.316, 15.8655, 1.33" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "82.9625, -748.316, 15.8655, 0.33", "87.4061, -758.282, 23.3019, 0.33", "87.848, -759.25, 23.9488, 1.33", "89.1536, -761.954, 25.605, 0.33", "89.4487, -762.514, 25.8763, 0.66", "90.9681, -765.177, 26.9025, 0.33", "91.4292, -765.985, 27.2139, 0.66", "91.8923, -766.715, 27.1314, 0.33", "92.5434, -767.624, 26.9945, 0.66", "94.9901, -770.444, 26.3511, 0.33", "95.9733, -771.46, 26.0546, 1.33" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "82.9625, -748.316, 15.8655, 0.33", "84.239, -759.644, 19.6407, 0.33", "84.9352, -765.822, 21.6996, 0.33", "85.0446, -766.793, 22.0232, 0.66", "85.7632, -773.169, 24.1482, 0.33", "85.8589, -774.019, 24.4315, 0.66" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_2", "dend_1", "dend_12", "dend_3", "dend_5", "dend_4", "dend_7", "dend_6", "dend_11", "dend_8", "dend_10", "dend_9" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_0", "dend_2", "dend_1", "dend_12", "dend_3", "dend_5", "dend_4", "dend_7", "dend_6", "dend_11", "dend_8", "dend_10", "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_11", "dend_8", "dend_8", "dend_8", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L4_BP_a90620dca0_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_12, id: dend_12, parent: dend_2
create dend_12
public dend_12
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_0, dend_2, dend_1, dend_12, dend_3, dend_5, dend_4, dend_7, dend_6, dend_11, dend_8, dend_10, dend_9]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_0, dend_2, dend_1, dend_12, dend_3, dend_5, dend_4, dend_7, dend_6, dend_11, dend_8, dend_10, dend_9]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_15
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_11, dend_8, dend_8, dend_8, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_0(0), soma_0(0.4500001318721313)
    connect axon_0(0), soma_0(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_12(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.08452, 6.27464, 0.312461, 1.46623 ) }
    soma_0 { pt3dadd( -2.79927, 5.64032, 0.287115, 2.64844 ) }
    soma_0 { pt3dadd( -2.51401, 5.00599, 0.26177, 4.10361 ) }
    soma_0 { pt3dadd( -2.22875, 4.37167, 0.236425, 4.91598 ) }
    soma_0 { pt3dadd( -1.94349, 3.73735, 0.21108, 5.72835 ) }
    soma_0 { pt3dadd( -1.65823, 3.10303, 0.185734, 6.53421 ) }
    soma_0 { pt3dadd( -1.37297, 2.46871, 0.160389, 7.31212 ) }
    soma_0 { pt3dadd( -1.08771, 1.83438, 0.135044, 8.08989 ) }
    soma_0 { pt3dadd( -0.802456, 1.20006, 0.109699, 8.85679 ) }
    soma_0 { pt3dadd( -0.517198, 0.56574, 0.0843534, 8.93483 ) }
    soma_0 { pt3dadd( -0.23194, -0.0685822, 0.0590082, 8.92633 ) }
    soma_0 { pt3dadd( 0.0533189, -0.702904, 0.033663, 8.91784 ) }
    soma_0 { pt3dadd( 0.338577, -1.33723, 0.00831775, 8.90934 ) }
    soma_0 { pt3dadd( 0.623836, -1.97155, -0.0170275, 8.90084 ) }
    soma_0 { pt3dadd( 0.909094, -2.60587, -0.0423727, 8.82493 ) }
    soma_0 { pt3dadd( 1.19435, -3.24019, -0.067718, 7.82232 ) }
    soma_0 { pt3dadd( 1.47961, -3.87451, -0.0930632, 6.5965 ) }
    soma_0 { pt3dadd( 1.76487, -4.50884, -0.118408, 5.37067 ) }
    soma_0 { pt3dadd( 2.05013, -5.14316, -0.143754, 4.14485 ) }
    soma_0 { pt3dadd( 2.33539, -5.77748, -0.169099, 2.91903 ) }
    soma_0 { pt3dadd( 2.62064, -6.4118, -0.194444, 1.76337 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 21/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.61629, -5.55298, -1.26548, 1.33 ) }
    dend_0 { pt3dadd( 2.66269, -9.87312, -2.10448, 1.33 ) }
    dend_0 { pt3dadd( 4.39759, -17.0358, -3.49554, 0.66 ) }
    dend_0 { pt3dadd( 5.74079, -22.5814, -4.57253, 0.66 ) }
    dend_0 { pt3dadd( 7.1721, -28.4908, -5.72016, 1.33 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 26/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.62064, -6.4118, -0.194444, 0.33 ) }
    axon_0 { pt3dadd( 8.77276, -20.0921, -0.194444, 0.33 ) }
    axon_0 { pt3dadd( 14.9249, -33.7725, -0.194444, 0.33 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 29/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 7.1721, -28.4908, -5.72016, 0.66 ) }
    dend_2 { pt3dadd( 7.58411, -38.0914, -3.28831, 0.66 ) }
    dend_2 { pt3dadd( 8.18145, -52.3517, 0.342952, 0.66 ) }
    dend_2 { pt3dadd( 8.90473, -69.7591, 4.91759, 0.66 ) }
    dend_2 { pt3dadd( 9.52276, -83.1933, 8.46587, 0.66 ) }
    dend_2 { pt3dadd( 9.89187, -90.9882, 10.5181, 0.66 ) }
    dend_2 { pt3dadd( 10.0045, -93.5753, 11.1939, 0.66 ) }
    dend_2 { pt3dadd( 10.1699, -97.0843, 12.1371, 0.66 ) }
    dend_2 { pt3dadd( 10.2661, -100.366, 13.0438, 0.66 ) }
    dend_2 { pt3dadd( 10.3752, -104.154, 14.0177, 0.66 ) }
    dend_2 { pt3dadd( 10.443, -106.2, 14.2785, 0.66 ) }
    dend_2 { pt3dadd( 10.4966, -108.755, 14.3624, 0.66 ) }
    dend_2 { pt3dadd( 10.6101, -112.609, 14.0287, 0.66 ) }
    dend_2 { pt3dadd( 10.7264, -117.675, 13.3383, 0.66 ) }
    dend_2 { pt3dadd( 10.8218, -119.881, 13.0179, 0.66 ) }
    dend_2 { pt3dadd( 11.3543, -130.24, 11.4148, 0.66 ) }
    dend_2 { pt3dadd( 11.5411, -132.685, 10.9949, 0.66 ) }
    dend_2 { pt3dadd( 12.2623, -140.234, 9.50392, 0.66 ) }
    dend_2 { pt3dadd( 12.6034, -143.421, 8.8467, 0.66 ) }
    dend_2 { pt3dadd( 13.3362, -149.275, 7.71869, 0.66 ) }
    dend_2 { pt3dadd( 13.7624, -152.629, 7.30173, 0.66 ) }
    dend_2 { pt3dadd( 14.1836, -155.892, 7.23866, 0.66 ) }
    dend_2 { pt3dadd( 14.5922, -159.041, 7.29431, 0.66 ) }
    dend_2 { pt3dadd( 14.8647, -162.078, 7.35549, 0.66 ) }
    dend_2 { pt3dadd( 15.1017, -165.294, 7.28942, 0.66 ) }
    dend_2 { pt3dadd( 15.2855, -170.266, 7.11165, 0.66 ) }
    dend_2 { pt3dadd( 15.4291, -173.287, 7.15055, 0.66 ) }
    dend_2 { pt3dadd( 15.5497, -176.952, 7.25195, 0.66 ) }
    dend_2 { pt3dadd( 15.696, -181.914, 7.36427, 0.66 ) }
    dend_2 { pt3dadd( 15.7585, -185.082, 7.2831, 0.66 ) }
    dend_2 { pt3dadd( 15.8711, -189.344, 6.97927, 0.66 ) }
    dend_2 { pt3dadd( 16.1092, -193.357, 6.65628, 0.66 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 61/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 7.1721, -28.4908, -5.72016, 0.66 ) }
    dend_1 { pt3dadd( 10.4832, -31.0129, -5.98845, 0.66 ) }
    dend_1 { pt3dadd( 18.095, -36.8113, -6.60522, 0.33 ) }
    dend_1 { pt3dadd( 35.5188, -50.0838, -8.01703, 0.33 ) }
    dend_1 { pt3dadd( 36.1762, -50.5846, -8.0703, 0.66 ) }
    dend_1 { pt3dadd( 43.2076, -55.9407, -8.64003, 0.33 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 67/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 14.9249, -33.7725, -0.194444, 0.33 ) }
    axon_1 { pt3dadd( 21.077, -47.4528, -0.194444, 0.33 ) }
    axon_1 { pt3dadd( 27.2291, -61.1331, -0.194444, 0.33 ) }
    // Section: dend_12, id: dend_12, parent: dend_2 (entry count 70/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 16.1092, -193.357, 6.65628, 0.66 ) }
    dend_12 { pt3dadd( 18.6468, -196.393, 8.53035, 0.66 ) }
    dend_12 { pt3dadd( 19.948, -198.128, 9.84249, 0.66 ) }
    dend_12 { pt3dadd( 21.6771, -200.822, 12.6671, 0.66 ) }
    dend_12 { pt3dadd( 22.6858, -202.434, 14.6319, 0.66 ) }
    dend_12 { pt3dadd( 24.495, -205.402, 18.6155, 0.66 ) }
    dend_12 { pt3dadd( 25.8871, -207.562, 21.6684, 0.66 ) }
    dend_12 { pt3dadd( 27.1365, -209.535, 24.8187, 0.66 ) }
    dend_12 { pt3dadd( 29.8681, -213.348, 31.5763, 0.66 ) }
    dend_12 { pt3dadd( 31.4489, -215.337, 35.4071, 0.66 ) }
    dend_12 { pt3dadd( 33.2666, -217.639, 39.9402, 0.33 ) }
    dend_12 { pt3dadd( 34.0371, -218.54, 41.6978, 0.33 ) }
    dend_12 { pt3dadd( 34.3308, -218.824, 42.2849, 0.66 ) }
    dend_12 { pt3dadd( 36.2303, -220.313, 45.6093, 0.33 ) }
    dend_12 { pt3dadd( 36.738, -220.589, 46.1435, 0.66 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 85/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 16.1092, -193.357, 6.65628, 0.66 ) }
    dend_3 { pt3dadd( 16.7276, -197.521, 8.03574, 0.66 ) }
    dend_3 { pt3dadd( 17.5176, -202.902, 9.84693, 0.66 ) }
    dend_3 { pt3dadd( 19.2656, -213.663, 13.306, 0.66 ) }
    dend_3 { pt3dadd( 19.9794, -218.352, 14.7582, 0.66 ) }
    dend_3 { pt3dadd( 20.9431, -224.06, 16.5717, 0.66 ) }
    dend_3 { pt3dadd( 21.8651, -229.861, 18.2396, 0.66 ) }
    dend_3 { pt3dadd( 22.3748, -233.123, 19.0684, 0.66 ) }
    dend_3 { pt3dadd( 22.9149, -237.64, 20.0233, 0.66 ) }
    dend_3 { pt3dadd( 23.8674, -246.332, 21.5206, 0.66 ) }
    dend_3 { pt3dadd( 24.4, -251.274, 22.1354, 0.66 ) }
    dend_3 { pt3dadd( 24.9694, -257.073, 22.7604, 0.66 ) }
    dend_3 { pt3dadd( 25.3095, -261.985, 22.9722, 0.66 ) }
    dend_3 { pt3dadd( 25.4197, -264.649, 23.0587, 0.66 ) }
    dend_3 { pt3dadd( 25.6247, -273.605, 23.2148, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_3 { pt3dadd( 25.705, -278.241, 23.1491, 0.66 ) }
    dend_3 { pt3dadd( 25.6983, -284.669, 23.0047, 0.66 ) }
    dend_3 { pt3dadd( 25.8328, -289.814, 23.0979, 0.66 ) }
    dend_3 { pt3dadd( 25.8923, -292.098, 23.1129, 0.66 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 4/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 25.8923, -292.098, 23.1129, 0.66 ) }
    dend_5 { pt3dadd( 26.2832, -294.608, 23.3499, 0.66 ) }
    dend_5 { pt3dadd( 26.6804, -298.689, 24.1515, 0.66 ) }
    dend_5 { pt3dadd( 27.028, -303.045, 25.1438, 0.66 ) }
    dend_5 { pt3dadd( 27.1776, -305.905, 25.8097, 0.66 ) }
    dend_5 { pt3dadd( 27.365, -309.859, 26.6375, 0.66 ) }
    dend_5 { pt3dadd( 27.6005, -316.856, 27.8674, 0.66 ) }
    dend_5 { pt3dadd( 27.6374, -321.645, 28.6103, 0.66 ) }
    dend_5 { pt3dadd( 27.6006, -324.933, 29.1522, 0.66 ) }
    dend_5 { pt3dadd( 27.5999, -328.371, 29.6303, 0.66 ) }
    dend_5 { pt3dadd( 27.6372, -332.226, 30.1263, 0.66 ) }
    dend_5 { pt3dadd( 27.6962, -334.863, 30.4388, 0.66 ) }
    dend_5 { pt3dadd( 27.8831, -338.481, 30.7733, 0.66 ) }
    dend_5 { pt3dadd( 28.1323, -341.807, 31.0662, 0.66 ) }
    dend_5 { pt3dadd( 28.7184, -349.627, 31.9436, 0.66 ) }
    dend_5 { pt3dadd( 29.0054, -352.734, 32.3514, 0.66 ) }
    dend_5 { pt3dadd( 29.6476, -360.536, 33.3078, 0.66 ) }
    dend_5 { pt3dadd( 29.883, -363.683, 33.5771, 0.66 ) }
    dend_5 { pt3dadd( 30.0709, -366.715, 33.7183, 0.66 ) }
    dend_5 { pt3dadd( 30.2229, -369.444, 33.7278, 0.66 ) }
    dend_5 { pt3dadd( 30.4127, -373.915, 33.6806, 0.66 ) }
    dend_5 { pt3dadd( 30.5216, -377.74, 33.5934, 0.66 ) }
    dend_5 { pt3dadd( 30.7039, -385.096, 33.1569, 0.66 ) }
    dend_5 { pt3dadd( 30.8815, -388.809, 32.9519, 0.66 ) }
    dend_5 { pt3dadd( 31.0377, -391.699, 32.8104, 0.66 ) }
    dend_5 { pt3dadd( 31.2864, -395.586, 32.6504, 0.66 ) }
    dend_5 { pt3dadd( 32.2489, -410.211, 32.017, 0.66 ) }
    dend_5 { pt3dadd( 32.687, -415.581, 31.6958, 0.66 ) }
    dend_5 { pt3dadd( 33.917, -429.679, 30.6585, 0.66 ) }
    dend_5 { pt3dadd( 34.4074, -435.005, 30.1985, 0.66 ) }
    dend_5 { pt3dadd( 34.9129, -440.246, 29.7885, 0.66 ) }
    dend_5 { pt3dadd( 35.2957, -443.89, 29.531, 0.66 ) }
    dend_5 { pt3dadd( 35.883, -448.876, 29.1561, 0.66 ) }
    dend_5 { pt3dadd( 36.4226, -454.425, 28.75, 0.66 ) }
    dend_5 { pt3dadd( 36.9747, -460.475, 28.0733, 0.66 ) }
    dend_5 { pt3dadd( 37.2593, -463.856, 27.7, 0.66 ) }
    dend_5 { pt3dadd( 37.4555, -466.214, 27.5122, 0.66 ) }
    dend_5 { pt3dadd( 38.1445, -475.359, 27.3084, 0.66 ) }
    dend_5 { pt3dadd( 38.3558, -478.21, 27.253, 0.66 ) }
    dend_5 { pt3dadd( 38.6636, -482.889, 26.9446, 0.66 ) }
    dend_5 { pt3dadd( 38.9886, -487.567, 26.5608, 0.66 ) }
    dend_5 { pt3dadd( 39.3026, -491.19, 26.3039, 0.66 ) }
    dend_5 { pt3dadd( 40.1276, -500.059, 26.0536, 0.66 ) }
    dend_5 { pt3dadd( 41.1851, -510.242, 26.0496, 0.66 ) }
    dend_5 { pt3dadd( 41.9567, -517.172, 26.0164, 0.66 ) }
    dend_5 { pt3dadd( 42.3413, -520.656, 25.9306, 0.66 ) }
    dend_5 { pt3dadd( 43.8002, -533.399, 25.366, 0.66 ) }
    dend_5 { pt3dadd( 44.647, -541.576, 24.6713, 0.66 ) }
    dend_5 { pt3dadd( 44.9, -543.965, 24.4179, 0.66 ) }
    dend_5 { pt3dadd( 45.3363, -547.836, 23.9159, 0.66 ) }
    dend_5 { pt3dadd( 45.9909, -553.51, 23.002, 0.66 ) }
    dend_5 { pt3dadd( 46.2271, -555.962, 22.5084, 0.66 ) }
    dend_5 { pt3dadd( 46.7723, -562.528, 20.8893, 0.66 ) }
    dend_5 { pt3dadd( 47.9972, -576.217, 17.291, 0.66 ) }
    dend_5 { pt3dadd( 48.6585, -583.281, 15.6735, 0.66 ) }
    dend_5 { pt3dadd( 48.9321, -585.918, 15.1697, 0.33 ) }
    dend_5 { pt3dadd( 49.1373, -587.68, 14.9039, 1.33 ) }
    dend_5 { pt3dadd( 49.736, -591.856, 14.5473, 0.66 ) }
    dend_5 { pt3dadd( 50.6541, -596.892, 14.462, 0.66 ) }
    dend_5 { pt3dadd( 51.3869, -600.466, 14.5279, 0.66 ) }
    dend_5 { pt3dadd( 52.1756, -604.084, 14.7186, 0.66 ) }
    dend_5 { pt3dadd( 52.8987, -607.041, 14.8662, 0.66 ) }
    dend_5 { pt3dadd( 55.897, -619.193, 15.812, 0.66 ) }
    dend_5 { pt3dadd( 56.3045, -620.908, 15.9905, 0.33 ) }
    dend_5 { pt3dadd( 56.8372, -623.36, 16.2354, 1.33 ) }
    dend_5 { pt3dadd( 57.3585, -625.792, 16.4206, 0.66 ) }
    dend_5 { pt3dadd( 57.7419, -627.705, 16.5557, 0.33 ) }
    dend_5 { pt3dadd( 58.7353, -632.987, 16.9528, 0.66 ) }
    dend_5 { pt3dadd( 59.0018, -635.723, 17.4196, 0.66 ) }
    dend_5 { pt3dadd( 59.2484, -639.343, 18.2097, 0.33 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 74/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 25.8923, -292.098, 23.1129, 0.66 ) }
    dend_4 { pt3dadd( 23.8097, -297.625, 23.6164, 0.66 ) }
    dend_4 { pt3dadd( 22.0817, -302.318, 23.9699, 0.66 ) }
    dend_4 { pt3dadd( 20.9541, -305.839, 24.4434, 0.33 ) }
    dend_4 { pt3dadd( 19.4606, -310.79, 25.2897, 0.33 ) }
    dend_4 { pt3dadd( 19.2264, -311.598, 25.4697, 0.66 ) }
    dend_4 { pt3dadd( 18.533, -314.219, 26.1078, 0.33 ) }
    dend_4 { pt3dadd( 18.0999, -316.129, 26.6758, 0.66 ) }
    dend_4 { pt3dadd( 17.1902, -320.659, 27.8548, 0.33 ) }
    dend_4 { pt3dadd( 17.0658, -321.375, 28.0592, 0.66 ) }
    dend_4 { pt3dadd( 16.2124, -326.224, 29.4303, 0.33 ) }
    dend_4 { pt3dadd( 15.9108, -328.736, 30.2022, 0.33 ) }
    dend_4 { pt3dadd( 15.7243, -331.466, 31.0805, 0.66 ) }
    dend_4 { pt3dadd( 15.6058, -334.735, 32.2011, 0.33 ) }
    dend_4 { pt3dadd( 15.5923, -336.501, 32.7595, 0.33 ) }
    dend_4 { pt3dadd( 15.6631, -337.492, 33.1085, 0.66 ) }
    dend_4 { pt3dadd( 16.4709, -341.644, 35.1054, 0.33 ) }
    dend_4 { pt3dadd( 16.6163, -342.247, 35.479, 0.66 ) }
    dend_4 { pt3dadd( 17.0883, -343.765, 36.5595, 0.33 ) }
    dend_4 { pt3dadd( 17.3202, -344.544, 37.1355, 0.33 ) }
    dend_4 { pt3dadd( 17.5142, -345.372, 37.664, 0.66 ) }
    dend_4 { pt3dadd( 18.0021, -348.481, 39.342, 0.33 ) }
    dend_4 { pt3dadd( 18.0647, -350.39, 40.0861, 0.33 ) }
    dend_4 { pt3dadd( 18.0853, -351.113, 40.3149, 0.66 ) }
    dend_4 { pt3dadd( 18.1301, -352.519, 40.6257, 0.33 ) }
    dend_4 { pt3dadd( 18.1321, -353.266, 40.741, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_4 { pt3dadd( 18.1128, -354.216, 40.8324, 0.33 ) }
    dend_4 { pt3dadd( 18.0665, -355.201, 40.8571, 0.66 ) }
    dend_4 { pt3dadd( 17.9818, -356.645, 40.9263, 0.33 ) }
    dend_4 { pt3dadd( 17.9433, -357.171, 40.9654, 0.66 ) }
    dend_4 { pt3dadd( 17.5796, -361.525, 41.4109, 0.33 ) }
    dend_4 { pt3dadd( 17.5505, -361.804, 41.4423, 0.66 ) }
    dend_4 { pt3dadd( 17.4133, -362.804, 41.5708, 0.33 ) }
    dend_4 { pt3dadd( 17.3278, -363.325, 41.6441, 0.66 ) }
    dend_4 { pt3dadd( 17.1789, -364.741, 41.9736, 0.33 ) }
    dend_4 { pt3dadd( 17.1432, -365.389, 42.163, 0.66 ) }
    dend_4 { pt3dadd( 17.1399, -366.547, 42.5452, 0.33 ) }
    dend_4 { pt3dadd( 17.1544, -367.367, 42.8234, 0.66 ) }
    dend_4 { pt3dadd( 17.207, -368.305, 43.1594, 0.33 ) }
    dend_4 { pt3dadd( 17.568, -372.669, 44.8472, 0.33 ) }
    dend_4 { pt3dadd( 17.7189, -373.942, 45.397, 0.66 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 15/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 59.2484, -639.343, 18.2097, 0.66 ) }
    dend_7 { pt3dadd( 59.9663, -642.843, 17.4381, 0.66 ) }
    dend_7 { pt3dadd( 60.3657, -644.66, 17.4843, 1.33 ) }
    dend_7 { pt3dadd( 60.6895, -646.224, 17.6653, 0.66 ) }
    dend_7 { pt3dadd( 61.0516, -648.192, 17.8376, 0.66 ) }
    dend_7 { pt3dadd( 61.826, -652.433, 18.4201, 0.33 ) }
    dend_7 { pt3dadd( 62.8107, -657.562, 19.2602, 0.66 ) }
    dend_7 { pt3dadd( 64.0814, -664.191, 20.7812, 0.66 ) }
    dend_7 { pt3dadd( 64.7708, -667.49, 21.6675, 0.66 ) }
    dend_7 { pt3dadd( 65.6201, -671.164, 22.5629, 0.33 ) }
    dend_7 { pt3dadd( 66.7407, -675.861, 23.5104, 0.33 ) }
    dend_7 { pt3dadd( 67.0377, -677.189, 23.6783, 0.66 ) }
    dend_7 { pt3dadd( 67.3332, -678.285, 23.6026, 0.33 ) }
    dend_7 { pt3dadd( 67.581, -679.232, 23.3806, 0.66 ) }
    dend_7 { pt3dadd( 69.0639, -684.752, 21.8179, 0.33 ) }
    dend_7 { pt3dadd( 69.7121, -687.056, 21.1627, 0.66 ) }
    dend_7 { pt3dadd( 70.2992, -689.24, 20.4579, 0.33 ) }
    dend_7 { pt3dadd( 71.8286, -695.453, 18.7441, 0.33 ) }
    dend_7 { pt3dadd( 72.7394, -699.094, 17.8983, 0.66 ) }
    dend_7 { pt3dadd( 74.3964, -705.691, 16.639, 0.33 ) }
    dend_7 { pt3dadd( 75.1496, -708.806, 16.2163, 0.66 ) }
    dend_7 { pt3dadd( 75.8995, -711.882, 15.8777, 1.33 ) }
    dend_7 { pt3dadd( 77.605, -718.906, 15.403, 0.33 ) }
    dend_7 { pt3dadd( 78.3958, -722.389, 15.4002, 0.33 ) }
    dend_7 { pt3dadd( 78.6997, -723.76, 15.4352, 0.66 ) }
    dend_7 { pt3dadd( 79.3918, -727.218, 15.6572, 0.33 ) }
    dend_7 { pt3dadd( 80.2541, -731.862, 16.0383, 0.33 ) }
    dend_7 { pt3dadd( 80.5801, -733.558, 16.2339, 1.33 ) }
    dend_7 { pt3dadd( 81.4889, -738.43, 16.793, 0.33 ) }
    dend_7 { pt3dadd( 81.7269, -740.121, 17.0058, 0.66 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 45/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 59.2484, -639.343, 18.2097, 0.66 ) }
    dend_6 { pt3dadd( 58.5837, -641.111, 16.0289, 0.66 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 47/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 81.7269, -740.121, 17.0058, 0.66 ) }
    dend_11 { pt3dadd( 79.9364, -739.833, 17.9383, 0.66 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 49/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 81.7269, -740.121, 17.0058, 0.66 ) }
    dend_8 { pt3dadd( 81.9068, -741.314, 16.8398, 0.66 ) }
    dend_8 { pt3dadd( 82.7078, -746.626, 16.1006, 0.33 ) }
    dend_8 { pt3dadd( 82.9625, -748.316, 15.8655, 1.33 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 53/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 82.9625, -748.316, 15.8655, 0.33 ) }
    dend_10 { pt3dadd( 87.4061, -758.282, 23.3019, 0.33 ) }
    dend_10 { pt3dadd( 87.848, -759.25, 23.9488, 1.33 ) }
    dend_10 { pt3dadd( 89.1536, -761.954, 25.605, 0.33 ) }
    dend_10 { pt3dadd( 89.4487, -762.514, 25.8763, 0.66 ) }
    dend_10 { pt3dadd( 90.9681, -765.177, 26.9025, 0.33 ) }
    dend_10 { pt3dadd( 91.4292, -765.985, 27.2139, 0.66 ) }
    dend_10 { pt3dadd( 91.8923, -766.715, 27.1314, 0.33 ) }
    dend_10 { pt3dadd( 92.5434, -767.624, 26.9945, 0.66 ) }
    dend_10 { pt3dadd( 94.9901, -770.444, 26.3511, 0.33 ) }
    dend_10 { pt3dadd( 95.9733, -771.46, 26.0546, 1.33 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 64/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 82.9625, -748.316, 15.8655, 0.33 ) }
    dend_9 { pt3dadd( 84.239, -759.644, 19.6407, 0.33 ) }
    dend_9 { pt3dadd( 84.9352, -765.822, 21.6996, 0.33 ) }
    dend_9 { pt3dadd( 85.0446, -766.793, 22.0232, 0.66 ) }
    dend_9 { pt3dadd( 85.7632, -773.169, 24.1482, 0.33 ) }
    dend_9 { pt3dadd( 85.8589, -774.019, 24.4315, 0.66 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_0, dend_2, dend_1, dend_12, dend_3, dend_5, dend_4, dend_7, dend_6, dend_11, dend_8, dend_10, dend_9]}
    ModelViewParmSubset_2 = new SectionList()
    dend_0 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_0, dend_2, dend_1, dend_12, dend_3, dend_5, dend_4, dend_7, dend_6, dend_11, dend_8, dend_10, dend_9]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_2 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_1 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_12 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_3 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_5 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_4 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_7 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_6 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_11 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_8 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_9 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_10 OneSecGrp_SectionRef_15.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_11, dend_8, dend_8, dend_8, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_8 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_2 nseg = 9
    dend_1 nseg = 3
    dend_12 nseg = 3
    dend_3 nseg = 5
    dend_5 nseg = 17
    dend_4 nseg = 5
    dend_7 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L4_BP_a90620dca0_0_0


