// Cell: Cell_472455509
/*
{
  "id" : "Cell_472455509",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "361.237, 325.239, 38.64, 14.0332", "368.254, 325.239, 38.64, 14.0332", "375.27, 325.239, 38.64, 14.0332" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "368.253, 325.239, 38.64, 1.0", "374.095, 339.055, 38.64, 1.0", "379.936, 352.871, 38.64, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000356303000083
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "370.591, 331.821, 39.1177, 0.5338", "371.457, 332.415, 40.2251, 0.5338", "372.457, 332.857, 40.4088, 0.6102", "373.536, 333.208, 40.045, 0.661", "374.545, 333.668, 39.76, 0.7118", "375.301, 334.527, 39.76, 0.6864", "376.056, 335.387, 39.76, 0.7118", "376.632, 336.361, 39.5352, 0.7372", "377.15, 337.375, 39.2372, 0.788", "377.744, 338.333, 39.0701, 0.8136", "378.535, 339.159, 39.2283, 0.839", "379.324, 339.984, 39.3868, 0.8136" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000356303000083
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "373.499, 321.529, 35.7, 0.356", "374.46, 320.955, 35.6398, 0.5592", "375.524, 320.564, 36.022, 0.839", "376.588, 320.175, 36.3961, 1.0932", "377.689, 319.869, 36.314, 1.2202", "378.791, 319.563, 36.2323, 1.1948", "379.836, 319.116, 36.1771, 1.0424", "380.831, 318.554, 36.1444, 0.9152", "381.82, 317.988, 35.9915, 0.8136", "382.791, 317.42, 35.4802, 0.7372", "383.761, 316.85, 34.9689, 0.5848" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000356303000083
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "363.566, 320.241, 32.912, 0.3814", "362.632, 319.928, 32.4691, 0.4322", "361.508, 320.049, 32.8826, 0.483", "360.383, 320.153, 33.2816, 0.6102", "359.271, 319.883, 33.3631, 0.6864", "358.16, 319.614, 33.4449, 0.8136", "357.144, 319.151, 33.0786, 0.788", "356.176, 318.591, 32.489, 0.7372", "355.217, 318.289, 31.7842, 0.5848", "354.28, 318.785, 30.7261, 0.5084", "353.344, 319.28, 29.668, 0.4576", "352.396, 318.999, 28.2584, 0.5592", "351.448, 318.718, 26.8489, 0.661" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000356303000083
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "361.37, 328.593, 39.438, 0.661", "360.572, 329.413, 39.3817, 0.7118", "359.698, 330.084, 39.7944, 0.839", "358.747, 330.609, 40.6801, 0.9152", "357.798, 331.134, 41.566, 0.8898" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000356303000083
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "365.818, 318.872, 34.5346, 0.7118", "365.176, 318.063, 33.3259, 0.788", "364.535, 317.254, 32.1168, 0.7372", "364.02, 316.253, 32.3596, 0.6864", "363.514, 315.236, 32.709, 0.6864", "362.862, 314.322, 32.8908, 0.7626", "362.041, 313.526, 32.8793, 0.839", "361.417, 312.655, 33.0078, 0.8898", "361.452, 311.539, 33.6025, 0.8898", "361.606, 310.444, 34.0631, 0.788", "362.106, 309.415, 34.1317, 0.6356", "362.607, 308.387, 34.2006, 0.483", "362.329, 307.339, 33.9139, 0.4576", "362.117, 306.264, 33.8587, 0.483", "362.279, 305.148, 34.326, 0.5848", "362.471, 304.039, 34.6662, 0.6102", "362.835, 302.966, 34.2779, 0.6102", "363.146, 301.879, 33.9354, 0.5592", "363.266, 300.744, 33.7537, 0.5338", "363.352, 299.61, 33.4897, 0.5592", "363.353, 298.482, 33.0313, 0.6102", "363.276, 297.363, 32.5262, 0.7118", "363.07, 296.264, 31.9432, 0.8136", "362.863, 295.165, 31.36, 0.9152" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000356303000083
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "379.936, 352.871, 38.64, 1.0", "385.777, 366.687, 38.64, 1.0", "391.619, 380.503, 38.64, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "379.324, 339.984, 39.3868, 0.8136", "380.385, 339.572, 40.9108, 0.5084", "381.393, 339.197, 41.8687, 0.5084", "382.514, 339.29, 42.2044, 0.5338", "383.543, 339.662, 42.4141, 0.5084", "384.421, 340.395, 42.513, 0.483", "385.301, 341.1, 42.8638, 0.4322", "386.181, 341.763, 43.6061, 0.3814", "387.028, 341.576, 43.799, 0.3814", "387.851, 340.785, 43.6027, 0.4068", "388.724, 340.277, 44.4072, 0.4322", "389.636, 339.974, 45.9284, 0.356", "390.609, 339.665, 47.1285, 0.2796", "391.657, 339.348, 47.9419, 0.2542", "392.713, 339.126, 48.6402, 0.305", "393.81, 339.447, 48.6802, 0.356", "394.908, 339.768, 48.72, 0.356" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "379.324, 339.984, 39.3868, 0.8136", "380.134, 341.145, 38.7254, 0.4322", "380.608, 342.186, 38.8394, 0.4576", "381.332, 342.975, 38.6022, 0.483", "382.317, 343.502, 37.9985, 0.5084", "383.174, 344.175, 37.8204, 0.5338", "383.811, 345.098, 38.3762, 0.4576", "384.447, 346.017, 38.3698, 0.3814", "385.082, 346.929, 37.7174, 0.3304", "385.574, 347.938, 37.3657, 0.4068", "385.978, 349.007, 37.2002, 0.483", "386.482, 350.006, 36.8015, 0.5338", "387.113, 350.919, 36.1141, 0.5084", "387.751, 351.829, 35.4785, 0.5084", "388.451, 352.731, 35.3072, 0.483", "389.136, 353.645, 35.1453, 0.483", "389.772, 354.593, 35.0104, 0.4068", "390.408, 355.543, 34.8757, 0.356" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "383.761, 316.85, 34.9689, 0.5848", "383.922, 317.126, 33.8181, 0.5338", "384.246, 317.682, 31.5025, 0.5848", "384.789, 318.552, 30.9042, 0.5592", "385.4, 319.519, 30.8311, 0.5592" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "383.761, 316.85, 34.9689, 0.5848", "384.354, 315.886, 34.4221, 0.6356", "384.942, 314.931, 33.88, 0.6356" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "351.448, 318.718, 26.8489, 0.661", "350.426, 318.263, 27.9017, 0.6356", "349.662, 317.427, 28.2859, 0.5848", "348.938, 316.577, 28.534, 0.5848", "348.67, 315.587, 27.2919, 0.6102", "348.421, 314.536, 26.5334, 0.5592", "348.195, 313.419, 26.2833, 0.4322", "348.004, 312.374, 26.5782, 0.3814", "347.912, 311.535, 28.4701, 0.4576", "347.925, 310.453, 29.1623, 0.5338", "347.96, 309.328, 29.5705, 0.5592", "348.063, 308.271, 28.5323, 0.5592", "348.182, 307.24, 27.372, 0.6102", "348.33, 306.259, 25.9776, 0.6356", "348.427, 305.279, 24.6792, 0.5848", "347.822, 304.309, 24.7531, 0.5084", "347.216, 303.339, 24.8268, 0.4322" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "351.448, 318.718, 26.8489, 0.661", "350.367, 319.224, 27.1407, 0.7118", "349.492, 319.759, 28.3766, 0.7372", "348.622, 320.319, 29.5249, 0.6864", "347.805, 321.114, 29.7424, 0.5592", "346.987, 321.909, 29.96, 0.4576" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "357.798, 331.134, 41.566, 0.8898", "357.313, 332.147, 40.5507, 0.5592", "356.689, 333.064, 39.8642, 0.483", "356.128, 334.048, 39.5906, 0.483", "355.593, 335.058, 39.4859, 0.483", "355.026, 335.999, 40.2357, 0.3814", "354.457, 336.935, 41.0365, 0.3304", "353.571, 337.581, 40.7215, 0.3304", "352.612, 338.159, 40.1478, 0.3814", "351.87, 338.997, 39.9885, 0.3814", "351.21, 339.932, 39.9818, 0.3814", "350.852, 340.713, 38.5706, 0.3814", "350.656, 341.413, 36.4095, 0.3304", "350.254, 342.093, 35.0017, 0.2796", "349.323, 342.717, 35.5485, 0.2542", "348.477, 343.222, 36.8113, 0.356", "347.692, 343.644, 38.5658, 0.483", "346.874, 344.29, 39.0393, 0.5848", "346.037, 345.064, 38.7878, 0.5338", "345.215, 345.854, 38.6039, 0.4322", "344.43, 346.686, 38.5862, 0.3304", "343.651, 347.516, 38.5263, 0.3304", "343.091, 348.291, 36.988, 0.356", "342.528, 349.071, 35.4852, 0.3814", "341.903, 349.959, 34.6021, 0.3814", "341.3, 350.874, 34.1947, 0.3814", "340.743, 351.846, 34.757, 0.356", "340.577, 352.87, 33.7072, 0.305", "340.36, 353.871, 32.5528, 0.2542", "339.764, 354.759, 31.554, 0.2288", "339.256, 355.691, 30.9901, 0.2288", "339.016, 356.764, 31.766, 0.2288", "338.804, 357.744, 31.6588, 0.2542", "338.648, 358.518, 29.6341, 0.2796", "338.474, 359.46, 28.8624, 0.3304", "338.283, 360.57, 29.3488, 0.3304", "338.128, 361.67, 29.2998, 0.356", "338.026, 362.753, 28.4371, 0.3304", "338.057, 363.84, 27.6514, 0.3304", "338.266, 364.929, 26.9685, 0.2796", "337.839, 365.794, 25.7925, 0.2542", "337.224, 366.592, 24.4689, 0.2288", "336.861, 367.563, 23.9551, 0.2796", "336.738, 368.695, 24.2085, 0.3304", "336.438, 369.707, 23.4758, 0.3814", "336.048, 370.656, 22.2421, 0.3304", "335.62, 371.685, 21.6118, 0.305", "335.191, 372.715, 21.0, 0.2796" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "357.798, 331.134, 41.566, 0.8898", "356.935, 331.277, 42.3419, 0.9406", "355.874, 331.453, 43.2961, 0.8898", "354.871, 331.353, 44.3033, 0.8136", "353.958, 330.825, 45.3919, 0.7372", "353.045, 330.299, 46.4806, 0.661" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "362.863, 295.165, 31.36, 0.9152", "363.131, 294.414, 32.0037, 0.4068", "363.496, 293.391, 32.8815, 0.4322", "363.693, 292.309, 32.352, 0.4576", "363.864, 291.218, 31.6215, 0.3814", "363.744, 290.178, 31.9214, 0.305", "363.407, 289.175, 32.9851, 0.2288", "363.65, 288.104, 32.7642, 0.2542", "363.983, 287.024, 32.3436, 0.2796", "364.237, 285.923, 32.6936, 0.3304", "364.481, 284.82, 33.1374, 0.3304", "364.401, 283.744, 33.8598, 0.3304", "364.163, 282.682, 34.7183, 0.305", "363.899, 281.632, 34.8933, 0.305", "363.593, 280.604, 33.922, 0.3304", "363.555, 279.524, 33.4284, 0.3304", "363.754, 278.398, 33.3595, 0.3304", "363.905, 277.267, 33.4029, 0.2796", "363.989, 276.128, 33.5955, 0.305", "364.095, 274.991, 33.6171, 0.3814", "364.223, 273.856, 33.451, 0.5084", "364.233, 272.734, 33.4642, 0.5338", "363.949, 271.642, 33.9161, 0.4576", "363.726, 270.53, 34.155, 0.3304", "363.572, 269.396, 34.1578, 0.2796", "363.448, 268.261, 34.218, 0.2796", "363.41, 267.122, 34.4459, 0.356", "363.476, 265.989, 34.725, 0.4322", "363.637, 264.865, 35.0496, 0.5592", "364.083, 263.813, 35.0815, 0.5848", "364.529, 262.762, 35.1571, 0.5338", "364.886, 261.697, 35.6812, 0.3814", "365.204, 260.628, 36.0259, 0.305", "365.246, 259.542, 35.201, 0.305", "365.234, 258.416, 35.3542, 0.356", "365.771, 257.508, 36.4372, 0.4068", "366.308, 256.599, 37.52, 0.4322" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "362.863, 295.165, 31.36, 0.9152", "362.388, 294.246, 29.4538, 0.5338", "362.13, 293.196, 30.3643, 0.5592", "361.87, 292.146, 31.2749, 0.5084", "361.75, 291.124, 30.2268, 0.4576", "361.644, 290.106, 28.9769, 0.4068", "361.788, 289.019, 28.9598, 0.356", "362.014, 287.908, 29.3462, 0.356", "362.097, 286.773, 29.3331, 0.356", "362.204, 285.666, 29.0836, 0.3814", "362.821, 284.811, 27.9936, 0.3814", "363.438, 283.957, 26.9035, 0.356", "363.673, 282.841, 26.9298, 0.3304", "363.901, 281.72, 26.9794, 0.305", "364.723, 280.99, 26.4093, 0.305", "365.592, 280.29, 25.7905, 0.305", "366.489, 279.644, 25.0748, 0.2796", "367.395, 279.017, 24.3242, 0.2542", "368.308, 278.423, 23.4668, 0.2542", "369.223, 277.848, 22.5551, 0.2796", "370.046, 277.096, 22.37, 0.3304", "370.851, 276.294, 22.4059, 0.356", "371.768, 275.656, 21.8134, 0.3814", "372.687, 275.018, 21.2209, 0.3814", "373.815, 274.941, 20.993, 0.356", "374.943, 274.809, 20.7651, 0.3304", "376.056, 274.565, 20.5114, 0.2796", "377.139, 274.717, 20.148, 0.2542", "378.206, 275.09, 19.7235, 0.2288", "379.253, 275.427, 19.0414, 0.2288", "380.265, 275.704, 17.92, 0.2288" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "394.908, 339.768, 48.72, 0.356", "395.187, 340.683, 48.3157, 0.2796" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "394.908, 339.768, 48.72, 0.356", "395.647, 339.694, 48.5839, 0.305", "396.706, 339.272, 48.7956, 0.305", "397.761, 338.849, 49.044, 0.356", "398.705, 338.443, 50.2762, 0.4068", "399.645, 338.089, 51.5964, 0.4322", "400.577, 337.845, 53.1045, 0.3814", "401.7, 337.775, 53.3977, 0.3304", "402.84, 337.723, 53.5716, 0.3304", "403.936, 337.443, 53.9795, 0.3304", "405.038, 337.188, 54.3651, 0.356", "406.171, 337.068, 54.6199, 0.3304", "407.304, 336.947, 54.8744, 0.356", "408.43, 336.86, 55.3188, 0.3304", "409.556, 336.773, 55.767, 0.3304", "410.384, 337.378, 56.7591, 0.2796", "411.204, 338.035, 57.7172, 0.2796", "412.325, 338.261, 57.7338, 0.305", "413.433, 338.43, 57.7984, 0.356", "414.361, 337.823, 58.4839, 0.356", "415.32, 337.292, 59.2284, 0.305", "416.341, 336.914, 60.0911, 0.2542", "417.361, 336.535, 60.9538, 0.2288", "418.382, 336.156, 61.8164, 0.2288", "419.402, 335.778, 62.6794, 0.2288", "420.422, 335.399, 63.5421, 0.2288", "421.443, 335.02, 64.405, 0.2288", "422.462, 334.641, 65.268, 0.2288", "423.483, 334.263, 66.1307, 0.2288", "424.503, 333.884, 66.9936, 0.2288", "425.524, 333.506, 67.8552, 0.2796", "426.545, 333.128, 68.7154, 0.3304", "427.567, 332.752, 69.5752, 0.3814", "428.635, 332.375, 69.5733, 0.3304", "429.714, 332.0, 69.4036, 0.2796", "430.829, 331.84, 69.5836, 0.2288", "431.963, 331.79, 69.9392, 0.2542", "433.043, 331.586, 70.5012, 0.305", "433.909, 331.004, 71.4661, 0.3814", "434.59, 330.204, 72.5785, 0.4322", "435.373, 329.434, 73.0688, 0.4322", "436.24, 328.688, 73.0484, 0.3814", "436.831, 327.939, 73.878, 0.3304", "437.022, 327.184, 75.9284, 0.356", "437.259, 326.253, 77.3049, 0.4068", "437.526, 325.211, 78.2575, 0.4322", "437.82, 324.204, 79.3761, 0.3814", "438.119, 323.203, 80.5154, 0.3304", "438.881, 322.589, 79.4156, 0.3304", "439.664, 321.987, 78.3653, 0.356", "440.186, 321.129, 79.711, 0.3814", "440.667, 320.266, 81.0986, 0.3814", "440.892, 319.371, 82.7492, 0.356", "441.139, 318.462, 84.2475, 0.3814", "441.609, 317.421, 84.0935, 0.4068", "442.002, 316.452, 84.5586, 0.4576", "442.209, 315.652, 86.4959, 0.4576", "442.506, 314.701, 87.768, 0.483", "442.841, 313.685, 88.76, 0.5084" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "390.408, 355.543, 34.8757, 0.356", "390.447, 356.397, 34.7136, 0.305", "390.489, 357.538, 34.5136, 0.305", "390.529, 358.678, 34.3137, 0.3304", "390.656, 359.805, 33.9626, 0.3814", "390.789, 360.932, 33.6, 0.3304" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "390.408, 355.543, 34.8757, 0.356", "391.008, 355.457, 34.181, 0.2796", "392.144, 355.326, 34.1659, 0.2288", "393.271, 355.345, 33.9419, 0.2542", "394.386, 355.521, 33.4975, 0.2796", "395.504, 355.628, 33.0571, 0.3304", "396.626, 355.493, 32.6309, 0.356", "397.748, 355.357, 32.2048, 0.3814", "398.741, 355.893, 31.8506, 0.3814", "399.729, 356.451, 31.4989, 0.356", "400.549, 357.16, 30.6491, 0.356", "401.344, 357.89, 29.7268, 0.356", "402.13, 358.667, 28.9996, 0.4068", "402.916, 359.445, 28.28, 0.4068" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "385.4, 319.519, 30.8311, 0.5592", "385.993, 318.934, 29.0934, 0.7372", "386.652, 318.263, 27.533, 0.6102", "387.36, 317.525, 26.2786, 0.4322", "388.054, 316.756, 25.1409, 0.356", "388.664, 315.805, 24.719, 0.356", "389.245, 314.852, 24.5364, 0.4322", "389.664, 313.904, 25.7194, 0.4322", "390.116, 312.947, 26.4908, 0.4576", "390.666, 311.962, 26.0193, 0.5084", "391.335, 311.09, 25.5237, 0.6102", "392.265, 310.462, 24.976, 0.661", "393.176, 309.793, 24.6618, 0.661", "394.066, 309.073, 24.6263, 0.6356", "394.831, 308.275, 24.1864, 0.6102", "395.465, 307.392, 23.3128, 0.6102", "396.382, 306.758, 22.7111, 0.5848", "397.31, 306.134, 22.12, 0.5084" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "385.4, 319.519, 30.8311, 0.5592", "385.772, 319.578, 31.2519, 0.3814", "386.546, 320.114, 31.7397, 0.4322", "386.979, 321.16, 31.3169, 0.4322", "387.554, 322.074, 31.0299, 0.4576", "388.583, 322.569, 31.1791, 0.5084", "389.612, 323.065, 31.3281, 0.6102", "390.712, 323.379, 31.4163, 0.6102", "391.811, 323.695, 31.5045, 0.5592", "392.817, 324.215, 31.7842, 0.483", "393.802, 324.782, 32.1068, 0.5084" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "384.942, 314.931, 33.88, 0.6356", "386.03, 313.93, 33.7798, 0.6356", "386.887, 313.185, 34.1289, 0.5084", "387.744, 312.441, 34.4781, 0.5338", "388.29, 311.438, 34.3932, 0.6864", "388.829, 310.43, 34.2997, 0.8136", "389.598, 309.59, 34.5708, 0.839", "390.37, 308.753, 34.8443, 0.7118" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "347.216, 303.339, 24.8268, 0.4322", "346.595, 302.972, 22.8222, 0.356", "345.945, 302.588, 20.72, 0.4322", "345.203, 303.033, 20.9619, 0.3304", "344.229, 303.618, 21.28, 0.3304" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "347.216, 303.339, 24.8268, 0.4322", "347.136, 302.442, 24.7097, 0.4576", "347.37, 301.471, 23.8543, 0.5338", "347.889, 300.643, 22.4, 0.5848" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "346.987, 321.909, 29.96, 0.4576", "346.746, 322.853, 28.6476, 0.4068", "346.498, 323.823, 27.2972, 0.356", "346.25, 324.794, 25.9468, 0.356", "345.892, 325.98, 27.1785, 0.4576", "345.504, 326.962, 27.3468, 0.5592", "345.003, 327.899, 26.3068, 0.5848", "344.56, 328.882, 25.7914, 0.5848", "344.234, 329.956, 26.3309, 0.483", "343.909, 331.012, 26.5124, 0.4576", "343.588, 331.998, 25.3336, 0.4576", "343.301, 333.004, 24.2418, 0.5084", "343.214, 334.121, 23.6771, 0.5592", "343.128, 335.239, 23.1207, 0.5338", "343.117, 336.382, 23.0356, 0.483", "343.077, 337.494, 22.6318, 0.4068", "342.97, 338.536, 21.504, 0.4068", "342.884, 339.65, 21.56, 0.4322", "342.802, 340.783, 21.9092, 0.4576", "342.659, 341.814, 21.1943, 0.4322", "342.513, 342.782, 19.9794, 0.4322", "342.722, 343.83, 20.9787, 0.3814", "342.857, 344.907, 21.4337, 0.3814", "342.861, 346.033, 20.9381, 0.4068", "342.9, 347.155, 20.4282, 0.5084", "343.05, 348.266, 19.8741, 0.5592", "343.199, 349.378, 19.32, 0.483" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "346.987, 321.909, 29.96, 0.4576", "346.352, 321.821, 29.5537, 0.7118", "345.341, 321.685, 28.303, 0.788", "344.336, 321.55, 27.0001, 0.839", "343.415, 320.974, 26.2452, 0.8898", "342.503, 320.342, 25.5606, 0.8898", "341.465, 319.89, 25.8919, 0.788", "340.422, 319.445, 26.2604, 0.6864", "339.468, 319.883, 27.0561, 0.5592", "338.526, 320.431, 27.9042, 0.5338", "337.481, 320.677, 27.1681, 0.483", "336.423, 320.885, 26.2301, 0.5592", "335.398, 321.298, 25.5587, 0.5592", "334.378, 321.75, 24.9388, 0.6102", "333.31, 321.981, 24.1769, 0.5592", "332.226, 322.137, 23.3671, 0.6102", "331.194, 322.563, 23.3338, 0.5848", "330.179, 323.083, 23.5698, 0.5338", "329.106, 323.242, 23.4018, 0.4322", "327.986, 323.117, 22.9177, 0.3814", "326.887, 322.891, 22.4944, 0.4576", "325.819, 322.502, 22.1659, 0.483", "324.774, 322.1, 21.6824, 0.5084", "323.801, 321.654, 20.6912, 0.4322", "322.805, 321.43, 20.3148, 0.4322", "321.759, 321.681, 21.264, 0.5084", "320.713, 321.934, 22.2132, 0.5848" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "353.045, 330.299, 46.4806, 0.661", "352.663, 329.819, 46.5968, 0.7626", "351.885, 328.989, 46.7788, 0.8136", "351.015, 328.249, 46.9137, 0.7626", "350.201, 327.491, 47.2609, 0.6102", "349.641, 326.646, 48.5607, 0.4576", "349.5, 325.785, 49.0986, 0.3304", "350.126, 324.894, 48.2451, 0.2542", "350.487, 323.895, 47.9284, 0.2542", "350.511, 322.761, 48.2989, 0.3304", "350.365, 321.707, 48.5562, 0.4576", "349.476, 320.994, 48.3179, 0.5338", "348.57, 320.339, 48.1135, 0.5338", "347.441, 320.495, 48.3703, 0.4322", "346.313, 320.651, 48.6268, 0.356", "345.882, 320.583, 49.5751, 0.2542", "345.036, 320.452, 51.4343, 0.2796", "344.191, 320.32, 53.2932, 0.4068", "343.968, 320.042, 54.2545, 0.3814", "342.938, 319.604, 54.8355, 0.4068", "341.925, 319.161, 54.8755, 0.483", "340.941, 318.714, 53.9633, 0.483", "339.953, 318.265, 53.107, 0.4322", "338.918, 317.806, 53.4923, 0.483", "337.879, 317.346, 53.8269, 0.5848", "336.838, 316.882, 54.0464, 0.6356", "335.798, 316.654, 53.5494, 0.483", "334.762, 316.651, 52.3634, 0.3814", "333.989, 316.496, 52.6358, 0.3304", "333.61, 316.11, 55.1037, 0.4576", "332.626, 315.803, 56.2974, 0.5084", "331.694, 315.377, 57.0018, 0.5592", "330.951, 314.567, 56.2226, 0.5084", "330.156, 313.831, 55.8947, 0.5084", "329.215, 313.304, 56.8226, 0.5084", "328.439, 312.628, 57.853, 0.483", "327.895, 311.743, 59.0254, 0.4322", "327.372, 310.8, 59.395, 0.3814", "326.873, 309.791, 58.8885, 0.3814", "326.445, 308.815, 59.3807, 0.3304", "326.072, 307.864, 60.6432, 0.2796", "325.628, 306.891, 60.947, 0.2288", "325.117, 305.896, 60.3593, 0.2288", "324.587, 304.91, 60.944, 0.2796", "324.015, 303.941, 61.4046, 0.3304", "323.379, 302.996, 61.6722, 0.4068", "322.974, 301.955, 62.2317, 0.4068", "322.588, 300.905, 62.8149, 0.4322", "321.937, 300.04, 63.693, 0.4068", "321.267, 299.188, 64.5907, 0.4576", "320.415, 298.441, 64.6962, 0.5084", "319.535, 297.71, 64.6822, 0.6356", "318.673, 297.126, 65.7188, 0.661", "317.814, 296.575, 66.9824, 0.6356", "316.794, 296.34, 67.8065, 0.5084", "315.68, 296.318, 68.3953, 0.4322", "314.685, 296.421, 69.7508, 0.3814", "313.707, 296.486, 71.125, 0.4322", "313.047, 295.867, 72.8386, 0.483", "312.337, 295.332, 74.5749, 0.5084", "311.541, 294.948, 76.3521, 0.483", "310.699, 294.465, 77.7969, 0.4322", "309.833, 293.921, 79.0513, 0.4068", "309.45, 292.991, 80.3382, 0.3304", "309.02, 292.029, 81.2526, 0.2796", "308.44, 291.045, 81.4111, 0.2288", "308.189, 290.056, 81.1384, 0.2288", "308.537, 289.053, 80.0859, 0.2796", "308.617, 288.243, 80.2054, 0.3814", "308.186, 287.798, 82.5594, 0.483", "307.971, 287.145, 84.7647, 0.5084", "307.81, 286.438, 86.9316, 0.4322", "306.989, 286.08, 88.3182, 0.4068", "306.091, 285.685, 89.6263, 0.4322", "305.39, 285.045, 91.187, 0.5084", "304.629, 284.324, 92.1654, 0.483", "303.821, 283.544, 92.7018, 0.4322", "303.261, 282.629, 93.4102, 0.3814", "302.919, 281.596, 94.2707, 0.4068", "302.237, 281.021, 95.8796, 0.3814", "301.433, 280.564, 97.3442, 0.356", "300.331, 280.256, 97.2896, 0.3304", "300.44, 279.821, 98.8442, 0.4068", "300.328, 279.273, 100.524, 0.483", "299.495, 278.653, 101.699, 0.483", "299.054, 277.883, 102.662, 0.4068", "299.395, 276.815, 103.206, 0.3304", "299.713, 275.743, 103.653, 0.305", "299.726, 274.643, 102.881, 0.2796", "299.729, 273.518, 102.549, 0.2542", "299.727, 272.374, 102.511, 0.2288", "299.512, 272.223, 104.718, 0.356", "299.25, 272.04, 107.407, 0.2796", "298.988, 271.857, 110.095, 0.2542", "298.726, 271.674, 112.783, 0.2542", "298.464, 271.49, 115.472, 0.2796", "298.202, 271.306, 118.16, 0.305", "297.757, 270.983, 117.898, 0.305", "297.06, 270.257, 116.853, 0.305", "296.628, 269.452, 115.169, 0.305", "295.783, 269.018, 114.189, 0.305", "294.679, 268.818, 113.65, 0.305", "293.775, 268.889, 114.484, 0.305", "293.044, 269.195, 116.507, 0.2796", "291.989, 269.35, 116.138, 0.305", "291.625, 269.784, 117.203, 0.3814", "291.772, 270.426, 119.494, 0.5084", "290.933, 270.932, 120.336, 0.5848", "290.014, 271.111, 121.946, 0.6102", "289.024, 271.014, 123.162, 0.5848", "288.011, 270.722, 124.175, 0.5084", "287.526, 270.216, 126.388, 0.3814", "287.581, 269.248, 127.758, 0.3304", "287.684, 268.239, 129.053, 0.3304", "287.817, 267.601, 131.206, 0.4322", "287.962, 267.116, 133.718, 0.4576", "288.01, 266.809, 136.364, 0.483", "287.964, 266.68, 139.143, 0.4068", "288.241, 267.004, 141.249, 0.3814", "288.842, 267.782, 142.678, 0.3814", "289.444, 268.561, 144.107, 0.4322" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "353.045, 330.299, 46.4806, 0.661", "352.239, 329.922, 46.4223, 0.6864", "351.192, 329.475, 46.2756, 0.7118", "350.102, 329.168, 45.8758, 0.6864", "349.013, 328.86, 45.4756, 0.5848", "348.066, 329.156, 46.373, 0.5338", "347.159, 329.624, 47.6398, 0.5592", "346.687, 330.598, 48.032, 0.7118", "346.3, 331.671, 48.2532, 0.8644" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "366.308, 256.599, 37.52, 0.4322", "366.523, 256.333, 37.3822, 0.2796", "367.232, 255.455, 36.9275, 0.2542", "367.941, 254.577, 36.4728, 0.2288", "368.651, 253.699, 36.0181, 0.2288", "369.36, 252.821, 35.5636, 0.2288", "370.069, 251.942, 35.1089, 0.2542", "370.611, 250.988, 34.5444, 0.2796", "370.91, 249.924, 33.8204, 0.305", "371.176, 248.841, 33.3581, 0.305", "371.375, 247.715, 33.4522, 0.305", "371.481, 246.6, 33.5227, 0.305", "371.02, 245.553, 33.4502, 0.3304", "370.559, 244.506, 33.3777, 0.356", "370.237, 243.411, 33.4242, 0.4068", "369.946, 242.305, 33.4964, 0.3814", "369.477, 241.29, 33.1439, 0.3814", "368.909, 240.327, 32.552, 0.356", "368.374, 239.335, 32.216, 0.3814", "367.888, 238.3, 32.2549, 0.356", "367.604, 237.207, 32.317, 0.3304", "367.469, 236.071, 32.3963, 0.305", "367.431, 234.943, 32.5909, 0.356", "367.628, 233.834, 33.07, 0.4322", "367.835, 232.727, 33.5552, 0.5084", "368.234, 231.684, 34.1659, 0.483", "368.628, 230.637, 34.7346, 0.3814", "368.968, 229.547, 34.8908, 0.305", "369.307, 228.456, 35.047, 0.2796", "369.678, 227.385, 35.3996, 0.305", "370.058, 226.319, 35.8123, 0.2796", "370.132, 225.212, 36.4689, 0.2542", "370.185, 224.103, 37.1428, 0.2288", "370.661, 223.122, 37.9403, 0.2288", "371.111, 222.122, 38.6249, 0.2288", "371.333, 221.003, 38.8315, 0.2288", "371.556, 219.884, 39.0382, 0.2542", "371.149, 218.851, 39.6122, 0.305", "370.713, 217.821, 40.203, 0.356", "370.274, 216.797, 40.0263, 0.3814", "369.835, 215.776, 39.3697, 0.3814", "369.283, 214.833, 39.1966, 0.3814", "368.515, 214.047, 39.9647, 0.3814", "367.961, 213.14, 40.7392, 0.3814", "367.692, 212.075, 41.5218, 0.3814", "367.343, 211.067, 42.4729, 0.356", "366.88, 210.144, 43.6733, 0.356", "366.506, 209.182, 44.1938, 0.356", "366.335, 208.13, 43.1665, 0.4322", "366.176, 207.067, 43.2205, 0.4322", "366.026, 205.993, 44.114, 0.4322", "365.945, 204.932, 45.082, 0.3814", "366.092, 203.912, 46.2974, 0.4068", "366.293, 202.979, 45.724, 0.4322", "366.529, 202.101, 44.0238, 0.4068", "366.761, 200.997, 44.1972, 0.356", "366.994, 199.882, 44.4578, 0.3304", "366.905, 199.132, 45.1298, 0.661", "366.753, 198.069, 46.0902, 0.5338", "366.522, 197.022, 47.0666, 0.5084", "366.289, 195.975, 48.043, 0.5592", "366.883, 195.073, 47.7652, 0.5084", "367.588, 194.192, 47.3169, 0.4322", "367.84, 193.183, 47.9531, 0.3814", "367.9, 192.131, 49.0154, 0.3814", "367.428, 191.254, 50.3913, 0.3304", "367.283, 190.393, 52.0965, 0.2796", "367.296, 189.539, 53.9616, 0.2288", "367.761, 188.751, 53.2554, 0.2542", "368.358, 187.981, 51.7882, 0.2796", "368.134, 186.948, 50.752, 0.3304", "368.029, 185.949, 50.7324, 0.3304", "368.137, 185.012, 52.3191, 0.356", "368.133, 183.948, 53.1826, 0.3304", "368.094, 182.826, 53.65, 0.3304", "368.179, 181.698, 53.2524, 0.2796", "368.27, 180.568, 52.9516, 0.2796", "368.376, 179.431, 53.1493, 0.3304", "368.491, 178.308, 53.4862, 0.4576", "368.644, 177.245, 54.4482, 0.5592", "368.952, 176.254, 55.5598, 0.5592", "369.382, 175.32, 56.7885, 0.483", "369.7, 174.269, 56.6499, 0.3814", "369.985, 173.183, 56.1106, 0.356", "370.244, 172.148, 55.1144, 0.356", "370.503, 171.123, 54.1626, 0.4068", "370.715, 170.408, 56.2864, 0.483", "370.838, 169.648, 58.2582, 0.5338", "370.531, 168.67, 59.505, 0.5592", "370.417, 167.66, 60.583, 0.483", "370.65, 166.584, 61.222, 0.4576", "370.734, 165.467, 60.6458, 0.4068", "370.821, 164.355, 60.1852, 0.3814", "370.949, 163.317, 61.3166, 0.305", "371.15, 162.302, 62.4352, 0.2542", "371.702, 161.397, 63.4934, 0.2288", "372.08, 160.402, 63.9537, 0.2288", "372.21, 159.279, 63.5457, 0.2542", "372.729, 158.374, 63.7134, 0.2796", "373.579, 157.658, 64.37, 0.3304", "374.333, 156.809, 64.1147, 0.3304", "375.07, 155.942, 63.8649, 0.3304", "375.702, 154.99, 64.0074, 0.2796", "376.293, 154.017, 64.1522, 0.305", "376.728, 152.961, 64.3034, 0.3304", "377.224, 151.952, 64.4843, 0.3814", "378.115, 151.251, 64.862, 0.356", "379.006, 150.55, 65.24, 0.3304" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "366.308, 256.599, 37.52, 0.4322", "366.255, 256.008, 37.6872, 0.2796", "366.097, 254.905, 37.4046, 0.2796", "365.892, 253.825, 36.6246, 0.305", "365.743, 252.731, 35.978, 0.356", "365.774, 251.592, 35.7633, 0.356", "365.803, 250.451, 35.5482, 0.305", "365.777, 249.309, 35.4712, 0.2542", "365.739, 248.166, 35.4239, 0.2288", "365.705, 247.023, 35.3671, 0.2288", "365.681, 245.879, 35.2904, 0.2288", "365.658, 244.736, 35.2139, 0.2288", "365.523, 243.614, 35.5832, 0.2288", "365.366, 242.496, 36.0444, 0.2288", "365.037, 241.408, 36.2558, 0.2288", "364.673, 240.325, 36.4157, 0.2288", "364.296, 239.247, 36.2877, 0.2288", "363.917, 238.168, 36.1598, 0.2542", "363.545, 237.087, 36.2074, 0.2796", "363.177, 236.006, 36.3336, 0.305", "362.519, 235.148, 36.477, 0.2796", "361.566, 234.517, 36.6377, 0.2796", "360.817, 233.685, 36.8402, 0.305", "360.184, 232.736, 37.0675, 0.356", "359.768, 231.725, 37.296, 0.356", "359.797, 230.586, 37.5276, 0.305", "359.827, 229.446, 37.7594, 0.2542", "359.595, 228.326, 37.779, 0.2288", "359.357, 227.208, 37.7941, 0.2288", "358.789, 226.264, 37.9742, 0.2288", "358.017, 225.428, 38.2558, 0.2796", "357.341, 224.512, 38.386, 0.3304", "356.721, 223.55, 38.4275, 0.3814", "356.12, 222.577, 38.4586, 0.3304", "355.547, 221.587, 38.4756, 0.2796", "354.98, 220.595, 38.5039, 0.2288", "354.713, 219.508, 39.086, 0.2288", "354.446, 218.422, 39.6684, 0.2542", "354.098, 217.337, 39.76, 0.2796", "353.735, 216.251, 39.76, 0.3814", "353.672, 215.16, 40.2618, 0.4576", "353.768, 214.064, 41.0318, 0.5592", "353.663, 212.979, 41.6828, 0.5084", "353.333, 211.903, 42.1991, 0.4322", "352.938, 210.846, 42.376, 0.305", "352.465, 209.809, 42.1406, 0.2542", "352.006, 208.765, 42.0255, 0.2288", "351.578, 207.706, 42.1921, 0.2542", "351.169, 206.64, 42.359, 0.3304", "350.817, 205.554, 42.5264, 0.4068", "350.374, 204.512, 42.7585, 0.4576", "349.792, 203.536, 43.0903, 0.4068", "349.192, 202.57, 43.3804, 0.4068", "348.529, 201.64, 43.5106, 0.3814", "347.865, 200.71, 43.6411, 0.4576", "347.346, 199.718, 44.1622, 0.4322", "346.86, 198.713, 44.7689, 0.4322", "345.919, 197.772, 44.5878, 0.356", "345.12, 196.966, 44.3078, 0.305", "344.329, 196.158, 43.8628, 0.2542", "343.539, 195.352, 43.4179, 0.2288", "342.906, 194.53, 44.5844, 0.2542", "342.187, 193.79, 45.6378, 0.3304", "341.183, 193.302, 46.256, 0.483", "340.378, 192.579, 46.6836, 0.6102", "339.786, 191.604, 46.9053, 0.6356", "339.211, 190.849, 48.4422, 0.5592", "338.469, 190.19, 49.4701, 0.4576", "337.443, 189.684, 49.548, 0.4068", "336.758, 188.805, 49.6639, 0.3304", "336.105, 187.931, 50.2732, 0.2796", "335.394, 187.162, 51.3996, 0.2288", "334.588, 186.403, 51.6233, 0.2288", "333.732, 185.651, 51.3722, 0.2542", "333.21, 184.702, 51.8969, 0.2796", "332.807, 183.683, 52.7013, 0.305", "332.268, 182.697, 52.8301, 0.305", "331.67, 181.723, 52.6705, 0.305", "331.283, 180.726, 53.195, 0.305", "331.098, 179.704, 54.3718, 0.2796", "331.139, 178.616, 55.2196, 0.2796", "331.178, 177.529, 56.0283, 0.2796", "330.407, 176.703, 55.6074, 0.356", "329.82, 175.728, 55.7785, 0.4068", "329.248, 174.741, 55.9922, 0.5084", "328.359, 174.02, 55.9961, 0.5084", "327.467, 173.311, 55.9572, 0.5084", "326.487, 172.838, 55.0861, 0.4068", "325.586, 172.36, 55.5204, 0.3814", "324.746, 171.877, 57.01, 0.3814", "323.74, 171.387, 56.863, 0.4322", "322.818, 170.894, 56.166, 0.4322", "322.31, 170.389, 53.9846, 0.356", "321.617, 169.85, 52.8956, 0.2796", "320.657, 169.265, 53.4036, 0.305", "319.837, 168.739, 54.6266, 0.3814", "319.162, 168.274, 56.5816, 0.483", "318.405, 167.533, 55.7127, 0.4322", "317.655, 166.777, 55.0987, 0.4068", "316.963, 166.008, 56.2932, 0.3814", "316.269, 165.239, 57.4876, 0.4576", "315.368, 164.964, 59.0458, 0.483", "314.487, 164.645, 60.4937, 0.483", "313.91, 163.658, 60.6472, 0.4322", "313.208, 162.773, 60.4038, 0.4068", "312.422, 161.973, 60.7278, 0.356", "311.625, 161.19, 61.32, 0.3304" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "395.187, 340.683, 48.3157, 0.2796", "395.48, 340.683, 48.44, 0.2288" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "395.187, 340.683, 48.3157, 0.2796", "395.23, 341.43, 48.2182, 0.2796", "395.299, 342.571, 48.0939, 0.356", "395.373, 343.712, 48.1278, 0.3814", "395.418, 344.851, 48.1561, 0.4068", "395.162, 345.966, 48.1239, 0.3304", "394.904, 347.08, 48.0914, 0.305", "394.606, 348.167, 47.7159, 0.2796", "394.28, 349.237, 47.1176, 0.3304", "394.038, 350.336, 46.7555, 0.3304", "393.887, 351.47, 46.6469, 0.3304", "393.729, 352.601, 46.5438, 0.2796", "393.535, 353.728, 46.4668, 0.305", "393.339, 354.855, 46.3896, 0.356", "393.169, 355.987, 46.3994, 0.4322", "393.015, 357.119, 46.4164, 0.4068", "392.944, 358.257, 46.2062, 0.3304", "392.874, 359.397, 45.9956, 0.2796", "392.898, 360.525, 46.2465, 0.2796", "392.976, 361.647, 46.7569, 0.305", "392.801, 362.71, 46.4321, 0.2796", "392.448, 363.733, 45.5216, 0.2542", "392.231, 364.816, 45.08, 0.2288", "392.142, 365.956, 45.08, 0.2288", "392.061, 367.097, 45.064, 0.2288", "392.243, 368.207, 44.5584, 0.2288", "392.359, 369.316, 44.1277, 0.2288", "392.066, 370.423, 44.1482, 0.2288", "391.774, 371.529, 44.1686, 0.2288", "391.174, 372.406, 45.1648, 0.2288", "390.561, 373.275, 46.2, 0.2542", "390.408, 373.749, 46.2392, 0.305", "390.058, 374.839, 46.3296, 0.2542", "389.708, 375.926, 46.4198, 0.2288", "389.358, 377.016, 46.51, 0.2288", "389.008, 378.103, 46.5998, 0.2542", "388.59, 379.156, 46.4279, 0.2796", "388.092, 380.168, 45.9528, 0.305", "387.674, 381.225, 45.8573, 0.2796", "387.292, 382.303, 45.9276, 0.2542", "386.886, 383.368, 45.8424, 0.2288", "386.43, 384.402, 45.4163, 0.2542", "386.157, 385.403, 45.8856, 0.2796", "386.084, 386.372, 47.3357, 0.305", "385.735, 387.457, 47.5902, 0.2796", "385.385, 388.54, 47.8447, 0.2542", "385.088, 389.637, 48.1799, 0.2288", "384.793, 390.733, 48.5164, 0.2542", "384.591, 391.85, 48.8558, 0.2796", "384.418, 392.972, 49.1963, 0.305", "384.225, 394.066, 49.8431, 0.2796", "384.024, 395.147, 50.6145, 0.2542", "383.929, 396.252, 51.2179, 0.2288", "383.935, 397.382, 51.6589, 0.2288", "383.96, 398.509, 52.0825, 0.2542", "384.385, 399.569, 52.1363, 0.2796", "384.812, 400.631, 52.19, 0.305", "384.875, 401.743, 52.4129, 0.2796", "384.78, 402.877, 52.7097, 0.2542", "384.577, 403.967, 53.347, 0.2288", "384.342, 405.045, 54.089, 0.2288", "384.237, 406.168, 54.32, 0.2288", "384.191, 407.311, 54.32, 0.2288", "384.096, 408.445, 54.3897, 0.2288", "383.792, 409.537, 54.756, 0.2796", "383.486, 410.63, 55.1222, 0.4322", "382.805, 411.501, 55.734, 0.6102", "382.082, 412.348, 56.3741, 0.6864", "381.683, 413.355, 57.0693, 0.6102", "381.417, 414.428, 57.7875, 0.5338", "380.875, 415.35, 58.4116, 0.5084", "380.054, 416.116, 58.9394, 0.5084", "379.55, 416.973, 59.5932, 0.4322", "379.746, 418.034, 60.5265, 0.3814", "379.657, 417.832, 62.2202, 0.3304", "379.442, 417.074, 64.2494, 0.3814", "379.29, 418.062, 64.12, 0.3814", "379.144, 419.189, 63.8173, 0.4322", "378.594, 419.545, 65.7003, 0.3814", "377.971, 419.758, 67.9893, 0.4068", "377.441, 420.592, 69.3731, 0.4322", "376.594, 421.017, 70.2066, 0.5084", "375.46, 421.064, 70.5673, 0.5084", "375.06, 421.826, 72.1641, 0.483", "374.574, 422.682, 73.0834, 0.483", "373.846, 423.558, 72.83, 0.483", "372.879, 424.017, 73.5804, 0.4576", "372.0, 424.52, 74.6326, 0.4322", "371.514, 425.369, 76.083, 0.4322", "371.039, 426.226, 77.5303, 0.4576", "370.585, 427.095, 78.9723, 0.4068", "370.172, 427.808, 80.8643, 0.3814", "369.77, 428.521, 82.6689, 0.3304", "369.322, 429.548, 83.2342, 0.3304", "368.493, 430.182, 84.0776, 0.2796", "367.596, 430.757, 84.8033, 0.2796", "367.022, 431.726, 84.3248, 0.305", "366.382, 432.634, 84.2937, 0.356", "365.625, 433.431, 85.0727, 0.4068", "364.889, 434.238, 85.9009, 0.4322", "364.162, 435.051, 86.7488, 0.483", "363.413, 435.875, 87.3936, 0.4576", "362.66, 436.698, 87.946, 0.4322", "361.854, 437.493, 87.5347, 0.356", "361.045, 438.197, 87.5361, 0.3304", "360.221, 438.505, 89.3242, 0.2796", "359.4, 438.9, 90.9244, 0.2542", "358.591, 439.625, 91.8061, 0.2542", "357.827, 440.287, 91.4469, 0.2796", "357.107, 440.882, 89.833, 0.305", "357.228, 441.869, 90.9905, 0.2796", "357.387, 442.874, 92.2704, 0.305", "357.85, 443.85, 91.9895, 0.356", "358.392, 444.818, 91.3069, 0.4322", "358.244, 445.936, 91.0148, 0.4068", "358.074, 447.06, 90.7586, 0.3814", "358.22, 448.17, 91.3321, 0.356", "358.406, 449.273, 91.8504, 0.4068", "358.852, 450.324, 92.0189, 0.3814", "359.171, 451.4, 91.8954, 0.356", "359.3, 452.514, 91.334, 0.305", "358.501, 453.184, 92.29, 0.3304", "357.659, 453.835, 93.3181, 0.3814", "357.195, 454.864, 93.7079, 0.4068", "356.734, 455.898, 94.078, 0.4322", "355.992, 456.764, 94.3356, 0.4068", "355.227, 457.599, 94.633, 0.4068", "354.316, 458.254, 95.1684, 0.3814", "353.345, 458.79, 95.2277, 0.4322", "352.289, 459.157, 94.6246, 0.483", "351.434, 459.762, 94.9637, 0.5084", "350.733, 460.553, 96.0389, 0.483", "349.666, 460.951, 96.2909, 0.5084", "348.598, 461.349, 96.5423, 0.5848", "347.825, 462.036, 97.5304, 0.6356", "347.137, 462.807, 98.7319, 0.6356", "346.632, 463.541, 100.454, 0.5848", "346.176, 464.266, 102.3, 0.5848", "346.811, 465.216, 102.447, 0.5848", "347.575, 465.232, 103.122, 0.6102", "348.428, 464.6, 104.162, 0.5592", "349.406, 464.415, 104.991, 0.4576", "350.499, 464.637, 105.625, 0.3814", "351.583, 464.391, 105.538, 0.356", "352.667, 464.037, 105.287, 0.4322", "353.762, 464.069, 105.246, 0.4322", "354.864, 464.37, 105.352, 0.4322", "355.733, 465.027, 105.028, 0.3304", "356.383, 465.913, 104.631, 0.2796", "356.563, 467.037, 104.898, 0.2796", "356.945, 468.081, 105.311, 0.3814", "357.5, 469.058, 105.85, 0.5084", "358.169, 469.947, 106.356, 0.5338", "358.985, 470.727, 106.819, 0.483", "359.824, 471.468, 106.549, 0.4068", "360.675, 472.186, 105.915, 0.3814", "361.55, 472.743, 106.562, 0.4068", "362.437, 473.211, 107.908, 0.4576", "363.142, 473.993, 108.183, 0.5592", "363.743, 474.957, 107.84, 0.5848", "364.6, 475.593, 108.128, 0.5848", "365.624, 476.016, 108.828, 0.5084", "366.586, 476.462, 108.364, 0.483", "367.51, 476.923, 107.158, 0.4322", "368.206, 477.599, 107.93, 0.4068", "368.818, 478.352, 109.411, 0.4322", "369.178, 479.415, 109.935, 0.4576", "369.535, 480.481, 110.448, 0.483", "369.392, 481.567, 110.319, 0.4068", "368.91, 482.584, 110.433, 0.356", "368.329, 483.556, 110.818, 0.2796" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "393.802, 324.782, 32.1068, 0.5084", "393.916, 325.271, 31.4188, 0.2796", "394.145, 326.244, 30.0532, 0.3304", "394.463, 326.532, 29.4241, 0.4068", "395.19, 327.191, 27.9854, 0.3814", "395.869, 328.096, 27.7558, 0.3304", "396.485, 329.054, 27.7754, 0.3814", "397.047, 330.049, 27.9563, 0.5084", "397.464, 331.066, 27.7306, 0.6356", "397.609, 332.126, 26.7439, 0.6102", "397.538, 333.116, 26.3192, 0.483", "396.86, 333.905, 27.4817, 0.3814", "396.424, 334.771, 26.7537, 0.4068", "396.09, 335.669, 25.2218, 0.5084", "396.16, 336.746, 24.2953, 0.5338", "396.231, 337.823, 23.3688, 0.4576", "397.022, 338.582, 22.5683, 0.356", "397.457, 339.506, 21.7655, 0.305", "397.523, 340.6, 20.9614, 0.305", "397.936, 341.524, 20.0514, 0.2796", "398.683, 342.285, 19.04, 0.2796" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "393.802, 324.782, 32.1068, 0.5084", "394.787, 325.164, 31.4014, 0.356", "395.919, 325.3, 31.6252, 0.4322", "397.048, 325.451, 31.8105, 0.4576", "398.135, 325.791, 31.5484, 0.4576", "399.222, 326.132, 31.2861, 0.4068", "400.303, 326.447, 31.7248, 0.4068", "401.385, 326.756, 32.1216, 0.4322", "402.482, 327.023, 31.6672, 0.4068", "403.579, 327.29, 31.2124, 0.3814", "404.543, 327.834, 31.8861, 0.356", "405.476, 328.422, 32.5844, 0.4322", "406.303, 329.167, 33.2368, 0.4576", "406.974, 330.007, 33.735, 0.483", "407.185, 331.131, 33.7831, 0.4576", "407.494, 332.199, 33.7495, 0.483", "408.317, 332.971, 33.287, 0.5084", "409.119, 333.763, 32.8429, 0.483", "409.76, 334.702, 32.5385, 0.3814", "410.345, 335.681, 32.4551, 0.2796", "410.888, 336.686, 32.527, 0.2288", "411.423, 337.679, 32.8558, 0.2542", "411.94, 338.647, 33.6468, 0.2796", "412.665, 339.507, 33.8016, 0.3304", "413.457, 340.332, 33.7487, 0.4068", "413.955, 341.316, 33.5003, 0.483", "414.247, 342.411, 33.1142, 0.5084", "414.936, 343.215, 32.7684, 0.4068", "415.899, 343.818, 32.4506, 0.305", "416.589, 344.633, 32.1418, 0.2796", "416.938, 345.717, 31.8444, 0.3304", "417.313, 346.788, 31.5028, 0.4068", "417.747, 347.83, 31.0596, 0.3814", "418.162, 348.879, 30.6138, 0.356", "418.376, 349.986, 30.147, 0.305", "418.589, 351.094, 29.68, 0.3304" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "390.37, 308.753, 34.8443, 0.7118", "391.354, 307.977, 33.9436, 0.5848", "392.076, 307.171, 33.0355, 0.483", "392.927, 306.495, 33.3077, 0.4068", "393.834, 305.875, 34.0939, 0.4322", "394.603, 305.08, 33.7271, 0.4322", "395.343, 304.247, 33.1041, 0.4576", "396.231, 303.653, 34.1037, 0.4068", "397.12, 303.059, 35.1033, 0.4322", "398.119, 302.548, 34.9801, 0.4068", "399.141, 302.054, 34.6268, 0.4068" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "390.37, 308.753, 34.8443, 0.7118", "390.876, 307.082, 34.7264, 0.5592", "391.302, 306.023, 34.7648, 0.5848", "391.456, 304.947, 35.6336, 0.6356", "391.61, 303.869, 36.5025, 0.6864", "391.968, 302.793, 36.7637, 0.6356", "392.345, 301.716, 36.9642, 0.6102", "392.064, 300.659, 37.4746, 0.5592", "391.716, 299.6, 38.0024, 0.5084", "391.913, 298.473, 38.0447, 0.3814", "392.081, 297.345, 38.099, 0.356", "392.026, 296.203, 38.2449, 0.4576", "391.971, 295.063, 38.3911, 0.661" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "320.713, 321.934, 22.2132, 0.5848", "320.173, 321.584, 23.5668, 0.3814", "319.341, 321.081, 25.0432, 0.3304", "318.564, 320.619, 25.5937, 0.4068", "317.951, 320.28, 23.38, 0.4576", "317.127, 320.023, 21.8403, 0.4576", "316.024, 319.87, 21.1912, 0.4068", "314.921, 319.683, 20.762, 0.483", "313.813, 319.402, 20.8978, 0.5848", "312.716, 319.098, 21.0336, 0.661", "311.787, 318.434, 21.1725, 0.5848", "310.844, 317.82, 21.3536, 0.5592", "309.736, 317.831, 22.0447, 0.5338", "308.627, 317.841, 22.736, 0.5592", "307.602, 318.29, 22.3899, 0.483", "306.585, 318.783, 21.9453, 0.483", "305.468, 318.689, 22.0886, 0.483", "304.339, 318.527, 22.2998, 0.5848", "303.339, 318.069, 22.3888, 0.6102", "302.455, 317.341, 22.3675, 0.6356", "301.531, 316.714, 22.381, 0.5592", "300.396, 316.594, 22.57, 0.5848", "299.261, 316.473, 22.7592, 0.5848", "298.12, 316.42, 22.7987, 0.661", "296.976, 316.385, 22.8024, 0.5592", "295.837, 316.356, 22.9552, 0.5084", "294.709, 316.346, 23.4203, 0.4322", "293.593, 316.352, 23.4531, 0.4576", "292.499, 316.388, 22.6349, 0.4322", "291.388, 316.426, 22.1542, 0.4322", "290.247, 316.465, 22.2751, 0.5084", "289.104, 316.497, 22.4006, 0.661", "287.962, 316.474, 22.5616, 0.7626", "286.82, 316.451, 22.7226, 0.7372", "285.685, 316.344, 22.9298, 0.5848", "284.552, 316.216, 23.1468, 0.4576", "283.422, 316.077, 23.4097, 0.3814", "282.296, 315.92, 23.7275, 0.4322", "281.19, 315.996, 23.4811, 0.5084", "280.097, 316.223, 22.8673, 0.6102", "279.003, 316.327, 22.4809, 0.661", "277.904, 316.043, 22.82, 0.6356", "276.805, 315.758, 23.1591, 0.5338", "275.705, 315.504, 22.8301, 0.4322", "274.606, 315.258, 22.342, 0.4322", "273.567, 314.817, 22.0136, 0.5084", "272.552, 314.3, 21.7473, 0.5338", "271.545, 313.87, 22.3224, 0.4576", "270.54, 313.477, 23.2546, 0.3814", "269.457, 313.354, 23.2459, 0.3814", "268.331, 313.375, 22.7455, 0.4576", "267.203, 313.332, 22.622, 0.4576", "266.073, 313.217, 22.9429, 0.483", "264.944, 313.112, 23.2868, 0.483", "263.818, 313.075, 23.791, 0.5848", "262.693, 313.038, 24.2861, 0.6102", "261.551, 313.024, 24.2007, 0.7118", "260.407, 313.01, 24.1153, 0.8136", "259.345, 312.7, 24.332, 0.8898", "258.34, 312.182, 24.761, 0.788", "257.261, 311.94, 24.8422, 0.5592", "256.12, 311.931, 24.6336, 0.4068", "254.977, 311.927, 24.6162, 0.4068", "253.834, 311.925, 24.6977, 0.5338", "252.719, 311.731, 24.953, 0.6102", "251.615, 311.462, 25.2742, 0.6356", "250.512, 311.183, 25.3982, 0.5848", "249.41, 310.888, 25.17, 0.6102", "248.309, 310.593, 24.9418, 0.6356", "247.222, 310.263, 25.2132, 0.661", "246.135, 309.929, 25.5374, 0.6102", "245.218, 309.298, 25.5914, 0.5084", "244.388, 308.51, 25.5038, 0.4576", "243.661, 307.67, 26.0173, 0.4576", "242.972, 306.807, 26.7568, 0.5338", "242.074, 306.163, 27.1835, 0.5338", "241.065, 305.636, 27.4422, 0.483", "240.087, 305.56, 28.2226, 0.4322", "239.141, 305.928, 29.5134, 0.483", "238.096, 306.237, 29.6206, 0.5592", "237.005, 306.518, 29.1449, 0.6102", "235.95, 306.895, 29.1105, 0.5848", "234.942, 307.394, 29.6262, 0.5848", "234.112, 307.672, 31.2766, 0.5338", "233.326, 307.868, 33.2007, 0.5084", "232.271, 307.434, 32.9742, 0.4068", "231.224, 307.091, 32.9031, 0.356", "230.24, 307.443, 34.0404, 0.2796", "229.256, 307.796, 35.1778, 0.2796", "228.45, 308.056, 37.0353, 0.305", "227.668, 308.306, 38.9827, 0.3814", "226.687, 308.729, 39.569, 0.4068", "225.65, 309.205, 39.751, 0.4322", "224.527, 309.16, 39.3042, 0.4068", "223.402, 309.095, 38.831, 0.4576", "222.386, 309.444, 39.1636, 0.4576", "221.421, 309.987, 39.8717, 0.5338", "220.504, 310.565, 40.7434, 0.5084", "219.618, 311.169, 41.7278, 0.483", "218.622, 311.415, 42.0871, 0.4322", "217.497, 311.257, 41.7365, 0.4576", "216.395, 311.125, 41.9152, 0.5848", "215.321, 311.027, 42.8576, 0.6356", "214.26, 310.869, 43.6948, 0.6356", "213.268, 310.3, 43.8108, 0.483", "212.277, 309.731, 43.9267, 0.4576", "211.443, 309.629, 45.428, 0.5084", "210.672, 309.716, 47.4869, 0.6356", "209.765, 310.097, 48.5078, 0.6356", "208.777, 310.649, 48.9252, 0.6102", "207.709, 310.909, 48.4658, 0.6102", "206.617, 311.086, 47.7481, 0.6102", "205.658, 311.563, 47.714, 0.5592", "204.813, 312.299, 48.2706, 0.5084", "203.828, 312.757, 48.7799, 0.5338", "202.719, 312.971, 49.2478, 0.5592", "201.61, 313.183, 49.6882, 0.5848", "200.496, 313.391, 50.0746, 0.6356", "199.392, 313.616, 50.5226, 0.788", "198.353, 313.949, 51.3556, 0.8644", "197.322, 314.315, 52.113, 0.839", "196.37, 314.947, 52.2654, 0.6356", "195.374, 315.486, 52.4779, 0.4576", "194.305, 315.874, 52.7898, 0.305", "193.235, 316.123, 53.317, 0.2796", "192.161, 316.09, 54.2758, 0.3304", "191.087, 316.029, 55.1799, 0.4576", "190.012, 315.651, 55.4478, 0.5338", "188.938, 315.273, 55.7155, 0.5338", "188.141, 314.876, 57.4608, 0.4576", "187.344, 314.522, 59.1172, 0.4068", "186.44, 315.133, 58.273, 0.356", "185.615, 315.699, 58.2837, 0.305", "184.976, 316.162, 60.3117, 0.305", "184.334, 316.758, 61.5717, 0.3814", "183.687, 317.674, 61.0207, 0.483", "183.034, 318.585, 60.4657, 0.5084", "182.125, 319.206, 59.7044, 0.4576", "181.234, 319.826, 59.2217, 0.4576", "180.466, 320.44, 60.6505, 0.5084", "179.677, 321.048, 62.0007, 0.5848", "178.695, 321.583, 62.5932, 0.5848", "177.714, 322.118, 63.1859, 0.5592", "176.919, 322.872, 63.8621, 0.5084", "176.19, 323.705, 64.5683, 0.4576", "175.339, 324.384, 64.969, 0.356", "174.268, 324.779, 64.8147, 0.3304", "173.209, 325.195, 64.7578, 0.356", "172.239, 325.746, 65.3766, 0.4322", "171.247, 326.25, 65.4296, 0.4068", "170.227, 326.697, 64.7836, 0.3814", "169.171, 326.952, 65.0, 0.356", "168.09, 327.062, 65.8708, 0.4576", "166.999, 327.057, 65.8168, 0.483", "165.9, 326.969, 65.0703, 0.5084", "164.863, 327.384, 64.839, 0.3814", "163.838, 327.889, 64.6971, 0.305", "162.735, 327.962, 64.9312, 0.2288", "161.604, 327.881, 65.2991, 0.2542", "160.537, 328.217, 65.4388, 0.2796", "159.487, 328.672, 65.5136, 0.3304", "158.744, 329.054, 63.7518, 0.3304", "158.043, 329.426, 61.7352, 0.3304", "157.248, 329.89, 63.1238, 0.2796", "156.311, 330.2, 64.3157, 0.2542", "155.201, 330.307, 64.944, 0.2542", "154.104, 330.478, 65.6054, 0.3304", "153.02, 330.707, 66.2978, 0.4322", "151.959, 330.974, 67.0981, 0.5338", "150.933, 331.293, 68.0571, 0.5338", "149.879, 331.504, 68.705, 0.483", "148.744, 331.402, 68.4552, 0.356", "147.608, 331.292, 68.3656, 0.2796", "146.471, 331.174, 68.4849, 0.2288", "145.334, 331.083, 68.5868, 0.2796", "144.191, 331.145, 68.5838, 0.3814", "143.056, 331.205, 68.759, 0.5338", "141.937, 331.26, 69.3322, 0.6102", "140.846, 331.329, 69.6472, 0.6102", "139.961, 331.505, 67.9266, 0.5084", "139.084, 331.648, 66.5498, 0.4322", "138.298, 331.467, 68.5339, 0.356", "137.481, 331.292, 70.4066, 0.356", "136.408, 331.175, 71.3392, 0.3304", "135.321, 331.083, 70.9128, 0.356", "134.228, 330.997, 70.1078, 0.3304", "133.951, 330.432, 71.6842, 0.3304", "133.723, 329.819, 73.5991, 0.3304", "132.604, 329.624, 73.9262, 0.4068", "131.485, 329.424, 74.1695, 0.483", "130.362, 329.199, 74.1054, 0.483", "129.273, 328.881, 74.0314, 0.3814", "128.242, 328.384, 73.939, 0.2796", "127.244, 328.084, 73.274, 0.2288", "126.291, 328.091, 71.7251, 0.2288", "125.468, 327.793, 69.9404, 0.2288", "124.71, 327.372, 68.2282, 0.2288", "124.216, 326.463, 67.0286, 0.2288", "123.523, 325.684, 66.4317, 0.2288", "122.555, 325.084, 66.6691, 0.2288", "121.607, 324.591, 67.1611, 0.2288", "120.78, 324.696, 69.0805, 0.2288", "120.051, 324.602, 71.0791, 0.2796", "119.52, 324.105, 73.2385, 0.356", "118.882, 323.662, 75.1307, 0.483", "117.805, 323.439, 75.896, 0.5084", "116.756, 323.131, 76.022, 0.5084", "115.745, 322.701, 75.2298, 0.4068", "114.728, 322.293, 74.4638, 0.4068", "113.592, 322.272, 74.1549, 0.3814", "112.455, 322.251, 73.8464, 0.4322", "111.366, 322.023, 74.4702, 0.3814", "110.273, 321.826, 75.0893, 0.4068", "109.141, 321.877, 75.474, 0.4068", "108.058, 322.17, 75.7109, 0.4576", "107.007, 322.617, 75.8512, 0.4576", "106.004, 322.495, 75.0658, 0.5084", "105.018, 322.15, 73.92, 0.5848" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "320.713, 321.934, 22.2132, 0.5848", "319.333, 322.707, 22.272, 0.6356", "318.192, 322.718, 22.076, 0.661", "317.053, 322.751, 21.9114, 0.6356", "315.935, 322.99, 22.0114, 0.5338", "314.903, 323.332, 22.0864, 0.483", "314.47, 324.39, 21.9859, 0.4322", "314.037, 325.449, 21.8856, 0.4576", "312.922, 325.539, 22.0534, 0.4576", "311.783, 325.606, 22.2326, 0.5848", "310.651, 325.755, 22.4224, 0.7118", "309.52, 325.904, 22.6122, 0.788", "308.4, 326.106, 22.8939, 0.7118", "307.289, 326.339, 23.2271, 0.6102", "306.169, 326.517, 23.352, 0.5338", "305.035, 326.58, 23.0308, 0.5338", "303.907, 326.723, 22.7769, 0.483", "302.788, 326.947, 22.5924, 0.4576", "301.713, 327.296, 22.3905, 0.5084", "300.698, 327.815, 22.1642, 0.6102", "299.679, 328.326, 21.9274, 0.6356", "298.646, 328.805, 21.6563, 0.5084", "297.614, 329.285, 21.3856, 0.3814", "296.634, 329.851, 21.6283, 0.2796", "295.673, 330.447, 22.05, 0.2796", "294.802, 331.172, 22.0562, 0.3304", "293.973, 331.957, 21.8744, 0.4068", "292.981, 332.506, 21.7459, 0.483", "291.948, 332.997, 21.6308, 0.4576", "290.914, 333.42, 21.2153, 0.4322", "289.877, 333.737, 20.3232, 0.3304", "288.897, 334.2, 20.6587, 0.3304", "287.939, 334.736, 21.4183, 0.3814", "286.979, 335.358, 21.4715, 0.483", "286.034, 335.992, 21.6236, 0.5084", "285.155, 336.68, 22.232, 0.483", "284.275, 337.368, 22.8388, 0.483", "283.285, 337.94, 22.932, 0.5338", "282.297, 338.514, 23.0247, 0.5592", "281.385, 339.205, 23.0569, 0.5592", "280.473, 339.897, 23.0888, 0.5084", "279.793, 340.816, 23.0742, 0.483", "279.111, 341.734, 23.0594, 0.4576", "278.223, 342.448, 23.0185, 0.4576", "277.309, 343.136, 22.974, 0.4576", "276.31, 343.596, 23.609, 0.4322", "275.291, 344.002, 24.404, 0.4068", "274.231, 344.115, 25.2882, 0.356", "273.152, 344.092, 26.2136, 0.3814", "272.203, 344.673, 25.9946, 0.4322", "271.316, 345.382, 25.8583, 0.5592", "270.479, 346.161, 25.9619, 0.5848", "269.604, 346.885, 25.965, 0.5592", "268.609, 347.435, 25.6609, 0.483", "267.576, 347.821, 25.8776, 0.483", "266.497, 348.016, 26.6829, 0.5084", "265.493, 348.445, 27.2672, 0.5084", "264.551, 349.074, 27.6601, 0.483", "263.8, 349.819, 26.7728, 0.4576", "263.081, 350.582, 25.66, 0.4322", "262.113, 351.139, 25.0499, 0.4068", "261.143, 351.687, 24.7926, 0.4068", "260.17, 352.206, 25.5315, 0.4322", "259.196, 352.725, 26.2704, 0.4322", "258.151, 353.177, 26.4309, 0.3814", "257.097, 353.621, 26.5205, 0.356", "256.154, 354.208, 25.9874, 0.3814", "255.244, 354.836, 25.2759, 0.4576", "254.412, 355.567, 25.4069, 0.5084", "253.626, 356.357, 26.0308, 0.5592", "252.65, 356.85, 26.4356, 0.5338", "251.551, 357.149, 26.6986, 0.5338", "250.445, 357.371, 26.6798, 0.483", "249.325, 357.448, 26.1374, 0.5084", "248.225, 357.608, 26.0347, 0.483", "247.162, 357.913, 26.7492, 0.483", "246.155, 358.309, 27.498, 0.4576", "245.362, 359.05, 28.3797, 0.5084", "244.519, 359.787, 28.6938, 0.5848", "243.642, 360.521, 28.6129, 0.6356", "242.715, 361.177, 28.546, 0.6102", "241.688, 361.684, 28.506, 0.5084", "240.676, 362.078, 28.6768, 0.4576", "239.745, 361.789, 30.1409, 0.3814", "238.798, 361.47, 31.4538, 0.4068", "237.783, 361.01, 32.0883, 0.3814", "236.786, 361.243, 31.8637, 0.4068", "235.8, 361.769, 31.2754, 0.356", "234.683, 361.768, 31.2385, 0.3814", "233.543, 361.674, 31.2984, 0.4576", "232.436, 361.415, 31.4216, 0.5848", "231.345, 361.074, 31.5762, 0.6102", "230.291, 361.123, 31.852, 0.5848", "229.277, 361.625, 32.2683, 0.5338", "228.325, 362.229, 32.6536, 0.5338", "227.435, 362.932, 33.0078, 0.483", "226.52, 363.605, 33.3052, 0.4576", "225.548, 364.203, 33.4639, 0.483", "224.572, 364.794, 33.6232, 0.6102", "223.435, 364.884, 33.8232, 0.661", "222.298, 364.974, 34.0231, 0.6356", "221.158, 364.944, 34.2037, 0.5338", "220.019, 364.874, 34.3778, 0.5084", "218.891, 364.957, 34.5783, 0.6102", "217.778, 365.199, 34.8068, 0.7626", "216.707, 365.301, 35.3427, 0.839", "215.757, 365.009, 36.7315, 0.7372", "214.807, 364.719, 38.1203, 0.6356", "213.689, 364.796, 37.6107, 0.5848", "212.568, 364.88, 37.0815, 0.5592", "211.547, 365.144, 37.8602, 0.4322", "210.676, 365.465, 39.2148, 0.305", "210.615, 365.807, 41.8824, 0.2288", "210.307, 366.178, 43.1371, 0.2542", "209.492, 366.611, 41.4834, 0.3814", "208.823, 367.24, 39.9487, 0.5338", "208.323, 368.096, 38.5518, 0.7372", "207.9, 369.019, 38.8839, 0.7372", "207.518, 369.977, 40.0977, 0.7118", "207.032, 370.973, 40.5115, 0.5592", "206.5, 371.985, 40.5714, 0.5084", "205.746, 372.758, 40.2167, 0.4322", "204.792, 373.314, 39.4881, 0.4068", "203.785, 373.793, 39.5058, 0.3814", "202.746, 374.223, 40.0114, 0.4068", "201.764, 374.784, 40.3754, 0.3814", "200.761, 375.304, 40.5944, 0.4322", "199.669, 375.647, 40.614, 0.4322", "198.572, 375.961, 40.6599, 0.5084", "197.437, 376.066, 40.892, 0.4576", "196.304, 376.173, 41.1303, 0.483", "195.493, 376.599, 42.8098, 0.5084", "194.683, 377.025, 44.4889, 0.6356", "194.055, 378.264, 44.5082, 0.5848", "193.481, 379.249, 44.5376, 0.5592", "192.788, 380.159, 44.5953, 0.6356", "192.119, 381.082, 44.7238, 0.661", "191.514, 382.044, 45.0537, 0.6356", "190.743, 382.802, 45.2771, 0.5338", "189.664, 383.184, 45.3037, 0.4576", "188.584, 383.535, 45.3082, 0.4576", "187.465, 383.348, 44.9341, 0.4576", "186.347, 383.161, 44.56, 0.5338", "185.218, 383.136, 44.7605, 0.5338", "184.086, 383.162, 45.1452, 0.5848", "183.0, 383.414, 45.6344, 0.5592", "181.941, 383.783, 46.1793, 0.5338", "180.878, 384.152, 46.6715, 0.4576", "179.805, 384.518, 47.0442, 0.4068", "178.722, 384.827, 47.3556, 0.4322", "177.58, 384.77, 47.2755, 0.483", "176.438, 384.712, 47.1954, 0.5592", "175.317, 384.498, 47.2464, 0.5592", "174.198, 384.256, 47.3203, 0.5592", "173.175, 383.881, 47.9399, 0.5084", "172.219, 383.408, 48.9518, 0.4576", "171.171, 383.443, 49.4108, 0.4068", "170.073, 383.757, 49.565, 0.356", "169.02, 384.083, 50.2659, 0.305", "167.982, 384.413, 51.1146, 0.2796", "166.99, 384.878, 51.3786, 0.3304", "166.055, 385.51, 50.9166, 0.4576", "165.058, 386.018, 50.7522, 0.5592", "163.965, 386.335, 51.0409, 0.5592", "162.926, 386.634, 51.7188, 0.4576", "162.008, 386.897, 53.2608, 0.4068", "161.114, 387.171, 53.1107, 0.4068", "160.242, 387.452, 51.4349, 0.483", "159.153, 387.722, 51.5382, 0.4322", "158.046, 387.991, 51.7877, 0.3814", "157.278, 388.778, 51.2204, 0.2796", "156.543, 389.613, 50.5761, 0.3304", "156.205, 390.528, 51.501, 0.3814", "156.062, 391.469, 52.9799, 0.5084", "156.694, 392.328, 53.9983, 0.5084", "157.325, 393.186, 55.0169, 0.5084", "157.807, 394.184, 55.2793, 0.5084", "158.214, 395.252, 55.16, 0.5592" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "289.444, 268.561, 144.107, 0.4322", "289.842, 268.712, 144.265, 0.3304", "290.899, 269.115, 144.686, 0.3304", "291.618, 269.794, 144.376, 0.3304", "291.963, 270.785, 143.254, 0.3814", "292.322, 271.787, 142.285, 0.4322", "292.741, 272.842, 141.928, 0.4068", "293.186, 273.866, 141.712, 0.3814", "293.918, 274.538, 143.097, 0.356", "294.6, 275.229, 144.553, 0.3814", "295.136, 275.976, 146.22, 0.3814", "295.561, 276.831, 147.432, 0.4068", "295.696, 277.967, 147.453, 0.4322", "295.828, 279.092, 147.417, 0.4322", "295.915, 279.898, 145.437, 0.4068", "296.023, 280.619, 143.943, 0.3814", "296.305, 280.621, 146.656, 0.4068", "296.302, 280.871, 148.684, 0.4322", "295.575, 281.747, 148.977, 0.483", "295.461, 282.351, 147.115, 0.4576", "295.524, 282.876, 144.632, 0.4576", "295.232, 283.782, 145.55, 0.4068", "294.896, 284.736, 146.852, 0.4576", "294.508, 285.745, 147.773, 0.483", "294.149, 286.763, 148.573, 0.5848", "294.086, 287.888, 148.081, 0.5848", "294.023, 289.012, 147.589, 0.6102", "294.038, 289.928, 149.18, 0.5848", "294.057, 290.832, 150.897, 0.6102", "293.755, 291.553, 152.925, 0.5338", "293.43, 292.262, 154.975, 0.4576", "293.16, 293.326, 155.533, 0.3814", "292.897, 294.427, 155.94, 0.4068", "292.539, 295.369, 157.249, 0.3814", "292.179, 296.307, 158.59, 0.356", "292.306, 297.266, 158.016, 0.2796", "292.616, 298.234, 156.729, 0.2542", "292.182, 299.125, 157.839, 0.2288", "291.853, 300.075, 158.552, 0.2542", "291.918, 301.179, 157.839, 0.305", "292.01, 302.264, 157.033, 0.4068", "292.265, 303.226, 155.657, 0.4576", "292.52, 304.19, 154.28, 0.483" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "289.444, 268.561, 144.107, 0.4322", "289.774, 268.154, 144.2, 0.4068" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "346.3, 331.671, 48.2532, 0.8644", "344.867, 330.94, 49.8602, 0.7372", "343.845, 330.595, 50.141, 0.8136", "342.741, 330.4, 49.5911, 0.839" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "346.3, 331.671, 48.2532, 0.8644", "346.71, 332.646, 49.2156, 0.4068", "347.071, 333.657, 50.0696, 0.483", "347.134, 334.796, 50.2303, 0.5848", "347.197, 335.937, 50.391, 0.5848", "346.663, 336.852, 49.4421, 0.6356", "346.1, 337.756, 48.4557, 0.6102", "346.026, 338.853, 49.2265, 0.661", "345.952, 339.95, 49.9974, 0.661", "346.127, 341.022, 50.8522, 0.6356", "346.329, 342.091, 51.7163, 0.5848", "346.652, 343.182, 51.5088, 0.5084", "346.782, 344.279, 51.5085, 0.483", "346.558, 345.385, 51.9588, 0.4068", "346.115, 346.415, 51.7619, 0.3814", "345.591, 347.417, 51.3262, 0.4322", "345.443, 348.485, 51.9436, 0.5338", "345.389, 349.57, 52.8212, 0.5592", "345.171, 350.614, 53.7953, 0.483", "344.885, 351.642, 54.81, 0.4576", "345.206, 352.435, 53.074, 0.483", "345.552, 353.219, 51.219, 0.483", "346.014, 354.222, 51.2406, 0.3814", "346.493, 355.255, 51.5192, 0.2796", "346.776, 356.33, 51.1185, 0.2542", "347.054, 357.248, 51.4419, 0.2796", "347.467, 357.852, 53.5934, 0.3304", "346.991, 358.682, 53.5256, 0.3304", "346.305, 359.564, 52.9298, 0.3814", "345.745, 360.341, 53.8182, 0.4576", "345.271, 361.046, 55.6889, 0.5848" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "368.329, 483.556, 110.818, 0.2796", "368.655, 484.132, 111.088, 0.305", "369.211, 485.114, 111.548, 0.305", "369.768, 486.096, 112.007, 0.3304", "370.324, 487.077, 112.467, 0.3814", "371.233, 487.445, 112.56, 0.4322", "372.325, 487.662, 112.443, 0.4322", "373.457, 487.619, 112.048, 0.3814", "374.563, 487.583, 111.477, 0.356", "375.546, 487.586, 110.042, 0.356", "376.439, 487.78, 110.94, 0.4068", "377.302, 488.04, 112.667, 0.3814", "377.959, 488.414, 114.621, 0.3814", "379.002, 488.17, 113.629, 0.3304", "380.043, 487.925, 112.636, 0.3304", "380.981, 488.256, 113.952, 0.2796", "381.917, 488.6, 115.325, 0.305", "382.9, 488.64, 114.586, 0.3304", "383.897, 488.589, 113.219, 0.4322", "384.938, 488.702, 113.269, 0.4576", "386.005, 488.909, 114.145, 0.483", "387.081, 488.673, 114.771, 0.4068", "388.158, 488.374, 115.36, 0.356" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "368.329, 483.556, 110.818, 0.2796", "367.043, 483.705, 110.564, 0.356", "365.97, 483.859, 111.115, 0.356", "364.945, 484.034, 112.28, 0.305", "363.963, 484.45, 112.559, 0.2542", "363.016, 485.065, 112.101, 0.2288", "362.075, 485.692, 111.777, 0.2288", "361.151, 486.362, 111.929, 0.2288", "360.225, 487.032, 112.082, 0.2542", "359.487, 487.841, 112.855, 0.305", "358.754, 488.636, 113.197, 0.356", "357.983, 489.359, 112.125, 0.356", "357.177, 489.87, 112.775, 0.305", "356.35, 490.251, 114.47, 0.3304", "355.473, 490.787, 115.376, 0.4322", "354.565, 491.472, 115.659, 0.6102", "353.693, 492.189, 116.101, 0.6356", "352.808, 492.883, 116.578, 0.5592", "351.844, 493.429, 117.28, 0.4068", "350.897, 494.016, 117.763, 0.3814", "350.003, 494.725, 117.587, 0.4322", "349.107, 495.423, 117.525, 0.5084", "348.19, 496.033, 118.291, 0.483", "347.273, 496.642, 119.031, 0.4576", "346.287, 497.222, 118.963, 0.4322", "345.301, 497.802, 118.894, 0.483", "344.791, 498.459, 120.648, 0.4576", "344.343, 499.127, 122.64, 0.4068" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "399.141, 302.054, 34.6268, 0.4068", "399.522, 301.184, 34.6167, 0.3814", "399.945, 300.123, 34.505, 0.3814", "400.368, 299.061, 34.3932, 0.4068", "401.007, 298.203, 33.4522, 0.3304", "401.624, 297.427, 33.4499, 0.2796", "402.168, 296.768, 35.3133, 0.2288", "402.856, 296.154, 35.3234, 0.2288", "403.657, 295.572, 33.9189, 0.2288", "404.486, 294.863, 33.5726, 0.2288", "405.29, 294.074, 33.6563, 0.2542", "405.502, 293.025, 32.6648, 0.2796", "405.756, 291.978, 32.0855, 0.356", "406.136, 290.935, 32.7634, 0.3814", "406.473, 289.915, 32.6007, 0.4322", "406.752, 288.923, 31.3872, 0.3814", "407.138, 287.946, 30.5491, 0.4068", "407.79, 287.008, 30.6505, 0.3814", "408.434, 286.063, 30.7107, 0.4322", "409.044, 285.096, 30.6124, 0.3814", "409.562, 284.099, 30.5183, 0.356", "409.63, 282.958, 30.4436, 0.2796", "409.699, 281.816, 30.3691, 0.2542", "410.074, 280.772, 30.935, 0.2288", "410.494, 279.742, 31.5913, 0.2288", "411.345, 279.034, 31.7596, 0.2288", "412.054, 278.339, 32.2571, 0.2288", "412.055, 277.459, 34.0463, 0.2288", "412.21, 276.541, 34.881, 0.2288", "412.649, 275.558, 33.9455, 0.2796", "412.914, 274.607, 32.6318, 0.3304", "413.033, 273.685, 30.9996, 0.3814", "413.037, 272.665, 30.1274, 0.3304", "412.902, 271.53, 30.1689, 0.3304", "412.455, 270.54, 30.884, 0.3304", "412.18, 269.49, 31.3536, 0.4068", "412.153, 268.347, 31.421, 0.3814", "412.218, 267.212, 31.579, 0.356", "412.412, 266.091, 31.8643, 0.305", "412.576, 264.973, 31.6002, 0.356", "412.728, 263.856, 31.129, 0.4068", "413.031, 262.798, 31.1713, 0.4322", "413.547, 261.826, 31.9354, 0.356", "414.16, 260.882, 32.3512, 0.356", "414.519, 259.863, 32.2675, 0.4322", "414.525, 258.737, 31.7736, 0.5592", "414.554, 257.616, 31.2404, 0.5338", "414.701, 256.523, 30.5046, 0.4322", "414.994, 255.482, 30.2856, 0.3304", "415.531, 254.522, 30.9602, 0.305", "415.803, 253.411, 30.8706, 0.2796", "416.091, 252.308, 30.7538, 0.305", "416.59, 251.296, 30.294, 0.3304", "417.088, 250.283, 29.8393, 0.4068", "417.267, 249.186, 30.5049, 0.3814", "417.447, 248.09, 31.1704, 0.356", "417.71, 246.987, 31.4577, 0.2796", "417.999, 245.882, 31.6193, 0.2542", "418.026, 244.739, 31.733, 0.2288", "418.053, 243.596, 31.8466, 0.2542", "418.337, 242.537, 31.0741, 0.2796", "418.616, 241.478, 30.5116, 0.3304", "418.824, 240.416, 31.4202, 0.3304", "419.033, 239.355, 32.3285, 0.3304", "419.076, 238.257, 31.6694, 0.2796", "419.107, 237.157, 30.9025, 0.305", "419.147, 236.025, 30.5707, 0.356", "419.189, 234.886, 30.3534, 0.4322", "419.276, 233.75, 30.408, 0.4068", "419.396, 232.617, 30.6611, 0.3304", "419.571, 231.503, 30.7266, 0.2796", "419.969, 230.471, 30.0196, 0.305", "420.365, 229.436, 29.3252, 0.356", "420.611, 228.32, 29.3544, 0.356", "420.857, 227.202, 29.3838, 0.305", "421.075, 226.08, 29.3014, 0.2542", "421.284, 224.956, 29.1861, 0.2796", "421.439, 223.839, 28.8658, 0.356", "421.505, 222.73, 28.194, 0.4322", "421.609, 221.64, 27.7382, 0.4068", "422.015, 220.697, 28.9758, 0.3304", "422.439, 219.747, 29.9502, 0.2542", "422.968, 218.756, 29.4252, 0.2542", "423.264, 218.017, 28.1828, 0.305", "423.082, 217.794, 25.473, 0.4322", "423.365, 217.255, 23.478, 0.5084", "423.965, 216.501, 21.971, 0.5592", "424.989, 216.166, 21.7115, 0.5084", "426.107, 215.923, 21.7286, 0.5338", "427.237, 215.993, 21.7784, 0.6102", "428.371, 216.145, 21.8366, 0.661", "428.819, 215.35, 20.3445, 0.6102", "429.228, 214.5, 18.76, 0.4322" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "399.141, 302.054, 34.6268, 0.4068", "399.626, 302.057, 35.303, 0.5592", "400.502, 301.492, 36.3384, 0.483", "401.365, 300.859, 37.3332, 0.5338" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "391.971, 295.063, 38.3911, 0.661", "392.497, 294.77, 39.5937, 0.2796", "393.272, 294.337, 41.363, 0.2542", "394.046, 293.906, 43.1323, 0.2288", "394.821, 293.475, 44.9014, 0.2288", "395.595, 293.044, 46.6704, 0.2288", "396.551, 292.551, 47.5093, 0.2288", "397.54, 292.045, 48.151, 0.2542", "398.022, 291.466, 46.0432, 0.2796", "398.613, 290.949, 44.0964, 0.305", "399.527, 290.616, 42.623, 0.2796", "400.345, 289.991, 42.2013, 0.2796", "401.088, 289.137, 42.6048, 0.305", "402.021, 288.606, 43.0685, 0.356", "402.974, 288.145, 43.5173, 0.356", "403.576, 287.18, 43.8035, 0.305", "404.476, 286.529, 43.7861, 0.2542", "405.486, 285.992, 43.6587, 0.2542", "406.373, 285.302, 44.1297, 0.305", "407.249, 284.599, 44.6527, 0.356", "408.174, 284.427, 43.3031, 0.3814", "409.115, 284.251, 43.0595, 0.356", "410.069, 283.98, 44.4542, 0.4068", "411.084, 284.307, 45.2004, 0.4322", "412.141, 284.654, 45.6151, 0.5338", "413.278, 284.77, 45.4913, 0.5084", "414.336, 285.125, 45.6389, 0.5084", "415.334, 285.665, 45.9981, 0.4068", "416.262, 285.696, 46.8784, 0.356", "417.12, 285.205, 48.2905, 0.305", "418.073, 284.879, 49.5278, 0.3304", "419.114, 284.705, 50.6066, 0.3814", "420.155, 284.4, 51.0213, 0.4322", "421.193, 283.942, 50.6733, 0.4322", "421.764, 284.393, 52.0447, 0.356", "422.245, 285.056, 53.9028, 0.2796", "423.193, 285.158, 55.4487, 0.2542", "424.139, 285.371, 56.7549, 0.3304", "425.072, 286.015, 57.1416, 0.4576", "426.058, 286.347, 57.5224, 0.5338", "427.151, 286.049, 57.8914, 0.5338", "428.178, 285.816, 58.9338, 0.4322", "429.189, 285.596, 60.13, 0.356", "430.26, 285.542, 61.0666, 0.305", "431.327, 285.423, 61.943, 0.3304", "432.353, 285.086, 62.8622, 0.4068", "433.164, 285.484, 63.9125, 0.483", "433.892, 286.263, 64.8732, 0.5084", "434.724, 287.033, 65.256, 0.4322", "435.776, 287.2, 65.1014, 0.356", "436.895, 287.185, 65.0017, 0.3304", "437.953, 287.341, 65.9994, 0.356", "438.999, 287.297, 66.8027, 0.4068", "440.017, 286.797, 67.1639, 0.4322", "441.028, 286.42, 67.935, 0.483", "442.033, 286.166, 69.1253, 0.4576", "442.974, 286.12, 70.5051, 0.4068", "443.799, 286.47, 72.2481, 0.305", "444.657, 286.738, 73.7971, 0.305", "445.756, 286.432, 74.0026, 0.3304", "446.856, 286.126, 74.2078, 0.4322", "447.928, 286.469, 74.5956, 0.483", "448.961, 286.908, 74.9297, 0.5338", "449.841, 287.637, 75.0154, 0.483", "450.688, 287.721, 75.2284, 0.4322", "451.488, 286.918, 75.6165, 0.4322", "452.286, 286.114, 76.0043, 0.483", "452.538, 285.717, 77.126, 0.3814", "452.984, 285.018, 78.9894, 0.3814", "453.641, 284.118, 78.3572, 0.356", "454.202, 283.176, 78.0626, 0.305", "454.472, 282.107, 78.8049, 0.2796", "455.096, 281.623, 80.2332, 0.305", "455.943, 281.51, 82.0966, 0.3814", "456.669, 281.3, 84.1708, 0.4068", "457.326, 281.035, 86.3696, 0.3814", "457.988, 280.197, 85.4927, 0.305", "458.645, 279.366, 84.4973, 0.2542", "459.191, 278.987, 82.2195, 0.2542", "459.961, 278.499, 82.3231, 0.3304", "460.739, 277.989, 83.7794, 0.4068", "461.06, 277.622, 86.3136, 0.4322", "461.717, 277.235, 88.0169, 0.356", "462.73, 276.823, 88.8429, 0.2796", "463.795, 276.499, 89.3788, 0.2288", "464.7, 275.944, 89.9808, 0.2796", "465.44, 275.146, 90.8379, 0.3304", "466.134, 274.576, 92.5039, 0.4322", "466.818, 274.059, 94.3578, 0.4322", "467.542, 273.362, 95.6018, 0.4322", "468.294, 272.632, 96.6148, 0.3304", "469.263, 272.623, 98.1067, 0.2796", "470.253, 272.598, 99.3745, 0.2288", "471.388, 272.472, 99.183, 0.2288", "472.263, 272.748, 100.309, 0.2542", "472.937, 273.226, 102.21, 0.3304", "473.408, 273.718, 104.46, 0.4068", "473.853, 274.395, 106.11, 0.4322", "474.241, 275.458, 106.52, 0.356", "474.522, 276.555, 106.79, 0.3304", "474.695, 277.684, 106.919, 0.3304", "475.434, 278.503, 106.95, 0.4068", "476.298, 279.253, 106.958, 0.3814", "476.613, 280.245, 107.751, 0.4068", "476.787, 281.3, 108.747, 0.4068", "477.017, 281.343, 110.76, 0.4576", "477.276, 280.899, 113.261, 0.4576", "478.262, 280.412, 114.033, 0.483", "479.223, 280.035, 115.114, 0.5084", "480.14, 279.845, 116.719, 0.5338", "480.711, 279.29, 118.52, 0.483", "481.101, 278.547, 120.422, 0.4322", "481.47, 277.78, 122.294, 0.3304", "481.837, 277.013, 124.165, 0.2796", "480.9, 276.468, 124.691, 0.2542", "479.907, 275.933, 125.16, 0.2796" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "391.971, 295.063, 38.3911, 0.661", "392.211, 293.881, 40.572, 0.661", "392.557, 293.049, 42.1207, 0.7372", "392.711, 292.007, 43.2135, 0.7118", "392.62, 291.012, 44.0658, 0.6102", "391.885, 290.14, 44.2876, 0.5084", "391.459, 289.346, 45.1035, 0.4068", "391.773, 288.745, 47.3561, 0.3304", "392.099, 287.957, 48.9922, 0.2796", "392.441, 286.913, 49.7658, 0.3304", "392.988, 285.948, 50.0861, 0.4068", "393.693, 285.048, 50.0587, 0.4322", "394.53, 284.318, 50.4787, 0.356", "395.443, 283.686, 51.1493, 0.2796", "396.34, 283.019, 51.7555, 0.2288", "397.187, 282.339, 51.5724, 0.2288", "397.604, 281.648, 52.1234, 0.2288", "397.648, 280.953, 54.3441, 0.2288", "398.466, 280.905, 54.6613, 0.2288", "399.145, 280.768, 55.5797, 0.2288", "399.326, 280.243, 58.0289, 0.2288", "399.42, 279.57, 60.2624, 0.2288", "399.498, 278.856, 62.4299, 0.2542", "399.922, 278.419, 64.7993, 0.2796", "400.254, 277.911, 66.8702, 0.305", "399.848, 276.848, 66.5904, 0.305", "399.546, 275.8, 66.6072, 0.3304", "399.729, 274.827, 68.0095, 0.356", "399.795, 273.812, 69.1989, 0.356", "399.671, 272.727, 70.04, 0.305", "399.745, 271.623, 70.5617, 0.2542", "399.904, 270.504, 70.8294, 0.2288", "399.739, 269.374, 70.9677, 0.2288", "399.311, 268.435, 71.7447, 0.2288", "398.613, 267.707, 72.9943, 0.2288", "397.637, 267.248, 73.9217, 0.2288", "396.636, 266.845, 74.8546, 0.2288", "395.634, 266.448, 75.7887, 0.2288", "395.214, 265.641, 77.331, 0.2288", "394.882, 264.773, 78.9639, 0.2542", "393.832, 264.47, 78.5926, 0.305", "392.974, 264.007, 79.4167, 0.4068", "392.266, 263.419, 81.079, 0.4576", "391.266, 263.122, 81.5618, 0.4576", "390.135, 262.96, 81.5066, 0.3814", "389.154, 262.702, 82.4314, 0.3304", "388.296, 262.378, 84.0823, 0.305", "388.063, 262.086, 86.7289, 0.2796", "387.288, 261.935, 87.267, 0.2542", "386.185, 261.868, 86.539, 0.2288", "385.23, 261.609, 87.4283, 0.2288", "384.297, 261.325, 88.8364, 0.2796", "383.213, 261.263, 89.712, 0.3304", "382.128, 261.202, 90.5873, 0.3814", "381.042, 261.137, 91.4581, 0.3304", "379.957, 261.073, 92.3286, 0.2796", "378.891, 261.458, 92.5641, 0.2288", "377.824, 261.865, 92.7682, 0.2542", "376.78, 261.521, 93.3153, 0.2796", "375.738, 261.112, 93.8913, 0.305", "374.645, 260.892, 94.4465, 0.2796", "373.533, 260.743, 94.9936, 0.2542", "372.599, 260.189, 95.4741, 0.2542", "371.744, 259.46, 95.9451, 0.305", "370.893, 259.361, 97.8001, 0.356", "370.085, 258.912, 99.008, 0.356", "369.323, 258.083, 99.5056, 0.305", "368.449, 257.66, 100.677, 0.2796", "367.515, 257.456, 102.212, 0.2796", "366.452, 257.642, 102.915, 0.305", "365.361, 257.91, 103.388, 0.2796", "364.258, 258.089, 102.79, 0.2542", "363.271, 258.378, 103.41, 0.2288", "362.362, 258.741, 104.861, 0.2288", "361.292, 258.893, 105.453, 0.2288", "360.154, 258.955, 105.672, 0.2288", "359.014, 259.003, 105.866, 0.2288", "357.871, 259.005, 105.978, 0.2288", "356.728, 259.009, 106.091, 0.2288", "355.632, 259.262, 106.409, 0.2288", "354.552, 259.604, 106.8, 0.2288", "353.689, 260.15, 107.648, 0.2288", "353.09, 260.938, 109.047, 0.2288", "352.376, 261.658, 110.216, 0.2288", "351.434, 262.238, 110.923, 0.2288", "350.499, 262.836, 111.598, 0.2288", "349.59, 263.488, 112.187, 0.2288", "348.71, 264.179, 112.757, 0.2288", "347.846, 264.893, 113.314, 0.2288", "347.231, 265.787, 113.963, 0.2542", "346.777, 266.797, 114.671, 0.2796", "346.227, 267.696, 115.575, 0.305", "345.47, 268.359, 116.903, 0.2796", "344.666, 268.996, 118.026, 0.2542", "343.639, 269.5, 118.163, 0.2542", "342.683, 270.082, 118.451, 0.305", "341.913, 270.879, 119.153, 0.356", "341.251, 271.544, 117.612, 0.356", "340.743, 272.326, 117.181, 0.3304", "340.461, 273.286, 118.537, 0.305", "339.915, 274.161, 119.56, 0.305", "339.174, 274.973, 120.338, 0.2796", "338.375, 275.758, 120.689, 0.305", "337.519, 276.517, 120.644, 0.3304", "336.836, 277.388, 120.907, 0.3814", "336.368, 278.398, 121.554, 0.3304", "335.739, 279.289, 121.697, 0.2796", "334.887, 280.018, 121.144, 0.2288", "334.048, 280.69, 121.206, 0.2288", "333.243, 281.226, 122.698, 0.2542", "332.394, 281.795, 123.74, 0.305", "331.448, 282.436, 123.759, 0.356", "330.566, 283.137, 123.937, 0.356", "329.651, 283.58, 124.531, 0.305", "328.619, 283.83, 124.783, 0.2542", "327.854, 284.619, 124.254, 0.2542", "326.77, 284.95, 124.632, 0.2796", "325.764, 285.339, 125.402, 0.356", "324.867, 285.806, 126.709, 0.3814", "324.066, 286.242, 128.35, 0.4322", "323.347, 286.653, 130.283, 0.3814", "322.485, 287.151, 131.444, 0.356", "321.519, 287.713, 132.041, 0.3304", "320.682, 288.396, 132.952, 0.356", "319.986, 288.828, 134.454, 0.4576", "319.54, 288.774, 137.03, 0.5338", "318.713, 289.101, 137.141, 0.6102", "317.735, 289.577, 136.277, 0.5338", "316.929, 290.285, 137.228, 0.483", "316.054, 290.955, 137.911, 0.483", "315.122, 291.592, 138.357, 0.5848", "315.111, 292.473, 136.635, 0.6102", "314.482, 292.167, 138.511, 0.6102", "313.684, 292.149, 139.401, 0.6102", "312.7, 292.632, 138.6, 0.6864", "312.106, 292.688, 140.664, 0.661", "311.545, 292.754, 143.037, 0.5592", "310.823, 293.306, 144.739, 0.3814", "310.1, 293.856, 146.441, 0.305", "309.011, 293.999, 147.213, 0.305", "308.087, 294.119, 147.289, 0.4068", "307.844, 294.151, 144.554, 0.483", "307.6, 294.184, 141.819, 0.5084", "307.028, 294.726, 143.662, 0.4322", "306.371, 295.246, 145.451, 0.3304", "305.307, 295.544, 146.171, 0.2542", "304.552, 296.279, 145.811, 0.2542", "304.177, 297.09, 146.698, 0.2796", "303.988, 297.839, 148.762, 0.305", "303.235, 298.573, 149.518, 0.3304", "302.38, 299.301, 150.042, 0.356", "301.703, 300.129, 149.047, 0.3814", "301.025, 300.958, 148.053, 0.3304", "300.037, 301.384, 148.707, 0.3304", "299.014, 301.769, 149.541, 0.356", "298.14, 302.364, 150.261, 0.4322", "297.486, 303.276, 150.811, 0.4068", "296.731, 304.122, 151.099, 0.356", "296.049, 304.955, 151.815, 0.3304", "295.494, 305.791, 153.16, 0.356" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "391.971, 295.063, 38.3911, 0.661", "391.349, 293.844, 38.6109, 0.305", "390.864, 292.808, 38.6747, 0.305", "390.356, 291.783, 38.6663, 0.356", "389.848, 290.766, 38.4994, 0.4322", "389.339, 289.77, 37.9154, 0.5592", "388.817, 288.805, 37.2025, 0.6356", "388.222, 288.012, 35.8039, 0.6864", "387.56, 287.261, 34.5839, 0.7118", "386.569, 286.706, 34.2474, 0.7372", "385.577, 286.152, 33.9111, 0.7372" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "342.741, 330.4, 49.5911, 0.839", "343.125, 329.604, 49.6196, 0.2796", "343.563, 328.549, 49.7381, 0.3304", "343.985, 327.486, 49.8184, 0.4322", "344.364, 326.406, 49.7988, 0.5592", "344.758, 325.355, 49.9733, 0.5338", "345.247, 324.466, 51.2686, 0.4322", "345.363, 323.483, 51.7759, 0.3304", "345.059, 322.392, 51.3834, 0.305", "344.639, 321.408, 50.5072, 0.305", "344.153, 320.486, 49.3528, 0.3814", "344.576, 319.674, 49.1994, 0.5084", "345.248, 318.884, 49.8456, 0.6102", "345.336, 318.008, 51.634, 0.5848", "345.359, 317.149, 52.9141, 0.5084", "344.982, 316.388, 51.0367, 0.5084", "344.749, 315.419, 51.6326, 0.5592", "344.55, 314.4, 52.8086, 0.6102", "344.135, 313.406, 53.445, 0.661", "343.54, 312.431, 53.6343, 0.7118", "343.194, 311.504, 54.654, 0.7118", "343.069, 310.62, 56.4026, 0.5592", "342.868, 309.642, 57.2104, 0.4068", "342.578, 308.546, 56.8341, 0.356", "342.256, 307.461, 56.7204, 0.4068", "341.871, 306.397, 57.139, 0.4576", "341.473, 305.336, 57.4918, 0.4322", "341.036, 304.281, 57.6366, 0.4322", "340.599, 303.225, 57.7814, 0.4068", "341.028, 302.349, 56.5958, 0.3814", "341.215, 301.418, 57.2709, 0.305", "341.261, 300.454, 58.7784, 0.305", "341.538, 299.434, 59.7654, 0.356", "341.877, 298.396, 60.6108, 0.4322", "342.123, 297.353, 61.5504, 0.4068", "342.267, 296.302, 62.5954, 0.356", "342.129, 295.203, 62.9588, 0.305", "341.881, 294.088, 63.0538, 0.3304", "341.466, 293.072, 63.8341, 0.3304", "341.006, 292.109, 64.7598, 0.3304", "340.389, 291.339, 66.1783, 0.2796", "339.762, 290.545, 67.4722, 0.2542", "339.117, 289.708, 68.542, 0.2542", "338.57, 288.882, 69.9264, 0.2796", "338.051, 288.059, 71.4, 0.3304" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "342.741, 330.4, 49.5911, 0.839", "341.347, 330.934, 49.1641, 0.6864", "340.525, 330.407, 50.622, 0.5848", "339.703, 329.879, 52.08, 0.5848" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "345.271, 361.046, 55.6889, 0.5848", "344.725, 360.915, 57.2062, 0.7118", "343.895, 360.675, 59.0411, 0.5084", "343.223, 360.869, 60.662, 0.356", "342.823, 361.811, 61.9156, 0.3304", "342.63, 362.669, 63.5222, 0.356", "342.741, 363.388, 65.6533, 0.4068", "342.814, 362.86, 68.131, 0.4068", "342.931, 362.958, 70.105, 0.4068", "343.115, 363.967, 71.3468, 0.356", "343.519, 364.825, 72.513, 0.3304", "344.483, 365.296, 73.4843, 0.2796", "345.527, 365.414, 74.2196, 0.305", "346.633, 365.27, 74.7328, 0.3304", "347.651, 365.728, 74.8742, 0.3814", "348.427, 366.376, 76.181, 0.3304", "349.269, 366.945, 77.3758, 0.2796", "350.312, 367.261, 78.2233, 0.2288", "350.965, 367.874, 79.6099, 0.2288", "351.365, 368.677, 81.345, 0.2288", "351.623, 369.626, 81.6973, 0.2542", "351.758, 370.705, 80.8259, 0.2796", "352.845, 370.841, 81.5282, 0.305", "353.439, 371.349, 83.0665, 0.2796", "353.733, 372.083, 85.09, 0.2542", "354.589, 372.683, 84.635, 0.2288", "355.519, 373.266, 83.8488, 0.2288", "356.364, 373.67, 85.1122, 0.2288", "357.216, 374.079, 86.5455, 0.2288", "358.185, 374.684, 86.6869, 0.2288", "359.128, 375.322, 86.76, 0.2288", "359.984, 376.072, 86.5808, 0.2288", "361.002, 376.593, 86.5995, 0.2288", "362.02, 377.116, 86.6183, 0.2288", "362.982, 377.716, 86.9523, 0.2288", "363.932, 378.331, 87.3513, 0.2288", "364.909, 378.905, 87.7145, 0.2288", "365.93, 379.404, 88.0144, 0.2288", "366.953, 379.903, 88.3145, 0.2288", "367.928, 380.35, 89.2528, 0.2288", "368.894, 380.79, 90.2916, 0.2288", "369.854, 381.222, 91.3872, 0.2288", "370.8, 381.644, 92.575, 0.2288", "371.746, 382.066, 93.7625, 0.2288", "371.939, 382.777, 95.7625, 0.2288", "372.025, 383.52, 97.8765, 0.2288", "371.999, 384.206, 100.119, 0.2288", "372.028, 384.871, 102.329, 0.2288", "372.834, 385.267, 104.059, 0.2288", "373.642, 385.664, 105.79, 0.2288", "374.508, 385.643, 107.374, 0.2288", "375.42, 385.302, 108.844, 0.2288", "376.295, 384.842, 110.177, 0.2288", "377.104, 384.163, 111.254, 0.2288", "377.914, 383.485, 112.33, 0.2288", "378.896, 382.991, 113.034, 0.2288", "379.911, 382.53, 113.67, 0.2288", "380.988, 382.244, 113.973, 0.2288", "382.126, 382.133, 113.943, 0.2542", "383.264, 382.021, 113.914, 0.2796" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "345.271, 361.046, 55.6889, 0.5848", "345.826, 362.026, 54.57, 0.356", "345.815, 363.16, 54.2139, 0.305", "345.542, 364.235, 53.8927, 0.2796", "345.04, 365.255, 53.6015, 0.3304", "344.602, 366.297, 53.725, 0.3814", "344.218, 367.356, 54.2167, 0.4576", "343.814, 368.404, 54.7417, 0.483", "343.351, 369.418, 55.3633, 0.4322", "342.999, 370.47, 55.4072, 0.356", "342.773, 371.563, 54.7938, 0.305", "342.564, 372.657, 54.3267, 0.305", "342.477, 373.762, 55.0192, 0.2796", "342.39, 374.867, 55.7116, 0.2796", "342.334, 376.009, 55.7987, 0.305", "342.279, 377.151, 55.865, 0.356", "342.146, 378.284, 55.9196, 0.356", "341.925, 379.406, 55.9608, 0.305", "341.695, 380.525, 55.9992, 0.2796", "341.296, 381.598, 55.9782, 0.2796", "340.905, 382.671, 55.9605, 0.305", "341.078, 383.796, 56.2573, 0.305", "341.251, 384.919, 56.5544, 0.305", "340.906, 386.005, 56.7594, 0.305", "340.552, 387.09, 56.9624, 0.2796", "340.464, 388.223, 57.1858, 0.2542", "340.402, 389.362, 57.4109, 0.2288", "340.527, 390.468, 57.804, 0.2288", "340.86, 391.536, 58.3836, 0.2288", "341.188, 392.613, 58.8328, 0.2288", "341.502, 393.712, 58.9487, 0.2288", "341.818, 394.81, 59.0646, 0.2288", "342.303, 395.825, 59.5311, 0.2288", "342.804, 396.76, 60.3593, 0.2288", "343.271, 397.469, 62.2345, 0.2288", "343.651, 398.27, 63.7456, 0.2288", "343.703, 399.412, 63.9108, 0.2288", "343.757, 400.552, 64.076, 0.2288", "343.668, 401.688, 64.1259, 0.2288", "343.529, 402.824, 64.1343, 0.2542", "343.395, 403.915, 64.6044, 0.2796", "343.271, 404.936, 65.8342, 0.305", "343.2, 405.963, 67.0267, 0.2796", "343.334, 407.016, 68.0756, 0.2542", "343.545, 408.043, 69.1558, 0.2288", "343.893, 409.03, 70.259, 0.2288", "343.996, 410.143, 70.8445, 0.2288", "344.101, 411.258, 71.4302, 0.2288", "344.658, 412.202, 71.2071, 0.2796", "345.148, 413.029, 71.6688, 0.3814", "345.264, 413.724, 73.8732, 0.5592", "345.498, 414.536, 75.4432, 0.6864", "345.963, 415.572, 75.8016, 0.7626", "346.427, 416.607, 76.16, 0.6864", "346.62, 417.496, 76.928, 0.5592", "346.847, 418.553, 77.8411, 0.3814", "347.075, 419.61, 78.7542, 0.2796", "347.304, 420.667, 79.6676, 0.2288", "347.076, 421.629, 80.2113, 0.2288", "346.311, 422.478, 80.3197, 0.2796", "345.488, 423.255, 80.673, 0.3304", "344.637, 423.994, 81.1496, 0.3814", "343.773, 424.632, 82.0904, 0.3304", "342.923, 425.271, 83.1216, 0.356", "342.123, 425.952, 84.2243, 0.4068", "341.534, 426.834, 84.7588, 0.5338", "341.157, 427.914, 84.7328, 0.5338", "340.624, 428.892, 84.6824, 0.483", "339.791, 429.676, 84.5846, 0.3814", "339.25, 430.599, 84.961, 0.305", "338.996, 431.661, 85.7998, 0.305", "338.514, 432.657, 86.4352, 0.4068", "337.973, 433.637, 87.0176, 0.5848", "337.685, 434.596, 88.277, 0.661", "337.47, 435.549, 89.7322, 0.6102", "337.163, 436.413, 91.366, 0.5084", "336.759, 437.183, 93.1888, 0.4576", "336.719, 438.213, 93.5768, 0.483", "336.827, 439.349, 93.3783, 0.5084", "336.618, 440.346, 94.4804, 0.5338", "336.389, 441.335, 95.6841, 0.483", "336.509, 442.472, 95.6152, 0.3814", "336.551, 443.6, 95.7071, 0.305", "336.349, 444.7, 96.2973, 0.3304", "337.25, 445.319, 96.5264, 0.4068", "338.213, 445.919, 96.7394, 0.4576", "338.686, 446.941, 97.2168, 0.483", "339.228, 447.931, 97.5027, 0.5338", "339.905, 448.852, 97.4151, 0.6102", "340.253, 449.86, 97.8337, 0.6356", "340.306, 450.947, 98.7045, 0.6356", "340.339, 451.964, 99.881, 0.5848", "340.331, 452.844, 101.667, 0.5338", "340.159, 453.785, 102.735, 0.4576", "339.701, 454.829, 102.532, 0.4322", "338.997, 455.69, 102.929, 0.4068", "338.467, 456.628, 103.502, 0.4068", "338.233, 457.724, 104.072, 0.356", "337.905, 458.761, 104.758, 0.356", "337.284, 459.621, 105.81, 0.3814", "336.951, 460.493, 106.521, 0.4576", "337.615, 461.404, 106.043, 0.483", "338.218, 462.328, 105.651, 0.4576", "338.061, 463.429, 106.319, 0.3814", "337.798, 464.451, 107.22, 0.3304", "337.301, 465.301, 108.642, 0.3304", "336.811, 466.277, 109.311, 0.3304", "336.365, 467.295, 109.701, 0.356", "337.081, 468.149, 110.337, 0.3304", "337.797, 469.002, 110.973, 0.356" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "401.365, 300.859, 37.3332, 0.5338", "401.871, 301.163, 36.5086, 0.305", "402.725, 301.673, 35.1218, 0.2288", "403.642, 301.82, 33.4942, 0.2288", "404.562, 301.963, 31.864, 0.2542", "405.536, 302.093, 32.4979, 0.3304", "406.527, 302.219, 33.8584, 0.4068", "407.524, 302.643, 34.4193, 0.4322", "408.522, 303.195, 34.6402, 0.356", "409.586, 303.513, 35.107, 0.2796", "410.688, 303.707, 35.7064, 0.2796", "411.741, 303.969, 34.9832, 0.356", "412.785, 304.242, 34.0617, 0.4576", "413.741, 304.683, 32.9955, 0.4576", "414.67, 305.172, 31.8864, 0.4068", "415.713, 305.346, 31.9273, 0.3304", "416.82, 305.337, 32.629, 0.3304", "417.771, 305.826, 33.0929, 0.356", "418.649, 306.543, 33.4471, 0.4068", "419.561, 307.173, 33.0778, 0.4322", "420.492, 307.75, 32.27, 0.4576", "421.507, 308.175, 32.0082, 0.4576", "422.612, 308.44, 32.3319, 0.483", "423.604, 308.923, 32.7992, 0.5592", "424.5, 309.593, 33.3866, 0.6102", "425.337, 310.331, 33.3477, 0.6102", "426.125, 311.126, 32.7706, 0.5084", "427.196, 311.43, 32.146, 0.4322", "428.258, 311.827, 31.906, 0.356", "429.315, 312.262, 31.8133, 0.3814", "430.332, 312.708, 31.3194, 0.4068", "431.298, 313.165, 30.3276, 0.4576", "432.245, 313.355, 28.8459, 0.4068", "433.189, 313.519, 27.3165, 0.356", "434.281, 313.518, 27.5562, 0.305", "435.372, 313.567, 28.1988, 0.305", "436.301, 314.076, 29.253, 0.305", "437.278, 314.536, 29.9804, 0.305", "438.371, 314.873, 29.9116, 0.356", "439.324, 315.244, 28.9142, 0.3814", "440.248, 315.601, 27.7379, 0.4068", "441.366, 315.832, 27.8986, 0.356", "442.486, 315.966, 28.0991, 0.356", "443.61, 315.803, 28.4225, 0.356", "444.722, 315.967, 28.749, 0.356", "445.792, 316.243, 28.6916, 0.305", "446.736, 316.591, 27.361, 0.2542", "447.741, 316.873, 26.483, 0.2542", "448.876, 317.016, 26.5639, 0.2796", "449.985, 317.241, 26.5404, 0.356", "451.014, 317.72, 26.192, 0.3814", "452.053, 318.172, 25.9305, 0.4068", "453.158, 318.435, 26.2528, 0.356", "454.264, 318.698, 26.5748, 0.3304", "455.372, 318.972, 26.6694, 0.3304", "456.48, 319.254, 26.63, 0.3304", "457.566, 319.584, 26.4102, 0.3304", "458.623, 319.981, 25.951, 0.2796", "459.658, 320.417, 25.6407, 0.2796", "460.572, 321.07, 26.1626, 0.2796", "461.497, 321.715, 26.64, 0.356", "462.467, 322.312, 26.8867, 0.3814", "463.447, 322.885, 26.9987, 0.4322", "464.476, 323.348, 26.5334, 0.3814", "465.504, 323.811, 26.068, 0.356", "466.413, 324.48, 26.4902, 0.2796", "467.318, 325.155, 26.941, 0.2542", "468.38, 325.436, 26.3519, 0.2542", "469.461, 325.669, 25.6374, 0.2796", "470.39, 326.286, 25.4425, 0.356", "471.274, 327.011, 25.3938, 0.3814", "472.339, 327.368, 25.1846, 0.4068", "473.447, 327.639, 24.9382, 0.3304", "474.518, 328.021, 24.8553, 0.2796", "475.563, 328.486, 24.8951, 0.2288", "476.626, 328.897, 25.025, 0.2542", "477.719, 329.216, 25.3103, 0.2796", "478.8, 329.57, 25.557, 0.305", "479.857, 330.003, 25.7194, 0.2796", "480.909, 330.442, 25.8916, 0.2542", "481.777, 331.155, 26.4194, 0.2288", "482.674, 331.809, 27.0144, 0.2288", "483.672, 332.25, 27.8569, 0.2288", "484.741, 332.483, 28.1912, 0.2288", "485.883, 332.505, 28.0126, 0.2542", "487.02, 332.564, 28.1036, 0.305", "488.154, 332.648, 28.404, 0.356", "489.296, 332.613, 28.5174, 0.356", "490.439, 332.58, 28.6311, 0.305", "491.552, 332.353, 28.8378, 0.2542", "492.657, 332.072, 29.0696, 0.2288", "493.704, 331.649, 29.3924, 0.2542", "494.714, 331.134, 29.7727, 0.2796", "495.765, 330.807, 30.4794, 0.305", "496.827, 330.521, 31.2561, 0.305", "497.704, 329.798, 31.5627, 0.305", "498.575, 329.066, 31.8506, 0.305", "499.422, 328.303, 32.0776, 0.2796", "500.348, 327.694, 32.466, 0.305", "501.402, 327.334, 33.1156, 0.3304", "502.437, 326.959, 33.8405, 0.3814", "503.372, 326.498, 34.9927, 0.356", "504.323, 326.031, 35.9554, 0.356", "505.355, 325.537, 36.0354, 0.356", "506.386, 325.044, 36.1281, 0.356", "507.408, 324.613, 36.8245, 0.305", "508.428, 324.182, 37.5208, 0.2542", "509.533, 324.099, 37.9705, 0.2288", "510.667, 324.134, 38.3362, 0.2288", "511.709, 323.735, 38.246, 0.2288", "512.728, 323.219, 38.0722, 0.2288", "513.751, 322.71, 38.1139, 0.2288", "514.784, 322.268, 38.0408, 0.2796", "515.872, 322.286, 37.1767, 0.3304", "516.96, 322.306, 36.3129, 0.3814", "518.068, 322.068, 35.9537, 0.3304", "519.177, 321.824, 35.6096, 0.305", "520.219, 321.917, 36.6489, 0.2796", "521.257, 322.036, 37.7891, 0.3304", "521.913, 321.909, 35.5172, 0.3304", "522.706, 321.901, 33.9083, 0.3304", "523.818, 322.173, 33.85, 0.2796", "524.922, 322.282, 33.8346, 0.2542", "526.011, 321.935, 33.9408, 0.2288", "527.099, 321.616, 33.8344, 0.2288", "528.182, 321.374, 33.1456, 0.2288", "529.258, 321.483, 32.4576, 0.2288", "530.331, 321.76, 31.7702, 0.2796", "531.449, 321.708, 31.7148, 0.3304", "532.579, 321.55, 31.8609, 0.3814", "533.659, 321.656, 30.9725, 0.3304", "534.549, 321.785, 29.3065, 0.2796", "535.391, 321.922, 27.44, 0.2288" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "401.365, 300.859, 37.3332, 0.5338", "402.632, 300.475, 37.6701, 0.3814", "403.685, 300.12, 37.2686, 0.356", "404.715, 299.749, 36.4627, 0.2796", "405.816, 299.549, 36.1623, 0.2796", "406.955, 299.449, 36.1519, 0.2796", "408.056, 299.146, 36.2765, 0.305", "409.152, 298.824, 36.3759, 0.2796", "410.232, 298.467, 36.0864, 0.305", "411.313, 298.11, 35.7969, 0.3304", "412.373, 298.025, 34.8569, 0.3814", "413.43, 297.991, 33.7901, 0.356", "414.379, 297.495, 34.2314, 0.3304", "415.302, 296.898, 34.9994, 0.305", "416.373, 296.595, 35.1176, 0.2796", "417.499, 296.406, 34.9866, 0.2542", "418.622, 296.206, 35.0608, 0.305", "419.735, 295.991, 35.4169, 0.3814", "420.847, 295.77, 35.7602, 0.5338", "421.78, 295.153, 35.1708, 0.5338", "422.714, 294.538, 34.5811, 0.5338", "423.761, 294.09, 34.4904, 0.3814", "424.823, 293.668, 34.475, 0.3304", "425.774, 293.077, 34.0687, 0.305", "426.678, 292.414, 33.497, 0.3814", "427.498, 291.699, 32.6743, 0.4068", "428.283, 290.959, 31.7388, 0.3814", "429.366, 291.076, 31.0783, 0.305", "430.286, 290.679, 31.211, 0.2542", "431.085, 289.905, 31.8654, 0.2542", "431.473, 289.04, 33.1052, 0.2796", "431.595, 288.115, 34.7298, 0.3304", "432.156, 288.22, 37.0614, 0.3814", "432.916, 287.659, 36.3017, 0.5084", "433.7, 286.991, 35.0823, 0.5848", "434.656, 286.462, 34.3753, 0.5848", "435.671, 286.019, 33.8671, 0.4322", "436.721, 286.465, 34.0816, 0.305", "437.772, 286.908, 34.2958, 0.305", "438.792, 287.423, 34.2488, 0.4576", "439.805, 287.952, 34.1482, 0.661", "440.814, 288.48, 33.9044, 0.7372", "441.82, 289.009, 33.5742, 0.6864", "442.867, 289.429, 33.4298, 0.5338", "443.985, 289.656, 33.6109, 0.4068", "445.101, 289.894, 33.6812, 0.3304", "446.208, 290.157, 33.4009, 0.3304", "447.311, 290.436, 33.1929, 0.4068", "448.387, 290.809, 33.4488, 0.5084", "449.464, 291.184, 33.7044, 0.6102", "450.559, 291.188, 33.0439, 0.6102", "451.656, 291.143, 32.2616, 0.5338", "452.772, 291.033, 31.9343, 0.3814", "453.904, 290.867, 31.9838, 0.2796", "455.016, 290.609, 32.0163, 0.2542", "456.11, 290.274, 32.034, 0.2796", "456.566, 289.351, 31.9239, 0.3304", "457.45, 290.075, 31.8965, 0.3304", "458.137, 290.889, 32.4604, 0.3814", "458.597, 291.807, 33.6997, 0.4322", "459.451, 292.268, 33.9643, 0.5592", "460.573, 292.419, 33.5689, 0.5848" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "385.577, 286.152, 33.9111, 0.7372", "386.593, 285.715, 31.6019, 0.356", "387.371, 285.333, 29.7744, 0.356", "388.024, 284.613, 29.1469, 0.3814", "388.577, 283.622, 29.4924, 0.356", "389.283, 282.783, 29.3465, 0.4068", "390.172, 282.129, 28.6157, 0.5084", "391.049, 281.449, 27.9381, 0.6102", "391.926, 280.768, 27.2644, 0.5592", "392.326, 279.797, 26.4659, 0.4322", "392.574, 278.734, 25.6278, 0.3304", "392.668, 277.61, 25.2837, 0.356", "392.727, 276.472, 25.0527, 0.4068", "392.588, 275.407, 24.1926, 0.4576", "392.39, 274.364, 23.1468, 0.4068", "392.162, 273.257, 22.7318, 0.3304", "392.071, 272.209, 22.3118, 0.2542", "393.022, 271.625, 21.702, 0.2288", "393.675, 270.762, 21.1179, 0.2288", "394.175, 269.76, 20.547, 0.2288", "394.168, 268.638, 20.5904, 0.2288", "394.086, 267.498, 20.7242, 0.2288", "393.988, 266.359, 20.6864, 0.2288", "393.884, 265.22, 20.6125, 0.2288", "394.149, 264.13, 20.6301, 0.2542", "394.549, 263.058, 20.6814, 0.305", "394.91, 261.985, 20.3599, 0.3814", "395.256, 260.912, 19.8892, 0.4068", "395.545, 259.842, 19.2038, 0.4068", "395.823, 258.773, 18.48, 0.3814" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "385.577, 286.152, 33.9111, 0.7372", "384.535, 285.959, 34.2026, 0.6102", "383.422, 285.706, 34.3882, 0.5848", "382.758, 285.272, 32.7118, 0.5084", "382.213, 284.793, 30.5491, 0.3814", "381.237, 284.263, 31.1797, 0.305", "380.228, 283.769, 31.6744, 0.3304", "379.193, 283.305, 32.03, 0.3814", "378.129, 282.966, 32.1605, 0.4576", "376.997, 282.926, 31.7582, 0.3814", "376.024, 282.664, 31.026, 0.305", "375.401, 281.915, 29.5604, 0.2542", "374.739, 281.075, 28.8705, 0.2796", "374.046, 280.166, 28.7862, 0.3304", "374.02, 279.092, 28.5827, 0.3304", "374.201, 277.967, 28.3422, 0.3304" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "338.051, 288.059, 71.4, 0.3304", "337.648, 288.132, 71.2205, 0.2796", "336.542, 287.977, 71.393, 0.2796", "335.429, 287.818, 71.8183, 0.2796", "334.304, 287.787, 72.3288, 0.305", "333.224, 287.627, 72.8916, 0.2796", "332.284, 287.047, 73.6249, 0.2542", "331.322, 286.5, 74.284, 0.2542", "330.274, 286.069, 74.6732, 0.2796", "329.312, 285.532, 75.1136, 0.3304", "328.641, 284.641, 75.7243, 0.3304", "327.95, 283.785, 76.4123, 0.3304", "327.115, 283.195, 77.6756, 0.2796", "326.251, 282.633, 78.783, 0.2542", "325.168, 282.261, 78.8606, 0.2288", "324.087, 281.891, 78.9384, 0.2796", "322.989, 281.663, 79.4612, 0.356", "322.006, 281.341, 80.4423, 0.4576", "321.194, 280.855, 82.0165, 0.5084", "320.654, 279.94, 82.8954, 0.5084", "320.154, 278.961, 83.6707, 0.5084", "319.411, 278.287, 84.9612, 0.483", "318.803, 277.545, 86.4153, 0.483", "318.341, 276.71, 87.9592, 0.4068", "317.54, 276.278, 87.7478, 0.3304", "316.842, 275.883, 87.6274, 0.2542", "316.716, 275.102, 89.6515, 0.2288", "316.353, 274.376, 90.6156, 0.2288", "315.511, 273.76, 89.4639, 0.2542", "314.752, 272.966, 89.8416, 0.305", "314.052, 272.1, 90.459, 0.356", "313.433, 271.165, 91.0011, 0.4068", "312.741, 270.37, 91.9117, 0.4068", "311.959, 269.75, 93.2789, 0.4322", "311.127, 269.097, 93.9896, 0.4068", "310.224, 268.4, 93.7796, 0.4322", "309.42, 267.604, 93.9576, 0.4068", "308.668, 266.757, 94.3482, 0.3814", "308.153, 266.248, 96.5006, 0.305", "307.564, 265.744, 98.4511, 0.305", "306.582, 265.249, 99.2177, 0.3304", "305.577, 264.814, 99.8514, 0.3814", "304.437, 264.739, 99.6954, 0.356", "303.366, 264.47, 99.8113, 0.3304", "302.406, 263.891, 100.367, 0.305", "301.371, 263.528, 100.995, 0.3304", "300.28, 263.329, 101.677, 0.356", "299.19, 263.131, 102.383, 0.3814", "298.109, 262.94, 103.166, 0.356", "297.127, 262.673, 103.151, 0.3304", "296.364, 262.234, 101.361, 0.305", "295.688, 262.0, 101.311, 0.2796", "295.134, 262.061, 103.758, 0.2542", "294.357, 261.823, 104.83, 0.305", "293.354, 261.287, 104.521, 0.4068", "292.447, 260.746, 105.396, 0.5084", "291.566, 260.204, 106.59, 0.4576", "290.609, 259.615, 106.691, 0.356", "289.636, 259.014, 106.562, 0.2542", "288.854, 258.221, 107.059, 0.2288", "288.089, 257.417, 107.671, 0.2288", "287.066, 256.952, 108.198, 0.2288", "286.025, 256.527, 108.68, 0.2288", "284.952, 256.168, 109.089, 0.2542", "284.054, 255.583, 109.835, 0.356", "283.28, 254.844, 110.814, 0.483", "282.251, 254.387, 111.238, 0.5592", "281.206, 253.951, 111.62, 0.483", "280.108, 253.768, 112.155, 0.356", "278.994, 253.673, 112.744, 0.2542", "277.88, 253.588, 113.339, 0.2796", "276.765, 253.513, 113.94, 0.3814", "275.735, 253.873, 114.758, 0.483", "274.708, 254.247, 115.583, 0.483", "273.583, 254.269, 115.824, 0.4322", "272.442, 254.229, 115.966, 0.3814", "271.334, 254.066, 116.363, 0.3814", "270.266, 253.767, 117.045, 0.3304", "269.237, 253.316, 117.486, 0.2796", "268.228, 252.794, 117.814, 0.2288", "267.162, 252.405, 118.094, 0.2288", "266.08, 252.049, 118.363, 0.2288", "264.996, 252.181, 118.62, 0.2288", "263.913, 252.533, 118.871, 0.2288", "262.849, 252.929, 119.179, 0.2288", "261.819, 253.399, 119.587, 0.2542", "260.775, 253.812, 120.065, 0.305", "259.7, 254.105, 120.687, 0.356", "258.631, 254.431, 121.246, 0.356", "257.607, 254.932, 121.465, 0.305", "256.582, 255.435, 121.685, 0.2542", "255.788, 256.111, 120.597, 0.2288", "254.93, 256.253, 121.986, 0.2288", "254.06, 256.304, 123.798, 0.2542", "252.989, 256.168, 124.354, 0.2796", "251.864, 255.98, 124.568, 0.305", "250.89, 255.693, 125.626, 0.2796", "250.007, 255.348, 127.19, 0.2542", "248.965, 255.121, 127.863, 0.2288", "247.835, 254.962, 128.027, 0.2542", "246.711, 254.763, 128.197, 0.2796", "245.593, 254.53, 128.371, 0.305", "244.475, 254.32, 128.605, 0.2796", "243.358, 254.249, 129.177, 0.2542", "242.241, 254.178, 129.75, 0.2542", "241.128, 254.002, 130.199, 0.2796", "240.016, 253.785, 130.598, 0.305", "239.082, 253.212, 130.839, 0.2796", "238.255, 252.424, 130.983, 0.2796", "237.509, 251.562, 131.124, 0.2796", "236.815, 250.655, 131.263, 0.305", "236.132, 249.763, 131.713, 0.3304", "235.456, 248.882, 132.386, 0.356", "234.962, 248.436, 130.265, 0.3814", "234.48, 248.021, 127.935, 0.3304", "234.33, 247.504, 129.977, 0.2796", "234.211, 246.978, 132.446, 0.2288", "233.508, 246.244, 133.001, 0.2288", "232.659, 245.493, 133.16, 0.2542", "231.576, 245.229, 133.792, 0.2796", "230.727, 244.642, 134.308, 0.305", "230.168, 243.656, 134.679, 0.2796", "229.559, 242.704, 135.056, 0.2796", "228.846, 241.824, 135.444, 0.305", "228.296, 240.882, 136.054, 0.356", "227.985, 239.849, 136.984, 0.3814", "227.863, 238.753, 137.418, 0.3814", "227.884, 237.609, 137.48, 0.3814" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "338.051, 288.059, 71.4, 0.3304", "337.879, 287.511, 71.4, 0.356", "337.362, 286.49, 71.4, 0.3304", "336.806, 285.497, 71.3362, 0.3304", "336.093, 284.612, 71.0231, 0.356", "335.367, 283.742, 70.7056, 0.356", "334.377, 283.195, 70.2918, 0.305", "333.386, 282.648, 69.8779, 0.2542", "332.696, 282.142, 71.559, 0.2796", "332.011, 281.66, 73.365, 0.3304", "330.893, 281.419, 73.2542, 0.3814", "329.798, 281.147, 73.2242, 0.3304", "329.02, 280.438, 74.3182, 0.305", "328.272, 279.681, 75.2752, 0.2796", "327.615, 278.767, 75.7884, 0.305", "327.001, 277.818, 75.8943, 0.2796", "326.426, 276.834, 75.6235, 0.2542", "325.644, 276.117, 76.5646, 0.2288", "324.842, 275.425, 77.6208, 0.2542", "323.801, 275.048, 78.1802, 0.2796", "322.721, 274.725, 78.659, 0.305", "321.828, 274.156, 79.695, 0.2796", "320.947, 273.63, 80.8444, 0.2542", "320.097, 273.545, 82.7089, 0.2288", "319.541, 272.72, 83.3372, 0.2796", "319.069, 271.685, 83.6144, 0.3304", "318.378, 270.815, 84.0126, 0.4068", "317.553, 270.046, 84.4855, 0.3814", "316.986, 269.252, 85.556, 0.356", "316.646, 268.466, 87.0318, 0.305", "315.688, 267.889, 86.429, 0.3304", "314.989, 267.229, 86.9431, 0.356", "314.599, 266.469, 88.8028, 0.356", "314.043, 265.845, 89.1887, 0.305", "313.248, 265.418, 87.4664, 0.305", "312.961, 264.627, 88.3162, 0.356", "312.835, 263.717, 89.9875, 0.4576", "312.167, 262.879, 90.6749, 0.4576", "311.404, 262.053, 91.1915, 0.4576", "310.882, 261.046, 91.1912, 0.483", "310.4, 260.008, 91.1033, 0.6102", "309.735, 259.221, 92.0214, 0.661", "308.997, 258.53, 93.3321, 0.6102", "308.102, 257.941, 93.4682, 0.5084", "307.114, 257.414, 92.8995, 0.483", "306.121, 256.858, 92.9088, 0.5338", "305.353, 256.281, 94.4334, 0.5338", "304.587, 255.705, 95.9582, 0.483", "303.486, 255.459, 96.411, 0.4068", "302.383, 255.214, 96.8573, 0.4068", "301.775, 254.309, 97.5615, 0.4322", "301.194, 253.368, 98.2797, 0.4322", "300.318, 253.191, 99.745, 0.3814", "299.384, 253.167, 101.36, 0.3304" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "339.703, 329.879, 52.08, 0.5848", "339.835, 329.284, 51.324, 0.3814", "340.055, 328.254, 50.4451, 0.3814", "340.276, 327.131, 50.5725, 0.4068", "340.364, 326.051, 50.843, 0.5084", "339.74, 325.191, 51.882, 0.5848", "339.05, 324.372, 52.7775, 0.6356", "338.178, 323.659, 53.286, 0.5338", "337.298, 322.959, 53.7639, 0.483", "336.306, 322.392, 53.8894, 0.4068", "335.313, 321.824, 54.0148, 0.4322", "334.288, 321.321, 53.935, 0.4576", "333.254, 320.834, 53.8037, 0.6102", "332.238, 320.394, 54.318, 0.7118", "331.232, 319.981, 55.1802, 0.7118", "330.226, 319.642, 56.2164, 0.5338", "329.223, 319.333, 57.3266, 0.4068", "328.153, 319.233, 57.9082, 0.356", "327.015, 319.351, 57.9418, 0.356", "325.952, 319.17, 58.2523, 0.3304", "324.98, 318.629, 58.9005, 0.356", "324.042, 318.024, 59.36, 0.4322", "323.184, 317.268, 59.36, 0.5592", "322.247, 316.64, 58.9501, 0.5848", "321.296, 316.033, 58.4682, 0.6102", "320.222, 315.755, 58.6012, 0.5592", "319.17, 315.491, 59.0234, 0.5592", "318.528, 314.59, 59.7318, 0.5338", "317.875, 313.695, 60.4019, 0.5338", "317.058, 312.895, 60.4904, 0.5338", "316.241, 312.096, 60.5788, 0.483", "315.197, 311.708, 60.1644, 0.4068", "314.119, 311.384, 59.6714, 0.4068", "313.298, 310.777, 60.5802, 0.5848", "312.544, 310.045, 61.6238, 0.788", "311.784, 309.224, 62.2118, 0.839", "310.985, 308.452, 62.7491, 0.6864", "309.946, 307.983, 62.9628, 0.5848", "308.907, 307.514, 63.1767, 0.6102", "308.124, 306.713, 63.5197, 0.661", "307.384, 305.871, 63.9545, 0.6102", "306.491, 305.407, 65.2882, 0.5084", "305.75, 304.762, 65.8507, 0.483", "305.289, 303.779, 64.9676, 0.483", "304.818, 302.797, 64.1267, 0.4322", "304.196, 301.843, 63.8831, 0.356", "303.546, 300.926, 63.8288, 0.305", "302.751, 300.208, 64.8152, 0.356", "301.872, 299.594, 65.7902, 0.4322", "300.985, 298.991, 66.7643, 0.5338", "300.506, 298.53, 66.9152, 0.3304", "299.729, 297.696, 67.1653, 0.3304", "298.954, 296.862, 67.415, 0.3814", "298.086, 296.289, 68.4211, 0.3304", "297.187, 295.809, 69.6931, 0.2796", "296.369, 295.12, 69.9815, 0.2542", "295.603, 294.312, 69.4462, 0.305", "294.801, 293.696, 68.1411, 0.4068", "294.002, 293.071, 67.0894, 0.5084", "293.247, 292.375, 68.3208, 0.5592", "292.487, 291.682, 69.5268, 0.5338", "291.471, 291.156, 69.4322, 0.483", "290.448, 290.662, 69.4372, 0.483", "289.374, 290.379, 70.0997, 0.5592", "288.321, 290.054, 70.7706, 0.5848", "287.465, 289.359, 71.5103, 0.6102", "286.896, 288.53, 72.7202, 0.5592", "286.433, 287.654, 74.0533, 0.5848", "285.579, 286.943, 73.388, 0.5592", "284.727, 286.292, 73.108, 0.5084", "283.883, 285.955, 74.8084, 0.4068", "283.021, 285.59, 75.7081, 0.356", "282.113, 285.145, 74.3982, 0.3814", "281.17, 284.672, 73.4334, 0.4576", "280.162, 284.147, 73.1086, 0.483", "279.125, 283.737, 73.3177, 0.5338", "278.059, 283.433, 74.0079, 0.5592", "277.006, 283.129, 74.807, 0.6102", "275.961, 282.824, 75.6776, 0.6102", "274.991, 282.343, 76.2502, 0.6102", "274.138, 281.582, 76.3549, 0.5848", "273.366, 280.921, 77.4326, 0.5084", "272.633, 280.306, 78.9676, 0.4576", "271.912, 279.487, 79.6368, 0.4576", "271.19, 278.619, 80.0682, 0.483", "270.381, 277.835, 79.5749, 0.4576", "269.571, 277.053, 79.0812, 0.4068", "268.681, 276.488, 79.8809, 0.3814", "267.769, 275.981, 81.0314, 0.356", "266.885, 275.325, 81.6547, 0.3304", "265.992, 274.628, 82.0075, 0.3814", "265.036, 274.005, 82.2542, 0.483", "264.145, 273.335, 82.7375, 0.6102", "263.353, 272.587, 83.5929, 0.6356", "262.601, 271.762, 83.8701, 0.661", "261.879, 270.878, 83.7001, 0.6102", "261.092, 270.077, 84.0566, 0.5338", "260.275, 269.315, 84.6619, 0.4068", "259.465, 268.591, 85.5341, 0.3814", "258.657, 267.875, 86.4618, 0.4322", "257.861, 267.06, 86.4254, 0.5084", "257.066, 266.24, 86.3246, 0.5084", "256.48, 265.394, 87.5224, 0.4576", "255.882, 264.545, 88.6802, 0.3814", "255.211, 263.683, 89.5087, 0.305", "254.493, 262.852, 90.218, 0.2542", "253.609, 262.135, 90.4893, 0.2288", "252.795, 261.391, 90.3871, 0.2288", "252.205, 260.561, 89.1139, 0.2796", "251.411, 259.881, 89.2192, 0.3304", "250.503, 259.289, 90.1065, 0.4068", "249.444, 258.926, 89.7546, 0.3814", "248.381, 258.555, 89.3673, 0.3814", "247.388, 257.99, 89.5334, 0.356", "246.363, 257.493, 89.518, 0.3814", "245.308, 257.057, 89.3374, 0.3814", "244.403, 256.44, 89.9161, 0.356", "243.551, 255.76, 90.7651, 0.356", "242.794, 255.101, 92.0702, 0.3304", "242.069, 254.45, 93.5368, 0.356", "241.184, 253.871, 93.422, 0.3304", "240.231, 253.323, 92.6419, 0.3304", "239.277, 252.73, 92.4274, 0.2796", "238.321, 252.107, 92.6024, 0.2542", "237.429, 251.418, 93.0093, 0.2288", "236.591, 250.679, 93.6009, 0.2288", "235.837, 249.86, 93.8554, 0.2796", "235.237, 248.897, 93.4959, 0.3304", "234.595, 248.052, 93.693, 0.4068", "233.838, 247.512, 95.3291, 0.4322", "233.07, 246.915, 96.6171, 0.4576", "232.257, 246.111, 96.658, 0.4576", "231.41, 245.347, 96.689, 0.4322", "230.472, 244.692, 96.6952, 0.4068", "229.573, 243.99, 96.7288, 0.3814", "228.749, 243.198, 96.8148, 0.356", "227.918, 242.415, 96.9522, 0.356", "227.056, 241.687, 97.4081, 0.3304", "226.195, 240.955, 97.839, 0.3814", "225.348, 240.19, 98.0087, 0.3814", "224.501, 239.423, 98.1784, 0.4322", "223.65, 238.678, 98.5827, 0.4068", "222.798, 237.935, 99.0172, 0.4068", "221.862, 237.283, 99.1211, 0.356", "220.913, 236.644, 99.1704, 0.3304", "219.812, 236.457, 99.3558, 0.305", "218.675, 236.378, 99.5739, 0.3304", "217.666, 235.955, 100.039, 0.3304", "216.724, 235.352, 100.633, 0.3304", "215.709, 234.847, 100.734, 0.305", "214.665, 234.385, 100.625, 0.305", "213.862, 233.685, 100.968, 0.305", "213.307, 232.768, 101.897, 0.2796", "212.721, 232.015, 103.44, 0.2796", "212.166, 231.176, 103.986, 0.305", "211.654, 230.219, 103.11, 0.3814", "211.059, 229.279, 103.003, 0.4576", "210.409, 228.352, 103.408, 0.5084", "209.72, 227.447, 103.617, 0.5592", "209.0, 226.558, 103.665, 0.5848", "208.125, 225.867, 103.811, 0.661", "207.102, 225.363, 104.05, 0.7118", "206.093, 224.865, 103.932, 0.7118", "205.108, 224.375, 103.16, 0.6102", "204.073, 224.139, 103.968, 0.5084", "203.03, 223.943, 105.014, 0.5084", "202.02, 224.097, 106.127, 0.5338", "201.024, 224.411, 107.271, 0.5338", "199.904, 224.381, 107.628, 0.483", "198.768, 224.303, 107.874, 0.4576", "197.937, 224.198, 109.739, 0.4322", "197.086, 224.021, 111.341, 0.356", "196.06, 223.516, 111.298, 0.2796", "195.504, 222.757, 109.985, 0.2288", "195.064, 221.936, 108.36, 0.2796", "194.784, 222.065, 108.921, 0.3304", "193.951, 222.451, 110.59, 0.356", "193.116, 222.836, 112.26, 0.3304", "192.196, 223.158, 113.587, 0.3304", "191.099, 223.351, 114.217, 0.2796", "190.033, 223.609, 114.907, 0.2542", "189.123, 224.177, 115.882, 0.2542", "188.166, 224.585, 115.952, 0.2796", "187.144, 224.775, 114.783, 0.305", "186.078, 224.869, 114.137, 0.2796", "184.938, 224.807, 114.332, 0.2542", "183.867, 224.846, 115.257, 0.2288", "182.81, 224.909, 116.295, 0.2796", "181.707, 225.204, 116.131, 0.356", "180.602, 225.492, 115.956, 0.483", "179.481, 225.654, 115.581, 0.5338", "178.36, 225.806, 115.24, 0.5592", "177.288, 225.6, 116.074, 0.483", "176.215, 225.394, 116.907, 0.4322", "175.177, 225.752, 117.493, 0.3814", "174.145, 226.191, 118.042, 0.4322", "173.043, 226.388, 117.577, 0.483", "171.934, 226.57, 117.042, 0.5084", "170.987, 226.028, 117.641, 0.4576", "170.051, 225.432, 118.324, 0.4068", "168.945, 225.402, 118.863, 0.4068", "167.821, 225.434, 119.183, 0.4068", "166.695, 225.47, 118.71, 0.3814", "165.59, 225.696, 118.708, 0.3304", "164.497, 226.021, 118.947, 0.3304", "163.534, 226.466, 119.762, 0.3814", "162.676, 227.008, 121.052, 0.4068", "161.866, 227.699, 122.018, 0.3814", "161.08, 228.462, 122.827, 0.3304", "160.154, 229.051, 122.908, 0.305", "159.124, 229.506, 122.427, 0.305", "158.02, 229.784, 122.249, 0.2796", "156.907, 230.041, 122.108, 0.2542", "155.822, 230.333, 122.552, 0.2542", "154.744, 230.634, 123.142, 0.2796", "153.732, 230.919, 124.211, 0.3304", "152.739, 231.2, 125.418, 0.3304", "151.669, 231.257, 125.234, 0.3814", "150.568, 231.222, 124.479, 0.3814", "149.585, 231.461, 125.384, 0.4068", "148.633, 231.773, 126.736, 0.356", "147.543, 231.867, 127.096, 0.3814", "146.399, 231.875, 127.07, 0.4322", "145.321, 231.617, 126.761, 0.5084", "144.293, 231.162, 126.246, 0.483", "143.243, 231.168, 126.353, 0.4322", "142.178, 231.515, 126.919, 0.3814", "141.079, 231.764, 127.343, 0.4322", "139.957, 231.943, 127.665, 0.5084", "138.828, 232.018, 127.863, 0.5592", "137.689, 231.92, 127.854, 0.5338", "136.55, 231.828, 127.87, 0.4576", "135.49, 231.963, 128.864, 0.4576", "134.428, 232.119, 129.767, 0.5084", "133.356, 232.507, 129.532, 0.5592", "132.297, 232.886, 129.12, 0.5338", "131.274, 233.244, 128.229, 0.4576", "130.504, 233.598, 128.715, 0.4576", "130.103, 233.946, 131.195, 0.5084", "129.576, 234.404, 132.951, 0.5592", "128.716, 235.155, 132.782, 0.5084", "127.822, 235.861, 132.566, 0.4068", "126.903, 236.535, 132.313, 0.3814", "126.099, 237.274, 133.042, 0.4576", "125.313, 238.023, 133.919, 0.5592", "124.387, 238.419, 135.225, 0.5848", "123.453, 238.793, 136.557, 0.5592", "122.486, 239.255, 135.637, 0.5338", "121.519, 239.719, 134.666, 0.5084", "120.416, 239.702, 135.1, 0.4576", "119.343, 239.54, 135.738, 0.4576", "118.524, 238.841, 136.678, 0.483", "117.778, 238.077, 136.597, 0.5592", "117.1, 237.254, 135.584, 0.5592", "116.382, 236.49, 135.462, 0.5592", "115.604, 235.815, 136.68, 0.5592", "115.071, 234.932, 137.82, 0.5338", "114.591, 233.996, 138.911, 0.5084", "113.922, 233.101, 139.517, 0.3814", "113.247, 232.218, 140.099, 0.3814", "112.165, 232.008, 139.348, 0.3814", "111.146, 231.738, 138.715, 0.4576", "110.975, 230.676, 139.67, 0.4068", "110.729, 229.657, 139.971, 0.356", "110.299, 228.742, 138.662, 0.305", "109.791, 227.972, 138.687, 0.305", "109.222, 227.439, 140.716, 0.305", "108.768, 226.981, 143.03, 0.305", "107.983, 226.426, 143.688, 0.3304", "107.019, 225.818, 143.451, 0.4068", "106.138, 225.171, 143.983, 0.5084", "105.313, 224.491, 144.96, 0.6102", "104.609, 223.594, 145.171, 0.661", "103.912, 222.691, 145.383, 0.7118", "103.379, 221.684, 145.632, 0.661", "102.845, 220.678, 145.88, 0.5592" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "339.703, 329.879, 52.08, 0.5848", "339.125, 329.847, 52.4521, 0.3814", "338.021, 329.784, 53.1639, 0.4068", "336.946, 330.052, 52.5563, 0.4068", "335.872, 330.335, 51.8876, 0.4322", "334.999, 331.006, 52.2922, 0.5084", "334.161, 331.747, 52.8889, 0.661" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "337.797, 469.002, 110.973, 0.356", "338.47, 469.358, 110.668, 0.356", "339.468, 469.885, 110.214, 0.4322", "340.466, 470.413, 109.76, 0.4068", "340.797, 470.329, 110.102, 0.356", "341.92, 470.19, 110.316, 0.4068", "343.05, 470.049, 110.38, 0.4576", "344.074, 469.596, 109.807, 0.4068", "345.13, 469.269, 109.302, 0.3304", "346.266, 469.263, 108.973, 0.2796", "347.363, 469.173, 109.2, 0.2796", "348.404, 468.96, 110.237, 0.305", "349.427, 468.664, 110.964, 0.2796", "350.374, 468.052, 110.502, 0.2542", "351.321, 467.438, 110.04, 0.2288" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "337.797, 469.002, 110.973, 0.356", "337.405, 469.825, 110.899, 0.305", "336.846, 470.527, 109.161, 0.3304", "336.218, 471.061, 110.955, 0.3304", "335.445, 471.552, 112.536, 0.356", "334.503, 472.003, 113.684, 0.3814", "333.446, 472.366, 113.954, 0.4322", "332.353, 472.703, 113.958, 0.4576", "331.319, 473.156, 114.272, 0.4322", "330.315, 473.67, 114.754, 0.4068", "329.416, 474.276, 115.47, 0.356", "328.687, 475.032, 116.577, 0.305", "327.873, 475.729, 117.375, 0.2542", "326.884, 476.3, 117.541, 0.2288", "325.949, 476.929, 117.918, 0.2796", "325.068, 477.618, 118.512, 0.3304", "324.307, 478.383, 118.975, 0.4068", "324.097, 479.507, 118.835, 0.3814", "323.849, 480.589, 118.976, 0.356", "323.434, 481.487, 120.383, 0.2796", "323.02, 482.385, 121.789, 0.2796", "322.464, 483.382, 121.706, 0.305", "321.866, 484.342, 121.554, 0.3814", "320.979, 485.026, 120.992, 0.4068", "320.163, 485.456, 120.767, 0.3814", "319.716, 484.595, 122.248, 0.356", "318.736, 484.11, 122.519, 0.356", "317.675, 483.68, 122.612, 0.3814", "316.789, 483.683, 124.253, 0.3304", "315.921, 483.736, 126.076, 0.2796", "314.796, 483.787, 126.461, 0.2796", "313.661, 483.839, 126.776, 0.3814", "312.529, 483.896, 126.394, 0.5084", "311.398, 483.953, 126.011, 0.5592", "310.366, 484.384, 126.551, 0.5592", "309.337, 484.827, 127.12, 0.5084" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "460.573, 292.419, 33.5689, 0.5848", "460.95, 291.895, 35.7512, 0.3304", "461.34, 291.349, 38.0201, 0.2796", "461.73, 290.805, 40.2889, 0.2542" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "460.573, 292.419, 33.5689, 0.5848", "461.249, 291.962, 32.7407, 0.3304", "462.255, 291.625, 31.9648, 0.4576", "463.374, 291.512, 31.4499, 0.5592", "464.427, 291.522, 30.4511, 0.5592", "465.448, 291.599, 29.199, 0.4576", "466.515, 291.781, 28.3707, 0.3304", "467.607, 292.015, 27.7575, 0.305", "468.636, 291.81, 28.0414, 0.356", "469.63, 291.349, 28.8476, 0.4322", "470.707, 291.312, 29.1421, 0.4068", "471.831, 291.52, 29.1379, 0.3304", "472.932, 291.396, 28.7462, 0.2542", "474.022, 291.133, 28.1924, 0.2542", "475.147, 291.008, 28.0456, 0.2796", "476.29, 290.956, 28.1109, 0.305", "477.386, 290.68, 27.9328, 0.2796", "478.461, 290.309, 27.6525, 0.2542", "479.327, 289.824, 26.3981, 0.2288", "480.21, 289.417, 25.2232, 0.2288", "481.354, 289.368, 25.2246, 0.2542", "482.495, 289.349, 25.2736, 0.356", "483.63, 289.451, 25.5242, 0.4576", "484.764, 289.533, 25.767, 0.5338", "485.888, 289.327, 25.9045, 0.5084", "487.009, 289.108, 26.0543, 0.5338", "488.103, 288.79, 26.2926, 0.5338", "489.197, 288.472, 26.5311, 0.5084", "490.315, 288.465, 26.2041, 0.4322", "491.44, 288.469, 25.7536, 0.4068", "492.564, 288.335, 25.3686, 0.483", "493.642, 287.995, 25.2204, 0.5084", "494.693, 287.546, 25.1992, 0.5084", "495.789, 287.223, 25.1591, 0.4068", "496.895, 286.934, 25.114, 0.3814", "497.954, 286.969, 24.5336, 0.3304", "498.971, 287.28, 23.5026, 0.3304", "500.051, 287.323, 23.875, 0.2796", "501.149, 287.287, 24.6565, 0.2542", "502.205, 287.555, 24.0335, 0.2542", "503.256, 287.862, 23.2229, 0.2796", "504.302, 288.293, 22.8085, 0.356", "505.347, 288.726, 22.4034, 0.4068", "506.391, 289.077, 22.9978, 0.4576", "507.434, 289.41, 23.8092, 0.4068", "508.506, 289.705, 24.1508, 0.3304", "509.618, 289.951, 23.8736, 0.2542", "510.709, 290.14, 23.3276, 0.2542", "511.761, 290.213, 22.2359, 0.305", "512.831, 290.417, 22.4515, 0.356", "513.911, 290.669, 23.151, 0.356", "514.902, 290.938, 24.3718, 0.305", "515.891, 291.216, 25.5858, 0.2542", "516.955, 291.606, 25.944, 0.2796", "517.724, 292.021, 24.5473, 0.3304", "518.382, 292.445, 22.5067, 0.4322", "519.375, 292.635, 21.28, 0.4322" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "374.201, 277.967, 28.3422, 0.3304", "372.816, 277.407, 28.28, 0.305", "371.861, 276.554, 29.7643, 0.3304", "371.218, 275.825, 28.849, 0.305", "370.613, 275.085, 27.3104, 0.356", "369.79, 274.345, 26.6865, 0.4068", "368.946, 273.605, 26.15, 0.4576", "368.046, 273.156, 24.8917, 0.4068", "367.135, 272.765, 23.4934, 0.356", "366.365, 272.24, 24.5566, 0.3304", "365.627, 271.683, 26.2074, 0.3814", "365.2, 270.746, 25.2014, 0.4576", "364.766, 269.803, 24.052, 0.5338", "364.019, 269.055, 22.9818, 0.6102", "363.273, 268.307, 21.912, 0.6102", "362.675, 267.354, 22.2628, 0.5338", "362.1, 266.384, 22.6772, 0.4322", "362.085, 265.241, 22.57, 0.3814", "361.902, 264.166, 22.2051, 0.3814", "361.353, 263.236, 21.2783, 0.3304", "361.072, 262.256, 20.4898, 0.305", "361.367, 261.169, 19.9987, 0.305", "361.15, 260.086, 19.8386, 0.3814", "360.779, 259.004, 19.7764, 0.4068", "360.541, 257.917, 20.2689, 0.3814", "360.359, 256.828, 21.0, 0.3304" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "374.201, 277.967, 28.3422, 0.3304", "374.499, 276.933, 28.7759, 0.2796", "374.597, 275.842, 29.5865, 0.2796", "374.217, 274.786, 29.8474, 0.3304", "373.77, 273.735, 29.9902, 0.4576", "373.301, 272.693, 29.8964, 0.5592", "372.832, 271.65, 29.8024, 0.5848", "372.298, 270.652, 30.1325, 0.5084", "371.745, 269.667, 30.5721, 0.4068", "371.244, 268.72, 29.8483, 0.305", "370.759, 267.785, 28.7526, 0.2796", "370.308, 266.862, 29.0318, 0.2796", "369.884, 265.947, 30.3534, 0.305", "369.208, 265.111, 30.5438, 0.3304", "368.401, 264.314, 30.1568, 0.356", "367.586, 263.52, 29.9421, 0.4068", "366.758, 262.73, 29.9057, 0.4322", "365.972, 261.912, 29.9782, 0.4576", "365.349, 260.977, 30.5161, 0.483", "364.739, 260.023, 30.7289, 0.483", "364.146, 259.048, 30.5782, 0.5338", "363.572, 258.064, 30.5402, 0.5084", "363.078, 257.043, 30.917, 0.5338", "362.584, 256.023, 31.2939, 0.483", "361.98, 255.065, 31.6778, 0.5084", "361.352, 254.122, 32.0628, 0.4576", "360.725, 253.174, 31.9561, 0.4068", "360.095, 252.226, 31.7363, 0.3304", "359.452, 251.285, 32.006, 0.305", "358.808, 250.346, 32.2759, 0.3304", "358.256, 249.353, 32.59, 0.3304", "357.716, 248.353, 32.9101, 0.3304", "357.034, 247.451, 33.1145, 0.2796", "356.257, 246.613, 33.2399, 0.2796", "355.626, 245.708, 33.0084, 0.2796", "355.26, 244.684, 32.1437, 0.305", "354.854, 243.673, 31.6739, 0.305", "354.326, 242.703, 32.401, 0.305", "353.787, 241.736, 32.9694, 0.3304", "353.17, 240.799, 32.4232, 0.356", "352.561, 239.85, 32.0989, 0.4322", "351.976, 238.871, 32.303, 0.4576", "351.352, 237.92, 32.5032, 0.483", "350.579, 237.08, 32.688, 0.4068", "349.751, 236.311, 32.9468, 0.4068", "348.795, 235.706, 33.3774, 0.4068", "347.84, 235.102, 33.8078, 0.483", "346.8, 234.64, 33.9752, 0.483", "345.74, 234.213, 34.0791, 0.483", "344.857, 233.548, 34.006, 0.4322", "344.129, 232.669, 33.7753, 0.3814", "343.376, 231.809, 33.6641, 0.3304", "342.62, 230.951, 33.5706, 0.3304", "341.964, 230.022, 33.7347, 0.356", "341.338, 229.069, 33.9814, 0.3814", "340.44, 228.476, 34.2958, 0.356", "339.362, 228.118, 34.6542, 0.3304", "338.467, 227.432, 34.6791, 0.2796", "337.614, 226.671, 34.629, 0.2542", "336.668, 226.085, 34.8253, 0.2288", "335.602, 225.73, 35.345, 0.2288", "334.562, 225.316, 35.8299, 0.2288", "333.641, 224.653, 36.1651, 0.2288", "332.693, 224.024, 36.2474, 0.2288", "331.717, 223.43, 36.0707, 0.2288", "330.767, 222.808, 35.9831, 0.2796", "329.979, 222.001, 36.4566, 0.3304", "329.135, 221.263, 36.7548, 0.3814", "328.131, 220.721, 36.5571, 0.3304", "327.172, 220.113, 36.4344, 0.2796", "326.304, 219.367, 36.4689, 0.2288", "325.437, 218.62, 36.5036, 0.2542", "324.569, 217.884, 36.7786, 0.2796", "323.702, 217.148, 37.0706, 0.305", "322.918, 216.325, 37.0042, 0.3304", "322.171, 215.463, 36.7853, 0.3814", "321.369, 214.656, 36.5574, 0.4322", "320.52, 213.894, 36.3219, 0.4068", "320.101, 212.933, 36.8102, 0.3304", "319.911, 211.863, 37.6902, 0.305", "319.403, 210.931, 37.9854, 0.3814", "318.595, 210.128, 37.7308, 0.5084", "317.652, 209.511, 37.5276, 0.5338", "316.625, 209.012, 37.3568, 0.5084", "315.659, 208.43, 37.401, 0.483", "314.816, 207.681, 37.8739, 0.5338", "313.972, 206.932, 38.3468, 0.5338", "312.977, 206.374, 38.4723, 0.4576", "311.977, 205.82, 38.5879, 0.3304", "311.09, 205.113, 38.4443, 0.305", "310.253, 204.341, 38.1912, 0.3304", "309.421, 203.559, 38.1158, 0.3814", "308.596, 202.767, 38.1797, 0.356", "307.775, 201.972, 38.2953, 0.3304", "306.963, 201.17, 38.4916, 0.305", "306.252, 200.292, 38.7764, 0.3304", "305.648, 199.333, 39.153, 0.356", "305.005, 198.4, 39.3056, 0.3814", "304.286, 197.518, 39.0214, 0.3304", "303.566, 196.636, 38.7374, 0.2796", "302.801, 195.79, 38.554, 0.2288", "302.026, 194.95, 38.39, 0.2288", "301.282, 194.239, 38.9956, 0.2288", "300.584, 193.733, 40.8372, 0.2288", "299.875, 193.548, 40.7949, 0.2288", "299.153, 193.72, 38.6652, 0.2542", "298.249, 193.406, 38.7444, 0.2796", "297.28, 192.915, 39.6234, 0.305", "296.515, 192.437, 41.2339, 0.2796", "295.843, 191.967, 43.1855, 0.2542", "294.939, 191.565, 42.8929, 0.2288", "293.954, 191.19, 41.8057, 0.2542", "293.067, 191.088, 43.374, 0.2796", "292.106, 190.941, 44.5225, 0.305", "290.995, 190.667, 44.5206, 0.3814", "289.874, 190.487, 44.5805, 0.5338", "288.733, 190.507, 44.7728, 0.6864", "287.673, 190.603, 45.4098, 0.661", "286.808, 190.88, 47.112, 0.483", "285.841, 190.967, 48.0556, 0.3304", "284.72, 190.762, 47.8346, 0.2796", "283.605, 190.563, 47.6907, 0.305", "282.65, 190.487, 49.2246, 0.2796", "281.696, 190.412, 50.7587, 0.2796", "280.584, 190.513, 50.9592, 0.2796", "279.447, 190.64, 50.9583, 0.3814", "278.542, 190.468, 49.9008, 0.483", "277.83, 190.047, 47.9688, 0.5848", "276.84, 189.986, 47.5163, 0.5592", "275.71, 190.11, 47.824, 0.5084", "274.573, 190.055, 47.7982, 0.5084", "273.433, 189.96, 47.6983, 0.5338", "272.329, 189.791, 47.9867, 0.5084", "271.277, 189.512, 48.8482, 0.3814", "270.238, 189.284, 48.9541, 0.305", "269.221, 189.149, 47.7162, 0.3304", "268.156, 188.903, 47.581, 0.4322", "267.067, 188.6, 48.0116, 0.483", "265.986, 188.237, 48.034, 0.483", "264.907, 187.859, 47.941, 0.483", "263.959, 187.32, 48.7166, 0.5592", "263.022, 186.766, 49.5832, 0.5848", "262.037, 186.283, 50.3692, 0.5338", "261.052, 185.797, 51.1431, 0.3814", "260.173, 185.077, 50.8043, 0.2796", "259.241, 184.441, 50.9062, 0.2288", "258.265, 183.875, 51.3626, 0.2288", "257.251, 183.525, 50.9398, 0.2288", "256.226, 183.302, 50.0814, 0.2542", "255.389, 182.738, 51.3996, 0.305", "254.668, 182.06, 52.7797, 0.356", "253.994, 181.335, 54.1848, 0.356", "253.374, 180.413, 54.8139, 0.305", "252.768, 179.506, 54.8996, 0.2542", "252.193, 178.67, 53.6057, 0.2288", "252.126, 177.629, 53.6992, 0.2288", "252.237, 176.515, 54.2783, 0.2288", "252.28, 175.407, 54.9721, 0.2542", "252.315, 174.301, 55.6752, 0.3304", "252.171, 173.23, 56.506, 0.4068", "251.902, 172.183, 57.4244, 0.483", "251.364, 171.25, 57.6618, 0.5084", "250.595, 170.416, 57.3149, 0.5592", "249.727, 169.804, 57.7254, 0.5338", "248.764, 169.415, 58.8955, 0.483", "247.938, 168.763, 59.4695, 0.4322", "247.247, 167.851, 59.4549, 0.4322", "246.604, 167.04, 60.5637, 0.4322", "245.864, 166.352, 61.612, 0.356", "244.77, 166.041, 61.8988, 0.305", "243.838, 165.555, 61.2307, 0.2796", "243.006, 164.96, 59.974, 0.305", "242.307, 164.447, 61.7221, 0.3814", "241.612, 163.935, 63.56, 0.483" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "334.161, 331.747, 52.8889, 0.661", "334.053, 331.342, 54.028, 0.5848", "333.729, 330.439, 55.4593, 0.5848", "333.355, 329.47, 56.635, 0.5338", "333.265, 328.499, 58.0322, 0.5084", "333.313, 327.518, 59.4034, 0.5084", "333.722, 326.464, 59.8405, 0.5848", "334.118, 325.417, 60.3008, 0.5592", "333.665, 324.713, 62.2098, 0.5084", "333.211, 324.009, 64.1192, 0.3814", "332.148, 323.902, 64.9961, 0.3304", "331.065, 323.799, 65.8039, 0.3814", "330.137, 323.132, 65.9201, 0.4576", "329.211, 322.465, 66.0489, 0.5338", "328.564, 321.823, 67.7446, 0.483", "328.868, 321.826, 70.4007, 0.4576", "329.135, 321.732, 73.0467, 0.4322", "329.178, 321.235, 75.5667, 0.4322", "328.479, 321.613, 75.2651, 0.3814", "327.666, 322.177, 75.5541, 0.356", "326.929, 322.704, 77.2643, 0.356", "326.028, 322.561, 78.8315, 0.4068", "325.005, 322.431, 79.9282, 0.4322", "323.902, 322.383, 80.6641, 0.483", "322.824, 322.224, 81.3834, 0.483", "321.814, 321.763, 82.0582, 0.483", "320.865, 321.307, 83.0452, 0.483", "320.033, 320.862, 84.6269, 0.5848", "319.229, 320.382, 86.2305, 0.661", "318.453, 319.866, 87.8562, 0.7118", "317.652, 319.203, 88.7922, 0.661", "316.831, 318.422, 89.1654, 0.6864", "316.282, 317.581, 90.4677, 0.661", "315.753, 316.736, 91.8414, 0.5848", "315.553, 315.713, 92.9678, 0.4576", "315.3, 314.761, 94.1419, 0.4068", "314.517, 314.4, 95.7281, 0.483", "314.646, 313.272, 96.0733, 0.5084", "314.367, 312.642, 97.6671, 0.5338", "313.839, 312.312, 100.017, 0.5084", "313.508, 311.392, 100.928, 0.6102", "313.202, 310.317, 101.458, 0.661", "312.606, 309.412, 102.351, 0.7626", "312.01, 308.506, 103.244, 0.7372", "311.217, 307.693, 103.571, 0.7118", "310.422, 306.88, 103.893, 0.5848", "309.643, 306.092, 104.585, 0.5084", "308.928, 305.274, 105.32, 0.4576", "308.662, 304.238, 106.309, 0.4322", "308.197, 303.292, 106.92, 0.4068", "307.353, 302.522, 106.802, 0.4322", "306.59, 301.689, 106.813, 0.5084", "306.037, 300.697, 107.155, 0.5848", "305.303, 299.958, 108.127, 0.5848", "304.495, 299.321, 109.349, 0.5338", "303.964, 298.34, 109.181, 0.483", "303.468, 297.319, 108.846, 0.483", "302.766, 296.449, 108.641, 0.483", "301.823, 295.929, 108.79, 0.5084", "300.713, 295.885, 109.457, 0.483", "299.602, 295.842, 110.121, 0.5338", "298.489, 295.803, 110.753, 0.5084", "297.367, 295.797, 111.213, 0.483", "296.225, 295.875, 111.25, 0.3814", "295.201, 295.618, 111.757, 0.3304", "294.285, 295.051, 112.699, 0.305", "293.21, 294.78, 112.786, 0.3304", "292.082, 294.608, 112.591, 0.356", "291.012, 294.4, 113.341, 0.3814", "289.955, 294.186, 114.269, 0.3304", "288.898, 294.09, 115.307, 0.2796", "287.841, 294.015, 116.363, 0.2796", "286.791, 293.808, 116.124, 0.3814", "285.744, 293.533, 115.217, 0.5084", "284.856, 293.214, 115.839, 0.5338", "284.162, 292.779, 117.769, 0.4576", "283.565, 292.214, 119.714, 0.356", "282.591, 291.842, 120.498, 0.3304", "281.505, 291.528, 120.934, 0.356", "280.482, 291.042, 120.721, 0.356", "279.467, 290.529, 120.409, 0.3814", "278.402, 290.138, 120.101, 0.4576", "277.322, 289.781, 119.794, 0.5592", "276.349, 289.296, 120.528, 0.5592", "275.396, 288.788, 121.454, 0.5084", "274.381, 288.31, 121.978, 0.4576", "273.392, 287.817, 122.566, 0.483", "272.794, 287.125, 124.247, 0.4576", "272.194, 286.432, 125.927, 0.4576", "271.422, 285.622, 125.526, 0.3814", "270.641, 284.906, 125.658, 0.356", "269.854, 284.437, 127.335, 0.3304", "268.912, 283.934, 127.538, 0.356", "267.933, 283.408, 127.349, 0.4322", "267.153, 282.82, 128.804, 0.4576", "266.346, 282.329, 130.019, 0.5084", "265.314, 282.679, 129.161, 0.483", "264.316, 283.028, 128.752, 0.4576", "263.461, 283.369, 130.418, 0.3814", "262.516, 283.594, 131.678, 0.305", "261.386, 283.584, 132.108, 0.305", "260.403, 283.19, 132.215, 0.3304", "259.568, 282.414, 132.001, 0.3814", "258.904, 281.519, 132.579, 0.356", "258.181, 280.774, 133.119, 0.356", "257.047, 280.925, 133.093, 0.356", "255.938, 281.105, 133.231, 0.356", "255.017, 281.496, 134.587, 0.305", "254.056, 281.744, 135.783, 0.2542", "252.967, 281.543, 136.391, 0.2288", "251.84, 281.608, 135.934, 0.2288", "250.713, 281.673, 135.477, 0.2796", "249.593, 281.595, 135.832, 0.3814", "248.477, 281.485, 136.366, 0.483", "247.554, 281.045, 137.159, 0.483", "246.831, 280.272, 138.214, 0.4068", "245.802, 280.129, 138.426, 0.3304", "244.824, 279.756, 138.789, 0.3304", "243.958, 279.062, 139.47, 0.356", "243.401, 278.105, 139.747, 0.3814", "242.955, 277.053, 139.878, 0.356", "242.043, 276.604, 140.327, 0.3304", "240.943, 276.396, 140.904, 0.3304", "240.178, 275.762, 141.906, 0.356", "239.574, 274.925, 143.11, 0.4068", "238.544, 274.768, 143.233, 0.4068", "237.422, 274.746, 143.186, 0.4068", "236.542, 274.227, 144.441, 0.3304", "235.655, 273.695, 145.627, 0.2796", "234.737, 273.096, 146.426, 0.2288", "233.781, 272.571, 147.146, 0.2542", "232.673, 272.343, 147.547, 0.305", "231.582, 272.049, 147.829, 0.3814", "230.543, 271.571, 147.787, 0.4068", "229.506, 271.12, 147.847, 0.3814", "228.499, 271.022, 149.153, 0.305", "227.491, 270.919, 150.451, 0.2542", "226.439, 270.571, 151.145, 0.2288", "225.386, 270.322, 151.951, 0.2288", "224.334, 270.326, 153.045, 0.2288", "223.221, 270.461, 153.081, 0.2542", "222.093, 270.629, 152.855, 0.2796", "221.344, 269.969, 153.268, 0.305", "220.716, 269.047, 153.882, 0.305", "220.055, 268.41, 155.301, 0.3304", "219.374, 267.972, 157.275, 0.4068", "218.353, 267.687, 158.288, 0.4576", "217.314, 267.41, 159.248, 0.4576", "216.467, 266.815, 160.365, 0.3814", "215.731, 266.48, 162.01, 0.3814", "215.099, 266.579, 164.331, 0.4576", "213.993, 266.341, 163.994, 0.5592", "212.884, 266.101, 163.638, 0.5592", "212.274, 265.233, 164.596, 0.483", "211.473, 264.692, 164.799, 0.3814", "210.39, 264.624, 163.914, 0.3814", "209.314, 264.726, 164.344, 0.483", "208.241, 264.886, 165.232, 0.6102", "207.25, 265.288, 166.099, 0.6356", "206.309, 265.838, 166.953, 0.483", "205.329, 265.88, 166.909, 0.3304", "204.313, 265.479, 166.077, 0.2796", "203.225, 265.221, 165.75, 0.4068", "202.093, 265.053, 165.733, 0.5848", "201.119, 265.47, 166.218, 0.7118", "200.199, 266.094, 166.88, 0.7118" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "334.161, 331.747, 52.8889, 0.661", "332.99, 331.659, 55.1177, 0.6864", "332.209, 331.797, 57.136, 0.6102", "331.317, 332.382, 56.8904, 0.5084", "330.408, 333.034, 56.3038, 0.4576", "329.5, 333.608, 57.1242, 0.4322", "328.591, 334.17, 58.1227, 0.4068", "327.585, 334.444, 57.8738, 0.3814", "326.513, 334.549, 56.9705, 0.4068", "325.38, 334.703, 57.0648, 0.4068", "324.253, 334.876, 57.1169, 0.4068", "323.228, 335.322, 56.5272, 0.356", "322.22, 335.797, 55.9751, 0.356", "321.439, 336.631, 55.872, 0.356", "320.657, 337.465, 55.769, 0.3814", "319.661, 338.009, 55.7326, 0.4322", "318.629, 338.502, 55.7074, 0.5848", "317.751, 339.204, 56.1358, 0.7626", "316.893, 339.934, 56.623, 0.8644", "315.979, 340.532, 56.2632, 0.7626", "315.028, 341.044, 55.3389, 0.5848", "314.1, 341.453, 55.6923, 0.4322", "313.193, 341.77, 57.2158, 0.4068", "312.289, 342.223, 57.4972, 0.4322", "311.388, 342.812, 56.5533, 0.5084", "310.444, 343.261, 56.6849, 0.6102", "309.458, 343.571, 57.8864, 0.7626", "308.445, 344.016, 58.0336, 0.8136", "307.423, 344.516, 57.7648, 0.7372", "306.385, 344.988, 57.5204, 0.6102", "305.342, 345.447, 57.2872, 0.5338", "304.313, 345.94, 57.0881, 0.5592", "303.289, 346.445, 56.8999, 0.5592", "302.213, 346.797, 56.6132, 0.5084", "301.112, 347.077, 56.28, 0.4322", "300.063, 347.307, 57.1796, 0.2288", "299.005, 347.538, 58.0863, 0.2542", "297.948, 347.769, 58.9929, 0.3304", "296.883, 348.06, 59.4751, 0.4068", "295.806, 348.441, 59.3197, 0.483", "294.74, 348.848, 59.1111, 0.4576", "293.68, 349.264, 58.8829, 0.4322", "292.922, 350.118, 58.6916, 0.3814", "292.171, 350.971, 58.5729, 0.4322", "291.522, 351.804, 59.6495, 0.5084", "290.782, 352.595, 60.1913, 0.5592", "289.906, 353.323, 59.9351, 0.5592", "288.903, 353.798, 60.1692, 0.5084", "287.828, 354.133, 60.6774, 0.4576", "286.778, 354.575, 60.8843, 0.3814", "285.731, 355.031, 61.0498, 0.356", "284.655, 355.406, 61.2525, 0.3814", "283.568, 355.753, 61.4684, 0.4068", "282.474, 356.067, 61.7254, 0.4068", "281.373, 356.353, 62.0186, 0.3814", "280.303, 356.735, 62.251, 0.4068", "279.261, 357.201, 62.4319, 0.4068", "278.183, 357.543, 62.7472, 0.4068", "277.081, 357.801, 63.1548, 0.356", "276.006, 358.158, 63.3004, 0.356", "274.959, 358.615, 63.18, 0.3304", "273.875, 358.962, 63.1851, 0.3304", "272.762, 359.224, 63.2856, 0.3304", "271.685, 359.584, 63.4444, 0.356", "270.658, 360.079, 63.6815, 0.4322", "269.719, 360.656, 64.1651, 0.4322", "268.974, 361.416, 65.1935, 0.4322", "268.179, 362.166, 65.5886, 0.3304", "267.321, 362.908, 65.2044, 0.2796", "266.369, 363.495, 65.1311, 0.2288", "265.308, 363.903, 65.4223, 0.2542", "264.265, 364.367, 65.4455, 0.2796", "263.233, 364.859, 65.3332, 0.356" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "461.73, 290.805, 40.2889, 0.2542", "462.68, 290.404, 41.3552, 0.3304", "463.703, 290.083, 42.3212, 0.4068", "464.758, 290.097, 43.3017, 0.3814", "465.808, 290.216, 44.3576, 0.4068", "466.806, 290.311, 45.7103, 0.3814", "467.65, 290.919, 46.8272, 0.4068", "468.525, 291.481, 47.9746, 0.3304", "469.431, 291.985, 49.1568, 0.3304", "469.954, 292.758, 50.7525, 0.3304", "470.276, 293.266, 52.7383, 0.4068", "470.204, 293.165, 55.5218, 0.4322", "470.638, 292.42, 56.4166, 0.483", "471.234, 291.482, 56.9162, 0.483", "471.801, 290.62, 58.1288, 0.483", "472.176, 289.664, 59.2774, 0.4322", "472.497, 288.686, 59.8489, 0.4322", "473.123, 287.873, 58.6093, 0.4068", "473.633, 287.09, 58.2128, 0.4068", "473.795, 286.403, 60.4164, 0.4068", "473.985, 285.607, 62.2947, 0.4576", "474.221, 284.632, 63.6392, 0.5084", "474.701, 283.713, 64.5075, 0.5338", "475.445, 282.855, 64.8533, 0.483", "475.975, 281.859, 65.2814, 0.4322", "476.6, 280.981, 65.7703, 0.3304", "477.632, 280.574, 66.4572, 0.2796", "478.667, 280.17, 66.8276, 0.2288", "479.714, 279.782, 66.2197, 0.2288", "480.435, 279.295, 66.4947, 0.2288", "480.448, 278.591, 68.7025, 0.2542", "480.817, 278.178, 70.2506, 0.2796", "481.94, 278.383, 70.3996, 0.305", "482.783, 278.221, 71.3846, 0.2796", "483.278, 277.603, 73.4065, 0.2796", "484.083, 277.159, 74.636, 0.305", "485.104, 276.777, 74.8549, 0.3814", "485.859, 275.999, 73.9558, 0.4322", "485.748, 274.909, 74.5405, 0.4576", "485.642, 273.827, 75.3206, 0.4322", "485.736, 272.849, 76.7544, 0.4068", "485.835, 271.818, 77.7742, 0.356", "485.946, 270.682, 77.9691, 0.3304", "486.525, 270.038, 76.5778, 0.3304", "487.229, 269.526, 74.76, 0.356" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "461.73, 290.805, 40.2889, 0.2542", "461.832, 290.118, 38.36, 0.3814" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "263.233, 364.859, 65.3332, 0.356", "262.231, 365.237, 66.885, 0.5084", "261.229, 365.785, 66.7313, 0.4322", "260.226, 366.321, 66.5129, 0.4068", "259.217, 366.78, 65.8132, 0.3304", "258.203, 367.21, 65.0714, 0.2796", "257.17, 367.538, 64.1791, 0.2542", "256.097, 367.65, 63.3797, 0.305", "254.993, 367.592, 62.6528, 0.3814", "253.903, 367.733, 62.0253, 0.4322", "252.822, 368.035, 61.4779, 0.4322", "251.748, 368.109, 61.0453, 0.4322", "250.689, 367.682, 60.8675, 0.4576", "249.649, 367.217, 60.6682, 0.5084", "248.665, 366.646, 60.4075, 0.483", "247.672, 366.093, 60.2414, 0.3814", "246.628, 365.666, 60.72, 0.2796", "245.583, 365.252, 61.1453, 0.2542", "244.476, 365.064, 60.5884, 0.305", "243.386, 364.823, 60.3137, 0.356", "242.339, 364.423, 60.8759, 0.3814", "241.285, 364.03, 61.2786, 0.3814", "240.203, 363.657, 61.1624, 0.4322", "239.121, 363.291, 61.0403, 0.483", "238.005, 363.061, 60.8196, 0.5084", "236.887, 362.831, 60.599, 0.4322", "235.764, 362.694, 60.216, 0.356", "234.639, 362.571, 59.8049, 0.305", "233.586, 362.884, 59.7887, 0.305", "232.564, 363.396, 59.9542, 0.305", "231.462, 363.406, 60.1896, 0.305", "230.333, 363.254, 60.4475, 0.356", "229.199, 363.116, 60.6094, 0.3814", "228.066, 362.981, 60.7561, 0.4068", "226.953, 363.117, 60.6175, 0.3304", "225.851, 363.404, 60.3224, 0.305", "224.74, 363.619, 59.9427, 0.2796", "223.622, 363.781, 59.4994, 0.305", "222.517, 363.8, 59.1637, 0.305", "221.45, 363.388, 59.1573, 0.305", "220.434, 362.91, 59.0593, 0.3304", "219.7, 362.067, 58.464, 0.3304", "219.113, 361.163, 58.3358, 0.3814", "218.874, 360.116, 59.3009, 0.3814", "218.59, 359.081, 60.0519, 0.4068", "218.028, 358.113, 59.4605, 0.3304", "217.439, 357.159, 58.984, 0.2796", "216.735, 356.258, 58.9694, 0.2288", "216.032, 355.355, 58.9548, 0.2796", "215.17, 354.61, 58.9758, 0.3304", "214.274, 353.9, 59.0052, 0.3814", "213.546, 353.104, 58.3439, 0.3304", "212.923, 352.255, 57.2533, 0.305", "212.239, 351.458, 57.4823, 0.3304", "211.513, 350.699, 58.5942, 0.483", "210.85, 349.816, 59.2486, 0.6356", "210.204, 348.895, 59.764, 0.6864", "209.493, 348.01, 60.0317, 0.5848", "208.748, 347.143, 60.177, 0.483", "207.936, 346.386, 60.7776, 0.4576", "207.102, 345.664, 61.5202, 0.5084", "206.205, 344.994, 61.9889, 0.483", "205.25, 344.371, 62.2, 0.4068", "204.217, 343.983, 62.5836, 0.3814", "203.106, 343.828, 63.1406, 0.4322", "201.977, 343.823, 63.2646, 0.5592", "200.837, 343.907, 63.1313, 0.6356", "199.713, 343.931, 62.8144, 0.6864", "198.631, 343.787, 61.98, 0.6356", "197.545, 343.671, 61.2828, 0.5592", "196.432, 343.814, 61.8229, 0.4322", "195.318, 343.957, 62.3633, 0.4068", "194.183, 343.92, 62.4414, 0.4576", "193.042, 343.834, 62.4002, 0.5592", "191.904, 343.79, 62.65, 0.5848", "190.766, 343.747, 62.907, 0.5592", "189.69, 343.445, 62.7472, 0.5848", "188.65, 342.996, 62.3515, 0.6864", "187.577, 342.636, 62.1079, 0.7372", "186.46, 342.389, 62.0628, 0.7372", "185.51, 341.775, 61.7439, 0.6102", "184.57, 341.137, 61.4085, 0.5592", "183.665, 340.5, 61.9702, 0.5084", "182.767, 339.863, 62.7343, 0.5338", "181.842, 339.227, 63.2626, 0.5338", "180.908, 338.592, 63.6835, 0.5338", "179.938, 338.035, 63.422, 0.5338", "178.949, 337.52, 62.7861, 0.5338", "177.875, 337.192, 62.8835, 0.483", "176.771, 336.925, 63.2271, 0.483", "175.771, 336.427, 63.8089, 0.4322", "174.774, 335.922, 64.3801, 0.4576", "173.69, 335.556, 64.4552, 0.3814", "172.607, 335.191, 64.5302, 0.356", "171.965, 335.01, 62.3633, 0.2796", "171.14, 335.106, 62.1401, 0.2542", "170.162, 335.389, 63.4147, 0.2796", "169.23, 334.827, 63.6686, 0.3814", "168.277, 334.212, 63.6395, 0.5338", "167.247, 333.756, 63.1526, 0.6102", "166.216, 333.301, 62.6657, 0.5848", "165.119, 333.278, 63.4407, 0.4576", "164.046, 333.219, 64.2765, 0.3304", "163.271, 332.604, 65.6838, 0.2542", "162.5, 332.004, 66.3922, 0.2288", "161.748, 331.444, 64.7867, 0.2542", "160.961, 330.98, 63.205, 0.2796", "159.984, 331.032, 61.7537, 0.356", "159.01, 330.911, 60.5581, 0.4576", "158.047, 330.331, 60.0432, 0.5592", "157.092, 329.737, 59.6366, 0.5592", "156.184, 329.054, 59.9631, 0.483", "155.275, 328.371, 60.2899, 0.4576", "154.556, 327.576, 59.3396, 0.483", "153.845, 326.76, 58.4679, 0.5338", "153.151, 325.868, 58.0325, 0.483", "152.435, 325.023, 57.9172, 0.4322", "151.637, 324.363, 59.1066, 0.3304", "150.758, 323.826, 59.9987, 0.305", "149.624, 323.674, 59.9595, 0.2796", "148.49, 323.523, 59.92, 0.305" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "263.233, 364.859, 65.3332, 0.356", "262.913, 365.665, 64.0828, 0.305", "261.927, 366.244, 63.9884, 0.356", "260.963, 366.852, 63.9136, 0.4068", "260.097, 367.6, 63.9335, 0.4322", "259.237, 368.347, 63.999, 0.356", "258.578, 369.098, 65.3671, 0.2796", "257.92, 369.847, 66.7355, 0.2288", "257.281, 370.754, 67.38, 0.2288", "256.586, 371.598, 67.9168, 0.2288", "255.485, 371.905, 68.0176, 0.2288", "254.394, 372.236, 68.1366, 0.2288", "253.4, 372.788, 68.4396, 0.2288", "252.63, 373.552, 68.8254, 0.2288", "252.111, 374.554, 69.305, 0.2288", "251.557, 375.541, 69.5892, 0.2288", "250.947, 376.509, 69.5811, 0.2288", "250.441, 377.495, 69.69, 0.2288", "250.545, 378.587, 70.4763, 0.2542", "250.647, 379.68, 71.2566, 0.305", "250.161, 380.713, 71.0539, 0.3814", "249.676, 381.745, 70.8512, 0.4322", "248.856, 382.493, 71.0531, 0.4576", "247.938, 383.155, 71.3922, 0.4322", "247.342, 384.113, 71.869, 0.4068", "246.763, 385.077, 72.3716, 0.356", "246.234, 386.062, 72.956, 0.3304", "245.588, 386.934, 73.6896, 0.305", "244.776, 387.64, 74.6396, 0.305", "243.947, 388.353, 75.399, 0.3304", "243.076, 389.087, 75.677, 0.3304", "242.207, 389.82, 75.955, 0.3304", "241.416, 390.641, 76.1788, 0.3304", "240.64, 391.477, 76.3918, 0.356", "239.903, 392.169, 77.32, 0.3814", "239.215, 392.671, 79.1916, 0.356", "238.417, 393.279, 80.1676, 0.3304", "237.517, 393.983, 80.3348, 0.305", "236.674, 394.743, 80.6044, 0.2796", "235.879, 395.553, 80.962, 0.2542", "235.082, 396.35, 81.4184, 0.2288", "234.282, 397.132, 82.0064, 0.2288", "233.449, 397.859, 82.6039, 0.2542", "232.401, 398.231, 83.2622, 0.2796", "231.354, 398.604, 83.9185, 0.3304", "230.311, 399.028, 84.4323, 0.3304", "229.27, 399.452, 84.9458, 0.356", "228.23, 399.897, 85.3653, 0.3304", "227.19, 400.344, 85.7766, 0.3304", "226.18, 400.823, 86.3526, 0.2796", "225.184, 401.316, 87.0064, 0.2542", "224.241, 401.9, 87.5717, 0.2288", "223.414, 402.675, 87.9491, 0.2288", "222.489, 403.239, 88.3495, 0.2288", "221.369, 403.384, 88.795, 0.2288", "220.3, 403.59, 89.4961, 0.2288", "219.369, 403.95, 90.8592, 0.2288", "218.439, 404.358, 91.8137, 0.2542", "217.521, 404.967, 91.0568, 0.2796", "216.604, 405.579, 90.3526, 0.305", "215.707, 406.27, 90.7561, 0.2796", "214.961, 407.091, 91.0092, 0.2542", "214.445, 408.113, 91.0328, 0.2288", "213.918, 409.109, 91.1372, 0.2288", "213.179, 409.617, 92.8746, 0.2542", "212.578, 410.36, 94.0436, 0.305", "212.162, 411.411, 94.4661, 0.4068", "211.661, 412.423, 94.7873, 0.4576", "211.033, 413.376, 94.9547, 0.4576", "210.361, 414.289, 94.908, 0.356", "209.588, 415.1, 94.3446, 0.3304", "208.866, 415.963, 94.4896, 0.356", "208.104, 416.791, 94.9082, 0.4322", "207.238, 417.525, 95.2624, 0.4576", "206.394, 418.278, 95.6166, 0.4576", "205.692, 419.171, 95.9708, 0.5338", "204.991, 420.063, 96.325, 0.6102", "204.306, 420.975, 96.4729, 0.7372", "203.63, 421.898, 96.5056, 0.7626", "202.821, 422.659, 96.411, 0.7372", "201.801, 423.16, 96.1128, 0.6356", "200.947, 423.861, 96.4648, 0.5084", "200.153, 424.624, 97.1116, 0.4322", "199.066, 424.961, 97.4103, 0.3814", "198.006, 425.361, 97.6293, 0.4322", "197.026, 425.949, 97.6128, 0.5084", "196.042, 426.514, 97.6954, 0.5338", "195.038, 426.852, 98.756, 0.483", "194.121, 427.205, 99.1914, 0.3814", "193.565, 427.623, 96.9671, 0.3304", "192.848, 427.726, 97.1446, 0.2796", "192.014, 427.603, 99.0391, 0.2542", "191.086, 427.826, 100.115, 0.2288", "190.092, 428.358, 100.532, 0.2288", "189.308, 429.099, 101.464, 0.2542", "188.555, 429.876, 102.295, 0.2796", "187.971, 430.854, 102.57, 0.356", "187.39, 431.831, 102.823, 0.4068", "186.945, 432.818, 101.912, 0.483", "186.468, 433.749, 101.487, 0.4576", "185.86, 434.451, 103.121, 0.4068", "185.252, 435.154, 104.754, 0.356", "185.287, 436.156, 104.12, 0.356", "185.432, 437.211, 103.094, 0.4068", "185.274, 437.955, 101.101, 0.3814", "185.058, 438.639, 98.9206, 0.356", "184.796, 439.679, 98.3184, 0.2796", "184.526, 440.783, 98.0, 0.2542" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_62", "dend_37", "dend_28", "dend_5", "dend_0", "dend_66", "dend_63", "dend_57", "dend_38", "dend_34", "dend_29", "dend_27", "dend_6", "dend_2", "dend_1", "dend_68", "dend_67", "dend_65", "dend_64", "dend_61", "dend_58", "dend_39", "dend_36", "dend_35", "dend_33", "dend_30", "dend_24", "dend_7", "dend_4", "dend_3", "dend_72", "dend_69", "dend_60", "dend_59", "dend_48", "dend_40", "dend_32", "dend_31", "dend_26", "dend_25", "dend_13", "dend_8", "dend_71", "dend_70", "dend_56", "dend_49", "dend_47", "dend_46", "dend_41", "dend_21", "dend_14", "dend_12", "dend_9", "dend_55", "dend_50", "dend_45", "dend_42", "dend_23", "dend_22", "dend_20", "dend_15", "dend_11", "dend_10", "dend_52", "dend_51", "dend_44", "dend_43", "dend_19", "dend_16", "dend_54", "dend_53", "dend_18", "dend_17" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23337",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_57", "dend_57", "dend_57", "dend_57", "dend_38", "dend_38", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_68", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_72", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_13", "dend_13", "dend_13", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_14", "dend_14", "dend_14", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.78"
  }, {
    "group" : "axon",
    "value" : "1.78"
  }, {
    "group" : "dend",
    "value" : "1.78"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "76.33"
  } ],
  "channelDensity" : [ {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "4.4013406E-5",
    "erev" : "-45.0"
  }, {
    "id" : "NaV_soma",
    "ionChannel" : "NaV",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.08452224",
    "erev" : "53.0"
  }, {
    "id" : "Kd_soma",
    "ionChannel" : "Kd",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "7.1396043E-6",
    "erev" : "-107.0"
  }, {
    "id" : "Kv2like_soma",
    "ionChannel" : "Kv2like",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "8.5407686E-5",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.1446885",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "4.6546957E-6",
    "erev" : "-107.0"
  }, {
    "id" : "Im_v2_soma",
    "ionChannel" : "Im_v2",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.01948835",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0089153405",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "2.5930332E-5",
    "erev" : "-86.55372"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "7.7729183E-4",
    "erev" : "-86.55372"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "6.9700536E-7",
    "erev" : "-86.55372"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "2.7794705E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.009739869",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_472455509

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_62, id: dend_62, parent: soma_0
create dend_62
public dend_62
// Section: dend_37, id: dend_37, parent: soma_0
create dend_37
public dend_37
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_66, id: dend_66, parent: dend_62
create dend_66
public dend_66
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_57, id: dend_57, parent: dend_37
create dend_57
public dend_57
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_27, id: dend_27, parent: dend_5
create dend_27
public dend_27
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: dend_68, id: dend_68, parent: dend_66
create dend_68
public dend_68
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_61, id: dend_61, parent: dend_57
create dend_61
public dend_61
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_29
create dend_33
public dend_33
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_24, id: dend_24, parent: dend_6
create dend_24
public dend_24
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_72, id: dend_72, parent: dend_68
create dend_72
public dend_72
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_48, id: dend_48, parent: dend_39
create dend_48
public dend_48
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_13, id: dend_13, parent: dend_7
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_71, id: dend_71, parent: dend_69
create dend_71
public dend_71
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_56, id: dend_56, parent: dend_48
create dend_56
public dend_56
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_40
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_40
create dend_46
public dend_46
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_21, id: dend_21, parent: dend_13
create dend_21
public dend_21
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_12, id: dend_12, parent: dend_8
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_55, id: dend_55, parent: dend_49
create dend_55
public dend_55
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_45, id: dend_45, parent: dend_41
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=dend, groups=[], sections=[dend_62, dend_37, dend_28, dend_5, dend_0, dend_66, dend_63, dend_57, dend_38, dend_34, dend_29, dend_27, dend_6, dend_2, dend_1, dend_68, dend_67, dend_65, dend_64, dend_61, dend_58, dend_39, dend_36, dend_35, dend_33, dend_30, dend_24, dend_7, dend_4, dend_3, dend_72, dend_69, dend_60, dend_59, dend_48, dend_40, dend_32, dend_31, dend_26, dend_25, dend_13, dend_8, dend_71, dend_70, dend_56, dend_49, dend_47, dend_46, dend_41, dend_21, dend_14, dend_12, dend_9, dend_55, dend_50, dend_45, dend_42, dend_23, dend_22, dend_20, dend_15, dend_11, dend_10, dend_52, dend_51, dend_44, dend_43, dend_19, dend_16, dend_54, dend_53, dend_18, dend_17]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_23337, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_23337
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_57, dend_57, dend_57, dend_57, dend_38, dend_38, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5000356303000083)
    connect dend_62(0), soma_0(0.5000356303000083)
    connect dend_37(0), soma_0(0.5000356303000083)
    connect dend_28(0), soma_0(0.5000356303000083)
    connect dend_5(0), soma_0(0.5000356303000083)
    connect dend_0(0), soma_0(0.5000356303000083)
    connect axon_1(0), axon_0(1.0)
    connect dend_66(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_57(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_27(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect dend_68(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_61(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_24(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_72(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_48(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_13(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_71(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_56(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_40(1.0)
    connect dend_46(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_21(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_12(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_55(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_45(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 361.237, 325.239, 38.64, 14.0332 ) }
    soma_0 { pt3dadd( 368.254, 325.239, 38.64, 14.0332 ) }
    soma_0 { pt3dadd( 375.27, 325.239, 38.64, 14.0332 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 368.253, 325.239, 38.64, 1.0 ) }
    axon_0 { pt3dadd( 374.095, 339.055, 38.64, 1.0 ) }
    axon_0 { pt3dadd( 379.936, 352.871, 38.64, 1.0 ) }
    // Section: dend_62, id: dend_62, parent: soma_0 (entry count 6/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 370.591, 331.821, 39.1177, 0.5338 ) }
    dend_62 { pt3dadd( 371.457, 332.415, 40.2251, 0.5338 ) }
    dend_62 { pt3dadd( 372.457, 332.857, 40.4088, 0.6102 ) }
    dend_62 { pt3dadd( 373.536, 333.208, 40.045, 0.661 ) }
    dend_62 { pt3dadd( 374.545, 333.668, 39.76, 0.7118 ) }
    dend_62 { pt3dadd( 375.301, 334.527, 39.76, 0.6864 ) }
    dend_62 { pt3dadd( 376.056, 335.387, 39.76, 0.7118 ) }
    dend_62 { pt3dadd( 376.632, 336.361, 39.5352, 0.7372 ) }
    dend_62 { pt3dadd( 377.15, 337.375, 39.2372, 0.788 ) }
    dend_62 { pt3dadd( 377.744, 338.333, 39.0701, 0.8136 ) }
    dend_62 { pt3dadd( 378.535, 339.159, 39.2283, 0.839 ) }
    dend_62 { pt3dadd( 379.324, 339.984, 39.3868, 0.8136 ) }
    // Section: dend_37, id: dend_37, parent: soma_0 (entry count 18/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 373.499, 321.529, 35.7, 0.356 ) }
    dend_37 { pt3dadd( 374.46, 320.955, 35.6398, 0.5592 ) }
    dend_37 { pt3dadd( 375.524, 320.564, 36.022, 0.839 ) }
    dend_37 { pt3dadd( 376.588, 320.175, 36.3961, 1.0932 ) }
    dend_37 { pt3dadd( 377.689, 319.869, 36.314, 1.2202 ) }
    dend_37 { pt3dadd( 378.791, 319.563, 36.2323, 1.1948 ) }
    dend_37 { pt3dadd( 379.836, 319.116, 36.1771, 1.0424 ) }
    dend_37 { pt3dadd( 380.831, 318.554, 36.1444, 0.9152 ) }
    dend_37 { pt3dadd( 381.82, 317.988, 35.9915, 0.8136 ) }
    dend_37 { pt3dadd( 382.791, 317.42, 35.4802, 0.7372 ) }
    dend_37 { pt3dadd( 383.761, 316.85, 34.9689, 0.5848 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 29/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 363.566, 320.241, 32.912, 0.3814 ) }
    dend_28 { pt3dadd( 362.632, 319.928, 32.4691, 0.4322 ) }
    dend_28 { pt3dadd( 361.508, 320.049, 32.8826, 0.483 ) }
    dend_28 { pt3dadd( 360.383, 320.153, 33.2816, 0.6102 ) }
    dend_28 { pt3dadd( 359.271, 319.883, 33.3631, 0.6864 ) }
    dend_28 { pt3dadd( 358.16, 319.614, 33.4449, 0.8136 ) }
    dend_28 { pt3dadd( 357.144, 319.151, 33.0786, 0.788 ) }
    dend_28 { pt3dadd( 356.176, 318.591, 32.489, 0.7372 ) }
    dend_28 { pt3dadd( 355.217, 318.289, 31.7842, 0.5848 ) }
    dend_28 { pt3dadd( 354.28, 318.785, 30.7261, 0.5084 ) }
    dend_28 { pt3dadd( 353.344, 319.28, 29.668, 0.4576 ) }
    dend_28 { pt3dadd( 352.396, 318.999, 28.2584, 0.5592 ) }
    dend_28 { pt3dadd( 351.448, 318.718, 26.8489, 0.661 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 42/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 361.37, 328.593, 39.438, 0.661 ) }
    dend_5 { pt3dadd( 360.572, 329.413, 39.3817, 0.7118 ) }
    dend_5 { pt3dadd( 359.698, 330.084, 39.7944, 0.839 ) }
    dend_5 { pt3dadd( 358.747, 330.609, 40.6801, 0.9152 ) }
    dend_5 { pt3dadd( 357.798, 331.134, 41.566, 0.8898 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 47/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 365.818, 318.872, 34.5346, 0.7118 ) }
    dend_0 { pt3dadd( 365.176, 318.063, 33.3259, 0.788 ) }
    dend_0 { pt3dadd( 364.535, 317.254, 32.1168, 0.7372 ) }
    dend_0 { pt3dadd( 364.02, 316.253, 32.3596, 0.6864 ) }
    dend_0 { pt3dadd( 363.514, 315.236, 32.709, 0.6864 ) }
    dend_0 { pt3dadd( 362.862, 314.322, 32.8908, 0.7626 ) }
    dend_0 { pt3dadd( 362.041, 313.526, 32.8793, 0.839 ) }
    dend_0 { pt3dadd( 361.417, 312.655, 33.0078, 0.8898 ) }
    dend_0 { pt3dadd( 361.452, 311.539, 33.6025, 0.8898 ) }
    dend_0 { pt3dadd( 361.606, 310.444, 34.0631, 0.788 ) }
    dend_0 { pt3dadd( 362.106, 309.415, 34.1317, 0.6356 ) }
    dend_0 { pt3dadd( 362.607, 308.387, 34.2006, 0.483 ) }
    dend_0 { pt3dadd( 362.329, 307.339, 33.9139, 0.4576 ) }
    dend_0 { pt3dadd( 362.117, 306.264, 33.8587, 0.483 ) }
    dend_0 { pt3dadd( 362.279, 305.148, 34.326, 0.5848 ) }
    dend_0 { pt3dadd( 362.471, 304.039, 34.6662, 0.6102 ) }
    dend_0 { pt3dadd( 362.835, 302.966, 34.2779, 0.6102 ) }
    dend_0 { pt3dadd( 363.146, 301.879, 33.9354, 0.5592 ) }
    dend_0 { pt3dadd( 363.266, 300.744, 33.7537, 0.5338 ) }
    dend_0 { pt3dadd( 363.352, 299.61, 33.4897, 0.5592 ) }
    dend_0 { pt3dadd( 363.353, 298.482, 33.0313, 0.6102 ) }
    dend_0 { pt3dadd( 363.276, 297.363, 32.5262, 0.7118 ) }
    dend_0 { pt3dadd( 363.07, 296.264, 31.9432, 0.8136 ) }
    dend_0 { pt3dadd( 362.863, 295.165, 31.36, 0.9152 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 71/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 379.936, 352.871, 38.64, 1.0 ) }
    axon_1 { pt3dadd( 385.777, 366.687, 38.64, 1.0 ) }
    axon_1 { pt3dadd( 391.619, 380.503, 38.64, 1.0 ) }
    // Section: dend_66, id: dend_66, parent: dend_62 (entry count 74/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 379.324, 339.984, 39.3868, 0.8136 ) }
    dend_66 { pt3dadd( 380.385, 339.572, 40.9108, 0.5084 ) }
    dend_66 { pt3dadd( 381.393, 339.197, 41.8687, 0.5084 ) }
    dend_66 { pt3dadd( 382.514, 339.29, 42.2044, 0.5338 ) }
    dend_66 { pt3dadd( 383.543, 339.662, 42.4141, 0.5084 ) }
    dend_66 { pt3dadd( 384.421, 340.395, 42.513, 0.483 ) }
    dend_66 { pt3dadd( 385.301, 341.1, 42.8638, 0.4322 ) }
    dend_66 { pt3dadd( 386.181, 341.763, 43.6061, 0.3814 ) }
    dend_66 { pt3dadd( 387.028, 341.576, 43.799, 0.3814 ) }
    dend_66 { pt3dadd( 387.851, 340.785, 43.6027, 0.4068 ) }
    dend_66 { pt3dadd( 388.724, 340.277, 44.4072, 0.4322 ) }
    dend_66 { pt3dadd( 389.636, 339.974, 45.9284, 0.356 ) }
    dend_66 { pt3dadd( 390.609, 339.665, 47.1285, 0.2796 ) }
    dend_66 { pt3dadd( 391.657, 339.348, 47.9419, 0.2542 ) }
    dend_66 { pt3dadd( 392.713, 339.126, 48.6402, 0.305 ) }
    dend_66 { pt3dadd( 393.81, 339.447, 48.6802, 0.356 ) }
    dend_66 { pt3dadd( 394.908, 339.768, 48.72, 0.356 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 91/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 379.324, 339.984, 39.3868, 0.8136 ) }
    dend_63 { pt3dadd( 380.134, 341.145, 38.7254, 0.4322 ) }
    dend_63 { pt3dadd( 380.608, 342.186, 38.8394, 0.4576 ) }
    dend_63 { pt3dadd( 381.332, 342.975, 38.6022, 0.483 ) }
    dend_63 { pt3dadd( 382.317, 343.502, 37.9985, 0.5084 ) }
    dend_63 { pt3dadd( 383.174, 344.175, 37.8204, 0.5338 ) }
    dend_63 { pt3dadd( 383.811, 345.098, 38.3762, 0.4576 ) }
    dend_63 { pt3dadd( 384.447, 346.017, 38.3698, 0.3814 ) }
    dend_63 { pt3dadd( 385.082, 346.929, 37.7174, 0.3304 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_63 { pt3dadd( 385.574, 347.938, 37.3657, 0.4068 ) }
    dend_63 { pt3dadd( 385.978, 349.007, 37.2002, 0.483 ) }
    dend_63 { pt3dadd( 386.482, 350.006, 36.8015, 0.5338 ) }
    dend_63 { pt3dadd( 387.113, 350.919, 36.1141, 0.5084 ) }
    dend_63 { pt3dadd( 387.751, 351.829, 35.4785, 0.5084 ) }
    dend_63 { pt3dadd( 388.451, 352.731, 35.3072, 0.483 ) }
    dend_63 { pt3dadd( 389.136, 353.645, 35.1453, 0.483 ) }
    dend_63 { pt3dadd( 389.772, 354.593, 35.0104, 0.4068 ) }
    dend_63 { pt3dadd( 390.408, 355.543, 34.8757, 0.356 ) }
    // Section: dend_57, id: dend_57, parent: dend_37 (entry count 9/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 383.761, 316.85, 34.9689, 0.5848 ) }
    dend_57 { pt3dadd( 383.922, 317.126, 33.8181, 0.5338 ) }
    dend_57 { pt3dadd( 384.246, 317.682, 31.5025, 0.5848 ) }
    dend_57 { pt3dadd( 384.789, 318.552, 30.9042, 0.5592 ) }
    dend_57 { pt3dadd( 385.4, 319.519, 30.8311, 0.5592 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 14/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 383.761, 316.85, 34.9689, 0.5848 ) }
    dend_38 { pt3dadd( 384.354, 315.886, 34.4221, 0.6356 ) }
    dend_38 { pt3dadd( 384.942, 314.931, 33.88, 0.6356 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 17/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 351.448, 318.718, 26.8489, 0.661 ) }
    dend_34 { pt3dadd( 350.426, 318.263, 27.9017, 0.6356 ) }
    dend_34 { pt3dadd( 349.662, 317.427, 28.2859, 0.5848 ) }
    dend_34 { pt3dadd( 348.938, 316.577, 28.534, 0.5848 ) }
    dend_34 { pt3dadd( 348.67, 315.587, 27.2919, 0.6102 ) }
    dend_34 { pt3dadd( 348.421, 314.536, 26.5334, 0.5592 ) }
    dend_34 { pt3dadd( 348.195, 313.419, 26.2833, 0.4322 ) }
    dend_34 { pt3dadd( 348.004, 312.374, 26.5782, 0.3814 ) }
    dend_34 { pt3dadd( 347.912, 311.535, 28.4701, 0.4576 ) }
    dend_34 { pt3dadd( 347.925, 310.453, 29.1623, 0.5338 ) }
    dend_34 { pt3dadd( 347.96, 309.328, 29.5705, 0.5592 ) }
    dend_34 { pt3dadd( 348.063, 308.271, 28.5323, 0.5592 ) }
    dend_34 { pt3dadd( 348.182, 307.24, 27.372, 0.6102 ) }
    dend_34 { pt3dadd( 348.33, 306.259, 25.9776, 0.6356 ) }
    dend_34 { pt3dadd( 348.427, 305.279, 24.6792, 0.5848 ) }
    dend_34 { pt3dadd( 347.822, 304.309, 24.7531, 0.5084 ) }
    dend_34 { pt3dadd( 347.216, 303.339, 24.8268, 0.4322 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 34/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 351.448, 318.718, 26.8489, 0.661 ) }
    dend_29 { pt3dadd( 350.367, 319.224, 27.1407, 0.7118 ) }
    dend_29 { pt3dadd( 349.492, 319.759, 28.3766, 0.7372 ) }
    dend_29 { pt3dadd( 348.622, 320.319, 29.5249, 0.6864 ) }
    dend_29 { pt3dadd( 347.805, 321.114, 29.7424, 0.5592 ) }
    dend_29 { pt3dadd( 346.987, 321.909, 29.96, 0.4576 ) }
    // Section: dend_27, id: dend_27, parent: dend_5 (entry count 40/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 357.798, 331.134, 41.566, 0.8898 ) }
    dend_27 { pt3dadd( 357.313, 332.147, 40.5507, 0.5592 ) }
    dend_27 { pt3dadd( 356.689, 333.064, 39.8642, 0.483 ) }
    dend_27 { pt3dadd( 356.128, 334.048, 39.5906, 0.483 ) }
    dend_27 { pt3dadd( 355.593, 335.058, 39.4859, 0.483 ) }
    dend_27 { pt3dadd( 355.026, 335.999, 40.2357, 0.3814 ) }
    dend_27 { pt3dadd( 354.457, 336.935, 41.0365, 0.3304 ) }
    dend_27 { pt3dadd( 353.571, 337.581, 40.7215, 0.3304 ) }
    dend_27 { pt3dadd( 352.612, 338.159, 40.1478, 0.3814 ) }
    dend_27 { pt3dadd( 351.87, 338.997, 39.9885, 0.3814 ) }
    dend_27 { pt3dadd( 351.21, 339.932, 39.9818, 0.3814 ) }
    dend_27 { pt3dadd( 350.852, 340.713, 38.5706, 0.3814 ) }
    dend_27 { pt3dadd( 350.656, 341.413, 36.4095, 0.3304 ) }
    dend_27 { pt3dadd( 350.254, 342.093, 35.0017, 0.2796 ) }
    dend_27 { pt3dadd( 349.323, 342.717, 35.5485, 0.2542 ) }
    dend_27 { pt3dadd( 348.477, 343.222, 36.8113, 0.356 ) }
    dend_27 { pt3dadd( 347.692, 343.644, 38.5658, 0.483 ) }
    dend_27 { pt3dadd( 346.874, 344.29, 39.0393, 0.5848 ) }
    dend_27 { pt3dadd( 346.037, 345.064, 38.7878, 0.5338 ) }
    dend_27 { pt3dadd( 345.215, 345.854, 38.6039, 0.4322 ) }
    dend_27 { pt3dadd( 344.43, 346.686, 38.5862, 0.3304 ) }
    dend_27 { pt3dadd( 343.651, 347.516, 38.5263, 0.3304 ) }
    dend_27 { pt3dadd( 343.091, 348.291, 36.988, 0.356 ) }
    dend_27 { pt3dadd( 342.528, 349.071, 35.4852, 0.3814 ) }
    dend_27 { pt3dadd( 341.903, 349.959, 34.6021, 0.3814 ) }
    dend_27 { pt3dadd( 341.3, 350.874, 34.1947, 0.3814 ) }
    dend_27 { pt3dadd( 340.743, 351.846, 34.757, 0.356 ) }
    dend_27 { pt3dadd( 340.577, 352.87, 33.7072, 0.305 ) }
    dend_27 { pt3dadd( 340.36, 353.871, 32.5528, 0.2542 ) }
    dend_27 { pt3dadd( 339.764, 354.759, 31.554, 0.2288 ) }
    dend_27 { pt3dadd( 339.256, 355.691, 30.9901, 0.2288 ) }
    dend_27 { pt3dadd( 339.016, 356.764, 31.766, 0.2288 ) }
    dend_27 { pt3dadd( 338.804, 357.744, 31.6588, 0.2542 ) }
    dend_27 { pt3dadd( 338.648, 358.518, 29.6341, 0.2796 ) }
    dend_27 { pt3dadd( 338.474, 359.46, 28.8624, 0.3304 ) }
    dend_27 { pt3dadd( 338.283, 360.57, 29.3488, 0.3304 ) }
    dend_27 { pt3dadd( 338.128, 361.67, 29.2998, 0.356 ) }
    dend_27 { pt3dadd( 338.026, 362.753, 28.4371, 0.3304 ) }
    dend_27 { pt3dadd( 338.057, 363.84, 27.6514, 0.3304 ) }
    dend_27 { pt3dadd( 338.266, 364.929, 26.9685, 0.2796 ) }
    dend_27 { pt3dadd( 337.839, 365.794, 25.7925, 0.2542 ) }
    dend_27 { pt3dadd( 337.224, 366.592, 24.4689, 0.2288 ) }
    dend_27 { pt3dadd( 336.861, 367.563, 23.9551, 0.2796 ) }
    dend_27 { pt3dadd( 336.738, 368.695, 24.2085, 0.3304 ) }
    dend_27 { pt3dadd( 336.438, 369.707, 23.4758, 0.3814 ) }
    dend_27 { pt3dadd( 336.048, 370.656, 22.2421, 0.3304 ) }
    dend_27 { pt3dadd( 335.62, 371.685, 21.6118, 0.305 ) }
    dend_27 { pt3dadd( 335.191, 372.715, 21.0, 0.2796 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 88/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 357.798, 331.134, 41.566, 0.8898 ) }
    dend_6 { pt3dadd( 356.935, 331.277, 42.3419, 0.9406 ) }
    dend_6 { pt3dadd( 355.874, 331.453, 43.2961, 0.8898 ) }
    dend_6 { pt3dadd( 354.871, 331.353, 44.3033, 0.8136 ) }
    dend_6 { pt3dadd( 353.958, 330.825, 45.3919, 0.7372 ) }
    dend_6 { pt3dadd( 353.045, 330.299, 46.4806, 0.661 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 94/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 362.863, 295.165, 31.36, 0.9152 ) }
    dend_2 { pt3dadd( 363.131, 294.414, 32.0037, 0.4068 ) }
    dend_2 { pt3dadd( 363.496, 293.391, 32.8815, 0.4322 ) }
    dend_2 { pt3dadd( 363.693, 292.309, 32.352, 0.4576 ) }
    dend_2 { pt3dadd( 363.864, 291.218, 31.6215, 0.3814 ) }
    dend_2 { pt3dadd( 363.744, 290.178, 31.9214, 0.305 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_2 { pt3dadd( 363.407, 289.175, 32.9851, 0.2288 ) }
    dend_2 { pt3dadd( 363.65, 288.104, 32.7642, 0.2542 ) }
    dend_2 { pt3dadd( 363.983, 287.024, 32.3436, 0.2796 ) }
    dend_2 { pt3dadd( 364.237, 285.923, 32.6936, 0.3304 ) }
    dend_2 { pt3dadd( 364.481, 284.82, 33.1374, 0.3304 ) }
    dend_2 { pt3dadd( 364.401, 283.744, 33.8598, 0.3304 ) }
    dend_2 { pt3dadd( 364.163, 282.682, 34.7183, 0.305 ) }
    dend_2 { pt3dadd( 363.899, 281.632, 34.8933, 0.305 ) }
    dend_2 { pt3dadd( 363.593, 280.604, 33.922, 0.3304 ) }
    dend_2 { pt3dadd( 363.555, 279.524, 33.4284, 0.3304 ) }
    dend_2 { pt3dadd( 363.754, 278.398, 33.3595, 0.3304 ) }
    dend_2 { pt3dadd( 363.905, 277.267, 33.4029, 0.2796 ) }
    dend_2 { pt3dadd( 363.989, 276.128, 33.5955, 0.305 ) }
    dend_2 { pt3dadd( 364.095, 274.991, 33.6171, 0.3814 ) }
    dend_2 { pt3dadd( 364.223, 273.856, 33.451, 0.5084 ) }
    dend_2 { pt3dadd( 364.233, 272.734, 33.4642, 0.5338 ) }
    dend_2 { pt3dadd( 363.949, 271.642, 33.9161, 0.4576 ) }
    dend_2 { pt3dadd( 363.726, 270.53, 34.155, 0.3304 ) }
    dend_2 { pt3dadd( 363.572, 269.396, 34.1578, 0.2796 ) }
    dend_2 { pt3dadd( 363.448, 268.261, 34.218, 0.2796 ) }
    dend_2 { pt3dadd( 363.41, 267.122, 34.4459, 0.356 ) }
    dend_2 { pt3dadd( 363.476, 265.989, 34.725, 0.4322 ) }
    dend_2 { pt3dadd( 363.637, 264.865, 35.0496, 0.5592 ) }
    dend_2 { pt3dadd( 364.083, 263.813, 35.0815, 0.5848 ) }
    dend_2 { pt3dadd( 364.529, 262.762, 35.1571, 0.5338 ) }
    dend_2 { pt3dadd( 364.886, 261.697, 35.6812, 0.3814 ) }
    dend_2 { pt3dadd( 365.204, 260.628, 36.0259, 0.305 ) }
    dend_2 { pt3dadd( 365.246, 259.542, 35.201, 0.305 ) }
    dend_2 { pt3dadd( 365.234, 258.416, 35.3542, 0.356 ) }
    dend_2 { pt3dadd( 365.771, 257.508, 36.4372, 0.4068 ) }
    dend_2 { pt3dadd( 366.308, 256.599, 37.52, 0.4322 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 31/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 362.863, 295.165, 31.36, 0.9152 ) }
    dend_1 { pt3dadd( 362.388, 294.246, 29.4538, 0.5338 ) }
    dend_1 { pt3dadd( 362.13, 293.196, 30.3643, 0.5592 ) }
    dend_1 { pt3dadd( 361.87, 292.146, 31.2749, 0.5084 ) }
    dend_1 { pt3dadd( 361.75, 291.124, 30.2268, 0.4576 ) }
    dend_1 { pt3dadd( 361.644, 290.106, 28.9769, 0.4068 ) }
    dend_1 { pt3dadd( 361.788, 289.019, 28.9598, 0.356 ) }
    dend_1 { pt3dadd( 362.014, 287.908, 29.3462, 0.356 ) }
    dend_1 { pt3dadd( 362.097, 286.773, 29.3331, 0.356 ) }
    dend_1 { pt3dadd( 362.204, 285.666, 29.0836, 0.3814 ) }
    dend_1 { pt3dadd( 362.821, 284.811, 27.9936, 0.3814 ) }
    dend_1 { pt3dadd( 363.438, 283.957, 26.9035, 0.356 ) }
    dend_1 { pt3dadd( 363.673, 282.841, 26.9298, 0.3304 ) }
    dend_1 { pt3dadd( 363.901, 281.72, 26.9794, 0.305 ) }
    dend_1 { pt3dadd( 364.723, 280.99, 26.4093, 0.305 ) }
    dend_1 { pt3dadd( 365.592, 280.29, 25.7905, 0.305 ) }
    dend_1 { pt3dadd( 366.489, 279.644, 25.0748, 0.2796 ) }
    dend_1 { pt3dadd( 367.395, 279.017, 24.3242, 0.2542 ) }
    dend_1 { pt3dadd( 368.308, 278.423, 23.4668, 0.2542 ) }
    dend_1 { pt3dadd( 369.223, 277.848, 22.5551, 0.2796 ) }
    dend_1 { pt3dadd( 370.046, 277.096, 22.37, 0.3304 ) }
    dend_1 { pt3dadd( 370.851, 276.294, 22.4059, 0.356 ) }
    dend_1 { pt3dadd( 371.768, 275.656, 21.8134, 0.3814 ) }
    dend_1 { pt3dadd( 372.687, 275.018, 21.2209, 0.3814 ) }
    dend_1 { pt3dadd( 373.815, 274.941, 20.993, 0.356 ) }
    dend_1 { pt3dadd( 374.943, 274.809, 20.7651, 0.3304 ) }
    dend_1 { pt3dadd( 376.056, 274.565, 20.5114, 0.2796 ) }
    dend_1 { pt3dadd( 377.139, 274.717, 20.148, 0.2542 ) }
    dend_1 { pt3dadd( 378.206, 275.09, 19.7235, 0.2288 ) }
    dend_1 { pt3dadd( 379.253, 275.427, 19.0414, 0.2288 ) }
    dend_1 { pt3dadd( 380.265, 275.704, 17.92, 0.2288 ) }
    // Section: dend_68, id: dend_68, parent: dend_66 (entry count 62/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 394.908, 339.768, 48.72, 0.356 ) }
    dend_68 { pt3dadd( 395.187, 340.683, 48.3157, 0.2796 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 64/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 394.908, 339.768, 48.72, 0.356 ) }
    dend_67 { pt3dadd( 395.647, 339.694, 48.5839, 0.305 ) }
    dend_67 { pt3dadd( 396.706, 339.272, 48.7956, 0.305 ) }
    dend_67 { pt3dadd( 397.761, 338.849, 49.044, 0.356 ) }
    dend_67 { pt3dadd( 398.705, 338.443, 50.2762, 0.4068 ) }
    dend_67 { pt3dadd( 399.645, 338.089, 51.5964, 0.4322 ) }
    dend_67 { pt3dadd( 400.577, 337.845, 53.1045, 0.3814 ) }
    dend_67 { pt3dadd( 401.7, 337.775, 53.3977, 0.3304 ) }
    dend_67 { pt3dadd( 402.84, 337.723, 53.5716, 0.3304 ) }
    dend_67 { pt3dadd( 403.936, 337.443, 53.9795, 0.3304 ) }
    dend_67 { pt3dadd( 405.038, 337.188, 54.3651, 0.356 ) }
    dend_67 { pt3dadd( 406.171, 337.068, 54.6199, 0.3304 ) }
    dend_67 { pt3dadd( 407.304, 336.947, 54.8744, 0.356 ) }
    dend_67 { pt3dadd( 408.43, 336.86, 55.3188, 0.3304 ) }
    dend_67 { pt3dadd( 409.556, 336.773, 55.767, 0.3304 ) }
    dend_67 { pt3dadd( 410.384, 337.378, 56.7591, 0.2796 ) }
    dend_67 { pt3dadd( 411.204, 338.035, 57.7172, 0.2796 ) }
    dend_67 { pt3dadd( 412.325, 338.261, 57.7338, 0.305 ) }
    dend_67 { pt3dadd( 413.433, 338.43, 57.7984, 0.356 ) }
    dend_67 { pt3dadd( 414.361, 337.823, 58.4839, 0.356 ) }
    dend_67 { pt3dadd( 415.32, 337.292, 59.2284, 0.305 ) }
    dend_67 { pt3dadd( 416.341, 336.914, 60.0911, 0.2542 ) }
    dend_67 { pt3dadd( 417.361, 336.535, 60.9538, 0.2288 ) }
    dend_67 { pt3dadd( 418.382, 336.156, 61.8164, 0.2288 ) }
    dend_67 { pt3dadd( 419.402, 335.778, 62.6794, 0.2288 ) }
    dend_67 { pt3dadd( 420.422, 335.399, 63.5421, 0.2288 ) }
    dend_67 { pt3dadd( 421.443, 335.02, 64.405, 0.2288 ) }
    dend_67 { pt3dadd( 422.462, 334.641, 65.268, 0.2288 ) }
    dend_67 { pt3dadd( 423.483, 334.263, 66.1307, 0.2288 ) }
    dend_67 { pt3dadd( 424.503, 333.884, 66.9936, 0.2288 ) }
    dend_67 { pt3dadd( 425.524, 333.506, 67.8552, 0.2796 ) }
    dend_67 { pt3dadd( 426.545, 333.128, 68.7154, 0.3304 ) }
    dend_67 { pt3dadd( 427.567, 332.752, 69.5752, 0.3814 ) }
    dend_67 { pt3dadd( 428.635, 332.375, 69.5733, 0.3304 ) }
    dend_67 { pt3dadd( 429.714, 332.0, 69.4036, 0.2796 ) }
    dend_67 { pt3dadd( 430.829, 331.84, 69.5836, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_67 { pt3dadd( 431.963, 331.79, 69.9392, 0.2542 ) }
    dend_67 { pt3dadd( 433.043, 331.586, 70.5012, 0.305 ) }
    dend_67 { pt3dadd( 433.909, 331.004, 71.4661, 0.3814 ) }
    dend_67 { pt3dadd( 434.59, 330.204, 72.5785, 0.4322 ) }
    dend_67 { pt3dadd( 435.373, 329.434, 73.0688, 0.4322 ) }
    dend_67 { pt3dadd( 436.24, 328.688, 73.0484, 0.3814 ) }
    dend_67 { pt3dadd( 436.831, 327.939, 73.878, 0.3304 ) }
    dend_67 { pt3dadd( 437.022, 327.184, 75.9284, 0.356 ) }
    dend_67 { pt3dadd( 437.259, 326.253, 77.3049, 0.4068 ) }
    dend_67 { pt3dadd( 437.526, 325.211, 78.2575, 0.4322 ) }
    dend_67 { pt3dadd( 437.82, 324.204, 79.3761, 0.3814 ) }
    dend_67 { pt3dadd( 438.119, 323.203, 80.5154, 0.3304 ) }
    dend_67 { pt3dadd( 438.881, 322.589, 79.4156, 0.3304 ) }
    dend_67 { pt3dadd( 439.664, 321.987, 78.3653, 0.356 ) }
    dend_67 { pt3dadd( 440.186, 321.129, 79.711, 0.3814 ) }
    dend_67 { pt3dadd( 440.667, 320.266, 81.0986, 0.3814 ) }
    dend_67 { pt3dadd( 440.892, 319.371, 82.7492, 0.356 ) }
    dend_67 { pt3dadd( 441.139, 318.462, 84.2475, 0.3814 ) }
    dend_67 { pt3dadd( 441.609, 317.421, 84.0935, 0.4068 ) }
    dend_67 { pt3dadd( 442.002, 316.452, 84.5586, 0.4576 ) }
    dend_67 { pt3dadd( 442.209, 315.652, 86.4959, 0.4576 ) }
    dend_67 { pt3dadd( 442.506, 314.701, 87.768, 0.483 ) }
    dend_67 { pt3dadd( 442.841, 313.685, 88.76, 0.5084 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 23/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 390.408, 355.543, 34.8757, 0.356 ) }
    dend_65 { pt3dadd( 390.447, 356.397, 34.7136, 0.305 ) }
    dend_65 { pt3dadd( 390.489, 357.538, 34.5136, 0.305 ) }
    dend_65 { pt3dadd( 390.529, 358.678, 34.3137, 0.3304 ) }
    dend_65 { pt3dadd( 390.656, 359.805, 33.9626, 0.3814 ) }
    dend_65 { pt3dadd( 390.789, 360.932, 33.6, 0.3304 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 29/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 390.408, 355.543, 34.8757, 0.356 ) }
    dend_64 { pt3dadd( 391.008, 355.457, 34.181, 0.2796 ) }
    dend_64 { pt3dadd( 392.144, 355.326, 34.1659, 0.2288 ) }
    dend_64 { pt3dadd( 393.271, 355.345, 33.9419, 0.2542 ) }
    dend_64 { pt3dadd( 394.386, 355.521, 33.4975, 0.2796 ) }
    dend_64 { pt3dadd( 395.504, 355.628, 33.0571, 0.3304 ) }
    dend_64 { pt3dadd( 396.626, 355.493, 32.6309, 0.356 ) }
    dend_64 { pt3dadd( 397.748, 355.357, 32.2048, 0.3814 ) }
    dend_64 { pt3dadd( 398.741, 355.893, 31.8506, 0.3814 ) }
    dend_64 { pt3dadd( 399.729, 356.451, 31.4989, 0.356 ) }
    dend_64 { pt3dadd( 400.549, 357.16, 30.6491, 0.356 ) }
    dend_64 { pt3dadd( 401.344, 357.89, 29.7268, 0.356 ) }
    dend_64 { pt3dadd( 402.13, 358.667, 28.9996, 0.4068 ) }
    dend_64 { pt3dadd( 402.916, 359.445, 28.28, 0.4068 ) }
    // Section: dend_61, id: dend_61, parent: dend_57 (entry count 43/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 385.4, 319.519, 30.8311, 0.5592 ) }
    dend_61 { pt3dadd( 385.993, 318.934, 29.0934, 0.7372 ) }
    dend_61 { pt3dadd( 386.652, 318.263, 27.533, 0.6102 ) }
    dend_61 { pt3dadd( 387.36, 317.525, 26.2786, 0.4322 ) }
    dend_61 { pt3dadd( 388.054, 316.756, 25.1409, 0.356 ) }
    dend_61 { pt3dadd( 388.664, 315.805, 24.719, 0.356 ) }
    dend_61 { pt3dadd( 389.245, 314.852, 24.5364, 0.4322 ) }
    dend_61 { pt3dadd( 389.664, 313.904, 25.7194, 0.4322 ) }
    dend_61 { pt3dadd( 390.116, 312.947, 26.4908, 0.4576 ) }
    dend_61 { pt3dadd( 390.666, 311.962, 26.0193, 0.5084 ) }
    dend_61 { pt3dadd( 391.335, 311.09, 25.5237, 0.6102 ) }
    dend_61 { pt3dadd( 392.265, 310.462, 24.976, 0.661 ) }
    dend_61 { pt3dadd( 393.176, 309.793, 24.6618, 0.661 ) }
    dend_61 { pt3dadd( 394.066, 309.073, 24.6263, 0.6356 ) }
    dend_61 { pt3dadd( 394.831, 308.275, 24.1864, 0.6102 ) }
    dend_61 { pt3dadd( 395.465, 307.392, 23.3128, 0.6102 ) }
    dend_61 { pt3dadd( 396.382, 306.758, 22.7111, 0.5848 ) }
    dend_61 { pt3dadd( 397.31, 306.134, 22.12, 0.5084 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 61/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 385.4, 319.519, 30.8311, 0.5592 ) }
    dend_58 { pt3dadd( 385.772, 319.578, 31.2519, 0.3814 ) }
    dend_58 { pt3dadd( 386.546, 320.114, 31.7397, 0.4322 ) }
    dend_58 { pt3dadd( 386.979, 321.16, 31.3169, 0.4322 ) }
    dend_58 { pt3dadd( 387.554, 322.074, 31.0299, 0.4576 ) }
    dend_58 { pt3dadd( 388.583, 322.569, 31.1791, 0.5084 ) }
    dend_58 { pt3dadd( 389.612, 323.065, 31.3281, 0.6102 ) }
    dend_58 { pt3dadd( 390.712, 323.379, 31.4163, 0.6102 ) }
    dend_58 { pt3dadd( 391.811, 323.695, 31.5045, 0.5592 ) }
    dend_58 { pt3dadd( 392.817, 324.215, 31.7842, 0.483 ) }
    dend_58 { pt3dadd( 393.802, 324.782, 32.1068, 0.5084 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 72/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 384.942, 314.931, 33.88, 0.6356 ) }
    dend_39 { pt3dadd( 386.03, 313.93, 33.7798, 0.6356 ) }
    dend_39 { pt3dadd( 386.887, 313.185, 34.1289, 0.5084 ) }
    dend_39 { pt3dadd( 387.744, 312.441, 34.4781, 0.5338 ) }
    dend_39 { pt3dadd( 388.29, 311.438, 34.3932, 0.6864 ) }
    dend_39 { pt3dadd( 388.829, 310.43, 34.2997, 0.8136 ) }
    dend_39 { pt3dadd( 389.598, 309.59, 34.5708, 0.839 ) }
    dend_39 { pt3dadd( 390.37, 308.753, 34.8443, 0.7118 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 80/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 347.216, 303.339, 24.8268, 0.4322 ) }
    dend_36 { pt3dadd( 346.595, 302.972, 22.8222, 0.356 ) }
    dend_36 { pt3dadd( 345.945, 302.588, 20.72, 0.4322 ) }
    dend_36 { pt3dadd( 345.203, 303.033, 20.9619, 0.3304 ) }
    dend_36 { pt3dadd( 344.229, 303.618, 21.28, 0.3304 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 85/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 347.216, 303.339, 24.8268, 0.4322 ) }
    dend_35 { pt3dadd( 347.136, 302.442, 24.7097, 0.4576 ) }
    dend_35 { pt3dadd( 347.37, 301.471, 23.8543, 0.5338 ) }
    dend_35 { pt3dadd( 347.889, 300.643, 22.4, 0.5848 ) }
    // Section: dend_33, id: dend_33, parent: dend_29 (entry count 89/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 346.987, 321.909, 29.96, 0.4576 ) }
    dend_33 { pt3dadd( 346.746, 322.853, 28.6476, 0.4068 ) }
    dend_33 { pt3dadd( 346.498, 323.823, 27.2972, 0.356 ) }
    dend_33 { pt3dadd( 346.25, 324.794, 25.9468, 0.356 ) }
    dend_33 { pt3dadd( 345.892, 325.98, 27.1785, 0.4576 ) }
    dend_33 { pt3dadd( 345.504, 326.962, 27.3468, 0.5592 ) }
    dend_33 { pt3dadd( 345.003, 327.899, 26.3068, 0.5848 ) }
    dend_33 { pt3dadd( 344.56, 328.882, 25.7914, 0.5848 ) }
    dend_33 { pt3dadd( 344.234, 329.956, 26.3309, 0.483 ) }
    dend_33 { pt3dadd( 343.909, 331.012, 26.5124, 0.4576 ) }
    dend_33 { pt3dadd( 343.588, 331.998, 25.3336, 0.4576 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_33 { pt3dadd( 343.301, 333.004, 24.2418, 0.5084 ) }
    dend_33 { pt3dadd( 343.214, 334.121, 23.6771, 0.5592 ) }
    dend_33 { pt3dadd( 343.128, 335.239, 23.1207, 0.5338 ) }
    dend_33 { pt3dadd( 343.117, 336.382, 23.0356, 0.483 ) }
    dend_33 { pt3dadd( 343.077, 337.494, 22.6318, 0.4068 ) }
    dend_33 { pt3dadd( 342.97, 338.536, 21.504, 0.4068 ) }
    dend_33 { pt3dadd( 342.884, 339.65, 21.56, 0.4322 ) }
    dend_33 { pt3dadd( 342.802, 340.783, 21.9092, 0.4576 ) }
    dend_33 { pt3dadd( 342.659, 341.814, 21.1943, 0.4322 ) }
    dend_33 { pt3dadd( 342.513, 342.782, 19.9794, 0.4322 ) }
    dend_33 { pt3dadd( 342.722, 343.83, 20.9787, 0.3814 ) }
    dend_33 { pt3dadd( 342.857, 344.907, 21.4337, 0.3814 ) }
    dend_33 { pt3dadd( 342.861, 346.033, 20.9381, 0.4068 ) }
    dend_33 { pt3dadd( 342.9, 347.155, 20.4282, 0.5084 ) }
    dend_33 { pt3dadd( 343.05, 348.266, 19.8741, 0.5592 ) }
    dend_33 { pt3dadd( 343.199, 349.378, 19.32, 0.483 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 16/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 346.987, 321.909, 29.96, 0.4576 ) }
    dend_30 { pt3dadd( 346.352, 321.821, 29.5537, 0.7118 ) }
    dend_30 { pt3dadd( 345.341, 321.685, 28.303, 0.788 ) }
    dend_30 { pt3dadd( 344.336, 321.55, 27.0001, 0.839 ) }
    dend_30 { pt3dadd( 343.415, 320.974, 26.2452, 0.8898 ) }
    dend_30 { pt3dadd( 342.503, 320.342, 25.5606, 0.8898 ) }
    dend_30 { pt3dadd( 341.465, 319.89, 25.8919, 0.788 ) }
    dend_30 { pt3dadd( 340.422, 319.445, 26.2604, 0.6864 ) }
    dend_30 { pt3dadd( 339.468, 319.883, 27.0561, 0.5592 ) }
    dend_30 { pt3dadd( 338.526, 320.431, 27.9042, 0.5338 ) }
    dend_30 { pt3dadd( 337.481, 320.677, 27.1681, 0.483 ) }
    dend_30 { pt3dadd( 336.423, 320.885, 26.2301, 0.5592 ) }
    dend_30 { pt3dadd( 335.398, 321.298, 25.5587, 0.5592 ) }
    dend_30 { pt3dadd( 334.378, 321.75, 24.9388, 0.6102 ) }
    dend_30 { pt3dadd( 333.31, 321.981, 24.1769, 0.5592 ) }
    dend_30 { pt3dadd( 332.226, 322.137, 23.3671, 0.6102 ) }
    dend_30 { pt3dadd( 331.194, 322.563, 23.3338, 0.5848 ) }
    dend_30 { pt3dadd( 330.179, 323.083, 23.5698, 0.5338 ) }
    dend_30 { pt3dadd( 329.106, 323.242, 23.4018, 0.4322 ) }
    dend_30 { pt3dadd( 327.986, 323.117, 22.9177, 0.3814 ) }
    dend_30 { pt3dadd( 326.887, 322.891, 22.4944, 0.4576 ) }
    dend_30 { pt3dadd( 325.819, 322.502, 22.1659, 0.483 ) }
    dend_30 { pt3dadd( 324.774, 322.1, 21.6824, 0.5084 ) }
    dend_30 { pt3dadd( 323.801, 321.654, 20.6912, 0.4322 ) }
    dend_30 { pt3dadd( 322.805, 321.43, 20.3148, 0.4322 ) }
    dend_30 { pt3dadd( 321.759, 321.681, 21.264, 0.5084 ) }
    dend_30 { pt3dadd( 320.713, 321.934, 22.2132, 0.5848 ) }
    // Section: dend_24, id: dend_24, parent: dend_6 (entry count 43/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 353.045, 330.299, 46.4806, 0.661 ) }
    dend_24 { pt3dadd( 352.663, 329.819, 46.5968, 0.7626 ) }
    dend_24 { pt3dadd( 351.885, 328.989, 46.7788, 0.8136 ) }
    dend_24 { pt3dadd( 351.015, 328.249, 46.9137, 0.7626 ) }
    dend_24 { pt3dadd( 350.201, 327.491, 47.2609, 0.6102 ) }
    dend_24 { pt3dadd( 349.641, 326.646, 48.5607, 0.4576 ) }
    dend_24 { pt3dadd( 349.5, 325.785, 49.0986, 0.3304 ) }
    dend_24 { pt3dadd( 350.126, 324.894, 48.2451, 0.2542 ) }
    dend_24 { pt3dadd( 350.487, 323.895, 47.9284, 0.2542 ) }
    dend_24 { pt3dadd( 350.511, 322.761, 48.2989, 0.3304 ) }
    dend_24 { pt3dadd( 350.365, 321.707, 48.5562, 0.4576 ) }
    dend_24 { pt3dadd( 349.476, 320.994, 48.3179, 0.5338 ) }
    dend_24 { pt3dadd( 348.57, 320.339, 48.1135, 0.5338 ) }
    dend_24 { pt3dadd( 347.441, 320.495, 48.3703, 0.4322 ) }
    dend_24 { pt3dadd( 346.313, 320.651, 48.6268, 0.356 ) }
    dend_24 { pt3dadd( 345.882, 320.583, 49.5751, 0.2542 ) }
    dend_24 { pt3dadd( 345.036, 320.452, 51.4343, 0.2796 ) }
    dend_24 { pt3dadd( 344.191, 320.32, 53.2932, 0.4068 ) }
    dend_24 { pt3dadd( 343.968, 320.042, 54.2545, 0.3814 ) }
    dend_24 { pt3dadd( 342.938, 319.604, 54.8355, 0.4068 ) }
    dend_24 { pt3dadd( 341.925, 319.161, 54.8755, 0.483 ) }
    dend_24 { pt3dadd( 340.941, 318.714, 53.9633, 0.483 ) }
    dend_24 { pt3dadd( 339.953, 318.265, 53.107, 0.4322 ) }
    dend_24 { pt3dadd( 338.918, 317.806, 53.4923, 0.483 ) }
    dend_24 { pt3dadd( 337.879, 317.346, 53.8269, 0.5848 ) }
    dend_24 { pt3dadd( 336.838, 316.882, 54.0464, 0.6356 ) }
    dend_24 { pt3dadd( 335.798, 316.654, 53.5494, 0.483 ) }
    dend_24 { pt3dadd( 334.762, 316.651, 52.3634, 0.3814 ) }
    dend_24 { pt3dadd( 333.989, 316.496, 52.6358, 0.3304 ) }
    dend_24 { pt3dadd( 333.61, 316.11, 55.1037, 0.4576 ) }
    dend_24 { pt3dadd( 332.626, 315.803, 56.2974, 0.5084 ) }
    dend_24 { pt3dadd( 331.694, 315.377, 57.0018, 0.5592 ) }
    dend_24 { pt3dadd( 330.951, 314.567, 56.2226, 0.5084 ) }
    dend_24 { pt3dadd( 330.156, 313.831, 55.8947, 0.5084 ) }
    dend_24 { pt3dadd( 329.215, 313.304, 56.8226, 0.5084 ) }
    dend_24 { pt3dadd( 328.439, 312.628, 57.853, 0.483 ) }
    dend_24 { pt3dadd( 327.895, 311.743, 59.0254, 0.4322 ) }
    dend_24 { pt3dadd( 327.372, 310.8, 59.395, 0.3814 ) }
    dend_24 { pt3dadd( 326.873, 309.791, 58.8885, 0.3814 ) }
    dend_24 { pt3dadd( 326.445, 308.815, 59.3807, 0.3304 ) }
    dend_24 { pt3dadd( 326.072, 307.864, 60.6432, 0.2796 ) }
    dend_24 { pt3dadd( 325.628, 306.891, 60.947, 0.2288 ) }
    dend_24 { pt3dadd( 325.117, 305.896, 60.3593, 0.2288 ) }
    dend_24 { pt3dadd( 324.587, 304.91, 60.944, 0.2796 ) }
    dend_24 { pt3dadd( 324.015, 303.941, 61.4046, 0.3304 ) }
    dend_24 { pt3dadd( 323.379, 302.996, 61.6722, 0.4068 ) }
    dend_24 { pt3dadd( 322.974, 301.955, 62.2317, 0.4068 ) }
    dend_24 { pt3dadd( 322.588, 300.905, 62.8149, 0.4322 ) }
    dend_24 { pt3dadd( 321.937, 300.04, 63.693, 0.4068 ) }
    dend_24 { pt3dadd( 321.267, 299.188, 64.5907, 0.4576 ) }
    dend_24 { pt3dadd( 320.415, 298.441, 64.6962, 0.5084 ) }
    dend_24 { pt3dadd( 319.535, 297.71, 64.6822, 0.6356 ) }
    dend_24 { pt3dadd( 318.673, 297.126, 65.7188, 0.661 ) }
    dend_24 { pt3dadd( 317.814, 296.575, 66.9824, 0.6356 ) }
    dend_24 { pt3dadd( 316.794, 296.34, 67.8065, 0.5084 ) }
    dend_24 { pt3dadd( 315.68, 296.318, 68.3953, 0.4322 ) }
    dend_24 { pt3dadd( 314.685, 296.421, 69.7508, 0.3814 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_24 { pt3dadd( 313.707, 296.486, 71.125, 0.4322 ) }
    dend_24 { pt3dadd( 313.047, 295.867, 72.8386, 0.483 ) }
    dend_24 { pt3dadd( 312.337, 295.332, 74.5749, 0.5084 ) }
    dend_24 { pt3dadd( 311.541, 294.948, 76.3521, 0.483 ) }
    dend_24 { pt3dadd( 310.699, 294.465, 77.7969, 0.4322 ) }
    dend_24 { pt3dadd( 309.833, 293.921, 79.0513, 0.4068 ) }
    dend_24 { pt3dadd( 309.45, 292.991, 80.3382, 0.3304 ) }
    dend_24 { pt3dadd( 309.02, 292.029, 81.2526, 0.2796 ) }
    dend_24 { pt3dadd( 308.44, 291.045, 81.4111, 0.2288 ) }
    dend_24 { pt3dadd( 308.189, 290.056, 81.1384, 0.2288 ) }
    dend_24 { pt3dadd( 308.537, 289.053, 80.0859, 0.2796 ) }
    dend_24 { pt3dadd( 308.617, 288.243, 80.2054, 0.3814 ) }
    dend_24 { pt3dadd( 308.186, 287.798, 82.5594, 0.483 ) }
    dend_24 { pt3dadd( 307.971, 287.145, 84.7647, 0.5084 ) }
    dend_24 { pt3dadd( 307.81, 286.438, 86.9316, 0.4322 ) }
    dend_24 { pt3dadd( 306.989, 286.08, 88.3182, 0.4068 ) }
    dend_24 { pt3dadd( 306.091, 285.685, 89.6263, 0.4322 ) }
    dend_24 { pt3dadd( 305.39, 285.045, 91.187, 0.5084 ) }
    dend_24 { pt3dadd( 304.629, 284.324, 92.1654, 0.483 ) }
    dend_24 { pt3dadd( 303.821, 283.544, 92.7018, 0.4322 ) }
    dend_24 { pt3dadd( 303.261, 282.629, 93.4102, 0.3814 ) }
    dend_24 { pt3dadd( 302.919, 281.596, 94.2707, 0.4068 ) }
    dend_24 { pt3dadd( 302.237, 281.021, 95.8796, 0.3814 ) }
    dend_24 { pt3dadd( 301.433, 280.564, 97.3442, 0.356 ) }
    dend_24 { pt3dadd( 300.331, 280.256, 97.2896, 0.3304 ) }
    dend_24 { pt3dadd( 300.44, 279.821, 98.8442, 0.4068 ) }
    dend_24 { pt3dadd( 300.328, 279.273, 100.524, 0.483 ) }
    dend_24 { pt3dadd( 299.495, 278.653, 101.699, 0.483 ) }
    dend_24 { pt3dadd( 299.054, 277.883, 102.662, 0.4068 ) }
    dend_24 { pt3dadd( 299.395, 276.815, 103.206, 0.3304 ) }
    dend_24 { pt3dadd( 299.713, 275.743, 103.653, 0.305 ) }
    dend_24 { pt3dadd( 299.726, 274.643, 102.881, 0.2796 ) }
    dend_24 { pt3dadd( 299.729, 273.518, 102.549, 0.2542 ) }
    dend_24 { pt3dadd( 299.727, 272.374, 102.511, 0.2288 ) }
    dend_24 { pt3dadd( 299.512, 272.223, 104.718, 0.356 ) }
    dend_24 { pt3dadd( 299.25, 272.04, 107.407, 0.2796 ) }
    dend_24 { pt3dadd( 298.988, 271.857, 110.095, 0.2542 ) }
    dend_24 { pt3dadd( 298.726, 271.674, 112.783, 0.2542 ) }
    dend_24 { pt3dadd( 298.464, 271.49, 115.472, 0.2796 ) }
    dend_24 { pt3dadd( 298.202, 271.306, 118.16, 0.305 ) }
    dend_24 { pt3dadd( 297.757, 270.983, 117.898, 0.305 ) }
    dend_24 { pt3dadd( 297.06, 270.257, 116.853, 0.305 ) }
    dend_24 { pt3dadd( 296.628, 269.452, 115.169, 0.305 ) }
    dend_24 { pt3dadd( 295.783, 269.018, 114.189, 0.305 ) }
    dend_24 { pt3dadd( 294.679, 268.818, 113.65, 0.305 ) }
    dend_24 { pt3dadd( 293.775, 268.889, 114.484, 0.305 ) }
    dend_24 { pt3dadd( 293.044, 269.195, 116.507, 0.2796 ) }
    dend_24 { pt3dadd( 291.989, 269.35, 116.138, 0.305 ) }
    dend_24 { pt3dadd( 291.625, 269.784, 117.203, 0.3814 ) }
    dend_24 { pt3dadd( 291.772, 270.426, 119.494, 0.5084 ) }
    dend_24 { pt3dadd( 290.933, 270.932, 120.336, 0.5848 ) }
    dend_24 { pt3dadd( 290.014, 271.111, 121.946, 0.6102 ) }
    dend_24 { pt3dadd( 289.024, 271.014, 123.162, 0.5848 ) }
    dend_24 { pt3dadd( 288.011, 270.722, 124.175, 0.5084 ) }
    dend_24 { pt3dadd( 287.526, 270.216, 126.388, 0.3814 ) }
    dend_24 { pt3dadd( 287.581, 269.248, 127.758, 0.3304 ) }
    dend_24 { pt3dadd( 287.684, 268.239, 129.053, 0.3304 ) }
    dend_24 { pt3dadd( 287.817, 267.601, 131.206, 0.4322 ) }
    dend_24 { pt3dadd( 287.962, 267.116, 133.718, 0.4576 ) }
    dend_24 { pt3dadd( 288.01, 266.809, 136.364, 0.483 ) }
    dend_24 { pt3dadd( 287.964, 266.68, 139.143, 0.4068 ) }
    dend_24 { pt3dadd( 288.241, 267.004, 141.249, 0.3814 ) }
    dend_24 { pt3dadd( 288.842, 267.782, 142.678, 0.3814 ) }
    dend_24 { pt3dadd( 289.444, 268.561, 144.107, 0.4322 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 64/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 353.045, 330.299, 46.4806, 0.661 ) }
    dend_7 { pt3dadd( 352.239, 329.922, 46.4223, 0.6864 ) }
    dend_7 { pt3dadd( 351.192, 329.475, 46.2756, 0.7118 ) }
    dend_7 { pt3dadd( 350.102, 329.168, 45.8758, 0.6864 ) }
    dend_7 { pt3dadd( 349.013, 328.86, 45.4756, 0.5848 ) }
    dend_7 { pt3dadd( 348.066, 329.156, 46.373, 0.5338 ) }
    dend_7 { pt3dadd( 347.159, 329.624, 47.6398, 0.5592 ) }
    dend_7 { pt3dadd( 346.687, 330.598, 48.032, 0.7118 ) }
    dend_7 { pt3dadd( 346.3, 331.671, 48.2532, 0.8644 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 73/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 366.308, 256.599, 37.52, 0.4322 ) }
    dend_4 { pt3dadd( 366.523, 256.333, 37.3822, 0.2796 ) }
    dend_4 { pt3dadd( 367.232, 255.455, 36.9275, 0.2542 ) }
    dend_4 { pt3dadd( 367.941, 254.577, 36.4728, 0.2288 ) }
    dend_4 { pt3dadd( 368.651, 253.699, 36.0181, 0.2288 ) }
    dend_4 { pt3dadd( 369.36, 252.821, 35.5636, 0.2288 ) }
    dend_4 { pt3dadd( 370.069, 251.942, 35.1089, 0.2542 ) }
    dend_4 { pt3dadd( 370.611, 250.988, 34.5444, 0.2796 ) }
    dend_4 { pt3dadd( 370.91, 249.924, 33.8204, 0.305 ) }
    dend_4 { pt3dadd( 371.176, 248.841, 33.3581, 0.305 ) }
    dend_4 { pt3dadd( 371.375, 247.715, 33.4522, 0.305 ) }
    dend_4 { pt3dadd( 371.481, 246.6, 33.5227, 0.305 ) }
    dend_4 { pt3dadd( 371.02, 245.553, 33.4502, 0.3304 ) }
    dend_4 { pt3dadd( 370.559, 244.506, 33.3777, 0.356 ) }
    dend_4 { pt3dadd( 370.237, 243.411, 33.4242, 0.4068 ) }
    dend_4 { pt3dadd( 369.946, 242.305, 33.4964, 0.3814 ) }
    dend_4 { pt3dadd( 369.477, 241.29, 33.1439, 0.3814 ) }
    dend_4 { pt3dadd( 368.909, 240.327, 32.552, 0.356 ) }
    dend_4 { pt3dadd( 368.374, 239.335, 32.216, 0.3814 ) }
    dend_4 { pt3dadd( 367.888, 238.3, 32.2549, 0.356 ) }
    dend_4 { pt3dadd( 367.604, 237.207, 32.317, 0.3304 ) }
    dend_4 { pt3dadd( 367.469, 236.071, 32.3963, 0.305 ) }
    dend_4 { pt3dadd( 367.431, 234.943, 32.5909, 0.356 ) }
    dend_4 { pt3dadd( 367.628, 233.834, 33.07, 0.4322 ) }
    dend_4 { pt3dadd( 367.835, 232.727, 33.5552, 0.5084 ) }
    dend_4 { pt3dadd( 368.234, 231.684, 34.1659, 0.483 ) }
    dend_4 { pt3dadd( 368.628, 230.637, 34.7346, 0.3814 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_4 { pt3dadd( 368.968, 229.547, 34.8908, 0.305 ) }
    dend_4 { pt3dadd( 369.307, 228.456, 35.047, 0.2796 ) }
    dend_4 { pt3dadd( 369.678, 227.385, 35.3996, 0.305 ) }
    dend_4 { pt3dadd( 370.058, 226.319, 35.8123, 0.2796 ) }
    dend_4 { pt3dadd( 370.132, 225.212, 36.4689, 0.2542 ) }
    dend_4 { pt3dadd( 370.185, 224.103, 37.1428, 0.2288 ) }
    dend_4 { pt3dadd( 370.661, 223.122, 37.9403, 0.2288 ) }
    dend_4 { pt3dadd( 371.111, 222.122, 38.6249, 0.2288 ) }
    dend_4 { pt3dadd( 371.333, 221.003, 38.8315, 0.2288 ) }
    dend_4 { pt3dadd( 371.556, 219.884, 39.0382, 0.2542 ) }
    dend_4 { pt3dadd( 371.149, 218.851, 39.6122, 0.305 ) }
    dend_4 { pt3dadd( 370.713, 217.821, 40.203, 0.356 ) }
    dend_4 { pt3dadd( 370.274, 216.797, 40.0263, 0.3814 ) }
    dend_4 { pt3dadd( 369.835, 215.776, 39.3697, 0.3814 ) }
    dend_4 { pt3dadd( 369.283, 214.833, 39.1966, 0.3814 ) }
    dend_4 { pt3dadd( 368.515, 214.047, 39.9647, 0.3814 ) }
    dend_4 { pt3dadd( 367.961, 213.14, 40.7392, 0.3814 ) }
    dend_4 { pt3dadd( 367.692, 212.075, 41.5218, 0.3814 ) }
    dend_4 { pt3dadd( 367.343, 211.067, 42.4729, 0.356 ) }
    dend_4 { pt3dadd( 366.88, 210.144, 43.6733, 0.356 ) }
    dend_4 { pt3dadd( 366.506, 209.182, 44.1938, 0.356 ) }
    dend_4 { pt3dadd( 366.335, 208.13, 43.1665, 0.4322 ) }
    dend_4 { pt3dadd( 366.176, 207.067, 43.2205, 0.4322 ) }
    dend_4 { pt3dadd( 366.026, 205.993, 44.114, 0.4322 ) }
    dend_4 { pt3dadd( 365.945, 204.932, 45.082, 0.3814 ) }
    dend_4 { pt3dadd( 366.092, 203.912, 46.2974, 0.4068 ) }
    dend_4 { pt3dadd( 366.293, 202.979, 45.724, 0.4322 ) }
    dend_4 { pt3dadd( 366.529, 202.101, 44.0238, 0.4068 ) }
    dend_4 { pt3dadd( 366.761, 200.997, 44.1972, 0.356 ) }
    dend_4 { pt3dadd( 366.994, 199.882, 44.4578, 0.3304 ) }
    dend_4 { pt3dadd( 366.905, 199.132, 45.1298, 0.661 ) }
    dend_4 { pt3dadd( 366.753, 198.069, 46.0902, 0.5338 ) }
    dend_4 { pt3dadd( 366.522, 197.022, 47.0666, 0.5084 ) }
    dend_4 { pt3dadd( 366.289, 195.975, 48.043, 0.5592 ) }
    dend_4 { pt3dadd( 366.883, 195.073, 47.7652, 0.5084 ) }
    dend_4 { pt3dadd( 367.588, 194.192, 47.3169, 0.4322 ) }
    dend_4 { pt3dadd( 367.84, 193.183, 47.9531, 0.3814 ) }
    dend_4 { pt3dadd( 367.9, 192.131, 49.0154, 0.3814 ) }
    dend_4 { pt3dadd( 367.428, 191.254, 50.3913, 0.3304 ) }
    dend_4 { pt3dadd( 367.283, 190.393, 52.0965, 0.2796 ) }
    dend_4 { pt3dadd( 367.296, 189.539, 53.9616, 0.2288 ) }
    dend_4 { pt3dadd( 367.761, 188.751, 53.2554, 0.2542 ) }
    dend_4 { pt3dadd( 368.358, 187.981, 51.7882, 0.2796 ) }
    dend_4 { pt3dadd( 368.134, 186.948, 50.752, 0.3304 ) }
    dend_4 { pt3dadd( 368.029, 185.949, 50.7324, 0.3304 ) }
    dend_4 { pt3dadd( 368.137, 185.012, 52.3191, 0.356 ) }
    dend_4 { pt3dadd( 368.133, 183.948, 53.1826, 0.3304 ) }
    dend_4 { pt3dadd( 368.094, 182.826, 53.65, 0.3304 ) }
    dend_4 { pt3dadd( 368.179, 181.698, 53.2524, 0.2796 ) }
    dend_4 { pt3dadd( 368.27, 180.568, 52.9516, 0.2796 ) }
    dend_4 { pt3dadd( 368.376, 179.431, 53.1493, 0.3304 ) }
    dend_4 { pt3dadd( 368.491, 178.308, 53.4862, 0.4576 ) }
    dend_4 { pt3dadd( 368.644, 177.245, 54.4482, 0.5592 ) }
    dend_4 { pt3dadd( 368.952, 176.254, 55.5598, 0.5592 ) }
    dend_4 { pt3dadd( 369.382, 175.32, 56.7885, 0.483 ) }
    dend_4 { pt3dadd( 369.7, 174.269, 56.6499, 0.3814 ) }
    dend_4 { pt3dadd( 369.985, 173.183, 56.1106, 0.356 ) }
    dend_4 { pt3dadd( 370.244, 172.148, 55.1144, 0.356 ) }
    dend_4 { pt3dadd( 370.503, 171.123, 54.1626, 0.4068 ) }
    dend_4 { pt3dadd( 370.715, 170.408, 56.2864, 0.483 ) }
    dend_4 { pt3dadd( 370.838, 169.648, 58.2582, 0.5338 ) }
    dend_4 { pt3dadd( 370.531, 168.67, 59.505, 0.5592 ) }
    dend_4 { pt3dadd( 370.417, 167.66, 60.583, 0.483 ) }
    dend_4 { pt3dadd( 370.65, 166.584, 61.222, 0.4576 ) }
    dend_4 { pt3dadd( 370.734, 165.467, 60.6458, 0.4068 ) }
    dend_4 { pt3dadd( 370.821, 164.355, 60.1852, 0.3814 ) }
    dend_4 { pt3dadd( 370.949, 163.317, 61.3166, 0.305 ) }
    dend_4 { pt3dadd( 371.15, 162.302, 62.4352, 0.2542 ) }
    dend_4 { pt3dadd( 371.702, 161.397, 63.4934, 0.2288 ) }
    dend_4 { pt3dadd( 372.08, 160.402, 63.9537, 0.2288 ) }
    dend_4 { pt3dadd( 372.21, 159.279, 63.5457, 0.2542 ) }
    dend_4 { pt3dadd( 372.729, 158.374, 63.7134, 0.2796 ) }
    dend_4 { pt3dadd( 373.579, 157.658, 64.37, 0.3304 ) }
    dend_4 { pt3dadd( 374.333, 156.809, 64.1147, 0.3304 ) }
    dend_4 { pt3dadd( 375.07, 155.942, 63.8649, 0.3304 ) }
    dend_4 { pt3dadd( 375.702, 154.99, 64.0074, 0.2796 ) }
    dend_4 { pt3dadd( 376.293, 154.017, 64.1522, 0.305 ) }
    dend_4 { pt3dadd( 376.728, 152.961, 64.3034, 0.3304 ) }
    dend_4 { pt3dadd( 377.224, 151.952, 64.4843, 0.3814 ) }
    dend_4 { pt3dadd( 378.115, 151.251, 64.862, 0.356 ) }
    dend_4 { pt3dadd( 379.006, 150.55, 65.24, 0.3304 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 81/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 366.308, 256.599, 37.52, 0.4322 ) }
    dend_3 { pt3dadd( 366.255, 256.008, 37.6872, 0.2796 ) }
    dend_3 { pt3dadd( 366.097, 254.905, 37.4046, 0.2796 ) }
    dend_3 { pt3dadd( 365.892, 253.825, 36.6246, 0.305 ) }
    dend_3 { pt3dadd( 365.743, 252.731, 35.978, 0.356 ) }
    dend_3 { pt3dadd( 365.774, 251.592, 35.7633, 0.356 ) }
    dend_3 { pt3dadd( 365.803, 250.451, 35.5482, 0.305 ) }
    dend_3 { pt3dadd( 365.777, 249.309, 35.4712, 0.2542 ) }
    dend_3 { pt3dadd( 365.739, 248.166, 35.4239, 0.2288 ) }
    dend_3 { pt3dadd( 365.705, 247.023, 35.3671, 0.2288 ) }
    dend_3 { pt3dadd( 365.681, 245.879, 35.2904, 0.2288 ) }
    dend_3 { pt3dadd( 365.658, 244.736, 35.2139, 0.2288 ) }
    dend_3 { pt3dadd( 365.523, 243.614, 35.5832, 0.2288 ) }
    dend_3 { pt3dadd( 365.366, 242.496, 36.0444, 0.2288 ) }
    dend_3 { pt3dadd( 365.037, 241.408, 36.2558, 0.2288 ) }
    dend_3 { pt3dadd( 364.673, 240.325, 36.4157, 0.2288 ) }
    dend_3 { pt3dadd( 364.296, 239.247, 36.2877, 0.2288 ) }
    dend_3 { pt3dadd( 363.917, 238.168, 36.1598, 0.2542 ) }
    dend_3 { pt3dadd( 363.545, 237.087, 36.2074, 0.2796 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_3 { pt3dadd( 363.177, 236.006, 36.3336, 0.305 ) }
    dend_3 { pt3dadd( 362.519, 235.148, 36.477, 0.2796 ) }
    dend_3 { pt3dadd( 361.566, 234.517, 36.6377, 0.2796 ) }
    dend_3 { pt3dadd( 360.817, 233.685, 36.8402, 0.305 ) }
    dend_3 { pt3dadd( 360.184, 232.736, 37.0675, 0.356 ) }
    dend_3 { pt3dadd( 359.768, 231.725, 37.296, 0.356 ) }
    dend_3 { pt3dadd( 359.797, 230.586, 37.5276, 0.305 ) }
    dend_3 { pt3dadd( 359.827, 229.446, 37.7594, 0.2542 ) }
    dend_3 { pt3dadd( 359.595, 228.326, 37.779, 0.2288 ) }
    dend_3 { pt3dadd( 359.357, 227.208, 37.7941, 0.2288 ) }
    dend_3 { pt3dadd( 358.789, 226.264, 37.9742, 0.2288 ) }
    dend_3 { pt3dadd( 358.017, 225.428, 38.2558, 0.2796 ) }
    dend_3 { pt3dadd( 357.341, 224.512, 38.386, 0.3304 ) }
    dend_3 { pt3dadd( 356.721, 223.55, 38.4275, 0.3814 ) }
    dend_3 { pt3dadd( 356.12, 222.577, 38.4586, 0.3304 ) }
    dend_3 { pt3dadd( 355.547, 221.587, 38.4756, 0.2796 ) }
    dend_3 { pt3dadd( 354.98, 220.595, 38.5039, 0.2288 ) }
    dend_3 { pt3dadd( 354.713, 219.508, 39.086, 0.2288 ) }
    dend_3 { pt3dadd( 354.446, 218.422, 39.6684, 0.2542 ) }
    dend_3 { pt3dadd( 354.098, 217.337, 39.76, 0.2796 ) }
    dend_3 { pt3dadd( 353.735, 216.251, 39.76, 0.3814 ) }
    dend_3 { pt3dadd( 353.672, 215.16, 40.2618, 0.4576 ) }
    dend_3 { pt3dadd( 353.768, 214.064, 41.0318, 0.5592 ) }
    dend_3 { pt3dadd( 353.663, 212.979, 41.6828, 0.5084 ) }
    dend_3 { pt3dadd( 353.333, 211.903, 42.1991, 0.4322 ) }
    dend_3 { pt3dadd( 352.938, 210.846, 42.376, 0.305 ) }
    dend_3 { pt3dadd( 352.465, 209.809, 42.1406, 0.2542 ) }
    dend_3 { pt3dadd( 352.006, 208.765, 42.0255, 0.2288 ) }
    dend_3 { pt3dadd( 351.578, 207.706, 42.1921, 0.2542 ) }
    dend_3 { pt3dadd( 351.169, 206.64, 42.359, 0.3304 ) }
    dend_3 { pt3dadd( 350.817, 205.554, 42.5264, 0.4068 ) }
    dend_3 { pt3dadd( 350.374, 204.512, 42.7585, 0.4576 ) }
    dend_3 { pt3dadd( 349.792, 203.536, 43.0903, 0.4068 ) }
    dend_3 { pt3dadd( 349.192, 202.57, 43.3804, 0.4068 ) }
    dend_3 { pt3dadd( 348.529, 201.64, 43.5106, 0.3814 ) }
    dend_3 { pt3dadd( 347.865, 200.71, 43.6411, 0.4576 ) }
    dend_3 { pt3dadd( 347.346, 199.718, 44.1622, 0.4322 ) }
    dend_3 { pt3dadd( 346.86, 198.713, 44.7689, 0.4322 ) }
    dend_3 { pt3dadd( 345.919, 197.772, 44.5878, 0.356 ) }
    dend_3 { pt3dadd( 345.12, 196.966, 44.3078, 0.305 ) }
    dend_3 { pt3dadd( 344.329, 196.158, 43.8628, 0.2542 ) }
    dend_3 { pt3dadd( 343.539, 195.352, 43.4179, 0.2288 ) }
    dend_3 { pt3dadd( 342.906, 194.53, 44.5844, 0.2542 ) }
    dend_3 { pt3dadd( 342.187, 193.79, 45.6378, 0.3304 ) }
    dend_3 { pt3dadd( 341.183, 193.302, 46.256, 0.483 ) }
    dend_3 { pt3dadd( 340.378, 192.579, 46.6836, 0.6102 ) }
    dend_3 { pt3dadd( 339.786, 191.604, 46.9053, 0.6356 ) }
    dend_3 { pt3dadd( 339.211, 190.849, 48.4422, 0.5592 ) }
    dend_3 { pt3dadd( 338.469, 190.19, 49.4701, 0.4576 ) }
    dend_3 { pt3dadd( 337.443, 189.684, 49.548, 0.4068 ) }
    dend_3 { pt3dadd( 336.758, 188.805, 49.6639, 0.3304 ) }
    dend_3 { pt3dadd( 336.105, 187.931, 50.2732, 0.2796 ) }
    dend_3 { pt3dadd( 335.394, 187.162, 51.3996, 0.2288 ) }
    dend_3 { pt3dadd( 334.588, 186.403, 51.6233, 0.2288 ) }
    dend_3 { pt3dadd( 333.732, 185.651, 51.3722, 0.2542 ) }
    dend_3 { pt3dadd( 333.21, 184.702, 51.8969, 0.2796 ) }
    dend_3 { pt3dadd( 332.807, 183.683, 52.7013, 0.305 ) }
    dend_3 { pt3dadd( 332.268, 182.697, 52.8301, 0.305 ) }
    dend_3 { pt3dadd( 331.67, 181.723, 52.6705, 0.305 ) }
    dend_3 { pt3dadd( 331.283, 180.726, 53.195, 0.305 ) }
    dend_3 { pt3dadd( 331.098, 179.704, 54.3718, 0.2796 ) }
    dend_3 { pt3dadd( 331.139, 178.616, 55.2196, 0.2796 ) }
    dend_3 { pt3dadd( 331.178, 177.529, 56.0283, 0.2796 ) }
    dend_3 { pt3dadd( 330.407, 176.703, 55.6074, 0.356 ) }
    dend_3 { pt3dadd( 329.82, 175.728, 55.7785, 0.4068 ) }
    dend_3 { pt3dadd( 329.248, 174.741, 55.9922, 0.5084 ) }
    dend_3 { pt3dadd( 328.359, 174.02, 55.9961, 0.5084 ) }
    dend_3 { pt3dadd( 327.467, 173.311, 55.9572, 0.5084 ) }
    dend_3 { pt3dadd( 326.487, 172.838, 55.0861, 0.4068 ) }
    dend_3 { pt3dadd( 325.586, 172.36, 55.5204, 0.3814 ) }
    dend_3 { pt3dadd( 324.746, 171.877, 57.01, 0.3814 ) }
    dend_3 { pt3dadd( 323.74, 171.387, 56.863, 0.4322 ) }
    dend_3 { pt3dadd( 322.818, 170.894, 56.166, 0.4322 ) }
    dend_3 { pt3dadd( 322.31, 170.389, 53.9846, 0.356 ) }
    dend_3 { pt3dadd( 321.617, 169.85, 52.8956, 0.2796 ) }
    dend_3 { pt3dadd( 320.657, 169.265, 53.4036, 0.305 ) }
    dend_3 { pt3dadd( 319.837, 168.739, 54.6266, 0.3814 ) }
    dend_3 { pt3dadd( 319.162, 168.274, 56.5816, 0.483 ) }
    dend_3 { pt3dadd( 318.405, 167.533, 55.7127, 0.4322 ) }
    dend_3 { pt3dadd( 317.655, 166.777, 55.0987, 0.4068 ) }
    dend_3 { pt3dadd( 316.963, 166.008, 56.2932, 0.3814 ) }
    dend_3 { pt3dadd( 316.269, 165.239, 57.4876, 0.4576 ) }
    dend_3 { pt3dadd( 315.368, 164.964, 59.0458, 0.483 ) }
    dend_3 { pt3dadd( 314.487, 164.645, 60.4937, 0.483 ) }
    dend_3 { pt3dadd( 313.91, 163.658, 60.6472, 0.4322 ) }
    dend_3 { pt3dadd( 313.208, 162.773, 60.4038, 0.4068 ) }
    dend_3 { pt3dadd( 312.422, 161.973, 60.7278, 0.356 ) }
    dend_3 { pt3dadd( 311.625, 161.19, 61.32, 0.3304 ) }
    // Section: dend_72, id: dend_72, parent: dend_68 (entry count 88/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 395.187, 340.683, 48.3157, 0.2796 ) }
    dend_72 { pt3dadd( 395.48, 340.683, 48.44, 0.2288 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 90/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 395.187, 340.683, 48.3157, 0.2796 ) }
    dend_69 { pt3dadd( 395.23, 341.43, 48.2182, 0.2796 ) }
    dend_69 { pt3dadd( 395.299, 342.571, 48.0939, 0.356 ) }
    dend_69 { pt3dadd( 395.373, 343.712, 48.1278, 0.3814 ) }
    dend_69 { pt3dadd( 395.418, 344.851, 48.1561, 0.4068 ) }
    dend_69 { pt3dadd( 395.162, 345.966, 48.1239, 0.3304 ) }
    dend_69 { pt3dadd( 394.904, 347.08, 48.0914, 0.305 ) }
    dend_69 { pt3dadd( 394.606, 348.167, 47.7159, 0.2796 ) }
    dend_69 { pt3dadd( 394.28, 349.237, 47.1176, 0.3304 ) }
    dend_69 { pt3dadd( 394.038, 350.336, 46.7555, 0.3304 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_69 { pt3dadd( 393.887, 351.47, 46.6469, 0.3304 ) }
    dend_69 { pt3dadd( 393.729, 352.601, 46.5438, 0.2796 ) }
    dend_69 { pt3dadd( 393.535, 353.728, 46.4668, 0.305 ) }
    dend_69 { pt3dadd( 393.339, 354.855, 46.3896, 0.356 ) }
    dend_69 { pt3dadd( 393.169, 355.987, 46.3994, 0.4322 ) }
    dend_69 { pt3dadd( 393.015, 357.119, 46.4164, 0.4068 ) }
    dend_69 { pt3dadd( 392.944, 358.257, 46.2062, 0.3304 ) }
    dend_69 { pt3dadd( 392.874, 359.397, 45.9956, 0.2796 ) }
    dend_69 { pt3dadd( 392.898, 360.525, 46.2465, 0.2796 ) }
    dend_69 { pt3dadd( 392.976, 361.647, 46.7569, 0.305 ) }
    dend_69 { pt3dadd( 392.801, 362.71, 46.4321, 0.2796 ) }
    dend_69 { pt3dadd( 392.448, 363.733, 45.5216, 0.2542 ) }
    dend_69 { pt3dadd( 392.231, 364.816, 45.08, 0.2288 ) }
    dend_69 { pt3dadd( 392.142, 365.956, 45.08, 0.2288 ) }
    dend_69 { pt3dadd( 392.061, 367.097, 45.064, 0.2288 ) }
    dend_69 { pt3dadd( 392.243, 368.207, 44.5584, 0.2288 ) }
    dend_69 { pt3dadd( 392.359, 369.316, 44.1277, 0.2288 ) }
    dend_69 { pt3dadd( 392.066, 370.423, 44.1482, 0.2288 ) }
    dend_69 { pt3dadd( 391.774, 371.529, 44.1686, 0.2288 ) }
    dend_69 { pt3dadd( 391.174, 372.406, 45.1648, 0.2288 ) }
    dend_69 { pt3dadd( 390.561, 373.275, 46.2, 0.2542 ) }
    dend_69 { pt3dadd( 390.408, 373.749, 46.2392, 0.305 ) }
    dend_69 { pt3dadd( 390.058, 374.839, 46.3296, 0.2542 ) }
    dend_69 { pt3dadd( 389.708, 375.926, 46.4198, 0.2288 ) }
    dend_69 { pt3dadd( 389.358, 377.016, 46.51, 0.2288 ) }
    dend_69 { pt3dadd( 389.008, 378.103, 46.5998, 0.2542 ) }
    dend_69 { pt3dadd( 388.59, 379.156, 46.4279, 0.2796 ) }
    dend_69 { pt3dadd( 388.092, 380.168, 45.9528, 0.305 ) }
    dend_69 { pt3dadd( 387.674, 381.225, 45.8573, 0.2796 ) }
    dend_69 { pt3dadd( 387.292, 382.303, 45.9276, 0.2542 ) }
    dend_69 { pt3dadd( 386.886, 383.368, 45.8424, 0.2288 ) }
    dend_69 { pt3dadd( 386.43, 384.402, 45.4163, 0.2542 ) }
    dend_69 { pt3dadd( 386.157, 385.403, 45.8856, 0.2796 ) }
    dend_69 { pt3dadd( 386.084, 386.372, 47.3357, 0.305 ) }
    dend_69 { pt3dadd( 385.735, 387.457, 47.5902, 0.2796 ) }
    dend_69 { pt3dadd( 385.385, 388.54, 47.8447, 0.2542 ) }
    dend_69 { pt3dadd( 385.088, 389.637, 48.1799, 0.2288 ) }
    dend_69 { pt3dadd( 384.793, 390.733, 48.5164, 0.2542 ) }
    dend_69 { pt3dadd( 384.591, 391.85, 48.8558, 0.2796 ) }
    dend_69 { pt3dadd( 384.418, 392.972, 49.1963, 0.305 ) }
    dend_69 { pt3dadd( 384.225, 394.066, 49.8431, 0.2796 ) }
    dend_69 { pt3dadd( 384.024, 395.147, 50.6145, 0.2542 ) }
    dend_69 { pt3dadd( 383.929, 396.252, 51.2179, 0.2288 ) }
    dend_69 { pt3dadd( 383.935, 397.382, 51.6589, 0.2288 ) }
    dend_69 { pt3dadd( 383.96, 398.509, 52.0825, 0.2542 ) }
    dend_69 { pt3dadd( 384.385, 399.569, 52.1363, 0.2796 ) }
    dend_69 { pt3dadd( 384.812, 400.631, 52.19, 0.305 ) }
    dend_69 { pt3dadd( 384.875, 401.743, 52.4129, 0.2796 ) }
    dend_69 { pt3dadd( 384.78, 402.877, 52.7097, 0.2542 ) }
    dend_69 { pt3dadd( 384.577, 403.967, 53.347, 0.2288 ) }
    dend_69 { pt3dadd( 384.342, 405.045, 54.089, 0.2288 ) }
    dend_69 { pt3dadd( 384.237, 406.168, 54.32, 0.2288 ) }
    dend_69 { pt3dadd( 384.191, 407.311, 54.32, 0.2288 ) }
    dend_69 { pt3dadd( 384.096, 408.445, 54.3897, 0.2288 ) }
    dend_69 { pt3dadd( 383.792, 409.537, 54.756, 0.2796 ) }
    dend_69 { pt3dadd( 383.486, 410.63, 55.1222, 0.4322 ) }
    dend_69 { pt3dadd( 382.805, 411.501, 55.734, 0.6102 ) }
    dend_69 { pt3dadd( 382.082, 412.348, 56.3741, 0.6864 ) }
    dend_69 { pt3dadd( 381.683, 413.355, 57.0693, 0.6102 ) }
    dend_69 { pt3dadd( 381.417, 414.428, 57.7875, 0.5338 ) }
    dend_69 { pt3dadd( 380.875, 415.35, 58.4116, 0.5084 ) }
    dend_69 { pt3dadd( 380.054, 416.116, 58.9394, 0.5084 ) }
    dend_69 { pt3dadd( 379.55, 416.973, 59.5932, 0.4322 ) }
    dend_69 { pt3dadd( 379.746, 418.034, 60.5265, 0.3814 ) }
    dend_69 { pt3dadd( 379.657, 417.832, 62.2202, 0.3304 ) }
    dend_69 { pt3dadd( 379.442, 417.074, 64.2494, 0.3814 ) }
    dend_69 { pt3dadd( 379.29, 418.062, 64.12, 0.3814 ) }
    dend_69 { pt3dadd( 379.144, 419.189, 63.8173, 0.4322 ) }
    dend_69 { pt3dadd( 378.594, 419.545, 65.7003, 0.3814 ) }
    dend_69 { pt3dadd( 377.971, 419.758, 67.9893, 0.4068 ) }
    dend_69 { pt3dadd( 377.441, 420.592, 69.3731, 0.4322 ) }
    dend_69 { pt3dadd( 376.594, 421.017, 70.2066, 0.5084 ) }
    dend_69 { pt3dadd( 375.46, 421.064, 70.5673, 0.5084 ) }
    dend_69 { pt3dadd( 375.06, 421.826, 72.1641, 0.483 ) }
    dend_69 { pt3dadd( 374.574, 422.682, 73.0834, 0.483 ) }
    dend_69 { pt3dadd( 373.846, 423.558, 72.83, 0.483 ) }
    dend_69 { pt3dadd( 372.879, 424.017, 73.5804, 0.4576 ) }
    dend_69 { pt3dadd( 372.0, 424.52, 74.6326, 0.4322 ) }
    dend_69 { pt3dadd( 371.514, 425.369, 76.083, 0.4322 ) }
    dend_69 { pt3dadd( 371.039, 426.226, 77.5303, 0.4576 ) }
    dend_69 { pt3dadd( 370.585, 427.095, 78.9723, 0.4068 ) }
    dend_69 { pt3dadd( 370.172, 427.808, 80.8643, 0.3814 ) }
    dend_69 { pt3dadd( 369.77, 428.521, 82.6689, 0.3304 ) }
    dend_69 { pt3dadd( 369.322, 429.548, 83.2342, 0.3304 ) }
    dend_69 { pt3dadd( 368.493, 430.182, 84.0776, 0.2796 ) }
    dend_69 { pt3dadd( 367.596, 430.757, 84.8033, 0.2796 ) }
    dend_69 { pt3dadd( 367.022, 431.726, 84.3248, 0.305 ) }
    dend_69 { pt3dadd( 366.382, 432.634, 84.2937, 0.356 ) }
    dend_69 { pt3dadd( 365.625, 433.431, 85.0727, 0.4068 ) }
    dend_69 { pt3dadd( 364.889, 434.238, 85.9009, 0.4322 ) }
    dend_69 { pt3dadd( 364.162, 435.051, 86.7488, 0.483 ) }
    dend_69 { pt3dadd( 363.413, 435.875, 87.3936, 0.4576 ) }
    dend_69 { pt3dadd( 362.66, 436.698, 87.946, 0.4322 ) }
    dend_69 { pt3dadd( 361.854, 437.493, 87.5347, 0.356 ) }
    dend_69 { pt3dadd( 361.045, 438.197, 87.5361, 0.3304 ) }
    dend_69 { pt3dadd( 360.221, 438.505, 89.3242, 0.2796 ) }
    dend_69 { pt3dadd( 359.4, 438.9, 90.9244, 0.2542 ) }
    dend_69 { pt3dadd( 358.591, 439.625, 91.8061, 0.2542 ) }
    dend_69 { pt3dadd( 357.827, 440.287, 91.4469, 0.2796 ) }
    dend_69 { pt3dadd( 357.107, 440.882, 89.833, 0.305 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_69 { pt3dadd( 357.228, 441.869, 90.9905, 0.2796 ) }
    dend_69 { pt3dadd( 357.387, 442.874, 92.2704, 0.305 ) }
    dend_69 { pt3dadd( 357.85, 443.85, 91.9895, 0.356 ) }
    dend_69 { pt3dadd( 358.392, 444.818, 91.3069, 0.4322 ) }
    dend_69 { pt3dadd( 358.244, 445.936, 91.0148, 0.4068 ) }
    dend_69 { pt3dadd( 358.074, 447.06, 90.7586, 0.3814 ) }
    dend_69 { pt3dadd( 358.22, 448.17, 91.3321, 0.356 ) }
    dend_69 { pt3dadd( 358.406, 449.273, 91.8504, 0.4068 ) }
    dend_69 { pt3dadd( 358.852, 450.324, 92.0189, 0.3814 ) }
    dend_69 { pt3dadd( 359.171, 451.4, 91.8954, 0.356 ) }
    dend_69 { pt3dadd( 359.3, 452.514, 91.334, 0.305 ) }
    dend_69 { pt3dadd( 358.501, 453.184, 92.29, 0.3304 ) }
    dend_69 { pt3dadd( 357.659, 453.835, 93.3181, 0.3814 ) }
    dend_69 { pt3dadd( 357.195, 454.864, 93.7079, 0.4068 ) }
    dend_69 { pt3dadd( 356.734, 455.898, 94.078, 0.4322 ) }
    dend_69 { pt3dadd( 355.992, 456.764, 94.3356, 0.4068 ) }
    dend_69 { pt3dadd( 355.227, 457.599, 94.633, 0.4068 ) }
    dend_69 { pt3dadd( 354.316, 458.254, 95.1684, 0.3814 ) }
    dend_69 { pt3dadd( 353.345, 458.79, 95.2277, 0.4322 ) }
    dend_69 { pt3dadd( 352.289, 459.157, 94.6246, 0.483 ) }
    dend_69 { pt3dadd( 351.434, 459.762, 94.9637, 0.5084 ) }
    dend_69 { pt3dadd( 350.733, 460.553, 96.0389, 0.483 ) }
    dend_69 { pt3dadd( 349.666, 460.951, 96.2909, 0.5084 ) }
    dend_69 { pt3dadd( 348.598, 461.349, 96.5423, 0.5848 ) }
    dend_69 { pt3dadd( 347.825, 462.036, 97.5304, 0.6356 ) }
    dend_69 { pt3dadd( 347.137, 462.807, 98.7319, 0.6356 ) }
    dend_69 { pt3dadd( 346.632, 463.541, 100.454, 0.5848 ) }
    dend_69 { pt3dadd( 346.176, 464.266, 102.3, 0.5848 ) }
    dend_69 { pt3dadd( 346.811, 465.216, 102.447, 0.5848 ) }
    dend_69 { pt3dadd( 347.575, 465.232, 103.122, 0.6102 ) }
    dend_69 { pt3dadd( 348.428, 464.6, 104.162, 0.5592 ) }
    dend_69 { pt3dadd( 349.406, 464.415, 104.991, 0.4576 ) }
    dend_69 { pt3dadd( 350.499, 464.637, 105.625, 0.3814 ) }
    dend_69 { pt3dadd( 351.583, 464.391, 105.538, 0.356 ) }
    dend_69 { pt3dadd( 352.667, 464.037, 105.287, 0.4322 ) }
    dend_69 { pt3dadd( 353.762, 464.069, 105.246, 0.4322 ) }
    dend_69 { pt3dadd( 354.864, 464.37, 105.352, 0.4322 ) }
    dend_69 { pt3dadd( 355.733, 465.027, 105.028, 0.3304 ) }
    dend_69 { pt3dadd( 356.383, 465.913, 104.631, 0.2796 ) }
    dend_69 { pt3dadd( 356.563, 467.037, 104.898, 0.2796 ) }
    dend_69 { pt3dadd( 356.945, 468.081, 105.311, 0.3814 ) }
    dend_69 { pt3dadd( 357.5, 469.058, 105.85, 0.5084 ) }
    dend_69 { pt3dadd( 358.169, 469.947, 106.356, 0.5338 ) }
    dend_69 { pt3dadd( 358.985, 470.727, 106.819, 0.483 ) }
    dend_69 { pt3dadd( 359.824, 471.468, 106.549, 0.4068 ) }
    dend_69 { pt3dadd( 360.675, 472.186, 105.915, 0.3814 ) }
    dend_69 { pt3dadd( 361.55, 472.743, 106.562, 0.4068 ) }
    dend_69 { pt3dadd( 362.437, 473.211, 107.908, 0.4576 ) }
    dend_69 { pt3dadd( 363.142, 473.993, 108.183, 0.5592 ) }
    dend_69 { pt3dadd( 363.743, 474.957, 107.84, 0.5848 ) }
    dend_69 { pt3dadd( 364.6, 475.593, 108.128, 0.5848 ) }
    dend_69 { pt3dadd( 365.624, 476.016, 108.828, 0.5084 ) }
    dend_69 { pt3dadd( 366.586, 476.462, 108.364, 0.483 ) }
    dend_69 { pt3dadd( 367.51, 476.923, 107.158, 0.4322 ) }
    dend_69 { pt3dadd( 368.206, 477.599, 107.93, 0.4068 ) }
    dend_69 { pt3dadd( 368.818, 478.352, 109.411, 0.4322 ) }
    dend_69 { pt3dadd( 369.178, 479.415, 109.935, 0.4576 ) }
    dend_69 { pt3dadd( 369.535, 480.481, 110.448, 0.483 ) }
    dend_69 { pt3dadd( 369.392, 481.567, 110.319, 0.4068 ) }
    dend_69 { pt3dadd( 368.91, 482.584, 110.433, 0.356 ) }
    dend_69 { pt3dadd( 368.329, 483.556, 110.818, 0.2796 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 61/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 393.802, 324.782, 32.1068, 0.5084 ) }
    dend_60 { pt3dadd( 393.916, 325.271, 31.4188, 0.2796 ) }
    dend_60 { pt3dadd( 394.145, 326.244, 30.0532, 0.3304 ) }
    dend_60 { pt3dadd( 394.463, 326.532, 29.4241, 0.4068 ) }
    dend_60 { pt3dadd( 395.19, 327.191, 27.9854, 0.3814 ) }
    dend_60 { pt3dadd( 395.869, 328.096, 27.7558, 0.3304 ) }
    dend_60 { pt3dadd( 396.485, 329.054, 27.7754, 0.3814 ) }
    dend_60 { pt3dadd( 397.047, 330.049, 27.9563, 0.5084 ) }
    dend_60 { pt3dadd( 397.464, 331.066, 27.7306, 0.6356 ) }
    dend_60 { pt3dadd( 397.609, 332.126, 26.7439, 0.6102 ) }
    dend_60 { pt3dadd( 397.538, 333.116, 26.3192, 0.483 ) }
    dend_60 { pt3dadd( 396.86, 333.905, 27.4817, 0.3814 ) }
    dend_60 { pt3dadd( 396.424, 334.771, 26.7537, 0.4068 ) }
    dend_60 { pt3dadd( 396.09, 335.669, 25.2218, 0.5084 ) }
    dend_60 { pt3dadd( 396.16, 336.746, 24.2953, 0.5338 ) }
    dend_60 { pt3dadd( 396.231, 337.823, 23.3688, 0.4576 ) }
    dend_60 { pt3dadd( 397.022, 338.582, 22.5683, 0.356 ) }
    dend_60 { pt3dadd( 397.457, 339.506, 21.7655, 0.305 ) }
    dend_60 { pt3dadd( 397.523, 340.6, 20.9614, 0.305 ) }
    dend_60 { pt3dadd( 397.936, 341.524, 20.0514, 0.2796 ) }
    dend_60 { pt3dadd( 398.683, 342.285, 19.04, 0.2796 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 82/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 393.802, 324.782, 32.1068, 0.5084 ) }
    dend_59 { pt3dadd( 394.787, 325.164, 31.4014, 0.356 ) }
    dend_59 { pt3dadd( 395.919, 325.3, 31.6252, 0.4322 ) }
    dend_59 { pt3dadd( 397.048, 325.451, 31.8105, 0.4576 ) }
    dend_59 { pt3dadd( 398.135, 325.791, 31.5484, 0.4576 ) }
    dend_59 { pt3dadd( 399.222, 326.132, 31.2861, 0.4068 ) }
    dend_59 { pt3dadd( 400.303, 326.447, 31.7248, 0.4068 ) }
    dend_59 { pt3dadd( 401.385, 326.756, 32.1216, 0.4322 ) }
    dend_59 { pt3dadd( 402.482, 327.023, 31.6672, 0.4068 ) }
    dend_59 { pt3dadd( 403.579, 327.29, 31.2124, 0.3814 ) }
    dend_59 { pt3dadd( 404.543, 327.834, 31.8861, 0.356 ) }
    dend_59 { pt3dadd( 405.476, 328.422, 32.5844, 0.4322 ) }
    dend_59 { pt3dadd( 406.303, 329.167, 33.2368, 0.4576 ) }
    dend_59 { pt3dadd( 406.974, 330.007, 33.735, 0.483 ) }
    dend_59 { pt3dadd( 407.185, 331.131, 33.7831, 0.4576 ) }
    dend_59 { pt3dadd( 407.494, 332.199, 33.7495, 0.483 ) }
    dend_59 { pt3dadd( 408.317, 332.971, 33.287, 0.5084 ) }
    dend_59 { pt3dadd( 409.119, 333.763, 32.8429, 0.483 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_59 { pt3dadd( 409.76, 334.702, 32.5385, 0.3814 ) }
    dend_59 { pt3dadd( 410.345, 335.681, 32.4551, 0.2796 ) }
    dend_59 { pt3dadd( 410.888, 336.686, 32.527, 0.2288 ) }
    dend_59 { pt3dadd( 411.423, 337.679, 32.8558, 0.2542 ) }
    dend_59 { pt3dadd( 411.94, 338.647, 33.6468, 0.2796 ) }
    dend_59 { pt3dadd( 412.665, 339.507, 33.8016, 0.3304 ) }
    dend_59 { pt3dadd( 413.457, 340.332, 33.7487, 0.4068 ) }
    dend_59 { pt3dadd( 413.955, 341.316, 33.5003, 0.483 ) }
    dend_59 { pt3dadd( 414.247, 342.411, 33.1142, 0.5084 ) }
    dend_59 { pt3dadd( 414.936, 343.215, 32.7684, 0.4068 ) }
    dend_59 { pt3dadd( 415.899, 343.818, 32.4506, 0.305 ) }
    dend_59 { pt3dadd( 416.589, 344.633, 32.1418, 0.2796 ) }
    dend_59 { pt3dadd( 416.938, 345.717, 31.8444, 0.3304 ) }
    dend_59 { pt3dadd( 417.313, 346.788, 31.5028, 0.4068 ) }
    dend_59 { pt3dadd( 417.747, 347.83, 31.0596, 0.3814 ) }
    dend_59 { pt3dadd( 418.162, 348.879, 30.6138, 0.356 ) }
    dend_59 { pt3dadd( 418.376, 349.986, 30.147, 0.305 ) }
    dend_59 { pt3dadd( 418.589, 351.094, 29.68, 0.3304 ) }
    // Section: dend_48, id: dend_48, parent: dend_39 (entry count 18/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 390.37, 308.753, 34.8443, 0.7118 ) }
    dend_48 { pt3dadd( 391.354, 307.977, 33.9436, 0.5848 ) }
    dend_48 { pt3dadd( 392.076, 307.171, 33.0355, 0.483 ) }
    dend_48 { pt3dadd( 392.927, 306.495, 33.3077, 0.4068 ) }
    dend_48 { pt3dadd( 393.834, 305.875, 34.0939, 0.4322 ) }
    dend_48 { pt3dadd( 394.603, 305.08, 33.7271, 0.4322 ) }
    dend_48 { pt3dadd( 395.343, 304.247, 33.1041, 0.4576 ) }
    dend_48 { pt3dadd( 396.231, 303.653, 34.1037, 0.4068 ) }
    dend_48 { pt3dadd( 397.12, 303.059, 35.1033, 0.4322 ) }
    dend_48 { pt3dadd( 398.119, 302.548, 34.9801, 0.4068 ) }
    dend_48 { pt3dadd( 399.141, 302.054, 34.6268, 0.4068 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 29/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 390.37, 308.753, 34.8443, 0.7118 ) }
    dend_40 { pt3dadd( 390.876, 307.082, 34.7264, 0.5592 ) }
    dend_40 { pt3dadd( 391.302, 306.023, 34.7648, 0.5848 ) }
    dend_40 { pt3dadd( 391.456, 304.947, 35.6336, 0.6356 ) }
    dend_40 { pt3dadd( 391.61, 303.869, 36.5025, 0.6864 ) }
    dend_40 { pt3dadd( 391.968, 302.793, 36.7637, 0.6356 ) }
    dend_40 { pt3dadd( 392.345, 301.716, 36.9642, 0.6102 ) }
    dend_40 { pt3dadd( 392.064, 300.659, 37.4746, 0.5592 ) }
    dend_40 { pt3dadd( 391.716, 299.6, 38.0024, 0.5084 ) }
    dend_40 { pt3dadd( 391.913, 298.473, 38.0447, 0.3814 ) }
    dend_40 { pt3dadd( 392.081, 297.345, 38.099, 0.356 ) }
    dend_40 { pt3dadd( 392.026, 296.203, 38.2449, 0.4576 ) }
    dend_40 { pt3dadd( 391.971, 295.063, 38.3911, 0.661 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 42/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 320.713, 321.934, 22.2132, 0.5848 ) }
    dend_32 { pt3dadd( 320.173, 321.584, 23.5668, 0.3814 ) }
    dend_32 { pt3dadd( 319.341, 321.081, 25.0432, 0.3304 ) }
    dend_32 { pt3dadd( 318.564, 320.619, 25.5937, 0.4068 ) }
    dend_32 { pt3dadd( 317.951, 320.28, 23.38, 0.4576 ) }
    dend_32 { pt3dadd( 317.127, 320.023, 21.8403, 0.4576 ) }
    dend_32 { pt3dadd( 316.024, 319.87, 21.1912, 0.4068 ) }
    dend_32 { pt3dadd( 314.921, 319.683, 20.762, 0.483 ) }
    dend_32 { pt3dadd( 313.813, 319.402, 20.8978, 0.5848 ) }
    dend_32 { pt3dadd( 312.716, 319.098, 21.0336, 0.661 ) }
    dend_32 { pt3dadd( 311.787, 318.434, 21.1725, 0.5848 ) }
    dend_32 { pt3dadd( 310.844, 317.82, 21.3536, 0.5592 ) }
    dend_32 { pt3dadd( 309.736, 317.831, 22.0447, 0.5338 ) }
    dend_32 { pt3dadd( 308.627, 317.841, 22.736, 0.5592 ) }
    dend_32 { pt3dadd( 307.602, 318.29, 22.3899, 0.483 ) }
    dend_32 { pt3dadd( 306.585, 318.783, 21.9453, 0.483 ) }
    dend_32 { pt3dadd( 305.468, 318.689, 22.0886, 0.483 ) }
    dend_32 { pt3dadd( 304.339, 318.527, 22.2998, 0.5848 ) }
    dend_32 { pt3dadd( 303.339, 318.069, 22.3888, 0.6102 ) }
    dend_32 { pt3dadd( 302.455, 317.341, 22.3675, 0.6356 ) }
    dend_32 { pt3dadd( 301.531, 316.714, 22.381, 0.5592 ) }
    dend_32 { pt3dadd( 300.396, 316.594, 22.57, 0.5848 ) }
    dend_32 { pt3dadd( 299.261, 316.473, 22.7592, 0.5848 ) }
    dend_32 { pt3dadd( 298.12, 316.42, 22.7987, 0.661 ) }
    dend_32 { pt3dadd( 296.976, 316.385, 22.8024, 0.5592 ) }
    dend_32 { pt3dadd( 295.837, 316.356, 22.9552, 0.5084 ) }
    dend_32 { pt3dadd( 294.709, 316.346, 23.4203, 0.4322 ) }
    dend_32 { pt3dadd( 293.593, 316.352, 23.4531, 0.4576 ) }
    dend_32 { pt3dadd( 292.499, 316.388, 22.6349, 0.4322 ) }
    dend_32 { pt3dadd( 291.388, 316.426, 22.1542, 0.4322 ) }
    dend_32 { pt3dadd( 290.247, 316.465, 22.2751, 0.5084 ) }
    dend_32 { pt3dadd( 289.104, 316.497, 22.4006, 0.661 ) }
    dend_32 { pt3dadd( 287.962, 316.474, 22.5616, 0.7626 ) }
    dend_32 { pt3dadd( 286.82, 316.451, 22.7226, 0.7372 ) }
    dend_32 { pt3dadd( 285.685, 316.344, 22.9298, 0.5848 ) }
    dend_32 { pt3dadd( 284.552, 316.216, 23.1468, 0.4576 ) }
    dend_32 { pt3dadd( 283.422, 316.077, 23.4097, 0.3814 ) }
    dend_32 { pt3dadd( 282.296, 315.92, 23.7275, 0.4322 ) }
    dend_32 { pt3dadd( 281.19, 315.996, 23.4811, 0.5084 ) }
    dend_32 { pt3dadd( 280.097, 316.223, 22.8673, 0.6102 ) }
    dend_32 { pt3dadd( 279.003, 316.327, 22.4809, 0.661 ) }
    dend_32 { pt3dadd( 277.904, 316.043, 22.82, 0.6356 ) }
    dend_32 { pt3dadd( 276.805, 315.758, 23.1591, 0.5338 ) }
    dend_32 { pt3dadd( 275.705, 315.504, 22.8301, 0.4322 ) }
    dend_32 { pt3dadd( 274.606, 315.258, 22.342, 0.4322 ) }
    dend_32 { pt3dadd( 273.567, 314.817, 22.0136, 0.5084 ) }
    dend_32 { pt3dadd( 272.552, 314.3, 21.7473, 0.5338 ) }
    dend_32 { pt3dadd( 271.545, 313.87, 22.3224, 0.4576 ) }
    dend_32 { pt3dadd( 270.54, 313.477, 23.2546, 0.3814 ) }
    dend_32 { pt3dadd( 269.457, 313.354, 23.2459, 0.3814 ) }
    dend_32 { pt3dadd( 268.331, 313.375, 22.7455, 0.4576 ) }
    dend_32 { pt3dadd( 267.203, 313.332, 22.622, 0.4576 ) }
    dend_32 { pt3dadd( 266.073, 313.217, 22.9429, 0.483 ) }
    dend_32 { pt3dadd( 264.944, 313.112, 23.2868, 0.483 ) }
    dend_32 { pt3dadd( 263.818, 313.075, 23.791, 0.5848 ) }
    dend_32 { pt3dadd( 262.693, 313.038, 24.2861, 0.6102 ) }
    dend_32 { pt3dadd( 261.551, 313.024, 24.2007, 0.7118 ) }
    dend_32 { pt3dadd( 260.407, 313.01, 24.1153, 0.8136 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_32 { pt3dadd( 259.345, 312.7, 24.332, 0.8898 ) }
    dend_32 { pt3dadd( 258.34, 312.182, 24.761, 0.788 ) }
    dend_32 { pt3dadd( 257.261, 311.94, 24.8422, 0.5592 ) }
    dend_32 { pt3dadd( 256.12, 311.931, 24.6336, 0.4068 ) }
    dend_32 { pt3dadd( 254.977, 311.927, 24.6162, 0.4068 ) }
    dend_32 { pt3dadd( 253.834, 311.925, 24.6977, 0.5338 ) }
    dend_32 { pt3dadd( 252.719, 311.731, 24.953, 0.6102 ) }
    dend_32 { pt3dadd( 251.615, 311.462, 25.2742, 0.6356 ) }
    dend_32 { pt3dadd( 250.512, 311.183, 25.3982, 0.5848 ) }
    dend_32 { pt3dadd( 249.41, 310.888, 25.17, 0.6102 ) }
    dend_32 { pt3dadd( 248.309, 310.593, 24.9418, 0.6356 ) }
    dend_32 { pt3dadd( 247.222, 310.263, 25.2132, 0.661 ) }
    dend_32 { pt3dadd( 246.135, 309.929, 25.5374, 0.6102 ) }
    dend_32 { pt3dadd( 245.218, 309.298, 25.5914, 0.5084 ) }
    dend_32 { pt3dadd( 244.388, 308.51, 25.5038, 0.4576 ) }
    dend_32 { pt3dadd( 243.661, 307.67, 26.0173, 0.4576 ) }
    dend_32 { pt3dadd( 242.972, 306.807, 26.7568, 0.5338 ) }
    dend_32 { pt3dadd( 242.074, 306.163, 27.1835, 0.5338 ) }
    dend_32 { pt3dadd( 241.065, 305.636, 27.4422, 0.483 ) }
    dend_32 { pt3dadd( 240.087, 305.56, 28.2226, 0.4322 ) }
    dend_32 { pt3dadd( 239.141, 305.928, 29.5134, 0.483 ) }
    dend_32 { pt3dadd( 238.096, 306.237, 29.6206, 0.5592 ) }
    dend_32 { pt3dadd( 237.005, 306.518, 29.1449, 0.6102 ) }
    dend_32 { pt3dadd( 235.95, 306.895, 29.1105, 0.5848 ) }
    dend_32 { pt3dadd( 234.942, 307.394, 29.6262, 0.5848 ) }
    dend_32 { pt3dadd( 234.112, 307.672, 31.2766, 0.5338 ) }
    dend_32 { pt3dadd( 233.326, 307.868, 33.2007, 0.5084 ) }
    dend_32 { pt3dadd( 232.271, 307.434, 32.9742, 0.4068 ) }
    dend_32 { pt3dadd( 231.224, 307.091, 32.9031, 0.356 ) }
    dend_32 { pt3dadd( 230.24, 307.443, 34.0404, 0.2796 ) }
    dend_32 { pt3dadd( 229.256, 307.796, 35.1778, 0.2796 ) }
    dend_32 { pt3dadd( 228.45, 308.056, 37.0353, 0.305 ) }
    dend_32 { pt3dadd( 227.668, 308.306, 38.9827, 0.3814 ) }
    dend_32 { pt3dadd( 226.687, 308.729, 39.569, 0.4068 ) }
    dend_32 { pt3dadd( 225.65, 309.205, 39.751, 0.4322 ) }
    dend_32 { pt3dadd( 224.527, 309.16, 39.3042, 0.4068 ) }
    dend_32 { pt3dadd( 223.402, 309.095, 38.831, 0.4576 ) }
    dend_32 { pt3dadd( 222.386, 309.444, 39.1636, 0.4576 ) }
    dend_32 { pt3dadd( 221.421, 309.987, 39.8717, 0.5338 ) }
    dend_32 { pt3dadd( 220.504, 310.565, 40.7434, 0.5084 ) }
    dend_32 { pt3dadd( 219.618, 311.169, 41.7278, 0.483 ) }
    dend_32 { pt3dadd( 218.622, 311.415, 42.0871, 0.4322 ) }
    dend_32 { pt3dadd( 217.497, 311.257, 41.7365, 0.4576 ) }
    dend_32 { pt3dadd( 216.395, 311.125, 41.9152, 0.5848 ) }
    dend_32 { pt3dadd( 215.321, 311.027, 42.8576, 0.6356 ) }
    dend_32 { pt3dadd( 214.26, 310.869, 43.6948, 0.6356 ) }
    dend_32 { pt3dadd( 213.268, 310.3, 43.8108, 0.483 ) }
    dend_32 { pt3dadd( 212.277, 309.731, 43.9267, 0.4576 ) }
    dend_32 { pt3dadd( 211.443, 309.629, 45.428, 0.5084 ) }
    dend_32 { pt3dadd( 210.672, 309.716, 47.4869, 0.6356 ) }
    dend_32 { pt3dadd( 209.765, 310.097, 48.5078, 0.6356 ) }
    dend_32 { pt3dadd( 208.777, 310.649, 48.9252, 0.6102 ) }
    dend_32 { pt3dadd( 207.709, 310.909, 48.4658, 0.6102 ) }
    dend_32 { pt3dadd( 206.617, 311.086, 47.7481, 0.6102 ) }
    dend_32 { pt3dadd( 205.658, 311.563, 47.714, 0.5592 ) }
    dend_32 { pt3dadd( 204.813, 312.299, 48.2706, 0.5084 ) }
    dend_32 { pt3dadd( 203.828, 312.757, 48.7799, 0.5338 ) }
    dend_32 { pt3dadd( 202.719, 312.971, 49.2478, 0.5592 ) }
    dend_32 { pt3dadd( 201.61, 313.183, 49.6882, 0.5848 ) }
    dend_32 { pt3dadd( 200.496, 313.391, 50.0746, 0.6356 ) }
    dend_32 { pt3dadd( 199.392, 313.616, 50.5226, 0.788 ) }
    dend_32 { pt3dadd( 198.353, 313.949, 51.3556, 0.8644 ) }
    dend_32 { pt3dadd( 197.322, 314.315, 52.113, 0.839 ) }
    dend_32 { pt3dadd( 196.37, 314.947, 52.2654, 0.6356 ) }
    dend_32 { pt3dadd( 195.374, 315.486, 52.4779, 0.4576 ) }
    dend_32 { pt3dadd( 194.305, 315.874, 52.7898, 0.305 ) }
    dend_32 { pt3dadd( 193.235, 316.123, 53.317, 0.2796 ) }
    dend_32 { pt3dadd( 192.161, 316.09, 54.2758, 0.3304 ) }
    dend_32 { pt3dadd( 191.087, 316.029, 55.1799, 0.4576 ) }
    dend_32 { pt3dadd( 190.012, 315.651, 55.4478, 0.5338 ) }
    dend_32 { pt3dadd( 188.938, 315.273, 55.7155, 0.5338 ) }
    dend_32 { pt3dadd( 188.141, 314.876, 57.4608, 0.4576 ) }
    dend_32 { pt3dadd( 187.344, 314.522, 59.1172, 0.4068 ) }
    dend_32 { pt3dadd( 186.44, 315.133, 58.273, 0.356 ) }
    dend_32 { pt3dadd( 185.615, 315.699, 58.2837, 0.305 ) }
    dend_32 { pt3dadd( 184.976, 316.162, 60.3117, 0.305 ) }
    dend_32 { pt3dadd( 184.334, 316.758, 61.5717, 0.3814 ) }
    dend_32 { pt3dadd( 183.687, 317.674, 61.0207, 0.483 ) }
    dend_32 { pt3dadd( 183.034, 318.585, 60.4657, 0.5084 ) }
    dend_32 { pt3dadd( 182.125, 319.206, 59.7044, 0.4576 ) }
    dend_32 { pt3dadd( 181.234, 319.826, 59.2217, 0.4576 ) }
    dend_32 { pt3dadd( 180.466, 320.44, 60.6505, 0.5084 ) }
    dend_32 { pt3dadd( 179.677, 321.048, 62.0007, 0.5848 ) }
    dend_32 { pt3dadd( 178.695, 321.583, 62.5932, 0.5848 ) }
    dend_32 { pt3dadd( 177.714, 322.118, 63.1859, 0.5592 ) }
    dend_32 { pt3dadd( 176.919, 322.872, 63.8621, 0.5084 ) }
    dend_32 { pt3dadd( 176.19, 323.705, 64.5683, 0.4576 ) }
    dend_32 { pt3dadd( 175.339, 324.384, 64.969, 0.356 ) }
    dend_32 { pt3dadd( 174.268, 324.779, 64.8147, 0.3304 ) }
    dend_32 { pt3dadd( 173.209, 325.195, 64.7578, 0.356 ) }
    dend_32 { pt3dadd( 172.239, 325.746, 65.3766, 0.4322 ) }
    dend_32 { pt3dadd( 171.247, 326.25, 65.4296, 0.4068 ) }
    dend_32 { pt3dadd( 170.227, 326.697, 64.7836, 0.3814 ) }
    dend_32 { pt3dadd( 169.171, 326.952, 65.0, 0.356 ) }
    dend_32 { pt3dadd( 168.09, 327.062, 65.8708, 0.4576 ) }
    dend_32 { pt3dadd( 166.999, 327.057, 65.8168, 0.483 ) }
    dend_32 { pt3dadd( 165.9, 326.969, 65.0703, 0.5084 ) }
    dend_32 { pt3dadd( 164.863, 327.384, 64.839, 0.3814 ) }
    dend_32 { pt3dadd( 163.838, 327.889, 64.6971, 0.305 ) }
    dend_32 { pt3dadd( 162.735, 327.962, 64.9312, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_32 { pt3dadd( 161.604, 327.881, 65.2991, 0.2542 ) }
    dend_32 { pt3dadd( 160.537, 328.217, 65.4388, 0.2796 ) }
    dend_32 { pt3dadd( 159.487, 328.672, 65.5136, 0.3304 ) }
    dend_32 { pt3dadd( 158.744, 329.054, 63.7518, 0.3304 ) }
    dend_32 { pt3dadd( 158.043, 329.426, 61.7352, 0.3304 ) }
    dend_32 { pt3dadd( 157.248, 329.89, 63.1238, 0.2796 ) }
    dend_32 { pt3dadd( 156.311, 330.2, 64.3157, 0.2542 ) }
    dend_32 { pt3dadd( 155.201, 330.307, 64.944, 0.2542 ) }
    dend_32 { pt3dadd( 154.104, 330.478, 65.6054, 0.3304 ) }
    dend_32 { pt3dadd( 153.02, 330.707, 66.2978, 0.4322 ) }
    dend_32 { pt3dadd( 151.959, 330.974, 67.0981, 0.5338 ) }
    dend_32 { pt3dadd( 150.933, 331.293, 68.0571, 0.5338 ) }
    dend_32 { pt3dadd( 149.879, 331.504, 68.705, 0.483 ) }
    dend_32 { pt3dadd( 148.744, 331.402, 68.4552, 0.356 ) }
    dend_32 { pt3dadd( 147.608, 331.292, 68.3656, 0.2796 ) }
    dend_32 { pt3dadd( 146.471, 331.174, 68.4849, 0.2288 ) }
    dend_32 { pt3dadd( 145.334, 331.083, 68.5868, 0.2796 ) }
    dend_32 { pt3dadd( 144.191, 331.145, 68.5838, 0.3814 ) }
    dend_32 { pt3dadd( 143.056, 331.205, 68.759, 0.5338 ) }
    dend_32 { pt3dadd( 141.937, 331.26, 69.3322, 0.6102 ) }
    dend_32 { pt3dadd( 140.846, 331.329, 69.6472, 0.6102 ) }
    dend_32 { pt3dadd( 139.961, 331.505, 67.9266, 0.5084 ) }
    dend_32 { pt3dadd( 139.084, 331.648, 66.5498, 0.4322 ) }
    dend_32 { pt3dadd( 138.298, 331.467, 68.5339, 0.356 ) }
    dend_32 { pt3dadd( 137.481, 331.292, 70.4066, 0.356 ) }
    dend_32 { pt3dadd( 136.408, 331.175, 71.3392, 0.3304 ) }
    dend_32 { pt3dadd( 135.321, 331.083, 70.9128, 0.356 ) }
    dend_32 { pt3dadd( 134.228, 330.997, 70.1078, 0.3304 ) }
    dend_32 { pt3dadd( 133.951, 330.432, 71.6842, 0.3304 ) }
    dend_32 { pt3dadd( 133.723, 329.819, 73.5991, 0.3304 ) }
    dend_32 { pt3dadd( 132.604, 329.624, 73.9262, 0.4068 ) }
    dend_32 { pt3dadd( 131.485, 329.424, 74.1695, 0.483 ) }
    dend_32 { pt3dadd( 130.362, 329.199, 74.1054, 0.483 ) }
    dend_32 { pt3dadd( 129.273, 328.881, 74.0314, 0.3814 ) }
    dend_32 { pt3dadd( 128.242, 328.384, 73.939, 0.2796 ) }
    dend_32 { pt3dadd( 127.244, 328.084, 73.274, 0.2288 ) }
    dend_32 { pt3dadd( 126.291, 328.091, 71.7251, 0.2288 ) }
    dend_32 { pt3dadd( 125.468, 327.793, 69.9404, 0.2288 ) }
    dend_32 { pt3dadd( 124.71, 327.372, 68.2282, 0.2288 ) }
    dend_32 { pt3dadd( 124.216, 326.463, 67.0286, 0.2288 ) }
    dend_32 { pt3dadd( 123.523, 325.684, 66.4317, 0.2288 ) }
    dend_32 { pt3dadd( 122.555, 325.084, 66.6691, 0.2288 ) }
    dend_32 { pt3dadd( 121.607, 324.591, 67.1611, 0.2288 ) }
    dend_32 { pt3dadd( 120.78, 324.696, 69.0805, 0.2288 ) }
    dend_32 { pt3dadd( 120.051, 324.602, 71.0791, 0.2796 ) }
    dend_32 { pt3dadd( 119.52, 324.105, 73.2385, 0.356 ) }
    dend_32 { pt3dadd( 118.882, 323.662, 75.1307, 0.483 ) }
    dend_32 { pt3dadd( 117.805, 323.439, 75.896, 0.5084 ) }
    dend_32 { pt3dadd( 116.756, 323.131, 76.022, 0.5084 ) }
    dend_32 { pt3dadd( 115.745, 322.701, 75.2298, 0.4068 ) }
    dend_32 { pt3dadd( 114.728, 322.293, 74.4638, 0.4068 ) }
    dend_32 { pt3dadd( 113.592, 322.272, 74.1549, 0.3814 ) }
    dend_32 { pt3dadd( 112.455, 322.251, 73.8464, 0.4322 ) }
    dend_32 { pt3dadd( 111.366, 322.023, 74.4702, 0.3814 ) }
    dend_32 { pt3dadd( 110.273, 321.826, 75.0893, 0.4068 ) }
    dend_32 { pt3dadd( 109.141, 321.877, 75.474, 0.4068 ) }
    dend_32 { pt3dadd( 108.058, 322.17, 75.7109, 0.4576 ) }
    dend_32 { pt3dadd( 107.007, 322.617, 75.8512, 0.4576 ) }
    dend_32 { pt3dadd( 106.004, 322.495, 75.0658, 0.5084 ) }
    dend_32 { pt3dadd( 105.018, 322.15, 73.92, 0.5848 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 60/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 320.713, 321.934, 22.2132, 0.5848 ) }
    dend_31 { pt3dadd( 319.333, 322.707, 22.272, 0.6356 ) }
    dend_31 { pt3dadd( 318.192, 322.718, 22.076, 0.661 ) }
    dend_31 { pt3dadd( 317.053, 322.751, 21.9114, 0.6356 ) }
    dend_31 { pt3dadd( 315.935, 322.99, 22.0114, 0.5338 ) }
    dend_31 { pt3dadd( 314.903, 323.332, 22.0864, 0.483 ) }
    dend_31 { pt3dadd( 314.47, 324.39, 21.9859, 0.4322 ) }
    dend_31 { pt3dadd( 314.037, 325.449, 21.8856, 0.4576 ) }
    dend_31 { pt3dadd( 312.922, 325.539, 22.0534, 0.4576 ) }
    dend_31 { pt3dadd( 311.783, 325.606, 22.2326, 0.5848 ) }
    dend_31 { pt3dadd( 310.651, 325.755, 22.4224, 0.7118 ) }
    dend_31 { pt3dadd( 309.52, 325.904, 22.6122, 0.788 ) }
    dend_31 { pt3dadd( 308.4, 326.106, 22.8939, 0.7118 ) }
    dend_31 { pt3dadd( 307.289, 326.339, 23.2271, 0.6102 ) }
    dend_31 { pt3dadd( 306.169, 326.517, 23.352, 0.5338 ) }
    dend_31 { pt3dadd( 305.035, 326.58, 23.0308, 0.5338 ) }
    dend_31 { pt3dadd( 303.907, 326.723, 22.7769, 0.483 ) }
    dend_31 { pt3dadd( 302.788, 326.947, 22.5924, 0.4576 ) }
    dend_31 { pt3dadd( 301.713, 327.296, 22.3905, 0.5084 ) }
    dend_31 { pt3dadd( 300.698, 327.815, 22.1642, 0.6102 ) }
    dend_31 { pt3dadd( 299.679, 328.326, 21.9274, 0.6356 ) }
    dend_31 { pt3dadd( 298.646, 328.805, 21.6563, 0.5084 ) }
    dend_31 { pt3dadd( 297.614, 329.285, 21.3856, 0.3814 ) }
    dend_31 { pt3dadd( 296.634, 329.851, 21.6283, 0.2796 ) }
    dend_31 { pt3dadd( 295.673, 330.447, 22.05, 0.2796 ) }
    dend_31 { pt3dadd( 294.802, 331.172, 22.0562, 0.3304 ) }
    dend_31 { pt3dadd( 293.973, 331.957, 21.8744, 0.4068 ) }
    dend_31 { pt3dadd( 292.981, 332.506, 21.7459, 0.483 ) }
    dend_31 { pt3dadd( 291.948, 332.997, 21.6308, 0.4576 ) }
    dend_31 { pt3dadd( 290.914, 333.42, 21.2153, 0.4322 ) }
    dend_31 { pt3dadd( 289.877, 333.737, 20.3232, 0.3304 ) }
    dend_31 { pt3dadd( 288.897, 334.2, 20.6587, 0.3304 ) }
    dend_31 { pt3dadd( 287.939, 334.736, 21.4183, 0.3814 ) }
    dend_31 { pt3dadd( 286.979, 335.358, 21.4715, 0.483 ) }
    dend_31 { pt3dadd( 286.034, 335.992, 21.6236, 0.5084 ) }
    dend_31 { pt3dadd( 285.155, 336.68, 22.232, 0.483 ) }
    dend_31 { pt3dadd( 284.275, 337.368, 22.8388, 0.483 ) }
    dend_31 { pt3dadd( 283.285, 337.94, 22.932, 0.5338 ) }
    dend_31 { pt3dadd( 282.297, 338.514, 23.0247, 0.5592 ) }
    dend_31 { pt3dadd( 281.385, 339.205, 23.0569, 0.5592 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_31 { pt3dadd( 280.473, 339.897, 23.0888, 0.5084 ) }
    dend_31 { pt3dadd( 279.793, 340.816, 23.0742, 0.483 ) }
    dend_31 { pt3dadd( 279.111, 341.734, 23.0594, 0.4576 ) }
    dend_31 { pt3dadd( 278.223, 342.448, 23.0185, 0.4576 ) }
    dend_31 { pt3dadd( 277.309, 343.136, 22.974, 0.4576 ) }
    dend_31 { pt3dadd( 276.31, 343.596, 23.609, 0.4322 ) }
    dend_31 { pt3dadd( 275.291, 344.002, 24.404, 0.4068 ) }
    dend_31 { pt3dadd( 274.231, 344.115, 25.2882, 0.356 ) }
    dend_31 { pt3dadd( 273.152, 344.092, 26.2136, 0.3814 ) }
    dend_31 { pt3dadd( 272.203, 344.673, 25.9946, 0.4322 ) }
    dend_31 { pt3dadd( 271.316, 345.382, 25.8583, 0.5592 ) }
    dend_31 { pt3dadd( 270.479, 346.161, 25.9619, 0.5848 ) }
    dend_31 { pt3dadd( 269.604, 346.885, 25.965, 0.5592 ) }
    dend_31 { pt3dadd( 268.609, 347.435, 25.6609, 0.483 ) }
    dend_31 { pt3dadd( 267.576, 347.821, 25.8776, 0.483 ) }
    dend_31 { pt3dadd( 266.497, 348.016, 26.6829, 0.5084 ) }
    dend_31 { pt3dadd( 265.493, 348.445, 27.2672, 0.5084 ) }
    dend_31 { pt3dadd( 264.551, 349.074, 27.6601, 0.483 ) }
    dend_31 { pt3dadd( 263.8, 349.819, 26.7728, 0.4576 ) }
    dend_31 { pt3dadd( 263.081, 350.582, 25.66, 0.4322 ) }
    dend_31 { pt3dadd( 262.113, 351.139, 25.0499, 0.4068 ) }
    dend_31 { pt3dadd( 261.143, 351.687, 24.7926, 0.4068 ) }
    dend_31 { pt3dadd( 260.17, 352.206, 25.5315, 0.4322 ) }
    dend_31 { pt3dadd( 259.196, 352.725, 26.2704, 0.4322 ) }
    dend_31 { pt3dadd( 258.151, 353.177, 26.4309, 0.3814 ) }
    dend_31 { pt3dadd( 257.097, 353.621, 26.5205, 0.356 ) }
    dend_31 { pt3dadd( 256.154, 354.208, 25.9874, 0.3814 ) }
    dend_31 { pt3dadd( 255.244, 354.836, 25.2759, 0.4576 ) }
    dend_31 { pt3dadd( 254.412, 355.567, 25.4069, 0.5084 ) }
    dend_31 { pt3dadd( 253.626, 356.357, 26.0308, 0.5592 ) }
    dend_31 { pt3dadd( 252.65, 356.85, 26.4356, 0.5338 ) }
    dend_31 { pt3dadd( 251.551, 357.149, 26.6986, 0.5338 ) }
    dend_31 { pt3dadd( 250.445, 357.371, 26.6798, 0.483 ) }
    dend_31 { pt3dadd( 249.325, 357.448, 26.1374, 0.5084 ) }
    dend_31 { pt3dadd( 248.225, 357.608, 26.0347, 0.483 ) }
    dend_31 { pt3dadd( 247.162, 357.913, 26.7492, 0.483 ) }
    dend_31 { pt3dadd( 246.155, 358.309, 27.498, 0.4576 ) }
    dend_31 { pt3dadd( 245.362, 359.05, 28.3797, 0.5084 ) }
    dend_31 { pt3dadd( 244.519, 359.787, 28.6938, 0.5848 ) }
    dend_31 { pt3dadd( 243.642, 360.521, 28.6129, 0.6356 ) }
    dend_31 { pt3dadd( 242.715, 361.177, 28.546, 0.6102 ) }
    dend_31 { pt3dadd( 241.688, 361.684, 28.506, 0.5084 ) }
    dend_31 { pt3dadd( 240.676, 362.078, 28.6768, 0.4576 ) }
    dend_31 { pt3dadd( 239.745, 361.789, 30.1409, 0.3814 ) }
    dend_31 { pt3dadd( 238.798, 361.47, 31.4538, 0.4068 ) }
    dend_31 { pt3dadd( 237.783, 361.01, 32.0883, 0.3814 ) }
    dend_31 { pt3dadd( 236.786, 361.243, 31.8637, 0.4068 ) }
    dend_31 { pt3dadd( 235.8, 361.769, 31.2754, 0.356 ) }
    dend_31 { pt3dadd( 234.683, 361.768, 31.2385, 0.3814 ) }
    dend_31 { pt3dadd( 233.543, 361.674, 31.2984, 0.4576 ) }
    dend_31 { pt3dadd( 232.436, 361.415, 31.4216, 0.5848 ) }
    dend_31 { pt3dadd( 231.345, 361.074, 31.5762, 0.6102 ) }
    dend_31 { pt3dadd( 230.291, 361.123, 31.852, 0.5848 ) }
    dend_31 { pt3dadd( 229.277, 361.625, 32.2683, 0.5338 ) }
    dend_31 { pt3dadd( 228.325, 362.229, 32.6536, 0.5338 ) }
    dend_31 { pt3dadd( 227.435, 362.932, 33.0078, 0.483 ) }
    dend_31 { pt3dadd( 226.52, 363.605, 33.3052, 0.4576 ) }
    dend_31 { pt3dadd( 225.548, 364.203, 33.4639, 0.483 ) }
    dend_31 { pt3dadd( 224.572, 364.794, 33.6232, 0.6102 ) }
    dend_31 { pt3dadd( 223.435, 364.884, 33.8232, 0.661 ) }
    dend_31 { pt3dadd( 222.298, 364.974, 34.0231, 0.6356 ) }
    dend_31 { pt3dadd( 221.158, 364.944, 34.2037, 0.5338 ) }
    dend_31 { pt3dadd( 220.019, 364.874, 34.3778, 0.5084 ) }
    dend_31 { pt3dadd( 218.891, 364.957, 34.5783, 0.6102 ) }
    dend_31 { pt3dadd( 217.778, 365.199, 34.8068, 0.7626 ) }
    dend_31 { pt3dadd( 216.707, 365.301, 35.3427, 0.839 ) }
    dend_31 { pt3dadd( 215.757, 365.009, 36.7315, 0.7372 ) }
    dend_31 { pt3dadd( 214.807, 364.719, 38.1203, 0.6356 ) }
    dend_31 { pt3dadd( 213.689, 364.796, 37.6107, 0.5848 ) }
    dend_31 { pt3dadd( 212.568, 364.88, 37.0815, 0.5592 ) }
    dend_31 { pt3dadd( 211.547, 365.144, 37.8602, 0.4322 ) }
    dend_31 { pt3dadd( 210.676, 365.465, 39.2148, 0.305 ) }
    dend_31 { pt3dadd( 210.615, 365.807, 41.8824, 0.2288 ) }
    dend_31 { pt3dadd( 210.307, 366.178, 43.1371, 0.2542 ) }
    dend_31 { pt3dadd( 209.492, 366.611, 41.4834, 0.3814 ) }
    dend_31 { pt3dadd( 208.823, 367.24, 39.9487, 0.5338 ) }
    dend_31 { pt3dadd( 208.323, 368.096, 38.5518, 0.7372 ) }
    dend_31 { pt3dadd( 207.9, 369.019, 38.8839, 0.7372 ) }
    dend_31 { pt3dadd( 207.518, 369.977, 40.0977, 0.7118 ) }
    dend_31 { pt3dadd( 207.032, 370.973, 40.5115, 0.5592 ) }
    dend_31 { pt3dadd( 206.5, 371.985, 40.5714, 0.5084 ) }
    dend_31 { pt3dadd( 205.746, 372.758, 40.2167, 0.4322 ) }
    dend_31 { pt3dadd( 204.792, 373.314, 39.4881, 0.4068 ) }
    dend_31 { pt3dadd( 203.785, 373.793, 39.5058, 0.3814 ) }
    dend_31 { pt3dadd( 202.746, 374.223, 40.0114, 0.4068 ) }
    dend_31 { pt3dadd( 201.764, 374.784, 40.3754, 0.3814 ) }
    dend_31 { pt3dadd( 200.761, 375.304, 40.5944, 0.4322 ) }
    dend_31 { pt3dadd( 199.669, 375.647, 40.614, 0.4322 ) }
    dend_31 { pt3dadd( 198.572, 375.961, 40.6599, 0.5084 ) }
    dend_31 { pt3dadd( 197.437, 376.066, 40.892, 0.4576 ) }
    dend_31 { pt3dadd( 196.304, 376.173, 41.1303, 0.483 ) }
    dend_31 { pt3dadd( 195.493, 376.599, 42.8098, 0.5084 ) }
    dend_31 { pt3dadd( 194.683, 377.025, 44.4889, 0.6356 ) }
    dend_31 { pt3dadd( 194.055, 378.264, 44.5082, 0.5848 ) }
    dend_31 { pt3dadd( 193.481, 379.249, 44.5376, 0.5592 ) }
    dend_31 { pt3dadd( 192.788, 380.159, 44.5953, 0.6356 ) }
    dend_31 { pt3dadd( 192.119, 381.082, 44.7238, 0.661 ) }
    dend_31 { pt3dadd( 191.514, 382.044, 45.0537, 0.6356 ) }
    dend_31 { pt3dadd( 190.743, 382.802, 45.2771, 0.5338 ) }
    dend_31 { pt3dadd( 189.664, 383.184, 45.3037, 0.4576 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_31 { pt3dadd( 188.584, 383.535, 45.3082, 0.4576 ) }
    dend_31 { pt3dadd( 187.465, 383.348, 44.9341, 0.4576 ) }
    dend_31 { pt3dadd( 186.347, 383.161, 44.56, 0.5338 ) }
    dend_31 { pt3dadd( 185.218, 383.136, 44.7605, 0.5338 ) }
    dend_31 { pt3dadd( 184.086, 383.162, 45.1452, 0.5848 ) }
    dend_31 { pt3dadd( 183.0, 383.414, 45.6344, 0.5592 ) }
    dend_31 { pt3dadd( 181.941, 383.783, 46.1793, 0.5338 ) }
    dend_31 { pt3dadd( 180.878, 384.152, 46.6715, 0.4576 ) }
    dend_31 { pt3dadd( 179.805, 384.518, 47.0442, 0.4068 ) }
    dend_31 { pt3dadd( 178.722, 384.827, 47.3556, 0.4322 ) }
    dend_31 { pt3dadd( 177.58, 384.77, 47.2755, 0.483 ) }
    dend_31 { pt3dadd( 176.438, 384.712, 47.1954, 0.5592 ) }
    dend_31 { pt3dadd( 175.317, 384.498, 47.2464, 0.5592 ) }
    dend_31 { pt3dadd( 174.198, 384.256, 47.3203, 0.5592 ) }
    dend_31 { pt3dadd( 173.175, 383.881, 47.9399, 0.5084 ) }
    dend_31 { pt3dadd( 172.219, 383.408, 48.9518, 0.4576 ) }
    dend_31 { pt3dadd( 171.171, 383.443, 49.4108, 0.4068 ) }
    dend_31 { pt3dadd( 170.073, 383.757, 49.565, 0.356 ) }
    dend_31 { pt3dadd( 169.02, 384.083, 50.2659, 0.305 ) }
    dend_31 { pt3dadd( 167.982, 384.413, 51.1146, 0.2796 ) }
    dend_31 { pt3dadd( 166.99, 384.878, 51.3786, 0.3304 ) }
    dend_31 { pt3dadd( 166.055, 385.51, 50.9166, 0.4576 ) }
    dend_31 { pt3dadd( 165.058, 386.018, 50.7522, 0.5592 ) }
    dend_31 { pt3dadd( 163.965, 386.335, 51.0409, 0.5592 ) }
    dend_31 { pt3dadd( 162.926, 386.634, 51.7188, 0.4576 ) }
    dend_31 { pt3dadd( 162.008, 386.897, 53.2608, 0.4068 ) }
    dend_31 { pt3dadd( 161.114, 387.171, 53.1107, 0.4068 ) }
    dend_31 { pt3dadd( 160.242, 387.452, 51.4349, 0.483 ) }
    dend_31 { pt3dadd( 159.153, 387.722, 51.5382, 0.4322 ) }
    dend_31 { pt3dadd( 158.046, 387.991, 51.7877, 0.3814 ) }
    dend_31 { pt3dadd( 157.278, 388.778, 51.2204, 0.2796 ) }
    dend_31 { pt3dadd( 156.543, 389.613, 50.5761, 0.3304 ) }
    dend_31 { pt3dadd( 156.205, 390.528, 51.501, 0.3814 ) }
    dend_31 { pt3dadd( 156.062, 391.469, 52.9799, 0.5084 ) }
    dend_31 { pt3dadd( 156.694, 392.328, 53.9983, 0.5084 ) }
    dend_31 { pt3dadd( 157.325, 393.186, 55.0169, 0.5084 ) }
    dend_31 { pt3dadd( 157.807, 394.184, 55.2793, 0.5084 ) }
    dend_31 { pt3dadd( 158.214, 395.252, 55.16, 0.5592 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 38/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 289.444, 268.561, 144.107, 0.4322 ) }
    dend_26 { pt3dadd( 289.842, 268.712, 144.265, 0.3304 ) }
    dend_26 { pt3dadd( 290.899, 269.115, 144.686, 0.3304 ) }
    dend_26 { pt3dadd( 291.618, 269.794, 144.376, 0.3304 ) }
    dend_26 { pt3dadd( 291.963, 270.785, 143.254, 0.3814 ) }
    dend_26 { pt3dadd( 292.322, 271.787, 142.285, 0.4322 ) }
    dend_26 { pt3dadd( 292.741, 272.842, 141.928, 0.4068 ) }
    dend_26 { pt3dadd( 293.186, 273.866, 141.712, 0.3814 ) }
    dend_26 { pt3dadd( 293.918, 274.538, 143.097, 0.356 ) }
    dend_26 { pt3dadd( 294.6, 275.229, 144.553, 0.3814 ) }
    dend_26 { pt3dadd( 295.136, 275.976, 146.22, 0.3814 ) }
    dend_26 { pt3dadd( 295.561, 276.831, 147.432, 0.4068 ) }
    dend_26 { pt3dadd( 295.696, 277.967, 147.453, 0.4322 ) }
    dend_26 { pt3dadd( 295.828, 279.092, 147.417, 0.4322 ) }
    dend_26 { pt3dadd( 295.915, 279.898, 145.437, 0.4068 ) }
    dend_26 { pt3dadd( 296.023, 280.619, 143.943, 0.3814 ) }
    dend_26 { pt3dadd( 296.305, 280.621, 146.656, 0.4068 ) }
    dend_26 { pt3dadd( 296.302, 280.871, 148.684, 0.4322 ) }
    dend_26 { pt3dadd( 295.575, 281.747, 148.977, 0.483 ) }
    dend_26 { pt3dadd( 295.461, 282.351, 147.115, 0.4576 ) }
    dend_26 { pt3dadd( 295.524, 282.876, 144.632, 0.4576 ) }
    dend_26 { pt3dadd( 295.232, 283.782, 145.55, 0.4068 ) }
    dend_26 { pt3dadd( 294.896, 284.736, 146.852, 0.4576 ) }
    dend_26 { pt3dadd( 294.508, 285.745, 147.773, 0.483 ) }
    dend_26 { pt3dadd( 294.149, 286.763, 148.573, 0.5848 ) }
    dend_26 { pt3dadd( 294.086, 287.888, 148.081, 0.5848 ) }
    dend_26 { pt3dadd( 294.023, 289.012, 147.589, 0.6102 ) }
    dend_26 { pt3dadd( 294.038, 289.928, 149.18, 0.5848 ) }
    dend_26 { pt3dadd( 294.057, 290.832, 150.897, 0.6102 ) }
    dend_26 { pt3dadd( 293.755, 291.553, 152.925, 0.5338 ) }
    dend_26 { pt3dadd( 293.43, 292.262, 154.975, 0.4576 ) }
    dend_26 { pt3dadd( 293.16, 293.326, 155.533, 0.3814 ) }
    dend_26 { pt3dadd( 292.897, 294.427, 155.94, 0.4068 ) }
    dend_26 { pt3dadd( 292.539, 295.369, 157.249, 0.3814 ) }
    dend_26 { pt3dadd( 292.179, 296.307, 158.59, 0.356 ) }
    dend_26 { pt3dadd( 292.306, 297.266, 158.016, 0.2796 ) }
    dend_26 { pt3dadd( 292.616, 298.234, 156.729, 0.2542 ) }
    dend_26 { pt3dadd( 292.182, 299.125, 157.839, 0.2288 ) }
    dend_26 { pt3dadd( 291.853, 300.075, 158.552, 0.2542 ) }
    dend_26 { pt3dadd( 291.918, 301.179, 157.839, 0.305 ) }
    dend_26 { pt3dadd( 292.01, 302.264, 157.033, 0.4068 ) }
    dend_26 { pt3dadd( 292.265, 303.226, 155.657, 0.4576 ) }
    dend_26 { pt3dadd( 292.52, 304.19, 154.28, 0.483 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 81/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 289.444, 268.561, 144.107, 0.4322 ) }
    dend_25 { pt3dadd( 289.774, 268.154, 144.2, 0.4068 ) }
    // Section: dend_13, id: dend_13, parent: dend_7 (entry count 83/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 346.3, 331.671, 48.2532, 0.8644 ) }
    dend_13 { pt3dadd( 344.867, 330.94, 49.8602, 0.7372 ) }
    dend_13 { pt3dadd( 343.845, 330.595, 50.141, 0.8136 ) }
    dend_13 { pt3dadd( 342.741, 330.4, 49.5911, 0.839 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 87/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 346.3, 331.671, 48.2532, 0.8644 ) }
    dend_8 { pt3dadd( 346.71, 332.646, 49.2156, 0.4068 ) }
    dend_8 { pt3dadd( 347.071, 333.657, 50.0696, 0.483 ) }
    dend_8 { pt3dadd( 347.134, 334.796, 50.2303, 0.5848 ) }
    dend_8 { pt3dadd( 347.197, 335.937, 50.391, 0.5848 ) }
    dend_8 { pt3dadd( 346.663, 336.852, 49.4421, 0.6356 ) }
    dend_8 { pt3dadd( 346.1, 337.756, 48.4557, 0.6102 ) }
    dend_8 { pt3dadd( 346.026, 338.853, 49.2265, 0.661 ) }
    dend_8 { pt3dadd( 345.952, 339.95, 49.9974, 0.661 ) }
    dend_8 { pt3dadd( 346.127, 341.022, 50.8522, 0.6356 ) }
    dend_8 { pt3dadd( 346.329, 342.091, 51.7163, 0.5848 ) }
    dend_8 { pt3dadd( 346.652, 343.182, 51.5088, 0.5084 ) }
    dend_8 { pt3dadd( 346.782, 344.279, 51.5085, 0.483 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_8 { pt3dadd( 346.558, 345.385, 51.9588, 0.4068 ) }
    dend_8 { pt3dadd( 346.115, 346.415, 51.7619, 0.3814 ) }
    dend_8 { pt3dadd( 345.591, 347.417, 51.3262, 0.4322 ) }
    dend_8 { pt3dadd( 345.443, 348.485, 51.9436, 0.5338 ) }
    dend_8 { pt3dadd( 345.389, 349.57, 52.8212, 0.5592 ) }
    dend_8 { pt3dadd( 345.171, 350.614, 53.7953, 0.483 ) }
    dend_8 { pt3dadd( 344.885, 351.642, 54.81, 0.4576 ) }
    dend_8 { pt3dadd( 345.206, 352.435, 53.074, 0.483 ) }
    dend_8 { pt3dadd( 345.552, 353.219, 51.219, 0.483 ) }
    dend_8 { pt3dadd( 346.014, 354.222, 51.2406, 0.3814 ) }
    dend_8 { pt3dadd( 346.493, 355.255, 51.5192, 0.2796 ) }
    dend_8 { pt3dadd( 346.776, 356.33, 51.1185, 0.2542 ) }
    dend_8 { pt3dadd( 347.054, 357.248, 51.4419, 0.2796 ) }
    dend_8 { pt3dadd( 347.467, 357.852, 53.5934, 0.3304 ) }
    dend_8 { pt3dadd( 346.991, 358.682, 53.5256, 0.3304 ) }
    dend_8 { pt3dadd( 346.305, 359.564, 52.9298, 0.3814 ) }
    dend_8 { pt3dadd( 345.745, 360.341, 53.8182, 0.4576 ) }
    dend_8 { pt3dadd( 345.271, 361.046, 55.6889, 0.5848 ) }
    // Section: dend_71, id: dend_71, parent: dend_69 (entry count 18/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 368.329, 483.556, 110.818, 0.2796 ) }
    dend_71 { pt3dadd( 368.655, 484.132, 111.088, 0.305 ) }
    dend_71 { pt3dadd( 369.211, 485.114, 111.548, 0.305 ) }
    dend_71 { pt3dadd( 369.768, 486.096, 112.007, 0.3304 ) }
    dend_71 { pt3dadd( 370.324, 487.077, 112.467, 0.3814 ) }
    dend_71 { pt3dadd( 371.233, 487.445, 112.56, 0.4322 ) }
    dend_71 { pt3dadd( 372.325, 487.662, 112.443, 0.4322 ) }
    dend_71 { pt3dadd( 373.457, 487.619, 112.048, 0.3814 ) }
    dend_71 { pt3dadd( 374.563, 487.583, 111.477, 0.356 ) }
    dend_71 { pt3dadd( 375.546, 487.586, 110.042, 0.356 ) }
    dend_71 { pt3dadd( 376.439, 487.78, 110.94, 0.4068 ) }
    dend_71 { pt3dadd( 377.302, 488.04, 112.667, 0.3814 ) }
    dend_71 { pt3dadd( 377.959, 488.414, 114.621, 0.3814 ) }
    dend_71 { pt3dadd( 379.002, 488.17, 113.629, 0.3304 ) }
    dend_71 { pt3dadd( 380.043, 487.925, 112.636, 0.3304 ) }
    dend_71 { pt3dadd( 380.981, 488.256, 113.952, 0.2796 ) }
    dend_71 { pt3dadd( 381.917, 488.6, 115.325, 0.305 ) }
    dend_71 { pt3dadd( 382.9, 488.64, 114.586, 0.3304 ) }
    dend_71 { pt3dadd( 383.897, 488.589, 113.219, 0.4322 ) }
    dend_71 { pt3dadd( 384.938, 488.702, 113.269, 0.4576 ) }
    dend_71 { pt3dadd( 386.005, 488.909, 114.145, 0.483 ) }
    dend_71 { pt3dadd( 387.081, 488.673, 114.771, 0.4068 ) }
    dend_71 { pt3dadd( 388.158, 488.374, 115.36, 0.356 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 41/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 368.329, 483.556, 110.818, 0.2796 ) }
    dend_70 { pt3dadd( 367.043, 483.705, 110.564, 0.356 ) }
    dend_70 { pt3dadd( 365.97, 483.859, 111.115, 0.356 ) }
    dend_70 { pt3dadd( 364.945, 484.034, 112.28, 0.305 ) }
    dend_70 { pt3dadd( 363.963, 484.45, 112.559, 0.2542 ) }
    dend_70 { pt3dadd( 363.016, 485.065, 112.101, 0.2288 ) }
    dend_70 { pt3dadd( 362.075, 485.692, 111.777, 0.2288 ) }
    dend_70 { pt3dadd( 361.151, 486.362, 111.929, 0.2288 ) }
    dend_70 { pt3dadd( 360.225, 487.032, 112.082, 0.2542 ) }
    dend_70 { pt3dadd( 359.487, 487.841, 112.855, 0.305 ) }
    dend_70 { pt3dadd( 358.754, 488.636, 113.197, 0.356 ) }
    dend_70 { pt3dadd( 357.983, 489.359, 112.125, 0.356 ) }
    dend_70 { pt3dadd( 357.177, 489.87, 112.775, 0.305 ) }
    dend_70 { pt3dadd( 356.35, 490.251, 114.47, 0.3304 ) }
    dend_70 { pt3dadd( 355.473, 490.787, 115.376, 0.4322 ) }
    dend_70 { pt3dadd( 354.565, 491.472, 115.659, 0.6102 ) }
    dend_70 { pt3dadd( 353.693, 492.189, 116.101, 0.6356 ) }
    dend_70 { pt3dadd( 352.808, 492.883, 116.578, 0.5592 ) }
    dend_70 { pt3dadd( 351.844, 493.429, 117.28, 0.4068 ) }
    dend_70 { pt3dadd( 350.897, 494.016, 117.763, 0.3814 ) }
    dend_70 { pt3dadd( 350.003, 494.725, 117.587, 0.4322 ) }
    dend_70 { pt3dadd( 349.107, 495.423, 117.525, 0.5084 ) }
    dend_70 { pt3dadd( 348.19, 496.033, 118.291, 0.483 ) }
    dend_70 { pt3dadd( 347.273, 496.642, 119.031, 0.4576 ) }
    dend_70 { pt3dadd( 346.287, 497.222, 118.963, 0.4322 ) }
    dend_70 { pt3dadd( 345.301, 497.802, 118.894, 0.483 ) }
    dend_70 { pt3dadd( 344.791, 498.459, 120.648, 0.4576 ) }
    dend_70 { pt3dadd( 344.343, 499.127, 122.64, 0.4068 ) }
    // Section: dend_56, id: dend_56, parent: dend_48 (entry count 69/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 399.141, 302.054, 34.6268, 0.4068 ) }
    dend_56 { pt3dadd( 399.522, 301.184, 34.6167, 0.3814 ) }
    dend_56 { pt3dadd( 399.945, 300.123, 34.505, 0.3814 ) }
    dend_56 { pt3dadd( 400.368, 299.061, 34.3932, 0.4068 ) }
    dend_56 { pt3dadd( 401.007, 298.203, 33.4522, 0.3304 ) }
    dend_56 { pt3dadd( 401.624, 297.427, 33.4499, 0.2796 ) }
    dend_56 { pt3dadd( 402.168, 296.768, 35.3133, 0.2288 ) }
    dend_56 { pt3dadd( 402.856, 296.154, 35.3234, 0.2288 ) }
    dend_56 { pt3dadd( 403.657, 295.572, 33.9189, 0.2288 ) }
    dend_56 { pt3dadd( 404.486, 294.863, 33.5726, 0.2288 ) }
    dend_56 { pt3dadd( 405.29, 294.074, 33.6563, 0.2542 ) }
    dend_56 { pt3dadd( 405.502, 293.025, 32.6648, 0.2796 ) }
    dend_56 { pt3dadd( 405.756, 291.978, 32.0855, 0.356 ) }
    dend_56 { pt3dadd( 406.136, 290.935, 32.7634, 0.3814 ) }
    dend_56 { pt3dadd( 406.473, 289.915, 32.6007, 0.4322 ) }
    dend_56 { pt3dadd( 406.752, 288.923, 31.3872, 0.3814 ) }
    dend_56 { pt3dadd( 407.138, 287.946, 30.5491, 0.4068 ) }
    dend_56 { pt3dadd( 407.79, 287.008, 30.6505, 0.3814 ) }
    dend_56 { pt3dadd( 408.434, 286.063, 30.7107, 0.4322 ) }
    dend_56 { pt3dadd( 409.044, 285.096, 30.6124, 0.3814 ) }
    dend_56 { pt3dadd( 409.562, 284.099, 30.5183, 0.356 ) }
    dend_56 { pt3dadd( 409.63, 282.958, 30.4436, 0.2796 ) }
    dend_56 { pt3dadd( 409.699, 281.816, 30.3691, 0.2542 ) }
    dend_56 { pt3dadd( 410.074, 280.772, 30.935, 0.2288 ) }
    dend_56 { pt3dadd( 410.494, 279.742, 31.5913, 0.2288 ) }
    dend_56 { pt3dadd( 411.345, 279.034, 31.7596, 0.2288 ) }
    dend_56 { pt3dadd( 412.054, 278.339, 32.2571, 0.2288 ) }
    dend_56 { pt3dadd( 412.055, 277.459, 34.0463, 0.2288 ) }
    dend_56 { pt3dadd( 412.21, 276.541, 34.881, 0.2288 ) }
    dend_56 { pt3dadd( 412.649, 275.558, 33.9455, 0.2796 ) }
    dend_56 { pt3dadd( 412.914, 274.607, 32.6318, 0.3304 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_56 { pt3dadd( 413.033, 273.685, 30.9996, 0.3814 ) }
    dend_56 { pt3dadd( 413.037, 272.665, 30.1274, 0.3304 ) }
    dend_56 { pt3dadd( 412.902, 271.53, 30.1689, 0.3304 ) }
    dend_56 { pt3dadd( 412.455, 270.54, 30.884, 0.3304 ) }
    dend_56 { pt3dadd( 412.18, 269.49, 31.3536, 0.4068 ) }
    dend_56 { pt3dadd( 412.153, 268.347, 31.421, 0.3814 ) }
    dend_56 { pt3dadd( 412.218, 267.212, 31.579, 0.356 ) }
    dend_56 { pt3dadd( 412.412, 266.091, 31.8643, 0.305 ) }
    dend_56 { pt3dadd( 412.576, 264.973, 31.6002, 0.356 ) }
    dend_56 { pt3dadd( 412.728, 263.856, 31.129, 0.4068 ) }
    dend_56 { pt3dadd( 413.031, 262.798, 31.1713, 0.4322 ) }
    dend_56 { pt3dadd( 413.547, 261.826, 31.9354, 0.356 ) }
    dend_56 { pt3dadd( 414.16, 260.882, 32.3512, 0.356 ) }
    dend_56 { pt3dadd( 414.519, 259.863, 32.2675, 0.4322 ) }
    dend_56 { pt3dadd( 414.525, 258.737, 31.7736, 0.5592 ) }
    dend_56 { pt3dadd( 414.554, 257.616, 31.2404, 0.5338 ) }
    dend_56 { pt3dadd( 414.701, 256.523, 30.5046, 0.4322 ) }
    dend_56 { pt3dadd( 414.994, 255.482, 30.2856, 0.3304 ) }
    dend_56 { pt3dadd( 415.531, 254.522, 30.9602, 0.305 ) }
    dend_56 { pt3dadd( 415.803, 253.411, 30.8706, 0.2796 ) }
    dend_56 { pt3dadd( 416.091, 252.308, 30.7538, 0.305 ) }
    dend_56 { pt3dadd( 416.59, 251.296, 30.294, 0.3304 ) }
    dend_56 { pt3dadd( 417.088, 250.283, 29.8393, 0.4068 ) }
    dend_56 { pt3dadd( 417.267, 249.186, 30.5049, 0.3814 ) }
    dend_56 { pt3dadd( 417.447, 248.09, 31.1704, 0.356 ) }
    dend_56 { pt3dadd( 417.71, 246.987, 31.4577, 0.2796 ) }
    dend_56 { pt3dadd( 417.999, 245.882, 31.6193, 0.2542 ) }
    dend_56 { pt3dadd( 418.026, 244.739, 31.733, 0.2288 ) }
    dend_56 { pt3dadd( 418.053, 243.596, 31.8466, 0.2542 ) }
    dend_56 { pt3dadd( 418.337, 242.537, 31.0741, 0.2796 ) }
    dend_56 { pt3dadd( 418.616, 241.478, 30.5116, 0.3304 ) }
    dend_56 { pt3dadd( 418.824, 240.416, 31.4202, 0.3304 ) }
    dend_56 { pt3dadd( 419.033, 239.355, 32.3285, 0.3304 ) }
    dend_56 { pt3dadd( 419.076, 238.257, 31.6694, 0.2796 ) }
    dend_56 { pt3dadd( 419.107, 237.157, 30.9025, 0.305 ) }
    dend_56 { pt3dadd( 419.147, 236.025, 30.5707, 0.356 ) }
    dend_56 { pt3dadd( 419.189, 234.886, 30.3534, 0.4322 ) }
    dend_56 { pt3dadd( 419.276, 233.75, 30.408, 0.4068 ) }
    dend_56 { pt3dadd( 419.396, 232.617, 30.6611, 0.3304 ) }
    dend_56 { pt3dadd( 419.571, 231.503, 30.7266, 0.2796 ) }
    dend_56 { pt3dadd( 419.969, 230.471, 30.0196, 0.305 ) }
    dend_56 { pt3dadd( 420.365, 229.436, 29.3252, 0.356 ) }
    dend_56 { pt3dadd( 420.611, 228.32, 29.3544, 0.356 ) }
    dend_56 { pt3dadd( 420.857, 227.202, 29.3838, 0.305 ) }
    dend_56 { pt3dadd( 421.075, 226.08, 29.3014, 0.2542 ) }
    dend_56 { pt3dadd( 421.284, 224.956, 29.1861, 0.2796 ) }
    dend_56 { pt3dadd( 421.439, 223.839, 28.8658, 0.356 ) }
    dend_56 { pt3dadd( 421.505, 222.73, 28.194, 0.4322 ) }
    dend_56 { pt3dadd( 421.609, 221.64, 27.7382, 0.4068 ) }
    dend_56 { pt3dadd( 422.015, 220.697, 28.9758, 0.3304 ) }
    dend_56 { pt3dadd( 422.439, 219.747, 29.9502, 0.2542 ) }
    dend_56 { pt3dadd( 422.968, 218.756, 29.4252, 0.2542 ) }
    dend_56 { pt3dadd( 423.264, 218.017, 28.1828, 0.305 ) }
    dend_56 { pt3dadd( 423.082, 217.794, 25.473, 0.4322 ) }
    dend_56 { pt3dadd( 423.365, 217.255, 23.478, 0.5084 ) }
    dend_56 { pt3dadd( 423.965, 216.501, 21.971, 0.5592 ) }
    dend_56 { pt3dadd( 424.989, 216.166, 21.7115, 0.5084 ) }
    dend_56 { pt3dadd( 426.107, 215.923, 21.7286, 0.5338 ) }
    dend_56 { pt3dadd( 427.237, 215.993, 21.7784, 0.6102 ) }
    dend_56 { pt3dadd( 428.371, 216.145, 21.8366, 0.661 ) }
    dend_56 { pt3dadd( 428.819, 215.35, 20.3445, 0.6102 ) }
    dend_56 { pt3dadd( 429.228, 214.5, 18.76, 0.4322 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 62/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 399.141, 302.054, 34.6268, 0.4068 ) }
    dend_49 { pt3dadd( 399.626, 302.057, 35.303, 0.5592 ) }
    dend_49 { pt3dadd( 400.502, 301.492, 36.3384, 0.483 ) }
    dend_49 { pt3dadd( 401.365, 300.859, 37.3332, 0.5338 ) }
    // Section: dend_47, id: dend_47, parent: dend_40 (entry count 66/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 391.971, 295.063, 38.3911, 0.661 ) }
    dend_47 { pt3dadd( 392.497, 294.77, 39.5937, 0.2796 ) }
    dend_47 { pt3dadd( 393.272, 294.337, 41.363, 0.2542 ) }
    dend_47 { pt3dadd( 394.046, 293.906, 43.1323, 0.2288 ) }
    dend_47 { pt3dadd( 394.821, 293.475, 44.9014, 0.2288 ) }
    dend_47 { pt3dadd( 395.595, 293.044, 46.6704, 0.2288 ) }
    dend_47 { pt3dadd( 396.551, 292.551, 47.5093, 0.2288 ) }
    dend_47 { pt3dadd( 397.54, 292.045, 48.151, 0.2542 ) }
    dend_47 { pt3dadd( 398.022, 291.466, 46.0432, 0.2796 ) }
    dend_47 { pt3dadd( 398.613, 290.949, 44.0964, 0.305 ) }
    dend_47 { pt3dadd( 399.527, 290.616, 42.623, 0.2796 ) }
    dend_47 { pt3dadd( 400.345, 289.991, 42.2013, 0.2796 ) }
    dend_47 { pt3dadd( 401.088, 289.137, 42.6048, 0.305 ) }
    dend_47 { pt3dadd( 402.021, 288.606, 43.0685, 0.356 ) }
    dend_47 { pt3dadd( 402.974, 288.145, 43.5173, 0.356 ) }
    dend_47 { pt3dadd( 403.576, 287.18, 43.8035, 0.305 ) }
    dend_47 { pt3dadd( 404.476, 286.529, 43.7861, 0.2542 ) }
    dend_47 { pt3dadd( 405.486, 285.992, 43.6587, 0.2542 ) }
    dend_47 { pt3dadd( 406.373, 285.302, 44.1297, 0.305 ) }
    dend_47 { pt3dadd( 407.249, 284.599, 44.6527, 0.356 ) }
    dend_47 { pt3dadd( 408.174, 284.427, 43.3031, 0.3814 ) }
    dend_47 { pt3dadd( 409.115, 284.251, 43.0595, 0.356 ) }
    dend_47 { pt3dadd( 410.069, 283.98, 44.4542, 0.4068 ) }
    dend_47 { pt3dadd( 411.084, 284.307, 45.2004, 0.4322 ) }
    dend_47 { pt3dadd( 412.141, 284.654, 45.6151, 0.5338 ) }
    dend_47 { pt3dadd( 413.278, 284.77, 45.4913, 0.5084 ) }
    dend_47 { pt3dadd( 414.336, 285.125, 45.6389, 0.5084 ) }
    dend_47 { pt3dadd( 415.334, 285.665, 45.9981, 0.4068 ) }
    dend_47 { pt3dadd( 416.262, 285.696, 46.8784, 0.356 ) }
    dend_47 { pt3dadd( 417.12, 285.205, 48.2905, 0.305 ) }
    dend_47 { pt3dadd( 418.073, 284.879, 49.5278, 0.3304 ) }
    dend_47 { pt3dadd( 419.114, 284.705, 50.6066, 0.3814 ) }
    dend_47 { pt3dadd( 420.155, 284.4, 51.0213, 0.4322 ) }
    dend_47 { pt3dadd( 421.193, 283.942, 50.6733, 0.4322 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_47 { pt3dadd( 421.764, 284.393, 52.0447, 0.356 ) }
    dend_47 { pt3dadd( 422.245, 285.056, 53.9028, 0.2796 ) }
    dend_47 { pt3dadd( 423.193, 285.158, 55.4487, 0.2542 ) }
    dend_47 { pt3dadd( 424.139, 285.371, 56.7549, 0.3304 ) }
    dend_47 { pt3dadd( 425.072, 286.015, 57.1416, 0.4576 ) }
    dend_47 { pt3dadd( 426.058, 286.347, 57.5224, 0.5338 ) }
    dend_47 { pt3dadd( 427.151, 286.049, 57.8914, 0.5338 ) }
    dend_47 { pt3dadd( 428.178, 285.816, 58.9338, 0.4322 ) }
    dend_47 { pt3dadd( 429.189, 285.596, 60.13, 0.356 ) }
    dend_47 { pt3dadd( 430.26, 285.542, 61.0666, 0.305 ) }
    dend_47 { pt3dadd( 431.327, 285.423, 61.943, 0.3304 ) }
    dend_47 { pt3dadd( 432.353, 285.086, 62.8622, 0.4068 ) }
    dend_47 { pt3dadd( 433.164, 285.484, 63.9125, 0.483 ) }
    dend_47 { pt3dadd( 433.892, 286.263, 64.8732, 0.5084 ) }
    dend_47 { pt3dadd( 434.724, 287.033, 65.256, 0.4322 ) }
    dend_47 { pt3dadd( 435.776, 287.2, 65.1014, 0.356 ) }
    dend_47 { pt3dadd( 436.895, 287.185, 65.0017, 0.3304 ) }
    dend_47 { pt3dadd( 437.953, 287.341, 65.9994, 0.356 ) }
    dend_47 { pt3dadd( 438.999, 287.297, 66.8027, 0.4068 ) }
    dend_47 { pt3dadd( 440.017, 286.797, 67.1639, 0.4322 ) }
    dend_47 { pt3dadd( 441.028, 286.42, 67.935, 0.483 ) }
    dend_47 { pt3dadd( 442.033, 286.166, 69.1253, 0.4576 ) }
    dend_47 { pt3dadd( 442.974, 286.12, 70.5051, 0.4068 ) }
    dend_47 { pt3dadd( 443.799, 286.47, 72.2481, 0.305 ) }
    dend_47 { pt3dadd( 444.657, 286.738, 73.7971, 0.305 ) }
    dend_47 { pt3dadd( 445.756, 286.432, 74.0026, 0.3304 ) }
    dend_47 { pt3dadd( 446.856, 286.126, 74.2078, 0.4322 ) }
    dend_47 { pt3dadd( 447.928, 286.469, 74.5956, 0.483 ) }
    dend_47 { pt3dadd( 448.961, 286.908, 74.9297, 0.5338 ) }
    dend_47 { pt3dadd( 449.841, 287.637, 75.0154, 0.483 ) }
    dend_47 { pt3dadd( 450.688, 287.721, 75.2284, 0.4322 ) }
    dend_47 { pt3dadd( 451.488, 286.918, 75.6165, 0.4322 ) }
    dend_47 { pt3dadd( 452.286, 286.114, 76.0043, 0.483 ) }
    dend_47 { pt3dadd( 452.538, 285.717, 77.126, 0.3814 ) }
    dend_47 { pt3dadd( 452.984, 285.018, 78.9894, 0.3814 ) }
    dend_47 { pt3dadd( 453.641, 284.118, 78.3572, 0.356 ) }
    dend_47 { pt3dadd( 454.202, 283.176, 78.0626, 0.305 ) }
    dend_47 { pt3dadd( 454.472, 282.107, 78.8049, 0.2796 ) }
    dend_47 { pt3dadd( 455.096, 281.623, 80.2332, 0.305 ) }
    dend_47 { pt3dadd( 455.943, 281.51, 82.0966, 0.3814 ) }
    dend_47 { pt3dadd( 456.669, 281.3, 84.1708, 0.4068 ) }
    dend_47 { pt3dadd( 457.326, 281.035, 86.3696, 0.3814 ) }
    dend_47 { pt3dadd( 457.988, 280.197, 85.4927, 0.305 ) }
    dend_47 { pt3dadd( 458.645, 279.366, 84.4973, 0.2542 ) }
    dend_47 { pt3dadd( 459.191, 278.987, 82.2195, 0.2542 ) }
    dend_47 { pt3dadd( 459.961, 278.499, 82.3231, 0.3304 ) }
    dend_47 { pt3dadd( 460.739, 277.989, 83.7794, 0.4068 ) }
    dend_47 { pt3dadd( 461.06, 277.622, 86.3136, 0.4322 ) }
    dend_47 { pt3dadd( 461.717, 277.235, 88.0169, 0.356 ) }
    dend_47 { pt3dadd( 462.73, 276.823, 88.8429, 0.2796 ) }
    dend_47 { pt3dadd( 463.795, 276.499, 89.3788, 0.2288 ) }
    dend_47 { pt3dadd( 464.7, 275.944, 89.9808, 0.2796 ) }
    dend_47 { pt3dadd( 465.44, 275.146, 90.8379, 0.3304 ) }
    dend_47 { pt3dadd( 466.134, 274.576, 92.5039, 0.4322 ) }
    dend_47 { pt3dadd( 466.818, 274.059, 94.3578, 0.4322 ) }
    dend_47 { pt3dadd( 467.542, 273.362, 95.6018, 0.4322 ) }
    dend_47 { pt3dadd( 468.294, 272.632, 96.6148, 0.3304 ) }
    dend_47 { pt3dadd( 469.263, 272.623, 98.1067, 0.2796 ) }
    dend_47 { pt3dadd( 470.253, 272.598, 99.3745, 0.2288 ) }
    dend_47 { pt3dadd( 471.388, 272.472, 99.183, 0.2288 ) }
    dend_47 { pt3dadd( 472.263, 272.748, 100.309, 0.2542 ) }
    dend_47 { pt3dadd( 472.937, 273.226, 102.21, 0.3304 ) }
    dend_47 { pt3dadd( 473.408, 273.718, 104.46, 0.4068 ) }
    dend_47 { pt3dadd( 473.853, 274.395, 106.11, 0.4322 ) }
    dend_47 { pt3dadd( 474.241, 275.458, 106.52, 0.356 ) }
    dend_47 { pt3dadd( 474.522, 276.555, 106.79, 0.3304 ) }
    dend_47 { pt3dadd( 474.695, 277.684, 106.919, 0.3304 ) }
    dend_47 { pt3dadd( 475.434, 278.503, 106.95, 0.4068 ) }
    dend_47 { pt3dadd( 476.298, 279.253, 106.958, 0.3814 ) }
    dend_47 { pt3dadd( 476.613, 280.245, 107.751, 0.4068 ) }
    dend_47 { pt3dadd( 476.787, 281.3, 108.747, 0.4068 ) }
    dend_47 { pt3dadd( 477.017, 281.343, 110.76, 0.4576 ) }
    dend_47 { pt3dadd( 477.276, 280.899, 113.261, 0.4576 ) }
    dend_47 { pt3dadd( 478.262, 280.412, 114.033, 0.483 ) }
    dend_47 { pt3dadd( 479.223, 280.035, 115.114, 0.5084 ) }
    dend_47 { pt3dadd( 480.14, 279.845, 116.719, 0.5338 ) }
    dend_47 { pt3dadd( 480.711, 279.29, 118.52, 0.483 ) }
    dend_47 { pt3dadd( 481.101, 278.547, 120.422, 0.4322 ) }
    dend_47 { pt3dadd( 481.47, 277.78, 122.294, 0.3304 ) }
    dend_47 { pt3dadd( 481.837, 277.013, 124.165, 0.2796 ) }
    dend_47 { pt3dadd( 480.9, 276.468, 124.691, 0.2542 ) }
    dend_47 { pt3dadd( 479.907, 275.933, 125.16, 0.2796 ) }
    // Section: dend_46, id: dend_46, parent: dend_40 (entry count 82/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 391.971, 295.063, 38.3911, 0.661 ) }
    dend_46 { pt3dadd( 392.211, 293.881, 40.572, 0.661 ) }
    dend_46 { pt3dadd( 392.557, 293.049, 42.1207, 0.7372 ) }
    dend_46 { pt3dadd( 392.711, 292.007, 43.2135, 0.7118 ) }
    dend_46 { pt3dadd( 392.62, 291.012, 44.0658, 0.6102 ) }
    dend_46 { pt3dadd( 391.885, 290.14, 44.2876, 0.5084 ) }
    dend_46 { pt3dadd( 391.459, 289.346, 45.1035, 0.4068 ) }
    dend_46 { pt3dadd( 391.773, 288.745, 47.3561, 0.3304 ) }
    dend_46 { pt3dadd( 392.099, 287.957, 48.9922, 0.2796 ) }
    dend_46 { pt3dadd( 392.441, 286.913, 49.7658, 0.3304 ) }
    dend_46 { pt3dadd( 392.988, 285.948, 50.0861, 0.4068 ) }
    dend_46 { pt3dadd( 393.693, 285.048, 50.0587, 0.4322 ) }
    dend_46 { pt3dadd( 394.53, 284.318, 50.4787, 0.356 ) }
    dend_46 { pt3dadd( 395.443, 283.686, 51.1493, 0.2796 ) }
    dend_46 { pt3dadd( 396.34, 283.019, 51.7555, 0.2288 ) }
    dend_46 { pt3dadd( 397.187, 282.339, 51.5724, 0.2288 ) }
    dend_46 { pt3dadd( 397.604, 281.648, 52.1234, 0.2288 ) }
    dend_46 { pt3dadd( 397.648, 280.953, 54.3441, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_46 { pt3dadd( 398.466, 280.905, 54.6613, 0.2288 ) }
    dend_46 { pt3dadd( 399.145, 280.768, 55.5797, 0.2288 ) }
    dend_46 { pt3dadd( 399.326, 280.243, 58.0289, 0.2288 ) }
    dend_46 { pt3dadd( 399.42, 279.57, 60.2624, 0.2288 ) }
    dend_46 { pt3dadd( 399.498, 278.856, 62.4299, 0.2542 ) }
    dend_46 { pt3dadd( 399.922, 278.419, 64.7993, 0.2796 ) }
    dend_46 { pt3dadd( 400.254, 277.911, 66.8702, 0.305 ) }
    dend_46 { pt3dadd( 399.848, 276.848, 66.5904, 0.305 ) }
    dend_46 { pt3dadd( 399.546, 275.8, 66.6072, 0.3304 ) }
    dend_46 { pt3dadd( 399.729, 274.827, 68.0095, 0.356 ) }
    dend_46 { pt3dadd( 399.795, 273.812, 69.1989, 0.356 ) }
    dend_46 { pt3dadd( 399.671, 272.727, 70.04, 0.305 ) }
    dend_46 { pt3dadd( 399.745, 271.623, 70.5617, 0.2542 ) }
    dend_46 { pt3dadd( 399.904, 270.504, 70.8294, 0.2288 ) }
    dend_46 { pt3dadd( 399.739, 269.374, 70.9677, 0.2288 ) }
    dend_46 { pt3dadd( 399.311, 268.435, 71.7447, 0.2288 ) }
    dend_46 { pt3dadd( 398.613, 267.707, 72.9943, 0.2288 ) }
    dend_46 { pt3dadd( 397.637, 267.248, 73.9217, 0.2288 ) }
    dend_46 { pt3dadd( 396.636, 266.845, 74.8546, 0.2288 ) }
    dend_46 { pt3dadd( 395.634, 266.448, 75.7887, 0.2288 ) }
    dend_46 { pt3dadd( 395.214, 265.641, 77.331, 0.2288 ) }
    dend_46 { pt3dadd( 394.882, 264.773, 78.9639, 0.2542 ) }
    dend_46 { pt3dadd( 393.832, 264.47, 78.5926, 0.305 ) }
    dend_46 { pt3dadd( 392.974, 264.007, 79.4167, 0.4068 ) }
    dend_46 { pt3dadd( 392.266, 263.419, 81.079, 0.4576 ) }
    dend_46 { pt3dadd( 391.266, 263.122, 81.5618, 0.4576 ) }
    dend_46 { pt3dadd( 390.135, 262.96, 81.5066, 0.3814 ) }
    dend_46 { pt3dadd( 389.154, 262.702, 82.4314, 0.3304 ) }
    dend_46 { pt3dadd( 388.296, 262.378, 84.0823, 0.305 ) }
    dend_46 { pt3dadd( 388.063, 262.086, 86.7289, 0.2796 ) }
    dend_46 { pt3dadd( 387.288, 261.935, 87.267, 0.2542 ) }
    dend_46 { pt3dadd( 386.185, 261.868, 86.539, 0.2288 ) }
    dend_46 { pt3dadd( 385.23, 261.609, 87.4283, 0.2288 ) }
    dend_46 { pt3dadd( 384.297, 261.325, 88.8364, 0.2796 ) }
    dend_46 { pt3dadd( 383.213, 261.263, 89.712, 0.3304 ) }
    dend_46 { pt3dadd( 382.128, 261.202, 90.5873, 0.3814 ) }
    dend_46 { pt3dadd( 381.042, 261.137, 91.4581, 0.3304 ) }
    dend_46 { pt3dadd( 379.957, 261.073, 92.3286, 0.2796 ) }
    dend_46 { pt3dadd( 378.891, 261.458, 92.5641, 0.2288 ) }
    dend_46 { pt3dadd( 377.824, 261.865, 92.7682, 0.2542 ) }
    dend_46 { pt3dadd( 376.78, 261.521, 93.3153, 0.2796 ) }
    dend_46 { pt3dadd( 375.738, 261.112, 93.8913, 0.305 ) }
    dend_46 { pt3dadd( 374.645, 260.892, 94.4465, 0.2796 ) }
    dend_46 { pt3dadd( 373.533, 260.743, 94.9936, 0.2542 ) }
    dend_46 { pt3dadd( 372.599, 260.189, 95.4741, 0.2542 ) }
    dend_46 { pt3dadd( 371.744, 259.46, 95.9451, 0.305 ) }
    dend_46 { pt3dadd( 370.893, 259.361, 97.8001, 0.356 ) }
    dend_46 { pt3dadd( 370.085, 258.912, 99.008, 0.356 ) }
    dend_46 { pt3dadd( 369.323, 258.083, 99.5056, 0.305 ) }
    dend_46 { pt3dadd( 368.449, 257.66, 100.677, 0.2796 ) }
    dend_46 { pt3dadd( 367.515, 257.456, 102.212, 0.2796 ) }
    dend_46 { pt3dadd( 366.452, 257.642, 102.915, 0.305 ) }
    dend_46 { pt3dadd( 365.361, 257.91, 103.388, 0.2796 ) }
    dend_46 { pt3dadd( 364.258, 258.089, 102.79, 0.2542 ) }
    dend_46 { pt3dadd( 363.271, 258.378, 103.41, 0.2288 ) }
    dend_46 { pt3dadd( 362.362, 258.741, 104.861, 0.2288 ) }
    dend_46 { pt3dadd( 361.292, 258.893, 105.453, 0.2288 ) }
    dend_46 { pt3dadd( 360.154, 258.955, 105.672, 0.2288 ) }
    dend_46 { pt3dadd( 359.014, 259.003, 105.866, 0.2288 ) }
    dend_46 { pt3dadd( 357.871, 259.005, 105.978, 0.2288 ) }
    dend_46 { pt3dadd( 356.728, 259.009, 106.091, 0.2288 ) }
    dend_46 { pt3dadd( 355.632, 259.262, 106.409, 0.2288 ) }
    dend_46 { pt3dadd( 354.552, 259.604, 106.8, 0.2288 ) }
    dend_46 { pt3dadd( 353.689, 260.15, 107.648, 0.2288 ) }
    dend_46 { pt3dadd( 353.09, 260.938, 109.047, 0.2288 ) }
    dend_46 { pt3dadd( 352.376, 261.658, 110.216, 0.2288 ) }
    dend_46 { pt3dadd( 351.434, 262.238, 110.923, 0.2288 ) }
    dend_46 { pt3dadd( 350.499, 262.836, 111.598, 0.2288 ) }
    dend_46 { pt3dadd( 349.59, 263.488, 112.187, 0.2288 ) }
    dend_46 { pt3dadd( 348.71, 264.179, 112.757, 0.2288 ) }
    dend_46 { pt3dadd( 347.846, 264.893, 113.314, 0.2288 ) }
    dend_46 { pt3dadd( 347.231, 265.787, 113.963, 0.2542 ) }
    dend_46 { pt3dadd( 346.777, 266.797, 114.671, 0.2796 ) }
    dend_46 { pt3dadd( 346.227, 267.696, 115.575, 0.305 ) }
    dend_46 { pt3dadd( 345.47, 268.359, 116.903, 0.2796 ) }
    dend_46 { pt3dadd( 344.666, 268.996, 118.026, 0.2542 ) }
    dend_46 { pt3dadd( 343.639, 269.5, 118.163, 0.2542 ) }
    dend_46 { pt3dadd( 342.683, 270.082, 118.451, 0.305 ) }
    dend_46 { pt3dadd( 341.913, 270.879, 119.153, 0.356 ) }
    dend_46 { pt3dadd( 341.251, 271.544, 117.612, 0.356 ) }
    dend_46 { pt3dadd( 340.743, 272.326, 117.181, 0.3304 ) }
    dend_46 { pt3dadd( 340.461, 273.286, 118.537, 0.305 ) }
    dend_46 { pt3dadd( 339.915, 274.161, 119.56, 0.305 ) }
    dend_46 { pt3dadd( 339.174, 274.973, 120.338, 0.2796 ) }
    dend_46 { pt3dadd( 338.375, 275.758, 120.689, 0.305 ) }
    dend_46 { pt3dadd( 337.519, 276.517, 120.644, 0.3304 ) }
    dend_46 { pt3dadd( 336.836, 277.388, 120.907, 0.3814 ) }
    dend_46 { pt3dadd( 336.368, 278.398, 121.554, 0.3304 ) }
    dend_46 { pt3dadd( 335.739, 279.289, 121.697, 0.2796 ) }
    dend_46 { pt3dadd( 334.887, 280.018, 121.144, 0.2288 ) }
    dend_46 { pt3dadd( 334.048, 280.69, 121.206, 0.2288 ) }
    dend_46 { pt3dadd( 333.243, 281.226, 122.698, 0.2542 ) }
    dend_46 { pt3dadd( 332.394, 281.795, 123.74, 0.305 ) }
    dend_46 { pt3dadd( 331.448, 282.436, 123.759, 0.356 ) }
    dend_46 { pt3dadd( 330.566, 283.137, 123.937, 0.356 ) }
    dend_46 { pt3dadd( 329.651, 283.58, 124.531, 0.305 ) }
    dend_46 { pt3dadd( 328.619, 283.83, 124.783, 0.2542 ) }
    dend_46 { pt3dadd( 327.854, 284.619, 124.254, 0.2542 ) }
    dend_46 { pt3dadd( 326.77, 284.95, 124.632, 0.2796 ) }
    dend_46 { pt3dadd( 325.764, 285.339, 125.402, 0.356 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_46 { pt3dadd( 324.867, 285.806, 126.709, 0.3814 ) }
    dend_46 { pt3dadd( 324.066, 286.242, 128.35, 0.4322 ) }
    dend_46 { pt3dadd( 323.347, 286.653, 130.283, 0.3814 ) }
    dend_46 { pt3dadd( 322.485, 287.151, 131.444, 0.356 ) }
    dend_46 { pt3dadd( 321.519, 287.713, 132.041, 0.3304 ) }
    dend_46 { pt3dadd( 320.682, 288.396, 132.952, 0.356 ) }
    dend_46 { pt3dadd( 319.986, 288.828, 134.454, 0.4576 ) }
    dend_46 { pt3dadd( 319.54, 288.774, 137.03, 0.5338 ) }
    dend_46 { pt3dadd( 318.713, 289.101, 137.141, 0.6102 ) }
    dend_46 { pt3dadd( 317.735, 289.577, 136.277, 0.5338 ) }
    dend_46 { pt3dadd( 316.929, 290.285, 137.228, 0.483 ) }
    dend_46 { pt3dadd( 316.054, 290.955, 137.911, 0.483 ) }
    dend_46 { pt3dadd( 315.122, 291.592, 138.357, 0.5848 ) }
    dend_46 { pt3dadd( 315.111, 292.473, 136.635, 0.6102 ) }
    dend_46 { pt3dadd( 314.482, 292.167, 138.511, 0.6102 ) }
    dend_46 { pt3dadd( 313.684, 292.149, 139.401, 0.6102 ) }
    dend_46 { pt3dadd( 312.7, 292.632, 138.6, 0.6864 ) }
    dend_46 { pt3dadd( 312.106, 292.688, 140.664, 0.661 ) }
    dend_46 { pt3dadd( 311.545, 292.754, 143.037, 0.5592 ) }
    dend_46 { pt3dadd( 310.823, 293.306, 144.739, 0.3814 ) }
    dend_46 { pt3dadd( 310.1, 293.856, 146.441, 0.305 ) }
    dend_46 { pt3dadd( 309.011, 293.999, 147.213, 0.305 ) }
    dend_46 { pt3dadd( 308.087, 294.119, 147.289, 0.4068 ) }
    dend_46 { pt3dadd( 307.844, 294.151, 144.554, 0.483 ) }
    dend_46 { pt3dadd( 307.6, 294.184, 141.819, 0.5084 ) }
    dend_46 { pt3dadd( 307.028, 294.726, 143.662, 0.4322 ) }
    dend_46 { pt3dadd( 306.371, 295.246, 145.451, 0.3304 ) }
    dend_46 { pt3dadd( 305.307, 295.544, 146.171, 0.2542 ) }
    dend_46 { pt3dadd( 304.552, 296.279, 145.811, 0.2542 ) }
    dend_46 { pt3dadd( 304.177, 297.09, 146.698, 0.2796 ) }
    dend_46 { pt3dadd( 303.988, 297.839, 148.762, 0.305 ) }
    dend_46 { pt3dadd( 303.235, 298.573, 149.518, 0.3304 ) }
    dend_46 { pt3dadd( 302.38, 299.301, 150.042, 0.356 ) }
    dend_46 { pt3dadd( 301.703, 300.129, 149.047, 0.3814 ) }
    dend_46 { pt3dadd( 301.025, 300.958, 148.053, 0.3304 ) }
    dend_46 { pt3dadd( 300.037, 301.384, 148.707, 0.3304 ) }
    dend_46 { pt3dadd( 299.014, 301.769, 149.541, 0.356 ) }
    dend_46 { pt3dadd( 298.14, 302.364, 150.261, 0.4322 ) }
    dend_46 { pt3dadd( 297.486, 303.276, 150.811, 0.4068 ) }
    dend_46 { pt3dadd( 296.731, 304.122, 151.099, 0.356 ) }
    dend_46 { pt3dadd( 296.049, 304.955, 151.815, 0.3304 ) }
    dend_46 { pt3dadd( 295.494, 305.791, 153.16, 0.356 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 42/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 391.971, 295.063, 38.3911, 0.661 ) }
    dend_41 { pt3dadd( 391.349, 293.844, 38.6109, 0.305 ) }
    dend_41 { pt3dadd( 390.864, 292.808, 38.6747, 0.305 ) }
    dend_41 { pt3dadd( 390.356, 291.783, 38.6663, 0.356 ) }
    dend_41 { pt3dadd( 389.848, 290.766, 38.4994, 0.4322 ) }
    dend_41 { pt3dadd( 389.339, 289.77, 37.9154, 0.5592 ) }
    dend_41 { pt3dadd( 388.817, 288.805, 37.2025, 0.6356 ) }
    dend_41 { pt3dadd( 388.222, 288.012, 35.8039, 0.6864 ) }
    dend_41 { pt3dadd( 387.56, 287.261, 34.5839, 0.7118 ) }
    dend_41 { pt3dadd( 386.569, 286.706, 34.2474, 0.7372 ) }
    dend_41 { pt3dadd( 385.577, 286.152, 33.9111, 0.7372 ) }
    // Section: dend_21, id: dend_21, parent: dend_13 (entry count 53/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 342.741, 330.4, 49.5911, 0.839 ) }
    dend_21 { pt3dadd( 343.125, 329.604, 49.6196, 0.2796 ) }
    dend_21 { pt3dadd( 343.563, 328.549, 49.7381, 0.3304 ) }
    dend_21 { pt3dadd( 343.985, 327.486, 49.8184, 0.4322 ) }
    dend_21 { pt3dadd( 344.364, 326.406, 49.7988, 0.5592 ) }
    dend_21 { pt3dadd( 344.758, 325.355, 49.9733, 0.5338 ) }
    dend_21 { pt3dadd( 345.247, 324.466, 51.2686, 0.4322 ) }
    dend_21 { pt3dadd( 345.363, 323.483, 51.7759, 0.3304 ) }
    dend_21 { pt3dadd( 345.059, 322.392, 51.3834, 0.305 ) }
    dend_21 { pt3dadd( 344.639, 321.408, 50.5072, 0.305 ) }
    dend_21 { pt3dadd( 344.153, 320.486, 49.3528, 0.3814 ) }
    dend_21 { pt3dadd( 344.576, 319.674, 49.1994, 0.5084 ) }
    dend_21 { pt3dadd( 345.248, 318.884, 49.8456, 0.6102 ) }
    dend_21 { pt3dadd( 345.336, 318.008, 51.634, 0.5848 ) }
    dend_21 { pt3dadd( 345.359, 317.149, 52.9141, 0.5084 ) }
    dend_21 { pt3dadd( 344.982, 316.388, 51.0367, 0.5084 ) }
    dend_21 { pt3dadd( 344.749, 315.419, 51.6326, 0.5592 ) }
    dend_21 { pt3dadd( 344.55, 314.4, 52.8086, 0.6102 ) }
    dend_21 { pt3dadd( 344.135, 313.406, 53.445, 0.661 ) }
    dend_21 { pt3dadd( 343.54, 312.431, 53.6343, 0.7118 ) }
    dend_21 { pt3dadd( 343.194, 311.504, 54.654, 0.7118 ) }
    dend_21 { pt3dadd( 343.069, 310.62, 56.4026, 0.5592 ) }
    dend_21 { pt3dadd( 342.868, 309.642, 57.2104, 0.4068 ) }
    dend_21 { pt3dadd( 342.578, 308.546, 56.8341, 0.356 ) }
    dend_21 { pt3dadd( 342.256, 307.461, 56.7204, 0.4068 ) }
    dend_21 { pt3dadd( 341.871, 306.397, 57.139, 0.4576 ) }
    dend_21 { pt3dadd( 341.473, 305.336, 57.4918, 0.4322 ) }
    dend_21 { pt3dadd( 341.036, 304.281, 57.6366, 0.4322 ) }
    dend_21 { pt3dadd( 340.599, 303.225, 57.7814, 0.4068 ) }
    dend_21 { pt3dadd( 341.028, 302.349, 56.5958, 0.3814 ) }
    dend_21 { pt3dadd( 341.215, 301.418, 57.2709, 0.305 ) }
    dend_21 { pt3dadd( 341.261, 300.454, 58.7784, 0.305 ) }
    dend_21 { pt3dadd( 341.538, 299.434, 59.7654, 0.356 ) }
    dend_21 { pt3dadd( 341.877, 298.396, 60.6108, 0.4322 ) }
    dend_21 { pt3dadd( 342.123, 297.353, 61.5504, 0.4068 ) }
    dend_21 { pt3dadd( 342.267, 296.302, 62.5954, 0.356 ) }
    dend_21 { pt3dadd( 342.129, 295.203, 62.9588, 0.305 ) }
    dend_21 { pt3dadd( 341.881, 294.088, 63.0538, 0.3304 ) }
    dend_21 { pt3dadd( 341.466, 293.072, 63.8341, 0.3304 ) }
    dend_21 { pt3dadd( 341.006, 292.109, 64.7598, 0.3304 ) }
    dend_21 { pt3dadd( 340.389, 291.339, 66.1783, 0.2796 ) }
    dend_21 { pt3dadd( 339.762, 290.545, 67.4722, 0.2542 ) }
    dend_21 { pt3dadd( 339.117, 289.708, 68.542, 0.2542 ) }
    dend_21 { pt3dadd( 338.57, 288.882, 69.9264, 0.2796 ) }
    dend_21 { pt3dadd( 338.051, 288.059, 71.4, 0.3304 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 98/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 342.741, 330.4, 49.5911, 0.839 ) }
    dend_14 { pt3dadd( 341.347, 330.934, 49.1641, 0.6864 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_14 { pt3dadd( 340.525, 330.407, 50.622, 0.5848 ) }
    dend_14 { pt3dadd( 339.703, 329.879, 52.08, 0.5848 ) }
    // Section: dend_12, id: dend_12, parent: dend_8 (entry count 2/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 345.271, 361.046, 55.6889, 0.5848 ) }
    dend_12 { pt3dadd( 344.725, 360.915, 57.2062, 0.7118 ) }
    dend_12 { pt3dadd( 343.895, 360.675, 59.0411, 0.5084 ) }
    dend_12 { pt3dadd( 343.223, 360.869, 60.662, 0.356 ) }
    dend_12 { pt3dadd( 342.823, 361.811, 61.9156, 0.3304 ) }
    dend_12 { pt3dadd( 342.63, 362.669, 63.5222, 0.356 ) }
    dend_12 { pt3dadd( 342.741, 363.388, 65.6533, 0.4068 ) }
    dend_12 { pt3dadd( 342.814, 362.86, 68.131, 0.4068 ) }
    dend_12 { pt3dadd( 342.931, 362.958, 70.105, 0.4068 ) }
    dend_12 { pt3dadd( 343.115, 363.967, 71.3468, 0.356 ) }
    dend_12 { pt3dadd( 343.519, 364.825, 72.513, 0.3304 ) }
    dend_12 { pt3dadd( 344.483, 365.296, 73.4843, 0.2796 ) }
    dend_12 { pt3dadd( 345.527, 365.414, 74.2196, 0.305 ) }
    dend_12 { pt3dadd( 346.633, 365.27, 74.7328, 0.3304 ) }
    dend_12 { pt3dadd( 347.651, 365.728, 74.8742, 0.3814 ) }
    dend_12 { pt3dadd( 348.427, 366.376, 76.181, 0.3304 ) }
    dend_12 { pt3dadd( 349.269, 366.945, 77.3758, 0.2796 ) }
    dend_12 { pt3dadd( 350.312, 367.261, 78.2233, 0.2288 ) }
    dend_12 { pt3dadd( 350.965, 367.874, 79.6099, 0.2288 ) }
    dend_12 { pt3dadd( 351.365, 368.677, 81.345, 0.2288 ) }
    dend_12 { pt3dadd( 351.623, 369.626, 81.6973, 0.2542 ) }
    dend_12 { pt3dadd( 351.758, 370.705, 80.8259, 0.2796 ) }
    dend_12 { pt3dadd( 352.845, 370.841, 81.5282, 0.305 ) }
    dend_12 { pt3dadd( 353.439, 371.349, 83.0665, 0.2796 ) }
    dend_12 { pt3dadd( 353.733, 372.083, 85.09, 0.2542 ) }
    dend_12 { pt3dadd( 354.589, 372.683, 84.635, 0.2288 ) }
    dend_12 { pt3dadd( 355.519, 373.266, 83.8488, 0.2288 ) }
    dend_12 { pt3dadd( 356.364, 373.67, 85.1122, 0.2288 ) }
    dend_12 { pt3dadd( 357.216, 374.079, 86.5455, 0.2288 ) }
    dend_12 { pt3dadd( 358.185, 374.684, 86.6869, 0.2288 ) }
    dend_12 { pt3dadd( 359.128, 375.322, 86.76, 0.2288 ) }
    dend_12 { pt3dadd( 359.984, 376.072, 86.5808, 0.2288 ) }
    dend_12 { pt3dadd( 361.002, 376.593, 86.5995, 0.2288 ) }
    dend_12 { pt3dadd( 362.02, 377.116, 86.6183, 0.2288 ) }
    dend_12 { pt3dadd( 362.982, 377.716, 86.9523, 0.2288 ) }
    dend_12 { pt3dadd( 363.932, 378.331, 87.3513, 0.2288 ) }
    dend_12 { pt3dadd( 364.909, 378.905, 87.7145, 0.2288 ) }
    dend_12 { pt3dadd( 365.93, 379.404, 88.0144, 0.2288 ) }
    dend_12 { pt3dadd( 366.953, 379.903, 88.3145, 0.2288 ) }
    dend_12 { pt3dadd( 367.928, 380.35, 89.2528, 0.2288 ) }
    dend_12 { pt3dadd( 368.894, 380.79, 90.2916, 0.2288 ) }
    dend_12 { pt3dadd( 369.854, 381.222, 91.3872, 0.2288 ) }
    dend_12 { pt3dadd( 370.8, 381.644, 92.575, 0.2288 ) }
    dend_12 { pt3dadd( 371.746, 382.066, 93.7625, 0.2288 ) }
    dend_12 { pt3dadd( 371.939, 382.777, 95.7625, 0.2288 ) }
    dend_12 { pt3dadd( 372.025, 383.52, 97.8765, 0.2288 ) }
    dend_12 { pt3dadd( 371.999, 384.206, 100.119, 0.2288 ) }
    dend_12 { pt3dadd( 372.028, 384.871, 102.329, 0.2288 ) }
    dend_12 { pt3dadd( 372.834, 385.267, 104.059, 0.2288 ) }
    dend_12 { pt3dadd( 373.642, 385.664, 105.79, 0.2288 ) }
    dend_12 { pt3dadd( 374.508, 385.643, 107.374, 0.2288 ) }
    dend_12 { pt3dadd( 375.42, 385.302, 108.844, 0.2288 ) }
    dend_12 { pt3dadd( 376.295, 384.842, 110.177, 0.2288 ) }
    dend_12 { pt3dadd( 377.104, 384.163, 111.254, 0.2288 ) }
    dend_12 { pt3dadd( 377.914, 383.485, 112.33, 0.2288 ) }
    dend_12 { pt3dadd( 378.896, 382.991, 113.034, 0.2288 ) }
    dend_12 { pt3dadd( 379.911, 382.53, 113.67, 0.2288 ) }
    dend_12 { pt3dadd( 380.988, 382.244, 113.973, 0.2288 ) }
    dend_12 { pt3dadd( 382.126, 382.133, 113.943, 0.2542 ) }
    dend_12 { pt3dadd( 383.264, 382.021, 113.914, 0.2796 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 62/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 345.271, 361.046, 55.6889, 0.5848 ) }
    dend_9 { pt3dadd( 345.826, 362.026, 54.57, 0.356 ) }
    dend_9 { pt3dadd( 345.815, 363.16, 54.2139, 0.305 ) }
    dend_9 { pt3dadd( 345.542, 364.235, 53.8927, 0.2796 ) }
    dend_9 { pt3dadd( 345.04, 365.255, 53.6015, 0.3304 ) }
    dend_9 { pt3dadd( 344.602, 366.297, 53.725, 0.3814 ) }
    dend_9 { pt3dadd( 344.218, 367.356, 54.2167, 0.4576 ) }
    dend_9 { pt3dadd( 343.814, 368.404, 54.7417, 0.483 ) }
    dend_9 { pt3dadd( 343.351, 369.418, 55.3633, 0.4322 ) }
    dend_9 { pt3dadd( 342.999, 370.47, 55.4072, 0.356 ) }
    dend_9 { pt3dadd( 342.773, 371.563, 54.7938, 0.305 ) }
    dend_9 { pt3dadd( 342.564, 372.657, 54.3267, 0.305 ) }
    dend_9 { pt3dadd( 342.477, 373.762, 55.0192, 0.2796 ) }
    dend_9 { pt3dadd( 342.39, 374.867, 55.7116, 0.2796 ) }
    dend_9 { pt3dadd( 342.334, 376.009, 55.7987, 0.305 ) }
    dend_9 { pt3dadd( 342.279, 377.151, 55.865, 0.356 ) }
    dend_9 { pt3dadd( 342.146, 378.284, 55.9196, 0.356 ) }
    dend_9 { pt3dadd( 341.925, 379.406, 55.9608, 0.305 ) }
    dend_9 { pt3dadd( 341.695, 380.525, 55.9992, 0.2796 ) }
    dend_9 { pt3dadd( 341.296, 381.598, 55.9782, 0.2796 ) }
    dend_9 { pt3dadd( 340.905, 382.671, 55.9605, 0.305 ) }
    dend_9 { pt3dadd( 341.078, 383.796, 56.2573, 0.305 ) }
    dend_9 { pt3dadd( 341.251, 384.919, 56.5544, 0.305 ) }
    dend_9 { pt3dadd( 340.906, 386.005, 56.7594, 0.305 ) }
    dend_9 { pt3dadd( 340.552, 387.09, 56.9624, 0.2796 ) }
    dend_9 { pt3dadd( 340.464, 388.223, 57.1858, 0.2542 ) }
    dend_9 { pt3dadd( 340.402, 389.362, 57.4109, 0.2288 ) }
    dend_9 { pt3dadd( 340.527, 390.468, 57.804, 0.2288 ) }
    dend_9 { pt3dadd( 340.86, 391.536, 58.3836, 0.2288 ) }
    dend_9 { pt3dadd( 341.188, 392.613, 58.8328, 0.2288 ) }
    dend_9 { pt3dadd( 341.502, 393.712, 58.9487, 0.2288 ) }
    dend_9 { pt3dadd( 341.818, 394.81, 59.0646, 0.2288 ) }
    dend_9 { pt3dadd( 342.303, 395.825, 59.5311, 0.2288 ) }
    dend_9 { pt3dadd( 342.804, 396.76, 60.3593, 0.2288 ) }
    dend_9 { pt3dadd( 343.271, 397.469, 62.2345, 0.2288 ) }
    dend_9 { pt3dadd( 343.651, 398.27, 63.7456, 0.2288 ) }
    dend_9 { pt3dadd( 343.703, 399.412, 63.9108, 0.2288 ) }
    dend_9 { pt3dadd( 343.757, 400.552, 64.076, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_9 { pt3dadd( 343.668, 401.688, 64.1259, 0.2288 ) }
    dend_9 { pt3dadd( 343.529, 402.824, 64.1343, 0.2542 ) }
    dend_9 { pt3dadd( 343.395, 403.915, 64.6044, 0.2796 ) }
    dend_9 { pt3dadd( 343.271, 404.936, 65.8342, 0.305 ) }
    dend_9 { pt3dadd( 343.2, 405.963, 67.0267, 0.2796 ) }
    dend_9 { pt3dadd( 343.334, 407.016, 68.0756, 0.2542 ) }
    dend_9 { pt3dadd( 343.545, 408.043, 69.1558, 0.2288 ) }
    dend_9 { pt3dadd( 343.893, 409.03, 70.259, 0.2288 ) }
    dend_9 { pt3dadd( 343.996, 410.143, 70.8445, 0.2288 ) }
    dend_9 { pt3dadd( 344.101, 411.258, 71.4302, 0.2288 ) }
    dend_9 { pt3dadd( 344.658, 412.202, 71.2071, 0.2796 ) }
    dend_9 { pt3dadd( 345.148, 413.029, 71.6688, 0.3814 ) }
    dend_9 { pt3dadd( 345.264, 413.724, 73.8732, 0.5592 ) }
    dend_9 { pt3dadd( 345.498, 414.536, 75.4432, 0.6864 ) }
    dend_9 { pt3dadd( 345.963, 415.572, 75.8016, 0.7626 ) }
    dend_9 { pt3dadd( 346.427, 416.607, 76.16, 0.6864 ) }
    dend_9 { pt3dadd( 346.62, 417.496, 76.928, 0.5592 ) }
    dend_9 { pt3dadd( 346.847, 418.553, 77.8411, 0.3814 ) }
    dend_9 { pt3dadd( 347.075, 419.61, 78.7542, 0.2796 ) }
    dend_9 { pt3dadd( 347.304, 420.667, 79.6676, 0.2288 ) }
    dend_9 { pt3dadd( 347.076, 421.629, 80.2113, 0.2288 ) }
    dend_9 { pt3dadd( 346.311, 422.478, 80.3197, 0.2796 ) }
    dend_9 { pt3dadd( 345.488, 423.255, 80.673, 0.3304 ) }
    dend_9 { pt3dadd( 344.637, 423.994, 81.1496, 0.3814 ) }
    dend_9 { pt3dadd( 343.773, 424.632, 82.0904, 0.3304 ) }
    dend_9 { pt3dadd( 342.923, 425.271, 83.1216, 0.356 ) }
    dend_9 { pt3dadd( 342.123, 425.952, 84.2243, 0.4068 ) }
    dend_9 { pt3dadd( 341.534, 426.834, 84.7588, 0.5338 ) }
    dend_9 { pt3dadd( 341.157, 427.914, 84.7328, 0.5338 ) }
    dend_9 { pt3dadd( 340.624, 428.892, 84.6824, 0.483 ) }
    dend_9 { pt3dadd( 339.791, 429.676, 84.5846, 0.3814 ) }
    dend_9 { pt3dadd( 339.25, 430.599, 84.961, 0.305 ) }
    dend_9 { pt3dadd( 338.996, 431.661, 85.7998, 0.305 ) }
    dend_9 { pt3dadd( 338.514, 432.657, 86.4352, 0.4068 ) }
    dend_9 { pt3dadd( 337.973, 433.637, 87.0176, 0.5848 ) }
    dend_9 { pt3dadd( 337.685, 434.596, 88.277, 0.661 ) }
    dend_9 { pt3dadd( 337.47, 435.549, 89.7322, 0.6102 ) }
    dend_9 { pt3dadd( 337.163, 436.413, 91.366, 0.5084 ) }
    dend_9 { pt3dadd( 336.759, 437.183, 93.1888, 0.4576 ) }
    dend_9 { pt3dadd( 336.719, 438.213, 93.5768, 0.483 ) }
    dend_9 { pt3dadd( 336.827, 439.349, 93.3783, 0.5084 ) }
    dend_9 { pt3dadd( 336.618, 440.346, 94.4804, 0.5338 ) }
    dend_9 { pt3dadd( 336.389, 441.335, 95.6841, 0.483 ) }
    dend_9 { pt3dadd( 336.509, 442.472, 95.6152, 0.3814 ) }
    dend_9 { pt3dadd( 336.551, 443.6, 95.7071, 0.305 ) }
    dend_9 { pt3dadd( 336.349, 444.7, 96.2973, 0.3304 ) }
    dend_9 { pt3dadd( 337.25, 445.319, 96.5264, 0.4068 ) }
    dend_9 { pt3dadd( 338.213, 445.919, 96.7394, 0.4576 ) }
    dend_9 { pt3dadd( 338.686, 446.941, 97.2168, 0.483 ) }
    dend_9 { pt3dadd( 339.228, 447.931, 97.5027, 0.5338 ) }
    dend_9 { pt3dadd( 339.905, 448.852, 97.4151, 0.6102 ) }
    dend_9 { pt3dadd( 340.253, 449.86, 97.8337, 0.6356 ) }
    dend_9 { pt3dadd( 340.306, 450.947, 98.7045, 0.6356 ) }
    dend_9 { pt3dadd( 340.339, 451.964, 99.881, 0.5848 ) }
    dend_9 { pt3dadd( 340.331, 452.844, 101.667, 0.5338 ) }
    dend_9 { pt3dadd( 340.159, 453.785, 102.735, 0.4576 ) }
    dend_9 { pt3dadd( 339.701, 454.829, 102.532, 0.4322 ) }
    dend_9 { pt3dadd( 338.997, 455.69, 102.929, 0.4068 ) }
    dend_9 { pt3dadd( 338.467, 456.628, 103.502, 0.4068 ) }
    dend_9 { pt3dadd( 338.233, 457.724, 104.072, 0.356 ) }
    dend_9 { pt3dadd( 337.905, 458.761, 104.758, 0.356 ) }
    dend_9 { pt3dadd( 337.284, 459.621, 105.81, 0.3814 ) }
    dend_9 { pt3dadd( 336.951, 460.493, 106.521, 0.4576 ) }
    dend_9 { pt3dadd( 337.615, 461.404, 106.043, 0.483 ) }
    dend_9 { pt3dadd( 338.218, 462.328, 105.651, 0.4576 ) }
    dend_9 { pt3dadd( 338.061, 463.429, 106.319, 0.3814 ) }
    dend_9 { pt3dadd( 337.798, 464.451, 107.22, 0.3304 ) }
    dend_9 { pt3dadd( 337.301, 465.301, 108.642, 0.3304 ) }
    dend_9 { pt3dadd( 336.811, 466.277, 109.311, 0.3304 ) }
    dend_9 { pt3dadd( 336.365, 467.295, 109.701, 0.356 ) }
    dend_9 { pt3dadd( 337.081, 468.149, 110.337, 0.3304 ) }
    dend_9 { pt3dadd( 337.797, 469.002, 110.973, 0.356 ) }
    // Section: dend_55, id: dend_55, parent: dend_49 (entry count 72/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 401.365, 300.859, 37.3332, 0.5338 ) }
    dend_55 { pt3dadd( 401.871, 301.163, 36.5086, 0.305 ) }
    dend_55 { pt3dadd( 402.725, 301.673, 35.1218, 0.2288 ) }
    dend_55 { pt3dadd( 403.642, 301.82, 33.4942, 0.2288 ) }
    dend_55 { pt3dadd( 404.562, 301.963, 31.864, 0.2542 ) }
    dend_55 { pt3dadd( 405.536, 302.093, 32.4979, 0.3304 ) }
    dend_55 { pt3dadd( 406.527, 302.219, 33.8584, 0.4068 ) }
    dend_55 { pt3dadd( 407.524, 302.643, 34.4193, 0.4322 ) }
    dend_55 { pt3dadd( 408.522, 303.195, 34.6402, 0.356 ) }
    dend_55 { pt3dadd( 409.586, 303.513, 35.107, 0.2796 ) }
    dend_55 { pt3dadd( 410.688, 303.707, 35.7064, 0.2796 ) }
    dend_55 { pt3dadd( 411.741, 303.969, 34.9832, 0.356 ) }
    dend_55 { pt3dadd( 412.785, 304.242, 34.0617, 0.4576 ) }
    dend_55 { pt3dadd( 413.741, 304.683, 32.9955, 0.4576 ) }
    dend_55 { pt3dadd( 414.67, 305.172, 31.8864, 0.4068 ) }
    dend_55 { pt3dadd( 415.713, 305.346, 31.9273, 0.3304 ) }
    dend_55 { pt3dadd( 416.82, 305.337, 32.629, 0.3304 ) }
    dend_55 { pt3dadd( 417.771, 305.826, 33.0929, 0.356 ) }
    dend_55 { pt3dadd( 418.649, 306.543, 33.4471, 0.4068 ) }
    dend_55 { pt3dadd( 419.561, 307.173, 33.0778, 0.4322 ) }
    dend_55 { pt3dadd( 420.492, 307.75, 32.27, 0.4576 ) }
    dend_55 { pt3dadd( 421.507, 308.175, 32.0082, 0.4576 ) }
    dend_55 { pt3dadd( 422.612, 308.44, 32.3319, 0.483 ) }
    dend_55 { pt3dadd( 423.604, 308.923, 32.7992, 0.5592 ) }
    dend_55 { pt3dadd( 424.5, 309.593, 33.3866, 0.6102 ) }
    dend_55 { pt3dadd( 425.337, 310.331, 33.3477, 0.6102 ) }
    dend_55 { pt3dadd( 426.125, 311.126, 32.7706, 0.5084 ) }
    dend_55 { pt3dadd( 427.196, 311.43, 32.146, 0.4322 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_55 { pt3dadd( 428.258, 311.827, 31.906, 0.356 ) }
    dend_55 { pt3dadd( 429.315, 312.262, 31.8133, 0.3814 ) }
    dend_55 { pt3dadd( 430.332, 312.708, 31.3194, 0.4068 ) }
    dend_55 { pt3dadd( 431.298, 313.165, 30.3276, 0.4576 ) }
    dend_55 { pt3dadd( 432.245, 313.355, 28.8459, 0.4068 ) }
    dend_55 { pt3dadd( 433.189, 313.519, 27.3165, 0.356 ) }
    dend_55 { pt3dadd( 434.281, 313.518, 27.5562, 0.305 ) }
    dend_55 { pt3dadd( 435.372, 313.567, 28.1988, 0.305 ) }
    dend_55 { pt3dadd( 436.301, 314.076, 29.253, 0.305 ) }
    dend_55 { pt3dadd( 437.278, 314.536, 29.9804, 0.305 ) }
    dend_55 { pt3dadd( 438.371, 314.873, 29.9116, 0.356 ) }
    dend_55 { pt3dadd( 439.324, 315.244, 28.9142, 0.3814 ) }
    dend_55 { pt3dadd( 440.248, 315.601, 27.7379, 0.4068 ) }
    dend_55 { pt3dadd( 441.366, 315.832, 27.8986, 0.356 ) }
    dend_55 { pt3dadd( 442.486, 315.966, 28.0991, 0.356 ) }
    dend_55 { pt3dadd( 443.61, 315.803, 28.4225, 0.356 ) }
    dend_55 { pt3dadd( 444.722, 315.967, 28.749, 0.356 ) }
    dend_55 { pt3dadd( 445.792, 316.243, 28.6916, 0.305 ) }
    dend_55 { pt3dadd( 446.736, 316.591, 27.361, 0.2542 ) }
    dend_55 { pt3dadd( 447.741, 316.873, 26.483, 0.2542 ) }
    dend_55 { pt3dadd( 448.876, 317.016, 26.5639, 0.2796 ) }
    dend_55 { pt3dadd( 449.985, 317.241, 26.5404, 0.356 ) }
    dend_55 { pt3dadd( 451.014, 317.72, 26.192, 0.3814 ) }
    dend_55 { pt3dadd( 452.053, 318.172, 25.9305, 0.4068 ) }
    dend_55 { pt3dadd( 453.158, 318.435, 26.2528, 0.356 ) }
    dend_55 { pt3dadd( 454.264, 318.698, 26.5748, 0.3304 ) }
    dend_55 { pt3dadd( 455.372, 318.972, 26.6694, 0.3304 ) }
    dend_55 { pt3dadd( 456.48, 319.254, 26.63, 0.3304 ) }
    dend_55 { pt3dadd( 457.566, 319.584, 26.4102, 0.3304 ) }
    dend_55 { pt3dadd( 458.623, 319.981, 25.951, 0.2796 ) }
    dend_55 { pt3dadd( 459.658, 320.417, 25.6407, 0.2796 ) }
    dend_55 { pt3dadd( 460.572, 321.07, 26.1626, 0.2796 ) }
    dend_55 { pt3dadd( 461.497, 321.715, 26.64, 0.356 ) }
    dend_55 { pt3dadd( 462.467, 322.312, 26.8867, 0.3814 ) }
    dend_55 { pt3dadd( 463.447, 322.885, 26.9987, 0.4322 ) }
    dend_55 { pt3dadd( 464.476, 323.348, 26.5334, 0.3814 ) }
    dend_55 { pt3dadd( 465.504, 323.811, 26.068, 0.356 ) }
    dend_55 { pt3dadd( 466.413, 324.48, 26.4902, 0.2796 ) }
    dend_55 { pt3dadd( 467.318, 325.155, 26.941, 0.2542 ) }
    dend_55 { pt3dadd( 468.38, 325.436, 26.3519, 0.2542 ) }
    dend_55 { pt3dadd( 469.461, 325.669, 25.6374, 0.2796 ) }
    dend_55 { pt3dadd( 470.39, 326.286, 25.4425, 0.356 ) }
    dend_55 { pt3dadd( 471.274, 327.011, 25.3938, 0.3814 ) }
    dend_55 { pt3dadd( 472.339, 327.368, 25.1846, 0.4068 ) }
    dend_55 { pt3dadd( 473.447, 327.639, 24.9382, 0.3304 ) }
    dend_55 { pt3dadd( 474.518, 328.021, 24.8553, 0.2796 ) }
    dend_55 { pt3dadd( 475.563, 328.486, 24.8951, 0.2288 ) }
    dend_55 { pt3dadd( 476.626, 328.897, 25.025, 0.2542 ) }
    dend_55 { pt3dadd( 477.719, 329.216, 25.3103, 0.2796 ) }
    dend_55 { pt3dadd( 478.8, 329.57, 25.557, 0.305 ) }
    dend_55 { pt3dadd( 479.857, 330.003, 25.7194, 0.2796 ) }
    dend_55 { pt3dadd( 480.909, 330.442, 25.8916, 0.2542 ) }
    dend_55 { pt3dadd( 481.777, 331.155, 26.4194, 0.2288 ) }
    dend_55 { pt3dadd( 482.674, 331.809, 27.0144, 0.2288 ) }
    dend_55 { pt3dadd( 483.672, 332.25, 27.8569, 0.2288 ) }
    dend_55 { pt3dadd( 484.741, 332.483, 28.1912, 0.2288 ) }
    dend_55 { pt3dadd( 485.883, 332.505, 28.0126, 0.2542 ) }
    dend_55 { pt3dadd( 487.02, 332.564, 28.1036, 0.305 ) }
    dend_55 { pt3dadd( 488.154, 332.648, 28.404, 0.356 ) }
    dend_55 { pt3dadd( 489.296, 332.613, 28.5174, 0.356 ) }
    dend_55 { pt3dadd( 490.439, 332.58, 28.6311, 0.305 ) }
    dend_55 { pt3dadd( 491.552, 332.353, 28.8378, 0.2542 ) }
    dend_55 { pt3dadd( 492.657, 332.072, 29.0696, 0.2288 ) }
    dend_55 { pt3dadd( 493.704, 331.649, 29.3924, 0.2542 ) }
    dend_55 { pt3dadd( 494.714, 331.134, 29.7727, 0.2796 ) }
    dend_55 { pt3dadd( 495.765, 330.807, 30.4794, 0.305 ) }
    dend_55 { pt3dadd( 496.827, 330.521, 31.2561, 0.305 ) }
    dend_55 { pt3dadd( 497.704, 329.798, 31.5627, 0.305 ) }
    dend_55 { pt3dadd( 498.575, 329.066, 31.8506, 0.305 ) }
    dend_55 { pt3dadd( 499.422, 328.303, 32.0776, 0.2796 ) }
    dend_55 { pt3dadd( 500.348, 327.694, 32.466, 0.305 ) }
    dend_55 { pt3dadd( 501.402, 327.334, 33.1156, 0.3304 ) }
    dend_55 { pt3dadd( 502.437, 326.959, 33.8405, 0.3814 ) }
    dend_55 { pt3dadd( 503.372, 326.498, 34.9927, 0.356 ) }
    dend_55 { pt3dadd( 504.323, 326.031, 35.9554, 0.356 ) }
    dend_55 { pt3dadd( 505.355, 325.537, 36.0354, 0.356 ) }
    dend_55 { pt3dadd( 506.386, 325.044, 36.1281, 0.356 ) }
    dend_55 { pt3dadd( 507.408, 324.613, 36.8245, 0.305 ) }
    dend_55 { pt3dadd( 508.428, 324.182, 37.5208, 0.2542 ) }
    dend_55 { pt3dadd( 509.533, 324.099, 37.9705, 0.2288 ) }
    dend_55 { pt3dadd( 510.667, 324.134, 38.3362, 0.2288 ) }
    dend_55 { pt3dadd( 511.709, 323.735, 38.246, 0.2288 ) }
    dend_55 { pt3dadd( 512.728, 323.219, 38.0722, 0.2288 ) }
    dend_55 { pt3dadd( 513.751, 322.71, 38.1139, 0.2288 ) }
    dend_55 { pt3dadd( 514.784, 322.268, 38.0408, 0.2796 ) }
    dend_55 { pt3dadd( 515.872, 322.286, 37.1767, 0.3304 ) }
    dend_55 { pt3dadd( 516.96, 322.306, 36.3129, 0.3814 ) }
    dend_55 { pt3dadd( 518.068, 322.068, 35.9537, 0.3304 ) }
    dend_55 { pt3dadd( 519.177, 321.824, 35.6096, 0.305 ) }
    dend_55 { pt3dadd( 520.219, 321.917, 36.6489, 0.2796 ) }
    dend_55 { pt3dadd( 521.257, 322.036, 37.7891, 0.3304 ) }
    dend_55 { pt3dadd( 521.913, 321.909, 35.5172, 0.3304 ) }
    dend_55 { pt3dadd( 522.706, 321.901, 33.9083, 0.3304 ) }
    dend_55 { pt3dadd( 523.818, 322.173, 33.85, 0.2796 ) }
    dend_55 { pt3dadd( 524.922, 322.282, 33.8346, 0.2542 ) }
    dend_55 { pt3dadd( 526.011, 321.935, 33.9408, 0.2288 ) }
    dend_55 { pt3dadd( 527.099, 321.616, 33.8344, 0.2288 ) }
    dend_55 { pt3dadd( 528.182, 321.374, 33.1456, 0.2288 ) }
    dend_55 { pt3dadd( 529.258, 321.483, 32.4576, 0.2288 ) }
    dend_55 { pt3dadd( 530.331, 321.76, 31.7702, 0.2796 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_55 { pt3dadd( 531.449, 321.708, 31.7148, 0.3304 ) }
    dend_55 { pt3dadd( 532.579, 321.55, 31.8609, 0.3814 ) }
    dend_55 { pt3dadd( 533.659, 321.656, 30.9725, 0.3304 ) }
    dend_55 { pt3dadd( 534.549, 321.785, 29.3065, 0.2796 ) }
    dend_55 { pt3dadd( 535.391, 321.922, 27.44, 0.2288 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 5/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 401.365, 300.859, 37.3332, 0.5338 ) }
    dend_50 { pt3dadd( 402.632, 300.475, 37.6701, 0.3814 ) }
    dend_50 { pt3dadd( 403.685, 300.12, 37.2686, 0.356 ) }
    dend_50 { pt3dadd( 404.715, 299.749, 36.4627, 0.2796 ) }
    dend_50 { pt3dadd( 405.816, 299.549, 36.1623, 0.2796 ) }
    dend_50 { pt3dadd( 406.955, 299.449, 36.1519, 0.2796 ) }
    dend_50 { pt3dadd( 408.056, 299.146, 36.2765, 0.305 ) }
    dend_50 { pt3dadd( 409.152, 298.824, 36.3759, 0.2796 ) }
    dend_50 { pt3dadd( 410.232, 298.467, 36.0864, 0.305 ) }
    dend_50 { pt3dadd( 411.313, 298.11, 35.7969, 0.3304 ) }
    dend_50 { pt3dadd( 412.373, 298.025, 34.8569, 0.3814 ) }
    dend_50 { pt3dadd( 413.43, 297.991, 33.7901, 0.356 ) }
    dend_50 { pt3dadd( 414.379, 297.495, 34.2314, 0.3304 ) }
    dend_50 { pt3dadd( 415.302, 296.898, 34.9994, 0.305 ) }
    dend_50 { pt3dadd( 416.373, 296.595, 35.1176, 0.2796 ) }
    dend_50 { pt3dadd( 417.499, 296.406, 34.9866, 0.2542 ) }
    dend_50 { pt3dadd( 418.622, 296.206, 35.0608, 0.305 ) }
    dend_50 { pt3dadd( 419.735, 295.991, 35.4169, 0.3814 ) }
    dend_50 { pt3dadd( 420.847, 295.77, 35.7602, 0.5338 ) }
    dend_50 { pt3dadd( 421.78, 295.153, 35.1708, 0.5338 ) }
    dend_50 { pt3dadd( 422.714, 294.538, 34.5811, 0.5338 ) }
    dend_50 { pt3dadd( 423.761, 294.09, 34.4904, 0.3814 ) }
    dend_50 { pt3dadd( 424.823, 293.668, 34.475, 0.3304 ) }
    dend_50 { pt3dadd( 425.774, 293.077, 34.0687, 0.305 ) }
    dend_50 { pt3dadd( 426.678, 292.414, 33.497, 0.3814 ) }
    dend_50 { pt3dadd( 427.498, 291.699, 32.6743, 0.4068 ) }
    dend_50 { pt3dadd( 428.283, 290.959, 31.7388, 0.3814 ) }
    dend_50 { pt3dadd( 429.366, 291.076, 31.0783, 0.305 ) }
    dend_50 { pt3dadd( 430.286, 290.679, 31.211, 0.2542 ) }
    dend_50 { pt3dadd( 431.085, 289.905, 31.8654, 0.2542 ) }
    dend_50 { pt3dadd( 431.473, 289.04, 33.1052, 0.2796 ) }
    dend_50 { pt3dadd( 431.595, 288.115, 34.7298, 0.3304 ) }
    dend_50 { pt3dadd( 432.156, 288.22, 37.0614, 0.3814 ) }
    dend_50 { pt3dadd( 432.916, 287.659, 36.3017, 0.5084 ) }
    dend_50 { pt3dadd( 433.7, 286.991, 35.0823, 0.5848 ) }
    dend_50 { pt3dadd( 434.656, 286.462, 34.3753, 0.5848 ) }
    dend_50 { pt3dadd( 435.671, 286.019, 33.8671, 0.4322 ) }
    dend_50 { pt3dadd( 436.721, 286.465, 34.0816, 0.305 ) }
    dend_50 { pt3dadd( 437.772, 286.908, 34.2958, 0.305 ) }
    dend_50 { pt3dadd( 438.792, 287.423, 34.2488, 0.4576 ) }
    dend_50 { pt3dadd( 439.805, 287.952, 34.1482, 0.661 ) }
    dend_50 { pt3dadd( 440.814, 288.48, 33.9044, 0.7372 ) }
    dend_50 { pt3dadd( 441.82, 289.009, 33.5742, 0.6864 ) }
    dend_50 { pt3dadd( 442.867, 289.429, 33.4298, 0.5338 ) }
    dend_50 { pt3dadd( 443.985, 289.656, 33.6109, 0.4068 ) }
    dend_50 { pt3dadd( 445.101, 289.894, 33.6812, 0.3304 ) }
    dend_50 { pt3dadd( 446.208, 290.157, 33.4009, 0.3304 ) }
    dend_50 { pt3dadd( 447.311, 290.436, 33.1929, 0.4068 ) }
    dend_50 { pt3dadd( 448.387, 290.809, 33.4488, 0.5084 ) }
    dend_50 { pt3dadd( 449.464, 291.184, 33.7044, 0.6102 ) }
    dend_50 { pt3dadd( 450.559, 291.188, 33.0439, 0.6102 ) }
    dend_50 { pt3dadd( 451.656, 291.143, 32.2616, 0.5338 ) }
    dend_50 { pt3dadd( 452.772, 291.033, 31.9343, 0.3814 ) }
    dend_50 { pt3dadd( 453.904, 290.867, 31.9838, 0.2796 ) }
    dend_50 { pt3dadd( 455.016, 290.609, 32.0163, 0.2542 ) }
    dend_50 { pt3dadd( 456.11, 290.274, 32.034, 0.2796 ) }
    dend_50 { pt3dadd( 456.566, 289.351, 31.9239, 0.3304 ) }
    dend_50 { pt3dadd( 457.45, 290.075, 31.8965, 0.3304 ) }
    dend_50 { pt3dadd( 458.137, 290.889, 32.4604, 0.3814 ) }
    dend_50 { pt3dadd( 458.597, 291.807, 33.6997, 0.4322 ) }
    dend_50 { pt3dadd( 459.451, 292.268, 33.9643, 0.5592 ) }
    dend_50 { pt3dadd( 460.573, 292.419, 33.5689, 0.5848 ) }
    // Section: dend_45, id: dend_45, parent: dend_41 (entry count 67/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 385.577, 286.152, 33.9111, 0.7372 ) }
    dend_45 { pt3dadd( 386.593, 285.715, 31.6019, 0.356 ) }
    dend_45 { pt3dadd( 387.371, 285.333, 29.7744, 0.356 ) }
    dend_45 { pt3dadd( 388.024, 284.613, 29.1469, 0.3814 ) }
    dend_45 { pt3dadd( 388.577, 283.622, 29.4924, 0.356 ) }
    dend_45 { pt3dadd( 389.283, 282.783, 29.3465, 0.4068 ) }
    dend_45 { pt3dadd( 390.172, 282.129, 28.6157, 0.5084 ) }
    dend_45 { pt3dadd( 391.049, 281.449, 27.9381, 0.6102 ) }
    dend_45 { pt3dadd( 391.926, 280.768, 27.2644, 0.5592 ) }
    dend_45 { pt3dadd( 392.326, 279.797, 26.4659, 0.4322 ) }
    dend_45 { pt3dadd( 392.574, 278.734, 25.6278, 0.3304 ) }
    dend_45 { pt3dadd( 392.668, 277.61, 25.2837, 0.356 ) }
    dend_45 { pt3dadd( 392.727, 276.472, 25.0527, 0.4068 ) }
    dend_45 { pt3dadd( 392.588, 275.407, 24.1926, 0.4576 ) }
    dend_45 { pt3dadd( 392.39, 274.364, 23.1468, 0.4068 ) }
    dend_45 { pt3dadd( 392.162, 273.257, 22.7318, 0.3304 ) }
    dend_45 { pt3dadd( 392.071, 272.209, 22.3118, 0.2542 ) }
    dend_45 { pt3dadd( 393.022, 271.625, 21.702, 0.2288 ) }
    dend_45 { pt3dadd( 393.675, 270.762, 21.1179, 0.2288 ) }
    dend_45 { pt3dadd( 394.175, 269.76, 20.547, 0.2288 ) }
    dend_45 { pt3dadd( 394.168, 268.638, 20.5904, 0.2288 ) }
    dend_45 { pt3dadd( 394.086, 267.498, 20.7242, 0.2288 ) }
    dend_45 { pt3dadd( 393.988, 266.359, 20.6864, 0.2288 ) }
    dend_45 { pt3dadd( 393.884, 265.22, 20.6125, 0.2288 ) }
    dend_45 { pt3dadd( 394.149, 264.13, 20.6301, 0.2542 ) }
    dend_45 { pt3dadd( 394.549, 263.058, 20.6814, 0.305 ) }
    dend_45 { pt3dadd( 394.91, 261.985, 20.3599, 0.3814 ) }
    dend_45 { pt3dadd( 395.256, 260.912, 19.8892, 0.4068 ) }
    dend_45 { pt3dadd( 395.545, 259.842, 19.2038, 0.4068 ) }
    dend_45 { pt3dadd( 395.823, 258.773, 18.48, 0.3814 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 97/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 385.577, 286.152, 33.9111, 0.7372 ) }
    dend_42 { pt3dadd( 384.535, 285.959, 34.2026, 0.6102 ) }
    dend_42 { pt3dadd( 383.422, 285.706, 34.3882, 0.5848 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_42 { pt3dadd( 382.758, 285.272, 32.7118, 0.5084 ) }
    dend_42 { pt3dadd( 382.213, 284.793, 30.5491, 0.3814 ) }
    dend_42 { pt3dadd( 381.237, 284.263, 31.1797, 0.305 ) }
    dend_42 { pt3dadd( 380.228, 283.769, 31.6744, 0.3304 ) }
    dend_42 { pt3dadd( 379.193, 283.305, 32.03, 0.3814 ) }
    dend_42 { pt3dadd( 378.129, 282.966, 32.1605, 0.4576 ) }
    dend_42 { pt3dadd( 376.997, 282.926, 31.7582, 0.3814 ) }
    dend_42 { pt3dadd( 376.024, 282.664, 31.026, 0.305 ) }
    dend_42 { pt3dadd( 375.401, 281.915, 29.5604, 0.2542 ) }
    dend_42 { pt3dadd( 374.739, 281.075, 28.8705, 0.2796 ) }
    dend_42 { pt3dadd( 374.046, 280.166, 28.7862, 0.3304 ) }
    dend_42 { pt3dadd( 374.02, 279.092, 28.5827, 0.3304 ) }
    dend_42 { pt3dadd( 374.201, 277.967, 28.3422, 0.3304 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 13/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 338.051, 288.059, 71.4, 0.3304 ) }
    dend_23 { pt3dadd( 337.648, 288.132, 71.2205, 0.2796 ) }
    dend_23 { pt3dadd( 336.542, 287.977, 71.393, 0.2796 ) }
    dend_23 { pt3dadd( 335.429, 287.818, 71.8183, 0.2796 ) }
    dend_23 { pt3dadd( 334.304, 287.787, 72.3288, 0.305 ) }
    dend_23 { pt3dadd( 333.224, 287.627, 72.8916, 0.2796 ) }
    dend_23 { pt3dadd( 332.284, 287.047, 73.6249, 0.2542 ) }
    dend_23 { pt3dadd( 331.322, 286.5, 74.284, 0.2542 ) }
    dend_23 { pt3dadd( 330.274, 286.069, 74.6732, 0.2796 ) }
    dend_23 { pt3dadd( 329.312, 285.532, 75.1136, 0.3304 ) }
    dend_23 { pt3dadd( 328.641, 284.641, 75.7243, 0.3304 ) }
    dend_23 { pt3dadd( 327.95, 283.785, 76.4123, 0.3304 ) }
    dend_23 { pt3dadd( 327.115, 283.195, 77.6756, 0.2796 ) }
    dend_23 { pt3dadd( 326.251, 282.633, 78.783, 0.2542 ) }
    dend_23 { pt3dadd( 325.168, 282.261, 78.8606, 0.2288 ) }
    dend_23 { pt3dadd( 324.087, 281.891, 78.9384, 0.2796 ) }
    dend_23 { pt3dadd( 322.989, 281.663, 79.4612, 0.356 ) }
    dend_23 { pt3dadd( 322.006, 281.341, 80.4423, 0.4576 ) }
    dend_23 { pt3dadd( 321.194, 280.855, 82.0165, 0.5084 ) }
    dend_23 { pt3dadd( 320.654, 279.94, 82.8954, 0.5084 ) }
    dend_23 { pt3dadd( 320.154, 278.961, 83.6707, 0.5084 ) }
    dend_23 { pt3dadd( 319.411, 278.287, 84.9612, 0.483 ) }
    dend_23 { pt3dadd( 318.803, 277.545, 86.4153, 0.483 ) }
    dend_23 { pt3dadd( 318.341, 276.71, 87.9592, 0.4068 ) }
    dend_23 { pt3dadd( 317.54, 276.278, 87.7478, 0.3304 ) }
    dend_23 { pt3dadd( 316.842, 275.883, 87.6274, 0.2542 ) }
    dend_23 { pt3dadd( 316.716, 275.102, 89.6515, 0.2288 ) }
    dend_23 { pt3dadd( 316.353, 274.376, 90.6156, 0.2288 ) }
    dend_23 { pt3dadd( 315.511, 273.76, 89.4639, 0.2542 ) }
    dend_23 { pt3dadd( 314.752, 272.966, 89.8416, 0.305 ) }
    dend_23 { pt3dadd( 314.052, 272.1, 90.459, 0.356 ) }
    dend_23 { pt3dadd( 313.433, 271.165, 91.0011, 0.4068 ) }
    dend_23 { pt3dadd( 312.741, 270.37, 91.9117, 0.4068 ) }
    dend_23 { pt3dadd( 311.959, 269.75, 93.2789, 0.4322 ) }
    dend_23 { pt3dadd( 311.127, 269.097, 93.9896, 0.4068 ) }
    dend_23 { pt3dadd( 310.224, 268.4, 93.7796, 0.4322 ) }
    dend_23 { pt3dadd( 309.42, 267.604, 93.9576, 0.4068 ) }
    dend_23 { pt3dadd( 308.668, 266.757, 94.3482, 0.3814 ) }
    dend_23 { pt3dadd( 308.153, 266.248, 96.5006, 0.305 ) }
    dend_23 { pt3dadd( 307.564, 265.744, 98.4511, 0.305 ) }
    dend_23 { pt3dadd( 306.582, 265.249, 99.2177, 0.3304 ) }
    dend_23 { pt3dadd( 305.577, 264.814, 99.8514, 0.3814 ) }
    dend_23 { pt3dadd( 304.437, 264.739, 99.6954, 0.356 ) }
    dend_23 { pt3dadd( 303.366, 264.47, 99.8113, 0.3304 ) }
    dend_23 { pt3dadd( 302.406, 263.891, 100.367, 0.305 ) }
    dend_23 { pt3dadd( 301.371, 263.528, 100.995, 0.3304 ) }
    dend_23 { pt3dadd( 300.28, 263.329, 101.677, 0.356 ) }
    dend_23 { pt3dadd( 299.19, 263.131, 102.383, 0.3814 ) }
    dend_23 { pt3dadd( 298.109, 262.94, 103.166, 0.356 ) }
    dend_23 { pt3dadd( 297.127, 262.673, 103.151, 0.3304 ) }
    dend_23 { pt3dadd( 296.364, 262.234, 101.361, 0.305 ) }
    dend_23 { pt3dadd( 295.688, 262.0, 101.311, 0.2796 ) }
    dend_23 { pt3dadd( 295.134, 262.061, 103.758, 0.2542 ) }
    dend_23 { pt3dadd( 294.357, 261.823, 104.83, 0.305 ) }
    dend_23 { pt3dadd( 293.354, 261.287, 104.521, 0.4068 ) }
    dend_23 { pt3dadd( 292.447, 260.746, 105.396, 0.5084 ) }
    dend_23 { pt3dadd( 291.566, 260.204, 106.59, 0.4576 ) }
    dend_23 { pt3dadd( 290.609, 259.615, 106.691, 0.356 ) }
    dend_23 { pt3dadd( 289.636, 259.014, 106.562, 0.2542 ) }
    dend_23 { pt3dadd( 288.854, 258.221, 107.059, 0.2288 ) }
    dend_23 { pt3dadd( 288.089, 257.417, 107.671, 0.2288 ) }
    dend_23 { pt3dadd( 287.066, 256.952, 108.198, 0.2288 ) }
    dend_23 { pt3dadd( 286.025, 256.527, 108.68, 0.2288 ) }
    dend_23 { pt3dadd( 284.952, 256.168, 109.089, 0.2542 ) }
    dend_23 { pt3dadd( 284.054, 255.583, 109.835, 0.356 ) }
    dend_23 { pt3dadd( 283.28, 254.844, 110.814, 0.483 ) }
    dend_23 { pt3dadd( 282.251, 254.387, 111.238, 0.5592 ) }
    dend_23 { pt3dadd( 281.206, 253.951, 111.62, 0.483 ) }
    dend_23 { pt3dadd( 280.108, 253.768, 112.155, 0.356 ) }
    dend_23 { pt3dadd( 278.994, 253.673, 112.744, 0.2542 ) }
    dend_23 { pt3dadd( 277.88, 253.588, 113.339, 0.2796 ) }
    dend_23 { pt3dadd( 276.765, 253.513, 113.94, 0.3814 ) }
    dend_23 { pt3dadd( 275.735, 253.873, 114.758, 0.483 ) }
    dend_23 { pt3dadd( 274.708, 254.247, 115.583, 0.483 ) }
    dend_23 { pt3dadd( 273.583, 254.269, 115.824, 0.4322 ) }
    dend_23 { pt3dadd( 272.442, 254.229, 115.966, 0.3814 ) }
    dend_23 { pt3dadd( 271.334, 254.066, 116.363, 0.3814 ) }
    dend_23 { pt3dadd( 270.266, 253.767, 117.045, 0.3304 ) }
    dend_23 { pt3dadd( 269.237, 253.316, 117.486, 0.2796 ) }
    dend_23 { pt3dadd( 268.228, 252.794, 117.814, 0.2288 ) }
    dend_23 { pt3dadd( 267.162, 252.405, 118.094, 0.2288 ) }
    dend_23 { pt3dadd( 266.08, 252.049, 118.363, 0.2288 ) }
    dend_23 { pt3dadd( 264.996, 252.181, 118.62, 0.2288 ) }
    dend_23 { pt3dadd( 263.913, 252.533, 118.871, 0.2288 ) }
    dend_23 { pt3dadd( 262.849, 252.929, 119.179, 0.2288 ) }
    dend_23 { pt3dadd( 261.819, 253.399, 119.587, 0.2542 ) }
    dend_23 { pt3dadd( 260.775, 253.812, 120.065, 0.305 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_23 { pt3dadd( 259.7, 254.105, 120.687, 0.356 ) }
    dend_23 { pt3dadd( 258.631, 254.431, 121.246, 0.356 ) }
    dend_23 { pt3dadd( 257.607, 254.932, 121.465, 0.305 ) }
    dend_23 { pt3dadd( 256.582, 255.435, 121.685, 0.2542 ) }
    dend_23 { pt3dadd( 255.788, 256.111, 120.597, 0.2288 ) }
    dend_23 { pt3dadd( 254.93, 256.253, 121.986, 0.2288 ) }
    dend_23 { pt3dadd( 254.06, 256.304, 123.798, 0.2542 ) }
    dend_23 { pt3dadd( 252.989, 256.168, 124.354, 0.2796 ) }
    dend_23 { pt3dadd( 251.864, 255.98, 124.568, 0.305 ) }
    dend_23 { pt3dadd( 250.89, 255.693, 125.626, 0.2796 ) }
    dend_23 { pt3dadd( 250.007, 255.348, 127.19, 0.2542 ) }
    dend_23 { pt3dadd( 248.965, 255.121, 127.863, 0.2288 ) }
    dend_23 { pt3dadd( 247.835, 254.962, 128.027, 0.2542 ) }
    dend_23 { pt3dadd( 246.711, 254.763, 128.197, 0.2796 ) }
    dend_23 { pt3dadd( 245.593, 254.53, 128.371, 0.305 ) }
    dend_23 { pt3dadd( 244.475, 254.32, 128.605, 0.2796 ) }
    dend_23 { pt3dadd( 243.358, 254.249, 129.177, 0.2542 ) }
    dend_23 { pt3dadd( 242.241, 254.178, 129.75, 0.2542 ) }
    dend_23 { pt3dadd( 241.128, 254.002, 130.199, 0.2796 ) }
    dend_23 { pt3dadd( 240.016, 253.785, 130.598, 0.305 ) }
    dend_23 { pt3dadd( 239.082, 253.212, 130.839, 0.2796 ) }
    dend_23 { pt3dadd( 238.255, 252.424, 130.983, 0.2796 ) }
    dend_23 { pt3dadd( 237.509, 251.562, 131.124, 0.2796 ) }
    dend_23 { pt3dadd( 236.815, 250.655, 131.263, 0.305 ) }
    dend_23 { pt3dadd( 236.132, 249.763, 131.713, 0.3304 ) }
    dend_23 { pt3dadd( 235.456, 248.882, 132.386, 0.356 ) }
    dend_23 { pt3dadd( 234.962, 248.436, 130.265, 0.3814 ) }
    dend_23 { pt3dadd( 234.48, 248.021, 127.935, 0.3304 ) }
    dend_23 { pt3dadd( 234.33, 247.504, 129.977, 0.2796 ) }
    dend_23 { pt3dadd( 234.211, 246.978, 132.446, 0.2288 ) }
    dend_23 { pt3dadd( 233.508, 246.244, 133.001, 0.2288 ) }
    dend_23 { pt3dadd( 232.659, 245.493, 133.16, 0.2542 ) }
    dend_23 { pt3dadd( 231.576, 245.229, 133.792, 0.2796 ) }
    dend_23 { pt3dadd( 230.727, 244.642, 134.308, 0.305 ) }
    dend_23 { pt3dadd( 230.168, 243.656, 134.679, 0.2796 ) }
    dend_23 { pt3dadd( 229.559, 242.704, 135.056, 0.2796 ) }
    dend_23 { pt3dadd( 228.846, 241.824, 135.444, 0.305 ) }
    dend_23 { pt3dadd( 228.296, 240.882, 136.054, 0.356 ) }
    dend_23 { pt3dadd( 227.985, 239.849, 136.984, 0.3814 ) }
    dend_23 { pt3dadd( 227.863, 238.753, 137.418, 0.3814 ) }
    dend_23 { pt3dadd( 227.884, 237.609, 137.48, 0.3814 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 41/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 338.051, 288.059, 71.4, 0.3304 ) }
    dend_22 { pt3dadd( 337.879, 287.511, 71.4, 0.356 ) }
    dend_22 { pt3dadd( 337.362, 286.49, 71.4, 0.3304 ) }
    dend_22 { pt3dadd( 336.806, 285.497, 71.3362, 0.3304 ) }
    dend_22 { pt3dadd( 336.093, 284.612, 71.0231, 0.356 ) }
    dend_22 { pt3dadd( 335.367, 283.742, 70.7056, 0.356 ) }
    dend_22 { pt3dadd( 334.377, 283.195, 70.2918, 0.305 ) }
    dend_22 { pt3dadd( 333.386, 282.648, 69.8779, 0.2542 ) }
    dend_22 { pt3dadd( 332.696, 282.142, 71.559, 0.2796 ) }
    dend_22 { pt3dadd( 332.011, 281.66, 73.365, 0.3304 ) }
    dend_22 { pt3dadd( 330.893, 281.419, 73.2542, 0.3814 ) }
    dend_22 { pt3dadd( 329.798, 281.147, 73.2242, 0.3304 ) }
    dend_22 { pt3dadd( 329.02, 280.438, 74.3182, 0.305 ) }
    dend_22 { pt3dadd( 328.272, 279.681, 75.2752, 0.2796 ) }
    dend_22 { pt3dadd( 327.615, 278.767, 75.7884, 0.305 ) }
    dend_22 { pt3dadd( 327.001, 277.818, 75.8943, 0.2796 ) }
    dend_22 { pt3dadd( 326.426, 276.834, 75.6235, 0.2542 ) }
    dend_22 { pt3dadd( 325.644, 276.117, 76.5646, 0.2288 ) }
    dend_22 { pt3dadd( 324.842, 275.425, 77.6208, 0.2542 ) }
    dend_22 { pt3dadd( 323.801, 275.048, 78.1802, 0.2796 ) }
    dend_22 { pt3dadd( 322.721, 274.725, 78.659, 0.305 ) }
    dend_22 { pt3dadd( 321.828, 274.156, 79.695, 0.2796 ) }
    dend_22 { pt3dadd( 320.947, 273.63, 80.8444, 0.2542 ) }
    dend_22 { pt3dadd( 320.097, 273.545, 82.7089, 0.2288 ) }
    dend_22 { pt3dadd( 319.541, 272.72, 83.3372, 0.2796 ) }
    dend_22 { pt3dadd( 319.069, 271.685, 83.6144, 0.3304 ) }
    dend_22 { pt3dadd( 318.378, 270.815, 84.0126, 0.4068 ) }
    dend_22 { pt3dadd( 317.553, 270.046, 84.4855, 0.3814 ) }
    dend_22 { pt3dadd( 316.986, 269.252, 85.556, 0.356 ) }
    dend_22 { pt3dadd( 316.646, 268.466, 87.0318, 0.305 ) }
    dend_22 { pt3dadd( 315.688, 267.889, 86.429, 0.3304 ) }
    dend_22 { pt3dadd( 314.989, 267.229, 86.9431, 0.356 ) }
    dend_22 { pt3dadd( 314.599, 266.469, 88.8028, 0.356 ) }
    dend_22 { pt3dadd( 314.043, 265.845, 89.1887, 0.305 ) }
    dend_22 { pt3dadd( 313.248, 265.418, 87.4664, 0.305 ) }
    dend_22 { pt3dadd( 312.961, 264.627, 88.3162, 0.356 ) }
    dend_22 { pt3dadd( 312.835, 263.717, 89.9875, 0.4576 ) }
    dend_22 { pt3dadd( 312.167, 262.879, 90.6749, 0.4576 ) }
    dend_22 { pt3dadd( 311.404, 262.053, 91.1915, 0.4576 ) }
    dend_22 { pt3dadd( 310.882, 261.046, 91.1912, 0.483 ) }
    dend_22 { pt3dadd( 310.4, 260.008, 91.1033, 0.6102 ) }
    dend_22 { pt3dadd( 309.735, 259.221, 92.0214, 0.661 ) }
    dend_22 { pt3dadd( 308.997, 258.53, 93.3321, 0.6102 ) }
    dend_22 { pt3dadd( 308.102, 257.941, 93.4682, 0.5084 ) }
    dend_22 { pt3dadd( 307.114, 257.414, 92.8995, 0.483 ) }
    dend_22 { pt3dadd( 306.121, 256.858, 92.9088, 0.5338 ) }
    dend_22 { pt3dadd( 305.353, 256.281, 94.4334, 0.5338 ) }
    dend_22 { pt3dadd( 304.587, 255.705, 95.9582, 0.483 ) }
    dend_22 { pt3dadd( 303.486, 255.459, 96.411, 0.4068 ) }
    dend_22 { pt3dadd( 302.383, 255.214, 96.8573, 0.4068 ) }
    dend_22 { pt3dadd( 301.775, 254.309, 97.5615, 0.4322 ) }
    dend_22 { pt3dadd( 301.194, 253.368, 98.2797, 0.4322 ) }
    dend_22 { pt3dadd( 300.318, 253.191, 99.745, 0.3814 ) }
    dend_22 { pt3dadd( 299.384, 253.167, 101.36, 0.3304 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 95/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 339.703, 329.879, 52.08, 0.5848 ) }
    dend_20 { pt3dadd( 339.835, 329.284, 51.324, 0.3814 ) }
    dend_20 { pt3dadd( 340.055, 328.254, 50.4451, 0.3814 ) }
    dend_20 { pt3dadd( 340.276, 327.131, 50.5725, 0.4068 ) }
    dend_20 { pt3dadd( 340.364, 326.051, 50.843, 0.5084 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_20 { pt3dadd( 339.74, 325.191, 51.882, 0.5848 ) }
    dend_20 { pt3dadd( 339.05, 324.372, 52.7775, 0.6356 ) }
    dend_20 { pt3dadd( 338.178, 323.659, 53.286, 0.5338 ) }
    dend_20 { pt3dadd( 337.298, 322.959, 53.7639, 0.483 ) }
    dend_20 { pt3dadd( 336.306, 322.392, 53.8894, 0.4068 ) }
    dend_20 { pt3dadd( 335.313, 321.824, 54.0148, 0.4322 ) }
    dend_20 { pt3dadd( 334.288, 321.321, 53.935, 0.4576 ) }
    dend_20 { pt3dadd( 333.254, 320.834, 53.8037, 0.6102 ) }
    dend_20 { pt3dadd( 332.238, 320.394, 54.318, 0.7118 ) }
    dend_20 { pt3dadd( 331.232, 319.981, 55.1802, 0.7118 ) }
    dend_20 { pt3dadd( 330.226, 319.642, 56.2164, 0.5338 ) }
    dend_20 { pt3dadd( 329.223, 319.333, 57.3266, 0.4068 ) }
    dend_20 { pt3dadd( 328.153, 319.233, 57.9082, 0.356 ) }
    dend_20 { pt3dadd( 327.015, 319.351, 57.9418, 0.356 ) }
    dend_20 { pt3dadd( 325.952, 319.17, 58.2523, 0.3304 ) }
    dend_20 { pt3dadd( 324.98, 318.629, 58.9005, 0.356 ) }
    dend_20 { pt3dadd( 324.042, 318.024, 59.36, 0.4322 ) }
    dend_20 { pt3dadd( 323.184, 317.268, 59.36, 0.5592 ) }
    dend_20 { pt3dadd( 322.247, 316.64, 58.9501, 0.5848 ) }
    dend_20 { pt3dadd( 321.296, 316.033, 58.4682, 0.6102 ) }
    dend_20 { pt3dadd( 320.222, 315.755, 58.6012, 0.5592 ) }
    dend_20 { pt3dadd( 319.17, 315.491, 59.0234, 0.5592 ) }
    dend_20 { pt3dadd( 318.528, 314.59, 59.7318, 0.5338 ) }
    dend_20 { pt3dadd( 317.875, 313.695, 60.4019, 0.5338 ) }
    dend_20 { pt3dadd( 317.058, 312.895, 60.4904, 0.5338 ) }
    dend_20 { pt3dadd( 316.241, 312.096, 60.5788, 0.483 ) }
    dend_20 { pt3dadd( 315.197, 311.708, 60.1644, 0.4068 ) }
    dend_20 { pt3dadd( 314.119, 311.384, 59.6714, 0.4068 ) }
    dend_20 { pt3dadd( 313.298, 310.777, 60.5802, 0.5848 ) }
    dend_20 { pt3dadd( 312.544, 310.045, 61.6238, 0.788 ) }
    dend_20 { pt3dadd( 311.784, 309.224, 62.2118, 0.839 ) }
    dend_20 { pt3dadd( 310.985, 308.452, 62.7491, 0.6864 ) }
    dend_20 { pt3dadd( 309.946, 307.983, 62.9628, 0.5848 ) }
    dend_20 { pt3dadd( 308.907, 307.514, 63.1767, 0.6102 ) }
    dend_20 { pt3dadd( 308.124, 306.713, 63.5197, 0.661 ) }
    dend_20 { pt3dadd( 307.384, 305.871, 63.9545, 0.6102 ) }
    dend_20 { pt3dadd( 306.491, 305.407, 65.2882, 0.5084 ) }
    dend_20 { pt3dadd( 305.75, 304.762, 65.8507, 0.483 ) }
    dend_20 { pt3dadd( 305.289, 303.779, 64.9676, 0.483 ) }
    dend_20 { pt3dadd( 304.818, 302.797, 64.1267, 0.4322 ) }
    dend_20 { pt3dadd( 304.196, 301.843, 63.8831, 0.356 ) }
    dend_20 { pt3dadd( 303.546, 300.926, 63.8288, 0.305 ) }
    dend_20 { pt3dadd( 302.751, 300.208, 64.8152, 0.356 ) }
    dend_20 { pt3dadd( 301.872, 299.594, 65.7902, 0.4322 ) }
    dend_20 { pt3dadd( 300.985, 298.991, 66.7643, 0.5338 ) }
    dend_20 { pt3dadd( 300.506, 298.53, 66.9152, 0.3304 ) }
    dend_20 { pt3dadd( 299.729, 297.696, 67.1653, 0.3304 ) }
    dend_20 { pt3dadd( 298.954, 296.862, 67.415, 0.3814 ) }
    dend_20 { pt3dadd( 298.086, 296.289, 68.4211, 0.3304 ) }
    dend_20 { pt3dadd( 297.187, 295.809, 69.6931, 0.2796 ) }
    dend_20 { pt3dadd( 296.369, 295.12, 69.9815, 0.2542 ) }
    dend_20 { pt3dadd( 295.603, 294.312, 69.4462, 0.305 ) }
    dend_20 { pt3dadd( 294.801, 293.696, 68.1411, 0.4068 ) }
    dend_20 { pt3dadd( 294.002, 293.071, 67.0894, 0.5084 ) }
    dend_20 { pt3dadd( 293.247, 292.375, 68.3208, 0.5592 ) }
    dend_20 { pt3dadd( 292.487, 291.682, 69.5268, 0.5338 ) }
    dend_20 { pt3dadd( 291.471, 291.156, 69.4322, 0.483 ) }
    dend_20 { pt3dadd( 290.448, 290.662, 69.4372, 0.483 ) }
    dend_20 { pt3dadd( 289.374, 290.379, 70.0997, 0.5592 ) }
    dend_20 { pt3dadd( 288.321, 290.054, 70.7706, 0.5848 ) }
    dend_20 { pt3dadd( 287.465, 289.359, 71.5103, 0.6102 ) }
    dend_20 { pt3dadd( 286.896, 288.53, 72.7202, 0.5592 ) }
    dend_20 { pt3dadd( 286.433, 287.654, 74.0533, 0.5848 ) }
    dend_20 { pt3dadd( 285.579, 286.943, 73.388, 0.5592 ) }
    dend_20 { pt3dadd( 284.727, 286.292, 73.108, 0.5084 ) }
    dend_20 { pt3dadd( 283.883, 285.955, 74.8084, 0.4068 ) }
    dend_20 { pt3dadd( 283.021, 285.59, 75.7081, 0.356 ) }
    dend_20 { pt3dadd( 282.113, 285.145, 74.3982, 0.3814 ) }
    dend_20 { pt3dadd( 281.17, 284.672, 73.4334, 0.4576 ) }
    dend_20 { pt3dadd( 280.162, 284.147, 73.1086, 0.483 ) }
    dend_20 { pt3dadd( 279.125, 283.737, 73.3177, 0.5338 ) }
    dend_20 { pt3dadd( 278.059, 283.433, 74.0079, 0.5592 ) }
    dend_20 { pt3dadd( 277.006, 283.129, 74.807, 0.6102 ) }
    dend_20 { pt3dadd( 275.961, 282.824, 75.6776, 0.6102 ) }
    dend_20 { pt3dadd( 274.991, 282.343, 76.2502, 0.6102 ) }
    dend_20 { pt3dadd( 274.138, 281.582, 76.3549, 0.5848 ) }
    dend_20 { pt3dadd( 273.366, 280.921, 77.4326, 0.5084 ) }
    dend_20 { pt3dadd( 272.633, 280.306, 78.9676, 0.4576 ) }
    dend_20 { pt3dadd( 271.912, 279.487, 79.6368, 0.4576 ) }
    dend_20 { pt3dadd( 271.19, 278.619, 80.0682, 0.483 ) }
    dend_20 { pt3dadd( 270.381, 277.835, 79.5749, 0.4576 ) }
    dend_20 { pt3dadd( 269.571, 277.053, 79.0812, 0.4068 ) }
    dend_20 { pt3dadd( 268.681, 276.488, 79.8809, 0.3814 ) }
    dend_20 { pt3dadd( 267.769, 275.981, 81.0314, 0.356 ) }
    dend_20 { pt3dadd( 266.885, 275.325, 81.6547, 0.3304 ) }
    dend_20 { pt3dadd( 265.992, 274.628, 82.0075, 0.3814 ) }
    dend_20 { pt3dadd( 265.036, 274.005, 82.2542, 0.483 ) }
    dend_20 { pt3dadd( 264.145, 273.335, 82.7375, 0.6102 ) }
    dend_20 { pt3dadd( 263.353, 272.587, 83.5929, 0.6356 ) }
    dend_20 { pt3dadd( 262.601, 271.762, 83.8701, 0.661 ) }
    dend_20 { pt3dadd( 261.879, 270.878, 83.7001, 0.6102 ) }
    dend_20 { pt3dadd( 261.092, 270.077, 84.0566, 0.5338 ) }
    dend_20 { pt3dadd( 260.275, 269.315, 84.6619, 0.4068 ) }
    dend_20 { pt3dadd( 259.465, 268.591, 85.5341, 0.3814 ) }
    dend_20 { pt3dadd( 258.657, 267.875, 86.4618, 0.4322 ) }
    dend_20 { pt3dadd( 257.861, 267.06, 86.4254, 0.5084 ) }
    dend_20 { pt3dadd( 257.066, 266.24, 86.3246, 0.5084 ) }
    dend_20 { pt3dadd( 256.48, 265.394, 87.5224, 0.4576 ) }
    dend_20 { pt3dadd( 255.882, 264.545, 88.6802, 0.3814 ) }
    dend_20 { pt3dadd( 255.211, 263.683, 89.5087, 0.305 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_20 { pt3dadd( 254.493, 262.852, 90.218, 0.2542 ) }
    dend_20 { pt3dadd( 253.609, 262.135, 90.4893, 0.2288 ) }
    dend_20 { pt3dadd( 252.795, 261.391, 90.3871, 0.2288 ) }
    dend_20 { pt3dadd( 252.205, 260.561, 89.1139, 0.2796 ) }
    dend_20 { pt3dadd( 251.411, 259.881, 89.2192, 0.3304 ) }
    dend_20 { pt3dadd( 250.503, 259.289, 90.1065, 0.4068 ) }
    dend_20 { pt3dadd( 249.444, 258.926, 89.7546, 0.3814 ) }
    dend_20 { pt3dadd( 248.381, 258.555, 89.3673, 0.3814 ) }
    dend_20 { pt3dadd( 247.388, 257.99, 89.5334, 0.356 ) }
    dend_20 { pt3dadd( 246.363, 257.493, 89.518, 0.3814 ) }
    dend_20 { pt3dadd( 245.308, 257.057, 89.3374, 0.3814 ) }
    dend_20 { pt3dadd( 244.403, 256.44, 89.9161, 0.356 ) }
    dend_20 { pt3dadd( 243.551, 255.76, 90.7651, 0.356 ) }
    dend_20 { pt3dadd( 242.794, 255.101, 92.0702, 0.3304 ) }
    dend_20 { pt3dadd( 242.069, 254.45, 93.5368, 0.356 ) }
    dend_20 { pt3dadd( 241.184, 253.871, 93.422, 0.3304 ) }
    dend_20 { pt3dadd( 240.231, 253.323, 92.6419, 0.3304 ) }
    dend_20 { pt3dadd( 239.277, 252.73, 92.4274, 0.2796 ) }
    dend_20 { pt3dadd( 238.321, 252.107, 92.6024, 0.2542 ) }
    dend_20 { pt3dadd( 237.429, 251.418, 93.0093, 0.2288 ) }
    dend_20 { pt3dadd( 236.591, 250.679, 93.6009, 0.2288 ) }
    dend_20 { pt3dadd( 235.837, 249.86, 93.8554, 0.2796 ) }
    dend_20 { pt3dadd( 235.237, 248.897, 93.4959, 0.3304 ) }
    dend_20 { pt3dadd( 234.595, 248.052, 93.693, 0.4068 ) }
    dend_20 { pt3dadd( 233.838, 247.512, 95.3291, 0.4322 ) }
    dend_20 { pt3dadd( 233.07, 246.915, 96.6171, 0.4576 ) }
    dend_20 { pt3dadd( 232.257, 246.111, 96.658, 0.4576 ) }
    dend_20 { pt3dadd( 231.41, 245.347, 96.689, 0.4322 ) }
    dend_20 { pt3dadd( 230.472, 244.692, 96.6952, 0.4068 ) }
    dend_20 { pt3dadd( 229.573, 243.99, 96.7288, 0.3814 ) }
    dend_20 { pt3dadd( 228.749, 243.198, 96.8148, 0.356 ) }
    dend_20 { pt3dadd( 227.918, 242.415, 96.9522, 0.356 ) }
    dend_20 { pt3dadd( 227.056, 241.687, 97.4081, 0.3304 ) }
    dend_20 { pt3dadd( 226.195, 240.955, 97.839, 0.3814 ) }
    dend_20 { pt3dadd( 225.348, 240.19, 98.0087, 0.3814 ) }
    dend_20 { pt3dadd( 224.501, 239.423, 98.1784, 0.4322 ) }
    dend_20 { pt3dadd( 223.65, 238.678, 98.5827, 0.4068 ) }
    dend_20 { pt3dadd( 222.798, 237.935, 99.0172, 0.4068 ) }
    dend_20 { pt3dadd( 221.862, 237.283, 99.1211, 0.356 ) }
    dend_20 { pt3dadd( 220.913, 236.644, 99.1704, 0.3304 ) }
    dend_20 { pt3dadd( 219.812, 236.457, 99.3558, 0.305 ) }
    dend_20 { pt3dadd( 218.675, 236.378, 99.5739, 0.3304 ) }
    dend_20 { pt3dadd( 217.666, 235.955, 100.039, 0.3304 ) }
    dend_20 { pt3dadd( 216.724, 235.352, 100.633, 0.3304 ) }
    dend_20 { pt3dadd( 215.709, 234.847, 100.734, 0.305 ) }
    dend_20 { pt3dadd( 214.665, 234.385, 100.625, 0.305 ) }
    dend_20 { pt3dadd( 213.862, 233.685, 100.968, 0.305 ) }
    dend_20 { pt3dadd( 213.307, 232.768, 101.897, 0.2796 ) }
    dend_20 { pt3dadd( 212.721, 232.015, 103.44, 0.2796 ) }
    dend_20 { pt3dadd( 212.166, 231.176, 103.986, 0.305 ) }
    dend_20 { pt3dadd( 211.654, 230.219, 103.11, 0.3814 ) }
    dend_20 { pt3dadd( 211.059, 229.279, 103.003, 0.4576 ) }
    dend_20 { pt3dadd( 210.409, 228.352, 103.408, 0.5084 ) }
    dend_20 { pt3dadd( 209.72, 227.447, 103.617, 0.5592 ) }
    dend_20 { pt3dadd( 209.0, 226.558, 103.665, 0.5848 ) }
    dend_20 { pt3dadd( 208.125, 225.867, 103.811, 0.661 ) }
    dend_20 { pt3dadd( 207.102, 225.363, 104.05, 0.7118 ) }
    dend_20 { pt3dadd( 206.093, 224.865, 103.932, 0.7118 ) }
    dend_20 { pt3dadd( 205.108, 224.375, 103.16, 0.6102 ) }
    dend_20 { pt3dadd( 204.073, 224.139, 103.968, 0.5084 ) }
    dend_20 { pt3dadd( 203.03, 223.943, 105.014, 0.5084 ) }
    dend_20 { pt3dadd( 202.02, 224.097, 106.127, 0.5338 ) }
    dend_20 { pt3dadd( 201.024, 224.411, 107.271, 0.5338 ) }
    dend_20 { pt3dadd( 199.904, 224.381, 107.628, 0.483 ) }
    dend_20 { pt3dadd( 198.768, 224.303, 107.874, 0.4576 ) }
    dend_20 { pt3dadd( 197.937, 224.198, 109.739, 0.4322 ) }
    dend_20 { pt3dadd( 197.086, 224.021, 111.341, 0.356 ) }
    dend_20 { pt3dadd( 196.06, 223.516, 111.298, 0.2796 ) }
    dend_20 { pt3dadd( 195.504, 222.757, 109.985, 0.2288 ) }
    dend_20 { pt3dadd( 195.064, 221.936, 108.36, 0.2796 ) }
    dend_20 { pt3dadd( 194.784, 222.065, 108.921, 0.3304 ) }
    dend_20 { pt3dadd( 193.951, 222.451, 110.59, 0.356 ) }
    dend_20 { pt3dadd( 193.116, 222.836, 112.26, 0.3304 ) }
    dend_20 { pt3dadd( 192.196, 223.158, 113.587, 0.3304 ) }
    dend_20 { pt3dadd( 191.099, 223.351, 114.217, 0.2796 ) }
    dend_20 { pt3dadd( 190.033, 223.609, 114.907, 0.2542 ) }
    dend_20 { pt3dadd( 189.123, 224.177, 115.882, 0.2542 ) }
    dend_20 { pt3dadd( 188.166, 224.585, 115.952, 0.2796 ) }
    dend_20 { pt3dadd( 187.144, 224.775, 114.783, 0.305 ) }
    dend_20 { pt3dadd( 186.078, 224.869, 114.137, 0.2796 ) }
    dend_20 { pt3dadd( 184.938, 224.807, 114.332, 0.2542 ) }
    dend_20 { pt3dadd( 183.867, 224.846, 115.257, 0.2288 ) }
    dend_20 { pt3dadd( 182.81, 224.909, 116.295, 0.2796 ) }
    dend_20 { pt3dadd( 181.707, 225.204, 116.131, 0.356 ) }
    dend_20 { pt3dadd( 180.602, 225.492, 115.956, 0.483 ) }
    dend_20 { pt3dadd( 179.481, 225.654, 115.581, 0.5338 ) }
    dend_20 { pt3dadd( 178.36, 225.806, 115.24, 0.5592 ) }
    dend_20 { pt3dadd( 177.288, 225.6, 116.074, 0.483 ) }
    dend_20 { pt3dadd( 176.215, 225.394, 116.907, 0.4322 ) }
    dend_20 { pt3dadd( 175.177, 225.752, 117.493, 0.3814 ) }
    dend_20 { pt3dadd( 174.145, 226.191, 118.042, 0.4322 ) }
    dend_20 { pt3dadd( 173.043, 226.388, 117.577, 0.483 ) }
    dend_20 { pt3dadd( 171.934, 226.57, 117.042, 0.5084 ) }
    dend_20 { pt3dadd( 170.987, 226.028, 117.641, 0.4576 ) }
    dend_20 { pt3dadd( 170.051, 225.432, 118.324, 0.4068 ) }
    dend_20 { pt3dadd( 168.945, 225.402, 118.863, 0.4068 ) }
    dend_20 { pt3dadd( 167.821, 225.434, 119.183, 0.4068 ) }
    dend_20 { pt3dadd( 166.695, 225.47, 118.71, 0.3814 ) }
    dend_20 { pt3dadd( 165.59, 225.696, 118.708, 0.3304 ) }
    dend_20 { pt3dadd( 164.497, 226.021, 118.947, 0.3304 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_20 { pt3dadd( 163.534, 226.466, 119.762, 0.3814 ) }
    dend_20 { pt3dadd( 162.676, 227.008, 121.052, 0.4068 ) }
    dend_20 { pt3dadd( 161.866, 227.699, 122.018, 0.3814 ) }
    dend_20 { pt3dadd( 161.08, 228.462, 122.827, 0.3304 ) }
    dend_20 { pt3dadd( 160.154, 229.051, 122.908, 0.305 ) }
    dend_20 { pt3dadd( 159.124, 229.506, 122.427, 0.305 ) }
    dend_20 { pt3dadd( 158.02, 229.784, 122.249, 0.2796 ) }
    dend_20 { pt3dadd( 156.907, 230.041, 122.108, 0.2542 ) }
    dend_20 { pt3dadd( 155.822, 230.333, 122.552, 0.2542 ) }
    dend_20 { pt3dadd( 154.744, 230.634, 123.142, 0.2796 ) }
    dend_20 { pt3dadd( 153.732, 230.919, 124.211, 0.3304 ) }
    dend_20 { pt3dadd( 152.739, 231.2, 125.418, 0.3304 ) }
    dend_20 { pt3dadd( 151.669, 231.257, 125.234, 0.3814 ) }
    dend_20 { pt3dadd( 150.568, 231.222, 124.479, 0.3814 ) }
    dend_20 { pt3dadd( 149.585, 231.461, 125.384, 0.4068 ) }
    dend_20 { pt3dadd( 148.633, 231.773, 126.736, 0.356 ) }
    dend_20 { pt3dadd( 147.543, 231.867, 127.096, 0.3814 ) }
    dend_20 { pt3dadd( 146.399, 231.875, 127.07, 0.4322 ) }
    dend_20 { pt3dadd( 145.321, 231.617, 126.761, 0.5084 ) }
    dend_20 { pt3dadd( 144.293, 231.162, 126.246, 0.483 ) }
    dend_20 { pt3dadd( 143.243, 231.168, 126.353, 0.4322 ) }
    dend_20 { pt3dadd( 142.178, 231.515, 126.919, 0.3814 ) }
    dend_20 { pt3dadd( 141.079, 231.764, 127.343, 0.4322 ) }
    dend_20 { pt3dadd( 139.957, 231.943, 127.665, 0.5084 ) }
    dend_20 { pt3dadd( 138.828, 232.018, 127.863, 0.5592 ) }
    dend_20 { pt3dadd( 137.689, 231.92, 127.854, 0.5338 ) }
    dend_20 { pt3dadd( 136.55, 231.828, 127.87, 0.4576 ) }
    dend_20 { pt3dadd( 135.49, 231.963, 128.864, 0.4576 ) }
    dend_20 { pt3dadd( 134.428, 232.119, 129.767, 0.5084 ) }
    dend_20 { pt3dadd( 133.356, 232.507, 129.532, 0.5592 ) }
    dend_20 { pt3dadd( 132.297, 232.886, 129.12, 0.5338 ) }
    dend_20 { pt3dadd( 131.274, 233.244, 128.229, 0.4576 ) }
    dend_20 { pt3dadd( 130.504, 233.598, 128.715, 0.4576 ) }
    dend_20 { pt3dadd( 130.103, 233.946, 131.195, 0.5084 ) }
    dend_20 { pt3dadd( 129.576, 234.404, 132.951, 0.5592 ) }
    dend_20 { pt3dadd( 128.716, 235.155, 132.782, 0.5084 ) }
    dend_20 { pt3dadd( 127.822, 235.861, 132.566, 0.4068 ) }
    dend_20 { pt3dadd( 126.903, 236.535, 132.313, 0.3814 ) }
    dend_20 { pt3dadd( 126.099, 237.274, 133.042, 0.4576 ) }
    dend_20 { pt3dadd( 125.313, 238.023, 133.919, 0.5592 ) }
    dend_20 { pt3dadd( 124.387, 238.419, 135.225, 0.5848 ) }
    dend_20 { pt3dadd( 123.453, 238.793, 136.557, 0.5592 ) }
    dend_20 { pt3dadd( 122.486, 239.255, 135.637, 0.5338 ) }
    dend_20 { pt3dadd( 121.519, 239.719, 134.666, 0.5084 ) }
    dend_20 { pt3dadd( 120.416, 239.702, 135.1, 0.4576 ) }
    dend_20 { pt3dadd( 119.343, 239.54, 135.738, 0.4576 ) }
    dend_20 { pt3dadd( 118.524, 238.841, 136.678, 0.483 ) }
    dend_20 { pt3dadd( 117.778, 238.077, 136.597, 0.5592 ) }
    dend_20 { pt3dadd( 117.1, 237.254, 135.584, 0.5592 ) }
    dend_20 { pt3dadd( 116.382, 236.49, 135.462, 0.5592 ) }
    dend_20 { pt3dadd( 115.604, 235.815, 136.68, 0.5592 ) }
    dend_20 { pt3dadd( 115.071, 234.932, 137.82, 0.5338 ) }
    dend_20 { pt3dadd( 114.591, 233.996, 138.911, 0.5084 ) }
    dend_20 { pt3dadd( 113.922, 233.101, 139.517, 0.3814 ) }
    dend_20 { pt3dadd( 113.247, 232.218, 140.099, 0.3814 ) }
    dend_20 { pt3dadd( 112.165, 232.008, 139.348, 0.3814 ) }
    dend_20 { pt3dadd( 111.146, 231.738, 138.715, 0.4576 ) }
    dend_20 { pt3dadd( 110.975, 230.676, 139.67, 0.4068 ) }
    dend_20 { pt3dadd( 110.729, 229.657, 139.971, 0.356 ) }
    dend_20 { pt3dadd( 110.299, 228.742, 138.662, 0.305 ) }
    dend_20 { pt3dadd( 109.791, 227.972, 138.687, 0.305 ) }
    dend_20 { pt3dadd( 109.222, 227.439, 140.716, 0.305 ) }
    dend_20 { pt3dadd( 108.768, 226.981, 143.03, 0.305 ) }
    dend_20 { pt3dadd( 107.983, 226.426, 143.688, 0.3304 ) }
    dend_20 { pt3dadd( 107.019, 225.818, 143.451, 0.4068 ) }
    dend_20 { pt3dadd( 106.138, 225.171, 143.983, 0.5084 ) }
    dend_20 { pt3dadd( 105.313, 224.491, 144.96, 0.6102 ) }
    dend_20 { pt3dadd( 104.609, 223.594, 145.171, 0.661 ) }
    dend_20 { pt3dadd( 103.912, 222.691, 145.383, 0.7118 ) }
    dend_20 { pt3dadd( 103.379, 221.684, 145.632, 0.661 ) }
    dend_20 { pt3dadd( 102.845, 220.678, 145.88, 0.5592 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 71/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 339.703, 329.879, 52.08, 0.5848 ) }
    dend_15 { pt3dadd( 339.125, 329.847, 52.4521, 0.3814 ) }
    dend_15 { pt3dadd( 338.021, 329.784, 53.1639, 0.4068 ) }
    dend_15 { pt3dadd( 336.946, 330.052, 52.5563, 0.4068 ) }
    dend_15 { pt3dadd( 335.872, 330.335, 51.8876, 0.4322 ) }
    dend_15 { pt3dadd( 334.999, 331.006, 52.2922, 0.5084 ) }
    dend_15 { pt3dadd( 334.161, 331.747, 52.8889, 0.661 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 78/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 337.797, 469.002, 110.973, 0.356 ) }
    dend_11 { pt3dadd( 338.47, 469.358, 110.668, 0.356 ) }
    dend_11 { pt3dadd( 339.468, 469.885, 110.214, 0.4322 ) }
    dend_11 { pt3dadd( 340.466, 470.413, 109.76, 0.4068 ) }
    dend_11 { pt3dadd( 340.797, 470.329, 110.102, 0.356 ) }
    dend_11 { pt3dadd( 341.92, 470.19, 110.316, 0.4068 ) }
    dend_11 { pt3dadd( 343.05, 470.049, 110.38, 0.4576 ) }
    dend_11 { pt3dadd( 344.074, 469.596, 109.807, 0.4068 ) }
    dend_11 { pt3dadd( 345.13, 469.269, 109.302, 0.3304 ) }
    dend_11 { pt3dadd( 346.266, 469.263, 108.973, 0.2796 ) }
    dend_11 { pt3dadd( 347.363, 469.173, 109.2, 0.2796 ) }
    dend_11 { pt3dadd( 348.404, 468.96, 110.237, 0.305 ) }
    dend_11 { pt3dadd( 349.427, 468.664, 110.964, 0.2796 ) }
    dend_11 { pt3dadd( 350.374, 468.052, 110.502, 0.2542 ) }
    dend_11 { pt3dadd( 351.321, 467.438, 110.04, 0.2288 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 93/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 337.797, 469.002, 110.973, 0.356 ) }
    dend_10 { pt3dadd( 337.405, 469.825, 110.899, 0.305 ) }
    dend_10 { pt3dadd( 336.846, 470.527, 109.161, 0.3304 ) }
    dend_10 { pt3dadd( 336.218, 471.061, 110.955, 0.3304 ) }
    dend_10 { pt3dadd( 335.445, 471.552, 112.536, 0.356 ) }
    dend_10 { pt3dadd( 334.503, 472.003, 113.684, 0.3814 ) }
    dend_10 { pt3dadd( 333.446, 472.366, 113.954, 0.4322 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_10 { pt3dadd( 332.353, 472.703, 113.958, 0.4576 ) }
    dend_10 { pt3dadd( 331.319, 473.156, 114.272, 0.4322 ) }
    dend_10 { pt3dadd( 330.315, 473.67, 114.754, 0.4068 ) }
    dend_10 { pt3dadd( 329.416, 474.276, 115.47, 0.356 ) }
    dend_10 { pt3dadd( 328.687, 475.032, 116.577, 0.305 ) }
    dend_10 { pt3dadd( 327.873, 475.729, 117.375, 0.2542 ) }
    dend_10 { pt3dadd( 326.884, 476.3, 117.541, 0.2288 ) }
    dend_10 { pt3dadd( 325.949, 476.929, 117.918, 0.2796 ) }
    dend_10 { pt3dadd( 325.068, 477.618, 118.512, 0.3304 ) }
    dend_10 { pt3dadd( 324.307, 478.383, 118.975, 0.4068 ) }
    dend_10 { pt3dadd( 324.097, 479.507, 118.835, 0.3814 ) }
    dend_10 { pt3dadd( 323.849, 480.589, 118.976, 0.356 ) }
    dend_10 { pt3dadd( 323.434, 481.487, 120.383, 0.2796 ) }
    dend_10 { pt3dadd( 323.02, 482.385, 121.789, 0.2796 ) }
    dend_10 { pt3dadd( 322.464, 483.382, 121.706, 0.305 ) }
    dend_10 { pt3dadd( 321.866, 484.342, 121.554, 0.3814 ) }
    dend_10 { pt3dadd( 320.979, 485.026, 120.992, 0.4068 ) }
    dend_10 { pt3dadd( 320.163, 485.456, 120.767, 0.3814 ) }
    dend_10 { pt3dadd( 319.716, 484.595, 122.248, 0.356 ) }
    dend_10 { pt3dadd( 318.736, 484.11, 122.519, 0.356 ) }
    dend_10 { pt3dadd( 317.675, 483.68, 122.612, 0.3814 ) }
    dend_10 { pt3dadd( 316.789, 483.683, 124.253, 0.3304 ) }
    dend_10 { pt3dadd( 315.921, 483.736, 126.076, 0.2796 ) }
    dend_10 { pt3dadd( 314.796, 483.787, 126.461, 0.2796 ) }
    dend_10 { pt3dadd( 313.661, 483.839, 126.776, 0.3814 ) }
    dend_10 { pt3dadd( 312.529, 483.896, 126.394, 0.5084 ) }
    dend_10 { pt3dadd( 311.398, 483.953, 126.011, 0.5592 ) }
    dend_10 { pt3dadd( 310.366, 484.384, 126.551, 0.5592 ) }
    dend_10 { pt3dadd( 309.337, 484.827, 127.12, 0.5084 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 29/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 460.573, 292.419, 33.5689, 0.5848 ) }
    dend_52 { pt3dadd( 460.95, 291.895, 35.7512, 0.3304 ) }
    dend_52 { pt3dadd( 461.34, 291.349, 38.0201, 0.2796 ) }
    dend_52 { pt3dadd( 461.73, 290.805, 40.2889, 0.2542 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 33/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 460.573, 292.419, 33.5689, 0.5848 ) }
    dend_51 { pt3dadd( 461.249, 291.962, 32.7407, 0.3304 ) }
    dend_51 { pt3dadd( 462.255, 291.625, 31.9648, 0.4576 ) }
    dend_51 { pt3dadd( 463.374, 291.512, 31.4499, 0.5592 ) }
    dend_51 { pt3dadd( 464.427, 291.522, 30.4511, 0.5592 ) }
    dend_51 { pt3dadd( 465.448, 291.599, 29.199, 0.4576 ) }
    dend_51 { pt3dadd( 466.515, 291.781, 28.3707, 0.3304 ) }
    dend_51 { pt3dadd( 467.607, 292.015, 27.7575, 0.305 ) }
    dend_51 { pt3dadd( 468.636, 291.81, 28.0414, 0.356 ) }
    dend_51 { pt3dadd( 469.63, 291.349, 28.8476, 0.4322 ) }
    dend_51 { pt3dadd( 470.707, 291.312, 29.1421, 0.4068 ) }
    dend_51 { pt3dadd( 471.831, 291.52, 29.1379, 0.3304 ) }
    dend_51 { pt3dadd( 472.932, 291.396, 28.7462, 0.2542 ) }
    dend_51 { pt3dadd( 474.022, 291.133, 28.1924, 0.2542 ) }
    dend_51 { pt3dadd( 475.147, 291.008, 28.0456, 0.2796 ) }
    dend_51 { pt3dadd( 476.29, 290.956, 28.1109, 0.305 ) }
    dend_51 { pt3dadd( 477.386, 290.68, 27.9328, 0.2796 ) }
    dend_51 { pt3dadd( 478.461, 290.309, 27.6525, 0.2542 ) }
    dend_51 { pt3dadd( 479.327, 289.824, 26.3981, 0.2288 ) }
    dend_51 { pt3dadd( 480.21, 289.417, 25.2232, 0.2288 ) }
    dend_51 { pt3dadd( 481.354, 289.368, 25.2246, 0.2542 ) }
    dend_51 { pt3dadd( 482.495, 289.349, 25.2736, 0.356 ) }
    dend_51 { pt3dadd( 483.63, 289.451, 25.5242, 0.4576 ) }
    dend_51 { pt3dadd( 484.764, 289.533, 25.767, 0.5338 ) }
    dend_51 { pt3dadd( 485.888, 289.327, 25.9045, 0.5084 ) }
    dend_51 { pt3dadd( 487.009, 289.108, 26.0543, 0.5338 ) }
    dend_51 { pt3dadd( 488.103, 288.79, 26.2926, 0.5338 ) }
    dend_51 { pt3dadd( 489.197, 288.472, 26.5311, 0.5084 ) }
    dend_51 { pt3dadd( 490.315, 288.465, 26.2041, 0.4322 ) }
    dend_51 { pt3dadd( 491.44, 288.469, 25.7536, 0.4068 ) }
    dend_51 { pt3dadd( 492.564, 288.335, 25.3686, 0.483 ) }
    dend_51 { pt3dadd( 493.642, 287.995, 25.2204, 0.5084 ) }
    dend_51 { pt3dadd( 494.693, 287.546, 25.1992, 0.5084 ) }
    dend_51 { pt3dadd( 495.789, 287.223, 25.1591, 0.4068 ) }
    dend_51 { pt3dadd( 496.895, 286.934, 25.114, 0.3814 ) }
    dend_51 { pt3dadd( 497.954, 286.969, 24.5336, 0.3304 ) }
    dend_51 { pt3dadd( 498.971, 287.28, 23.5026, 0.3304 ) }
    dend_51 { pt3dadd( 500.051, 287.323, 23.875, 0.2796 ) }
    dend_51 { pt3dadd( 501.149, 287.287, 24.6565, 0.2542 ) }
    dend_51 { pt3dadd( 502.205, 287.555, 24.0335, 0.2542 ) }
    dend_51 { pt3dadd( 503.256, 287.862, 23.2229, 0.2796 ) }
    dend_51 { pt3dadd( 504.302, 288.293, 22.8085, 0.356 ) }
    dend_51 { pt3dadd( 505.347, 288.726, 22.4034, 0.4068 ) }
    dend_51 { pt3dadd( 506.391, 289.077, 22.9978, 0.4576 ) }
    dend_51 { pt3dadd( 507.434, 289.41, 23.8092, 0.4068 ) }
    dend_51 { pt3dadd( 508.506, 289.705, 24.1508, 0.3304 ) }
    dend_51 { pt3dadd( 509.618, 289.951, 23.8736, 0.2542 ) }
    dend_51 { pt3dadd( 510.709, 290.14, 23.3276, 0.2542 ) }
    dend_51 { pt3dadd( 511.761, 290.213, 22.2359, 0.305 ) }
    dend_51 { pt3dadd( 512.831, 290.417, 22.4515, 0.356 ) }
    dend_51 { pt3dadd( 513.911, 290.669, 23.151, 0.356 ) }
    dend_51 { pt3dadd( 514.902, 290.938, 24.3718, 0.305 ) }
    dend_51 { pt3dadd( 515.891, 291.216, 25.5858, 0.2542 ) }
    dend_51 { pt3dadd( 516.955, 291.606, 25.944, 0.2796 ) }
    dend_51 { pt3dadd( 517.724, 292.021, 24.5473, 0.3304 ) }
    dend_51 { pt3dadd( 518.382, 292.445, 22.5067, 0.4322 ) }
    dend_51 { pt3dadd( 519.375, 292.635, 21.28, 0.4322 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 90/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 374.201, 277.967, 28.3422, 0.3304 ) }
    dend_44 { pt3dadd( 372.816, 277.407, 28.28, 0.305 ) }
    dend_44 { pt3dadd( 371.861, 276.554, 29.7643, 0.3304 ) }
    dend_44 { pt3dadd( 371.218, 275.825, 28.849, 0.305 ) }
    dend_44 { pt3dadd( 370.613, 275.085, 27.3104, 0.356 ) }
    dend_44 { pt3dadd( 369.79, 274.345, 26.6865, 0.4068 ) }
    dend_44 { pt3dadd( 368.946, 273.605, 26.15, 0.4576 ) }
    dend_44 { pt3dadd( 368.046, 273.156, 24.8917, 0.4068 ) }
    dend_44 { pt3dadd( 367.135, 272.765, 23.4934, 0.356 ) }
    dend_44 { pt3dadd( 366.365, 272.24, 24.5566, 0.3304 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_44 { pt3dadd( 365.627, 271.683, 26.2074, 0.3814 ) }
    dend_44 { pt3dadd( 365.2, 270.746, 25.2014, 0.4576 ) }
    dend_44 { pt3dadd( 364.766, 269.803, 24.052, 0.5338 ) }
    dend_44 { pt3dadd( 364.019, 269.055, 22.9818, 0.6102 ) }
    dend_44 { pt3dadd( 363.273, 268.307, 21.912, 0.6102 ) }
    dend_44 { pt3dadd( 362.675, 267.354, 22.2628, 0.5338 ) }
    dend_44 { pt3dadd( 362.1, 266.384, 22.6772, 0.4322 ) }
    dend_44 { pt3dadd( 362.085, 265.241, 22.57, 0.3814 ) }
    dend_44 { pt3dadd( 361.902, 264.166, 22.2051, 0.3814 ) }
    dend_44 { pt3dadd( 361.353, 263.236, 21.2783, 0.3304 ) }
    dend_44 { pt3dadd( 361.072, 262.256, 20.4898, 0.305 ) }
    dend_44 { pt3dadd( 361.367, 261.169, 19.9987, 0.305 ) }
    dend_44 { pt3dadd( 361.15, 260.086, 19.8386, 0.3814 ) }
    dend_44 { pt3dadd( 360.779, 259.004, 19.7764, 0.4068 ) }
    dend_44 { pt3dadd( 360.541, 257.917, 20.2689, 0.3814 ) }
    dend_44 { pt3dadd( 360.359, 256.828, 21.0, 0.3304 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 16/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 374.201, 277.967, 28.3422, 0.3304 ) }
    dend_43 { pt3dadd( 374.499, 276.933, 28.7759, 0.2796 ) }
    dend_43 { pt3dadd( 374.597, 275.842, 29.5865, 0.2796 ) }
    dend_43 { pt3dadd( 374.217, 274.786, 29.8474, 0.3304 ) }
    dend_43 { pt3dadd( 373.77, 273.735, 29.9902, 0.4576 ) }
    dend_43 { pt3dadd( 373.301, 272.693, 29.8964, 0.5592 ) }
    dend_43 { pt3dadd( 372.832, 271.65, 29.8024, 0.5848 ) }
    dend_43 { pt3dadd( 372.298, 270.652, 30.1325, 0.5084 ) }
    dend_43 { pt3dadd( 371.745, 269.667, 30.5721, 0.4068 ) }
    dend_43 { pt3dadd( 371.244, 268.72, 29.8483, 0.305 ) }
    dend_43 { pt3dadd( 370.759, 267.785, 28.7526, 0.2796 ) }
    dend_43 { pt3dadd( 370.308, 266.862, 29.0318, 0.2796 ) }
    dend_43 { pt3dadd( 369.884, 265.947, 30.3534, 0.305 ) }
    dend_43 { pt3dadd( 369.208, 265.111, 30.5438, 0.3304 ) }
    dend_43 { pt3dadd( 368.401, 264.314, 30.1568, 0.356 ) }
    dend_43 { pt3dadd( 367.586, 263.52, 29.9421, 0.4068 ) }
    dend_43 { pt3dadd( 366.758, 262.73, 29.9057, 0.4322 ) }
    dend_43 { pt3dadd( 365.972, 261.912, 29.9782, 0.4576 ) }
    dend_43 { pt3dadd( 365.349, 260.977, 30.5161, 0.483 ) }
    dend_43 { pt3dadd( 364.739, 260.023, 30.7289, 0.483 ) }
    dend_43 { pt3dadd( 364.146, 259.048, 30.5782, 0.5338 ) }
    dend_43 { pt3dadd( 363.572, 258.064, 30.5402, 0.5084 ) }
    dend_43 { pt3dadd( 363.078, 257.043, 30.917, 0.5338 ) }
    dend_43 { pt3dadd( 362.584, 256.023, 31.2939, 0.483 ) }
    dend_43 { pt3dadd( 361.98, 255.065, 31.6778, 0.5084 ) }
    dend_43 { pt3dadd( 361.352, 254.122, 32.0628, 0.4576 ) }
    dend_43 { pt3dadd( 360.725, 253.174, 31.9561, 0.4068 ) }
    dend_43 { pt3dadd( 360.095, 252.226, 31.7363, 0.3304 ) }
    dend_43 { pt3dadd( 359.452, 251.285, 32.006, 0.305 ) }
    dend_43 { pt3dadd( 358.808, 250.346, 32.2759, 0.3304 ) }
    dend_43 { pt3dadd( 358.256, 249.353, 32.59, 0.3304 ) }
    dend_43 { pt3dadd( 357.716, 248.353, 32.9101, 0.3304 ) }
    dend_43 { pt3dadd( 357.034, 247.451, 33.1145, 0.2796 ) }
    dend_43 { pt3dadd( 356.257, 246.613, 33.2399, 0.2796 ) }
    dend_43 { pt3dadd( 355.626, 245.708, 33.0084, 0.2796 ) }
    dend_43 { pt3dadd( 355.26, 244.684, 32.1437, 0.305 ) }
    dend_43 { pt3dadd( 354.854, 243.673, 31.6739, 0.305 ) }
    dend_43 { pt3dadd( 354.326, 242.703, 32.401, 0.305 ) }
    dend_43 { pt3dadd( 353.787, 241.736, 32.9694, 0.3304 ) }
    dend_43 { pt3dadd( 353.17, 240.799, 32.4232, 0.356 ) }
    dend_43 { pt3dadd( 352.561, 239.85, 32.0989, 0.4322 ) }
    dend_43 { pt3dadd( 351.976, 238.871, 32.303, 0.4576 ) }
    dend_43 { pt3dadd( 351.352, 237.92, 32.5032, 0.483 ) }
    dend_43 { pt3dadd( 350.579, 237.08, 32.688, 0.4068 ) }
    dend_43 { pt3dadd( 349.751, 236.311, 32.9468, 0.4068 ) }
    dend_43 { pt3dadd( 348.795, 235.706, 33.3774, 0.4068 ) }
    dend_43 { pt3dadd( 347.84, 235.102, 33.8078, 0.483 ) }
    dend_43 { pt3dadd( 346.8, 234.64, 33.9752, 0.483 ) }
    dend_43 { pt3dadd( 345.74, 234.213, 34.0791, 0.483 ) }
    dend_43 { pt3dadd( 344.857, 233.548, 34.006, 0.4322 ) }
    dend_43 { pt3dadd( 344.129, 232.669, 33.7753, 0.3814 ) }
    dend_43 { pt3dadd( 343.376, 231.809, 33.6641, 0.3304 ) }
    dend_43 { pt3dadd( 342.62, 230.951, 33.5706, 0.3304 ) }
    dend_43 { pt3dadd( 341.964, 230.022, 33.7347, 0.356 ) }
    dend_43 { pt3dadd( 341.338, 229.069, 33.9814, 0.3814 ) }
    dend_43 { pt3dadd( 340.44, 228.476, 34.2958, 0.356 ) }
    dend_43 { pt3dadd( 339.362, 228.118, 34.6542, 0.3304 ) }
    dend_43 { pt3dadd( 338.467, 227.432, 34.6791, 0.2796 ) }
    dend_43 { pt3dadd( 337.614, 226.671, 34.629, 0.2542 ) }
    dend_43 { pt3dadd( 336.668, 226.085, 34.8253, 0.2288 ) }
    dend_43 { pt3dadd( 335.602, 225.73, 35.345, 0.2288 ) }
    dend_43 { pt3dadd( 334.562, 225.316, 35.8299, 0.2288 ) }
    dend_43 { pt3dadd( 333.641, 224.653, 36.1651, 0.2288 ) }
    dend_43 { pt3dadd( 332.693, 224.024, 36.2474, 0.2288 ) }
    dend_43 { pt3dadd( 331.717, 223.43, 36.0707, 0.2288 ) }
    dend_43 { pt3dadd( 330.767, 222.808, 35.9831, 0.2796 ) }
    dend_43 { pt3dadd( 329.979, 222.001, 36.4566, 0.3304 ) }
    dend_43 { pt3dadd( 329.135, 221.263, 36.7548, 0.3814 ) }
    dend_43 { pt3dadd( 328.131, 220.721, 36.5571, 0.3304 ) }
    dend_43 { pt3dadd( 327.172, 220.113, 36.4344, 0.2796 ) }
    dend_43 { pt3dadd( 326.304, 219.367, 36.4689, 0.2288 ) }
    dend_43 { pt3dadd( 325.437, 218.62, 36.5036, 0.2542 ) }
    dend_43 { pt3dadd( 324.569, 217.884, 36.7786, 0.2796 ) }
    dend_43 { pt3dadd( 323.702, 217.148, 37.0706, 0.305 ) }
    dend_43 { pt3dadd( 322.918, 216.325, 37.0042, 0.3304 ) }
    dend_43 { pt3dadd( 322.171, 215.463, 36.7853, 0.3814 ) }
    dend_43 { pt3dadd( 321.369, 214.656, 36.5574, 0.4322 ) }
    dend_43 { pt3dadd( 320.52, 213.894, 36.3219, 0.4068 ) }
    dend_43 { pt3dadd( 320.101, 212.933, 36.8102, 0.3304 ) }
    dend_43 { pt3dadd( 319.911, 211.863, 37.6902, 0.305 ) }
    dend_43 { pt3dadd( 319.403, 210.931, 37.9854, 0.3814 ) }
    dend_43 { pt3dadd( 318.595, 210.128, 37.7308, 0.5084 ) }
    dend_43 { pt3dadd( 317.652, 209.511, 37.5276, 0.5338 ) }
    dend_43 { pt3dadd( 316.625, 209.012, 37.3568, 0.5084 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_43 { pt3dadd( 315.659, 208.43, 37.401, 0.483 ) }
    dend_43 { pt3dadd( 314.816, 207.681, 37.8739, 0.5338 ) }
    dend_43 { pt3dadd( 313.972, 206.932, 38.3468, 0.5338 ) }
    dend_43 { pt3dadd( 312.977, 206.374, 38.4723, 0.4576 ) }
    dend_43 { pt3dadd( 311.977, 205.82, 38.5879, 0.3304 ) }
    dend_43 { pt3dadd( 311.09, 205.113, 38.4443, 0.305 ) }
    dend_43 { pt3dadd( 310.253, 204.341, 38.1912, 0.3304 ) }
    dend_43 { pt3dadd( 309.421, 203.559, 38.1158, 0.3814 ) }
    dend_43 { pt3dadd( 308.596, 202.767, 38.1797, 0.356 ) }
    dend_43 { pt3dadd( 307.775, 201.972, 38.2953, 0.3304 ) }
    dend_43 { pt3dadd( 306.963, 201.17, 38.4916, 0.305 ) }
    dend_43 { pt3dadd( 306.252, 200.292, 38.7764, 0.3304 ) }
    dend_43 { pt3dadd( 305.648, 199.333, 39.153, 0.356 ) }
    dend_43 { pt3dadd( 305.005, 198.4, 39.3056, 0.3814 ) }
    dend_43 { pt3dadd( 304.286, 197.518, 39.0214, 0.3304 ) }
    dend_43 { pt3dadd( 303.566, 196.636, 38.7374, 0.2796 ) }
    dend_43 { pt3dadd( 302.801, 195.79, 38.554, 0.2288 ) }
    dend_43 { pt3dadd( 302.026, 194.95, 38.39, 0.2288 ) }
    dend_43 { pt3dadd( 301.282, 194.239, 38.9956, 0.2288 ) }
    dend_43 { pt3dadd( 300.584, 193.733, 40.8372, 0.2288 ) }
    dend_43 { pt3dadd( 299.875, 193.548, 40.7949, 0.2288 ) }
    dend_43 { pt3dadd( 299.153, 193.72, 38.6652, 0.2542 ) }
    dend_43 { pt3dadd( 298.249, 193.406, 38.7444, 0.2796 ) }
    dend_43 { pt3dadd( 297.28, 192.915, 39.6234, 0.305 ) }
    dend_43 { pt3dadd( 296.515, 192.437, 41.2339, 0.2796 ) }
    dend_43 { pt3dadd( 295.843, 191.967, 43.1855, 0.2542 ) }
    dend_43 { pt3dadd( 294.939, 191.565, 42.8929, 0.2288 ) }
    dend_43 { pt3dadd( 293.954, 191.19, 41.8057, 0.2542 ) }
    dend_43 { pt3dadd( 293.067, 191.088, 43.374, 0.2796 ) }
    dend_43 { pt3dadd( 292.106, 190.941, 44.5225, 0.305 ) }
    dend_43 { pt3dadd( 290.995, 190.667, 44.5206, 0.3814 ) }
    dend_43 { pt3dadd( 289.874, 190.487, 44.5805, 0.5338 ) }
    dend_43 { pt3dadd( 288.733, 190.507, 44.7728, 0.6864 ) }
    dend_43 { pt3dadd( 287.673, 190.603, 45.4098, 0.661 ) }
    dend_43 { pt3dadd( 286.808, 190.88, 47.112, 0.483 ) }
    dend_43 { pt3dadd( 285.841, 190.967, 48.0556, 0.3304 ) }
    dend_43 { pt3dadd( 284.72, 190.762, 47.8346, 0.2796 ) }
    dend_43 { pt3dadd( 283.605, 190.563, 47.6907, 0.305 ) }
    dend_43 { pt3dadd( 282.65, 190.487, 49.2246, 0.2796 ) }
    dend_43 { pt3dadd( 281.696, 190.412, 50.7587, 0.2796 ) }
    dend_43 { pt3dadd( 280.584, 190.513, 50.9592, 0.2796 ) }
    dend_43 { pt3dadd( 279.447, 190.64, 50.9583, 0.3814 ) }
    dend_43 { pt3dadd( 278.542, 190.468, 49.9008, 0.483 ) }
    dend_43 { pt3dadd( 277.83, 190.047, 47.9688, 0.5848 ) }
    dend_43 { pt3dadd( 276.84, 189.986, 47.5163, 0.5592 ) }
    dend_43 { pt3dadd( 275.71, 190.11, 47.824, 0.5084 ) }
    dend_43 { pt3dadd( 274.573, 190.055, 47.7982, 0.5084 ) }
    dend_43 { pt3dadd( 273.433, 189.96, 47.6983, 0.5338 ) }
    dend_43 { pt3dadd( 272.329, 189.791, 47.9867, 0.5084 ) }
    dend_43 { pt3dadd( 271.277, 189.512, 48.8482, 0.3814 ) }
    dend_43 { pt3dadd( 270.238, 189.284, 48.9541, 0.305 ) }
    dend_43 { pt3dadd( 269.221, 189.149, 47.7162, 0.3304 ) }
    dend_43 { pt3dadd( 268.156, 188.903, 47.581, 0.4322 ) }
    dend_43 { pt3dadd( 267.067, 188.6, 48.0116, 0.483 ) }
    dend_43 { pt3dadd( 265.986, 188.237, 48.034, 0.483 ) }
    dend_43 { pt3dadd( 264.907, 187.859, 47.941, 0.483 ) }
    dend_43 { pt3dadd( 263.959, 187.32, 48.7166, 0.5592 ) }
    dend_43 { pt3dadd( 263.022, 186.766, 49.5832, 0.5848 ) }
    dend_43 { pt3dadd( 262.037, 186.283, 50.3692, 0.5338 ) }
    dend_43 { pt3dadd( 261.052, 185.797, 51.1431, 0.3814 ) }
    dend_43 { pt3dadd( 260.173, 185.077, 50.8043, 0.2796 ) }
    dend_43 { pt3dadd( 259.241, 184.441, 50.9062, 0.2288 ) }
    dend_43 { pt3dadd( 258.265, 183.875, 51.3626, 0.2288 ) }
    dend_43 { pt3dadd( 257.251, 183.525, 50.9398, 0.2288 ) }
    dend_43 { pt3dadd( 256.226, 183.302, 50.0814, 0.2542 ) }
    dend_43 { pt3dadd( 255.389, 182.738, 51.3996, 0.305 ) }
    dend_43 { pt3dadd( 254.668, 182.06, 52.7797, 0.356 ) }
    dend_43 { pt3dadd( 253.994, 181.335, 54.1848, 0.356 ) }
    dend_43 { pt3dadd( 253.374, 180.413, 54.8139, 0.305 ) }
    dend_43 { pt3dadd( 252.768, 179.506, 54.8996, 0.2542 ) }
    dend_43 { pt3dadd( 252.193, 178.67, 53.6057, 0.2288 ) }
    dend_43 { pt3dadd( 252.126, 177.629, 53.6992, 0.2288 ) }
    dend_43 { pt3dadd( 252.237, 176.515, 54.2783, 0.2288 ) }
    dend_43 { pt3dadd( 252.28, 175.407, 54.9721, 0.2542 ) }
    dend_43 { pt3dadd( 252.315, 174.301, 55.6752, 0.3304 ) }
    dend_43 { pt3dadd( 252.171, 173.23, 56.506, 0.4068 ) }
    dend_43 { pt3dadd( 251.902, 172.183, 57.4244, 0.483 ) }
    dend_43 { pt3dadd( 251.364, 171.25, 57.6618, 0.5084 ) }
    dend_43 { pt3dadd( 250.595, 170.416, 57.3149, 0.5592 ) }
    dend_43 { pt3dadd( 249.727, 169.804, 57.7254, 0.5338 ) }
    dend_43 { pt3dadd( 248.764, 169.415, 58.8955, 0.483 ) }
    dend_43 { pt3dadd( 247.938, 168.763, 59.4695, 0.4322 ) }
    dend_43 { pt3dadd( 247.247, 167.851, 59.4549, 0.4322 ) }
    dend_43 { pt3dadd( 246.604, 167.04, 60.5637, 0.4322 ) }
    dend_43 { pt3dadd( 245.864, 166.352, 61.612, 0.356 ) }
    dend_43 { pt3dadd( 244.77, 166.041, 61.8988, 0.305 ) }
    dend_43 { pt3dadd( 243.838, 165.555, 61.2307, 0.2796 ) }
    dend_43 { pt3dadd( 243.006, 164.96, 59.974, 0.305 ) }
    dend_43 { pt3dadd( 242.307, 164.447, 61.7221, 0.3814 ) }
    dend_43 { pt3dadd( 241.612, 163.935, 63.56, 0.483 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 334.161, 331.747, 52.8889, 0.661 ) }
    dend_19 { pt3dadd( 334.053, 331.342, 54.028, 0.5848 ) }
    dend_19 { pt3dadd( 333.729, 330.439, 55.4593, 0.5848 ) }
    dend_19 { pt3dadd( 333.355, 329.47, 56.635, 0.5338 ) }
    dend_19 { pt3dadd( 333.265, 328.499, 58.0322, 0.5084 ) }
    dend_19 { pt3dadd( 333.313, 327.518, 59.4034, 0.5084 ) }
    dend_19 { pt3dadd( 333.722, 326.464, 59.8405, 0.5848 ) }
    dend_19 { pt3dadd( 334.118, 325.417, 60.3008, 0.5592 ) }
    dend_19 { pt3dadd( 333.665, 324.713, 62.2098, 0.5084 ) }
    dend_19 { pt3dadd( 333.211, 324.009, 64.1192, 0.3814 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_19 { pt3dadd( 332.148, 323.902, 64.9961, 0.3304 ) }
    dend_19 { pt3dadd( 331.065, 323.799, 65.8039, 0.3814 ) }
    dend_19 { pt3dadd( 330.137, 323.132, 65.9201, 0.4576 ) }
    dend_19 { pt3dadd( 329.211, 322.465, 66.0489, 0.5338 ) }
    dend_19 { pt3dadd( 328.564, 321.823, 67.7446, 0.483 ) }
    dend_19 { pt3dadd( 328.868, 321.826, 70.4007, 0.4576 ) }
    dend_19 { pt3dadd( 329.135, 321.732, 73.0467, 0.4322 ) }
    dend_19 { pt3dadd( 329.178, 321.235, 75.5667, 0.4322 ) }
    dend_19 { pt3dadd( 328.479, 321.613, 75.2651, 0.3814 ) }
    dend_19 { pt3dadd( 327.666, 322.177, 75.5541, 0.356 ) }
    dend_19 { pt3dadd( 326.929, 322.704, 77.2643, 0.356 ) }
    dend_19 { pt3dadd( 326.028, 322.561, 78.8315, 0.4068 ) }
    dend_19 { pt3dadd( 325.005, 322.431, 79.9282, 0.4322 ) }
    dend_19 { pt3dadd( 323.902, 322.383, 80.6641, 0.483 ) }
    dend_19 { pt3dadd( 322.824, 322.224, 81.3834, 0.483 ) }
    dend_19 { pt3dadd( 321.814, 321.763, 82.0582, 0.483 ) }
    dend_19 { pt3dadd( 320.865, 321.307, 83.0452, 0.483 ) }
    dend_19 { pt3dadd( 320.033, 320.862, 84.6269, 0.5848 ) }
    dend_19 { pt3dadd( 319.229, 320.382, 86.2305, 0.661 ) }
    dend_19 { pt3dadd( 318.453, 319.866, 87.8562, 0.7118 ) }
    dend_19 { pt3dadd( 317.652, 319.203, 88.7922, 0.661 ) }
    dend_19 { pt3dadd( 316.831, 318.422, 89.1654, 0.6864 ) }
    dend_19 { pt3dadd( 316.282, 317.581, 90.4677, 0.661 ) }
    dend_19 { pt3dadd( 315.753, 316.736, 91.8414, 0.5848 ) }
    dend_19 { pt3dadd( 315.553, 315.713, 92.9678, 0.4576 ) }
    dend_19 { pt3dadd( 315.3, 314.761, 94.1419, 0.4068 ) }
    dend_19 { pt3dadd( 314.517, 314.4, 95.7281, 0.483 ) }
    dend_19 { pt3dadd( 314.646, 313.272, 96.0733, 0.5084 ) }
    dend_19 { pt3dadd( 314.367, 312.642, 97.6671, 0.5338 ) }
    dend_19 { pt3dadd( 313.839, 312.312, 100.017, 0.5084 ) }
    dend_19 { pt3dadd( 313.508, 311.392, 100.928, 0.6102 ) }
    dend_19 { pt3dadd( 313.202, 310.317, 101.458, 0.661 ) }
    dend_19 { pt3dadd( 312.606, 309.412, 102.351, 0.7626 ) }
    dend_19 { pt3dadd( 312.01, 308.506, 103.244, 0.7372 ) }
    dend_19 { pt3dadd( 311.217, 307.693, 103.571, 0.7118 ) }
    dend_19 { pt3dadd( 310.422, 306.88, 103.893, 0.5848 ) }
    dend_19 { pt3dadd( 309.643, 306.092, 104.585, 0.5084 ) }
    dend_19 { pt3dadd( 308.928, 305.274, 105.32, 0.4576 ) }
    dend_19 { pt3dadd( 308.662, 304.238, 106.309, 0.4322 ) }
    dend_19 { pt3dadd( 308.197, 303.292, 106.92, 0.4068 ) }
    dend_19 { pt3dadd( 307.353, 302.522, 106.802, 0.4322 ) }
    dend_19 { pt3dadd( 306.59, 301.689, 106.813, 0.5084 ) }
    dend_19 { pt3dadd( 306.037, 300.697, 107.155, 0.5848 ) }
    dend_19 { pt3dadd( 305.303, 299.958, 108.127, 0.5848 ) }
    dend_19 { pt3dadd( 304.495, 299.321, 109.349, 0.5338 ) }
    dend_19 { pt3dadd( 303.964, 298.34, 109.181, 0.483 ) }
    dend_19 { pt3dadd( 303.468, 297.319, 108.846, 0.483 ) }
    dend_19 { pt3dadd( 302.766, 296.449, 108.641, 0.483 ) }
    dend_19 { pt3dadd( 301.823, 295.929, 108.79, 0.5084 ) }
    dend_19 { pt3dadd( 300.713, 295.885, 109.457, 0.483 ) }
    dend_19 { pt3dadd( 299.602, 295.842, 110.121, 0.5338 ) }
    dend_19 { pt3dadd( 298.489, 295.803, 110.753, 0.5084 ) }
    dend_19 { pt3dadd( 297.367, 295.797, 111.213, 0.483 ) }
    dend_19 { pt3dadd( 296.225, 295.875, 111.25, 0.3814 ) }
    dend_19 { pt3dadd( 295.201, 295.618, 111.757, 0.3304 ) }
    dend_19 { pt3dadd( 294.285, 295.051, 112.699, 0.305 ) }
    dend_19 { pt3dadd( 293.21, 294.78, 112.786, 0.3304 ) }
    dend_19 { pt3dadd( 292.082, 294.608, 112.591, 0.356 ) }
    dend_19 { pt3dadd( 291.012, 294.4, 113.341, 0.3814 ) }
    dend_19 { pt3dadd( 289.955, 294.186, 114.269, 0.3304 ) }
    dend_19 { pt3dadd( 288.898, 294.09, 115.307, 0.2796 ) }
    dend_19 { pt3dadd( 287.841, 294.015, 116.363, 0.2796 ) }
    dend_19 { pt3dadd( 286.791, 293.808, 116.124, 0.3814 ) }
    dend_19 { pt3dadd( 285.744, 293.533, 115.217, 0.5084 ) }
    dend_19 { pt3dadd( 284.856, 293.214, 115.839, 0.5338 ) }
    dend_19 { pt3dadd( 284.162, 292.779, 117.769, 0.4576 ) }
    dend_19 { pt3dadd( 283.565, 292.214, 119.714, 0.356 ) }
    dend_19 { pt3dadd( 282.591, 291.842, 120.498, 0.3304 ) }
    dend_19 { pt3dadd( 281.505, 291.528, 120.934, 0.356 ) }
    dend_19 { pt3dadd( 280.482, 291.042, 120.721, 0.356 ) }
    dend_19 { pt3dadd( 279.467, 290.529, 120.409, 0.3814 ) }
    dend_19 { pt3dadd( 278.402, 290.138, 120.101, 0.4576 ) }
    dend_19 { pt3dadd( 277.322, 289.781, 119.794, 0.5592 ) }
    dend_19 { pt3dadd( 276.349, 289.296, 120.528, 0.5592 ) }
    dend_19 { pt3dadd( 275.396, 288.788, 121.454, 0.5084 ) }
    dend_19 { pt3dadd( 274.381, 288.31, 121.978, 0.4576 ) }
    dend_19 { pt3dadd( 273.392, 287.817, 122.566, 0.483 ) }
    dend_19 { pt3dadd( 272.794, 287.125, 124.247, 0.4576 ) }
    dend_19 { pt3dadd( 272.194, 286.432, 125.927, 0.4576 ) }
    dend_19 { pt3dadd( 271.422, 285.622, 125.526, 0.3814 ) }
    dend_19 { pt3dadd( 270.641, 284.906, 125.658, 0.356 ) }
    dend_19 { pt3dadd( 269.854, 284.437, 127.335, 0.3304 ) }
    dend_19 { pt3dadd( 268.912, 283.934, 127.538, 0.356 ) }
    dend_19 { pt3dadd( 267.933, 283.408, 127.349, 0.4322 ) }
    dend_19 { pt3dadd( 267.153, 282.82, 128.804, 0.4576 ) }
    dend_19 { pt3dadd( 266.346, 282.329, 130.019, 0.5084 ) }
    dend_19 { pt3dadd( 265.314, 282.679, 129.161, 0.483 ) }
    dend_19 { pt3dadd( 264.316, 283.028, 128.752, 0.4576 ) }
    dend_19 { pt3dadd( 263.461, 283.369, 130.418, 0.3814 ) }
    dend_19 { pt3dadd( 262.516, 283.594, 131.678, 0.305 ) }
    dend_19 { pt3dadd( 261.386, 283.584, 132.108, 0.305 ) }
    dend_19 { pt3dadd( 260.403, 283.19, 132.215, 0.3304 ) }
    dend_19 { pt3dadd( 259.568, 282.414, 132.001, 0.3814 ) }
    dend_19 { pt3dadd( 258.904, 281.519, 132.579, 0.356 ) }
    dend_19 { pt3dadd( 258.181, 280.774, 133.119, 0.356 ) }
    dend_19 { pt3dadd( 257.047, 280.925, 133.093, 0.356 ) }
    dend_19 { pt3dadd( 255.938, 281.105, 133.231, 0.356 ) }
    dend_19 { pt3dadd( 255.017, 281.496, 134.587, 0.305 ) }
    dend_19 { pt3dadd( 254.056, 281.744, 135.783, 0.2542 ) }
    dend_19 { pt3dadd( 252.967, 281.543, 136.391, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_19 { pt3dadd( 251.84, 281.608, 135.934, 0.2288 ) }
    dend_19 { pt3dadd( 250.713, 281.673, 135.477, 0.2796 ) }
    dend_19 { pt3dadd( 249.593, 281.595, 135.832, 0.3814 ) }
    dend_19 { pt3dadd( 248.477, 281.485, 136.366, 0.483 ) }
    dend_19 { pt3dadd( 247.554, 281.045, 137.159, 0.483 ) }
    dend_19 { pt3dadd( 246.831, 280.272, 138.214, 0.4068 ) }
    dend_19 { pt3dadd( 245.802, 280.129, 138.426, 0.3304 ) }
    dend_19 { pt3dadd( 244.824, 279.756, 138.789, 0.3304 ) }
    dend_19 { pt3dadd( 243.958, 279.062, 139.47, 0.356 ) }
    dend_19 { pt3dadd( 243.401, 278.105, 139.747, 0.3814 ) }
    dend_19 { pt3dadd( 242.955, 277.053, 139.878, 0.356 ) }
    dend_19 { pt3dadd( 242.043, 276.604, 140.327, 0.3304 ) }
    dend_19 { pt3dadd( 240.943, 276.396, 140.904, 0.3304 ) }
    dend_19 { pt3dadd( 240.178, 275.762, 141.906, 0.356 ) }
    dend_19 { pt3dadd( 239.574, 274.925, 143.11, 0.4068 ) }
    dend_19 { pt3dadd( 238.544, 274.768, 143.233, 0.4068 ) }
    dend_19 { pt3dadd( 237.422, 274.746, 143.186, 0.4068 ) }
    dend_19 { pt3dadd( 236.542, 274.227, 144.441, 0.3304 ) }
    dend_19 { pt3dadd( 235.655, 273.695, 145.627, 0.2796 ) }
    dend_19 { pt3dadd( 234.737, 273.096, 146.426, 0.2288 ) }
    dend_19 { pt3dadd( 233.781, 272.571, 147.146, 0.2542 ) }
    dend_19 { pt3dadd( 232.673, 272.343, 147.547, 0.305 ) }
    dend_19 { pt3dadd( 231.582, 272.049, 147.829, 0.3814 ) }
    dend_19 { pt3dadd( 230.543, 271.571, 147.787, 0.4068 ) }
    dend_19 { pt3dadd( 229.506, 271.12, 147.847, 0.3814 ) }
    dend_19 { pt3dadd( 228.499, 271.022, 149.153, 0.305 ) }
    dend_19 { pt3dadd( 227.491, 270.919, 150.451, 0.2542 ) }
    dend_19 { pt3dadd( 226.439, 270.571, 151.145, 0.2288 ) }
    dend_19 { pt3dadd( 225.386, 270.322, 151.951, 0.2288 ) }
    dend_19 { pt3dadd( 224.334, 270.326, 153.045, 0.2288 ) }
    dend_19 { pt3dadd( 223.221, 270.461, 153.081, 0.2542 ) }
    dend_19 { pt3dadd( 222.093, 270.629, 152.855, 0.2796 ) }
    dend_19 { pt3dadd( 221.344, 269.969, 153.268, 0.305 ) }
    dend_19 { pt3dadd( 220.716, 269.047, 153.882, 0.305 ) }
    dend_19 { pt3dadd( 220.055, 268.41, 155.301, 0.3304 ) }
    dend_19 { pt3dadd( 219.374, 267.972, 157.275, 0.4068 ) }
    dend_19 { pt3dadd( 218.353, 267.687, 158.288, 0.4576 ) }
    dend_19 { pt3dadd( 217.314, 267.41, 159.248, 0.4576 ) }
    dend_19 { pt3dadd( 216.467, 266.815, 160.365, 0.3814 ) }
    dend_19 { pt3dadd( 215.731, 266.48, 162.01, 0.3814 ) }
    dend_19 { pt3dadd( 215.099, 266.579, 164.331, 0.4576 ) }
    dend_19 { pt3dadd( 213.993, 266.341, 163.994, 0.5592 ) }
    dend_19 { pt3dadd( 212.884, 266.101, 163.638, 0.5592 ) }
    dend_19 { pt3dadd( 212.274, 265.233, 164.596, 0.483 ) }
    dend_19 { pt3dadd( 211.473, 264.692, 164.799, 0.3814 ) }
    dend_19 { pt3dadd( 210.39, 264.624, 163.914, 0.3814 ) }
    dend_19 { pt3dadd( 209.314, 264.726, 164.344, 0.483 ) }
    dend_19 { pt3dadd( 208.241, 264.886, 165.232, 0.6102 ) }
    dend_19 { pt3dadd( 207.25, 265.288, 166.099, 0.6356 ) }
    dend_19 { pt3dadd( 206.309, 265.838, 166.953, 0.483 ) }
    dend_19 { pt3dadd( 205.329, 265.88, 166.909, 0.3304 ) }
    dend_19 { pt3dadd( 204.313, 265.479, 166.077, 0.2796 ) }
    dend_19 { pt3dadd( 203.225, 265.221, 165.75, 0.4068 ) }
    dend_19 { pt3dadd( 202.093, 265.053, 165.733, 0.5848 ) }
    dend_19 { pt3dadd( 201.119, 265.47, 166.218, 0.7118 ) }
    dend_19 { pt3dadd( 200.199, 266.094, 166.88, 0.7118 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 56/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 334.161, 331.747, 52.8889, 0.661 ) }
    dend_16 { pt3dadd( 332.99, 331.659, 55.1177, 0.6864 ) }
    dend_16 { pt3dadd( 332.209, 331.797, 57.136, 0.6102 ) }
    dend_16 { pt3dadd( 331.317, 332.382, 56.8904, 0.5084 ) }
    dend_16 { pt3dadd( 330.408, 333.034, 56.3038, 0.4576 ) }
    dend_16 { pt3dadd( 329.5, 333.608, 57.1242, 0.4322 ) }
    dend_16 { pt3dadd( 328.591, 334.17, 58.1227, 0.4068 ) }
    dend_16 { pt3dadd( 327.585, 334.444, 57.8738, 0.3814 ) }
    dend_16 { pt3dadd( 326.513, 334.549, 56.9705, 0.4068 ) }
    dend_16 { pt3dadd( 325.38, 334.703, 57.0648, 0.4068 ) }
    dend_16 { pt3dadd( 324.253, 334.876, 57.1169, 0.4068 ) }
    dend_16 { pt3dadd( 323.228, 335.322, 56.5272, 0.356 ) }
    dend_16 { pt3dadd( 322.22, 335.797, 55.9751, 0.356 ) }
    dend_16 { pt3dadd( 321.439, 336.631, 55.872, 0.356 ) }
    dend_16 { pt3dadd( 320.657, 337.465, 55.769, 0.3814 ) }
    dend_16 { pt3dadd( 319.661, 338.009, 55.7326, 0.4322 ) }
    dend_16 { pt3dadd( 318.629, 338.502, 55.7074, 0.5848 ) }
    dend_16 { pt3dadd( 317.751, 339.204, 56.1358, 0.7626 ) }
    dend_16 { pt3dadd( 316.893, 339.934, 56.623, 0.8644 ) }
    dend_16 { pt3dadd( 315.979, 340.532, 56.2632, 0.7626 ) }
    dend_16 { pt3dadd( 315.028, 341.044, 55.3389, 0.5848 ) }
    dend_16 { pt3dadd( 314.1, 341.453, 55.6923, 0.4322 ) }
    dend_16 { pt3dadd( 313.193, 341.77, 57.2158, 0.4068 ) }
    dend_16 { pt3dadd( 312.289, 342.223, 57.4972, 0.4322 ) }
    dend_16 { pt3dadd( 311.388, 342.812, 56.5533, 0.5084 ) }
    dend_16 { pt3dadd( 310.444, 343.261, 56.6849, 0.6102 ) }
    dend_16 { pt3dadd( 309.458, 343.571, 57.8864, 0.7626 ) }
    dend_16 { pt3dadd( 308.445, 344.016, 58.0336, 0.8136 ) }
    dend_16 { pt3dadd( 307.423, 344.516, 57.7648, 0.7372 ) }
    dend_16 { pt3dadd( 306.385, 344.988, 57.5204, 0.6102 ) }
    dend_16 { pt3dadd( 305.342, 345.447, 57.2872, 0.5338 ) }
    dend_16 { pt3dadd( 304.313, 345.94, 57.0881, 0.5592 ) }
    dend_16 { pt3dadd( 303.289, 346.445, 56.8999, 0.5592 ) }
    dend_16 { pt3dadd( 302.213, 346.797, 56.6132, 0.5084 ) }
    dend_16 { pt3dadd( 301.112, 347.077, 56.28, 0.4322 ) }
    dend_16 { pt3dadd( 300.063, 347.307, 57.1796, 0.2288 ) }
    dend_16 { pt3dadd( 299.005, 347.538, 58.0863, 0.2542 ) }
    dend_16 { pt3dadd( 297.948, 347.769, 58.9929, 0.3304 ) }
    dend_16 { pt3dadd( 296.883, 348.06, 59.4751, 0.4068 ) }
    dend_16 { pt3dadd( 295.806, 348.441, 59.3197, 0.483 ) }
    dend_16 { pt3dadd( 294.74, 348.848, 59.1111, 0.4576 ) }
    dend_16 { pt3dadd( 293.68, 349.264, 58.8829, 0.4322 ) }
    dend_16 { pt3dadd( 292.922, 350.118, 58.6916, 0.3814 ) }
    dend_16 { pt3dadd( 292.171, 350.971, 58.5729, 0.4322 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_16 { pt3dadd( 291.522, 351.804, 59.6495, 0.5084 ) }
    dend_16 { pt3dadd( 290.782, 352.595, 60.1913, 0.5592 ) }
    dend_16 { pt3dadd( 289.906, 353.323, 59.9351, 0.5592 ) }
    dend_16 { pt3dadd( 288.903, 353.798, 60.1692, 0.5084 ) }
    dend_16 { pt3dadd( 287.828, 354.133, 60.6774, 0.4576 ) }
    dend_16 { pt3dadd( 286.778, 354.575, 60.8843, 0.3814 ) }
    dend_16 { pt3dadd( 285.731, 355.031, 61.0498, 0.356 ) }
    dend_16 { pt3dadd( 284.655, 355.406, 61.2525, 0.3814 ) }
    dend_16 { pt3dadd( 283.568, 355.753, 61.4684, 0.4068 ) }
    dend_16 { pt3dadd( 282.474, 356.067, 61.7254, 0.4068 ) }
    dend_16 { pt3dadd( 281.373, 356.353, 62.0186, 0.3814 ) }
    dend_16 { pt3dadd( 280.303, 356.735, 62.251, 0.4068 ) }
    dend_16 { pt3dadd( 279.261, 357.201, 62.4319, 0.4068 ) }
    dend_16 { pt3dadd( 278.183, 357.543, 62.7472, 0.4068 ) }
    dend_16 { pt3dadd( 277.081, 357.801, 63.1548, 0.356 ) }
    dend_16 { pt3dadd( 276.006, 358.158, 63.3004, 0.356 ) }
    dend_16 { pt3dadd( 274.959, 358.615, 63.18, 0.3304 ) }
    dend_16 { pt3dadd( 273.875, 358.962, 63.1851, 0.3304 ) }
    dend_16 { pt3dadd( 272.762, 359.224, 63.2856, 0.3304 ) }
    dend_16 { pt3dadd( 271.685, 359.584, 63.4444, 0.356 ) }
    dend_16 { pt3dadd( 270.658, 360.079, 63.6815, 0.4322 ) }
    dend_16 { pt3dadd( 269.719, 360.656, 64.1651, 0.4322 ) }
    dend_16 { pt3dadd( 268.974, 361.416, 65.1935, 0.4322 ) }
    dend_16 { pt3dadd( 268.179, 362.166, 65.5886, 0.3304 ) }
    dend_16 { pt3dadd( 267.321, 362.908, 65.2044, 0.2796 ) }
    dend_16 { pt3dadd( 266.369, 363.495, 65.1311, 0.2288 ) }
    dend_16 { pt3dadd( 265.308, 363.903, 65.4223, 0.2542 ) }
    dend_16 { pt3dadd( 264.265, 364.367, 65.4455, 0.2796 ) }
    dend_16 { pt3dadd( 263.233, 364.859, 65.3332, 0.356 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 29/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 461.73, 290.805, 40.2889, 0.2542 ) }
    dend_54 { pt3dadd( 462.68, 290.404, 41.3552, 0.3304 ) }
    dend_54 { pt3dadd( 463.703, 290.083, 42.3212, 0.4068 ) }
    dend_54 { pt3dadd( 464.758, 290.097, 43.3017, 0.3814 ) }
    dend_54 { pt3dadd( 465.808, 290.216, 44.3576, 0.4068 ) }
    dend_54 { pt3dadd( 466.806, 290.311, 45.7103, 0.3814 ) }
    dend_54 { pt3dadd( 467.65, 290.919, 46.8272, 0.4068 ) }
    dend_54 { pt3dadd( 468.525, 291.481, 47.9746, 0.3304 ) }
    dend_54 { pt3dadd( 469.431, 291.985, 49.1568, 0.3304 ) }
    dend_54 { pt3dadd( 469.954, 292.758, 50.7525, 0.3304 ) }
    dend_54 { pt3dadd( 470.276, 293.266, 52.7383, 0.4068 ) }
    dend_54 { pt3dadd( 470.204, 293.165, 55.5218, 0.4322 ) }
    dend_54 { pt3dadd( 470.638, 292.42, 56.4166, 0.483 ) }
    dend_54 { pt3dadd( 471.234, 291.482, 56.9162, 0.483 ) }
    dend_54 { pt3dadd( 471.801, 290.62, 58.1288, 0.483 ) }
    dend_54 { pt3dadd( 472.176, 289.664, 59.2774, 0.4322 ) }
    dend_54 { pt3dadd( 472.497, 288.686, 59.8489, 0.4322 ) }
    dend_54 { pt3dadd( 473.123, 287.873, 58.6093, 0.4068 ) }
    dend_54 { pt3dadd( 473.633, 287.09, 58.2128, 0.4068 ) }
    dend_54 { pt3dadd( 473.795, 286.403, 60.4164, 0.4068 ) }
    dend_54 { pt3dadd( 473.985, 285.607, 62.2947, 0.4576 ) }
    dend_54 { pt3dadd( 474.221, 284.632, 63.6392, 0.5084 ) }
    dend_54 { pt3dadd( 474.701, 283.713, 64.5075, 0.5338 ) }
    dend_54 { pt3dadd( 475.445, 282.855, 64.8533, 0.483 ) }
    dend_54 { pt3dadd( 475.975, 281.859, 65.2814, 0.4322 ) }
    dend_54 { pt3dadd( 476.6, 280.981, 65.7703, 0.3304 ) }
    dend_54 { pt3dadd( 477.632, 280.574, 66.4572, 0.2796 ) }
    dend_54 { pt3dadd( 478.667, 280.17, 66.8276, 0.2288 ) }
    dend_54 { pt3dadd( 479.714, 279.782, 66.2197, 0.2288 ) }
    dend_54 { pt3dadd( 480.435, 279.295, 66.4947, 0.2288 ) }
    dend_54 { pt3dadd( 480.448, 278.591, 68.7025, 0.2542 ) }
    dend_54 { pt3dadd( 480.817, 278.178, 70.2506, 0.2796 ) }
    dend_54 { pt3dadd( 481.94, 278.383, 70.3996, 0.305 ) }
    dend_54 { pt3dadd( 482.783, 278.221, 71.3846, 0.2796 ) }
    dend_54 { pt3dadd( 483.278, 277.603, 73.4065, 0.2796 ) }
    dend_54 { pt3dadd( 484.083, 277.159, 74.636, 0.305 ) }
    dend_54 { pt3dadd( 485.104, 276.777, 74.8549, 0.3814 ) }
    dend_54 { pt3dadd( 485.859, 275.999, 73.9558, 0.4322 ) }
    dend_54 { pt3dadd( 485.748, 274.909, 74.5405, 0.4576 ) }
    dend_54 { pt3dadd( 485.642, 273.827, 75.3206, 0.4322 ) }
    dend_54 { pt3dadd( 485.736, 272.849, 76.7544, 0.4068 ) }
    dend_54 { pt3dadd( 485.835, 271.818, 77.7742, 0.356 ) }
    dend_54 { pt3dadd( 485.946, 270.682, 77.9691, 0.3304 ) }
    dend_54 { pt3dadd( 486.525, 270.038, 76.5778, 0.3304 ) }
    dend_54 { pt3dadd( 487.229, 269.526, 74.76, 0.356 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 74/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 461.73, 290.805, 40.2889, 0.2542 ) }
    dend_53 { pt3dadd( 461.832, 290.118, 38.36, 0.3814 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 76/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 263.233, 364.859, 65.3332, 0.356 ) }
    dend_18 { pt3dadd( 262.231, 365.237, 66.885, 0.5084 ) }
    dend_18 { pt3dadd( 261.229, 365.785, 66.7313, 0.4322 ) }
    dend_18 { pt3dadd( 260.226, 366.321, 66.5129, 0.4068 ) }
    dend_18 { pt3dadd( 259.217, 366.78, 65.8132, 0.3304 ) }
    dend_18 { pt3dadd( 258.203, 367.21, 65.0714, 0.2796 ) }
    dend_18 { pt3dadd( 257.17, 367.538, 64.1791, 0.2542 ) }
    dend_18 { pt3dadd( 256.097, 367.65, 63.3797, 0.305 ) }
    dend_18 { pt3dadd( 254.993, 367.592, 62.6528, 0.3814 ) }
    dend_18 { pt3dadd( 253.903, 367.733, 62.0253, 0.4322 ) }
    dend_18 { pt3dadd( 252.822, 368.035, 61.4779, 0.4322 ) }
    dend_18 { pt3dadd( 251.748, 368.109, 61.0453, 0.4322 ) }
    dend_18 { pt3dadd( 250.689, 367.682, 60.8675, 0.4576 ) }
    dend_18 { pt3dadd( 249.649, 367.217, 60.6682, 0.5084 ) }
    dend_18 { pt3dadd( 248.665, 366.646, 60.4075, 0.483 ) }
    dend_18 { pt3dadd( 247.672, 366.093, 60.2414, 0.3814 ) }
    dend_18 { pt3dadd( 246.628, 365.666, 60.72, 0.2796 ) }
    dend_18 { pt3dadd( 245.583, 365.252, 61.1453, 0.2542 ) }
    dend_18 { pt3dadd( 244.476, 365.064, 60.5884, 0.305 ) }
    dend_18 { pt3dadd( 243.386, 364.823, 60.3137, 0.356 ) }
    dend_18 { pt3dadd( 242.339, 364.423, 60.8759, 0.3814 ) }
    dend_18 { pt3dadd( 241.285, 364.03, 61.2786, 0.3814 ) }
    dend_18 { pt3dadd( 240.203, 363.657, 61.1624, 0.4322 ) }
    dend_18 { pt3dadd( 239.121, 363.291, 61.0403, 0.483 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_18 { pt3dadd( 238.005, 363.061, 60.8196, 0.5084 ) }
    dend_18 { pt3dadd( 236.887, 362.831, 60.599, 0.4322 ) }
    dend_18 { pt3dadd( 235.764, 362.694, 60.216, 0.356 ) }
    dend_18 { pt3dadd( 234.639, 362.571, 59.8049, 0.305 ) }
    dend_18 { pt3dadd( 233.586, 362.884, 59.7887, 0.305 ) }
    dend_18 { pt3dadd( 232.564, 363.396, 59.9542, 0.305 ) }
    dend_18 { pt3dadd( 231.462, 363.406, 60.1896, 0.305 ) }
    dend_18 { pt3dadd( 230.333, 363.254, 60.4475, 0.356 ) }
    dend_18 { pt3dadd( 229.199, 363.116, 60.6094, 0.3814 ) }
    dend_18 { pt3dadd( 228.066, 362.981, 60.7561, 0.4068 ) }
    dend_18 { pt3dadd( 226.953, 363.117, 60.6175, 0.3304 ) }
    dend_18 { pt3dadd( 225.851, 363.404, 60.3224, 0.305 ) }
    dend_18 { pt3dadd( 224.74, 363.619, 59.9427, 0.2796 ) }
    dend_18 { pt3dadd( 223.622, 363.781, 59.4994, 0.305 ) }
    dend_18 { pt3dadd( 222.517, 363.8, 59.1637, 0.305 ) }
    dend_18 { pt3dadd( 221.45, 363.388, 59.1573, 0.305 ) }
    dend_18 { pt3dadd( 220.434, 362.91, 59.0593, 0.3304 ) }
    dend_18 { pt3dadd( 219.7, 362.067, 58.464, 0.3304 ) }
    dend_18 { pt3dadd( 219.113, 361.163, 58.3358, 0.3814 ) }
    dend_18 { pt3dadd( 218.874, 360.116, 59.3009, 0.3814 ) }
    dend_18 { pt3dadd( 218.59, 359.081, 60.0519, 0.4068 ) }
    dend_18 { pt3dadd( 218.028, 358.113, 59.4605, 0.3304 ) }
    dend_18 { pt3dadd( 217.439, 357.159, 58.984, 0.2796 ) }
    dend_18 { pt3dadd( 216.735, 356.258, 58.9694, 0.2288 ) }
    dend_18 { pt3dadd( 216.032, 355.355, 58.9548, 0.2796 ) }
    dend_18 { pt3dadd( 215.17, 354.61, 58.9758, 0.3304 ) }
    dend_18 { pt3dadd( 214.274, 353.9, 59.0052, 0.3814 ) }
    dend_18 { pt3dadd( 213.546, 353.104, 58.3439, 0.3304 ) }
    dend_18 { pt3dadd( 212.923, 352.255, 57.2533, 0.305 ) }
    dend_18 { pt3dadd( 212.239, 351.458, 57.4823, 0.3304 ) }
    dend_18 { pt3dadd( 211.513, 350.699, 58.5942, 0.483 ) }
    dend_18 { pt3dadd( 210.85, 349.816, 59.2486, 0.6356 ) }
    dend_18 { pt3dadd( 210.204, 348.895, 59.764, 0.6864 ) }
    dend_18 { pt3dadd( 209.493, 348.01, 60.0317, 0.5848 ) }
    dend_18 { pt3dadd( 208.748, 347.143, 60.177, 0.483 ) }
    dend_18 { pt3dadd( 207.936, 346.386, 60.7776, 0.4576 ) }
    dend_18 { pt3dadd( 207.102, 345.664, 61.5202, 0.5084 ) }
    dend_18 { pt3dadd( 206.205, 344.994, 61.9889, 0.483 ) }
    dend_18 { pt3dadd( 205.25, 344.371, 62.2, 0.4068 ) }
    dend_18 { pt3dadd( 204.217, 343.983, 62.5836, 0.3814 ) }
    dend_18 { pt3dadd( 203.106, 343.828, 63.1406, 0.4322 ) }
    dend_18 { pt3dadd( 201.977, 343.823, 63.2646, 0.5592 ) }
    dend_18 { pt3dadd( 200.837, 343.907, 63.1313, 0.6356 ) }
    dend_18 { pt3dadd( 199.713, 343.931, 62.8144, 0.6864 ) }
    dend_18 { pt3dadd( 198.631, 343.787, 61.98, 0.6356 ) }
    dend_18 { pt3dadd( 197.545, 343.671, 61.2828, 0.5592 ) }
    dend_18 { pt3dadd( 196.432, 343.814, 61.8229, 0.4322 ) }
    dend_18 { pt3dadd( 195.318, 343.957, 62.3633, 0.4068 ) }
    dend_18 { pt3dadd( 194.183, 343.92, 62.4414, 0.4576 ) }
    dend_18 { pt3dadd( 193.042, 343.834, 62.4002, 0.5592 ) }
    dend_18 { pt3dadd( 191.904, 343.79, 62.65, 0.5848 ) }
    dend_18 { pt3dadd( 190.766, 343.747, 62.907, 0.5592 ) }
    dend_18 { pt3dadd( 189.69, 343.445, 62.7472, 0.5848 ) }
    dend_18 { pt3dadd( 188.65, 342.996, 62.3515, 0.6864 ) }
    dend_18 { pt3dadd( 187.577, 342.636, 62.1079, 0.7372 ) }
    dend_18 { pt3dadd( 186.46, 342.389, 62.0628, 0.7372 ) }
    dend_18 { pt3dadd( 185.51, 341.775, 61.7439, 0.6102 ) }
    dend_18 { pt3dadd( 184.57, 341.137, 61.4085, 0.5592 ) }
    dend_18 { pt3dadd( 183.665, 340.5, 61.9702, 0.5084 ) }
    dend_18 { pt3dadd( 182.767, 339.863, 62.7343, 0.5338 ) }
    dend_18 { pt3dadd( 181.842, 339.227, 63.2626, 0.5338 ) }
    dend_18 { pt3dadd( 180.908, 338.592, 63.6835, 0.5338 ) }
    dend_18 { pt3dadd( 179.938, 338.035, 63.422, 0.5338 ) }
    dend_18 { pt3dadd( 178.949, 337.52, 62.7861, 0.5338 ) }
    dend_18 { pt3dadd( 177.875, 337.192, 62.8835, 0.483 ) }
    dend_18 { pt3dadd( 176.771, 336.925, 63.2271, 0.483 ) }
    dend_18 { pt3dadd( 175.771, 336.427, 63.8089, 0.4322 ) }
    dend_18 { pt3dadd( 174.774, 335.922, 64.3801, 0.4576 ) }
    dend_18 { pt3dadd( 173.69, 335.556, 64.4552, 0.3814 ) }
    dend_18 { pt3dadd( 172.607, 335.191, 64.5302, 0.356 ) }
    dend_18 { pt3dadd( 171.965, 335.01, 62.3633, 0.2796 ) }
    dend_18 { pt3dadd( 171.14, 335.106, 62.1401, 0.2542 ) }
    dend_18 { pt3dadd( 170.162, 335.389, 63.4147, 0.2796 ) }
    dend_18 { pt3dadd( 169.23, 334.827, 63.6686, 0.3814 ) }
    dend_18 { pt3dadd( 168.277, 334.212, 63.6395, 0.5338 ) }
    dend_18 { pt3dadd( 167.247, 333.756, 63.1526, 0.6102 ) }
    dend_18 { pt3dadd( 166.216, 333.301, 62.6657, 0.5848 ) }
    dend_18 { pt3dadd( 165.119, 333.278, 63.4407, 0.4576 ) }
    dend_18 { pt3dadd( 164.046, 333.219, 64.2765, 0.3304 ) }
    dend_18 { pt3dadd( 163.271, 332.604, 65.6838, 0.2542 ) }
    dend_18 { pt3dadd( 162.5, 332.004, 66.3922, 0.2288 ) }
    dend_18 { pt3dadd( 161.748, 331.444, 64.7867, 0.2542 ) }
    dend_18 { pt3dadd( 160.961, 330.98, 63.205, 0.2796 ) }
    dend_18 { pt3dadd( 159.984, 331.032, 61.7537, 0.356 ) }
    dend_18 { pt3dadd( 159.01, 330.911, 60.5581, 0.4576 ) }
    dend_18 { pt3dadd( 158.047, 330.331, 60.0432, 0.5592 ) }
    dend_18 { pt3dadd( 157.092, 329.737, 59.6366, 0.5592 ) }
    dend_18 { pt3dadd( 156.184, 329.054, 59.9631, 0.483 ) }
    dend_18 { pt3dadd( 155.275, 328.371, 60.2899, 0.4576 ) }
    dend_18 { pt3dadd( 154.556, 327.576, 59.3396, 0.483 ) }
    dend_18 { pt3dadd( 153.845, 326.76, 58.4679, 0.5338 ) }
    dend_18 { pt3dadd( 153.151, 325.868, 58.0325, 0.483 ) }
    dend_18 { pt3dadd( 152.435, 325.023, 57.9172, 0.4322 ) }
    dend_18 { pt3dadd( 151.637, 324.363, 59.1066, 0.3304 ) }
    dend_18 { pt3dadd( 150.758, 323.826, 59.9987, 0.305 ) }
    dend_18 { pt3dadd( 149.624, 323.674, 59.9595, 0.2796 ) }
    dend_18 { pt3dadd( 148.49, 323.523, 59.92, 0.305 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 97/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 263.233, 364.859, 65.3332, 0.356 ) }
    dend_17 { pt3dadd( 262.913, 365.665, 64.0828, 0.305 ) }
    dend_17 { pt3dadd( 261.927, 366.244, 63.9884, 0.356 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_17 { pt3dadd( 260.963, 366.852, 63.9136, 0.4068 ) }
    dend_17 { pt3dadd( 260.097, 367.6, 63.9335, 0.4322 ) }
    dend_17 { pt3dadd( 259.237, 368.347, 63.999, 0.356 ) }
    dend_17 { pt3dadd( 258.578, 369.098, 65.3671, 0.2796 ) }
    dend_17 { pt3dadd( 257.92, 369.847, 66.7355, 0.2288 ) }
    dend_17 { pt3dadd( 257.281, 370.754, 67.38, 0.2288 ) }
    dend_17 { pt3dadd( 256.586, 371.598, 67.9168, 0.2288 ) }
    dend_17 { pt3dadd( 255.485, 371.905, 68.0176, 0.2288 ) }
    dend_17 { pt3dadd( 254.394, 372.236, 68.1366, 0.2288 ) }
    dend_17 { pt3dadd( 253.4, 372.788, 68.4396, 0.2288 ) }
    dend_17 { pt3dadd( 252.63, 373.552, 68.8254, 0.2288 ) }
    dend_17 { pt3dadd( 252.111, 374.554, 69.305, 0.2288 ) }
    dend_17 { pt3dadd( 251.557, 375.541, 69.5892, 0.2288 ) }
    dend_17 { pt3dadd( 250.947, 376.509, 69.5811, 0.2288 ) }
    dend_17 { pt3dadd( 250.441, 377.495, 69.69, 0.2288 ) }
    dend_17 { pt3dadd( 250.545, 378.587, 70.4763, 0.2542 ) }
    dend_17 { pt3dadd( 250.647, 379.68, 71.2566, 0.305 ) }
    dend_17 { pt3dadd( 250.161, 380.713, 71.0539, 0.3814 ) }
    dend_17 { pt3dadd( 249.676, 381.745, 70.8512, 0.4322 ) }
    dend_17 { pt3dadd( 248.856, 382.493, 71.0531, 0.4576 ) }
    dend_17 { pt3dadd( 247.938, 383.155, 71.3922, 0.4322 ) }
    dend_17 { pt3dadd( 247.342, 384.113, 71.869, 0.4068 ) }
    dend_17 { pt3dadd( 246.763, 385.077, 72.3716, 0.356 ) }
    dend_17 { pt3dadd( 246.234, 386.062, 72.956, 0.3304 ) }
    dend_17 { pt3dadd( 245.588, 386.934, 73.6896, 0.305 ) }
    dend_17 { pt3dadd( 244.776, 387.64, 74.6396, 0.305 ) }
    dend_17 { pt3dadd( 243.947, 388.353, 75.399, 0.3304 ) }
    dend_17 { pt3dadd( 243.076, 389.087, 75.677, 0.3304 ) }
    dend_17 { pt3dadd( 242.207, 389.82, 75.955, 0.3304 ) }
    dend_17 { pt3dadd( 241.416, 390.641, 76.1788, 0.3304 ) }
    dend_17 { pt3dadd( 240.64, 391.477, 76.3918, 0.356 ) }
    dend_17 { pt3dadd( 239.903, 392.169, 77.32, 0.3814 ) }
    dend_17 { pt3dadd( 239.215, 392.671, 79.1916, 0.356 ) }
    dend_17 { pt3dadd( 238.417, 393.279, 80.1676, 0.3304 ) }
    dend_17 { pt3dadd( 237.517, 393.983, 80.3348, 0.305 ) }
    dend_17 { pt3dadd( 236.674, 394.743, 80.6044, 0.2796 ) }
    dend_17 { pt3dadd( 235.879, 395.553, 80.962, 0.2542 ) }
    dend_17 { pt3dadd( 235.082, 396.35, 81.4184, 0.2288 ) }
    dend_17 { pt3dadd( 234.282, 397.132, 82.0064, 0.2288 ) }
    dend_17 { pt3dadd( 233.449, 397.859, 82.6039, 0.2542 ) }
    dend_17 { pt3dadd( 232.401, 398.231, 83.2622, 0.2796 ) }
    dend_17 { pt3dadd( 231.354, 398.604, 83.9185, 0.3304 ) }
    dend_17 { pt3dadd( 230.311, 399.028, 84.4323, 0.3304 ) }
    dend_17 { pt3dadd( 229.27, 399.452, 84.9458, 0.356 ) }
    dend_17 { pt3dadd( 228.23, 399.897, 85.3653, 0.3304 ) }
    dend_17 { pt3dadd( 227.19, 400.344, 85.7766, 0.3304 ) }
    dend_17 { pt3dadd( 226.18, 400.823, 86.3526, 0.2796 ) }
    dend_17 { pt3dadd( 225.184, 401.316, 87.0064, 0.2542 ) }
    dend_17 { pt3dadd( 224.241, 401.9, 87.5717, 0.2288 ) }
    dend_17 { pt3dadd( 223.414, 402.675, 87.9491, 0.2288 ) }
    dend_17 { pt3dadd( 222.489, 403.239, 88.3495, 0.2288 ) }
    dend_17 { pt3dadd( 221.369, 403.384, 88.795, 0.2288 ) }
    dend_17 { pt3dadd( 220.3, 403.59, 89.4961, 0.2288 ) }
    dend_17 { pt3dadd( 219.369, 403.95, 90.8592, 0.2288 ) }
    dend_17 { pt3dadd( 218.439, 404.358, 91.8137, 0.2542 ) }
    dend_17 { pt3dadd( 217.521, 404.967, 91.0568, 0.2796 ) }
    dend_17 { pt3dadd( 216.604, 405.579, 90.3526, 0.305 ) }
    dend_17 { pt3dadd( 215.707, 406.27, 90.7561, 0.2796 ) }
    dend_17 { pt3dadd( 214.961, 407.091, 91.0092, 0.2542 ) }
    dend_17 { pt3dadd( 214.445, 408.113, 91.0328, 0.2288 ) }
    dend_17 { pt3dadd( 213.918, 409.109, 91.1372, 0.2288 ) }
    dend_17 { pt3dadd( 213.179, 409.617, 92.8746, 0.2542 ) }
    dend_17 { pt3dadd( 212.578, 410.36, 94.0436, 0.305 ) }
    dend_17 { pt3dadd( 212.162, 411.411, 94.4661, 0.4068 ) }
    dend_17 { pt3dadd( 211.661, 412.423, 94.7873, 0.4576 ) }
    dend_17 { pt3dadd( 211.033, 413.376, 94.9547, 0.4576 ) }
    dend_17 { pt3dadd( 210.361, 414.289, 94.908, 0.356 ) }
    dend_17 { pt3dadd( 209.588, 415.1, 94.3446, 0.3304 ) }
    dend_17 { pt3dadd( 208.866, 415.963, 94.4896, 0.356 ) }
    dend_17 { pt3dadd( 208.104, 416.791, 94.9082, 0.4322 ) }
    dend_17 { pt3dadd( 207.238, 417.525, 95.2624, 0.4576 ) }
    dend_17 { pt3dadd( 206.394, 418.278, 95.6166, 0.4576 ) }
    dend_17 { pt3dadd( 205.692, 419.171, 95.9708, 0.5338 ) }
    dend_17 { pt3dadd( 204.991, 420.063, 96.325, 0.6102 ) }
    dend_17 { pt3dadd( 204.306, 420.975, 96.4729, 0.7372 ) }
    dend_17 { pt3dadd( 203.63, 421.898, 96.5056, 0.7626 ) }
    dend_17 { pt3dadd( 202.821, 422.659, 96.411, 0.7372 ) }
    dend_17 { pt3dadd( 201.801, 423.16, 96.1128, 0.6356 ) }
    dend_17 { pt3dadd( 200.947, 423.861, 96.4648, 0.5084 ) }
    dend_17 { pt3dadd( 200.153, 424.624, 97.1116, 0.4322 ) }
    dend_17 { pt3dadd( 199.066, 424.961, 97.4103, 0.3814 ) }
    dend_17 { pt3dadd( 198.006, 425.361, 97.6293, 0.4322 ) }
    dend_17 { pt3dadd( 197.026, 425.949, 97.6128, 0.5084 ) }
    dend_17 { pt3dadd( 196.042, 426.514, 97.6954, 0.5338 ) }
    dend_17 { pt3dadd( 195.038, 426.852, 98.756, 0.483 ) }
    dend_17 { pt3dadd( 194.121, 427.205, 99.1914, 0.3814 ) }
    dend_17 { pt3dadd( 193.565, 427.623, 96.9671, 0.3304 ) }
    dend_17 { pt3dadd( 192.848, 427.726, 97.1446, 0.2796 ) }
    dend_17 { pt3dadd( 192.014, 427.603, 99.0391, 0.2542 ) }
    dend_17 { pt3dadd( 191.086, 427.826, 100.115, 0.2288 ) }
    dend_17 { pt3dadd( 190.092, 428.358, 100.532, 0.2288 ) }
    dend_17 { pt3dadd( 189.308, 429.099, 101.464, 0.2542 ) }
    dend_17 { pt3dadd( 188.555, 429.876, 102.295, 0.2796 ) }
    dend_17 { pt3dadd( 187.971, 430.854, 102.57, 0.356 ) }
    dend_17 { pt3dadd( 187.39, 431.831, 102.823, 0.4068 ) }
    dend_17 { pt3dadd( 186.945, 432.818, 101.912, 0.483 ) }
    dend_17 { pt3dadd( 186.468, 433.749, 101.487, 0.4576 ) }
    dend_17 { pt3dadd( 185.86, 434.451, 103.121, 0.4068 ) }
    dend_17 { pt3dadd( 185.252, 435.154, 104.754, 0.356 ) }
    dend_17 { pt3dadd( 185.287, 436.156, 104.12, 0.356 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_17 { pt3dadd( 185.432, 437.211, 103.094, 0.4068 ) }
    dend_17 { pt3dadd( 185.274, 437.955, 101.101, 0.3814 ) }
    dend_17 { pt3dadd( 185.058, 438.639, 98.9206, 0.356 ) }
    dend_17 { pt3dadd( 184.796, 439.679, 98.3184, 0.2796 ) }
    dend_17 { pt3dadd( 184.526, 440.783, 98.0, 0.2542 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=dend, groups=[], sections=[dend_62, dend_37, dend_28, dend_5, dend_0, dend_66, dend_63, dend_57, dend_38, dend_34, dend_29, dend_27, dend_6, dend_2, dend_1, dend_68, dend_67, dend_65, dend_64, dend_61, dend_58, dend_39, dend_36, dend_35, dend_33, dend_30, dend_24, dend_7, dend_4, dend_3, dend_72, dend_69, dend_60, dend_59, dend_48, dend_40, dend_32, dend_31, dend_26, dend_25, dend_13, dend_8, dend_71, dend_70, dend_56, dend_49, dend_47, dend_46, dend_41, dend_21, dend_14, dend_12, dend_9, dend_55, dend_50, dend_45, dend_42, dend_23, dend_22, dend_20, dend_15, dend_11, dend_10, dend_52, dend_51, dend_44, dend_43, dend_19, dend_16, dend_54, dend_53, dend_18, dend_17]}
    dend = new SectionList()
    dend_62 dend.append()
    dend_37 dend.append()
    dend_28 dend.append()
    dend_5 dend.append()
    dend_0 dend.append()
    dend_66 dend.append()
    dend_63 dend.append()
    dend_57 dend.append()
    dend_38 dend.append()
    dend_34 dend.append()
    dend_29 dend.append()
    dend_27 dend.append()
    dend_6 dend.append()
    dend_2 dend.append()
    dend_1 dend.append()
    dend_68 dend.append()
    dend_67 dend.append()
    dend_65 dend.append()
    dend_64 dend.append()
    dend_61 dend.append()
    dend_58 dend.append()
    dend_39 dend.append()
    dend_36 dend.append()
    dend_35 dend.append()
    dend_33 dend.append()
    dend_30 dend.append()
    dend_24 dend.append()
    dend_7 dend.append()
    dend_4 dend.append()
    dend_3 dend.append()
    dend_72 dend.append()
    dend_69 dend.append()
    dend_60 dend.append()
    dend_59 dend.append()
    dend_48 dend.append()
    dend_40 dend.append()
    dend_32 dend.append()
    dend_31 dend.append()
    dend_26 dend.append()
    dend_25 dend.append()
    dend_13 dend.append()
    dend_8 dend.append()
    dend_71 dend.append()
    dend_70 dend.append()
    dend_56 dend.append()
    dend_49 dend.append()
    dend_47 dend.append()
    dend_46 dend.append()
    dend_41 dend.append()
    dend_21 dend.append()
    dend_14 dend.append()
    dend_12 dend.append()
    dend_9 dend.append()
    dend_55 dend.append()
    dend_50 dend.append()
    dend_45 dend.append()
    dend_42 dend.append()
    dend_23 dend.append()
    dend_22 dend.append()
    dend_20 dend.append()
    dend_15 dend.append()
    dend_11 dend.append()
    dend_10 dend.append()
    dend_52 dend.append()
    dend_51 dend.append()
    dend_44 dend.append()
    dend_43 dend.append()
    dend_19 dend.append()
    dend_16 dend.append()
    dend_54 dend.append()
    dend_53 dend.append()
    dend_18 dend.append()
    dend_17 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_23337, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_23337 = new SectionList()
    soma_0 OneSecGrp_SectionRef_23337.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_57, dend_57, dend_57, dend_57, dend_38, dend_38, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_37 all.append()
    dend_37 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_68 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_72 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.78  // units: uF/cm2
    forsec axon cm = 1.78  // units: uF/cm2
    forsec dend cm = 1.78  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 76.33  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Ih
        gmax_Ih = 4.4013406E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaV
        gmax_NaV = 0.08452224  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Kd
        gmax_Kd = 7.1396043E-6  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv2like
        gmax_Kv2like = 8.5407686E-5  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.1446885  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 4.6546957E-6  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Im_v2
        gmax_Im_v2 = 0.01948835  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 0.0089153405  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 2.5930332E-5  // units: S cm-2
        e_pas_nml2 = -86.55372  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 7.7729183E-4  // units: S cm-2
        e_pas_nml2 = -86.55372  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 6.9700536E-7  // units: S cm-2
        e_pas_nml2 = -86.55372  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 2.7794705E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.009739869  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics
    forsec soma {
        insert CaDynamics
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_27 nseg = 3
    dend_2 nseg = 3
    dend_67 nseg = 5
    dend_24 nseg = 9
    dend_4 nseg = 7
    dend_3 nseg = 7
    dend_69 nseg = 11
    dend_59 nseg = 3
    dend_32 nseg = 15
    dend_31 nseg = 11
    dend_26 nseg = 3
    dend_8 nseg = 3
    dend_56 nseg = 5
    dend_47 nseg = 9
    dend_46 nseg = 11
    dend_21 nseg = 3
    dend_12 nseg = 5
    dend_9 nseg = 7
    dend_55 nseg = 9
    dend_50 nseg = 3
    dend_23 nseg = 9
    dend_22 nseg = 3
    dend_20 nseg = 17
    dend_10 nseg = 3
    dend_51 nseg = 3
    dend_43 nseg = 11
    dend_19 nseg = 11
    dend_16 nseg = 5
    dend_54 nseg = 3
    dend_18 nseg = 7
    dend_17 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_472455509


