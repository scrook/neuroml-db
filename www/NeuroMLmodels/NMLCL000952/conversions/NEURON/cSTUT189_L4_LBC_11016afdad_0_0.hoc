// Cell: cSTUT189_L4_LBC_11016afdad_0_0
/*
{
  "id" : "cSTUT189_L4_LBC_11016afdad_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.05395, 9.08547, -0.234601, 2.54687", "-2.79219, 8.19057, -0.218348, 4.32292", "-2.53043, 7.29567, -0.202095, 9.95036", "-2.26867, 6.40077, -0.185842, 10.1502", "-2.00691, 5.50587, -0.169589, 10.462", "-1.74515, 4.61097, -0.153336, 10.4262", "-1.48339, 3.71607, -0.137083, 10.5866", "-1.22164, 2.82117, -0.12083, 10.9135", "-0.959876, 1.92627, -0.104577, 11.2266", "-0.698117, 1.03137, -0.0883238, 11.5453", "-0.436358, 0.136465, -0.0720707, 11.9293", "-0.174598, -0.758436, -0.0558177, 12.2062", "0.0871607, -1.65334, -0.0395646, 12.3612", "0.34892, -2.54824, -0.0233116, 12.3583", "0.610679, -3.44314, -0.00705855, 12.2953", "0.872438, -4.33804, 0.0091945, 11.8309", "1.1342, -5.23294, 0.0254475, 11.1435", "1.39596, -6.12784, 0.0417006, 10.0426", "1.65772, -7.02274, 0.0579536, 8.49572", "1.91947, -7.91764, 0.0742067, 6.62324", "2.18123, -8.81254, 0.0904597, 3.82196" ]
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-3.18195, -5.70382, -7.31829, 0.81", "-3.54266, -6.14756, -7.19754, 0.81", "-3.91283, -6.66766, -7.08785, 0.81", "-4.41544, -7.47847, -6.95213, 0.52", "-4.98249, -8.45033, -6.82204, 0.44", "-5.38896, -9.16245, -6.74312, 0.29", "-5.63086, -9.58024, -6.7045, 0.74", "-5.99557, -10.2492, -6.66136, 0.74", "-6.30476, -10.8684, -6.64237, 0.59", "-6.69593, -11.7175, -6.64986, 1.03", "-6.97874, -12.3846, -6.66328, 1.03", "-7.33388, -13.3047, -6.66608, 0.74", "-7.50504, -13.8168, -6.66601, 0.44", "-7.73608, -14.6388, -6.66586, 1.4", "-7.87548, -15.3312, -6.66571, 1.62", "-7.95819, -16.0393, -6.66551, 1.77", "-8.0262, -17.2669, -6.66511, 1.11", "-8.03354, -18.1218, -6.66939, 0.29", "-8.02679, -19.0437, -6.67739, 0.29", "-7.99901, -20.315, -6.69824, 0.44", "-7.97174, -21.2563, -6.72555, 0.59", "-7.94831, -22.1135, -6.7729, 0.81", "-7.92858, -23.5182, -6.88372, 0.22", "-7.94073, -24.4347, -6.97022, 1.33", "-7.98305, -25.3804, -7.06612, 2.06", "-8.02495, -25.9517, -7.12898, 2.14", "-8.12449, -27.0383, -7.26204, 1.62", "-8.33358, -29.0158, -7.5487, 0.22", "-8.57496, -31.1304, -7.9043, 0.22", "-8.69109, -32.2922, -8.11416, 1.11", "-8.76992, -33.1732, -8.27455, 1.33", "-8.81587, -33.7924, -8.38651, 1.18", "-8.86488, -34.6885, -8.55574, 0.96", "-8.88878, -35.6527, -8.76046, 0.22", "-8.90965, -37.9533, -9.28353, 0.22", "-8.91885, -38.7063, -9.44973, 0.88", "-8.92628, -38.9392, -9.49609, 1.18", "-8.97423, -39.4745, -9.58034, 1.33", "-9.08707, -40.2356, -9.67444, 1.03", "-9.40707, -41.7118, -9.84465, 0.22", "-9.59206, -42.3324, -9.92775, 0.44", "-9.7166, -42.7221, -9.98485, 0.44", "-10.3937, -44.6996, -10.3178, 0.22", "-10.6109, -45.2871, -10.4272, 0.44", "-10.8785, -45.9673, -10.5682, 0.44", "-12.0001, -48.6403, -11.2901, 0.22", "-12.6258, -50.0218, -11.7577, 1.77", "-12.8821, -50.5343, -11.963, 2.36", "-13.1423, -50.9927, -12.186, 2.36", "-13.7053, -51.8717, -12.6539, 1.4", "-14.6506, -53.1714, -13.4136, 0.52", "-15.3711, -54.031, -13.9854, 0.22", "-15.7575, -54.5251, -14.3385, 0.66", "-16.4167, -55.6139, -14.9633, 0.22", "-16.7248, -56.2214, -15.269, 1.33", "-16.9489, -56.7475, -15.489, 1.62", "-17.1293, -57.252, -15.6627, 1.62", "-17.9901, -60.0714, -16.4691, 0.22", "-18.9112, -63.5232, -17.2863, 0.22", "-19.1781, -64.6166, -17.5211, 0.59", "-19.5959, -66.4459, -17.8817, 0.22", "-19.8491, -67.5926, -18.0709, 1.4", "-20.107, -68.7588, -18.1984, 1.92", "-20.2985, -69.6611, -18.168, 1.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499997984545444,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-4.68195, -3.57232, 2.62171, 1.92", "-4.97102, -4.2023, 2.56191, 1.92", "-5.46235, -5.86473, 2.27925, 1.25", "-5.68474, -6.90201, 2.06284, 0.88", "-5.87318, -7.98613, 1.82308, 1.11", "-6.01872, -8.87525, 1.62636, 1.47", "-6.15238, -9.61252, 1.46649, 1.69", "-6.40635, -11.2191, 1.11082, 1.69", "-6.54397, -12.0976, 0.914139, 1.4", "-6.77888, -13.0194, 0.717511, 1.4", "-7.19154, -13.9052, 0.567096, 1.11", "-7.62939, -14.5443, 0.489464, 0.74", "-8.05936, -15.0307, 0.45932, 0.74", "-8.66873, -15.5927, 0.497559, 1.11", "-9.23722, -16.0699, 0.561394, 1.11", "-10.034, -16.7119, 0.668889, 0.81", "-10.6989, -17.264, 0.791876, 1.25", "-11.2267, -17.7221, 0.906976, 1.47", "-11.7667, -18.1808, 1.02988, 1.62", "-12.4358, -18.7254, 1.18199, 1.33", "-13.2086, -19.2704, 1.35058, 0.74", "-13.9937, -19.6977, 1.51367, 0.52", "-14.7196, -19.9813, 1.66697, 0.66", "-15.8472, -20.2794, 1.8875, 0.66", "-16.548, -20.3893, 2.01165, 0.66", "-17.5842, -20.4639, 2.16615, 0.88", "-18.3791, -20.469, 2.24946, 0.81", "-19.2738, -20.4484, 2.28484, 0.52", "-19.7661, -20.4474, 2.27515, 0.52", "-20.3596, -20.4625, 2.22676, 0.52", "-21.3971, -20.519, 2.0971, 0.88", "-22.1085, -20.5669, 1.99232, 0.88", "-22.7196, -20.6149, 1.9019, 0.88", "-23.5523, -20.6746, 1.79357, 0.74", "-24.362, -20.7136, 1.70988, 0.59", "-25.1593, -20.7204, 1.6522, 0.81", "-26.178, -20.6972, 1.61075, 0.81", "-27.0418, -20.6588, 1.60016, 1.03", "-27.9122, -20.6046, 1.59613, 1.25", "-28.2887, -20.5891, 1.61987, 1.25", "-29.1551, -20.6229, 1.70936, 0.66", "-30.0044, -20.7452, 1.80538, 0.66", "-30.7953, -20.9819, 1.89625, 0.81", "-31.1262, -21.1473, 1.95061, 0.81", "-32.439, -22.065, 2.23445, 0.37", "-32.8516, -22.4012, 2.35071, 0.29", "-33.3561, -22.8725, 2.52531, 0.29", "-33.72, -23.2298, 2.66146, 0.29", "-34.5585, -23.9856, 2.95182, 0.74", "-35.0558, -24.3752, 3.08561, 1.25", "-35.4755, -24.656, 3.15759, 1.25", "-35.845, -24.8831, 3.22773, 1.25", "-36.133, -25.0554, 3.28642, 1.25", "-36.9756, -25.5753, 3.43849, 0.52", "-37.5874, -26.0029, 3.50158, 1.03", "-37.85, -26.2274, 3.51869, 1.33", "-38.2546, -26.6431, 3.52838, 1.55", "-38.5316, -26.9886, 3.52972, 1.55", "-38.6975, -27.2538, 3.52729, 1.55", "-39.0115, -27.9771, 3.51499, 1.03", "-39.299, -28.7621, 3.5153, 0.44", "-39.3818, -28.9976, 3.52223, 0.44", "-39.5457, -29.4405, 3.57583, 0.29", "-39.677, -29.7599, 3.63595, 0.29", "-39.9141, -30.2493, 3.7612, 0.29", "-40.2219, -30.8444, 3.95268, 0.29", "-40.5034, -31.3482, 4.15039, 0.29", "-41.0083, -32.2784, 4.50103, 0.44", "-41.2901, -32.8023, 4.69863, 0.66", "-41.7872, -33.7245, 5.02764, 0.74", "-42.3366, -34.7427, 5.38168, 0.66", "-42.8683, -35.738, 5.75439, 0.29", "-43.3085, -36.5288, 6.06418, 0.22", "-43.7813, -37.2564, 6.37138, 0.22", "-44.1412, -37.7434, 6.58496, 0.74", "-44.3515, -38.0084, 6.69663, 0.74", "-45.0169, -38.8187, 7.0197, 0.59", "-45.5344, -39.4354, 7.26045, 0.66", "-46.2751, -40.246, 7.60606, 0.22", "-46.8314, -40.8195, 7.84738, 0.22", "-47.3148, -41.2922, 8.06487, 0.37", "-47.7129, -41.6901, 8.22258, 0.37", "-48.1798, -42.1561, 8.37043, 0.15", "-48.7602, -42.6896, 8.58115, 0.15", "-49.3048, -43.0819, 8.82353, 0.37", "-49.7895, -43.2841, 9.03976, 0.37", "-57.1394, -48.585, 10.6785, 0.37" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499997984545444,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "5.67805, -5.15782, -3.44829, 3.83", "6.2925, -5.99654, -3.76576, 3.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499997984545444
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "0.528048, -9.42082, 1.37171, 2.8", "0.528048, -9.42082, 1.37171, 2.8", "0.698942, -10.6609, 1.44205, 2.8", "0.869641, -11.8995, 1.51232, 2.43", "1.02804, -13.0489, 1.57752, 2.21", "1.21681, -14.4186, 1.65522, 2.06", "1.30385, -15.0502, 1.69104, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499997984545444
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-6.84195, 6.39218, -0.638285, 1.62", "-6.84195, 6.39218, -0.638285, 1.62", "-7.48469, 6.64556, -0.53878, 0.81", "-8.3096, 6.94537, -0.429275, 0.74", "-8.95424, 7.16072, -0.353386, 0.96", "-9.8175, 7.43153, -0.261035, 1.18", "-10.4843, 7.63098, -0.204626, 1.18", "-11.0721, 7.80418, -0.158438, 1.47", "-11.5603, 7.95094, -0.119242, 1.47", "-12.1325, 8.13303, -0.0812085, 1.33", "-12.7097, 8.3403, -0.0311893, 0.88", "-13.3394, 8.5946, 0.0431916, 0.52", "-13.8704, 8.82734, 0.120256, 0.52", "-14.3883, 9.0597, 0.202734, 0.52", "-14.8227, 9.25112, 0.273574, 1.03", "-15.2699, 9.43523, 0.349575, 1.33", "-15.5311, 9.52605, 0.400444, 1.33", "-16.2367, 9.73093, 0.54559, 0.81", "-16.8224, 9.87933, 0.654284, 0.81", "-17.4084, 10.0021, 0.746826, 1.03", "-17.8834, 10.0801, 0.813543, 1.03", "-18.7503, 10.184, 0.926242, 0.66", "-19.4162, 10.2428, 1.01691, 0.37", "-19.8353, 10.2807, 1.07972, 0.37", "-20.4249, 10.3357, 1.17293, 0.37", "-20.8777, 10.3842, 1.24082, 0.37", "-21.2478, 10.4294, 1.28795, 0.29", "-21.7032, 10.4966, 1.33511, 0.29", "-22.4811, 10.648, 1.41581, 0.59", "-22.9754, 10.7747, 1.46694, 1.03", "-23.4611, 10.9273, 1.51566, 1.03", "-23.9427, 11.0955, 1.55322, 1.03", "-24.6103, 11.3326, 1.58809, 0.88", "-25.3742, 11.5968, 1.60933, 0.66", "-25.8709, 11.7586, 1.61813, 0.66", "-26.6628, 12.0218, 1.63159, 1.25", "-27.0781, 12.1666, 1.63922, 1.55", "-27.5191, 12.3295, 1.65316, 1.55", "-28.0228, 12.5279, 1.67168, 0.88", "-28.6265, 12.7738, 1.7148, 0.37", "-28.9671, 12.9259, 1.75558, 0.37", "-29.2577, 13.0681, 1.80329, 0.37", "-29.5362, 13.2118, 1.85716, 0.37", "-29.902, 13.4079, 1.93257, 0.59", "-30.3499, 13.6417, 2.02596, 0.81", "-30.8661, 13.8969, 2.1277, 0.96", "-31.3228, 14.1023, 2.2074, 0.96", "-31.987, 14.3553, 2.30105, 0.37", "-32.4419, 14.5018, 2.34751, 0.96", "-32.8418, 14.6129, 2.38428, 1.25", "-33.2031, 14.7011, 2.38059, 1.25", "-33.4292, 14.7459, 2.34688, 1.25", "-33.9146, 14.8249, 2.21919, 0.74", "-34.2624, 14.8746, 2.09922, 0.59", "-34.5706, 14.9207, 1.96723, 0.88", "-35.3298, 15.0427, 1.61153, 1.18", "-36.1106, 15.1724, 1.24369, 0.96", "-36.4863, 15.2397, 1.07603, 0.96", "-37.075, 15.3656, 0.834979, 0.66", "-37.7423, 15.517, 0.592834, 0.88", "-38.1788, 15.6245, 0.463235, 0.88", "-38.7067, 15.7725, 0.374064, 0.59", "-39.2933, 15.9528, 0.339738, 0.29", "-39.8659, 16.1373, 0.331299, 0.29", "-40.0646, 16.2027, 0.33575, 0.59", "-40.453, 16.3401, 0.358412, 0.59", "-41.4173, 16.6942, 0.440759, 0.37", "-42.4408, 17.0685, 0.55667, 0.37", "-43.19, 17.3284, 0.656316, 0.74", "-43.634, 17.4718, 0.72712, 0.96", "-43.9193, 17.5639, 0.768888, 0.96", "-44.5595, 17.7574, 0.853186, 0.37", "-45.024, 17.8907, 0.914751, 0.66", "-45.47, 18.018, 0.966551, 1.25", "-45.8156, 18.1154, 1.01482, 1.25", "-46.5384, 18.3047, 1.10375, 0.81", "-46.9061, 18.3887, 1.12927, 0.81" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499997984545444,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.408048, 10.1512, -0.318285, 1.4", "0.511089, 10.3701, -0.33639, 1.4", "0.999083, 11.407, -0.422135, 1.18", "1.45857, 12.3833, -0.502872, 1.4", "1.93255, 13.3903, -0.586154, 1.4", "2.35928, 14.297, -0.661134, 1.18", "2.653, 14.9211, -0.712744, 1.18" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499997984545444
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.18123, -8.81254, 0.0904597, 0.792918", "6.39229, -23.2093, 0.0904597, 0.792918", "10.6034, -37.6061, 0.0904597, 0.792918" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "6.2925, -5.99654, -3.76576, 0.66", "7.51022, -8.71517, -4.25276, 0.66", "7.7157, -8.93822, -4.34875, 0.66", "9.02269, -9.35126, -4.79213, 0.44", "11.2681, -9.5539, -5.26104, 0.44", "11.9311, -9.56141, -5.35809, 0.88", "12.9601, -9.51121, -5.4565, 1.03", "14.1036, -9.29421, -5.43703, 1.03", "15.8064, -8.8778, -5.37419, 0.96", "16.958, -8.57564, -5.32384, 1.33", "17.5113, -8.43436, -5.317, 1.55", "18.6313, -8.22253, -5.2835, 1.55", "19.6796, -8.14703, -5.22216, 1.25", "21.3762, -8.3888, -5.10861, 0.96", "21.9249, -8.66375, -5.10482, 0.66", "22.7862, -9.38756, -5.06149, 1.11", "23.2182, -9.82478, -5.03988, 1.33", "23.721, -10.3738, -5.01804, 1.33", "24.7979, -11.515, -4.97774, 0.81", "25.704, -12.3205, -4.93252, 0.66", "27.3442, -13.1747, -4.81118, 0.66", "28.3387, -13.3985, -4.74847, 1.11", "29.3213, -13.4522, -4.69552, 1.11", "30.2468, -13.3874, -4.67671, 1.11", "31.25, -13.219, -4.7026, 0.81", "32.2825, -13.0423, -4.80473, 0.81", "33.3173, -12.8557, -4.96195, 0.96", "34.4997, -12.7045, -5.12631, 1.92", "35.661, -12.6461, -5.31164, 2.65", "36.3753, -12.6624, -5.44876, 2.65", "37.6948, -12.7771, -5.77738, 1.62" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "6.2925, -5.99654, -3.76576, 0.96", "9.6788, -6.15979, -2.08514, 0.96", "10.4726, -6.15898, -1.76745, 1.11", "10.9979, -6.14008, -1.59943, 1.25", "11.5337, -6.1067, -1.46958, 1.4", "12.1129, -6.05688, -1.35885, 1.4", "13.0728, -5.95562, -1.20766, 1.11", "13.7256, -5.82941, -1.24351, 0.96", "14.4009, -5.66361, -1.27298, 0.66", "15.2126, -5.42987, -1.30128, 0.66", "15.7137, -5.26291, -1.31988, 0.66", "16.2174, -5.08914, -1.34126, 0.66", "16.7597, -4.9091, -1.36528, 0.81", "17.2873, -4.75335, -1.3692, 1.03", "17.6927, -4.65956, -1.34707, 1.03", "18.315, -4.60625, -1.25271, 0.59", "18.8847, -4.64954, -1.13201, 0.44", "19.1613, -4.69203, -1.07033, 0.44", "19.6707, -4.75748, -0.984651, 0.44", "20.4119, -4.7912, -0.9176, 0.44", "20.9996, -4.75984, -0.913656, 0.59", "21.6518, -4.64647, -0.95299, 0.59", "22.4072, -4.42251, -1.04715, 0.74", "23.3052, -4.06305, -1.203, 1.18", "23.8414, -3.78873, -1.32042, 1.4", "24.4211, -3.44579, -1.46914, 1.47", "24.8642, -3.16185, -1.59518, 1.11", "25.4586, -2.76977, -1.7717, 0.29", "25.8048, -2.54124, -1.87837, 0.29", "26.1757, -2.2969, -1.99531, 0.29", "26.8779, -1.85124, -2.22084, 0.74", "27.3335, -1.57734, -2.3693, 1.03", "27.8173, -1.30439, -2.52342, 1.03", "28.4919, -0.947773, -2.72753, 0.74", "29.0663, -0.661194, -2.90367, 0.74", "29.8059, -0.30023, -3.14796, 0.74", "30.5472, 0.0666411, -3.41089, 1.33", "31.1227, 0.339982, -3.62206, 1.62", "31.3774, 0.465077, -3.72054, 1.62", "31.9946, 0.775428, -3.97707, 1.11", "32.6819, 1.11617, -4.27748, 0.37", "33.3666, 1.45063, -4.58776, 0.29", "33.6948, 1.60481, -4.73684, 0.29", "34.2226, 1.84241, -4.97051, 0.29", "34.6411, 2.03055, -5.14436, 0.29", "35.211, 2.28792, -5.35866, 0.66", "35.671, 2.50747, -5.52057, 0.66", "36.1957, 2.76891, -5.70238, 0.66", "36.6149, 2.99809, -5.84727, 0.52", "37.2401, 3.35796, -6.05861, 0.52", "37.6201, 3.59465, -6.18486, 0.44", "38.217, 3.98648, -6.37486, 0.59", "38.6443, 4.2875, -6.50801, 0.74", "39.1748, 4.67801, -6.66433, 0.52", "39.6027, 4.98633, -6.77768, 0.52", "40.002, 5.2653, -6.87012, 0.66", "40.8132, 5.81372, -7.04017, 0.66", "41.149, 6.04223, -7.10551, 1.11", "41.3666, 6.20284, -7.14548, 1.11", "41.7597, 6.52216, -7.2213, 1.11", "42.3025, 7.01895, -7.34434, 0.81", "42.7219, 7.45769, -7.44063, 0.96", "43.028, 7.81455, -7.51419, 0.96", "43.5412, 8.45399, -7.64023, 1.18", "44.0463, 9.12274, -7.7686, 0.37", "44.5476, 9.81306, -7.89926, 0.37", "45.083, 10.5175, -8.03698, 0.37", "45.462, 10.9882, -8.12535, 0.81", "45.799, 11.3825, -8.19578, 0.81", "46.4428, 12.0984, -8.3253, 0.59", "46.8525, 12.5363, -8.40408, 0.59", "47.4602, 13.1585, -8.52272, 0.74", "47.9241, 13.6099, -8.62079, 0.74", "48.3844, 14.0525, -8.70702, 0.37", "48.9664, 14.614, -8.80339, 1.03", "49.1144, 14.7558, -8.82512, 1.25", "49.4345, 15.0441, -8.86414, 1.4", "49.9128, 15.4248, -8.91117, 0.88", "50.4111, 15.7398, -8.95555, 0.52", "50.7532, 15.9003, -8.98037, 0.52", "51.3226, 16.1069, -9.01694, 0.29", "51.8991, 16.2886, -9.05711, 0.29", "52.5895, 16.4603, -9.10667, 0.29", "53.2789, 16.5815, -9.15802, 0.29", "53.8645, 16.6539, -9.20699, 0.29", "54.4869, 16.7102, -9.26193, 0.88", "55.0439, 16.746, -9.31509, 1.11", "55.5504, 16.774, -9.36934, 1.11", "55.9752, 16.7906, -9.41984, 0.52", "56.5097, 16.7958, -9.48423, 0.52", "57.1548, 16.7753, -9.5539, 0.44", "57.3126, 16.7567, -9.56901, 0.29", "63.5735, 19.0001, -8.69273, 0.29" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "1.30385, -15.0502, 1.69104, 1.11", "1.29147, -15.7139, 1.18656, 1.11", "1.3341, -17.1896, 0.433519, 0.96", "1.38305, -17.9843, 0.183369, 1.4", "1.43918, -19.1606, -0.0513568, 1.25", "1.46564, -20.0337, -0.173134, 1.33", "1.46992, -21.0278, -0.277104, 1.4", "1.43918, -22.0934, -0.318603, 1.11", "1.36437, -23.2602, -0.260629, 1.4", "1.27516, -24.4855, -0.165386, 1.84", "1.21116, -25.3589, -0.0885602, 1.84", "1.16515, -26.2119, -0.027419, 1.55", "1.14235, -27.3784, 0.024253, 1.25", "1.15302, -28.4215, 0.0607265, 0.66", "1.20637, -30.1766, 0.145986, 0.52", "1.23369, -30.7279, 0.189703, 0.52", "1.26977, -31.385, 0.267356, 0.52", "1.31282, -32.1917, 0.391723, 0.52", "1.33628, -32.8501, 0.521989, 0.52", "1.32093, -34.0182, 0.793112, 0.88", "1.25108, -34.8255, 0.990083, 1.18", "1.16124, -35.7131, 1.19617, 1.33", "1.06571, -36.5046, 1.35585, 1.4", "0.973797, -37.1634, 1.47342, 1.4", "0.870689, -37.915, 1.58932, 1.4", "0.7721, -38.6549, 1.6822, 1.55", "0.588567, -39.8401, 1.79409, 1.33", "0.300353, -41.3965, 1.90791, 1.03", "0.0707608, -42.4288, 1.96879, 0.81", "-0.209629, -43.5107, 2.01462, 0.88", "-0.489469, -44.4782, 2.04396, 0.88", "-0.843463, -45.5651, 2.067, 0.88", "-1.11446, -46.3297, 2.07441, 0.88", "-1.38691, -47.1002, 2.08298, 1.33", "-1.68503, -47.9652, 2.09375, 1.55", "-1.849, -48.4285, 2.10034, 1.69", "-2.14699, -49.157, 2.11229, 1.69", "-2.35995, -49.609, 2.1205, 1.69" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "1.30385, -15.0502, 1.69104, 1.18", "1.21856, -15.7135, 3.35946, 1.18", "1.24643, -16.0858, 4.17403, 1.18", "1.36495, -16.7785, 5.4463, 1.33", "1.456, -17.2155, 6.13169, 1.33", "1.66558, -18.0283, 7.24093, 1.03", "1.85437, -18.7176, 8.07163, 0.88", "2.09661, -19.3092, 8.66194, 1.03", "2.34908, -19.9987, 9.20054, 1.18", "2.51721, -20.6663, 9.60092, 1.18", "2.57493, -21.3688, 9.96175, 1.18", "2.50668, -21.9591, 10.1994, 1.25", "2.24254, -22.6695, 10.4163, 1.25", "1.7208, -23.5386, 10.6903, 0.96", "1.29913, -24.1221, 10.8835, 0.74", "0.86024, -24.7381, 11.1179, 0.74", "0.263389, -25.7273, 11.546, 0.66", "-0.085486, -26.5536, 11.9311, 0.66", "-0.435269, -27.8545, 12.5435, 0.96", "-0.565705, -28.7243, 12.9627, 0.96", "-0.63064, -29.6681, 13.3831, 0.66", "-0.656589, -30.3171, 13.6372, 0.44", "-0.708429, -31.1098, 13.9198, 0.29", "-0.903673, -31.9529, 14.1651, 0.66", "-1.11098, -32.4154, 14.2483, 0.66", "-1.57216, -33.2616, 14.3585, 0.44", "-2.03506, -34.0863, 14.4319, 1.03", "-2.33606, -34.6233, 14.4749, 1.03", "-2.90704, -35.6421, 14.5683, 0.59", "-3.32063, -36.3377, 14.6421, 1.18", "-3.79521, -37.0515, 14.712, 1.33", "-4.4208, -37.8369, 14.792, 1.47", "-5.33647, -38.8442, 14.9509, 0.37", "-6.13812, -39.6325, 15.1223, 0.37", "-6.83534, -40.1737, 15.1944, 0.52", "-7.72726, -40.6812, 15.1717, 0.52", "-8.53612, -41.0081, 15.0621, 0.29", "-9.79598, -41.4155, 14.8382, 0.29", "-10.8421, -41.6796, 14.5792, 0.29", "-13.4596, -42.1991, 13.719, 0.29", "-14.7882, -42.3844, 13.1772, 0.44", "-15.4189, -42.4313, 12.8592, 0.59", "-20.8966, -49.6987, 18.2854, 0.59", "-28.1583, -56.5247, 21.802, 0.59", "-36.9498, -61.8053, 23.9822, 0.59" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-46.9061, 18.3887, 1.12927, 0.66", "-49.5934, 17.5211, 0.365475, 0.66", "-50.5188, 17.2002, 0.152527, 0.66", "-51.4619, 16.8391, -0.0139923, 0.44", "-52.9635, 16.2362, -0.190757, 0.22", "-54.2692, 15.7233, -0.285908, 0.96", "-55.0854, 15.4089, -0.314114, 1.47", "-56.1449, 15.0219, -0.248219, 1.62", "-57.241, 14.6372, -0.166443, 1.62", "-58.8847, 14.0966, -0.0349685, 0.37", "-60.3478, 13.6603, 0.0863656, 0.22", "-63.3485, 12.8691, 0.347704, 0.22", "-66.4716, 12.1578, 0.636973, 0.22", "-67.716, 11.9141, 0.745448, 0.81", "-68.7381, 11.7402, 0.830975, 0.81", "-71.3525, 11.3284, 1.0537, 0.22", "-72.903, 11.079, 1.19209, 0.96", "-74.2951, 10.8555, 1.32135, 1.11", "-75.3864, 10.6713, 1.42093, 1.25", "-76.3438, 10.4993, 1.50678, 0.81", "-79.0546, 10.0037, 1.74115, 0.22", "-80.895, 9.66611, 1.89003, 0.29", "-82.514, 9.35753, 2.00726, 0.44", "-83.9816, 9.07835, 2.10408, 0.52", "-86.7613, 8.59511, 2.27165, 0.22", "-87.7766, 8.44594, 2.31862, 0.59", "-88.5862, 8.34688, 2.33418, 0.74", "-89.4797, 8.24557, 2.33331, 0.22", "-91.9147, 7.89956, 2.2164, 0.22", "-92.9995, 7.70394, 2.1245, 0.66", "-93.8283, 7.54161, 2.03139, 0.96", "-94.9461, 7.31858, 1.89734, 0.96", "-95.8477, 7.15005, 1.80911, 0.96", "-98.6166, 6.70779, 1.58317, 0.22", "-99.6344, 6.57225, 1.50567, 0.37", "-100.961, 6.42429, 1.41834, 0.37", "-101.592, 6.37772, 1.38478, 0.37", "-105.269, 6.25209, 1.28851, 0.15", "-106.624, 6.29387, 1.30646, 1.18", "-107.284, 6.37918, 1.3519, 1.4", "-107.774, 6.49688, 1.39721, 1.4", "-108.64, 6.78295, 1.47154, 1.18", "-109.249, 7.03431, 1.50971, 0.81", "-111.011, 8.00187, 1.56002, 0.22", "-112.052, 8.62033, 1.56157, 0.22", "-113.896, 9.84943, 1.63729, 0.29", "-114.785, 10.498, 1.69215, 0.59", "-116.006, 11.4653, 1.80052, 1.11", "-116.654, 12.0233, 1.86832, 1.11", "-117.051, 12.4195, 1.92118, 0.88", "-118.576, 14.0215, 2.10269, 0.44", "-119.11, 14.6025, 2.16273, 0.59", "-119.739, 15.2986, 2.23164, 0.59", "-120.553, 16.1714, 2.28523, 0.59", "-122.477, 18.1008, 2.3296, 0.15", "-126.334, 21.7698, 2.26984, 0.15", "-127.215, 22.5794, 2.2163, 0.66", "-127.809, 23.1187, 2.17056, 0.81", "-130.559, 25.6098, 1.90062, 0.22", "-132.34, 27.2144, 1.70766, 0.22", "-133.117, 27.9048, 1.62574, 0.59", "-133.653, 28.4021, 1.56668, 0.59", "-135.6, 30.3115, 1.33556, 0.22", "-136.161, 30.8988, 1.26288, 0.81", "-136.647, 31.448, 1.19274, 1.03", "-136.828, 31.6721, 1.1621, 1.03", "-139.219, 34.7708, 0.720649, 0.22", "-139.939, 35.7369, 0.578746, 0.81", "-140.403, 36.402, 0.476765, 0.88", "-142.551, 39.6213, -0.0284034, 0.22", "-144.5, 42.6895, -0.517345, 0.22", "-145.103, 43.7086, -0.673331, 0.66", "-145.403, 44.29, -0.759795, 0.66", "-146.307, 46.2199, -1.04454, 0.29", "-146.665, 47.0963, -1.17548, 0.52", "-146.766, 47.4163, -1.22409, 0.52", "-147.276, 49.1774, -1.49151, 0.22", "-147.906, 51.4307, -1.83173, 0.22", "-148.174, 52.4178, -1.98068, 0.22", "-148.468, 53.5295, -2.14927, 0.66", "-148.652, 54.253, -2.26412, 0.66", "-148.793, 54.8067, -2.36071, 0.52" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-46.9061, 18.3887, 1.12927, 0.29", "-48.1942, 18.9952, 1.05877, 0.29", "-51.3911, 20.5872, 0.843448, 0.22", "-52.4531, 21.116, 0.771923, 0.74", "-53.0552, 21.4159, 0.731366, 0.74", "-53.7871, 21.7803, 0.68207, 0.37", "-55.2438, 22.5057, 0.583955, 0.22", "-56.427, 23.0906, 0.506261, 0.22", "-66.7807, 29.2609, 0.832462, 0.22" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "2.653, 14.9211, -0.712744, 0.96", "5.71897, 17.1698, -2.67316, 0.96", "6.45895, 17.7435, -3.04397, 1.03", "7.19721, 18.3342, -3.36773, 0.74", "8.16993, 19.1398, -3.74185, 0.22", "9.93614, 20.6709, -4.3902, 0.22", "11.0928, 21.7032, -4.82016, 0.88", "11.7602, 22.3585, -4.97564, 1.03", "12.5391, 23.1604, -5.16849, 0.81", "13.3401, 23.9969, -5.39845, 0.22", "14.2658, 24.9681, -5.70091, 0.74", "14.6605, 25.3847, -5.83906, 1.18", "15.1098, 25.8799, -6.01221, 1.18", "15.9017, 26.8, -6.32124, 0.22", "16.3301, 27.3623, -6.49237, 0.29", "16.7163, 27.9926, -6.71196, 0.29", "17.2154, 28.9709, -7.10087, 0.88", "17.6169, 29.9161, -7.51746, 1.03", "17.8461, 30.5602, -7.77717, 0.81", "18.2701, 31.9384, -8.31445, 0.29", "18.8584, 34.1263, -9.0973, 1.77", "19.1143, 35.1488, -9.43348, 2.21", "19.3886, 36.1794, -9.71811, 1.99", "19.9155, 37.9631, -10.0852, 1.25", "20.3924, 39.4281, -10.2934, 0.22", "20.7794, 40.5041, -10.3949, 0.81", "21.024, 41.139, -10.428, 0.59", "22.0952, 43.8079, -10.5686, 0.22", "22.9383, 45.795, -10.7271, 0.22", "23.7089, 47.5927, -10.9631, 0.22", "24.3342, 49.0194, -11.2019, 1.62", "24.5181, 49.4247, -11.2833, 2.06", "24.8517, 50.1377, -11.4362, 1.62", "25.2356, 50.9292, -11.623, 1.11", "26.2727, 52.9798, -12.1523, 0.22", "27.3023, 54.8966, -12.7033, 0.22", "28.0205, 56.1883, -13.113, 0.22", "28.4676, 56.9773, -13.3998, 0.59", "28.6816, 57.3488, -13.5508, 0.59", "29.2762, 58.2542, -14.0565, 0.22", "30.3723, 59.6179, -15.0947, 1.77", "30.8992, 60.2298, -15.6184, 2.36", "31.4876, 60.875, -16.1556, 3.02", "31.838, 61.2484, -16.4316, 3.02", "33.5047, 62.9647, -17.5466, 0.74", "34.1191, 63.5867, -17.9249, 0.44", "35.4713, 64.9207, -18.6486, 0.15", "37.1299, 66.6112, -19.4952, 0.15", "38.0011, 67.5177, -19.9558, 1.4", "38.5214, 68.078, -20.2617, 1.62", "41.1872, 71.1115, -22.0732, 0.15", "42.5373, 72.6598, -23.1544, 0.15", "43.5463, 73.8235, -24.1301, 1.55", "44.2538, 74.624, -25.051, 1.99", "44.8803, 75.2815, -26.0458, 1.77", "45.7475, 76.0671, -27.6925, 0.96", "46.0652, 76.2369, -28.4978, 0.74", "46.5754, 76.1622, -30.1669, 1.18", "47.6093, 74.9958, -34.0727, 0.88", "47.9586, 74.1415, -35.633, 0.29", "48.1453, 73.4139, -36.538, 1.18", "48.3255, 72.5892, -37.3224, 1.47", "48.7562, 70.7918, -38.7416, 0.22", "49.0901, 69.6467, -39.4704, 0.22", "49.4371, 68.8276, -39.8833, 1.62", "50.0824, 67.9114, -40.4652, 1.77", "51.0526, 67.0042, -41.199, 0.22", "51.8351, 66.5421, -41.6705, 1.4", "52.5629, 66.2859, -42.0501, 1.47", "53.4127, 66.0779, -42.5043, 0.81", "55.0744, 65.7805, -43.4008, 1.18", "55.9552, 65.6652, -43.9039, 0.66", "56.7084, 65.5881, -44.3952, 1.4", "57.4146, 65.5277, -44.9086, 1.4", "58.3861, 65.4668, -45.6413, 0.59" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "2.653, 14.9211, -0.712744, 0.88", "3.12688, 15.6286, -0.779157, 0.88", "3.86317, 16.6823, -0.846199, 1.03", "4.5181, 17.6222, -0.858677, 1.25", "5.15683, 18.5355, -0.845476, 1.4", "6.05062, 19.8135, -0.827004, 1.62", "6.76682, 20.8376, -0.812202, 1.77", "7.09165, 21.2876, -0.779016, 2.21", "7.61276, 21.9923, -0.707828, 2.36", "8.01384, 22.5487, -0.630351, 2.73" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "10.6034, -37.6061, 0.0904597, 0.23322", "14.8144, -52.0028, 0.0904597, 0.23322", "19.0255, -66.3996, 0.0904597, 0.23322" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "37.6948, -12.7771, -5.77738, 0.81", "39.2379, -12.4317, -5.60597, 0.81", "40.5538, -12.142, -5.62843, 0.96", "42.5671, -11.7574, -5.81233, 0.88", "43.5288, -11.6456, -6.01906, 1.18", "44.2801, -11.5991, -6.21741, 1.18", "44.9099, -11.6023, -6.3855, 1.18", "46.0677, -11.6388, -6.76339, 1.11", "47.0764, -11.7359, -7.12168, 0.81", "48.6733, -12.0436, -7.79481, 0.66", "49.4254, -12.2497, -8.10305, 0.66", "50.3978, -12.5766, -8.49181, 0.66", "51.1126, -12.8595, -8.76681, 0.44", "51.9919, -13.2362, -9.068, 1.03", "52.6326, -13.5073, -9.2788, 1.18", "53.3143, -13.7677, -9.4853, 1.18", "54.0531, -14.0228, -9.73924, 0.96", "54.6253, -14.198, -9.94461, 0.66", "55.3668, -14.3938, -10.2075, 0.52", "56.124, -14.5187, -10.5083, 0.81", "56.9785, -14.545, -10.8662, 0.81", "57.6531, -14.4897, -11.1542, 0.59", "58.4291, -14.3661, -11.4731, 0.44", "59.1128, -14.2372, -11.7329, 0.37", "59.7376, -14.1441, -11.9427, 0.37", "60.4247, -14.1035, -12.1251, 0.74", "61.173, -14.1577, -12.251, 0.74", "61.8136, -14.3083, -12.3124, 0.74", "62.4804, -14.6314, -12.3792, 0.59", "63.2098, -15.1363, -12.4794, 0.59", "64.0187, -15.7589, -12.5664, 1.03", "64.625, -16.237, -12.6232, 1.25", "65.1194, -16.6283, -12.6628, 1.4", "66.5109, -17.6518, -12.7326, 0.88", "67.5332, -18.2707, -12.7561, 0.37", "68.5905, -18.7121, -12.8827, 0.29", "69.4214, -18.9379, -13.0826, 0.29", "69.9197, -19.0482, -13.2688, 0.29", "71.0228, -19.2825, -13.8118, 0.52", "71.7225, -19.478, -14.1947, 0.66", "73.4552, -20.1064, -15.3576, 1.84", "74.3497, -20.4488, -16.0348, 3.32", "75.367, -20.7981, -16.8485, 3.68", "76.139, -21.0166, -17.4914, 3.54", "77.7631, -21.3865, -18.903, 1.25", "79.3218, -21.5631, -20.2845, 0.37", "80.1444, -21.5104, -21.0095, 0.22", "81.1662, -21.2419, -21.9243, 1.4", "81.5683, -21.0647, -22.2915, 1.62", "81.952, -20.8515, -22.6491, 1.62", "83.4374, -19.8704, -24.1054, 0.22", "84.4465, -19.2188, -25.0688, 0.22", "85.344, -18.7036, -25.9271, 0.22", "86.359, -18.1983, -26.8642, 1.4", "86.8225, -18.001, -27.2608, 1.84", "87.4189, -17.8064, -27.6959, 2.06", "87.6874, -17.7418, -27.8557, 2.28", "88.2716, -17.6361, -28.1654, 2.28", "90.3041, -17.3574, -29.1881, 0.22", "91.3919, -17.229, -29.7037, 0.22", "92.8202, -17.062, -30.3569, 0.22", "94.0319, -16.925, -30.8813, 1.55", "94.6852, -16.8549, -31.1548, 1.77", "95.4076, -16.769, -31.4437, 1.47", "96.0148, -16.6669, -31.6674, 0.81", "97.1823, -16.4154, -32.0778, 0.22", "97.9982, -16.217, -32.3636, 0.88", "98.6201, -16.052, -32.5774, 0.96", "101.644, -15.1802, -33.5681, 0.22", "103.651, -14.5181, -34.2111, 0.22", "104.83, -14.0795, -34.5885, 1.33", "105.476, -13.8212, -34.7938, 1.99", "106.15, -13.5218, -35.0107, 1.18", "106.919, -13.1528, -35.2613, 0.29", "110.336, -11.3924, -36.3855, 0.22", "110.937, -11.0704, -36.5882, 0.59", "111.428, -10.8015, -36.7635, 0.59", "113.13, -9.85845, -37.3985, 0.22", "114.711, -8.97662, -37.9572, 0.22", "116.09, -8.18987, -38.43, 0.22", "117.412, -7.42799, -38.8622, 1.99", "118.025, -7.07323, -39.0561, 2.65", "118.686, -6.68161, -39.26, 2.87", "120.423, -5.66819, -39.7648, 0.59", "121.448, -5.04054, -40.0708, 0.22", "122.233, -4.59041, -40.3264, 0.66", "122.686, -4.34716, -40.4829, 0.96", "123.184, -4.08903, -40.6647, 0.96", "123.717, -3.83902, -40.8711, 0.59", "125.89, -2.88452, -41.7932, 0.22", "128.084, -1.96551, -42.6934, 0.22", "128.97, -1.62573, -43.0435, 0.66", "129.817, -1.34089, -43.3868, 0.66", "131.41, -0.861407, -44.0451, 0.22", "131.792, -0.759446, -44.2132, 0.96", "132.782, -0.555898, -44.6593, 1.18", "134.357, -0.32683, -45.4846, 0.22", "135.69, -0.209566, -46.2791, 0.96", "136.351, -0.196211, -46.7147, 1.33", "137.436, -0.239904, -47.4976, 1.25", "138.509, -0.375083, -48.2767, 0.52", "139.964, -0.682889, -49.3449, 0.88", "140.466, -0.850724, -49.7095, 1.55", "140.949, -1.068, -50.0268, 1.77", "141.379, -1.32489, -50.3022, 1.77", "142.604, -2.25964, -51.0515, 0.66", "143.29, -2.93313, -51.4514, 0.52", "144.313, -4.10401, -51.9379, 0.37", "144.919, -4.90663, -52.1977, 1.03", "145.515, -5.82945, -52.4309, 1.92", "145.92, -6.55281, -52.5654, 1.92", "146.601, -7.95762, -52.7244, 0.22", "147.05, -8.94828, -52.7798, 0.22", "147.327, -9.53551, -52.7791, 0.74", "147.708, -10.237, -52.7734, 0.74", "148.227, -11.0208, -52.7757, 0.22", "148.56, -11.4249, -52.8098, 0.52", "149.001, -11.8241, -52.8984, 0.52", "150.376, -12.6779, -53.3015, 0.22", "151.247, -13.0071, -53.6023, 1.18", "151.702, -13.0948, -53.7667, 1.4", "152.4, -13.1489, -54.0434, 1.47", "153.361, -13.1505, -54.4441, 0.81", "154.692, -13.0372, -55.0609, 0.22", "155.208, -12.9752, -55.3662, 0.22", "155.834, -12.9562, -55.7945, 0.81", "156.48, -12.9869, -56.2594, 1.03", "156.795, -13.0235, -56.5062, 1.03", "157.801, -13.1829, -57.3647, 0.44", "159.033, -13.324, -58.4641, 0.81", "159.776, -13.3469, -59.1605, 0.37", "160.808, -13.293, -60.09, 1.99", "161.496, -13.2162, -60.641, 1.99", "162.014, -13.1447, -61.0339, 1.4", "163.152, -12.9541, -61.8725, 0.29", "163.81, -12.819, -62.3468, 0.22", "164.762, -12.598, -63.1059, 0.22", "166.06, -12.2739, -64.2299, 1.4", "166.812, -12.091, -64.8736, 1.99", "167.512, -11.9566, -65.462, 2.06", "167.926, -11.8948, -65.7958, 2.06", "168.932, -11.7271, -66.5466, 0.44", "169.738, -11.5897, -67.1093, 0.22", "170.383, -11.5018, -67.4617, 0.66", "171.232, -11.4579, -67.7975, 0.66", "171.954, -11.5027, -68.0074, 0.22", "172.668, -11.6043, -68.167, 0.66", "173.17, -11.7072, -68.2531, 1.11", "173.779, -11.8429, -68.3647, 1.11", "174.42, -11.9596, -68.4997, 1.11", "174.997, -12.0354, -68.6337, 0.88", "175.877, -12.1062, -68.8556, 0.22", "176.676, -12.1377, -69.0571, 0.96", "177.227, -12.1402, -69.1894, 1.11", "177.712, -12.1318, -69.2965, 1.11", "178.29, -12.1184, -69.4065, 0.81", "179.846, -12.1098, -69.6549, 0.15", "181.071, -12.1991, -69.8047, 0.15", "182.05, -12.354, -69.915, 0.74", "182.618, -12.4735, -69.972, 0.81", "183.182, -12.616, -70.0303, 0.81", "184.513, -13.008, -70.1961, 0.22", "186.644, -13.7326, -70.5007, 0.22", "188.181, -14.3192, -70.736, 0.66", "189.114, -14.7278, -70.8762, 0.66", "190.008, -15.1768, -71.0071, 0.66", "190.874, -15.7217, -71.1226, 0.37", "191.454, -16.2331, -71.1688, 0.22", "191.881, -16.7616, -71.1555, 0.37", "192.437, -17.6811, -71.0364, 0.15", "192.736, -18.2808, -70.9351, 0.29", "193.346, -19.7706, -70.6047, 0.22", "193.812, -21.1438, -70.2414, 0.22", "193.958, -21.671, -70.1005, 0.37", "194.098, -22.257, -69.9471, 0.37" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "37.6948, -12.7771, -5.77738, 0.29", "36.2691, -10.77, -8.39431, 0.29", "35.9766, -10.3007, -8.93878, 0.29", "35.6313, -9.65988, -9.67704, 0.74", "35.4745, -9.32143, -10.1039, 0.74", "35.3289, -8.91952, -10.6898, 0.52", "35.1982, -8.48528, -11.3729, 1.18", "35.1524, -8.03307, -12.1248, 1.18", "35.1833, -7.56717, -12.9751, 0.88", "35.2826, -6.99799, -13.9874, 0.96", "35.4046, -6.3738, -15.053, 0.74", "35.428, -6.24991, -15.2424, 1.4", "35.5148, -5.60568, -16.0284, 1.55", "35.5588, -4.7809, -16.8569, 0.59", "35.5616, -4.13433, -17.4348, 0.44", "35.5433, -3.30692, -18.1598, 0.29", "35.5138, -2.66395, -18.65, 0.29", "35.4765, -1.36088, -19.5817, 1.62", "35.4711, -0.627159, -20.1389, 1.84", "35.4495, 0.939812, -21.3359, 0.59", "35.4284, 1.72821, -21.9468, 0.59", "35.3753, 3.3344, -23.2419, 0.22", "35.3088, 5.39159, -24.95, 0.22", "35.2436, 7.65048, -26.8432, 0.22", "35.213, 9.04578, -27.9597, 1.77", "35.1875, 9.82663, -28.5701, 2.36", "35.1492, 10.9684, -29.5096, 2.58", "35.1416, 11.2178, -29.7608, 2.58" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-2.35995, -49.609, 2.1205, 0.52", "-1.11725, -51.4016, 0.84784, 0.52", "-0.672538, -52.0161, 0.445156, 0.52", "-0.137002, -52.777, -0.018343, 0.74", "0.611306, -53.8784, -0.647589, 0.88", "1.04103, -54.5243, -1.00814, 0.88", "1.45615, -55.161, -1.33841, 0.88", "2.03468, -56.0153, -1.7071, 0.44", "2.43014, -56.5906, -1.93322, 0.44", "2.82651, -57.1282, -2.1383, 0.81", "3.20816, -57.5721, -2.3142, 0.96", "3.97315, -58.3977, -2.64226, 0.96", "4.93951, -59.4449, -3.02566, 0.44", "5.72142, -60.3191, -3.32912, 0.44", "6.58223, -61.3518, -3.65655, 0.66", "7.39056, -62.3656, -3.98102, 0.66", "8.20767, -63.4005, -4.25763, 0.52", "9.00769, -64.4501, -4.52209, 0.81", "9.77914, -65.5161, -4.78424, 0.81", "10.9031, -67.1576, -5.13889, 0.52", "11.5464, -68.1692, -5.34778, 0.52", "12.5661, -69.844, -5.6863, 0.52", "13.1443, -70.75, -5.86104, 1.47", "13.6671, -71.5658, -6.01511, 1.92", "14.2992, -72.6329, -6.1797, 2.58", "14.7146, -73.4483, -6.27793, 2.58", "15.3279, -74.8876, -6.41367, 0.96", "15.7854, -76.2002, -6.55193, 0.52", "16.1677, -77.4593, -6.65513, 0.88", "16.5249, -78.8646, -6.75498, 0.88", "16.8228, -80.2875, -6.86761, 0.88", "16.9893, -81.2512, -6.93656, 0.74", "17.1849, -82.715, -7.06734, 0.74", "17.3278, -84.0389, -7.26423, 1.11", "17.4476, -85.1488, -7.47184, 1.11", "17.5612, -86.1922, -7.69867, 0.81", "17.6491, -86.9786, -7.88157, 0.81", "17.8345, -88.5218, -8.25877, 0.74", "18.1147, -90.656, -8.77957, 0.59", "18.4194, -92.7131, -9.28103, 0.44", "18.7177, -94.6634, -9.76154, 1.77", "18.8049, -95.2805, -9.90938, 2.14", "18.9639, -96.6623, -10.2192, 1.62", "19.1164, -98.5357, -10.6167, 0.22", "19.1764, -99.9142, -10.8915, 0.22", "19.1978, -101.215, -11.1965, 0.96", "19.2007, -102.188, -11.4447, 1.18", "19.1915, -103.325, -11.7238, 0.96", "19.1566, -104.968, -12.0984, 0.22", "19.1074, -106.158, -12.3503, 0.59", "19.0887, -106.728, -12.4536, 0.59", "19.0862, -107.778, -12.6134, 0.22", "19.1377, -109.372, -12.821, 0.29", "19.1799, -110.166, -12.8983, 0.29", "19.2438, -111.229, -12.9164, 1.84", "19.3156, -112.251, -12.9011, 2.5", "19.346, -112.68, -12.8888, 2.73", "19.3907, -113.323, -12.8665, 2.65", "19.4966, -114.725, -12.8127, 1.77", "19.7281, -117.398, -12.7027, 0.22", "19.9997, -120.168, -12.5802, 0.22", "20.1248, -121.391, -12.5293, 0.52", "20.2331, -122.266, -12.493, 0.66", "20.3999, -123.316, -12.4584, 0.29", "20.666, -124.606, -12.4387, 1.47", "20.8417, -125.288, -12.4513, 2.14", "21.0455, -125.935, -12.458, 2.21", "21.42, -127.02, -12.4694, 1.55", "22.1215, -129.028, -12.49, 0.22", "22.3093, -129.605, -12.5065, 0.52", "22.4765, -130.178, -12.5301, 0.52", "23.0666, -132.506, -12.6348, 0.22", "23.1985, -133.085, -12.6653, 0.66", "23.3215, -133.774, -12.7117, 0.66", "23.7125, -136.53, -12.9448, 0.22", "24.016, -139.135, -13.2223, 0.22", "24.1481, -140.525, -13.4171, 0.81", "24.2007, -141.229, -13.5497, 1.03", "24.3163, -142.561, -13.9069, 0.22", "24.4345, -143.556, -14.2596, 0.22", "24.6484, -144.72, -14.7611, 1.47", "24.8977, -145.602, -15.1672, 2.28", "25.1627, -146.303, -15.4785, 2.28", "26.5487, -149.357, -16.7611, 0.22", "27.2453, -150.779, -17.2759, 0.22", "28.0465, -152.4, -17.7725, 0.22", "28.8927, -154.142, -18.1978, 0.22", "29.4464, -155.32, -18.4156, 2.28", "29.9256, -156.401, -18.5472, 2.5", "31.0828, -159.288, -18.679, 0.29", "31.2997, -159.985, -18.7136, 0.29", "31.5839, -161.295, -18.8147, 1.55", "31.6763, -161.925, -18.8786, 2.06", "31.7741, -162.806, -19.0106, 1.69", "31.8595, -163.76, -19.1932, 0.88", "32.0297, -166.407, -19.8283, 0.22", "32.0588, -167.112, -20.0094, 0.66", "32.0732, -167.819, -20.1965, 0.66", "32.0833, -170.432, -20.9057, 0.22", "32.0637, -172.344, -21.4259, 0.22", "32.0314, -173.692, -21.7944, 0.22", "31.9919, -174.383, -21.9598, 0.44", "31.9102, -175.319, -22.1827, 0.44", "31.7302, -176.727, -22.4974, 1.11", "31.6444, -177.227, -22.6029, 1.55", "31.457, -178.133, -22.8122, 1.69", "30.8398, -180.892, -23.5321, 0.15", "30.0237, -184.259, -24.4733, 0.15", "29.5474, -186.116, -25.0204, 2.5", "29.3512, -186.864, -25.247, 2.5", "28.7999, -188.998, -25.9227, 0.15", "28.623, -189.767, -26.1818, 0.15", "28.5114, -190.425, -26.4302, 0.66", "28.4674, -190.988, -26.6321, 0.88", "28.4738, -191.686, -26.8655, 0.88", "28.5042, -192.31, -27.0269, 0.52", "28.5702, -194.226, -27.3275, 0.22", "28.5428, -195.383, -27.4406, 0.22", "28.4682, -196.441, -27.5244, 0.96", "28.4116, -196.957, -27.5634, 1.11", "28.1457, -198.794, -27.7133, 0.22", "27.2589, -203.27, -28.1429, 0.22", "26.0647, -207.39, -28.5857, 0.22", "25.6045, -208.621, -28.7385, 1.47", "25.1649, -209.619, -28.8793, 1.62", "24.1949, -211.499, -29.1752, 0.22", "22.3495, -214.494, -29.7095, 0.22", "19.798, -217.884, -30.4105, 0.22", "18.3134, -219.609, -30.8109, 0.88", "17.8471, -220.122, -30.9297, 0.88", "16.4181, -221.549, -31.2275, 0.22", "15.7633, -222.129, -31.344, 0.88", "15.3011, -222.499, -31.4228, 0.88", "13.0994, -224.15, -31.8346, 0.22", "11.7682, -225.068, -32.0914, 0.22", "10.3431, -225.923, -32.3768, 1.55", "9.82655, -226.181, -32.4858, 2.06", "8.87034, -226.592, -32.6929, 2.06", "8.58389, -226.675, -32.765, 2.06", "7.2697, -226.834, -33.1432, 0.22", "5.85052, -226.879, -33.6085, 0.22", "5.03453, -226.863, -33.9001, 0.74", "4.55537, -226.831, -34.0649, 0.74", "2.33804, -226.531, -34.8363, 0.15", "1.69735, -226.42, -35.0709, 0.52", "1.30745, -226.332, -35.2251, 0.52", "0.230146, -226.029, -35.6779, 0.22", "-0.381925, -225.851, -35.9701, 0.66", "-1.11878, -225.645, -36.3384, 0.66", "-1.96572, -225.414, -36.7719, 0.22", "-2.58177, -225.247, -37.1029, 1.18", "-3.15905, -225.091, -37.4252, 1.33", "-5.07455, -224.583, -38.5363, 0.22", "-5.722, -224.439, -38.9131, 0.96", "-6.36969, -224.322, -39.282, 1.03" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-2.35995, -49.609, 2.1205, 1.4", "-2.50671, -50.008, 2.06821, 1.4", "-2.95838, -51.4186, 1.89443, 0.66", "-3.25163, -52.4265, 1.7797, 0.66", "-3.52629, -53.4714, 1.66713, 0.66", "-3.73142, -54.31, 1.61577, 0.59", "-3.97292, -55.2974, 1.55531, 0.59", "-4.15549, -56.1489, 1.51972, 0.59", "-4.27833, -56.8588, 1.52069, 0.96", "-4.37595, -57.5729, 1.52947, 1.18", "-4.50183, -58.7428, 1.56747, 1.33" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "8.01384, 22.5487, -0.630351, 1.4", "8.53956, 22.7696, -0.343019, 1.4", "9.78339, 23.2624, 0.373418, 1.11", "10.2705, 23.4725, 0.665032, 0.81", "10.8623, 23.7646, 1.01775, 1.11", "11.5317, 24.137, 1.40622, 0.74", "11.798, 24.3004, 1.55712, 0.74", "12.399, 24.6789, 1.87119, 0.66", "12.8126, 24.9438, 2.06391, 0.66", "13.3498, 25.3355, 2.32267, 0.74", "13.7883, 25.7093, 2.53203, 0.74", "14.1885, 26.1106, 2.72483, 0.59", "14.7646, 26.71, 2.98356, 0.59", "15.4078, 27.3577, 3.24872, 0.74", "15.8642, 27.7815, 3.43168, 0.74", "16.3867, 28.2276, 3.64048, 0.74", "16.9362, 28.6724, 3.87856, 0.44", "17.4843, 29.0943, 4.118, 0.44", "17.9969, 29.4863, 4.34129, 0.81", "18.4387, 29.8019, 4.52106, 1.11", "19.0823, 30.2475, 4.779, 1.11", "19.7159, 30.7091, 5.02667, 0.88", "20.2461, 31.1355, 5.24734, 0.88", "20.7175, 31.6131, 5.47789, 0.74", "21.1507, 32.1446, 5.72166, 0.74", "21.5819, 32.7366, 5.95966, 0.59", "21.9223, 33.2398, 6.1206, 0.44", "22.2246, 33.7218, 6.24856, 0.44", "22.5922, 34.3914, 6.42786, 0.44", "22.9529, 35.1164, 6.62136, 0.44", "23.3224, 35.9049, 6.84197, 0.44", "23.6149, 36.5351, 7.02833, 0.59", "24.0325, 37.3378, 7.29218, 0.81", "24.3461, 37.8627, 7.48552, 1.25", "24.616, 38.27, 7.6607, 1.25", "25.0993, 39.0078, 8.04482, 0.74", "25.433, 39.5161, 8.35948, 0.52", "25.7251, 39.9204, 8.6222, 0.74", "26.0712, 40.3032, 8.86762, 0.74", "26.3308, 40.5885, 9.01129, 0.74", "26.65, 41.0454, 9.15018, 0.44", "26.8909, 41.5821, 9.23175, 0.44", "27.0691, 42.2014, 9.29386, 0.44", "27.1661, 42.7074, 9.33763, 0.44", "27.31, 43.725, 9.42015, 0.81", "27.4285, 44.6306, 9.50055, 0.81", "27.532, 45.351, 9.57813, 1.03", "27.6644, 45.9439, 9.66076, 0.74", "27.8448, 46.5065, 9.75794, 0.52", "28.1085, 47.074, 9.86998, 0.52", "28.3535, 47.4053, 9.94656, 0.88", "28.604, 47.6715, 10.0198, 0.88", "29.2286, 48.286, 10.2034, 0.37", "29.7085, 48.7612, 10.3706, 0.37", "30.1111, 49.1946, 10.5495, 0.37", "30.3923, 49.5182, 10.6969, 0.37", "30.8349, 50.2208, 11.0272, 0.66", "30.9653, 50.6481, 11.2345, 1.03", "30.9073, 51.0901, 11.468, 1.25", "30.8363, 51.279, 11.5708, 1.25", "35.2887, 58.0083, 14.1889, 1.25" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "8.01384, 22.5487, -0.630351, 0.81", "7.8161, 24.3142, -0.161839, 0.81", "7.75085, 25.0769, 0.0432185, 0.81", "7.69842, 25.7954, 0.243435, 0.81", "7.59118, 27.207, 0.645226, 0.74", "7.5093, 28.1309, 0.945832, 0.74", "7.45084, 28.9839, 1.23861, 0.81", "7.45843, 29.4748, 1.42321, 0.81", "7.53253, 30.1824, 1.6772, 0.52", "7.62127, 30.6575, 1.83214, 0.52", "7.89128, 31.6235, 2.08925, 0.44", "8.15193, 32.2865, 2.17352, 0.37", "8.37371, 32.7252, 2.16089, 0.37", "9.01926, 33.8414, 1.97693, 1.25", "9.36378, 34.4171, 1.81718, 1.69", "9.67847, 34.9537, 1.63407, 1.55", "10.392, 36.2306, 1.13917, 0.88", "10.7794, 37.0041, 0.834899, 0.37", "11.1074, 37.7104, 0.54273, 0.37", "11.3249, 38.199, 0.329238, 0.37", "11.6643, 39.0672, -0.0188444, 0.81", "11.8529, 39.5885, -0.204216, 1.03", "12.03, 40.061, -0.335116, 1.18", "12.2009, 40.485, -0.453074, 1.18", "12.45, 41.0552, -0.607175, 0.59", "12.824, 41.8458, -0.842098, 0.29", "13.06, 42.3737, -1.04367, 0.29", "13.4968, 43.4046, -1.47875, 0.29", "13.9015, 44.419, -1.92116, 0.66", "14.1277, 45.0186, -2.19862, 0.66", "14.3899, 45.771, -2.55527, 1.25", "14.8845, 47.3068, -3.24422, 2.36", "15.0166, 47.7687, -3.43092, 2.58", "15.2384, 48.6363, -3.74752, 1.99", "15.4769, 49.6461, -4.04152, 0.88", "15.7789, 51.0097, -4.30935, 0.29", "16.0856, 52.4257, -4.45951, 0.81", "16.2539, 53.1968, -4.48828, 0.81", "16.3536, 53.6722, -4.49227, 0.44", "16.5662, 54.7279, -4.46763, 0.22", "16.941, 56.6346, -4.37564, 0.22", "17.1747, 57.8114, -4.33226, 1.25", "17.2719, 58.2899, -4.32879, 1.69", "17.3558, 58.7007, -4.34048, 1.69", "17.5056, 59.3772, -4.3829, 0.96", "17.672, 60.0922, -4.45285, 0.52", "17.9838, 61.2851, -4.60411, 0.29", "18.2891, 62.371, -4.75072, 0.29", "18.6295, 63.5314, -4.92761, 0.29", "18.8503, 64.2637, -5.06211, 0.81", "18.9883, 64.7163, -5.15988, 0.81", "19.3951, 66.0302, -5.48335, 0.22", "19.7856, 67.2287, -5.8241, 0.22", "20.1737, 68.3581, -6.17861, 1.69", "20.4374, 69.1077, -6.42774, 2.43", "20.6451, 69.706, -6.627, 2.28", "20.95, 70.5578, -6.90313, 0.96", "21.3782, 71.7358, -7.25872, 0.22", "21.6289, 72.4046, -7.44096, 0.66", "21.7796, 72.7869, -7.53046, 0.66", "22.2926, 74.0741, -7.79273, 0.22", "22.6296, 74.9159, -7.94995, 1.11", "22.889, 75.5805, -8.0699, 1.62", "23.0956, 76.0854, -8.15948, 1.99", "23.2425, 76.4272, -8.22063, 1.99", "23.5741, 77.1522, -8.34751, 1.4", "23.8274, 77.672, -8.43619, 0.59", "24.554, 79.0966, -8.66693, 0.22", "25.4626, 80.7631, -8.91618, 0.22", "26.0437, 81.7799, -9.06051, 0.22", "26.5286, 82.5959, -9.17083, 0.74", "26.8075, 83.0429, -9.23084, 0.74", "27.1517, 83.5722, -9.3074, 0.37", "27.9805, 84.7839, -9.52541, 0.22", "28.7829, 85.9122, -9.78342, 1.25", "29.0102, 86.2229, -9.86606, 1.69", "29.3285, 86.6626, -9.98846, 1.69", "29.7772, 87.294, -10.1762, 0.81", "30.5495, 88.4037, -10.5349, 0.22", "30.901, 88.9204, -10.7114, 0.66", "31.1847, 89.334, -10.8558, 0.66", "31.8817, 90.3471, -11.2215, 0.22", "32.7464, 91.5637, -11.6394, 1.92", "33.0486, 91.9936, -11.7648, 2.36", "33.4151, 92.5224, -11.8927, 2.58", "33.7507, 93.0147, -12.0003, 2.28", "34.1368, 93.6103, -12.1068, 1.47", "35.1517, 95.2711, -12.3349, 0.15", "36.0418, 96.7817, -12.4831, 0.15", "36.5702, 97.7119, -12.5488, 0.66", "36.7476, 98.0367, -12.5614, 0.66", "38.0339, 100.466, -12.5709, 0.22", "38.743, 101.812, -12.522, 0.22", "39.391, 103.046, -12.431, 0.22", "39.9476, 104.047, -12.3196, 0.52", "40.5034, 104.987, -12.175, 0.22", "41.1119, 105.936, -11.9886, 1.4", "41.5143, 106.447, -11.8682, 1.62", "41.7426, 106.71, -11.8106, 1.62", "42.6125, 107.66, -11.6455, 0.22", "43.0827, 108.155, -11.5876, 0.66", "43.3461, 108.433, -11.5708, 0.66", "45.1386, 110.401, -11.5276, 0.15", "46.0613, 111.467, -11.5376, 0.15", "46.6806, 112.221, -11.5704, 0.74", "46.9228, 112.531, -11.5915, 1.03", "47.1757, 112.879, -11.6218, 1.03", "48.3241, 114.578, -11.784, 0.22", "49.2557, 115.941, -11.9469, 0.22", "50.0121, 116.962, -12.0961, 1.4", "50.4497, 117.516, -12.1864, 1.69", "50.893, 118.037, -12.2811, 1.84", "51.4958, 118.686, -12.4147, 1.11", "54.3955, 121.481, -13.087, 0.22", "54.9849, 121.95, -13.2173, 0.22", "55.6626, 122.379, -13.3575, 0.96", "56.1506, 122.625, -13.4597, 1.18", "56.604, 122.794, -13.5465, 1.18", "57.0559, 122.91, -13.6269, 0.59", "58.9787, 123.156, -13.9479, 0.22", "60.1573, 123.293, -14.1341, 0.59", "60.7478, 123.359, -14.2239, 0.59", "62.8565, 123.611, -14.5442, 0.15", "63.5202, 123.701, -14.6449, 0.88", "64.1154, 123.803, -14.7343, 1.47", "64.5175, 123.936, -14.7878, 1.47", "64.7848, 124.077, -14.8218, 1.47", "66.1133, 124.94, -14.993, 0.15", "66.5486, 125.269, -15.0501, 0.44", "66.9971, 125.637, -15.1057, 0.37", "69.763, 128.102, -15.4181, 0.22", "71.7243, 129.984, -15.5976, 0.22", "72.2621, 130.525, -15.6417, 0.96", "72.6581, 130.955, -15.6678, 1.4", "72.795, 131.108, -15.676, 1.4", "73.8967, 132.369, -15.7342, 0.22", "74.5285, 133.211, -15.7518, 0.22" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "35.1416, 11.2178, -29.7608, 0.15", "36.7999, 9.87763, -31.2884, 0.15", "37.5298, 9.31893, -31.8609, 1.18", "38.7273, 8.41243, -32.719, 0.37", "39.7272, 7.61872, -33.3967, 0.74", "40.8251, 6.72546, -34.0438, 0.88", "41.6351, 6.01859, -34.4645, 0.22", "42.1376, 5.54727, -34.7012, 0.22", "42.7173, 4.98714, -34.9284, 0.96", "43.3172, 4.4256, -35.1092, 1.11", "44.3078, 3.49122, -35.3711, 0.22", "45.3828, 2.44824, -35.6898, 0.22", "45.9225, 1.84862, -35.9172, 0.96", "46.3732, 1.25525, -36.1665, 1.62", "46.5811, 0.915332, -36.3242, 1.62", "46.95, 0.116803, -36.7441, 1.4", "47.2983, -0.876094, -37.3225, 1.18", "47.599, -2.07253, -38.0517, 0.44", "47.722, -2.82457, -38.4947, 0.29", "47.8115, -3.70172, -38.9797, 0.88", "47.8478, -4.44203, -39.3758, 0.88" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "35.1416, 11.2178, -29.7608, 0.29", "36.6765, 13.146, -31.4701, 0.29", "37.6909, 14.4203, -32.5996, 0.29", "38.7557, 15.758, -33.7854, 0.37", "39.8256, 17.102, -34.9767, 0.81" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-4.50183, -58.7428, 1.56747, 0.59", "-4.23474, -59.6168, 1.50185, 0.59", "-4.11639, -60.1416, 1.44006, 0.74", "-4.04795, -60.5364, 1.38868, 0.96", "-3.99773, -60.944, 1.33599, 1.11", "-3.95838, -61.4132, 1.27595, 1.11", "-3.9292, -61.895, 1.21263, 0.81", "-3.93023, -62.558, 1.13741, 0.29", "-3.92957, -62.94, 1.08303, 0.29", "-3.92454, -63.5439, 0.995458, 0.59", "-3.9176, -63.8978, 0.947895, 0.96", "-3.90384, -64.2571, 0.905361, 1.11", "-3.87751, -64.8408, 0.849169, 0.59", "-3.83319, -65.6448, 0.776668, 0.29", "-3.79144, -66.3365, 0.717645, 0.29", "-3.75821, -66.7662, 0.67444, 0.29", "-3.68379, -67.6814, 0.57439, 0.29", "-3.65287, -68.1114, 0.527641, 0.52", "-3.62999, -68.5414, 0.481239, 0.66", "-3.60953, -69.1589, 0.419659, 1.11", "-3.58857, -69.7525, 0.35747, 1.4", "-3.57438, -70.2261, 0.309222, 1.62", "-3.55094, -71.0524, 0.255006, 0.44", "-3.52866, -71.7408, 0.23282, 0.44", "-3.5142, -72.3103, 0.231242, 0.44", "-3.51039, -72.7451, 0.244954, 0.66", "-3.52146, -73.262, 0.282372, 0.66", "-3.53597, -73.8879, 0.328508, 0.37", "-3.55046, -74.4206, 0.366259, 0.37", "-3.55566, -74.5961, 0.377749, 0.59", "-3.573, -75.1596, 0.404188, 0.59", "-3.58945, -76.0439, 0.403228, 0.29", "-3.60201, -76.643, 0.374795, 0.74", "-3.61626, -77.0745, 0.33773, 0.96", "-3.63246, -77.5471, 0.293313, 0.96", "-3.64337, -77.9961, 0.241933, 0.96", "-3.66048, -78.9633, 0.115989, 0.29", "-3.68053, -80.1659, -0.0539622, 0.29", "-3.70927, -81.1956, -0.19364, 1.4", "-3.7252, -81.6715, -0.255228, 1.92", "-3.74272, -82.0801, -0.304122, 2.28", "-3.77959, -82.6811, -0.367812, 2.28", "-3.82043, -83.1596, -0.420964, 1.4", "-3.93472, -84.2279, -0.558899, 0.22", "-4.02263, -84.8622, -0.643765, 0.22", "-4.09379, -85.2857, -0.699542, 0.88", "-4.17026, -85.6879, -0.748377, 0.96", "-4.30259, -86.3362, -0.837066, 0.22", "-4.45464, -87.0515, -0.941668, 0.22", "-4.58836, -87.6909, -1.03344, 0.74", "-4.62956, -87.9058, -1.06094, 1.03", "-4.67941, -88.2447, -1.09189, 1.03", "-4.71022, -88.5539, -1.11025, 1.03", "-4.73619, -88.9865, -1.12102, 0.81", "-4.74894, -89.8171, -1.13083, 0.22", "-4.74537, -90.2158, -1.13269, 0.22", "-4.72065, -90.9756, -1.13146, 0.22", "-4.6885, -91.4629, -1.12184, 1.18", "-4.65432, -91.8054, -1.10819, 1.77", "-4.61714, -92.0948, -1.09253, 1.99", "-4.53154, -92.6487, -1.05498, 1.47", "-4.30282, -93.9498, -0.94987, 0.22", "-4.02175, -95.37, -0.835708, 0.22", "-3.86905, -96.0844, -0.776578, 0.59", "-3.7674, -96.5407, -0.740418, 1.03", "-3.69218, -96.8777, -0.716894, 1.25", "-3.63025, -97.1438, -0.702839, 1.47", "-3.37871, -98.2462, -0.648802, 0.22", "-3.25095, -98.8222, -0.622702, 0.66", "-3.20439, -99.0362, -0.61222, 0.96", "-3.10108, -99.5038, -0.586105, 0.96", "-2.87845, -100.495, -0.522839, 0.22", "-2.43715, -102.354, -0.373241, 0.22", "-2.30615, -102.876, -0.317645, 0.88", "-2.24838, -103.084, -0.291947, 1.11", "-2.18475, -103.29, -0.262474, 1.33", "-2.0674, -103.634, -0.198692, 0.96", "-1.91627, -104.085, -0.0701678, 0.44", "-1.60916, -105.027, 0.26999, 0.22", "-1.46445, -105.521, 0.462782, 0.66", "-1.35829, -105.908, 0.619806, 0.88", "-1.18994, -106.569, 0.905243, 0.22", "-0.907066, -107.813, 1.47799, 0.22", "-0.855131, -108.148, 1.63274, 0.22", "-0.818267, -108.59, 1.81291, 1.62", "-0.810168, -109.096, 1.97492, 2.5", "-0.813868, -109.32, 2.01302, 2.73", "-0.819353, -109.512, 2.01186, 2.73", "-0.828006, -110.438, 1.84017, 1.25", "-0.810196, -111.326, 1.61969, 0.29", "-0.792693, -111.655, 1.52695, 0.29", "-0.716682, -112.461, 1.28927, 0.66", "-0.685256, -112.716, 1.21106, 1.11", "-0.61958, -113.217, 1.05558, 1.25", "-0.568463, -113.581, 0.950397, 1.25", "-0.519925, -114.176, 0.813262, 1.03", "-0.495946, -114.9, 0.664673, 0.22", "-0.505291, -115.201, 0.616004, 0.22", "-0.550968, -115.712, 0.516416, 0.22", "-0.657805, -116.481, 0.351515, 1.84", "-0.757752, -117.064, 0.21369, 3.32", "-0.850788, -117.509, 0.100148, 3.54", "-0.963372, -117.964, -0.0187032, 2.8", "-1.27242, -119.165, -0.325485, 0.29", "-1.3549, -119.453, -0.399318, 0.81", "-1.45219, -119.735, -0.47357, 0.88", "-1.707, -120.381, -0.64109, 0.22", "-1.9389, -120.931, -0.793477, 0.22", "-2.12377, -121.364, -0.91813, 0.88", "-2.25031, -121.654, -1.0011, 1.25", "-2.36627, -121.932, -1.08715, 1.25", "-2.5399, -122.403, -1.23525, 0.59", "-2.83422, -123.358, -1.52773, 0.22", "-2.91913, -123.675, -1.62188, 0.74", "-2.99163, -123.971, -1.71701, 0.74", "-3.0369, -124.16, -1.77937, 0.52", "-3.23118, -125.0, -2.05206, 0.22", "-3.30698, -125.364, -2.16886, 1.03", "-3.34529, -125.57, -2.23528, 1.25", "-3.47598, -126.602, -2.56728, 0.22", "-3.50179, -127.116, -2.72672, 0.22", "-3.49902, -127.442, -2.83028, 0.59", "-3.46032, -127.851, -2.96956, 0.59", "-3.33683, -128.454, -3.16186, 0.22", "-3.06439, -129.361, -3.42007, 0.22", "-2.87226, -129.839, -3.53686, 1.03", "-2.73055, -130.136, -3.59615, 1.33", "-2.50876, -130.53, -3.64067, 1.33", "-1.86227, -131.523, -3.66651, 0.22", "-1.69937, -131.745, -3.65499, 0.52", "-1.56207, -131.912, -3.6382, 0.52", "-0.667702, -132.863, -3.44755, 0.22", "0.3156, -133.783, -3.16378, 0.22", "0.730128, -134.136, -3.02057, 1.47", "1.00123, -134.353, -2.91799, 2.21", "1.33611, -134.617, -2.78661, 1.62", "2.73178, -135.709, -2.22223, 0.29", "3.5606, -136.371, -1.89173, 0.29", "4.44581, -137.172, -1.55131, 0.22", "4.88838, -137.63, -1.38431, 1.03", "5.01597, -137.775, -1.33815, 1.25", "5.22083, -138.033, -1.26626, 1.25", "5.98388, -139.185, -1.03427, 0.29", "6.8419, -140.646, -0.794234, 0.22", "7.22172, -141.349, -0.691081, 1.92", "7.39595, -141.685, -0.642415, 2.36", "7.57122, -142.035, -0.590148, 2.58", "8.22682, -143.501, -0.383658, 0.22", "8.42749, -144.051, -0.314858, 0.22", "8.58671, -144.614, -0.261214, 0.22", "8.67017, -144.976, -0.232219, 0.74", "8.71686, -145.248, -0.214407, 0.88", "8.79847, -146.165, -0.190269, 0.22", "8.8001, -146.556, -0.194309, 0.22", "8.78316, -147.031, -0.208339, 0.81", "8.75116, -147.437, -0.223514, 0.96", "8.7305, -147.623, -0.231318, 0.96", "8.54274, -149.129, -0.296346, 0.22", "8.48992, -149.558, -0.313256, 0.66", "8.45894, -149.812, -0.322961, 0.66", "8.1054, -152.556, -0.432528, 0.22", "7.87736, -154.219, -0.501045, 0.22", "7.82206, -154.613, -0.515981, 0.44" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-4.50183, -58.7428, 1.56747, 0.29", "-5.29958, -59.9365, 1.52333, 0.29", "-6.06061, -61.0448, 1.59123, 0.29", "-6.44007, -61.5603, 1.64375, 0.44", "-7.13037, -62.4515, 1.74894, 0.22", "-7.42743, -62.8291, 1.79483, 0.52", "-7.72617, -63.2078, 1.84064, 0.66", "-8.75227, -64.4776, 2.01622, 0.22", "-9.43368, -65.2721, 2.13867, 0.22", "-10.1509, -66.053, 2.25185, 0.22", "-10.7293, -66.6307, 2.32972, 0.66", "-11.0929, -66.9608, 2.36738, 0.96", "-11.5757, -67.362, 2.39514, 0.96", "-12.1713, -67.7975, 2.39468, 0.52", "-13.1764, -68.4755, 2.39797, 0.22", "-13.572, -68.7109, 2.39947, 0.66", "-14.3956, -69.1497, 2.40368, 0.66", "-15.132, -69.5305, 2.40055, 0.29", "-15.8934, -69.9097, 2.39036, 0.29", "-16.227, -70.0783, 2.38318, 0.59", "-16.8281, -70.3778, 2.36423, 0.59", "-17.5017, -70.7119, 2.32124, 0.59", "-18.9125, -71.3915, 2.18211, 0.22", "-20.1683, -72.0075, 2.00823, 0.22", "-21.374, -72.6057, 1.88083, 0.22", "-22.4237, -73.1019, 1.81229, 0.22", "-23.3694, -73.5524, 1.77852, 0.88", "-24.0324, -73.8792, 1.76599, 1.18", "-24.7593, -74.2619, 1.81762, 1.18", "-26.7304, -75.4451, 2.13736, 0.22", "-28.5085, -76.686, 2.60012, 0.22", "-29.0223, -77.1153, 2.78677, 0.59", "-29.5241, -77.6059, 3.01201, 0.59", "-30.775, -78.9748, 3.61305, 0.37", "-31.1929, -79.4765, 3.80937, 0.88", "-31.7227, -80.205, 4.00808, 1.03", "-32.0242, -80.6218, 4.10222, 1.03", "-32.8384, -81.5831, 4.25456, 0.29", "-33.481, -82.2177, 4.30216, 0.44", "-34.0351, -82.7106, 4.27628, 0.66", "-35.0738, -83.536, 4.22161, 0.29", "-35.6786, -83.9577, 4.18483, 0.52", "-36.0516, -84.1917, 4.15795, 0.59", "-36.5197, -84.4527, 4.11181, 0.59", "-43.0515, -92.2149, 4.08561, 0.59" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_23", "dend_22", "dend_15", "dend_8", "dend_5", "dend_0", "dend_17", "dend_16", "dend_10", "dend_9", "dend_7", "dend_6", "dend_4", "dend_1", "dend_21", "dend_18", "dend_14", "dend_11", "dend_3", "dend_2", "dend_20", "dend_19", "dend_13", "dend_12" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_23", "dend_22", "dend_15", "dend_8", "dend_5", "dend_0", "dend_17", "dend_16", "dend_10", "dend_9", "dend_7", "dend_6", "dend_4", "dend_1", "dend_21", "dend_18", "dend_14", "dend_11", "dend_3", "dend_2", "dend_20", "dend_19", "dend_13", "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_15", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.6794998E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cSTUT189_L4_LBC_11016afdad_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_15, id: dend_15, parent: soma_0
create dend_15
public dend_15
// Section: dend_8, id: dend_8, parent: soma_0
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_14, id: dend_14, parent: dend_10
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_23, dend_22, dend_15, dend_8, dend_5, dend_0, dend_17, dend_16, dend_10, dend_9, dend_7, dend_6, dend_4, dend_1, dend_21, dend_18, dend_14, dend_11, dend_3, dend_2, dend_20, dend_19, dend_13, dend_12]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_23, dend_22, dend_15, dend_8, dend_5, dend_0, dend_17, dend_16, dend_10, dend_9, dend_7, dend_6, dend_4, dend_1, dend_21, dend_18, dend_14, dend_11, dend_3, dend_2, dend_20, dend_19, dend_13, dend_12]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_24
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_15, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_23(0), soma_0(0.4499997984545444)
    connect dend_22(0), soma_0(0.4499997984545444)
    connect dend_15(0), soma_0(0.4499997984545444)
    connect dend_8(0), soma_0(0.4499997984545444)
    connect dend_5(0), soma_0(0.4499997984545444)
    connect dend_0(0), soma_0(0.4499997984545444)
    connect axon_0(0), soma_0(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_14(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.05395, 9.08547, -0.234601, 2.54687 ) }
    soma_0 { pt3dadd( -2.79219, 8.19057, -0.218348, 4.32292 ) }
    soma_0 { pt3dadd( -2.53043, 7.29567, -0.202095, 9.95036 ) }
    soma_0 { pt3dadd( -2.26867, 6.40077, -0.185842, 10.1502 ) }
    soma_0 { pt3dadd( -2.00691, 5.50587, -0.169589, 10.462 ) }
    soma_0 { pt3dadd( -1.74515, 4.61097, -0.153336, 10.4262 ) }
    soma_0 { pt3dadd( -1.48339, 3.71607, -0.137083, 10.5866 ) }
    soma_0 { pt3dadd( -1.22164, 2.82117, -0.12083, 10.9135 ) }
    soma_0 { pt3dadd( -0.959876, 1.92627, -0.104577, 11.2266 ) }
    soma_0 { pt3dadd( -0.698117, 1.03137, -0.0883238, 11.5453 ) }
    soma_0 { pt3dadd( -0.436358, 0.136465, -0.0720707, 11.9293 ) }
    soma_0 { pt3dadd( -0.174598, -0.758436, -0.0558177, 12.2062 ) }
    soma_0 { pt3dadd( 0.0871607, -1.65334, -0.0395646, 12.3612 ) }
    soma_0 { pt3dadd( 0.34892, -2.54824, -0.0233116, 12.3583 ) }
    soma_0 { pt3dadd( 0.610679, -3.44314, -0.00705855, 12.2953 ) }
    soma_0 { pt3dadd( 0.872438, -4.33804, 0.0091945, 11.8309 ) }
    soma_0 { pt3dadd( 1.1342, -5.23294, 0.0254475, 11.1435 ) }
    soma_0 { pt3dadd( 1.39596, -6.12784, 0.0417006, 10.0426 ) }
    soma_0 { pt3dadd( 1.65772, -7.02274, 0.0579536, 8.49572 ) }
    soma_0 { pt3dadd( 1.91947, -7.91764, 0.0742067, 6.62324 ) }
    soma_0 { pt3dadd( 2.18123, -8.81254, 0.0904597, 3.82196 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 21/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -3.18195, -5.70382, -7.31829, 0.81 ) }
    dend_23 { pt3dadd( -3.54266, -6.14756, -7.19754, 0.81 ) }
    dend_23 { pt3dadd( -3.91283, -6.66766, -7.08785, 0.81 ) }
    dend_23 { pt3dadd( -4.41544, -7.47847, -6.95213, 0.52 ) }
    dend_23 { pt3dadd( -4.98249, -8.45033, -6.82204, 0.44 ) }
    dend_23 { pt3dadd( -5.38896, -9.16245, -6.74312, 0.29 ) }
    dend_23 { pt3dadd( -5.63086, -9.58024, -6.7045, 0.74 ) }
    dend_23 { pt3dadd( -5.99557, -10.2492, -6.66136, 0.74 ) }
    dend_23 { pt3dadd( -6.30476, -10.8684, -6.64237, 0.59 ) }
    dend_23 { pt3dadd( -6.69593, -11.7175, -6.64986, 1.03 ) }
    dend_23 { pt3dadd( -6.97874, -12.3846, -6.66328, 1.03 ) }
    dend_23 { pt3dadd( -7.33388, -13.3047, -6.66608, 0.74 ) }
    dend_23 { pt3dadd( -7.50504, -13.8168, -6.66601, 0.44 ) }
    dend_23 { pt3dadd( -7.73608, -14.6388, -6.66586, 1.4 ) }
    dend_23 { pt3dadd( -7.87548, -15.3312, -6.66571, 1.62 ) }
    dend_23 { pt3dadd( -7.95819, -16.0393, -6.66551, 1.77 ) }
    dend_23 { pt3dadd( -8.0262, -17.2669, -6.66511, 1.11 ) }
    dend_23 { pt3dadd( -8.03354, -18.1218, -6.66939, 0.29 ) }
    dend_23 { pt3dadd( -8.02679, -19.0437, -6.67739, 0.29 ) }
    dend_23 { pt3dadd( -7.99901, -20.315, -6.69824, 0.44 ) }
    dend_23 { pt3dadd( -7.97174, -21.2563, -6.72555, 0.59 ) }
    dend_23 { pt3dadd( -7.94831, -22.1135, -6.7729, 0.81 ) }
    dend_23 { pt3dadd( -7.92858, -23.5182, -6.88372, 0.22 ) }
    dend_23 { pt3dadd( -7.94073, -24.4347, -6.97022, 1.33 ) }
    dend_23 { pt3dadd( -7.98305, -25.3804, -7.06612, 2.06 ) }
    dend_23 { pt3dadd( -8.02495, -25.9517, -7.12898, 2.14 ) }
    dend_23 { pt3dadd( -8.12449, -27.0383, -7.26204, 1.62 ) }
    dend_23 { pt3dadd( -8.33358, -29.0158, -7.5487, 0.22 ) }
    dend_23 { pt3dadd( -8.57496, -31.1304, -7.9043, 0.22 ) }
    dend_23 { pt3dadd( -8.69109, -32.2922, -8.11416, 1.11 ) }
    dend_23 { pt3dadd( -8.76992, -33.1732, -8.27455, 1.33 ) }
    dend_23 { pt3dadd( -8.81587, -33.7924, -8.38651, 1.18 ) }
    dend_23 { pt3dadd( -8.86488, -34.6885, -8.55574, 0.96 ) }
    dend_23 { pt3dadd( -8.88878, -35.6527, -8.76046, 0.22 ) }
    dend_23 { pt3dadd( -8.90965, -37.9533, -9.28353, 0.22 ) }
    dend_23 { pt3dadd( -8.91885, -38.7063, -9.44973, 0.88 ) }
    dend_23 { pt3dadd( -8.92628, -38.9392, -9.49609, 1.18 ) }
    dend_23 { pt3dadd( -8.97423, -39.4745, -9.58034, 1.33 ) }
    dend_23 { pt3dadd( -9.08707, -40.2356, -9.67444, 1.03 ) }
    dend_23 { pt3dadd( -9.40707, -41.7118, -9.84465, 0.22 ) }
    dend_23 { pt3dadd( -9.59206, -42.3324, -9.92775, 0.44 ) }
    dend_23 { pt3dadd( -9.7166, -42.7221, -9.98485, 0.44 ) }
    dend_23 { pt3dadd( -10.3937, -44.6996, -10.3178, 0.22 ) }
    dend_23 { pt3dadd( -10.6109, -45.2871, -10.4272, 0.44 ) }
    dend_23 { pt3dadd( -10.8785, -45.9673, -10.5682, 0.44 ) }
    dend_23 { pt3dadd( -12.0001, -48.6403, -11.2901, 0.22 ) }
    dend_23 { pt3dadd( -12.6258, -50.0218, -11.7577, 1.77 ) }
    dend_23 { pt3dadd( -12.8821, -50.5343, -11.963, 2.36 ) }
    dend_23 { pt3dadd( -13.1423, -50.9927, -12.186, 2.36 ) }
    dend_23 { pt3dadd( -13.7053, -51.8717, -12.6539, 1.4 ) }
    dend_23 { pt3dadd( -14.6506, -53.1714, -13.4136, 0.52 ) }
    dend_23 { pt3dadd( -15.3711, -54.031, -13.9854, 0.22 ) }
    dend_23 { pt3dadd( -15.7575, -54.5251, -14.3385, 0.66 ) }
    dend_23 { pt3dadd( -16.4167, -55.6139, -14.9633, 0.22 ) }
    dend_23 { pt3dadd( -16.7248, -56.2214, -15.269, 1.33 ) }
    dend_23 { pt3dadd( -16.9489, -56.7475, -15.489, 1.62 ) }
    dend_23 { pt3dadd( -17.1293, -57.252, -15.6627, 1.62 ) }
    dend_23 { pt3dadd( -17.9901, -60.0714, -16.4691, 0.22 ) }
    dend_23 { pt3dadd( -18.9112, -63.5232, -17.2863, 0.22 ) }
    dend_23 { pt3dadd( -19.1781, -64.6166, -17.5211, 0.59 ) }
    dend_23 { pt3dadd( -19.5959, -66.4459, -17.8817, 0.22 ) }
    dend_23 { pt3dadd( -19.8491, -67.5926, -18.0709, 1.4 ) }
    dend_23 { pt3dadd( -20.107, -68.7588, -18.1984, 1.92 ) }
    dend_23 { pt3dadd( -20.2985, -69.6611, -18.168, 1.92 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 85/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -4.68195, -3.57232, 2.62171, 1.92 ) }
    dend_22 { pt3dadd( -4.97102, -4.2023, 2.56191, 1.92 ) }
    dend_22 { pt3dadd( -5.46235, -5.86473, 2.27925, 1.25 ) }
    dend_22 { pt3dadd( -5.68474, -6.90201, 2.06284, 0.88 ) }
    dend_22 { pt3dadd( -5.87318, -7.98613, 1.82308, 1.11 ) }
    dend_22 { pt3dadd( -6.01872, -8.87525, 1.62636, 1.47 ) }
    dend_22 { pt3dadd( -6.15238, -9.61252, 1.46649, 1.69 ) }
    dend_22 { pt3dadd( -6.40635, -11.2191, 1.11082, 1.69 ) }
    dend_22 { pt3dadd( -6.54397, -12.0976, 0.914139, 1.4 ) }
    dend_22 { pt3dadd( -6.77888, -13.0194, 0.717511, 1.4 ) }
    dend_22 { pt3dadd( -7.19154, -13.9052, 0.567096, 1.11 ) }
    dend_22 { pt3dadd( -7.62939, -14.5443, 0.489464, 0.74 ) }
    dend_22 { pt3dadd( -8.05936, -15.0307, 0.45932, 0.74 ) }
    dend_22 { pt3dadd( -8.66873, -15.5927, 0.497559, 1.11 ) }
    dend_22 { pt3dadd( -9.23722, -16.0699, 0.561394, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_22 { pt3dadd( -10.034, -16.7119, 0.668889, 0.81 ) }
    dend_22 { pt3dadd( -10.6989, -17.264, 0.791876, 1.25 ) }
    dend_22 { pt3dadd( -11.2267, -17.7221, 0.906976, 1.47 ) }
    dend_22 { pt3dadd( -11.7667, -18.1808, 1.02988, 1.62 ) }
    dend_22 { pt3dadd( -12.4358, -18.7254, 1.18199, 1.33 ) }
    dend_22 { pt3dadd( -13.2086, -19.2704, 1.35058, 0.74 ) }
    dend_22 { pt3dadd( -13.9937, -19.6977, 1.51367, 0.52 ) }
    dend_22 { pt3dadd( -14.7196, -19.9813, 1.66697, 0.66 ) }
    dend_22 { pt3dadd( -15.8472, -20.2794, 1.8875, 0.66 ) }
    dend_22 { pt3dadd( -16.548, -20.3893, 2.01165, 0.66 ) }
    dend_22 { pt3dadd( -17.5842, -20.4639, 2.16615, 0.88 ) }
    dend_22 { pt3dadd( -18.3791, -20.469, 2.24946, 0.81 ) }
    dend_22 { pt3dadd( -19.2738, -20.4484, 2.28484, 0.52 ) }
    dend_22 { pt3dadd( -19.7661, -20.4474, 2.27515, 0.52 ) }
    dend_22 { pt3dadd( -20.3596, -20.4625, 2.22676, 0.52 ) }
    dend_22 { pt3dadd( -21.3971, -20.519, 2.0971, 0.88 ) }
    dend_22 { pt3dadd( -22.1085, -20.5669, 1.99232, 0.88 ) }
    dend_22 { pt3dadd( -22.7196, -20.6149, 1.9019, 0.88 ) }
    dend_22 { pt3dadd( -23.5523, -20.6746, 1.79357, 0.74 ) }
    dend_22 { pt3dadd( -24.362, -20.7136, 1.70988, 0.59 ) }
    dend_22 { pt3dadd( -25.1593, -20.7204, 1.6522, 0.81 ) }
    dend_22 { pt3dadd( -26.178, -20.6972, 1.61075, 0.81 ) }
    dend_22 { pt3dadd( -27.0418, -20.6588, 1.60016, 1.03 ) }
    dend_22 { pt3dadd( -27.9122, -20.6046, 1.59613, 1.25 ) }
    dend_22 { pt3dadd( -28.2887, -20.5891, 1.61987, 1.25 ) }
    dend_22 { pt3dadd( -29.1551, -20.6229, 1.70936, 0.66 ) }
    dend_22 { pt3dadd( -30.0044, -20.7452, 1.80538, 0.66 ) }
    dend_22 { pt3dadd( -30.7953, -20.9819, 1.89625, 0.81 ) }
    dend_22 { pt3dadd( -31.1262, -21.1473, 1.95061, 0.81 ) }
    dend_22 { pt3dadd( -32.439, -22.065, 2.23445, 0.37 ) }
    dend_22 { pt3dadd( -32.8516, -22.4012, 2.35071, 0.29 ) }
    dend_22 { pt3dadd( -33.3561, -22.8725, 2.52531, 0.29 ) }
    dend_22 { pt3dadd( -33.72, -23.2298, 2.66146, 0.29 ) }
    dend_22 { pt3dadd( -34.5585, -23.9856, 2.95182, 0.74 ) }
    dend_22 { pt3dadd( -35.0558, -24.3752, 3.08561, 1.25 ) }
    dend_22 { pt3dadd( -35.4755, -24.656, 3.15759, 1.25 ) }
    dend_22 { pt3dadd( -35.845, -24.8831, 3.22773, 1.25 ) }
    dend_22 { pt3dadd( -36.133, -25.0554, 3.28642, 1.25 ) }
    dend_22 { pt3dadd( -36.9756, -25.5753, 3.43849, 0.52 ) }
    dend_22 { pt3dadd( -37.5874, -26.0029, 3.50158, 1.03 ) }
    dend_22 { pt3dadd( -37.85, -26.2274, 3.51869, 1.33 ) }
    dend_22 { pt3dadd( -38.2546, -26.6431, 3.52838, 1.55 ) }
    dend_22 { pt3dadd( -38.5316, -26.9886, 3.52972, 1.55 ) }
    dend_22 { pt3dadd( -38.6975, -27.2538, 3.52729, 1.55 ) }
    dend_22 { pt3dadd( -39.0115, -27.9771, 3.51499, 1.03 ) }
    dend_22 { pt3dadd( -39.299, -28.7621, 3.5153, 0.44 ) }
    dend_22 { pt3dadd( -39.3818, -28.9976, 3.52223, 0.44 ) }
    dend_22 { pt3dadd( -39.5457, -29.4405, 3.57583, 0.29 ) }
    dend_22 { pt3dadd( -39.677, -29.7599, 3.63595, 0.29 ) }
    dend_22 { pt3dadd( -39.9141, -30.2493, 3.7612, 0.29 ) }
    dend_22 { pt3dadd( -40.2219, -30.8444, 3.95268, 0.29 ) }
    dend_22 { pt3dadd( -40.5034, -31.3482, 4.15039, 0.29 ) }
    dend_22 { pt3dadd( -41.0083, -32.2784, 4.50103, 0.44 ) }
    dend_22 { pt3dadd( -41.2901, -32.8023, 4.69863, 0.66 ) }
    dend_22 { pt3dadd( -41.7872, -33.7245, 5.02764, 0.74 ) }
    dend_22 { pt3dadd( -42.3366, -34.7427, 5.38168, 0.66 ) }
    dend_22 { pt3dadd( -42.8683, -35.738, 5.75439, 0.29 ) }
    dend_22 { pt3dadd( -43.3085, -36.5288, 6.06418, 0.22 ) }
    dend_22 { pt3dadd( -43.7813, -37.2564, 6.37138, 0.22 ) }
    dend_22 { pt3dadd( -44.1412, -37.7434, 6.58496, 0.74 ) }
    dend_22 { pt3dadd( -44.3515, -38.0084, 6.69663, 0.74 ) }
    dend_22 { pt3dadd( -45.0169, -38.8187, 7.0197, 0.59 ) }
    dend_22 { pt3dadd( -45.5344, -39.4354, 7.26045, 0.66 ) }
    dend_22 { pt3dadd( -46.2751, -40.246, 7.60606, 0.22 ) }
    dend_22 { pt3dadd( -46.8314, -40.8195, 7.84738, 0.22 ) }
    dend_22 { pt3dadd( -47.3148, -41.2922, 8.06487, 0.37 ) }
    dend_22 { pt3dadd( -47.7129, -41.6901, 8.22258, 0.37 ) }
    dend_22 { pt3dadd( -48.1798, -42.1561, 8.37043, 0.15 ) }
    dend_22 { pt3dadd( -48.7602, -42.6896, 8.58115, 0.15 ) }
    dend_22 { pt3dadd( -49.3048, -43.0819, 8.82353, 0.37 ) }
    dend_22 { pt3dadd( -49.7895, -43.2841, 9.03976, 0.37 ) }
    dend_22 { pt3dadd( -57.1394, -48.585, 10.6785, 0.37 ) }
    // Section: dend_15, id: dend_15, parent: soma_0 (entry count 72/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 5.67805, -5.15782, -3.44829, 3.83 ) }
    dend_15 { pt3dadd( 6.2925, -5.99654, -3.76576, 3.83 ) }
    // Section: dend_8, id: dend_8, parent: soma_0 (entry count 74/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 0.528048, -9.42082, 1.37171, 2.8 ) }
    dend_8 { pt3dadd( 0.528048, -9.42082, 1.37171, 2.8 ) }
    dend_8 { pt3dadd( 0.698942, -10.6609, 1.44205, 2.8 ) }
    dend_8 { pt3dadd( 0.869641, -11.8995, 1.51232, 2.43 ) }
    dend_8 { pt3dadd( 1.02804, -13.0489, 1.57752, 2.21 ) }
    dend_8 { pt3dadd( 1.21681, -14.4186, 1.65522, 2.06 ) }
    dend_8 { pt3dadd( 1.30385, -15.0502, 1.69104, 2.06 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 81/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -6.84195, 6.39218, -0.638285, 1.62 ) }
    dend_5 { pt3dadd( -6.84195, 6.39218, -0.638285, 1.62 ) }
    dend_5 { pt3dadd( -7.48469, 6.64556, -0.53878, 0.81 ) }
    dend_5 { pt3dadd( -8.3096, 6.94537, -0.429275, 0.74 ) }
    dend_5 { pt3dadd( -8.95424, 7.16072, -0.353386, 0.96 ) }
    dend_5 { pt3dadd( -9.8175, 7.43153, -0.261035, 1.18 ) }
    dend_5 { pt3dadd( -10.4843, 7.63098, -0.204626, 1.18 ) }
    dend_5 { pt3dadd( -11.0721, 7.80418, -0.158438, 1.47 ) }
    dend_5 { pt3dadd( -11.5603, 7.95094, -0.119242, 1.47 ) }
    dend_5 { pt3dadd( -12.1325, 8.13303, -0.0812085, 1.33 ) }
    dend_5 { pt3dadd( -12.7097, 8.3403, -0.0311893, 0.88 ) }
    dend_5 { pt3dadd( -13.3394, 8.5946, 0.0431916, 0.52 ) }
    dend_5 { pt3dadd( -13.8704, 8.82734, 0.120256, 0.52 ) }
    dend_5 { pt3dadd( -14.3883, 9.0597, 0.202734, 0.52 ) }
    dend_5 { pt3dadd( -14.8227, 9.25112, 0.273574, 1.03 ) }
    dend_5 { pt3dadd( -15.2699, 9.43523, 0.349575, 1.33 ) }
    dend_5 { pt3dadd( -15.5311, 9.52605, 0.400444, 1.33 ) }
    dend_5 { pt3dadd( -16.2367, 9.73093, 0.54559, 0.81 ) }
    dend_5 { pt3dadd( -16.8224, 9.87933, 0.654284, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_5 { pt3dadd( -17.4084, 10.0021, 0.746826, 1.03 ) }
    dend_5 { pt3dadd( -17.8834, 10.0801, 0.813543, 1.03 ) }
    dend_5 { pt3dadd( -18.7503, 10.184, 0.926242, 0.66 ) }
    dend_5 { pt3dadd( -19.4162, 10.2428, 1.01691, 0.37 ) }
    dend_5 { pt3dadd( -19.8353, 10.2807, 1.07972, 0.37 ) }
    dend_5 { pt3dadd( -20.4249, 10.3357, 1.17293, 0.37 ) }
    dend_5 { pt3dadd( -20.8777, 10.3842, 1.24082, 0.37 ) }
    dend_5 { pt3dadd( -21.2478, 10.4294, 1.28795, 0.29 ) }
    dend_5 { pt3dadd( -21.7032, 10.4966, 1.33511, 0.29 ) }
    dend_5 { pt3dadd( -22.4811, 10.648, 1.41581, 0.59 ) }
    dend_5 { pt3dadd( -22.9754, 10.7747, 1.46694, 1.03 ) }
    dend_5 { pt3dadd( -23.4611, 10.9273, 1.51566, 1.03 ) }
    dend_5 { pt3dadd( -23.9427, 11.0955, 1.55322, 1.03 ) }
    dend_5 { pt3dadd( -24.6103, 11.3326, 1.58809, 0.88 ) }
    dend_5 { pt3dadd( -25.3742, 11.5968, 1.60933, 0.66 ) }
    dend_5 { pt3dadd( -25.8709, 11.7586, 1.61813, 0.66 ) }
    dend_5 { pt3dadd( -26.6628, 12.0218, 1.63159, 1.25 ) }
    dend_5 { pt3dadd( -27.0781, 12.1666, 1.63922, 1.55 ) }
    dend_5 { pt3dadd( -27.5191, 12.3295, 1.65316, 1.55 ) }
    dend_5 { pt3dadd( -28.0228, 12.5279, 1.67168, 0.88 ) }
    dend_5 { pt3dadd( -28.6265, 12.7738, 1.7148, 0.37 ) }
    dend_5 { pt3dadd( -28.9671, 12.9259, 1.75558, 0.37 ) }
    dend_5 { pt3dadd( -29.2577, 13.0681, 1.80329, 0.37 ) }
    dend_5 { pt3dadd( -29.5362, 13.2118, 1.85716, 0.37 ) }
    dend_5 { pt3dadd( -29.902, 13.4079, 1.93257, 0.59 ) }
    dend_5 { pt3dadd( -30.3499, 13.6417, 2.02596, 0.81 ) }
    dend_5 { pt3dadd( -30.8661, 13.8969, 2.1277, 0.96 ) }
    dend_5 { pt3dadd( -31.3228, 14.1023, 2.2074, 0.96 ) }
    dend_5 { pt3dadd( -31.987, 14.3553, 2.30105, 0.37 ) }
    dend_5 { pt3dadd( -32.4419, 14.5018, 2.34751, 0.96 ) }
    dend_5 { pt3dadd( -32.8418, 14.6129, 2.38428, 1.25 ) }
    dend_5 { pt3dadd( -33.2031, 14.7011, 2.38059, 1.25 ) }
    dend_5 { pt3dadd( -33.4292, 14.7459, 2.34688, 1.25 ) }
    dend_5 { pt3dadd( -33.9146, 14.8249, 2.21919, 0.74 ) }
    dend_5 { pt3dadd( -34.2624, 14.8746, 2.09922, 0.59 ) }
    dend_5 { pt3dadd( -34.5706, 14.9207, 1.96723, 0.88 ) }
    dend_5 { pt3dadd( -35.3298, 15.0427, 1.61153, 1.18 ) }
    dend_5 { pt3dadd( -36.1106, 15.1724, 1.24369, 0.96 ) }
    dend_5 { pt3dadd( -36.4863, 15.2397, 1.07603, 0.96 ) }
    dend_5 { pt3dadd( -37.075, 15.3656, 0.834979, 0.66 ) }
    dend_5 { pt3dadd( -37.7423, 15.517, 0.592834, 0.88 ) }
    dend_5 { pt3dadd( -38.1788, 15.6245, 0.463235, 0.88 ) }
    dend_5 { pt3dadd( -38.7067, 15.7725, 0.374064, 0.59 ) }
    dend_5 { pt3dadd( -39.2933, 15.9528, 0.339738, 0.29 ) }
    dend_5 { pt3dadd( -39.8659, 16.1373, 0.331299, 0.29 ) }
    dend_5 { pt3dadd( -40.0646, 16.2027, 0.33575, 0.59 ) }
    dend_5 { pt3dadd( -40.453, 16.3401, 0.358412, 0.59 ) }
    dend_5 { pt3dadd( -41.4173, 16.6942, 0.440759, 0.37 ) }
    dend_5 { pt3dadd( -42.4408, 17.0685, 0.55667, 0.37 ) }
    dend_5 { pt3dadd( -43.19, 17.3284, 0.656316, 0.74 ) }
    dend_5 { pt3dadd( -43.634, 17.4718, 0.72712, 0.96 ) }
    dend_5 { pt3dadd( -43.9193, 17.5639, 0.768888, 0.96 ) }
    dend_5 { pt3dadd( -44.5595, 17.7574, 0.853186, 0.37 ) }
    dend_5 { pt3dadd( -45.024, 17.8907, 0.914751, 0.66 ) }
    dend_5 { pt3dadd( -45.47, 18.018, 0.966551, 1.25 ) }
    dend_5 { pt3dadd( -45.8156, 18.1154, 1.01482, 1.25 ) }
    dend_5 { pt3dadd( -46.5384, 18.3047, 1.10375, 0.81 ) }
    dend_5 { pt3dadd( -46.9061, 18.3887, 1.12927, 0.81 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 58/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.408048, 10.1512, -0.318285, 1.4 ) }
    dend_0 { pt3dadd( 0.511089, 10.3701, -0.33639, 1.4 ) }
    dend_0 { pt3dadd( 0.999083, 11.407, -0.422135, 1.18 ) }
    dend_0 { pt3dadd( 1.45857, 12.3833, -0.502872, 1.4 ) }
    dend_0 { pt3dadd( 1.93255, 13.3903, -0.586154, 1.4 ) }
    dend_0 { pt3dadd( 2.35928, 14.297, -0.661134, 1.18 ) }
    dend_0 { pt3dadd( 2.653, 14.9211, -0.712744, 1.18 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 65/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.18123, -8.81254, 0.0904597, 0.792918 ) }
    axon_0 { pt3dadd( 6.39229, -23.2093, 0.0904597, 0.792918 ) }
    axon_0 { pt3dadd( 10.6034, -37.6061, 0.0904597, 0.792918 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 68/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 6.2925, -5.99654, -3.76576, 0.66 ) }
    dend_17 { pt3dadd( 7.51022, -8.71517, -4.25276, 0.66 ) }
    dend_17 { pt3dadd( 7.7157, -8.93822, -4.34875, 0.66 ) }
    dend_17 { pt3dadd( 9.02269, -9.35126, -4.79213, 0.44 ) }
    dend_17 { pt3dadd( 11.2681, -9.5539, -5.26104, 0.44 ) }
    dend_17 { pt3dadd( 11.9311, -9.56141, -5.35809, 0.88 ) }
    dend_17 { pt3dadd( 12.9601, -9.51121, -5.4565, 1.03 ) }
    dend_17 { pt3dadd( 14.1036, -9.29421, -5.43703, 1.03 ) }
    dend_17 { pt3dadd( 15.8064, -8.8778, -5.37419, 0.96 ) }
    dend_17 { pt3dadd( 16.958, -8.57564, -5.32384, 1.33 ) }
    dend_17 { pt3dadd( 17.5113, -8.43436, -5.317, 1.55 ) }
    dend_17 { pt3dadd( 18.6313, -8.22253, -5.2835, 1.55 ) }
    dend_17 { pt3dadd( 19.6796, -8.14703, -5.22216, 1.25 ) }
    dend_17 { pt3dadd( 21.3762, -8.3888, -5.10861, 0.96 ) }
    dend_17 { pt3dadd( 21.9249, -8.66375, -5.10482, 0.66 ) }
    dend_17 { pt3dadd( 22.7862, -9.38756, -5.06149, 1.11 ) }
    dend_17 { pt3dadd( 23.2182, -9.82478, -5.03988, 1.33 ) }
    dend_17 { pt3dadd( 23.721, -10.3738, -5.01804, 1.33 ) }
    dend_17 { pt3dadd( 24.7979, -11.515, -4.97774, 0.81 ) }
    dend_17 { pt3dadd( 25.704, -12.3205, -4.93252, 0.66 ) }
    dend_17 { pt3dadd( 27.3442, -13.1747, -4.81118, 0.66 ) }
    dend_17 { pt3dadd( 28.3387, -13.3985, -4.74847, 1.11 ) }
    dend_17 { pt3dadd( 29.3213, -13.4522, -4.69552, 1.11 ) }
    dend_17 { pt3dadd( 30.2468, -13.3874, -4.67671, 1.11 ) }
    dend_17 { pt3dadd( 31.25, -13.219, -4.7026, 0.81 ) }
    dend_17 { pt3dadd( 32.2825, -13.0423, -4.80473, 0.81 ) }
    dend_17 { pt3dadd( 33.3173, -12.8557, -4.96195, 0.96 ) }
    dend_17 { pt3dadd( 34.4997, -12.7045, -5.12631, 1.92 ) }
    dend_17 { pt3dadd( 35.661, -12.6461, -5.31164, 2.65 ) }
    dend_17 { pt3dadd( 36.3753, -12.6624, -5.44876, 2.65 ) }
    dend_17 { pt3dadd( 37.6948, -12.7771, -5.77738, 1.62 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 99/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 6.2925, -5.99654, -3.76576, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_16 { pt3dadd( 9.6788, -6.15979, -2.08514, 0.96 ) }
    dend_16 { pt3dadd( 10.4726, -6.15898, -1.76745, 1.11 ) }
    dend_16 { pt3dadd( 10.9979, -6.14008, -1.59943, 1.25 ) }
    dend_16 { pt3dadd( 11.5337, -6.1067, -1.46958, 1.4 ) }
    dend_16 { pt3dadd( 12.1129, -6.05688, -1.35885, 1.4 ) }
    dend_16 { pt3dadd( 13.0728, -5.95562, -1.20766, 1.11 ) }
    dend_16 { pt3dadd( 13.7256, -5.82941, -1.24351, 0.96 ) }
    dend_16 { pt3dadd( 14.4009, -5.66361, -1.27298, 0.66 ) }
    dend_16 { pt3dadd( 15.2126, -5.42987, -1.30128, 0.66 ) }
    dend_16 { pt3dadd( 15.7137, -5.26291, -1.31988, 0.66 ) }
    dend_16 { pt3dadd( 16.2174, -5.08914, -1.34126, 0.66 ) }
    dend_16 { pt3dadd( 16.7597, -4.9091, -1.36528, 0.81 ) }
    dend_16 { pt3dadd( 17.2873, -4.75335, -1.3692, 1.03 ) }
    dend_16 { pt3dadd( 17.6927, -4.65956, -1.34707, 1.03 ) }
    dend_16 { pt3dadd( 18.315, -4.60625, -1.25271, 0.59 ) }
    dend_16 { pt3dadd( 18.8847, -4.64954, -1.13201, 0.44 ) }
    dend_16 { pt3dadd( 19.1613, -4.69203, -1.07033, 0.44 ) }
    dend_16 { pt3dadd( 19.6707, -4.75748, -0.984651, 0.44 ) }
    dend_16 { pt3dadd( 20.4119, -4.7912, -0.9176, 0.44 ) }
    dend_16 { pt3dadd( 20.9996, -4.75984, -0.913656, 0.59 ) }
    dend_16 { pt3dadd( 21.6518, -4.64647, -0.95299, 0.59 ) }
    dend_16 { pt3dadd( 22.4072, -4.42251, -1.04715, 0.74 ) }
    dend_16 { pt3dadd( 23.3052, -4.06305, -1.203, 1.18 ) }
    dend_16 { pt3dadd( 23.8414, -3.78873, -1.32042, 1.4 ) }
    dend_16 { pt3dadd( 24.4211, -3.44579, -1.46914, 1.47 ) }
    dend_16 { pt3dadd( 24.8642, -3.16185, -1.59518, 1.11 ) }
    dend_16 { pt3dadd( 25.4586, -2.76977, -1.7717, 0.29 ) }
    dend_16 { pt3dadd( 25.8048, -2.54124, -1.87837, 0.29 ) }
    dend_16 { pt3dadd( 26.1757, -2.2969, -1.99531, 0.29 ) }
    dend_16 { pt3dadd( 26.8779, -1.85124, -2.22084, 0.74 ) }
    dend_16 { pt3dadd( 27.3335, -1.57734, -2.3693, 1.03 ) }
    dend_16 { pt3dadd( 27.8173, -1.30439, -2.52342, 1.03 ) }
    dend_16 { pt3dadd( 28.4919, -0.947773, -2.72753, 0.74 ) }
    dend_16 { pt3dadd( 29.0663, -0.661194, -2.90367, 0.74 ) }
    dend_16 { pt3dadd( 29.8059, -0.30023, -3.14796, 0.74 ) }
    dend_16 { pt3dadd( 30.5472, 0.0666411, -3.41089, 1.33 ) }
    dend_16 { pt3dadd( 31.1227, 0.339982, -3.62206, 1.62 ) }
    dend_16 { pt3dadd( 31.3774, 0.465077, -3.72054, 1.62 ) }
    dend_16 { pt3dadd( 31.9946, 0.775428, -3.97707, 1.11 ) }
    dend_16 { pt3dadd( 32.6819, 1.11617, -4.27748, 0.37 ) }
    dend_16 { pt3dadd( 33.3666, 1.45063, -4.58776, 0.29 ) }
    dend_16 { pt3dadd( 33.6948, 1.60481, -4.73684, 0.29 ) }
    dend_16 { pt3dadd( 34.2226, 1.84241, -4.97051, 0.29 ) }
    dend_16 { pt3dadd( 34.6411, 2.03055, -5.14436, 0.29 ) }
    dend_16 { pt3dadd( 35.211, 2.28792, -5.35866, 0.66 ) }
    dend_16 { pt3dadd( 35.671, 2.50747, -5.52057, 0.66 ) }
    dend_16 { pt3dadd( 36.1957, 2.76891, -5.70238, 0.66 ) }
    dend_16 { pt3dadd( 36.6149, 2.99809, -5.84727, 0.52 ) }
    dend_16 { pt3dadd( 37.2401, 3.35796, -6.05861, 0.52 ) }
    dend_16 { pt3dadd( 37.6201, 3.59465, -6.18486, 0.44 ) }
    dend_16 { pt3dadd( 38.217, 3.98648, -6.37486, 0.59 ) }
    dend_16 { pt3dadd( 38.6443, 4.2875, -6.50801, 0.74 ) }
    dend_16 { pt3dadd( 39.1748, 4.67801, -6.66433, 0.52 ) }
    dend_16 { pt3dadd( 39.6027, 4.98633, -6.77768, 0.52 ) }
    dend_16 { pt3dadd( 40.002, 5.2653, -6.87012, 0.66 ) }
    dend_16 { pt3dadd( 40.8132, 5.81372, -7.04017, 0.66 ) }
    dend_16 { pt3dadd( 41.149, 6.04223, -7.10551, 1.11 ) }
    dend_16 { pt3dadd( 41.3666, 6.20284, -7.14548, 1.11 ) }
    dend_16 { pt3dadd( 41.7597, 6.52216, -7.2213, 1.11 ) }
    dend_16 { pt3dadd( 42.3025, 7.01895, -7.34434, 0.81 ) }
    dend_16 { pt3dadd( 42.7219, 7.45769, -7.44063, 0.96 ) }
    dend_16 { pt3dadd( 43.028, 7.81455, -7.51419, 0.96 ) }
    dend_16 { pt3dadd( 43.5412, 8.45399, -7.64023, 1.18 ) }
    dend_16 { pt3dadd( 44.0463, 9.12274, -7.7686, 0.37 ) }
    dend_16 { pt3dadd( 44.5476, 9.81306, -7.89926, 0.37 ) }
    dend_16 { pt3dadd( 45.083, 10.5175, -8.03698, 0.37 ) }
    dend_16 { pt3dadd( 45.462, 10.9882, -8.12535, 0.81 ) }
    dend_16 { pt3dadd( 45.799, 11.3825, -8.19578, 0.81 ) }
    dend_16 { pt3dadd( 46.4428, 12.0984, -8.3253, 0.59 ) }
    dend_16 { pt3dadd( 46.8525, 12.5363, -8.40408, 0.59 ) }
    dend_16 { pt3dadd( 47.4602, 13.1585, -8.52272, 0.74 ) }
    dend_16 { pt3dadd( 47.9241, 13.6099, -8.62079, 0.74 ) }
    dend_16 { pt3dadd( 48.3844, 14.0525, -8.70702, 0.37 ) }
    dend_16 { pt3dadd( 48.9664, 14.614, -8.80339, 1.03 ) }
    dend_16 { pt3dadd( 49.1144, 14.7558, -8.82512, 1.25 ) }
    dend_16 { pt3dadd( 49.4345, 15.0441, -8.86414, 1.4 ) }
    dend_16 { pt3dadd( 49.9128, 15.4248, -8.91117, 0.88 ) }
    dend_16 { pt3dadd( 50.4111, 15.7398, -8.95555, 0.52 ) }
    dend_16 { pt3dadd( 50.7532, 15.9003, -8.98037, 0.52 ) }
    dend_16 { pt3dadd( 51.3226, 16.1069, -9.01694, 0.29 ) }
    dend_16 { pt3dadd( 51.8991, 16.2886, -9.05711, 0.29 ) }
    dend_16 { pt3dadd( 52.5895, 16.4603, -9.10667, 0.29 ) }
    dend_16 { pt3dadd( 53.2789, 16.5815, -9.15802, 0.29 ) }
    dend_16 { pt3dadd( 53.8645, 16.6539, -9.20699, 0.29 ) }
    dend_16 { pt3dadd( 54.4869, 16.7102, -9.26193, 0.88 ) }
    dend_16 { pt3dadd( 55.0439, 16.746, -9.31509, 1.11 ) }
    dend_16 { pt3dadd( 55.5504, 16.774, -9.36934, 1.11 ) }
    dend_16 { pt3dadd( 55.9752, 16.7906, -9.41984, 0.52 ) }
    dend_16 { pt3dadd( 56.5097, 16.7958, -9.48423, 0.52 ) }
    dend_16 { pt3dadd( 57.1548, 16.7753, -9.5539, 0.44 ) }
    dend_16 { pt3dadd( 57.3126, 16.7567, -9.56901, 0.29 ) }
    dend_16 { pt3dadd( 63.5735, 19.0001, -8.69273, 0.29 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 92/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 1.30385, -15.0502, 1.69104, 1.11 ) }
    dend_10 { pt3dadd( 1.29147, -15.7139, 1.18656, 1.11 ) }
    dend_10 { pt3dadd( 1.3341, -17.1896, 0.433519, 0.96 ) }
    dend_10 { pt3dadd( 1.38305, -17.9843, 0.183369, 1.4 ) }
    dend_10 { pt3dadd( 1.43918, -19.1606, -0.0513568, 1.25 ) }
    dend_10 { pt3dadd( 1.46564, -20.0337, -0.173134, 1.33 ) }
    dend_10 { pt3dadd( 1.46992, -21.0278, -0.277104, 1.4 ) }
    dend_10 { pt3dadd( 1.43918, -22.0934, -0.318603, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_10 { pt3dadd( 1.36437, -23.2602, -0.260629, 1.4 ) }
    dend_10 { pt3dadd( 1.27516, -24.4855, -0.165386, 1.84 ) }
    dend_10 { pt3dadd( 1.21116, -25.3589, -0.0885602, 1.84 ) }
    dend_10 { pt3dadd( 1.16515, -26.2119, -0.027419, 1.55 ) }
    dend_10 { pt3dadd( 1.14235, -27.3784, 0.024253, 1.25 ) }
    dend_10 { pt3dadd( 1.15302, -28.4215, 0.0607265, 0.66 ) }
    dend_10 { pt3dadd( 1.20637, -30.1766, 0.145986, 0.52 ) }
    dend_10 { pt3dadd( 1.23369, -30.7279, 0.189703, 0.52 ) }
    dend_10 { pt3dadd( 1.26977, -31.385, 0.267356, 0.52 ) }
    dend_10 { pt3dadd( 1.31282, -32.1917, 0.391723, 0.52 ) }
    dend_10 { pt3dadd( 1.33628, -32.8501, 0.521989, 0.52 ) }
    dend_10 { pt3dadd( 1.32093, -34.0182, 0.793112, 0.88 ) }
    dend_10 { pt3dadd( 1.25108, -34.8255, 0.990083, 1.18 ) }
    dend_10 { pt3dadd( 1.16124, -35.7131, 1.19617, 1.33 ) }
    dend_10 { pt3dadd( 1.06571, -36.5046, 1.35585, 1.4 ) }
    dend_10 { pt3dadd( 0.973797, -37.1634, 1.47342, 1.4 ) }
    dend_10 { pt3dadd( 0.870689, -37.915, 1.58932, 1.4 ) }
    dend_10 { pt3dadd( 0.7721, -38.6549, 1.6822, 1.55 ) }
    dend_10 { pt3dadd( 0.588567, -39.8401, 1.79409, 1.33 ) }
    dend_10 { pt3dadd( 0.300353, -41.3965, 1.90791, 1.03 ) }
    dend_10 { pt3dadd( 0.0707608, -42.4288, 1.96879, 0.81 ) }
    dend_10 { pt3dadd( -0.209629, -43.5107, 2.01462, 0.88 ) }
    dend_10 { pt3dadd( -0.489469, -44.4782, 2.04396, 0.88 ) }
    dend_10 { pt3dadd( -0.843463, -45.5651, 2.067, 0.88 ) }
    dend_10 { pt3dadd( -1.11446, -46.3297, 2.07441, 0.88 ) }
    dend_10 { pt3dadd( -1.38691, -47.1002, 2.08298, 1.33 ) }
    dend_10 { pt3dadd( -1.68503, -47.9652, 2.09375, 1.55 ) }
    dend_10 { pt3dadd( -1.849, -48.4285, 2.10034, 1.69 ) }
    dend_10 { pt3dadd( -2.14699, -49.157, 2.11229, 1.69 ) }
    dend_10 { pt3dadd( -2.35995, -49.609, 2.1205, 1.69 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 30/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 1.30385, -15.0502, 1.69104, 1.18 ) }
    dend_9 { pt3dadd( 1.21856, -15.7135, 3.35946, 1.18 ) }
    dend_9 { pt3dadd( 1.24643, -16.0858, 4.17403, 1.18 ) }
    dend_9 { pt3dadd( 1.36495, -16.7785, 5.4463, 1.33 ) }
    dend_9 { pt3dadd( 1.456, -17.2155, 6.13169, 1.33 ) }
    dend_9 { pt3dadd( 1.66558, -18.0283, 7.24093, 1.03 ) }
    dend_9 { pt3dadd( 1.85437, -18.7176, 8.07163, 0.88 ) }
    dend_9 { pt3dadd( 2.09661, -19.3092, 8.66194, 1.03 ) }
    dend_9 { pt3dadd( 2.34908, -19.9987, 9.20054, 1.18 ) }
    dend_9 { pt3dadd( 2.51721, -20.6663, 9.60092, 1.18 ) }
    dend_9 { pt3dadd( 2.57493, -21.3688, 9.96175, 1.18 ) }
    dend_9 { pt3dadd( 2.50668, -21.9591, 10.1994, 1.25 ) }
    dend_9 { pt3dadd( 2.24254, -22.6695, 10.4163, 1.25 ) }
    dend_9 { pt3dadd( 1.7208, -23.5386, 10.6903, 0.96 ) }
    dend_9 { pt3dadd( 1.29913, -24.1221, 10.8835, 0.74 ) }
    dend_9 { pt3dadd( 0.86024, -24.7381, 11.1179, 0.74 ) }
    dend_9 { pt3dadd( 0.263389, -25.7273, 11.546, 0.66 ) }
    dend_9 { pt3dadd( -0.085486, -26.5536, 11.9311, 0.66 ) }
    dend_9 { pt3dadd( -0.435269, -27.8545, 12.5435, 0.96 ) }
    dend_9 { pt3dadd( -0.565705, -28.7243, 12.9627, 0.96 ) }
    dend_9 { pt3dadd( -0.63064, -29.6681, 13.3831, 0.66 ) }
    dend_9 { pt3dadd( -0.656589, -30.3171, 13.6372, 0.44 ) }
    dend_9 { pt3dadd( -0.708429, -31.1098, 13.9198, 0.29 ) }
    dend_9 { pt3dadd( -0.903673, -31.9529, 14.1651, 0.66 ) }
    dend_9 { pt3dadd( -1.11098, -32.4154, 14.2483, 0.66 ) }
    dend_9 { pt3dadd( -1.57216, -33.2616, 14.3585, 0.44 ) }
    dend_9 { pt3dadd( -2.03506, -34.0863, 14.4319, 1.03 ) }
    dend_9 { pt3dadd( -2.33606, -34.6233, 14.4749, 1.03 ) }
    dend_9 { pt3dadd( -2.90704, -35.6421, 14.5683, 0.59 ) }
    dend_9 { pt3dadd( -3.32063, -36.3377, 14.6421, 1.18 ) }
    dend_9 { pt3dadd( -3.79521, -37.0515, 14.712, 1.33 ) }
    dend_9 { pt3dadd( -4.4208, -37.8369, 14.792, 1.47 ) }
    dend_9 { pt3dadd( -5.33647, -38.8442, 14.9509, 0.37 ) }
    dend_9 { pt3dadd( -6.13812, -39.6325, 15.1223, 0.37 ) }
    dend_9 { pt3dadd( -6.83534, -40.1737, 15.1944, 0.52 ) }
    dend_9 { pt3dadd( -7.72726, -40.6812, 15.1717, 0.52 ) }
    dend_9 { pt3dadd( -8.53612, -41.0081, 15.0621, 0.29 ) }
    dend_9 { pt3dadd( -9.79598, -41.4155, 14.8382, 0.29 ) }
    dend_9 { pt3dadd( -10.8421, -41.6796, 14.5792, 0.29 ) }
    dend_9 { pt3dadd( -13.4596, -42.1991, 13.719, 0.29 ) }
    dend_9 { pt3dadd( -14.7882, -42.3844, 13.1772, 0.44 ) }
    dend_9 { pt3dadd( -15.4189, -42.4313, 12.8592, 0.59 ) }
    dend_9 { pt3dadd( -20.8966, -49.6987, 18.2854, 0.59 ) }
    dend_9 { pt3dadd( -28.1583, -56.5247, 21.802, 0.59 ) }
    dend_9 { pt3dadd( -36.9498, -61.8053, 23.9822, 0.59 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 75/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -46.9061, 18.3887, 1.12927, 0.66 ) }
    dend_7 { pt3dadd( -49.5934, 17.5211, 0.365475, 0.66 ) }
    dend_7 { pt3dadd( -50.5188, 17.2002, 0.152527, 0.66 ) }
    dend_7 { pt3dadd( -51.4619, 16.8391, -0.0139923, 0.44 ) }
    dend_7 { pt3dadd( -52.9635, 16.2362, -0.190757, 0.22 ) }
    dend_7 { pt3dadd( -54.2692, 15.7233, -0.285908, 0.96 ) }
    dend_7 { pt3dadd( -55.0854, 15.4089, -0.314114, 1.47 ) }
    dend_7 { pt3dadd( -56.1449, 15.0219, -0.248219, 1.62 ) }
    dend_7 { pt3dadd( -57.241, 14.6372, -0.166443, 1.62 ) }
    dend_7 { pt3dadd( -58.8847, 14.0966, -0.0349685, 0.37 ) }
    dend_7 { pt3dadd( -60.3478, 13.6603, 0.0863656, 0.22 ) }
    dend_7 { pt3dadd( -63.3485, 12.8691, 0.347704, 0.22 ) }
    dend_7 { pt3dadd( -66.4716, 12.1578, 0.636973, 0.22 ) }
    dend_7 { pt3dadd( -67.716, 11.9141, 0.745448, 0.81 ) }
    dend_7 { pt3dadd( -68.7381, 11.7402, 0.830975, 0.81 ) }
    dend_7 { pt3dadd( -71.3525, 11.3284, 1.0537, 0.22 ) }
    dend_7 { pt3dadd( -72.903, 11.079, 1.19209, 0.96 ) }
    dend_7 { pt3dadd( -74.2951, 10.8555, 1.32135, 1.11 ) }
    dend_7 { pt3dadd( -75.3864, 10.6713, 1.42093, 1.25 ) }
    dend_7 { pt3dadd( -76.3438, 10.4993, 1.50678, 0.81 ) }
    dend_7 { pt3dadd( -79.0546, 10.0037, 1.74115, 0.22 ) }
    dend_7 { pt3dadd( -80.895, 9.66611, 1.89003, 0.29 ) }
    dend_7 { pt3dadd( -82.514, 9.35753, 2.00726, 0.44 ) }
    dend_7 { pt3dadd( -83.9816, 9.07835, 2.10408, 0.52 ) }
    dend_7 { pt3dadd( -86.7613, 8.59511, 2.27165, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_7 { pt3dadd( -87.7766, 8.44594, 2.31862, 0.59 ) }
    dend_7 { pt3dadd( -88.5862, 8.34688, 2.33418, 0.74 ) }
    dend_7 { pt3dadd( -89.4797, 8.24557, 2.33331, 0.22 ) }
    dend_7 { pt3dadd( -91.9147, 7.89956, 2.2164, 0.22 ) }
    dend_7 { pt3dadd( -92.9995, 7.70394, 2.1245, 0.66 ) }
    dend_7 { pt3dadd( -93.8283, 7.54161, 2.03139, 0.96 ) }
    dend_7 { pt3dadd( -94.9461, 7.31858, 1.89734, 0.96 ) }
    dend_7 { pt3dadd( -95.8477, 7.15005, 1.80911, 0.96 ) }
    dend_7 { pt3dadd( -98.6166, 6.70779, 1.58317, 0.22 ) }
    dend_7 { pt3dadd( -99.6344, 6.57225, 1.50567, 0.37 ) }
    dend_7 { pt3dadd( -100.961, 6.42429, 1.41834, 0.37 ) }
    dend_7 { pt3dadd( -101.592, 6.37772, 1.38478, 0.37 ) }
    dend_7 { pt3dadd( -105.269, 6.25209, 1.28851, 0.15 ) }
    dend_7 { pt3dadd( -106.624, 6.29387, 1.30646, 1.18 ) }
    dend_7 { pt3dadd( -107.284, 6.37918, 1.3519, 1.4 ) }
    dend_7 { pt3dadd( -107.774, 6.49688, 1.39721, 1.4 ) }
    dend_7 { pt3dadd( -108.64, 6.78295, 1.47154, 1.18 ) }
    dend_7 { pt3dadd( -109.249, 7.03431, 1.50971, 0.81 ) }
    dend_7 { pt3dadd( -111.011, 8.00187, 1.56002, 0.22 ) }
    dend_7 { pt3dadd( -112.052, 8.62033, 1.56157, 0.22 ) }
    dend_7 { pt3dadd( -113.896, 9.84943, 1.63729, 0.29 ) }
    dend_7 { pt3dadd( -114.785, 10.498, 1.69215, 0.59 ) }
    dend_7 { pt3dadd( -116.006, 11.4653, 1.80052, 1.11 ) }
    dend_7 { pt3dadd( -116.654, 12.0233, 1.86832, 1.11 ) }
    dend_7 { pt3dadd( -117.051, 12.4195, 1.92118, 0.88 ) }
    dend_7 { pt3dadd( -118.576, 14.0215, 2.10269, 0.44 ) }
    dend_7 { pt3dadd( -119.11, 14.6025, 2.16273, 0.59 ) }
    dend_7 { pt3dadd( -119.739, 15.2986, 2.23164, 0.59 ) }
    dend_7 { pt3dadd( -120.553, 16.1714, 2.28523, 0.59 ) }
    dend_7 { pt3dadd( -122.477, 18.1008, 2.3296, 0.15 ) }
    dend_7 { pt3dadd( -126.334, 21.7698, 2.26984, 0.15 ) }
    dend_7 { pt3dadd( -127.215, 22.5794, 2.2163, 0.66 ) }
    dend_7 { pt3dadd( -127.809, 23.1187, 2.17056, 0.81 ) }
    dend_7 { pt3dadd( -130.559, 25.6098, 1.90062, 0.22 ) }
    dend_7 { pt3dadd( -132.34, 27.2144, 1.70766, 0.22 ) }
    dend_7 { pt3dadd( -133.117, 27.9048, 1.62574, 0.59 ) }
    dend_7 { pt3dadd( -133.653, 28.4021, 1.56668, 0.59 ) }
    dend_7 { pt3dadd( -135.6, 30.3115, 1.33556, 0.22 ) }
    dend_7 { pt3dadd( -136.161, 30.8988, 1.26288, 0.81 ) }
    dend_7 { pt3dadd( -136.647, 31.448, 1.19274, 1.03 ) }
    dend_7 { pt3dadd( -136.828, 31.6721, 1.1621, 1.03 ) }
    dend_7 { pt3dadd( -139.219, 34.7708, 0.720649, 0.22 ) }
    dend_7 { pt3dadd( -139.939, 35.7369, 0.578746, 0.81 ) }
    dend_7 { pt3dadd( -140.403, 36.402, 0.476765, 0.88 ) }
    dend_7 { pt3dadd( -142.551, 39.6213, -0.0284034, 0.22 ) }
    dend_7 { pt3dadd( -144.5, 42.6895, -0.517345, 0.22 ) }
    dend_7 { pt3dadd( -145.103, 43.7086, -0.673331, 0.66 ) }
    dend_7 { pt3dadd( -145.403, 44.29, -0.759795, 0.66 ) }
    dend_7 { pt3dadd( -146.307, 46.2199, -1.04454, 0.29 ) }
    dend_7 { pt3dadd( -146.665, 47.0963, -1.17548, 0.52 ) }
    dend_7 { pt3dadd( -146.766, 47.4163, -1.22409, 0.52 ) }
    dend_7 { pt3dadd( -147.276, 49.1774, -1.49151, 0.22 ) }
    dend_7 { pt3dadd( -147.906, 51.4307, -1.83173, 0.22 ) }
    dend_7 { pt3dadd( -148.174, 52.4178, -1.98068, 0.22 ) }
    dend_7 { pt3dadd( -148.468, 53.5295, -2.14927, 0.66 ) }
    dend_7 { pt3dadd( -148.652, 54.253, -2.26412, 0.66 ) }
    dend_7 { pt3dadd( -148.793, 54.8067, -2.36071, 0.52 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 57/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -46.9061, 18.3887, 1.12927, 0.29 ) }
    dend_6 { pt3dadd( -48.1942, 18.9952, 1.05877, 0.29 ) }
    dend_6 { pt3dadd( -51.3911, 20.5872, 0.843448, 0.22 ) }
    dend_6 { pt3dadd( -52.4531, 21.116, 0.771923, 0.74 ) }
    dend_6 { pt3dadd( -53.0552, 21.4159, 0.731366, 0.74 ) }
    dend_6 { pt3dadd( -53.7871, 21.7803, 0.68207, 0.37 ) }
    dend_6 { pt3dadd( -55.2438, 22.5057, 0.583955, 0.22 ) }
    dend_6 { pt3dadd( -56.427, 23.0906, 0.506261, 0.22 ) }
    dend_6 { pt3dadd( -66.7807, 29.2609, 0.832462, 0.22 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 66/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 2.653, 14.9211, -0.712744, 0.96 ) }
    dend_4 { pt3dadd( 5.71897, 17.1698, -2.67316, 0.96 ) }
    dend_4 { pt3dadd( 6.45895, 17.7435, -3.04397, 1.03 ) }
    dend_4 { pt3dadd( 7.19721, 18.3342, -3.36773, 0.74 ) }
    dend_4 { pt3dadd( 8.16993, 19.1398, -3.74185, 0.22 ) }
    dend_4 { pt3dadd( 9.93614, 20.6709, -4.3902, 0.22 ) }
    dend_4 { pt3dadd( 11.0928, 21.7032, -4.82016, 0.88 ) }
    dend_4 { pt3dadd( 11.7602, 22.3585, -4.97564, 1.03 ) }
    dend_4 { pt3dadd( 12.5391, 23.1604, -5.16849, 0.81 ) }
    dend_4 { pt3dadd( 13.3401, 23.9969, -5.39845, 0.22 ) }
    dend_4 { pt3dadd( 14.2658, 24.9681, -5.70091, 0.74 ) }
    dend_4 { pt3dadd( 14.6605, 25.3847, -5.83906, 1.18 ) }
    dend_4 { pt3dadd( 15.1098, 25.8799, -6.01221, 1.18 ) }
    dend_4 { pt3dadd( 15.9017, 26.8, -6.32124, 0.22 ) }
    dend_4 { pt3dadd( 16.3301, 27.3623, -6.49237, 0.29 ) }
    dend_4 { pt3dadd( 16.7163, 27.9926, -6.71196, 0.29 ) }
    dend_4 { pt3dadd( 17.2154, 28.9709, -7.10087, 0.88 ) }
    dend_4 { pt3dadd( 17.6169, 29.9161, -7.51746, 1.03 ) }
    dend_4 { pt3dadd( 17.8461, 30.5602, -7.77717, 0.81 ) }
    dend_4 { pt3dadd( 18.2701, 31.9384, -8.31445, 0.29 ) }
    dend_4 { pt3dadd( 18.8584, 34.1263, -9.0973, 1.77 ) }
    dend_4 { pt3dadd( 19.1143, 35.1488, -9.43348, 2.21 ) }
    dend_4 { pt3dadd( 19.3886, 36.1794, -9.71811, 1.99 ) }
    dend_4 { pt3dadd( 19.9155, 37.9631, -10.0852, 1.25 ) }
    dend_4 { pt3dadd( 20.3924, 39.4281, -10.2934, 0.22 ) }
    dend_4 { pt3dadd( 20.7794, 40.5041, -10.3949, 0.81 ) }
    dend_4 { pt3dadd( 21.024, 41.139, -10.428, 0.59 ) }
    dend_4 { pt3dadd( 22.0952, 43.8079, -10.5686, 0.22 ) }
    dend_4 { pt3dadd( 22.9383, 45.795, -10.7271, 0.22 ) }
    dend_4 { pt3dadd( 23.7089, 47.5927, -10.9631, 0.22 ) }
    dend_4 { pt3dadd( 24.3342, 49.0194, -11.2019, 1.62 ) }
    dend_4 { pt3dadd( 24.5181, 49.4247, -11.2833, 2.06 ) }
    dend_4 { pt3dadd( 24.8517, 50.1377, -11.4362, 1.62 ) }
    dend_4 { pt3dadd( 25.2356, 50.9292, -11.623, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_4 { pt3dadd( 26.2727, 52.9798, -12.1523, 0.22 ) }
    dend_4 { pt3dadd( 27.3023, 54.8966, -12.7033, 0.22 ) }
    dend_4 { pt3dadd( 28.0205, 56.1883, -13.113, 0.22 ) }
    dend_4 { pt3dadd( 28.4676, 56.9773, -13.3998, 0.59 ) }
    dend_4 { pt3dadd( 28.6816, 57.3488, -13.5508, 0.59 ) }
    dend_4 { pt3dadd( 29.2762, 58.2542, -14.0565, 0.22 ) }
    dend_4 { pt3dadd( 30.3723, 59.6179, -15.0947, 1.77 ) }
    dend_4 { pt3dadd( 30.8992, 60.2298, -15.6184, 2.36 ) }
    dend_4 { pt3dadd( 31.4876, 60.875, -16.1556, 3.02 ) }
    dend_4 { pt3dadd( 31.838, 61.2484, -16.4316, 3.02 ) }
    dend_4 { pt3dadd( 33.5047, 62.9647, -17.5466, 0.74 ) }
    dend_4 { pt3dadd( 34.1191, 63.5867, -17.9249, 0.44 ) }
    dend_4 { pt3dadd( 35.4713, 64.9207, -18.6486, 0.15 ) }
    dend_4 { pt3dadd( 37.1299, 66.6112, -19.4952, 0.15 ) }
    dend_4 { pt3dadd( 38.0011, 67.5177, -19.9558, 1.4 ) }
    dend_4 { pt3dadd( 38.5214, 68.078, -20.2617, 1.62 ) }
    dend_4 { pt3dadd( 41.1872, 71.1115, -22.0732, 0.15 ) }
    dend_4 { pt3dadd( 42.5373, 72.6598, -23.1544, 0.15 ) }
    dend_4 { pt3dadd( 43.5463, 73.8235, -24.1301, 1.55 ) }
    dend_4 { pt3dadd( 44.2538, 74.624, -25.051, 1.99 ) }
    dend_4 { pt3dadd( 44.8803, 75.2815, -26.0458, 1.77 ) }
    dend_4 { pt3dadd( 45.7475, 76.0671, -27.6925, 0.96 ) }
    dend_4 { pt3dadd( 46.0652, 76.2369, -28.4978, 0.74 ) }
    dend_4 { pt3dadd( 46.5754, 76.1622, -30.1669, 1.18 ) }
    dend_4 { pt3dadd( 47.6093, 74.9958, -34.0727, 0.88 ) }
    dend_4 { pt3dadd( 47.9586, 74.1415, -35.633, 0.29 ) }
    dend_4 { pt3dadd( 48.1453, 73.4139, -36.538, 1.18 ) }
    dend_4 { pt3dadd( 48.3255, 72.5892, -37.3224, 1.47 ) }
    dend_4 { pt3dadd( 48.7562, 70.7918, -38.7416, 0.22 ) }
    dend_4 { pt3dadd( 49.0901, 69.6467, -39.4704, 0.22 ) }
    dend_4 { pt3dadd( 49.4371, 68.8276, -39.8833, 1.62 ) }
    dend_4 { pt3dadd( 50.0824, 67.9114, -40.4652, 1.77 ) }
    dend_4 { pt3dadd( 51.0526, 67.0042, -41.199, 0.22 ) }
    dend_4 { pt3dadd( 51.8351, 66.5421, -41.6705, 1.4 ) }
    dend_4 { pt3dadd( 52.5629, 66.2859, -42.0501, 1.47 ) }
    dend_4 { pt3dadd( 53.4127, 66.0779, -42.5043, 0.81 ) }
    dend_4 { pt3dadd( 55.0744, 65.7805, -43.4008, 1.18 ) }
    dend_4 { pt3dadd( 55.9552, 65.6652, -43.9039, 0.66 ) }
    dend_4 { pt3dadd( 56.7084, 65.5881, -44.3952, 1.4 ) }
    dend_4 { pt3dadd( 57.4146, 65.5277, -44.9086, 1.4 ) }
    dend_4 { pt3dadd( 58.3861, 65.4668, -45.6413, 0.59 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 41/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 2.653, 14.9211, -0.712744, 0.88 ) }
    dend_1 { pt3dadd( 3.12688, 15.6286, -0.779157, 0.88 ) }
    dend_1 { pt3dadd( 3.86317, 16.6823, -0.846199, 1.03 ) }
    dend_1 { pt3dadd( 4.5181, 17.6222, -0.858677, 1.25 ) }
    dend_1 { pt3dadd( 5.15683, 18.5355, -0.845476, 1.4 ) }
    dend_1 { pt3dadd( 6.05062, 19.8135, -0.827004, 1.62 ) }
    dend_1 { pt3dadd( 6.76682, 20.8376, -0.812202, 1.77 ) }
    dend_1 { pt3dadd( 7.09165, 21.2876, -0.779016, 2.21 ) }
    dend_1 { pt3dadd( 7.61276, 21.9923, -0.707828, 2.36 ) }
    dend_1 { pt3dadd( 8.01384, 22.5487, -0.630351, 2.73 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 51/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 10.6034, -37.6061, 0.0904597, 0.23322 ) }
    axon_1 { pt3dadd( 14.8144, -52.0028, 0.0904597, 0.23322 ) }
    axon_1 { pt3dadd( 19.0255, -66.3996, 0.0904597, 0.23322 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 54/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 37.6948, -12.7771, -5.77738, 0.81 ) }
    dend_21 { pt3dadd( 39.2379, -12.4317, -5.60597, 0.81 ) }
    dend_21 { pt3dadd( 40.5538, -12.142, -5.62843, 0.96 ) }
    dend_21 { pt3dadd( 42.5671, -11.7574, -5.81233, 0.88 ) }
    dend_21 { pt3dadd( 43.5288, -11.6456, -6.01906, 1.18 ) }
    dend_21 { pt3dadd( 44.2801, -11.5991, -6.21741, 1.18 ) }
    dend_21 { pt3dadd( 44.9099, -11.6023, -6.3855, 1.18 ) }
    dend_21 { pt3dadd( 46.0677, -11.6388, -6.76339, 1.11 ) }
    dend_21 { pt3dadd( 47.0764, -11.7359, -7.12168, 0.81 ) }
    dend_21 { pt3dadd( 48.6733, -12.0436, -7.79481, 0.66 ) }
    dend_21 { pt3dadd( 49.4254, -12.2497, -8.10305, 0.66 ) }
    dend_21 { pt3dadd( 50.3978, -12.5766, -8.49181, 0.66 ) }
    dend_21 { pt3dadd( 51.1126, -12.8595, -8.76681, 0.44 ) }
    dend_21 { pt3dadd( 51.9919, -13.2362, -9.068, 1.03 ) }
    dend_21 { pt3dadd( 52.6326, -13.5073, -9.2788, 1.18 ) }
    dend_21 { pt3dadd( 53.3143, -13.7677, -9.4853, 1.18 ) }
    dend_21 { pt3dadd( 54.0531, -14.0228, -9.73924, 0.96 ) }
    dend_21 { pt3dadd( 54.6253, -14.198, -9.94461, 0.66 ) }
    dend_21 { pt3dadd( 55.3668, -14.3938, -10.2075, 0.52 ) }
    dend_21 { pt3dadd( 56.124, -14.5187, -10.5083, 0.81 ) }
    dend_21 { pt3dadd( 56.9785, -14.545, -10.8662, 0.81 ) }
    dend_21 { pt3dadd( 57.6531, -14.4897, -11.1542, 0.59 ) }
    dend_21 { pt3dadd( 58.4291, -14.3661, -11.4731, 0.44 ) }
    dend_21 { pt3dadd( 59.1128, -14.2372, -11.7329, 0.37 ) }
    dend_21 { pt3dadd( 59.7376, -14.1441, -11.9427, 0.37 ) }
    dend_21 { pt3dadd( 60.4247, -14.1035, -12.1251, 0.74 ) }
    dend_21 { pt3dadd( 61.173, -14.1577, -12.251, 0.74 ) }
    dend_21 { pt3dadd( 61.8136, -14.3083, -12.3124, 0.74 ) }
    dend_21 { pt3dadd( 62.4804, -14.6314, -12.3792, 0.59 ) }
    dend_21 { pt3dadd( 63.2098, -15.1363, -12.4794, 0.59 ) }
    dend_21 { pt3dadd( 64.0187, -15.7589, -12.5664, 1.03 ) }
    dend_21 { pt3dadd( 64.625, -16.237, -12.6232, 1.25 ) }
    dend_21 { pt3dadd( 65.1194, -16.6283, -12.6628, 1.4 ) }
    dend_21 { pt3dadd( 66.5109, -17.6518, -12.7326, 0.88 ) }
    dend_21 { pt3dadd( 67.5332, -18.2707, -12.7561, 0.37 ) }
    dend_21 { pt3dadd( 68.5905, -18.7121, -12.8827, 0.29 ) }
    dend_21 { pt3dadd( 69.4214, -18.9379, -13.0826, 0.29 ) }
    dend_21 { pt3dadd( 69.9197, -19.0482, -13.2688, 0.29 ) }
    dend_21 { pt3dadd( 71.0228, -19.2825, -13.8118, 0.52 ) }
    dend_21 { pt3dadd( 71.7225, -19.478, -14.1947, 0.66 ) }
    dend_21 { pt3dadd( 73.4552, -20.1064, -15.3576, 1.84 ) }
    dend_21 { pt3dadd( 74.3497, -20.4488, -16.0348, 3.32 ) }
    dend_21 { pt3dadd( 75.367, -20.7981, -16.8485, 3.68 ) }
    dend_21 { pt3dadd( 76.139, -21.0166, -17.4914, 3.54 ) }
    dend_21 { pt3dadd( 77.7631, -21.3865, -18.903, 1.25 ) }
    dend_21 { pt3dadd( 79.3218, -21.5631, -20.2845, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_21 { pt3dadd( 80.1444, -21.5104, -21.0095, 0.22 ) }
    dend_21 { pt3dadd( 81.1662, -21.2419, -21.9243, 1.4 ) }
    dend_21 { pt3dadd( 81.5683, -21.0647, -22.2915, 1.62 ) }
    dend_21 { pt3dadd( 81.952, -20.8515, -22.6491, 1.62 ) }
    dend_21 { pt3dadd( 83.4374, -19.8704, -24.1054, 0.22 ) }
    dend_21 { pt3dadd( 84.4465, -19.2188, -25.0688, 0.22 ) }
    dend_21 { pt3dadd( 85.344, -18.7036, -25.9271, 0.22 ) }
    dend_21 { pt3dadd( 86.359, -18.1983, -26.8642, 1.4 ) }
    dend_21 { pt3dadd( 86.8225, -18.001, -27.2608, 1.84 ) }
    dend_21 { pt3dadd( 87.4189, -17.8064, -27.6959, 2.06 ) }
    dend_21 { pt3dadd( 87.6874, -17.7418, -27.8557, 2.28 ) }
    dend_21 { pt3dadd( 88.2716, -17.6361, -28.1654, 2.28 ) }
    dend_21 { pt3dadd( 90.3041, -17.3574, -29.1881, 0.22 ) }
    dend_21 { pt3dadd( 91.3919, -17.229, -29.7037, 0.22 ) }
    dend_21 { pt3dadd( 92.8202, -17.062, -30.3569, 0.22 ) }
    dend_21 { pt3dadd( 94.0319, -16.925, -30.8813, 1.55 ) }
    dend_21 { pt3dadd( 94.6852, -16.8549, -31.1548, 1.77 ) }
    dend_21 { pt3dadd( 95.4076, -16.769, -31.4437, 1.47 ) }
    dend_21 { pt3dadd( 96.0148, -16.6669, -31.6674, 0.81 ) }
    dend_21 { pt3dadd( 97.1823, -16.4154, -32.0778, 0.22 ) }
    dend_21 { pt3dadd( 97.9982, -16.217, -32.3636, 0.88 ) }
    dend_21 { pt3dadd( 98.6201, -16.052, -32.5774, 0.96 ) }
    dend_21 { pt3dadd( 101.644, -15.1802, -33.5681, 0.22 ) }
    dend_21 { pt3dadd( 103.651, -14.5181, -34.2111, 0.22 ) }
    dend_21 { pt3dadd( 104.83, -14.0795, -34.5885, 1.33 ) }
    dend_21 { pt3dadd( 105.476, -13.8212, -34.7938, 1.99 ) }
    dend_21 { pt3dadd( 106.15, -13.5218, -35.0107, 1.18 ) }
    dend_21 { pt3dadd( 106.919, -13.1528, -35.2613, 0.29 ) }
    dend_21 { pt3dadd( 110.336, -11.3924, -36.3855, 0.22 ) }
    dend_21 { pt3dadd( 110.937, -11.0704, -36.5882, 0.59 ) }
    dend_21 { pt3dadd( 111.428, -10.8015, -36.7635, 0.59 ) }
    dend_21 { pt3dadd( 113.13, -9.85845, -37.3985, 0.22 ) }
    dend_21 { pt3dadd( 114.711, -8.97662, -37.9572, 0.22 ) }
    dend_21 { pt3dadd( 116.09, -8.18987, -38.43, 0.22 ) }
    dend_21 { pt3dadd( 117.412, -7.42799, -38.8622, 1.99 ) }
    dend_21 { pt3dadd( 118.025, -7.07323, -39.0561, 2.65 ) }
    dend_21 { pt3dadd( 118.686, -6.68161, -39.26, 2.87 ) }
    dend_21 { pt3dadd( 120.423, -5.66819, -39.7648, 0.59 ) }
    dend_21 { pt3dadd( 121.448, -5.04054, -40.0708, 0.22 ) }
    dend_21 { pt3dadd( 122.233, -4.59041, -40.3264, 0.66 ) }
    dend_21 { pt3dadd( 122.686, -4.34716, -40.4829, 0.96 ) }
    dend_21 { pt3dadd( 123.184, -4.08903, -40.6647, 0.96 ) }
    dend_21 { pt3dadd( 123.717, -3.83902, -40.8711, 0.59 ) }
    dend_21 { pt3dadd( 125.89, -2.88452, -41.7932, 0.22 ) }
    dend_21 { pt3dadd( 128.084, -1.96551, -42.6934, 0.22 ) }
    dend_21 { pt3dadd( 128.97, -1.62573, -43.0435, 0.66 ) }
    dend_21 { pt3dadd( 129.817, -1.34089, -43.3868, 0.66 ) }
    dend_21 { pt3dadd( 131.41, -0.861407, -44.0451, 0.22 ) }
    dend_21 { pt3dadd( 131.792, -0.759446, -44.2132, 0.96 ) }
    dend_21 { pt3dadd( 132.782, -0.555898, -44.6593, 1.18 ) }
    dend_21 { pt3dadd( 134.357, -0.32683, -45.4846, 0.22 ) }
    dend_21 { pt3dadd( 135.69, -0.209566, -46.2791, 0.96 ) }
    dend_21 { pt3dadd( 136.351, -0.196211, -46.7147, 1.33 ) }
    dend_21 { pt3dadd( 137.436, -0.239904, -47.4976, 1.25 ) }
    dend_21 { pt3dadd( 138.509, -0.375083, -48.2767, 0.52 ) }
    dend_21 { pt3dadd( 139.964, -0.682889, -49.3449, 0.88 ) }
    dend_21 { pt3dadd( 140.466, -0.850724, -49.7095, 1.55 ) }
    dend_21 { pt3dadd( 140.949, -1.068, -50.0268, 1.77 ) }
    dend_21 { pt3dadd( 141.379, -1.32489, -50.3022, 1.77 ) }
    dend_21 { pt3dadd( 142.604, -2.25964, -51.0515, 0.66 ) }
    dend_21 { pt3dadd( 143.29, -2.93313, -51.4514, 0.52 ) }
    dend_21 { pt3dadd( 144.313, -4.10401, -51.9379, 0.37 ) }
    dend_21 { pt3dadd( 144.919, -4.90663, -52.1977, 1.03 ) }
    dend_21 { pt3dadd( 145.515, -5.82945, -52.4309, 1.92 ) }
    dend_21 { pt3dadd( 145.92, -6.55281, -52.5654, 1.92 ) }
    dend_21 { pt3dadd( 146.601, -7.95762, -52.7244, 0.22 ) }
    dend_21 { pt3dadd( 147.05, -8.94828, -52.7798, 0.22 ) }
    dend_21 { pt3dadd( 147.327, -9.53551, -52.7791, 0.74 ) }
    dend_21 { pt3dadd( 147.708, -10.237, -52.7734, 0.74 ) }
    dend_21 { pt3dadd( 148.227, -11.0208, -52.7757, 0.22 ) }
    dend_21 { pt3dadd( 148.56, -11.4249, -52.8098, 0.52 ) }
    dend_21 { pt3dadd( 149.001, -11.8241, -52.8984, 0.52 ) }
    dend_21 { pt3dadd( 150.376, -12.6779, -53.3015, 0.22 ) }
    dend_21 { pt3dadd( 151.247, -13.0071, -53.6023, 1.18 ) }
    dend_21 { pt3dadd( 151.702, -13.0948, -53.7667, 1.4 ) }
    dend_21 { pt3dadd( 152.4, -13.1489, -54.0434, 1.47 ) }
    dend_21 { pt3dadd( 153.361, -13.1505, -54.4441, 0.81 ) }
    dend_21 { pt3dadd( 154.692, -13.0372, -55.0609, 0.22 ) }
    dend_21 { pt3dadd( 155.208, -12.9752, -55.3662, 0.22 ) }
    dend_21 { pt3dadd( 155.834, -12.9562, -55.7945, 0.81 ) }
    dend_21 { pt3dadd( 156.48, -12.9869, -56.2594, 1.03 ) }
    dend_21 { pt3dadd( 156.795, -13.0235, -56.5062, 1.03 ) }
    dend_21 { pt3dadd( 157.801, -13.1829, -57.3647, 0.44 ) }
    dend_21 { pt3dadd( 159.033, -13.324, -58.4641, 0.81 ) }
    dend_21 { pt3dadd( 159.776, -13.3469, -59.1605, 0.37 ) }
    dend_21 { pt3dadd( 160.808, -13.293, -60.09, 1.99 ) }
    dend_21 { pt3dadd( 161.496, -13.2162, -60.641, 1.99 ) }
    dend_21 { pt3dadd( 162.014, -13.1447, -61.0339, 1.4 ) }
    dend_21 { pt3dadd( 163.152, -12.9541, -61.8725, 0.29 ) }
    dend_21 { pt3dadd( 163.81, -12.819, -62.3468, 0.22 ) }
    dend_21 { pt3dadd( 164.762, -12.598, -63.1059, 0.22 ) }
    dend_21 { pt3dadd( 166.06, -12.2739, -64.2299, 1.4 ) }
    dend_21 { pt3dadd( 166.812, -12.091, -64.8736, 1.99 ) }
    dend_21 { pt3dadd( 167.512, -11.9566, -65.462, 2.06 ) }
    dend_21 { pt3dadd( 167.926, -11.8948, -65.7958, 2.06 ) }
    dend_21 { pt3dadd( 168.932, -11.7271, -66.5466, 0.44 ) }
    dend_21 { pt3dadd( 169.738, -11.5897, -67.1093, 0.22 ) }
    dend_21 { pt3dadd( 170.383, -11.5018, -67.4617, 0.66 ) }
    dend_21 { pt3dadd( 171.232, -11.4579, -67.7975, 0.66 ) }
    dend_21 { pt3dadd( 171.954, -11.5027, -68.0074, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_21 { pt3dadd( 172.668, -11.6043, -68.167, 0.66 ) }
    dend_21 { pt3dadd( 173.17, -11.7072, -68.2531, 1.11 ) }
    dend_21 { pt3dadd( 173.779, -11.8429, -68.3647, 1.11 ) }
    dend_21 { pt3dadd( 174.42, -11.9596, -68.4997, 1.11 ) }
    dend_21 { pt3dadd( 174.997, -12.0354, -68.6337, 0.88 ) }
    dend_21 { pt3dadd( 175.877, -12.1062, -68.8556, 0.22 ) }
    dend_21 { pt3dadd( 176.676, -12.1377, -69.0571, 0.96 ) }
    dend_21 { pt3dadd( 177.227, -12.1402, -69.1894, 1.11 ) }
    dend_21 { pt3dadd( 177.712, -12.1318, -69.2965, 1.11 ) }
    dend_21 { pt3dadd( 178.29, -12.1184, -69.4065, 0.81 ) }
    dend_21 { pt3dadd( 179.846, -12.1098, -69.6549, 0.15 ) }
    dend_21 { pt3dadd( 181.071, -12.1991, -69.8047, 0.15 ) }
    dend_21 { pt3dadd( 182.05, -12.354, -69.915, 0.74 ) }
    dend_21 { pt3dadd( 182.618, -12.4735, -69.972, 0.81 ) }
    dend_21 { pt3dadd( 183.182, -12.616, -70.0303, 0.81 ) }
    dend_21 { pt3dadd( 184.513, -13.008, -70.1961, 0.22 ) }
    dend_21 { pt3dadd( 186.644, -13.7326, -70.5007, 0.22 ) }
    dend_21 { pt3dadd( 188.181, -14.3192, -70.736, 0.66 ) }
    dend_21 { pt3dadd( 189.114, -14.7278, -70.8762, 0.66 ) }
    dend_21 { pt3dadd( 190.008, -15.1768, -71.0071, 0.66 ) }
    dend_21 { pt3dadd( 190.874, -15.7217, -71.1226, 0.37 ) }
    dend_21 { pt3dadd( 191.454, -16.2331, -71.1688, 0.22 ) }
    dend_21 { pt3dadd( 191.881, -16.7616, -71.1555, 0.37 ) }
    dend_21 { pt3dadd( 192.437, -17.6811, -71.0364, 0.15 ) }
    dend_21 { pt3dadd( 192.736, -18.2808, -70.9351, 0.29 ) }
    dend_21 { pt3dadd( 193.346, -19.7706, -70.6047, 0.22 ) }
    dend_21 { pt3dadd( 193.812, -21.1438, -70.2414, 0.22 ) }
    dend_21 { pt3dadd( 193.958, -21.671, -70.1005, 0.37 ) }
    dend_21 { pt3dadd( 194.098, -22.257, -69.9471, 0.37 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 29/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 37.6948, -12.7771, -5.77738, 0.29 ) }
    dend_18 { pt3dadd( 36.2691, -10.77, -8.39431, 0.29 ) }
    dend_18 { pt3dadd( 35.9766, -10.3007, -8.93878, 0.29 ) }
    dend_18 { pt3dadd( 35.6313, -9.65988, -9.67704, 0.74 ) }
    dend_18 { pt3dadd( 35.4745, -9.32143, -10.1039, 0.74 ) }
    dend_18 { pt3dadd( 35.3289, -8.91952, -10.6898, 0.52 ) }
    dend_18 { pt3dadd( 35.1982, -8.48528, -11.3729, 1.18 ) }
    dend_18 { pt3dadd( 35.1524, -8.03307, -12.1248, 1.18 ) }
    dend_18 { pt3dadd( 35.1833, -7.56717, -12.9751, 0.88 ) }
    dend_18 { pt3dadd( 35.2826, -6.99799, -13.9874, 0.96 ) }
    dend_18 { pt3dadd( 35.4046, -6.3738, -15.053, 0.74 ) }
    dend_18 { pt3dadd( 35.428, -6.24991, -15.2424, 1.4 ) }
    dend_18 { pt3dadd( 35.5148, -5.60568, -16.0284, 1.55 ) }
    dend_18 { pt3dadd( 35.5588, -4.7809, -16.8569, 0.59 ) }
    dend_18 { pt3dadd( 35.5616, -4.13433, -17.4348, 0.44 ) }
    dend_18 { pt3dadd( 35.5433, -3.30692, -18.1598, 0.29 ) }
    dend_18 { pt3dadd( 35.5138, -2.66395, -18.65, 0.29 ) }
    dend_18 { pt3dadd( 35.4765, -1.36088, -19.5817, 1.62 ) }
    dend_18 { pt3dadd( 35.4711, -0.627159, -20.1389, 1.84 ) }
    dend_18 { pt3dadd( 35.4495, 0.939812, -21.3359, 0.59 ) }
    dend_18 { pt3dadd( 35.4284, 1.72821, -21.9468, 0.59 ) }
    dend_18 { pt3dadd( 35.3753, 3.3344, -23.2419, 0.22 ) }
    dend_18 { pt3dadd( 35.3088, 5.39159, -24.95, 0.22 ) }
    dend_18 { pt3dadd( 35.2436, 7.65048, -26.8432, 0.22 ) }
    dend_18 { pt3dadd( 35.213, 9.04578, -27.9597, 1.77 ) }
    dend_18 { pt3dadd( 35.1875, 9.82663, -28.5701, 2.36 ) }
    dend_18 { pt3dadd( 35.1492, 10.9684, -29.5096, 2.58 ) }
    dend_18 { pt3dadd( 35.1416, 11.2178, -29.7608, 2.58 ) }
    // Section: dend_14, id: dend_14, parent: dend_10 (entry count 57/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -2.35995, -49.609, 2.1205, 0.52 ) }
    dend_14 { pt3dadd( -1.11725, -51.4016, 0.84784, 0.52 ) }
    dend_14 { pt3dadd( -0.672538, -52.0161, 0.445156, 0.52 ) }
    dend_14 { pt3dadd( -0.137002, -52.777, -0.018343, 0.74 ) }
    dend_14 { pt3dadd( 0.611306, -53.8784, -0.647589, 0.88 ) }
    dend_14 { pt3dadd( 1.04103, -54.5243, -1.00814, 0.88 ) }
    dend_14 { pt3dadd( 1.45615, -55.161, -1.33841, 0.88 ) }
    dend_14 { pt3dadd( 2.03468, -56.0153, -1.7071, 0.44 ) }
    dend_14 { pt3dadd( 2.43014, -56.5906, -1.93322, 0.44 ) }
    dend_14 { pt3dadd( 2.82651, -57.1282, -2.1383, 0.81 ) }
    dend_14 { pt3dadd( 3.20816, -57.5721, -2.3142, 0.96 ) }
    dend_14 { pt3dadd( 3.97315, -58.3977, -2.64226, 0.96 ) }
    dend_14 { pt3dadd( 4.93951, -59.4449, -3.02566, 0.44 ) }
    dend_14 { pt3dadd( 5.72142, -60.3191, -3.32912, 0.44 ) }
    dend_14 { pt3dadd( 6.58223, -61.3518, -3.65655, 0.66 ) }
    dend_14 { pt3dadd( 7.39056, -62.3656, -3.98102, 0.66 ) }
    dend_14 { pt3dadd( 8.20767, -63.4005, -4.25763, 0.52 ) }
    dend_14 { pt3dadd( 9.00769, -64.4501, -4.52209, 0.81 ) }
    dend_14 { pt3dadd( 9.77914, -65.5161, -4.78424, 0.81 ) }
    dend_14 { pt3dadd( 10.9031, -67.1576, -5.13889, 0.52 ) }
    dend_14 { pt3dadd( 11.5464, -68.1692, -5.34778, 0.52 ) }
    dend_14 { pt3dadd( 12.5661, -69.844, -5.6863, 0.52 ) }
    dend_14 { pt3dadd( 13.1443, -70.75, -5.86104, 1.47 ) }
    dend_14 { pt3dadd( 13.6671, -71.5658, -6.01511, 1.92 ) }
    dend_14 { pt3dadd( 14.2992, -72.6329, -6.1797, 2.58 ) }
    dend_14 { pt3dadd( 14.7146, -73.4483, -6.27793, 2.58 ) }
    dend_14 { pt3dadd( 15.3279, -74.8876, -6.41367, 0.96 ) }
    dend_14 { pt3dadd( 15.7854, -76.2002, -6.55193, 0.52 ) }
    dend_14 { pt3dadd( 16.1677, -77.4593, -6.65513, 0.88 ) }
    dend_14 { pt3dadd( 16.5249, -78.8646, -6.75498, 0.88 ) }
    dend_14 { pt3dadd( 16.8228, -80.2875, -6.86761, 0.88 ) }
    dend_14 { pt3dadd( 16.9893, -81.2512, -6.93656, 0.74 ) }
    dend_14 { pt3dadd( 17.1849, -82.715, -7.06734, 0.74 ) }
    dend_14 { pt3dadd( 17.3278, -84.0389, -7.26423, 1.11 ) }
    dend_14 { pt3dadd( 17.4476, -85.1488, -7.47184, 1.11 ) }
    dend_14 { pt3dadd( 17.5612, -86.1922, -7.69867, 0.81 ) }
    dend_14 { pt3dadd( 17.6491, -86.9786, -7.88157, 0.81 ) }
    dend_14 { pt3dadd( 17.8345, -88.5218, -8.25877, 0.74 ) }
    dend_14 { pt3dadd( 18.1147, -90.656, -8.77957, 0.59 ) }
    dend_14 { pt3dadd( 18.4194, -92.7131, -9.28103, 0.44 ) }
    dend_14 { pt3dadd( 18.7177, -94.6634, -9.76154, 1.77 ) }
    dend_14 { pt3dadd( 18.8049, -95.2805, -9.90938, 2.14 ) }
    dend_14 { pt3dadd( 18.9639, -96.6623, -10.2192, 1.62 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_14 { pt3dadd( 19.1164, -98.5357, -10.6167, 0.22 ) }
    dend_14 { pt3dadd( 19.1764, -99.9142, -10.8915, 0.22 ) }
    dend_14 { pt3dadd( 19.1978, -101.215, -11.1965, 0.96 ) }
    dend_14 { pt3dadd( 19.2007, -102.188, -11.4447, 1.18 ) }
    dend_14 { pt3dadd( 19.1915, -103.325, -11.7238, 0.96 ) }
    dend_14 { pt3dadd( 19.1566, -104.968, -12.0984, 0.22 ) }
    dend_14 { pt3dadd( 19.1074, -106.158, -12.3503, 0.59 ) }
    dend_14 { pt3dadd( 19.0887, -106.728, -12.4536, 0.59 ) }
    dend_14 { pt3dadd( 19.0862, -107.778, -12.6134, 0.22 ) }
    dend_14 { pt3dadd( 19.1377, -109.372, -12.821, 0.29 ) }
    dend_14 { pt3dadd( 19.1799, -110.166, -12.8983, 0.29 ) }
    dend_14 { pt3dadd( 19.2438, -111.229, -12.9164, 1.84 ) }
    dend_14 { pt3dadd( 19.3156, -112.251, -12.9011, 2.5 ) }
    dend_14 { pt3dadd( 19.346, -112.68, -12.8888, 2.73 ) }
    dend_14 { pt3dadd( 19.3907, -113.323, -12.8665, 2.65 ) }
    dend_14 { pt3dadd( 19.4966, -114.725, -12.8127, 1.77 ) }
    dend_14 { pt3dadd( 19.7281, -117.398, -12.7027, 0.22 ) }
    dend_14 { pt3dadd( 19.9997, -120.168, -12.5802, 0.22 ) }
    dend_14 { pt3dadd( 20.1248, -121.391, -12.5293, 0.52 ) }
    dend_14 { pt3dadd( 20.2331, -122.266, -12.493, 0.66 ) }
    dend_14 { pt3dadd( 20.3999, -123.316, -12.4584, 0.29 ) }
    dend_14 { pt3dadd( 20.666, -124.606, -12.4387, 1.47 ) }
    dend_14 { pt3dadd( 20.8417, -125.288, -12.4513, 2.14 ) }
    dend_14 { pt3dadd( 21.0455, -125.935, -12.458, 2.21 ) }
    dend_14 { pt3dadd( 21.42, -127.02, -12.4694, 1.55 ) }
    dend_14 { pt3dadd( 22.1215, -129.028, -12.49, 0.22 ) }
    dend_14 { pt3dadd( 22.3093, -129.605, -12.5065, 0.52 ) }
    dend_14 { pt3dadd( 22.4765, -130.178, -12.5301, 0.52 ) }
    dend_14 { pt3dadd( 23.0666, -132.506, -12.6348, 0.22 ) }
    dend_14 { pt3dadd( 23.1985, -133.085, -12.6653, 0.66 ) }
    dend_14 { pt3dadd( 23.3215, -133.774, -12.7117, 0.66 ) }
    dend_14 { pt3dadd( 23.7125, -136.53, -12.9448, 0.22 ) }
    dend_14 { pt3dadd( 24.016, -139.135, -13.2223, 0.22 ) }
    dend_14 { pt3dadd( 24.1481, -140.525, -13.4171, 0.81 ) }
    dend_14 { pt3dadd( 24.2007, -141.229, -13.5497, 1.03 ) }
    dend_14 { pt3dadd( 24.3163, -142.561, -13.9069, 0.22 ) }
    dend_14 { pt3dadd( 24.4345, -143.556, -14.2596, 0.22 ) }
    dend_14 { pt3dadd( 24.6484, -144.72, -14.7611, 1.47 ) }
    dend_14 { pt3dadd( 24.8977, -145.602, -15.1672, 2.28 ) }
    dend_14 { pt3dadd( 25.1627, -146.303, -15.4785, 2.28 ) }
    dend_14 { pt3dadd( 26.5487, -149.357, -16.7611, 0.22 ) }
    dend_14 { pt3dadd( 27.2453, -150.779, -17.2759, 0.22 ) }
    dend_14 { pt3dadd( 28.0465, -152.4, -17.7725, 0.22 ) }
    dend_14 { pt3dadd( 28.8927, -154.142, -18.1978, 0.22 ) }
    dend_14 { pt3dadd( 29.4464, -155.32, -18.4156, 2.28 ) }
    dend_14 { pt3dadd( 29.9256, -156.401, -18.5472, 2.5 ) }
    dend_14 { pt3dadd( 31.0828, -159.288, -18.679, 0.29 ) }
    dend_14 { pt3dadd( 31.2997, -159.985, -18.7136, 0.29 ) }
    dend_14 { pt3dadd( 31.5839, -161.295, -18.8147, 1.55 ) }
    dend_14 { pt3dadd( 31.6763, -161.925, -18.8786, 2.06 ) }
    dend_14 { pt3dadd( 31.7741, -162.806, -19.0106, 1.69 ) }
    dend_14 { pt3dadd( 31.8595, -163.76, -19.1932, 0.88 ) }
    dend_14 { pt3dadd( 32.0297, -166.407, -19.8283, 0.22 ) }
    dend_14 { pt3dadd( 32.0588, -167.112, -20.0094, 0.66 ) }
    dend_14 { pt3dadd( 32.0732, -167.819, -20.1965, 0.66 ) }
    dend_14 { pt3dadd( 32.0833, -170.432, -20.9057, 0.22 ) }
    dend_14 { pt3dadd( 32.0637, -172.344, -21.4259, 0.22 ) }
    dend_14 { pt3dadd( 32.0314, -173.692, -21.7944, 0.22 ) }
    dend_14 { pt3dadd( 31.9919, -174.383, -21.9598, 0.44 ) }
    dend_14 { pt3dadd( 31.9102, -175.319, -22.1827, 0.44 ) }
    dend_14 { pt3dadd( 31.7302, -176.727, -22.4974, 1.11 ) }
    dend_14 { pt3dadd( 31.6444, -177.227, -22.6029, 1.55 ) }
    dend_14 { pt3dadd( 31.457, -178.133, -22.8122, 1.69 ) }
    dend_14 { pt3dadd( 30.8398, -180.892, -23.5321, 0.15 ) }
    dend_14 { pt3dadd( 30.0237, -184.259, -24.4733, 0.15 ) }
    dend_14 { pt3dadd( 29.5474, -186.116, -25.0204, 2.5 ) }
    dend_14 { pt3dadd( 29.3512, -186.864, -25.247, 2.5 ) }
    dend_14 { pt3dadd( 28.7999, -188.998, -25.9227, 0.15 ) }
    dend_14 { pt3dadd( 28.623, -189.767, -26.1818, 0.15 ) }
    dend_14 { pt3dadd( 28.5114, -190.425, -26.4302, 0.66 ) }
    dend_14 { pt3dadd( 28.4674, -190.988, -26.6321, 0.88 ) }
    dend_14 { pt3dadd( 28.4738, -191.686, -26.8655, 0.88 ) }
    dend_14 { pt3dadd( 28.5042, -192.31, -27.0269, 0.52 ) }
    dend_14 { pt3dadd( 28.5702, -194.226, -27.3275, 0.22 ) }
    dend_14 { pt3dadd( 28.5428, -195.383, -27.4406, 0.22 ) }
    dend_14 { pt3dadd( 28.4682, -196.441, -27.5244, 0.96 ) }
    dend_14 { pt3dadd( 28.4116, -196.957, -27.5634, 1.11 ) }
    dend_14 { pt3dadd( 28.1457, -198.794, -27.7133, 0.22 ) }
    dend_14 { pt3dadd( 27.2589, -203.27, -28.1429, 0.22 ) }
    dend_14 { pt3dadd( 26.0647, -207.39, -28.5857, 0.22 ) }
    dend_14 { pt3dadd( 25.6045, -208.621, -28.7385, 1.47 ) }
    dend_14 { pt3dadd( 25.1649, -209.619, -28.8793, 1.62 ) }
    dend_14 { pt3dadd( 24.1949, -211.499, -29.1752, 0.22 ) }
    dend_14 { pt3dadd( 22.3495, -214.494, -29.7095, 0.22 ) }
    dend_14 { pt3dadd( 19.798, -217.884, -30.4105, 0.22 ) }
    dend_14 { pt3dadd( 18.3134, -219.609, -30.8109, 0.88 ) }
    dend_14 { pt3dadd( 17.8471, -220.122, -30.9297, 0.88 ) }
    dend_14 { pt3dadd( 16.4181, -221.549, -31.2275, 0.22 ) }
    dend_14 { pt3dadd( 15.7633, -222.129, -31.344, 0.88 ) }
    dend_14 { pt3dadd( 15.3011, -222.499, -31.4228, 0.88 ) }
    dend_14 { pt3dadd( 13.0994, -224.15, -31.8346, 0.22 ) }
    dend_14 { pt3dadd( 11.7682, -225.068, -32.0914, 0.22 ) }
    dend_14 { pt3dadd( 10.3431, -225.923, -32.3768, 1.55 ) }
    dend_14 { pt3dadd( 9.82655, -226.181, -32.4858, 2.06 ) }
    dend_14 { pt3dadd( 8.87034, -226.592, -32.6929, 2.06 ) }
    dend_14 { pt3dadd( 8.58389, -226.675, -32.765, 2.06 ) }
    dend_14 { pt3dadd( 7.2697, -226.834, -33.1432, 0.22 ) }
    dend_14 { pt3dadd( 5.85052, -226.879, -33.6085, 0.22 ) }
    dend_14 { pt3dadd( 5.03453, -226.863, -33.9001, 0.74 ) }
    dend_14 { pt3dadd( 4.55537, -226.831, -34.0649, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_14 { pt3dadd( 2.33804, -226.531, -34.8363, 0.15 ) }
    dend_14 { pt3dadd( 1.69735, -226.42, -35.0709, 0.52 ) }
    dend_14 { pt3dadd( 1.30745, -226.332, -35.2251, 0.52 ) }
    dend_14 { pt3dadd( 0.230146, -226.029, -35.6779, 0.22 ) }
    dend_14 { pt3dadd( -0.381925, -225.851, -35.9701, 0.66 ) }
    dend_14 { pt3dadd( -1.11878, -225.645, -36.3384, 0.66 ) }
    dend_14 { pt3dadd( -1.96572, -225.414, -36.7719, 0.22 ) }
    dend_14 { pt3dadd( -2.58177, -225.247, -37.1029, 1.18 ) }
    dend_14 { pt3dadd( -3.15905, -225.091, -37.4252, 1.33 ) }
    dend_14 { pt3dadd( -5.07455, -224.583, -38.5363, 0.22 ) }
    dend_14 { pt3dadd( -5.722, -224.439, -38.9131, 0.96 ) }
    dend_14 { pt3dadd( -6.36969, -224.322, -39.282, 1.03 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 12/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -2.35995, -49.609, 2.1205, 1.4 ) }
    dend_11 { pt3dadd( -2.50671, -50.008, 2.06821, 1.4 ) }
    dend_11 { pt3dadd( -2.95838, -51.4186, 1.89443, 0.66 ) }
    dend_11 { pt3dadd( -3.25163, -52.4265, 1.7797, 0.66 ) }
    dend_11 { pt3dadd( -3.52629, -53.4714, 1.66713, 0.66 ) }
    dend_11 { pt3dadd( -3.73142, -54.31, 1.61577, 0.59 ) }
    dend_11 { pt3dadd( -3.97292, -55.2974, 1.55531, 0.59 ) }
    dend_11 { pt3dadd( -4.15549, -56.1489, 1.51972, 0.59 ) }
    dend_11 { pt3dadd( -4.27833, -56.8588, 1.52069, 0.96 ) }
    dend_11 { pt3dadd( -4.37595, -57.5729, 1.52947, 1.18 ) }
    dend_11 { pt3dadd( -4.50183, -58.7428, 1.56747, 1.33 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 23/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 8.01384, 22.5487, -0.630351, 1.4 ) }
    dend_3 { pt3dadd( 8.53956, 22.7696, -0.343019, 1.4 ) }
    dend_3 { pt3dadd( 9.78339, 23.2624, 0.373418, 1.11 ) }
    dend_3 { pt3dadd( 10.2705, 23.4725, 0.665032, 0.81 ) }
    dend_3 { pt3dadd( 10.8623, 23.7646, 1.01775, 1.11 ) }
    dend_3 { pt3dadd( 11.5317, 24.137, 1.40622, 0.74 ) }
    dend_3 { pt3dadd( 11.798, 24.3004, 1.55712, 0.74 ) }
    dend_3 { pt3dadd( 12.399, 24.6789, 1.87119, 0.66 ) }
    dend_3 { pt3dadd( 12.8126, 24.9438, 2.06391, 0.66 ) }
    dend_3 { pt3dadd( 13.3498, 25.3355, 2.32267, 0.74 ) }
    dend_3 { pt3dadd( 13.7883, 25.7093, 2.53203, 0.74 ) }
    dend_3 { pt3dadd( 14.1885, 26.1106, 2.72483, 0.59 ) }
    dend_3 { pt3dadd( 14.7646, 26.71, 2.98356, 0.59 ) }
    dend_3 { pt3dadd( 15.4078, 27.3577, 3.24872, 0.74 ) }
    dend_3 { pt3dadd( 15.8642, 27.7815, 3.43168, 0.74 ) }
    dend_3 { pt3dadd( 16.3867, 28.2276, 3.64048, 0.74 ) }
    dend_3 { pt3dadd( 16.9362, 28.6724, 3.87856, 0.44 ) }
    dend_3 { pt3dadd( 17.4843, 29.0943, 4.118, 0.44 ) }
    dend_3 { pt3dadd( 17.9969, 29.4863, 4.34129, 0.81 ) }
    dend_3 { pt3dadd( 18.4387, 29.8019, 4.52106, 1.11 ) }
    dend_3 { pt3dadd( 19.0823, 30.2475, 4.779, 1.11 ) }
    dend_3 { pt3dadd( 19.7159, 30.7091, 5.02667, 0.88 ) }
    dend_3 { pt3dadd( 20.2461, 31.1355, 5.24734, 0.88 ) }
    dend_3 { pt3dadd( 20.7175, 31.6131, 5.47789, 0.74 ) }
    dend_3 { pt3dadd( 21.1507, 32.1446, 5.72166, 0.74 ) }
    dend_3 { pt3dadd( 21.5819, 32.7366, 5.95966, 0.59 ) }
    dend_3 { pt3dadd( 21.9223, 33.2398, 6.1206, 0.44 ) }
    dend_3 { pt3dadd( 22.2246, 33.7218, 6.24856, 0.44 ) }
    dend_3 { pt3dadd( 22.5922, 34.3914, 6.42786, 0.44 ) }
    dend_3 { pt3dadd( 22.9529, 35.1164, 6.62136, 0.44 ) }
    dend_3 { pt3dadd( 23.3224, 35.9049, 6.84197, 0.44 ) }
    dend_3 { pt3dadd( 23.6149, 36.5351, 7.02833, 0.59 ) }
    dend_3 { pt3dadd( 24.0325, 37.3378, 7.29218, 0.81 ) }
    dend_3 { pt3dadd( 24.3461, 37.8627, 7.48552, 1.25 ) }
    dend_3 { pt3dadd( 24.616, 38.27, 7.6607, 1.25 ) }
    dend_3 { pt3dadd( 25.0993, 39.0078, 8.04482, 0.74 ) }
    dend_3 { pt3dadd( 25.433, 39.5161, 8.35948, 0.52 ) }
    dend_3 { pt3dadd( 25.7251, 39.9204, 8.6222, 0.74 ) }
    dend_3 { pt3dadd( 26.0712, 40.3032, 8.86762, 0.74 ) }
    dend_3 { pt3dadd( 26.3308, 40.5885, 9.01129, 0.74 ) }
    dend_3 { pt3dadd( 26.65, 41.0454, 9.15018, 0.44 ) }
    dend_3 { pt3dadd( 26.8909, 41.5821, 9.23175, 0.44 ) }
    dend_3 { pt3dadd( 27.0691, 42.2014, 9.29386, 0.44 ) }
    dend_3 { pt3dadd( 27.1661, 42.7074, 9.33763, 0.44 ) }
    dend_3 { pt3dadd( 27.31, 43.725, 9.42015, 0.81 ) }
    dend_3 { pt3dadd( 27.4285, 44.6306, 9.50055, 0.81 ) }
    dend_3 { pt3dadd( 27.532, 45.351, 9.57813, 1.03 ) }
    dend_3 { pt3dadd( 27.6644, 45.9439, 9.66076, 0.74 ) }
    dend_3 { pt3dadd( 27.8448, 46.5065, 9.75794, 0.52 ) }
    dend_3 { pt3dadd( 28.1085, 47.074, 9.86998, 0.52 ) }
    dend_3 { pt3dadd( 28.3535, 47.4053, 9.94656, 0.88 ) }
    dend_3 { pt3dadd( 28.604, 47.6715, 10.0198, 0.88 ) }
    dend_3 { pt3dadd( 29.2286, 48.286, 10.2034, 0.37 ) }
    dend_3 { pt3dadd( 29.7085, 48.7612, 10.3706, 0.37 ) }
    dend_3 { pt3dadd( 30.1111, 49.1946, 10.5495, 0.37 ) }
    dend_3 { pt3dadd( 30.3923, 49.5182, 10.6969, 0.37 ) }
    dend_3 { pt3dadd( 30.8349, 50.2208, 11.0272, 0.66 ) }
    dend_3 { pt3dadd( 30.9653, 50.6481, 11.2345, 1.03 ) }
    dend_3 { pt3dadd( 30.9073, 51.0901, 11.468, 1.25 ) }
    dend_3 { pt3dadd( 30.8363, 51.279, 11.5708, 1.25 ) }
    dend_3 { pt3dadd( 35.2887, 58.0083, 14.1889, 1.25 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 84/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 8.01384, 22.5487, -0.630351, 0.81 ) }
    dend_2 { pt3dadd( 7.8161, 24.3142, -0.161839, 0.81 ) }
    dend_2 { pt3dadd( 7.75085, 25.0769, 0.0432185, 0.81 ) }
    dend_2 { pt3dadd( 7.69842, 25.7954, 0.243435, 0.81 ) }
    dend_2 { pt3dadd( 7.59118, 27.207, 0.645226, 0.74 ) }
    dend_2 { pt3dadd( 7.5093, 28.1309, 0.945832, 0.74 ) }
    dend_2 { pt3dadd( 7.45084, 28.9839, 1.23861, 0.81 ) }
    dend_2 { pt3dadd( 7.45843, 29.4748, 1.42321, 0.81 ) }
    dend_2 { pt3dadd( 7.53253, 30.1824, 1.6772, 0.52 ) }
    dend_2 { pt3dadd( 7.62127, 30.6575, 1.83214, 0.52 ) }
    dend_2 { pt3dadd( 7.89128, 31.6235, 2.08925, 0.44 ) }
    dend_2 { pt3dadd( 8.15193, 32.2865, 2.17352, 0.37 ) }
    dend_2 { pt3dadd( 8.37371, 32.7252, 2.16089, 0.37 ) }
    dend_2 { pt3dadd( 9.01926, 33.8414, 1.97693, 1.25 ) }
    dend_2 { pt3dadd( 9.36378, 34.4171, 1.81718, 1.69 ) }
    dend_2 { pt3dadd( 9.67847, 34.9537, 1.63407, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_2 { pt3dadd( 10.392, 36.2306, 1.13917, 0.88 ) }
    dend_2 { pt3dadd( 10.7794, 37.0041, 0.834899, 0.37 ) }
    dend_2 { pt3dadd( 11.1074, 37.7104, 0.54273, 0.37 ) }
    dend_2 { pt3dadd( 11.3249, 38.199, 0.329238, 0.37 ) }
    dend_2 { pt3dadd( 11.6643, 39.0672, -0.0188444, 0.81 ) }
    dend_2 { pt3dadd( 11.8529, 39.5885, -0.204216, 1.03 ) }
    dend_2 { pt3dadd( 12.03, 40.061, -0.335116, 1.18 ) }
    dend_2 { pt3dadd( 12.2009, 40.485, -0.453074, 1.18 ) }
    dend_2 { pt3dadd( 12.45, 41.0552, -0.607175, 0.59 ) }
    dend_2 { pt3dadd( 12.824, 41.8458, -0.842098, 0.29 ) }
    dend_2 { pt3dadd( 13.06, 42.3737, -1.04367, 0.29 ) }
    dend_2 { pt3dadd( 13.4968, 43.4046, -1.47875, 0.29 ) }
    dend_2 { pt3dadd( 13.9015, 44.419, -1.92116, 0.66 ) }
    dend_2 { pt3dadd( 14.1277, 45.0186, -2.19862, 0.66 ) }
    dend_2 { pt3dadd( 14.3899, 45.771, -2.55527, 1.25 ) }
    dend_2 { pt3dadd( 14.8845, 47.3068, -3.24422, 2.36 ) }
    dend_2 { pt3dadd( 15.0166, 47.7687, -3.43092, 2.58 ) }
    dend_2 { pt3dadd( 15.2384, 48.6363, -3.74752, 1.99 ) }
    dend_2 { pt3dadd( 15.4769, 49.6461, -4.04152, 0.88 ) }
    dend_2 { pt3dadd( 15.7789, 51.0097, -4.30935, 0.29 ) }
    dend_2 { pt3dadd( 16.0856, 52.4257, -4.45951, 0.81 ) }
    dend_2 { pt3dadd( 16.2539, 53.1968, -4.48828, 0.81 ) }
    dend_2 { pt3dadd( 16.3536, 53.6722, -4.49227, 0.44 ) }
    dend_2 { pt3dadd( 16.5662, 54.7279, -4.46763, 0.22 ) }
    dend_2 { pt3dadd( 16.941, 56.6346, -4.37564, 0.22 ) }
    dend_2 { pt3dadd( 17.1747, 57.8114, -4.33226, 1.25 ) }
    dend_2 { pt3dadd( 17.2719, 58.2899, -4.32879, 1.69 ) }
    dend_2 { pt3dadd( 17.3558, 58.7007, -4.34048, 1.69 ) }
    dend_2 { pt3dadd( 17.5056, 59.3772, -4.3829, 0.96 ) }
    dend_2 { pt3dadd( 17.672, 60.0922, -4.45285, 0.52 ) }
    dend_2 { pt3dadd( 17.9838, 61.2851, -4.60411, 0.29 ) }
    dend_2 { pt3dadd( 18.2891, 62.371, -4.75072, 0.29 ) }
    dend_2 { pt3dadd( 18.6295, 63.5314, -4.92761, 0.29 ) }
    dend_2 { pt3dadd( 18.8503, 64.2637, -5.06211, 0.81 ) }
    dend_2 { pt3dadd( 18.9883, 64.7163, -5.15988, 0.81 ) }
    dend_2 { pt3dadd( 19.3951, 66.0302, -5.48335, 0.22 ) }
    dend_2 { pt3dadd( 19.7856, 67.2287, -5.8241, 0.22 ) }
    dend_2 { pt3dadd( 20.1737, 68.3581, -6.17861, 1.69 ) }
    dend_2 { pt3dadd( 20.4374, 69.1077, -6.42774, 2.43 ) }
    dend_2 { pt3dadd( 20.6451, 69.706, -6.627, 2.28 ) }
    dend_2 { pt3dadd( 20.95, 70.5578, -6.90313, 0.96 ) }
    dend_2 { pt3dadd( 21.3782, 71.7358, -7.25872, 0.22 ) }
    dend_2 { pt3dadd( 21.6289, 72.4046, -7.44096, 0.66 ) }
    dend_2 { pt3dadd( 21.7796, 72.7869, -7.53046, 0.66 ) }
    dend_2 { pt3dadd( 22.2926, 74.0741, -7.79273, 0.22 ) }
    dend_2 { pt3dadd( 22.6296, 74.9159, -7.94995, 1.11 ) }
    dend_2 { pt3dadd( 22.889, 75.5805, -8.0699, 1.62 ) }
    dend_2 { pt3dadd( 23.0956, 76.0854, -8.15948, 1.99 ) }
    dend_2 { pt3dadd( 23.2425, 76.4272, -8.22063, 1.99 ) }
    dend_2 { pt3dadd( 23.5741, 77.1522, -8.34751, 1.4 ) }
    dend_2 { pt3dadd( 23.8274, 77.672, -8.43619, 0.59 ) }
    dend_2 { pt3dadd( 24.554, 79.0966, -8.66693, 0.22 ) }
    dend_2 { pt3dadd( 25.4626, 80.7631, -8.91618, 0.22 ) }
    dend_2 { pt3dadd( 26.0437, 81.7799, -9.06051, 0.22 ) }
    dend_2 { pt3dadd( 26.5286, 82.5959, -9.17083, 0.74 ) }
    dend_2 { pt3dadd( 26.8075, 83.0429, -9.23084, 0.74 ) }
    dend_2 { pt3dadd( 27.1517, 83.5722, -9.3074, 0.37 ) }
    dend_2 { pt3dadd( 27.9805, 84.7839, -9.52541, 0.22 ) }
    dend_2 { pt3dadd( 28.7829, 85.9122, -9.78342, 1.25 ) }
    dend_2 { pt3dadd( 29.0102, 86.2229, -9.86606, 1.69 ) }
    dend_2 { pt3dadd( 29.3285, 86.6626, -9.98846, 1.69 ) }
    dend_2 { pt3dadd( 29.7772, 87.294, -10.1762, 0.81 ) }
    dend_2 { pt3dadd( 30.5495, 88.4037, -10.5349, 0.22 ) }
    dend_2 { pt3dadd( 30.901, 88.9204, -10.7114, 0.66 ) }
    dend_2 { pt3dadd( 31.1847, 89.334, -10.8558, 0.66 ) }
    dend_2 { pt3dadd( 31.8817, 90.3471, -11.2215, 0.22 ) }
    dend_2 { pt3dadd( 32.7464, 91.5637, -11.6394, 1.92 ) }
    dend_2 { pt3dadd( 33.0486, 91.9936, -11.7648, 2.36 ) }
    dend_2 { pt3dadd( 33.4151, 92.5224, -11.8927, 2.58 ) }
    dend_2 { pt3dadd( 33.7507, 93.0147, -12.0003, 2.28 ) }
    dend_2 { pt3dadd( 34.1368, 93.6103, -12.1068, 1.47 ) }
    dend_2 { pt3dadd( 35.1517, 95.2711, -12.3349, 0.15 ) }
    dend_2 { pt3dadd( 36.0418, 96.7817, -12.4831, 0.15 ) }
    dend_2 { pt3dadd( 36.5702, 97.7119, -12.5488, 0.66 ) }
    dend_2 { pt3dadd( 36.7476, 98.0367, -12.5614, 0.66 ) }
    dend_2 { pt3dadd( 38.0339, 100.466, -12.5709, 0.22 ) }
    dend_2 { pt3dadd( 38.743, 101.812, -12.522, 0.22 ) }
    dend_2 { pt3dadd( 39.391, 103.046, -12.431, 0.22 ) }
    dend_2 { pt3dadd( 39.9476, 104.047, -12.3196, 0.52 ) }
    dend_2 { pt3dadd( 40.5034, 104.987, -12.175, 0.22 ) }
    dend_2 { pt3dadd( 41.1119, 105.936, -11.9886, 1.4 ) }
    dend_2 { pt3dadd( 41.5143, 106.447, -11.8682, 1.62 ) }
    dend_2 { pt3dadd( 41.7426, 106.71, -11.8106, 1.62 ) }
    dend_2 { pt3dadd( 42.6125, 107.66, -11.6455, 0.22 ) }
    dend_2 { pt3dadd( 43.0827, 108.155, -11.5876, 0.66 ) }
    dend_2 { pt3dadd( 43.3461, 108.433, -11.5708, 0.66 ) }
    dend_2 { pt3dadd( 45.1386, 110.401, -11.5276, 0.15 ) }
    dend_2 { pt3dadd( 46.0613, 111.467, -11.5376, 0.15 ) }
    dend_2 { pt3dadd( 46.6806, 112.221, -11.5704, 0.74 ) }
    dend_2 { pt3dadd( 46.9228, 112.531, -11.5915, 1.03 ) }
    dend_2 { pt3dadd( 47.1757, 112.879, -11.6218, 1.03 ) }
    dend_2 { pt3dadd( 48.3241, 114.578, -11.784, 0.22 ) }
    dend_2 { pt3dadd( 49.2557, 115.941, -11.9469, 0.22 ) }
    dend_2 { pt3dadd( 50.0121, 116.962, -12.0961, 1.4 ) }
    dend_2 { pt3dadd( 50.4497, 117.516, -12.1864, 1.69 ) }
    dend_2 { pt3dadd( 50.893, 118.037, -12.2811, 1.84 ) }
    dend_2 { pt3dadd( 51.4958, 118.686, -12.4147, 1.11 ) }
    dend_2 { pt3dadd( 54.3955, 121.481, -13.087, 0.22 ) }
    dend_2 { pt3dadd( 54.9849, 121.95, -13.2173, 0.22 ) }
    dend_2 { pt3dadd( 55.6626, 122.379, -13.3575, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_2 { pt3dadd( 56.1506, 122.625, -13.4597, 1.18 ) }
    dend_2 { pt3dadd( 56.604, 122.794, -13.5465, 1.18 ) }
    dend_2 { pt3dadd( 57.0559, 122.91, -13.6269, 0.59 ) }
    dend_2 { pt3dadd( 58.9787, 123.156, -13.9479, 0.22 ) }
    dend_2 { pt3dadd( 60.1573, 123.293, -14.1341, 0.59 ) }
    dend_2 { pt3dadd( 60.7478, 123.359, -14.2239, 0.59 ) }
    dend_2 { pt3dadd( 62.8565, 123.611, -14.5442, 0.15 ) }
    dend_2 { pt3dadd( 63.5202, 123.701, -14.6449, 0.88 ) }
    dend_2 { pt3dadd( 64.1154, 123.803, -14.7343, 1.47 ) }
    dend_2 { pt3dadd( 64.5175, 123.936, -14.7878, 1.47 ) }
    dend_2 { pt3dadd( 64.7848, 124.077, -14.8218, 1.47 ) }
    dend_2 { pt3dadd( 66.1133, 124.94, -14.993, 0.15 ) }
    dend_2 { pt3dadd( 66.5486, 125.269, -15.0501, 0.44 ) }
    dend_2 { pt3dadd( 66.9971, 125.637, -15.1057, 0.37 ) }
    dend_2 { pt3dadd( 69.763, 128.102, -15.4181, 0.22 ) }
    dend_2 { pt3dadd( 71.7243, 129.984, -15.5976, 0.22 ) }
    dend_2 { pt3dadd( 72.2621, 130.525, -15.6417, 0.96 ) }
    dend_2 { pt3dadd( 72.6581, 130.955, -15.6678, 1.4 ) }
    dend_2 { pt3dadd( 72.795, 131.108, -15.676, 1.4 ) }
    dend_2 { pt3dadd( 73.8967, 132.369, -15.7342, 0.22 ) }
    dend_2 { pt3dadd( 74.5285, 133.211, -15.7518, 0.22 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 21/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 35.1416, 11.2178, -29.7608, 0.15 ) }
    dend_20 { pt3dadd( 36.7999, 9.87763, -31.2884, 0.15 ) }
    dend_20 { pt3dadd( 37.5298, 9.31893, -31.8609, 1.18 ) }
    dend_20 { pt3dadd( 38.7273, 8.41243, -32.719, 0.37 ) }
    dend_20 { pt3dadd( 39.7272, 7.61872, -33.3967, 0.74 ) }
    dend_20 { pt3dadd( 40.8251, 6.72546, -34.0438, 0.88 ) }
    dend_20 { pt3dadd( 41.6351, 6.01859, -34.4645, 0.22 ) }
    dend_20 { pt3dadd( 42.1376, 5.54727, -34.7012, 0.22 ) }
    dend_20 { pt3dadd( 42.7173, 4.98714, -34.9284, 0.96 ) }
    dend_20 { pt3dadd( 43.3172, 4.4256, -35.1092, 1.11 ) }
    dend_20 { pt3dadd( 44.3078, 3.49122, -35.3711, 0.22 ) }
    dend_20 { pt3dadd( 45.3828, 2.44824, -35.6898, 0.22 ) }
    dend_20 { pt3dadd( 45.9225, 1.84862, -35.9172, 0.96 ) }
    dend_20 { pt3dadd( 46.3732, 1.25525, -36.1665, 1.62 ) }
    dend_20 { pt3dadd( 46.5811, 0.915332, -36.3242, 1.62 ) }
    dend_20 { pt3dadd( 46.95, 0.116803, -36.7441, 1.4 ) }
    dend_20 { pt3dadd( 47.2983, -0.876094, -37.3225, 1.18 ) }
    dend_20 { pt3dadd( 47.599, -2.07253, -38.0517, 0.44 ) }
    dend_20 { pt3dadd( 47.722, -2.82457, -38.4947, 0.29 ) }
    dend_20 { pt3dadd( 47.8115, -3.70172, -38.9797, 0.88 ) }
    dend_20 { pt3dadd( 47.8478, -4.44203, -39.3758, 0.88 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 42/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 35.1416, 11.2178, -29.7608, 0.29 ) }
    dend_19 { pt3dadd( 36.6765, 13.146, -31.4701, 0.29 ) }
    dend_19 { pt3dadd( 37.6909, 14.4203, -32.5996, 0.29 ) }
    dend_19 { pt3dadd( 38.7557, 15.758, -33.7854, 0.37 ) }
    dend_19 { pt3dadd( 39.8256, 17.102, -34.9767, 0.81 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 47/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -4.50183, -58.7428, 1.56747, 0.59 ) }
    dend_13 { pt3dadd( -4.23474, -59.6168, 1.50185, 0.59 ) }
    dend_13 { pt3dadd( -4.11639, -60.1416, 1.44006, 0.74 ) }
    dend_13 { pt3dadd( -4.04795, -60.5364, 1.38868, 0.96 ) }
    dend_13 { pt3dadd( -3.99773, -60.944, 1.33599, 1.11 ) }
    dend_13 { pt3dadd( -3.95838, -61.4132, 1.27595, 1.11 ) }
    dend_13 { pt3dadd( -3.9292, -61.895, 1.21263, 0.81 ) }
    dend_13 { pt3dadd( -3.93023, -62.558, 1.13741, 0.29 ) }
    dend_13 { pt3dadd( -3.92957, -62.94, 1.08303, 0.29 ) }
    dend_13 { pt3dadd( -3.92454, -63.5439, 0.995458, 0.59 ) }
    dend_13 { pt3dadd( -3.9176, -63.8978, 0.947895, 0.96 ) }
    dend_13 { pt3dadd( -3.90384, -64.2571, 0.905361, 1.11 ) }
    dend_13 { pt3dadd( -3.87751, -64.8408, 0.849169, 0.59 ) }
    dend_13 { pt3dadd( -3.83319, -65.6448, 0.776668, 0.29 ) }
    dend_13 { pt3dadd( -3.79144, -66.3365, 0.717645, 0.29 ) }
    dend_13 { pt3dadd( -3.75821, -66.7662, 0.67444, 0.29 ) }
    dend_13 { pt3dadd( -3.68379, -67.6814, 0.57439, 0.29 ) }
    dend_13 { pt3dadd( -3.65287, -68.1114, 0.527641, 0.52 ) }
    dend_13 { pt3dadd( -3.62999, -68.5414, 0.481239, 0.66 ) }
    dend_13 { pt3dadd( -3.60953, -69.1589, 0.419659, 1.11 ) }
    dend_13 { pt3dadd( -3.58857, -69.7525, 0.35747, 1.4 ) }
    dend_13 { pt3dadd( -3.57438, -70.2261, 0.309222, 1.62 ) }
    dend_13 { pt3dadd( -3.55094, -71.0524, 0.255006, 0.44 ) }
    dend_13 { pt3dadd( -3.52866, -71.7408, 0.23282, 0.44 ) }
    dend_13 { pt3dadd( -3.5142, -72.3103, 0.231242, 0.44 ) }
    dend_13 { pt3dadd( -3.51039, -72.7451, 0.244954, 0.66 ) }
    dend_13 { pt3dadd( -3.52146, -73.262, 0.282372, 0.66 ) }
    dend_13 { pt3dadd( -3.53597, -73.8879, 0.328508, 0.37 ) }
    dend_13 { pt3dadd( -3.55046, -74.4206, 0.366259, 0.37 ) }
    dend_13 { pt3dadd( -3.55566, -74.5961, 0.377749, 0.59 ) }
    dend_13 { pt3dadd( -3.573, -75.1596, 0.404188, 0.59 ) }
    dend_13 { pt3dadd( -3.58945, -76.0439, 0.403228, 0.29 ) }
    dend_13 { pt3dadd( -3.60201, -76.643, 0.374795, 0.74 ) }
    dend_13 { pt3dadd( -3.61626, -77.0745, 0.33773, 0.96 ) }
    dend_13 { pt3dadd( -3.63246, -77.5471, 0.293313, 0.96 ) }
    dend_13 { pt3dadd( -3.64337, -77.9961, 0.241933, 0.96 ) }
    dend_13 { pt3dadd( -3.66048, -78.9633, 0.115989, 0.29 ) }
    dend_13 { pt3dadd( -3.68053, -80.1659, -0.0539622, 0.29 ) }
    dend_13 { pt3dadd( -3.70927, -81.1956, -0.19364, 1.4 ) }
    dend_13 { pt3dadd( -3.7252, -81.6715, -0.255228, 1.92 ) }
    dend_13 { pt3dadd( -3.74272, -82.0801, -0.304122, 2.28 ) }
    dend_13 { pt3dadd( -3.77959, -82.6811, -0.367812, 2.28 ) }
    dend_13 { pt3dadd( -3.82043, -83.1596, -0.420964, 1.4 ) }
    dend_13 { pt3dadd( -3.93472, -84.2279, -0.558899, 0.22 ) }
    dend_13 { pt3dadd( -4.02263, -84.8622, -0.643765, 0.22 ) }
    dend_13 { pt3dadd( -4.09379, -85.2857, -0.699542, 0.88 ) }
    dend_13 { pt3dadd( -4.17026, -85.6879, -0.748377, 0.96 ) }
    dend_13 { pt3dadd( -4.30259, -86.3362, -0.837066, 0.22 ) }
    dend_13 { pt3dadd( -4.45464, -87.0515, -0.941668, 0.22 ) }
    dend_13 { pt3dadd( -4.58836, -87.6909, -1.03344, 0.74 ) }
    dend_13 { pt3dadd( -4.62956, -87.9058, -1.06094, 1.03 ) }
    dend_13 { pt3dadd( -4.67941, -88.2447, -1.09189, 1.03 ) }
    dend_13 { pt3dadd( -4.71022, -88.5539, -1.11025, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_13 { pt3dadd( -4.73619, -88.9865, -1.12102, 0.81 ) }
    dend_13 { pt3dadd( -4.74894, -89.8171, -1.13083, 0.22 ) }
    dend_13 { pt3dadd( -4.74537, -90.2158, -1.13269, 0.22 ) }
    dend_13 { pt3dadd( -4.72065, -90.9756, -1.13146, 0.22 ) }
    dend_13 { pt3dadd( -4.6885, -91.4629, -1.12184, 1.18 ) }
    dend_13 { pt3dadd( -4.65432, -91.8054, -1.10819, 1.77 ) }
    dend_13 { pt3dadd( -4.61714, -92.0948, -1.09253, 1.99 ) }
    dend_13 { pt3dadd( -4.53154, -92.6487, -1.05498, 1.47 ) }
    dend_13 { pt3dadd( -4.30282, -93.9498, -0.94987, 0.22 ) }
    dend_13 { pt3dadd( -4.02175, -95.37, -0.835708, 0.22 ) }
    dend_13 { pt3dadd( -3.86905, -96.0844, -0.776578, 0.59 ) }
    dend_13 { pt3dadd( -3.7674, -96.5407, -0.740418, 1.03 ) }
    dend_13 { pt3dadd( -3.69218, -96.8777, -0.716894, 1.25 ) }
    dend_13 { pt3dadd( -3.63025, -97.1438, -0.702839, 1.47 ) }
    dend_13 { pt3dadd( -3.37871, -98.2462, -0.648802, 0.22 ) }
    dend_13 { pt3dadd( -3.25095, -98.8222, -0.622702, 0.66 ) }
    dend_13 { pt3dadd( -3.20439, -99.0362, -0.61222, 0.96 ) }
    dend_13 { pt3dadd( -3.10108, -99.5038, -0.586105, 0.96 ) }
    dend_13 { pt3dadd( -2.87845, -100.495, -0.522839, 0.22 ) }
    dend_13 { pt3dadd( -2.43715, -102.354, -0.373241, 0.22 ) }
    dend_13 { pt3dadd( -2.30615, -102.876, -0.317645, 0.88 ) }
    dend_13 { pt3dadd( -2.24838, -103.084, -0.291947, 1.11 ) }
    dend_13 { pt3dadd( -2.18475, -103.29, -0.262474, 1.33 ) }
    dend_13 { pt3dadd( -2.0674, -103.634, -0.198692, 0.96 ) }
    dend_13 { pt3dadd( -1.91627, -104.085, -0.0701678, 0.44 ) }
    dend_13 { pt3dadd( -1.60916, -105.027, 0.26999, 0.22 ) }
    dend_13 { pt3dadd( -1.46445, -105.521, 0.462782, 0.66 ) }
    dend_13 { pt3dadd( -1.35829, -105.908, 0.619806, 0.88 ) }
    dend_13 { pt3dadd( -1.18994, -106.569, 0.905243, 0.22 ) }
    dend_13 { pt3dadd( -0.907066, -107.813, 1.47799, 0.22 ) }
    dend_13 { pt3dadd( -0.855131, -108.148, 1.63274, 0.22 ) }
    dend_13 { pt3dadd( -0.818267, -108.59, 1.81291, 1.62 ) }
    dend_13 { pt3dadd( -0.810168, -109.096, 1.97492, 2.5 ) }
    dend_13 { pt3dadd( -0.813868, -109.32, 2.01302, 2.73 ) }
    dend_13 { pt3dadd( -0.819353, -109.512, 2.01186, 2.73 ) }
    dend_13 { pt3dadd( -0.828006, -110.438, 1.84017, 1.25 ) }
    dend_13 { pt3dadd( -0.810196, -111.326, 1.61969, 0.29 ) }
    dend_13 { pt3dadd( -0.792693, -111.655, 1.52695, 0.29 ) }
    dend_13 { pt3dadd( -0.716682, -112.461, 1.28927, 0.66 ) }
    dend_13 { pt3dadd( -0.685256, -112.716, 1.21106, 1.11 ) }
    dend_13 { pt3dadd( -0.61958, -113.217, 1.05558, 1.25 ) }
    dend_13 { pt3dadd( -0.568463, -113.581, 0.950397, 1.25 ) }
    dend_13 { pt3dadd( -0.519925, -114.176, 0.813262, 1.03 ) }
    dend_13 { pt3dadd( -0.495946, -114.9, 0.664673, 0.22 ) }
    dend_13 { pt3dadd( -0.505291, -115.201, 0.616004, 0.22 ) }
    dend_13 { pt3dadd( -0.550968, -115.712, 0.516416, 0.22 ) }
    dend_13 { pt3dadd( -0.657805, -116.481, 0.351515, 1.84 ) }
    dend_13 { pt3dadd( -0.757752, -117.064, 0.21369, 3.32 ) }
    dend_13 { pt3dadd( -0.850788, -117.509, 0.100148, 3.54 ) }
    dend_13 { pt3dadd( -0.963372, -117.964, -0.0187032, 2.8 ) }
    dend_13 { pt3dadd( -1.27242, -119.165, -0.325485, 0.29 ) }
    dend_13 { pt3dadd( -1.3549, -119.453, -0.399318, 0.81 ) }
    dend_13 { pt3dadd( -1.45219, -119.735, -0.47357, 0.88 ) }
    dend_13 { pt3dadd( -1.707, -120.381, -0.64109, 0.22 ) }
    dend_13 { pt3dadd( -1.9389, -120.931, -0.793477, 0.22 ) }
    dend_13 { pt3dadd( -2.12377, -121.364, -0.91813, 0.88 ) }
    dend_13 { pt3dadd( -2.25031, -121.654, -1.0011, 1.25 ) }
    dend_13 { pt3dadd( -2.36627, -121.932, -1.08715, 1.25 ) }
    dend_13 { pt3dadd( -2.5399, -122.403, -1.23525, 0.59 ) }
    dend_13 { pt3dadd( -2.83422, -123.358, -1.52773, 0.22 ) }
    dend_13 { pt3dadd( -2.91913, -123.675, -1.62188, 0.74 ) }
    dend_13 { pt3dadd( -2.99163, -123.971, -1.71701, 0.74 ) }
    dend_13 { pt3dadd( -3.0369, -124.16, -1.77937, 0.52 ) }
    dend_13 { pt3dadd( -3.23118, -125.0, -2.05206, 0.22 ) }
    dend_13 { pt3dadd( -3.30698, -125.364, -2.16886, 1.03 ) }
    dend_13 { pt3dadd( -3.34529, -125.57, -2.23528, 1.25 ) }
    dend_13 { pt3dadd( -3.47598, -126.602, -2.56728, 0.22 ) }
    dend_13 { pt3dadd( -3.50179, -127.116, -2.72672, 0.22 ) }
    dend_13 { pt3dadd( -3.49902, -127.442, -2.83028, 0.59 ) }
    dend_13 { pt3dadd( -3.46032, -127.851, -2.96956, 0.59 ) }
    dend_13 { pt3dadd( -3.33683, -128.454, -3.16186, 0.22 ) }
    dend_13 { pt3dadd( -3.06439, -129.361, -3.42007, 0.22 ) }
    dend_13 { pt3dadd( -2.87226, -129.839, -3.53686, 1.03 ) }
    dend_13 { pt3dadd( -2.73055, -130.136, -3.59615, 1.33 ) }
    dend_13 { pt3dadd( -2.50876, -130.53, -3.64067, 1.33 ) }
    dend_13 { pt3dadd( -1.86227, -131.523, -3.66651, 0.22 ) }
    dend_13 { pt3dadd( -1.69937, -131.745, -3.65499, 0.52 ) }
    dend_13 { pt3dadd( -1.56207, -131.912, -3.6382, 0.52 ) }
    dend_13 { pt3dadd( -0.667702, -132.863, -3.44755, 0.22 ) }
    dend_13 { pt3dadd( 0.3156, -133.783, -3.16378, 0.22 ) }
    dend_13 { pt3dadd( 0.730128, -134.136, -3.02057, 1.47 ) }
    dend_13 { pt3dadd( 1.00123, -134.353, -2.91799, 2.21 ) }
    dend_13 { pt3dadd( 1.33611, -134.617, -2.78661, 1.62 ) }
    dend_13 { pt3dadd( 2.73178, -135.709, -2.22223, 0.29 ) }
    dend_13 { pt3dadd( 3.5606, -136.371, -1.89173, 0.29 ) }
    dend_13 { pt3dadd( 4.44581, -137.172, -1.55131, 0.22 ) }
    dend_13 { pt3dadd( 4.88838, -137.63, -1.38431, 1.03 ) }
    dend_13 { pt3dadd( 5.01597, -137.775, -1.33815, 1.25 ) }
    dend_13 { pt3dadd( 5.22083, -138.033, -1.26626, 1.25 ) }
    dend_13 { pt3dadd( 5.98388, -139.185, -1.03427, 0.29 ) }
    dend_13 { pt3dadd( 6.8419, -140.646, -0.794234, 0.22 ) }
    dend_13 { pt3dadd( 7.22172, -141.349, -0.691081, 1.92 ) }
    dend_13 { pt3dadd( 7.39595, -141.685, -0.642415, 2.36 ) }
    dend_13 { pt3dadd( 7.57122, -142.035, -0.590148, 2.58 ) }
    dend_13 { pt3dadd( 8.22682, -143.501, -0.383658, 0.22 ) }
    dend_13 { pt3dadd( 8.42749, -144.051, -0.314858, 0.22 ) }
    dend_13 { pt3dadd( 8.58671, -144.614, -0.261214, 0.22 ) }
    dend_13 { pt3dadd( 8.67017, -144.976, -0.232219, 0.74 ) }
    dend_13 { pt3dadd( 8.71686, -145.248, -0.214407, 0.88 ) }
    dend_13 { pt3dadd( 8.79847, -146.165, -0.190269, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_13 { pt3dadd( 8.8001, -146.556, -0.194309, 0.22 ) }
    dend_13 { pt3dadd( 8.78316, -147.031, -0.208339, 0.81 ) }
    dend_13 { pt3dadd( 8.75116, -147.437, -0.223514, 0.96 ) }
    dend_13 { pt3dadd( 8.7305, -147.623, -0.231318, 0.96 ) }
    dend_13 { pt3dadd( 8.54274, -149.129, -0.296346, 0.22 ) }
    dend_13 { pt3dadd( 8.48992, -149.558, -0.313256, 0.66 ) }
    dend_13 { pt3dadd( 8.45894, -149.812, -0.322961, 0.66 ) }
    dend_13 { pt3dadd( 8.1054, -152.556, -0.432528, 0.22 ) }
    dend_13 { pt3dadd( 7.87736, -154.219, -0.501045, 0.22 ) }
    dend_13 { pt3dadd( 7.82206, -154.613, -0.515981, 0.44 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 10/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -4.50183, -58.7428, 1.56747, 0.29 ) }
    dend_12 { pt3dadd( -5.29958, -59.9365, 1.52333, 0.29 ) }
    dend_12 { pt3dadd( -6.06061, -61.0448, 1.59123, 0.29 ) }
    dend_12 { pt3dadd( -6.44007, -61.5603, 1.64375, 0.44 ) }
    dend_12 { pt3dadd( -7.13037, -62.4515, 1.74894, 0.22 ) }
    dend_12 { pt3dadd( -7.42743, -62.8291, 1.79483, 0.52 ) }
    dend_12 { pt3dadd( -7.72617, -63.2078, 1.84064, 0.66 ) }
    dend_12 { pt3dadd( -8.75227, -64.4776, 2.01622, 0.22 ) }
    dend_12 { pt3dadd( -9.43368, -65.2721, 2.13867, 0.22 ) }
    dend_12 { pt3dadd( -10.1509, -66.053, 2.25185, 0.22 ) }
    dend_12 { pt3dadd( -10.7293, -66.6307, 2.32972, 0.66 ) }
    dend_12 { pt3dadd( -11.0929, -66.9608, 2.36738, 0.96 ) }
    dend_12 { pt3dadd( -11.5757, -67.362, 2.39514, 0.96 ) }
    dend_12 { pt3dadd( -12.1713, -67.7975, 2.39468, 0.52 ) }
    dend_12 { pt3dadd( -13.1764, -68.4755, 2.39797, 0.22 ) }
    dend_12 { pt3dadd( -13.572, -68.7109, 2.39947, 0.66 ) }
    dend_12 { pt3dadd( -14.3956, -69.1497, 2.40368, 0.66 ) }
    dend_12 { pt3dadd( -15.132, -69.5305, 2.40055, 0.29 ) }
    dend_12 { pt3dadd( -15.8934, -69.9097, 2.39036, 0.29 ) }
    dend_12 { pt3dadd( -16.227, -70.0783, 2.38318, 0.59 ) }
    dend_12 { pt3dadd( -16.8281, -70.3778, 2.36423, 0.59 ) }
    dend_12 { pt3dadd( -17.5017, -70.7119, 2.32124, 0.59 ) }
    dend_12 { pt3dadd( -18.9125, -71.3915, 2.18211, 0.22 ) }
    dend_12 { pt3dadd( -20.1683, -72.0075, 2.00823, 0.22 ) }
    dend_12 { pt3dadd( -21.374, -72.6057, 1.88083, 0.22 ) }
    dend_12 { pt3dadd( -22.4237, -73.1019, 1.81229, 0.22 ) }
    dend_12 { pt3dadd( -23.3694, -73.5524, 1.77852, 0.88 ) }
    dend_12 { pt3dadd( -24.0324, -73.8792, 1.76599, 1.18 ) }
    dend_12 { pt3dadd( -24.7593, -74.2619, 1.81762, 1.18 ) }
    dend_12 { pt3dadd( -26.7304, -75.4451, 2.13736, 0.22 ) }
    dend_12 { pt3dadd( -28.5085, -76.686, 2.60012, 0.22 ) }
    dend_12 { pt3dadd( -29.0223, -77.1153, 2.78677, 0.59 ) }
    dend_12 { pt3dadd( -29.5241, -77.6059, 3.01201, 0.59 ) }
    dend_12 { pt3dadd( -30.775, -78.9748, 3.61305, 0.37 ) }
    dend_12 { pt3dadd( -31.1929, -79.4765, 3.80937, 0.88 ) }
    dend_12 { pt3dadd( -31.7227, -80.205, 4.00808, 1.03 ) }
    dend_12 { pt3dadd( -32.0242, -80.6218, 4.10222, 1.03 ) }
    dend_12 { pt3dadd( -32.8384, -81.5831, 4.25456, 0.29 ) }
    dend_12 { pt3dadd( -33.481, -82.2177, 4.30216, 0.44 ) }
    dend_12 { pt3dadd( -34.0351, -82.7106, 4.27628, 0.66 ) }
    dend_12 { pt3dadd( -35.0738, -83.536, 4.22161, 0.29 ) }
    dend_12 { pt3dadd( -35.6786, -83.9577, 4.18483, 0.52 ) }
    dend_12 { pt3dadd( -36.0516, -84.1917, 4.15795, 0.59 ) }
    dend_12 { pt3dadd( -36.5197, -84.4527, 4.11181, 0.59 ) }
    dend_12 { pt3dadd( -43.0515, -92.2149, 4.08561, 0.59 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_23, dend_22, dend_15, dend_8, dend_5, dend_0, dend_17, dend_16, dend_10, dend_9, dend_7, dend_6, dend_4, dend_1, dend_21, dend_18, dend_14, dend_11, dend_3, dend_2, dend_20, dend_19, dend_13, dend_12]}
    ModelViewParmSubset_2 = new SectionList()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_23, dend_22, dend_15, dend_8, dend_5, dend_0, dend_17, dend_16, dend_10, dend_9, dend_7, dend_6, dend_4, dend_1, dend_21, dend_18, dend_14, dend_11, dend_3, dend_2, dend_20, dend_19, dend_13, dend_12]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_23 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_22 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_5 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_16 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_9 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_7 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_4 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_21 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_14 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_3 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_2 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_13 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_12 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_15 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_8 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_1 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_17 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_10 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_11 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_6 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_18 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_19 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_20 OneSecGrp_SectionRef_24.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_15, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_15 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.6794998E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cSTUT_7_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cSTUT_7_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_23 nseg = 3
    dend_22 nseg = 3
    dend_5 nseg = 3
    dend_16 nseg = 3
    dend_9 nseg = 3
    dend_7 nseg = 7
    dend_4 nseg = 5
    dend_21 nseg = 9
    dend_14 nseg = 11
    dend_3 nseg = 3
    dend_2 nseg = 7
    dend_13 nseg = 5
    dend_12 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cSTUT189_L4_LBC_11016afdad_0_0


