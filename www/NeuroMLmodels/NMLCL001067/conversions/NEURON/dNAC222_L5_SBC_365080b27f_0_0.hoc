// Cell: dNAC222_L5_SBC_365080b27f_0_0
/*
{
  "id" : "dNAC222_L5_SBC_365080b27f_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.327285, 12.2563, -2.37682, 3.20394", "-0.32997, 10.9888, -2.12879, 5.58325", "-0.332655, 9.7213, -1.88076, 6.08709", "-0.335339, 8.45379, -1.63272, 7.22603", "-0.338024, 7.18628, -1.38469, 8.89261", "-0.340709, 5.91877, -1.13666, 10.2823", "-0.343394, 4.65126, -0.888622, 11.3086", "-0.346078, 3.38375, -0.640589, 12.3784", "-0.348763, 2.11624, -0.392555, 13.7451", "-0.351448, 0.84873, -0.144521, 14.7054", "-0.354133, -0.41878, 0.103512, 15.1673", "-0.356817, -1.68629, 0.351546, 15.492", "-0.359502, -2.9538, 0.599579, 15.6089", "-0.362187, -4.22131, 0.847613, 15.0499", "-0.364872, -5.48882, 1.09565, 14.3371", "-0.367556, -6.75633, 1.34368, 13.225", "-0.370241, -8.02384, 1.59171, 11.7728", "-0.372926, -9.29135, 1.83975, 10.2754", "-0.375611, -10.5589, 2.08778, 7.58879", "-0.378295, -11.8264, 2.33581, 5.07363", "-0.38098, -13.0939, 2.58385, 2.91986" ]
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-1.63702, -11.5065, 3.2994, 4.13", "-1.63702, -11.5065, 3.2994, 4.13", "-1.5193, -12.4979, 3.64542, 4.13", "-1.34705, -13.9486, 4.15171, 3.76", "-1.07465, -16.2427, 4.95239, 3.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992178869266
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-0.0870214, -4.76153, -15.4506, 1.69", "-0.0319323, -4.77157, -15.4506, 1.69", "0.139142, -4.80523, -15.4506, 1.69", "0.829189, -4.94788, -15.4463, 1.69", "1.83378, -5.19236, -15.4072, 1.69", "1.90357, -5.21234, -15.4132, 1.69", "3.00179, -5.62701, -15.657, 1.69", "3.05337, -5.65397, -15.6806, 1.69", "3.70729, -6.25539, -16.492, 1.84", "3.63324, -6.75268, -17.642, 1.84", "3.05879, -7.22542, -19.3736, 1.99", "2.49345, -7.60987, -20.8773, 1.99", "1.8238, -7.97788, -22.4401, 1.99", "0.784423, -8.44942, -24.6244, 2.14", "-0.387044, -8.85777, -26.7923, 2.43", "-2.33406, -9.3409, -30.0039, 2.87" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992178869266
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "0.632978, 10.562, -5.6406, 2.58", "0.632978, 10.562, -5.6406, 2.58", "1.14505, 10.9743, -5.84458, 2.28", "1.67091, 11.426, -6.03331, 2.21", "2.68275, 12.4178, -6.36822, 0.81", "3.83806, 13.7594, -6.72773, 0.81", "4.41598, 14.4985, -6.89921, 1.25", "5.09133, 15.5246, -7.05962, 1.99", "5.12092, 15.5856, -7.06402, 1.99", "5.39401, 16.5956, -7.04899, 2.14", "5.48064, 17.6262, -6.96435, 2.14", "5.47777, 17.6938, -6.95885, 2.14", "5.36537, 18.9115, -6.89411, 1.84", "5.2084, 20.0736, -6.91573, 1.4", "4.92135, 21.643, -7.03682, 0.81", "4.66479, 22.6987, -7.21341, 0.81", "4.27462, 24.035, -7.53955, 1.11", "4.25635, 24.089, -7.55816, 1.11", "3.86452, 25.0908, -8.02329, 1.69", "3.40521, 26.1779, -8.64095, 1.77", "3.03806, 27.1047, -9.25216, 1.18", "3.02532, 27.1528, -9.28547, 1.18", "2.96892, 27.9836, -9.81815, 0.88", "3.05833, 28.6383, -10.1739, 0.74", "3.10309, 28.7508, -10.2201, 0.74", "3.56688, 29.532, -10.4443, 0.74", "4.2478, 30.5205, -10.6304, 0.88", "4.77208, 31.2397, -10.7281, 1.69", "5.14071, 31.7349, -10.7656, 1.92", "5.446, 32.1711, -10.7926, 2.21", "5.76207, 32.6705, -10.8162, 1.84", "6.13445, 33.3855, -10.8355, 1.25", "6.47241, 34.2578, -10.8846, 0.81", "6.68963, 35.0429, -10.9823, 0.81", "6.79194, 35.8176, -11.1603, 1.11", "6.78722, 35.8787, -11.1896, 1.11", "6.65936, 36.386, -11.5775, 1.11", "6.32044, 37.241, -12.4009, 0.59", "6.14797, 37.5872, -12.7883, 0.59", "5.7641, 38.2608, -13.6851, 0.52", "5.01486, 39.4796, -15.4512, 1.99", "4.65107, 40.0488, -16.3195, 3.02", "4.47754, 40.3027, -16.7433, 3.02", "4.44766, 40.3426, -16.8142, 3.02", "3.92451, 41.0361, -18.1198, 2.73" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992178869266
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "2.77298, 7.82597, 1.3594, 1.47", "3.15069, 8.12112, 1.38654, 1.47", "3.92046, 8.68056, 1.52933, 1.25", "4.17052, 8.85641, 1.58522, 1.62", "4.63993, 9.15134, 1.6923, 1.92", "5.18052, 9.46939, 1.81639, 1.69", "5.99207, 9.85439, 2.04987, 0.88", "6.81952, 10.1102, 2.56352, 0.88", "6.8541, 10.1191, 2.60522, 0.88", "7.20426, 10.2082, 3.2323, 0.81", "7.21961, 10.2138, 3.27716, 0.81", "7.48702, 10.4548, 4.71338, 1.03", "7.64568, 11.0318, 7.19884, 1.11", "7.61427, 11.4636, 8.59732, 1.11", "7.60933, 11.4853, 8.64711, 1.11", "7.42252, 12.0486, 9.6412, 1.33", "7.20443, 12.6586, 10.3949, 1.99", "7.04732, 13.0888, 10.7231, 2.73", "6.95345, 13.4771, 10.9227, 2.65", "6.88351, 14.2774, 11.2981, 2.36", "6.88619, 14.3186, 11.3163, 2.36", "7.13467, 15.4001, 11.7492, 0.81", "7.3878, 16.076, 12.0188, 0.59", "7.98772, 17.3217, 12.4877, 0.44", "8.48913, 18.1523, 12.7501, 0.44", "8.99589, 18.8465, 12.8899, 1.18", "9.41176, 19.3431, 12.9522, 1.99", "9.84459, 19.8038, 13.0382, 2.65", "10.0862, 20.0593, 13.0996, 2.65", "10.7603, 20.8097, 13.3551, 1.77", "11.4088, 21.5561, 13.7634, 0.44", "12.045, 22.3305, 14.2898, 0.44", "13.1719, 23.7932, 15.4908, 1.25", "13.4949, 24.2558, 15.9062, 2.43", "14.0179, 25.0879, 16.6767, 2.43", "14.4196, 25.8075, 17.3771, 2.21", "14.7107, 26.3988, 17.9371, 1.25", "15.045, 27.1686, 18.5444, 0.52", "15.2825, 27.7325, 18.8536, 0.52", "15.5721, 28.4169, 19.147, 0.52", "15.5922, 28.464, 19.1593, 0.52", "15.8871, 29.1058, 19.2839, 0.88", "16.1962, 29.7267, 19.3826, 1.25", "16.4781, 30.2717, 19.422, 1.69", "16.689, 30.6538, 19.4576, 1.69", "16.7279, 30.7236, 19.466, 1.69", "17.1092, 31.3848, 19.5621, 1.69" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992178869266
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-3.16702, 10.657, -3.0206, 1.62", "-3.16702, 10.657, -3.0206, 1.62", "-3.43475, 11.1271, -2.6491, 1.4", "-3.91869, 11.9801, -1.90585, 1.4", "-4.2508, 12.5597, -1.41775, 1.4", "-4.54476, 13.0812, -0.991057, 1.69", "-4.96259, 13.8186, -0.400624, 1.99", "-5.41383, 14.6111, 0.21085, 2.36", "-5.85383, 15.3813, 0.775883, 3.09", "-6.29515, 16.1083, 1.2536, 3.32", "-6.70691, 16.7489, 1.60199, 3.09", "-7.08029, 17.2814, 1.80594, 2.43", "-7.55455, 17.9044, 1.88201, 1.4", "-7.85174, 18.2701, 1.86859, 1.33", "-8.32707, 18.814, 1.75502, 1.18", "-8.78616, 19.2908, 1.57686, 1.4", "-9.40996, 19.8704, 1.21388, 1.69", "-10.1347, 20.4944, 0.652971, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992178869266
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.38098, -13.0939, 2.58385, 1.02029", "-0.412752, -28.0939, 2.58385, 1.02029", "-0.444525, -43.0938, 2.58385, 1.02029" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-1.07465, -16.2427, 4.95239, 1.99", "-0.11914, -17.6435, 4.88025, 1.99", "0.87513, -18.9981, 4.87914, 1.62", "0.927695, -19.0675, 4.88092, 1.62", "2.12842, -20.6382, 5.00235, 1.18", "2.80358, -21.5364, 5.09163, 1.18", "3.6763, -22.7282, 5.22005, 1.18", "4.91359, -24.4551, 5.45252, 1.18", "5.9475, -25.9621, 5.68166, 1.47", "7.0199, -27.6473, 5.95315, 2.21", "7.92997, -29.1417, 6.22405, 2.73", "8.79659, -30.6479, 6.50202, 2.8", "9.55305, -32.0478, 6.75918, 2.95", "10.2858, -33.5426, 7.0149, 2.95", "10.6246, -34.3096, 7.14007, 2.95" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-1.07465, -16.2427, 4.95239, 1.18", "-2.6311, -17.3434, 7.16083, 1.18", "-3.76285, -18.1438, 8.76669, 1.18", "-4.46176, -18.6381, 9.75837, 1.69", "-5.03426, -19.0429, 10.5707, 2.36", "-5.37876, -19.2865, 11.0595, 2.73" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-2.33406, -9.3409, -30.0039, 0.66", "-0.500256, -10.9121, -31.6086, 0.66", "0.587748, -11.767, -32.452, 0.74", "1.36239, -12.3226, -33.0839, 0.74", "1.99957, -12.7374, -33.6222, 0.74", "2.05035, -12.7678, -33.6661, 0.74", "3.27972, -13.4389, -34.7512, 0.52", "3.88637, -13.5564, -35.2353, 0.52", "4.62114, -13.3845, -36.106, 0.44", "5.06045, -13.1556, -36.7983, 0.44", "5.17873, -13.0976, -36.9934, 0.44", "5.61292, -12.9587, -37.6272, 0.44", "6.68484, -12.7381, -39.1515, 0.88", "6.72921, -12.7354, -39.2115, 0.88", "7.70869, -12.789, -40.4228, 1.11", "9.04024, -12.9505, -41.9971, 1.84", "10.5629, -13.1959, -43.7018, 2.14", "12.9714, -13.677, -46.259, 0.29", "13.8144, -13.8652, -47.0811, 0.29", "14.4678, -14.0066, -47.6566, 1.03", "14.5353, -14.0216, -47.7061, 1.03", "15.0713, -14.1693, -48.0189, 1.33", "15.1343, -14.1878, -48.0552, 1.33", "15.7882, -14.3373, -48.4884, 1.18", "16.9014, -14.4757, -49.375, 0.37", "17.6439, -14.5015, -50.0706, 0.37", "18.8535, -14.4354, -51.4285, 0.52", "20.3684, -14.2593, -53.4033, 0.74", "21.1479, -14.1641, -54.4986, 1.62", "21.5706, -14.1049, -55.1297, 1.92", "22.3281, -13.9761, -56.2954, 2.43", "23.5693, -13.6784, -58.1415, 1.69", "24.685, -13.3012, -59.7915, 0.37", "25.216, -13.1118, -60.5619, 0.37", "25.5835, -12.9877, -61.0843, 0.37", "26.0713, -12.8478, -61.7822, 1.11", "26.6345, -12.7324, -62.4867, 1.33", "28.5451, -12.3766, -64.4492, 0.22", "28.6092, -12.366, -64.5056, 0.22", "29.2361, -12.3105, -65.0162, 0.22", "30.0593, -12.3844, -65.6055, 0.22", "31.1185, -12.6072, -66.2602, 0.88", "32.2064, -12.8777, -66.9093, 1.55", "32.893, -12.9903, -67.495, 1.77", "34.0622, -13.0225, -69.044, 0.22", "34.7254, -12.9415, -70.2747, 0.22", "35.2616, -12.8202, -71.4505, 1.47", "35.9478, -12.6408, -73.1212, 2.43", "37.9617, -12.0033, -78.3297, 1.99", "39.142, -11.5349, -81.6684, 1.77", "40.4976, -10.8498, -85.8987, 0.22", "40.5153, -10.8387, -85.9592, 0.22", "40.8078, -10.6393, -87.0698, 0.22", "41.0514, -10.4711, -88.0525, 1.18" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-2.33406, -9.3409, -30.0039, 1.03", "-3.58255, -11.4257, -30.7241, 1.03", "-4.29679, -13.0997, -31.1617, 0.88", "-4.33112, -13.1986, -31.1838, 0.88", "-4.66436, -14.4564, -31.4175, 0.88", "-4.79945, -15.608, -31.6849, 1.69", "-4.8365, -16.6095, -31.9252, 1.84", "-4.7717, -17.2049, -32.0785, 1.99", "-4.76343, -17.2727, -32.0972, 1.99", "-4.70256, -18.1088, -32.3777, 1.69", "-4.71704, -20.3758, -33.3308, 1.03", "-4.99205, -21.7564, -34.2158, 0.88", "-5.37538, -22.7105, -34.9935, 0.66", "-5.65482, -23.2593, -35.4853, 0.66", "-6.1801, -24.0652, -36.289, 0.52", "-6.73369, -24.5949, -36.9582, 0.52", "-8.74625, -25.5256, -38.7016, 1.77", "-9.2686, -25.6702, -39.1676, 1.77" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "3.92451, 41.0361, -18.1198, 0.52", "5.07101, 41.6479, -20.3457, 0.52", "5.26344, 41.7462, -20.7047, 0.52", "5.62287, 41.9691, -21.4619, 0.37", "6.06992, 42.3281, -22.5022, 1.4", "6.16737, 42.4357, -22.759, 1.55", "6.98498, 43.5697, -25.1094, 0.74", "7.08037, 43.8054, -25.5071, 0.74", "7.33254, 44.7833, -27.0224, 0.29", "7.39874, 45.2877, -27.7197, 0.29", "7.42156, 46.1313, -28.7709, 1.92", "7.39531, 46.4729, -29.1478, 2.28", "7.20211, 47.7591, -30.3811, 0.22", "7.19322, 47.8297, -30.4496, 0.22", "7.17452, 48.137, -30.7385, 0.22", "7.21828, 48.9651, -31.5956, 1.18", "7.26153, 49.29, -31.9459, 1.77", "7.49045, 50.6872, -33.3855, 0.22", "7.64781, 51.4864, -34.1484, 1.84", "7.733, 51.8774, -34.5026, 2.21", "8.0762, 53.1793, -35.5897, 0.22", "8.08907, 53.2184, -35.6171, 0.22", "8.42601, 54.0784, -36.1182, 0.22", "8.44806, 54.1265, -36.1369, 0.22", "8.78416, 54.7428, -36.3467, 0.66", "9.11351, 55.2767, -36.6186, 0.88", "9.57019, 55.9768, -37.0363, 0.22", "10.0093, 56.6048, -37.4942, 1.99", "10.2422, 56.925, -37.7799, 2.5", "10.8571, 57.8235, -38.6828, 0.22", "11.7399, 59.2094, -40.2215, 0.59", "11.836, 59.3915, -40.4385, 0.59", "11.8488, 59.4221, -40.476, 0.59", "12.0832, 60.1878, -41.3472, 0.96", "12.1774, 60.5896, -41.7653, 1.11", "12.2511, 60.9819, -42.1179, 0.96", "12.4216, 61.8647, -42.8109, 0.22", "12.457, 61.9926, -42.9683, 0.22", "12.6116, 62.4407, -43.6789, 0.22", "12.7618, 62.8135, -44.4178, 1.11", "12.9391, 63.2747, -45.5697, 1.4", "13.071, 63.6183, -46.5546, 2.06", "13.6292, 64.9734, -50.738, 1.18", "13.8449, 65.48, -52.4198, 1.18", "14.124, 66.1124, -54.7514, 1.4", "14.4806, 66.9342, -58.0393, 1.55", "14.4854, 66.9451, -58.0889, 1.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "3.92451, 41.0361, -18.1198, 0.52", "4.09962, 43.4574, -17.8395, 0.52", "4.23287, 44.9793, -17.6759, 0.52", "4.39349, 46.6102, -17.6466, 1.18", "4.55274, 47.9355, -17.6937, 1.99", "4.63887, 48.4901, -17.7285, 2.28", "4.79674, 49.1684, -17.7792, 1.84", "5.04903, 49.8334, -17.8477, 1.55", "5.77008, 51.478, -18.1, 0.88", "6.27913, 52.621, -18.3898, 0.29", "6.70664, 53.6165, -18.6534, 0.29", "7.23696, 55.0809, -19.0903, 0.29", "7.27808, 55.2021, -19.1326, 0.29", "7.58134, 56.2104, -19.4994, 0.29", "8.10569, 58.4109, -20.2759, 1.92", "8.28818, 59.7047, -20.7377, 2.21", "8.38288, 61.6722, -21.4903, 0.29", "8.33495, 63.3281, -22.1409, 0.29", "8.17118, 64.6929, -22.7253, 0.29", "7.89339, 65.8618, -23.2434, 0.29", "7.31721, 67.4625, -23.9356, 1.84", "6.63643, 68.9006, -24.5645, 2.58", "6.39657, 69.3049, -24.7355, 2.5", "4.37268, 72.1687, -25.9872, 0.22", "3.26415, 73.5875, -26.6547, 0.22", "2.52667, 74.4813, -27.0741, 0.96", "2.12844, 74.9364, -27.2851, 1.18", "1.76486, 75.3395, -27.4541, 1.18", "0.503915, 76.7247, -28.0245, 0.29", "-0.158788, 77.4372, -28.2976, 0.29", "-1.46183, 78.8619, -28.9016, 0.29", "-3.17397, 80.7578, -29.7441, 2.21", "-3.76325, 81.4243, -30.0397, 2.65" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "17.1092, 31.3848, 19.5621, 0.29", "17.7111, 32.9636, 19.4475, 0.29", "18.1317, 34.1025, 19.4468, 0.59", "18.4044, 34.8106, 19.5381, 0.74", "18.8753, 36.0272, 19.7553, 0.22", "19.3199, 37.1843, 19.9814, 0.22", "20.0072, 38.985, 20.3444, 2.28", "20.2346, 39.6123, 20.5115, 2.28", "21.036, 41.8339, 21.1509, 0.29", "21.2248, 42.348, 21.3077, 0.29", "21.7433, 43.7515, 21.7557, 0.22", "21.8861, 44.1286, 21.8646, 0.88", "21.9472, 44.2709, 21.8942, 0.88", "22.1226, 44.6393, 21.9487, 0.88", "22.2306, 44.8446, 21.9587, 0.88", "22.6127, 45.5175, 22.0243, 0.52", "22.8664, 45.983, 22.1501, 0.15", "23.2125, 46.6647, 22.3894, 0.15", "23.3668, 47.0179, 22.5266, 0.15", "23.7072, 47.9017, 22.8753, 0.81", "23.8447, 48.3671, 23.0792, 0.96", "24.1552, 49.8073, 23.7715, 0.15", "24.1696, 49.8988, 23.8184, 0.15", "24.3578, 51.1203, 24.4488, 1.55", "24.476, 51.7827, 24.7896, 2.28", "24.9244, 53.8456, 25.8763, 0.22", "25.2847, 55.281, 26.7012, 2.65", "25.8407, 57.2901, 27.8965, 0.29", "26.059, 57.9833, 28.3265, 0.15", "26.2214, 58.4653, 28.6403, 0.15", "26.9243, 60.3813, 29.9323, 2.58", "27.8031, 62.3934, 31.3134, 0.15", "27.9927, 62.773, 31.5839, 0.37", "28.2403, 63.2233, 31.9269, 0.22" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "17.1092, 31.3848, 19.5621, 0.29", "15.8738, 32.3556, 20.1528, 0.29", "15.0792, 33.0897, 20.5232, 0.29", "14.6335, 33.5723, 20.7262, 0.29", "14.2229, 34.0679, 20.9096, 0.88", "14.187, 34.1272, 20.9254, 0.88", "13.9883, 34.5687, 21.0583, 0.88", "13.9393, 34.7774, 21.1035, 0.88", "13.9181, 35.0578, 21.1691, 0.88", "13.9183, 35.1341, 21.1941, 0.88", "13.9628, 36.1613, 21.5745, 0.44", "14.0152, 37.0134, 21.8929, 0.44", "14.0191, 37.0772, 21.9232, 0.44", "14.0206, 37.863, 22.3247, 0.44", "13.9645, 39.1238, 23.1111, 1.77", "13.9617, 39.6507, 23.4682, 2.65", "13.9851, 40.1254, 23.8103, 3.02", "14.2164, 42.2341, 25.3098, 0.22", "14.4514, 43.3356, 26.1488, 1.03", "14.9057, 44.872, 27.3671, 0.29", "15.304, 45.9411, 28.2633, 0.22", "15.586, 46.5758, 28.8124, 1.92", "15.925, 47.215, 29.3553, 2.28", "16.9983, 48.8634, 30.6793, 0.22", "17.2912, 49.3175, 31.0972, 0.22", "17.8011, 50.2763, 32.0887, 1.11", "17.923, 50.6175, 32.4883, 1.55", "18.0357, 51.0687, 33.0814, 1.84", "18.0409, 51.11, 33.1407, 1.84", "18.1099, 53.13, 36.19, 0.29", "18.0758, 54.0627, 37.6598, 0.29", "17.9787, 54.9298, 39.0183, 2.65", "17.8538, 55.6277, 40.1004, 2.36", "17.5567, 56.8219, 41.9119, 0.37", "17.5452, 56.8576, 41.9606, 0.37", "17.3141, 57.3536, 42.487, 0.22", "17.0339, 57.8151, 42.8863, 0.66", "16.6942, 58.3213, 43.2472, 0.96", "16.3426, 58.8343, 43.5524, 0.96", "15.8068, 59.6077, 43.9667, 0.22", "15.4171, 60.1933, 44.3197, 0.22", "14.7549, 61.2166, 45.0355, 2.43", "13.7072, 62.7561, 46.3747, 0.22", "13.5417, 62.995, 46.6004, 0.88", "13.3485, 63.2803, 46.8754, 1.03", "12.6861, 64.2683, 47.8774, 0.66", "12.1192, 65.1886, 49.0695, 1.62", "11.7334, 66.0301, 50.2891, 1.62", "11.4947, 66.8455, 51.5087, 0.37", "11.4643, 67.183, 51.9986, 2.06", "11.4658, 67.219, 52.0483, 2.06", "11.7866, 69.739, 55.1271, 1.62", "11.9972, 70.7165, 56.2954, 0.22", "12.1653, 71.3185, 56.9974, 2.06", "12.8157, 73.1785, 59.3009, 0.29", "12.9156, 73.4575, 59.6404, 0.29", "13.2132, 74.3064, 60.5545, 0.22" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-10.1347, 20.4944, 0.652971, 1.18", "-11.7073, 22.1059, -1.96379, 1.18", "-12.1013, 22.4972, -2.51576, 1.18", "-12.6223, 22.999, -3.14645, 1.4", "-13.1678, 23.5203, -3.71557, 1.4", "-13.8636, 24.2307, -4.44147, 1.03", "-14.4757, 24.8914, -5.0575, 0.66", "-14.9904, 25.4728, -5.45774, 0.66", "-15.34, 25.9174, -5.73413, 1.11", "-15.8387, 26.614, -6.07542, 0.81", "-16.9474, 28.3225, -6.69757, 0.66", "-17.4355, 29.1223, -6.88262, 0.66", "-17.8093, 29.7783, -6.97173, 0.66", "-18.3456, 30.7587, -7.04339, 1.25", "-18.9081, 31.8244, -7.00599, 1.62", "-19.4014, 32.7656, -6.8552, 1.99", "-19.7658, 33.4495, -6.65434, 1.99", "-19.834, 33.5795, -6.61515, 1.99", "-20.14, 34.1764, -6.43971, 1.84", "-20.6125, 35.1277, -6.20431, 1.03", "-20.9736, 35.8959, -6.07567, 0.74", "-21.3783, 36.792, -5.96331, 0.74", "-21.6786, 37.4751, -5.88745, 0.44", "-21.8976, 37.9741, -5.83825, 0.59", "-22.1756, 38.5624, -5.81414, 0.59", "-22.4687, 39.1192, -5.83495, 0.59", "-22.5066, 39.1821, -5.84098, 0.59", "-22.9497, 39.826, -5.93822, 0.44", "-23.2828, 40.2658, -6.02338, 0.29", "-23.8877, 41.03, -6.2316, 0.29", "-24.3266, 41.613, -6.40999, 1.47", "-24.7869, 42.2885, -6.61891, 2.06", "-24.9371, 42.5712, -6.70038, 2.21", "-25.0416, 42.894, -6.80159, 2.21", "-25.1871, 43.8601, -7.10213, 1.18", "-25.1937, 44.9539, -7.41563, 0.37", "-25.1342, 45.5418, -7.58146, 0.37", "-24.9276, 46.6825, -7.86545, 0.37", "-24.6435, 48.0171, -8.19341, 1.33", "-24.5636, 48.4016, -8.26955, 1.77", "-24.5493, 48.4829, -8.28093, 1.77", "-24.5155, 48.9014, -8.29332, 1.77", "-24.5734, 49.8216, -8.18073, 0.81", "-24.7347, 50.8079, -7.93581, 0.29", "-24.8758, 51.615, -7.57642, 0.74", "-24.9511, 52.1216, -7.31387, 0.74", "-25.0916, 53.3515, -6.61476, 0.37", "-25.1534, 54.1725, -6.11013, 0.37", "-25.1694, 54.8201, -5.67469, 0.37", "-25.1194, 56.1065, -4.72092, 1.4", "-25.0473, 56.6107, -4.39325, 2.06", "-24.9873, 56.933, -4.21204, 2.5", "-24.8847, 57.4289, -3.98635, 2.5", "-24.877, 57.4876, -3.96344, 2.5", "-24.7941, 59.5531, -3.30442, 0.44", "-24.8871, 60.8391, -3.03667, 0.37", "-25.0031, 61.529, -2.9091, 0.37", "-25.0246, 61.6157, -2.89515, 0.37", "-25.4107, 62.8742, -2.73908, 0.37", "-25.4574, 63.0122, -2.72893, 0.37", "-25.6986, 63.6552, -2.73685, 0.37", "-25.7144, 63.7164, -2.7385, 0.37", "-25.7758, 64.3901, -2.83035, 1.47", "-25.7857, 65.1696, -2.98889, 2.21", "-25.762, 65.703, -3.12268, 2.65", "-25.7515, 66.2267, -3.26748, 2.5", "-25.7733, 67.9329, -3.76558, 0.29", "-25.8293, 68.6912, -4.03243, 0.29", "-25.933, 69.4048, -4.32266, 0.29", "-26.0566, 69.8948, -4.52237, 0.29", "-26.2356, 70.4571, -4.73471, 1.33", "-26.5016, 71.2017, -4.97605, 2.28", "-26.8621, 72.1528, -5.20279, 2.73", "-27.0451, 72.6876, -5.32055, 2.43", "-27.4315, 73.9601, -5.62631, 0.29", "-27.5946, 74.5061, -5.78214, 0.29", "-27.7299, 75.0045, -5.92646, 0.29", "-27.8301, 75.403, -6.03732, 0.29", "-28.0399, 76.3407, -6.23867, 0.88", "-28.1258, 76.7382, -6.35559, 1.55", "-28.3145, 77.448, -6.71096, 1.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-10.1347, 20.4944, 0.652971, 0.74", "-11.5419, 20.6718, 0.996325, 0.74", "-12.7132, 20.8621, 1.27156, 0.74", "-13.7784, 21.0524, 1.52445, 0.59", "-14.4202, 21.1793, 1.68034, 0.74", "-15.425, 21.3935, 1.93269, 0.74", "-16.1774, 21.5625, 2.12955, 1.03", "-17.155, 21.8131, 2.39391, 1.33", "-17.9545, 22.0154, 2.62436, 1.55", "-18.9118, 22.2351, 2.92551, 1.4", "-20.0637, 22.4731, 3.35091, 1.25", "-21.5035, 22.7823, 4.00173, 0.74", "-22.2304, 22.9672, 4.4016, 0.96", "-22.9819, 23.1905, 4.90219, 0.96", "-24.0313, 23.6021, 5.79364, 0.52", "-24.8886, 24.079, 6.76752, 0.52", "-25.4461, 24.5825, 7.67555, 0.88", "-25.7893, 25.0639, 8.43845, 0.59", "-25.8135, 25.1022, 8.48956, 0.59", "-26.1884, 25.7582, 9.22138, 0.29", "-26.5173, 26.1837, 9.57963, 0.29", "-27.3056, 26.6538, 9.83739, 0.74", "-28.0482, 26.9082, 9.92463, 0.96", "-29.477, 27.2208, 10.0203, 0.59", "-29.5687, 27.2332, 10.0233, 0.59", "-30.7212, 27.2984, 10.0254, 0.29", "-31.4816, 27.3036, 10.0196, 0.29", "-32.5335, 27.2512, 10.0189, 1.62", "-33.6198, 27.1377, 10.0951, 2.43", "-34.5226, 27.0115, 10.2352, 2.65", "-35.3106, 26.8868, 10.3928, 2.65", "-35.3769, 26.8769, 10.4088, 2.65", "-37.1559, 26.6798, 10.9356, 1.11", "-38.5093, 26.6193, 11.4373, 0.37", "-39.3694, 26.6633, 11.7994, 0.37", "-40.265, 26.8104, 12.2249, 0.37", "-41.0052, 27.0665, 12.6682, 0.37", "-41.7995, 27.5292, 13.2748, 0.81", "-42.3478, 28.0062, 13.8234, 1.47", "-42.7241, 28.392, 14.2849, 1.69", "-42.9486, 28.6147, 14.5888, 1.69", "-43.9054, 29.4535, 15.9684, 0.66", "-44.6313, 29.9802, 17.0352, 0.37", "-45.1197, 30.2722, 17.7612, 0.37", "-46.0089, 30.6447, 19.0216, 1.25", "-46.6687, 30.8016, 19.9835, 2.36", "-47.2406, 30.8954, 20.843, 2.36", "-47.2816, 30.9007, 20.9121, 2.36", "-47.6188, 30.9479, 21.5425, 2.21", "-48.4188, 31.121, 23.2407, 0.37", "-49.287, 31.3728, 25.3249, 0.59", "-49.8014, 31.5457, 26.6189, 0.37", "-50.6879, 31.8451, 28.7495, 1.18", "-50.9339, 31.9228, 29.2912, 1.4", "-51.4597, 32.0804, 30.3881, 1.25", "-51.4912, 32.0907, 30.4615, 1.25", "-51.8952, 32.2107, 31.5581, 0.52", "-52.324, 32.2779, 32.801, 2.14", "-52.7092, 32.3594, 33.9712, 2.95", "-53.2017, 32.4551, 35.6704, 1.92", "-53.9706, 32.6391, 38.2184, 1.03", "-54.8403, 32.9465, 41.0698, 0.44", "-55.0303, 33.0257, 41.7604, 0.44", "-55.5566, 33.2689, 43.7549, 0.44", "-56.2069, 33.5918, 46.2003, 2.36", "-57.0349, 34.0063, 48.8684, 0.22", "-57.4724, 34.2173, 49.9135, 0.66" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-0.444525, -43.0938, 2.58385, 0.361546", "-0.476297, -58.0938, 2.58385, 0.361546", "-0.508069, -73.0938, 2.58385, 0.361546" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "10.6246, -34.3096, 7.14007, 0.37", "11.1175, -34.8358, 6.64544, 0.37", "11.5255, -35.2029, 6.20707, 0.29", "11.7776, -35.4119, 5.93319, 0.29", "12.5269, -35.9392, 5.15204, 0.74", "12.5609, -35.9586, 5.11905, 0.74", "13.2025, -36.264, 4.53086, 0.66", "13.7849, -36.4657, 3.96193, 0.29", "13.8285, -36.4711, 3.92284, 0.29", "14.2538, -36.4338, 3.62237, 0.29", "14.6806, -36.3022, 3.44084, 0.74", "14.811, -36.2423, 3.40313, 0.74", "15.0661, -36.1077, 3.3699, 1.03", "15.1649, -36.0627, 3.3652, 1.03", "15.4179, -35.9934, 3.35362, 1.03", "15.961, -35.9372, 3.33066, 0.59", "16.6243, -35.9618, 3.30604, 0.22", "17.1906, -36.0424, 3.30271, 0.22", "17.6018, -36.1275, 3.30822, 0.88", "18.3812, -36.2905, 3.30007, 1.84", "18.7808, -36.3806, 3.29134, 2.14", "19.339, -36.5047, 3.28824, 2.36", "20.3098, -36.6736, 3.31292, 0.66", "21.0797, -36.7373, 3.35149, 0.59", "22.236, -36.7408, 3.43432, 0.52", "22.287, -36.7357, 3.43901, 0.52", "22.8852, -36.6134, 3.479, 1.33", "23.6102, -36.3733, 3.5039, 1.77", "24.0568, -36.1788, 3.53314, 1.77", "24.2319, -36.1042, 3.55187, 1.77", "24.8382, -35.8961, 3.63482, 1.25", "25.7176, -35.659, 3.73898, 0.52", "26.5588, -35.4939, 3.81224, 0.29", "27.4165, -35.3831, 3.8803, 0.29", "28.2461, -35.3085, 3.9596, 0.22", "29.0165, -35.2778, 3.95708, 0.22", "29.075, -35.277, 3.95107, 0.22", "29.4522, -35.2546, 3.86468, 1.03", "29.7673, -35.2305, 3.74692, 1.47", "30.175, -35.1804, 3.54727, 1.47", "31.4662, -34.9779, 2.84449, 0.59", "32.0139, -34.9001, 2.51818, 0.22", "32.6538, -34.8508, 2.15289, 0.22", "33.084, -34.8464, 1.91005, 0.22", "33.129, -34.8486, 1.886, 0.22", "33.7111, -34.9248, 1.62486, 0.22", "33.7573, -34.9324, 1.60474, 0.22", "34.4017, -35.0591, 1.23797, 1.03", "34.9487, -35.1875, 0.908191, 1.62", "34.9913, -35.1956, 0.881271, 1.62", "35.1926, -35.2315, 0.758966, 1.62", "36.409, -35.4349, 0.0854904, 0.15", "36.4544, -35.4445, 0.0630006, 0.15", "37.0523, -35.6109, -0.212963, 0.15", "37.1041, -35.6268, -0.234084, 0.15", "38.0152, -35.9126, -0.5796, 1.77", "38.6296, -36.1336, -0.766862, 2.73", "39.0084, -36.2756, -0.820726, 3.02", "41.0455, -37.0193, -0.957077, 0.22", "41.4544, -37.1571, -0.944195, 0.22", "41.4956, -37.17, -0.938494, 0.22", "42.5094, -37.4427, -0.633055, 0.22", "43.8786, -37.6938, -0.029764, 0.22", "43.9666, -37.7058, 0.0210023, 0.22", "44.5442, -37.7749, 0.452815, 1.55", "45.1127, -37.8435, 0.857539, 2.21", "45.6511, -37.9077, 1.20866, 1.4", "46.5968, -38.0098, 1.72812, 0.22", "47.2328, -38.1203, 2.0463, 0.22", "47.762, -38.2278, 2.33597, 0.22", "48.0729, -38.3086, 2.53696, 0.44", "48.1136, -38.3206, 2.56586, 0.44", "48.5212, -38.4648, 2.90514, 0.22", "49.4476, -38.8336, 3.73785, 1.62", "49.806, -38.993, 4.06636, 2.14", "51.1673, -39.6625, 5.29344, 0.22", "51.5392, -39.864, 5.62283, 1.47", "52.7407, -40.5659, 6.65121, 1.11", "53.1093, -40.8045, 6.94983, 1.33", "54.0953, -41.467, 7.6198, 0.22", "54.5833, -41.7912, 7.94223, 0.22", "54.843, -41.9583, 8.09998, 1.47", "55.0929, -42.1027, 8.2818, 2.14", "55.5686, -42.3473, 8.64125, 2.14", "56.7479, -42.9523, 9.63108, 0.22", "57.7517, -43.4622, 10.5461, 1.77", "57.9796, -43.5835, 10.7663, 2.36", "59.6418, -44.5197, 12.5022, 0.29", "60.175, -44.8352, 13.0785, 0.29", "60.5275, -45.0639, 13.4771, 0.29", "60.5578, -45.0868, 13.5111, 0.29", "60.852, -45.3225, 13.8218, 0.29", "61.8702, -46.1516, 14.8616, 2.28", "62.1788, -46.3957, 15.152, 2.65", "63.342, -47.2706, 16.2813, 0.22", "63.767, -47.5728, 16.6884, 0.22", "64.4959, -48.0562, 17.335, 0.96", "64.883, -48.2854, 17.6445, 1.47", "66.2408, -48.9707, 18.5326, 0.22", "66.9348, -49.2487, 18.9209, 0.81", "67.0321, -49.2781, 18.9647, 0.81", "68.247, -49.5388, 19.3808, 0.22", "68.8759, -49.6308, 19.5004, 0.22", "70.2547, -49.7719, 19.6863, 0.22", "70.9985, -49.7976, 19.7005, 0.22", "71.0501, -49.7972, 19.6985, 0.22", "72.2432, -49.7609, 19.6143, 0.96", "72.9664, -49.6963, 19.4876, 1.11" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "10.6246, -34.3096, 7.14007, 1.25", "9.98591, -35.8739, 7.19648, 1.25", "9.46479, -37.4686, 7.19657, 0.81", "9.18629, -38.7276, 7.13796, 0.81", "9.01916, -40.1869, 7.02853, 0.96", "8.97473, -41.6841, 6.86971, 0.74", "8.94105, -42.8192, 6.74931, 1.11", "8.99806, -43.5831, 6.60256, 1.69", "9.29166, -44.8319, 6.28962, 2.36", "9.69848, -45.7867, 5.99723, 2.65", "10.0883, -46.3738, 5.79049, 2.65" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-5.37876, -19.2865, 11.0595, 0.81", "-6.34809, -17.865, 10.8936, 0.81", "-7.07131, -16.689, 10.6422, 0.66", "-7.7795, -15.4675, 10.3436, 0.66", "-8.18537, -14.7877, 10.1276, 0.96", "-8.94578, -13.6219, 9.70686, 0.44", "-9.53172, -12.7749, 9.37766, 0.44", "-10.4504, -11.4995, 8.74597, 0.59", "-10.8209, -11.0853, 8.48358, 0.59", "-11.755, -10.4466, 7.94595, 0.59", "-12.5568, -10.1863, 7.61551, 0.59", "-12.6498, -10.1812, 7.59143, 0.59", "-13.5735, -10.2743, 7.42847, 0.59", "-14.822, -10.5101, 7.34713, 1.33", "-15.909, -10.7448, 7.34208, 1.69", "-17.0153, -10.9838, 7.43091, 1.55", "-18.3098, -11.2509, 7.70974, 0.88", "-19.4017, -11.4227, 8.30758, 0.44", "-20.3095, -11.5529, 9.17625, 0.44", "-20.6662, -11.626, 9.67705, 0.74", "-21.1369, -11.7859, 10.5698, 0.88", "-22.1572, -12.253, 12.8365, 1.03", "-23.7513, -13.1638, 16.7336, 0.52", "-24.4863, -13.6516, 18.6212, 1.25", "-25.1353, -14.1689, 20.3426, 1.25", "-25.6452, -14.6995, 22.008, 0.44", "-25.9824, -15.1401, 23.2943, 0.44", "-26.3568, -15.6623, 25.0176, 0.29", "-26.8234, -16.2981, 27.8525, 1.99", "-26.9628, -16.4524, 28.6559, 1.99", "-28.0373, -17.4591, 34.3465, 1.99", "-28.0557, -17.4743, 34.4396, 1.99", "-29.8188, -18.8641, 43.2812, 2.73", "-31.9701, -20.4584, 53.393, 1.4", "-32.3223, -20.6925, 54.8746, 1.25", "-32.7039, -20.9005, 56.213, 0.22", "-33.0075, -21.0491, 57.0521, 0.22", "-33.1534, -21.1299, 57.4193, 1.11", "-33.7439, -21.5152, 58.5232, 1.47", "-35.792, -23.0276, 61.4537, 1.18", "-36.3422, -23.4413, 62.3357, 1.99", "-37.6293, -24.3988, 64.5291, 0.22", "-38.4287, -24.9954, 65.8895, 0.22", "-38.6766, -25.1746, 66.289, 0.66", "-39.7359, -25.9127, 67.9278, 0.66", "-40.5308, -26.4233, 68.8944, 0.29", "-41.4317, -26.8996, 69.9714, 1.33", "-41.7563, -26.9665, 70.2645, 1.62", "-42.3747, -27.0152, 70.7868, 1.84" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-5.37876, -19.2865, 11.0595, 1.62", "-5.55818, -20.6319, 10.7764, 1.62", "-5.71255, -21.6928, 10.542, 1.33", "-5.90682, -23.0093, 10.2294, 0.88", "-6.11479, -24.518, 9.85207, 0.74", "-6.3531, -26.3163, 9.39849, 0.74", "-6.53731, -27.986, 8.9999, 2.14", "-6.66041, -29.5545, 8.66813, 2.21", "-6.71582, -31.43, 8.39429, 1.47", "-6.64713, -32.8803, 8.29691, 1.18", "-6.5129, -33.7222, 8.32689, 0.88", "-6.12257, -35.0211, 8.5973, 0.59", "-5.50403, -36.5148, 9.11714, 0.59", "-4.83771, -37.9322, 9.75825, 1.18", "-4.54608, -38.5334, 10.0972, 1.47", "-4.15197, -39.4318, 10.6635, 1.11", "-3.69841, -40.9657, 11.6054, 0.74", "-3.84924, -41.761, 11.9339, 0.44", "-4.59285, -42.6108, 12.0057, 0.44", "-5.40792, -43.2995, 11.9375, 0.52", "-6.36204, -43.9474, 11.8198, 0.52", "-7.28711, -44.5033, 11.677, 1.18", "-8.53868, -45.2454, 11.4536, 1.92", "-9.82217, -46.1076, 11.1994, 2.5", "-11.0244, -47.0819, 10.9261, 2.36", "-12.4051, -48.4163, 10.5676, 2.06", "-13.4752, -49.6197, 10.2477, 0.59", "-14.3938, -50.753, 9.97594, 0.52", "-15.2959, -51.9904, 9.71257, 0.44", "-16.1553, -53.3151, 9.40816, 1.4", "-16.8462, -54.5171, 9.13125, 1.84", "-17.5503, -55.9047, 8.80272, 1.84", "-18.0847, -57.0154, 8.53203, 1.69", "-18.6484, -58.2422, 8.22904, 1.18", "-19.1705, -59.4863, 7.90019, 0.74", "-19.451, -60.2752, 7.65548, 0.66", "-19.7843, -61.4484, 7.23156, 0.59", "-19.998, -62.4704, 6.7841, 0.52", "-20.1183, -63.1953, 6.40934, 0.37", "-20.3148, -64.4994, 5.69089, 0.29", "-20.5158, -65.7042, 5.01734, 0.29", "-20.5343, -65.7914, 4.96659, 0.29", "-21.0098, -67.4391, 4.00528, 1.77", "-21.4991, -68.8179, 3.31265, 2.36", "-21.5246, -68.8835, 3.28327, 2.36", "-21.8331, -69.6475, 3.00065, 2.58", "-22.1672, -70.4807, 2.71521, 2.58", "-22.7173, -71.8174, 2.24755, 1.84", "-23.2853, -73.2704, 1.75537, 0.81", "-23.7544, -74.5838, 1.32244, 0.52", "-24.1359, -75.7604, 0.97732, 0.44", "-24.6261, -77.3643, 0.563375, 0.44", "-25.0152, -78.7667, 0.294464, 0.37", "-25.238, -79.6946, 0.200423, 0.37", "-25.4286, -80.5918, 0.177095, 0.37", "-25.6616, -81.8272, 0.261328, 0.29", "-25.8096, -82.8504, 0.380608, 0.29", "-25.9789, -84.4773, 0.731296, 1.99", "-26.0824, -85.538, 1.04239, 2.95", "-26.1574, -86.1934, 1.26949, 2.95", "-26.3977, -88.3799, 2.07994, 0.59", "-26.5008, -89.6419, 2.59421, 0.44", "-26.5957, -91.3551, 3.36069, 0.37", "-26.6278, -92.5861, 3.93579, 0.37", "-26.5694, -93.7932, 4.51895, 1.69", "-26.4875, -94.4663, 4.86311, 2.58", "-26.2973, -95.475, 5.39754, 2.58", "-25.967, -97.1635, 6.26293, 0.29", "-25.749, -98.3249, 6.76221, 0.29", "-25.4892, -99.8747, 7.46355, 0.29", "-25.3122, -101.06, 8.02563, 0.66", "-25.2591, -101.499, 8.25026, 0.74", "-25.1471, -102.621, 8.84491, 0.29", "-25.0613, -103.686, 9.48506, 0.29", "-25.0227, -105.452, 10.5862, 1.4", "-25.0295, -106.038, 10.9275, 1.92", "-25.0254, -106.116, 10.9682, 1.92", "-24.9624, -106.549, 11.1778, 1.92", "-24.5801, -108.121, 11.8104, 0.22", "-24.5542, -108.202, 11.8381, 0.22", "-24.1899, -109.219, 12.1543, 0.66", "-24.0317, -109.63, 12.2878, 0.81", "-23.4696, -110.884, 12.694, 0.22", "-22.9144, -112.03, 13.0502, 2.14", "-22.4265, -112.959, 13.3187, 2.58", "-21.1852, -115.151, 13.9672, 0.22", "-20.5461, -116.231, 14.2952, 0.22", "-19.8061, -117.441, 14.6597, 0.22", "-19.2179, -118.359, 14.9227, 0.22", "-18.6186, -119.23, 15.1798, 2.36", "-17.6634, -120.553, 15.5331, 2.73" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "41.0514, -10.4711, -88.0525, 0.15", "44.1834, -11.2634, -108.849, 0.15", "44.4033, -11.3465, -110.258, 1.69", "44.5148, -11.3972, -110.956, 1.92", "44.5317, -11.4067, -111.054, 1.92", "45.1986, -11.8377, -114.62, 0.22", "45.3387, -11.9397, -115.298, 0.22", "45.8073, -12.5784, -116.132, 1.18", "45.8365, -12.6252, -116.197, 1.18", "46.3903, -13.5494, -117.589, 0.29", "46.6444, -13.9321, -118.184, 0.59", "47.1635, -14.6494, -119.309, 0.37", "48.1389, -15.7096, -121.184, 0.74", "48.1821, -15.7491, -121.263, 0.74", "49.032, -16.5565, -123.012, 0.15", "49.4269, -16.9356, -123.957, 0.15", "49.4559, -16.968, -124.032, 0.15", "49.6322, -17.1955, -124.529, 0.15", "49.6666, -17.2536, -124.629, 0.15", "50.114, -18.0323, -125.865, 0.15", "50.46, -18.6551, -126.788, 1.4", "50.7013, -19.0814, -127.412, 1.69", "51.7813, -20.9584, -130.119, 0.22", "52.1576, -21.5905, -131.033, 0.22", "52.618, -22.3582, -132.058, 0.22", "52.9685, -22.9043, -132.717, 0.96", "53.1062, -23.1379, -132.967, 0.96", "53.7589, -24.1917, -134.021, 0.22", "53.7894, -24.2418, -134.063, 0.22", "54.3761, -25.2317, -134.918, 0.22", "54.9035, -26.2665, -135.706, 1.55", "55.1969, -26.8221, -136.082, 1.99", "56.0401, -28.3808, -137.182, 0.29", "56.0757, -28.443, -137.228, 0.29", "56.5831, -29.3397, -137.989, 0.29", "57.1929, -30.5315, -139.092, 0.29", "57.3695, -30.9555, -139.534, 0.29", "57.9135, -32.5222, -141.487, 1.4", "58.0489, -33.037, -142.227, 1.69", "58.3587, -34.4141, -144.36, 0.29", "58.5098, -35.3708, -145.998, 0.29", "58.6023, -36.564, -148.142, 1.47", "58.5764, -37.8715, -150.508, 1.18", "58.4353, -39.0703, -152.614, 0.22", "58.3273, -39.5691, -153.447, 0.22", "58.0176, -40.5284, -154.931, 1.69", "57.8372, -40.9798, -155.567, 1.77", "57.2488, -42.1807, -156.883, 0.66", "56.8753, -42.8145, -157.437, 0.22", "56.3584, -43.6029, -158.057, 0.96", "55.826, -44.4078, -158.724, 0.22", "55.5986, -44.794, -159.123, 0.15", "55.2851, -45.4462, -160.025, 0.15", "54.9762, -46.2493, -161.247, 0.44", "54.7427, -46.8921, -162.328, 1.33", "54.5423, -47.4402, -163.315, 1.25", "53.7633, -49.1544, -166.709, 1.25", "53.186, -50.3122, -169.179, 0.15", "52.9601, -50.7301, -170.102, 0.15", "52.6086, -51.2637, -171.334, 0.81", "52.4541, -51.4713, -171.809, 0.96", "51.6878, -52.484, -173.909, 0.52", "51.0292, -53.3864, -175.571, 0.22", "50.7319, -53.8246, -176.337, 1.18", "49.7338, -55.5369, -179.337, 0.22", "49.4338, -56.1461, -180.367, 0.96", "48.9157, -57.4217, -182.422, 0.22", "48.7991, -57.8156, -182.996, 0.52", "48.7532, -57.9693, -183.211, 0.52", "48.334, -59.5701, -185.426, 0.52" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "41.0514, -10.4711, -88.0525, 1.55", "41.7623, -8.84086, -92.8552, 1.55", "41.947, -8.51878, -93.7698, 1.62", "43.2329, -6.77757, -98.5721, 0.22", "43.2624, -6.74399, -98.6633, 0.22", "43.6595, -6.37484, -99.7014, 1.33", "43.9062, -6.17431, -100.272, 1.25", "45.4906, -5.16791, -102.935, 0.22", "46.1779, -4.78496, -103.94, 1.18", "46.5609, -4.59607, -104.387, 1.33", "48.3266, -3.74884, -106.357, 0.22", "49.5799, -3.16663, -107.708, 1.84", "49.9515, -2.98135, -108.083, 1.84", "51.0684, -2.38095, -109.05, 0.29", "51.3565, -2.21384, -109.289, 0.74", "52.5482, -1.45946, -110.205, 0.22", "52.6722, -1.36764, -110.294, 0.22", "53.1823, -0.949191, -110.669, 0.88", "54.3334, 0.182634, -111.8, 0.22", "54.5473, 0.427349, -112.055, 0.52", "54.8955, 0.863717, -112.526, 0.22", "55.6536, 1.85693, -113.668, 1.92", "55.9808, 2.30874, -114.198, 1.92", "56.9397, 3.76595, -115.937, 0.22", "57.0833, 4.01417, -116.223, 0.88", "57.2079, 4.22477, -116.465, 0.88", "57.7524, 5.07119, -117.409, 0.22", "58.0259, 5.46842, -117.854, 0.22", "58.0556, 5.51567, -117.907, 0.22", "58.22, 5.73157, -118.167, 0.22", "58.9258, 6.55873, -119.254, 1.4", "59.0905, 6.73759, -119.495, 1.4", "59.9999, 7.6507, -120.754, 0.22", "60.375, 7.96099, -121.214, 0.96", "61.3116, 8.63975, -122.24, 0.22", "61.5805, 8.80546, -122.499, 0.22", "62.0151, 9.00225, -122.815, 0.66", "62.6827, 9.22194, -123.189, 0.66", "63.9199, 9.47663, -123.657, 0.22", "64.5431, 9.55407, -123.839, 1.11", "64.9579, 9.57556, -123.934, 1.4", "66.6845, 9.49995, -124.283, 0.22", "67.4682, 9.40096, -124.418, 0.22", "68.4184, 9.21519, -124.543, 0.96", "69.2168, 9.02539, -124.634, 1.47", "70.5421, 8.6761, -124.795, 0.22", "71.2376, 8.49736, -124.931, 0.22", "71.3604, 8.46516, -124.965, 0.22", "72.1176, 8.295, -125.225, 0.22", "73.1886, 8.08438, -125.649, 1.33", "73.6611, 8.01761, -125.857, 1.62", "75.3371, 7.87433, -126.66, 0.22", "76.0948, 7.82878, -127.025, 0.66", "76.539, 7.79891, -127.246, 0.66", "76.6753, 7.78726, -127.318, 0.66", "78.0141, 7.65107, -128.025, 0.22", "78.973, 7.52594, -128.607, 1.11", "79.6308, 7.42339, -129.028, 1.33", "81.0424, 7.18914, -130.002, 0.22", "82.0343, 7.03935, -130.741, 1.25", "82.4394, 6.98654, -131.108, 1.33", "84.3007, 6.76084, -133.026, 0.22", "84.5256, 6.73722, -133.277, 0.44", "84.6235, 6.7299, -133.397, 0.44", "85.3904, 6.6997, -134.443, 1.18", "87.1694, 6.72498, -137.038, 0.22", "87.5779, 6.75094, -137.666, 0.59" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-9.2686, -25.6702, -39.1676, 1.55", "-9.94189, -26.404, -41.0171, 1.55", "-10.5467, -26.9066, -42.5772, 0.22", "-10.8075, -27.1377, -43.2289, 0.22", "-11.2322, -27.5575, -44.4456, 2.36", "-11.544, -27.9121, -45.5912, 2.87", "-12.821, -29.2482, -50.7143, 0.81", "-12.8317, -29.2574, -50.767, 0.81", "-13.0256, -29.4337, -52.1346, 0.81", "-13.186, -29.7091, -54.7705, 2.06", "-13.1437, -29.9725, -57.5218, 1.25", "-12.9945, -30.2034, -59.5169, 0.81", "-12.559, -30.7988, -63.213, 0.96", "-12.5028, -30.9219, -63.9869, 1.47", "-12.4376, -31.1747, -65.6246, 0.22", "-12.4201, -31.301, -66.2995, 0.22", "-12.382, -31.6359, -68.159, 1.4", "-12.3395, -32.0303, -70.297, 1.03", "-12.3549, -32.3914, -72.1935, 1.69", "-12.3915, -32.8126, -74.4323, 1.4", "-12.3888, -33.2252, -76.6642, 1.4", "-12.2344, -33.9801, -80.6953, 1.84", "-11.9548, -34.5767, -83.7136, 0.15", "-11.796, -34.8184, -84.7566, 1.84", "-11.7181, -34.9228, -85.1314, 1.84", "-11.1845, -35.6903, -87.4019, 0.22", "-10.9633, -35.9984, -88.2741, 1.55", "-10.866, -36.0931, -88.5566, 1.77", "-10.3176, -36.4097, -90.0143, 0.22", "-10.1417, -36.4774, -90.4671, 0.22", "-9.71205, -36.6073, -91.5232, 1.77", "-7.71749, -37.0484, -96.2248, 1.25", "-6.83468, -37.1926, -98.225, 0.81", "-6.20514, -37.2823, -99.6127, 0.15", "-5.92406, -37.3128, -100.217, 0.37", "-5.42545, -37.379, -101.206, 0.22", "-4.71833, -37.4756, -102.422, 1.77", "-4.4985, -37.518, -102.729, 1.84", "-2.78834, -37.8868, -105.099, 0.96", "-2.21234, -38.0142, -105.87, 1.4", "-1.10153, -38.1974, -107.376, 0.22", "-0.870496, -38.2164, -107.679, 0.22", "-0.782363, -38.2154, -107.778, 0.22", "-0.101442, -38.1591, -108.429, 0.22", "0.310628, -38.102, -108.689, 1.18", "0.366259, -38.0951, -108.716, 1.18", "0.838062, -38.0329, -108.919, 1.18", "2.19897, -37.9301, -109.501, 0.29", "2.77878, -37.8993, -109.761, 0.44", "3.25057, -37.8718, -109.974, 0.44", "4.00839, -37.8237, -110.301, 0.22", "4.90024, -37.7637, -110.671, 1.47", "5.35955, -37.7364, -110.851, 1.62", "6.65096, -37.6626, -111.301, 0.22", "7.3271, -37.6231, -111.559, 0.22", "7.70383, -37.6203, -111.722, 0.59", "7.75211, -37.6281, -111.746, 0.59", "7.96998, -37.7294, -111.904, 0.59", "8.0528, -37.8086, -112.044, 0.59", "8.31327, -38.2512, -112.788, 0.15", "8.43063, -38.5013, -113.204, 1.18", "8.55571, -38.7989, -113.711, 1.18", "8.85007, -39.5922, -115.092, 0.44", "9.1781, -40.7362, -117.06, 0.22", "9.21434, -40.9854, -117.501, 0.22", "9.19515, -41.1423, -117.845, 0.74", "9.17324, -41.1787, -117.945, 0.74", "8.73689, -41.543, -119.211, 0.22", "8.52377, -41.675, -119.71, 0.22", "7.69703, -42.0655, -121.384, 1.47", "6.6332, -42.4512, -123.342, 1.33", "5.48126, -42.8129, -125.379, 0.59", "4.67454, -43.0272, -126.746, 0.44", "4.39862, -43.0805, -127.18, 0.44", "3.68754, -43.1878, -128.273, 0.22", "3.23963, -43.248, -128.876, 1.11" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-9.2686, -25.6702, -39.1676, 2.87", "-9.83486, -25.911, -39.3991, 2.87", "-10.8312, -26.3479, -39.7331, 2.73", "-12.5329, -27.0998, -40.2333, 0.29", "-12.7547, -27.1964, -40.3091, 0.29", "-14.0403, -27.7446, -40.7565, 0.29", "-15.3356, -28.2613, -41.2107, 1.55", "-15.9434, -28.4731, -41.3977, 2.21", "-16.222, -28.5561, -41.4902, 2.21", "-18.1172, -29.0681, -42.251, 0.22", "-18.7582, -29.2307, -42.5756, 0.22", "-19.3235, -29.3635, -42.9215, 0.66", "-19.5473, -29.4033, -43.0662, 0.81", "-20.8825, -29.5943, -43.9067, 0.22", "-21.4169, -29.6634, -44.2127, 0.22", "-22.3776, -29.7874, -44.7103, 1.84", "-22.8695, -29.86, -44.9712, 2.21", "-23.6548, -30.0145, -45.4486, 2.06", "-24.933, -30.3147, -46.3272, 0.29", "-25.4635, -30.4774, -46.7628, 0.29", "-26.5087, -30.8675, -47.7658, 1.69", "-26.93, -31.0577, -48.2209, 1.99", "-28.3524, -31.8061, -49.9114, 1.11", "-28.9376, -32.1968, -50.698, 1.11", "-29.7968, -32.9449, -52.0592, 0.29", "-30.0584, -33.2256, -52.5347, 0.29", "-30.1292, -33.3258, -52.6907, 0.52", "-30.295, -33.6318, -53.1173, 0.52", "-30.4128, -34.0331, -53.6425, 0.22", "-30.4486, -34.2994, -54.0023, 0.22", "-30.4498, -34.3338, -54.0489, 0.22", "-30.4375, -35.9013, -56.1154, 2.06", "-30.4376, -36.3229, -56.6506, 2.36", "-30.5195, -37.6564, -58.3151, 0.22", "-30.5529, -37.9736, -58.7307, 0.22", "-30.5967, -38.3466, -59.1974, 0.22", "-30.667, -39.0662, -60.0334, 1.33", "-30.7119, -39.5783, -60.6334, 1.47", "-30.8447, -40.5894, -61.8861, 0.22", "-31.1054, -41.5801, -63.3712, 0.22", "-31.2432, -42.0277, -64.1003, 1.4", "-31.3106, -42.2396, -64.4734, 1.69", "-31.6987, -43.6447, -67.0636, 0.22", "-31.8281, -44.2156, -68.2056, 1.92", "-32.1303, -45.576, -71.3486, 0.29", "-32.1983, -45.8545, -72.1026, 0.29", "-32.206, -45.895, -72.2219, 0.29", "-32.2467, -46.2047, -73.081, 0.74", "-32.2622, -46.784, -74.5407, 1.55", "-32.1762, -48.2043, -77.8565, 1.47", "-31.9915, -49.548, -80.6994, 0.29", "-31.947, -49.9001, -81.4306, 0.29", "-31.8726, -50.5539, -82.6948, 1.4", "-31.751, -51.713, -84.7107, 1.69", "-31.7037, -51.9984, -85.1402, 1.69", "-31.2347, -53.6668, -87.3456, 0.22", "-31.21, -53.7385, -87.444, 0.22", "-31.0904, -54.0409, -87.8935, 0.22", "-30.8895, -54.4909, -88.6109, 1.47", "-30.3629, -55.658, -90.4315, 0.22", "-30.2238, -55.9532, -90.8886, 1.4", "-29.7474, -56.8855, -92.4702, 1.4", "-29.3578, -57.6142, -93.7981, 0.22", "-28.9539, -58.3572, -95.4337, 1.62", "-28.9422, -58.3788, -95.4874, 1.62", "-28.8517, -58.5955, -96.0584, 1.62", "-28.5671, -59.6433, -98.9268, 0.15", "-28.5378, -59.8616, -99.5488, 1.4", "-28.627, -60.9311, -102.933, 1.11", "-28.631, -60.9472, -102.981, 1.11", "-28.8585, -61.5309, -104.531, 0.37", "-29.0022, -61.7951, -105.122, 0.74", "-29.1151, -61.9699, -105.426, 0.88", "-29.8632, -63.1421, -107.177, 0.22", "-30.1704, -63.7298, -107.765, 1.33", "-30.3766, -64.3312, -108.237, 1.11", "-30.5547, -65.0933, -108.756, 0.22", "-30.5623, -65.1416, -108.786, 0.22", "-30.6346, -66.0053, -109.222, 0.22", "-30.6286, -66.9491, -109.423, 0.22", "-30.4964, -68.3521, -109.643, 1.84" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "14.4854, 66.9451, -58.0889, 0.22", "13.9896, 68.0752, -58.4032, 0.22", "13.9538, 68.1617, -58.4253, 0.22", "13.7192, 68.8439, -58.6271, 0.22", "13.6083, 69.376, -58.8267, 0.66", "13.5996, 69.4585, -58.8603, 0.66", "13.6023, 69.7439, -58.9993, 0.66", "13.6118, 69.7855, -59.0223, 0.66", "13.783, 70.2843, -59.3218, 0.22", "14.1006, 70.922, -59.727, 0.88", "14.2308, 71.1421, -59.8608, 0.88", "14.6772, 71.8289, -60.243, 0.29", "14.7165, 71.8879, -60.2655, 0.29", "15.0192, 72.3749, -60.367, 0.29", "15.4168, 73.0937, -60.381, 1.03", "15.5784, 73.4212, -60.3477, 1.25", "15.9579, 74.2774, -60.2084, 0.37", "16.4365, 75.4038, -59.9602, 0.22", "16.814, 76.3392, -59.7344, 0.22", "17.1055, 77.1362, -59.5118, 0.81", "17.3143, 77.8167, -59.2853, 0.22", "17.3977, 78.1473, -59.1669, 0.52" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "14.4854, 66.9451, -58.0889, 0.81", "15.6309, 68.427, -59.0564, 0.81", "16.3263, 69.1639, -59.548, 0.22", "16.9043, 69.7417, -59.9053, 0.22", "17.5135, 70.3534, -60.2542, 1.18", "17.9778, 70.8153, -60.4836, 1.18", "18.0307, 70.8673, -60.5097, 1.18", "19.1636, 72.0, -60.9444, 0.29", "19.7126, 72.5019, -61.128, 0.44", "19.9876, 72.7395, -61.3335, 0.44", "20.6934, 73.3987, -62.0968, 0.22", "21.1338, 73.8535, -62.6892, 1.18", "21.3216, 74.0939, -63.195, 1.47", "21.4051, 74.2476, -63.6389, 1.47", "21.8612, 75.622, -67.9575, 0.52", "21.8964, 75.8279, -68.7151, 0.81", "21.8975, 75.9482, -69.2129, 0.81", "21.7069, 77.2665, -75.4064, 1.11", "21.4091, 77.9607, -79.3054, 0.59", "21.1934, 78.1869, -80.9238, 0.29", "20.7025, 78.3552, -83.1113, 0.74", "20.6756, 78.3539, -83.1981, 0.74", "20.2744, 78.197, -83.9816, 0.81", "19.1644, 77.4144, -84.7518, 0.29", "18.3284, 76.7348, -85.1037, 0.29", "17.0952, 75.6635, -85.5241, 0.29", "15.8055, 74.5692, -85.8399, 0.29", "14.4399, 73.4102, -86.1637, 0.22", "13.5846, 72.6899, -86.3518, 0.59", "13.3422, 72.4692, -86.3939, 0.59" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-3.76325, 81.4243, -30.0397, 0.22", "-5.98521, 83.0944, -28.8999, 0.22", "-6.51879, 83.4865, -28.6801, 0.66", "-7.53032, 84.2287, -28.3208, 0.22", "-8.55334, 84.9698, -27.9929, 1.4", "-9.10222, 85.3479, -27.8177, 1.4", "-11.2585, 86.8183, -27.1378, 0.22", "-12.4399, 87.5813, -26.8508, 0.22", "-14.168, 88.6755, -26.4788, 1.47", "-14.5285, 88.9076, -26.411, 1.84", "-16.8994, 90.4826, -26.0476, 0.22", "-17.2895, 90.7481, -25.9973, 0.52", "-18.559, 91.6605, -25.9135, 0.15", "-19.322, 92.2411, -25.8895, 0.88", "-20.2263, 92.9804, -25.9141, 0.22", "-21.4063, 94.0152, -26.0112, 1.84", "-21.8134, 94.3937, -26.0773, 1.99", "-23.6749, 96.1278, -26.3922, 0.22", "-24.2328, 96.6617, -26.4905, 1.11", "-24.709, 97.1191, -26.5639, 1.25", "-25.9016, 98.2195, -26.7006, 0.15", "-26.5544, 98.7984, -26.7321, 0.44", "-26.8144, 99.0208, -26.7298, 0.44", "-26.8948, 99.0874, -26.7235, 0.44", "-28.2161, 100.15, -26.5343, 0.15", "-29.0861, 100.87, -26.365, 0.15", "-29.1435, 100.92, -26.3504, 0.15", "-29.5756, 101.328, -26.239, 0.66", "-30.1128, 101.872, -26.1225, 0.81", "-31.2055, 103.041, -25.9463, 0.15", "-31.6208, 103.512, -25.9084, 0.15", "-32.5479, 104.627, -25.8704, 1.47", "-32.9816, 105.169, -25.8662, 1.47", "-33.7834, 106.203, -25.8819, 0.22", "-34.132, 106.677, -25.9245, 0.52", "-34.2866, 106.898, -25.9633, 0.52", "-34.9024, 107.789, -26.1612, 0.15", "-35.6096, 108.826, -26.5013, 1.33", "-35.8642, 109.198, -26.6427, 1.69", "-36.6511, 110.337, -27.1547, 0.22", "-37.0441, 110.914, -27.4262, 0.59", "-37.3766, 111.403, -27.6709, 0.59", "-37.9699, 112.262, -28.1521, 0.15", "-38.9253, 113.626, -29.0021, 1.33", "-39.3225, 114.191, -29.3619, 1.47" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-3.76325, 81.4243, -30.0397, 0.29", "-4.66375, 82.1871, -31.1916, 0.29", "-5.01868, 82.4805, -31.6121, 0.52", "-5.58089, 82.938, -32.2204, 0.74", "-5.80886, 83.1198, -32.446, 0.88", "-6.42751, 83.6202, -33.0196, 0.15", "-6.66057, 83.818, -33.2241, 0.15", "-6.97512, 84.112, -33.4544, 1.33", "-7.2911, 84.4272, -33.656, 1.77", "-7.9138, 85.0624, -33.987, 0.22", "-8.17532, 85.3386, -34.1066, 0.22", "-8.52237, 85.7485, -34.2401, 0.88", "-8.67895, 85.9577, -34.303, 0.88", "-9.04646, 86.509, -34.4535, 0.15", "-9.27457, 86.9394, -34.5316, 0.15", "-9.41243, 87.2968, -34.5625, 0.15", "-9.61683, 88.0241, -34.5935, 2.14", "-9.66138, 88.2784, -34.5933, 2.14", "-9.66443, 88.3278, -34.5911, 2.14", "-9.59762, 89.387, -34.4967, 0.15", "-9.53013, 89.7256, -34.4589, 0.15", "-9.44219, 90.0135, -34.4365, 0.15", "-9.32581, 90.3141, -34.4217, 0.66", "-9.16993, 90.6701, -34.4298, 0.81", "-9.13806, 90.7325, -34.4366, 0.81", "-8.8283, 91.2042, -34.6026, 0.15", "-8.52131, 91.6788, -34.8115, 0.88", "-8.4993, 91.712, -34.8311, 0.88", "-8.39081, 91.8843, -34.9427, 0.88", "-8.34736, 91.961, -34.9925, 0.88", "-8.01164, 92.6622, -35.411, 0.15", "-7.90931, 92.9245, -35.5623, 0.15", "-7.73309, 93.4724, -35.8652, 1.11", "-7.63392, 93.8784, -36.0857, 1.11", "-7.42804, 95.0466, -36.699, 0.22", "-7.38309, 95.4389, -36.9249, 0.22", "-7.35383, 96.0351, -37.2834, 1.47", "-7.35906, 96.4704, -37.5565, 1.69", "-7.46841, 97.6345, -38.546, 0.15", "-7.52589, 97.9277, -38.8741, 0.88", "-7.77366, 98.7311, -39.9546, 0.22", "-7.8248, 98.8717, -40.1685, 1.55", "-7.93961, 99.1444, -40.61, 1.84", "-8.59664, 100.531, -42.9581, 0.59", "-8.81629, 100.917, -43.6442, 0.22", "-8.91491, 101.083, -43.9247, 0.74", "-9.24164, 101.599, -44.6926, 0.15", "-9.45069, 101.92, -45.1191, 0.15", "-9.61776, 102.159, -45.3909, 0.81", "-9.78511, 102.362, -45.5686, 0.81", "-10.2416, 102.862, -46.1467, 0.15", "-10.4349, 103.06, -46.4834, 0.96", "-10.6147, 103.231, -46.8339, 0.96", "-11.1174, 103.685, -47.8765, 0.22", "-11.3899, 103.928, -48.4522, 1.4", "-11.9763, 104.455, -49.7247, 1.69", "-12.6543, 105.08, -51.1997, 0.74", "-12.9261, 105.339, -51.7871, 0.22", "-13.0679, 105.477, -52.0677, 0.59", "-13.3147, 105.717, -52.4291, 0.22", "-13.3423, 105.745, -52.4507, 0.22", "-13.6867, 106.09, -52.5258, 0.22", "-13.9092, 106.325, -52.5133, 0.52", "-14.3705, 106.893, -52.4465, 0.15", "-14.8302, 107.546, -52.3345, 1.84", "-15.4321, 108.493, -52.1339, 0.15", "-15.5963, 108.767, -52.0609, 0.29", "-15.642, 108.856, -52.0343, 0.29", "-15.867, 109.377, -51.8638, 0.15", "-16.0283, 109.835, -51.7083, 0.74", "-16.0727, 109.989, -51.6626, 0.74", "-16.29, 110.796, -51.4601, 0.22", "-16.5003, 111.518, -51.2915, 0.22", "-16.683, 112.121, -51.1612, 1.69", "-16.7605, 112.377, -51.1122, 1.69", "-16.9467, 113.091, -51.0015, 0.22", "-17.0169, 113.402, -50.9625, 0.37", "-17.1215, 113.989, -50.9153, 0.15", "-17.1447, 114.133, -50.9081, 0.37", "-17.222, 114.661, -50.9071, 0.15", "-17.2662, 115.107, -50.9385, 0.74", "-17.2731, 115.198, -50.9508, 0.74", "-17.2825, 115.323, -50.9737, 0.74", "-17.324, 115.948, -51.1037, 0.15", "-17.3589, 116.392, -51.1996, 1.03", "-17.4537, 117.303, -51.3749, 0.15", "-17.5533, 118.106, -51.515, 1.99", "-17.6118, 118.437, -51.5686, 1.99", "-17.7981, 119.175, -51.6812, 0.22", "-17.9505, 119.647, -51.75, 0.81", "-18.207, 120.293, -51.835, 0.22", "-18.2262, 120.331, -51.8396, 0.22", "-18.5045, 120.831, -51.9118, 0.22", "-18.7757, 121.26, -52.008, 0.22", "-19.0236, 121.623, -52.1429, 0.22", "-19.3318, 122.1, -52.3773, 0.22", "-19.5084, 122.405, -52.5286, 1.03", "-19.5943, 122.576, -52.608, 1.03", "-19.93, 123.416, -52.9516, 0.22", "-20.1963, 124.117, -53.2361, 0.59", "-20.4372, 124.76, -53.4917, 0.22", "-20.694, 125.508, -53.7832, 2.06", "-20.7908, 125.827, -53.895, 1.69", "-21.0023, 126.69, -54.1527, 0.22" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-28.3145, 77.448, -6.71096, 0.22", "-28.6935, 78.6673, -7.13251, 0.22", "-28.9028, 79.2743, -7.38091, 0.66", "-29.0543, 79.7067, -7.56372, 0.81", "-29.5317, 80.995, -8.10427, 0.22", "-29.8505, 81.7896, -8.42888, 0.66", "-30.1042, 82.32, -8.6359, 0.96", "-30.7942, 83.5668, -9.12595, 0.22", "-30.9637, 83.8482, -9.22897, 0.22", "-31.2013, 84.2387, -9.35223, 0.52", "-31.4533, 84.6987, -9.46385, 0.52", "-32.0361, 85.922, -9.69898, 0.22", "-32.3934, 86.7984, -9.85157, 0.22", "-32.6857, 87.6165, -9.92899, 1.77", "-32.8366, 88.1367, -9.93221, 2.06", "-33.208, 90.024, -9.76087, 0.22", "-33.2601, 90.4816, -9.68975, 0.59", "-33.2848, 91.1341, -9.54271, 0.66", "-33.3153, 92.9408, -9.04626, 0.22", "-33.3144, 94.5018, -8.56113, 0.22", "-33.2961, 96.0898, -8.02779, 1.47", "-33.2868, 96.6683, -7.81376, 1.92", "-33.2748, 98.4759, -7.18166, 0.22", "-33.2771, 99.0513, -7.00108, 0.22", "-33.2896, 99.7856, -6.81835, 0.74", "-33.309, 100.046, -6.77193, 0.74", "-33.4729, 101.199, -6.61263, 0.15", "-33.653, 102.182, -6.46443, 0.15", "-33.7919, 102.83, -6.36812, 0.96", "-33.8651, 103.158, -6.31416, 1.33", "-33.9344, 103.446, -6.26704, 1.33", "-33.9529, 103.516, -6.25617, 1.33", "-34.3757, 104.837, -6.07971, 0.22", "-34.5485, 105.307, -6.00842, 0.81", "-34.7759, 105.853, -5.92322, 0.81", "-35.1337, 106.667, -5.79485, 0.22", "-35.2645, 106.945, -5.75341, 0.44", "-35.8663, 108.118, -5.59666, 0.22", "-36.0691, 108.467, -5.55718, 0.59", "-36.363, 108.964, -5.4735, 0.59", "-36.788, 109.692, -5.32498, 0.15", "-37.2536, 110.493, -5.13899, 0.15", "-37.6385, 111.164, -4.97758, 1.11", "-37.8786, 111.578, -4.87631, 1.62", "-38.7133, 112.959, -4.54907, 0.15", "-38.9611, 113.352, -4.45421, 0.59", "-39.0739, 113.523, -4.41461, 0.59", "-39.4596, 114.14, -4.28245, 0.22", "-39.7752, 114.667, -4.18438, 0.22", "-39.944, 114.961, -4.14436, 0.59", "-40.1281, 115.3, -4.12335, 0.59", "-40.4241, 115.933, -4.08517, 0.22", "-40.7857, 116.892, -4.03256, 0.22", "-40.7857, 116.892, -4.03256, 0.66", "-40.8531, 117.389, -4.02449, 0.66", "-40.926, 118.257, -4.02235, 0.22", "-40.9558, 118.924, -4.02853, 1.4", "-40.9631, 119.327, -4.03641, 1.77", "-40.9742, 121.27, -4.09053, 0.22", "-40.9742, 121.882, -4.10857, 0.96", "-40.9724, 122.412, -4.125, 0.96", "-40.9733, 123.341, -4.15531, 0.22", "-40.9944, 124.554, -4.1916, 0.22", "-41.0222, 125.412, -4.21416, 0.88", "-41.0411, 125.878, -4.22382, 1.25", "-41.0663, 126.689, -4.23569, 0.22", "-41.0696, 126.826, -4.23456, 0.22", "-41.0519, 127.331, -4.19642, 0.22", "-41.0031, 127.747, -4.14073, 0.22", "-40.8141, 128.727, -3.94278, 0.22", "-40.717, 129.129, -3.84796, 0.81", "-40.5484, 129.688, -3.65561, 0.81", "-40.1669, 130.837, -3.18889, 0.15", "-39.8663, 131.651, -2.81642, 0.15", "-39.3905, 132.874, -2.19853, 1.4", "-39.274, 133.177, -2.03511, 1.84", "-38.6773, 134.796, -1.15171, 0.22", "-38.6577, 134.851, -1.12206, 0.22", "-38.5895, 135.057, -1.00927, 0.22", "-38.5727, 135.112, -0.980256, 0.22", "-38.3928, 135.808, -0.656696, 0.22", "-38.1715, 136.703, -0.304633, 0.88", "-38.1517, 136.771, -0.282531, 0.88", "-38.0541, 137.042, -0.191767, 1.03", "-37.5693, 138.252, 0.21525, 0.22", "-37.01, 139.527, 0.637618, 1.55", "-36.7549, 140.059, 0.833457, 1.92", "-36.0165, 141.558, 1.40573, 0.22", "-35.8147, 141.966, 1.56635, 0.22", "-35.6398, 142.308, 1.70645, 0.52", "-35.476, 142.586, 1.83215, 0.52", "-34.8749, 143.547, 2.27445, 0.22", "-34.7084, 143.811, 2.41817, 0.59", "-34.5479, 144.063, 2.57586, 0.59", "-34.4943, 144.147, 2.62738, 0.59", "-34.0092, 144.87, 3.04472, 0.22", "-33.9786, 144.922, 3.0702, 0.22", "-33.5413, 145.727, 3.40141, 0.22", "-33.5203, 145.776, 3.41852, 0.22", "-33.233, 146.66, 3.66259, 0.88", "-33.1193, 147.129, 3.7616, 1.47", "-32.9247, 148.387, 3.96985, 0.22", "-32.9193, 148.441, 3.97772, 0.22", "-32.8517, 149.573, 4.10528, 0.22", "-32.7764, 150.556, 4.19299, 0.88", "-32.741, 150.904, 4.21332, 1.33", "-32.5958, 151.965, 4.24857, 0.15", "-32.5295, 152.363, 4.24759, 0.15", "-32.3405, 153.402, 4.24409, 0.15", "-32.0121, 154.966, 4.23017, 1.77", "-31.656, 156.47, 4.20253, 0.22", "-31.464, 157.224, 4.17417, 0.22", "-31.3282, 157.697, 4.13776, 1.25" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-28.3145, 77.448, -6.71096, 0.22", "-29.3523, 78.8216, -8.07355, 0.22", "-29.3751, 78.8668, -8.12657, 0.22", "-29.5304, 79.3139, -8.64327, 0.22", "-29.6945, 79.9048, -9.32237, 1.11", "-29.8274, 80.4421, -9.96609, 1.92", "-29.9256, 80.847, -10.4361, 2.14", "-30.273, 82.8935, -12.5746, 0.22", "-30.3299, 83.3215, -13.1302, 0.22", "-30.3339, 83.37, -13.1975, 0.22", "-30.3643, 84.1165, -14.2596, 0.22", "-30.341, 84.5418, -14.8312, 0.88", "-30.3091, 84.9609, -15.364, 0.88", "-30.1275, 87.3418, -18.0834, 1.25", "-30.0793, 88.2099, -19.0218, 1.62", "-30.0752, 88.2678, -19.0802, 1.62", "-29.9379, 89.5267, -20.2503, 0.29", "-29.8936, 89.91, -20.5844, 0.66", "-29.8879, 89.968, -20.6257, 0.66", "-29.8745, 90.4647, -20.9777, 0.66", "-29.8742, 90.5201, -21.0233, 0.66", "-29.8642, 91.6213, -22.0341, 0.22", "-29.8935, 92.7963, -23.2702, 2.14", "-29.9097, 93.2089, -23.7194, 2.8", "-30.0424, 95.8806, -26.6855, 0.37", "-30.0968, 96.8945, -27.8276, 0.37", "-30.1882, 98.4301, -29.5419, 0.96", "-30.2549, 99.9145, -31.16, 0.22", "-30.2688, 100.524, -31.8093, 1.11", "-30.2684, 100.575, -31.86, 1.11", "-30.2552, 100.867, -32.0881, 1.11", "-30.1851, 101.905, -32.8051, 0.15", "-30.1273, 102.888, -33.3403, 0.15", "-30.0672, 103.714, -33.7449, 0.15", "-30.0192, 104.886, -34.3365, 1.99", "-30.0337, 105.622, -34.7022, 2.21", "-30.137, 106.782, -35.2341, 0.74", "-30.3337, 107.937, -35.6939, 0.29", "-30.3494, 108.003, -35.7154, 0.29", "-30.5005, 108.558, -35.8788, 0.52", "-30.6337, 109.038, -36.0184, 0.52", "-30.8103, 109.729, -36.2403, 0.29", "-30.9064, 110.164, -36.4052, 0.74", "-31.0091, 110.868, -36.8058, 0.96", "-31.1255, 112.077, -37.6144, 0.22", "-31.1838, 113.09, -38.3639, 1.55", "-31.2117, 113.624, -38.7769, 1.99", "-31.3085, 114.438, -39.5423, 1.99", "-31.6346, 115.957, -41.1458, 0.37", "-31.7525, 116.162, -41.5724, 0.37", "-31.9114, 116.33, -42.0565, 0.37", "-32.1871, 116.531, -42.7784, 0.37", "-33.1883, 117.066, -45.0847, 1.92", "-33.4966, 117.19, -45.711, 2.43", "-37.4358, 118.428, -52.9086, 0.37", "-37.7764, 118.522, -53.5112, 0.44", "-38.2131, 118.631, -54.2511, 0.29", "-38.5862, 118.72, -54.8479, 0.29", "-38.9277, 118.817, -55.321, 0.66", "-39.1885, 118.899, -55.6583, 0.88", "-40.065, 119.159, -56.7378, 0.66", "-40.53, 119.265, -57.4513, 0.22", "-40.9555, 119.316, -58.2141, 1.55", "-41.4924, 119.374, -59.235, 2.36", "-42.8659, 119.484, -61.9793, 2.36", "-44.7971, 119.573, -65.9964, 0.88", "-45.3869, 119.577, -67.2762, 0.52", "-46.5365, 119.524, -69.9866, 1.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "10.0883, -46.3738, 5.79049, 0.37", "11.993, -46.9732, 5.55501, 0.37", "12.9809, -47.3686, 5.44681, 0.29", "14.1498, -47.9252, 5.38366, 0.66", "15.2187, -48.4731, 5.36115, 1.33", "15.897, -48.8325, 5.36037, 1.62", "16.6494, -49.2373, 5.36823, 1.62", "17.7346, -49.9456, 5.40375, 0.59", "18.7677, -50.7055, 5.44222, 0.37", "19.3117, -51.1466, 5.42927, 0.74", "19.7036, -51.4946, 5.36678, 0.74", "19.7563, -51.5451, 5.34951, 0.74", "20.3189, -52.1509, 5.05224, 0.29", "21.0927, -53.0986, 4.5812, 0.29", "21.779, -54.0315, 4.24502, 1.92", "22.5228, -55.0952, 4.00417, 3.09", "22.7393, -55.4048, 3.97874, 3.61", "23.4003, -56.3231, 4.03921, 3.32", "24.5518, -57.8865, 4.35657, 0.88", "25.6564, -59.2947, 4.92463, 0.44", "26.243, -59.9905, 5.3045, 0.44", "27.0098, -60.8443, 5.86617, 1.18", "27.7066, -61.5329, 6.37736, 1.69", "28.1788, -61.9102, 6.71773, 1.69", "29.9209, -62.9678, 7.8432, 0.44", "30.6171, -63.3187, 8.23211, 0.66", "30.6782, -63.3476, 8.26713, 0.66", "31.3175, -63.6468, 8.62049, 0.66", "32.2249, -64.1585, 9.21308, 0.29", "32.5195, -64.4378, 9.49873, 0.29", "32.6083, -65.1373, 10.0166, 0.29", "32.5589, -65.991, 10.6288, 0.81", "32.5283, -66.4118, 10.9169, 1.03", "32.512, -67.6596, 11.8246, 0.37", "32.5617, -68.2489, 12.2459, 0.37", "32.5903, -68.3679, 12.3459, 0.37", "32.9386, -69.1914, 13.1168, 0.52", "33.2612, -69.7433, 13.6609, 0.88", "34.0479, -70.8336, 14.8495, 0.37", "34.6564, -71.5707, 15.6274, 0.29", "35.6346, -72.7043, 16.7577, 1.77", "36.0824, -73.2565, 17.3095, 2.58", "36.1397, -73.3356, 17.3913, 2.58", "36.7952, -74.437, 18.6142, 2.58", "37.3497, -75.5342, 19.8397, 0.37", "37.8676, -76.6336, 21.1, 0.37", "38.3648, -77.7047, 22.2774, 0.66", "38.7717, -78.5583, 23.2133, 0.74", "39.3408, -79.6151, 24.315, 0.29", "39.6495, -80.1108, 24.8231, 0.29", "39.8679, -80.3853, 25.1073, 1.11", "40.1627, -80.6872, 25.3838, 1.33", "40.8058, -81.2432, 25.8191, 0.88", "41.8336, -82.0641, 26.4419, 0.29", "42.9232, -82.8692, 27.053, 0.29", "43.9599, -83.6073, 27.6526, 2.65", "44.0131, -83.6462, 27.6878, 2.65", "44.6337, -84.1197, 28.1768, 3.09", "45.614, -84.9789, 29.3063, 0.37", "46.2999, -85.6648, 30.2735, 0.15", "46.7088, -86.1153, 30.9111, 0.15", "47.4193, -86.9671, 32.1387, 2.14", "47.9808, -87.7391, 33.2396, 2.58", "49.3765, -89.9628, 36.2618, 0.44", "49.6271, -90.4637, 36.9441, 0.88", "49.7019, -90.6466, 37.196, 0.88", "49.7187, -90.6963, 37.263, 0.88", "50.0611, -91.8439, 38.6931, 0.22", "50.2681, -92.5843, 39.5477, 0.22", "50.5248, -93.5421, 40.5769, 1.55", "50.8656, -94.7888, 41.9279, 2.14", "51.2466, -96.261, 43.4546, 0.15", "51.3597, -96.7531, 43.9356, 0.81", "51.5903, -97.7848, 44.882, 0.15", "51.7324, -98.4762, 45.492, 1.55", "51.7984, -98.7959, 45.7537, 1.77", "52.0938, -100.357, 46.966, 0.15", "52.3688, -102.03, 48.3833, 0.15", "52.4076, -102.341, 48.7053, 0.52", "52.4829, -103.371, 49.9065, 0.22", "52.5111, -104.27, 51.0775, 0.74", "52.5132, -104.476, 51.3699, 0.74", "52.492, -105.543, 53.1157, 0.59", "52.3842, -106.742, 55.3726, 0.22", "52.3536, -106.916, 55.7319, 0.52", "52.2467, -107.267, 56.573, 0.96" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "10.0883, -46.3738, 5.79049, 0.88", "9.49863, -47.515, 5.93284, 0.88", "9.13154, -48.2298, 6.02486, 0.37", "8.7331, -49.0128, 6.14364, 0.37", "8.13685, -50.1802, 6.30374, 0.37", "7.82711, -50.8232, 6.38187, 1.47", "7.4964, -51.5945, 6.39845, 2.14", "7.36807, -51.9213, 6.38706, 2.14", "7.10764, -52.8304, 6.27684, 1.03", "7.04204, -53.6011, 5.99105, 0.44", "7.0781, -54.3671, 5.57877, 0.37", "7.23702, -55.8396, 4.63759, 1.77", "7.27824, -56.2355, 4.3614, 2.14", "7.3204, -56.9324, 3.86426, 2.21", "7.34346, -59.1422, 2.29983, 0.29", "7.31113, -59.8016, 1.86212, 0.29", "7.16627, -60.7759, 1.2655, 0.29", "6.93878, -61.6881, 0.792433, 0.29", "6.62301, -62.6703, 0.308752, 0.29", "6.24119, -63.554, -0.0618889, 0.88", "6.00687, -63.9647, -0.172721, 1.62", "5.43159, -64.8989, -0.421717, 1.99", "5.26614, -65.178, -0.479695, 1.99" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-17.6634, -120.553, 15.5331, 0.29", "-16.1845, -122.008, 14.939, 0.29", "-15.8351, -122.362, 14.8115, 0.44", "-14.6667, -123.605, 14.4705, 0.22", "-13.782, -124.631, 14.3203, 0.22", "-13.7359, -124.687, 14.3164, 0.22", "-13.5188, -124.961, 14.3098, 0.66", "-13.2349, -125.368, 14.3605, 0.66", "-12.553, -126.323, 14.5753, 0.22", "-11.8601, -127.284, 14.886, 1.4", "-11.5719, -127.683, 15.0138, 1.84", "-11.5365, -127.732, 15.029, 1.84", "-10.7106, -128.909, 15.3756, 0.29", "-9.98837, -130.065, 15.6981, 0.29", "-9.52275, -130.952, 15.9114, 0.29", "-9.11192, -131.946, 16.1019, 1.69", "-8.95362, -132.503, 16.2063, 2.28", "-8.87571, -132.958, 16.2816, 2.5", "-8.83895, -134.57, 16.5814, 0.29", "-8.92193, -135.702, 16.8032, 0.29", "-9.04755, -136.831, 17.0338, 0.29", "-9.20441, -138.115, 17.3154, 2.06", "-9.3123, -139.048, 17.5329, 2.65", "-9.49014, -141.037, 18.0311, 0.29", "-9.54212, -141.999, 18.2929, 0.22", "-9.56194, -142.755, 18.5182, 0.22", "-9.5567, -143.362, 18.6996, 0.88", "-9.53543, -143.797, 18.8254, 1.18", "-9.50253, -144.153, 18.9315, 1.18", "-9.33524, -145.189, 19.2306, 0.22", "-9.24009, -145.679, 19.3928, 0.22", "-9.13024, -146.256, 19.6152, 0.22", "-9.02306, -146.76, 19.8225, 1.25", "-8.88749, -147.233, 20.0576, 1.25", "-8.43719, -148.533, 20.7502, 0.22", "-8.10147, -149.208, 21.1399, 0.22", "-7.49618, -150.123, 21.684, 1.11", "-7.17899, -150.517, 21.9215, 1.55", "-6.09096, -151.685, 22.6185, 0.22", "-5.31046, -152.363, 23.0132, 0.22", "-4.02904, -153.214, 23.4767, 0.22", "-3.14192, -153.706, 23.73, 1.69", "-2.78591, -153.86, 23.7949, 1.99", "-2.71579, -153.885, 23.8036, 1.99", "-1.17306, -154.278, 23.7729, 0.29", "0.156085, -154.546, 23.6665, 0.29", "0.230191, -154.559, 23.6558, 0.29", "1.57571, -154.795, 23.4429, 1.4", "2.28221, -154.909, 23.3135, 1.62", "4.69223, -155.257, 22.7936, 0.22", "4.76428, -155.265, 22.7728, 0.22", "5.79733, -155.335, 22.402, 1.18" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-17.6634, -120.553, 15.5331, 0.29", "-17.5766, -122.414, 15.7756, 0.29", "-17.515, -123.631, 15.9303, 0.29", "-17.4873, -124.177, 15.9942, 0.74", "-17.4497, -125.163, 16.0912, 0.81", "-17.4289, -125.784, 16.1445, 1.11", "-17.4011, -126.674, 16.2082, 0.44", "-17.3827, -127.432, 16.2322, 0.29", "-17.3599, -128.356, 16.2525, 0.29", "-17.3159, -129.664, 16.2686, 2.21", "-17.2869, -130.267, 16.2577, 2.73", "-17.1644, -131.935, 16.1778, 0.29", "-17.1016, -132.576, 16.1245, 0.29", "-17.0066, -133.285, 16.0531, 0.81", "-16.9813, -133.428, 16.036, 0.96", "-16.7599, -134.378, 15.924, 0.22", "-16.5425, -135.205, 15.837, 0.22", "-16.3908, -135.72, 15.7942, 1.33", "-16.2722, -136.167, 15.7879, 1.62", "-16.2572, -136.238, 15.7909, 1.62", "-16.0881, -137.255, 15.8949, 0.29", "-15.9749, -137.989, 16.0098, 0.22", "-15.8646, -138.667, 16.1365, 0.22", "-15.7357, -139.408, 16.2878, 1.11", "-15.633, -139.991, 16.4134, 1.47", "-15.4709, -141.033, 16.7053, 0.22", "-15.3892, -141.747, 16.9633, 0.22", "-15.3239, -142.475, 17.2692, 0.74", "-15.323, -142.677, 17.363, 0.74", "-15.3273, -142.733, 17.3914, 0.74", "-15.629, -144.431, 18.3431, 0.22", "-15.8687, -145.385, 18.9027, 1.99", "-15.9663, -145.71, 19.0961, 1.99", "-16.439, -147.097, 19.9856, 0.22", "-16.9389, -148.484, 20.9159, 0.22", "-17.318, -149.472, 21.5906, 1.84", "-17.3925, -149.655, 21.7161, 1.99", "-17.4437, -149.778, 21.8038, 1.99", "-18.1941, -151.555, 23.1368, 0.22", "-18.3993, -152.059, 23.5402, 0.96", "-18.7354, -152.853, 24.2014, 0.22", "-18.8712, -153.194, 24.4932, 0.74" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-30.4964, -68.3521, -109.643, 0.29", "-29.5067, -69.4148, -109.898, 0.29", "-28.4413, -70.5962, -110.207, 0.22", "-28.0849, -71.0316, -110.319, 0.52", "-27.8097, -71.4272, -110.424, 0.52", "-27.2403, -72.3618, -110.668, 0.22", "-26.7836, -73.1591, -110.874, 0.22", "-26.4655, -73.8548, -111.059, 0.81", "-26.188, -74.5204, -111.236, 1.11", "-25.7241, -75.7235, -111.52, 0.22", "-25.4653, -76.4651, -111.675, 0.22", "-25.2054, -77.315, -111.828, 0.22", "-25.0386, -77.9484, -111.948, 1.11", "-24.6951, -79.2468, -112.206, 0.22", "-24.2427, -80.8095, -112.53, 0.22", "-23.9534, -81.7053, -112.72, 1.33", "-23.8328, -82.0269, -112.806, 1.47", "-23.1167, -83.7674, -113.346, 0.22", "-22.7416, -84.4998, -113.631, 1.11", "-22.4311, -84.9922, -113.873, 1.47", "-22.097, -85.4357, -114.132, 1.47", "-20.9775, -86.6839, -114.961, 0.15", "-20.9321, -86.7259, -114.993, 0.15", "-19.9896, -87.3311, -115.608, 0.88", "-19.9374, -87.3618, -115.646, 0.88" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-30.4964, -68.3521, -109.643, 1.69", "-31.4141, -69.4482, -109.836, 1.69", "-32.4528, -70.3549, -110.112, 0.22", "-32.5057, -70.3953, -110.127, 0.22", "-33.5135, -71.1267, -110.398, 0.22", "-34.3523, -71.7149, -110.675, 0.88", "-35.1189, -72.2415, -110.952, 1.11", "-36.448, -72.9873, -111.454, 0.22", "-36.994, -73.2481, -111.656, 0.52", "-37.1754, -73.3191, -111.724, 0.52", "-38.5279, -73.6659, -112.3, 0.37", "-38.5887, -73.6797, -112.327, 0.29", "-39.2076, -73.8308, -112.566, 0.22", "-39.5268, -73.9199, -112.681, 0.37", "-40.2167, -74.1195, -112.972, 0.37", "-41.3234, -74.5714, -113.723, 0.29", "-42.1124, -75.0187, -114.4, 0.29", "-42.732, -75.4504, -115.034, 0.22", "-43.5221, -76.1779, -116.028, 1.11", "-44.0265, -76.7435, -116.765, 1.33", "-45.4441, -78.4726, -119.013, 0.29", "-45.8082, -78.9814, -119.675, 0.59", "-45.8282, -79.0126, -119.719, 0.59", "-46.302, -79.859, -120.961, 0.29", "-46.3196, -79.8972, -121.014, 0.29", "-46.8526, -81.0273, -122.359, 0.15" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-21.0023, 126.69, -54.1527, 0.22", "-21.1424, 128.328, -56.5188, 0.22", "-21.1615, 128.877, -57.2946, 0.37", "-21.1546, 129.183, -57.6949, 0.15", "-21.1388, 129.409, -58.0073, 0.44", "-21.1041, 129.922, -58.7229, 0.22", "-21.0824, 130.593, -59.6593, 1.25", "-21.0331, 131.451, -60.7166, 0.22", "-21.0394, 131.852, -61.233, 1.03", "-21.116, 132.858, -62.5587, 0.22", "-21.1403, 133.053, -62.8166, 0.22", "-21.235, 133.624, -63.5338, 1.11", "-21.2746, 133.814, -63.7517, 1.4", "-21.4833, 134.721, -64.6382, 0.22", "-21.5326, 134.931, -64.822, 0.59", "-21.7231, 135.956, -65.5198, 0.22", "-21.774, 136.332, -65.7454, 0.88", "-21.7968, 136.639, -65.8868, 1.03", "-21.8425, 137.447, -66.1763, 0.22", "-21.852, 137.862, -66.2776, 0.59", "-21.8685, 138.649, -66.4225, 0.22", "-21.8649, 139.198, -66.5022, 0.22", "-21.8327, 140.138, -66.6561, 1.47", "-21.8149, 140.407, -66.7025, 1.47", "-21.7408, 141.13, -66.8694, 0.22", "-21.6966, 141.486, -66.9807, 0.52", "-21.5689, 142.443, -67.3361, 0.22", "-21.5297, 142.72, -67.451, 1.03", "-21.5062, 142.898, -67.536, 1.03", "-21.2868, 144.813, -68.5186, 0.22", "-21.2254, 145.396, -68.8251, 0.96", "-21.1985, 145.698, -68.9865, 0.96", "-21.1964, 145.739, -69.0081, 0.96", "-21.1552, 146.773, -69.5843, 0.22", "-21.1396, 147.348, -69.9248, 1.11" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-21.0023, 126.69, -54.1527, 0.22", "-22.0097, 126.875, -55.4088, 0.22", "-23.6577, 127.076, -57.4237, 0.15", "-24.885, 127.188, -58.8857, 1.4", "-25.8891, 127.279, -60.0818, 1.4", "-27.1607, 127.395, -61.5966, 0.22", "-27.6602, 127.441, -62.1915, 0.22", "-28.2558, 127.448, -62.9731, 0.88", "-28.4415, 127.432, -63.1876, 0.88" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-46.5365, 119.524, -69.9866, 0.66", "-49.9993, 119.035, -75.9706, 0.66", "-50.4794, 119.051, -76.7484, 0.29", "-50.752, 119.118, -77.163, 0.22", "-51.1997, 119.293, -77.8028, 0.22", "-51.5954, 119.482, -78.3429, 1.03", "-51.9424, 119.665, -78.7811, 1.47", "-52.6817, 120.494, -79.1987, 0.88", "-53.3947, 121.232, -79.6003, 0.22", "-53.6235, 121.41, -79.7302, 0.29", "-53.6946, 121.446, -79.7639, 0.29", "-54.2533, 121.642, -79.9967, 0.15", "-54.9164, 121.79, -80.2639, 0.96", "-55.5456, 121.882, -80.488, 1.4", "-56.8217, 122.021, -81.0663, 0.22", "-57.7142, 122.136, -81.5734, 0.22", "-58.4585, 122.245, -82.1616, 0.74", "-59.4645, 122.421, -83.1027, 0.22", "-59.8166, 122.49, -83.4732, 0.96", "-61.0342, 122.762, -84.9213, 1.33", "-61.5576, 122.916, -85.5868, 1.84", "-63.4048, 123.519, -88.1071, 0.88", "-63.6742, 123.606, -88.4736, 1.03", "-63.7164, 123.619, -88.5274, 1.03", "-65.1673, 124.056, -90.265, 0.22", "-65.9875, 124.293, -91.1179, 1.33", "-68.0232, 124.835, -92.9444, 0.22", "-68.8869, 125.058, -93.5726, 1.33", "-69.8541, 125.268, -94.1831, 0.22", "-69.9001, 125.276, -94.2069, 0.22", "-70.838, 125.351, -94.5168, 0.22", "-71.7222, 125.333, -94.6872, 1.4", "-72.2505, 125.295, -94.6752, 1.84", "-72.9572, 125.182, -94.6138, 1.33", "-73.8421, 124.97, -94.5282, 0.81", "-74.6301, 124.736, -94.4499, 0.22", "-75.3676, 124.427, -94.3778, 1.4", "-75.7718, 124.229, -94.3368, 1.69", "-76.0199, 124.099, -94.3071, 1.69" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-46.5365, 119.524, -69.9866, 0.29", "-48.2753, 121.877, -74.0198, 0.29", "-48.7676, 122.58, -75.089, 0.22", "-49.0063, 122.973, -75.6229, 0.96", "-49.1648, 123.255, -75.983, 1.18", "-49.7685, 124.441, -77.3598, 0.22", "-49.9618, 124.846, -77.8019, 0.52", "-50.0626, 125.107, -77.9699, 0.52", "-50.7704, 126.904, -79.0036, 0.22", "-50.798, 126.971, -79.0358, 0.22", "-51.1581, 127.827, -79.364, 0.22", "-51.1881, 127.897, -79.3807, 0.22", "-51.9798, 129.533, -79.6265, 0.22", "-52.0166, 129.602, -79.6304, 0.22", "-52.7993, 131.03, -79.699, 0.22", "-52.8346, 131.099, -79.706, 0.22", "-53.1899, 131.842, -79.8114, 0.44", "-53.9106, 133.509, -80.088, 0.15", "-54.7638, 135.822, -80.601, 0.15", "-55.4461, 137.898, -81.1257, 0.15", "-55.8861, 139.462, -81.571, 0.15", "-56.1518, 140.545, -81.9287, 0.88", "-56.3042, 141.309, -82.2142, 1.25", "-56.5717, 143.32, -83.0573, 0.22", "-56.6118, 143.837, -83.289, 0.59", "-56.6413, 144.395, -83.5227, 0.59", "-56.7421, 146.241, -84.258, 0.22", "-56.7794, 146.928, -84.5173, 0.22", "-56.8001, 147.236, -84.6293, 0.66", "-56.844, 147.859, -84.8258, 0.74", "-56.9412, 149.72, -85.2343, 0.15", "-56.9912, 150.833, -85.3595, 0.15", "-56.9932, 150.899, -85.3603, 0.15", "-57.0157, 151.753, -85.342, 0.52", "-57.0278, 152.48, -85.2752, 0.52", "-57.0717, 154.597, -84.9241, 0.22", "-57.1262, 155.854, -84.601, 1.03", "-57.1842, 156.544, -84.3891, 1.03", "-57.1988, 156.628, -84.3608, 1.03", "-57.5553, 157.831, -83.9083, 0.15", "-57.7958, 158.327, -83.7294, 0.52", "-58.0969, 158.736, -83.6104, 0.52", "-58.7235, 159.457, -83.3821, 0.22", "-59.5593, 160.316, -83.1162, 0.22", "-59.9872, 160.722, -83.0071, 0.22", "-60.5274, 161.165, -82.9304, 0.59", "-61.1645, 161.69, -82.8411, 0.81" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "5.26614, -65.178, -0.479695, 0.37", "4.20017, -67.1786, 0.192458, 0.37", "3.7483, -67.9983, 0.608857, 0.74", "2.68914, -69.8963, 1.78887, 0.22", "2.1543, -70.837, 2.42618, 0.81", "1.84149, -71.3801, 2.83099, 0.81", "0.70359, -73.3313, 4.40057, 1.47", "-0.101336, -74.6642, 5.70481, 2.06", "-0.970393, -76.1925, 7.42022, 0.22", "-1.24021, -76.7081, 8.03438, 0.52", "-1.72819, -77.6451, 9.18618, 0.22", "-2.17736, -78.5124, 10.2511, 1.77", "-2.72121, -79.5715, 11.5109, 2.43", "-4.24106, -82.507, 14.892, 0.22", "-4.4245, -82.8675, 15.3086, 0.59", "-4.69703, -83.4138, 15.9234, 0.22", "-4.85552, -83.7324, 16.2609, 0.44", "-5.38708, -84.7824, 17.3134, 0.15", "-5.85917, -85.6118, 18.0591, 0.15" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "5.26614, -65.178, -0.479695, 0.29", "4.36597, -66.4529, -1.1969, 0.29", "3.93176, -67.0958, -1.55209, 0.29", "3.49514, -67.7524, -1.90882, 0.29", "2.94641, -68.5462, -2.26778, 0.29", "2.41705, -69.2852, -2.56103, 0.29", "2.01022, -69.8502, -2.77022, 1.77", "1.51963, -70.4843, -2.93898, 2.21", "1.35036, -70.7091, -2.9909, 2.36", "0.574612, -71.8035, -3.19977, 0.74", "0.153075, -72.3582, -3.3027, 0.29", "-0.309418, -72.9306, -3.43051, 0.29", "-0.951069, -73.6885, -3.62479, 1.92", "-1.34364, -74.1361, -3.75928, 2.28", "-1.63322, -74.4683, -3.89043, 2.28", "-2.45767, -75.4505, -4.37609, 0.29", "-3.11467, -76.265, -4.79488, 0.22", "-3.33274, -76.5471, -4.94713, 0.96", "-3.45722, -76.7462, -5.08965, 1.18", "-3.8049, -77.4372, -5.66175, 0.22", "-3.86564, -77.6447, -5.90786, 0.22", "-3.89772, -77.8719, -6.2374, 0.22", "-3.94264, -78.1795, -6.74582, 0.66", "-4.11981, -79.1527, -8.60784, 1.62", "-4.14953, -79.2578, -8.85513, 2.14", "-4.58002, -80.1387, -11.3964, 0.37", "-4.75507, -80.3643, -12.177, 0.37", "-4.93111, -80.5073, -12.8372, 1.47", "-5.20279, -80.6308, -13.7514, 1.47", "-5.79801, -80.7545, -15.418, 0.22", "-6.10872, -80.7744, -16.2055, 1.25", "-6.26589, -80.7646, -16.5425, 1.84", "-6.77494, -80.7217, -17.6774, 1.84", "-7.87601, -80.6864, -20.2425, 0.22", "-8.07202, -80.6893, -20.6834, 0.88", "-8.349, -80.7179, -21.3502, 0.88", "-8.59655, -80.7802, -21.9928, 0.22", "-9.00472, -80.939, -23.0314, 0.22", "-9.2879, -81.0976, -23.7534, 1.03", "-9.37773, -81.1642, -23.9974, 1.03", "-9.75355, -81.5931, -25.55, 0.22", "-9.84283, -81.7473, -26.0542, 0.22", "-9.98528, -82.09, -27.1012, 1.25", "-10.1294, -82.4403, -28.1191, 1.18", "-10.1367, -82.4631, -28.1789, 1.18", "-10.2925, -83.2684, -30.0693, 0.22", "-10.3097, -83.5078, -30.5542, 1.18", "-10.3004, -83.7097, -30.925, 1.18", "-10.1154, -84.4682, -32.1169, 0.22", "-10.0541, -84.6531, -32.3936, 0.22", "-9.89088, -85.0685, -33.0576, 0.66", "-9.81375, -85.2715, -33.3681, 0.81", "-9.74355, -85.4444, -33.6391, 0.81", "-9.35196, -86.252, -35.015, 0.52", "-8.9012, -87.1324, -36.4791, 0.22", "-8.54526, -87.8755, -37.7025, 0.22", "-8.34037, -88.335, -38.4515, 2.21", "-8.17059, -88.7865, -39.1707, 2.28", "-7.62615, -90.6631, -42.028, 0.22", "-7.5547, -91.0882, -42.6272, 0.22", "-7.48053, -91.8955, -43.6722, 0.22", "-7.48164, -91.9296, -43.7147, 0.22", "-7.60251, -92.464, -44.3924, 0.37", "-7.80931, -92.8269, -44.8209, 0.88", "-8.40428, -93.4343, -45.4548, 1.69", "-8.76548, -93.7635, -45.8252, 2.21", "-9.34446, -94.2753, -46.3864, 2.21", "-9.82811, -94.7338, -46.8839, 1.11", "-10.2214, -95.1685, -47.3356, 0.37", "-10.2467, -95.2043, -47.3677, 0.37", "-10.674, -95.9795, -47.933, 0.37", "-10.8435, -96.3282, -48.1362, 0.74", "-10.8948, -96.4414, -48.187, 0.74", "-11.1246, -96.9523, -48.3886, 0.66", "-11.4603, -97.6491, -48.6453, 0.66", "-11.7325, -98.1718, -48.8449, 0.52", "-12.3215, -99.2035, -49.2431, 0.22", "-12.7488, -99.9505, -49.5372, 1.47", "-13.0215, -100.493, -49.7754, 1.92", "-13.2368, -100.956, -49.9998, 2.14", "-13.529, -101.683, -50.3892, 0.74", "-13.6972, -102.219, -50.6939, 0.29", "-13.8333, -102.828, -51.0776, 0.29", "-14.0601, -104.067, -51.8899, 0.29", "-14.1279, -104.546, -52.1865, 1.33", "-14.2062, -105.155, -52.5485, 1.33", "-14.2408, -105.392, -52.6766, 1.33", "-14.3978, -106.344, -53.2128, 0.29", "-14.5099, -106.83, -53.4926, 0.29", "-14.7934, -107.77, -54.0423, 0.29", "-14.8087, -107.822, -54.0741, 0.29", "-15.0058, -108.477, -54.4795, 0.29", "-15.2883, -109.353, -55.0422, 1.18", "-15.3682, -109.595, -55.2024, 1.33", "-15.674, -110.568, -55.8541, 0.22", "-15.6895, -110.619, -55.8878, 0.22", "-15.8235, -111.161, -56.2041, 0.88", "-15.8868, -111.496, -56.3666, 0.88", "-16.0311, -112.594, -56.7495, 0.22", "-16.0955, -113.215, -56.9446, 1.33", "-16.1297, -113.521, -57.0291, 1.77", "-16.2325, -114.299, -57.246, 0.88", "-16.3389, -114.981, -57.4375, 0.22", "-16.4918, -115.711, -57.6362, 0.59", "-16.8076, -116.841, -57.93, 0.22", "-17.0704, -117.655, -58.1385, 0.22", "-17.2766, -118.218, -58.2783, 1.18", "-17.4255, -118.568, -58.3644, 1.18", "-17.8391, -119.418, -58.5851, 0.15", "-18.1001, -119.915, -58.7266, 0.15", "-18.457, -120.603, -58.9177, 0.88", "-18.5977, -120.88, -59.0012, 1.11", "-18.9271, -121.6, -59.3324, 0.37", "-19.2009, -122.279, -59.7368, 0.22", "-19.3522, -122.77, -60.0776, 1.18", "-19.4463, -123.134, -60.3582, 1.18", "-19.458, -123.181, -60.3992, 1.18", "-19.8118, -124.706, -61.7934, 0.22", "-19.8284, -124.779, -61.863, 0.37", "-19.9512, -125.332, -62.4217, 0.15", "-20.0105, -125.577, -62.6651, 0.59", "-20.2845, -126.549, -63.5775, 0.22", "-20.4311, -127.024, -63.9732, 1.03", "-20.4933, -127.207, -64.1008, 1.03", "-20.8964, -128.476, -64.8769, 0.22", "-20.9885, -128.77, -65.0358, 0.52", "-21.2448, -129.604, -65.3978, 0.22", "-21.3945, -130.097, -65.5598, 1.03", "-21.4973, -130.415, -65.6452, 1.03", "-21.916, -131.619, -65.9435, 0.15", "-22.085, -132.052, -66.0356, 0.44", "-22.3924, -132.848, -66.2193, 0.15", "-22.539, -133.241, -66.3153, 0.88", "-22.7009, -133.767, -66.4758, 0.88", "-22.9421, -134.809, -66.8368, 0.22", "-23.0502, -135.733, -67.3439, 0.22", "-23.0663, -135.968, -67.5189, 0.66", "-23.0815, -136.183, -67.6849, 0.66", "-23.2136, -137.446, -68.7422, 0.37", "-23.2695, -137.915, -69.1515, 1.25", "-23.5174, -140.159, -71.0812, 0.44", "-23.8022, -142.747, -73.2708, 0.15", "-23.9183, -143.67, -74.0162, 0.96", "-24.0705, -144.798, -74.8657, 0.29", "-24.1187, -145.143, -75.0942, 0.52", "-24.2744, -146.726, -76.03, 0.22", "-24.2751, -147.025, -76.1656, 0.66", "-24.2045, -147.563, -76.4277, 0.66", "-24.0398, -148.743, -77.0999, 0.15", "-23.957, -149.467, -77.5697, 0.15", "-23.8674, -150.381, -78.2223, 1.03", "-23.8473, -150.642, -78.4346, 1.03", "-23.7134, -152.585, -80.1477, 0.22", "-23.6569, -153.649, -81.1914, 0.22", "-23.6574, -154.576, -82.2259, 1.11" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-76.0199, 124.099, -94.3071, 0.22", "-77.0554, 123.475, -94.7456, 0.22", "-77.614, 123.151, -94.9794, 0.22", "-78.6779, 122.532, -95.3994, 0.59", "-79.916, 121.811, -95.8558, 0.15", "-80.2537, 121.613, -95.9762, 0.81", "-80.8505, 121.262, -96.1889, 1.11", "-81.7994, 120.724, -96.5063, 0.22", "-82.3776, 120.383, -96.705, 1.03", "-82.7637, 120.14, -96.8383, 1.33", "-82.8464, 120.095, -96.8532, 1.33" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-76.0199, 124.099, -94.3071, 0.22", "-76.6244, 125.05, -93.5189, 0.22", "-77.0941, 125.967, -92.6403, 0.22", "-77.3623, 126.512, -92.1007, 1.25", "-77.3792, 126.56, -92.055, 1.25", "-77.7806, 127.955, -90.7332, 0.15", "-77.9339, 128.586, -90.1753, 0.15", "-78.0996, 130.017, -88.9406, 0.96", "-78.1366, 130.463, -88.5884, 1.18", "-78.209, 131.627, -87.6951, 0.15", "-78.2116, 131.681, -87.6539, 0.15", "-78.2214, 132.547, -87.0154, 0.15", "-78.2291, 134.157, -85.8803, 0.15", "-78.2858, 134.912, -85.4449, 0.66", "-78.3218, 135.206, -85.2657, 0.66" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-23.6574, -154.576, -82.2259, 0.22", "-24.804, -154.766, -84.1273, 0.22", "-25.363, -154.852, -84.9507, 0.22", "-25.5997, -154.907, -85.377, 1.03", "-25.7106, -154.936, -85.5769, 1.33", "-26.7658, -155.222, -87.4881, 0.22", "-27.532, -155.409, -88.9047, 0.22", "-27.7759, -155.458, -89.3561, 0.88", "-28.7783, -155.666, -91.3793, 0.22", "-29.385, -155.789, -92.5375, 0.22", "-29.4109, -155.795, -92.5805, 0.22", "-30.2801, -156.065, -93.8218, 0.22", "-30.332, -156.084, -93.8925, 0.22", "-31.1684, -156.454, -94.8827, 0.22", "-32.0951, -156.972, -95.8322, 0.22", "-33.0942, -157.752, -96.8879, 0.22", "-33.128, -157.785, -96.9226, 0.22", "-33.5102, -158.234, -97.2987, 0.74", "-33.71, -158.534, -97.5154, 0.74", "-34.2673, -159.905, -98.368, 0.22", "-34.5021, -160.827, -98.933, 0.22", "-34.5803, -161.167, -99.1398, 0.29", "-34.6204, -161.326, -99.2261, 0.37", "-34.8852, -162.405, -99.7953, 0.15", "-35.358, -164.281, -100.733, 0.15", "-35.3717, -164.331, -100.756, 0.15", "-35.8381, -165.837, -101.46, 0.15", "-36.9657, -168.956, -102.906, 0.15", "-37.3846, -170.012, -103.408, 0.44", "-37.7458, -170.854, -103.804, 0.15", "-38.7028, -172.942, -104.764, 0.15", "-39.2736, -174.177, -105.34, 0.37", "-39.8443, -175.374, -105.924, 0.15", "-40.5425, -176.573, -106.546, 0.59" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-23.6574, -154.576, -82.2259, 0.22", "-23.8329, -156.494, -82.4581, 0.22", "-23.9632, -158.549, -82.7022, 0.22", "-24.1107, -160.876, -82.9787, 0.22", "-24.1491, -161.482, -83.0507, 1.33", "-24.209, -162.426, -83.1629, 1.33", "-24.2932, -163.755, -83.3206, 0.22", "-24.3085, -164.078, -83.3612, 0.59" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-82.8464, 120.095, -96.8532, 0.22", "-84.1672, 119.029, -97.9368, 0.22", "-84.6946, 118.604, -98.3695, 0.59", "-85.5415, 117.92, -99.0642, 0.22", "-86.0305, 117.526, -99.4655, 0.66", "-86.0923, 117.476, -99.5162, 0.66" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-82.8464, 120.095, -96.8532, 0.15", "-81.6675, 118.319, -97.4799, 0.15", "-80.8498, 117.087, -97.9146, 0.29", "-80.5117, 116.578, -98.0943, 0.29" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-24.3085, -164.078, -83.3612, 0.29", "-22.8713, -165.191, -83.5837, 0.29", "-21.8549, -165.978, -83.741, 0.44" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-24.3085, -164.078, -83.3612, 0.22", "-25.7533, -166.03, -84.5057, 0.22", "-26.5073, -167.109, -85.1211, 0.44", "-27.394, -168.752, -85.9572, 0.15", "-28.4037, -170.762, -86.9516, 0.15", "-28.6842, -171.342, -87.2295, 0.81", "-28.8673, -171.732, -87.4111, 0.81", "-30.6331, -175.696, -89.1874, 0.15", "-32.6869, -180.992, -91.3716, 0.15", "-32.6869, -180.992, -91.3716, 0.37", "-33.0327, -182.226, -91.8367, 0.15", "-33.187, -182.833, -92.0504, 0.81", "-33.3429, -183.528, -92.2803, 0.81", "-33.6623, -185.543, -92.8423, 0.15", "-33.7702, -186.255, -93.0121, 0.44", "-33.8083, -186.604, -93.1218, 0.44", "-33.9, -187.713, -93.5115, 0.15", "-33.9528, -188.162, -93.6621, 0.66", "-33.973, -188.297, -93.7056, 0.66", "-34.0813, -188.965, -93.9152, 0.66", "-34.7311, -193.095, -95.2184, 0.15", "-34.8688, -193.985, -95.5005, 0.44", "-35.6978, -199.515, -97.2495, 0.15", "-36.4828, -204.701, -98.8746, 0.15", "-36.509, -204.869, -98.9261, 0.59" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_32", "dend_23", "dend_14", "dend_11", "dend_0", "dend_38", "dend_33", "dend_29", "dend_24", "dend_20", "dend_15", "dend_13", "dend_12", "dend_2", "dend_1", "dend_48", "dend_39", "dend_37", "dend_34", "dend_31", "dend_30", "dend_28", "dend_25", "dend_22", "dend_21", "dend_19", "dend_16", "dend_10", "dend_3", "dend_47", "dend_40", "dend_36", "dend_35", "dend_27", "dend_26", "dend_18", "dend_17", "dend_5", "dend_4", "dend_46", "dend_41", "dend_7", "dend_6", "dend_45", "dend_42", "dend_9", "dend_8", "dend_44", "dend_43" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_32", "dend_23", "dend_14", "dend_11", "dend_0", "dend_38", "dend_33", "dend_29", "dend_24", "dend_20", "dend_15", "dend_13", "dend_12", "dend_2", "dend_1", "dend_48", "dend_39", "dend_37", "dend_34", "dend_31", "dend_30", "dend_28", "dend_25", "dend_22", "dend_21", "dend_19", "dend_16", "dend_10", "dend_3", "dend_47", "dend_40", "dend_36", "dend_35", "dend_27", "dend_26", "dend_18", "dend_17", "dend_5", "dend_4", "dend_46", "dend_41", "dend_7", "dend_6", "dend_45", "dend_42", "dend_9", "dend_8", "dend_44", "dend_43" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_32", "dend_32", "dend_32", "dend_32", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L5_SBC_365080b27f_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_14, id: dend_14, parent: soma_0
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_38, id: dend_38, parent: dend_32
create dend_38
public dend_38
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_23
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_48, id: dend_48, parent: dend_38
create dend_48
public dend_48
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_28, id: dend_28, parent: dend_24
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_47, id: dend_47, parent: dend_39
create dend_47
public dend_47
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_46, id: dend_46, parent: dend_40
create dend_46
public dend_46
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_45, id: dend_45, parent: dend_41
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_32, dend_23, dend_14, dend_11, dend_0, dend_38, dend_33, dend_29, dend_24, dend_20, dend_15, dend_13, dend_12, dend_2, dend_1, dend_48, dend_39, dend_37, dend_34, dend_31, dend_30, dend_28, dend_25, dend_22, dend_21, dend_19, dend_16, dend_10, dend_3, dend_47, dend_40, dend_36, dend_35, dend_27, dend_26, dend_18, dend_17, dend_5, dend_4, dend_46, dend_41, dend_7, dend_6, dend_45, dend_42, dend_9, dend_8, dend_44, dend_43]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_32, dend_23, dend_14, dend_11, dend_0, dend_38, dend_33, dend_29, dend_24, dend_20, dend_15, dend_13, dend_12, dend_2, dend_1, dend_48, dend_39, dend_37, dend_34, dend_31, dend_30, dend_28, dend_25, dend_22, dend_21, dend_19, dend_16, dend_10, dend_3, dend_47, dend_40, dend_36, dend_35, dend_27, dend_26, dend_18, dend_17, dend_5, dend_4, dend_46, dend_41, dend_7, dend_6, dend_45, dend_42, dend_9, dend_8, dend_44, dend_43]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_46
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_32(0), soma_0(0.4999992178869266)
    connect dend_23(0), soma_0(0.4999992178869266)
    connect dend_14(0), soma_0(0.4999992178869266)
    connect dend_11(0), soma_0(0.4999992178869266)
    connect dend_0(0), soma_0(0.4999992178869266)
    connect axon_0(0), soma_0(1.0)
    connect dend_38(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_48(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_28(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_47(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_46(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_45(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.327285, 12.2563, -2.37682, 3.20394 ) }
    soma_0 { pt3dadd( -0.32997, 10.9888, -2.12879, 5.58325 ) }
    soma_0 { pt3dadd( -0.332655, 9.7213, -1.88076, 6.08709 ) }
    soma_0 { pt3dadd( -0.335339, 8.45379, -1.63272, 7.22603 ) }
    soma_0 { pt3dadd( -0.338024, 7.18628, -1.38469, 8.89261 ) }
    soma_0 { pt3dadd( -0.340709, 5.91877, -1.13666, 10.2823 ) }
    soma_0 { pt3dadd( -0.343394, 4.65126, -0.888622, 11.3086 ) }
    soma_0 { pt3dadd( -0.346078, 3.38375, -0.640589, 12.3784 ) }
    soma_0 { pt3dadd( -0.348763, 2.11624, -0.392555, 13.7451 ) }
    soma_0 { pt3dadd( -0.351448, 0.84873, -0.144521, 14.7054 ) }
    soma_0 { pt3dadd( -0.354133, -0.41878, 0.103512, 15.1673 ) }
    soma_0 { pt3dadd( -0.356817, -1.68629, 0.351546, 15.492 ) }
    soma_0 { pt3dadd( -0.359502, -2.9538, 0.599579, 15.6089 ) }
    soma_0 { pt3dadd( -0.362187, -4.22131, 0.847613, 15.0499 ) }
    soma_0 { pt3dadd( -0.364872, -5.48882, 1.09565, 14.3371 ) }
    soma_0 { pt3dadd( -0.367556, -6.75633, 1.34368, 13.225 ) }
    soma_0 { pt3dadd( -0.370241, -8.02384, 1.59171, 11.7728 ) }
    soma_0 { pt3dadd( -0.372926, -9.29135, 1.83975, 10.2754 ) }
    soma_0 { pt3dadd( -0.375611, -10.5589, 2.08778, 7.58879 ) }
    soma_0 { pt3dadd( -0.378295, -11.8264, 2.33581, 5.07363 ) }
    soma_0 { pt3dadd( -0.38098, -13.0939, 2.58385, 2.91986 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 21/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -1.63702, -11.5065, 3.2994, 4.13 ) }
    dend_32 { pt3dadd( -1.63702, -11.5065, 3.2994, 4.13 ) }
    dend_32 { pt3dadd( -1.5193, -12.4979, 3.64542, 4.13 ) }
    dend_32 { pt3dadd( -1.34705, -13.9486, 4.15171, 3.76 ) }
    dend_32 { pt3dadd( -1.07465, -16.2427, 4.95239, 3.68 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 26/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -0.0870214, -4.76153, -15.4506, 1.69 ) }
    dend_23 { pt3dadd( -0.0319323, -4.77157, -15.4506, 1.69 ) }
    dend_23 { pt3dadd( 0.139142, -4.80523, -15.4506, 1.69 ) }
    dend_23 { pt3dadd( 0.829189, -4.94788, -15.4463, 1.69 ) }
    dend_23 { pt3dadd( 1.83378, -5.19236, -15.4072, 1.69 ) }
    dend_23 { pt3dadd( 1.90357, -5.21234, -15.4132, 1.69 ) }
    dend_23 { pt3dadd( 3.00179, -5.62701, -15.657, 1.69 ) }
    dend_23 { pt3dadd( 3.05337, -5.65397, -15.6806, 1.69 ) }
    dend_23 { pt3dadd( 3.70729, -6.25539, -16.492, 1.84 ) }
    dend_23 { pt3dadd( 3.63324, -6.75268, -17.642, 1.84 ) }
    dend_23 { pt3dadd( 3.05879, -7.22542, -19.3736, 1.99 ) }
    dend_23 { pt3dadd( 2.49345, -7.60987, -20.8773, 1.99 ) }
    dend_23 { pt3dadd( 1.8238, -7.97788, -22.4401, 1.99 ) }
    dend_23 { pt3dadd( 0.784423, -8.44942, -24.6244, 2.14 ) }
    dend_23 { pt3dadd( -0.387044, -8.85777, -26.7923, 2.43 ) }
    dend_23 { pt3dadd( -2.33406, -9.3409, -30.0039, 2.87 ) }
    // Section: dend_14, id: dend_14, parent: soma_0 (entry count 42/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 0.632978, 10.562, -5.6406, 2.58 ) }
    dend_14 { pt3dadd( 0.632978, 10.562, -5.6406, 2.58 ) }
    dend_14 { pt3dadd( 1.14505, 10.9743, -5.84458, 2.28 ) }
    dend_14 { pt3dadd( 1.67091, 11.426, -6.03331, 2.21 ) }
    dend_14 { pt3dadd( 2.68275, 12.4178, -6.36822, 0.81 ) }
    dend_14 { pt3dadd( 3.83806, 13.7594, -6.72773, 0.81 ) }
    dend_14 { pt3dadd( 4.41598, 14.4985, -6.89921, 1.25 ) }
    dend_14 { pt3dadd( 5.09133, 15.5246, -7.05962, 1.99 ) }
    dend_14 { pt3dadd( 5.12092, 15.5856, -7.06402, 1.99 ) }
    dend_14 { pt3dadd( 5.39401, 16.5956, -7.04899, 2.14 ) }
    dend_14 { pt3dadd( 5.48064, 17.6262, -6.96435, 2.14 ) }
    dend_14 { pt3dadd( 5.47777, 17.6938, -6.95885, 2.14 ) }
    dend_14 { pt3dadd( 5.36537, 18.9115, -6.89411, 1.84 ) }
    dend_14 { pt3dadd( 5.2084, 20.0736, -6.91573, 1.4 ) }
    dend_14 { pt3dadd( 4.92135, 21.643, -7.03682, 0.81 ) }
    dend_14 { pt3dadd( 4.66479, 22.6987, -7.21341, 0.81 ) }
    dend_14 { pt3dadd( 4.27462, 24.035, -7.53955, 1.11 ) }
    dend_14 { pt3dadd( 4.25635, 24.089, -7.55816, 1.11 ) }
    dend_14 { pt3dadd( 3.86452, 25.0908, -8.02329, 1.69 ) }
    dend_14 { pt3dadd( 3.40521, 26.1779, -8.64095, 1.77 ) }
    dend_14 { pt3dadd( 3.03806, 27.1047, -9.25216, 1.18 ) }
    dend_14 { pt3dadd( 3.02532, 27.1528, -9.28547, 1.18 ) }
    dend_14 { pt3dadd( 2.96892, 27.9836, -9.81815, 0.88 ) }
    dend_14 { pt3dadd( 3.05833, 28.6383, -10.1739, 0.74 ) }
    dend_14 { pt3dadd( 3.10309, 28.7508, -10.2201, 0.74 ) }
    dend_14 { pt3dadd( 3.56688, 29.532, -10.4443, 0.74 ) }
    dend_14 { pt3dadd( 4.2478, 30.5205, -10.6304, 0.88 ) }
    dend_14 { pt3dadd( 4.77208, 31.2397, -10.7281, 1.69 ) }
    dend_14 { pt3dadd( 5.14071, 31.7349, -10.7656, 1.92 ) }
    dend_14 { pt3dadd( 5.446, 32.1711, -10.7926, 2.21 ) }
    dend_14 { pt3dadd( 5.76207, 32.6705, -10.8162, 1.84 ) }
    dend_14 { pt3dadd( 6.13445, 33.3855, -10.8355, 1.25 ) }
    dend_14 { pt3dadd( 6.47241, 34.2578, -10.8846, 0.81 ) }
    dend_14 { pt3dadd( 6.68963, 35.0429, -10.9823, 0.81 ) }
    dend_14 { pt3dadd( 6.79194, 35.8176, -11.1603, 1.11 ) }
    dend_14 { pt3dadd( 6.78722, 35.8787, -11.1896, 1.11 ) }
    dend_14 { pt3dadd( 6.65936, 36.386, -11.5775, 1.11 ) }
    dend_14 { pt3dadd( 6.32044, 37.241, -12.4009, 0.59 ) }
    dend_14 { pt3dadd( 6.14797, 37.5872, -12.7883, 0.59 ) }
    dend_14 { pt3dadd( 5.7641, 38.2608, -13.6851, 0.52 ) }
    dend_14 { pt3dadd( 5.01486, 39.4796, -15.4512, 1.99 ) }
    dend_14 { pt3dadd( 4.65107, 40.0488, -16.3195, 3.02 ) }
    dend_14 { pt3dadd( 4.47754, 40.3027, -16.7433, 3.02 ) }
    dend_14 { pt3dadd( 4.44766, 40.3426, -16.8142, 3.02 ) }
    dend_14 { pt3dadd( 3.92451, 41.0361, -18.1198, 2.73 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 87/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 2.77298, 7.82597, 1.3594, 1.47 ) }
    dend_11 { pt3dadd( 3.15069, 8.12112, 1.38654, 1.47 ) }
    dend_11 { pt3dadd( 3.92046, 8.68056, 1.52933, 1.25 ) }
    dend_11 { pt3dadd( 4.17052, 8.85641, 1.58522, 1.62 ) }
    dend_11 { pt3dadd( 4.63993, 9.15134, 1.6923, 1.92 ) }
    dend_11 { pt3dadd( 5.18052, 9.46939, 1.81639, 1.69 ) }
    dend_11 { pt3dadd( 5.99207, 9.85439, 2.04987, 0.88 ) }
    dend_11 { pt3dadd( 6.81952, 10.1102, 2.56352, 0.88 ) }
    dend_11 { pt3dadd( 6.8541, 10.1191, 2.60522, 0.88 ) }
    dend_11 { pt3dadd( 7.20426, 10.2082, 3.2323, 0.81 ) }
    dend_11 { pt3dadd( 7.21961, 10.2138, 3.27716, 0.81 ) }
    dend_11 { pt3dadd( 7.48702, 10.4548, 4.71338, 1.03 ) }
    dend_11 { pt3dadd( 7.64568, 11.0318, 7.19884, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_11 { pt3dadd( 7.61427, 11.4636, 8.59732, 1.11 ) }
    dend_11 { pt3dadd( 7.60933, 11.4853, 8.64711, 1.11 ) }
    dend_11 { pt3dadd( 7.42252, 12.0486, 9.6412, 1.33 ) }
    dend_11 { pt3dadd( 7.20443, 12.6586, 10.3949, 1.99 ) }
    dend_11 { pt3dadd( 7.04732, 13.0888, 10.7231, 2.73 ) }
    dend_11 { pt3dadd( 6.95345, 13.4771, 10.9227, 2.65 ) }
    dend_11 { pt3dadd( 6.88351, 14.2774, 11.2981, 2.36 ) }
    dend_11 { pt3dadd( 6.88619, 14.3186, 11.3163, 2.36 ) }
    dend_11 { pt3dadd( 7.13467, 15.4001, 11.7492, 0.81 ) }
    dend_11 { pt3dadd( 7.3878, 16.076, 12.0188, 0.59 ) }
    dend_11 { pt3dadd( 7.98772, 17.3217, 12.4877, 0.44 ) }
    dend_11 { pt3dadd( 8.48913, 18.1523, 12.7501, 0.44 ) }
    dend_11 { pt3dadd( 8.99589, 18.8465, 12.8899, 1.18 ) }
    dend_11 { pt3dadd( 9.41176, 19.3431, 12.9522, 1.99 ) }
    dend_11 { pt3dadd( 9.84459, 19.8038, 13.0382, 2.65 ) }
    dend_11 { pt3dadd( 10.0862, 20.0593, 13.0996, 2.65 ) }
    dend_11 { pt3dadd( 10.7603, 20.8097, 13.3551, 1.77 ) }
    dend_11 { pt3dadd( 11.4088, 21.5561, 13.7634, 0.44 ) }
    dend_11 { pt3dadd( 12.045, 22.3305, 14.2898, 0.44 ) }
    dend_11 { pt3dadd( 13.1719, 23.7932, 15.4908, 1.25 ) }
    dend_11 { pt3dadd( 13.4949, 24.2558, 15.9062, 2.43 ) }
    dend_11 { pt3dadd( 14.0179, 25.0879, 16.6767, 2.43 ) }
    dend_11 { pt3dadd( 14.4196, 25.8075, 17.3771, 2.21 ) }
    dend_11 { pt3dadd( 14.7107, 26.3988, 17.9371, 1.25 ) }
    dend_11 { pt3dadd( 15.045, 27.1686, 18.5444, 0.52 ) }
    dend_11 { pt3dadd( 15.2825, 27.7325, 18.8536, 0.52 ) }
    dend_11 { pt3dadd( 15.5721, 28.4169, 19.147, 0.52 ) }
    dend_11 { pt3dadd( 15.5922, 28.464, 19.1593, 0.52 ) }
    dend_11 { pt3dadd( 15.8871, 29.1058, 19.2839, 0.88 ) }
    dend_11 { pt3dadd( 16.1962, 29.7267, 19.3826, 1.25 ) }
    dend_11 { pt3dadd( 16.4781, 30.2717, 19.422, 1.69 ) }
    dend_11 { pt3dadd( 16.689, 30.6538, 19.4576, 1.69 ) }
    dend_11 { pt3dadd( 16.7279, 30.7236, 19.466, 1.69 ) }
    dend_11 { pt3dadd( 17.1092, 31.3848, 19.5621, 1.69 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 34/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -3.16702, 10.657, -3.0206, 1.62 ) }
    dend_0 { pt3dadd( -3.16702, 10.657, -3.0206, 1.62 ) }
    dend_0 { pt3dadd( -3.43475, 11.1271, -2.6491, 1.4 ) }
    dend_0 { pt3dadd( -3.91869, 11.9801, -1.90585, 1.4 ) }
    dend_0 { pt3dadd( -4.2508, 12.5597, -1.41775, 1.4 ) }
    dend_0 { pt3dadd( -4.54476, 13.0812, -0.991057, 1.69 ) }
    dend_0 { pt3dadd( -4.96259, 13.8186, -0.400624, 1.99 ) }
    dend_0 { pt3dadd( -5.41383, 14.6111, 0.21085, 2.36 ) }
    dend_0 { pt3dadd( -5.85383, 15.3813, 0.775883, 3.09 ) }
    dend_0 { pt3dadd( -6.29515, 16.1083, 1.2536, 3.32 ) }
    dend_0 { pt3dadd( -6.70691, 16.7489, 1.60199, 3.09 ) }
    dend_0 { pt3dadd( -7.08029, 17.2814, 1.80594, 2.43 ) }
    dend_0 { pt3dadd( -7.55455, 17.9044, 1.88201, 1.4 ) }
    dend_0 { pt3dadd( -7.85174, 18.2701, 1.86859, 1.33 ) }
    dend_0 { pt3dadd( -8.32707, 18.814, 1.75502, 1.18 ) }
    dend_0 { pt3dadd( -8.78616, 19.2908, 1.57686, 1.4 ) }
    dend_0 { pt3dadd( -9.40996, 19.8704, 1.21388, 1.69 ) }
    dend_0 { pt3dadd( -10.1347, 20.4944, 0.652971, 1.84 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 52/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.38098, -13.0939, 2.58385, 1.02029 ) }
    axon_0 { pt3dadd( -0.412752, -28.0939, 2.58385, 1.02029 ) }
    axon_0 { pt3dadd( -0.444525, -43.0938, 2.58385, 1.02029 ) }
    // Section: dend_38, id: dend_38, parent: dend_32 (entry count 55/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -1.07465, -16.2427, 4.95239, 1.99 ) }
    dend_38 { pt3dadd( -0.11914, -17.6435, 4.88025, 1.99 ) }
    dend_38 { pt3dadd( 0.87513, -18.9981, 4.87914, 1.62 ) }
    dend_38 { pt3dadd( 0.927695, -19.0675, 4.88092, 1.62 ) }
    dend_38 { pt3dadd( 2.12842, -20.6382, 5.00235, 1.18 ) }
    dend_38 { pt3dadd( 2.80358, -21.5364, 5.09163, 1.18 ) }
    dend_38 { pt3dadd( 3.6763, -22.7282, 5.22005, 1.18 ) }
    dend_38 { pt3dadd( 4.91359, -24.4551, 5.45252, 1.18 ) }
    dend_38 { pt3dadd( 5.9475, -25.9621, 5.68166, 1.47 ) }
    dend_38 { pt3dadd( 7.0199, -27.6473, 5.95315, 2.21 ) }
    dend_38 { pt3dadd( 7.92997, -29.1417, 6.22405, 2.73 ) }
    dend_38 { pt3dadd( 8.79659, -30.6479, 6.50202, 2.8 ) }
    dend_38 { pt3dadd( 9.55305, -32.0478, 6.75918, 2.95 ) }
    dend_38 { pt3dadd( 10.2858, -33.5426, 7.0149, 2.95 ) }
    dend_38 { pt3dadd( 10.6246, -34.3096, 7.14007, 2.95 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 70/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -1.07465, -16.2427, 4.95239, 1.18 ) }
    dend_33 { pt3dadd( -2.6311, -17.3434, 7.16083, 1.18 ) }
    dend_33 { pt3dadd( -3.76285, -18.1438, 8.76669, 1.18 ) }
    dend_33 { pt3dadd( -4.46176, -18.6381, 9.75837, 1.69 ) }
    dend_33 { pt3dadd( -5.03426, -19.0429, 10.5707, 2.36 ) }
    dend_33 { pt3dadd( -5.37876, -19.2865, 11.0595, 2.73 ) }
    // Section: dend_29, id: dend_29, parent: dend_23 (entry count 76/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -2.33406, -9.3409, -30.0039, 0.66 ) }
    dend_29 { pt3dadd( -0.500256, -10.9121, -31.6086, 0.66 ) }
    dend_29 { pt3dadd( 0.587748, -11.767, -32.452, 0.74 ) }
    dend_29 { pt3dadd( 1.36239, -12.3226, -33.0839, 0.74 ) }
    dend_29 { pt3dadd( 1.99957, -12.7374, -33.6222, 0.74 ) }
    dend_29 { pt3dadd( 2.05035, -12.7678, -33.6661, 0.74 ) }
    dend_29 { pt3dadd( 3.27972, -13.4389, -34.7512, 0.52 ) }
    dend_29 { pt3dadd( 3.88637, -13.5564, -35.2353, 0.52 ) }
    dend_29 { pt3dadd( 4.62114, -13.3845, -36.106, 0.44 ) }
    dend_29 { pt3dadd( 5.06045, -13.1556, -36.7983, 0.44 ) }
    dend_29 { pt3dadd( 5.17873, -13.0976, -36.9934, 0.44 ) }
    dend_29 { pt3dadd( 5.61292, -12.9587, -37.6272, 0.44 ) }
    dend_29 { pt3dadd( 6.68484, -12.7381, -39.1515, 0.88 ) }
    dend_29 { pt3dadd( 6.72921, -12.7354, -39.2115, 0.88 ) }
    dend_29 { pt3dadd( 7.70869, -12.789, -40.4228, 1.11 ) }
    dend_29 { pt3dadd( 9.04024, -12.9505, -41.9971, 1.84 ) }
    dend_29 { pt3dadd( 10.5629, -13.1959, -43.7018, 2.14 ) }
    dend_29 { pt3dadd( 12.9714, -13.677, -46.259, 0.29 ) }
    dend_29 { pt3dadd( 13.8144, -13.8652, -47.0811, 0.29 ) }
    dend_29 { pt3dadd( 14.4678, -14.0066, -47.6566, 1.03 ) }
    dend_29 { pt3dadd( 14.5353, -14.0216, -47.7061, 1.03 ) }
    dend_29 { pt3dadd( 15.0713, -14.1693, -48.0189, 1.33 ) }
    dend_29 { pt3dadd( 15.1343, -14.1878, -48.0552, 1.33 ) }
    dend_29 { pt3dadd( 15.7882, -14.3373, -48.4884, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_29 { pt3dadd( 16.9014, -14.4757, -49.375, 0.37 ) }
    dend_29 { pt3dadd( 17.6439, -14.5015, -50.0706, 0.37 ) }
    dend_29 { pt3dadd( 18.8535, -14.4354, -51.4285, 0.52 ) }
    dend_29 { pt3dadd( 20.3684, -14.2593, -53.4033, 0.74 ) }
    dend_29 { pt3dadd( 21.1479, -14.1641, -54.4986, 1.62 ) }
    dend_29 { pt3dadd( 21.5706, -14.1049, -55.1297, 1.92 ) }
    dend_29 { pt3dadd( 22.3281, -13.9761, -56.2954, 2.43 ) }
    dend_29 { pt3dadd( 23.5693, -13.6784, -58.1415, 1.69 ) }
    dend_29 { pt3dadd( 24.685, -13.3012, -59.7915, 0.37 ) }
    dend_29 { pt3dadd( 25.216, -13.1118, -60.5619, 0.37 ) }
    dend_29 { pt3dadd( 25.5835, -12.9877, -61.0843, 0.37 ) }
    dend_29 { pt3dadd( 26.0713, -12.8478, -61.7822, 1.11 ) }
    dend_29 { pt3dadd( 26.6345, -12.7324, -62.4867, 1.33 ) }
    dend_29 { pt3dadd( 28.5451, -12.3766, -64.4492, 0.22 ) }
    dend_29 { pt3dadd( 28.6092, -12.366, -64.5056, 0.22 ) }
    dend_29 { pt3dadd( 29.2361, -12.3105, -65.0162, 0.22 ) }
    dend_29 { pt3dadd( 30.0593, -12.3844, -65.6055, 0.22 ) }
    dend_29 { pt3dadd( 31.1185, -12.6072, -66.2602, 0.88 ) }
    dend_29 { pt3dadd( 32.2064, -12.8777, -66.9093, 1.55 ) }
    dend_29 { pt3dadd( 32.893, -12.9903, -67.495, 1.77 ) }
    dend_29 { pt3dadd( 34.0622, -13.0225, -69.044, 0.22 ) }
    dend_29 { pt3dadd( 34.7254, -12.9415, -70.2747, 0.22 ) }
    dend_29 { pt3dadd( 35.2616, -12.8202, -71.4505, 1.47 ) }
    dend_29 { pt3dadd( 35.9478, -12.6408, -73.1212, 2.43 ) }
    dend_29 { pt3dadd( 37.9617, -12.0033, -78.3297, 1.99 ) }
    dend_29 { pt3dadd( 39.142, -11.5349, -81.6684, 1.77 ) }
    dend_29 { pt3dadd( 40.4976, -10.8498, -85.8987, 0.22 ) }
    dend_29 { pt3dadd( 40.5153, -10.8387, -85.9592, 0.22 ) }
    dend_29 { pt3dadd( 40.8078, -10.6393, -87.0698, 0.22 ) }
    dend_29 { pt3dadd( 41.0514, -10.4711, -88.0525, 1.18 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 30/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -2.33406, -9.3409, -30.0039, 1.03 ) }
    dend_24 { pt3dadd( -3.58255, -11.4257, -30.7241, 1.03 ) }
    dend_24 { pt3dadd( -4.29679, -13.0997, -31.1617, 0.88 ) }
    dend_24 { pt3dadd( -4.33112, -13.1986, -31.1838, 0.88 ) }
    dend_24 { pt3dadd( -4.66436, -14.4564, -31.4175, 0.88 ) }
    dend_24 { pt3dadd( -4.79945, -15.608, -31.6849, 1.69 ) }
    dend_24 { pt3dadd( -4.8365, -16.6095, -31.9252, 1.84 ) }
    dend_24 { pt3dadd( -4.7717, -17.2049, -32.0785, 1.99 ) }
    dend_24 { pt3dadd( -4.76343, -17.2727, -32.0972, 1.99 ) }
    dend_24 { pt3dadd( -4.70256, -18.1088, -32.3777, 1.69 ) }
    dend_24 { pt3dadd( -4.71704, -20.3758, -33.3308, 1.03 ) }
    dend_24 { pt3dadd( -4.99205, -21.7564, -34.2158, 0.88 ) }
    dend_24 { pt3dadd( -5.37538, -22.7105, -34.9935, 0.66 ) }
    dend_24 { pt3dadd( -5.65482, -23.2593, -35.4853, 0.66 ) }
    dend_24 { pt3dadd( -6.1801, -24.0652, -36.289, 0.52 ) }
    dend_24 { pt3dadd( -6.73369, -24.5949, -36.9582, 0.52 ) }
    dend_24 { pt3dadd( -8.74625, -25.5256, -38.7016, 1.77 ) }
    dend_24 { pt3dadd( -9.2686, -25.6702, -39.1676, 1.77 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 48/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 3.92451, 41.0361, -18.1198, 0.52 ) }
    dend_20 { pt3dadd( 5.07101, 41.6479, -20.3457, 0.52 ) }
    dend_20 { pt3dadd( 5.26344, 41.7462, -20.7047, 0.52 ) }
    dend_20 { pt3dadd( 5.62287, 41.9691, -21.4619, 0.37 ) }
    dend_20 { pt3dadd( 6.06992, 42.3281, -22.5022, 1.4 ) }
    dend_20 { pt3dadd( 6.16737, 42.4357, -22.759, 1.55 ) }
    dend_20 { pt3dadd( 6.98498, 43.5697, -25.1094, 0.74 ) }
    dend_20 { pt3dadd( 7.08037, 43.8054, -25.5071, 0.74 ) }
    dend_20 { pt3dadd( 7.33254, 44.7833, -27.0224, 0.29 ) }
    dend_20 { pt3dadd( 7.39874, 45.2877, -27.7197, 0.29 ) }
    dend_20 { pt3dadd( 7.42156, 46.1313, -28.7709, 1.92 ) }
    dend_20 { pt3dadd( 7.39531, 46.4729, -29.1478, 2.28 ) }
    dend_20 { pt3dadd( 7.20211, 47.7591, -30.3811, 0.22 ) }
    dend_20 { pt3dadd( 7.19322, 47.8297, -30.4496, 0.22 ) }
    dend_20 { pt3dadd( 7.17452, 48.137, -30.7385, 0.22 ) }
    dend_20 { pt3dadd( 7.21828, 48.9651, -31.5956, 1.18 ) }
    dend_20 { pt3dadd( 7.26153, 49.29, -31.9459, 1.77 ) }
    dend_20 { pt3dadd( 7.49045, 50.6872, -33.3855, 0.22 ) }
    dend_20 { pt3dadd( 7.64781, 51.4864, -34.1484, 1.84 ) }
    dend_20 { pt3dadd( 7.733, 51.8774, -34.5026, 2.21 ) }
    dend_20 { pt3dadd( 8.0762, 53.1793, -35.5897, 0.22 ) }
    dend_20 { pt3dadd( 8.08907, 53.2184, -35.6171, 0.22 ) }
    dend_20 { pt3dadd( 8.42601, 54.0784, -36.1182, 0.22 ) }
    dend_20 { pt3dadd( 8.44806, 54.1265, -36.1369, 0.22 ) }
    dend_20 { pt3dadd( 8.78416, 54.7428, -36.3467, 0.66 ) }
    dend_20 { pt3dadd( 9.11351, 55.2767, -36.6186, 0.88 ) }
    dend_20 { pt3dadd( 9.57019, 55.9768, -37.0363, 0.22 ) }
    dend_20 { pt3dadd( 10.0093, 56.6048, -37.4942, 1.99 ) }
    dend_20 { pt3dadd( 10.2422, 56.925, -37.7799, 2.5 ) }
    dend_20 { pt3dadd( 10.8571, 57.8235, -38.6828, 0.22 ) }
    dend_20 { pt3dadd( 11.7399, 59.2094, -40.2215, 0.59 ) }
    dend_20 { pt3dadd( 11.836, 59.3915, -40.4385, 0.59 ) }
    dend_20 { pt3dadd( 11.8488, 59.4221, -40.476, 0.59 ) }
    dend_20 { pt3dadd( 12.0832, 60.1878, -41.3472, 0.96 ) }
    dend_20 { pt3dadd( 12.1774, 60.5896, -41.7653, 1.11 ) }
    dend_20 { pt3dadd( 12.2511, 60.9819, -42.1179, 0.96 ) }
    dend_20 { pt3dadd( 12.4216, 61.8647, -42.8109, 0.22 ) }
    dend_20 { pt3dadd( 12.457, 61.9926, -42.9683, 0.22 ) }
    dend_20 { pt3dadd( 12.6116, 62.4407, -43.6789, 0.22 ) }
    dend_20 { pt3dadd( 12.7618, 62.8135, -44.4178, 1.11 ) }
    dend_20 { pt3dadd( 12.9391, 63.2747, -45.5697, 1.4 ) }
    dend_20 { pt3dadd( 13.071, 63.6183, -46.5546, 2.06 ) }
    dend_20 { pt3dadd( 13.6292, 64.9734, -50.738, 1.18 ) }
    dend_20 { pt3dadd( 13.8449, 65.48, -52.4198, 1.18 ) }
    dend_20 { pt3dadd( 14.124, 66.1124, -54.7514, 1.4 ) }
    dend_20 { pt3dadd( 14.4806, 66.9342, -58.0393, 1.55 ) }
    dend_20 { pt3dadd( 14.4854, 66.9451, -58.0889, 1.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 95/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 3.92451, 41.0361, -18.1198, 0.52 ) }
    dend_15 { pt3dadd( 4.09962, 43.4574, -17.8395, 0.52 ) }
    dend_15 { pt3dadd( 4.23287, 44.9793, -17.6759, 0.52 ) }
    dend_15 { pt3dadd( 4.39349, 46.6102, -17.6466, 1.18 ) }
    dend_15 { pt3dadd( 4.55274, 47.9355, -17.6937, 1.99 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_15 { pt3dadd( 4.63887, 48.4901, -17.7285, 2.28 ) }
    dend_15 { pt3dadd( 4.79674, 49.1684, -17.7792, 1.84 ) }
    dend_15 { pt3dadd( 5.04903, 49.8334, -17.8477, 1.55 ) }
    dend_15 { pt3dadd( 5.77008, 51.478, -18.1, 0.88 ) }
    dend_15 { pt3dadd( 6.27913, 52.621, -18.3898, 0.29 ) }
    dend_15 { pt3dadd( 6.70664, 53.6165, -18.6534, 0.29 ) }
    dend_15 { pt3dadd( 7.23696, 55.0809, -19.0903, 0.29 ) }
    dend_15 { pt3dadd( 7.27808, 55.2021, -19.1326, 0.29 ) }
    dend_15 { pt3dadd( 7.58134, 56.2104, -19.4994, 0.29 ) }
    dend_15 { pt3dadd( 8.10569, 58.4109, -20.2759, 1.92 ) }
    dend_15 { pt3dadd( 8.28818, 59.7047, -20.7377, 2.21 ) }
    dend_15 { pt3dadd( 8.38288, 61.6722, -21.4903, 0.29 ) }
    dend_15 { pt3dadd( 8.33495, 63.3281, -22.1409, 0.29 ) }
    dend_15 { pt3dadd( 8.17118, 64.6929, -22.7253, 0.29 ) }
    dend_15 { pt3dadd( 7.89339, 65.8618, -23.2434, 0.29 ) }
    dend_15 { pt3dadd( 7.31721, 67.4625, -23.9356, 1.84 ) }
    dend_15 { pt3dadd( 6.63643, 68.9006, -24.5645, 2.58 ) }
    dend_15 { pt3dadd( 6.39657, 69.3049, -24.7355, 2.5 ) }
    dend_15 { pt3dadd( 4.37268, 72.1687, -25.9872, 0.22 ) }
    dend_15 { pt3dadd( 3.26415, 73.5875, -26.6547, 0.22 ) }
    dend_15 { pt3dadd( 2.52667, 74.4813, -27.0741, 0.96 ) }
    dend_15 { pt3dadd( 2.12844, 74.9364, -27.2851, 1.18 ) }
    dend_15 { pt3dadd( 1.76486, 75.3395, -27.4541, 1.18 ) }
    dend_15 { pt3dadd( 0.503915, 76.7247, -28.0245, 0.29 ) }
    dend_15 { pt3dadd( -0.158788, 77.4372, -28.2976, 0.29 ) }
    dend_15 { pt3dadd( -1.46183, 78.8619, -28.9016, 0.29 ) }
    dend_15 { pt3dadd( -3.17397, 80.7578, -29.7441, 2.21 ) }
    dend_15 { pt3dadd( -3.76325, 81.4243, -30.0397, 2.65 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 28/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 17.1092, 31.3848, 19.5621, 0.29 ) }
    dend_13 { pt3dadd( 17.7111, 32.9636, 19.4475, 0.29 ) }
    dend_13 { pt3dadd( 18.1317, 34.1025, 19.4468, 0.59 ) }
    dend_13 { pt3dadd( 18.4044, 34.8106, 19.5381, 0.74 ) }
    dend_13 { pt3dadd( 18.8753, 36.0272, 19.7553, 0.22 ) }
    dend_13 { pt3dadd( 19.3199, 37.1843, 19.9814, 0.22 ) }
    dend_13 { pt3dadd( 20.0072, 38.985, 20.3444, 2.28 ) }
    dend_13 { pt3dadd( 20.2346, 39.6123, 20.5115, 2.28 ) }
    dend_13 { pt3dadd( 21.036, 41.8339, 21.1509, 0.29 ) }
    dend_13 { pt3dadd( 21.2248, 42.348, 21.3077, 0.29 ) }
    dend_13 { pt3dadd( 21.7433, 43.7515, 21.7557, 0.22 ) }
    dend_13 { pt3dadd( 21.8861, 44.1286, 21.8646, 0.88 ) }
    dend_13 { pt3dadd( 21.9472, 44.2709, 21.8942, 0.88 ) }
    dend_13 { pt3dadd( 22.1226, 44.6393, 21.9487, 0.88 ) }
    dend_13 { pt3dadd( 22.2306, 44.8446, 21.9587, 0.88 ) }
    dend_13 { pt3dadd( 22.6127, 45.5175, 22.0243, 0.52 ) }
    dend_13 { pt3dadd( 22.8664, 45.983, 22.1501, 0.15 ) }
    dend_13 { pt3dadd( 23.2125, 46.6647, 22.3894, 0.15 ) }
    dend_13 { pt3dadd( 23.3668, 47.0179, 22.5266, 0.15 ) }
    dend_13 { pt3dadd( 23.7072, 47.9017, 22.8753, 0.81 ) }
    dend_13 { pt3dadd( 23.8447, 48.3671, 23.0792, 0.96 ) }
    dend_13 { pt3dadd( 24.1552, 49.8073, 23.7715, 0.15 ) }
    dend_13 { pt3dadd( 24.1696, 49.8988, 23.8184, 0.15 ) }
    dend_13 { pt3dadd( 24.3578, 51.1203, 24.4488, 1.55 ) }
    dend_13 { pt3dadd( 24.476, 51.7827, 24.7896, 2.28 ) }
    dend_13 { pt3dadd( 24.9244, 53.8456, 25.8763, 0.22 ) }
    dend_13 { pt3dadd( 25.2847, 55.281, 26.7012, 2.65 ) }
    dend_13 { pt3dadd( 25.8407, 57.2901, 27.8965, 0.29 ) }
    dend_13 { pt3dadd( 26.059, 57.9833, 28.3265, 0.15 ) }
    dend_13 { pt3dadd( 26.2214, 58.4653, 28.6403, 0.15 ) }
    dend_13 { pt3dadd( 26.9243, 60.3813, 29.9323, 2.58 ) }
    dend_13 { pt3dadd( 27.8031, 62.3934, 31.3134, 0.15 ) }
    dend_13 { pt3dadd( 27.9927, 62.773, 31.5839, 0.37 ) }
    dend_13 { pt3dadd( 28.2403, 63.2233, 31.9269, 0.22 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 62/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 17.1092, 31.3848, 19.5621, 0.29 ) }
    dend_12 { pt3dadd( 15.8738, 32.3556, 20.1528, 0.29 ) }
    dend_12 { pt3dadd( 15.0792, 33.0897, 20.5232, 0.29 ) }
    dend_12 { pt3dadd( 14.6335, 33.5723, 20.7262, 0.29 ) }
    dend_12 { pt3dadd( 14.2229, 34.0679, 20.9096, 0.88 ) }
    dend_12 { pt3dadd( 14.187, 34.1272, 20.9254, 0.88 ) }
    dend_12 { pt3dadd( 13.9883, 34.5687, 21.0583, 0.88 ) }
    dend_12 { pt3dadd( 13.9393, 34.7774, 21.1035, 0.88 ) }
    dend_12 { pt3dadd( 13.9181, 35.0578, 21.1691, 0.88 ) }
    dend_12 { pt3dadd( 13.9183, 35.1341, 21.1941, 0.88 ) }
    dend_12 { pt3dadd( 13.9628, 36.1613, 21.5745, 0.44 ) }
    dend_12 { pt3dadd( 14.0152, 37.0134, 21.8929, 0.44 ) }
    dend_12 { pt3dadd( 14.0191, 37.0772, 21.9232, 0.44 ) }
    dend_12 { pt3dadd( 14.0206, 37.863, 22.3247, 0.44 ) }
    dend_12 { pt3dadd( 13.9645, 39.1238, 23.1111, 1.77 ) }
    dend_12 { pt3dadd( 13.9617, 39.6507, 23.4682, 2.65 ) }
    dend_12 { pt3dadd( 13.9851, 40.1254, 23.8103, 3.02 ) }
    dend_12 { pt3dadd( 14.2164, 42.2341, 25.3098, 0.22 ) }
    dend_12 { pt3dadd( 14.4514, 43.3356, 26.1488, 1.03 ) }
    dend_12 { pt3dadd( 14.9057, 44.872, 27.3671, 0.29 ) }
    dend_12 { pt3dadd( 15.304, 45.9411, 28.2633, 0.22 ) }
    dend_12 { pt3dadd( 15.586, 46.5758, 28.8124, 1.92 ) }
    dend_12 { pt3dadd( 15.925, 47.215, 29.3553, 2.28 ) }
    dend_12 { pt3dadd( 16.9983, 48.8634, 30.6793, 0.22 ) }
    dend_12 { pt3dadd( 17.2912, 49.3175, 31.0972, 0.22 ) }
    dend_12 { pt3dadd( 17.8011, 50.2763, 32.0887, 1.11 ) }
    dend_12 { pt3dadd( 17.923, 50.6175, 32.4883, 1.55 ) }
    dend_12 { pt3dadd( 18.0357, 51.0687, 33.0814, 1.84 ) }
    dend_12 { pt3dadd( 18.0409, 51.11, 33.1407, 1.84 ) }
    dend_12 { pt3dadd( 18.1099, 53.13, 36.19, 0.29 ) }
    dend_12 { pt3dadd( 18.0758, 54.0627, 37.6598, 0.29 ) }
    dend_12 { pt3dadd( 17.9787, 54.9298, 39.0183, 2.65 ) }
    dend_12 { pt3dadd( 17.8538, 55.6277, 40.1004, 2.36 ) }
    dend_12 { pt3dadd( 17.5567, 56.8219, 41.9119, 0.37 ) }
    dend_12 { pt3dadd( 17.5452, 56.8576, 41.9606, 0.37 ) }
    dend_12 { pt3dadd( 17.3141, 57.3536, 42.487, 0.22 ) }
    dend_12 { pt3dadd( 17.0339, 57.8151, 42.8863, 0.66 ) }
    dend_12 { pt3dadd( 16.6942, 58.3213, 43.2472, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_12 { pt3dadd( 16.3426, 58.8343, 43.5524, 0.96 ) }
    dend_12 { pt3dadd( 15.8068, 59.6077, 43.9667, 0.22 ) }
    dend_12 { pt3dadd( 15.4171, 60.1933, 44.3197, 0.22 ) }
    dend_12 { pt3dadd( 14.7549, 61.2166, 45.0355, 2.43 ) }
    dend_12 { pt3dadd( 13.7072, 62.7561, 46.3747, 0.22 ) }
    dend_12 { pt3dadd( 13.5417, 62.995, 46.6004, 0.88 ) }
    dend_12 { pt3dadd( 13.3485, 63.2803, 46.8754, 1.03 ) }
    dend_12 { pt3dadd( 12.6861, 64.2683, 47.8774, 0.66 ) }
    dend_12 { pt3dadd( 12.1192, 65.1886, 49.0695, 1.62 ) }
    dend_12 { pt3dadd( 11.7334, 66.0301, 50.2891, 1.62 ) }
    dend_12 { pt3dadd( 11.4947, 66.8455, 51.5087, 0.37 ) }
    dend_12 { pt3dadd( 11.4643, 67.183, 51.9986, 2.06 ) }
    dend_12 { pt3dadd( 11.4658, 67.219, 52.0483, 2.06 ) }
    dend_12 { pt3dadd( 11.7866, 69.739, 55.1271, 1.62 ) }
    dend_12 { pt3dadd( 11.9972, 70.7165, 56.2954, 0.22 ) }
    dend_12 { pt3dadd( 12.1653, 71.3185, 56.9974, 2.06 ) }
    dend_12 { pt3dadd( 12.8157, 73.1785, 59.3009, 0.29 ) }
    dend_12 { pt3dadd( 12.9156, 73.4575, 59.6404, 0.29 ) }
    dend_12 { pt3dadd( 13.2132, 74.3064, 60.5545, 0.22 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 19/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -10.1347, 20.4944, 0.652971, 1.18 ) }
    dend_2 { pt3dadd( -11.7073, 22.1059, -1.96379, 1.18 ) }
    dend_2 { pt3dadd( -12.1013, 22.4972, -2.51576, 1.18 ) }
    dend_2 { pt3dadd( -12.6223, 22.999, -3.14645, 1.4 ) }
    dend_2 { pt3dadd( -13.1678, 23.5203, -3.71557, 1.4 ) }
    dend_2 { pt3dadd( -13.8636, 24.2307, -4.44147, 1.03 ) }
    dend_2 { pt3dadd( -14.4757, 24.8914, -5.0575, 0.66 ) }
    dend_2 { pt3dadd( -14.9904, 25.4728, -5.45774, 0.66 ) }
    dend_2 { pt3dadd( -15.34, 25.9174, -5.73413, 1.11 ) }
    dend_2 { pt3dadd( -15.8387, 26.614, -6.07542, 0.81 ) }
    dend_2 { pt3dadd( -16.9474, 28.3225, -6.69757, 0.66 ) }
    dend_2 { pt3dadd( -17.4355, 29.1223, -6.88262, 0.66 ) }
    dend_2 { pt3dadd( -17.8093, 29.7783, -6.97173, 0.66 ) }
    dend_2 { pt3dadd( -18.3456, 30.7587, -7.04339, 1.25 ) }
    dend_2 { pt3dadd( -18.9081, 31.8244, -7.00599, 1.62 ) }
    dend_2 { pt3dadd( -19.4014, 32.7656, -6.8552, 1.99 ) }
    dend_2 { pt3dadd( -19.7658, 33.4495, -6.65434, 1.99 ) }
    dend_2 { pt3dadd( -19.834, 33.5795, -6.61515, 1.99 ) }
    dend_2 { pt3dadd( -20.14, 34.1764, -6.43971, 1.84 ) }
    dend_2 { pt3dadd( -20.6125, 35.1277, -6.20431, 1.03 ) }
    dend_2 { pt3dadd( -20.9736, 35.8959, -6.07567, 0.74 ) }
    dend_2 { pt3dadd( -21.3783, 36.792, -5.96331, 0.74 ) }
    dend_2 { pt3dadd( -21.6786, 37.4751, -5.88745, 0.44 ) }
    dend_2 { pt3dadd( -21.8976, 37.9741, -5.83825, 0.59 ) }
    dend_2 { pt3dadd( -22.1756, 38.5624, -5.81414, 0.59 ) }
    dend_2 { pt3dadd( -22.4687, 39.1192, -5.83495, 0.59 ) }
    dend_2 { pt3dadd( -22.5066, 39.1821, -5.84098, 0.59 ) }
    dend_2 { pt3dadd( -22.9497, 39.826, -5.93822, 0.44 ) }
    dend_2 { pt3dadd( -23.2828, 40.2658, -6.02338, 0.29 ) }
    dend_2 { pt3dadd( -23.8877, 41.03, -6.2316, 0.29 ) }
    dend_2 { pt3dadd( -24.3266, 41.613, -6.40999, 1.47 ) }
    dend_2 { pt3dadd( -24.7869, 42.2885, -6.61891, 2.06 ) }
    dend_2 { pt3dadd( -24.9371, 42.5712, -6.70038, 2.21 ) }
    dend_2 { pt3dadd( -25.0416, 42.894, -6.80159, 2.21 ) }
    dend_2 { pt3dadd( -25.1871, 43.8601, -7.10213, 1.18 ) }
    dend_2 { pt3dadd( -25.1937, 44.9539, -7.41563, 0.37 ) }
    dend_2 { pt3dadd( -25.1342, 45.5418, -7.58146, 0.37 ) }
    dend_2 { pt3dadd( -24.9276, 46.6825, -7.86545, 0.37 ) }
    dend_2 { pt3dadd( -24.6435, 48.0171, -8.19341, 1.33 ) }
    dend_2 { pt3dadd( -24.5636, 48.4016, -8.26955, 1.77 ) }
    dend_2 { pt3dadd( -24.5493, 48.4829, -8.28093, 1.77 ) }
    dend_2 { pt3dadd( -24.5155, 48.9014, -8.29332, 1.77 ) }
    dend_2 { pt3dadd( -24.5734, 49.8216, -8.18073, 0.81 ) }
    dend_2 { pt3dadd( -24.7347, 50.8079, -7.93581, 0.29 ) }
    dend_2 { pt3dadd( -24.8758, 51.615, -7.57642, 0.74 ) }
    dend_2 { pt3dadd( -24.9511, 52.1216, -7.31387, 0.74 ) }
    dend_2 { pt3dadd( -25.0916, 53.3515, -6.61476, 0.37 ) }
    dend_2 { pt3dadd( -25.1534, 54.1725, -6.11013, 0.37 ) }
    dend_2 { pt3dadd( -25.1694, 54.8201, -5.67469, 0.37 ) }
    dend_2 { pt3dadd( -25.1194, 56.1065, -4.72092, 1.4 ) }
    dend_2 { pt3dadd( -25.0473, 56.6107, -4.39325, 2.06 ) }
    dend_2 { pt3dadd( -24.9873, 56.933, -4.21204, 2.5 ) }
    dend_2 { pt3dadd( -24.8847, 57.4289, -3.98635, 2.5 ) }
    dend_2 { pt3dadd( -24.877, 57.4876, -3.96344, 2.5 ) }
    dend_2 { pt3dadd( -24.7941, 59.5531, -3.30442, 0.44 ) }
    dend_2 { pt3dadd( -24.8871, 60.8391, -3.03667, 0.37 ) }
    dend_2 { pt3dadd( -25.0031, 61.529, -2.9091, 0.37 ) }
    dend_2 { pt3dadd( -25.0246, 61.6157, -2.89515, 0.37 ) }
    dend_2 { pt3dadd( -25.4107, 62.8742, -2.73908, 0.37 ) }
    dend_2 { pt3dadd( -25.4574, 63.0122, -2.72893, 0.37 ) }
    dend_2 { pt3dadd( -25.6986, 63.6552, -2.73685, 0.37 ) }
    dend_2 { pt3dadd( -25.7144, 63.7164, -2.7385, 0.37 ) }
    dend_2 { pt3dadd( -25.7758, 64.3901, -2.83035, 1.47 ) }
    dend_2 { pt3dadd( -25.7857, 65.1696, -2.98889, 2.21 ) }
    dend_2 { pt3dadd( -25.762, 65.703, -3.12268, 2.65 ) }
    dend_2 { pt3dadd( -25.7515, 66.2267, -3.26748, 2.5 ) }
    dend_2 { pt3dadd( -25.7733, 67.9329, -3.76558, 0.29 ) }
    dend_2 { pt3dadd( -25.8293, 68.6912, -4.03243, 0.29 ) }
    dend_2 { pt3dadd( -25.933, 69.4048, -4.32266, 0.29 ) }
    dend_2 { pt3dadd( -26.0566, 69.8948, -4.52237, 0.29 ) }
    dend_2 { pt3dadd( -26.2356, 70.4571, -4.73471, 1.33 ) }
    dend_2 { pt3dadd( -26.5016, 71.2017, -4.97605, 2.28 ) }
    dend_2 { pt3dadd( -26.8621, 72.1528, -5.20279, 2.73 ) }
    dend_2 { pt3dadd( -27.0451, 72.6876, -5.32055, 2.43 ) }
    dend_2 { pt3dadd( -27.4315, 73.9601, -5.62631, 0.29 ) }
    dend_2 { pt3dadd( -27.5946, 74.5061, -5.78214, 0.29 ) }
    dend_2 { pt3dadd( -27.7299, 75.0045, -5.92646, 0.29 ) }
    dend_2 { pt3dadd( -27.8301, 75.403, -6.03732, 0.29 ) }
    dend_2 { pt3dadd( -28.0399, 76.3407, -6.23867, 0.88 ) }
    dend_2 { pt3dadd( -28.1258, 76.7382, -6.35559, 1.55 ) }
    dend_2 { pt3dadd( -28.3145, 77.448, -6.71096, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 0/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -10.1347, 20.4944, 0.652971, 0.74 ) }
    dend_1 { pt3dadd( -11.5419, 20.6718, 0.996325, 0.74 ) }
    dend_1 { pt3dadd( -12.7132, 20.8621, 1.27156, 0.74 ) }
    dend_1 { pt3dadd( -13.7784, 21.0524, 1.52445, 0.59 ) }
    dend_1 { pt3dadd( -14.4202, 21.1793, 1.68034, 0.74 ) }
    dend_1 { pt3dadd( -15.425, 21.3935, 1.93269, 0.74 ) }
    dend_1 { pt3dadd( -16.1774, 21.5625, 2.12955, 1.03 ) }
    dend_1 { pt3dadd( -17.155, 21.8131, 2.39391, 1.33 ) }
    dend_1 { pt3dadd( -17.9545, 22.0154, 2.62436, 1.55 ) }
    dend_1 { pt3dadd( -18.9118, 22.2351, 2.92551, 1.4 ) }
    dend_1 { pt3dadd( -20.0637, 22.4731, 3.35091, 1.25 ) }
    dend_1 { pt3dadd( -21.5035, 22.7823, 4.00173, 0.74 ) }
    dend_1 { pt3dadd( -22.2304, 22.9672, 4.4016, 0.96 ) }
    dend_1 { pt3dadd( -22.9819, 23.1905, 4.90219, 0.96 ) }
    dend_1 { pt3dadd( -24.0313, 23.6021, 5.79364, 0.52 ) }
    dend_1 { pt3dadd( -24.8886, 24.079, 6.76752, 0.52 ) }
    dend_1 { pt3dadd( -25.4461, 24.5825, 7.67555, 0.88 ) }
    dend_1 { pt3dadd( -25.7893, 25.0639, 8.43845, 0.59 ) }
    dend_1 { pt3dadd( -25.8135, 25.1022, 8.48956, 0.59 ) }
    dend_1 { pt3dadd( -26.1884, 25.7582, 9.22138, 0.29 ) }
    dend_1 { pt3dadd( -26.5173, 26.1837, 9.57963, 0.29 ) }
    dend_1 { pt3dadd( -27.3056, 26.6538, 9.83739, 0.74 ) }
    dend_1 { pt3dadd( -28.0482, 26.9082, 9.92463, 0.96 ) }
    dend_1 { pt3dadd( -29.477, 27.2208, 10.0203, 0.59 ) }
    dend_1 { pt3dadd( -29.5687, 27.2332, 10.0233, 0.59 ) }
    dend_1 { pt3dadd( -30.7212, 27.2984, 10.0254, 0.29 ) }
    dend_1 { pt3dadd( -31.4816, 27.3036, 10.0196, 0.29 ) }
    dend_1 { pt3dadd( -32.5335, 27.2512, 10.0189, 1.62 ) }
    dend_1 { pt3dadd( -33.6198, 27.1377, 10.0951, 2.43 ) }
    dend_1 { pt3dadd( -34.5226, 27.0115, 10.2352, 2.65 ) }
    dend_1 { pt3dadd( -35.3106, 26.8868, 10.3928, 2.65 ) }
    dend_1 { pt3dadd( -35.3769, 26.8769, 10.4088, 2.65 ) }
    dend_1 { pt3dadd( -37.1559, 26.6798, 10.9356, 1.11 ) }
    dend_1 { pt3dadd( -38.5093, 26.6193, 11.4373, 0.37 ) }
    dend_1 { pt3dadd( -39.3694, 26.6633, 11.7994, 0.37 ) }
    dend_1 { pt3dadd( -40.265, 26.8104, 12.2249, 0.37 ) }
    dend_1 { pt3dadd( -41.0052, 27.0665, 12.6682, 0.37 ) }
    dend_1 { pt3dadd( -41.7995, 27.5292, 13.2748, 0.81 ) }
    dend_1 { pt3dadd( -42.3478, 28.0062, 13.8234, 1.47 ) }
    dend_1 { pt3dadd( -42.7241, 28.392, 14.2849, 1.69 ) }
    dend_1 { pt3dadd( -42.9486, 28.6147, 14.5888, 1.69 ) }
    dend_1 { pt3dadd( -43.9054, 29.4535, 15.9684, 0.66 ) }
    dend_1 { pt3dadd( -44.6313, 29.9802, 17.0352, 0.37 ) }
    dend_1 { pt3dadd( -45.1197, 30.2722, 17.7612, 0.37 ) }
    dend_1 { pt3dadd( -46.0089, 30.6447, 19.0216, 1.25 ) }
    dend_1 { pt3dadd( -46.6687, 30.8016, 19.9835, 2.36 ) }
    dend_1 { pt3dadd( -47.2406, 30.8954, 20.843, 2.36 ) }
    dend_1 { pt3dadd( -47.2816, 30.9007, 20.9121, 2.36 ) }
    dend_1 { pt3dadd( -47.6188, 30.9479, 21.5425, 2.21 ) }
    dend_1 { pt3dadd( -48.4188, 31.121, 23.2407, 0.37 ) }
    dend_1 { pt3dadd( -49.287, 31.3728, 25.3249, 0.59 ) }
    dend_1 { pt3dadd( -49.8014, 31.5457, 26.6189, 0.37 ) }
    dend_1 { pt3dadd( -50.6879, 31.8451, 28.7495, 1.18 ) }
    dend_1 { pt3dadd( -50.9339, 31.9228, 29.2912, 1.4 ) }
    dend_1 { pt3dadd( -51.4597, 32.0804, 30.3881, 1.25 ) }
    dend_1 { pt3dadd( -51.4912, 32.0907, 30.4615, 1.25 ) }
    dend_1 { pt3dadd( -51.8952, 32.2107, 31.5581, 0.52 ) }
    dend_1 { pt3dadd( -52.324, 32.2779, 32.801, 2.14 ) }
    dend_1 { pt3dadd( -52.7092, 32.3594, 33.9712, 2.95 ) }
    dend_1 { pt3dadd( -53.2017, 32.4551, 35.6704, 1.92 ) }
    dend_1 { pt3dadd( -53.9706, 32.6391, 38.2184, 1.03 ) }
    dend_1 { pt3dadd( -54.8403, 32.9465, 41.0698, 0.44 ) }
    dend_1 { pt3dadd( -55.0303, 33.0257, 41.7604, 0.44 ) }
    dend_1 { pt3dadd( -55.5566, 33.2689, 43.7549, 0.44 ) }
    dend_1 { pt3dadd( -56.2069, 33.5918, 46.2003, 2.36 ) }
    dend_1 { pt3dadd( -57.0349, 34.0063, 48.8684, 0.22 ) }
    dend_1 { pt3dadd( -57.4724, 34.2173, 49.9135, 0.66 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 67/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -0.444525, -43.0938, 2.58385, 0.361546 ) }
    axon_1 { pt3dadd( -0.476297, -58.0938, 2.58385, 0.361546 ) }
    axon_1 { pt3dadd( -0.508069, -73.0938, 2.58385, 0.361546 ) }
    // Section: dend_48, id: dend_48, parent: dend_38 (entry count 70/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 10.6246, -34.3096, 7.14007, 0.37 ) }
    dend_48 { pt3dadd( 11.1175, -34.8358, 6.64544, 0.37 ) }
    dend_48 { pt3dadd( 11.5255, -35.2029, 6.20707, 0.29 ) }
    dend_48 { pt3dadd( 11.7776, -35.4119, 5.93319, 0.29 ) }
    dend_48 { pt3dadd( 12.5269, -35.9392, 5.15204, 0.74 ) }
    dend_48 { pt3dadd( 12.5609, -35.9586, 5.11905, 0.74 ) }
    dend_48 { pt3dadd( 13.2025, -36.264, 4.53086, 0.66 ) }
    dend_48 { pt3dadd( 13.7849, -36.4657, 3.96193, 0.29 ) }
    dend_48 { pt3dadd( 13.8285, -36.4711, 3.92284, 0.29 ) }
    dend_48 { pt3dadd( 14.2538, -36.4338, 3.62237, 0.29 ) }
    dend_48 { pt3dadd( 14.6806, -36.3022, 3.44084, 0.74 ) }
    dend_48 { pt3dadd( 14.811, -36.2423, 3.40313, 0.74 ) }
    dend_48 { pt3dadd( 15.0661, -36.1077, 3.3699, 1.03 ) }
    dend_48 { pt3dadd( 15.1649, -36.0627, 3.3652, 1.03 ) }
    dend_48 { pt3dadd( 15.4179, -35.9934, 3.35362, 1.03 ) }
    dend_48 { pt3dadd( 15.961, -35.9372, 3.33066, 0.59 ) }
    dend_48 { pt3dadd( 16.6243, -35.9618, 3.30604, 0.22 ) }
    dend_48 { pt3dadd( 17.1906, -36.0424, 3.30271, 0.22 ) }
    dend_48 { pt3dadd( 17.6018, -36.1275, 3.30822, 0.88 ) }
    dend_48 { pt3dadd( 18.3812, -36.2905, 3.30007, 1.84 ) }
    dend_48 { pt3dadd( 18.7808, -36.3806, 3.29134, 2.14 ) }
    dend_48 { pt3dadd( 19.339, -36.5047, 3.28824, 2.36 ) }
    dend_48 { pt3dadd( 20.3098, -36.6736, 3.31292, 0.66 ) }
    dend_48 { pt3dadd( 21.0797, -36.7373, 3.35149, 0.59 ) }
    dend_48 { pt3dadd( 22.236, -36.7408, 3.43432, 0.52 ) }
    dend_48 { pt3dadd( 22.287, -36.7357, 3.43901, 0.52 ) }
    dend_48 { pt3dadd( 22.8852, -36.6134, 3.479, 1.33 ) }
    dend_48 { pt3dadd( 23.6102, -36.3733, 3.5039, 1.77 ) }
    dend_48 { pt3dadd( 24.0568, -36.1788, 3.53314, 1.77 ) }
    dend_48 { pt3dadd( 24.2319, -36.1042, 3.55187, 1.77 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_48 { pt3dadd( 24.8382, -35.8961, 3.63482, 1.25 ) }
    dend_48 { pt3dadd( 25.7176, -35.659, 3.73898, 0.52 ) }
    dend_48 { pt3dadd( 26.5588, -35.4939, 3.81224, 0.29 ) }
    dend_48 { pt3dadd( 27.4165, -35.3831, 3.8803, 0.29 ) }
    dend_48 { pt3dadd( 28.2461, -35.3085, 3.9596, 0.22 ) }
    dend_48 { pt3dadd( 29.0165, -35.2778, 3.95708, 0.22 ) }
    dend_48 { pt3dadd( 29.075, -35.277, 3.95107, 0.22 ) }
    dend_48 { pt3dadd( 29.4522, -35.2546, 3.86468, 1.03 ) }
    dend_48 { pt3dadd( 29.7673, -35.2305, 3.74692, 1.47 ) }
    dend_48 { pt3dadd( 30.175, -35.1804, 3.54727, 1.47 ) }
    dend_48 { pt3dadd( 31.4662, -34.9779, 2.84449, 0.59 ) }
    dend_48 { pt3dadd( 32.0139, -34.9001, 2.51818, 0.22 ) }
    dend_48 { pt3dadd( 32.6538, -34.8508, 2.15289, 0.22 ) }
    dend_48 { pt3dadd( 33.084, -34.8464, 1.91005, 0.22 ) }
    dend_48 { pt3dadd( 33.129, -34.8486, 1.886, 0.22 ) }
    dend_48 { pt3dadd( 33.7111, -34.9248, 1.62486, 0.22 ) }
    dend_48 { pt3dadd( 33.7573, -34.9324, 1.60474, 0.22 ) }
    dend_48 { pt3dadd( 34.4017, -35.0591, 1.23797, 1.03 ) }
    dend_48 { pt3dadd( 34.9487, -35.1875, 0.908191, 1.62 ) }
    dend_48 { pt3dadd( 34.9913, -35.1956, 0.881271, 1.62 ) }
    dend_48 { pt3dadd( 35.1926, -35.2315, 0.758966, 1.62 ) }
    dend_48 { pt3dadd( 36.409, -35.4349, 0.0854904, 0.15 ) }
    dend_48 { pt3dadd( 36.4544, -35.4445, 0.0630006, 0.15 ) }
    dend_48 { pt3dadd( 37.0523, -35.6109, -0.212963, 0.15 ) }
    dend_48 { pt3dadd( 37.1041, -35.6268, -0.234084, 0.15 ) }
    dend_48 { pt3dadd( 38.0152, -35.9126, -0.5796, 1.77 ) }
    dend_48 { pt3dadd( 38.6296, -36.1336, -0.766862, 2.73 ) }
    dend_48 { pt3dadd( 39.0084, -36.2756, -0.820726, 3.02 ) }
    dend_48 { pt3dadd( 41.0455, -37.0193, -0.957077, 0.22 ) }
    dend_48 { pt3dadd( 41.4544, -37.1571, -0.944195, 0.22 ) }
    dend_48 { pt3dadd( 41.4956, -37.17, -0.938494, 0.22 ) }
    dend_48 { pt3dadd( 42.5094, -37.4427, -0.633055, 0.22 ) }
    dend_48 { pt3dadd( 43.8786, -37.6938, -0.029764, 0.22 ) }
    dend_48 { pt3dadd( 43.9666, -37.7058, 0.0210023, 0.22 ) }
    dend_48 { pt3dadd( 44.5442, -37.7749, 0.452815, 1.55 ) }
    dend_48 { pt3dadd( 45.1127, -37.8435, 0.857539, 2.21 ) }
    dend_48 { pt3dadd( 45.6511, -37.9077, 1.20866, 1.4 ) }
    dend_48 { pt3dadd( 46.5968, -38.0098, 1.72812, 0.22 ) }
    dend_48 { pt3dadd( 47.2328, -38.1203, 2.0463, 0.22 ) }
    dend_48 { pt3dadd( 47.762, -38.2278, 2.33597, 0.22 ) }
    dend_48 { pt3dadd( 48.0729, -38.3086, 2.53696, 0.44 ) }
    dend_48 { pt3dadd( 48.1136, -38.3206, 2.56586, 0.44 ) }
    dend_48 { pt3dadd( 48.5212, -38.4648, 2.90514, 0.22 ) }
    dend_48 { pt3dadd( 49.4476, -38.8336, 3.73785, 1.62 ) }
    dend_48 { pt3dadd( 49.806, -38.993, 4.06636, 2.14 ) }
    dend_48 { pt3dadd( 51.1673, -39.6625, 5.29344, 0.22 ) }
    dend_48 { pt3dadd( 51.5392, -39.864, 5.62283, 1.47 ) }
    dend_48 { pt3dadd( 52.7407, -40.5659, 6.65121, 1.11 ) }
    dend_48 { pt3dadd( 53.1093, -40.8045, 6.94983, 1.33 ) }
    dend_48 { pt3dadd( 54.0953, -41.467, 7.6198, 0.22 ) }
    dend_48 { pt3dadd( 54.5833, -41.7912, 7.94223, 0.22 ) }
    dend_48 { pt3dadd( 54.843, -41.9583, 8.09998, 1.47 ) }
    dend_48 { pt3dadd( 55.0929, -42.1027, 8.2818, 2.14 ) }
    dend_48 { pt3dadd( 55.5686, -42.3473, 8.64125, 2.14 ) }
    dend_48 { pt3dadd( 56.7479, -42.9523, 9.63108, 0.22 ) }
    dend_48 { pt3dadd( 57.7517, -43.4622, 10.5461, 1.77 ) }
    dend_48 { pt3dadd( 57.9796, -43.5835, 10.7663, 2.36 ) }
    dend_48 { pt3dadd( 59.6418, -44.5197, 12.5022, 0.29 ) }
    dend_48 { pt3dadd( 60.175, -44.8352, 13.0785, 0.29 ) }
    dend_48 { pt3dadd( 60.5275, -45.0639, 13.4771, 0.29 ) }
    dend_48 { pt3dadd( 60.5578, -45.0868, 13.5111, 0.29 ) }
    dend_48 { pt3dadd( 60.852, -45.3225, 13.8218, 0.29 ) }
    dend_48 { pt3dadd( 61.8702, -46.1516, 14.8616, 2.28 ) }
    dend_48 { pt3dadd( 62.1788, -46.3957, 15.152, 2.65 ) }
    dend_48 { pt3dadd( 63.342, -47.2706, 16.2813, 0.22 ) }
    dend_48 { pt3dadd( 63.767, -47.5728, 16.6884, 0.22 ) }
    dend_48 { pt3dadd( 64.4959, -48.0562, 17.335, 0.96 ) }
    dend_48 { pt3dadd( 64.883, -48.2854, 17.6445, 1.47 ) }
    dend_48 { pt3dadd( 66.2408, -48.9707, 18.5326, 0.22 ) }
    dend_48 { pt3dadd( 66.9348, -49.2487, 18.9209, 0.81 ) }
    dend_48 { pt3dadd( 67.0321, -49.2781, 18.9647, 0.81 ) }
    dend_48 { pt3dadd( 68.247, -49.5388, 19.3808, 0.22 ) }
    dend_48 { pt3dadd( 68.8759, -49.6308, 19.5004, 0.22 ) }
    dend_48 { pt3dadd( 70.2547, -49.7719, 19.6863, 0.22 ) }
    dend_48 { pt3dadd( 70.9985, -49.7976, 19.7005, 0.22 ) }
    dend_48 { pt3dadd( 71.0501, -49.7972, 19.6985, 0.22 ) }
    dend_48 { pt3dadd( 72.2432, -49.7609, 19.6143, 0.96 ) }
    dend_48 { pt3dadd( 72.9664, -49.6963, 19.4876, 1.11 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 78/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 10.6246, -34.3096, 7.14007, 1.25 ) }
    dend_39 { pt3dadd( 9.98591, -35.8739, 7.19648, 1.25 ) }
    dend_39 { pt3dadd( 9.46479, -37.4686, 7.19657, 0.81 ) }
    dend_39 { pt3dadd( 9.18629, -38.7276, 7.13796, 0.81 ) }
    dend_39 { pt3dadd( 9.01916, -40.1869, 7.02853, 0.96 ) }
    dend_39 { pt3dadd( 8.97473, -41.6841, 6.86971, 0.74 ) }
    dend_39 { pt3dadd( 8.94105, -42.8192, 6.74931, 1.11 ) }
    dend_39 { pt3dadd( 8.99806, -43.5831, 6.60256, 1.69 ) }
    dend_39 { pt3dadd( 9.29166, -44.8319, 6.28962, 2.36 ) }
    dend_39 { pt3dadd( 9.69848, -45.7867, 5.99723, 2.65 ) }
    dend_39 { pt3dadd( 10.0883, -46.3738, 5.79049, 2.65 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 89/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -5.37876, -19.2865, 11.0595, 0.81 ) }
    dend_37 { pt3dadd( -6.34809, -17.865, 10.8936, 0.81 ) }
    dend_37 { pt3dadd( -7.07131, -16.689, 10.6422, 0.66 ) }
    dend_37 { pt3dadd( -7.7795, -15.4675, 10.3436, 0.66 ) }
    dend_37 { pt3dadd( -8.18537, -14.7877, 10.1276, 0.96 ) }
    dend_37 { pt3dadd( -8.94578, -13.6219, 9.70686, 0.44 ) }
    dend_37 { pt3dadd( -9.53172, -12.7749, 9.37766, 0.44 ) }
    dend_37 { pt3dadd( -10.4504, -11.4995, 8.74597, 0.59 ) }
    dend_37 { pt3dadd( -10.8209, -11.0853, 8.48358, 0.59 ) }
    dend_37 { pt3dadd( -11.755, -10.4466, 7.94595, 0.59 ) }
    dend_37 { pt3dadd( -12.5568, -10.1863, 7.61551, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_37 { pt3dadd( -12.6498, -10.1812, 7.59143, 0.59 ) }
    dend_37 { pt3dadd( -13.5735, -10.2743, 7.42847, 0.59 ) }
    dend_37 { pt3dadd( -14.822, -10.5101, 7.34713, 1.33 ) }
    dend_37 { pt3dadd( -15.909, -10.7448, 7.34208, 1.69 ) }
    dend_37 { pt3dadd( -17.0153, -10.9838, 7.43091, 1.55 ) }
    dend_37 { pt3dadd( -18.3098, -11.2509, 7.70974, 0.88 ) }
    dend_37 { pt3dadd( -19.4017, -11.4227, 8.30758, 0.44 ) }
    dend_37 { pt3dadd( -20.3095, -11.5529, 9.17625, 0.44 ) }
    dend_37 { pt3dadd( -20.6662, -11.626, 9.67705, 0.74 ) }
    dend_37 { pt3dadd( -21.1369, -11.7859, 10.5698, 0.88 ) }
    dend_37 { pt3dadd( -22.1572, -12.253, 12.8365, 1.03 ) }
    dend_37 { pt3dadd( -23.7513, -13.1638, 16.7336, 0.52 ) }
    dend_37 { pt3dadd( -24.4863, -13.6516, 18.6212, 1.25 ) }
    dend_37 { pt3dadd( -25.1353, -14.1689, 20.3426, 1.25 ) }
    dend_37 { pt3dadd( -25.6452, -14.6995, 22.008, 0.44 ) }
    dend_37 { pt3dadd( -25.9824, -15.1401, 23.2943, 0.44 ) }
    dend_37 { pt3dadd( -26.3568, -15.6623, 25.0176, 0.29 ) }
    dend_37 { pt3dadd( -26.8234, -16.2981, 27.8525, 1.99 ) }
    dend_37 { pt3dadd( -26.9628, -16.4524, 28.6559, 1.99 ) }
    dend_37 { pt3dadd( -28.0373, -17.4591, 34.3465, 1.99 ) }
    dend_37 { pt3dadd( -28.0557, -17.4743, 34.4396, 1.99 ) }
    dend_37 { pt3dadd( -29.8188, -18.8641, 43.2812, 2.73 ) }
    dend_37 { pt3dadd( -31.9701, -20.4584, 53.393, 1.4 ) }
    dend_37 { pt3dadd( -32.3223, -20.6925, 54.8746, 1.25 ) }
    dend_37 { pt3dadd( -32.7039, -20.9005, 56.213, 0.22 ) }
    dend_37 { pt3dadd( -33.0075, -21.0491, 57.0521, 0.22 ) }
    dend_37 { pt3dadd( -33.1534, -21.1299, 57.4193, 1.11 ) }
    dend_37 { pt3dadd( -33.7439, -21.5152, 58.5232, 1.47 ) }
    dend_37 { pt3dadd( -35.792, -23.0276, 61.4537, 1.18 ) }
    dend_37 { pt3dadd( -36.3422, -23.4413, 62.3357, 1.99 ) }
    dend_37 { pt3dadd( -37.6293, -24.3988, 64.5291, 0.22 ) }
    dend_37 { pt3dadd( -38.4287, -24.9954, 65.8895, 0.22 ) }
    dend_37 { pt3dadd( -38.6766, -25.1746, 66.289, 0.66 ) }
    dend_37 { pt3dadd( -39.7359, -25.9127, 67.9278, 0.66 ) }
    dend_37 { pt3dadd( -40.5308, -26.4233, 68.8944, 0.29 ) }
    dend_37 { pt3dadd( -41.4317, -26.8996, 69.9714, 1.33 ) }
    dend_37 { pt3dadd( -41.7563, -26.9665, 70.2645, 1.62 ) }
    dend_37 { pt3dadd( -42.3747, -27.0152, 70.7868, 1.84 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -5.37876, -19.2865, 11.0595, 1.62 ) }
    dend_34 { pt3dadd( -5.55818, -20.6319, 10.7764, 1.62 ) }
    dend_34 { pt3dadd( -5.71255, -21.6928, 10.542, 1.33 ) }
    dend_34 { pt3dadd( -5.90682, -23.0093, 10.2294, 0.88 ) }
    dend_34 { pt3dadd( -6.11479, -24.518, 9.85207, 0.74 ) }
    dend_34 { pt3dadd( -6.3531, -26.3163, 9.39849, 0.74 ) }
    dend_34 { pt3dadd( -6.53731, -27.986, 8.9999, 2.14 ) }
    dend_34 { pt3dadd( -6.66041, -29.5545, 8.66813, 2.21 ) }
    dend_34 { pt3dadd( -6.71582, -31.43, 8.39429, 1.47 ) }
    dend_34 { pt3dadd( -6.64713, -32.8803, 8.29691, 1.18 ) }
    dend_34 { pt3dadd( -6.5129, -33.7222, 8.32689, 0.88 ) }
    dend_34 { pt3dadd( -6.12257, -35.0211, 8.5973, 0.59 ) }
    dend_34 { pt3dadd( -5.50403, -36.5148, 9.11714, 0.59 ) }
    dend_34 { pt3dadd( -4.83771, -37.9322, 9.75825, 1.18 ) }
    dend_34 { pt3dadd( -4.54608, -38.5334, 10.0972, 1.47 ) }
    dend_34 { pt3dadd( -4.15197, -39.4318, 10.6635, 1.11 ) }
    dend_34 { pt3dadd( -3.69841, -40.9657, 11.6054, 0.74 ) }
    dend_34 { pt3dadd( -3.84924, -41.761, 11.9339, 0.44 ) }
    dend_34 { pt3dadd( -4.59285, -42.6108, 12.0057, 0.44 ) }
    dend_34 { pt3dadd( -5.40792, -43.2995, 11.9375, 0.52 ) }
    dend_34 { pt3dadd( -6.36204, -43.9474, 11.8198, 0.52 ) }
    dend_34 { pt3dadd( -7.28711, -44.5033, 11.677, 1.18 ) }
    dend_34 { pt3dadd( -8.53868, -45.2454, 11.4536, 1.92 ) }
    dend_34 { pt3dadd( -9.82217, -46.1076, 11.1994, 2.5 ) }
    dend_34 { pt3dadd( -11.0244, -47.0819, 10.9261, 2.36 ) }
    dend_34 { pt3dadd( -12.4051, -48.4163, 10.5676, 2.06 ) }
    dend_34 { pt3dadd( -13.4752, -49.6197, 10.2477, 0.59 ) }
    dend_34 { pt3dadd( -14.3938, -50.753, 9.97594, 0.52 ) }
    dend_34 { pt3dadd( -15.2959, -51.9904, 9.71257, 0.44 ) }
    dend_34 { pt3dadd( -16.1553, -53.3151, 9.40816, 1.4 ) }
    dend_34 { pt3dadd( -16.8462, -54.5171, 9.13125, 1.84 ) }
    dend_34 { pt3dadd( -17.5503, -55.9047, 8.80272, 1.84 ) }
    dend_34 { pt3dadd( -18.0847, -57.0154, 8.53203, 1.69 ) }
    dend_34 { pt3dadd( -18.6484, -58.2422, 8.22904, 1.18 ) }
    dend_34 { pt3dadd( -19.1705, -59.4863, 7.90019, 0.74 ) }
    dend_34 { pt3dadd( -19.451, -60.2752, 7.65548, 0.66 ) }
    dend_34 { pt3dadd( -19.7843, -61.4484, 7.23156, 0.59 ) }
    dend_34 { pt3dadd( -19.998, -62.4704, 6.7841, 0.52 ) }
    dend_34 { pt3dadd( -20.1183, -63.1953, 6.40934, 0.37 ) }
    dend_34 { pt3dadd( -20.3148, -64.4994, 5.69089, 0.29 ) }
    dend_34 { pt3dadd( -20.5158, -65.7042, 5.01734, 0.29 ) }
    dend_34 { pt3dadd( -20.5343, -65.7914, 4.96659, 0.29 ) }
    dend_34 { pt3dadd( -21.0098, -67.4391, 4.00528, 1.77 ) }
    dend_34 { pt3dadd( -21.4991, -68.8179, 3.31265, 2.36 ) }
    dend_34 { pt3dadd( -21.5246, -68.8835, 3.28327, 2.36 ) }
    dend_34 { pt3dadd( -21.8331, -69.6475, 3.00065, 2.58 ) }
    dend_34 { pt3dadd( -22.1672, -70.4807, 2.71521, 2.58 ) }
    dend_34 { pt3dadd( -22.7173, -71.8174, 2.24755, 1.84 ) }
    dend_34 { pt3dadd( -23.2853, -73.2704, 1.75537, 0.81 ) }
    dend_34 { pt3dadd( -23.7544, -74.5838, 1.32244, 0.52 ) }
    dend_34 { pt3dadd( -24.1359, -75.7604, 0.97732, 0.44 ) }
    dend_34 { pt3dadd( -24.6261, -77.3643, 0.563375, 0.44 ) }
    dend_34 { pt3dadd( -25.0152, -78.7667, 0.294464, 0.37 ) }
    dend_34 { pt3dadd( -25.238, -79.6946, 0.200423, 0.37 ) }
    dend_34 { pt3dadd( -25.4286, -80.5918, 0.177095, 0.37 ) }
    dend_34 { pt3dadd( -25.6616, -81.8272, 0.261328, 0.29 ) }
    dend_34 { pt3dadd( -25.8096, -82.8504, 0.380608, 0.29 ) }
    dend_34 { pt3dadd( -25.9789, -84.4773, 0.731296, 1.99 ) }
    dend_34 { pt3dadd( -26.0824, -85.538, 1.04239, 2.95 ) }
    dend_34 { pt3dadd( -26.1574, -86.1934, 1.26949, 2.95 ) }
    dend_34 { pt3dadd( -26.3977, -88.3799, 2.07994, 0.59 ) }
    dend_34 { pt3dadd( -26.5008, -89.6419, 2.59421, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_34 { pt3dadd( -26.5957, -91.3551, 3.36069, 0.37 ) }
    dend_34 { pt3dadd( -26.6278, -92.5861, 3.93579, 0.37 ) }
    dend_34 { pt3dadd( -26.5694, -93.7932, 4.51895, 1.69 ) }
    dend_34 { pt3dadd( -26.4875, -94.4663, 4.86311, 2.58 ) }
    dend_34 { pt3dadd( -26.2973, -95.475, 5.39754, 2.58 ) }
    dend_34 { pt3dadd( -25.967, -97.1635, 6.26293, 0.29 ) }
    dend_34 { pt3dadd( -25.749, -98.3249, 6.76221, 0.29 ) }
    dend_34 { pt3dadd( -25.4892, -99.8747, 7.46355, 0.29 ) }
    dend_34 { pt3dadd( -25.3122, -101.06, 8.02563, 0.66 ) }
    dend_34 { pt3dadd( -25.2591, -101.499, 8.25026, 0.74 ) }
    dend_34 { pt3dadd( -25.1471, -102.621, 8.84491, 0.29 ) }
    dend_34 { pt3dadd( -25.0613, -103.686, 9.48506, 0.29 ) }
    dend_34 { pt3dadd( -25.0227, -105.452, 10.5862, 1.4 ) }
    dend_34 { pt3dadd( -25.0295, -106.038, 10.9275, 1.92 ) }
    dend_34 { pt3dadd( -25.0254, -106.116, 10.9682, 1.92 ) }
    dend_34 { pt3dadd( -24.9624, -106.549, 11.1778, 1.92 ) }
    dend_34 { pt3dadd( -24.5801, -108.121, 11.8104, 0.22 ) }
    dend_34 { pt3dadd( -24.5542, -108.202, 11.8381, 0.22 ) }
    dend_34 { pt3dadd( -24.1899, -109.219, 12.1543, 0.66 ) }
    dend_34 { pt3dadd( -24.0317, -109.63, 12.2878, 0.81 ) }
    dend_34 { pt3dadd( -23.4696, -110.884, 12.694, 0.22 ) }
    dend_34 { pt3dadd( -22.9144, -112.03, 13.0502, 2.14 ) }
    dend_34 { pt3dadd( -22.4265, -112.959, 13.3187, 2.58 ) }
    dend_34 { pt3dadd( -21.1852, -115.151, 13.9672, 0.22 ) }
    dend_34 { pt3dadd( -20.5461, -116.231, 14.2952, 0.22 ) }
    dend_34 { pt3dadd( -19.8061, -117.441, 14.6597, 0.22 ) }
    dend_34 { pt3dadd( -19.2179, -118.359, 14.9227, 0.22 ) }
    dend_34 { pt3dadd( -18.6186, -119.23, 15.1798, 2.36 ) }
    dend_34 { pt3dadd( -17.6634, -120.553, 15.5331, 2.73 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 29/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 41.0514, -10.4711, -88.0525, 0.15 ) }
    dend_31 { pt3dadd( 44.1834, -11.2634, -108.849, 0.15 ) }
    dend_31 { pt3dadd( 44.4033, -11.3465, -110.258, 1.69 ) }
    dend_31 { pt3dadd( 44.5148, -11.3972, -110.956, 1.92 ) }
    dend_31 { pt3dadd( 44.5317, -11.4067, -111.054, 1.92 ) }
    dend_31 { pt3dadd( 45.1986, -11.8377, -114.62, 0.22 ) }
    dend_31 { pt3dadd( 45.3387, -11.9397, -115.298, 0.22 ) }
    dend_31 { pt3dadd( 45.8073, -12.5784, -116.132, 1.18 ) }
    dend_31 { pt3dadd( 45.8365, -12.6252, -116.197, 1.18 ) }
    dend_31 { pt3dadd( 46.3903, -13.5494, -117.589, 0.29 ) }
    dend_31 { pt3dadd( 46.6444, -13.9321, -118.184, 0.59 ) }
    dend_31 { pt3dadd( 47.1635, -14.6494, -119.309, 0.37 ) }
    dend_31 { pt3dadd( 48.1389, -15.7096, -121.184, 0.74 ) }
    dend_31 { pt3dadd( 48.1821, -15.7491, -121.263, 0.74 ) }
    dend_31 { pt3dadd( 49.032, -16.5565, -123.012, 0.15 ) }
    dend_31 { pt3dadd( 49.4269, -16.9356, -123.957, 0.15 ) }
    dend_31 { pt3dadd( 49.4559, -16.968, -124.032, 0.15 ) }
    dend_31 { pt3dadd( 49.6322, -17.1955, -124.529, 0.15 ) }
    dend_31 { pt3dadd( 49.6666, -17.2536, -124.629, 0.15 ) }
    dend_31 { pt3dadd( 50.114, -18.0323, -125.865, 0.15 ) }
    dend_31 { pt3dadd( 50.46, -18.6551, -126.788, 1.4 ) }
    dend_31 { pt3dadd( 50.7013, -19.0814, -127.412, 1.69 ) }
    dend_31 { pt3dadd( 51.7813, -20.9584, -130.119, 0.22 ) }
    dend_31 { pt3dadd( 52.1576, -21.5905, -131.033, 0.22 ) }
    dend_31 { pt3dadd( 52.618, -22.3582, -132.058, 0.22 ) }
    dend_31 { pt3dadd( 52.9685, -22.9043, -132.717, 0.96 ) }
    dend_31 { pt3dadd( 53.1062, -23.1379, -132.967, 0.96 ) }
    dend_31 { pt3dadd( 53.7589, -24.1917, -134.021, 0.22 ) }
    dend_31 { pt3dadd( 53.7894, -24.2418, -134.063, 0.22 ) }
    dend_31 { pt3dadd( 54.3761, -25.2317, -134.918, 0.22 ) }
    dend_31 { pt3dadd( 54.9035, -26.2665, -135.706, 1.55 ) }
    dend_31 { pt3dadd( 55.1969, -26.8221, -136.082, 1.99 ) }
    dend_31 { pt3dadd( 56.0401, -28.3808, -137.182, 0.29 ) }
    dend_31 { pt3dadd( 56.0757, -28.443, -137.228, 0.29 ) }
    dend_31 { pt3dadd( 56.5831, -29.3397, -137.989, 0.29 ) }
    dend_31 { pt3dadd( 57.1929, -30.5315, -139.092, 0.29 ) }
    dend_31 { pt3dadd( 57.3695, -30.9555, -139.534, 0.29 ) }
    dend_31 { pt3dadd( 57.9135, -32.5222, -141.487, 1.4 ) }
    dend_31 { pt3dadd( 58.0489, -33.037, -142.227, 1.69 ) }
    dend_31 { pt3dadd( 58.3587, -34.4141, -144.36, 0.29 ) }
    dend_31 { pt3dadd( 58.5098, -35.3708, -145.998, 0.29 ) }
    dend_31 { pt3dadd( 58.6023, -36.564, -148.142, 1.47 ) }
    dend_31 { pt3dadd( 58.5764, -37.8715, -150.508, 1.18 ) }
    dend_31 { pt3dadd( 58.4353, -39.0703, -152.614, 0.22 ) }
    dend_31 { pt3dadd( 58.3273, -39.5691, -153.447, 0.22 ) }
    dend_31 { pt3dadd( 58.0176, -40.5284, -154.931, 1.69 ) }
    dend_31 { pt3dadd( 57.8372, -40.9798, -155.567, 1.77 ) }
    dend_31 { pt3dadd( 57.2488, -42.1807, -156.883, 0.66 ) }
    dend_31 { pt3dadd( 56.8753, -42.8145, -157.437, 0.22 ) }
    dend_31 { pt3dadd( 56.3584, -43.6029, -158.057, 0.96 ) }
    dend_31 { pt3dadd( 55.826, -44.4078, -158.724, 0.22 ) }
    dend_31 { pt3dadd( 55.5986, -44.794, -159.123, 0.15 ) }
    dend_31 { pt3dadd( 55.2851, -45.4462, -160.025, 0.15 ) }
    dend_31 { pt3dadd( 54.9762, -46.2493, -161.247, 0.44 ) }
    dend_31 { pt3dadd( 54.7427, -46.8921, -162.328, 1.33 ) }
    dend_31 { pt3dadd( 54.5423, -47.4402, -163.315, 1.25 ) }
    dend_31 { pt3dadd( 53.7633, -49.1544, -166.709, 1.25 ) }
    dend_31 { pt3dadd( 53.186, -50.3122, -169.179, 0.15 ) }
    dend_31 { pt3dadd( 52.9601, -50.7301, -170.102, 0.15 ) }
    dend_31 { pt3dadd( 52.6086, -51.2637, -171.334, 0.81 ) }
    dend_31 { pt3dadd( 52.4541, -51.4713, -171.809, 0.96 ) }
    dend_31 { pt3dadd( 51.6878, -52.484, -173.909, 0.52 ) }
    dend_31 { pt3dadd( 51.0292, -53.3864, -175.571, 0.22 ) }
    dend_31 { pt3dadd( 50.7319, -53.8246, -176.337, 1.18 ) }
    dend_31 { pt3dadd( 49.7338, -55.5369, -179.337, 0.22 ) }
    dend_31 { pt3dadd( 49.4338, -56.1461, -180.367, 0.96 ) }
    dend_31 { pt3dadd( 48.9157, -57.4217, -182.422, 0.22 ) }
    dend_31 { pt3dadd( 48.7991, -57.8156, -182.996, 0.52 ) }
    dend_31 { pt3dadd( 48.7532, -57.9693, -183.211, 0.52 ) }
    dend_31 { pt3dadd( 48.334, -59.5701, -185.426, 0.52 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 99/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 41.0514, -10.4711, -88.0525, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_30 { pt3dadd( 41.7623, -8.84086, -92.8552, 1.55 ) }
    dend_30 { pt3dadd( 41.947, -8.51878, -93.7698, 1.62 ) }
    dend_30 { pt3dadd( 43.2329, -6.77757, -98.5721, 0.22 ) }
    dend_30 { pt3dadd( 43.2624, -6.74399, -98.6633, 0.22 ) }
    dend_30 { pt3dadd( 43.6595, -6.37484, -99.7014, 1.33 ) }
    dend_30 { pt3dadd( 43.9062, -6.17431, -100.272, 1.25 ) }
    dend_30 { pt3dadd( 45.4906, -5.16791, -102.935, 0.22 ) }
    dend_30 { pt3dadd( 46.1779, -4.78496, -103.94, 1.18 ) }
    dend_30 { pt3dadd( 46.5609, -4.59607, -104.387, 1.33 ) }
    dend_30 { pt3dadd( 48.3266, -3.74884, -106.357, 0.22 ) }
    dend_30 { pt3dadd( 49.5799, -3.16663, -107.708, 1.84 ) }
    dend_30 { pt3dadd( 49.9515, -2.98135, -108.083, 1.84 ) }
    dend_30 { pt3dadd( 51.0684, -2.38095, -109.05, 0.29 ) }
    dend_30 { pt3dadd( 51.3565, -2.21384, -109.289, 0.74 ) }
    dend_30 { pt3dadd( 52.5482, -1.45946, -110.205, 0.22 ) }
    dend_30 { pt3dadd( 52.6722, -1.36764, -110.294, 0.22 ) }
    dend_30 { pt3dadd( 53.1823, -0.949191, -110.669, 0.88 ) }
    dend_30 { pt3dadd( 54.3334, 0.182634, -111.8, 0.22 ) }
    dend_30 { pt3dadd( 54.5473, 0.427349, -112.055, 0.52 ) }
    dend_30 { pt3dadd( 54.8955, 0.863717, -112.526, 0.22 ) }
    dend_30 { pt3dadd( 55.6536, 1.85693, -113.668, 1.92 ) }
    dend_30 { pt3dadd( 55.9808, 2.30874, -114.198, 1.92 ) }
    dend_30 { pt3dadd( 56.9397, 3.76595, -115.937, 0.22 ) }
    dend_30 { pt3dadd( 57.0833, 4.01417, -116.223, 0.88 ) }
    dend_30 { pt3dadd( 57.2079, 4.22477, -116.465, 0.88 ) }
    dend_30 { pt3dadd( 57.7524, 5.07119, -117.409, 0.22 ) }
    dend_30 { pt3dadd( 58.0259, 5.46842, -117.854, 0.22 ) }
    dend_30 { pt3dadd( 58.0556, 5.51567, -117.907, 0.22 ) }
    dend_30 { pt3dadd( 58.22, 5.73157, -118.167, 0.22 ) }
    dend_30 { pt3dadd( 58.9258, 6.55873, -119.254, 1.4 ) }
    dend_30 { pt3dadd( 59.0905, 6.73759, -119.495, 1.4 ) }
    dend_30 { pt3dadd( 59.9999, 7.6507, -120.754, 0.22 ) }
    dend_30 { pt3dadd( 60.375, 7.96099, -121.214, 0.96 ) }
    dend_30 { pt3dadd( 61.3116, 8.63975, -122.24, 0.22 ) }
    dend_30 { pt3dadd( 61.5805, 8.80546, -122.499, 0.22 ) }
    dend_30 { pt3dadd( 62.0151, 9.00225, -122.815, 0.66 ) }
    dend_30 { pt3dadd( 62.6827, 9.22194, -123.189, 0.66 ) }
    dend_30 { pt3dadd( 63.9199, 9.47663, -123.657, 0.22 ) }
    dend_30 { pt3dadd( 64.5431, 9.55407, -123.839, 1.11 ) }
    dend_30 { pt3dadd( 64.9579, 9.57556, -123.934, 1.4 ) }
    dend_30 { pt3dadd( 66.6845, 9.49995, -124.283, 0.22 ) }
    dend_30 { pt3dadd( 67.4682, 9.40096, -124.418, 0.22 ) }
    dend_30 { pt3dadd( 68.4184, 9.21519, -124.543, 0.96 ) }
    dend_30 { pt3dadd( 69.2168, 9.02539, -124.634, 1.47 ) }
    dend_30 { pt3dadd( 70.5421, 8.6761, -124.795, 0.22 ) }
    dend_30 { pt3dadd( 71.2376, 8.49736, -124.931, 0.22 ) }
    dend_30 { pt3dadd( 71.3604, 8.46516, -124.965, 0.22 ) }
    dend_30 { pt3dadd( 72.1176, 8.295, -125.225, 0.22 ) }
    dend_30 { pt3dadd( 73.1886, 8.08438, -125.649, 1.33 ) }
    dend_30 { pt3dadd( 73.6611, 8.01761, -125.857, 1.62 ) }
    dend_30 { pt3dadd( 75.3371, 7.87433, -126.66, 0.22 ) }
    dend_30 { pt3dadd( 76.0948, 7.82878, -127.025, 0.66 ) }
    dend_30 { pt3dadd( 76.539, 7.79891, -127.246, 0.66 ) }
    dend_30 { pt3dadd( 76.6753, 7.78726, -127.318, 0.66 ) }
    dend_30 { pt3dadd( 78.0141, 7.65107, -128.025, 0.22 ) }
    dend_30 { pt3dadd( 78.973, 7.52594, -128.607, 1.11 ) }
    dend_30 { pt3dadd( 79.6308, 7.42339, -129.028, 1.33 ) }
    dend_30 { pt3dadd( 81.0424, 7.18914, -130.002, 0.22 ) }
    dend_30 { pt3dadd( 82.0343, 7.03935, -130.741, 1.25 ) }
    dend_30 { pt3dadd( 82.4394, 6.98654, -131.108, 1.33 ) }
    dend_30 { pt3dadd( 84.3007, 6.76084, -133.026, 0.22 ) }
    dend_30 { pt3dadd( 84.5256, 6.73722, -133.277, 0.44 ) }
    dend_30 { pt3dadd( 84.6235, 6.7299, -133.397, 0.44 ) }
    dend_30 { pt3dadd( 85.3904, 6.6997, -134.443, 1.18 ) }
    dend_30 { pt3dadd( 87.1694, 6.72498, -137.038, 0.22 ) }
    dend_30 { pt3dadd( 87.5779, 6.75094, -137.666, 0.59 ) }
    // Section: dend_28, id: dend_28, parent: dend_24 (entry count 66/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -9.2686, -25.6702, -39.1676, 1.55 ) }
    dend_28 { pt3dadd( -9.94189, -26.404, -41.0171, 1.55 ) }
    dend_28 { pt3dadd( -10.5467, -26.9066, -42.5772, 0.22 ) }
    dend_28 { pt3dadd( -10.8075, -27.1377, -43.2289, 0.22 ) }
    dend_28 { pt3dadd( -11.2322, -27.5575, -44.4456, 2.36 ) }
    dend_28 { pt3dadd( -11.544, -27.9121, -45.5912, 2.87 ) }
    dend_28 { pt3dadd( -12.821, -29.2482, -50.7143, 0.81 ) }
    dend_28 { pt3dadd( -12.8317, -29.2574, -50.767, 0.81 ) }
    dend_28 { pt3dadd( -13.0256, -29.4337, -52.1346, 0.81 ) }
    dend_28 { pt3dadd( -13.186, -29.7091, -54.7705, 2.06 ) }
    dend_28 { pt3dadd( -13.1437, -29.9725, -57.5218, 1.25 ) }
    dend_28 { pt3dadd( -12.9945, -30.2034, -59.5169, 0.81 ) }
    dend_28 { pt3dadd( -12.559, -30.7988, -63.213, 0.96 ) }
    dend_28 { pt3dadd( -12.5028, -30.9219, -63.9869, 1.47 ) }
    dend_28 { pt3dadd( -12.4376, -31.1747, -65.6246, 0.22 ) }
    dend_28 { pt3dadd( -12.4201, -31.301, -66.2995, 0.22 ) }
    dend_28 { pt3dadd( -12.382, -31.6359, -68.159, 1.4 ) }
    dend_28 { pt3dadd( -12.3395, -32.0303, -70.297, 1.03 ) }
    dend_28 { pt3dadd( -12.3549, -32.3914, -72.1935, 1.69 ) }
    dend_28 { pt3dadd( -12.3915, -32.8126, -74.4323, 1.4 ) }
    dend_28 { pt3dadd( -12.3888, -33.2252, -76.6642, 1.4 ) }
    dend_28 { pt3dadd( -12.2344, -33.9801, -80.6953, 1.84 ) }
    dend_28 { pt3dadd( -11.9548, -34.5767, -83.7136, 0.15 ) }
    dend_28 { pt3dadd( -11.796, -34.8184, -84.7566, 1.84 ) }
    dend_28 { pt3dadd( -11.7181, -34.9228, -85.1314, 1.84 ) }
    dend_28 { pt3dadd( -11.1845, -35.6903, -87.4019, 0.22 ) }
    dend_28 { pt3dadd( -10.9633, -35.9984, -88.2741, 1.55 ) }
    dend_28 { pt3dadd( -10.866, -36.0931, -88.5566, 1.77 ) }
    dend_28 { pt3dadd( -10.3176, -36.4097, -90.0143, 0.22 ) }
    dend_28 { pt3dadd( -10.1417, -36.4774, -90.4671, 0.22 ) }
    dend_28 { pt3dadd( -9.71205, -36.6073, -91.5232, 1.77 ) }
    dend_28 { pt3dadd( -7.71749, -37.0484, -96.2248, 1.25 ) }
    dend_28 { pt3dadd( -6.83468, -37.1926, -98.225, 0.81 ) }
    dend_28 { pt3dadd( -6.20514, -37.2823, -99.6127, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_28 { pt3dadd( -5.92406, -37.3128, -100.217, 0.37 ) }
    dend_28 { pt3dadd( -5.42545, -37.379, -101.206, 0.22 ) }
    dend_28 { pt3dadd( -4.71833, -37.4756, -102.422, 1.77 ) }
    dend_28 { pt3dadd( -4.4985, -37.518, -102.729, 1.84 ) }
    dend_28 { pt3dadd( -2.78834, -37.8868, -105.099, 0.96 ) }
    dend_28 { pt3dadd( -2.21234, -38.0142, -105.87, 1.4 ) }
    dend_28 { pt3dadd( -1.10153, -38.1974, -107.376, 0.22 ) }
    dend_28 { pt3dadd( -0.870496, -38.2164, -107.679, 0.22 ) }
    dend_28 { pt3dadd( -0.782363, -38.2154, -107.778, 0.22 ) }
    dend_28 { pt3dadd( -0.101442, -38.1591, -108.429, 0.22 ) }
    dend_28 { pt3dadd( 0.310628, -38.102, -108.689, 1.18 ) }
    dend_28 { pt3dadd( 0.366259, -38.0951, -108.716, 1.18 ) }
    dend_28 { pt3dadd( 0.838062, -38.0329, -108.919, 1.18 ) }
    dend_28 { pt3dadd( 2.19897, -37.9301, -109.501, 0.29 ) }
    dend_28 { pt3dadd( 2.77878, -37.8993, -109.761, 0.44 ) }
    dend_28 { pt3dadd( 3.25057, -37.8718, -109.974, 0.44 ) }
    dend_28 { pt3dadd( 4.00839, -37.8237, -110.301, 0.22 ) }
    dend_28 { pt3dadd( 4.90024, -37.7637, -110.671, 1.47 ) }
    dend_28 { pt3dadd( 5.35955, -37.7364, -110.851, 1.62 ) }
    dend_28 { pt3dadd( 6.65096, -37.6626, -111.301, 0.22 ) }
    dend_28 { pt3dadd( 7.3271, -37.6231, -111.559, 0.22 ) }
    dend_28 { pt3dadd( 7.70383, -37.6203, -111.722, 0.59 ) }
    dend_28 { pt3dadd( 7.75211, -37.6281, -111.746, 0.59 ) }
    dend_28 { pt3dadd( 7.96998, -37.7294, -111.904, 0.59 ) }
    dend_28 { pt3dadd( 8.0528, -37.8086, -112.044, 0.59 ) }
    dend_28 { pt3dadd( 8.31327, -38.2512, -112.788, 0.15 ) }
    dend_28 { pt3dadd( 8.43063, -38.5013, -113.204, 1.18 ) }
    dend_28 { pt3dadd( 8.55571, -38.7989, -113.711, 1.18 ) }
    dend_28 { pt3dadd( 8.85007, -39.5922, -115.092, 0.44 ) }
    dend_28 { pt3dadd( 9.1781, -40.7362, -117.06, 0.22 ) }
    dend_28 { pt3dadd( 9.21434, -40.9854, -117.501, 0.22 ) }
    dend_28 { pt3dadd( 9.19515, -41.1423, -117.845, 0.74 ) }
    dend_28 { pt3dadd( 9.17324, -41.1787, -117.945, 0.74 ) }
    dend_28 { pt3dadd( 8.73689, -41.543, -119.211, 0.22 ) }
    dend_28 { pt3dadd( 8.52377, -41.675, -119.71, 0.22 ) }
    dend_28 { pt3dadd( 7.69703, -42.0655, -121.384, 1.47 ) }
    dend_28 { pt3dadd( 6.6332, -42.4512, -123.342, 1.33 ) }
    dend_28 { pt3dadd( 5.48126, -42.8129, -125.379, 0.59 ) }
    dend_28 { pt3dadd( 4.67454, -43.0272, -126.746, 0.44 ) }
    dend_28 { pt3dadd( 4.39862, -43.0805, -127.18, 0.44 ) }
    dend_28 { pt3dadd( 3.68754, -43.1878, -128.273, 0.22 ) }
    dend_28 { pt3dadd( 3.23963, -43.248, -128.876, 1.11 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 42/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -9.2686, -25.6702, -39.1676, 2.87 ) }
    dend_25 { pt3dadd( -9.83486, -25.911, -39.3991, 2.87 ) }
    dend_25 { pt3dadd( -10.8312, -26.3479, -39.7331, 2.73 ) }
    dend_25 { pt3dadd( -12.5329, -27.0998, -40.2333, 0.29 ) }
    dend_25 { pt3dadd( -12.7547, -27.1964, -40.3091, 0.29 ) }
    dend_25 { pt3dadd( -14.0403, -27.7446, -40.7565, 0.29 ) }
    dend_25 { pt3dadd( -15.3356, -28.2613, -41.2107, 1.55 ) }
    dend_25 { pt3dadd( -15.9434, -28.4731, -41.3977, 2.21 ) }
    dend_25 { pt3dadd( -16.222, -28.5561, -41.4902, 2.21 ) }
    dend_25 { pt3dadd( -18.1172, -29.0681, -42.251, 0.22 ) }
    dend_25 { pt3dadd( -18.7582, -29.2307, -42.5756, 0.22 ) }
    dend_25 { pt3dadd( -19.3235, -29.3635, -42.9215, 0.66 ) }
    dend_25 { pt3dadd( -19.5473, -29.4033, -43.0662, 0.81 ) }
    dend_25 { pt3dadd( -20.8825, -29.5943, -43.9067, 0.22 ) }
    dend_25 { pt3dadd( -21.4169, -29.6634, -44.2127, 0.22 ) }
    dend_25 { pt3dadd( -22.3776, -29.7874, -44.7103, 1.84 ) }
    dend_25 { pt3dadd( -22.8695, -29.86, -44.9712, 2.21 ) }
    dend_25 { pt3dadd( -23.6548, -30.0145, -45.4486, 2.06 ) }
    dend_25 { pt3dadd( -24.933, -30.3147, -46.3272, 0.29 ) }
    dend_25 { pt3dadd( -25.4635, -30.4774, -46.7628, 0.29 ) }
    dend_25 { pt3dadd( -26.5087, -30.8675, -47.7658, 1.69 ) }
    dend_25 { pt3dadd( -26.93, -31.0577, -48.2209, 1.99 ) }
    dend_25 { pt3dadd( -28.3524, -31.8061, -49.9114, 1.11 ) }
    dend_25 { pt3dadd( -28.9376, -32.1968, -50.698, 1.11 ) }
    dend_25 { pt3dadd( -29.7968, -32.9449, -52.0592, 0.29 ) }
    dend_25 { pt3dadd( -30.0584, -33.2256, -52.5347, 0.29 ) }
    dend_25 { pt3dadd( -30.1292, -33.3258, -52.6907, 0.52 ) }
    dend_25 { pt3dadd( -30.295, -33.6318, -53.1173, 0.52 ) }
    dend_25 { pt3dadd( -30.4128, -34.0331, -53.6425, 0.22 ) }
    dend_25 { pt3dadd( -30.4486, -34.2994, -54.0023, 0.22 ) }
    dend_25 { pt3dadd( -30.4498, -34.3338, -54.0489, 0.22 ) }
    dend_25 { pt3dadd( -30.4375, -35.9013, -56.1154, 2.06 ) }
    dend_25 { pt3dadd( -30.4376, -36.3229, -56.6506, 2.36 ) }
    dend_25 { pt3dadd( -30.5195, -37.6564, -58.3151, 0.22 ) }
    dend_25 { pt3dadd( -30.5529, -37.9736, -58.7307, 0.22 ) }
    dend_25 { pt3dadd( -30.5967, -38.3466, -59.1974, 0.22 ) }
    dend_25 { pt3dadd( -30.667, -39.0662, -60.0334, 1.33 ) }
    dend_25 { pt3dadd( -30.7119, -39.5783, -60.6334, 1.47 ) }
    dend_25 { pt3dadd( -30.8447, -40.5894, -61.8861, 0.22 ) }
    dend_25 { pt3dadd( -31.1054, -41.5801, -63.3712, 0.22 ) }
    dend_25 { pt3dadd( -31.2432, -42.0277, -64.1003, 1.4 ) }
    dend_25 { pt3dadd( -31.3106, -42.2396, -64.4734, 1.69 ) }
    dend_25 { pt3dadd( -31.6987, -43.6447, -67.0636, 0.22 ) }
    dend_25 { pt3dadd( -31.8281, -44.2156, -68.2056, 1.92 ) }
    dend_25 { pt3dadd( -32.1303, -45.576, -71.3486, 0.29 ) }
    dend_25 { pt3dadd( -32.1983, -45.8545, -72.1026, 0.29 ) }
    dend_25 { pt3dadd( -32.206, -45.895, -72.2219, 0.29 ) }
    dend_25 { pt3dadd( -32.2467, -46.2047, -73.081, 0.74 ) }
    dend_25 { pt3dadd( -32.2622, -46.784, -74.5407, 1.55 ) }
    dend_25 { pt3dadd( -32.1762, -48.2043, -77.8565, 1.47 ) }
    dend_25 { pt3dadd( -31.9915, -49.548, -80.6994, 0.29 ) }
    dend_25 { pt3dadd( -31.947, -49.9001, -81.4306, 0.29 ) }
    dend_25 { pt3dadd( -31.8726, -50.5539, -82.6948, 1.4 ) }
    dend_25 { pt3dadd( -31.751, -51.713, -84.7107, 1.69 ) }
    dend_25 { pt3dadd( -31.7037, -51.9984, -85.1402, 1.69 ) }
    dend_25 { pt3dadd( -31.2347, -53.6668, -87.3456, 0.22 ) }
    dend_25 { pt3dadd( -31.21, -53.7385, -87.444, 0.22 ) }
    dend_25 { pt3dadd( -31.0904, -54.0409, -87.8935, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_25 { pt3dadd( -30.8895, -54.4909, -88.6109, 1.47 ) }
    dend_25 { pt3dadd( -30.3629, -55.658, -90.4315, 0.22 ) }
    dend_25 { pt3dadd( -30.2238, -55.9532, -90.8886, 1.4 ) }
    dend_25 { pt3dadd( -29.7474, -56.8855, -92.4702, 1.4 ) }
    dend_25 { pt3dadd( -29.3578, -57.6142, -93.7981, 0.22 ) }
    dend_25 { pt3dadd( -28.9539, -58.3572, -95.4337, 1.62 ) }
    dend_25 { pt3dadd( -28.9422, -58.3788, -95.4874, 1.62 ) }
    dend_25 { pt3dadd( -28.8517, -58.5955, -96.0584, 1.62 ) }
    dend_25 { pt3dadd( -28.5671, -59.6433, -98.9268, 0.15 ) }
    dend_25 { pt3dadd( -28.5378, -59.8616, -99.5488, 1.4 ) }
    dend_25 { pt3dadd( -28.627, -60.9311, -102.933, 1.11 ) }
    dend_25 { pt3dadd( -28.631, -60.9472, -102.981, 1.11 ) }
    dend_25 { pt3dadd( -28.8585, -61.5309, -104.531, 0.37 ) }
    dend_25 { pt3dadd( -29.0022, -61.7951, -105.122, 0.74 ) }
    dend_25 { pt3dadd( -29.1151, -61.9699, -105.426, 0.88 ) }
    dend_25 { pt3dadd( -29.8632, -63.1421, -107.177, 0.22 ) }
    dend_25 { pt3dadd( -30.1704, -63.7298, -107.765, 1.33 ) }
    dend_25 { pt3dadd( -30.3766, -64.3312, -108.237, 1.11 ) }
    dend_25 { pt3dadd( -30.5547, -65.0933, -108.756, 0.22 ) }
    dend_25 { pt3dadd( -30.5623, -65.1416, -108.786, 0.22 ) }
    dend_25 { pt3dadd( -30.6346, -66.0053, -109.222, 0.22 ) }
    dend_25 { pt3dadd( -30.6286, -66.9491, -109.423, 0.22 ) }
    dend_25 { pt3dadd( -30.4964, -68.3521, -109.643, 1.84 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 23/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 14.4854, 66.9451, -58.0889, 0.22 ) }
    dend_22 { pt3dadd( 13.9896, 68.0752, -58.4032, 0.22 ) }
    dend_22 { pt3dadd( 13.9538, 68.1617, -58.4253, 0.22 ) }
    dend_22 { pt3dadd( 13.7192, 68.8439, -58.6271, 0.22 ) }
    dend_22 { pt3dadd( 13.6083, 69.376, -58.8267, 0.66 ) }
    dend_22 { pt3dadd( 13.5996, 69.4585, -58.8603, 0.66 ) }
    dend_22 { pt3dadd( 13.6023, 69.7439, -58.9993, 0.66 ) }
    dend_22 { pt3dadd( 13.6118, 69.7855, -59.0223, 0.66 ) }
    dend_22 { pt3dadd( 13.783, 70.2843, -59.3218, 0.22 ) }
    dend_22 { pt3dadd( 14.1006, 70.922, -59.727, 0.88 ) }
    dend_22 { pt3dadd( 14.2308, 71.1421, -59.8608, 0.88 ) }
    dend_22 { pt3dadd( 14.6772, 71.8289, -60.243, 0.29 ) }
    dend_22 { pt3dadd( 14.7165, 71.8879, -60.2655, 0.29 ) }
    dend_22 { pt3dadd( 15.0192, 72.3749, -60.367, 0.29 ) }
    dend_22 { pt3dadd( 15.4168, 73.0937, -60.381, 1.03 ) }
    dend_22 { pt3dadd( 15.5784, 73.4212, -60.3477, 1.25 ) }
    dend_22 { pt3dadd( 15.9579, 74.2774, -60.2084, 0.37 ) }
    dend_22 { pt3dadd( 16.4365, 75.4038, -59.9602, 0.22 ) }
    dend_22 { pt3dadd( 16.814, 76.3392, -59.7344, 0.22 ) }
    dend_22 { pt3dadd( 17.1055, 77.1362, -59.5118, 0.81 ) }
    dend_22 { pt3dadd( 17.3143, 77.8167, -59.2853, 0.22 ) }
    dend_22 { pt3dadd( 17.3977, 78.1473, -59.1669, 0.52 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 45/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 14.4854, 66.9451, -58.0889, 0.81 ) }
    dend_21 { pt3dadd( 15.6309, 68.427, -59.0564, 0.81 ) }
    dend_21 { pt3dadd( 16.3263, 69.1639, -59.548, 0.22 ) }
    dend_21 { pt3dadd( 16.9043, 69.7417, -59.9053, 0.22 ) }
    dend_21 { pt3dadd( 17.5135, 70.3534, -60.2542, 1.18 ) }
    dend_21 { pt3dadd( 17.9778, 70.8153, -60.4836, 1.18 ) }
    dend_21 { pt3dadd( 18.0307, 70.8673, -60.5097, 1.18 ) }
    dend_21 { pt3dadd( 19.1636, 72.0, -60.9444, 0.29 ) }
    dend_21 { pt3dadd( 19.7126, 72.5019, -61.128, 0.44 ) }
    dend_21 { pt3dadd( 19.9876, 72.7395, -61.3335, 0.44 ) }
    dend_21 { pt3dadd( 20.6934, 73.3987, -62.0968, 0.22 ) }
    dend_21 { pt3dadd( 21.1338, 73.8535, -62.6892, 1.18 ) }
    dend_21 { pt3dadd( 21.3216, 74.0939, -63.195, 1.47 ) }
    dend_21 { pt3dadd( 21.4051, 74.2476, -63.6389, 1.47 ) }
    dend_21 { pt3dadd( 21.8612, 75.622, -67.9575, 0.52 ) }
    dend_21 { pt3dadd( 21.8964, 75.8279, -68.7151, 0.81 ) }
    dend_21 { pt3dadd( 21.8975, 75.9482, -69.2129, 0.81 ) }
    dend_21 { pt3dadd( 21.7069, 77.2665, -75.4064, 1.11 ) }
    dend_21 { pt3dadd( 21.4091, 77.9607, -79.3054, 0.59 ) }
    dend_21 { pt3dadd( 21.1934, 78.1869, -80.9238, 0.29 ) }
    dend_21 { pt3dadd( 20.7025, 78.3552, -83.1113, 0.74 ) }
    dend_21 { pt3dadd( 20.6756, 78.3539, -83.1981, 0.74 ) }
    dend_21 { pt3dadd( 20.2744, 78.197, -83.9816, 0.81 ) }
    dend_21 { pt3dadd( 19.1644, 77.4144, -84.7518, 0.29 ) }
    dend_21 { pt3dadd( 18.3284, 76.7348, -85.1037, 0.29 ) }
    dend_21 { pt3dadd( 17.0952, 75.6635, -85.5241, 0.29 ) }
    dend_21 { pt3dadd( 15.8055, 74.5692, -85.8399, 0.29 ) }
    dend_21 { pt3dadd( 14.4399, 73.4102, -86.1637, 0.22 ) }
    dend_21 { pt3dadd( 13.5846, 72.6899, -86.3518, 0.59 ) }
    dend_21 { pt3dadd( 13.3422, 72.4692, -86.3939, 0.59 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 75/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -3.76325, 81.4243, -30.0397, 0.22 ) }
    dend_19 { pt3dadd( -5.98521, 83.0944, -28.8999, 0.22 ) }
    dend_19 { pt3dadd( -6.51879, 83.4865, -28.6801, 0.66 ) }
    dend_19 { pt3dadd( -7.53032, 84.2287, -28.3208, 0.22 ) }
    dend_19 { pt3dadd( -8.55334, 84.9698, -27.9929, 1.4 ) }
    dend_19 { pt3dadd( -9.10222, 85.3479, -27.8177, 1.4 ) }
    dend_19 { pt3dadd( -11.2585, 86.8183, -27.1378, 0.22 ) }
    dend_19 { pt3dadd( -12.4399, 87.5813, -26.8508, 0.22 ) }
    dend_19 { pt3dadd( -14.168, 88.6755, -26.4788, 1.47 ) }
    dend_19 { pt3dadd( -14.5285, 88.9076, -26.411, 1.84 ) }
    dend_19 { pt3dadd( -16.8994, 90.4826, -26.0476, 0.22 ) }
    dend_19 { pt3dadd( -17.2895, 90.7481, -25.9973, 0.52 ) }
    dend_19 { pt3dadd( -18.559, 91.6605, -25.9135, 0.15 ) }
    dend_19 { pt3dadd( -19.322, 92.2411, -25.8895, 0.88 ) }
    dend_19 { pt3dadd( -20.2263, 92.9804, -25.9141, 0.22 ) }
    dend_19 { pt3dadd( -21.4063, 94.0152, -26.0112, 1.84 ) }
    dend_19 { pt3dadd( -21.8134, 94.3937, -26.0773, 1.99 ) }
    dend_19 { pt3dadd( -23.6749, 96.1278, -26.3922, 0.22 ) }
    dend_19 { pt3dadd( -24.2328, 96.6617, -26.4905, 1.11 ) }
    dend_19 { pt3dadd( -24.709, 97.1191, -26.5639, 1.25 ) }
    dend_19 { pt3dadd( -25.9016, 98.2195, -26.7006, 0.15 ) }
    dend_19 { pt3dadd( -26.5544, 98.7984, -26.7321, 0.44 ) }
    dend_19 { pt3dadd( -26.8144, 99.0208, -26.7298, 0.44 ) }
    dend_19 { pt3dadd( -26.8948, 99.0874, -26.7235, 0.44 ) }
    dend_19 { pt3dadd( -28.2161, 100.15, -26.5343, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_19 { pt3dadd( -29.0861, 100.87, -26.365, 0.15 ) }
    dend_19 { pt3dadd( -29.1435, 100.92, -26.3504, 0.15 ) }
    dend_19 { pt3dadd( -29.5756, 101.328, -26.239, 0.66 ) }
    dend_19 { pt3dadd( -30.1128, 101.872, -26.1225, 0.81 ) }
    dend_19 { pt3dadd( -31.2055, 103.041, -25.9463, 0.15 ) }
    dend_19 { pt3dadd( -31.6208, 103.512, -25.9084, 0.15 ) }
    dend_19 { pt3dadd( -32.5479, 104.627, -25.8704, 1.47 ) }
    dend_19 { pt3dadd( -32.9816, 105.169, -25.8662, 1.47 ) }
    dend_19 { pt3dadd( -33.7834, 106.203, -25.8819, 0.22 ) }
    dend_19 { pt3dadd( -34.132, 106.677, -25.9245, 0.52 ) }
    dend_19 { pt3dadd( -34.2866, 106.898, -25.9633, 0.52 ) }
    dend_19 { pt3dadd( -34.9024, 107.789, -26.1612, 0.15 ) }
    dend_19 { pt3dadd( -35.6096, 108.826, -26.5013, 1.33 ) }
    dend_19 { pt3dadd( -35.8642, 109.198, -26.6427, 1.69 ) }
    dend_19 { pt3dadd( -36.6511, 110.337, -27.1547, 0.22 ) }
    dend_19 { pt3dadd( -37.0441, 110.914, -27.4262, 0.59 ) }
    dend_19 { pt3dadd( -37.3766, 111.403, -27.6709, 0.59 ) }
    dend_19 { pt3dadd( -37.9699, 112.262, -28.1521, 0.15 ) }
    dend_19 { pt3dadd( -38.9253, 113.626, -29.0021, 1.33 ) }
    dend_19 { pt3dadd( -39.3225, 114.191, -29.3619, 1.47 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 20/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -3.76325, 81.4243, -30.0397, 0.29 ) }
    dend_16 { pt3dadd( -4.66375, 82.1871, -31.1916, 0.29 ) }
    dend_16 { pt3dadd( -5.01868, 82.4805, -31.6121, 0.52 ) }
    dend_16 { pt3dadd( -5.58089, 82.938, -32.2204, 0.74 ) }
    dend_16 { pt3dadd( -5.80886, 83.1198, -32.446, 0.88 ) }
    dend_16 { pt3dadd( -6.42751, 83.6202, -33.0196, 0.15 ) }
    dend_16 { pt3dadd( -6.66057, 83.818, -33.2241, 0.15 ) }
    dend_16 { pt3dadd( -6.97512, 84.112, -33.4544, 1.33 ) }
    dend_16 { pt3dadd( -7.2911, 84.4272, -33.656, 1.77 ) }
    dend_16 { pt3dadd( -7.9138, 85.0624, -33.987, 0.22 ) }
    dend_16 { pt3dadd( -8.17532, 85.3386, -34.1066, 0.22 ) }
    dend_16 { pt3dadd( -8.52237, 85.7485, -34.2401, 0.88 ) }
    dend_16 { pt3dadd( -8.67895, 85.9577, -34.303, 0.88 ) }
    dend_16 { pt3dadd( -9.04646, 86.509, -34.4535, 0.15 ) }
    dend_16 { pt3dadd( -9.27457, 86.9394, -34.5316, 0.15 ) }
    dend_16 { pt3dadd( -9.41243, 87.2968, -34.5625, 0.15 ) }
    dend_16 { pt3dadd( -9.61683, 88.0241, -34.5935, 2.14 ) }
    dend_16 { pt3dadd( -9.66138, 88.2784, -34.5933, 2.14 ) }
    dend_16 { pt3dadd( -9.66443, 88.3278, -34.5911, 2.14 ) }
    dend_16 { pt3dadd( -9.59762, 89.387, -34.4967, 0.15 ) }
    dend_16 { pt3dadd( -9.53013, 89.7256, -34.4589, 0.15 ) }
    dend_16 { pt3dadd( -9.44219, 90.0135, -34.4365, 0.15 ) }
    dend_16 { pt3dadd( -9.32581, 90.3141, -34.4217, 0.66 ) }
    dend_16 { pt3dadd( -9.16993, 90.6701, -34.4298, 0.81 ) }
    dend_16 { pt3dadd( -9.13806, 90.7325, -34.4366, 0.81 ) }
    dend_16 { pt3dadd( -8.8283, 91.2042, -34.6026, 0.15 ) }
    dend_16 { pt3dadd( -8.52131, 91.6788, -34.8115, 0.88 ) }
    dend_16 { pt3dadd( -8.4993, 91.712, -34.8311, 0.88 ) }
    dend_16 { pt3dadd( -8.39081, 91.8843, -34.9427, 0.88 ) }
    dend_16 { pt3dadd( -8.34736, 91.961, -34.9925, 0.88 ) }
    dend_16 { pt3dadd( -8.01164, 92.6622, -35.411, 0.15 ) }
    dend_16 { pt3dadd( -7.90931, 92.9245, -35.5623, 0.15 ) }
    dend_16 { pt3dadd( -7.73309, 93.4724, -35.8652, 1.11 ) }
    dend_16 { pt3dadd( -7.63392, 93.8784, -36.0857, 1.11 ) }
    dend_16 { pt3dadd( -7.42804, 95.0466, -36.699, 0.22 ) }
    dend_16 { pt3dadd( -7.38309, 95.4389, -36.9249, 0.22 ) }
    dend_16 { pt3dadd( -7.35383, 96.0351, -37.2834, 1.47 ) }
    dend_16 { pt3dadd( -7.35906, 96.4704, -37.5565, 1.69 ) }
    dend_16 { pt3dadd( -7.46841, 97.6345, -38.546, 0.15 ) }
    dend_16 { pt3dadd( -7.52589, 97.9277, -38.8741, 0.88 ) }
    dend_16 { pt3dadd( -7.77366, 98.7311, -39.9546, 0.22 ) }
    dend_16 { pt3dadd( -7.8248, 98.8717, -40.1685, 1.55 ) }
    dend_16 { pt3dadd( -7.93961, 99.1444, -40.61, 1.84 ) }
    dend_16 { pt3dadd( -8.59664, 100.531, -42.9581, 0.59 ) }
    dend_16 { pt3dadd( -8.81629, 100.917, -43.6442, 0.22 ) }
    dend_16 { pt3dadd( -8.91491, 101.083, -43.9247, 0.74 ) }
    dend_16 { pt3dadd( -9.24164, 101.599, -44.6926, 0.15 ) }
    dend_16 { pt3dadd( -9.45069, 101.92, -45.1191, 0.15 ) }
    dend_16 { pt3dadd( -9.61776, 102.159, -45.3909, 0.81 ) }
    dend_16 { pt3dadd( -9.78511, 102.362, -45.5686, 0.81 ) }
    dend_16 { pt3dadd( -10.2416, 102.862, -46.1467, 0.15 ) }
    dend_16 { pt3dadd( -10.4349, 103.06, -46.4834, 0.96 ) }
    dend_16 { pt3dadd( -10.6147, 103.231, -46.8339, 0.96 ) }
    dend_16 { pt3dadd( -11.1174, 103.685, -47.8765, 0.22 ) }
    dend_16 { pt3dadd( -11.3899, 103.928, -48.4522, 1.4 ) }
    dend_16 { pt3dadd( -11.9763, 104.455, -49.7247, 1.69 ) }
    dend_16 { pt3dadd( -12.6543, 105.08, -51.1997, 0.74 ) }
    dend_16 { pt3dadd( -12.9261, 105.339, -51.7871, 0.22 ) }
    dend_16 { pt3dadd( -13.0679, 105.477, -52.0677, 0.59 ) }
    dend_16 { pt3dadd( -13.3147, 105.717, -52.4291, 0.22 ) }
    dend_16 { pt3dadd( -13.3423, 105.745, -52.4507, 0.22 ) }
    dend_16 { pt3dadd( -13.6867, 106.09, -52.5258, 0.22 ) }
    dend_16 { pt3dadd( -13.9092, 106.325, -52.5133, 0.52 ) }
    dend_16 { pt3dadd( -14.3705, 106.893, -52.4465, 0.15 ) }
    dend_16 { pt3dadd( -14.8302, 107.546, -52.3345, 1.84 ) }
    dend_16 { pt3dadd( -15.4321, 108.493, -52.1339, 0.15 ) }
    dend_16 { pt3dadd( -15.5963, 108.767, -52.0609, 0.29 ) }
    dend_16 { pt3dadd( -15.642, 108.856, -52.0343, 0.29 ) }
    dend_16 { pt3dadd( -15.867, 109.377, -51.8638, 0.15 ) }
    dend_16 { pt3dadd( -16.0283, 109.835, -51.7083, 0.74 ) }
    dend_16 { pt3dadd( -16.0727, 109.989, -51.6626, 0.74 ) }
    dend_16 { pt3dadd( -16.29, 110.796, -51.4601, 0.22 ) }
    dend_16 { pt3dadd( -16.5003, 111.518, -51.2915, 0.22 ) }
    dend_16 { pt3dadd( -16.683, 112.121, -51.1612, 1.69 ) }
    dend_16 { pt3dadd( -16.7605, 112.377, -51.1122, 1.69 ) }
    dend_16 { pt3dadd( -16.9467, 113.091, -51.0015, 0.22 ) }
    dend_16 { pt3dadd( -17.0169, 113.402, -50.9625, 0.37 ) }
    dend_16 { pt3dadd( -17.1215, 113.989, -50.9153, 0.15 ) }
    dend_16 { pt3dadd( -17.1447, 114.133, -50.9081, 0.37 ) }
    dend_16 { pt3dadd( -17.222, 114.661, -50.9071, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_16 { pt3dadd( -17.2662, 115.107, -50.9385, 0.74 ) }
    dend_16 { pt3dadd( -17.2731, 115.198, -50.9508, 0.74 ) }
    dend_16 { pt3dadd( -17.2825, 115.323, -50.9737, 0.74 ) }
    dend_16 { pt3dadd( -17.324, 115.948, -51.1037, 0.15 ) }
    dend_16 { pt3dadd( -17.3589, 116.392, -51.1996, 1.03 ) }
    dend_16 { pt3dadd( -17.4537, 117.303, -51.3749, 0.15 ) }
    dend_16 { pt3dadd( -17.5533, 118.106, -51.515, 1.99 ) }
    dend_16 { pt3dadd( -17.6118, 118.437, -51.5686, 1.99 ) }
    dend_16 { pt3dadd( -17.7981, 119.175, -51.6812, 0.22 ) }
    dend_16 { pt3dadd( -17.9505, 119.647, -51.75, 0.81 ) }
    dend_16 { pt3dadd( -18.207, 120.293, -51.835, 0.22 ) }
    dend_16 { pt3dadd( -18.2262, 120.331, -51.8396, 0.22 ) }
    dend_16 { pt3dadd( -18.5045, 120.831, -51.9118, 0.22 ) }
    dend_16 { pt3dadd( -18.7757, 121.26, -52.008, 0.22 ) }
    dend_16 { pt3dadd( -19.0236, 121.623, -52.1429, 0.22 ) }
    dend_16 { pt3dadd( -19.3318, 122.1, -52.3773, 0.22 ) }
    dend_16 { pt3dadd( -19.5084, 122.405, -52.5286, 1.03 ) }
    dend_16 { pt3dadd( -19.5943, 122.576, -52.608, 1.03 ) }
    dend_16 { pt3dadd( -19.93, 123.416, -52.9516, 0.22 ) }
    dend_16 { pt3dadd( -20.1963, 124.117, -53.2361, 0.59 ) }
    dend_16 { pt3dadd( -20.4372, 124.76, -53.4917, 0.22 ) }
    dend_16 { pt3dadd( -20.694, 125.508, -53.7832, 2.06 ) }
    dend_16 { pt3dadd( -20.7908, 125.827, -53.895, 1.69 ) }
    dend_16 { pt3dadd( -21.0023, 126.69, -54.1527, 0.22 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 24/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -28.3145, 77.448, -6.71096, 0.22 ) }
    dend_10 { pt3dadd( -28.6935, 78.6673, -7.13251, 0.22 ) }
    dend_10 { pt3dadd( -28.9028, 79.2743, -7.38091, 0.66 ) }
    dend_10 { pt3dadd( -29.0543, 79.7067, -7.56372, 0.81 ) }
    dend_10 { pt3dadd( -29.5317, 80.995, -8.10427, 0.22 ) }
    dend_10 { pt3dadd( -29.8505, 81.7896, -8.42888, 0.66 ) }
    dend_10 { pt3dadd( -30.1042, 82.32, -8.6359, 0.96 ) }
    dend_10 { pt3dadd( -30.7942, 83.5668, -9.12595, 0.22 ) }
    dend_10 { pt3dadd( -30.9637, 83.8482, -9.22897, 0.22 ) }
    dend_10 { pt3dadd( -31.2013, 84.2387, -9.35223, 0.52 ) }
    dend_10 { pt3dadd( -31.4533, 84.6987, -9.46385, 0.52 ) }
    dend_10 { pt3dadd( -32.0361, 85.922, -9.69898, 0.22 ) }
    dend_10 { pt3dadd( -32.3934, 86.7984, -9.85157, 0.22 ) }
    dend_10 { pt3dadd( -32.6857, 87.6165, -9.92899, 1.77 ) }
    dend_10 { pt3dadd( -32.8366, 88.1367, -9.93221, 2.06 ) }
    dend_10 { pt3dadd( -33.208, 90.024, -9.76087, 0.22 ) }
    dend_10 { pt3dadd( -33.2601, 90.4816, -9.68975, 0.59 ) }
    dend_10 { pt3dadd( -33.2848, 91.1341, -9.54271, 0.66 ) }
    dend_10 { pt3dadd( -33.3153, 92.9408, -9.04626, 0.22 ) }
    dend_10 { pt3dadd( -33.3144, 94.5018, -8.56113, 0.22 ) }
    dend_10 { pt3dadd( -33.2961, 96.0898, -8.02779, 1.47 ) }
    dend_10 { pt3dadd( -33.2868, 96.6683, -7.81376, 1.92 ) }
    dend_10 { pt3dadd( -33.2748, 98.4759, -7.18166, 0.22 ) }
    dend_10 { pt3dadd( -33.2771, 99.0513, -7.00108, 0.22 ) }
    dend_10 { pt3dadd( -33.2896, 99.7856, -6.81835, 0.74 ) }
    dend_10 { pt3dadd( -33.309, 100.046, -6.77193, 0.74 ) }
    dend_10 { pt3dadd( -33.4729, 101.199, -6.61263, 0.15 ) }
    dend_10 { pt3dadd( -33.653, 102.182, -6.46443, 0.15 ) }
    dend_10 { pt3dadd( -33.7919, 102.83, -6.36812, 0.96 ) }
    dend_10 { pt3dadd( -33.8651, 103.158, -6.31416, 1.33 ) }
    dend_10 { pt3dadd( -33.9344, 103.446, -6.26704, 1.33 ) }
    dend_10 { pt3dadd( -33.9529, 103.516, -6.25617, 1.33 ) }
    dend_10 { pt3dadd( -34.3757, 104.837, -6.07971, 0.22 ) }
    dend_10 { pt3dadd( -34.5485, 105.307, -6.00842, 0.81 ) }
    dend_10 { pt3dadd( -34.7759, 105.853, -5.92322, 0.81 ) }
    dend_10 { pt3dadd( -35.1337, 106.667, -5.79485, 0.22 ) }
    dend_10 { pt3dadd( -35.2645, 106.945, -5.75341, 0.44 ) }
    dend_10 { pt3dadd( -35.8663, 108.118, -5.59666, 0.22 ) }
    dend_10 { pt3dadd( -36.0691, 108.467, -5.55718, 0.59 ) }
    dend_10 { pt3dadd( -36.363, 108.964, -5.4735, 0.59 ) }
    dend_10 { pt3dadd( -36.788, 109.692, -5.32498, 0.15 ) }
    dend_10 { pt3dadd( -37.2536, 110.493, -5.13899, 0.15 ) }
    dend_10 { pt3dadd( -37.6385, 111.164, -4.97758, 1.11 ) }
    dend_10 { pt3dadd( -37.8786, 111.578, -4.87631, 1.62 ) }
    dend_10 { pt3dadd( -38.7133, 112.959, -4.54907, 0.15 ) }
    dend_10 { pt3dadd( -38.9611, 113.352, -4.45421, 0.59 ) }
    dend_10 { pt3dadd( -39.0739, 113.523, -4.41461, 0.59 ) }
    dend_10 { pt3dadd( -39.4596, 114.14, -4.28245, 0.22 ) }
    dend_10 { pt3dadd( -39.7752, 114.667, -4.18438, 0.22 ) }
    dend_10 { pt3dadd( -39.944, 114.961, -4.14436, 0.59 ) }
    dend_10 { pt3dadd( -40.1281, 115.3, -4.12335, 0.59 ) }
    dend_10 { pt3dadd( -40.4241, 115.933, -4.08517, 0.22 ) }
    dend_10 { pt3dadd( -40.7857, 116.892, -4.03256, 0.22 ) }
    dend_10 { pt3dadd( -40.7857, 116.892, -4.03256, 0.66 ) }
    dend_10 { pt3dadd( -40.8531, 117.389, -4.02449, 0.66 ) }
    dend_10 { pt3dadd( -40.926, 118.257, -4.02235, 0.22 ) }
    dend_10 { pt3dadd( -40.9558, 118.924, -4.02853, 1.4 ) }
    dend_10 { pt3dadd( -40.9631, 119.327, -4.03641, 1.77 ) }
    dend_10 { pt3dadd( -40.9742, 121.27, -4.09053, 0.22 ) }
    dend_10 { pt3dadd( -40.9742, 121.882, -4.10857, 0.96 ) }
    dend_10 { pt3dadd( -40.9724, 122.412, -4.125, 0.96 ) }
    dend_10 { pt3dadd( -40.9733, 123.341, -4.15531, 0.22 ) }
    dend_10 { pt3dadd( -40.9944, 124.554, -4.1916, 0.22 ) }
    dend_10 { pt3dadd( -41.0222, 125.412, -4.21416, 0.88 ) }
    dend_10 { pt3dadd( -41.0411, 125.878, -4.22382, 1.25 ) }
    dend_10 { pt3dadd( -41.0663, 126.689, -4.23569, 0.22 ) }
    dend_10 { pt3dadd( -41.0696, 126.826, -4.23456, 0.22 ) }
    dend_10 { pt3dadd( -41.0519, 127.331, -4.19642, 0.22 ) }
    dend_10 { pt3dadd( -41.0031, 127.747, -4.14073, 0.22 ) }
    dend_10 { pt3dadd( -40.8141, 128.727, -3.94278, 0.22 ) }
    dend_10 { pt3dadd( -40.717, 129.129, -3.84796, 0.81 ) }
    dend_10 { pt3dadd( -40.5484, 129.688, -3.65561, 0.81 ) }
    dend_10 { pt3dadd( -40.1669, 130.837, -3.18889, 0.15 ) }
    dend_10 { pt3dadd( -39.8663, 131.651, -2.81642, 0.15 ) }
    dend_10 { pt3dadd( -39.3905, 132.874, -2.19853, 1.4 ) }
    dend_10 { pt3dadd( -39.274, 133.177, -2.03511, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_10 { pt3dadd( -38.6773, 134.796, -1.15171, 0.22 ) }
    dend_10 { pt3dadd( -38.6577, 134.851, -1.12206, 0.22 ) }
    dend_10 { pt3dadd( -38.5895, 135.057, -1.00927, 0.22 ) }
    dend_10 { pt3dadd( -38.5727, 135.112, -0.980256, 0.22 ) }
    dend_10 { pt3dadd( -38.3928, 135.808, -0.656696, 0.22 ) }
    dend_10 { pt3dadd( -38.1715, 136.703, -0.304633, 0.88 ) }
    dend_10 { pt3dadd( -38.1517, 136.771, -0.282531, 0.88 ) }
    dend_10 { pt3dadd( -38.0541, 137.042, -0.191767, 1.03 ) }
    dend_10 { pt3dadd( -37.5693, 138.252, 0.21525, 0.22 ) }
    dend_10 { pt3dadd( -37.01, 139.527, 0.637618, 1.55 ) }
    dend_10 { pt3dadd( -36.7549, 140.059, 0.833457, 1.92 ) }
    dend_10 { pt3dadd( -36.0165, 141.558, 1.40573, 0.22 ) }
    dend_10 { pt3dadd( -35.8147, 141.966, 1.56635, 0.22 ) }
    dend_10 { pt3dadd( -35.6398, 142.308, 1.70645, 0.52 ) }
    dend_10 { pt3dadd( -35.476, 142.586, 1.83215, 0.52 ) }
    dend_10 { pt3dadd( -34.8749, 143.547, 2.27445, 0.22 ) }
    dend_10 { pt3dadd( -34.7084, 143.811, 2.41817, 0.59 ) }
    dend_10 { pt3dadd( -34.5479, 144.063, 2.57586, 0.59 ) }
    dend_10 { pt3dadd( -34.4943, 144.147, 2.62738, 0.59 ) }
    dend_10 { pt3dadd( -34.0092, 144.87, 3.04472, 0.22 ) }
    dend_10 { pt3dadd( -33.9786, 144.922, 3.0702, 0.22 ) }
    dend_10 { pt3dadd( -33.5413, 145.727, 3.40141, 0.22 ) }
    dend_10 { pt3dadd( -33.5203, 145.776, 3.41852, 0.22 ) }
    dend_10 { pt3dadd( -33.233, 146.66, 3.66259, 0.88 ) }
    dend_10 { pt3dadd( -33.1193, 147.129, 3.7616, 1.47 ) }
    dend_10 { pt3dadd( -32.9247, 148.387, 3.96985, 0.22 ) }
    dend_10 { pt3dadd( -32.9193, 148.441, 3.97772, 0.22 ) }
    dend_10 { pt3dadd( -32.8517, 149.573, 4.10528, 0.22 ) }
    dend_10 { pt3dadd( -32.7764, 150.556, 4.19299, 0.88 ) }
    dend_10 { pt3dadd( -32.741, 150.904, 4.21332, 1.33 ) }
    dend_10 { pt3dadd( -32.5958, 151.965, 4.24857, 0.15 ) }
    dend_10 { pt3dadd( -32.5295, 152.363, 4.24759, 0.15 ) }
    dend_10 { pt3dadd( -32.3405, 153.402, 4.24409, 0.15 ) }
    dend_10 { pt3dadd( -32.0121, 154.966, 4.23017, 1.77 ) }
    dend_10 { pt3dadd( -31.656, 156.47, 4.20253, 0.22 ) }
    dend_10 { pt3dadd( -31.464, 157.224, 4.17417, 0.22 ) }
    dend_10 { pt3dadd( -31.3282, 157.697, 4.13776, 1.25 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 37/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -28.3145, 77.448, -6.71096, 0.22 ) }
    dend_3 { pt3dadd( -29.3523, 78.8216, -8.07355, 0.22 ) }
    dend_3 { pt3dadd( -29.3751, 78.8668, -8.12657, 0.22 ) }
    dend_3 { pt3dadd( -29.5304, 79.3139, -8.64327, 0.22 ) }
    dend_3 { pt3dadd( -29.6945, 79.9048, -9.32237, 1.11 ) }
    dend_3 { pt3dadd( -29.8274, 80.4421, -9.96609, 1.92 ) }
    dend_3 { pt3dadd( -29.9256, 80.847, -10.4361, 2.14 ) }
    dend_3 { pt3dadd( -30.273, 82.8935, -12.5746, 0.22 ) }
    dend_3 { pt3dadd( -30.3299, 83.3215, -13.1302, 0.22 ) }
    dend_3 { pt3dadd( -30.3339, 83.37, -13.1975, 0.22 ) }
    dend_3 { pt3dadd( -30.3643, 84.1165, -14.2596, 0.22 ) }
    dend_3 { pt3dadd( -30.341, 84.5418, -14.8312, 0.88 ) }
    dend_3 { pt3dadd( -30.3091, 84.9609, -15.364, 0.88 ) }
    dend_3 { pt3dadd( -30.1275, 87.3418, -18.0834, 1.25 ) }
    dend_3 { pt3dadd( -30.0793, 88.2099, -19.0218, 1.62 ) }
    dend_3 { pt3dadd( -30.0752, 88.2678, -19.0802, 1.62 ) }
    dend_3 { pt3dadd( -29.9379, 89.5267, -20.2503, 0.29 ) }
    dend_3 { pt3dadd( -29.8936, 89.91, -20.5844, 0.66 ) }
    dend_3 { pt3dadd( -29.8879, 89.968, -20.6257, 0.66 ) }
    dend_3 { pt3dadd( -29.8745, 90.4647, -20.9777, 0.66 ) }
    dend_3 { pt3dadd( -29.8742, 90.5201, -21.0233, 0.66 ) }
    dend_3 { pt3dadd( -29.8642, 91.6213, -22.0341, 0.22 ) }
    dend_3 { pt3dadd( -29.8935, 92.7963, -23.2702, 2.14 ) }
    dend_3 { pt3dadd( -29.9097, 93.2089, -23.7194, 2.8 ) }
    dend_3 { pt3dadd( -30.0424, 95.8806, -26.6855, 0.37 ) }
    dend_3 { pt3dadd( -30.0968, 96.8945, -27.8276, 0.37 ) }
    dend_3 { pt3dadd( -30.1882, 98.4301, -29.5419, 0.96 ) }
    dend_3 { pt3dadd( -30.2549, 99.9145, -31.16, 0.22 ) }
    dend_3 { pt3dadd( -30.2688, 100.524, -31.8093, 1.11 ) }
    dend_3 { pt3dadd( -30.2684, 100.575, -31.86, 1.11 ) }
    dend_3 { pt3dadd( -30.2552, 100.867, -32.0881, 1.11 ) }
    dend_3 { pt3dadd( -30.1851, 101.905, -32.8051, 0.15 ) }
    dend_3 { pt3dadd( -30.1273, 102.888, -33.3403, 0.15 ) }
    dend_3 { pt3dadd( -30.0672, 103.714, -33.7449, 0.15 ) }
    dend_3 { pt3dadd( -30.0192, 104.886, -34.3365, 1.99 ) }
    dend_3 { pt3dadd( -30.0337, 105.622, -34.7022, 2.21 ) }
    dend_3 { pt3dadd( -30.137, 106.782, -35.2341, 0.74 ) }
    dend_3 { pt3dadd( -30.3337, 107.937, -35.6939, 0.29 ) }
    dend_3 { pt3dadd( -30.3494, 108.003, -35.7154, 0.29 ) }
    dend_3 { pt3dadd( -30.5005, 108.558, -35.8788, 0.52 ) }
    dend_3 { pt3dadd( -30.6337, 109.038, -36.0184, 0.52 ) }
    dend_3 { pt3dadd( -30.8103, 109.729, -36.2403, 0.29 ) }
    dend_3 { pt3dadd( -30.9064, 110.164, -36.4052, 0.74 ) }
    dend_3 { pt3dadd( -31.0091, 110.868, -36.8058, 0.96 ) }
    dend_3 { pt3dadd( -31.1255, 112.077, -37.6144, 0.22 ) }
    dend_3 { pt3dadd( -31.1838, 113.09, -38.3639, 1.55 ) }
    dend_3 { pt3dadd( -31.2117, 113.624, -38.7769, 1.99 ) }
    dend_3 { pt3dadd( -31.3085, 114.438, -39.5423, 1.99 ) }
    dend_3 { pt3dadd( -31.6346, 115.957, -41.1458, 0.37 ) }
    dend_3 { pt3dadd( -31.7525, 116.162, -41.5724, 0.37 ) }
    dend_3 { pt3dadd( -31.9114, 116.33, -42.0565, 0.37 ) }
    dend_3 { pt3dadd( -32.1871, 116.531, -42.7784, 0.37 ) }
    dend_3 { pt3dadd( -33.1883, 117.066, -45.0847, 1.92 ) }
    dend_3 { pt3dadd( -33.4966, 117.19, -45.711, 2.43 ) }
    dend_3 { pt3dadd( -37.4358, 118.428, -52.9086, 0.37 ) }
    dend_3 { pt3dadd( -37.7764, 118.522, -53.5112, 0.44 ) }
    dend_3 { pt3dadd( -38.2131, 118.631, -54.2511, 0.29 ) }
    dend_3 { pt3dadd( -38.5862, 118.72, -54.8479, 0.29 ) }
    dend_3 { pt3dadd( -38.9277, 118.817, -55.321, 0.66 ) }
    dend_3 { pt3dadd( -39.1885, 118.899, -55.6583, 0.88 ) }
    dend_3 { pt3dadd( -40.065, 119.159, -56.7378, 0.66 ) }
    dend_3 { pt3dadd( -40.53, 119.265, -57.4513, 0.22 ) }
    dend_3 { pt3dadd( -40.9555, 119.316, -58.2141, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_3 { pt3dadd( -41.4924, 119.374, -59.235, 2.36 ) }
    dend_3 { pt3dadd( -42.8659, 119.484, -61.9793, 2.36 ) }
    dend_3 { pt3dadd( -44.7971, 119.573, -65.9964, 0.88 ) }
    dend_3 { pt3dadd( -45.3869, 119.577, -67.2762, 0.52 ) }
    dend_3 { pt3dadd( -46.5365, 119.524, -69.9866, 1.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_39 (entry count 5/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 10.0883, -46.3738, 5.79049, 0.37 ) }
    dend_47 { pt3dadd( 11.993, -46.9732, 5.55501, 0.37 ) }
    dend_47 { pt3dadd( 12.9809, -47.3686, 5.44681, 0.29 ) }
    dend_47 { pt3dadd( 14.1498, -47.9252, 5.38366, 0.66 ) }
    dend_47 { pt3dadd( 15.2187, -48.4731, 5.36115, 1.33 ) }
    dend_47 { pt3dadd( 15.897, -48.8325, 5.36037, 1.62 ) }
    dend_47 { pt3dadd( 16.6494, -49.2373, 5.36823, 1.62 ) }
    dend_47 { pt3dadd( 17.7346, -49.9456, 5.40375, 0.59 ) }
    dend_47 { pt3dadd( 18.7677, -50.7055, 5.44222, 0.37 ) }
    dend_47 { pt3dadd( 19.3117, -51.1466, 5.42927, 0.74 ) }
    dend_47 { pt3dadd( 19.7036, -51.4946, 5.36678, 0.74 ) }
    dend_47 { pt3dadd( 19.7563, -51.5451, 5.34951, 0.74 ) }
    dend_47 { pt3dadd( 20.3189, -52.1509, 5.05224, 0.29 ) }
    dend_47 { pt3dadd( 21.0927, -53.0986, 4.5812, 0.29 ) }
    dend_47 { pt3dadd( 21.779, -54.0315, 4.24502, 1.92 ) }
    dend_47 { pt3dadd( 22.5228, -55.0952, 4.00417, 3.09 ) }
    dend_47 { pt3dadd( 22.7393, -55.4048, 3.97874, 3.61 ) }
    dend_47 { pt3dadd( 23.4003, -56.3231, 4.03921, 3.32 ) }
    dend_47 { pt3dadd( 24.5518, -57.8865, 4.35657, 0.88 ) }
    dend_47 { pt3dadd( 25.6564, -59.2947, 4.92463, 0.44 ) }
    dend_47 { pt3dadd( 26.243, -59.9905, 5.3045, 0.44 ) }
    dend_47 { pt3dadd( 27.0098, -60.8443, 5.86617, 1.18 ) }
    dend_47 { pt3dadd( 27.7066, -61.5329, 6.37736, 1.69 ) }
    dend_47 { pt3dadd( 28.1788, -61.9102, 6.71773, 1.69 ) }
    dend_47 { pt3dadd( 29.9209, -62.9678, 7.8432, 0.44 ) }
    dend_47 { pt3dadd( 30.6171, -63.3187, 8.23211, 0.66 ) }
    dend_47 { pt3dadd( 30.6782, -63.3476, 8.26713, 0.66 ) }
    dend_47 { pt3dadd( 31.3175, -63.6468, 8.62049, 0.66 ) }
    dend_47 { pt3dadd( 32.2249, -64.1585, 9.21308, 0.29 ) }
    dend_47 { pt3dadd( 32.5195, -64.4378, 9.49873, 0.29 ) }
    dend_47 { pt3dadd( 32.6083, -65.1373, 10.0166, 0.29 ) }
    dend_47 { pt3dadd( 32.5589, -65.991, 10.6288, 0.81 ) }
    dend_47 { pt3dadd( 32.5283, -66.4118, 10.9169, 1.03 ) }
    dend_47 { pt3dadd( 32.512, -67.6596, 11.8246, 0.37 ) }
    dend_47 { pt3dadd( 32.5617, -68.2489, 12.2459, 0.37 ) }
    dend_47 { pt3dadd( 32.5903, -68.3679, 12.3459, 0.37 ) }
    dend_47 { pt3dadd( 32.9386, -69.1914, 13.1168, 0.52 ) }
    dend_47 { pt3dadd( 33.2612, -69.7433, 13.6609, 0.88 ) }
    dend_47 { pt3dadd( 34.0479, -70.8336, 14.8495, 0.37 ) }
    dend_47 { pt3dadd( 34.6564, -71.5707, 15.6274, 0.29 ) }
    dend_47 { pt3dadd( 35.6346, -72.7043, 16.7577, 1.77 ) }
    dend_47 { pt3dadd( 36.0824, -73.2565, 17.3095, 2.58 ) }
    dend_47 { pt3dadd( 36.1397, -73.3356, 17.3913, 2.58 ) }
    dend_47 { pt3dadd( 36.7952, -74.437, 18.6142, 2.58 ) }
    dend_47 { pt3dadd( 37.3497, -75.5342, 19.8397, 0.37 ) }
    dend_47 { pt3dadd( 37.8676, -76.6336, 21.1, 0.37 ) }
    dend_47 { pt3dadd( 38.3648, -77.7047, 22.2774, 0.66 ) }
    dend_47 { pt3dadd( 38.7717, -78.5583, 23.2133, 0.74 ) }
    dend_47 { pt3dadd( 39.3408, -79.6151, 24.315, 0.29 ) }
    dend_47 { pt3dadd( 39.6495, -80.1108, 24.8231, 0.29 ) }
    dend_47 { pt3dadd( 39.8679, -80.3853, 25.1073, 1.11 ) }
    dend_47 { pt3dadd( 40.1627, -80.6872, 25.3838, 1.33 ) }
    dend_47 { pt3dadd( 40.8058, -81.2432, 25.8191, 0.88 ) }
    dend_47 { pt3dadd( 41.8336, -82.0641, 26.4419, 0.29 ) }
    dend_47 { pt3dadd( 42.9232, -82.8692, 27.053, 0.29 ) }
    dend_47 { pt3dadd( 43.9599, -83.6073, 27.6526, 2.65 ) }
    dend_47 { pt3dadd( 44.0131, -83.6462, 27.6878, 2.65 ) }
    dend_47 { pt3dadd( 44.6337, -84.1197, 28.1768, 3.09 ) }
    dend_47 { pt3dadd( 45.614, -84.9789, 29.3063, 0.37 ) }
    dend_47 { pt3dadd( 46.2999, -85.6648, 30.2735, 0.15 ) }
    dend_47 { pt3dadd( 46.7088, -86.1153, 30.9111, 0.15 ) }
    dend_47 { pt3dadd( 47.4193, -86.9671, 32.1387, 2.14 ) }
    dend_47 { pt3dadd( 47.9808, -87.7391, 33.2396, 2.58 ) }
    dend_47 { pt3dadd( 49.3765, -89.9628, 36.2618, 0.44 ) }
    dend_47 { pt3dadd( 49.6271, -90.4637, 36.9441, 0.88 ) }
    dend_47 { pt3dadd( 49.7019, -90.6466, 37.196, 0.88 ) }
    dend_47 { pt3dadd( 49.7187, -90.6963, 37.263, 0.88 ) }
    dend_47 { pt3dadd( 50.0611, -91.8439, 38.6931, 0.22 ) }
    dend_47 { pt3dadd( 50.2681, -92.5843, 39.5477, 0.22 ) }
    dend_47 { pt3dadd( 50.5248, -93.5421, 40.5769, 1.55 ) }
    dend_47 { pt3dadd( 50.8656, -94.7888, 41.9279, 2.14 ) }
    dend_47 { pt3dadd( 51.2466, -96.261, 43.4546, 0.15 ) }
    dend_47 { pt3dadd( 51.3597, -96.7531, 43.9356, 0.81 ) }
    dend_47 { pt3dadd( 51.5903, -97.7848, 44.882, 0.15 ) }
    dend_47 { pt3dadd( 51.7324, -98.4762, 45.492, 1.55 ) }
    dend_47 { pt3dadd( 51.7984, -98.7959, 45.7537, 1.77 ) }
    dend_47 { pt3dadd( 52.0938, -100.357, 46.966, 0.15 ) }
    dend_47 { pt3dadd( 52.3688, -102.03, 48.3833, 0.15 ) }
    dend_47 { pt3dadd( 52.4076, -102.341, 48.7053, 0.52 ) }
    dend_47 { pt3dadd( 52.4829, -103.371, 49.9065, 0.22 ) }
    dend_47 { pt3dadd( 52.5111, -104.27, 51.0775, 0.74 ) }
    dend_47 { pt3dadd( 52.5132, -104.476, 51.3699, 0.74 ) }
    dend_47 { pt3dadd( 52.492, -105.543, 53.1157, 0.59 ) }
    dend_47 { pt3dadd( 52.3842, -106.742, 55.3726, 0.22 ) }
    dend_47 { pt3dadd( 52.3536, -106.916, 55.7319, 0.52 ) }
    dend_47 { pt3dadd( 52.2467, -107.267, 56.573, 0.96 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 91/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 10.0883, -46.3738, 5.79049, 0.88 ) }
    dend_40 { pt3dadd( 9.49863, -47.515, 5.93284, 0.88 ) }
    dend_40 { pt3dadd( 9.13154, -48.2298, 6.02486, 0.37 ) }
    dend_40 { pt3dadd( 8.7331, -49.0128, 6.14364, 0.37 ) }
    dend_40 { pt3dadd( 8.13685, -50.1802, 6.30374, 0.37 ) }
    dend_40 { pt3dadd( 7.82711, -50.8232, 6.38187, 1.47 ) }
    dend_40 { pt3dadd( 7.4964, -51.5945, 6.39845, 2.14 ) }
    dend_40 { pt3dadd( 7.36807, -51.9213, 6.38706, 2.14 ) }
    dend_40 { pt3dadd( 7.10764, -52.8304, 6.27684, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_40 { pt3dadd( 7.04204, -53.6011, 5.99105, 0.44 ) }
    dend_40 { pt3dadd( 7.0781, -54.3671, 5.57877, 0.37 ) }
    dend_40 { pt3dadd( 7.23702, -55.8396, 4.63759, 1.77 ) }
    dend_40 { pt3dadd( 7.27824, -56.2355, 4.3614, 2.14 ) }
    dend_40 { pt3dadd( 7.3204, -56.9324, 3.86426, 2.21 ) }
    dend_40 { pt3dadd( 7.34346, -59.1422, 2.29983, 0.29 ) }
    dend_40 { pt3dadd( 7.31113, -59.8016, 1.86212, 0.29 ) }
    dend_40 { pt3dadd( 7.16627, -60.7759, 1.2655, 0.29 ) }
    dend_40 { pt3dadd( 6.93878, -61.6881, 0.792433, 0.29 ) }
    dend_40 { pt3dadd( 6.62301, -62.6703, 0.308752, 0.29 ) }
    dend_40 { pt3dadd( 6.24119, -63.554, -0.0618889, 0.88 ) }
    dend_40 { pt3dadd( 6.00687, -63.9647, -0.172721, 1.62 ) }
    dend_40 { pt3dadd( 5.43159, -64.8989, -0.421717, 1.99 ) }
    dend_40 { pt3dadd( 5.26614, -65.178, -0.479695, 1.99 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 14/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -17.6634, -120.553, 15.5331, 0.29 ) }
    dend_36 { pt3dadd( -16.1845, -122.008, 14.939, 0.29 ) }
    dend_36 { pt3dadd( -15.8351, -122.362, 14.8115, 0.44 ) }
    dend_36 { pt3dadd( -14.6667, -123.605, 14.4705, 0.22 ) }
    dend_36 { pt3dadd( -13.782, -124.631, 14.3203, 0.22 ) }
    dend_36 { pt3dadd( -13.7359, -124.687, 14.3164, 0.22 ) }
    dend_36 { pt3dadd( -13.5188, -124.961, 14.3098, 0.66 ) }
    dend_36 { pt3dadd( -13.2349, -125.368, 14.3605, 0.66 ) }
    dend_36 { pt3dadd( -12.553, -126.323, 14.5753, 0.22 ) }
    dend_36 { pt3dadd( -11.8601, -127.284, 14.886, 1.4 ) }
    dend_36 { pt3dadd( -11.5719, -127.683, 15.0138, 1.84 ) }
    dend_36 { pt3dadd( -11.5365, -127.732, 15.029, 1.84 ) }
    dend_36 { pt3dadd( -10.7106, -128.909, 15.3756, 0.29 ) }
    dend_36 { pt3dadd( -9.98837, -130.065, 15.6981, 0.29 ) }
    dend_36 { pt3dadd( -9.52275, -130.952, 15.9114, 0.29 ) }
    dend_36 { pt3dadd( -9.11192, -131.946, 16.1019, 1.69 ) }
    dend_36 { pt3dadd( -8.95362, -132.503, 16.2063, 2.28 ) }
    dend_36 { pt3dadd( -8.87571, -132.958, 16.2816, 2.5 ) }
    dend_36 { pt3dadd( -8.83895, -134.57, 16.5814, 0.29 ) }
    dend_36 { pt3dadd( -8.92193, -135.702, 16.8032, 0.29 ) }
    dend_36 { pt3dadd( -9.04755, -136.831, 17.0338, 0.29 ) }
    dend_36 { pt3dadd( -9.20441, -138.115, 17.3154, 2.06 ) }
    dend_36 { pt3dadd( -9.3123, -139.048, 17.5329, 2.65 ) }
    dend_36 { pt3dadd( -9.49014, -141.037, 18.0311, 0.29 ) }
    dend_36 { pt3dadd( -9.54212, -141.999, 18.2929, 0.22 ) }
    dend_36 { pt3dadd( -9.56194, -142.755, 18.5182, 0.22 ) }
    dend_36 { pt3dadd( -9.5567, -143.362, 18.6996, 0.88 ) }
    dend_36 { pt3dadd( -9.53543, -143.797, 18.8254, 1.18 ) }
    dend_36 { pt3dadd( -9.50253, -144.153, 18.9315, 1.18 ) }
    dend_36 { pt3dadd( -9.33524, -145.189, 19.2306, 0.22 ) }
    dend_36 { pt3dadd( -9.24009, -145.679, 19.3928, 0.22 ) }
    dend_36 { pt3dadd( -9.13024, -146.256, 19.6152, 0.22 ) }
    dend_36 { pt3dadd( -9.02306, -146.76, 19.8225, 1.25 ) }
    dend_36 { pt3dadd( -8.88749, -147.233, 20.0576, 1.25 ) }
    dend_36 { pt3dadd( -8.43719, -148.533, 20.7502, 0.22 ) }
    dend_36 { pt3dadd( -8.10147, -149.208, 21.1399, 0.22 ) }
    dend_36 { pt3dadd( -7.49618, -150.123, 21.684, 1.11 ) }
    dend_36 { pt3dadd( -7.17899, -150.517, 21.9215, 1.55 ) }
    dend_36 { pt3dadd( -6.09096, -151.685, 22.6185, 0.22 ) }
    dend_36 { pt3dadd( -5.31046, -152.363, 23.0132, 0.22 ) }
    dend_36 { pt3dadd( -4.02904, -153.214, 23.4767, 0.22 ) }
    dend_36 { pt3dadd( -3.14192, -153.706, 23.73, 1.69 ) }
    dend_36 { pt3dadd( -2.78591, -153.86, 23.7949, 1.99 ) }
    dend_36 { pt3dadd( -2.71579, -153.885, 23.8036, 1.99 ) }
    dend_36 { pt3dadd( -1.17306, -154.278, 23.7729, 0.29 ) }
    dend_36 { pt3dadd( 0.156085, -154.546, 23.6665, 0.29 ) }
    dend_36 { pt3dadd( 0.230191, -154.559, 23.6558, 0.29 ) }
    dend_36 { pt3dadd( 1.57571, -154.795, 23.4429, 1.4 ) }
    dend_36 { pt3dadd( 2.28221, -154.909, 23.3135, 1.62 ) }
    dend_36 { pt3dadd( 4.69223, -155.257, 22.7936, 0.22 ) }
    dend_36 { pt3dadd( 4.76428, -155.265, 22.7728, 0.22 ) }
    dend_36 { pt3dadd( 5.79733, -155.335, 22.402, 1.18 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 66/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -17.6634, -120.553, 15.5331, 0.29 ) }
    dend_35 { pt3dadd( -17.5766, -122.414, 15.7756, 0.29 ) }
    dend_35 { pt3dadd( -17.515, -123.631, 15.9303, 0.29 ) }
    dend_35 { pt3dadd( -17.4873, -124.177, 15.9942, 0.74 ) }
    dend_35 { pt3dadd( -17.4497, -125.163, 16.0912, 0.81 ) }
    dend_35 { pt3dadd( -17.4289, -125.784, 16.1445, 1.11 ) }
    dend_35 { pt3dadd( -17.4011, -126.674, 16.2082, 0.44 ) }
    dend_35 { pt3dadd( -17.3827, -127.432, 16.2322, 0.29 ) }
    dend_35 { pt3dadd( -17.3599, -128.356, 16.2525, 0.29 ) }
    dend_35 { pt3dadd( -17.3159, -129.664, 16.2686, 2.21 ) }
    dend_35 { pt3dadd( -17.2869, -130.267, 16.2577, 2.73 ) }
    dend_35 { pt3dadd( -17.1644, -131.935, 16.1778, 0.29 ) }
    dend_35 { pt3dadd( -17.1016, -132.576, 16.1245, 0.29 ) }
    dend_35 { pt3dadd( -17.0066, -133.285, 16.0531, 0.81 ) }
    dend_35 { pt3dadd( -16.9813, -133.428, 16.036, 0.96 ) }
    dend_35 { pt3dadd( -16.7599, -134.378, 15.924, 0.22 ) }
    dend_35 { pt3dadd( -16.5425, -135.205, 15.837, 0.22 ) }
    dend_35 { pt3dadd( -16.3908, -135.72, 15.7942, 1.33 ) }
    dend_35 { pt3dadd( -16.2722, -136.167, 15.7879, 1.62 ) }
    dend_35 { pt3dadd( -16.2572, -136.238, 15.7909, 1.62 ) }
    dend_35 { pt3dadd( -16.0881, -137.255, 15.8949, 0.29 ) }
    dend_35 { pt3dadd( -15.9749, -137.989, 16.0098, 0.22 ) }
    dend_35 { pt3dadd( -15.8646, -138.667, 16.1365, 0.22 ) }
    dend_35 { pt3dadd( -15.7357, -139.408, 16.2878, 1.11 ) }
    dend_35 { pt3dadd( -15.633, -139.991, 16.4134, 1.47 ) }
    dend_35 { pt3dadd( -15.4709, -141.033, 16.7053, 0.22 ) }
    dend_35 { pt3dadd( -15.3892, -141.747, 16.9633, 0.22 ) }
    dend_35 { pt3dadd( -15.3239, -142.475, 17.2692, 0.74 ) }
    dend_35 { pt3dadd( -15.323, -142.677, 17.363, 0.74 ) }
    dend_35 { pt3dadd( -15.3273, -142.733, 17.3914, 0.74 ) }
    dend_35 { pt3dadd( -15.629, -144.431, 18.3431, 0.22 ) }
    dend_35 { pt3dadd( -15.8687, -145.385, 18.9027, 1.99 ) }
    dend_35 { pt3dadd( -15.9663, -145.71, 19.0961, 1.99 ) }
    dend_35 { pt3dadd( -16.439, -147.097, 19.9856, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_35 { pt3dadd( -16.9389, -148.484, 20.9159, 0.22 ) }
    dend_35 { pt3dadd( -17.318, -149.472, 21.5906, 1.84 ) }
    dend_35 { pt3dadd( -17.3925, -149.655, 21.7161, 1.99 ) }
    dend_35 { pt3dadd( -17.4437, -149.778, 21.8038, 1.99 ) }
    dend_35 { pt3dadd( -18.1941, -151.555, 23.1368, 0.22 ) }
    dend_35 { pt3dadd( -18.3993, -152.059, 23.5402, 0.96 ) }
    dend_35 { pt3dadd( -18.7354, -152.853, 24.2014, 0.22 ) }
    dend_35 { pt3dadd( -18.8712, -153.194, 24.4932, 0.74 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 8/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -30.4964, -68.3521, -109.643, 0.29 ) }
    dend_27 { pt3dadd( -29.5067, -69.4148, -109.898, 0.29 ) }
    dend_27 { pt3dadd( -28.4413, -70.5962, -110.207, 0.22 ) }
    dend_27 { pt3dadd( -28.0849, -71.0316, -110.319, 0.52 ) }
    dend_27 { pt3dadd( -27.8097, -71.4272, -110.424, 0.52 ) }
    dend_27 { pt3dadd( -27.2403, -72.3618, -110.668, 0.22 ) }
    dend_27 { pt3dadd( -26.7836, -73.1591, -110.874, 0.22 ) }
    dend_27 { pt3dadd( -26.4655, -73.8548, -111.059, 0.81 ) }
    dend_27 { pt3dadd( -26.188, -74.5204, -111.236, 1.11 ) }
    dend_27 { pt3dadd( -25.7241, -75.7235, -111.52, 0.22 ) }
    dend_27 { pt3dadd( -25.4653, -76.4651, -111.675, 0.22 ) }
    dend_27 { pt3dadd( -25.2054, -77.315, -111.828, 0.22 ) }
    dend_27 { pt3dadd( -25.0386, -77.9484, -111.948, 1.11 ) }
    dend_27 { pt3dadd( -24.6951, -79.2468, -112.206, 0.22 ) }
    dend_27 { pt3dadd( -24.2427, -80.8095, -112.53, 0.22 ) }
    dend_27 { pt3dadd( -23.9534, -81.7053, -112.72, 1.33 ) }
    dend_27 { pt3dadd( -23.8328, -82.0269, -112.806, 1.47 ) }
    dend_27 { pt3dadd( -23.1167, -83.7674, -113.346, 0.22 ) }
    dend_27 { pt3dadd( -22.7416, -84.4998, -113.631, 1.11 ) }
    dend_27 { pt3dadd( -22.4311, -84.9922, -113.873, 1.47 ) }
    dend_27 { pt3dadd( -22.097, -85.4357, -114.132, 1.47 ) }
    dend_27 { pt3dadd( -20.9775, -86.6839, -114.961, 0.15 ) }
    dend_27 { pt3dadd( -20.9321, -86.7259, -114.993, 0.15 ) }
    dend_27 { pt3dadd( -19.9896, -87.3311, -115.608, 0.88 ) }
    dend_27 { pt3dadd( -19.9374, -87.3618, -115.646, 0.88 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 33/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -30.4964, -68.3521, -109.643, 1.69 ) }
    dend_26 { pt3dadd( -31.4141, -69.4482, -109.836, 1.69 ) }
    dend_26 { pt3dadd( -32.4528, -70.3549, -110.112, 0.22 ) }
    dend_26 { pt3dadd( -32.5057, -70.3953, -110.127, 0.22 ) }
    dend_26 { pt3dadd( -33.5135, -71.1267, -110.398, 0.22 ) }
    dend_26 { pt3dadd( -34.3523, -71.7149, -110.675, 0.88 ) }
    dend_26 { pt3dadd( -35.1189, -72.2415, -110.952, 1.11 ) }
    dend_26 { pt3dadd( -36.448, -72.9873, -111.454, 0.22 ) }
    dend_26 { pt3dadd( -36.994, -73.2481, -111.656, 0.52 ) }
    dend_26 { pt3dadd( -37.1754, -73.3191, -111.724, 0.52 ) }
    dend_26 { pt3dadd( -38.5279, -73.6659, -112.3, 0.37 ) }
    dend_26 { pt3dadd( -38.5887, -73.6797, -112.327, 0.29 ) }
    dend_26 { pt3dadd( -39.2076, -73.8308, -112.566, 0.22 ) }
    dend_26 { pt3dadd( -39.5268, -73.9199, -112.681, 0.37 ) }
    dend_26 { pt3dadd( -40.2167, -74.1195, -112.972, 0.37 ) }
    dend_26 { pt3dadd( -41.3234, -74.5714, -113.723, 0.29 ) }
    dend_26 { pt3dadd( -42.1124, -75.0187, -114.4, 0.29 ) }
    dend_26 { pt3dadd( -42.732, -75.4504, -115.034, 0.22 ) }
    dend_26 { pt3dadd( -43.5221, -76.1779, -116.028, 1.11 ) }
    dend_26 { pt3dadd( -44.0265, -76.7435, -116.765, 1.33 ) }
    dend_26 { pt3dadd( -45.4441, -78.4726, -119.013, 0.29 ) }
    dend_26 { pt3dadd( -45.8082, -78.9814, -119.675, 0.59 ) }
    dend_26 { pt3dadd( -45.8282, -79.0126, -119.719, 0.59 ) }
    dend_26 { pt3dadd( -46.302, -79.859, -120.961, 0.29 ) }
    dend_26 { pt3dadd( -46.3196, -79.8972, -121.014, 0.29 ) }
    dend_26 { pt3dadd( -46.8526, -81.0273, -122.359, 0.15 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 59/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -21.0023, 126.69, -54.1527, 0.22 ) }
    dend_18 { pt3dadd( -21.1424, 128.328, -56.5188, 0.22 ) }
    dend_18 { pt3dadd( -21.1615, 128.877, -57.2946, 0.37 ) }
    dend_18 { pt3dadd( -21.1546, 129.183, -57.6949, 0.15 ) }
    dend_18 { pt3dadd( -21.1388, 129.409, -58.0073, 0.44 ) }
    dend_18 { pt3dadd( -21.1041, 129.922, -58.7229, 0.22 ) }
    dend_18 { pt3dadd( -21.0824, 130.593, -59.6593, 1.25 ) }
    dend_18 { pt3dadd( -21.0331, 131.451, -60.7166, 0.22 ) }
    dend_18 { pt3dadd( -21.0394, 131.852, -61.233, 1.03 ) }
    dend_18 { pt3dadd( -21.116, 132.858, -62.5587, 0.22 ) }
    dend_18 { pt3dadd( -21.1403, 133.053, -62.8166, 0.22 ) }
    dend_18 { pt3dadd( -21.235, 133.624, -63.5338, 1.11 ) }
    dend_18 { pt3dadd( -21.2746, 133.814, -63.7517, 1.4 ) }
    dend_18 { pt3dadd( -21.4833, 134.721, -64.6382, 0.22 ) }
    dend_18 { pt3dadd( -21.5326, 134.931, -64.822, 0.59 ) }
    dend_18 { pt3dadd( -21.7231, 135.956, -65.5198, 0.22 ) }
    dend_18 { pt3dadd( -21.774, 136.332, -65.7454, 0.88 ) }
    dend_18 { pt3dadd( -21.7968, 136.639, -65.8868, 1.03 ) }
    dend_18 { pt3dadd( -21.8425, 137.447, -66.1763, 0.22 ) }
    dend_18 { pt3dadd( -21.852, 137.862, -66.2776, 0.59 ) }
    dend_18 { pt3dadd( -21.8685, 138.649, -66.4225, 0.22 ) }
    dend_18 { pt3dadd( -21.8649, 139.198, -66.5022, 0.22 ) }
    dend_18 { pt3dadd( -21.8327, 140.138, -66.6561, 1.47 ) }
    dend_18 { pt3dadd( -21.8149, 140.407, -66.7025, 1.47 ) }
    dend_18 { pt3dadd( -21.7408, 141.13, -66.8694, 0.22 ) }
    dend_18 { pt3dadd( -21.6966, 141.486, -66.9807, 0.52 ) }
    dend_18 { pt3dadd( -21.5689, 142.443, -67.3361, 0.22 ) }
    dend_18 { pt3dadd( -21.5297, 142.72, -67.451, 1.03 ) }
    dend_18 { pt3dadd( -21.5062, 142.898, -67.536, 1.03 ) }
    dend_18 { pt3dadd( -21.2868, 144.813, -68.5186, 0.22 ) }
    dend_18 { pt3dadd( -21.2254, 145.396, -68.8251, 0.96 ) }
    dend_18 { pt3dadd( -21.1985, 145.698, -68.9865, 0.96 ) }
    dend_18 { pt3dadd( -21.1964, 145.739, -69.0081, 0.96 ) }
    dend_18 { pt3dadd( -21.1552, 146.773, -69.5843, 0.22 ) }
    dend_18 { pt3dadd( -21.1396, 147.348, -69.9248, 1.11 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 94/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -21.0023, 126.69, -54.1527, 0.22 ) }
    dend_17 { pt3dadd( -22.0097, 126.875, -55.4088, 0.22 ) }
    dend_17 { pt3dadd( -23.6577, 127.076, -57.4237, 0.15 ) }
    dend_17 { pt3dadd( -24.885, 127.188, -58.8857, 1.4 ) }
    dend_17 { pt3dadd( -25.8891, 127.279, -60.0818, 1.4 ) }
    dend_17 { pt3dadd( -27.1607, 127.395, -61.5966, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_17 { pt3dadd( -27.6602, 127.441, -62.1915, 0.22 ) }
    dend_17 { pt3dadd( -28.2558, 127.448, -62.9731, 0.88 ) }
    dend_17 { pt3dadd( -28.4415, 127.432, -63.1876, 0.88 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 3/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -46.5365, 119.524, -69.9866, 0.66 ) }
    dend_5 { pt3dadd( -49.9993, 119.035, -75.9706, 0.66 ) }
    dend_5 { pt3dadd( -50.4794, 119.051, -76.7484, 0.29 ) }
    dend_5 { pt3dadd( -50.752, 119.118, -77.163, 0.22 ) }
    dend_5 { pt3dadd( -51.1997, 119.293, -77.8028, 0.22 ) }
    dend_5 { pt3dadd( -51.5954, 119.482, -78.3429, 1.03 ) }
    dend_5 { pt3dadd( -51.9424, 119.665, -78.7811, 1.47 ) }
    dend_5 { pt3dadd( -52.6817, 120.494, -79.1987, 0.88 ) }
    dend_5 { pt3dadd( -53.3947, 121.232, -79.6003, 0.22 ) }
    dend_5 { pt3dadd( -53.6235, 121.41, -79.7302, 0.29 ) }
    dend_5 { pt3dadd( -53.6946, 121.446, -79.7639, 0.29 ) }
    dend_5 { pt3dadd( -54.2533, 121.642, -79.9967, 0.15 ) }
    dend_5 { pt3dadd( -54.9164, 121.79, -80.2639, 0.96 ) }
    dend_5 { pt3dadd( -55.5456, 121.882, -80.488, 1.4 ) }
    dend_5 { pt3dadd( -56.8217, 122.021, -81.0663, 0.22 ) }
    dend_5 { pt3dadd( -57.7142, 122.136, -81.5734, 0.22 ) }
    dend_5 { pt3dadd( -58.4585, 122.245, -82.1616, 0.74 ) }
    dend_5 { pt3dadd( -59.4645, 122.421, -83.1027, 0.22 ) }
    dend_5 { pt3dadd( -59.8166, 122.49, -83.4732, 0.96 ) }
    dend_5 { pt3dadd( -61.0342, 122.762, -84.9213, 1.33 ) }
    dend_5 { pt3dadd( -61.5576, 122.916, -85.5868, 1.84 ) }
    dend_5 { pt3dadd( -63.4048, 123.519, -88.1071, 0.88 ) }
    dend_5 { pt3dadd( -63.6742, 123.606, -88.4736, 1.03 ) }
    dend_5 { pt3dadd( -63.7164, 123.619, -88.5274, 1.03 ) }
    dend_5 { pt3dadd( -65.1673, 124.056, -90.265, 0.22 ) }
    dend_5 { pt3dadd( -65.9875, 124.293, -91.1179, 1.33 ) }
    dend_5 { pt3dadd( -68.0232, 124.835, -92.9444, 0.22 ) }
    dend_5 { pt3dadd( -68.8869, 125.058, -93.5726, 1.33 ) }
    dend_5 { pt3dadd( -69.8541, 125.268, -94.1831, 0.22 ) }
    dend_5 { pt3dadd( -69.9001, 125.276, -94.2069, 0.22 ) }
    dend_5 { pt3dadd( -70.838, 125.351, -94.5168, 0.22 ) }
    dend_5 { pt3dadd( -71.7222, 125.333, -94.6872, 1.4 ) }
    dend_5 { pt3dadd( -72.2505, 125.295, -94.6752, 1.84 ) }
    dend_5 { pt3dadd( -72.9572, 125.182, -94.6138, 1.33 ) }
    dend_5 { pt3dadd( -73.8421, 124.97, -94.5282, 0.81 ) }
    dend_5 { pt3dadd( -74.6301, 124.736, -94.4499, 0.22 ) }
    dend_5 { pt3dadd( -75.3676, 124.427, -94.3778, 1.4 ) }
    dend_5 { pt3dadd( -75.7718, 124.229, -94.3368, 1.69 ) }
    dend_5 { pt3dadd( -76.0199, 124.099, -94.3071, 1.69 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 42/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -46.5365, 119.524, -69.9866, 0.29 ) }
    dend_4 { pt3dadd( -48.2753, 121.877, -74.0198, 0.29 ) }
    dend_4 { pt3dadd( -48.7676, 122.58, -75.089, 0.22 ) }
    dend_4 { pt3dadd( -49.0063, 122.973, -75.6229, 0.96 ) }
    dend_4 { pt3dadd( -49.1648, 123.255, -75.983, 1.18 ) }
    dend_4 { pt3dadd( -49.7685, 124.441, -77.3598, 0.22 ) }
    dend_4 { pt3dadd( -49.9618, 124.846, -77.8019, 0.52 ) }
    dend_4 { pt3dadd( -50.0626, 125.107, -77.9699, 0.52 ) }
    dend_4 { pt3dadd( -50.7704, 126.904, -79.0036, 0.22 ) }
    dend_4 { pt3dadd( -50.798, 126.971, -79.0358, 0.22 ) }
    dend_4 { pt3dadd( -51.1581, 127.827, -79.364, 0.22 ) }
    dend_4 { pt3dadd( -51.1881, 127.897, -79.3807, 0.22 ) }
    dend_4 { pt3dadd( -51.9798, 129.533, -79.6265, 0.22 ) }
    dend_4 { pt3dadd( -52.0166, 129.602, -79.6304, 0.22 ) }
    dend_4 { pt3dadd( -52.7993, 131.03, -79.699, 0.22 ) }
    dend_4 { pt3dadd( -52.8346, 131.099, -79.706, 0.22 ) }
    dend_4 { pt3dadd( -53.1899, 131.842, -79.8114, 0.44 ) }
    dend_4 { pt3dadd( -53.9106, 133.509, -80.088, 0.15 ) }
    dend_4 { pt3dadd( -54.7638, 135.822, -80.601, 0.15 ) }
    dend_4 { pt3dadd( -55.4461, 137.898, -81.1257, 0.15 ) }
    dend_4 { pt3dadd( -55.8861, 139.462, -81.571, 0.15 ) }
    dend_4 { pt3dadd( -56.1518, 140.545, -81.9287, 0.88 ) }
    dend_4 { pt3dadd( -56.3042, 141.309, -82.2142, 1.25 ) }
    dend_4 { pt3dadd( -56.5717, 143.32, -83.0573, 0.22 ) }
    dend_4 { pt3dadd( -56.6118, 143.837, -83.289, 0.59 ) }
    dend_4 { pt3dadd( -56.6413, 144.395, -83.5227, 0.59 ) }
    dend_4 { pt3dadd( -56.7421, 146.241, -84.258, 0.22 ) }
    dend_4 { pt3dadd( -56.7794, 146.928, -84.5173, 0.22 ) }
    dend_4 { pt3dadd( -56.8001, 147.236, -84.6293, 0.66 ) }
    dend_4 { pt3dadd( -56.844, 147.859, -84.8258, 0.74 ) }
    dend_4 { pt3dadd( -56.9412, 149.72, -85.2343, 0.15 ) }
    dend_4 { pt3dadd( -56.9912, 150.833, -85.3595, 0.15 ) }
    dend_4 { pt3dadd( -56.9932, 150.899, -85.3603, 0.15 ) }
    dend_4 { pt3dadd( -57.0157, 151.753, -85.342, 0.52 ) }
    dend_4 { pt3dadd( -57.0278, 152.48, -85.2752, 0.52 ) }
    dend_4 { pt3dadd( -57.0717, 154.597, -84.9241, 0.22 ) }
    dend_4 { pt3dadd( -57.1262, 155.854, -84.601, 1.03 ) }
    dend_4 { pt3dadd( -57.1842, 156.544, -84.3891, 1.03 ) }
    dend_4 { pt3dadd( -57.1988, 156.628, -84.3608, 1.03 ) }
    dend_4 { pt3dadd( -57.5553, 157.831, -83.9083, 0.15 ) }
    dend_4 { pt3dadd( -57.7958, 158.327, -83.7294, 0.52 ) }
    dend_4 { pt3dadd( -58.0969, 158.736, -83.6104, 0.52 ) }
    dend_4 { pt3dadd( -58.7235, 159.457, -83.3821, 0.22 ) }
    dend_4 { pt3dadd( -59.5593, 160.316, -83.1162, 0.22 ) }
    dend_4 { pt3dadd( -59.9872, 160.722, -83.0071, 0.22 ) }
    dend_4 { pt3dadd( -60.5274, 161.165, -82.9304, 0.59 ) }
    dend_4 { pt3dadd( -61.1645, 161.69, -82.8411, 0.81 ) }
    // Section: dend_46, id: dend_46, parent: dend_40 (entry count 89/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 5.26614, -65.178, -0.479695, 0.37 ) }
    dend_46 { pt3dadd( 4.20017, -67.1786, 0.192458, 0.37 ) }
    dend_46 { pt3dadd( 3.7483, -67.9983, 0.608857, 0.74 ) }
    dend_46 { pt3dadd( 2.68914, -69.8963, 1.78887, 0.22 ) }
    dend_46 { pt3dadd( 2.1543, -70.837, 2.42618, 0.81 ) }
    dend_46 { pt3dadd( 1.84149, -71.3801, 2.83099, 0.81 ) }
    dend_46 { pt3dadd( 0.70359, -73.3313, 4.40057, 1.47 ) }
    dend_46 { pt3dadd( -0.101336, -74.6642, 5.70481, 2.06 ) }
    dend_46 { pt3dadd( -0.970393, -76.1925, 7.42022, 0.22 ) }
    dend_46 { pt3dadd( -1.24021, -76.7081, 8.03438, 0.52 ) }
    dend_46 { pt3dadd( -1.72819, -77.6451, 9.18618, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_46 { pt3dadd( -2.17736, -78.5124, 10.2511, 1.77 ) }
    dend_46 { pt3dadd( -2.72121, -79.5715, 11.5109, 2.43 ) }
    dend_46 { pt3dadd( -4.24106, -82.507, 14.892, 0.22 ) }
    dend_46 { pt3dadd( -4.4245, -82.8675, 15.3086, 0.59 ) }
    dend_46 { pt3dadd( -4.69703, -83.4138, 15.9234, 0.22 ) }
    dend_46 { pt3dadd( -4.85552, -83.7324, 16.2609, 0.44 ) }
    dend_46 { pt3dadd( -5.38708, -84.7824, 17.3134, 0.15 ) }
    dend_46 { pt3dadd( -5.85917, -85.6118, 18.0591, 0.15 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 8/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 5.26614, -65.178, -0.479695, 0.29 ) }
    dend_41 { pt3dadd( 4.36597, -66.4529, -1.1969, 0.29 ) }
    dend_41 { pt3dadd( 3.93176, -67.0958, -1.55209, 0.29 ) }
    dend_41 { pt3dadd( 3.49514, -67.7524, -1.90882, 0.29 ) }
    dend_41 { pt3dadd( 2.94641, -68.5462, -2.26778, 0.29 ) }
    dend_41 { pt3dadd( 2.41705, -69.2852, -2.56103, 0.29 ) }
    dend_41 { pt3dadd( 2.01022, -69.8502, -2.77022, 1.77 ) }
    dend_41 { pt3dadd( 1.51963, -70.4843, -2.93898, 2.21 ) }
    dend_41 { pt3dadd( 1.35036, -70.7091, -2.9909, 2.36 ) }
    dend_41 { pt3dadd( 0.574612, -71.8035, -3.19977, 0.74 ) }
    dend_41 { pt3dadd( 0.153075, -72.3582, -3.3027, 0.29 ) }
    dend_41 { pt3dadd( -0.309418, -72.9306, -3.43051, 0.29 ) }
    dend_41 { pt3dadd( -0.951069, -73.6885, -3.62479, 1.92 ) }
    dend_41 { pt3dadd( -1.34364, -74.1361, -3.75928, 2.28 ) }
    dend_41 { pt3dadd( -1.63322, -74.4683, -3.89043, 2.28 ) }
    dend_41 { pt3dadd( -2.45767, -75.4505, -4.37609, 0.29 ) }
    dend_41 { pt3dadd( -3.11467, -76.265, -4.79488, 0.22 ) }
    dend_41 { pt3dadd( -3.33274, -76.5471, -4.94713, 0.96 ) }
    dend_41 { pt3dadd( -3.45722, -76.7462, -5.08965, 1.18 ) }
    dend_41 { pt3dadd( -3.8049, -77.4372, -5.66175, 0.22 ) }
    dend_41 { pt3dadd( -3.86564, -77.6447, -5.90786, 0.22 ) }
    dend_41 { pt3dadd( -3.89772, -77.8719, -6.2374, 0.22 ) }
    dend_41 { pt3dadd( -3.94264, -78.1795, -6.74582, 0.66 ) }
    dend_41 { pt3dadd( -4.11981, -79.1527, -8.60784, 1.62 ) }
    dend_41 { pt3dadd( -4.14953, -79.2578, -8.85513, 2.14 ) }
    dend_41 { pt3dadd( -4.58002, -80.1387, -11.3964, 0.37 ) }
    dend_41 { pt3dadd( -4.75507, -80.3643, -12.177, 0.37 ) }
    dend_41 { pt3dadd( -4.93111, -80.5073, -12.8372, 1.47 ) }
    dend_41 { pt3dadd( -5.20279, -80.6308, -13.7514, 1.47 ) }
    dend_41 { pt3dadd( -5.79801, -80.7545, -15.418, 0.22 ) }
    dend_41 { pt3dadd( -6.10872, -80.7744, -16.2055, 1.25 ) }
    dend_41 { pt3dadd( -6.26589, -80.7646, -16.5425, 1.84 ) }
    dend_41 { pt3dadd( -6.77494, -80.7217, -17.6774, 1.84 ) }
    dend_41 { pt3dadd( -7.87601, -80.6864, -20.2425, 0.22 ) }
    dend_41 { pt3dadd( -8.07202, -80.6893, -20.6834, 0.88 ) }
    dend_41 { pt3dadd( -8.349, -80.7179, -21.3502, 0.88 ) }
    dend_41 { pt3dadd( -8.59655, -80.7802, -21.9928, 0.22 ) }
    dend_41 { pt3dadd( -9.00472, -80.939, -23.0314, 0.22 ) }
    dend_41 { pt3dadd( -9.2879, -81.0976, -23.7534, 1.03 ) }
    dend_41 { pt3dadd( -9.37773, -81.1642, -23.9974, 1.03 ) }
    dend_41 { pt3dadd( -9.75355, -81.5931, -25.55, 0.22 ) }
    dend_41 { pt3dadd( -9.84283, -81.7473, -26.0542, 0.22 ) }
    dend_41 { pt3dadd( -9.98528, -82.09, -27.1012, 1.25 ) }
    dend_41 { pt3dadd( -10.1294, -82.4403, -28.1191, 1.18 ) }
    dend_41 { pt3dadd( -10.1367, -82.4631, -28.1789, 1.18 ) }
    dend_41 { pt3dadd( -10.2925, -83.2684, -30.0693, 0.22 ) }
    dend_41 { pt3dadd( -10.3097, -83.5078, -30.5542, 1.18 ) }
    dend_41 { pt3dadd( -10.3004, -83.7097, -30.925, 1.18 ) }
    dend_41 { pt3dadd( -10.1154, -84.4682, -32.1169, 0.22 ) }
    dend_41 { pt3dadd( -10.0541, -84.6531, -32.3936, 0.22 ) }
    dend_41 { pt3dadd( -9.89088, -85.0685, -33.0576, 0.66 ) }
    dend_41 { pt3dadd( -9.81375, -85.2715, -33.3681, 0.81 ) }
    dend_41 { pt3dadd( -9.74355, -85.4444, -33.6391, 0.81 ) }
    dend_41 { pt3dadd( -9.35196, -86.252, -35.015, 0.52 ) }
    dend_41 { pt3dadd( -8.9012, -87.1324, -36.4791, 0.22 ) }
    dend_41 { pt3dadd( -8.54526, -87.8755, -37.7025, 0.22 ) }
    dend_41 { pt3dadd( -8.34037, -88.335, -38.4515, 2.21 ) }
    dend_41 { pt3dadd( -8.17059, -88.7865, -39.1707, 2.28 ) }
    dend_41 { pt3dadd( -7.62615, -90.6631, -42.028, 0.22 ) }
    dend_41 { pt3dadd( -7.5547, -91.0882, -42.6272, 0.22 ) }
    dend_41 { pt3dadd( -7.48053, -91.8955, -43.6722, 0.22 ) }
    dend_41 { pt3dadd( -7.48164, -91.9296, -43.7147, 0.22 ) }
    dend_41 { pt3dadd( -7.60251, -92.464, -44.3924, 0.37 ) }
    dend_41 { pt3dadd( -7.80931, -92.8269, -44.8209, 0.88 ) }
    dend_41 { pt3dadd( -8.40428, -93.4343, -45.4548, 1.69 ) }
    dend_41 { pt3dadd( -8.76548, -93.7635, -45.8252, 2.21 ) }
    dend_41 { pt3dadd( -9.34446, -94.2753, -46.3864, 2.21 ) }
    dend_41 { pt3dadd( -9.82811, -94.7338, -46.8839, 1.11 ) }
    dend_41 { pt3dadd( -10.2214, -95.1685, -47.3356, 0.37 ) }
    dend_41 { pt3dadd( -10.2467, -95.2043, -47.3677, 0.37 ) }
    dend_41 { pt3dadd( -10.674, -95.9795, -47.933, 0.37 ) }
    dend_41 { pt3dadd( -10.8435, -96.3282, -48.1362, 0.74 ) }
    dend_41 { pt3dadd( -10.8948, -96.4414, -48.187, 0.74 ) }
    dend_41 { pt3dadd( -11.1246, -96.9523, -48.3886, 0.66 ) }
    dend_41 { pt3dadd( -11.4603, -97.6491, -48.6453, 0.66 ) }
    dend_41 { pt3dadd( -11.7325, -98.1718, -48.8449, 0.52 ) }
    dend_41 { pt3dadd( -12.3215, -99.2035, -49.2431, 0.22 ) }
    dend_41 { pt3dadd( -12.7488, -99.9505, -49.5372, 1.47 ) }
    dend_41 { pt3dadd( -13.0215, -100.493, -49.7754, 1.92 ) }
    dend_41 { pt3dadd( -13.2368, -100.956, -49.9998, 2.14 ) }
    dend_41 { pt3dadd( -13.529, -101.683, -50.3892, 0.74 ) }
    dend_41 { pt3dadd( -13.6972, -102.219, -50.6939, 0.29 ) }
    dend_41 { pt3dadd( -13.8333, -102.828, -51.0776, 0.29 ) }
    dend_41 { pt3dadd( -14.0601, -104.067, -51.8899, 0.29 ) }
    dend_41 { pt3dadd( -14.1279, -104.546, -52.1865, 1.33 ) }
    dend_41 { pt3dadd( -14.2062, -105.155, -52.5485, 1.33 ) }
    dend_41 { pt3dadd( -14.2408, -105.392, -52.6766, 1.33 ) }
    dend_41 { pt3dadd( -14.3978, -106.344, -53.2128, 0.29 ) }
    dend_41 { pt3dadd( -14.5099, -106.83, -53.4926, 0.29 ) }
    dend_41 { pt3dadd( -14.7934, -107.77, -54.0423, 0.29 ) }
    dend_41 { pt3dadd( -14.8087, -107.822, -54.0741, 0.29 ) }
    dend_41 { pt3dadd( -15.0058, -108.477, -54.4795, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_41 { pt3dadd( -15.2883, -109.353, -55.0422, 1.18 ) }
    dend_41 { pt3dadd( -15.3682, -109.595, -55.2024, 1.33 ) }
    dend_41 { pt3dadd( -15.674, -110.568, -55.8541, 0.22 ) }
    dend_41 { pt3dadd( -15.6895, -110.619, -55.8878, 0.22 ) }
    dend_41 { pt3dadd( -15.8235, -111.161, -56.2041, 0.88 ) }
    dend_41 { pt3dadd( -15.8868, -111.496, -56.3666, 0.88 ) }
    dend_41 { pt3dadd( -16.0311, -112.594, -56.7495, 0.22 ) }
    dend_41 { pt3dadd( -16.0955, -113.215, -56.9446, 1.33 ) }
    dend_41 { pt3dadd( -16.1297, -113.521, -57.0291, 1.77 ) }
    dend_41 { pt3dadd( -16.2325, -114.299, -57.246, 0.88 ) }
    dend_41 { pt3dadd( -16.3389, -114.981, -57.4375, 0.22 ) }
    dend_41 { pt3dadd( -16.4918, -115.711, -57.6362, 0.59 ) }
    dend_41 { pt3dadd( -16.8076, -116.841, -57.93, 0.22 ) }
    dend_41 { pt3dadd( -17.0704, -117.655, -58.1385, 0.22 ) }
    dend_41 { pt3dadd( -17.2766, -118.218, -58.2783, 1.18 ) }
    dend_41 { pt3dadd( -17.4255, -118.568, -58.3644, 1.18 ) }
    dend_41 { pt3dadd( -17.8391, -119.418, -58.5851, 0.15 ) }
    dend_41 { pt3dadd( -18.1001, -119.915, -58.7266, 0.15 ) }
    dend_41 { pt3dadd( -18.457, -120.603, -58.9177, 0.88 ) }
    dend_41 { pt3dadd( -18.5977, -120.88, -59.0012, 1.11 ) }
    dend_41 { pt3dadd( -18.9271, -121.6, -59.3324, 0.37 ) }
    dend_41 { pt3dadd( -19.2009, -122.279, -59.7368, 0.22 ) }
    dend_41 { pt3dadd( -19.3522, -122.77, -60.0776, 1.18 ) }
    dend_41 { pt3dadd( -19.4463, -123.134, -60.3582, 1.18 ) }
    dend_41 { pt3dadd( -19.458, -123.181, -60.3992, 1.18 ) }
    dend_41 { pt3dadd( -19.8118, -124.706, -61.7934, 0.22 ) }
    dend_41 { pt3dadd( -19.8284, -124.779, -61.863, 0.37 ) }
    dend_41 { pt3dadd( -19.9512, -125.332, -62.4217, 0.15 ) }
    dend_41 { pt3dadd( -20.0105, -125.577, -62.6651, 0.59 ) }
    dend_41 { pt3dadd( -20.2845, -126.549, -63.5775, 0.22 ) }
    dend_41 { pt3dadd( -20.4311, -127.024, -63.9732, 1.03 ) }
    dend_41 { pt3dadd( -20.4933, -127.207, -64.1008, 1.03 ) }
    dend_41 { pt3dadd( -20.8964, -128.476, -64.8769, 0.22 ) }
    dend_41 { pt3dadd( -20.9885, -128.77, -65.0358, 0.52 ) }
    dend_41 { pt3dadd( -21.2448, -129.604, -65.3978, 0.22 ) }
    dend_41 { pt3dadd( -21.3945, -130.097, -65.5598, 1.03 ) }
    dend_41 { pt3dadd( -21.4973, -130.415, -65.6452, 1.03 ) }
    dend_41 { pt3dadd( -21.916, -131.619, -65.9435, 0.15 ) }
    dend_41 { pt3dadd( -22.085, -132.052, -66.0356, 0.44 ) }
    dend_41 { pt3dadd( -22.3924, -132.848, -66.2193, 0.15 ) }
    dend_41 { pt3dadd( -22.539, -133.241, -66.3153, 0.88 ) }
    dend_41 { pt3dadd( -22.7009, -133.767, -66.4758, 0.88 ) }
    dend_41 { pt3dadd( -22.9421, -134.809, -66.8368, 0.22 ) }
    dend_41 { pt3dadd( -23.0502, -135.733, -67.3439, 0.22 ) }
    dend_41 { pt3dadd( -23.0663, -135.968, -67.5189, 0.66 ) }
    dend_41 { pt3dadd( -23.0815, -136.183, -67.6849, 0.66 ) }
    dend_41 { pt3dadd( -23.2136, -137.446, -68.7422, 0.37 ) }
    dend_41 { pt3dadd( -23.2695, -137.915, -69.1515, 1.25 ) }
    dend_41 { pt3dadd( -23.5174, -140.159, -71.0812, 0.44 ) }
    dend_41 { pt3dadd( -23.8022, -142.747, -73.2708, 0.15 ) }
    dend_41 { pt3dadd( -23.9183, -143.67, -74.0162, 0.96 ) }
    dend_41 { pt3dadd( -24.0705, -144.798, -74.8657, 0.29 ) }
    dend_41 { pt3dadd( -24.1187, -145.143, -75.0942, 0.52 ) }
    dend_41 { pt3dadd( -24.2744, -146.726, -76.03, 0.22 ) }
    dend_41 { pt3dadd( -24.2751, -147.025, -76.1656, 0.66 ) }
    dend_41 { pt3dadd( -24.2045, -147.563, -76.4277, 0.66 ) }
    dend_41 { pt3dadd( -24.0398, -148.743, -77.0999, 0.15 ) }
    dend_41 { pt3dadd( -23.957, -149.467, -77.5697, 0.15 ) }
    dend_41 { pt3dadd( -23.8674, -150.381, -78.2223, 1.03 ) }
    dend_41 { pt3dadd( -23.8473, -150.642, -78.4346, 1.03 ) }
    dend_41 { pt3dadd( -23.7134, -152.585, -80.1477, 0.22 ) }
    dend_41 { pt3dadd( -23.6569, -153.649, -81.1914, 0.22 ) }
    dend_41 { pt3dadd( -23.6574, -154.576, -82.2259, 1.11 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 63/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -76.0199, 124.099, -94.3071, 0.22 ) }
    dend_7 { pt3dadd( -77.0554, 123.475, -94.7456, 0.22 ) }
    dend_7 { pt3dadd( -77.614, 123.151, -94.9794, 0.22 ) }
    dend_7 { pt3dadd( -78.6779, 122.532, -95.3994, 0.59 ) }
    dend_7 { pt3dadd( -79.916, 121.811, -95.8558, 0.15 ) }
    dend_7 { pt3dadd( -80.2537, 121.613, -95.9762, 0.81 ) }
    dend_7 { pt3dadd( -80.8505, 121.262, -96.1889, 1.11 ) }
    dend_7 { pt3dadd( -81.7994, 120.724, -96.5063, 0.22 ) }
    dend_7 { pt3dadd( -82.3776, 120.383, -96.705, 1.03 ) }
    dend_7 { pt3dadd( -82.7637, 120.14, -96.8383, 1.33 ) }
    dend_7 { pt3dadd( -82.8464, 120.095, -96.8532, 1.33 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 74/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -76.0199, 124.099, -94.3071, 0.22 ) }
    dend_6 { pt3dadd( -76.6244, 125.05, -93.5189, 0.22 ) }
    dend_6 { pt3dadd( -77.0941, 125.967, -92.6403, 0.22 ) }
    dend_6 { pt3dadd( -77.3623, 126.512, -92.1007, 1.25 ) }
    dend_6 { pt3dadd( -77.3792, 126.56, -92.055, 1.25 ) }
    dend_6 { pt3dadd( -77.7806, 127.955, -90.7332, 0.15 ) }
    dend_6 { pt3dadd( -77.9339, 128.586, -90.1753, 0.15 ) }
    dend_6 { pt3dadd( -78.0996, 130.017, -88.9406, 0.96 ) }
    dend_6 { pt3dadd( -78.1366, 130.463, -88.5884, 1.18 ) }
    dend_6 { pt3dadd( -78.209, 131.627, -87.6951, 0.15 ) }
    dend_6 { pt3dadd( -78.2116, 131.681, -87.6539, 0.15 ) }
    dend_6 { pt3dadd( -78.2214, 132.547, -87.0154, 0.15 ) }
    dend_6 { pt3dadd( -78.2291, 134.157, -85.8803, 0.15 ) }
    dend_6 { pt3dadd( -78.2858, 134.912, -85.4449, 0.66 ) }
    dend_6 { pt3dadd( -78.3218, 135.206, -85.2657, 0.66 ) }
    // Section: dend_45, id: dend_45, parent: dend_41 (entry count 89/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -23.6574, -154.576, -82.2259, 0.22 ) }
    dend_45 { pt3dadd( -24.804, -154.766, -84.1273, 0.22 ) }
    dend_45 { pt3dadd( -25.363, -154.852, -84.9507, 0.22 ) }
    dend_45 { pt3dadd( -25.5997, -154.907, -85.377, 1.03 ) }
    dend_45 { pt3dadd( -25.7106, -154.936, -85.5769, 1.33 ) }
    dend_45 { pt3dadd( -26.7658, -155.222, -87.4881, 0.22 ) }
    dend_45 { pt3dadd( -27.532, -155.409, -88.9047, 0.22 ) }
    dend_45 { pt3dadd( -27.7759, -155.458, -89.3561, 0.88 ) }
    dend_45 { pt3dadd( -28.7783, -155.666, -91.3793, 0.22 ) }
    dend_45 { pt3dadd( -29.385, -155.789, -92.5375, 0.22 ) }
    dend_45 { pt3dadd( -29.4109, -155.795, -92.5805, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_45 { pt3dadd( -30.2801, -156.065, -93.8218, 0.22 ) }
    dend_45 { pt3dadd( -30.332, -156.084, -93.8925, 0.22 ) }
    dend_45 { pt3dadd( -31.1684, -156.454, -94.8827, 0.22 ) }
    dend_45 { pt3dadd( -32.0951, -156.972, -95.8322, 0.22 ) }
    dend_45 { pt3dadd( -33.0942, -157.752, -96.8879, 0.22 ) }
    dend_45 { pt3dadd( -33.128, -157.785, -96.9226, 0.22 ) }
    dend_45 { pt3dadd( -33.5102, -158.234, -97.2987, 0.74 ) }
    dend_45 { pt3dadd( -33.71, -158.534, -97.5154, 0.74 ) }
    dend_45 { pt3dadd( -34.2673, -159.905, -98.368, 0.22 ) }
    dend_45 { pt3dadd( -34.5021, -160.827, -98.933, 0.22 ) }
    dend_45 { pt3dadd( -34.5803, -161.167, -99.1398, 0.29 ) }
    dend_45 { pt3dadd( -34.6204, -161.326, -99.2261, 0.37 ) }
    dend_45 { pt3dadd( -34.8852, -162.405, -99.7953, 0.15 ) }
    dend_45 { pt3dadd( -35.358, -164.281, -100.733, 0.15 ) }
    dend_45 { pt3dadd( -35.3717, -164.331, -100.756, 0.15 ) }
    dend_45 { pt3dadd( -35.8381, -165.837, -101.46, 0.15 ) }
    dend_45 { pt3dadd( -36.9657, -168.956, -102.906, 0.15 ) }
    dend_45 { pt3dadd( -37.3846, -170.012, -103.408, 0.44 ) }
    dend_45 { pt3dadd( -37.7458, -170.854, -103.804, 0.15 ) }
    dend_45 { pt3dadd( -38.7028, -172.942, -104.764, 0.15 ) }
    dend_45 { pt3dadd( -39.2736, -174.177, -105.34, 0.37 ) }
    dend_45 { pt3dadd( -39.8443, -175.374, -105.924, 0.15 ) }
    dend_45 { pt3dadd( -40.5425, -176.573, -106.546, 0.59 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 23/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -23.6574, -154.576, -82.2259, 0.22 ) }
    dend_42 { pt3dadd( -23.8329, -156.494, -82.4581, 0.22 ) }
    dend_42 { pt3dadd( -23.9632, -158.549, -82.7022, 0.22 ) }
    dend_42 { pt3dadd( -24.1107, -160.876, -82.9787, 0.22 ) }
    dend_42 { pt3dadd( -24.1491, -161.482, -83.0507, 1.33 ) }
    dend_42 { pt3dadd( -24.209, -162.426, -83.1629, 1.33 ) }
    dend_42 { pt3dadd( -24.2932, -163.755, -83.3206, 0.22 ) }
    dend_42 { pt3dadd( -24.3085, -164.078, -83.3612, 0.59 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 31/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -82.8464, 120.095, -96.8532, 0.22 ) }
    dend_9 { pt3dadd( -84.1672, 119.029, -97.9368, 0.22 ) }
    dend_9 { pt3dadd( -84.6946, 118.604, -98.3695, 0.59 ) }
    dend_9 { pt3dadd( -85.5415, 117.92, -99.0642, 0.22 ) }
    dend_9 { pt3dadd( -86.0305, 117.526, -99.4655, 0.66 ) }
    dend_9 { pt3dadd( -86.0923, 117.476, -99.5162, 0.66 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 37/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -82.8464, 120.095, -96.8532, 0.15 ) }
    dend_8 { pt3dadd( -81.6675, 118.319, -97.4799, 0.15 ) }
    dend_8 { pt3dadd( -80.8498, 117.087, -97.9146, 0.29 ) }
    dend_8 { pt3dadd( -80.5117, 116.578, -98.0943, 0.29 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 41/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -24.3085, -164.078, -83.3612, 0.29 ) }
    dend_44 { pt3dadd( -22.8713, -165.191, -83.5837, 0.29 ) }
    dend_44 { pt3dadd( -21.8549, -165.978, -83.741, 0.44 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 44/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -24.3085, -164.078, -83.3612, 0.22 ) }
    dend_43 { pt3dadd( -25.7533, -166.03, -84.5057, 0.22 ) }
    dend_43 { pt3dadd( -26.5073, -167.109, -85.1211, 0.44 ) }
    dend_43 { pt3dadd( -27.394, -168.752, -85.9572, 0.15 ) }
    dend_43 { pt3dadd( -28.4037, -170.762, -86.9516, 0.15 ) }
    dend_43 { pt3dadd( -28.6842, -171.342, -87.2295, 0.81 ) }
    dend_43 { pt3dadd( -28.8673, -171.732, -87.4111, 0.81 ) }
    dend_43 { pt3dadd( -30.6331, -175.696, -89.1874, 0.15 ) }
    dend_43 { pt3dadd( -32.6869, -180.992, -91.3716, 0.15 ) }
    dend_43 { pt3dadd( -32.6869, -180.992, -91.3716, 0.37 ) }
    dend_43 { pt3dadd( -33.0327, -182.226, -91.8367, 0.15 ) }
    dend_43 { pt3dadd( -33.187, -182.833, -92.0504, 0.81 ) }
    dend_43 { pt3dadd( -33.3429, -183.528, -92.2803, 0.81 ) }
    dend_43 { pt3dadd( -33.6623, -185.543, -92.8423, 0.15 ) }
    dend_43 { pt3dadd( -33.7702, -186.255, -93.0121, 0.44 ) }
    dend_43 { pt3dadd( -33.8083, -186.604, -93.1218, 0.44 ) }
    dend_43 { pt3dadd( -33.9, -187.713, -93.5115, 0.15 ) }
    dend_43 { pt3dadd( -33.9528, -188.162, -93.6621, 0.66 ) }
    dend_43 { pt3dadd( -33.973, -188.297, -93.7056, 0.66 ) }
    dend_43 { pt3dadd( -34.0813, -188.965, -93.9152, 0.66 ) }
    dend_43 { pt3dadd( -34.7311, -193.095, -95.2184, 0.15 ) }
    dend_43 { pt3dadd( -34.8688, -193.985, -95.5005, 0.44 ) }
    dend_43 { pt3dadd( -35.6978, -199.515, -97.2495, 0.15 ) }
    dend_43 { pt3dadd( -36.4828, -204.701, -98.8746, 0.15 ) }
    dend_43 { pt3dadd( -36.509, -204.869, -98.9261, 0.59 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_32, dend_23, dend_14, dend_11, dend_0, dend_38, dend_33, dend_29, dend_24, dend_20, dend_15, dend_13, dend_12, dend_2, dend_1, dend_48, dend_39, dend_37, dend_34, dend_31, dend_30, dend_28, dend_25, dend_22, dend_21, dend_19, dend_16, dend_10, dend_3, dend_47, dend_40, dend_36, dend_35, dend_27, dend_26, dend_18, dend_17, dend_5, dend_4, dend_46, dend_41, dend_7, dend_6, dend_45, dend_42, dend_9, dend_8, dend_44, dend_43]}
    ModelViewParmSubset_2 = new SectionList()
    dend_32 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_32, dend_23, dend_14, dend_11, dend_0, dend_38, dend_33, dend_29, dend_24, dend_20, dend_15, dend_13, dend_12, dend_2, dend_1, dend_48, dend_39, dend_37, dend_34, dend_31, dend_30, dend_28, dend_25, dend_22, dend_21, dend_19, dend_16, dend_10, dend_3, dend_47, dend_40, dend_36, dend_35, dend_27, dend_26, dend_18, dend_17, dend_5, dend_4, dend_46, dend_41, dend_7, dend_6, dend_45, dend_42, dend_9, dend_8, dend_44, dend_43]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_44 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_20 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_15 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_12 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_2 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_1 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_48 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_37 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_34 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_31 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_30 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_28 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_25 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_21 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_19 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_16 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_10 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_3 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_47 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_36 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_5 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_4 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_41 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_45 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_43 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_32 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_33 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_23 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_38 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_11 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_14 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_39 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_24 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_40 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_13 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_46 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_22 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_17 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_27 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_26 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_35 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_18 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_42 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_44 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_7 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_8 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_9 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_6 OneSecGrp_SectionRef_46.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_29 nseg = 3
    dend_20 nseg = 3
    dend_15 nseg = 3
    dend_12 nseg = 3
    dend_2 nseg = 3
    dend_1 nseg = 3
    dend_48 nseg = 3
    dend_37 nseg = 5
    dend_34 nseg = 5
    dend_31 nseg = 5
    dend_30 nseg = 3
    dend_28 nseg = 5
    dend_25 nseg = 5
    dend_21 nseg = 3
    dend_19 nseg = 3
    dend_16 nseg = 3
    dend_10 nseg = 5
    dend_3 nseg = 5
    dend_47 nseg = 5
    dend_36 nseg = 3
    dend_5 nseg = 3
    dend_4 nseg = 3
    dend_41 nseg = 7
    dend_45 nseg = 3
    dend_43 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L5_SBC_365080b27f_0_0


