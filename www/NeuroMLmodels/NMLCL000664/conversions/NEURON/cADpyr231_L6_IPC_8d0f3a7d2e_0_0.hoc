// Cell: cADpyr231_L6_IPC_8d0f3a7d2e_0_0
/*
{
  "id" : "cADpyr231_L6_IPC_8d0f3a7d2e_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.670932, -6.18816, 0.0, 3.24514", "-0.640602, -5.58196, 0.0, 5.75604", "-0.610272, -4.97576, 0.0, 7.03466", "-0.579941, -4.36956, 0.0, 8.25467", "-0.549611, -3.76336, 0.0, 9.31988", "-0.519281, -3.15716, 0.0, 10.1602", "-0.488951, -2.55096, 0.0, 10.8703", "-0.458621, -1.94475, 0.0, 11.446", "-0.42829, -1.33855, 0.0, 11.8124", "-0.39796, -0.732354, 0.0, 11.9219", "-0.36763, -0.126153, 0.0, 11.7674", "-0.3373, 0.480047, 0.0, 11.4811", "-0.30697, 1.08625, 0.0, 11.1855", "-0.27664, 1.69245, 0.0, 10.9343", "-0.246309, 2.29865, 0.0, 10.6385", "-0.215979, 2.90485, 0.0, 10.3278", "-0.185649, 3.51105, 0.0, 9.73377", "-0.155319, 4.11725, 0.0, 8.94617", "-0.124989, 4.72345, 0.0, 7.79939", "-0.0946584, 5.32965, 0.0, 6.41658", "-0.0643282, 5.93585, 0.0, 3.58688" ]
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "0.103702, -6.283, 0.0, 4.26", "0.0996769, -6.04608, 0.0, 4.26", "-0.811778, -7.95882, -0.0572756, 3.75", "-1.02527, -8.42787, -0.094969, 3.53", "-1.95054, -10.6579, -0.344398, 2.64", "-2.52188, -12.1341, -0.54349, 2.5", "-2.98562, -13.4239, -0.738045, 2.5", "-3.43286, -14.8507, -0.997313, 2.28", "-3.91245, -16.7571, -1.39032, 2.35", "-4.31392, -18.8489, -1.83188, 2.35", "-4.4747, -20.1627, -2.12717, 2.2", "-4.58799, -21.8414, -2.50752, 2.2", "-4.64517, -23.485, -2.87188, 1.91", "-4.64757, -25.2545, -3.25535, 1.91", "-4.5793, -27.2052, -3.66403, 1.98", "-4.47767, -28.7263, -3.98512, 1.98" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001246063183
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "3.09437, -1.39086, -5.07279, 1.62", "5.28958, -2.34476, -8.66892, 1.62", "6.55954, -2.64416, -8.99743, 1.47", "8.12582, -3.01342, -9.4026, 1.47", "9.2374, -3.27548, -9.69015, 1.18" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001246063183
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-1.57966, 0.2861, -5.86966, 1.69", "-3.78692, 0.749794, -14.0832, 1.69", "-4.55381, 0.246198, -14.5014, 1.69", "-5.28033, -0.314368, -14.9386, 1.69", "-5.82547, -0.800202, -15.2767, 1.69", "-6.68371, -1.5651, -15.8091, 1.47", "-7.82763, -2.58459, -16.5186, 1.32", "-8.63764, -3.37738, -17.038, 1.32", "-9.16817, -3.98997, -17.3981, 1.4", "-9.6882, -4.68139, -17.7938, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001246063183
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "0.514566, 3.21772, -5.16183, 1.1", "0.885358, 5.55869, -8.86509, 1.1", "1.43271, 6.80447, -9.46325, 1.1", "1.96143, 8.30382, -10.3495, 1.1", "2.20152, 9.37603, -11.1767, 1.1", "2.21714, 10.1188, -11.9847, 1.1", "2.06841, 10.5883, -12.7593, 1.25", "1.6445, 10.7583, -13.6891, 1.25", "0.868814, 10.6386, -15.1732, 1.25", "0.0970677, 10.2652, -16.8271, 1.18", "-0.255127, 9.98003, -17.8079, 1.18", "-0.443567, 9.76026, -18.5433, 1.18", "-0.693045, 9.36299, -19.7732, 1.18", "-0.866917, 8.79454, -21.5721, 1.18", "-0.784732, 8.34064, -23.2058, 1.18", "-0.483039, 7.98179, -24.7708, 1.18", "-0.220862, 7.81065, -25.6752, 1.18" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001246063183
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-3.58994, 2.46152, 4.26533, 1.98", "-4.53339, 3.12074, 5.387, 1.98", "-6.26365, 3.77895, 4.95794, 1.47", "-8.00657, 4.25321, 4.53544, 1.54", "-8.98827, 4.42333, 4.31691, 1.47", "-10.0061, 4.49643, 4.08497, 1.1", "-11.7304, 4.62028, 3.69203, 1.03", "-12.7022, 4.63354, 3.47712, 1.03", "-14.1767, 4.47333, 3.17145, 1.03", "-15.485, 4.17772, 2.90067, 1.76", "-17.1164, 3.67581, 2.55182, 1.91" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001246063183
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "3.04337, 5.35618, 0.0, 1.47", "3.16875, 5.57854, 0.0, 1.47", "4.19004, 6.11918, 0.164134, 1.03", "5.51158, 6.89593, 0.403093, 1.25", "6.67098, 7.6707, 0.627064, 0.88", "8.06269, 8.73926, 0.906542, 0.81", "8.95683, 9.53193, 1.10497, 0.88", "9.83453, 10.4833, 1.33209, 0.88", "10.2013, 11.0008, 1.45411, 0.81", "10.7443, 11.9583, 1.68126, 1.18", "11.1563, 12.933, 1.88016, 1.25", "11.4884, 14.1035, 2.08924, 1.18", "11.6568, 14.9752, 2.22187, 1.18", "11.7344, 15.5593, 2.29618, 1.18" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001246063183
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.0643282, 5.93585, 0.0, 0.748443", "0.685233, 20.9171, 0.0, 0.748443", "1.43479, 35.8984, 0.0, 0.748443" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_22",
    "id" : "apic_22",
    "points3d" : [ "-4.47767, -28.7263, -3.98512, 1.98", "-4.54785, -31.0263, -4.28956, 1.47", "-4.82033, -31.894, -4.13249, 1.03", "-5.07519, -32.9179, -3.80145, 0.51", "-5.27325, -34.0388, -3.35011, 0.66", "-5.35222, -34.8185, -2.93792, 0.66", "-5.38049, -35.7957, -2.29482, 0.88", "-5.31318, -36.7355, -1.45765, 0.51", "-5.17954, -37.4643, -0.677666, 0.66", "-5.07698, -37.8107, -0.295089, 0.88", "-4.81635, -38.5931, 0.49064, 0.66", "-4.61976, -39.2376, 0.981268, 0.66", "-4.48345, -39.8707, 1.21314, 0.88", "-4.34666, -40.6352, 1.26831, 0.59", "-4.10279, -41.7661, 1.25271, 1.1", "-3.84279, -42.8454, 1.18809, 0.59", "-3.61468, -43.7892, 1.06, 0.59", "-3.37464, -44.6865, 0.893279, 0.66", "-2.97285, -45.9296, 0.642037, 0.66", "-2.52604, -46.9615, 0.465237, 0.81", "-2.48993, -47.02, 0.460903, 0.81" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "-4.47767, -28.7263, -3.98512, 1.98", "-4.81503, -33.3299, -5.04837, 1.98", "-6.47672, -38.2434, -6.18497, 1.98", "-7.18363, -40.3162, -6.7183, 1.54", "-7.95075, -42.5036, -7.27987, 1.54", "-8.81769, -44.8646, -7.92906, 1.69", "-10.1076, -48.1506, -8.89392, 1.69", "-11.0808, -50.5066, -9.59936, 1.69", "-11.9252, -52.5037, -10.2339, 1.84", "-12.8954, -54.7836, -11.0445, 1.47", "-13.864, -57.1119, -11.9597, 1.62", "-14.2709, -58.0922, -12.3962, 2.06" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "9.2374, -3.27548, -9.69015, 1.18", "10.3879, -3.92327, -9.96271, 0.73", "11.645, -4.56721, -10.2995, 0.73", "12.8347, -5.17771, -10.7495, 1.03", "14.0046, -5.71248, -11.2921, 0.59", "14.7774, -5.99631, -11.6959, 0.59", "15.4834, -6.19429, -12.0902, 0.66", "16.2605, -6.29538, -12.5573, 0.66", "17.4611, -6.22902, -13.3587, 1.4", "18.2904, -6.05513, -13.9577, 0.59", "19.2264, -5.80083, -14.6344, 0.66", "19.8571, -5.64523, -15.092, 0.81", "20.2817, -5.56387, -15.3747, 0.95", "21.1846, -5.42853, -15.9309, 0.66", "21.9935, -5.32654, -16.4137, 0.66", "23.008, -5.25168, -17.1091, 0.73", "23.6903, -5.22572, -17.6868, 0.73", "24.309, -5.21767, -18.3528, 0.73", "24.5654, -5.21394, -18.7449, 0.73", "24.8486, -5.2048, -19.489, 0.81", "24.9859, -5.16433, -20.1828, 0.81", "25.0065, -5.06493, -20.8637, 0.81", "24.9714, -4.95403, -21.3604, 0.81", "24.9016, -4.85497, -21.7894, 0.81", "24.7561, -4.74133, -22.7371, 0.81", "24.6703, -4.76887, -23.4423, 0.81" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "9.2374, -3.27548, -9.69015, 1.18", "10.5561, -3.58789, -9.08568, 0.59", "12.421, -4.20933, -8.31836, 0.59", "13.3164, -4.57013, -8.00956, 1.1", "14.6751, -5.14406, -7.66724, 0.37", "15.2365, -5.37285, -7.57273, 0.44", "16.1303, -5.72916, -7.57305, 0.44", "16.5404, -5.88172, -7.61827, 0.44", "17.1256, -6.08152, -7.71743, 0.66", "18.3603, -6.40877, -7.95034, 1.1", "19.9701, -6.65601, -8.21624, 0.44", "21.2149, -6.72634, -8.36179, 0.44", "22.6226, -6.7016, -8.4706, 0.44", "23.7284, -6.61512, -8.5181, 0.44", "25.6632, -6.36409, -8.52958, 0.44", "28.2156, -5.87727, -8.47157, 0.44", "29.7497, -5.48501, -8.38755, 0.44", "30.8908, -5.12206, -8.27289, 0.88", "32.2204, -4.62319, -8.08546, 0.44", "32.989, -4.27821, -7.95143, 0.73", "33.8929, -3.81703, -7.76091, 0.73", "34.8089, -3.28122, -7.53735, 0.73", "35.663, -2.72468, -7.30358, 0.66", "36.8784, -1.87628, -6.93448, 0.51", "38.1962, -0.926359, -6.53535, 0.22", "38.6456, -0.601278, -6.41754, 0.66", "39.2594, -0.184038, -6.30113, 0.66", "39.9827, 0.273891, -6.25093, 0.44", "41.2869, 1.06187, -6.23246, 0.44", "42.5457, 1.80305, -6.26003, 0.51", "43.3475, 2.23283, -6.3087, 0.51", "44.4986, 2.83039, -6.40951, 0.51", "46.1023, 3.56787, -6.61517, 0.59", "46.5751, 3.75746, -6.70271, 0.66" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-9.6882, -4.68139, -17.7938, 1.62", "-9.29869, -5.22922, -18.9194, 0.95", "-8.66654, -6.11831, -20.7462, 1.1" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-9.6882, -4.68139, -17.7938, 1.62", "-10.6417, -3.98826, -17.3985, 0.59", "-11.35, -3.44966, -17.0949, 0.59", "-12.0323, -2.90878, -16.8104, 0.59", "-12.7984, -2.28799, -16.5119, 0.59", "-13.498, -1.70392, -16.2698, 0.59", "-14.4932, -0.85097, -15.9879, 0.59", "-15.2652, -0.138254, -15.8308, 0.59", "-16.0495, 0.570394, -15.7154, 0.59", "-16.7159, 1.12923, -15.6618, 0.59", "-17.8442, 1.98048, -15.6274, 0.59", "-18.6805, 2.54841, -15.6233, 0.51", "-19.8574, 3.21381, -15.6218, 0.51", "-20.9513, 3.70286, -15.5873, 0.59", "-21.756, 3.98397, -15.5334, 0.59", "-22.6756, 4.24396, -15.4229, 0.59", "-23.7213, 4.47571, -15.2568, 0.51", "-25.1367, 4.72765, -14.9656, 0.51", "-25.9762, 4.8465, -14.7659, 0.51", "-26.7548, 4.94314, -14.6047, 0.51", "-28.0393, 5.10989, -14.3466, 0.66" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-0.220862, 7.81065, -25.6752, 1.18", "-0.486667, 8.68995, -25.6578, 0.73", "-0.724101, 9.27826, -25.6342, 0.95", "-1.06468, 10.0593, -25.5567, 0.66", "-1.29573, 10.5844, -25.5431, 0.66", "-1.61615, 11.3608, -25.5892, 0.66", "-1.95127, 12.2546, -25.7406, 0.88", "-2.26487, 13.2494, -26.0549, 0.66", "-2.46263, 14.3399, -26.5532, 0.51", "-2.45168, 15.5231, -27.2717, 1.03", "-2.22468, 16.4709, -27.927, 1.47", "-1.72614, 17.488, -28.6872, 1.18", "-1.03072, 18.5571, -29.5134, 1.18", "-0.426132, 19.3629, -30.1266, 0.95", "0.428832, 20.4332, -30.8994, 0.66", "1.23175, 21.4356, -31.5053, 0.66", "2.11274, 22.5506, -32.0847, 0.59", "2.48056, 23.0245, -32.2924, 0.44", "2.96735, 23.6579, -32.5602, 0.51", "3.39699, 24.23, -32.8068, 0.51", "3.96021, 24.9886, -33.1731, 0.59", "4.40273, 25.5726, -33.5117, 0.59", "4.90836, 26.1955, -33.9109, 0.59", "5.37956, 26.7126, -34.2852, 0.59", "5.75778, 27.1116, -34.5819, 0.59", "6.48312, 27.9148, -35.1746, 0.59", "7.04562, 28.6166, -35.6895, 0.51", "7.57503, 29.4627, -36.2952, 0.81", "8.09009, 30.6112, -37.0984, 0.51", "8.23985, 31.127, -37.4576, 0.66", "8.32969, 31.5512, -37.75, 0.66", "8.43239, 32.0008, -38.0368, 0.66", "8.66453, 32.7846, -38.5127, 0.44", "8.87111, 33.2855, -38.8071, 0.44", "9.52892, 34.3272, -39.3526, 0.51", "10.2504, 35.0689, -39.715, 0.37", "11.554, 36.0166, -40.1395, 0.37", "12.0888, 36.3305, -40.267, 0.37", "12.6134, 36.6065, -40.3637, 0.37", "13.6202, 37.1033, -40.5096, 0.37", "14.1114, 37.3334, -40.5712, 0.37", "14.3717, 37.6805, -40.7018, 0.37", "14.4551, 38.2401, -40.9191, 0.37", "14.5599, 39.3536, -41.3148, 0.37", "14.5988, 39.958, -41.5157, 0.29", "14.6405, 40.4979, -41.6978, 0.29", "14.8159, 41.9592, -42.1891, 0.29", "14.974, 42.6634, -42.4177, 0.29", "15.2572, 43.3917, -42.6748, 0.73", "15.4726, 43.7805, -42.8379, 0.73", "16.064, 44.6647, -43.2706, 0.51", "16.4959, 45.2713, -43.62, 0.51", "17.0794, 46.0698, -44.2183, 0.51", "17.5319, 46.7584, -44.8467, 0.51", "17.8064, 47.3674, -45.5464, 0.51", "17.8029, 47.661, -45.9808, 0.51", "17.4502, 48.0929, -46.7982, 0.51", "16.8788, 48.4991, -47.6852, 0.37", "16.3624, 48.7732, -48.354, 0.37", "15.827, 49.0297, -48.9601, 0.37", "15.57, 49.181, -49.2495, 0.37", "15.4461, 49.4046, -49.4655, 0.37", "15.5419, 49.9553, -49.6574, 0.37", "15.6818, 50.5332, -49.7939, 0.37", "15.9001, 51.3315, -49.9375, 0.51", "16.1824, 52.3251, -50.0611, 0.51", "16.528, 53.5332, -50.2031, 0.51", "17.0799, 55.5607, -50.4829, 0.44", "17.2955, 56.4739, -50.6287, 0.44", "17.6675, 58.2954, -50.9905, 0.44", "17.7916, 58.8779, -51.1516, 0.44", "17.9986, 59.7045, -51.4921, 0.44", "18.177, 60.3784, -51.9486, 0.44", "18.3002, 60.8845, -52.4845, 0.44", "18.4494, 61.3207, -53.074, 0.44", "18.7739, 61.8514, -53.981, 0.44", "19.0482, 62.1423, -54.4244, 0.44", "19.6009, 62.609, -54.9582, 0.44", "20.2797, 63.148, -55.4276, 0.44", "20.7194, 63.5468, -55.687, 0.44", "21.4272, 64.3464, -56.0893, 0.44", "22.0007, 65.2297, -56.449, 0.44", "22.2832, 65.7682, -56.64, 0.44", "22.5736, 66.4091, -56.8426, 0.44", "22.972, 67.6036, -57.1774, 0.44", "23.2015, 68.7028, -57.4545, 0.44", "23.329, 69.7235, -57.7659, 0.44", "23.4511, 70.8265, -58.2093, 0.44", "23.5505, 71.5314, -58.5608, 0.29", "23.6727, 72.0682, -58.8838, 0.29", "23.9555, 72.8554, -59.3974, 0.73", "24.6759, 74.3264, -60.4166, 0.44", "25.3194, 75.3664, -61.1846, 0.44", "25.6757, 75.8487, -61.5441, 0.44", "26.2163, 76.454, -61.9771, 0.44", "27.0997, 77.2798, -62.551, 0.44", "27.8344, 77.8682, -62.9209, 0.44", "28.463, 78.3465, -63.1799, 0.44", "29.3011, 78.9684, -63.5338, 0.44", "30.2429, 79.6977, -63.974, 0.44", "31.2632, 80.5711, -64.5041, 0.44", "31.952, 81.2741, -64.9275, 0.44", "32.3188, 81.7126, -65.1349, 0.44", "32.8538, 82.4514, -65.4111, 0.37", "33.4007, 83.2824, -65.648, 0.37", "33.8866, 84.0917, -65.8239, 0.37", "34.7662, 85.6445, -66.105, 0.29", "35.24, 86.5269, -66.2912, 0.29", "35.5156, 87.017, -66.4158, 0.29", "36.2898, 88.2727, -66.7917, 0.29", "36.7295, 88.8894, -67.0229, 0.29", "37.2182, 89.5421, -67.276, 0.29", "37.9539, 90.5008, -67.6622, 0.37", "38.3809, 91.0643, -67.9076, 0.37", "39.0668, 91.9811, -68.3254, 0.22", "39.7116, 92.8301, -68.7209, 0.22", "40.3546, 93.6283, -69.081, 0.22", "40.9183, 94.272, -69.3673, 0.22", "41.4379, 94.8335, -69.6193, 0.22", "42.2007, 95.6981, -70.0093, 0.22", "42.6273, 96.2158, -70.237, 0.22", "43.0479, 96.7434, -70.4361, 0.22", "43.4955, 97.3293, -70.6521, 0.22", "44.174, 98.2433, -70.9471, 0.22", "44.6563, 98.8644, -71.1352, 0.22", "45.6505, 100.038, -71.5026, 0.22", "46.7522, 101.201, -71.9165, 0.22", "47.3128, 101.728, -72.1474, 0.44", "47.8047, 102.171, -72.3663, 0.29", "48.701, 102.968, -72.8131, 0.29", "49.2754, 103.493, -73.2178, 0.29", "49.4642, 103.688, -73.4022, 0.29", "49.877, 104.172, -73.876, 0.29", "50.3037, 104.686, -74.3429, 0.29", "50.7235, 105.216, -74.7923, 0.29", "51.51, 106.315, -75.6401, 0.29", "51.962, 106.969, -76.102, 0.29", "52.481, 107.78, -76.6771, 0.29", "52.9725, 108.621, -77.2952, 0.29", "53.3533, 109.318, -77.8145, 0.29", "53.9285, 110.452, -78.6467, 0.29", "54.2002, 111.067, -79.0793, 0.29", "54.6594, 112.336, -79.9679, 0.29", "55.0456, 113.667, -80.88, 0.29", "55.2081, 114.266, -81.2823, 0.15", "55.3988, 114.925, -81.7209, 0.15", "55.5794, 115.465, -82.081, 0.22", "56.0811, 116.859, -83.0045, 0.22", "56.474, 118.003, -83.6966, 0.22", "56.7032, 118.978, -84.2158, 0.22", "56.8191, 119.795, -84.6243, 0.22", "56.8603, 120.949, -85.1658, 0.22", "56.8331, 121.749, -85.5448, 0.22", "56.7376, 122.881, -86.1159, 0.22", "56.5553, 124.734, -87.1194, 0.22", "56.511, 125.212, -87.3923, 0.22", "56.4439, 126.454, -88.1247, 0.22", "56.4622, 127.452, -88.7281, 0.22", "56.5482, 128.254, -89.2118, 0.22", "56.8036, 129.665, -90.0517, 0.22", "57.0473, 130.699, -90.6237, 0.22", "57.3035, 131.888, -91.1852, 0.22", "57.6325, 133.355, -91.7335, 0.22", "57.9336, 134.823, -92.114, 0.22", "58.1066, 135.765, -92.2705, 0.22", "58.2691, 136.613, -92.3711, 0.22", "58.5105, 137.671, -92.5033, 0.22", "58.8445, 139.073, -92.7076, 0.22", "59.1503, 140.311, -92.9329, 0.29", "59.5801, 141.946, -93.3307, 0.22", "59.9843, 143.462, -93.7838, 0.22", "60.3473, 144.846, -94.2885, 0.22", "60.5613, 145.688, -94.6466, 0.22", "60.6543, 146.211, -94.9103, 0.22", "60.7048, 146.724, -95.209, 0.22", "60.7022, 147.299, -95.554, 0.22", "60.6334, 147.948, -95.9032, 0.22", "60.519, 148.568, -96.2446, 0.22", "60.4359, 149.032, -96.5433, 0.22", "60.2999, 149.597, -96.9211, 0.22", "60.216, 149.851, -97.1056, 0.22", "59.8438, 150.729, -97.7834, 0.22", "59.3054, 151.698, -98.5859, 0.22", "58.6678, 152.744, -99.4597, 0.22", "57.8691, 154.142, -100.537, 0.22", "57.34, 155.053, -101.189, 0.22", "56.9945, 155.608, -101.562, 0.22", "56.2902, 156.673, -102.215, 0.22", "55.8445, 157.386, -102.617, 0.22", "55.049, 158.677, -103.318, 0.22", "54.6517, 159.364, -103.692, 0.22", "54.1723, 160.256, -104.183, 0.22", "53.8249, 160.963, -104.593, 0.22", "53.4295, 161.813, -105.11, 0.22", "53.3248, 162.054, -105.307, 0.22", "53.1682, 162.519, -105.76, 0.22", "53.0144, 163.191, -106.443, 0.22", "52.8792, 164.115, -107.408, 0.22", "52.857, 164.711, -108.097, 0.22", "52.9686, 166.185, -109.968, 0.22", "53.0591, 166.635, -110.628, 0.22", "53.2173, 167.218, -111.524, 0.22", "53.4314, 167.84, -112.533, 0.22", "53.7911, 168.721, -114.126, 0.22", "54.1005, 169.382, -115.411, 0.22", "54.5229, 170.18, -117.014, 0.22" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-0.220862, 7.81065, -25.6752, 1.18", "-0.115091, 7.89121, -26.4231, 0.37", "-0.0668168, 8.06783, -27.2046, 0.29", "0.0177744, 8.34708, -28.2939, 0.29", "0.123977, 8.56972, -29.2056, 0.29", "0.287196, 8.74823, -30.0792, 0.29", "0.670281, 8.89651, -31.3284, 0.29", "0.834052, 8.92506, -31.6508, 0.29", "1.08006, 8.98846, -32.1618, 0.29", "1.4921, 8.96096, -32.6527, 0.29", "2.168, 8.69112, -32.9605, 0.29", "3.60589, 8.02601, -33.39, 0.29", "4.39452, 7.61772, -33.5468, 0.15" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-17.1164, 3.67581, 2.55182, 1.91", "-17.5855, 3.38886, 3.29658, 1.4", "-18.2417, 2.98741, 4.33848, 1.4", "-19.5031, 2.21577, 6.34118, 1.47", "-19.78, 2.04636, 6.78087, 1.47" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-17.1164, 3.67581, 2.55182, 1.91", "-19.009, 2.3877, 3.04196, 0.88", "-21.9824, 0.807652, 3.69197, 0.88", "-22.9871, 0.428153, 3.8577, 1.03", "-24.1867, 0.0257752, 4.01074, 0.59", "-24.9587, -0.225594, 4.07995, 0.73", "-25.9377, -0.431648, 4.13417, 0.88", "-27.2304, -0.687027, 4.09677, 0.88", "-28.0275, -0.899468, 3.9787, 0.51", "-28.7392, -1.18596, 3.81075, 0.51", "-29.6833, -1.68259, 3.54023, 0.73", "-30.3174, -2.08823, 3.33385, 0.81", "-31.1078, -2.66762, 3.07986, 0.81", "-32.3028, -3.66014, 2.67017, 0.81", "-33.1862, -4.42914, 2.36805, 0.81", "-34.0427, -5.16338, 2.08048, 0.81", "-35.0684, -6.02016, 1.73379, 1.25" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "11.7344, 15.5593, 2.29618, 1.18", "12.2241, 16.3156, 2.20523, 0.44", "12.6781, 17.0803, 2.11169, 0.44", "13.1572, 17.9485, 2.01291, 0.51", "13.7561, 19.0625, 1.94584, 0.51", "14.1906, 19.8707, 1.89719, 0.51", "14.8181, 21.0379, 1.82692, 0.51", "15.1135, 21.6171, 1.79416, 0.51", "15.4711, 22.358, 1.77103, 0.66", "15.8656, 23.2437, 1.76394, 0.81" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "11.7344, 15.5593, 2.29618, 1.18", "11.9586, 16.6713, 2.15866, 0.81", "12.0625, 17.1869, 2.09491, 0.81", "12.2667, 18.1999, 1.96964, 1.18", "12.3435, 18.5806, 1.92257, 1.18", "12.5104, 19.4087, 1.82017, 1.18", "12.7317, 20.5066, 1.68441, 0.88" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "1.43479, 35.8984, 0.0, 0.265169", "2.18436, 50.8796, 0.0, 0.265169", "2.93392, 65.8609, 0.0, 0.265169" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_24",
    "id" : "apic_24",
    "points3d" : [ "-2.48993, -47.02, 0.460903, 0.81", "-1.45078, -46.8533, 1.02014, 0.81", "-0.542803, -46.77, 1.46804, 0.66", "0.449126, -46.7551, 1.92294, 0.66", "1.22309, -46.8183, 2.29544, 0.66", "1.84452, -46.9315, 2.60714, 0.51", "2.45073, -47.1189, 2.93335, 0.37", "3.02009, -47.4555, 3.23601, 0.37", "3.4243, -47.9134, 3.47867, 0.37", "3.8433, -48.7286, 3.77976, 0.44", "4.10687, -49.3133, 3.93349, 0.44", "4.50361, -50.1917, 4.07311, 0.44", "4.7011, -50.6232, 4.10827, 0.44", "4.89247, -51.0324, 4.13099, 0.51", "5.31915, -51.969, 4.19012, 0.51", "5.94441, -53.3302, 4.27283, 0.44", "6.44068, -54.3884, 4.34721, 0.37", "7.0584, -55.5874, 4.44162, 0.37", "7.76588, -56.9354, 4.58826, 0.37", "8.17663, -57.7391, 4.69747, 0.37", "8.32627, -58.0412, 4.74366, 0.81", "8.9037, -59.148, 4.92481, 0.51", "9.70385, -60.4031, 5.14462, 0.37", "10.2345, -61.0111, 5.24726, 0.37", "10.7327, -61.4127, 5.29517, 0.37", "11.3857, -61.7982, 5.33296, 0.37", "12.0381, -62.109, 5.37051, 0.37", "12.5903, -62.3258, 5.41194, 0.37", "13.359, -62.6699, 5.51383, 0.37", "13.5874, -62.827, 5.57817, 0.37", "13.8207, -63.0643, 5.70911, 0.37", "14.3536, -63.5871, 6.00418, 0.29", "15.1479, -64.2617, 6.38676, 0.29", "15.7977, -64.7436, 6.65901, 0.29", "16.6077, -65.2877, 6.96575, 0.37", "17.6892, -65.9711, 7.33954, 0.37", "18.8786, -66.6815, 7.73524, 1.03", "19.7775, -67.1738, 8.0129, 0.37", "20.3675, -67.4653, 8.17145, 0.37", "20.9342, -67.7268, 8.27782, 0.37", "22.2954, -68.2968, 8.45609, 0.37", "23.3684, -68.7021, 8.54891, 0.59", "24.2296, -68.9963, 8.60423, 0.29", "24.9607, -69.1833, 8.62678, 0.95", "26.6645, -69.4062, 8.60707, 0.29", "27.5089, -69.402, 8.5784, 0.29", "28.0058, -69.3471, 8.55591, 0.81", "28.7936, -69.2341, 8.53549, 0.95", "29.8137, -69.078, 8.56608, 0.66", "31.0834, -68.8872, 8.68668, 1.03", "32.2896, -68.6642, 8.88606, 0.37", "33.1733, -68.4904, 9.08755, 0.51", "34.1646, -68.278, 9.38948, 0.51", "34.995, -68.0893, 9.70127, 0.51", "35.3446, -68.0204, 9.83652, 0.73", "36.1011, -67.9236, 10.1026, 0.95", "37.2476, -67.8771, 10.3815, 0.59", "38.5032, -67.8986, 10.4844, 0.15", "39.1681, -67.9203, 10.4762, 0.22", "40.4086, -67.967, 10.4066, 0.44", "41.6195, -67.9783, 10.351, 0.59", "42.4964, -67.9861, 10.3163, 0.37", "43.6144, -67.9861, 10.2697, 0.37", "44.796, -68.0205, 10.2778, 0.66", "46.2145, -68.1015, 10.3944, 0.44", "47.4, -68.1184, 10.5899, 0.59", "48.0471, -68.1135, 10.7427, 0.59", "48.6788, -68.139, 10.9307, 0.59", "49.824, -68.3135, 11.363, 0.37", "50.3868, -68.5438, 11.5722, 0.37", "60.4202, -71.4286, 14.5387, 0.37", "69.4812, -75.4603, 18.9894, 0.37", "79.019, -77.2643, 23.8191, 0.37", "87.5992, -80.8019, 29.463, 0.37" ],
    "parent" : "apic_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_23",
    "id" : "apic_23",
    "points3d" : [ "-2.48993, -47.02, 0.460903, 0.81", "-2.45233, -46.9117, 1.03248, 0.59", "-2.38795, -46.8194, 1.66032, 0.59", "-2.31046, -46.7698, 2.29078, 0.59", "-2.24474, -46.7467, 2.898, 0.59", "-2.23724, -46.7699, 3.57086, 0.73", "-2.28488, -46.8254, 3.94025, 0.73", "-2.37801, -46.9387, 4.17874, 0.73", "-2.54764, -47.2261, 4.3772, 0.73", "-2.64771, -47.4447, 4.4778, 0.73", "-3.11392, -48.5133, 4.91128, 0.51", "-3.35527, -49.0939, 5.12565, 0.51", "-3.52778, -49.583, 5.30812, 0.29", "-3.74746, -50.4089, 5.64328, 0.44", "-3.84193, -50.9368, 5.89314, 0.44", "-3.88469, -51.4711, 6.21044, 0.66", "-3.88075, -51.6339, 6.33605, 0.66", "-3.91682, -51.9267, 6.62846, 0.66", "-4.00706, -52.0904, 6.8125, 0.66", "-4.16209, -52.2596, 6.9992, 0.66", "-4.50161, -52.6157, 7.34685, 0.66", "-4.78635, -52.9828, 7.63586, 0.51", "-5.03752, -53.4268, 7.92866, 0.66", "-5.17734, -53.9728, 8.16913, 0.37", "-5.18044, -54.2716, 8.24274, 0.37", "-5.16349, -54.6832, 8.32211, 0.37", "-5.1229, -55.3746, 8.45088, 0.22", "-5.11508, -55.6499, 8.5152, 0.22", "-5.13999, -56.05, 8.63919, 0.44", "-5.39432, -57.263, 9.18218, 0.51", "-5.66864, -58.0139, 9.60398, 0.29", "-5.88666, -58.3985, 9.89921, 0.51", "-6.19512, -58.7663, 10.3219, 0.44", "-6.55374, -59.0085, 10.8839, 0.44", "-6.8886, -59.03, 11.5377, 0.88", "-7.05348, -58.8973, 11.976, 1.1", "-7.24949, -58.5868, 12.6278, 1.1", "-7.41225, -58.2034, 13.2808, 0.73", "-7.51924, -57.9454, 13.713, 0.73", "-7.64119, -57.725, 14.1211, 0.73", "-7.79319, -57.6067, 14.4421, 0.73", "-8.03183, -57.5643, 14.7448, 0.95", "-8.15534, -57.5728, 14.8361, 0.95", "-9.17531, -57.7386, 15.3476, 0.51", "-9.93699, -57.8877, 15.6363, 0.51", "-10.5488, -58.0023, 15.8123, 0.29", "-10.9068, -58.0649, 15.8896, 0.37", "-11.4601, -58.1505, 15.9721, 0.37", "-12.0431, -58.2073, 15.998, 0.22", "-12.2452, -58.2186, 15.9889, 0.22", "-12.7018, -58.2545, 15.9558, 0.22", "-13.0072, -58.3067, 15.9249, 0.22", "-13.5225, -58.4348, 15.8768, 0.22", "-14.3229, -58.6815, 15.8087, 0.22", "-15.1439, -58.9912, 15.7464, 0.88", "-15.5414, -59.1833, 15.7241, 0.88", "-16.0689, -59.5821, 15.7114, 0.22", "-16.3363, -59.8337, 15.7205, 0.22", "-16.5139, -60.0224, 15.7348, 0.22", "-16.6989, -60.2058, 15.7581, 0.22", "-17.0919, -60.5398, 15.8106, 0.22", "-18.3087, -61.4165, 16.0131, 0.22", "-18.9549, -61.8246, 16.1358, 1.03", "-19.3244, -62.0554, 16.2144, 1.03", "-20.2592, -62.5972, 16.4199, 0.22", "-20.8276, -62.8785, 16.5472, 0.22", "-21.3798, -63.0847, 16.6754, 0.22", "-21.8017, -63.1667, 16.7829, 0.22", "-22.5298, -63.3078, 16.9764, 0.07", "-28.9458, -63.6014, 19.72, 0.07", "-35.3833, -63.5233, 22.4265, 0.07", "-41.588, -63.6105, 25.6308, 0.07", "-47.4225, -64.3892, 29.3934, 0.07", "-52.9851, -63.9175, 33.5906, 0.07", "-58.3328, -62.4022, 37.8314, 0.07", "-63.4168, -60.2037, 42.1113, 0.07", "-68.1391, -58.9444, 47.107, 0.07", "-73.0084, -56.8539, 51.6782, 0.07", "-77.4575, -55.4102, 56.8732, 0.07", "-82.4946, -54.6964, 61.6599, 0.07", "-87.9166, -53.8458, 65.9823, 0.07", "-93.3126, -54.0563, 70.4112, 0.07", "-97.7742, -53.038, 75.6909, 0.07", "-102.508, -51.296, 80.5347, 0.07", "-107.899, -49.3141, 84.5306, 0.07", "-112.794, -48.3088, 89.4141, 0.07" ],
    "parent" : "apic_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_21",
    "id" : "apic_21",
    "points3d" : [ "-14.2709, -58.0922, -12.3962, 2.06", "-14.6786, -58.7762, -13.2364, 0.73", "-15.2477, -59.9718, -14.6723, 0.73", "-15.4472, -60.5665, -15.3647, 0.73", "-15.5497, -61.1899, -15.9964, 0.73", "-15.4958, -62.0543, -16.6481, 0.73", "-15.3563, -62.7752, -17.0133, 0.15", "-15.1558, -63.3396, -17.11, 0.15", "-14.9021, -64.0156, -17.1043, 0.59", "-14.416, -65.3515, -16.9662, 0.73", "-13.858, -66.8887, -16.7449, 0.88", "-13.4858, -68.086, -16.5728, 1.03", "-13.1137, -69.6476, -16.3892, 1.03", "-12.8811, -71.0653, -16.2737, 0.51", "-12.788, -72.1589, -16.2261, 0.51", "-12.7986, -73.3243, -16.24, 0.29", "-12.8894, -74.7247, -16.2844, 0.37", "-12.9763, -75.8108, -16.311, 0.37", "-13.0442, -76.7992, -16.3206, 0.37", "-13.0878, -77.806, -16.3224, 0.44", "-13.0962, -80.1882, -16.3556, 0.59", "-13.0352, -81.3656, -16.387, 0.44", "-12.8221, -83.054, -16.4789, 0.44", "-12.5046, -84.7102, -16.6764, 0.44", "-12.0936, -86.2705, -16.9537, 0.44", "-11.4955, -88.1315, -17.4356, 0.51", "-10.9952, -89.4991, -17.9337, 0.29", "-10.6521, -90.4531, -18.3306, 0.59", "-10.301, -91.484, -18.7832, 0.59", "-10.0836, -92.16, -19.0344, 0.59", "-9.70335, -93.3236, -19.2667, 0.59", "-9.35044, -94.4765, -19.2501, 0.59", "-8.99858, -95.7501, -19.0839, 0.95", "-8.75953, -96.6448, -18.9546, 0.44", "-8.37179, -97.9553, -18.8324, 0.51", "-7.83268, -99.5814, -18.8344, 0.29", "-7.39863, -100.697, -18.9576, 0.37", "-6.87971, -101.922, -19.2533, 0.44", "-6.38248, -103.131, -19.6994, 0.66", "-5.89292, -104.508, -20.2864, 0.51", "-5.73198, -105.151, -20.574, 0.51", "-5.63202, -105.96, -20.9294, 0.51", "-5.62022, -106.778, -21.2462, 0.51", "-5.75081, -108.381, -21.7808, 0.51", "-6.05015, -109.991, -22.2376, 0.51", "-6.51208, -111.534, -22.6237, 0.51", "-7.16234, -113.188, -23.0145, 1.18", "-7.82308, -114.595, -23.309, 0.66", "-8.23561, -115.379, -23.4645, 0.29", "-8.57897, -115.989, -23.5611, 0.59", "-9.1559, -117.039, -23.6561, 0.59", "-9.48121, -117.763, -23.6474, 0.59", "-9.75624, -118.666, -23.5389, 0.59", "-9.89723, -119.244, -23.4544, 0.37", "-10.1382, -120.369, -23.3369, 0.37", "-10.2988, -121.142, -23.3265, 0.59", "-10.5269, -122.154, -23.3772, 0.59", "-10.6898, -122.821, -23.4504, 0.59", "-11.1409, -124.58, -23.7376, 0.29", "-11.4702, -125.886, -23.9895, 0.37", "-11.8197, -127.32, -24.3063, 0.73", "-12.1825, -129.044, -24.6876, 0.59", "-12.3225, -129.863, -24.8656, 0.51", "-12.4102, -130.64, -25.0372, 0.66", "-12.4232, -131.619, -25.2728, 0.66", "-12.3574, -132.821, -25.5674, 0.22", "-12.2663, -133.641, -25.7608, 0.66", "-12.1458, -134.541, -26.0072, 0.66", "-11.9635, -135.812, -26.3378, 0.29", "-11.718, -136.809, -26.5868, 0.37", "-11.5034, -137.39, -26.7202, 0.37", "-11.1789, -138.07, -26.8531, 0.37", "-10.7317, -138.919, -26.9848, 0.37", "-10.2411, -139.834, -27.0873, 0.37", "-9.22987, -141.971, -27.2261, 0.37", "-8.72176, -143.221, -27.2736, 0.37", "-8.27351, -144.472, -27.3175, 0.44", "-7.8484, -145.79, -27.3611, 0.37", "-7.64049, -146.486, -27.3864, 0.59", "-7.26152, -147.975, -27.4265, 0.51", "-7.13295, -148.583, -27.404, 0.51", "-6.94949, -149.415, -27.3826, 0.51", "-6.68149, -150.469, -27.3702, 0.51", "-6.22184, -152.105, -27.3988, 0.37", "-5.8627, -153.245, -27.4649, 0.59", "-5.17287, -155.231, -27.6536, 0.59", "-4.75111, -156.71, -27.8698, 0.59", "-4.6331, -157.297, -27.982, 0.59", "-4.48265, -158.632, -28.2494, 0.66", "-4.44228, -159.965, -28.5528, 1.4", "-4.5066, -161.161, -28.8736, 1.62", "-4.75787, -163.167, -29.4745, 0.29", "-4.9794, -164.358, -29.8119, 0.88", "-5.33645, -165.738, -30.2224, 0.37", "-5.65971, -166.701, -30.523, 0.81", "-6.39125, -168.479, -31.0841, 0.44", "-6.83351, -169.467, -31.3878, 0.59", "-7.26064, -170.388, -31.6469, 0.59", "-7.71313, -171.297, -31.875, 0.59", "-8.54101, -172.827, -32.2244, 0.51", "-9.20243, -174.021, -32.391, 0.37", "-9.84554, -175.158, -32.472, 0.44", "-10.4365, -176.197, -32.5017, 0.44", "-11.1342, -177.493, -32.5364, 0.44", "-11.6424, -178.498, -32.5635, 0.95", "-12.1896, -179.66, -32.6164, 0.95", "-12.6441, -180.745, -32.7172, 0.59", "-12.9214, -181.614, -32.8648, 0.51", "-13.0988, -182.814, -33.2037, 0.22", "-13.0913, -183.243, -33.3694, 0.22", "-13.0333, -183.82, -33.6477, 0.29", "-12.99, -184.181, -33.85, 0.29", "-12.9506, -185.128, -34.3737, 0.29", "-13.0371, -185.961, -34.8294, 0.37", "-13.2581, -186.887, -35.251, 0.44", "-13.5034, -187.696, -35.5456, 0.44", "-13.7233, -188.252, -35.6964, 0.44", "-14.2599, -189.433, -35.9518, 0.44", "-14.51, -189.981, -36.0359, 0.44", "-15.1244, -191.631, -36.2229, 0.66", "-15.3795, -192.557, -36.3339, 0.44", "-15.5742, -193.848, -36.5074, 0.44", "-15.5786, -194.326, -36.6043, 0.81", "-15.4357, -195.573, -36.9187, 1.03", "-15.0972, -197.233, -37.418, 0.37", "-14.8072, -198.271, -37.798, 0.07", "-14.5569, -199.045, -38.1051, 1.1", "-14.1606, -200.226, -38.57, 1.4", "-13.8845, -201.121, -38.9049, 0.29", "-13.6719, -201.921, -39.1852, 0.88", "-13.4636, -203.016, -39.5173, 0.66", "-13.376, -203.754, -39.6924, 0.51", "-13.295, -204.974, -39.9592, 0.44", "-13.2815, -205.654, -40.0904, 0.44", "-13.2739, -206.642, -40.2815, 0.59", "-13.2815, -208.373, -40.5982, 0.81", "-13.2902, -210.269, -40.9394, 0.44", "-13.2924, -210.979, -41.0395, 0.29", "-13.2921, -211.63, -41.1033, 0.29", "-13.2673, -212.358, -41.1352, 0.29", "-13.1397, -213.504, -41.0855, 0.88", "-12.8013, -215.157, -40.8498, 0.37", "-12.4505, -216.334, -40.5734, 0.37", "-12.3122, -216.715, -40.467, 0.37", "-11.7793, -217.904, -40.0834, 0.51", "-11.0962, -219.205, -39.6216, 0.29", "-10.6924, -219.842, -39.3767, 0.81", "-10.0527, -220.646, -39.0425, 0.29", "-9.43137, -221.328, -38.7819, 0.59", "-8.5301, -222.247, -38.4399, 0.15", "-7.93003, -222.822, -38.2403, 0.29", "-7.3777, -223.289, -38.0903, 0.29", "-6.49583, -223.942, -37.8489, 0.15", "-6.15269, -224.181, -37.7497, 0.15", "-5.78987, -224.411, -37.6068, 0.15", "-5.15632, -224.786, -37.2968, 0.37", "-4.52798, -225.168, -36.9202, 0.37", "-3.82082, -225.611, -36.4443, 0.66", "-3.42888, -225.864, -36.1521, 0.66", "-2.45793, -226.477, -35.4318, 0.66", "-1.14555, -227.287, -34.4655, 0.29", "-0.489551, -227.688, -33.9842, 0.29", "0.16861, -228.093, -33.4775, 0.88", "1.09277, -228.669, -32.7262, 0.59", "1.61939, -228.976, -32.2429, 0.59", "2.06606, -229.23, -31.7709, 1.18", "2.42393, -229.414, -31.3048, 1.18", "3.17309, -229.724, -30.1827, 1.18", "3.39547, -229.793, -29.7751, 1.18", "3.73903, -229.826, -28.9354, 0.66", "3.8158, -229.819, -28.7089, 0.66", "3.94799, -229.754, -28.1822, 0.66", "3.98778, -229.704, -27.9173, 0.66" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "-14.2709, -58.0922, -12.3962, 2.06", "-15.3988, -60.2539, -14.2168, 2.06", "-15.9527, -61.185, -14.869, 2.06", "-16.5757, -62.1635, -15.4703, 2.06", "-17.4009, -63.4765, -16.1463, 1.84", "-18.4928, -65.2889, -16.9261, 1.54", "-19.5606, -67.1386, -17.6358, 1.54", "-20.4858, -68.8426, -18.0876, 1.4", "-20.9079, -69.6429, -18.271, 1.4", "-21.9485, -71.6656, -18.6685, 1.47", "-23.0739, -74.0073, -19.055, 1.47", "-23.4832, -74.9524, -19.1937, 1.47", "-23.7866, -75.7378, -19.3272, 1.47", "-24.3915, -77.3423, -19.694, 1.47", "-24.7236, -78.1241, -19.9227, 1.47", "-25.8925, -80.4383, -20.6638, 1.25", "-26.7781, -81.9145, -21.1664, 1.32", "-27.6537, -83.1916, -21.6328, 1.47", "-28.6289, -84.4779, -22.1164, 1.47", "-30.01, -86.0947, -22.7376, 1.47", "-31.4281, -87.65, -23.3631, 1.47", "-32.3526, -88.6386, -23.7733, 1.47", "-33.3523, -89.676, -24.1991, 1.47", "-33.966, -90.324, -24.4271, 1.25", "-34.7667, -91.2192, -24.6958, 1.18", "-35.8126, -92.5038, -25.0805, 1.4", "-36.5631, -93.5431, -25.4952, 1.47" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "24.6703, -4.76887, -23.4423, 0.81", "24.8329, -5.77674, -23.5885, 0.51", "25.5289, -7.92321, -23.9401, 0.29", "25.9993, -9.02151, -24.1362, 0.29", "26.3536, -9.83382, -24.3157, 0.29", "26.9045, -11.1598, -24.6236, 0.29", "27.3234, -12.0924, -24.8351, 0.29", "28.1671, -13.7597, -25.2822, 0.29", "28.7017, -14.7081, -25.5711, 0.29", "29.4224, -15.9333, -25.9575, 0.29", "29.9939, -16.8867, -26.2472, 0.22", "30.75, -18.136, -26.7248, 0.22", "31.2258, -18.946, -27.0669, 0.66", "31.7925, -20.0113, -27.5371, 0.22", "32.4329, -21.2854, -28.078, 0.22", "33.2544, -22.9109, -28.7777, 0.22", "34.2251, -24.8965, -29.6547, 0.29", "34.7562, -26.1488, -30.1914, 0.81", "35.252, -27.5075, -30.6715, 0.37", "35.405, -27.9715, -30.8171, 0.37", "35.6741, -28.7546, -31.054, 0.22", "35.9134, -29.3748, -31.2125, 0.22", "36.4275, -30.5562, -31.4036, 0.22", "36.921, -31.6616, -31.6119, 0.22", "37.1769, -32.2671, -31.7333, 0.73", "37.5895, -33.5725, -31.9592, 0.37", "37.7042, -34.0589, -32.0302, 0.37", "37.9141, -34.9724, -32.1545, 0.37", "38.1694, -35.9839, -32.2777, 0.37", "38.3905, -36.7691, -32.3797, 0.37", "39.1349, -39.0791, -32.6314, 0.37", "39.7949, -40.8116, -32.7771, 0.37", "40.3196, -41.9402, -32.8741, 0.37", "40.9325, -43.0168, -32.9506, 0.73", "41.476, -43.8585, -32.9923, 0.44", "41.9044, -44.4858, -33.0068, 0.29", "42.2632, -44.9603, -32.9967, 0.29", "42.755, -45.6149, -32.9362, 0.81", "43.3894, -46.5948, -32.7975, 0.37", "43.8337, -47.3975, -32.6679, 0.37", "44.2486, -48.2446, -32.5344, 0.37", "44.6313, -49.076, -32.421, 0.59", "45.0877, -50.1026, -32.2898, 0.59", "45.6284, -51.3947, -32.1443, 0.29", "46.1009, -52.5834, -32.0366, 0.59", "46.5394, -53.7394, -31.9362, 0.37", "46.8065, -54.5704, -31.873, 0.59", "47.1244, -55.7521, -31.8209, 0.44", "47.3638, -56.7364, -31.8231, 0.51", "47.5243, -57.4104, -31.8407, 0.51", "47.6996, -58.2355, -31.8834, 0.22", "48.0117, -59.8035, -32.0329, 0.59", "48.3379, -61.2259, -32.2356, 0.59", "48.6814, -62.4272, -32.4471, 0.59", "49.0505, -63.5487, -32.6653, 0.44", "49.4955, -64.7673, -32.947, 0.37", "49.9866, -65.9671, -33.2685, 0.37", "50.5537, -67.1548, -33.6445, 1.98", "51.307, -68.5907, -34.1639, 0.22", "51.7266, -69.3866, -34.4795, 0.37", "52.1565, -70.2244, -34.85, 0.66", "52.6652, -71.2887, -35.3514, 0.29", "53.0207, -72.2341, -35.7741, 0.29", "53.2448, -73.1322, -36.1434, 0.73", "53.4364, -74.2338, -36.4932, 0.37", "53.612, -75.1952, -36.6719, 0.59", "53.8259, -76.1686, -36.768, 0.22", "54.0407, -77.0231, -36.8297, 0.37", "54.2849, -77.9551, -36.907, 0.22", "54.8292, -79.8782, -37.1543, 0.22", "55.4228, -81.7819, -37.4997, 0.29", "55.8993, -83.2313, -37.8227, 0.29", "56.2442, -84.2053, -38.0892, 0.29", "56.6757, -85.373, -38.5056, 0.29", "57.0822, -86.4298, -38.9691, 0.81", "57.3847, -87.1997, -39.4036, 0.15", "57.6094, -87.7791, -39.7681, 0.37", "57.806, -88.2407, -40.0548, 0.22", "58.0367, -88.6271, -40.27, 0.22", "58.4133, -89.0749, -40.491, 0.22", "58.7343, -89.3982, -40.6491, 0.22", "59.2842, -89.9296, -40.9441, 0.22", "59.9976, -90.6916, -41.3764, 0.29", "60.726, -91.6288, -41.9011, 0.37", "61.2172, -92.3916, -42.3067, 0.37", "61.5888, -93.0721, -42.6557, 0.37", "61.9152, -93.7211, -42.9504, 0.37", "62.1699, -94.3014, -43.2095, 0.37", "62.4129, -95.0844, -43.5727, 0.37", "62.4574, -95.4343, -43.7338, 0.37", "62.4661, -96.1492, -44.1263, 0.37", "62.4164, -96.8763, -44.5851, 0.37", "62.2704, -97.8477, -45.2999, 0.44", "62.124, -98.7434, -46.0152, 0.44", "62.0272, -99.4652, -46.6347, 0.73", "61.8892, -100.369, -47.5434, 1.1", "61.791, -100.842, -48.0855, 0.95", "61.5688, -101.782, -49.2401, 0.29", "61.4593, -102.452, -49.9905, 0.29", "61.4313, -103.083, -50.5553, 0.66", "61.4206, -103.954, -51.303, 0.44", "61.4105, -104.41, -51.6628, 0.44", "61.3897, -105.148, -52.2441, 0.44", "61.3708, -106.353, -53.1191, 0.44", "61.3527, -107.775, -54.0556, 0.44", "61.3628, -109.106, -54.8587, 0.44", "61.4147, -110.254, -55.4978, 0.44", "61.4634, -111.08, -55.9429, 0.73", "61.6407, -113.153, -57.0661, 0.29", "61.7225, -113.966, -57.4971, 0.51", "61.8701, -115.011, -58.0325, 0.51", "62.0987, -116.338, -58.6237, 0.44", "62.3668, -117.789, -59.2459, 0.37", "62.5574, -118.902, -59.7152, 0.37", "62.6441, -119.532, -59.9715, 0.59", "62.7458, -120.596, -60.3714, 0.29", "62.8235, -121.684, -60.7257, 0.37", "62.9358, -123.145, -61.131, 0.22", "62.9946, -123.89, -61.3188, 0.37", "63.0351, -125.034, -61.5571, 0.07", "63.0461, -125.869, -61.7108, 0.07", "63.0333, -126.279, -61.7585, 0.37", "63.0058, -126.985, -61.8259, 0.22" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "24.6703, -4.76887, -23.4423, 0.81", "24.7001, -4.2814, -23.8383, 0.44", "24.8751, -3.28176, -24.7188, 0.44", "24.9709, -2.63411, -25.2707, 0.44", "25.0795, -1.95409, -25.7898, 0.44", "25.2237, -1.3447, -26.2106, 0.44", "25.3742, -0.763613, -26.5877, 0.44", "25.6742, 0.237372, -27.1988, 0.44", "25.9441, 1.08505, -27.6669, 0.44", "26.2914, 2.28924, -28.2671, 0.66", "26.5881, 3.54806, -28.8366, 0.29", "26.6826, 4.00556, -29.0329, 0.29", "26.8298, 4.70974, -29.2985, 0.51", "27.0595, 5.67778, -29.6141, 0.22", "27.2957, 6.60013, -29.9073, 0.22", "27.4906, 7.40298, -30.1937, 0.22", "27.7951, 8.58673, -30.6582, 0.22", "28.1223, 9.65062, -31.1137, 0.22", "28.6881, 11.2993, -31.8854, 0.22", "28.9994, 12.1906, -32.3271, 0.44", "29.422, 13.3816, -32.9411, 0.37", "29.7369, 14.2291, -33.4351, 0.37", "29.9504, 14.851, -33.8398, 0.37", "30.1157, 15.4369, -34.2697, 0.37", "30.3194, 16.614, -35.1639, 0.37", "30.3699, 17.4813, -35.8002, 0.37", "30.3227, 18.4347, -36.4484, 0.37", "30.213, 19.1691, -36.9356, 0.37", "30.0522, 19.9802, -37.4525, 0.37", "29.8804, 20.9654, -38.0334, 0.37", "29.8131, 21.5619, -38.4399, 0.37", "29.7768, 22.3733, -39.0271, 0.22", "29.7767, 23.0179, -39.4958, 0.15", "29.8019, 24.0105, -40.2543, 0.15", "29.858, 25.5335, -41.427, 0.15", "29.9764, 27.5875, -43.1202, 0.15", "30.0221, 28.2648, -43.7104, 0.15", "30.0715, 29.0085, -44.3876, 0.15", "30.1171, 29.9785, -45.2633, 0.15", "30.1262, 31.0434, -46.1724, 0.37", "30.0819, 32.2307, -47.1892, 0.07", "30.0337, 33.1748, -47.9753, 0.07", "30.0259, 33.9593, -48.6865, 0.07", "30.0537, 34.7691, -49.4507, 0.07", "30.1164, 35.8707, -50.4862, 0.44", "30.1766, 37.273, -51.7809, 0.44", "30.2047, 38.3976, -52.7397, 0.73", "30.2482, 39.1846, -53.3874, 0.37", "30.3352, 39.9161, -53.9694, 0.37", "30.5044, 40.7743, -54.6186, 0.37", "30.6762, 41.3908, -55.0375, 0.37", "30.9099, 42.1287, -55.5033, 0.37", "31.188, 42.929, -56.0442, 0.51", "31.3455, 43.3121, -56.3649, 0.51", "31.5143, 43.6362, -56.738, 0.15", "31.8775, 44.2002, -57.5582, 0.44", "32.4575, 45.02, -58.9782, 0.29", "32.5663, 45.19, -59.2964, 0.29", "32.6938, 45.525, -60.0143, 0.29", "32.7306, 45.8997, -60.8777, 0.73", "32.6934, 46.1017, -61.5075, 0.07", "32.6238, 46.2241, -62.0804, 0.07", "32.4945, 46.2969, -62.7152, 0.81", "31.7477, 46.3359, -65.0428, 0.37", "31.2771, 46.2658, -66.1145, 0.37", "30.3855, 46.0766, -67.7704, 0.37", "30.0189, 45.9962, -68.376, 0.37", "29.4872, 45.9064, -69.2182, 0.37", "28.9013, 45.8433, -70.1712, 0.81", "28.005, 45.9267, -71.6192, 0.37", "27.6663, 46.1328, -72.2847, 0.44", "27.4752, 46.4915, -72.7938, 0.44", "27.2414, 47.5764, -73.8804, 0.44", "27.2177, 48.3146, -74.4752, 0.44", "27.2669, 49.0015, -74.9671, 0.44", "27.4518, 50.4324, -75.7099, 0.44", "27.7838, 52.348, -76.4799, 0.15", "28.1099, 53.9638, -76.9666, 0.15", "28.3642, 55.0383, -77.1117, 0.66", "28.6279, 56.0538, -77.1326, 0.29", "29.392, 58.7636, -76.9662, 0.07", "29.937, 60.6155, -76.725, 0.07", "30.2372, 61.5465, -76.5344, 0.51", "31.0512, 64.0259, -75.923, 0.15", "31.3059, 64.8062, -75.7139, 0.07", "31.7397, 66.0809, -75.3644, 0.15", "31.977, 66.7595, -75.2386, 0.95", "32.3505, 67.8706, -74.9449, 0.07", "32.4886, 68.3242, -74.8446, 0.44" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "46.5751, 3.75746, -6.70271, 0.66", "47.1516, 3.73602, -5.93413, 0.29", "47.6077, 3.51436, -5.24914, 0.29", "48.0659, 3.01258, -4.57383, 0.29", "48.4, 2.4728, -4.1567, 0.29", "48.6781, 1.91603, -3.87715, 0.44", "49.0333, 1.18582, -3.57476, 0.44", "49.4908, -0.0208791, -3.26453, 0.37", "49.8459, -1.17443, -3.05704, 0.66", "50.0573, -1.99581, -2.94966, 0.37", "50.2357, -2.86743, -2.84061, 0.59", "50.3552, -3.46343, -2.76123, 0.59", "50.4128, -3.71439, -2.77501, 0.59", "50.4887, -3.49044, -2.26845, 0.59", "50.6587, -3.27213, -1.71685, 0.59", "50.9246, -2.98372, -1.04409, 0.59", "51.1389, -2.81648, -0.621042, 0.59", "51.7691, -2.50674, 0.408977, 0.59", "52.3783, -2.32067, 1.29879, 0.44", "53.2409, -2.15358, 2.53589, 0.44", "53.558, -2.11557, 3.00711, 0.66", "54.2634, -2.09898, 4.13529, 0.66", "54.6607, -2.14339, 4.92353, 0.66", "54.8409, -2.19944, 5.33786, 0.51", "55.1968, -2.346, 6.17102, 0.66", "55.4453, -2.42962, 6.717, 0.66", "55.689, -2.4862, 7.19063, 0.81", "56.2489, -2.53278, 8.06533, 0.66", "56.9067, -2.56822, 8.89775, 0.66", "57.6788, -2.6054, 9.72852, 0.37", "58.3347, -2.63709, 10.302, 0.37", "59.3176, -2.68819, 11.0541, 0.37", "60.0997, -2.71081, 11.5862, 0.37", "60.6908, -2.70331, 11.9156, 0.44", "61.8871, -2.62774, 12.4419, 1.18", "63.3204, -2.52423, 12.8735, 0.37", "64.3999, -2.45175, 13.0788, 0.37", "65.3054, -2.40023, 13.1554, 1.18", "67.0531, -2.34647, 13.1639, 0.37", "68.2592, -2.32728, 13.0796, 0.37", "69.4307, -2.30343, 12.917, 0.37", "69.8721, -2.295, 12.8322, 0.37", "70.6753, -2.28738, 12.6274, 0.37", "71.6796, -2.32524, 12.3377, 0.73", "72.4756, -2.41835, 12.1118, 0.29", "79.7664, -4.11335, 17.8911, 0.29", "86.3632, -7.33545, 23.8248, 0.29", "92.9532, -12.0685, 28.6341, 0.29", "99.0861, -17.657, 33.1253, 0.29", "105.31, -24.0404, 36.2483, 0.29", "111.207, -30.3354, 40.0895, 0.29" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "46.5751, 3.75746, -6.70271, 0.66", "47.2544, 3.96402, -6.70918, 0.59", "49.1892, 4.53502, -6.68046, 0.59", "50.1064, 4.79663, -6.62342, 0.37", "51.1975, 5.07897, -6.49469, 0.37", "52.6794, 5.4221, -6.2557, 0.37", "53.9805, 5.70565, -6.00427, 0.37", "54.7276, 5.86733, -5.79637, 0.15", "55.5877, 6.06809, -5.47726, 0.22", "56.5862, 6.30443, -5.0742, 0.22", "57.1144, 6.42774, -4.83701, 0.22", "58.134, 6.68088, -4.37512, 0.29", "59.0642, 6.93216, -3.9534, 0.37", "60.0893, 7.21947, -3.50877, 0.37", "61.0392, 7.49705, -3.14488, 0.37", "62.2872, 7.90295, -2.73131, 0.37", "63.4209, 8.29307, -2.36783, 0.29", "64.1485, 8.54728, -2.12184, 0.29", "64.6418, 8.72552, -1.95266, 0.37", "65.4686, 9.04455, -1.67662, 0.88", "66.8911, 9.62447, -1.19098, 0.22", "67.9481, 10.0446, -0.801872, 0.22", "68.923, 10.3805, -0.395271, 0.22", "69.8207, 10.6461, 0.00143379, 0.73", "71.1783, 11.0278, 0.637283, 0.29", "72.6517, 11.3959, 1.36796, 0.29", "73.7284, 11.6178, 1.91202, 0.29", "74.7267, 11.8065, 2.42629, 0.44", "75.4318, 11.9225, 2.83358, 0.44", "76.2951, 12.0739, 3.38959, 0.29", "76.9261, 12.2036, 3.83002, 0.29", "77.5284, 12.3588, 4.25355, 0.81", "78.6056, 12.7228, 4.87463, 0.22", "79.814, 13.2347, 5.4483, 0.88", "81.1206, 13.8567, 5.94892, 0.22", "81.6552, 14.1502, 6.09587, 0.29", "82.2015, 14.5069, 6.19418, 1.18", "84.1499, 15.8931, 6.3705, 0.37", "85.0455, 16.5604, 6.36628, 0.29", "85.8143, 17.183, 6.32446, 0.29", "86.5895, 17.8605, 6.30335, 0.37", "86.9563, 18.2102, 6.32935, 0.81", "87.8451, 19.0972, 6.4784, 0.22", "88.405, 19.6442, 6.63332, 0.37", "89.2471, 20.4539, 6.88638, 0.37", "90.2315, 21.3581, 7.20892, 0.37", "92.4162, 23.1533, 7.99357, 0.15", "93.2174, 23.761, 8.29875, 0.15", "94.013, 24.3334, 8.63235, 0.81", "94.7797, 24.8356, 8.96838, 0.37", "96.0587, 25.5696, 9.58163, 0.22", "97.5098, 26.2998, 10.3215, 0.22", "98.562, 26.7577, 10.8848, 0.44", "99.2825, 27.063, 11.2879, 0.81", "100.108, 27.4246, 11.7778, 0.95", "101.437, 27.9932, 12.6111, 0.07", "101.714, 28.1324, 12.8062, 0.29" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-8.66654, -6.11831, -20.7462, 1.1", "-9.14631, -5.61827, -21.2731, 0.22", "-9.43184, -5.07597, -21.749, 0.22", "-9.62484, -4.62992, -22.1106, 0.22", "-9.75529, -4.26559, -22.3818, 0.29", "-9.97511, -3.55767, -22.8455, 0.29", "-10.1969, -2.7522, -23.3557, 0.29", "-10.3246, -1.92908, -23.879, 0.66", "-10.347, -1.48648, -24.1719, 0.66", "-10.3241, -0.784148, -24.6798, 0.66", "-10.2773, -0.273299, -25.0877, 0.66", "-10.2242, 0.0849341, -25.37, 0.66", "-10.12, 0.684885, -25.8784, 0.66", "-10.0417, 1.18885, -26.2733, 0.66", "-9.97581, 1.85072, -26.7311, 0.59", "-9.92414, 2.87168, -27.3418, 0.44", "-9.88253, 3.47259, -27.7163, 0.44", "-9.81361, 4.2924, -28.2355, 0.44", "-9.76268, 4.91777, -28.6355, 0.59", "-9.73682, 5.35678, -28.9307, 0.59", "-9.72783, 5.79515, -29.2575, 0.59", "-9.79224, 6.91275, -30.199, 0.59", "-9.9241, 7.62956, -30.8074, 0.59", "-10.019, 7.9489, -31.0387, 0.59", "-10.153, 8.35699, -31.2279, 0.59", "-10.3862, 9.11051, -31.4768, 0.44", "-10.5502, 9.78135, -31.656, 0.44", "-10.6742, 10.6386, -31.8173, 0.44", "-10.6851, 11.9027, -32.0948, 0.44", "-10.512, 13.5425, -32.5248, 0.44", "-10.3374, 14.4521, -32.7965, 0.44", "-10.0272, 15.6276, -33.1894, 0.44", "-9.67157, 16.6903, -33.5794, 0.81", "-9.14112, 17.998, -34.0835, 0.22", "-9.03796, 18.2193, -34.1785, 0.22", "-8.8175, 18.7008, -34.4061, 0.22", "-8.65679, 19.2116, -34.6019, 0.22", "-8.60647, 19.791, -34.7904, 0.22", "-8.66523, 20.4559, -35.0119, 0.29", "-8.78335, 21.1476, -35.2121, 0.29", "-8.84787, 21.6069, -35.3619, 0.29", "-8.89423, 22.3603, -35.6372, 0.29", "-8.86069, 22.9888, -35.8906, 0.29", "-8.7646, 23.5232, -36.1282, 0.29", "-8.61732, 23.8802, -36.2936, 0.29", "-8.12523, 24.5388, -36.5627, 0.29", "-7.67787, 25.0252, -36.7375, 0.29", "-7.07645, 25.6266, -36.9236, 0.29", "-6.79104, 25.9311, -37.0159, 0.29", "-6.62471, 26.2015, -37.1198, 0.29", "-6.59202, 26.3557, -37.2172, 0.29", "-6.60203, 26.8789, -37.7452, 0.29", "-6.69433, 27.4361, -38.3881, 0.29", "-6.85638, 28.0066, -39.1109, 0.29", "-7.0146, 28.4384, -39.6745, 0.29", "-7.23944, 29.0975, -40.4707, 0.29", "-7.45385, 29.9649, -41.4179, 0.29", "-7.48341, 30.2857, -41.7209, 0.29", "-7.46961, 30.7352, -42.0587, 0.29", "-7.41909, 31.2358, -42.4103, 0.29", "-7.27771, 32.2358, -43.0254, 0.29", "-7.13099, 33.0045, -43.4928, 0.29", "-6.93734, 33.7376, -43.952, 0.29", "-6.72101, 34.3672, -44.3716, 0.29", "-6.04713, 35.9191, -45.4244, 0.29", "-5.65839, 36.6546, -45.9926, 0.37", "-5.22727, 37.3783, -46.6368, 0.29", "-4.89227, 37.8761, -47.0866, 0.29", "-4.55239, 38.3285, -47.4978, 0.29", "-3.96029, 39.0109, -48.0757, 0.29", "-3.2733, 39.709, -48.64, 0.29", "-2.76712, 40.1471, -49.0607, 0.29", "-2.20151, 40.578, -49.5183, 0.29", "-1.27302, 41.2022, -50.2797, 0.29", "-0.236768, 41.8628, -51.1771, 0.29", "0.587352, 42.368, -51.9142, 0.29", "1.4304, 42.8899, -52.6273, 0.22", "1.75559, 43.1039, -52.8824, 0.22", "2.0152, 43.2947, -53.0824, 0.22", "2.44726, 43.6444, -53.3908, 0.22", "3.21335, 44.2825, -53.8923, 0.22", "3.92875, 44.8455, -54.3009, 0.22", "5.39505, 45.925, -55.0386, 0.22", "6.19936, 46.438, -55.4379, 0.22", "6.39247, 46.5336, -55.5375, 0.37", "7.55402, 46.8816, -56.2098, 0.37", "8.3182, 46.9698, -56.687, 0.22", "8.9264, 46.9602, -57.1023, 0.59", "9.7543, 46.8675, -57.7117, 0.37", "10.705, 46.7344, -58.4244, 0.44", "11.8287, 46.5949, -59.2487, 0.15", "12.5709, 46.5348, -59.7794, 0.15", "13.3842, 46.5157, -60.3298, 0.15", "14.1864, 46.5329, -60.8428, 0.29", "15.0794, 46.6042, -61.3417, 0.37", "15.9661, 46.7652, -61.7419, 0.15", "17.3082, 47.1073, -62.3293, 0.15", "17.9466, 47.2837, -62.6316, 0.15", "18.5477, 47.4519, -62.9343, 0.15", "19.8035, 47.8105, -63.6141, 0.15", "21.9292, 48.4515, -64.921, 0.15", "23.1658, 48.8526, -65.8181, 0.15", "24.0344, 49.1729, -66.562, 0.29", "24.9227, 49.5502, -67.5031, 0.29", "25.7523, 49.9865, -68.6489, 0.29", "26.2836, 50.3853, -69.685, 0.29", "26.6504, 50.7926, -70.7332, 0.15", "27.0478, 51.4411, -72.1903, 0.15", "27.3188, 52.1932, -73.6138, 0.15", "27.4233, 52.8921, -74.7672, 0.15", "27.4266, 53.3255, -75.3911, 0.15", "27.4238, 53.6489, -75.8183, 0.15", "27.4336, 53.9189, -76.1594, 0.15", "27.5023, 54.6133, -77.0016, 0.15", "27.6118, 55.2024, -77.6649, 0.22", "27.9363, 56.2513, -78.7775, 0.37", "28.393, 57.3444, -79.8936, 0.29", "28.6822, 57.93, -80.4721, 0.29", "29.0113, 58.4768, -80.9947, 0.29", "29.5359, 59.2078, -81.677, 0.29", "30.2162, 60.0603, -82.4407, 0.29", "30.8301, 60.8303, -83.0744, 0.29", "31.2727, 61.4181, -83.5134, 0.37", "31.7608, 62.0936, -84.0028, 0.22", "32.2473, 62.7477, -84.5448, 0.15", "32.9909, 63.6508, -85.3554, 0.15", "33.3519, 64.0705, -85.7242, 0.15", "33.9555, 64.7415, -86.2494, 0.15", "34.9213, 65.7974, -87.0554, 0.15", "36.4525, 67.4191, -88.2598, 0.15", "37.4236, 68.3784, -88.9461, 0.15", "38.6687, 69.5181, -89.7411, 0.15" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-8.66654, -6.11831, -20.7462, 1.1", "-9.49459, -6.56966, -20.5903, 0.81", "-10.1535, -6.83753, -20.4928, 0.66", "-10.6482, -7.00108, -20.4347, 0.51", "-11.4332, -7.23088, -20.3942, 0.51", "-12.2085, -7.44717, -20.3772, 0.73", "-13.1135, -7.72702, -20.3789, 0.59", "-13.6251, -7.88408, -20.3977, 0.59", "-14.3029, -8.18146, -20.4567, 0.81", "-15.4295, -8.9429, -20.6312, 0.51", "-15.8854, -9.36349, -20.7518, 0.44", "-16.4597, -9.99652, -20.9479, 0.44", "-16.9336, -10.5776, -21.1525, 0.44", "-18.0993, -11.9722, -21.7083, 0.44", "-18.8799, -12.8555, -22.1008, 0.44", "-19.393, -13.3687, -22.3604, 0.66", "-20.0409, -13.9152, -22.6814, 0.66", "-20.4898, -14.2325, -22.91, 0.66", "-21.3242, -14.7035, -23.379, 0.51", "-21.788, -14.891, -23.6855, 0.51", "-22.5397, -15.137, -24.2591, 0.44", "-23.3243, -15.3539, -24.9006, 0.95", "-24.1636, -15.5252, -25.6172, 0.59", "-24.9317, -15.6073, -26.2314, 0.59", "-25.7396, -15.6589, -26.8825, 0.59", "-26.5136, -15.7075, -27.4826, 0.59", "-27.157, -15.7783, -27.9635, 0.73", "-27.9876, -15.9244, -28.5982, 0.44", "-28.7149, -16.1211, -29.1656, 0.44", "-29.5304, -16.4255, -29.8479, 0.44", "-30.3672, -16.7772, -30.5787, 0.59", "-31.3608, -17.2236, -31.4917, 0.59", "-32.0966, -17.6074, -32.2381, 0.59", "-32.6094, -17.9019, -32.8244, 0.59", "-33.2534, -18.2479, -33.6295, 0.51", "-33.8993, -18.4338, -34.3981, 0.51", "-34.3654, -18.4107, -34.9029, 0.88" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-28.0393, 5.10989, -14.3466, 0.66", "-28.0022, 5.7482, -14.9449, 0.51", "-27.8937, 6.62325, -15.7455, 0.44", "-27.7201, 7.50128, -16.5904, 0.73", "-27.4812, 8.77309, -17.8564, 0.44", "-27.3204, 9.59823, -18.7014, 0.44", "-27.2337, 10.0519, -19.1787, 0.44", "-27.069, 10.7012, -19.881, 0.44", "-26.8682, 11.3806, -20.5938, 0.44", "-26.6513, 12.0599, -21.2344, 0.44", "-26.4169, 12.7789, -21.8215, 0.44", "-26.0732, 13.8275, -22.612, 0.44", "-25.5964, 15.368, -23.6686, 0.44", "-25.3363, 16.315, -24.2752, 0.44", "-25.0984, 17.491, -24.9368, 0.59", "-24.9122, 18.7263, -25.6226, 0.59", "-24.8435, 19.572, -26.1271, 0.22", "-24.8397, 20.057, -26.4329, 0.51", "-24.903, 21.0957, -27.0339, 0.15", "-25.0629, 22.9637, -27.9952, 0.15", "-25.1549, 24.332, -28.6111, 0.29", "-25.1443, 25.6342, -29.1118, 0.44", "-25.0234, 26.888, -29.4946, 0.59", "-24.4892, 29.1839, -29.9535, 0.15", "-24.2565, 29.7447, -30.0443, 0.15", "-23.7644, 30.61, -30.1645, 0.15", "-23.2543, 31.516, -30.2482, 0.15", "-22.8789, 32.2776, -30.3053, 0.15", "-22.4228, 33.4421, -30.6585, 0.44", "-22.2218, 34.7597, -31.4976, 0.22", "-22.2565, 35.1667, -31.8401, 0.22", "-22.4387, 35.8302, -32.4758, 0.22", "-22.7894, 36.6788, -33.3582, 0.22", "-23.5757, 38.2593, -34.9959, 0.22", "-24.0178, 39.1199, -35.8689, 0.37", "-24.3912, 39.9168, -36.6198, 0.37", "-24.7124, 40.7931, -37.3799, 0.37", "-24.8692, 41.2948, -37.82, 0.37", "-25.124, 42.3313, -38.6878, 0.37", "-25.2984, 43.4006, -39.3622, 0.37", "-25.4086, 44.2621, -39.8281, 0.29", "-25.5979, 46.0901, -40.686, 0.29" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-28.0393, 5.10989, -14.3466, 0.66", "-28.7493, 6.08616, -14.5407, 0.37", "-30.8233, 8.28055, -15.0736, 0.37", "-32.6696, 9.7097, -15.5277, 0.37", "-33.3828, 10.1845, -15.6958, 0.37", "-34.3094, 10.7432, -15.9032, 0.37", "-35.4928, 11.3606, -16.1618, 0.37", "-36.9379, 11.9627, -16.4628, 0.37", "-38.5869, 12.4949, -16.7104, 0.37", "-39.514, 12.7261, -16.7773, 0.37", "-40.5877, 12.9765, -16.7834, 0.37", "-42.1809, 13.3093, -16.7194, 0.37", "-43.5826, 13.5356, -16.604, 0.37", "-45.2532, 13.6924, -16.4821, 0.66", "-47.5384, 13.7398, -16.446, 0.37", "-48.5372, 13.7128, -16.5376, 0.37", "-50.0372, 13.628, -16.8232, 0.37", "-52.3609, 13.4568, -17.4336, 0.81", "-54.5633, 13.2984, -18.1314, 0.44", "-56.6697, 13.1659, -18.8811, 0.51", "-59.6192, 13.0144, -20.0572, 0.51", "-60.9479, 12.9689, -20.5736, 0.44", "-62.215, 12.9627, -21.0715, 0.44", "-63.6041, 12.9969, -21.5875, 0.44", "-65.1145, 13.049, -22.0611, 0.44", "-66.9578, 13.0704, -22.5449, 0.66", "-69.1463, 13.0022, -23.0083, 0.37", "-71.2816, 12.9004, -23.3473, 0.37", "-72.3962, 12.8473, -23.4914, 0.37", "-73.5442, 12.8028, -23.5926, 0.37", "-74.9214, 12.76, -23.6276, 0.37", "-76.179, 12.7184, -23.4692, 0.37", "-78.0849, 12.6219, -23.0004, 0.37", "-79.2751, 12.555, -22.615, 0.37", "-80.5417, 12.493, -22.1806, 0.37", "-82.0724, 12.4328, -21.6318, 0.66", "-84.7321, 12.3502, -20.6952, 0.66", "-86.7564, 12.2304, -20.0548, 0.51", "-87.9377, 12.1117, -19.7247, 0.51", "-88.9104, 11.974, -19.4826, 0.51", "-89.621, 11.8551, -19.3431, 0.51", "-90.6271, 11.6712, -19.2476, 0.51", "-92.2665, 11.3569, -19.308, 0.29", "-93.5509, 11.127, -19.4214, 0.29", "-96.024, 10.7393, -19.6527, 0.29", "-98.1703, 10.4539, -19.8641, 0.51", "-100.562, 10.2091, -20.1139, 0.29", "-103.242, 10.0755, -20.3964, 0.29", "-104.63, 10.0929, -20.5418, 0.66", "-105.881, 10.1701, -20.6627, 0.66", "-106.649, 10.2592, -20.7219, 0.66", "-107.431, 10.3743, -20.7354, 0.66", "-108.899, 10.6481, -20.6625, 0.37", "-109.873, 10.8754, -20.5809, 0.37", "-111.276, 11.2715, -20.4804, 0.66", "-112.949, 11.8751, -20.3918, 0.37", "-114.934, 12.6981, -20.2933, 0.66", "-116.53, 13.433, -20.2229, 0.44", "-118.049, 14.1782, -20.1662, 0.44", "-119.605, 14.9734, -20.1225, 0.44", "-122.106, 16.2895, -20.0759, 0.44", "-123.099, 16.8036, -20.0712, 0.81", "-124.451, 17.4133, -20.0877, 0.51", "-125.855, 17.8786, -20.0763, 0.51", "-127.066, 18.1336, -20.0475, 0.51", "-128.553, 18.3395, -19.9696, 0.37", "-129.986, 18.4495, -19.8369, 0.37", "-131.639, 18.5632, -19.6123, 0.37", "-133.307, 18.6581, -19.3308, 0.37", "-134.947, 18.7421, -19.0159, 0.37", "-137.027, 18.8553, -18.5228, 0.37", "-138.832, 18.9496, -17.9811, 0.51", "-140.062, 19.0238, -17.5383, 0.29", "-140.883, 19.1032, -17.2041, 0.44", "-141.841, 19.1943, -16.7662, 0.44", "-143.296, 19.2835, -16.0432, 0.44", "-144.569, 19.2856, -15.4386, 0.44", "-145.256, 19.2795, -15.1554, 0.44", "-146.328, 19.276, -14.7928, 0.44", "-147.959, 19.2677, -14.3367, 0.37", "-149.318, 19.27, -14.0518, 0.37", "-150.779, 19.2738, -13.8378, 1.1", "-152.964, 19.2945, -13.6029, 0.22", "-154.62, 19.3218, -13.4548, 0.22", "-156.064, 19.3748, -13.3204, 0.66", "-157.831, 19.5182, -13.1195, 0.51", "-158.884, 19.6502, -12.9661, 0.73", "-160.285, 19.8803, -12.6831, 0.51", "-161.461, 20.115, -12.4013, 0.29", "-163.42, 20.5758, -11.863, 0.29", "-165.031, 21.0406, -11.3896, 0.29", "-166.046, 21.3766, -11.089, 0.29", "-167.563, 21.9116, -10.6811, 0.81", "-168.366, 22.2057, -10.498, 0.59", "-169.463, 22.6268, -10.2748, 0.88", "-170.321, 22.9615, -10.1654, 0.95", "-171.573, 23.4794, -10.1094, 0.51", "-172.625, 23.9242, -10.1251, 0.73", "-173.314, 24.1874, -10.2251, 0.73" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-19.78, 2.04636, 6.78087, 1.47", "-19.567, 1.01684, 7.35177, 1.1" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-19.78, 2.04636, 6.78087, 1.47", "-20.1491, 2.24747, 7.04248, 0.95", "-20.6135, 2.55707, 7.40438, 0.95", "-21.4329, 3.21183, 8.09326, 0.51", "-21.879, 3.65578, 8.48706, 0.66", "-22.5236, 4.44288, 9.08578, 1.25", "-22.8415, 4.93123, 9.38852, 1.25", "-23.1627, 5.63089, 9.8011, 0.81", "-23.3167, 6.07769, 10.0464, 0.51", "-23.4872, 6.85509, 10.4159, 0.88", "-23.5929, 7.58964, 10.71, 1.18", "-23.6955, 8.62981, 10.9981, 1.47", "-23.8022, 9.8086, 11.2707, 1.69" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-35.0684, -6.02016, 1.73379, 1.25", "-35.5276, -6.81569, 1.41579, 0.51", "-35.9801, -7.52818, 1.0802, 0.51", "-36.2915, -7.97337, 0.8431, 0.51", "-37.1616, -9.10643, 0.152364, 0.73", "-37.9314, -10.0641, -0.441412, 0.95", "-38.5376, -10.7857, -0.900077, 0.59", "-39.1151, -11.4261, -1.32819, 0.44", "-39.6793, -12.0067, -1.71011, 0.81", "-40.541, -12.807, -2.3101, 0.44", "-41.3964, -13.5568, -2.94518, 0.44", "-41.8739, -14.0327, -3.34752, 0.66", "-42.5528, -14.8303, -3.99732, 0.51", "-42.9579, -15.3983, -4.39607, 0.59", "-43.7415, -16.629, -5.25702, 1.1", "-44.1196, -17.2438, -5.71656, 0.81", "-44.9836, -18.5689, -6.84543, 0.44", "-45.3882, -19.1433, -7.39527, 0.88", "-45.9205, -19.7825, -8.05716, 0.37", "-46.7655, -20.6252, -8.97925, 0.88", "-47.5273, -21.2428, -9.64268, 0.66", "-48.3982, -21.8285, -10.3194, 0.51", "-49.0918, -22.225, -10.8133, 0.73", "-50.3263, -22.9658, -11.6201, 0.44", "-50.9371, -23.3699, -11.9656, 0.44", "-51.4399, -23.7668, -12.185, 1.18", "-52.0867, -24.3754, -12.4455, 0.81", "-52.3144, -24.6249, -12.5492, 1.03", "-53.1548, -25.6635, -12.9981, 0.44", "-53.9796, -26.7487, -13.5096, 0.51", "-54.7019, -27.6954, -13.9678, 0.73", "-55.3893, -28.5529, -14.3912, 0.59", "-56.5319, -29.9436, -15.0281, 0.51", "-57.0627, -30.6134, -15.3023, 0.44", "-57.626, -31.3636, -15.5796, 0.44", "-58.0429, -31.9558, -15.7625, 0.59", "-58.7961, -33.0251, -16.0253, 0.44", "-59.6402, -34.22, -16.2551, 0.59", "-60.5034, -35.4224, -16.4576, 0.59", "-61.5058, -36.7868, -16.6983, 0.59", "-62.2137, -37.748, -16.8826, 0.59", "-62.6895, -38.3776, -17.0025, 0.88", "-63.6334, -39.6226, -17.2121, 0.73", "-64.6055, -40.9006, -17.4314, 0.51", "-65.1045, -41.5897, -17.543, 0.66", "-65.668, -42.4702, -17.6576, 0.51", "-66.3131, -43.7089, -17.7796, 0.95", "-66.721, -44.7184, -17.8502, 0.95", "-67.1675, -46.2448, -17.9059, 0.66", "-67.3107, -47.0009, -17.9228, 0.66", "-67.393, -47.5036, -17.9479, 0.95", "-67.5616, -48.6236, -18.0473, 0.44", "-67.6947, -49.5006, -18.1777, 0.37", "-67.8116, -50.0975, -18.2884, 0.81", "-68.0944, -51.1665, -18.5023, 0.81", "-68.3863, -52.0608, -18.711, 1.25", "-68.7774, -53.0711, -19.0176, 0.44", "-69.1591, -53.8891, -19.3241, 0.44", "-69.442, -54.4186, -19.5408, 0.81", "-69.9278, -55.2394, -19.8816, 0.37", "-70.3709, -55.968, -20.1322, 0.51", "-70.9581, -56.9552, -20.3893, 0.88", "-71.6933, -58.1755, -20.6359, 0.37", "-72.2258, -59.0741, -20.7655, 0.37", "-72.6766, -59.8466, -20.8588, 0.37", "-73.5023, -61.2821, -21.0044, 0.66", "-74.0895, -62.3041, -21.0938, 0.29", "-74.428, -62.8884, -21.134, 0.66", "-75.1251, -64.0569, -21.2463, 0.37", "-75.8405, -65.1581, -21.438, 0.37", "-76.3711, -65.8749, -21.6586, 0.81", "-76.5455, -66.0824, -21.7652, 0.66", "-77.0581, -66.6919, -22.1011, 0.22", "-77.4115, -67.1469, -22.3392, 0.51", "-78.0273, -68.0533, -22.7548, 0.59", "-78.5325, -68.9331, -23.0779, 0.59", "-79.2578, -70.3371, -23.474, 0.51", "-79.8809, -71.5698, -23.7744, 0.44", "-80.3019, -72.3767, -23.9418, 0.95", "-80.7481, -73.2144, -24.0965, 0.44", "-81.1917, -74.0466, -24.2489, 0.66", "-81.9665, -75.5239, -24.5806, 0.44", "-82.5112, -76.5411, -24.8874, 0.29", "-83.2434, -77.8153, -25.4018, 0.22", "-83.6829, -78.5143, -25.7289, 0.22", "-84.4077, -79.5728, -26.2921, 0.44", "-84.9373, -80.281, -26.6842, 0.66", "-85.2929, -80.7432, -26.9449, 0.66", "-85.9392, -81.5918, -27.3645, 0.37", "-86.3718, -82.1747, -27.6037, 0.37", "-86.5057, -82.3773, -27.6626, 0.73", "-86.944, -83.2048, -27.8879, 1.1", "-87.2533, -83.9492, -28.1136, 0.66", "-87.4504, -84.6188, -28.3508, 0.44", "-87.6162, -85.404, -28.6679, 0.44", "-87.8606, -86.5929, -29.1909, 0.66", "-88.1809, -87.979, -29.8612, 0.37", "-88.3649, -88.638, -30.2254, 0.37", "-88.6294, -89.3373, -30.6595, 0.37", "-88.9086, -89.9299, -31.0675, 0.37", "-89.3489, -90.6888, -31.6186, 0.59", "-89.7268, -91.238, -32.0503, 0.66", "-90.1132, -91.7603, -32.4762, 0.51", "-90.5208, -92.3103, -32.9612, 0.59", "-90.7881, -92.6747, -33.2817, 0.59", "-91.2112, -93.27, -33.7978, 0.59", "-91.8974, -94.2279, -34.5962, 0.44", "-92.3307, -94.8114, -35.0556, 0.59", "-93.0946, -95.8388, -35.7584, 0.73", "-93.7648, -96.7411, -36.3618, 0.51", "-94.0406, -97.1184, -36.6233, 0.51", "-94.4898, -97.8305, -37.0915, 0.51", "-94.7188, -98.292, -37.3745, 0.51", "-95.0332, -99.0944, -37.8647, 0.51", "-95.3767, -100.158, -38.5364, 0.51", "-95.621, -100.859, -39.0188, 0.44", "-96.0125, -101.852, -39.7316, 0.59", "-96.3747, -102.692, -40.3325, 0.37", "-96.6706, -103.229, -40.71, 0.66", "-97.0569, -103.753, -41.0857, 0.37", "-97.8239, -104.582, -41.6221, 0.37", "-98.396, -105.093, -41.9409, 0.37", "-99.0469, -105.592, -42.237, 0.37", "-99.9577, -106.289, -42.6613, 0.51", "-100.717, -106.905, -43.0648, 0.44", "-101.251, -107.357, -43.3654, 0.44", "-101.967, -107.982, -43.7749, 0.59", "-102.881, -108.776, -44.2961, 0.37", "-103.787, -109.609, -44.862, 0.37", "-104.231, -110.059, -45.1516, 0.37", "-104.732, -110.599, -45.4696, 0.37", "-105.157, -111.069, -45.7279, 0.37", "-105.78, -111.775, -46.0829, 0.37", "-106.514, -112.654, -46.4441, 0.29", "-107.206, -113.529, -46.7288, 0.29", "-107.808, -114.379, -46.9841, 0.37", "-108.183, -115.014, -47.1731, 0.51", "-108.366, -115.368, -47.2839, 0.73", "-108.733, -116.11, -47.5431, 0.37", "-109.122, -116.829, -47.8406, 0.37", "-109.463, -117.402, -48.1407, 0.37", "-109.878, -117.983, -48.4931, 0.29", "-110.63, -118.696, -49.022, 0.81", "-111.467, -119.284, -49.5335, 0.37", "-112.426, -119.821, -50.0696, 0.37", "-113.147, -120.153, -50.4254, 0.37", "-113.742, -120.386, -50.6941, 0.81", "-115.409, -120.977, -51.3589, 0.51", "-116.134, -121.216, -51.6133, 0.51", "-117.224, -121.566, -51.9755, 0.44", "-117.861, -121.777, -52.1711, 0.44", "-118.562, -122.018, -52.3765, 0.15", "-119.435, -122.343, -52.6323, 0.15", "-119.881, -122.522, -52.7573, 0.51", "-120.783, -122.888, -52.9796, 0.44", "-121.564, -123.204, -53.1424, 0.44", "-122.259, -123.481, -53.2931, 0.73", "-122.738, -123.663, -53.4074, 0.73", "-123.297, -123.878, -53.5426, 0.37", "-123.976, -124.18, -53.7063, 0.37", "-124.709, -124.563, -53.8754, 0.37", "-125.687, -125.139, -54.1108, 0.37", "-126.654, -125.748, -54.3114, 0.66", "-127.421, -126.263, -54.474, 0.73", "-128.247, -126.828, -54.6692, 0.37", "-128.8, -127.212, -54.8319, 0.37", "-129.325, -127.582, -54.9888, 0.66", "-130.31, -128.274, -55.3011, 0.44", "-131.183, -128.861, -55.5879, 0.51", "-132.304, -129.561, -55.9712, 0.51", "-133.327, -130.164, -56.3451, 1.03", "-134.556, -130.868, -56.8037, 0.37", "-135.501, -131.424, -57.1806, 0.37", "-136.072, -131.753, -57.4103, 1.4", "-136.561, -132.025, -57.5911, 1.18", "-137.669, -132.645, -57.9757, 0.29", "-138.738, -133.234, -58.3273, 0.15", "-139.66, -133.737, -58.6384, 0.15", "-140.429, -134.15, -58.8709, 0.81", "-140.55, -134.212, -58.909, 0.81" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-35.0684, -6.02016, 1.73379, 1.25", "-36.1557, -5.35494, 1.85982, 0.66", "-37.0364, -4.74386, 2.04822, 0.44", "-37.7705, -4.15105, 2.18878, 0.44", "-38.1237, -3.84456, 2.25291, 0.81", "-39.1062, -2.905, 2.43305, 1.1", "-40.0719, -1.91723, 2.60229, 1.25", "-40.8911, -0.996094, 2.77586, 1.25", "-41.9487, 0.280237, 3.00308, 0.88", "-42.6373, 1.13445, 3.13495, 0.51", "-43.4726, 2.1125, 3.26984, 0.44", "-44.0249, 2.69311, 3.32554, 0.44", "-44.4733, 3.06006, 3.35509, 0.44", "-45.1267, 3.3696, 3.41927, 0.44", "-45.7365, 3.47739, 3.49165, 0.44", "-46.8228, 3.56346, 3.60451, 1.03", "-48.1915, 3.64873, 3.72714, 0.29", "-48.6658, 3.73031, 3.77354, 0.29", "-49.3301, 4.03808, 3.81206, 0.59", "-49.7521, 4.54615, 3.77216, 0.88", "-50.3353, 5.72319, 3.60381, 0.51", "-50.6305, 6.52404, 3.46544, 0.51", "-50.9858, 7.70056, 3.25809, 0.51", "-51.2193, 8.65249, 3.08467, 0.59", "-51.4465, 9.86312, 2.85431, 0.59", "-51.5749, 10.7092, 2.6859, 0.59", "-51.61, 10.9813, 2.60995, 0.59" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "15.8656, 23.2437, 1.76394, 0.81", "16.1451, 23.9849, 1.04944, 0.66", "16.4816, 24.6088, 0.489872, 0.44", "16.6796, 24.9049, 0.253736, 0.51", "17.2744, 25.69, -0.292847, 0.73", "18.0656, 26.6527, -0.872796, 0.44", "18.6022, 27.2897, -1.20599, 0.51", "19.3829, 28.1394, -1.50373, 0.29", "19.9552, 28.7552, -1.60902, 0.37", "20.4118, 29.2616, -1.61839, 0.37", "21.2636, 30.2125, -1.47249, 0.51", "21.9295, 30.9115, -1.37701, 0.66", "22.6942, 31.6999, -1.33643, 0.37", "23.3672, 32.3901, -1.33291, 0.37", "24.0536, 33.0586, -1.35311, 0.37", "24.8984, 33.8125, -1.41353, 0.37", "25.7304, 34.4568, -1.52375, 0.44", "26.252, 34.782, -1.64174, 0.66" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "15.8656, 23.2437, 1.76394, 0.81", "15.121, 21.7223, 2.56479, 0.81", "14.441, 19.2573, 3.97071, 0.66", "14.3261, 17.6566, 5.08249, 0.66", "14.3356, 16.5025, 5.99079, 0.66", "14.3695, 15.7001, 6.69959, 0.66", "14.5486, 14.7434, 7.6164, 0.66", "15.0165, 13.8699, 8.80417, 0.66", "15.4087, 13.4253, 9.64483, 0.66", "15.6116, 13.2328, 10.1476, 0.66", "15.5781, 12.8101, 10.8795, 0.66", "15.1631, 12.1679, 11.1553, 0.66", "14.7042, 11.2975, 11.2973, 0.66", "14.3206, 10.3786, 11.365, 0.66", "13.8997, 9.12527, 11.41, 0.66", "13.6333, 8.02546, 11.4184, 0.88", "13.3159, 5.62016, 11.3874, 0.59", "13.3066, 3.66072, 11.3497, 0.59", "13.444, 2.40163, 11.3265, 0.44", "13.6395, 1.56401, 11.3256, 1.03", "13.8992, 0.840233, 11.3733, 1.1", "14.4455, -0.351514, 11.6483, 0.44", "15.063, -1.55153, 12.2526, 0.66", "15.1276, -1.71818, 12.3883, 0.66", "15.2308, -2.10879, 12.7521, 0.66", "15.3898, -2.86583, 13.4867, 0.66", "15.6416, -4.18311, 14.7205, 0.88", "15.7842, -4.9046, 15.3416, 0.66", "15.9734, -5.75398, 15.9269, 0.66", "16.2019, -6.83587, 16.5356, 0.66", "16.421, -7.9157, 17.0502, 0.66", "16.6222, -8.97631, 17.4738, 0.44", "16.7585, -9.73306, 17.7535, 0.44", "17.0298, -11.245, 18.3884, 0.44", "17.2569, -12.6978, 19.0588, 0.44", "17.3691, -13.4902, 19.449, 0.66", "17.4665, -14.5603, 19.963, 0.59", "17.4959, -15.6626, 20.3757, 0.59", "17.5514, -16.6354, 20.6887, 0.59", "17.6479, -17.3724, 20.8908, 0.59", "17.8267, -18.3164, 21.0669, 0.44", "18.2904, -20.4066, 21.3933, 0.44", "18.9032, -22.8368, 21.754, 0.44", "19.2373, -24.1535, 21.9621, 0.44", "19.4375, -25.0028, 22.1411, 0.51", "19.7128, -26.2671, 22.4877, 0.51", "20.0041, -27.3614, 22.8496, 0.44", "20.4389, -28.5738, 23.3565, 0.59", "20.7016, -29.2223, 23.6999, 0.44", "21.038, -30.3403, 24.2431, 0.44", "21.3603, -31.8425, 24.9951, 0.37", "19.7027, -43.5989, 30.4991, 0.37", "20.6165, -54.3801, 37.7815, 0.37", "19.4343, -64.8964, 45.3856, 0.37", "19.8931, -73.4827, 55.0868, 0.37" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "12.7317, 20.5066, 1.68441, 0.88", "12.5189, 20.8186, 1.48199, 0.73", "11.3706, 21.8588, 0.873181, 0.51", "10.7285, 22.2022, 0.634994, 0.51", "9.91086, 22.5845, 0.343904, 0.37", "8.90065, 23.0196, -0.0512516, 0.44", "7.55329, 23.4893, -0.551072, 0.44", "6.04187, 23.8984, -1.09389, 0.44", "4.27306, 24.2035, -1.77864, 0.44", "3.89432, 24.2358, -1.93478, 0.66", "2.94879, 24.2609, -2.35646, 0.88", "2.17168, 24.2581, -2.74721, 0.59", "1.5567, 24.256, -3.10629, 0.59", "0.392155, 24.2969, -3.8538, 0.29", "0.24194, 24.3064, -3.96204, 0.29", "-0.27112, 24.3318, -4.31548, 0.29", "-1.02825, 24.3999, -4.80726, 0.44", "-1.68433, 24.5303, -5.27101, 0.66", "-2.01249, 24.6647, -5.52276, 0.88", "-2.83407, 25.2271, -6.20561, 0.37", "-3.15313, 25.4715, -6.47221, 0.37", "-3.45509, 25.683, -6.73126, 0.37", "-3.94531, 25.9766, -7.11665, 0.37", "-4.73023, 26.4048, -7.65661, 0.37", "-5.42321, 26.7569, -8.08035, 0.37", "-6.0408, 27.0645, -8.44953, 0.37", "-6.77781, 27.4115, -8.91332, 0.37", "-7.73384, 27.7833, -9.55428, 0.29", "-8.14837, 27.9108, -9.84761, 0.29", "-8.78288, 28.0501, -10.3342, 0.29", "-9.34245, 28.1247, -10.8265, 0.29", "-9.72791, 28.1567, -11.1788, 0.29", "-10.1256, 28.1889, -11.4949, 0.29", "-10.513, 28.2104, -11.7177, 0.29", "-11.0378, 28.2277, -11.898, 0.29", "-11.8705, 28.2653, -12.0287, 0.29", "-13.0443, 28.3596, -12.1104, 1.03", "-14.2903, 28.4812, -12.1506, 0.22", "-15.6089, 28.6179, -12.1932, 0.22", "-16.3858, 28.6861, -12.2314, 0.81", "-17.1936, 28.7423, -12.317, 0.37", "-17.8388, 28.7579, -12.4664, 0.37", "-18.3251, 28.7072, -12.7051, 0.66", "-19.0776, 28.5211, -13.3349, 0.51", "-19.6303, 28.354, -13.9595, 0.95", "-20.2318, 28.1764, -14.7165, 0.44", "-20.5909, 28.0931, -15.1818, 0.44", "-20.9816, 28.0621, -15.6363, 0.44", "-21.2622, 28.1002, -15.904, 0.73", "-21.8745, 28.2767, -16.3523, 0.81", "-22.4132, 28.4686, -16.6885, 0.51", "-22.8401, 28.6389, -16.948, 0.51", "-23.3428, 28.8404, -17.2915, 0.81", "-23.8634, 29.0419, -17.736, 0.51", "-24.2792, 29.2126, -18.1974, 0.51", "-24.5978, 29.3872, -18.6592, 0.51", "-25.0383, 29.7388, -19.4741, 0.51", "-25.3458, 30.1025, -20.1115, 0.51", "-25.5315, 30.4348, -20.5423, 0.51", "-25.6844, 30.7985, -20.9402, 0.37", "-25.8742, 31.2809, -21.4411, 0.37", "-26.1246, 31.8628, -22.0368, 0.37", "-26.412, 32.4802, -22.6616, 0.66", "-26.6779, 33.096, -23.3064, 0.29", "-26.8576, 33.6637, -23.9507, 0.73", "-26.946, 34.2046, -24.6485, 0.73", "-26.9414, 34.5512, -25.1848, 0.73", "-26.8971, 34.7853, -25.6101, 0.59", "-26.7971, 35.0154, -26.1516, 0.59", "-26.6553, 35.1853, -26.6995, 0.59", "-26.4897, 35.2851, -27.0421, 0.59", "-26.1553, 35.3547, -27.374, 0.59" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "12.7317, 20.5066, 1.68441, 0.88", "13.1796, 21.96, 1.47323, 0.73", "13.6082, 23.3513, 1.27109, 0.73", "13.8287, 24.0666, 1.16715, 0.73", "14.002, 24.6292, 1.08541, 0.88", "14.3272, 25.6847, 0.932051, 0.44" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_26",
    "id" : "apic_26",
    "points3d" : [ "87.5992, -80.8019, 29.463, 0.37", "95.5627, -83.3863, 33.2123, 0.37", "103.332, -85.778, 37.46, 0.37", "110.839, -89.3495, 41.3807, 0.37", "118.546, -91.2939, 45.9471, 0.37", "127.116, -93.1082, 48.6311, 0.37", "135.769, -93.0831, 51.6174, 0.37" ],
    "parent" : "apic_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_25",
    "id" : "apic_25",
    "points3d" : [ "87.5992, -80.8019, 29.463, 0.37", "99.9169, -85.5038, 31.6055, 0.37", "112.446, -89.1882, 34.3464, 0.37", "125.509, -90.8087, 36.4099, 0.37", "138.802, -90.0028, 36.8374, 0.37", "151.625, -91.3065, 40.2118, 0.37", "163.975, -94.5491, 44.0733, 0.37" ],
    "parent" : "apic_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_20",
    "id" : "apic_20",
    "points3d" : [ "-36.5631, -93.5431, -25.4952, 1.47", "-37.5909, -93.6805, -25.3671, 0.81", "-38.5848, -93.8334, -25.2078, 0.66", "-39.3106, -93.9708, -25.0759, 0.59", "-40.3727, -94.176, -24.8255, 0.59", "-41.4129, -94.3332, -24.5467, 0.73", "-42.0204, -94.3805, -24.3667, 0.37", "-42.6506, -94.3653, -24.1458, 0.37", "-43.4155, -94.2845, -23.8565, 0.37", "-44.4452, -94.1038, -23.4919, 1.18", "-45.5022, -93.8747, -23.1639, 0.66", "-46.6577, -93.6221, -22.8671, 0.51", "-47.212, -93.4988, -22.7463, 0.51", "-47.7758, -93.383, -22.6518, 0.44", "-48.3104, -93.3043, -22.599, 0.44", "-49.032, -93.2594, -22.5744, 0.44", "-49.6757, -93.2428, -22.5594, 0.44", "-50.104, -93.2147, -22.5518, 0.44", "-50.6859, -93.1195, -22.5328, 0.44", "-51.2742, -92.9702, -22.5046, 0.44", "-52.7331, -92.512, -22.4271, 0.44", "-54.2277, -91.9935, -22.3474, 0.59", "-55.4261, -91.5842, -22.2839, 0.59", "-57.2847, -91.0519, -22.1802, 0.59", "-59.2029, -90.6345, -22.0852, 0.59", "-60.4983, -90.4543, -22.0595, 0.51", "-61.2736, -90.418, -22.0729, 0.51", "-62.41, -90.4686, -22.1291, 0.51", "-64.461, -90.7655, -22.3244, 0.51", "-65.6159, -91.0705, -22.5205, 0.51", "-66.6868, -91.4513, -22.8192, 0.51", "-67.1638, -91.6192, -23.0009, 0.51", "-67.4686, -91.6927, -23.1442, 0.51", "-67.8517, -91.704, -23.3515, 0.51", "-68.2807, -91.6186, -23.5494, 0.51", "-69.4421, -91.4243, -23.865, 0.51", "-70.2285, -91.404, -23.9986, 0.51", "-70.9028, -91.4521, -24.0795, 0.37", "-71.728, -91.5662, -24.1531, 0.37", "-72.5725, -91.7062, -24.2034, 0.51", "-73.8074, -91.9536, -24.2495, 0.51", "-75.0386, -92.2618, -24.2761, 0.44", "-75.8202, -92.5046, -24.2937, 0.44", "-76.201, -92.6194, -24.3302, 0.44", "-76.8731, -92.7867, -24.4487, 0.37", "-77.3025, -92.8707, -24.5603, 0.37", "-77.8236, -92.942, -24.719, 0.37", "-78.6669, -93.0717, -25.1268, 0.37", "-79.5849, -93.2673, -25.8263, 0.51", "-80.1215, -93.4236, -26.3308, 0.51", "-80.46, -93.5489, -26.6522, 0.51", "-80.8789, -93.7224, -27.0294, 0.51", "-81.7066, -94.072, -27.6565, 0.51", "-82.4812, -94.3944, -28.1574, 0.51", "-83.0295, -94.6014, -28.4412, 0.51", "-84.3268, -94.9745, -29.0771, 0.37", "-85.2618, -95.1748, -29.479, 0.37", "-86.4411, -95.3688, -29.9101, 0.37", "-87.3628, -95.5028, -30.185, 0.44", "-88.7961, -95.68, -30.581, 0.51", "-90.1889, -95.7786, -30.9397, 0.88", "-91.205, -95.799, -31.1852, 0.44", "-91.9445, -95.7941, -31.3459, 0.44", "-93.3915, -95.7716, -31.576, 0.44", "-94.1897, -95.7619, -31.6349, 0.44", "-95.187, -95.7542, -31.6308, 0.51", "-95.9684, -95.7612, -31.6079, 0.51", "-96.5533, -95.7924, -31.6035, 0.51", "-97.5695, -95.8912, -31.5969, 1.1", "-98.5868, -96.0256, -31.58, 1.1", "-99.8699, -96.263, -31.5457, 0.44", "-101.637, -96.6984, -31.5047, 0.44", "-103.997, -97.4164, -31.4508, 0.51", "-105.039, -97.7802, -31.4244, 0.37", "-106.919, -98.5185, -31.3619, 0.37", "-108.144, -99.0522, -31.2972, 0.37", "-109.369, -99.6101, -31.2052, 0.37", "-111.065, -100.374, -31.027, 0.37", "-112.538, -101.033, -30.832, 0.37", "-114.346, -101.854, -30.5655, 0.29", "-115.193, -102.261, -30.4229, 0.22", "-116.073, -102.682, -30.26, 0.22", "-117.139, -103.158, -30.052, 0.22", "-118.487, -103.719, -29.7711, 0.37", "-120.116, -104.366, -29.4677, 0.37", "-121.986, -105.091, -29.2241, 0.37", "-122.654, -105.334, -29.199, 0.37", "-123.804, -105.732, -29.2754, 0.37", "-124.825, -106.032, -29.4662, 0.37", "-126.081, -106.323, -29.8229, 0.44", "-127.373, -106.54, -30.2747, 0.44", "-128.914, -106.703, -30.8877, 0.44", "-130.048, -106.788, -31.352, 0.44", "-131.327, -106.828, -31.8575, 0.44", "-132.26, -106.793, -32.2315, 0.44", "-132.867, -106.735, -32.4399, 0.44", "-133.503, -106.656, -32.6235, 0.44", "-134.185, -106.579, -32.8086, 0.44", "-135.469, -106.466, -33.2205, 0.44", "-136.897, -106.392, -33.7712, 0.44", "-137.999, -106.383, -34.2486, 0.29", "-139.125, -106.471, -34.7832, 0.37", "-140.282, -106.67, -35.3737, 0.88", "-141.483, -106.989, -36.0029, 0.44", "-142.377, -107.327, -36.477, 0.44", "-142.901, -107.563, -36.7454, 0.44", "-143.776, -108.015, -37.1989, 0.44", "-144.622, -108.503, -37.6121, 0.95", "-145.364, -108.969, -37.9402, 0.66", "-146.572, -109.758, -38.4091, 0.37", "-147.611, -110.417, -38.767, 0.37", "-148.452, -110.892, -39.0382, 1.03", "-149.682, -111.482, -39.3971, 0.37", "-150.476, -111.797, -39.6119, 0.37", "-151.116, -112.008, -39.7852, 0.37", "-151.764, -112.182, -39.9641, 0.37", "-152.483, -112.338, -40.1569, 0.37", "-153.534, -112.528, -40.469, 0.88", "-154.974, -112.77, -40.9684, 0.37", "-156.262, -113.009, -41.511, 0.37", "-157.458, -113.248, -42.0884, 0.37", "-158.187, -113.424, -42.4861, 0.51", "-158.606, -113.541, -42.7211, 0.51", "-159.288, -113.717, -43.0737, 0.51", "-160.345, -113.914, -43.5611, 0.51", "-161.16, -114.001, -43.8828, 0.51", "-162.086, -114.019, -44.1913, 0.51", "-163.075, -113.989, -44.4757, 0.29", "-164.614, -113.913, -44.8936, 0.44", "-165.965, -113.814, -45.2556, 0.44", "-166.757, -113.736, -45.4709, 0.44", "-168.116, -113.623, -45.8893, 0.44", "-168.829, -113.569, -46.1197, 0.44", "-170.301, -113.459, -46.6681, 0.44", "-171.488, -113.369, -47.1393, 0.44", "-172.487, -113.281, -47.5286, 0.29", "-173.847, -113.147, -48.0476, 0.29", "-175.297, -113.0, -48.5765, 0.29", "-176.634, -112.871, -49.0115, 0.37", "-177.659, -112.789, -49.3057, 0.66", "-178.697, -112.747, -49.612, 0.37", "-179.547, -112.759, -49.8913, 0.37", "-180.447, -112.803, -50.2347, 0.37", "-182.318, -112.961, -51.1325, 0.22", "-183.441, -113.078, -51.7319, 0.22", "-184.478, -113.172, -52.2975, 1.03", "-185.882, -113.252, -53.0479, 0.29", "-187.224, -113.276, -53.7397, 0.29", "-188.86, -113.231, -54.4521, 0.29", "-190.244, -113.138, -54.8892, 1.25", "-191.909, -113.035, -55.1831, 0.07", "-192.899, -112.988, -55.2444, 0.07", "-194.187, -112.961, -55.2035, 1.4", "-196.636, -113.029, -54.9678, 0.37", "-198.33, -113.148, -54.7598, 0.22", "-200.336, -113.374, -54.5812, 0.22", "-201.582, -113.58, -54.5431, 0.73", "-202.651, -113.785, -54.5619, 0.59", "-203.602, -113.968, -54.6401, 0.37", "-204.799, -114.173, -54.8808, 0.22", "-206.264, -114.31, -55.4372, 0.22", "-207.396, -114.299, -56.0881, 0.22", "-208.282, -114.219, -56.7275, 0.37", "-209.249, -114.07, -57.5069, 0.22", "-210.471, -113.847, -58.5697, 0.22", "-212.322, -113.519, -60.2845, 0.73", "-213.463, -113.337, -61.4272, 0.37", "-214.05, -113.253, -62.0533, 0.59", "-215.002, -113.15, -63.1022, 0.29", "-215.677, -113.092, -63.8255, 0.37", "-217.122, -112.967, -65.2794, 0.44", "-218.368, -112.833, -66.4108, 0.44", "-220.038, -112.582, -67.8081, 0.44", "-221.83, -112.207, -69.174, 0.51", "-222.73, -111.969, -69.8027, 0.51", "-223.592, -111.702, -70.3629, 0.51", "-224.283, -111.454, -70.7579, 0.37", "-225.487, -110.975, -71.3199, 0.37", "-226.893, -110.406, -71.8126, 0.81", "-228.223, -109.869, -72.1441, 0.51" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "-36.5631, -93.5431, -25.4952, 1.47", "-36.9374, -94.8024, -25.6921, 1.47", "-37.3654, -96.242, -25.9172, 1.47", "-37.6562, -97.2206, -26.0701, 1.47", "-37.9139, -98.0872, -26.2056, 2.13" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-34.3654, -18.4107, -34.9029, 0.88", "-34.984, -17.8091, -35.3939, 0.66", "-36.1072, -16.6818, -36.2189, 0.29", "-36.9154, -15.9324, -36.7657, 0.88", "-37.282, -15.6317, -37.0031, 0.73", "-38.0883, -15.0333, -37.5318, 0.44", "-38.9821, -14.385, -38.1131, 0.29", "-40.1166, -13.5568, -38.8709, 0.29", "-40.867, -12.9425, -39.3888, 0.29", "-41.8827, -12.0624, -40.0758, 0.29", "-42.6318, -11.434, -40.6059, 0.29", "-43.1885, -10.9889, -41.0118, 0.51", "-43.6393, -10.6278, -41.376, 0.66", "-44.4485, -9.96065, -42.0848, 0.37", "-45.0977, -9.42108, -42.6066, 0.22", "-45.8074, -8.8215, -43.133, 0.22", "-46.3372, -8.39886, -43.4872, 0.22", "-47.0416, -7.907, -43.9203, 0.22", "-47.8313, -7.43876, -44.353, 0.22", "-49.2403, -6.73603, -45.0761, 0.22", "-50.6995, -6.08896, -45.8441, 0.22", "-51.1756, -5.89571, -46.1066, 0.22", "-51.591, -5.77543, -46.346, 0.22", "-52.1601, -5.73059, -46.7023, 0.22", "-53.068, -5.8973, -47.3286, 0.22", "-53.9485, -6.24249, -47.9862, 0.22", "-54.8693, -6.66968, -48.6295, 0.37", "-55.4995, -6.91863, -49.0105, 0.37", "-56.5625, -7.24358, -49.5479, 0.59", "-57.9207, -7.56054, -50.1518, 0.15", "-58.8681, -7.75099, -50.5177, 0.22", "-60.1404, -7.99439, -50.9847, 0.22", "-62.1287, -8.34411, -51.7138, 0.22", "-63.4954, -8.54488, -52.2009, 0.51", "-65.0762, -8.7152, -52.7204, 0.29", "-66.4488, -8.79939, -53.1459, 0.51", "-67.6876, -8.85812, -53.536, 0.22", "-68.2359, -8.89076, -53.712, 0.44", "-69.1263, -8.96326, -54.0386, 0.22", "-69.8114, -9.01228, -54.3069, 0.22", "-70.4013, -9.04704, -54.5272, 0.51", "-71.6676, -9.11829, -54.9999, 0.29", "-73.1448, -9.22, -55.5542, 0.29", "-74.3496, -9.30736, -56.034, 0.29", "-76.6294, -9.46144, -57.064, 0.15", "-77.4206, -9.51441, -57.4741, 0.15", "-78.3401, -9.58069, -57.9963, 0.15", "-78.9298, -9.61836, -58.3555, 0.15", "-79.2109, -9.63765, -58.5464, 0.59", "-80.3802, -9.74614, -59.3313, 0.22", "-81.353, -9.89498, -60.0271, 0.51", "-81.9227, -9.99864, -60.4263, 0.51", "-82.2827, -10.0657, -60.645, 0.51", "-83.4379, -10.2689, -61.2182, 0.22", "-84.4842, -10.4318, -61.6276, 0.22", "-85.4753, -10.5416, -61.9313, 0.22", "-86.4298, -10.5796, -62.1945, 0.22", "-87.7526, -10.5407, -62.5474, 0.22", "-89.1003, -10.4797, -62.9045, 0.22", "-90.2652, -10.4203, -63.2215, 0.22", "-90.9731, -10.3721, -63.4438, 0.22", "-92.5975, -10.2046, -64.06, 0.22", "-93.4216, -10.1113, -64.4192, 0.29", "-94.472, -10.0077, -64.944, 0.29", "-95.4701, -9.92794, -65.4939, 0.29", "-96.4676, -9.84799, -66.0536, 0.29", "-97.5178, -9.76104, -66.6153, 0.29", "-98.4419, -9.67076, -67.069, 0.29", "-99.1927, -9.5903, -67.421, 0.29", "-100.345, -9.42345, -67.9501, 0.29", "-101.435, -9.26272, -68.4365, 0.29", "-102.177, -9.17677, -68.7605, 0.29", "-102.811, -9.13189, -69.0445, 0.29", "-103.719, -9.11028, -69.485, 0.29", "-104.907, -9.14017, -70.0867, 0.29", "-105.559, -9.1882, -70.4223, 0.29", "-106.089, -9.26528, -70.7066, 0.29", "-106.779, -9.40372, -71.0759, 0.29", "-108.663, -9.82928, -72.0545, 0.29", "-109.74, -10.0692, -72.5642, 0.15", "-110.118, -10.1484, -72.7354, 0.37", "-111.042, -10.2779, -73.1927, 0.37", "-111.855, -10.3231, -73.6165, 0.37", "-112.986, -10.2941, -74.2034, 0.29", "-114.326, -10.1426, -74.9024, 0.29", "-115.484, -9.90572, -75.4701, 0.81", "-117.097, -9.4431, -76.2349, 0.37", "-118.251, -8.98366, -76.8081, 0.22", "-119.144, -8.54047, -77.2718, 0.51", "-119.764, -8.17285, -77.5996, 0.51", "-120.732, -7.53393, -78.1259, 0.07", "-121.324, -7.11794, -78.444, 0.37", "-122.595, -6.25947, -79.3138, 0.07", "-123.29, -5.81144, -79.9702, 0.07", "-123.839, -5.47275, -80.6199, 0.29", "-124.556, -5.08668, -81.5941, 0.15", "-124.942, -4.91411, -82.1404, 0.37", "-126.788, -4.33217, -84.645, 0.37", "-127.735, -4.15674, -85.83, 0.37", "-128.645, -4.06074, -86.8995, 0.37", "-129.882, -4.01682, -88.2404, 0.22", "-130.625, -4.02972, -88.9752, 0.44", "-131.7, -4.09587, -89.9338, 0.44", "-132.737, -4.16438, -90.7247, 0.44", "-133.367, -4.22752, -91.1777, 1.03", "-135.414, -4.52148, -92.6415, 0.44", "-137.172, -4.77994, -93.9381, 0.37" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-34.3654, -18.4107, -34.9029, 0.88", "-34.8655, -18.459, -35.0995, 0.59", "-36.5951, -18.6529, -35.8215, 0.29", "-37.2947, -18.7465, -36.0901, 0.37", "-37.6203, -18.795, -36.2099, 0.51", "-38.5415, -18.9406, -36.5403, 0.44", "-39.3704, -19.0794, -36.8279, 0.44", "-40.3586, -19.2433, -37.1419, 0.44", "-41.3402, -19.4055, -37.4256, 0.51", "-42.0291, -19.5249, -37.606, 0.37", "-42.9564, -19.6869, -37.8422, 0.29", "-43.5339, -19.7831, -37.9805, 0.29", "-44.0807, -19.8628, -38.1004, 0.29", "-44.6179, -19.9306, -38.2148, 0.44", "-45.3735, -20.0315, -38.3785, 0.59", "-46.3694, -20.1708, -38.5847, 0.37", "-47.0156, -20.2674, -38.7095, 0.22", "-47.4933, -20.3518, -38.8044, 0.44", "-48.1738, -20.494, -38.9487, 0.22", "-48.7214, -20.6134, -39.0857, 0.22", "-49.1414, -20.7149, -39.2054, 0.22", "-49.4945, -20.8206, -39.3159, 0.29", "-50.1236, -21.0378, -39.5123, 0.29", "-50.8611, -21.3064, -39.7371, 0.22", "-51.6986, -21.5936, -40.0108, 0.22", "-52.2289, -21.7454, -40.199, 1.03", "-52.8433, -21.9109, -40.4216, 0.29", "-53.3573, -22.0392, -40.612, 0.44", "-53.8145, -22.1361, -40.7732, 0.29", "-54.5759, -22.2965, -41.0074, 0.29", "-55.243, -22.4496, -41.1775, 0.66", "-55.8159, -22.615, -41.306, 0.29", "-56.5436, -22.8601, -41.4311, 0.29", "-56.7227, -22.9342, -41.4612, 0.29", "-57.6947, -23.4185, -41.6038, 2.42", "-58.5165, -23.9025, -41.7011, 1.54", "-59.4859, -24.5345, -41.8115, 0.37", "-60.0842, -24.9413, -41.8962, 0.37", "-60.8338, -25.4718, -42.02, 0.37", "-61.1855, -25.733, -42.0946, 0.37", "-61.6395, -26.0892, -42.2283, 0.37", "-62.0904, -26.4619, -42.3994, 0.37", "-62.3513, -26.679, -42.5252, 0.37", "-62.6617, -26.9574, -42.6967, 0.37", "-63.0246, -27.3132, -42.909, 0.37", "-63.4792, -27.835, -43.1934, 0.37", "-64.097, -28.6783, -43.5666, 0.51", "-64.5157, -29.3217, -43.8099, 0.44", "-64.8773, -29.8942, -44.0268, 0.37", "-65.1852, -30.382, -44.2291, 0.37", "-65.6946, -31.1653, -44.6073, 0.37", "-66.2211, -31.9378, -45.0498, 0.29", "-66.5639, -32.3908, -45.3489, 0.29", "-67.0814, -33.0178, -45.7966, 0.29", "-67.6655, -33.6189, -46.2899, 0.29", "-68.2989, -34.2033, -46.8109, 0.22", "-68.9404, -34.7422, -47.317, 0.44", "-69.7839, -35.4224, -47.9445, 0.44", "-70.6362, -36.1013, -48.4842, 0.44", "-71.3027, -36.6367, -48.827, 0.44", "-71.8602, -37.0787, -49.067, 0.29", "-72.5694, -37.6279, -49.3187, 0.29", "-73.0318, -37.9665, -49.4522, 0.29", "-73.8364, -38.5377, -49.6795, 0.22", "-74.547, -39.0431, -49.874, 0.22", "-75.5994, -39.8177, -50.1663, 0.22", "-76.2049, -40.2738, -50.3419, 0.22", "-76.8118, -40.7779, -50.5523, 0.22", "-77.4558, -41.3662, -50.8175, 0.22", "-77.8904, -41.8166, -51.0258, 0.22", "-78.11, -42.0756, -51.1532, 0.22", "-78.46, -42.5719, -51.4061, 0.22", "-79.0901, -43.655, -51.9872, 0.22", "-79.4837, -44.4984, -52.4614, 0.22", "-79.7294, -45.14, -52.8635, 0.22", "-79.8667, -45.6525, -53.236, 0.22", "-79.9356, -46.009, -53.5152, 0.22", "-80.0127, -46.427, -53.8397, 0.73", "-80.1126, -46.9124, -54.1872, 0.29", "-80.3147, -47.7674, -54.7557, 0.29", "-80.6195, -48.8421, -55.4307, 0.29", "-80.7944, -49.3973, -55.7585, 0.29", "-81.2369, -50.686, -56.4782, 0.22", "-81.6445, -51.7451, -57.022, 0.22", "-81.8427, -52.189, -57.2213, 0.88", "-82.1658, -52.8261, -57.4473, 0.88" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-25.5979, 46.0901, -40.686, 0.29", "-25.886, 46.3127, -41.8169, 0.44", "-25.8838, 46.6664, -43.0605, 0.29", "-25.8007, 46.9939, -43.6314, 0.29", "-25.7445, 47.4742, -44.215, 0.29", "-25.804, 48.0951, -44.8402, 0.29", "-25.9443, 48.5918, -45.2805, 0.29", "-26.1171, 49.0527, -45.5658, 0.29", "-26.5521, 50.1838, -46.157, 0.29", "-26.9029, 50.9775, -46.5419, 0.29", "-27.4371, 51.9489, -46.9864, 0.29", "-27.9511, 52.7449, -47.3328, 0.29", "-28.4698, 53.4247, -47.6121, 0.51", "-28.8656, 53.873, -47.7871, 0.51" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-25.5979, 46.0901, -40.686, 0.29", "-26.059, 46.6035, -40.4607, 0.29", "-26.5149, 47.0599, -40.2044, 0.44", "-26.6796, 47.2249, -40.1118, 0.29", "-27.1254, 47.6712, -39.8613, 0.44", "-28.2286, 48.7758, -39.2412, 0.22", "-28.5767, 49.1243, -39.0455, 0.37", "-29.1722, 49.7853, -38.5972, 0.44" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-19.567, 1.01684, 7.35177, 1.1", "-18.435, 1.62272, 9.57108, 1.1", "-18.0957, 1.74333, 10.019, 1.1", "-17.5206, 1.89755, 10.5758, 0.73", "-16.5392, 2.12492, 11.3135, 0.73", "-15.7554, 2.28028, 11.7838, 0.73", "-14.963, 2.40134, 12.2103, 1.03", "-14.201, 2.4656, 12.4917, 0.59", "-13.4819, 2.45957, 12.7274, 0.51", "-12.7358, 2.36557, 12.9198, 0.66", "-11.5004, 2.03348, 13.1558, 0.37", "-10.5742, 1.59518, 13.3302, 0.51", "-9.82217, 0.960498, 13.4815, 1.1", "-9.27961, 0.262319, 13.5922, 0.59", "-8.54542, -1.05926, 13.6995, 0.51", "-8.04208, -2.34968, 13.7269, 0.95", "-7.64614, -3.77586, 13.6777, 0.59", "-7.20077, -5.62497, 13.5777, 0.59", "-7.03573, -6.36215, 13.5476, 0.59", "-6.6937, -7.93753, 13.5481, 0.59", "-6.27006, -9.72463, 13.6301, 0.29", "-5.93721, -10.7943, 13.7548, 0.59", "-5.36924, -11.9887, 14.0438, 0.59", "-4.94194, -12.6364, 14.375, 0.59", "-4.59872, -13.1028, 14.7758, 0.59", "-4.19467, -13.61, 15.4941, 0.88", "-3.60147, -14.2163, 16.8132, 1.03", "-3.28936, -14.531, 17.7411, 1.03", "-3.10243, -14.7878, 18.6305, 1.03", "-2.96896, -15.083, 19.4755, 1.03", "-2.91598, -15.3843, 20.2484, 1.03", "-2.94232, -15.6914, 21.054, 1.03", "-2.99593, -15.8288, 21.5369, 1.03", "-3.13126, -15.9858, 22.5974, 1.03", "-3.12304, -16.0345, 23.6807, 1.03", "-2.98672, -16.0889, 24.3109, 1.03", "2.84969, -24.1397, 29.6087, 1.03" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-19.567, 1.01684, 7.35177, 1.1", "-20.3476, -0.221969, 8.00379, 0.73", "-20.7465, -0.7721, 8.31254, 0.59", "-21.2069, -1.46427, 8.68948, 0.37", "-21.604, -2.12563, 9.02527, 0.51", "-22.0382, -2.98072, 9.42693, 0.51", "-22.3368, -3.73144, 9.73154, 1.1", "-22.5627, -4.52573, 9.97204, 1.25", "-22.7303, -5.54494, 10.2603, 0.37", "-22.741, -6.11696, 10.4147, 0.37", "-22.6731, -7.02775, 10.6355, 0.37", "-22.4417, -8.3139, 10.9212, 0.37", "-22.264, -8.99848, 11.0364, 0.29", "-22.1454, -9.35067, 11.0834, 0.73", "-21.9053, -9.99915, 11.1674, 1.1", "-23.8752, -17.842, 14.8638, 1.1" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-23.8022, 9.8086, 11.2707, 1.69", "-23.8394, 10.4244, 10.8891, 1.03", "-23.7767, 11.2352, 10.4284, 1.03", "-23.6577, 11.9529, 10.0557, 0.44", "-23.5135, 12.6762, 9.70598, 0.44", "-23.3675, 13.4147, 9.38063, 0.73", "-23.2376, 14.1814, 9.06834, 0.37", "-23.1558, 14.7237, 8.88932, 0.95", "-23.0714, 15.3509, 8.68573, 0.51", "-23.0543, 15.7507, 8.54111, 0.51", "-23.1571, 16.4248, 8.27645, 0.66", "-23.3279, 16.8852, 8.08259, 0.37", "-23.6486, 17.5346, 7.81604, 0.73", "-23.9933, 18.1697, 7.55482, 0.73", "-24.4079, 18.9412, 7.2616, 0.66", "-24.6845, 19.6018, 7.05511, 0.66", "-24.8345, 20.1184, 6.93498, 0.59", "-24.9678, 20.951, 6.77979, 0.51", "-25.0055, 21.5113, 6.70303, 0.51", "-25.0081, 22.2239, 6.62747, 1.25", "-24.9997, 23.4773, 6.49259, 0.73", "-25.025, 23.947, 6.44911, 0.66", "-25.1601, 24.8527, 6.38138, 0.59", "-25.2974, 25.4725, 6.36118, 0.59", "-25.5291, 26.3634, 6.3401, 0.81", "-25.8981, 27.5655, 6.31009, 0.51", "-26.3019, 28.7631, 6.2685, 0.51", "-26.609, 29.719, 6.23956, 0.88", "-26.892, 30.7136, 6.22596, 0.37", "-27.152, 31.7887, 6.19689, 0.73", "-27.2468, 32.2973, 6.17113, 0.51", "-27.3308, 32.934, 6.13607, 0.59", "-27.385, 33.477, 6.08684, 0.81", "-27.4949, 34.3262, 5.97097, 0.51", "-27.5994, 34.8009, 5.88297, 0.51", "-27.8211, 35.5493, 5.72759, 0.81", "-28.2027, 36.594, 5.47928, 0.51", "-28.5293, 37.2714, 5.29407, 0.37", "-28.96, 37.9509, 5.03785, 0.37", "-29.4984, 38.5955, 4.72618, 0.59", "-29.7791, 38.8966, 4.54931, 0.59", "-30.0283, 39.1639, 4.369, 0.59", "-30.293, 39.4753, 4.14215, 0.59", "-30.7018, 40.1017, 3.75981, 0.66", "-31.0137, 40.9784, 3.31397, 0.44", "-31.116, 41.7303, 2.99198, 0.44", "-31.1293, 42.5, 2.68091, 0.59", "-31.115, 42.8529, 2.53418, 0.29", "-31.0663, 43.7113, 2.18576, 0.95", "-31.0505, 44.5854, 1.8449, 0.44", "-31.0815, 45.1176, 1.62421, 0.73", "-31.2383, 45.8893, 1.28048, 0.44", "-31.4526, 46.5263, 0.982177, 0.44", "-31.6796, 47.0713, 0.725549, 0.88", "-32.0856, 47.9227, 0.294735, 0.29", "-32.4569, 48.687, -0.110518, 0.81", "-32.8461, 49.5945, -0.62061, 0.51", "-33.0402, 50.2354, -0.992474, 0.51", "-33.1064, 50.6636, -1.24818, 0.73", "-33.0967, 51.4177, -1.72184, 0.44", "-32.9944, 52.0477, -2.10862, 0.44", "-32.8641, 52.6047, -2.38043, 0.44", "-32.679, 53.2437, -2.57568, 0.66", "-32.6286, 53.4819, -2.59707, 0.88", "-32.6231, 53.9682, -2.53255, 0.51", "-32.7874, 54.6447, -2.33994, 0.51", "-33.1545, 55.5184, -2.04789, 0.66", "-33.3921, 55.9665, -1.89753, 0.66", "-33.8531, 56.7285, -1.65391, 0.37", "-34.235, 57.354, -1.47346, 0.51", "-34.8381, 58.3731, -1.22105, 0.73", "-35.0147, 58.7058, -1.15926, 0.95", "-35.2824, 59.2842, -1.09373, 0.59", "-35.4087, 59.5854, -1.0711, 0.59", "-35.7102, 60.4711, -1.0414, 0.66", "-35.9418, 61.3533, -1.0308, 0.81", "-36.0205, 61.8151, -1.034, 0.81", "-36.0859, 62.3609, -1.07274, 0.37", "-36.1473, 63.1281, -1.16218, 0.37", "-36.2052, 63.8028, -1.25767, 0.37", "-36.2434, 64.0446, -1.29519, 0.37", "-36.4109, 64.8512, -1.40822, 1.03", "-36.6669, 66.0524, -1.55858, 0.29", "-36.7925, 66.6831, -1.64012, 0.29", "-36.9264, 67.4375, -1.74359, 0.29", "-37.1545, 68.6644, -1.94347, 0.29", "-37.2269, 69.0721, -2.03059, 0.29", "-37.3611, 69.9093, -2.25082, 0.59", "-37.4192, 70.5997, -2.48594, 0.29", "-37.4042, 71.0412, -2.71989, 0.29", "-37.2189, 71.8189, -3.32796, 0.59", "-36.9269, 72.3337, -3.95684, 0.59", "-36.7269, 72.4798, -4.33533, 0.37", "-36.5261, 72.4288, -4.74703, 0.37", "-36.3598, 72.277, -5.15838, 0.37", "-36.2108, 72.0261, -5.68693, 0.81", "-36.1732, 71.8863, -5.98119, 0.81", "-36.2008, 71.7564, -6.45528, 0.81", "-36.3559, 71.6841, -7.78688, 0.81", "-36.4112, 71.8282, -8.49489, 0.95", "-36.3716, 72.0406, -8.92062, 0.95", "-36.2397, 72.4192, -9.49266, 0.37", "-36.1088, 72.8034, -10.0287, 0.37", "-35.9934, 73.1353, -10.5171, 0.37", "-35.823, 73.4598, -11.0838, 0.37", "-35.5806, 73.7036, -11.8322, 0.37", "-35.3973, 73.6333, -12.5594, 0.59", "-35.2213, 73.0752, -13.7861, 0.66", "-35.2068, 72.6562, -14.4527, 0.59", "-35.2822, 72.0151, -15.4194, 0.44", "-35.4138, 71.4251, -16.2729, 0.44", "-35.6312, 70.6111, -17.4048, 0.44", "-35.729, 70.2031, -17.9686, 0.44", "-35.814, 69.7581, -18.6112, 0.44", "-35.9197, 69.3265, -19.6274, 0.44", "-35.9433, 69.3506, -19.9324, 0.44", "-35.9685, 69.6571, -20.4581, 0.44", "-35.9813, 70.1174, -20.9291, 0.44", "-35.9716, 70.5241, -21.2621, 0.44", "-35.9408, 71.0454, -21.6132, 0.44", "-35.9522, 71.5928, -21.9301, 0.44", "-36.136, 71.9766, -22.2941, 0.44", "-36.3848, 72.1362, -22.5945, 0.44", "-36.6762, 72.3569, -22.913, 0.44", "-36.8915, 72.5763, -23.2214, 0.44", "-37.0782, 72.8137, -23.5898, 0.44", "-37.2635, 73.0762, -24.0501, 0.44", "-37.4248, 73.2779, -24.5086, 0.44", "-37.7836, 73.7488, -25.6213, 0.44", "-37.9821, 74.0351, -26.2721, 0.44", "-38.1304, 74.2723, -26.8709, 0.44", "-38.2934, 74.5514, -27.6932, 0.44", "-38.4716, 74.8646, -28.7951, 0.44", "-38.5597, 75.0475, -29.4851, 0.44", "-38.5879, 75.1658, -29.9676, 0.44", "-38.5688, 75.3801, -30.7043, 0.44", "-38.5396, 75.46, -30.9316, 0.44", "-38.4639, 75.6227, -31.3767, 0.44", "-38.3576, 75.8915, -32.2725, 0.51", "-38.4576, 75.9287, -33.1617, 0.51", "-38.6716, 75.8893, -34.0781, 0.51", "-38.7508, 75.8751, -34.3686, 0.51", "-38.9903, 75.8333, -35.3076, 0.37", "-39.2214, 75.8285, -36.3548, 0.37", "-39.4228, 75.9632, -37.6139, 0.37", "-39.438, 76.2095, -38.2612, 0.37", "-39.3573, 76.5871, -38.808, 0.37", "-39.1725, 77.1792, -39.5148, 0.37", "-38.9432, 77.7327, -40.0984, 0.37", "-38.6869, 78.2315, -40.5938, 0.37", "-38.4747, 78.5885, -40.9347, 0.37", "-37.9105, 79.4723, -41.8027, 0.37", "-37.7362, 79.7595, -42.0975, 0.37", "-37.5227, 80.1237, -42.4865, 0.37", "-37.2791, 80.6194, -43.098, 0.37", "-37.1225, 81.1202, -43.7635, 0.37", "-37.0771, 81.4095, -44.1444, 0.88", "-37.0253, 82.0436, -44.9499, 0.37", "-37.0125, 82.4249, -45.407, 0.37", "-37.0328, 82.9923, -46.0376, 0.37", "-37.1109, 83.6623, -46.7219, 0.37", "-37.1781, 84.1709, -47.2022, 0.59", "-37.2364, 84.979, -47.8661, 0.29", "-37.2122, 85.3631, -48.1431, 0.29", "-37.1545, 85.6776, -48.3508, 0.29", "-37.0018, 86.2171, -48.6771, 0.29", "-36.8329, 86.7604, -48.9933, 0.29", "-36.5164, 87.7387, -49.561, 0.59", "-36.2228, 88.6116, -50.0671, 0.22", "-35.8548, 89.5854, -50.6741, 0.22" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-23.8022, 9.8086, 11.2707, 1.69", "-24.2643, 10.8192, 11.5187, 0.81", "-24.6145, 11.5802, 11.6769, 0.73", "-24.9394, 12.2555, 11.7858, 0.51", "-25.6807, 13.6608, 11.9697, 0.81", "-26.1291, 14.4083, 12.0399, 0.51", "-26.3601, 14.7399, 12.0606, 0.59", "-26.9651, 15.4235, 12.0641, 0.59", "-27.3777, 15.7164, 12.039, 0.59", "-27.8863, 15.9135, 11.9939, 0.44", "-28.6463, 16.0477, 11.9458, 0.44", "-29.3909, 16.13, 11.9169, 0.44", "-30.3919, 16.2247, 11.8885, 0.81", "-31.6074, 16.3546, 11.8304, 0.44", "-32.2876, 16.4493, 11.7886, 0.81", "-33.4294, 16.629, 11.6858, 0.51", "-35.0801, 16.8953, 11.53, 0.37", "-36.0622, 17.0463, 11.4325, 0.37", "-37.3121, 17.2395, 11.3075, 0.44", "-38.1383, 17.3819, 11.2599, 0.37", "-38.7784, 17.5016, 11.2657, 0.37", "-39.5247, 17.6454, 11.3418, 0.37", "-40.2141, 17.7684, 11.4991, 0.59", "-41.3633, 17.9654, 11.8446, 0.44", "-42.4972, 18.1779, 12.2227, 0.73", "-43.4732, 18.3973, 12.5382, 0.73", "-44.4732, 18.6714, 12.8419, 0.59", "-45.7274, 19.0676, 13.1762, 0.44", "-46.5434, 19.3407, 13.376, 0.44", "-47.3935, 19.615, 13.5808, 0.44", "-48.1448, 19.8505, 13.7442, 0.44", "-48.6429, 20.0106, 13.8461, 0.44", "-49.0851, 20.1566, 13.9359, 0.73", "-49.7645, 20.3979, 14.0901, 0.44", "-50.5413, 20.6737, 14.3063, 0.59", "-50.7615, 20.7417, 14.3793, 0.95", "-51.2038, 20.8577, 14.5446, 0.95", "-51.4289, 20.902, 14.6349, 1.03", "-59.9121, 24.5865, 13.8484, 1.03", "-68.0789, 29.0259, 13.6299, 1.03", "-76.3124, 33.3341, 13.8902, 1.03", "-84.2038, 38.201, 13.0856, 1.03", "-91.4972, 43.7793, 11.4718, 1.03", "-99.8065, 47.9298, 11.2147, 1.03", "-108.721, 50.2591, 10.2569, 1.03", "-117.324, 53.2864, 8.59528, 1.03" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-51.61, 10.9813, 2.60995, 0.59", "-52.0964, 11.7491, 2.36733, 0.29", "-52.4517, 12.3307, 2.15109, 0.29", "-52.9155, 13.0615, 1.84433, 0.29", "-53.4809, 13.9471, 1.44885, 0.37", "-53.8319, 14.4959, 1.19959, 0.37", "-54.3286, 15.2637, 0.854439, 0.37", "-54.6427, 15.814, 0.600865, 0.37", "-54.9331, 16.3813, 0.362652, 0.37", "-55.2448, 16.9997, 0.117345, 0.37", "-55.4922, 17.4587, -0.077776, 0.51", "-55.8429, 18.0955, -0.341658, 0.59", "-56.3074, 18.9587, -0.690284, 0.29", "-56.7214, 19.8112, -1.00375, 0.59", "-57.0764, 20.6077, -1.28876, 0.51", "-57.5423, 21.6765, -1.69228, 0.37" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-51.61, 10.9813, 2.60995, 0.59", "-51.0303, 11.9584, 2.24493, 0.29", "-50.2529, 13.0135, 1.9191, 0.29", "-49.4396, 13.9632, 1.61995, 0.22", "-48.4955, 14.9416, 1.30379, 0.22", "-47.7941, 15.5956, 1.08394, 0.22", "-46.6129, 16.6211, 0.732291, 0.22", "-44.8219, 17.9389, 0.291518, 0.22", "-43.3633, 18.8436, -0.0216892, 0.22", "-42.5629, 19.2839, -0.181091, 0.22", "-41.4037, 19.8577, -0.40485, 0.22", "-40.6539, 20.1927, -0.557072, 0.22", "-39.376, 20.6991, -0.844023, 0.22", "-38.2063, 21.1259, -1.09893, 0.59", "-36.8299, 21.6201, -1.35317, 0.29" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "26.252, 34.782, -1.64174, 0.66", "27.09, 34.8719, -1.34513, 0.29", "28.6431, 35.0185, -0.602508, 0.29", "29.3875, 35.0669, -0.131069, 0.29", "30.0515, 35.0941, 0.346936, 0.29", "30.768, 35.1143, 0.949028, 0.29", "31.2879, 35.1251, 1.4599, 0.51", "32.0797, 35.1499, 2.32792, 0.22", "32.8293, 35.2084, 3.2336, 0.29", "33.1102, 35.2485, 3.61005, 0.66", "33.8071, 35.4047, 4.59304, 0.15", "34.5511, 35.6694, 5.71308, 0.15", "35.0579, 35.8873, 6.47052, 0.22", "35.4595, 36.1101, 7.08261, 0.66", "35.8097, 36.3372, 7.58302, 0.66", "36.1402, 36.5882, 8.0477, 0.51", "36.7394, 37.1603, 8.91517, 0.22", "42.6365, 39.0226, 16.4221, 0.22" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "26.252, 34.782, -1.64174, 0.66", "26.9751, 35.3513, -1.8557, 0.29", "28.3418, 36.2345, -2.34502, 0.51", "30.329, 37.3905, -3.04084, 0.37", "31.0197, 37.7824, -3.26654, 0.15", "33.3632, 39.0656, -3.88835, 0.29", "34.9164, 39.9098, -4.27418, 0.29", "35.6826, 40.3113, -4.43023, 0.37", "36.4421, 40.7273, -4.55619, 0.44", "37.2889, 41.2397, -4.66416, 0.44", "38.4325, 42.0372, -4.64813, 0.44", "39.1555, 42.6044, -4.54404, 0.66", "40.9689, 44.1176, -4.24307, 0.29", "42.1332, 45.0742, -4.04585, 0.29", "43.2284, 45.9746, -3.84659, 0.29", "44.099, 46.6751, -3.68829, 0.29", "44.9128, 47.2918, -3.5491, 0.29", "45.7866, 47.8862, -3.39117, 0.51", "46.6601, 48.4014, -3.25074, 0.59", "47.5573, 48.8832, -3.09201, 0.22", "48.7616, 49.4787, -2.86983, 0.22", "49.5456, 49.8342, -2.71951, 0.22", "49.9746, 50.0147, -2.6282, 0.22", "50.6552, 50.2893, -2.47534, 0.22", "51.2432, 50.5136, -2.35213, 0.22", "51.9016, 50.7342, -2.23992, 0.22", "52.2062, 50.8324, -2.19748, 0.22", "53.0529, 51.1175, -2.09127, 0.22", "53.7786, 51.3526, -1.99979, 0.22", "54.1583, 51.4745, -1.9369, 0.22", "54.8919, 51.728, -1.79238, 0.81", "56.1174, 52.1791, -1.52098, 0.37", "57.0421, 52.5197, -1.31065, 0.44", "58.016, 52.8725, -1.0911, 0.44", "59.643, 53.4278, -0.777347, 0.29", "61.0238, 53.8941, -0.542952, 0.29", "62.9034, 54.5288, -0.232362, 0.44", "64.3732, 55.0366, 0.0314922, 0.29", "65.4611, 55.4209, 0.240232, 0.29", "66.5117, 55.8073, 0.453183, 0.44", "67.6706, 56.2678, 0.718389, 0.73", "68.7559, 56.7759, 1.03653, 0.37", "70.1654, 57.574, 1.5482, 0.22", "70.8132, 57.9889, 1.83453, 0.37", "71.2602, 58.2987, 2.05766, 0.66", "72.4466, 59.1261, 2.67543, 0.22", "73.5533, 59.8538, 3.21002, 0.22", "74.2118, 60.2732, 3.49103, 0.22", "74.8971, 60.6983, 3.73623, 0.22", "75.5581, 61.0809, 3.95975, 1.03", "76.9585, 61.8566, 4.37719, 0.22", "77.621, 62.2101, 4.5427, 0.22", "78.1426, 62.4685, 4.66754, 0.22", "79.1021, 62.9601, 4.89262, 0.22", "80.0538, 63.4777, 5.11929, 0.22", "80.9724, 63.9769, 5.34084, 0.95", "81.8449, 64.4422, 5.57606, 0.37", "82.8427, 64.948, 5.85061, 0.07", "83.3074, 65.1626, 5.98806, 0.37", "84.143, 65.5109, 6.24696, 0.07", "84.9395, 65.8291, 6.49751, 0.66", "86.2118, 66.3189, 6.90717, 0.22", "87.4582, 66.7948, 7.28667, 0.22", "88.4569, 67.1769, 7.56045, 0.22", "89.5225, 67.5674, 7.84998, 0.37", "89.9236, 67.7146, 7.95306, 0.22", "90.5648, 67.9661, 8.1226, 0.51", "99.8125, 73.2135, 11.4461, 0.51", "109.913, 77.8041, 12.2901, 0.51", "119.533, 83.4232, 11.8833, 0.51", "129.116, 88.9751, 10.6158, 0.51" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "19.8931, -73.4827, 55.0868, 0.37", "20.3805, -82.513, 59.9616, 0.37", "22.1143, -91.7475, 64.1457, 0.37", "24.544, -101.127, 67.6228, 0.37", "25.2566, -110.741, 71.2591, 0.37", "24.9135, -120.886, 73.1907, 0.37", "26.2665, -131.101, 74.0836, 0.37", "28.4901, -141.183, 73.4483, 0.37", "31.0591, -151.024, 71.5951, 0.37" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "19.8931, -73.4827, 55.0868, 0.37", "20.4337, -81.2454, 59.016, 0.37", "20.0984, -87.9845, 64.4596, 0.37", "19.6595, -95.1278, 69.3797, 0.37", "20.4784, -102.255, 74.2832, 0.37", "21.3877, -110.094, 78.0019, 0.37", "23.0036, -117.955, 81.4371, 0.37", "26.0057, -125.642, 84.297, 0.37", "28.9401, -133.812, 85.4922, 0.37", "31.3812, -141.691, 88.3772, 0.37" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "14.3272, 25.6847, 0.932051, 0.44", "14.5798, 26.2452, 1.38223, 0.37", "14.5535, 27.4704, 2.31614, 0.37", "14.4496, 27.7739, 2.56119, 0.51", "14.2466, 28.2511, 2.93454, 0.59", "14.1849, 28.3976, 3.06086, 0.88", "13.8333, 29.0871, 3.64104, 0.29", "13.4665, 29.7259, 4.18891, 0.29", "13.1409, 30.2577, 4.64755, 0.59", "12.8291, 30.8061, 5.09252, 0.59", "12.3257, 31.8587, 5.82973, 0.44", "12.0808, 32.4893, 6.19197, 0.44", "11.9621, 32.9679, 6.39259, 0.44", "11.8817, 33.6012, 6.58372, 0.81", "11.853, 34.5747, 6.78821, 0.44", "11.9021, 35.5619, 6.9389, 0.44", "11.9913, 36.3469, 7.02122, 0.44", "12.1613, 37.3619, 7.14977, 0.44", "12.3043, 37.9741, 7.2339, 0.95", "12.6371, 39.0248, 7.38932, 0.29", "13.0221, 40.0213, 7.56593, 0.29", "13.3026, 40.6812, 7.67385, 0.88", "13.6552, 41.4501, 7.75436, 0.88", "14.0741, 42.3119, 7.79086, 0.44", "14.5163, 43.1882, 7.76948, 0.44", "14.9074, 43.9464, 7.69126, 0.37", "15.5375, 45.1442, 7.53455, 0.29", "15.9611, 46.0271, 7.43625, 0.29", "16.2224, 46.6449, 7.39478, 0.29", "16.4837, 47.3483, 7.40263, 0.29", "16.6872, 47.9482, 7.45368, 0.29", "16.8999, 48.57, 7.55308, 1.03", "17.3946, 50.1241, 7.94898, 0.22", "17.6362, 50.9845, 8.2398, 0.29", "17.7963, 51.6384, 8.49901, 0.29", "17.9302, 52.2326, 8.76743, 0.29", "18.0816, 52.9255, 9.09714, 0.29", "18.2244, 53.5899, 9.45394, 0.29", "18.322, 54.0807, 9.75594, 0.81", "18.414, 54.6141, 10.0905, 0.81", "18.4604, 55.0523, 10.3507, 0.59", "18.4947, 55.6203, 10.6847, 0.88", "18.5767, 56.8032, 11.3949, 0.37", "18.6573, 57.4127, 11.7427, 0.37", "18.7163, 57.8321, 11.9645, 0.37", "18.8188, 58.5418, 12.3167, 0.37", "18.8507, 59.0992, 12.5742, 0.22", "19.5617, 67.502, 14.917, 0.22", "21.1608, 75.3098, 18.4815, 0.22", "24.4142, 82.6845, 21.7845, 0.22", "28.0699, 90.2849, 23.9833, 0.22", "32.1607, 97.9701, 24.2839, 0.22", "36.8262, 105.248, 23.4, 0.22", "42.5449, 111.188, 20.8301, 0.22", "47.9796, 117.779, 19.3957, 0.22", "53.0662, 124.548, 17.5456, 0.22", "58.3324, 131.157, 15.648, 0.22" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "14.3272, 25.6847, 0.932051, 0.44", "13.5888, 26.3958, 1.32686, 0.44", "12.2188, 27.751, 2.17891, 1.18", "11.2838, 28.7852, 2.72483, 0.44", "10.5147, 29.7219, 3.15386, 0.51", "9.69098, 30.8033, 3.61549, 0.51", "9.01583, 31.7949, 4.01994, 0.73", "8.39557, 32.935, 4.44366, 0.66", "7.83432, 34.2889, 4.85771, 0.44", "7.54381, 35.3071, 5.14179, 0.88", "7.45752, 35.8784, 5.31066, 0.88", "7.41116, 37.1283, 5.66732, 0.44", "7.45555, 38.5641, 6.07279, 0.81", "7.53506, 39.6745, 6.41518, 0.29", "7.62599, 40.9951, 6.8423, 0.29", "7.62236, 42.3198, 7.2818, 1.03", "7.4866, 43.8558, 7.77708, 0.44", "7.2192, 45.071, 8.13916, 0.51", "6.85431, 46.0805, 8.40248, 0.51", "6.48538, 46.8898, 8.61981, 0.44", "5.6565, 48.4543, 9.01813, 0.88", "5.32266, 49.0433, 9.16517, 0.59", "4.58064, 50.3774, 9.51656, 0.44", "4.01725, 51.6199, 9.8428, 0.44", "3.66909, 52.6141, 10.0951, 0.66", "3.4441, 53.4598, 10.2982, 0.95", "3.22198, 54.3998, 10.4882, 0.73", "2.96126, 55.2422, 10.6462, 0.88", "2.56634, 56.4963, 10.8749, 0.59", "2.06934, 57.8057, 11.0591, 0.66", "1.51559, 58.9625, 11.1691, 1.03", "0.871256, 60.0036, 11.2629, 0.44", "-0.0540693, 61.1618, 11.3602, 0.37", "-4.37384, 73.3786, 14.9848, 0.37" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_17",
    "id" : "apic_17",
    "points3d" : [ "-37.9139, -98.0872, -26.2056, 2.13", "-38.4434, -98.5354, -25.8874, 1.47", "-39.1677, -99.1242, -25.4703, 0.73", "-39.7001, -99.5312, -25.1771, 0.88", "-40.6611, -100.211, -24.6676, 0.81", "-41.0969, -100.488, -24.4438, 0.66", "-41.753, -100.844, -24.1167, 0.51", "-42.2073, -101.036, -23.8936, 0.51", "-42.8684, -101.222, -23.5736, 0.51", "-43.4884, -101.332, -23.2705, 0.51", "-44.2563, -101.396, -22.8971, 0.51", "-45.3621, -101.442, -22.3438, 0.51", "-46.3688, -101.472, -21.8315, 0.51", "-47.1212, -101.525, -21.4445, 0.51", "-47.8417, -101.614, -21.0841, 0.51", "-48.606, -101.751, -20.7348, 0.51", "-49.1412, -101.886, -20.5191, 0.51", "-49.7285, -102.067, -20.3175, 0.59", "-50.6915, -102.365, -20.0558, 0.59", "-51.2992, -102.525, -19.9429, 0.59", "-51.8952, -102.649, -19.8572, 1.1", "-52.7252, -102.8, -19.7586, 0.51", "-53.6434, -102.927, -19.6657, 0.51", "-54.8392, -103.01, -19.5526, 0.51", "-55.9452, -103.0, -19.4441, 0.59", "-57.0655, -102.963, -19.3041, 0.81" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "-37.9139, -98.0872, -26.2056, 2.13", "-37.0326, -99.6048, -26.5016, 1.32", "-36.1449, -100.969, -26.7833, 1.32", "-35.3122, -102.185, -27.1088, 1.25", "-34.4844, -103.329, -27.5115, 1.76", "-33.5406, -104.577, -28.0483, 1.4", "-32.3427, -106.135, -28.7835, 1.4", "-31.6373, -106.997, -29.2597, 1.4", "-30.717, -108.141, -29.8911, 1.4", "-29.3734, -109.945, -30.8584, 1.4", "-28.7141, -110.911, -31.3474, 1.4", "-27.7394, -112.439, -32.109, 1.47", "-27.029, -113.544, -32.6534, 1.47", "-25.9547, -115.159, -33.4038, 1.47", "-24.6499, -117.002, -34.1842, 1.47", "-23.7245, -118.202, -34.6622, 1.47", "-23.0391, -119.005, -34.9747, 1.47", "-22.2468, -119.824, -35.3304, 1.47", "-21.7712, -120.23, -35.5403, 1.47", "-21.1637, -120.616, -35.834, 1.47", "-20.4609, -120.899, -36.115, 1.47", "-19.5385, -121.17, -36.446, 1.47" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-28.8656, 53.873, -47.7871, 0.51", "-28.9383, 54.133, -47.9449, 0.59", "-29.0658, 54.8075, -48.4299, 0.59", "-29.1178, 55.4568, -48.9014, 0.59", "-29.1143, 56.3317, -49.5069, 0.37", "-29.0646, 57.4806, -50.2875, 0.37", "-29.0048, 58.3057, -50.8199, 0.51", "-28.9383, 59.4218, -51.5193, 0.37", "-28.8915, 60.712, -52.3096, 0.37", "-28.8378, 61.5236, -52.77, 0.29", "-28.802, 62.1434, -53.0562, 0.29", "-28.7839, 63.1701, -53.4386, 0.44", "-28.8176, 63.9827, -53.641, 0.29", "-28.9149, 64.7883, -53.7432, 0.29", "-29.168, 66.2849, -53.7854, 0.29", "-29.5092, 67.9146, -53.6806, 0.29", "-29.6963, 68.6947, -53.554, 0.29", "-30.0708, 69.9761, -53.2561, 0.51", "-30.373, 70.8787, -53.0122, 1.03", "-30.8308, 72.0512, -52.6718, 0.37", "-31.3234, 73.0744, -52.3786, 0.29", "-31.7301, 73.7987, -52.1933, 0.29", "-32.3082, 74.6998, -51.9937, 0.29", "-33.0996, 75.6746, -51.9038, 0.51", "-33.6797, 76.2999, -51.8867, 0.22", "-34.1638, 76.7707, -51.891, 0.22", "-34.614, 77.1975, -51.9174, 0.22", "-34.9446, 77.5054, -51.9426, 0.44", "-36.6403, 79.0348, -52.0185, 0.22", "-37.6171, 79.8504, -52.0281, 0.59", "-37.7668, 79.9715, -52.0266, 0.66" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-28.8656, 53.873, -47.7871, 0.51", "-29.2486, 53.9949, -48.2183, 0.66", "-29.6273, 54.0475, -48.6402, 0.66", "-30.1025, 54.0646, -49.2098, 0.37", "-30.5909, 54.0801, -49.8393, 0.22", "-30.9749, 54.1123, -50.3648, 0.66", "-31.2882, 54.1777, -50.8514, 0.44", "-31.7523, 54.3445, -51.6267, 0.44", "-32.0154, 54.5256, -52.1317, 0.66", "-32.1436, 54.6895, -52.4697, 0.66", "-32.2303, 54.9269, -52.8717, 0.51", "-32.311, 55.4831, -53.6355, 0.44", "-32.3099, 55.8841, -54.1195, 0.44", "-32.2497, 56.376, -54.6721, 0.44", "-32.1953, 56.6243, -54.9857, 0.44", "-32.0529, 56.9416, -55.6049, 0.44", "-31.9894, 56.9896, -55.8381, 0.44", "-31.9202, 56.9884, -56.0945, 0.44", "-31.8144, 56.9682, -56.6471, 0.51", "-31.8083, 56.9286, -57.1726, 0.51", "-31.966, 56.8701, -57.7943, 0.51", "-32.1779, 56.8046, -58.2551, 0.51", "-32.4438, 56.7004, -58.7105, 0.51", "-33.1787, 56.4058, -59.7415, 0.29", "-33.5561, 56.278, -60.1692, 0.29", "-33.848, 56.2031, -60.4605, 0.29", "-34.1727, 56.1177, -60.7877, 0.29", "-34.614, 55.9643, -61.3333, 0.29", "-34.7218, 55.9144, -61.5286, 0.29", "-34.9066, 55.8101, -62.1123, 0.29", "-35.0371, 55.7776, -62.6009, 0.29", "-35.2406, 55.7822, -63.3134, 0.51", "-35.4367, 55.8002, -63.8446, 0.51", "-35.6881, 55.8207, -64.4298, 0.51", "-35.863, 55.822, -64.7877, 0.51", "-36.0837, 55.8036, -65.179, 1.03", "-36.328, 55.7572, -65.5095, 0.73", "-36.9414, 55.6277, -66.178, 0.22", "-37.156, 55.5836, -66.3896, 0.22", "-37.545, 55.5037, -66.7623, 0.22", "-37.7477, 55.4654, -66.9509, 0.22", "-38.2061, 55.38, -67.3703, 0.66", "-38.7627, 55.265, -67.8583, 0.22", "-39.0062, 55.2186, -68.0479, 0.22", "-39.2693, 55.1923, -68.1769, 0.22", "-39.7885, 55.1878, -68.4055, 0.22", "-40.1799, 55.2235, -68.5817, 0.22", "-40.6592, 55.3086, -68.7992, 0.22", "-41.3018, 55.432, -69.0713, 0.22", "-42.6963, 55.6744, -69.6571, 0.22", "-43.6918, 55.8557, -70.1072, 0.22", "-44.1729, 55.9543, -70.3441, 0.22", "-44.3982, 55.9989, -70.462, 0.44", "-44.6883, 56.0532, -70.665, 0.15", "-45.0163, 56.1183, -70.9915, 0.81", "-45.4284, 56.2411, -71.5699, 0.22", "-45.6218, 56.3387, -71.9254, 0.22", "-45.9969, 56.5574, -72.6892, 0.81", "-46.516, 56.935, -73.8949, 0.37", "-46.7586, 57.1775, -74.563, 0.07", "-46.9182, 57.4074, -75.1195, 0.88", "-47.1432, 57.9387, -76.2933, 0.29" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "2.84969, -24.1397, 29.6087, 1.03", "7.6406, -29.4325, 34.3114, 0.73", "19.0488, -37.9267, 43.6824, 0.73" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.84969, -24.1397, 29.6087, 1.03", "8.67551, -31.6297, 35.1924, 0.73", "13.5624, -40.0374, 40.4194, 0.73", "17.281, -48.9491, 45.8108, 0.73", "20.6339, -58.7337, 49.8341, 0.73", "23.642, -68.7461, 53.5916, 0.73" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-23.8752, -17.842, 14.8638, 1.1", "-26.8276, -28.565, 17.8566, 0.44", "-30.9655, -38.5099, 21.8365, 0.44" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-23.8752, -17.842, 14.8638, 1.1", "-25.7737, -27.2562, 19.7333, 0.44", "-27.1456, -36.3482, 25.3147, 0.44", "-30.7949, -45.154, 30.2611, 0.44", "-36.1058, -53.3605, 34.6432, 0.44", "-39.7734, -61.7219, 40.2656, 0.44" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_19",
    "id" : "apic_19",
    "points3d" : [ "-57.0655, -102.963, -19.3041, 0.81", "-57.4828, -102.603, -18.3369, 0.51", "-57.7433, -102.432, -17.7842, 0.51", "-57.9633, -102.308, -17.2976, 0.51", "-58.3326, -102.138, -16.3627, 0.73", "-58.5889, -102.046, -15.742, 0.81", "-59.044, -101.923, -14.6628, 0.81", "-59.5671, -101.779, -13.5231, 0.81", "-59.8817, -101.705, -12.9447, 0.81", "-60.8133, -101.488, -11.4718, 0.81", "-61.3443, -101.374, -10.7551, 0.66", "-62.3574, -101.18, -9.51984, 0.37", "-63.0621, -101.073, -8.72448, 0.37", "-64.2688, -100.955, -7.44295, 0.37", "-65.392, -100.886, -6.28446, 0.81", "-66.0015, -100.875, -5.67776, 0.44", "-66.4908, -100.904, -5.14775, 0.44", "-67.0678, -101.036, -4.48959, 0.44", "-67.7053, -101.336, -3.62945, 0.51", "-68.295, -101.705, -2.8609, 0.51", "-68.6966, -101.956, -2.44596, 0.51", "-69.2877, -102.264, -1.93841, 0.51", "-69.8814, -102.515, -1.51006, 0.29", "-70.6694, -102.824, -0.926235, 0.51", "-71.8862, -103.302, -0.0509506, 0.29", "-72.5069, -103.564, 0.407439, 0.29", "-73.3884, -103.938, 1.13267, 0.44", "-74.0114, -104.178, 1.67972, 0.44", "-75.3092, -104.598, 2.8605, 0.44", "-76.2521, -104.875, 3.73695, 0.44", "-77.4619, -105.182, 4.88195, 0.44", "-78.3141, -105.374, 5.6344, 0.59", "-79.2127, -105.583, 6.36344, 0.44", "-80.0272, -105.792, 6.97426, 0.44", "-80.5517, -105.946, 7.32901, 0.44", "-81.2026, -106.164, 7.86811, 0.73", "-82.1589, -106.535, 8.77861, 0.51", "-82.8723, -106.869, 9.55857, 0.37", "-83.2256, -107.1, 10.0013, 0.59", "-83.9498, -107.716, 11.052, 0.29", "-85.2267, -108.92, 12.9157, 0.29", "-85.5789, -109.245, 13.3981, 0.29", "-85.9496, -109.546, 13.8251, 0.29", "-87.0916, -110.42, 14.7136, 0.29", "-87.8107, -110.962, 15.0445, 0.37", "-88.7784, -111.72, 15.314, 0.37", "-89.631, -112.346, 15.4857, 0.37", "-90.0139, -112.598, 15.5876, 0.37", "-90.7669, -113.066, 15.8255, 0.22", "-91.6849, -113.649, 16.2036, 0.59", "-92.9392, -114.506, 16.7749, 1.03", "-94.0669, -115.323, 17.3728, 0.22", "-94.8184, -115.921, 17.8342, 0.22", "-95.4079, -116.419, 18.2453, 0.22", "-96.3149, -117.225, 18.9592, 0.66", "-96.6128, -117.516, 19.2304, 0.37", "-96.8638, -117.78, 19.4965, 0.73", "-97.521, -118.515, 20.3694, 0.44", "-97.8262, -118.816, 20.7792, 0.44", "-98.1673, -119.088, 21.1795, 0.66", "-98.6907, -119.554, 21.7212, 0.66", "-99.1642, -120.045, 22.1739, 0.66", "-99.6367, -120.546, 22.5735, 0.37", "-100.069, -120.972, 22.8618, 0.37", "-100.935, -121.801, 23.3624, 0.73", "-102.058, -122.921, 24.0093, 0.51", "-103.128, -124.115, 24.6437, 0.51", "-103.976, -125.134, 25.2105, 0.51", "-104.731, -126.054, 25.7525, 0.51", "-105.413, -126.819, 26.24, 0.29", "-106.453, -127.843, 26.9966, 0.44", "-107.076, -128.371, 27.4754, 0.44", "-107.874, -129.037, 28.1746, 0.44", "-108.349, -129.439, 28.6665, 0.73", "-109.089, -130.042, 29.4849, 0.95", "-109.941, -130.666, 30.3741, 0.44", "-110.62, -131.124, 31.0049, 0.44", "-111.448, -131.699, 31.722, 0.44", "-112.293, -132.452, 32.4524, 0.59", "-112.893, -133.177, 33.0498, 0.44", "-113.223, -133.696, 33.4368, 0.44", "-113.478, -134.19, 33.7467, 0.44", "-113.79, -134.896, 34.1607, 0.44", "-114.239, -136.169, 34.8816, 0.51", "-114.455, -137.176, 35.468, 0.51", "-114.516, -137.828, 35.9528, 0.51", "-114.64, -137.645, 36.498, 0.51", "-114.847, -137.241, 37.0757, 0.51", "-115.034, -136.896, 37.4887, 0.51", "-115.647, -135.908, 38.5019, 0.15", "-116.134, -135.177, 39.2274, 0.37", "-116.579, -134.609, 39.9405, 0.22", "-116.917, -134.276, 40.4812, 0.22", "-117.153, -134.107, 40.8402, 0.22", "-117.708, -133.822, 41.6654, 0.22", "-118.429, -133.569, 42.7158, 0.88", "-119.691, -133.258, 44.5666, 0.44", "-120.193, -133.125, 45.2973, 0.44", "-120.43, -133.034, 45.6371, 0.44", "-120.726, -132.87, 46.0356, 0.44", "-120.96, -132.723, 46.3192, 0.59", "-121.617, -132.332, 46.9395, 0.37", "-122.478, -131.705, 47.6509, 0.29", "-123.203, -131.094, 48.277, 0.37", "-124.102, -130.291, 49.08, 0.37", "-124.701, -129.755, 49.6213, 0.29", "-125.35, -129.232, 50.2131, 0.15", "-131.789, -123.453, 56.482, 0.15", "-138.295, -117.246, 62.275, 0.15", "-144.867, -110.002, 66.687, 0.15", "-150.539, -101.108, 68.9562, 0.15", "-155.004, -91.2469, 69.3159, 0.15", "-159.853, -81.8212, 71.4443, 0.15", "-166.977, -74.181, 73.9592, 0.15", "-173.301, -66.3433, 77.7203, 0.15", "-180.284, -58.8286, 80.9027, 0.15", "-186.358, -50.8187, 84.7286, 0.15" ],
    "parent" : "apic_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "apic_18",
    "id" : "apic_18",
    "points3d" : [ "-57.0655, -102.963, -19.3041, 0.81", "-58.2775, -103.599, -19.3155, 0.59", "-59.9979, -104.395, -19.238, 0.51", "-61.6528, -105.076, -19.0398, 0.44", "-63.5608, -105.821, -18.7242, 0.44", "-64.6572, -106.223, -18.5091, 0.44", "-65.7448, -106.591, -18.262, 0.44", "-67.8235, -107.213, -17.6499, 0.51", "-69.8043, -107.743, -16.9924, 0.37", "-70.5962, -107.937, -16.7322, 0.37", "-72.1051, -108.306, -16.2524, 0.22", "-74.5355, -109.011, -15.5366, 0.37", "-75.7134, -109.408, -15.2592, 0.37", "-76.3902, -109.669, -15.1365, 0.73", "-77.9384, -110.317, -14.9307, 0.44", "-78.9259, -110.734, -14.8341, 0.44", "-80.4245, -111.401, -14.6917, 1.1", "-81.8619, -112.07, -14.5107, 0.44", "-82.6445, -112.415, -14.3878, 0.44", "-83.2189, -112.649, -14.2675, 0.59", "-84.3555, -113.065, -13.9655, 0.51", "-85.5357, -113.472, -13.6097, 0.44", "-86.8025, -113.917, -13.1851, 0.44", "-88.0408, -114.423, -12.758, 0.95", "-88.8672, -114.79, -12.4848, 0.59", "-89.4195, -115.044, -12.3065, 0.59", "-90.0828, -115.368, -12.0955, 0.37", "-91.1339, -115.892, -11.8298, 0.59", "-92.1622, -116.403, -11.6098, 0.73", "-93.76, -117.168, -11.2845, 0.81", "-94.5428, -117.538, -11.1468, 0.81", "-96.1984, -118.329, -10.8343, 0.51", "-97.9801, -119.178, -10.4833, 0.51", "-98.8206, -119.603, -10.3108, 0.37", "-100.16, -120.349, -10.0029, 0.37", "-100.665, -120.658, -9.87211, 0.37", "-101.914, -121.463, -9.49075, 0.81", "-102.692, -121.986, -9.19234, 0.51", "-103.397, -122.491, -8.87645, 0.37", "-104.223, -123.111, -8.48735, 0.37", "-105.158, -123.798, -8.06117, 0.37", "-106.078, -124.415, -7.67883, 0.51", "-107.475, -125.322, -7.16351, 0.59", "-108.602, -126.04, -6.73843, 0.29", "-109.425, -126.558, -6.42907, 0.66", "-110.411, -127.155, -6.05977, 0.81", "-111.118, -127.562, -5.79127, 0.51", "-112.706, -128.404, -5.16128, 0.37", "-113.757, -128.918, -4.73691, 0.37", "-114.762, -129.363, -4.32118, 0.37", "-116.185, -129.972, -3.78055, 0.44", "-117.25, -130.413, -3.43339, 0.51", "-118.153, -130.76, -3.18934, 0.51", "-118.975, -131.037, -3.0187, 0.88", "-120.409, -131.485, -2.84188, 0.44", "-121.64, -131.854, -2.70155, 0.51", "-122.603, -132.153, -2.56908, 0.73", "-123.276, -132.355, -2.43786, 0.73", "-123.719, -132.478, -2.33117, 0.44", "-124.704, -132.721, -1.95023, 0.44", "-126.184, -133.065, -1.23823, 0.51", "-127.149, -133.3, -0.712628, 0.95", "-128.007, -133.52, -0.249867, 0.59", "-128.844, -133.748, 0.113251, 0.59", "-130.059, -134.098, 0.47756, 0.81", "-130.951, -134.359, 0.612751, 1.03", "-132.073, -134.679, 0.61806, 0.59", "-132.563, -134.82, 0.585203, 0.59", "-133.749, -135.182, 0.47157, 0.29", "-134.679, -135.476, 0.345244, 0.59", "-136.107, -135.902, 0.0722914, 0.66", "-136.634, -136.045, -0.0323, 0.66", "-137.052, -136.159, -0.125558, 0.66", "-137.897, -136.426, -0.306225, 0.66", "-139.175, -136.898, -0.563993, 0.44", "-140.531, -137.486, -0.814362, 0.44", "-141.473, -137.973, -0.978283, 0.59", "-142.424, -138.504, -1.08494, 0.73", "-143.343, -139.028, -1.11046, 0.66", "-143.862, -139.339, -1.0643, 0.73", "-144.781, -139.938, -0.842103, 0.51", "-145.58, -140.484, -0.546825, 0.51", "-146.374, -141.008, -0.186362, 0.37", "-147.223, -141.521, 0.253994, 0.37", "-147.741, -141.807, 0.52988, 1.1", "-148.245, -142.083, 0.797251, 1.1", "-148.856, -142.42, 1.0945, 0.51", "-149.703, -142.907, 1.47495, 0.37", "-150.706, -143.526, 1.8599, 1.1", "-151.207, -143.816, 2.03677, 0.88", "-151.881, -144.182, 2.24771, 0.66", "-152.836, -144.679, 2.50551, 0.37", "-153.733, -145.127, 2.71689, 0.37", "-154.69, -145.578, 2.91397, 0.37", "-156.585, -146.464, 3.24832, 0.37", "-157.858, -147.073, 3.45102, 0.37", "-158.704, -147.474, 3.57629, 0.51", "-159.434, -147.821, 3.67923, 0.51", "-159.817, -148.006, 3.72555, 0.51", "-160.618, -148.408, 3.824, 0.22", "-161.976, -149.129, 4.00042, 0.29", "-162.781, -149.545, 4.13541, 0.51", "-163.605, -149.957, 4.28473, 0.51", "-164.417, -150.358, 4.42446, 0.07", "-164.991, -150.649, 4.50703, 0.07", "-165.19, -150.752, 4.52604, 0.66", "-165.998, -151.168, 4.58022, 0.07", "-167.042, -151.71, 4.62851, 0.81", "-167.637, -152.016, 4.63751, 1.32", "-169.52, -152.975, 4.63495, 0.29", "-170.958, -153.688, 4.60865, 0.07", "-171.604, -153.986, 4.60114, 0.07", "-172.345, -154.302, 4.59215, 0.59", "-173.256, -154.661, 4.58275, 0.22", "-173.824, -154.869, 4.57569, 1.54", "-175.496, -155.453, 4.54323, 0.22", "-177.128, -155.963, 4.50099, 0.15", "-177.955, -156.201, 4.47698, 0.29", "-179.736, -156.681, 4.44151, 0.29", "-180.533, -156.877, 4.44082, 0.37", "-181.924, -157.188, 4.44988, 2.64", "-183.649, -157.544, 4.52249, 0.59", "-184.692, -157.737, 4.60713, 0.44", "-185.738, -157.918, 4.7588, 0.44", "-186.177, -157.99, 4.85004, 0.44", "-186.416, -158.029, 4.91097, 0.66", "-187.487, -158.241, 5.2383, 0.51", "-188.516, -158.516, 5.59489, 0.37", "-189.441, -158.776, 5.91367, 0.37", "-190.438, -159.063, 6.2538, 0.66", "-190.827, -159.183, 6.38308, 0.88", "-191.894, -159.55, 6.72655, 0.51", "-193.42, -160.14, 7.1535, 0.15", "-194.75, -160.723, 7.50273, 0.15", "-195.31, -160.998, 7.65518, 0.15", "-195.712, -161.221, 7.76722, 0.15", "-196.546, -161.738, 7.9956, 0.44", "-197.721, -162.518, 8.34265, 0.15", "-198.578, -163.131, 8.60622, 1.32", "-199.691, -163.948, 8.97875, 0.59", "-200.899, -164.821, 9.40564, 0.15", "-201.453, -165.213, 9.61249, 0.59", "-202.591, -166.004, 10.0534, 0.15", "-202.978, -166.279, 10.1959, 0.44", "-203.703, -166.804, 10.4112, 0.07", "-204.416, -167.314, 10.5523, 0.07", "-205.022, -167.752, 10.6321, 0.07", "-205.544, -168.14, 10.6589, 1.03", "-206.611, -169.032, 10.6271, 0.22", "-207.288, -169.671, 10.6186, 0.15", "-207.832, -170.225, 10.6058, 0.15", "-208.4, -170.825, 10.5958, 0.15", "-209.062, -171.473, 10.6221, 0.15", "-209.881, -172.239, 10.6803, 0.15", "-210.73, -172.971, 10.7326, 0.15", "-211.357, -173.49, 10.8024, 0.95", "-211.639, -173.711, 10.8611, 1.18", "-213.319, -174.92, 11.3654, 0.15", "-213.83, -175.262, 11.5553, 0.66", "-214.554, -175.692, 11.8394, 0.66", "-215.798, -176.389, 12.3469, 0.22", "-216.777, -176.942, 12.8116, 0.22", "-217.604, -177.419, 13.2512, 0.44", "-218.55, -177.979, 13.8657, 0.59", "-219.421, -178.481, 14.5206, 0.22", "-219.941, -178.774, 14.9428, 0.59", "-220.622, -179.144, 15.504, 0.59", "-221.27, -179.536, 16.1449, 0.51", "-222.032, -180.038, 17.1394, 0.29", "-222.643, -180.464, 18.1128, 0.29", "-222.817, -180.593, 18.4314, 0.29", "-223.207, -180.87, 19.1939, 0.44", "-223.925, -181.397, 20.6849, 0.44", "-224.598, -181.955, 22.1805, 0.44", "-224.867, -182.205, 22.8073, 0.44", "-225.101, -182.423, 23.3743, 0.44", "-225.398, -182.693, 24.0876, 0.37", "-225.647, -182.909, 24.6473, 0.29", "-226.094, -183.324, 25.5656, 0.29", "-226.333, -183.695, 26.1074, 0.29", "-226.498, -184.176, 26.6808, 0.22", "-226.541, -184.476, 26.9669, 0.22", "-226.555, -184.886, 27.2812, 0.22", "-226.564, -185.259, 27.5415, 0.22", "-226.613, -185.865, 27.7625, 0.22", "-226.638, -186.107, 27.8563, 0.22", "-226.684, -186.295, 27.9476, 0.22", "-226.827, -186.534, 28.1062, 0.22", "-227.055, -186.775, 28.3318, 0.22", "-227.648, -187.267, 28.866, 0.22", "-228.538, -187.9, 29.632, 1.98", "-229.107, -188.305, 30.1371, 1.98", "-230.059, -189.019, 30.9932, 1.18", "-230.815, -189.601, 31.6628, 0.44", "-231.17, -189.867, 31.9605, 0.44", "-231.883, -190.376, 32.526, 0.44", "-232.91, -191.102, 33.2291, 0.15", "-233.454, -191.53, 33.597, 0.15", "-233.91, -191.954, 33.9335, 0.15", "-234.514, -192.602, 34.3872, 0.15", "-234.744, -192.843, 34.5631, 0.66", "-235.247, -193.339, 34.9644, 0.51", "-235.9, -193.982, 35.5271, 0.37", "-236.59, -194.699, 36.1814, 0.37", "-236.962, -195.107, 36.5637, 1.03", "-237.562, -195.777, 37.2306, 0.66", "-238.124, -196.331, 37.8524, 0.37", "-238.722, -196.795, 38.5546, 0.22", "-239.249, -197.107, 39.2005, 0.22", "-239.701, -197.358, 39.8078, 0.22", "-240.059, -197.572, 40.3396, 0.81", "-240.483, -197.863, 41.0175, 0.81", "-241.126, -198.276, 41.9847, 0.44", "-241.728, -198.629, 42.8726, 0.44", "-242.464, -199.05, 43.9034, 0.37", "-242.898, -199.31, 44.4548, 0.22", "-243.483, -199.66, 45.1035, 0.22", "-243.992, -199.974, 45.6077, 0.81", "-244.816, -200.419, 46.2876, 0.37", "-245.358, -200.661, 46.7023, 0.44", "-245.798, -200.826, 47.0204, 0.07", "-246.124, -200.936, 47.2641, 0.59", "-247.23, -201.297, 48.0723, 0.37", "-247.749, -201.486, 48.4456, 0.22", "-248.711, -201.897, 49.1061, 0.22", "-249.164, -202.133, 49.4204, 1.84", "-250.422, -202.889, 50.2867, 0.22", "-250.994, -203.27, 50.6625, 0.22", "-251.52, -203.608, 50.9708, 0.22", "-252.053, -203.935, 51.2879, 0.22", "-252.713, -204.322, 51.6864, 0.22", "-253.26, -204.666, 52.0509, 0.44", "-253.556, -204.878, 52.2756, 0.22", "-254.612, -205.655, 53.1271, 0.22", "-255.443, -206.257, 53.8005, 0.95", "-256.315, -206.922, 54.5085, 0.29", "-257.03, -207.514, 55.0945, 1.03", "-257.943, -208.349, 55.8332, 0.59", "-258.523, -208.971, 56.2947, 0.81", "-258.944, -209.525, 56.6205, 0.15", "-259.34, -210.108, 56.8919, 0.15", "-259.621, -210.539, 57.0244, 0.73", "-259.997, -211.148, 57.1307, 0.73", "-260.367, -211.875, 57.1916, 0.29", "-260.536, -212.276, 57.2397, 0.29", "-260.716, -212.735, 57.3118, 0.59", "-261.196, -214.015, 57.5918, 0.15", "-261.419, -214.697, 57.7604, 0.81", "-261.742, -215.792, 58.0629, 0.37", "-261.986, -216.565, 58.3319, 0.51", "-262.128, -216.985, 58.514, 0.15", "-262.318, -217.55, 58.837, 0.15", "-262.416, -217.888, 59.1049, 0.15" ],
    "parent" : "apic_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "-19.5385, -121.17, -36.446, 1.47", "-19.4632, -121.925, -38.0527, 0.73", "-19.3302, -122.5, -39.4683, 0.73", "-19.2446, -122.892, -40.5244, 0.73", "-19.2085, -123.442, -42.0971, 0.73", "-19.3394, -124.051, -43.8724, 0.73", "-19.5983, -124.642, -45.621, 0.73", "-19.7535, -124.877, -46.3106, 0.73", "-19.984, -125.159, -47.0313, 0.73", "-20.4888, -125.675, -48.2764, 0.59", "-21.2444, -126.287, -49.6739, 0.51", "-21.8412, -126.693, -50.5683, 0.51", "-22.2695, -126.955, -51.2035, 0.51", "-23.1004, -127.498, -52.6261, 0.51", "-23.6073, -127.907, -53.7777, 0.51", "-23.8144, -128.128, -54.4427, 0.51", "-24.0452, -128.392, -55.2783, 0.73", "-24.519, -128.838, -56.7717, 0.73", "-24.7238, -128.982, -57.3035, 0.73", "-25.1941, -129.226, -58.2619, 0.73", "-26.1571, -129.713, -59.8118, 0.59", "-26.749, -130.021, -60.6725, 0.59", "-27.2207, -130.269, -61.3201, 0.59", "-27.9171, -130.629, -62.2266, 0.59", "-28.6576, -130.993, -63.2138, 0.59", "-29.318, -131.302, -64.1449, 0.59", "-30.0515, -131.695, -65.4312, 0.66", "-30.288, -131.859, -66.0, 0.66", "-30.4332, -132.015, -66.5059, 0.66", "-30.5787, -132.312, -67.3412, 0.66", "-30.6669, -132.662, -68.2077, 0.66", "-30.7788, -133.105, -69.2077, 0.66", "-30.9682, -133.506, -70.0915, 0.66", "-31.191, -133.807, -70.7178, 0.66", "-31.5293, -134.163, -71.3947, 0.66", "-31.702, -134.313, -71.6511, 0.51", "-32.1234, -134.625, -72.2011, 0.51", "-32.4552, -134.829, -72.6805, 0.51", "-32.7732, -135.004, -73.3115, 0.51", "-32.9759, -135.104, -73.8243, 0.51", "-33.2063, -135.214, -74.5135, 0.51", "-33.5159, -135.385, -75.5729, 0.51", "-33.7512, -135.537, -76.5069, 0.51", "-33.9402, -135.626, -77.2295, 0.51", "-34.0981, -135.629, -77.7821, 0.51", "-34.2358, -135.572, -78.2051, 0.51", "-34.3721, -135.466, -78.671, 0.51", "-34.5178, -135.321, -79.2158, 0.51", "-34.6994, -135.152, -79.9097, 0.51", "-35.0031, -134.907, -81.1135, 0.51", "-35.2837, -134.745, -82.2368, 0.51", "-35.5266, -134.638, -83.2595, 0.51", "-35.6445, -134.597, -83.7517, 0.51", "-35.8517, -134.509, -84.6216, 0.51", "-36.0231, -134.42, -85.3708, 0.51", "-36.2373, -134.272, -86.3607, 0.51", "-36.4424, -134.083, -87.7665, 0.51", "-36.526, -133.968, -88.5542, 0.51", "-36.5912, -133.8, -89.561, 0.51", "-36.601, -133.687, -90.1597, 0.51", "-36.5912, -133.596, -90.8195, 0.51", "-36.5682, -133.608, -92.1551, 0.51", "-36.6129, -133.826, -93.0635, 0.51", "-36.7153, -134.127, -93.7209, 0.51", "-36.8888, -134.542, -94.3562, 0.51", "-37.125, -134.996, -94.9426, 0.51", "-37.5527, -135.65, -95.7176, 0.51", "-38.0372, -136.261, -96.4394, 0.51", "-38.5273, -136.784, -97.1065, 0.51", "-38.8038, -137.008, -97.4485, 0.51", "-39.1345, -137.224, -97.8317, 0.51", "-39.4698, -137.408, -98.2102, 0.51", "-40.0952, -137.768, -98.9524, 0.51", "-41.0251, -138.323, -100.148, 0.66", "-41.8578, -138.839, -101.248, 0.51", "-42.2057, -139.065, -101.691, 0.51", "-42.838, -139.46, -102.433, 0.51", "-43.7837, -140.044, -103.528, 0.59", "-44.7362, -140.597, -104.581, 0.59", "-45.2874, -140.874, -105.161, 0.59", "-46.1363, -141.174, -106.026, 0.59", "-47.21, -141.398, -107.039, 0.59", "-48.2376, -141.479, -107.945, 0.59", "-48.9616, -141.472, -108.497, 0.59", "-50.1059, -141.421, -109.279, 0.59", "-51.6627, -141.298, -110.235, 0.37", "-52.3588, -141.222, -110.618, 0.37", "-53.2827, -141.114, -111.066, 0.37", "-54.7625, -140.96, -111.67, 0.66", "-55.4415, -140.913, -111.918, 0.66", "-57.0536, -140.89, -112.439, 0.66", "-57.4473, -140.913, -112.544, 0.66", "-58.0415, -140.993, -112.736, 0.66", "-59.1504, -141.23, -113.131, 0.66", "-59.6917, -141.37, -113.352, 0.51", "-60.5312, -141.598, -113.722, 0.37", "-61.2741, -141.794, -114.085, 0.95", "-62.9855, -142.171, -114.967, 0.29", "-63.4514, -142.251, -115.223, 0.51", "-64.277, -142.378, -115.703, 0.29", "-65.3188, -142.54, -116.325, 0.29", "-66.4228, -142.717, -116.986, 0.29", "-67.6871, -142.925, -117.632, 0.73", "-68.897, -143.099, -118.119, 0.73", "-70.1531, -143.259, -118.666, 0.73", "-70.8908, -143.343, -118.937, 0.51", "-71.7435, -143.383, -119.171, 0.51", "-74.5678, -143.218, -119.867, 0.73", "-75.9004, -142.931, -120.268, 0.66", "-78.2458, -142.155, -121.006, 0.66", "-79.9316, -141.342, -121.705, 0.66", "-80.7643, -140.844, -122.208, 0.66", "-81.6999, -140.18, -123.081, 0.81", "-82.4114, -139.621, -123.976, 0.81" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "-19.5385, -121.17, -36.446, 1.47", "-19.3039, -121.846, -36.5891, 1.47", "-18.8041, -123.208, -36.9439, 1.47", "-17.3518, -126.882, -38.2351, 1.47", "-16.4316, -129.041, -39.0528, 1.54", "-15.2581, -131.639, -40.0583, 1.1", "-14.5172, -133.143, -40.6394, 1.1", "-13.1241, -135.681, -41.5824, 1.47", "-11.3941, -138.462, -42.5426, 1.47", "-9.85473, -140.618, -43.2348, 2.2", "-8.30579, -142.606, -43.7745, 1.4", "-6.89733, -144.283, -44.0974, 1.4", "-5.68911, -145.699, -44.2267, 1.4", "-3.78481, -147.976, -44.1983, 1.4", "-3.14765, -148.859, -44.1325, 1.4", "-2.55604, -149.91, -44.1016, 1.4", "-2.00549, -151.337, -44.1547, 1.4", "-1.49154, -153.178, -44.4079, 1.32", "-1.08569, -154.944, -44.7898, 1.32", "-0.522401, -157.607, -45.5296, 1.76", "-0.0856666, -159.491, -46.1491, 1.76", "0.788935, -162.849, -47.5391, 1.18", "1.37445, -164.828, -48.5497, 1.47", "1.51214, -165.276, -48.8252, 1.47", "1.86713, -166.508, -49.738, 1.54", "2.19693, -167.809, -50.794, 1.54", "2.46664, -169.371, -52.1345, 1.69", "2.58058, -170.369, -52.9952, 1.69", "2.76803, -172.159, -54.3254, 1.69", "3.02624, -174.157, -55.6507, 1.69", "3.38105, -176.675, -57.1465, 1.4", "3.86801, -179.537, -58.642, 1.4", "4.37192, -181.904, -59.7028, 1.4", "4.9642, -184.211, -60.5777, 1.4", "5.73724, -186.736, -61.3469, 1.69", "6.42247, -188.835, -61.7891, 1.84", "6.8289, -189.974, -61.9253, 1.84", "7.94231, -192.891, -62.0043, 1.98", "8.52934, -194.389, -61.9626, 1.98", "9.12668, -195.892, -61.8639, 1.69", "9.79944, -197.585, -61.6515, 1.69", "10.9985, -200.659, -61.2064, 1.47", "11.48, -202.01, -61.0184, 1.47", "12.0123, -203.749, -60.8852, 1.32", "12.3295, -204.958, -60.8884, 1.32", "12.5912, -206.223, -60.9403, 1.32", "12.8515, -207.991, -61.0774, 1.4", "13.1088, -210.854, -61.3946, 1.84", "13.4684, -215.016, -61.9752, 2.28", "13.6537, -217.301, -62.3337, 1.69", "13.7376, -218.438, -62.5057, 1.47", "13.8301, -220.018, -62.6856, 1.47", "13.9324, -222.942, -62.8486, 2.28", "13.9605, -225.959, -62.8221, 1.4", "13.9751, -227.845, -62.6655, 1.03", "14.0587, -230.339, -62.3322, 1.69", "14.3308, -233.494, -61.796, 1.18", "14.6823, -236.392, -61.1736, 1.69", "15.0299, -239.063, -60.486, 1.98", "15.3233, -241.466, -59.8059, 2.2", "15.6531, -244.744, -58.8599, 1.25", "15.7956, -246.784, -58.2881, 0.95", "15.8121, -248.316, -57.8916, 1.47", "15.6599, -250.071, -57.4626, 1.47", "15.3015, -251.83, -57.1123, 1.62", "14.5661, -254.224, -56.7511, 0.88", "14.1301, -255.418, -56.637, 0.73", "13.5782, -256.977, -56.5457, 0.73", "13.0552, -258.673, -56.4955, 1.62", "12.415, -261.169, -56.4552, 1.76", "11.9833, -263.183, -56.4766, 1.84", "11.562, -265.3, -56.5391, 1.4", "11.0344, -267.824, -56.6597, 1.76", "10.6925, -269.468, -56.7518, 1.76", "10.4283, -270.757, -56.824, 1.76", "9.7679, -273.649, -56.9644, 1.54", "9.32407, -275.458, -57.0832, 1.54", "9.01953, -276.587, -57.1845, 1.54" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "19.0488, -37.9267, 43.6824, 0.73", "22.6103, -41.7908, 46.5531, 0.37", "25.5304, -45.4565, 50.2801, 0.37", "28.6729, -49.6567, 53.1888, 0.37", "32.2494, -53.461, 56.1175, 0.37", "35.7589, -57.2406, 59.1569, 0.37", "39.7236, -60.8574, 61.7974, 0.37", "44.3091, -63.6885, 64.3606, 0.37", "49.7321, -65.4715, 66.075, 0.37" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "19.0488, -37.9267, 43.6824, 0.73", "24.248, -42.0912, 48.1371, 0.37", "29.4338, -46.6494, 52.2171, 0.37", "35.2481, -50.173, 56.4411, 0.37", "39.4945, -54.6137, 61.5995, 0.37", "44.2316, -58.4496, 66.7979, 0.37", "47.7152, -63.0188, 72.4063, 0.37", "51.5373, -68.5069, 76.8803, 0.37", "56.4887, -73.7133, 80.4726, 0.37" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "-82.4114, -139.621, -123.976, 0.81", "-82.5708, -141.777, -125.132, 0.81", "-82.6703, -142.767, -125.695, 0.81", "-82.8438, -144.177, -126.589, 0.81", "-83.1329, -146.159, -128.017, 0.73", "-83.3304, -147.673, -129.205, 0.73", "-83.455, -148.62, -129.981, 0.73", "-83.6374, -149.951, -131.11, 0.73", "-83.8372, -151.16, -132.284, 0.81", "-83.9946, -152.192, -133.466, 0.59", "-84.1169, -152.964, -134.532, 0.59", "-84.302, -153.986, -136.127, 0.66", "-84.5672, -154.936, -137.717, 0.66", "-84.8426, -155.543, -138.849, 0.66", "-85.2706, -156.202, -140.109, 0.73", "-85.7155, -156.693, -141.07, 0.73", "-86.2801, -157.16, -142.012, 0.73", "-87.3304, -157.946, -143.545, 0.73", "-88.6397, -158.978, -145.298, 0.73", "-89.17, -159.43, -145.968, 0.73", "-89.9939, -160.22, -147.027, 0.73", "-90.9001, -161.253, -148.263, 0.73", "-91.3597, -161.883, -148.92, 0.73", "-92.225, -163.232, -150.089, 0.73", "-92.5374, -163.702, -150.421, 0.73", "-92.9364, -164.321, -150.816, 0.73", "-93.3854, -165.061, -151.232, 0.73", "-94.1229, -166.376, -151.905, 0.59", "-94.8421, -167.806, -152.625, 1.18", "-95.8544, -170.179, -153.78, 0.51", "-96.0522, -170.664, -154.044, 0.51", "-96.2402, -171.128, -154.304, 0.51", "-96.6693, -172.115, -154.901, 0.66", "-97.4789, -173.8, -155.984, 0.81", "-98.6308, -176.063, -157.419, 0.44", "-99.2656, -177.278, -158.2, 0.88", "-99.8451, -178.262, -158.877, 0.66", "-100.561, -179.351, -159.739, 0.44", "-100.852, -179.756, -160.109, 0.44", "-101.312, -180.357, -160.772, 0.59", "-101.757, -181.024, -161.56, 0.59", "-102.273, -181.95, -162.742, 0.59", "-102.817, -183.19, -164.442, 0.44", "-103.116, -184.045, -165.601, 0.44", "-103.428, -184.95, -166.781, 0.81", "-103.697, -185.703, -167.75, 0.81", "-104.26, -187.28, -169.702, 0.81", "-104.735, -188.813, -171.463, 0.15", "-104.909, -189.494, -172.185, 0.15", "-105.194, -190.68, -173.372, 0.15", "-105.398, -191.586, -174.15, 0.22", "-105.514, -192.055, -174.467, 0.22", "-105.668, -192.635, -174.765, 0.22", "-105.867, -193.338, -175.131, 0.22", "-106.128, -194.42, -175.814, 0.22", "-106.382, -196.084, -177.083, 0.29", "-106.483, -197.321, -178.081, 0.29", "-106.52, -198.747, -179.327, 0.29", "-106.435, -199.565, -180.111, 0.29", "-106.202, -200.589, -181.199, 0.29", "-105.832, -201.634, -182.359, 0.29", "-105.445, -202.487, -183.335, 0.29", "-105.098, -203.218, -184.102, 0.29", "-104.404, -204.685, -185.41, 0.29", "-103.819, -205.924, -186.43, 0.66", "-103.45, -206.774, -187.147, 0.37", "-103.077, -207.822, -188.073, 0.66", "-102.883, -208.65, -188.881, 0.88", "-102.88, -209.167, -189.429, 0.44", "-103.085, -209.947, -190.32, 0.95", "-103.763, -211.465, -192.095, 0.59", "-104.328, -211.976, -193.118, 0.22", "-104.867, -212.346, -194.001, 0.22", "-105.698, -212.84, -195.304, 0.22", "-105.937, -212.981, -195.685, 0.22", "-106.304, -213.21, -196.314, 1.1", "-109.836, -215.411, -202.71, 0.88", "-110.391, -215.755, -203.776, 0.88", "-111.186, -216.256, -205.365, 0.88", "-111.883, -216.687, -206.803, 0.51", "-112.759, -217.199, -208.571, 0.51" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "-82.4114, -139.621, -123.976, 0.81", "-83.6423, -139.128, -124.579, 0.81", "-84.6489, -138.742, -124.938, 0.95", "-85.4718, -138.422, -125.148, 0.95", "-86.132, -138.184, -125.235, 0.95", "-86.6887, -137.991, -125.397, 0.95", "-87.0778, -137.871, -125.571, 0.95", "-87.8874, -137.675, -125.988, 0.95", "-88.6078, -137.543, -126.384, 0.73", "-90.348, -137.298, -127.351, 0.73", "-92.9451, -136.994, -128.814, 0.95", "-94.914, -136.758, -129.905, 1.47", "-95.8188, -136.632, -130.399, 2.72", "-97.0011, -136.432, -131.025, 2.13", "-99.2566, -135.929, -132.141, 0.66", "-100.512, -135.568, -132.759, 0.44", "-102.356, -134.938, -133.507, 0.44", "-103.246, -134.596, -133.85, 0.44", "-104.272, -134.201, -134.276, 0.44", "-105.466, -133.786, -134.827, 0.44", "-107.655, -133.306, -135.896, 1.03", "-108.868, -133.329, -136.408, 0.51", "-109.494, -133.498, -136.636, 0.37", "-110.548, -133.974, -136.988, 0.37", "-111.638, -134.667, -137.302, 0.37", "-112.563, -135.37, -137.539, 0.37", "-114.177, -136.639, -137.877, 0.37", "-115.156, -137.387, -138.141, 0.73", "-116.379, -138.212, -138.537, 1.03", "-117.94, -139.122, -139.135, 0.44", "-119.007, -139.658, -139.644, 0.44", "-119.903, -140.035, -140.146, 0.66", "-121.024, -140.41, -140.865, 0.81", "-122.221, -140.713, -141.638, 0.88", "-123.458, -140.984, -142.444, 1.32", "-125.091, -141.322, -143.518, 0.51", "-126.313, -141.604, -144.307, 0.88", "-127.533, -141.927, -145.088, 0.51", "-128.3, -142.138, -145.556, 0.51", "-129.504, -142.436, -146.317, 0.66", "-129.729, -142.466, -146.472, 0.66", "-130.133, -142.464, -146.815, 0.66", "-130.448, -142.442, -147.152, 0.66", "-130.851, -142.413, -147.657, 0.66", "-131.518, -142.408, -148.552, 1.1", "-132.236, -142.493, -149.53, 1.1", "-133.277, -142.759, -150.912, 0.81", "-134.129, -143.098, -151.972, 0.81", "-135.122, -143.602, -153.119, 0.81", "-136.327, -144.311, -154.385, 0.51", "-137.423, -145.002, -155.372, 0.66", "-138.009, -145.372, -155.814, 0.66", "-138.929, -145.9, -156.354, 0.66", "-139.624, -146.238, -156.68, 0.66", "-140.54, -146.597, -157.035, 0.66", "-141.836, -146.992, -157.514, 0.66", "-143.225, -147.335, -158.023, 0.66", "-144.744, -147.68, -158.62, 0.66", "-146.286, -147.991, -159.289, 0.66", "-147.372, -148.205, -159.778, 0.81", "-149.088, -148.579, -160.548, 0.44", "-149.975, -148.784, -160.934, 0.44", "-150.773, -149.003, -161.248, 0.66", "-152.256, -149.503, -161.741, 0.88", "-152.987, -149.79, -161.931, 0.88", "-154.393, -150.375, -162.184, 0.51", "-155.189, -150.732, -162.287, 0.29", "-156.322, -151.267, -162.41, 0.29", "-157.954, -152.094, -162.537, 0.66", "-159.063, -152.688, -162.599, 0.88", "-160.309, -153.354, -162.676, 1.69", "-162.518, -154.527, -162.831, 0.37", "-163.317, -154.954, -162.887, 0.51", "-163.988, -155.294, -162.947, 0.51", "-164.776, -155.675, -163.024, 0.73", "-165.5, -155.996, -163.107, 0.44", "-166.454, -156.418, -163.256, 0.59", "-167.207, -156.721, -163.394, 1.03", "-168.4, -157.212, -163.692, 0.44", "-169.363, -157.615, -163.988, 0.44", "-170.413, -158.099, -164.348, 1.4", "-171.737, -158.766, -164.826, 0.44", "-172.883, -159.386, -165.251, 0.44", "-173.98, -160.002, -165.644, 0.81", "-175.307, -160.802, -166.109, 0.37", "-176.114, -161.332, -166.402, 0.29", "-176.617, -161.68, -166.569, 0.29", "-177.142, -162.047, -166.763, 0.29", "-177.88, -162.636, -167.055, 0.29", "-178.478, -163.148, -167.306, 0.81", "-178.796, -163.433, -167.459, 1.1", "-179.75, -164.215, -167.906, 0.44", "-180.962, -165.195, -168.458, 0.44", "-181.712, -165.795, -168.774, 1.18", "-182.847, -166.677, -169.205, 0.81", "-184.372, -167.742, -169.673, 0.44", "-185.602, -168.528, -170.022, 0.22", "-185.971, -168.753, -170.114, 0.22", "-187.154, -169.454, -170.386, 1.25", "-187.904, -169.857, -170.604, 0.95", "-189.062, -170.41, -171.03, 1.25", "-190.638, -171.032, -171.735, 0.73", "-191.534, -171.322, -172.218, 0.73", "-192.555, -171.587, -172.811, 0.95", "-193.913, -171.876, -173.671, 1.1", "-194.762, -172.061, -174.245, 1.62", "-195.559, -172.2, -174.806, 0.81", "-196.256, -172.27, -175.266, 0.81", "-196.848, -172.306, -175.612, 0.37", "-198.073, -172.425, -176.23, 0.29", "-198.893, -172.573, -176.595, 0.29", "-200.034, -172.835, -177.073, 0.29", "-200.747, -173.006, -177.41, 0.29", "-201.664, -173.181, -177.85, 0.81" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "9.01953, -276.587, -57.1845, 1.54", "8.79848, -277.281, -56.824, 1.54", "8.41288, -278.328, -56.3171, 1.76", "8.05505, -279.229, -55.9241, 1.54", "7.72265, -280.028, -55.5859, 1.54", "7.44125, -280.719, -55.2943, 1.1", "7.24206, -281.226, -55.0811, 1.1", "7.01902, -281.809, -54.8577, 1.32", "6.5243, -283.168, -54.3698, 1.4", "6.23265, -284.097, -54.0551, 1.4", "6.0122, -285.005, -53.7781, 1.1", "5.90664, -285.693, -53.59, 0.95", "5.88544, -286.154, -53.4774, 0.95", "5.94798, -286.898, -53.3375, 0.95", "6.13102, -287.813, -53.2509, 1.25", "6.29265, -288.406, -53.2325, 1.62", "6.46331, -288.923, -53.2467, 1.62", "6.61701, -289.327, -53.2726, 1.62", "7.06924, -290.407, -53.3603, 1.62", "7.21649, -290.762, -53.3982, 1.62" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "9.01953, -276.587, -57.1845, 1.54", "9.65843, -277.062, -57.7361, 1.47", "10.7017, -277.718, -58.4904, 1.47", "11.7068, -278.238, -59.1253, 1.32", "12.5022, -278.587, -59.56, 0.88", "13.0911, -278.822, -59.852, 0.88", "13.7932, -279.096, -60.1749, 0.51", "14.6115, -279.389, -60.4732, 0.51", "15.5122, -279.723, -60.732, 0.51", "16.5, -280.129, -60.9915, 0.51", "17.2208, -280.462, -61.1647, 0.51", "17.8146, -280.76, -61.2971, 0.51", "18.317, -281.025, -61.3987, 0.51", "19.2874, -281.529, -61.5918, 0.51", "19.8731, -281.799, -61.7045, 0.73", "20.4989, -282.025, -61.8351, 1.18", "21.4201, -282.223, -62.048, 0.66", "21.8837, -282.268, -62.1659, 0.66", "22.7971, -282.289, -62.4111, 0.66", "23.4888, -282.257, -62.6086, 0.81", "24.1076, -282.211, -62.8012, 0.81", "25.0749, -282.162, -63.1389, 0.44", "25.6385, -282.15, -63.3717, 0.44", "26.093, -282.144, -63.5903, 0.44", "26.6403, -282.148, -63.897, 0.44", "27.3851, -282.161, -64.3629, 0.44", "28.2207, -282.162, -64.9319, 0.95", "28.8866, -282.176, -65.4148, 0.95", "29.6313, -282.204, -65.98, 1.1", "30.3639, -282.264, -66.5446, 0.73", "30.8875, -282.353, -66.9665, 0.73", "31.2082, -282.447, -67.239, 0.73", "31.6962, -282.639, -67.6743, 0.51", "32.1503, -282.861, -68.0761, 0.51", "32.5246, -283.066, -68.3962, 0.66", "33.0453, -283.365, -68.8315, 0.51", "33.5746, -283.626, -69.2465, 0.81", "33.9252, -283.749, -69.4968, 0.51", "34.3417, -283.822, -69.7756, 0.51", "34.8065, -283.842, -70.0452, 0.59", "35.2791, -283.841, -70.2847, 0.37", "36.0237, -283.863, -70.613, 0.37", "36.5883, -283.917, -70.8227, 0.37", "37.5328, -284.096, -71.1534, 1.18", "38.2667, -284.29, -71.3997, 0.51", "38.821, -284.469, -71.5766, 0.51", "39.674, -284.802, -71.8211, 0.44", "40.4937, -285.164, -72.0322, 0.44", "40.9715, -285.374, -72.1384, 0.51", "41.5956, -285.637, -72.2642, 0.51", "42.3226, -285.912, -72.4219, 0.44", "43.2759, -286.207, -72.6483, 0.51", "44.28, -286.463, -72.9051, 0.51", "45.202, -286.673, -73.1699, 0.51", "45.8729, -286.802, -73.3705, 0.88", "46.7402, -286.935, -73.6521, 0.29", "48.1006, -287.066, -74.1145, 0.59", "48.7751, -287.087, -74.3456, 0.51", "49.2293, -287.075, -74.4954, 0.51", "50.3308, -286.998, -74.8454, 0.37", "50.8728, -286.953, -75.0136, 0.37", "51.6881, -286.891, -75.2602, 0.22", "52.5167, -286.847, -75.5242, 0.29", "53.252, -286.83, -75.7686, 0.29", "53.5564, -286.821, -75.8766, 0.29", "54.1727, -286.813, -76.1371, 0.29", "54.7652, -286.815, -76.4276, 0.44", "55.6208, -286.816, -76.9003, 0.95", "56.0344, -286.806, -77.1335, 0.59", "56.871, -286.746, -77.5832, 0.29", "57.4918, -286.654, -77.8869, 0.51", "57.957, -286.546, -78.0916, 0.51", "58.6813, -286.325, -78.3383, 0.66", "59.7413, -285.978, -78.5902, 0.66", "60.42, -285.781, -78.7034, 0.66", "61.1776, -285.58, -78.7794, 0.66", "61.9809, -285.353, -78.8017, 0.66", "63.1878, -284.983, -78.7606, 0.44", "63.6933, -284.828, -78.71, 0.59", "64.5099, -284.589, -78.5999, 0.59", "64.8958, -284.487, -78.5541, 0.73", "65.4904, -284.352, -78.5123, 1.4", "66.4196, -284.178, -78.514, 0.95", "67.1968, -284.049, -78.6019, 0.29", "67.9101, -283.932, -78.7272, 0.29", "68.5487, -283.825, -78.8671, 0.66", "69.165, -283.735, -79.0368, 0.66", "69.8681, -283.642, -79.2682, 0.44", "70.3494, -283.589, -79.4439, 0.44", "71.0507, -283.513, -79.7018, 0.95", "71.5618, -283.457, -79.877, 0.81", "72.3453, -283.368, -80.1377, 0.51", "73.0019, -283.303, -80.3557, 1.03", "73.881, -283.216, -80.658, 0.44", "74.9133, -283.107, -81.0111, 0.51", "75.8476, -282.958, -81.3016, 0.59", "76.2763, -282.862, -81.4113, 0.66", "76.7777, -282.707, -81.5024, 0.66", "77.1044, -282.569, -81.5394, 1.1", "77.6934, -282.251, -81.556, 1.69", "78.9475, -281.488, -81.4985, 0.51", "79.6577, -281.06, -81.4308, 0.29", "80.0212, -280.869, -81.3891, 0.81", "80.506, -280.669, -81.3389, 0.81", "80.7686, -280.606, -81.3169, 0.81", "81.4599, -280.545, -81.2812, 1.25", "82.2368, -280.566, -81.2668, 0.81", "83.4374, -280.627, -81.2655, 0.37", "84.4019, -280.671, -81.3167, 0.37", "85.1893, -280.701, -81.4196, 0.22", "85.7145, -280.71, -81.5349, 0.22", "86.282, -280.691, -81.7051, 0.22", "86.9521, -280.633, -81.9793, 0.22", "87.8863, -280.532, -82.4468, 0.22", "88.6844, -280.46, -82.8373, 1.03", "89.4517, -280.4, -83.1958, 1.25", "89.9891, -280.365, -83.4253, 1.62", "90.815, -280.309, -83.7618, 2.13", "91.3924, -280.258, -83.9877, 2.13", "93.1049, -280.035, -84.5595, 0.29", "93.4215, -279.978, -84.6571, 0.29", "93.9753, -279.868, -84.8343, 0.29", "94.6222, -279.75, -85.0762, 0.29", "95.2043, -279.647, -85.3017, 0.29", "95.4438, -279.606, -85.4132, 0.29", "96.0573, -279.548, -85.7258, 0.29", "97.0361, -279.557, -86.1877, 0.37", "97.6445, -279.613, -86.4547, 0.95", "98.5722, -279.772, -86.8207, 2.2", "99.4689, -279.991, -87.16, 1.32", "100.676, -280.361, -87.6027, 0.44", "101.596, -280.701, -87.9075, 0.37", "102.0, -280.875, -88.0127, 0.37", "102.71, -281.232, -88.1104, 0.37", "103.335, -281.604, -88.1236, 0.22", "103.84, -281.94, -88.0762, 0.22", "104.461, -282.4, -87.9649, 0.95", "104.983, -282.813, -87.8439, 0.51", "105.798, -283.475, -87.6228, 0.44", "106.598, -284.147, -87.3611, 0.37", "106.758, -284.296, -87.2983, 0.37", "107.026, -284.617, -87.1733, 0.37", "107.187, -284.882, -87.0692, 0.37", "107.329, -285.167, -86.9501, 0.37", "107.551, -285.644, -86.7341, 0.37", "107.848, -286.258, -86.4452, 0.59", "108.322, -287.127, -86.0282, 1.47", "108.922, -288.049, -85.5503, 0.22", "109.154, -288.352, -85.388, 0.22", "109.577, -288.846, -85.1304, 0.22", "109.985, -289.257, -84.9402, 0.81", "110.678, -289.803, -84.7342, 0.15", "111.52, -290.28, -84.5895, 0.15", "112.278, -290.57, -84.5575, 0.15", "112.557, -290.66, -84.5526, 0.81", "113.329, -290.861, -84.5331, 1.03", "113.967, -290.985, -84.5236, 1.25", "114.733, -291.088, -84.5672, 2.06", "115.867, -291.221, -84.6757, 0.29", "116.584, -291.292, -84.7154, 0.29", "117.174, -291.371, -84.7074, 0.29", "117.648, -291.464, -84.674, 0.29", "118.453, -291.683, -84.618, 0.29", "118.713, -291.764, -84.6125, 0.88", "119.169, -291.91, -84.6103, 0.88", "119.954, -292.157, -84.5862, 0.15", "120.523, -292.355, -84.5352, 0.15", "120.837, -292.478, -84.4839, 0.95", "121.369, -292.694, -84.3629, 0.95", "121.711, -292.835, -84.2893, 0.95", "122.688, -293.234, -84.091, 0.22", "123.187, -293.443, -83.9663, 0.22", "123.593, -293.627, -83.844, 0.22", "124.141, -293.892, -83.6457, 1.18", "124.686, -294.165, -83.4307, 0.95", "125.066, -294.346, -83.268, 0.95", "125.794, -294.633, -82.9306, 0.44", "126.104, -294.726, -82.7724, 0.44", "126.836, -294.867, -82.399, 0.66", "127.284, -294.914, -82.1761, 1.32", "128.26, -294.956, -81.7022, 0.51", "129.218, -294.986, -81.2767, 0.95", "129.663, -294.999, -81.0811, 0.95", "130.251, -295.022, -80.8286, 0.29", "130.835, -295.062, -80.5763, 0.29", "131.301, -295.119, -80.3652, 0.29", "132.116, -295.252, -80.0094, 1.47", "133.002, -295.443, -79.6141, 1.47", "133.505, -295.577, -79.384, 0.22", "134.124, -295.794, -79.0962, 0.88", "134.486, -295.954, -78.9383, 0.88", "135.154, -296.292, -78.6885, 0.66", "135.686, -296.582, -78.5293, 0.66", "136.148, -296.841, -78.4285, 0.66", "137.08, -297.366, -78.2664, 1.32", "138.035, -297.896, -78.153, 0.51", "138.903, -298.369, -78.0735, 0.22", "139.723, -298.801, -78.0224, 0.22", "140.651, -299.254, -77.9818, 0.22", "141.478, -299.6, -77.948, 0.22", "142.269, -299.878, -77.9266, 0.88", "142.404, -299.923, -77.9235, 0.88", "143.147, -300.199, -77.9339, 0.15", "143.942, -300.537, -77.9751, 1.91", "144.672, -300.914, -78.0484, 0.59", "145.093, -301.177, -78.1462, 0.07", "145.388, -301.397, -78.2678, 0.66", "146.044, -301.968, -78.688, 0.22", "146.149, -302.069, -78.7725, 0.22", "146.438, -302.356, -79.0283, 0.22", "147.097, -302.944, -79.475, 0.95", "147.605, -303.277, -79.6347, 0.95", "148.271, -303.614, -79.6835, 0.95", "149.135, -303.987, -79.5996, 0.95", "149.583, -304.149, -79.5379, 0.66", "150.648, -304.455, -79.3905, 0.37", "151.724, -304.705, -79.1946, 0.37", "152.309, -304.812, -79.0776, 0.29", "152.986, -304.916, -78.9528, 0.66", "153.829, -305.032, -78.8461, 0.29", "154.94, -305.139, -78.8153, 0.29", "156.046, -305.199, -78.9247, 1.54", "156.892, -305.217, -79.0896, 0.66", "157.591, -305.216, -79.2836, 0.88", "158.23, -305.2, -79.5052, 1.1", "159.309, -305.125, -79.9461, 0.29", "160.312, -305.012, -80.4438, 0.07", "160.765, -304.951, -80.7172, 0.37", "161.461, -304.844, -81.1627, 0.22", "161.843, -304.779, -81.3881, 0.22", "162.573, -304.683, -81.7869, 0.22", "162.986, -304.664, -81.9866, 0.22", "163.474, -304.637, -82.2102, 0.22", "163.915, -304.604, -82.3944, 0.66", "164.337, -304.571, -82.5573, 0.59", "164.86, -304.537, -82.7628, 0.59", "165.511, -304.502, -83.0164, 0.29", "166.708, -304.392, -83.4831, 0.29", "167.242, -304.32, -83.6969, 0.51", "167.628, -304.258, -83.8564, 0.66", "168.389, -304.11, -84.1943, 0.29", "169.072, -303.958, -84.4988, 0.88", "169.513, -303.859, -84.6861, 0.51", "169.929, -303.77, -84.8645, 0.51", "170.368, -303.678, -85.0593, 0.88", "171.231, -303.486, -85.4943, 0.15", "171.53, -303.414, -85.674, 0.15", "171.99, -303.291, -85.9957, 0.95", "172.618, -303.118, -86.4828, 0.15", "172.876, -303.05, -86.6924, 0.37", "173.415, -302.935, -87.14, 0.07", "174.124, -302.857, -87.7676, 0.07", "174.527, -302.861, -88.1215, 0.07", "174.752, -302.888, -88.3023, 0.07", "175.105, -302.956, -88.5364, 0.88", "175.68, -303.124, -88.7904, 0.51", "176.513, -303.5, -88.9658, 0.22", "177.229, -303.928, -88.9671, 0.22", "177.674, -304.221, -88.8977, 0.22", "178.069, -304.481, -88.7965, 1.32", "179.088, -305.167, -88.4552, 0.44", "179.761, -305.622, -88.1547, 0.44", "180.446, -306.092, -87.7724, 0.44", "180.947, -306.461, -87.4639, 0.44", "181.326, -306.749, -87.2202, 0.81", "181.79, -307.142, -86.8794, 0.15", "182.313, -307.623, -86.4476, 0.88", "182.775, -308.098, -86.0705, 0.07", "183.305, -308.732, -85.6483, 0.15", "183.746, -309.316, -85.2796, 0.15", "184.335, -310.168, -84.7378, 0.15", "184.575, -310.538, -84.505, 0.15", "185.073, -311.426, -84.0351, 0.81", "185.324, -311.997, -83.7806, 0.15" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "7.21649, -290.762, -53.3982, 1.62", "7.74848, -292.041, -53.272, 1.62", "8.48967, -293.906, -53.181, 1.03", "9.1215, -295.451, -53.1513, 1.03", "9.3938, -296.074, -53.1416, 1.03", "9.93477, -297.223, -53.119, 1.03", "10.7673, -298.867, -53.0735, 0.88", "11.4441, -300.116, -53.0562, 0.66", "12.094, -301.133, -53.0381, 0.66", "12.5859, -301.651, -53.0012, 0.66", "13.0906, -301.919, -52.9051, 0.66", "13.7074, -302.035, -52.7224, 0.59", "14.4211, -302.086, -52.4419, 0.59", "15.4221, -302.211, -51.9516, 0.59", "16.261, -302.495, -51.4233, 0.95", "17.1008, -303.07, -50.7367, 0.66", "17.727, -303.773, -50.0945, 0.81", "18.2051, -304.581, -49.4861, 1.03", "18.6204, -305.633, -48.8109, 1.03", "19.029, -307.168, -47.9076, 1.03", "19.2505, -308.173, -47.3264, 1.03", "19.4809, -309.251, -46.6665, 0.81", "19.751, -310.349, -45.9551, 1.1", "20.3223, -312.005, -44.8387, 1.1", "21.0188, -313.399, -43.8895, 1.18", "21.9469, -314.683, -43.01, 1.25", "23.0194, -315.766, -42.2483, 1.32", "23.7697, -316.353, -41.8236, 0.95", "25.2107, -317.251, -41.1935, 1.1", "26.4653, -317.93, -40.8299, 1.1", "27.364, -318.416, -40.6526, 1.1", "28.7955, -319.293, -40.4835, 0.95", "29.3262, -319.698, -40.4617, 0.81", "30.0126, -320.358, -40.4468, 1.25", "31.4347, -322.043, -40.5042, 0.51", "32.0918, -322.907, -40.5824, 0.37", "32.6062, -323.589, -40.7336, 1.1", "33.5542, -324.8, -41.1337, 1.91", "34.1196, -325.508, -41.404, 1.91", "35.0609, -326.72, -41.9199, 1.1", "35.5299, -327.415, -42.2054, 1.1", "36.4653, -329.043, -42.808, 1.1", "36.7396, -329.652, -42.9662, 1.1", "36.9935, -330.651, -43.1152, 0.81", "37.1175, -331.796, -43.2029, 1.54", "37.1784, -333.848, -43.2346, 1.32", "37.2069, -334.959, -43.2356, 1.76", "37.2632, -336.392, -43.254, 1.76", "37.4717, -339.018, -43.438, 1.4", "37.6505, -340.184, -43.616, 1.4", "37.9706, -341.683, -43.9861, 1.47", "38.3608, -343.257, -44.5273, 1.03", "38.6277, -344.579, -45.0565, 1.32", "38.8239, -346.021, -45.7044, 1.32", "38.8567, -347.788, -46.4784, 1.18", "38.66, -349.378, -47.0814, 0.88", "38.2601, -350.861, -47.5053, 0.95", "37.4982, -352.87, -47.8342, 0.73", "37.0927, -353.841, -47.8862, 1.47", "36.3501, -355.72, -47.7983, 0.95", "35.9321, -356.985, -47.6162, 0.81", "35.7431, -358.227, -47.34, 1.32", "35.8202, -359.028, -47.1231, 1.32", "36.2268, -360.396, -46.7371, 0.59", "36.8202, -361.94, -46.2993, 1.47", "37.2413, -362.923, -46.0403, 1.47", "37.8086, -364.318, -45.6945, 1.47", "38.3737, -366.017, -45.2611, 1.47", "38.8742, -368.245, -44.6529, 0.95", "39.0219, -369.755, -44.1706, 0.95", "39.0337, -370.806, -43.7839, 1.03", "39.007, -371.959, -43.3208, 1.03", "39.0038, -373.669, -42.579, 1.03", "39.0636, -374.797, -42.0758, 1.03", "39.2569, -376.233, -41.4216, 0.73", "39.599, -377.871, -40.7277, 0.37", "39.9509, -379.259, -40.1498, 1.03", "40.4877, -381.125, -39.3606, 1.03", "40.8151, -382.149, -38.9413, 1.03", "41.169, -383.257, -38.5094, 1.1", "41.7791, -385.364, -37.7599, 1.18", "42.1183, -386.847, -37.2318, 1.18", "42.4543, -388.827, -36.514, 1.25", "42.5092, -389.347, -36.3306, 1.32", "42.5524, -389.919, -36.1526, 1.32", "42.6836, -391.474, -35.7751, 1.03", "42.8098, -392.885, -35.6372, 0.88", "42.8756, -393.734, -35.6767, 0.88", "42.92, -394.725, -35.7947, 0.88", "42.8656, -396.196, -35.9452, 0.88", "42.6897, -397.244, -36.008, 0.44", "42.0664, -398.964, -35.9569, 0.59", "41.6755, -399.711, -35.8662, 0.59", "41.0791, -400.632, -35.6371, 1.18", "39.8713, -402.292, -35.1306, 2.57", "38.6225, -403.925, -34.5496, 1.54", "37.5606, -405.33, -34.0345, 1.03", "37.0577, -406.046, -33.7603, 1.03", "36.2174, -407.463, -33.2789, 0.81", "35.7233, -408.614, -32.9152, 0.66", "35.4738, -409.699, -32.5812, 1.54", "35.3749, -410.657, -32.2749, 1.76", "35.3319, -411.612, -31.9622, 1.76", "35.346, -412.889, -31.4923, 1.91", "35.4936, -414.905, -30.7034, 2.13", "35.6057, -415.908, -30.2908, 2.13", "35.8325, -417.571, -29.6197, 2.13", "36.047, -419.048, -29.0093, 0.88", "36.3236, -420.721, -28.3409, 0.59", "36.5487, -421.95, -27.8762, 0.66", "36.8523, -423.485, -27.3374, 0.95", "37.0947, -424.859, -26.8662, 1.25", "37.2999, -426.581, -26.287, 0.95", "37.3361, -428.234, -25.7265, 1.18", "37.2485, -429.161, -25.4278, 1.18", "37.0162, -430.352, -25.0524, 0.95", "36.6214, -431.884, -24.5679, 0.81", "36.242, -433.23, -24.145, 0.66", "35.9395, -434.279, -23.8182, 1.1", "35.6443, -435.295, -23.4972, 1.4", "35.2522, -436.838, -23.0034, 0.59", "35.074, -437.877, -22.6763, 0.88", "35.0292, -438.723, -22.4198, 1.25", "35.042, -439.343, -22.2394, 1.25", "35.1256, -441.353, -21.6827, 0.66", "35.144, -442.353, -21.4306, 0.73", "35.1211, -443.495, -21.1571, 0.95", "35.0429, -444.571, -20.9176, 0.73", "34.8246, -446.406, -20.5011, 0.81", "34.6641, -447.638, -20.2167, 0.81", "34.4501, -449.14, -19.8455, 1.54", "34.2858, -450.182, -19.5913, 1.54", "34.1401, -451.173, -19.3463, 0.88", "34.055, -451.945, -19.1452, 1.69", "33.9835, -454.089, -18.5054, 1.47", "34.0401, -455.591, -17.9618, 0.59", "34.1619, -456.662, -17.4379, 0.59", "34.309, -457.533, -16.9123, 0.59", "34.5357, -458.459, -16.2227, 1.03", "34.8792, -459.461, -15.3481, 1.03", "35.3095, -460.439, -14.3496, 1.25", "36.0099, -461.847, -12.8129, 0.95", "36.2707, -462.333, -12.2915, 0.95", "36.7207, -463.184, -11.4853, 0.51", "37.0482, -463.762, -11.0425, 0.51", "37.3155, -464.168, -10.7955, 0.51", "38.0128, -465.058, -10.4353, 0.59", "38.7376, -465.868, -10.263, 0.59", "39.3386, -466.545, -10.1784, 0.59", "39.9373, -467.216, -10.12, 1.18", "41.3645, -468.749, -9.98854, 1.18", "42.1237, -469.491, -9.92799, 1.54", "42.614, -469.924, -9.88569, 1.69", "44.1293, -471.26, -9.59156, 2.28" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "7.21649, -290.762, -53.3982, 1.62", "7.45506, -291.402, -53.7949, 1.18", "7.96956, -292.68, -54.7464, 0.81", "8.27381, -293.371, -55.3046, 0.66", "8.79097, -294.442, -56.1736, 0.66", "9.22627, -295.284, -56.8563, 0.81", "9.75159, -296.252, -57.6365, 0.81", "10.3036, -297.163, -58.3706, 0.95", "10.6078, -297.657, -58.741, 1.1", "10.9458, -298.282, -59.2211, 0.66", "11.1112, -298.695, -59.5297, 0.66", "11.2052, -299.078, -59.7931, 0.66", "11.2609, -299.644, -60.1637, 0.66", "11.222, -300.455, -60.6787, 0.66", "11.1277, -301.172, -61.1373, 0.95", "11.0128, -301.872, -61.5992, 1.1", "10.8911, -302.668, -62.1252, 0.73", "10.713, -303.736, -62.8572, 0.73", "10.5986, -304.31, -63.2565, 0.73", "10.298, -305.477, -64.0858, 0.66", "10.0344, -306.415, -64.7134, 0.88", "9.73612, -307.371, -65.3109, 1.03", "9.47244, -308.09, -65.7122, 1.1", "9.14767, -308.837, -66.0699, 1.32", "8.41407, -310.306, -66.7044, 0.59", "8.12153, -310.81, -66.8785, 0.59", "7.67158, -311.521, -67.0343, 0.59", "7.04321, -312.504, -67.1465, 0.73", "6.56108, -313.285, -67.1794, 0.59", "5.86903, -314.347, -67.1744, 0.44", "5.08876, -315.398, -67.1172, 0.44", "4.54502, -316.035, -67.0651, 0.59", "4.0644, -316.532, -67.0116, 0.51", "3.06083, -317.519, -66.8859, 0.44", "2.24184, -318.369, -66.7661, 0.66", "1.52519, -319.191, -66.6471, 0.66", "0.799274, -320.109, -66.5561, 0.81", "0.0594282, -321.114, -66.5108, 0.44", "-0.269631, -321.588, -66.4964, 0.44", "-0.805747, -322.436, -66.48, 0.44", "-1.18804, -323.079, -66.4845, 0.44", "-1.77987, -324.083, -66.5147, 0.44", "-2.30606, -324.958, -66.5893, 0.59", "-2.63495, -325.501, -66.6565, 0.66", "-3.18525, -326.341, -66.7818, 0.37", "-3.65633, -327.006, -66.8853, 0.37", "-4.0522, -327.553, -66.9467, 0.51", "-4.35198, -327.973, -66.9745, 0.51", "-5.17216, -329.117, -66.979, 0.29", "-5.55958, -329.657, -66.9717, 0.29", "-5.99565, -330.291, -66.9773, 0.29", "-7.19504, -332.038, -67.0698, 0.29", "-7.54471, -332.55, -67.1177, 0.29", "-8.18978, -333.526, -67.2477, 2.28", "-8.91381, -334.727, -67.4474, 3.01", "-9.83805, -336.466, -67.7551, 0.73", "-10.4279, -337.717, -67.9946, 0.51", "-10.9586, -338.955, -68.2247, 0.51", "-11.4666, -340.157, -68.4242, 0.51", "-11.8933, -341.109, -68.5648, 0.73", "-12.481, -342.288, -68.6934, 0.59", "-12.9716, -343.188, -68.7269, 1.76", "-14.0263, -345.202, -68.6612, 0.37", "-14.4084, -346.026, -68.5874, 0.37", "-14.9554, -347.386, -68.4206, 0.73", "-15.3405, -348.534, -68.3027, 0.73", "-15.6967, -349.875, -68.1777, 1.62", "-16.1428, -351.793, -67.9786, 0.81", "-16.6013, -354.007, -67.7376, 0.59", "-16.9125, -355.482, -67.5553, 0.44", "-17.3188, -357.347, -67.303, 0.51", "-17.6435, -358.597, -67.1365, 0.29", "-18.2165, -360.259, -66.9775, 0.44", "-18.7045, -361.289, -66.9194, 0.51", "-19.1491, -362.055, -66.9314, 0.73", "-19.4492, -362.551, -66.9767, 0.81", "-19.9385, -363.388, -67.1086, 0.81", "-20.5291, -364.596, -67.4059, 0.51", "-20.9455, -365.714, -67.7594, 0.51", "-21.334, -367.073, -68.225, 0.51", "-21.5857, -368.293, -68.6472, 0.95", "-21.7348, -369.064, -68.8978, 0.66", "-21.9064, -369.971, -69.1736, 0.51", "-22.0525, -370.682, -69.3693, 0.44", "-22.2908, -371.655, -69.5727, 0.44", "-22.7684, -373.302, -69.776, 2.42", "-23.3747, -375.115, -69.8849, 0.66", "-23.7229, -376.008, -69.8862, 0.88", "-24.3598, -377.454, -69.795, 0.51", "-25.0533, -378.925, -69.5976, 0.37", "-25.6038, -380.012, -69.3583, 0.51", "-26.0938, -380.939, -69.0627, 0.51", "-26.5322, -381.772, -68.7459, 0.51", "-26.9847, -382.575, -68.4289, 0.59", "-27.4344, -383.327, -68.1414, 0.88", "-28.2365, -384.633, -67.7057, 0.29", "-28.6173, -385.229, -67.529, 0.44", "-29.276, -386.209, -67.2339, 0.88", "-29.9333, -387.179, -66.9327, 0.44", "-30.7278, -388.315, -66.54, 0.44", "-31.3696, -389.22, -66.1888, 0.51", "-31.9496, -390.035, -65.8364, 0.51", "-32.6397, -390.977, -65.402, 0.51", "-33.3014, -391.816, -65.0076, 0.44", "-34.178, -392.798, -64.5878, 0.44", "-34.8821, -393.465, -64.3859, 0.81", "-35.3987, -393.891, -64.3173, 0.95", "-35.9442, -394.286, -64.2995, 0.95", "-37.0797, -394.99, -64.2992, 0.51", "-38.5304, -395.783, -64.2626, 0.51", "-39.792, -396.427, -64.2722, 0.37", "-40.3622, -396.703, -64.3041, 0.51", "-41.2448, -397.122, -64.3799, 0.51", "-42.4257, -397.733, -64.4708, 0.73", "-43.2868, -398.24, -64.5485, 0.73", "-44.4418, -398.975, -64.7532, 0.51", "-45.4841, -399.664, -65.0537, 0.51", "-45.9582, -399.988, -65.2377, 0.51", "-46.452, -400.317, -65.471, 0.51", "-47.0615, -400.696, -65.7703, 0.51", "-47.575, -400.953, -65.9633, 0.44", "-48.3209, -401.273, -66.1163, 0.73", "-48.7443, -401.462, -66.1851, 0.88", "-49.3004, -401.713, -66.2785, 0.88", "-49.9356, -402.003, -66.3947, 0.88", "-50.5415, -402.33, -66.5415, 0.59", "-51.1424, -402.709, -66.7363, 0.44", "-51.9326, -403.261, -67.0297, 0.44", "-52.3548, -403.574, -67.204, 1.25", "-53.1192, -404.179, -67.5381, 1.25", "-54.2892, -405.154, -68.1337, 0.15", "-54.8474, -405.656, -68.4589, 0.73", "-55.2819, -406.047, -68.713, 0.73", "-55.9251, -406.61, -69.0631, 0.73", "-56.2242, -406.874, -69.2114, 0.88", "-57.2427, -407.755, -69.665, 0.51", "-57.8871, -408.277, -69.923, 1.03", "-58.9016, -409.089, -70.2793, 0.22", "-59.9984, -410.033, -70.6326, 0.22", "-60.7938, -410.762, -70.8477, 0.51", "-61.9244, -411.869, -71.131, 0.37", "-62.9916, -412.998, -71.3819, 0.37", "-63.4229, -413.49, -71.5105, 0.66", "-64.5396, -414.902, -71.9562, 0.37", "-65.1935, -415.796, -72.2633, 0.37", "-65.7426, -416.573, -72.5335, 0.95", "-66.165, -417.196, -72.733, 0.95", "-66.945, -418.33, -73.0951, 0.22", "-67.4777, -418.993, -73.3529, 0.37", "-68.11, -419.621, -73.6832, 0.37", "-68.5427, -420.001, -73.9445, 0.59", "-68.9314, -420.307, -74.1817, 0.22", "-69.08, -420.422, -74.2788, 0.51", "-69.949, -421.11, -74.8753, 0.07", "-70.8463, -421.927, -75.5702, 1.03", "-71.6118, -422.72, -76.16, 1.03", "-71.9993, -423.173, -76.4614, 0.29", "-72.503, -423.847, -76.8393, 0.88", "-72.9631, -424.508, -77.1022, 1.25", "-73.5873, -425.492, -77.366, 0.51", "-74.2636, -426.56, -77.538, 0.95", "-75.0138, -427.687, -77.6782, 1.32", "-75.408, -428.24, -77.7662, 1.32", "-76.7157, -429.826, -78.1079, 0.37", "-77.0437, -430.153, -78.2137, 0.95", "-77.6464, -430.649, -78.4319, 0.59", "-78.3325, -431.148, -78.7335, 0.59", "-78.9513, -431.561, -79.0253, 0.37", "-79.7144, -432.06, -79.4573, 0.37", "-80.2723, -432.453, -79.8604, 0.37", "-80.701, -432.796, -80.207, 0.37", "-81.0999, -433.178, -80.5783, 0.37", "-81.735, -433.939, -81.2419, 0.22", "-82.005, -434.347, -81.5494, 0.22", "-82.1996, -434.678, -81.7741, 0.22", "-82.4418, -435.089, -82.0345, 0.22", "-82.8679, -435.707, -82.4218, 0.22", "-83.1592, -436.056, -82.639, 0.81", "-83.5474, -436.448, -82.9306, 0.22", "-84.0668, -436.981, -83.338, 0.22", "-84.3005, -437.224, -83.5183, 0.22", "-84.6985, -437.697, -83.8599, 0.22", "-85.0332, -438.212, -84.1983, 0.66", "-85.6374, -439.48, -84.9144, 0.37", "-85.8971, -440.184, -85.2518, 0.51", "-86.0262, -440.584, -85.4258, 0.51", "-86.2355, -441.178, -85.6626, 0.51", "-86.4928, -441.786, -85.8586, 0.51", "-86.8714, -442.502, -86.031, 0.51", "-87.3575, -443.148, -86.1396, 0.51", "-87.8784, -443.685, -86.2518, 0.51", "-88.4047, -444.133, -86.3519, 1.1", "-89.29, -444.754, -86.5561, 0.22", "-89.6889, -444.999, -86.6744, 0.22", "-90.7295, -445.593, -87.0264, 0.22", "-91.1134, -445.806, -87.171, 0.73", "-91.9135, -446.228, -87.5081, 1.03", "-93.1524, -446.854, -88.0613, 0.22", "-93.883, -447.191, -88.3936, 0.22", "-94.3264, -447.388, -88.5891, 1.84", "-94.7278, -447.568, -88.7644, 1.84", "-95.8496, -448.056, -89.2375, 0.29", "-96.7743, -448.456, -89.621, 0.15", "-97.3016, -448.703, -89.8241, 0.15", "-97.6579, -448.883, -89.9655, 0.66", "-98.2988, -449.226, -90.2306, 0.66", "-98.9256, -449.577, -90.4937, 0.81", "-99.6203, -449.979, -90.7698, 1.32", "-100.789, -450.634, -91.2114, 0.22", "-101.574, -451.061, -91.4954, 0.88", "-101.983, -451.273, -91.6305, 0.88", "-102.523, -451.546, -91.781, 0.88", "-103.253, -451.924, -91.9545, 0.88", "-103.953, -452.296, -92.1361, 0.51", "-104.729, -452.69, -92.3483, 0.37", "-105.225, -452.933, -92.5017, 0.88", "-105.695, -453.15, -92.6612, 1.03", "-106.118, -453.334, -92.8095, 1.03", "-106.996, -453.703, -93.1795, 1.03", "-107.544, -453.957, -93.3569, 0.44", "-107.973, -454.183, -93.4472, 0.22", "-108.44, -454.433, -93.5678, 0.15", "-109.263, -454.901, -93.7891, 0.15", "-110.146, -455.478, -94.022, 0.15", "-111.279, -456.374, -94.3007, 0.15", "-112.153, -457.25, -94.5759, 1.4", "-113.231, -458.638, -95.0362, 0.22", "-113.449, -459.012, -95.1724, 0.22", "-113.619, -459.4, -95.3371, 0.22", "-113.783, -459.874, -95.5623, 0.66", "-114.048, -460.796, -95.9878, 0.29", "-114.253, -461.614, -96.2856, 1.62", "-114.494, -462.495, -96.5627, 1.76", "-114.878, -463.68, -96.9279, 0.51", "-115.195, -464.542, -97.1792, 0.37", "-115.724, -465.882, -97.5338, 0.15", "-116.051, -466.66, -97.7159, 1.47", "-116.691, -468.137, -98.0145, 0.29", "-116.972, -468.752, -98.1249, 0.29", "-117.203, -469.228, -98.2118, 0.29", "-117.468, -469.692, -98.338, 0.59", "-117.896, -470.353, -98.6203, 0.22", "-118.351, -471.015, -98.9378, 1.25", "-118.999, -471.861, -99.3782, 1.32", "-119.961, -473.0, -100.01, 0.29", "-120.82, -473.964, -100.554, 0.29", "-121.616, -474.825, -101.032, 0.44", "-122.191, -475.463, -101.371, 0.88", "-122.769, -476.183, -101.723, 0.22", "-123.253, -476.901, -102.012, 0.22", "-123.514, -477.355, -102.151, 0.81", "-123.811, -477.956, -102.267, 0.81", "-124.211, -478.768, -102.386, 0.37", "-124.672, -479.635, -102.525, 1.03", "-125.305, -480.707, -102.722, 0.29", "-125.831, -481.469, -102.887, 0.95", "-126.6, -482.389, -103.162, 0.15", "-127.222, -482.985, -103.381, 0.15", "-127.966, -483.566, -103.647, 0.15", "-128.945, -484.225, -104.022, 0.15", "-129.43, -484.535, -104.215, 0.88", "-130.635, -485.313, -104.709, 0.44", "-131.586, -485.947, -105.107, 0.44", "-132.024, -486.3, -105.303, 0.44", "-132.355, -486.623, -105.453, 0.44", "-133.112, -487.481, -105.783, 1.1", "-133.582, -488.113, -105.993, 0.15", "-133.851, -488.546, -106.115, 0.66", "-134.458, -489.756, -106.455, 0.29", "-134.779, -490.54, -106.676, 0.29", "-134.988, -491.23, -106.837, 0.29", "-135.105, -492.044, -106.953, 0.29", "-135.101, -492.619, -107.012, 1.1", "-135.023, -493.228, -107.067, 1.1", "-134.778, -494.301, -107.144, 0.37", "-134.387, -495.647, -107.231, 0.88", "-133.927, -497.019, -107.299, 0.22", "-133.499, -498.245, -107.327, 0.22", "-133.229, -498.988, -107.331, 0.22", "-132.985, -499.591, -107.348, 0.95" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "44.1293, -471.26, -9.59156, 2.28", "45.2084, -471.193, -10.1462, 1.1", "46.223, -471.103, -10.549, 0.66", "46.873, -471.03, -10.7442, 0.59", "48.2186, -470.887, -10.9714, 0.44", "49.2097, -470.798, -11.0681, 0.81", "50.0695, -470.734, -11.1266, 0.81", "50.5043, -470.725, -11.1158, 0.81", "51.2579, -470.755, -11.0758, 0.81", "52.6564, -470.882, -11.0323, 0.51", "53.6742, -471.026, -11.0618, 0.51", "54.1493, -471.123, -11.1231, 0.51", "55.2086, -471.426, -11.3678, 0.29", "56.1053, -471.747, -11.6494, 0.29", "56.6626, -471.982, -11.8787, 0.29", "57.3818, -472.338, -12.2578, 0.29", "57.7867, -472.576, -12.4959, 0.29", "58.388, -472.998, -12.8738, 0.29", "58.6815, -473.269, -13.0853, 0.29", "59.1468, -473.788, -13.4476, 0.29", "59.5173, -474.238, -13.7421, 0.29", "60.0414, -474.889, -14.189, 0.29", "60.5143, -475.442, -14.6165, 0.37", "61.3906, -476.34, -15.5075, 0.37", "61.6741, -476.582, -15.8261, 0.37", "62.0942, -476.858, -16.3346, 0.81", "62.5443, -477.055, -16.8828, 0.73", "62.9087, -477.172, -17.3051, 0.88", "63.673, -477.436, -18.1037, 0.73", "64.0734, -477.592, -18.4973, 0.73", "64.5922, -477.827, -18.9927, 0.73", "65.2408, -478.155, -19.6266, 0.51", "66.1373, -478.66, -20.4912, 1.03", "67.2095, -479.31, -21.5288, 0.44", "67.5918, -479.555, -21.9157, 0.51", "68.0329, -479.834, -22.4074, 0.59", "68.6321, -480.197, -23.154, 0.29", "68.9602, -480.377, -23.5904, 0.29", "69.3154, -480.566, -24.0979, 0.59", "69.7257, -480.815, -24.7078, 0.81", "70.3377, -481.264, -25.5684, 0.37", "70.7514, -481.622, -26.188, 0.37", "71.0541, -481.885, -26.6434, 0.59", "71.2361, -482.029, -26.9286, 0.59", "71.6902, -482.356, -27.6271, 0.44", "72.0903, -482.595, -28.224, 0.66", "72.8931, -483.021, -29.4363, 0.59", "73.2485, -483.191, -29.9941, 0.59", "73.4703, -483.286, -30.3565, 0.59", "73.7464, -483.371, -30.7978, 0.59", "74.2181, -483.452, -31.525, 0.73", "74.5008, -483.484, -31.9218, 1.91", "75.0345, -483.569, -32.4246, 1.91" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "44.1293, -471.26, -9.59156, 2.28", "44.1897, -472.531, -9.39591, 2.28", "44.2636, -474.156, -8.98505, 2.86", "44.3083, -475.254, -8.61896, 1.62", "44.3382, -476.331, -8.20656, 0.88", "44.3652, -477.272, -7.82749, 0.88", "44.3857, -478.245, -7.44539, 0.88", "44.4295, -479.28, -6.98764, 0.73", "44.457, -480.274, -6.515, 0.66", "44.4449, -481.284, -6.02974, 0.88", "44.3994, -481.996, -5.68514, 0.88", "44.3329, -482.57, -5.43996, 0.59", "44.2392, -483.13, -5.24308, 0.37", "44.0193, -484.074, -4.97484, 0.37", "43.8446, -484.6, -4.85077, 0.51", "43.6323, -485.067, -4.7722, 0.59", "43.399, -485.522, -4.71506, 0.59", "43.1022, -486.098, -4.66098, 0.59", "42.7593, -486.741, -4.63798, 0.51", "42.2851, -487.635, -4.64789, 0.73", "41.8054, -488.624, -4.65282, 0.44", "41.5896, -489.106, -4.63536, 0.44", "41.2699, -489.859, -4.55165, 0.44", "40.9083, -490.703, -4.38517, 0.44", "40.6117, -491.331, -4.19615, 0.44", "40.2978, -491.939, -3.95174, 0.66", "39.9578, -492.575, -3.67119, 0.81", "39.5148, -493.384, -3.29459, 0.51", "39.2712, -493.82, -3.06583, 0.66", "38.792, -494.633, -2.61913, 0.73", "38.4936, -495.081, -2.38223, 0.73", "38.0284, -495.698, -2.11432, 1.1", "37.3301, -496.501, -1.84274, 0.66", "36.8388, -496.974, -1.75246, 0.51", "36.2482, -497.458, -1.74938, 0.37", "35.6553, -497.796, -1.85538, 0.37", "35.1737, -498.0, -2.03193, 0.37", "34.6534, -498.181, -2.31516, 0.29", "33.9528, -498.393, -2.76677, 0.22", "33.584, -498.511, -3.04334, 0.22", "33.0088, -498.715, -3.52235, 0.22", "32.3477, -498.985, -4.0994, 0.22", "31.8073, -499.196, -4.62695, 0.22", "26.1275, -500.338, -8.87548, 0.22", "21.2936, -502.4, -13.7878, 0.22", "16.9353, -505.237, -18.7765, 0.22", "12.6503, -507.64, -24.0382, 0.22", "7.49172, -508.9, -28.8785, 0.22", "2.63632, -511.278, -33.631, 0.22", "-2.09649, -513.825, -38.4234, 0.22", "-5.95463, -517.319, -43.4269, 0.22", "-10.3789, -519.026, -48.8309, 0.22", "-15.0725, -519.778, -54.2148, 0.22" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "75.0345, -483.569, -32.4246, 1.91", "74.1106, -483.946, -31.716, 0.59", "73.4647, -484.148, -31.223, 0.59", "72.9111, -484.293, -30.7802, 0.29", "72.5816, -484.368, -30.5218, 0.22", "71.7177, -484.531, -29.8735, 0.22", "70.9695, -484.646, -29.3446, 0.22", "70.2415, -484.706, -28.8622, 0.22", "69.5153, -484.741, -28.4012, 0.66", "69.1123, -484.748, -28.1512, 0.44", "68.6403, -484.743, -27.8459, 0.44", "68.1974, -484.704, -27.5491, 0.66" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "75.0345, -483.569, -32.4246, 1.91", "75.9232, -482.999, -32.6499, 1.62", "77.0829, -482.251, -32.9509, 0.22", "77.8394, -481.764, -33.1693, 0.22", "78.8259, -481.14, -33.4662, 0.22", "79.4823, -480.752, -33.6749, 0.37", "79.9439, -480.496, -33.8411, 0.37", "80.667, -480.143, -34.1228, 0.95", "81.5269, -479.785, -34.5156, 0.29", "81.9177, -479.646, -34.7188, 0.29", "82.6868, -479.411, -35.1516, 0.66", "83.3262, -479.216, -35.5399, 0.95", "83.6152, -479.124, -35.7152, 0.95", "84.4499, -478.862, -36.1772, 0.59", "84.9768, -478.705, -36.4139, 0.37", "85.6607, -478.493, -36.6099, 0.37", "86.2105, -478.332, -36.6154, 0.59", "86.4115, -478.282, -36.571, 0.59", "86.6895, -478.227, -36.4775, 0.59", "87.674, -478.072, -36.1902, 0.37", "88.3854, -477.97, -36.0878, 0.95", "89.0866, -477.851, -36.0708, 1.18", "89.6671, -477.725, -36.1256, 0.88", "90.5749, -477.497, -36.2718, 1.18", "91.9959, -477.11, -36.5873, 0.29", "93.0818, -476.772, -36.9132, 0.29", "94.1973, -476.393, -37.3337, 0.22", "95.301, -476.006, -37.7911, 0.22", "95.8613, -475.796, -38.033, 0.22", "96.4503, -475.558, -38.2942, 0.44", "97.0337, -475.319, -38.5437, 0.73", "97.9929, -474.965, -38.9976, 0.73", "99.096, -474.644, -39.6233, 0.37", "99.784, -474.484, -40.0351, 0.22", "100.523, -474.324, -40.4761, 0.51", "101.195, -474.18, -40.8559, 0.59", "102.121, -473.98, -41.3457, 0.73", "103.211, -473.718, -41.9015, 0.37", "104.031, -473.503, -42.3311, 0.29", "104.766, -473.317, -42.6833, 0.22", "105.349, -473.14, -42.9309, 0.22", "105.884, -472.962, -43.133, 0.22", "106.67, -472.688, -43.3749, 0.73", "108.04, -472.278, -43.7184, 0.73", "108.764, -472.127, -43.9718, 0.15", "109.574, -472.024, -44.2893, 0.15", "110.607, -471.961, -44.7206, 0.15", "111.272, -471.959, -44.989, 1.1", "112.045, -471.984, -45.2813, 1.69", "114.483, -472.128, -46.1627, 0.29", "115.226, -472.181, -46.4252, 0.59", "116.436, -472.275, -46.8161, 0.29", "117.688, -472.357, -47.1845, 0.29", "118.629, -472.418, -47.4572, 0.73", "118.91, -472.431, -47.5203, 0.73", "119.315, -472.448, -47.5353, 0.81", "119.965, -472.458, -47.5513, 0.37", "120.809, -472.433, -47.5152, 0.88" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "axon_0", "apic_22", "apic_1", "axon_1", "apic_24", "apic_23", "apic_21", "apic_2", "apic_26", "apic_25", "apic_20", "apic_3", "apic_17", "apic_4", "apic_19", "apic_18", "apic_14", "apic_5", "apic_16", "apic_15", "apic_7", "apic_6", "apic_9", "apic_8", "apic_11", "apic_10", "apic_13", "apic_12" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "dend_48", "dend_35", "dend_32", "dend_13", "dend_0", "apic_22", "apic_1", "dend_52", "dend_49", "dend_43", "dend_36", "dend_34", "dend_33", "dend_19", "dend_14", "dend_6", "dend_1", "apic_24", "apic_23", "apic_21", "apic_2", "dend_54", "dend_53", "dend_51", "dend_50", "dend_47", "dend_44", "dend_38", "dend_37", "dend_23", "dend_20", "dend_18", "dend_15", "dend_10", "dend_7", "dend_5", "dend_2", "apic_26", "apic_25", "apic_20", "apic_3", "dend_46", "dend_45", "dend_40", "dend_39", "dend_27", "dend_24", "dend_22", "dend_21", "dend_17", "dend_16", "dend_12", "dend_11", "dend_9", "dend_8", "dend_4", "dend_3", "apic_17", "apic_4", "dend_42", "dend_41", "dend_29", "dend_28", "dend_26", "dend_25", "apic_19", "apic_18", "apic_14", "apic_5", "dend_31", "dend_30", "apic_16", "apic_15", "apic_7", "apic_6", "apic_9", "apic_8", "apic_11", "apic_10", "apic_13", "apic_12" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_22", "apic_1", "apic_24", "apic_23", "apic_21", "apic_2", "apic_26", "apic_25", "apic_20", "apic_3", "apic_17", "apic_4", "apic_19", "apic_18", "apic_14", "apic_5", "apic_16", "apic_15", "apic_7", "apic_6", "apic_9", "apic_8", "apic_11", "apic_10", "apic_13", "apic_12" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_6",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "apic_22", "apic_1", "apic_24", "apic_23", "apic_21", "apic_2", "apic_26", "apic_25", "apic_20", "apic_3", "apic_17", "apic_4", "apic_19", "apic_18", "apic_14", "apic_5", "apic_16", "apic_15", "apic_7", "apic_6", "apic_9", "apic_8", "apic_11", "apic_10", "apic_13", "apic_12" ]
  }, {
    "name" : "ModelViewParmSubset_7",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_48", "dend_35", "dend_32", "dend_13", "dend_0", "apic_22", "apic_1", "dend_52", "dend_49", "dend_43", "dend_36", "dend_34", "dend_33", "dend_19", "dend_14", "dend_6", "dend_1", "apic_24", "apic_23", "apic_21", "apic_2", "dend_54", "dend_53", "dend_51", "dend_50", "dend_47", "dend_44", "dend_38", "dend_37", "dend_23", "dend_20", "dend_18", "dend_15", "dend_10", "dend_7", "dend_5", "dend_2", "apic_26", "apic_25", "apic_20", "apic_3", "dend_46", "dend_45", "dend_40", "dend_39", "dend_27", "dend_24", "dend_22", "dend_21", "dend_17", "dend_16", "dend_12", "dend_11", "dend_9", "dend_8", "dend_4", "dend_3", "apic_17", "apic_4", "dend_42", "dend_41", "dend_29", "dend_28", "dend_26", "dend_25", "apic_19", "apic_18", "apic_14", "apic_5", "dend_31", "dend_30", "apic_16", "apic_15", "apic_7", "apic_6", "apic_9", "apic_8", "apic_11", "apic_10", "apic_13", "apic_12" ]
  }, {
    "name" : "ModelViewParmSubset_8",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_48", "dend_35", "dend_32", "dend_13", "dend_0", "dend_52", "dend_49", "dend_43", "dend_36", "dend_34", "dend_33", "dend_19", "dend_14", "dend_6", "dend_1", "dend_54", "dend_53", "dend_51", "dend_50", "dend_47", "dend_44", "dend_38", "dend_37", "dend_23", "dend_20", "dend_18", "dend_15", "dend_10", "dend_7", "dend_5", "dend_2", "dend_46", "dend_45", "dend_40", "dend_39", "dend_27", "dend_24", "dend_22", "dend_21", "dend_17", "dend_16", "dend_12", "dend_11", "dend_9", "dend_8", "dend_4", "dend_3", "dend_42", "dend_41", "dend_29", "dend_28", "dend_26", "dend_25", "dend_31", "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "apic_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "apic_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "apic_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "apic_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "apic_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "apic_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "apic_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "apic_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "apic_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "apic_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "apic_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "apic_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "apic_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "apic_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "apic_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "apic_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "apic_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "apic_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "apic_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "apic_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "apic_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "apic_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "apic_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "apic_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "apic_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "apic_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "apic_13" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_1", "apic_2", "apic_3", "apic_4", "apic_5", "apic_6", "apic_7", "apic_8", "apic_9", "apic_10", "apic_11", "apic_12", "apic_13", "apic_14", "apic_15", "apic_16", "apic_17", "apic_18", "apic_19", "apic_20", "apic_21", "apic_22", "apic_23", "apic_24", "apic_25", "apic_26" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "dend_48", "dend_48", "dend_48", "dend_48", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_43", "dend_43", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_3", "apic_3", "apic_3", "apic_3", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "2.0"
  }, {
    "group" : "apical",
    "value" : "2.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "all_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "all",
    "condDens" : "3.0000001E-5",
    "erev" : "-75.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "basal",
    "condDens" : "8.0E-5",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.025689999",
    "erev" : "50.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.039763",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "9.999999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.288755",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.029455999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "6.71E-4",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098377",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.957198",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "1.936176",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.072928995",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0038689997",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.97688496",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gIhbar_Ih",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "somatic",
    "condDens" : "8.0E-5",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003100))*0.000080))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_HVAbar_Ca_HVA",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "6.8399997E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "6.9999996E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_HVAbar_Ca_HVA",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "4.59E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0055919997",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cADpyr_231_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cADpyr_231_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cADpyr231_L6_IPC_8d0f3a7d2e_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_48, id: dend_48, parent: soma_0
create dend_48
public dend_48
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_22, id: apic_22, parent: apic_0
create apic_22
public apic_22
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_43, id: dend_43, parent: dend_35
create dend_43
public dend_43
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_19, id: dend_19, parent: dend_13
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_24, id: apic_24, parent: apic_22
create apic_24
public apic_24
// Section: apic_23, id: apic_23, parent: apic_22
create apic_23
public apic_23
// Section: apic_21, id: apic_21, parent: apic_1
create apic_21
public apic_21
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_47, id: dend_47, parent: dend_43
create dend_47
public dend_47
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_19
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_18, id: dend_18, parent: dend_14
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: apic_26, id: apic_26, parent: apic_24
create apic_26
public apic_26
// Section: apic_25, id: apic_25, parent: apic_24
create apic_25
public apic_25
// Section: apic_20, id: apic_20, parent: apic_2
create apic_20
public apic_20
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_27, id: dend_27, parent: dend_23
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: apic_17, id: apic_17, parent: apic_3
create apic_17
public apic_17
// Section: apic_4, id: apic_4, parent: apic_3
create apic_4
public apic_4
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: apic_19, id: apic_19, parent: apic_17
create apic_19
public apic_19
// Section: apic_18, id: apic_18, parent: apic_17
create apic_18
public apic_18
// Section: apic_14, id: apic_14, parent: apic_4
create apic_14
public apic_14
// Section: apic_5, id: apic_5, parent: apic_4
create apic_5
public apic_5
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: apic_16, id: apic_16, parent: apic_14
create apic_16
public apic_16
// Section: apic_15, id: apic_15, parent: apic_14
create apic_15
public apic_15
// Section: apic_7, id: apic_7, parent: apic_5
create apic_7
public apic_7
// Section: apic_6, id: apic_6, parent: apic_5
create apic_6
public apic_6
// Section: apic_9, id: apic_9, parent: apic_7
create apic_9
public apic_9
// Section: apic_8, id: apic_8, parent: apic_7
create apic_8
public apic_8
// Section: apic_11, id: apic_11, parent: apic_9
create apic_11
public apic_11
// Section: apic_10, id: apic_10, parent: apic_9
create apic_10
public apic_10
// Section: apic_13, id: apic_13, parent: apic_11
create apic_13
public apic_13
// Section: apic_12, id: apic_12, parent: apic_11
create apic_12
public apic_12

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, apic_0, axon_0, apic_22, apic_1, axon_1, apic_24, apic_23, apic_21, apic_2, apic_26, apic_25, apic_20, apic_3, apic_17, apic_4, apic_19, apic_18, apic_14, apic_5, apic_16, apic_15, apic_7, apic_6, apic_9, apic_8, apic_11, apic_10, apic_13, apic_12]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, apic_0, dend_48, dend_35, dend_32, dend_13, dend_0, apic_22, apic_1, dend_52, dend_49, dend_43, dend_36, dend_34, dend_33, dend_19, dend_14, dend_6, dend_1, apic_24, apic_23, apic_21, apic_2, dend_54, dend_53, dend_51, dend_50, dend_47, dend_44, dend_38, dend_37, dend_23, dend_20, dend_18, dend_15, dend_10, dend_7, dend_5, dend_2, apic_26, apic_25, apic_20, apic_3, dend_46, dend_45, dend_40, dend_39, dend_27, dend_24, dend_22, dend_21, dend_17, dend_16, dend_12, dend_11, dend_9, dend_8, dend_4, dend_3, apic_17, apic_4, dend_42, dend_41, dend_29, dend_28, dend_26, dend_25, apic_19, apic_18, apic_14, apic_5, dend_31, dend_30, apic_16, apic_15, apic_7, apic_6, apic_9, apic_8, apic_11, apic_10, apic_13, apic_12]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[apic_0, apic_22, apic_1, apic_24, apic_23, apic_21, apic_2, apic_26, apic_25, apic_20, apic_3, apic_17, apic_4, apic_19, apic_18, apic_14, apic_5, apic_16, apic_15, apic_7, apic_6, apic_9, apic_8, apic_11, apic_10, apic_13, apic_12]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_5
// Group: {name=ModelViewParmSubset_6, groups=[], sections=[soma_0, apic_0, apic_22, apic_1, apic_24, apic_23, apic_21, apic_2, apic_26, apic_25, apic_20, apic_3, apic_17, apic_4, apic_19, apic_18, apic_14, apic_5, apic_16, apic_15, apic_7, apic_6, apic_9, apic_8, apic_11, apic_10, apic_13, apic_12]}
objref ModelViewParmSubset_6
// Group: {name=ModelViewParmSubset_7, groups=[], sections=[apic_0, dend_48, dend_35, dend_32, dend_13, dend_0, apic_22, apic_1, dend_52, dend_49, dend_43, dend_36, dend_34, dend_33, dend_19, dend_14, dend_6, dend_1, apic_24, apic_23, apic_21, apic_2, dend_54, dend_53, dend_51, dend_50, dend_47, dend_44, dend_38, dend_37, dend_23, dend_20, dend_18, dend_15, dend_10, dend_7, dend_5, dend_2, apic_26, apic_25, apic_20, apic_3, dend_46, dend_45, dend_40, dend_39, dend_27, dend_24, dend_22, dend_21, dend_17, dend_16, dend_12, dend_11, dend_9, dend_8, dend_4, dend_3, apic_17, apic_4, dend_42, dend_41, dend_29, dend_28, dend_26, dend_25, apic_19, apic_18, apic_14, apic_5, dend_31, dend_30, apic_16, apic_15, apic_7, apic_6, apic_9, apic_8, apic_11, apic_10, apic_13, apic_12]}
objref ModelViewParmSubset_7
// Group: {name=ModelViewParmSubset_8, groups=[], sections=[soma_0, dend_48, dend_35, dend_32, dend_13, dend_0, dend_52, dend_49, dend_43, dend_36, dend_34, dend_33, dend_19, dend_14, dend_6, dend_1, dend_54, dend_53, dend_51, dend_50, dend_47, dend_44, dend_38, dend_37, dend_23, dend_20, dend_18, dend_15, dend_10, dend_7, dend_5, dend_2, dend_46, dend_45, dend_40, dend_39, dend_27, dend_24, dend_22, dend_21, dend_17, dend_16, dend_12, dend_11, dend_9, dend_8, dend_4, dend_3, dend_42, dend_41, dend_29, dend_28, dend_26, dend_25, dend_31, dend_30]}
objref ModelViewParmSubset_8
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[apic_24]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[apic_23]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[apic_21]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[apic_2]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[apic_26]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[apic_25]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[apic_20]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[apic_19]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[apic_18]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[apic_14]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[apic_5]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[apic_16]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[apic_15]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[apic_6]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[apic_9]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[apic_8]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[apic_11]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[apic_10]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[apic_12]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[apic_22]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[apic_1]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[apic_3]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[apic_17]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[apic_4]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[apic_7]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[apic_13]}
objref OneSecGrp_SectionRef_84
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14, apic_15, apic_16, apic_17, apic_18, apic_19, apic_20, apic_21, apic_22, apic_23, apic_24, apic_25, apic_26], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_48, dend_48, dend_48, dend_48, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_43, dend_43, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_3, apic_3, apic_3, apic_3, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cADpyr_231_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cADpyr_231_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect apic_0(0), soma_0(0.4500001246063183)
    connect dend_48(0), soma_0(0.4500001246063183)
    connect dend_35(0), soma_0(0.4500001246063183)
    connect dend_32(0), soma_0(0.4500001246063183)
    connect dend_13(0), soma_0(0.4500001246063183)
    connect dend_0(0), soma_0(0.4500001246063183)
    connect axon_0(0), soma_0(1.0)
    connect apic_22(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_43(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_19(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect apic_24(0), apic_22(1.0)
    connect apic_23(0), apic_22(1.0)
    connect apic_21(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_47(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_18(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect apic_26(0), apic_24(1.0)
    connect apic_25(0), apic_24(1.0)
    connect apic_20(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_27(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect apic_17(0), apic_3(1.0)
    connect apic_4(0), apic_3(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect apic_19(0), apic_17(1.0)
    connect apic_18(0), apic_17(1.0)
    connect apic_14(0), apic_4(1.0)
    connect apic_5(0), apic_4(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect apic_16(0), apic_14(1.0)
    connect apic_15(0), apic_14(1.0)
    connect apic_7(0), apic_5(1.0)
    connect apic_6(0), apic_5(1.0)
    connect apic_9(0), apic_7(1.0)
    connect apic_8(0), apic_7(1.0)
    connect apic_11(0), apic_9(1.0)
    connect apic_10(0), apic_9(1.0)
    connect apic_13(0), apic_11(1.0)
    connect apic_12(0), apic_11(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.670932, -6.18816, 0.0, 3.24514 ) }
    soma_0 { pt3dadd( -0.640602, -5.58196, 0.0, 5.75604 ) }
    soma_0 { pt3dadd( -0.610272, -4.97576, 0.0, 7.03466 ) }
    soma_0 { pt3dadd( -0.579941, -4.36956, 0.0, 8.25467 ) }
    soma_0 { pt3dadd( -0.549611, -3.76336, 0.0, 9.31988 ) }
    soma_0 { pt3dadd( -0.519281, -3.15716, 0.0, 10.1602 ) }
    soma_0 { pt3dadd( -0.488951, -2.55096, 0.0, 10.8703 ) }
    soma_0 { pt3dadd( -0.458621, -1.94475, 0.0, 11.446 ) }
    soma_0 { pt3dadd( -0.42829, -1.33855, 0.0, 11.8124 ) }
    soma_0 { pt3dadd( -0.39796, -0.732354, 0.0, 11.9219 ) }
    soma_0 { pt3dadd( -0.36763, -0.126153, 0.0, 11.7674 ) }
    soma_0 { pt3dadd( -0.3373, 0.480047, 0.0, 11.4811 ) }
    soma_0 { pt3dadd( -0.30697, 1.08625, 0.0, 11.1855 ) }
    soma_0 { pt3dadd( -0.27664, 1.69245, 0.0, 10.9343 ) }
    soma_0 { pt3dadd( -0.246309, 2.29865, 0.0, 10.6385 ) }
    soma_0 { pt3dadd( -0.215979, 2.90485, 0.0, 10.3278 ) }
    soma_0 { pt3dadd( -0.185649, 3.51105, 0.0, 9.73377 ) }
    soma_0 { pt3dadd( -0.155319, 4.11725, 0.0, 8.94617 ) }
    soma_0 { pt3dadd( -0.124989, 4.72345, 0.0, 7.79939 ) }
    soma_0 { pt3dadd( -0.0946584, 5.32965, 0.0, 6.41658 ) }
    soma_0 { pt3dadd( -0.0643282, 5.93585, 0.0, 3.58688 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 21/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 0.103702, -6.283, 0.0, 4.26 ) }
    apic_0 { pt3dadd( 0.0996769, -6.04608, 0.0, 4.26 ) }
    apic_0 { pt3dadd( -0.811778, -7.95882, -0.0572756, 3.75 ) }
    apic_0 { pt3dadd( -1.02527, -8.42787, -0.094969, 3.53 ) }
    apic_0 { pt3dadd( -1.95054, -10.6579, -0.344398, 2.64 ) }
    apic_0 { pt3dadd( -2.52188, -12.1341, -0.54349, 2.5 ) }
    apic_0 { pt3dadd( -2.98562, -13.4239, -0.738045, 2.5 ) }
    apic_0 { pt3dadd( -3.43286, -14.8507, -0.997313, 2.28 ) }
    apic_0 { pt3dadd( -3.91245, -16.7571, -1.39032, 2.35 ) }
    apic_0 { pt3dadd( -4.31392, -18.8489, -1.83188, 2.35 ) }
    apic_0 { pt3dadd( -4.4747, -20.1627, -2.12717, 2.2 ) }
    apic_0 { pt3dadd( -4.58799, -21.8414, -2.50752, 2.2 ) }
    apic_0 { pt3dadd( -4.64517, -23.485, -2.87188, 1.91 ) }
    apic_0 { pt3dadd( -4.64757, -25.2545, -3.25535, 1.91 ) }
    apic_0 { pt3dadd( -4.5793, -27.2052, -3.66403, 1.98 ) }
    apic_0 { pt3dadd( -4.47767, -28.7263, -3.98512, 1.98 ) }
    // Section: dend_48, id: dend_48, parent: soma_0 (entry count 37/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 3.09437, -1.39086, -5.07279, 1.62 ) }
    dend_48 { pt3dadd( 5.28958, -2.34476, -8.66892, 1.62 ) }
    dend_48 { pt3dadd( 6.55954, -2.64416, -8.99743, 1.47 ) }
    dend_48 { pt3dadd( 8.12582, -3.01342, -9.4026, 1.47 ) }
    dend_48 { pt3dadd( 9.2374, -3.27548, -9.69015, 1.18 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 42/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -1.57966, 0.2861, -5.86966, 1.69 ) }
    dend_35 { pt3dadd( -3.78692, 0.749794, -14.0832, 1.69 ) }
    dend_35 { pt3dadd( -4.55381, 0.246198, -14.5014, 1.69 ) }
    dend_35 { pt3dadd( -5.28033, -0.314368, -14.9386, 1.69 ) }
    dend_35 { pt3dadd( -5.82547, -0.800202, -15.2767, 1.69 ) }
    dend_35 { pt3dadd( -6.68371, -1.5651, -15.8091, 1.47 ) }
    dend_35 { pt3dadd( -7.82763, -2.58459, -16.5186, 1.32 ) }
    dend_35 { pt3dadd( -8.63764, -3.37738, -17.038, 1.32 ) }
    dend_35 { pt3dadd( -9.16817, -3.98997, -17.3981, 1.4 ) }
    dend_35 { pt3dadd( -9.6882, -4.68139, -17.7938, 1.62 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 52/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 0.514566, 3.21772, -5.16183, 1.1 ) }
    dend_32 { pt3dadd( 0.885358, 5.55869, -8.86509, 1.1 ) }
    dend_32 { pt3dadd( 1.43271, 6.80447, -9.46325, 1.1 ) }
    dend_32 { pt3dadd( 1.96143, 8.30382, -10.3495, 1.1 ) }
    dend_32 { pt3dadd( 2.20152, 9.37603, -11.1767, 1.1 ) }
    dend_32 { pt3dadd( 2.21714, 10.1188, -11.9847, 1.1 ) }
    dend_32 { pt3dadd( 2.06841, 10.5883, -12.7593, 1.25 ) }
    dend_32 { pt3dadd( 1.6445, 10.7583, -13.6891, 1.25 ) }
    dend_32 { pt3dadd( 0.868814, 10.6386, -15.1732, 1.25 ) }
    dend_32 { pt3dadd( 0.0970677, 10.2652, -16.8271, 1.18 ) }
    dend_32 { pt3dadd( -0.255127, 9.98003, -17.8079, 1.18 ) }
    dend_32 { pt3dadd( -0.443567, 9.76026, -18.5433, 1.18 ) }
    dend_32 { pt3dadd( -0.693045, 9.36299, -19.7732, 1.18 ) }
    dend_32 { pt3dadd( -0.866917, 8.79454, -21.5721, 1.18 ) }
    dend_32 { pt3dadd( -0.784732, 8.34064, -23.2058, 1.18 ) }
    dend_32 { pt3dadd( -0.483039, 7.98179, -24.7708, 1.18 ) }
    dend_32 { pt3dadd( -0.220862, 7.81065, -25.6752, 1.18 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 69/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -3.58994, 2.46152, 4.26533, 1.98 ) }
    dend_13 { pt3dadd( -4.53339, 3.12074, 5.387, 1.98 ) }
    dend_13 { pt3dadd( -6.26365, 3.77895, 4.95794, 1.47 ) }
    dend_13 { pt3dadd( -8.00657, 4.25321, 4.53544, 1.54 ) }
    dend_13 { pt3dadd( -8.98827, 4.42333, 4.31691, 1.47 ) }
    dend_13 { pt3dadd( -10.0061, 4.49643, 4.08497, 1.1 ) }
    dend_13 { pt3dadd( -11.7304, 4.62028, 3.69203, 1.03 ) }
    dend_13 { pt3dadd( -12.7022, 4.63354, 3.47712, 1.03 ) }
    dend_13 { pt3dadd( -14.1767, 4.47333, 3.17145, 1.03 ) }
    dend_13 { pt3dadd( -15.485, 4.17772, 2.90067, 1.76 ) }
    dend_13 { pt3dadd( -17.1164, 3.67581, 2.55182, 1.91 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 80/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 3.04337, 5.35618, 0.0, 1.47 ) }
    dend_0 { pt3dadd( 3.16875, 5.57854, 0.0, 1.47 ) }
    dend_0 { pt3dadd( 4.19004, 6.11918, 0.164134, 1.03 ) }
    dend_0 { pt3dadd( 5.51158, 6.89593, 0.403093, 1.25 ) }
    dend_0 { pt3dadd( 6.67098, 7.6707, 0.627064, 0.88 ) }
    dend_0 { pt3dadd( 8.06269, 8.73926, 0.906542, 0.81 ) }
    dend_0 { pt3dadd( 8.95683, 9.53193, 1.10497, 0.88 ) }
    dend_0 { pt3dadd( 9.83453, 10.4833, 1.33209, 0.88 ) }
    dend_0 { pt3dadd( 10.2013, 11.0008, 1.45411, 0.81 ) }
    dend_0 { pt3dadd( 10.7443, 11.9583, 1.68126, 1.18 ) }
    dend_0 { pt3dadd( 11.1563, 12.933, 1.88016, 1.25 ) }
    dend_0 { pt3dadd( 11.4884, 14.1035, 2.08924, 1.18 ) }
    dend_0 { pt3dadd( 11.6568, 14.9752, 2.22187, 1.18 ) }
    dend_0 { pt3dadd( 11.7344, 15.5593, 2.29618, 1.18 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 94/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.0643282, 5.93585, 0.0, 0.748443 ) }
    axon_0 { pt3dadd( 0.685233, 20.9171, 0.0, 0.748443 ) }
    axon_0 { pt3dadd( 1.43479, 35.8984, 0.0, 0.748443 ) }
    // Section: apic_22, id: apic_22, parent: apic_0 (entry count 97/100)
    apic_22 { pt3dclear() }
    apic_22 { pt3dadd( -4.47767, -28.7263, -3.98512, 1.98 ) }
    apic_22 { pt3dadd( -4.54785, -31.0263, -4.28956, 1.47 ) }
    apic_22 { pt3dadd( -4.82033, -31.894, -4.13249, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    apic_22 { pt3dadd( -5.07519, -32.9179, -3.80145, 0.51 ) }
    apic_22 { pt3dadd( -5.27325, -34.0388, -3.35011, 0.66 ) }
    apic_22 { pt3dadd( -5.35222, -34.8185, -2.93792, 0.66 ) }
    apic_22 { pt3dadd( -5.38049, -35.7957, -2.29482, 0.88 ) }
    apic_22 { pt3dadd( -5.31318, -36.7355, -1.45765, 0.51 ) }
    apic_22 { pt3dadd( -5.17954, -37.4643, -0.677666, 0.66 ) }
    apic_22 { pt3dadd( -5.07698, -37.8107, -0.295089, 0.88 ) }
    apic_22 { pt3dadd( -4.81635, -38.5931, 0.49064, 0.66 ) }
    apic_22 { pt3dadd( -4.61976, -39.2376, 0.981268, 0.66 ) }
    apic_22 { pt3dadd( -4.48345, -39.8707, 1.21314, 0.88 ) }
    apic_22 { pt3dadd( -4.34666, -40.6352, 1.26831, 0.59 ) }
    apic_22 { pt3dadd( -4.10279, -41.7661, 1.25271, 1.1 ) }
    apic_22 { pt3dadd( -3.84279, -42.8454, 1.18809, 0.59 ) }
    apic_22 { pt3dadd( -3.61468, -43.7892, 1.06, 0.59 ) }
    apic_22 { pt3dadd( -3.37464, -44.6865, 0.893279, 0.66 ) }
    apic_22 { pt3dadd( -2.97285, -45.9296, 0.642037, 0.66 ) }
    apic_22 { pt3dadd( -2.52604, -46.9615, 0.465237, 0.81 ) }
    apic_22 { pt3dadd( -2.48993, -47.02, 0.460903, 0.81 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 18/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( -4.47767, -28.7263, -3.98512, 1.98 ) }
    apic_1 { pt3dadd( -4.81503, -33.3299, -5.04837, 1.98 ) }
    apic_1 { pt3dadd( -6.47672, -38.2434, -6.18497, 1.98 ) }
    apic_1 { pt3dadd( -7.18363, -40.3162, -6.7183, 1.54 ) }
    apic_1 { pt3dadd( -7.95075, -42.5036, -7.27987, 1.54 ) }
    apic_1 { pt3dadd( -8.81769, -44.8646, -7.92906, 1.69 ) }
    apic_1 { pt3dadd( -10.1076, -48.1506, -8.89392, 1.69 ) }
    apic_1 { pt3dadd( -11.0808, -50.5066, -9.59936, 1.69 ) }
    apic_1 { pt3dadd( -11.9252, -52.5037, -10.2339, 1.84 ) }
    apic_1 { pt3dadd( -12.8954, -54.7836, -11.0445, 1.47 ) }
    apic_1 { pt3dadd( -13.864, -57.1119, -11.9597, 1.62 ) }
    apic_1 { pt3dadd( -14.2709, -58.0922, -12.3962, 2.06 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 30/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 9.2374, -3.27548, -9.69015, 1.18 ) }
    dend_52 { pt3dadd( 10.3879, -3.92327, -9.96271, 0.73 ) }
    dend_52 { pt3dadd( 11.645, -4.56721, -10.2995, 0.73 ) }
    dend_52 { pt3dadd( 12.8347, -5.17771, -10.7495, 1.03 ) }
    dend_52 { pt3dadd( 14.0046, -5.71248, -11.2921, 0.59 ) }
    dend_52 { pt3dadd( 14.7774, -5.99631, -11.6959, 0.59 ) }
    dend_52 { pt3dadd( 15.4834, -6.19429, -12.0902, 0.66 ) }
    dend_52 { pt3dadd( 16.2605, -6.29538, -12.5573, 0.66 ) }
    dend_52 { pt3dadd( 17.4611, -6.22902, -13.3587, 1.4 ) }
    dend_52 { pt3dadd( 18.2904, -6.05513, -13.9577, 0.59 ) }
    dend_52 { pt3dadd( 19.2264, -5.80083, -14.6344, 0.66 ) }
    dend_52 { pt3dadd( 19.8571, -5.64523, -15.092, 0.81 ) }
    dend_52 { pt3dadd( 20.2817, -5.56387, -15.3747, 0.95 ) }
    dend_52 { pt3dadd( 21.1846, -5.42853, -15.9309, 0.66 ) }
    dend_52 { pt3dadd( 21.9935, -5.32654, -16.4137, 0.66 ) }
    dend_52 { pt3dadd( 23.008, -5.25168, -17.1091, 0.73 ) }
    dend_52 { pt3dadd( 23.6903, -5.22572, -17.6868, 0.73 ) }
    dend_52 { pt3dadd( 24.309, -5.21767, -18.3528, 0.73 ) }
    dend_52 { pt3dadd( 24.5654, -5.21394, -18.7449, 0.73 ) }
    dend_52 { pt3dadd( 24.8486, -5.2048, -19.489, 0.81 ) }
    dend_52 { pt3dadd( 24.9859, -5.16433, -20.1828, 0.81 ) }
    dend_52 { pt3dadd( 25.0065, -5.06493, -20.8637, 0.81 ) }
    dend_52 { pt3dadd( 24.9714, -4.95403, -21.3604, 0.81 ) }
    dend_52 { pt3dadd( 24.9016, -4.85497, -21.7894, 0.81 ) }
    dend_52 { pt3dadd( 24.7561, -4.74133, -22.7371, 0.81 ) }
    dend_52 { pt3dadd( 24.6703, -4.76887, -23.4423, 0.81 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 56/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 9.2374, -3.27548, -9.69015, 1.18 ) }
    dend_49 { pt3dadd( 10.5561, -3.58789, -9.08568, 0.59 ) }
    dend_49 { pt3dadd( 12.421, -4.20933, -8.31836, 0.59 ) }
    dend_49 { pt3dadd( 13.3164, -4.57013, -8.00956, 1.1 ) }
    dend_49 { pt3dadd( 14.6751, -5.14406, -7.66724, 0.37 ) }
    dend_49 { pt3dadd( 15.2365, -5.37285, -7.57273, 0.44 ) }
    dend_49 { pt3dadd( 16.1303, -5.72916, -7.57305, 0.44 ) }
    dend_49 { pt3dadd( 16.5404, -5.88172, -7.61827, 0.44 ) }
    dend_49 { pt3dadd( 17.1256, -6.08152, -7.71743, 0.66 ) }
    dend_49 { pt3dadd( 18.3603, -6.40877, -7.95034, 1.1 ) }
    dend_49 { pt3dadd( 19.9701, -6.65601, -8.21624, 0.44 ) }
    dend_49 { pt3dadd( 21.2149, -6.72634, -8.36179, 0.44 ) }
    dend_49 { pt3dadd( 22.6226, -6.7016, -8.4706, 0.44 ) }
    dend_49 { pt3dadd( 23.7284, -6.61512, -8.5181, 0.44 ) }
    dend_49 { pt3dadd( 25.6632, -6.36409, -8.52958, 0.44 ) }
    dend_49 { pt3dadd( 28.2156, -5.87727, -8.47157, 0.44 ) }
    dend_49 { pt3dadd( 29.7497, -5.48501, -8.38755, 0.44 ) }
    dend_49 { pt3dadd( 30.8908, -5.12206, -8.27289, 0.88 ) }
    dend_49 { pt3dadd( 32.2204, -4.62319, -8.08546, 0.44 ) }
    dend_49 { pt3dadd( 32.989, -4.27821, -7.95143, 0.73 ) }
    dend_49 { pt3dadd( 33.8929, -3.81703, -7.76091, 0.73 ) }
    dend_49 { pt3dadd( 34.8089, -3.28122, -7.53735, 0.73 ) }
    dend_49 { pt3dadd( 35.663, -2.72468, -7.30358, 0.66 ) }
    dend_49 { pt3dadd( 36.8784, -1.87628, -6.93448, 0.51 ) }
    dend_49 { pt3dadd( 38.1962, -0.926359, -6.53535, 0.22 ) }
    dend_49 { pt3dadd( 38.6456, -0.601278, -6.41754, 0.66 ) }
    dend_49 { pt3dadd( 39.2594, -0.184038, -6.30113, 0.66 ) }
    dend_49 { pt3dadd( 39.9827, 0.273891, -6.25093, 0.44 ) }
    dend_49 { pt3dadd( 41.2869, 1.06187, -6.23246, 0.44 ) }
    dend_49 { pt3dadd( 42.5457, 1.80305, -6.26003, 0.51 ) }
    dend_49 { pt3dadd( 43.3475, 2.23283, -6.3087, 0.51 ) }
    dend_49 { pt3dadd( 44.4986, 2.83039, -6.40951, 0.51 ) }
    dend_49 { pt3dadd( 46.1023, 3.56787, -6.61517, 0.59 ) }
    dend_49 { pt3dadd( 46.5751, 3.75746, -6.70271, 0.66 ) }
    // Section: dend_43, id: dend_43, parent: dend_35 (entry count 90/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -9.6882, -4.68139, -17.7938, 1.62 ) }
    dend_43 { pt3dadd( -9.29869, -5.22922, -18.9194, 0.95 ) }
    dend_43 { pt3dadd( -8.66654, -6.11831, -20.7462, 1.1 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 93/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -9.6882, -4.68139, -17.7938, 1.62 ) }
    dend_36 { pt3dadd( -10.6417, -3.98826, -17.3985, 0.59 ) }
    dend_36 { pt3dadd( -11.35, -3.44966, -17.0949, 0.59 ) }
    dend_36 { pt3dadd( -12.0323, -2.90878, -16.8104, 0.59 ) }
    dend_36 { pt3dadd( -12.7984, -2.28799, -16.5119, 0.59 ) }
    dend_36 { pt3dadd( -13.498, -1.70392, -16.2698, 0.59 ) }
    dend_36 { pt3dadd( -14.4932, -0.85097, -15.9879, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_36 { pt3dadd( -15.2652, -0.138254, -15.8308, 0.59 ) }
    dend_36 { pt3dadd( -16.0495, 0.570394, -15.7154, 0.59 ) }
    dend_36 { pt3dadd( -16.7159, 1.12923, -15.6618, 0.59 ) }
    dend_36 { pt3dadd( -17.8442, 1.98048, -15.6274, 0.59 ) }
    dend_36 { pt3dadd( -18.6805, 2.54841, -15.6233, 0.51 ) }
    dend_36 { pt3dadd( -19.8574, 3.21381, -15.6218, 0.51 ) }
    dend_36 { pt3dadd( -20.9513, 3.70286, -15.5873, 0.59 ) }
    dend_36 { pt3dadd( -21.756, 3.98397, -15.5334, 0.59 ) }
    dend_36 { pt3dadd( -22.6756, 4.24396, -15.4229, 0.59 ) }
    dend_36 { pt3dadd( -23.7213, 4.47571, -15.2568, 0.51 ) }
    dend_36 { pt3dadd( -25.1367, 4.72765, -14.9656, 0.51 ) }
    dend_36 { pt3dadd( -25.9762, 4.8465, -14.7659, 0.51 ) }
    dend_36 { pt3dadd( -26.7548, 4.94314, -14.6047, 0.51 ) }
    dend_36 { pt3dadd( -28.0393, 5.10989, -14.3466, 0.66 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 14/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -0.220862, 7.81065, -25.6752, 1.18 ) }
    dend_34 { pt3dadd( -0.486667, 8.68995, -25.6578, 0.73 ) }
    dend_34 { pt3dadd( -0.724101, 9.27826, -25.6342, 0.95 ) }
    dend_34 { pt3dadd( -1.06468, 10.0593, -25.5567, 0.66 ) }
    dend_34 { pt3dadd( -1.29573, 10.5844, -25.5431, 0.66 ) }
    dend_34 { pt3dadd( -1.61615, 11.3608, -25.5892, 0.66 ) }
    dend_34 { pt3dadd( -1.95127, 12.2546, -25.7406, 0.88 ) }
    dend_34 { pt3dadd( -2.26487, 13.2494, -26.0549, 0.66 ) }
    dend_34 { pt3dadd( -2.46263, 14.3399, -26.5532, 0.51 ) }
    dend_34 { pt3dadd( -2.45168, 15.5231, -27.2717, 1.03 ) }
    dend_34 { pt3dadd( -2.22468, 16.4709, -27.927, 1.47 ) }
    dend_34 { pt3dadd( -1.72614, 17.488, -28.6872, 1.18 ) }
    dend_34 { pt3dadd( -1.03072, 18.5571, -29.5134, 1.18 ) }
    dend_34 { pt3dadd( -0.426132, 19.3629, -30.1266, 0.95 ) }
    dend_34 { pt3dadd( 0.428832, 20.4332, -30.8994, 0.66 ) }
    dend_34 { pt3dadd( 1.23175, 21.4356, -31.5053, 0.66 ) }
    dend_34 { pt3dadd( 2.11274, 22.5506, -32.0847, 0.59 ) }
    dend_34 { pt3dadd( 2.48056, 23.0245, -32.2924, 0.44 ) }
    dend_34 { pt3dadd( 2.96735, 23.6579, -32.5602, 0.51 ) }
    dend_34 { pt3dadd( 3.39699, 24.23, -32.8068, 0.51 ) }
    dend_34 { pt3dadd( 3.96021, 24.9886, -33.1731, 0.59 ) }
    dend_34 { pt3dadd( 4.40273, 25.5726, -33.5117, 0.59 ) }
    dend_34 { pt3dadd( 4.90836, 26.1955, -33.9109, 0.59 ) }
    dend_34 { pt3dadd( 5.37956, 26.7126, -34.2852, 0.59 ) }
    dend_34 { pt3dadd( 5.75778, 27.1116, -34.5819, 0.59 ) }
    dend_34 { pt3dadd( 6.48312, 27.9148, -35.1746, 0.59 ) }
    dend_34 { pt3dadd( 7.04562, 28.6166, -35.6895, 0.51 ) }
    dend_34 { pt3dadd( 7.57503, 29.4627, -36.2952, 0.81 ) }
    dend_34 { pt3dadd( 8.09009, 30.6112, -37.0984, 0.51 ) }
    dend_34 { pt3dadd( 8.23985, 31.127, -37.4576, 0.66 ) }
    dend_34 { pt3dadd( 8.32969, 31.5512, -37.75, 0.66 ) }
    dend_34 { pt3dadd( 8.43239, 32.0008, -38.0368, 0.66 ) }
    dend_34 { pt3dadd( 8.66453, 32.7846, -38.5127, 0.44 ) }
    dend_34 { pt3dadd( 8.87111, 33.2855, -38.8071, 0.44 ) }
    dend_34 { pt3dadd( 9.52892, 34.3272, -39.3526, 0.51 ) }
    dend_34 { pt3dadd( 10.2504, 35.0689, -39.715, 0.37 ) }
    dend_34 { pt3dadd( 11.554, 36.0166, -40.1395, 0.37 ) }
    dend_34 { pt3dadd( 12.0888, 36.3305, -40.267, 0.37 ) }
    dend_34 { pt3dadd( 12.6134, 36.6065, -40.3637, 0.37 ) }
    dend_34 { pt3dadd( 13.6202, 37.1033, -40.5096, 0.37 ) }
    dend_34 { pt3dadd( 14.1114, 37.3334, -40.5712, 0.37 ) }
    dend_34 { pt3dadd( 14.3717, 37.6805, -40.7018, 0.37 ) }
    dend_34 { pt3dadd( 14.4551, 38.2401, -40.9191, 0.37 ) }
    dend_34 { pt3dadd( 14.5599, 39.3536, -41.3148, 0.37 ) }
    dend_34 { pt3dadd( 14.5988, 39.958, -41.5157, 0.29 ) }
    dend_34 { pt3dadd( 14.6405, 40.4979, -41.6978, 0.29 ) }
    dend_34 { pt3dadd( 14.8159, 41.9592, -42.1891, 0.29 ) }
    dend_34 { pt3dadd( 14.974, 42.6634, -42.4177, 0.29 ) }
    dend_34 { pt3dadd( 15.2572, 43.3917, -42.6748, 0.73 ) }
    dend_34 { pt3dadd( 15.4726, 43.7805, -42.8379, 0.73 ) }
    dend_34 { pt3dadd( 16.064, 44.6647, -43.2706, 0.51 ) }
    dend_34 { pt3dadd( 16.4959, 45.2713, -43.62, 0.51 ) }
    dend_34 { pt3dadd( 17.0794, 46.0698, -44.2183, 0.51 ) }
    dend_34 { pt3dadd( 17.5319, 46.7584, -44.8467, 0.51 ) }
    dend_34 { pt3dadd( 17.8064, 47.3674, -45.5464, 0.51 ) }
    dend_34 { pt3dadd( 17.8029, 47.661, -45.9808, 0.51 ) }
    dend_34 { pt3dadd( 17.4502, 48.0929, -46.7982, 0.51 ) }
    dend_34 { pt3dadd( 16.8788, 48.4991, -47.6852, 0.37 ) }
    dend_34 { pt3dadd( 16.3624, 48.7732, -48.354, 0.37 ) }
    dend_34 { pt3dadd( 15.827, 49.0297, -48.9601, 0.37 ) }
    dend_34 { pt3dadd( 15.57, 49.181, -49.2495, 0.37 ) }
    dend_34 { pt3dadd( 15.4461, 49.4046, -49.4655, 0.37 ) }
    dend_34 { pt3dadd( 15.5419, 49.9553, -49.6574, 0.37 ) }
    dend_34 { pt3dadd( 15.6818, 50.5332, -49.7939, 0.37 ) }
    dend_34 { pt3dadd( 15.9001, 51.3315, -49.9375, 0.51 ) }
    dend_34 { pt3dadd( 16.1824, 52.3251, -50.0611, 0.51 ) }
    dend_34 { pt3dadd( 16.528, 53.5332, -50.2031, 0.51 ) }
    dend_34 { pt3dadd( 17.0799, 55.5607, -50.4829, 0.44 ) }
    dend_34 { pt3dadd( 17.2955, 56.4739, -50.6287, 0.44 ) }
    dend_34 { pt3dadd( 17.6675, 58.2954, -50.9905, 0.44 ) }
    dend_34 { pt3dadd( 17.7916, 58.8779, -51.1516, 0.44 ) }
    dend_34 { pt3dadd( 17.9986, 59.7045, -51.4921, 0.44 ) }
    dend_34 { pt3dadd( 18.177, 60.3784, -51.9486, 0.44 ) }
    dend_34 { pt3dadd( 18.3002, 60.8845, -52.4845, 0.44 ) }
    dend_34 { pt3dadd( 18.4494, 61.3207, -53.074, 0.44 ) }
    dend_34 { pt3dadd( 18.7739, 61.8514, -53.981, 0.44 ) }
    dend_34 { pt3dadd( 19.0482, 62.1423, -54.4244, 0.44 ) }
    dend_34 { pt3dadd( 19.6009, 62.609, -54.9582, 0.44 ) }
    dend_34 { pt3dadd( 20.2797, 63.148, -55.4276, 0.44 ) }
    dend_34 { pt3dadd( 20.7194, 63.5468, -55.687, 0.44 ) }
    dend_34 { pt3dadd( 21.4272, 64.3464, -56.0893, 0.44 ) }
    dend_34 { pt3dadd( 22.0007, 65.2297, -56.449, 0.44 ) }
    dend_34 { pt3dadd( 22.2832, 65.7682, -56.64, 0.44 ) }
    dend_34 { pt3dadd( 22.5736, 66.4091, -56.8426, 0.44 ) }
    dend_34 { pt3dadd( 22.972, 67.6036, -57.1774, 0.44 ) }
    dend_34 { pt3dadd( 23.2015, 68.7028, -57.4545, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_34 { pt3dadd( 23.329, 69.7235, -57.7659, 0.44 ) }
    dend_34 { pt3dadd( 23.4511, 70.8265, -58.2093, 0.44 ) }
    dend_34 { pt3dadd( 23.5505, 71.5314, -58.5608, 0.29 ) }
    dend_34 { pt3dadd( 23.6727, 72.0682, -58.8838, 0.29 ) }
    dend_34 { pt3dadd( 23.9555, 72.8554, -59.3974, 0.73 ) }
    dend_34 { pt3dadd( 24.6759, 74.3264, -60.4166, 0.44 ) }
    dend_34 { pt3dadd( 25.3194, 75.3664, -61.1846, 0.44 ) }
    dend_34 { pt3dadd( 25.6757, 75.8487, -61.5441, 0.44 ) }
    dend_34 { pt3dadd( 26.2163, 76.454, -61.9771, 0.44 ) }
    dend_34 { pt3dadd( 27.0997, 77.2798, -62.551, 0.44 ) }
    dend_34 { pt3dadd( 27.8344, 77.8682, -62.9209, 0.44 ) }
    dend_34 { pt3dadd( 28.463, 78.3465, -63.1799, 0.44 ) }
    dend_34 { pt3dadd( 29.3011, 78.9684, -63.5338, 0.44 ) }
    dend_34 { pt3dadd( 30.2429, 79.6977, -63.974, 0.44 ) }
    dend_34 { pt3dadd( 31.2632, 80.5711, -64.5041, 0.44 ) }
    dend_34 { pt3dadd( 31.952, 81.2741, -64.9275, 0.44 ) }
    dend_34 { pt3dadd( 32.3188, 81.7126, -65.1349, 0.44 ) }
    dend_34 { pt3dadd( 32.8538, 82.4514, -65.4111, 0.37 ) }
    dend_34 { pt3dadd( 33.4007, 83.2824, -65.648, 0.37 ) }
    dend_34 { pt3dadd( 33.8866, 84.0917, -65.8239, 0.37 ) }
    dend_34 { pt3dadd( 34.7662, 85.6445, -66.105, 0.29 ) }
    dend_34 { pt3dadd( 35.24, 86.5269, -66.2912, 0.29 ) }
    dend_34 { pt3dadd( 35.5156, 87.017, -66.4158, 0.29 ) }
    dend_34 { pt3dadd( 36.2898, 88.2727, -66.7917, 0.29 ) }
    dend_34 { pt3dadd( 36.7295, 88.8894, -67.0229, 0.29 ) }
    dend_34 { pt3dadd( 37.2182, 89.5421, -67.276, 0.29 ) }
    dend_34 { pt3dadd( 37.9539, 90.5008, -67.6622, 0.37 ) }
    dend_34 { pt3dadd( 38.3809, 91.0643, -67.9076, 0.37 ) }
    dend_34 { pt3dadd( 39.0668, 91.9811, -68.3254, 0.22 ) }
    dend_34 { pt3dadd( 39.7116, 92.8301, -68.7209, 0.22 ) }
    dend_34 { pt3dadd( 40.3546, 93.6283, -69.081, 0.22 ) }
    dend_34 { pt3dadd( 40.9183, 94.272, -69.3673, 0.22 ) }
    dend_34 { pt3dadd( 41.4379, 94.8335, -69.6193, 0.22 ) }
    dend_34 { pt3dadd( 42.2007, 95.6981, -70.0093, 0.22 ) }
    dend_34 { pt3dadd( 42.6273, 96.2158, -70.237, 0.22 ) }
    dend_34 { pt3dadd( 43.0479, 96.7434, -70.4361, 0.22 ) }
    dend_34 { pt3dadd( 43.4955, 97.3293, -70.6521, 0.22 ) }
    dend_34 { pt3dadd( 44.174, 98.2433, -70.9471, 0.22 ) }
    dend_34 { pt3dadd( 44.6563, 98.8644, -71.1352, 0.22 ) }
    dend_34 { pt3dadd( 45.6505, 100.038, -71.5026, 0.22 ) }
    dend_34 { pt3dadd( 46.7522, 101.201, -71.9165, 0.22 ) }
    dend_34 { pt3dadd( 47.3128, 101.728, -72.1474, 0.44 ) }
    dend_34 { pt3dadd( 47.8047, 102.171, -72.3663, 0.29 ) }
    dend_34 { pt3dadd( 48.701, 102.968, -72.8131, 0.29 ) }
    dend_34 { pt3dadd( 49.2754, 103.493, -73.2178, 0.29 ) }
    dend_34 { pt3dadd( 49.4642, 103.688, -73.4022, 0.29 ) }
    dend_34 { pt3dadd( 49.877, 104.172, -73.876, 0.29 ) }
    dend_34 { pt3dadd( 50.3037, 104.686, -74.3429, 0.29 ) }
    dend_34 { pt3dadd( 50.7235, 105.216, -74.7923, 0.29 ) }
    dend_34 { pt3dadd( 51.51, 106.315, -75.6401, 0.29 ) }
    dend_34 { pt3dadd( 51.962, 106.969, -76.102, 0.29 ) }
    dend_34 { pt3dadd( 52.481, 107.78, -76.6771, 0.29 ) }
    dend_34 { pt3dadd( 52.9725, 108.621, -77.2952, 0.29 ) }
    dend_34 { pt3dadd( 53.3533, 109.318, -77.8145, 0.29 ) }
    dend_34 { pt3dadd( 53.9285, 110.452, -78.6467, 0.29 ) }
    dend_34 { pt3dadd( 54.2002, 111.067, -79.0793, 0.29 ) }
    dend_34 { pt3dadd( 54.6594, 112.336, -79.9679, 0.29 ) }
    dend_34 { pt3dadd( 55.0456, 113.667, -80.88, 0.29 ) }
    dend_34 { pt3dadd( 55.2081, 114.266, -81.2823, 0.15 ) }
    dend_34 { pt3dadd( 55.3988, 114.925, -81.7209, 0.15 ) }
    dend_34 { pt3dadd( 55.5794, 115.465, -82.081, 0.22 ) }
    dend_34 { pt3dadd( 56.0811, 116.859, -83.0045, 0.22 ) }
    dend_34 { pt3dadd( 56.474, 118.003, -83.6966, 0.22 ) }
    dend_34 { pt3dadd( 56.7032, 118.978, -84.2158, 0.22 ) }
    dend_34 { pt3dadd( 56.8191, 119.795, -84.6243, 0.22 ) }
    dend_34 { pt3dadd( 56.8603, 120.949, -85.1658, 0.22 ) }
    dend_34 { pt3dadd( 56.8331, 121.749, -85.5448, 0.22 ) }
    dend_34 { pt3dadd( 56.7376, 122.881, -86.1159, 0.22 ) }
    dend_34 { pt3dadd( 56.5553, 124.734, -87.1194, 0.22 ) }
    dend_34 { pt3dadd( 56.511, 125.212, -87.3923, 0.22 ) }
    dend_34 { pt3dadd( 56.4439, 126.454, -88.1247, 0.22 ) }
    dend_34 { pt3dadd( 56.4622, 127.452, -88.7281, 0.22 ) }
    dend_34 { pt3dadd( 56.5482, 128.254, -89.2118, 0.22 ) }
    dend_34 { pt3dadd( 56.8036, 129.665, -90.0517, 0.22 ) }
    dend_34 { pt3dadd( 57.0473, 130.699, -90.6237, 0.22 ) }
    dend_34 { pt3dadd( 57.3035, 131.888, -91.1852, 0.22 ) }
    dend_34 { pt3dadd( 57.6325, 133.355, -91.7335, 0.22 ) }
    dend_34 { pt3dadd( 57.9336, 134.823, -92.114, 0.22 ) }
    dend_34 { pt3dadd( 58.1066, 135.765, -92.2705, 0.22 ) }
    dend_34 { pt3dadd( 58.2691, 136.613, -92.3711, 0.22 ) }
    dend_34 { pt3dadd( 58.5105, 137.671, -92.5033, 0.22 ) }
    dend_34 { pt3dadd( 58.8445, 139.073, -92.7076, 0.22 ) }
    dend_34 { pt3dadd( 59.1503, 140.311, -92.9329, 0.29 ) }
    dend_34 { pt3dadd( 59.5801, 141.946, -93.3307, 0.22 ) }
    dend_34 { pt3dadd( 59.9843, 143.462, -93.7838, 0.22 ) }
    dend_34 { pt3dadd( 60.3473, 144.846, -94.2885, 0.22 ) }
    dend_34 { pt3dadd( 60.5613, 145.688, -94.6466, 0.22 ) }
    dend_34 { pt3dadd( 60.6543, 146.211, -94.9103, 0.22 ) }
    dend_34 { pt3dadd( 60.7048, 146.724, -95.209, 0.22 ) }
    dend_34 { pt3dadd( 60.7022, 147.299, -95.554, 0.22 ) }
    dend_34 { pt3dadd( 60.6334, 147.948, -95.9032, 0.22 ) }
    dend_34 { pt3dadd( 60.519, 148.568, -96.2446, 0.22 ) }
    dend_34 { pt3dadd( 60.4359, 149.032, -96.5433, 0.22 ) }
    dend_34 { pt3dadd( 60.2999, 149.597, -96.9211, 0.22 ) }
    dend_34 { pt3dadd( 60.216, 149.851, -97.1056, 0.22 ) }
    dend_34 { pt3dadd( 59.8438, 150.729, -97.7834, 0.22 ) }
    dend_34 { pt3dadd( 59.3054, 151.698, -98.5859, 0.22 ) }
    dend_34 { pt3dadd( 58.6678, 152.744, -99.4597, 0.22 ) }
    dend_34 { pt3dadd( 57.8691, 154.142, -100.537, 0.22 ) }
    dend_34 { pt3dadd( 57.34, 155.053, -101.189, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_34 { pt3dadd( 56.9945, 155.608, -101.562, 0.22 ) }
    dend_34 { pt3dadd( 56.2902, 156.673, -102.215, 0.22 ) }
    dend_34 { pt3dadd( 55.8445, 157.386, -102.617, 0.22 ) }
    dend_34 { pt3dadd( 55.049, 158.677, -103.318, 0.22 ) }
    dend_34 { pt3dadd( 54.6517, 159.364, -103.692, 0.22 ) }
    dend_34 { pt3dadd( 54.1723, 160.256, -104.183, 0.22 ) }
    dend_34 { pt3dadd( 53.8249, 160.963, -104.593, 0.22 ) }
    dend_34 { pt3dadd( 53.4295, 161.813, -105.11, 0.22 ) }
    dend_34 { pt3dadd( 53.3248, 162.054, -105.307, 0.22 ) }
    dend_34 { pt3dadd( 53.1682, 162.519, -105.76, 0.22 ) }
    dend_34 { pt3dadd( 53.0144, 163.191, -106.443, 0.22 ) }
    dend_34 { pt3dadd( 52.8792, 164.115, -107.408, 0.22 ) }
    dend_34 { pt3dadd( 52.857, 164.711, -108.097, 0.22 ) }
    dend_34 { pt3dadd( 52.9686, 166.185, -109.968, 0.22 ) }
    dend_34 { pt3dadd( 53.0591, 166.635, -110.628, 0.22 ) }
    dend_34 { pt3dadd( 53.2173, 167.218, -111.524, 0.22 ) }
    dend_34 { pt3dadd( 53.4314, 167.84, -112.533, 0.22 ) }
    dend_34 { pt3dadd( 53.7911, 168.721, -114.126, 0.22 ) }
    dend_34 { pt3dadd( 54.1005, 169.382, -115.411, 0.22 ) }
    dend_34 { pt3dadd( 54.5229, 170.18, -117.014, 0.22 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 20/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -0.220862, 7.81065, -25.6752, 1.18 ) }
    dend_33 { pt3dadd( -0.115091, 7.89121, -26.4231, 0.37 ) }
    dend_33 { pt3dadd( -0.0668168, 8.06783, -27.2046, 0.29 ) }
    dend_33 { pt3dadd( 0.0177744, 8.34708, -28.2939, 0.29 ) }
    dend_33 { pt3dadd( 0.123977, 8.56972, -29.2056, 0.29 ) }
    dend_33 { pt3dadd( 0.287196, 8.74823, -30.0792, 0.29 ) }
    dend_33 { pt3dadd( 0.670281, 8.89651, -31.3284, 0.29 ) }
    dend_33 { pt3dadd( 0.834052, 8.92506, -31.6508, 0.29 ) }
    dend_33 { pt3dadd( 1.08006, 8.98846, -32.1618, 0.29 ) }
    dend_33 { pt3dadd( 1.4921, 8.96096, -32.6527, 0.29 ) }
    dend_33 { pt3dadd( 2.168, 8.69112, -32.9605, 0.29 ) }
    dend_33 { pt3dadd( 3.60589, 8.02601, -33.39, 0.29 ) }
    dend_33 { pt3dadd( 4.39452, 7.61772, -33.5468, 0.15 ) }
    // Section: dend_19, id: dend_19, parent: dend_13 (entry count 33/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -17.1164, 3.67581, 2.55182, 1.91 ) }
    dend_19 { pt3dadd( -17.5855, 3.38886, 3.29658, 1.4 ) }
    dend_19 { pt3dadd( -18.2417, 2.98741, 4.33848, 1.4 ) }
    dend_19 { pt3dadd( -19.5031, 2.21577, 6.34118, 1.47 ) }
    dend_19 { pt3dadd( -19.78, 2.04636, 6.78087, 1.47 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 38/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -17.1164, 3.67581, 2.55182, 1.91 ) }
    dend_14 { pt3dadd( -19.009, 2.3877, 3.04196, 0.88 ) }
    dend_14 { pt3dadd( -21.9824, 0.807652, 3.69197, 0.88 ) }
    dend_14 { pt3dadd( -22.9871, 0.428153, 3.8577, 1.03 ) }
    dend_14 { pt3dadd( -24.1867, 0.0257752, 4.01074, 0.59 ) }
    dend_14 { pt3dadd( -24.9587, -0.225594, 4.07995, 0.73 ) }
    dend_14 { pt3dadd( -25.9377, -0.431648, 4.13417, 0.88 ) }
    dend_14 { pt3dadd( -27.2304, -0.687027, 4.09677, 0.88 ) }
    dend_14 { pt3dadd( -28.0275, -0.899468, 3.9787, 0.51 ) }
    dend_14 { pt3dadd( -28.7392, -1.18596, 3.81075, 0.51 ) }
    dend_14 { pt3dadd( -29.6833, -1.68259, 3.54023, 0.73 ) }
    dend_14 { pt3dadd( -30.3174, -2.08823, 3.33385, 0.81 ) }
    dend_14 { pt3dadd( -31.1078, -2.66762, 3.07986, 0.81 ) }
    dend_14 { pt3dadd( -32.3028, -3.66014, 2.67017, 0.81 ) }
    dend_14 { pt3dadd( -33.1862, -4.42914, 2.36805, 0.81 ) }
    dend_14 { pt3dadd( -34.0427, -5.16338, 2.08048, 0.81 ) }
    dend_14 { pt3dadd( -35.0684, -6.02016, 1.73379, 1.25 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 55/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 11.7344, 15.5593, 2.29618, 1.18 ) }
    dend_6 { pt3dadd( 12.2241, 16.3156, 2.20523, 0.44 ) }
    dend_6 { pt3dadd( 12.6781, 17.0803, 2.11169, 0.44 ) }
    dend_6 { pt3dadd( 13.1572, 17.9485, 2.01291, 0.51 ) }
    dend_6 { pt3dadd( 13.7561, 19.0625, 1.94584, 0.51 ) }
    dend_6 { pt3dadd( 14.1906, 19.8707, 1.89719, 0.51 ) }
    dend_6 { pt3dadd( 14.8181, 21.0379, 1.82692, 0.51 ) }
    dend_6 { pt3dadd( 15.1135, 21.6171, 1.79416, 0.51 ) }
    dend_6 { pt3dadd( 15.4711, 22.358, 1.77103, 0.66 ) }
    dend_6 { pt3dadd( 15.8656, 23.2437, 1.76394, 0.81 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 65/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 11.7344, 15.5593, 2.29618, 1.18 ) }
    dend_1 { pt3dadd( 11.9586, 16.6713, 2.15866, 0.81 ) }
    dend_1 { pt3dadd( 12.0625, 17.1869, 2.09491, 0.81 ) }
    dend_1 { pt3dadd( 12.2667, 18.1999, 1.96964, 1.18 ) }
    dend_1 { pt3dadd( 12.3435, 18.5806, 1.92257, 1.18 ) }
    dend_1 { pt3dadd( 12.5104, 19.4087, 1.82017, 1.18 ) }
    dend_1 { pt3dadd( 12.7317, 20.5066, 1.68441, 0.88 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 72/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 1.43479, 35.8984, 0.0, 0.265169 ) }
    axon_1 { pt3dadd( 2.18436, 50.8796, 0.0, 0.265169 ) }
    axon_1 { pt3dadd( 2.93392, 65.8609, 0.0, 0.265169 ) }
    // Section: apic_24, id: apic_24, parent: apic_22 (entry count 75/100)
    apic_24 { pt3dclear() }
    apic_24 { pt3dadd( -2.48993, -47.02, 0.460903, 0.81 ) }
    apic_24 { pt3dadd( -1.45078, -46.8533, 1.02014, 0.81 ) }
    apic_24 { pt3dadd( -0.542803, -46.77, 1.46804, 0.66 ) }
    apic_24 { pt3dadd( 0.449126, -46.7551, 1.92294, 0.66 ) }
    apic_24 { pt3dadd( 1.22309, -46.8183, 2.29544, 0.66 ) }
    apic_24 { pt3dadd( 1.84452, -46.9315, 2.60714, 0.51 ) }
    apic_24 { pt3dadd( 2.45073, -47.1189, 2.93335, 0.37 ) }
    apic_24 { pt3dadd( 3.02009, -47.4555, 3.23601, 0.37 ) }
    apic_24 { pt3dadd( 3.4243, -47.9134, 3.47867, 0.37 ) }
    apic_24 { pt3dadd( 3.8433, -48.7286, 3.77976, 0.44 ) }
    apic_24 { pt3dadd( 4.10687, -49.3133, 3.93349, 0.44 ) }
    apic_24 { pt3dadd( 4.50361, -50.1917, 4.07311, 0.44 ) }
    apic_24 { pt3dadd( 4.7011, -50.6232, 4.10827, 0.44 ) }
    apic_24 { pt3dadd( 4.89247, -51.0324, 4.13099, 0.51 ) }
    apic_24 { pt3dadd( 5.31915, -51.969, 4.19012, 0.51 ) }
    apic_24 { pt3dadd( 5.94441, -53.3302, 4.27283, 0.44 ) }
    apic_24 { pt3dadd( 6.44068, -54.3884, 4.34721, 0.37 ) }
    apic_24 { pt3dadd( 7.0584, -55.5874, 4.44162, 0.37 ) }
    apic_24 { pt3dadd( 7.76588, -56.9354, 4.58826, 0.37 ) }
    apic_24 { pt3dadd( 8.17663, -57.7391, 4.69747, 0.37 ) }
    apic_24 { pt3dadd( 8.32627, -58.0412, 4.74366, 0.81 ) }
    apic_24 { pt3dadd( 8.9037, -59.148, 4.92481, 0.51 ) }
    apic_24 { pt3dadd( 9.70385, -60.4031, 5.14462, 0.37 ) }
    apic_24 { pt3dadd( 10.2345, -61.0111, 5.24726, 0.37 ) }
    apic_24 { pt3dadd( 10.7327, -61.4127, 5.29517, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    apic_24 { pt3dadd( 11.3857, -61.7982, 5.33296, 0.37 ) }
    apic_24 { pt3dadd( 12.0381, -62.109, 5.37051, 0.37 ) }
    apic_24 { pt3dadd( 12.5903, -62.3258, 5.41194, 0.37 ) }
    apic_24 { pt3dadd( 13.359, -62.6699, 5.51383, 0.37 ) }
    apic_24 { pt3dadd( 13.5874, -62.827, 5.57817, 0.37 ) }
    apic_24 { pt3dadd( 13.8207, -63.0643, 5.70911, 0.37 ) }
    apic_24 { pt3dadd( 14.3536, -63.5871, 6.00418, 0.29 ) }
    apic_24 { pt3dadd( 15.1479, -64.2617, 6.38676, 0.29 ) }
    apic_24 { pt3dadd( 15.7977, -64.7436, 6.65901, 0.29 ) }
    apic_24 { pt3dadd( 16.6077, -65.2877, 6.96575, 0.37 ) }
    apic_24 { pt3dadd( 17.6892, -65.9711, 7.33954, 0.37 ) }
    apic_24 { pt3dadd( 18.8786, -66.6815, 7.73524, 1.03 ) }
    apic_24 { pt3dadd( 19.7775, -67.1738, 8.0129, 0.37 ) }
    apic_24 { pt3dadd( 20.3675, -67.4653, 8.17145, 0.37 ) }
    apic_24 { pt3dadd( 20.9342, -67.7268, 8.27782, 0.37 ) }
    apic_24 { pt3dadd( 22.2954, -68.2968, 8.45609, 0.37 ) }
    apic_24 { pt3dadd( 23.3684, -68.7021, 8.54891, 0.59 ) }
    apic_24 { pt3dadd( 24.2296, -68.9963, 8.60423, 0.29 ) }
    apic_24 { pt3dadd( 24.9607, -69.1833, 8.62678, 0.95 ) }
    apic_24 { pt3dadd( 26.6645, -69.4062, 8.60707, 0.29 ) }
    apic_24 { pt3dadd( 27.5089, -69.402, 8.5784, 0.29 ) }
    apic_24 { pt3dadd( 28.0058, -69.3471, 8.55591, 0.81 ) }
    apic_24 { pt3dadd( 28.7936, -69.2341, 8.53549, 0.95 ) }
    apic_24 { pt3dadd( 29.8137, -69.078, 8.56608, 0.66 ) }
    apic_24 { pt3dadd( 31.0834, -68.8872, 8.68668, 1.03 ) }
    apic_24 { pt3dadd( 32.2896, -68.6642, 8.88606, 0.37 ) }
    apic_24 { pt3dadd( 33.1733, -68.4904, 9.08755, 0.51 ) }
    apic_24 { pt3dadd( 34.1646, -68.278, 9.38948, 0.51 ) }
    apic_24 { pt3dadd( 34.995, -68.0893, 9.70127, 0.51 ) }
    apic_24 { pt3dadd( 35.3446, -68.0204, 9.83652, 0.73 ) }
    apic_24 { pt3dadd( 36.1011, -67.9236, 10.1026, 0.95 ) }
    apic_24 { pt3dadd( 37.2476, -67.8771, 10.3815, 0.59 ) }
    apic_24 { pt3dadd( 38.5032, -67.8986, 10.4844, 0.15 ) }
    apic_24 { pt3dadd( 39.1681, -67.9203, 10.4762, 0.22 ) }
    apic_24 { pt3dadd( 40.4086, -67.967, 10.4066, 0.44 ) }
    apic_24 { pt3dadd( 41.6195, -67.9783, 10.351, 0.59 ) }
    apic_24 { pt3dadd( 42.4964, -67.9861, 10.3163, 0.37 ) }
    apic_24 { pt3dadd( 43.6144, -67.9861, 10.2697, 0.37 ) }
    apic_24 { pt3dadd( 44.796, -68.0205, 10.2778, 0.66 ) }
    apic_24 { pt3dadd( 46.2145, -68.1015, 10.3944, 0.44 ) }
    apic_24 { pt3dadd( 47.4, -68.1184, 10.5899, 0.59 ) }
    apic_24 { pt3dadd( 48.0471, -68.1135, 10.7427, 0.59 ) }
    apic_24 { pt3dadd( 48.6788, -68.139, 10.9307, 0.59 ) }
    apic_24 { pt3dadd( 49.824, -68.3135, 11.363, 0.37 ) }
    apic_24 { pt3dadd( 50.3868, -68.5438, 11.5722, 0.37 ) }
    apic_24 { pt3dadd( 60.4202, -71.4286, 14.5387, 0.37 ) }
    apic_24 { pt3dadd( 69.4812, -75.4603, 18.9894, 0.37 ) }
    apic_24 { pt3dadd( 79.019, -77.2643, 23.8191, 0.37 ) }
    apic_24 { pt3dadd( 87.5992, -80.8019, 29.463, 0.37 ) }
    // Section: apic_23, id: apic_23, parent: apic_22 (entry count 49/100)
    apic_23 { pt3dclear() }
    apic_23 { pt3dadd( -2.48993, -47.02, 0.460903, 0.81 ) }
    apic_23 { pt3dadd( -2.45233, -46.9117, 1.03248, 0.59 ) }
    apic_23 { pt3dadd( -2.38795, -46.8194, 1.66032, 0.59 ) }
    apic_23 { pt3dadd( -2.31046, -46.7698, 2.29078, 0.59 ) }
    apic_23 { pt3dadd( -2.24474, -46.7467, 2.898, 0.59 ) }
    apic_23 { pt3dadd( -2.23724, -46.7699, 3.57086, 0.73 ) }
    apic_23 { pt3dadd( -2.28488, -46.8254, 3.94025, 0.73 ) }
    apic_23 { pt3dadd( -2.37801, -46.9387, 4.17874, 0.73 ) }
    apic_23 { pt3dadd( -2.54764, -47.2261, 4.3772, 0.73 ) }
    apic_23 { pt3dadd( -2.64771, -47.4447, 4.4778, 0.73 ) }
    apic_23 { pt3dadd( -3.11392, -48.5133, 4.91128, 0.51 ) }
    apic_23 { pt3dadd( -3.35527, -49.0939, 5.12565, 0.51 ) }
    apic_23 { pt3dadd( -3.52778, -49.583, 5.30812, 0.29 ) }
    apic_23 { pt3dadd( -3.74746, -50.4089, 5.64328, 0.44 ) }
    apic_23 { pt3dadd( -3.84193, -50.9368, 5.89314, 0.44 ) }
    apic_23 { pt3dadd( -3.88469, -51.4711, 6.21044, 0.66 ) }
    apic_23 { pt3dadd( -3.88075, -51.6339, 6.33605, 0.66 ) }
    apic_23 { pt3dadd( -3.91682, -51.9267, 6.62846, 0.66 ) }
    apic_23 { pt3dadd( -4.00706, -52.0904, 6.8125, 0.66 ) }
    apic_23 { pt3dadd( -4.16209, -52.2596, 6.9992, 0.66 ) }
    apic_23 { pt3dadd( -4.50161, -52.6157, 7.34685, 0.66 ) }
    apic_23 { pt3dadd( -4.78635, -52.9828, 7.63586, 0.51 ) }
    apic_23 { pt3dadd( -5.03752, -53.4268, 7.92866, 0.66 ) }
    apic_23 { pt3dadd( -5.17734, -53.9728, 8.16913, 0.37 ) }
    apic_23 { pt3dadd( -5.18044, -54.2716, 8.24274, 0.37 ) }
    apic_23 { pt3dadd( -5.16349, -54.6832, 8.32211, 0.37 ) }
    apic_23 { pt3dadd( -5.1229, -55.3746, 8.45088, 0.22 ) }
    apic_23 { pt3dadd( -5.11508, -55.6499, 8.5152, 0.22 ) }
    apic_23 { pt3dadd( -5.13999, -56.05, 8.63919, 0.44 ) }
    apic_23 { pt3dadd( -5.39432, -57.263, 9.18218, 0.51 ) }
    apic_23 { pt3dadd( -5.66864, -58.0139, 9.60398, 0.29 ) }
    apic_23 { pt3dadd( -5.88666, -58.3985, 9.89921, 0.51 ) }
    apic_23 { pt3dadd( -6.19512, -58.7663, 10.3219, 0.44 ) }
    apic_23 { pt3dadd( -6.55374, -59.0085, 10.8839, 0.44 ) }
    apic_23 { pt3dadd( -6.8886, -59.03, 11.5377, 0.88 ) }
    apic_23 { pt3dadd( -7.05348, -58.8973, 11.976, 1.1 ) }
    apic_23 { pt3dadd( -7.24949, -58.5868, 12.6278, 1.1 ) }
    apic_23 { pt3dadd( -7.41225, -58.2034, 13.2808, 0.73 ) }
    apic_23 { pt3dadd( -7.51924, -57.9454, 13.713, 0.73 ) }
    apic_23 { pt3dadd( -7.64119, -57.725, 14.1211, 0.73 ) }
    apic_23 { pt3dadd( -7.79319, -57.6067, 14.4421, 0.73 ) }
    apic_23 { pt3dadd( -8.03183, -57.5643, 14.7448, 0.95 ) }
    apic_23 { pt3dadd( -8.15534, -57.5728, 14.8361, 0.95 ) }
    apic_23 { pt3dadd( -9.17531, -57.7386, 15.3476, 0.51 ) }
    apic_23 { pt3dadd( -9.93699, -57.8877, 15.6363, 0.51 ) }
    apic_23 { pt3dadd( -10.5488, -58.0023, 15.8123, 0.29 ) }
    apic_23 { pt3dadd( -10.9068, -58.0649, 15.8896, 0.37 ) }
    apic_23 { pt3dadd( -11.4601, -58.1505, 15.9721, 0.37 ) }
    apic_23 { pt3dadd( -12.0431, -58.2073, 15.998, 0.22 ) }
    apic_23 { pt3dadd( -12.2452, -58.2186, 15.9889, 0.22 ) }
    apic_23 { pt3dadd( -12.7018, -58.2545, 15.9558, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    apic_23 { pt3dadd( -13.0072, -58.3067, 15.9249, 0.22 ) }
    apic_23 { pt3dadd( -13.5225, -58.4348, 15.8768, 0.22 ) }
    apic_23 { pt3dadd( -14.3229, -58.6815, 15.8087, 0.22 ) }
    apic_23 { pt3dadd( -15.1439, -58.9912, 15.7464, 0.88 ) }
    apic_23 { pt3dadd( -15.5414, -59.1833, 15.7241, 0.88 ) }
    apic_23 { pt3dadd( -16.0689, -59.5821, 15.7114, 0.22 ) }
    apic_23 { pt3dadd( -16.3363, -59.8337, 15.7205, 0.22 ) }
    apic_23 { pt3dadd( -16.5139, -60.0224, 15.7348, 0.22 ) }
    apic_23 { pt3dadd( -16.6989, -60.2058, 15.7581, 0.22 ) }
    apic_23 { pt3dadd( -17.0919, -60.5398, 15.8106, 0.22 ) }
    apic_23 { pt3dadd( -18.3087, -61.4165, 16.0131, 0.22 ) }
    apic_23 { pt3dadd( -18.9549, -61.8246, 16.1358, 1.03 ) }
    apic_23 { pt3dadd( -19.3244, -62.0554, 16.2144, 1.03 ) }
    apic_23 { pt3dadd( -20.2592, -62.5972, 16.4199, 0.22 ) }
    apic_23 { pt3dadd( -20.8276, -62.8785, 16.5472, 0.22 ) }
    apic_23 { pt3dadd( -21.3798, -63.0847, 16.6754, 0.22 ) }
    apic_23 { pt3dadd( -21.8017, -63.1667, 16.7829, 0.22 ) }
    apic_23 { pt3dadd( -22.5298, -63.3078, 16.9764, 0.07 ) }
    apic_23 { pt3dadd( -28.9458, -63.6014, 19.72, 0.07 ) }
    apic_23 { pt3dadd( -35.3833, -63.5233, 22.4265, 0.07 ) }
    apic_23 { pt3dadd( -41.588, -63.6105, 25.6308, 0.07 ) }
    apic_23 { pt3dadd( -47.4225, -64.3892, 29.3934, 0.07 ) }
    apic_23 { pt3dadd( -52.9851, -63.9175, 33.5906, 0.07 ) }
    apic_23 { pt3dadd( -58.3328, -62.4022, 37.8314, 0.07 ) }
    apic_23 { pt3dadd( -63.4168, -60.2037, 42.1113, 0.07 ) }
    apic_23 { pt3dadd( -68.1391, -58.9444, 47.107, 0.07 ) }
    apic_23 { pt3dadd( -73.0084, -56.8539, 51.6782, 0.07 ) }
    apic_23 { pt3dadd( -77.4575, -55.4102, 56.8732, 0.07 ) }
    apic_23 { pt3dadd( -82.4946, -54.6964, 61.6599, 0.07 ) }
    apic_23 { pt3dadd( -87.9166, -53.8458, 65.9823, 0.07 ) }
    apic_23 { pt3dadd( -93.3126, -54.0563, 70.4112, 0.07 ) }
    apic_23 { pt3dadd( -97.7742, -53.038, 75.6909, 0.07 ) }
    apic_23 { pt3dadd( -102.508, -51.296, 80.5347, 0.07 ) }
    apic_23 { pt3dadd( -107.899, -49.3141, 84.5306, 0.07 ) }
    apic_23 { pt3dadd( -112.794, -48.3088, 89.4141, 0.07 ) }
    // Section: apic_21, id: apic_21, parent: apic_1 (entry count 35/100)
    apic_21 { pt3dclear() }
    apic_21 { pt3dadd( -14.2709, -58.0922, -12.3962, 2.06 ) }
    apic_21 { pt3dadd( -14.6786, -58.7762, -13.2364, 0.73 ) }
    apic_21 { pt3dadd( -15.2477, -59.9718, -14.6723, 0.73 ) }
    apic_21 { pt3dadd( -15.4472, -60.5665, -15.3647, 0.73 ) }
    apic_21 { pt3dadd( -15.5497, -61.1899, -15.9964, 0.73 ) }
    apic_21 { pt3dadd( -15.4958, -62.0543, -16.6481, 0.73 ) }
    apic_21 { pt3dadd( -15.3563, -62.7752, -17.0133, 0.15 ) }
    apic_21 { pt3dadd( -15.1558, -63.3396, -17.11, 0.15 ) }
    apic_21 { pt3dadd( -14.9021, -64.0156, -17.1043, 0.59 ) }
    apic_21 { pt3dadd( -14.416, -65.3515, -16.9662, 0.73 ) }
    apic_21 { pt3dadd( -13.858, -66.8887, -16.7449, 0.88 ) }
    apic_21 { pt3dadd( -13.4858, -68.086, -16.5728, 1.03 ) }
    apic_21 { pt3dadd( -13.1137, -69.6476, -16.3892, 1.03 ) }
    apic_21 { pt3dadd( -12.8811, -71.0653, -16.2737, 0.51 ) }
    apic_21 { pt3dadd( -12.788, -72.1589, -16.2261, 0.51 ) }
    apic_21 { pt3dadd( -12.7986, -73.3243, -16.24, 0.29 ) }
    apic_21 { pt3dadd( -12.8894, -74.7247, -16.2844, 0.37 ) }
    apic_21 { pt3dadd( -12.9763, -75.8108, -16.311, 0.37 ) }
    apic_21 { pt3dadd( -13.0442, -76.7992, -16.3206, 0.37 ) }
    apic_21 { pt3dadd( -13.0878, -77.806, -16.3224, 0.44 ) }
    apic_21 { pt3dadd( -13.0962, -80.1882, -16.3556, 0.59 ) }
    apic_21 { pt3dadd( -13.0352, -81.3656, -16.387, 0.44 ) }
    apic_21 { pt3dadd( -12.8221, -83.054, -16.4789, 0.44 ) }
    apic_21 { pt3dadd( -12.5046, -84.7102, -16.6764, 0.44 ) }
    apic_21 { pt3dadd( -12.0936, -86.2705, -16.9537, 0.44 ) }
    apic_21 { pt3dadd( -11.4955, -88.1315, -17.4356, 0.51 ) }
    apic_21 { pt3dadd( -10.9952, -89.4991, -17.9337, 0.29 ) }
    apic_21 { pt3dadd( -10.6521, -90.4531, -18.3306, 0.59 ) }
    apic_21 { pt3dadd( -10.301, -91.484, -18.7832, 0.59 ) }
    apic_21 { pt3dadd( -10.0836, -92.16, -19.0344, 0.59 ) }
    apic_21 { pt3dadd( -9.70335, -93.3236, -19.2667, 0.59 ) }
    apic_21 { pt3dadd( -9.35044, -94.4765, -19.2501, 0.59 ) }
    apic_21 { pt3dadd( -8.99858, -95.7501, -19.0839, 0.95 ) }
    apic_21 { pt3dadd( -8.75953, -96.6448, -18.9546, 0.44 ) }
    apic_21 { pt3dadd( -8.37179, -97.9553, -18.8324, 0.51 ) }
    apic_21 { pt3dadd( -7.83268, -99.5814, -18.8344, 0.29 ) }
    apic_21 { pt3dadd( -7.39863, -100.697, -18.9576, 0.37 ) }
    apic_21 { pt3dadd( -6.87971, -101.922, -19.2533, 0.44 ) }
    apic_21 { pt3dadd( -6.38248, -103.131, -19.6994, 0.66 ) }
    apic_21 { pt3dadd( -5.89292, -104.508, -20.2864, 0.51 ) }
    apic_21 { pt3dadd( -5.73198, -105.151, -20.574, 0.51 ) }
    apic_21 { pt3dadd( -5.63202, -105.96, -20.9294, 0.51 ) }
    apic_21 { pt3dadd( -5.62022, -106.778, -21.2462, 0.51 ) }
    apic_21 { pt3dadd( -5.75081, -108.381, -21.7808, 0.51 ) }
    apic_21 { pt3dadd( -6.05015, -109.991, -22.2376, 0.51 ) }
    apic_21 { pt3dadd( -6.51208, -111.534, -22.6237, 0.51 ) }
    apic_21 { pt3dadd( -7.16234, -113.188, -23.0145, 1.18 ) }
    apic_21 { pt3dadd( -7.82308, -114.595, -23.309, 0.66 ) }
    apic_21 { pt3dadd( -8.23561, -115.379, -23.4645, 0.29 ) }
    apic_21 { pt3dadd( -8.57897, -115.989, -23.5611, 0.59 ) }
    apic_21 { pt3dadd( -9.1559, -117.039, -23.6561, 0.59 ) }
    apic_21 { pt3dadd( -9.48121, -117.763, -23.6474, 0.59 ) }
    apic_21 { pt3dadd( -9.75624, -118.666, -23.5389, 0.59 ) }
    apic_21 { pt3dadd( -9.89723, -119.244, -23.4544, 0.37 ) }
    apic_21 { pt3dadd( -10.1382, -120.369, -23.3369, 0.37 ) }
    apic_21 { pt3dadd( -10.2988, -121.142, -23.3265, 0.59 ) }
    apic_21 { pt3dadd( -10.5269, -122.154, -23.3772, 0.59 ) }
    apic_21 { pt3dadd( -10.6898, -122.821, -23.4504, 0.59 ) }
    apic_21 { pt3dadd( -11.1409, -124.58, -23.7376, 0.29 ) }
    apic_21 { pt3dadd( -11.4702, -125.886, -23.9895, 0.37 ) }
    apic_21 { pt3dadd( -11.8197, -127.32, -24.3063, 0.73 ) }
    apic_21 { pt3dadd( -12.1825, -129.044, -24.6876, 0.59 ) }
    apic_21 { pt3dadd( -12.3225, -129.863, -24.8656, 0.51 ) }
    apic_21 { pt3dadd( -12.4102, -130.64, -25.0372, 0.66 ) }
    apic_21 { pt3dadd( -12.4232, -131.619, -25.2728, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    apic_21 { pt3dadd( -12.3574, -132.821, -25.5674, 0.22 ) }
    apic_21 { pt3dadd( -12.2663, -133.641, -25.7608, 0.66 ) }
    apic_21 { pt3dadd( -12.1458, -134.541, -26.0072, 0.66 ) }
    apic_21 { pt3dadd( -11.9635, -135.812, -26.3378, 0.29 ) }
    apic_21 { pt3dadd( -11.718, -136.809, -26.5868, 0.37 ) }
    apic_21 { pt3dadd( -11.5034, -137.39, -26.7202, 0.37 ) }
    apic_21 { pt3dadd( -11.1789, -138.07, -26.8531, 0.37 ) }
    apic_21 { pt3dadd( -10.7317, -138.919, -26.9848, 0.37 ) }
    apic_21 { pt3dadd( -10.2411, -139.834, -27.0873, 0.37 ) }
    apic_21 { pt3dadd( -9.22987, -141.971, -27.2261, 0.37 ) }
    apic_21 { pt3dadd( -8.72176, -143.221, -27.2736, 0.37 ) }
    apic_21 { pt3dadd( -8.27351, -144.472, -27.3175, 0.44 ) }
    apic_21 { pt3dadd( -7.8484, -145.79, -27.3611, 0.37 ) }
    apic_21 { pt3dadd( -7.64049, -146.486, -27.3864, 0.59 ) }
    apic_21 { pt3dadd( -7.26152, -147.975, -27.4265, 0.51 ) }
    apic_21 { pt3dadd( -7.13295, -148.583, -27.404, 0.51 ) }
    apic_21 { pt3dadd( -6.94949, -149.415, -27.3826, 0.51 ) }
    apic_21 { pt3dadd( -6.68149, -150.469, -27.3702, 0.51 ) }
    apic_21 { pt3dadd( -6.22184, -152.105, -27.3988, 0.37 ) }
    apic_21 { pt3dadd( -5.8627, -153.245, -27.4649, 0.59 ) }
    apic_21 { pt3dadd( -5.17287, -155.231, -27.6536, 0.59 ) }
    apic_21 { pt3dadd( -4.75111, -156.71, -27.8698, 0.59 ) }
    apic_21 { pt3dadd( -4.6331, -157.297, -27.982, 0.59 ) }
    apic_21 { pt3dadd( -4.48265, -158.632, -28.2494, 0.66 ) }
    apic_21 { pt3dadd( -4.44228, -159.965, -28.5528, 1.4 ) }
    apic_21 { pt3dadd( -4.5066, -161.161, -28.8736, 1.62 ) }
    apic_21 { pt3dadd( -4.75787, -163.167, -29.4745, 0.29 ) }
    apic_21 { pt3dadd( -4.9794, -164.358, -29.8119, 0.88 ) }
    apic_21 { pt3dadd( -5.33645, -165.738, -30.2224, 0.37 ) }
    apic_21 { pt3dadd( -5.65971, -166.701, -30.523, 0.81 ) }
    apic_21 { pt3dadd( -6.39125, -168.479, -31.0841, 0.44 ) }
    apic_21 { pt3dadd( -6.83351, -169.467, -31.3878, 0.59 ) }
    apic_21 { pt3dadd( -7.26064, -170.388, -31.6469, 0.59 ) }
    apic_21 { pt3dadd( -7.71313, -171.297, -31.875, 0.59 ) }
    apic_21 { pt3dadd( -8.54101, -172.827, -32.2244, 0.51 ) }
    apic_21 { pt3dadd( -9.20243, -174.021, -32.391, 0.37 ) }
    apic_21 { pt3dadd( -9.84554, -175.158, -32.472, 0.44 ) }
    apic_21 { pt3dadd( -10.4365, -176.197, -32.5017, 0.44 ) }
    apic_21 { pt3dadd( -11.1342, -177.493, -32.5364, 0.44 ) }
    apic_21 { pt3dadd( -11.6424, -178.498, -32.5635, 0.95 ) }
    apic_21 { pt3dadd( -12.1896, -179.66, -32.6164, 0.95 ) }
    apic_21 { pt3dadd( -12.6441, -180.745, -32.7172, 0.59 ) }
    apic_21 { pt3dadd( -12.9214, -181.614, -32.8648, 0.51 ) }
    apic_21 { pt3dadd( -13.0988, -182.814, -33.2037, 0.22 ) }
    apic_21 { pt3dadd( -13.0913, -183.243, -33.3694, 0.22 ) }
    apic_21 { pt3dadd( -13.0333, -183.82, -33.6477, 0.29 ) }
    apic_21 { pt3dadd( -12.99, -184.181, -33.85, 0.29 ) }
    apic_21 { pt3dadd( -12.9506, -185.128, -34.3737, 0.29 ) }
    apic_21 { pt3dadd( -13.0371, -185.961, -34.8294, 0.37 ) }
    apic_21 { pt3dadd( -13.2581, -186.887, -35.251, 0.44 ) }
    apic_21 { pt3dadd( -13.5034, -187.696, -35.5456, 0.44 ) }
    apic_21 { pt3dadd( -13.7233, -188.252, -35.6964, 0.44 ) }
    apic_21 { pt3dadd( -14.2599, -189.433, -35.9518, 0.44 ) }
    apic_21 { pt3dadd( -14.51, -189.981, -36.0359, 0.44 ) }
    apic_21 { pt3dadd( -15.1244, -191.631, -36.2229, 0.66 ) }
    apic_21 { pt3dadd( -15.3795, -192.557, -36.3339, 0.44 ) }
    apic_21 { pt3dadd( -15.5742, -193.848, -36.5074, 0.44 ) }
    apic_21 { pt3dadd( -15.5786, -194.326, -36.6043, 0.81 ) }
    apic_21 { pt3dadd( -15.4357, -195.573, -36.9187, 1.03 ) }
    apic_21 { pt3dadd( -15.0972, -197.233, -37.418, 0.37 ) }
    apic_21 { pt3dadd( -14.8072, -198.271, -37.798, 0.07 ) }
    apic_21 { pt3dadd( -14.5569, -199.045, -38.1051, 1.1 ) }
    apic_21 { pt3dadd( -14.1606, -200.226, -38.57, 1.4 ) }
    apic_21 { pt3dadd( -13.8845, -201.121, -38.9049, 0.29 ) }
    apic_21 { pt3dadd( -13.6719, -201.921, -39.1852, 0.88 ) }
    apic_21 { pt3dadd( -13.4636, -203.016, -39.5173, 0.66 ) }
    apic_21 { pt3dadd( -13.376, -203.754, -39.6924, 0.51 ) }
    apic_21 { pt3dadd( -13.295, -204.974, -39.9592, 0.44 ) }
    apic_21 { pt3dadd( -13.2815, -205.654, -40.0904, 0.44 ) }
    apic_21 { pt3dadd( -13.2739, -206.642, -40.2815, 0.59 ) }
    apic_21 { pt3dadd( -13.2815, -208.373, -40.5982, 0.81 ) }
    apic_21 { pt3dadd( -13.2902, -210.269, -40.9394, 0.44 ) }
    apic_21 { pt3dadd( -13.2924, -210.979, -41.0395, 0.29 ) }
    apic_21 { pt3dadd( -13.2921, -211.63, -41.1033, 0.29 ) }
    apic_21 { pt3dadd( -13.2673, -212.358, -41.1352, 0.29 ) }
    apic_21 { pt3dadd( -13.1397, -213.504, -41.0855, 0.88 ) }
    apic_21 { pt3dadd( -12.8013, -215.157, -40.8498, 0.37 ) }
    apic_21 { pt3dadd( -12.4505, -216.334, -40.5734, 0.37 ) }
    apic_21 { pt3dadd( -12.3122, -216.715, -40.467, 0.37 ) }
    apic_21 { pt3dadd( -11.7793, -217.904, -40.0834, 0.51 ) }
    apic_21 { pt3dadd( -11.0962, -219.205, -39.6216, 0.29 ) }
    apic_21 { pt3dadd( -10.6924, -219.842, -39.3767, 0.81 ) }
    apic_21 { pt3dadd( -10.0527, -220.646, -39.0425, 0.29 ) }
    apic_21 { pt3dadd( -9.43137, -221.328, -38.7819, 0.59 ) }
    apic_21 { pt3dadd( -8.5301, -222.247, -38.4399, 0.15 ) }
    apic_21 { pt3dadd( -7.93003, -222.822, -38.2403, 0.29 ) }
    apic_21 { pt3dadd( -7.3777, -223.289, -38.0903, 0.29 ) }
    apic_21 { pt3dadd( -6.49583, -223.942, -37.8489, 0.15 ) }
    apic_21 { pt3dadd( -6.15269, -224.181, -37.7497, 0.15 ) }
    apic_21 { pt3dadd( -5.78987, -224.411, -37.6068, 0.15 ) }
    apic_21 { pt3dadd( -5.15632, -224.786, -37.2968, 0.37 ) }
    apic_21 { pt3dadd( -4.52798, -225.168, -36.9202, 0.37 ) }
    apic_21 { pt3dadd( -3.82082, -225.611, -36.4443, 0.66 ) }
    apic_21 { pt3dadd( -3.42888, -225.864, -36.1521, 0.66 ) }
    apic_21 { pt3dadd( -2.45793, -226.477, -35.4318, 0.66 ) }
    apic_21 { pt3dadd( -1.14555, -227.287, -34.4655, 0.29 ) }
    apic_21 { pt3dadd( -0.489551, -227.688, -33.9842, 0.29 ) }
    apic_21 { pt3dadd( 0.16861, -228.093, -33.4775, 0.88 ) }
    apic_21 { pt3dadd( 1.09277, -228.669, -32.7262, 0.59 ) }
    apic_21 { pt3dadd( 1.61939, -228.976, -32.2429, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    apic_21 { pt3dadd( 2.06606, -229.23, -31.7709, 1.18 ) }
    apic_21 { pt3dadd( 2.42393, -229.414, -31.3048, 1.18 ) }
    apic_21 { pt3dadd( 3.17309, -229.724, -30.1827, 1.18 ) }
    apic_21 { pt3dadd( 3.39547, -229.793, -29.7751, 1.18 ) }
    apic_21 { pt3dadd( 3.73903, -229.826, -28.9354, 0.66 ) }
    apic_21 { pt3dadd( 3.8158, -229.819, -28.7089, 0.66 ) }
    apic_21 { pt3dadd( 3.94799, -229.754, -28.1822, 0.66 ) }
    apic_21 { pt3dadd( 3.98778, -229.704, -27.9173, 0.66 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 8/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( -14.2709, -58.0922, -12.3962, 2.06 ) }
    apic_2 { pt3dadd( -15.3988, -60.2539, -14.2168, 2.06 ) }
    apic_2 { pt3dadd( -15.9527, -61.185, -14.869, 2.06 ) }
    apic_2 { pt3dadd( -16.5757, -62.1635, -15.4703, 2.06 ) }
    apic_2 { pt3dadd( -17.4009, -63.4765, -16.1463, 1.84 ) }
    apic_2 { pt3dadd( -18.4928, -65.2889, -16.9261, 1.54 ) }
    apic_2 { pt3dadd( -19.5606, -67.1386, -17.6358, 1.54 ) }
    apic_2 { pt3dadd( -20.4858, -68.8426, -18.0876, 1.4 ) }
    apic_2 { pt3dadd( -20.9079, -69.6429, -18.271, 1.4 ) }
    apic_2 { pt3dadd( -21.9485, -71.6656, -18.6685, 1.47 ) }
    apic_2 { pt3dadd( -23.0739, -74.0073, -19.055, 1.47 ) }
    apic_2 { pt3dadd( -23.4832, -74.9524, -19.1937, 1.47 ) }
    apic_2 { pt3dadd( -23.7866, -75.7378, -19.3272, 1.47 ) }
    apic_2 { pt3dadd( -24.3915, -77.3423, -19.694, 1.47 ) }
    apic_2 { pt3dadd( -24.7236, -78.1241, -19.9227, 1.47 ) }
    apic_2 { pt3dadd( -25.8925, -80.4383, -20.6638, 1.25 ) }
    apic_2 { pt3dadd( -26.7781, -81.9145, -21.1664, 1.32 ) }
    apic_2 { pt3dadd( -27.6537, -83.1916, -21.6328, 1.47 ) }
    apic_2 { pt3dadd( -28.6289, -84.4779, -22.1164, 1.47 ) }
    apic_2 { pt3dadd( -30.01, -86.0947, -22.7376, 1.47 ) }
    apic_2 { pt3dadd( -31.4281, -87.65, -23.3631, 1.47 ) }
    apic_2 { pt3dadd( -32.3526, -88.6386, -23.7733, 1.47 ) }
    apic_2 { pt3dadd( -33.3523, -89.676, -24.1991, 1.47 ) }
    apic_2 { pt3dadd( -33.966, -90.324, -24.4271, 1.25 ) }
    apic_2 { pt3dadd( -34.7667, -91.2192, -24.6958, 1.18 ) }
    apic_2 { pt3dadd( -35.8126, -92.5038, -25.0805, 1.4 ) }
    apic_2 { pt3dadd( -36.5631, -93.5431, -25.4952, 1.47 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 35/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 24.6703, -4.76887, -23.4423, 0.81 ) }
    dend_54 { pt3dadd( 24.8329, -5.77674, -23.5885, 0.51 ) }
    dend_54 { pt3dadd( 25.5289, -7.92321, -23.9401, 0.29 ) }
    dend_54 { pt3dadd( 25.9993, -9.02151, -24.1362, 0.29 ) }
    dend_54 { pt3dadd( 26.3536, -9.83382, -24.3157, 0.29 ) }
    dend_54 { pt3dadd( 26.9045, -11.1598, -24.6236, 0.29 ) }
    dend_54 { pt3dadd( 27.3234, -12.0924, -24.8351, 0.29 ) }
    dend_54 { pt3dadd( 28.1671, -13.7597, -25.2822, 0.29 ) }
    dend_54 { pt3dadd( 28.7017, -14.7081, -25.5711, 0.29 ) }
    dend_54 { pt3dadd( 29.4224, -15.9333, -25.9575, 0.29 ) }
    dend_54 { pt3dadd( 29.9939, -16.8867, -26.2472, 0.22 ) }
    dend_54 { pt3dadd( 30.75, -18.136, -26.7248, 0.22 ) }
    dend_54 { pt3dadd( 31.2258, -18.946, -27.0669, 0.66 ) }
    dend_54 { pt3dadd( 31.7925, -20.0113, -27.5371, 0.22 ) }
    dend_54 { pt3dadd( 32.4329, -21.2854, -28.078, 0.22 ) }
    dend_54 { pt3dadd( 33.2544, -22.9109, -28.7777, 0.22 ) }
    dend_54 { pt3dadd( 34.2251, -24.8965, -29.6547, 0.29 ) }
    dend_54 { pt3dadd( 34.7562, -26.1488, -30.1914, 0.81 ) }
    dend_54 { pt3dadd( 35.252, -27.5075, -30.6715, 0.37 ) }
    dend_54 { pt3dadd( 35.405, -27.9715, -30.8171, 0.37 ) }
    dend_54 { pt3dadd( 35.6741, -28.7546, -31.054, 0.22 ) }
    dend_54 { pt3dadd( 35.9134, -29.3748, -31.2125, 0.22 ) }
    dend_54 { pt3dadd( 36.4275, -30.5562, -31.4036, 0.22 ) }
    dend_54 { pt3dadd( 36.921, -31.6616, -31.6119, 0.22 ) }
    dend_54 { pt3dadd( 37.1769, -32.2671, -31.7333, 0.73 ) }
    dend_54 { pt3dadd( 37.5895, -33.5725, -31.9592, 0.37 ) }
    dend_54 { pt3dadd( 37.7042, -34.0589, -32.0302, 0.37 ) }
    dend_54 { pt3dadd( 37.9141, -34.9724, -32.1545, 0.37 ) }
    dend_54 { pt3dadd( 38.1694, -35.9839, -32.2777, 0.37 ) }
    dend_54 { pt3dadd( 38.3905, -36.7691, -32.3797, 0.37 ) }
    dend_54 { pt3dadd( 39.1349, -39.0791, -32.6314, 0.37 ) }
    dend_54 { pt3dadd( 39.7949, -40.8116, -32.7771, 0.37 ) }
    dend_54 { pt3dadd( 40.3196, -41.9402, -32.8741, 0.37 ) }
    dend_54 { pt3dadd( 40.9325, -43.0168, -32.9506, 0.73 ) }
    dend_54 { pt3dadd( 41.476, -43.8585, -32.9923, 0.44 ) }
    dend_54 { pt3dadd( 41.9044, -44.4858, -33.0068, 0.29 ) }
    dend_54 { pt3dadd( 42.2632, -44.9603, -32.9967, 0.29 ) }
    dend_54 { pt3dadd( 42.755, -45.6149, -32.9362, 0.81 ) }
    dend_54 { pt3dadd( 43.3894, -46.5948, -32.7975, 0.37 ) }
    dend_54 { pt3dadd( 43.8337, -47.3975, -32.6679, 0.37 ) }
    dend_54 { pt3dadd( 44.2486, -48.2446, -32.5344, 0.37 ) }
    dend_54 { pt3dadd( 44.6313, -49.076, -32.421, 0.59 ) }
    dend_54 { pt3dadd( 45.0877, -50.1026, -32.2898, 0.59 ) }
    dend_54 { pt3dadd( 45.6284, -51.3947, -32.1443, 0.29 ) }
    dend_54 { pt3dadd( 46.1009, -52.5834, -32.0366, 0.59 ) }
    dend_54 { pt3dadd( 46.5394, -53.7394, -31.9362, 0.37 ) }
    dend_54 { pt3dadd( 46.8065, -54.5704, -31.873, 0.59 ) }
    dend_54 { pt3dadd( 47.1244, -55.7521, -31.8209, 0.44 ) }
    dend_54 { pt3dadd( 47.3638, -56.7364, -31.8231, 0.51 ) }
    dend_54 { pt3dadd( 47.5243, -57.4104, -31.8407, 0.51 ) }
    dend_54 { pt3dadd( 47.6996, -58.2355, -31.8834, 0.22 ) }
    dend_54 { pt3dadd( 48.0117, -59.8035, -32.0329, 0.59 ) }
    dend_54 { pt3dadd( 48.3379, -61.2259, -32.2356, 0.59 ) }
    dend_54 { pt3dadd( 48.6814, -62.4272, -32.4471, 0.59 ) }
    dend_54 { pt3dadd( 49.0505, -63.5487, -32.6653, 0.44 ) }
    dend_54 { pt3dadd( 49.4955, -64.7673, -32.947, 0.37 ) }
    dend_54 { pt3dadd( 49.9866, -65.9671, -33.2685, 0.37 ) }
    dend_54 { pt3dadd( 50.5537, -67.1548, -33.6445, 1.98 ) }
    dend_54 { pt3dadd( 51.307, -68.5907, -34.1639, 0.22 ) }
    dend_54 { pt3dadd( 51.7266, -69.3866, -34.4795, 0.37 ) }
    dend_54 { pt3dadd( 52.1565, -70.2244, -34.85, 0.66 ) }
    dend_54 { pt3dadd( 52.6652, -71.2887, -35.3514, 0.29 ) }
    dend_54 { pt3dadd( 53.0207, -72.2341, -35.7741, 0.29 ) }
    dend_54 { pt3dadd( 53.2448, -73.1322, -36.1434, 0.73 ) }
    dend_54 { pt3dadd( 53.4364, -74.2338, -36.4932, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_54 { pt3dadd( 53.612, -75.1952, -36.6719, 0.59 ) }
    dend_54 { pt3dadd( 53.8259, -76.1686, -36.768, 0.22 ) }
    dend_54 { pt3dadd( 54.0407, -77.0231, -36.8297, 0.37 ) }
    dend_54 { pt3dadd( 54.2849, -77.9551, -36.907, 0.22 ) }
    dend_54 { pt3dadd( 54.8292, -79.8782, -37.1543, 0.22 ) }
    dend_54 { pt3dadd( 55.4228, -81.7819, -37.4997, 0.29 ) }
    dend_54 { pt3dadd( 55.8993, -83.2313, -37.8227, 0.29 ) }
    dend_54 { pt3dadd( 56.2442, -84.2053, -38.0892, 0.29 ) }
    dend_54 { pt3dadd( 56.6757, -85.373, -38.5056, 0.29 ) }
    dend_54 { pt3dadd( 57.0822, -86.4298, -38.9691, 0.81 ) }
    dend_54 { pt3dadd( 57.3847, -87.1997, -39.4036, 0.15 ) }
    dend_54 { pt3dadd( 57.6094, -87.7791, -39.7681, 0.37 ) }
    dend_54 { pt3dadd( 57.806, -88.2407, -40.0548, 0.22 ) }
    dend_54 { pt3dadd( 58.0367, -88.6271, -40.27, 0.22 ) }
    dend_54 { pt3dadd( 58.4133, -89.0749, -40.491, 0.22 ) }
    dend_54 { pt3dadd( 58.7343, -89.3982, -40.6491, 0.22 ) }
    dend_54 { pt3dadd( 59.2842, -89.9296, -40.9441, 0.22 ) }
    dend_54 { pt3dadd( 59.9976, -90.6916, -41.3764, 0.29 ) }
    dend_54 { pt3dadd( 60.726, -91.6288, -41.9011, 0.37 ) }
    dend_54 { pt3dadd( 61.2172, -92.3916, -42.3067, 0.37 ) }
    dend_54 { pt3dadd( 61.5888, -93.0721, -42.6557, 0.37 ) }
    dend_54 { pt3dadd( 61.9152, -93.7211, -42.9504, 0.37 ) }
    dend_54 { pt3dadd( 62.1699, -94.3014, -43.2095, 0.37 ) }
    dend_54 { pt3dadd( 62.4129, -95.0844, -43.5727, 0.37 ) }
    dend_54 { pt3dadd( 62.4574, -95.4343, -43.7338, 0.37 ) }
    dend_54 { pt3dadd( 62.4661, -96.1492, -44.1263, 0.37 ) }
    dend_54 { pt3dadd( 62.4164, -96.8763, -44.5851, 0.37 ) }
    dend_54 { pt3dadd( 62.2704, -97.8477, -45.2999, 0.44 ) }
    dend_54 { pt3dadd( 62.124, -98.7434, -46.0152, 0.44 ) }
    dend_54 { pt3dadd( 62.0272, -99.4652, -46.6347, 0.73 ) }
    dend_54 { pt3dadd( 61.8892, -100.369, -47.5434, 1.1 ) }
    dend_54 { pt3dadd( 61.791, -100.842, -48.0855, 0.95 ) }
    dend_54 { pt3dadd( 61.5688, -101.782, -49.2401, 0.29 ) }
    dend_54 { pt3dadd( 61.4593, -102.452, -49.9905, 0.29 ) }
    dend_54 { pt3dadd( 61.4313, -103.083, -50.5553, 0.66 ) }
    dend_54 { pt3dadd( 61.4206, -103.954, -51.303, 0.44 ) }
    dend_54 { pt3dadd( 61.4105, -104.41, -51.6628, 0.44 ) }
    dend_54 { pt3dadd( 61.3897, -105.148, -52.2441, 0.44 ) }
    dend_54 { pt3dadd( 61.3708, -106.353, -53.1191, 0.44 ) }
    dend_54 { pt3dadd( 61.3527, -107.775, -54.0556, 0.44 ) }
    dend_54 { pt3dadd( 61.3628, -109.106, -54.8587, 0.44 ) }
    dend_54 { pt3dadd( 61.4147, -110.254, -55.4978, 0.44 ) }
    dend_54 { pt3dadd( 61.4634, -111.08, -55.9429, 0.73 ) }
    dend_54 { pt3dadd( 61.6407, -113.153, -57.0661, 0.29 ) }
    dend_54 { pt3dadd( 61.7225, -113.966, -57.4971, 0.51 ) }
    dend_54 { pt3dadd( 61.8701, -115.011, -58.0325, 0.51 ) }
    dend_54 { pt3dadd( 62.0987, -116.338, -58.6237, 0.44 ) }
    dend_54 { pt3dadd( 62.3668, -117.789, -59.2459, 0.37 ) }
    dend_54 { pt3dadd( 62.5574, -118.902, -59.7152, 0.37 ) }
    dend_54 { pt3dadd( 62.6441, -119.532, -59.9715, 0.59 ) }
    dend_54 { pt3dadd( 62.7458, -120.596, -60.3714, 0.29 ) }
    dend_54 { pt3dadd( 62.8235, -121.684, -60.7257, 0.37 ) }
    dend_54 { pt3dadd( 62.9358, -123.145, -61.131, 0.22 ) }
    dend_54 { pt3dadd( 62.9946, -123.89, -61.3188, 0.37 ) }
    dend_54 { pt3dadd( 63.0351, -125.034, -61.5571, 0.07 ) }
    dend_54 { pt3dadd( 63.0461, -125.869, -61.7108, 0.07 ) }
    dend_54 { pt3dadd( 63.0333, -126.279, -61.7585, 0.37 ) }
    dend_54 { pt3dadd( 63.0058, -126.985, -61.8259, 0.22 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 58/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 24.6703, -4.76887, -23.4423, 0.81 ) }
    dend_53 { pt3dadd( 24.7001, -4.2814, -23.8383, 0.44 ) }
    dend_53 { pt3dadd( 24.8751, -3.28176, -24.7188, 0.44 ) }
    dend_53 { pt3dadd( 24.9709, -2.63411, -25.2707, 0.44 ) }
    dend_53 { pt3dadd( 25.0795, -1.95409, -25.7898, 0.44 ) }
    dend_53 { pt3dadd( 25.2237, -1.3447, -26.2106, 0.44 ) }
    dend_53 { pt3dadd( 25.3742, -0.763613, -26.5877, 0.44 ) }
    dend_53 { pt3dadd( 25.6742, 0.237372, -27.1988, 0.44 ) }
    dend_53 { pt3dadd( 25.9441, 1.08505, -27.6669, 0.44 ) }
    dend_53 { pt3dadd( 26.2914, 2.28924, -28.2671, 0.66 ) }
    dend_53 { pt3dadd( 26.5881, 3.54806, -28.8366, 0.29 ) }
    dend_53 { pt3dadd( 26.6826, 4.00556, -29.0329, 0.29 ) }
    dend_53 { pt3dadd( 26.8298, 4.70974, -29.2985, 0.51 ) }
    dend_53 { pt3dadd( 27.0595, 5.67778, -29.6141, 0.22 ) }
    dend_53 { pt3dadd( 27.2957, 6.60013, -29.9073, 0.22 ) }
    dend_53 { pt3dadd( 27.4906, 7.40298, -30.1937, 0.22 ) }
    dend_53 { pt3dadd( 27.7951, 8.58673, -30.6582, 0.22 ) }
    dend_53 { pt3dadd( 28.1223, 9.65062, -31.1137, 0.22 ) }
    dend_53 { pt3dadd( 28.6881, 11.2993, -31.8854, 0.22 ) }
    dend_53 { pt3dadd( 28.9994, 12.1906, -32.3271, 0.44 ) }
    dend_53 { pt3dadd( 29.422, 13.3816, -32.9411, 0.37 ) }
    dend_53 { pt3dadd( 29.7369, 14.2291, -33.4351, 0.37 ) }
    dend_53 { pt3dadd( 29.9504, 14.851, -33.8398, 0.37 ) }
    dend_53 { pt3dadd( 30.1157, 15.4369, -34.2697, 0.37 ) }
    dend_53 { pt3dadd( 30.3194, 16.614, -35.1639, 0.37 ) }
    dend_53 { pt3dadd( 30.3699, 17.4813, -35.8002, 0.37 ) }
    dend_53 { pt3dadd( 30.3227, 18.4347, -36.4484, 0.37 ) }
    dend_53 { pt3dadd( 30.213, 19.1691, -36.9356, 0.37 ) }
    dend_53 { pt3dadd( 30.0522, 19.9802, -37.4525, 0.37 ) }
    dend_53 { pt3dadd( 29.8804, 20.9654, -38.0334, 0.37 ) }
    dend_53 { pt3dadd( 29.8131, 21.5619, -38.4399, 0.37 ) }
    dend_53 { pt3dadd( 29.7768, 22.3733, -39.0271, 0.22 ) }
    dend_53 { pt3dadd( 29.7767, 23.0179, -39.4958, 0.15 ) }
    dend_53 { pt3dadd( 29.8019, 24.0105, -40.2543, 0.15 ) }
    dend_53 { pt3dadd( 29.858, 25.5335, -41.427, 0.15 ) }
    dend_53 { pt3dadd( 29.9764, 27.5875, -43.1202, 0.15 ) }
    dend_53 { pt3dadd( 30.0221, 28.2648, -43.7104, 0.15 ) }
    dend_53 { pt3dadd( 30.0715, 29.0085, -44.3876, 0.15 ) }
    dend_53 { pt3dadd( 30.1171, 29.9785, -45.2633, 0.15 ) }
    dend_53 { pt3dadd( 30.1262, 31.0434, -46.1724, 0.37 ) }
    dend_53 { pt3dadd( 30.0819, 32.2307, -47.1892, 0.07 ) }
    dend_53 { pt3dadd( 30.0337, 33.1748, -47.9753, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_53 { pt3dadd( 30.0259, 33.9593, -48.6865, 0.07 ) }
    dend_53 { pt3dadd( 30.0537, 34.7691, -49.4507, 0.07 ) }
    dend_53 { pt3dadd( 30.1164, 35.8707, -50.4862, 0.44 ) }
    dend_53 { pt3dadd( 30.1766, 37.273, -51.7809, 0.44 ) }
    dend_53 { pt3dadd( 30.2047, 38.3976, -52.7397, 0.73 ) }
    dend_53 { pt3dadd( 30.2482, 39.1846, -53.3874, 0.37 ) }
    dend_53 { pt3dadd( 30.3352, 39.9161, -53.9694, 0.37 ) }
    dend_53 { pt3dadd( 30.5044, 40.7743, -54.6186, 0.37 ) }
    dend_53 { pt3dadd( 30.6762, 41.3908, -55.0375, 0.37 ) }
    dend_53 { pt3dadd( 30.9099, 42.1287, -55.5033, 0.37 ) }
    dend_53 { pt3dadd( 31.188, 42.929, -56.0442, 0.51 ) }
    dend_53 { pt3dadd( 31.3455, 43.3121, -56.3649, 0.51 ) }
    dend_53 { pt3dadd( 31.5143, 43.6362, -56.738, 0.15 ) }
    dend_53 { pt3dadd( 31.8775, 44.2002, -57.5582, 0.44 ) }
    dend_53 { pt3dadd( 32.4575, 45.02, -58.9782, 0.29 ) }
    dend_53 { pt3dadd( 32.5663, 45.19, -59.2964, 0.29 ) }
    dend_53 { pt3dadd( 32.6938, 45.525, -60.0143, 0.29 ) }
    dend_53 { pt3dadd( 32.7306, 45.8997, -60.8777, 0.73 ) }
    dend_53 { pt3dadd( 32.6934, 46.1017, -61.5075, 0.07 ) }
    dend_53 { pt3dadd( 32.6238, 46.2241, -62.0804, 0.07 ) }
    dend_53 { pt3dadd( 32.4945, 46.2969, -62.7152, 0.81 ) }
    dend_53 { pt3dadd( 31.7477, 46.3359, -65.0428, 0.37 ) }
    dend_53 { pt3dadd( 31.2771, 46.2658, -66.1145, 0.37 ) }
    dend_53 { pt3dadd( 30.3855, 46.0766, -67.7704, 0.37 ) }
    dend_53 { pt3dadd( 30.0189, 45.9962, -68.376, 0.37 ) }
    dend_53 { pt3dadd( 29.4872, 45.9064, -69.2182, 0.37 ) }
    dend_53 { pt3dadd( 28.9013, 45.8433, -70.1712, 0.81 ) }
    dend_53 { pt3dadd( 28.005, 45.9267, -71.6192, 0.37 ) }
    dend_53 { pt3dadd( 27.6663, 46.1328, -72.2847, 0.44 ) }
    dend_53 { pt3dadd( 27.4752, 46.4915, -72.7938, 0.44 ) }
    dend_53 { pt3dadd( 27.2414, 47.5764, -73.8804, 0.44 ) }
    dend_53 { pt3dadd( 27.2177, 48.3146, -74.4752, 0.44 ) }
    dend_53 { pt3dadd( 27.2669, 49.0015, -74.9671, 0.44 ) }
    dend_53 { pt3dadd( 27.4518, 50.4324, -75.7099, 0.44 ) }
    dend_53 { pt3dadd( 27.7838, 52.348, -76.4799, 0.15 ) }
    dend_53 { pt3dadd( 28.1099, 53.9638, -76.9666, 0.15 ) }
    dend_53 { pt3dadd( 28.3642, 55.0383, -77.1117, 0.66 ) }
    dend_53 { pt3dadd( 28.6279, 56.0538, -77.1326, 0.29 ) }
    dend_53 { pt3dadd( 29.392, 58.7636, -76.9662, 0.07 ) }
    dend_53 { pt3dadd( 29.937, 60.6155, -76.725, 0.07 ) }
    dend_53 { pt3dadd( 30.2372, 61.5465, -76.5344, 0.51 ) }
    dend_53 { pt3dadd( 31.0512, 64.0259, -75.923, 0.15 ) }
    dend_53 { pt3dadd( 31.3059, 64.8062, -75.7139, 0.07 ) }
    dend_53 { pt3dadd( 31.7397, 66.0809, -75.3644, 0.15 ) }
    dend_53 { pt3dadd( 31.977, 66.7595, -75.2386, 0.95 ) }
    dend_53 { pt3dadd( 32.3505, 67.8706, -74.9449, 0.07 ) }
    dend_53 { pt3dadd( 32.4886, 68.3242, -74.8446, 0.44 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 47/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 46.5751, 3.75746, -6.70271, 0.66 ) }
    dend_51 { pt3dadd( 47.1516, 3.73602, -5.93413, 0.29 ) }
    dend_51 { pt3dadd( 47.6077, 3.51436, -5.24914, 0.29 ) }
    dend_51 { pt3dadd( 48.0659, 3.01258, -4.57383, 0.29 ) }
    dend_51 { pt3dadd( 48.4, 2.4728, -4.1567, 0.29 ) }
    dend_51 { pt3dadd( 48.6781, 1.91603, -3.87715, 0.44 ) }
    dend_51 { pt3dadd( 49.0333, 1.18582, -3.57476, 0.44 ) }
    dend_51 { pt3dadd( 49.4908, -0.0208791, -3.26453, 0.37 ) }
    dend_51 { pt3dadd( 49.8459, -1.17443, -3.05704, 0.66 ) }
    dend_51 { pt3dadd( 50.0573, -1.99581, -2.94966, 0.37 ) }
    dend_51 { pt3dadd( 50.2357, -2.86743, -2.84061, 0.59 ) }
    dend_51 { pt3dadd( 50.3552, -3.46343, -2.76123, 0.59 ) }
    dend_51 { pt3dadd( 50.4128, -3.71439, -2.77501, 0.59 ) }
    dend_51 { pt3dadd( 50.4887, -3.49044, -2.26845, 0.59 ) }
    dend_51 { pt3dadd( 50.6587, -3.27213, -1.71685, 0.59 ) }
    dend_51 { pt3dadd( 50.9246, -2.98372, -1.04409, 0.59 ) }
    dend_51 { pt3dadd( 51.1389, -2.81648, -0.621042, 0.59 ) }
    dend_51 { pt3dadd( 51.7691, -2.50674, 0.408977, 0.59 ) }
    dend_51 { pt3dadd( 52.3783, -2.32067, 1.29879, 0.44 ) }
    dend_51 { pt3dadd( 53.2409, -2.15358, 2.53589, 0.44 ) }
    dend_51 { pt3dadd( 53.558, -2.11557, 3.00711, 0.66 ) }
    dend_51 { pt3dadd( 54.2634, -2.09898, 4.13529, 0.66 ) }
    dend_51 { pt3dadd( 54.6607, -2.14339, 4.92353, 0.66 ) }
    dend_51 { pt3dadd( 54.8409, -2.19944, 5.33786, 0.51 ) }
    dend_51 { pt3dadd( 55.1968, -2.346, 6.17102, 0.66 ) }
    dend_51 { pt3dadd( 55.4453, -2.42962, 6.717, 0.66 ) }
    dend_51 { pt3dadd( 55.689, -2.4862, 7.19063, 0.81 ) }
    dend_51 { pt3dadd( 56.2489, -2.53278, 8.06533, 0.66 ) }
    dend_51 { pt3dadd( 56.9067, -2.56822, 8.89775, 0.66 ) }
    dend_51 { pt3dadd( 57.6788, -2.6054, 9.72852, 0.37 ) }
    dend_51 { pt3dadd( 58.3347, -2.63709, 10.302, 0.37 ) }
    dend_51 { pt3dadd( 59.3176, -2.68819, 11.0541, 0.37 ) }
    dend_51 { pt3dadd( 60.0997, -2.71081, 11.5862, 0.37 ) }
    dend_51 { pt3dadd( 60.6908, -2.70331, 11.9156, 0.44 ) }
    dend_51 { pt3dadd( 61.8871, -2.62774, 12.4419, 1.18 ) }
    dend_51 { pt3dadd( 63.3204, -2.52423, 12.8735, 0.37 ) }
    dend_51 { pt3dadd( 64.3999, -2.45175, 13.0788, 0.37 ) }
    dend_51 { pt3dadd( 65.3054, -2.40023, 13.1554, 1.18 ) }
    dend_51 { pt3dadd( 67.0531, -2.34647, 13.1639, 0.37 ) }
    dend_51 { pt3dadd( 68.2592, -2.32728, 13.0796, 0.37 ) }
    dend_51 { pt3dadd( 69.4307, -2.30343, 12.917, 0.37 ) }
    dend_51 { pt3dadd( 69.8721, -2.295, 12.8322, 0.37 ) }
    dend_51 { pt3dadd( 70.6753, -2.28738, 12.6274, 0.37 ) }
    dend_51 { pt3dadd( 71.6796, -2.32524, 12.3377, 0.73 ) }
    dend_51 { pt3dadd( 72.4756, -2.41835, 12.1118, 0.29 ) }
    dend_51 { pt3dadd( 79.7664, -4.11335, 17.8911, 0.29 ) }
    dend_51 { pt3dadd( 86.3632, -7.33545, 23.8248, 0.29 ) }
    dend_51 { pt3dadd( 92.9532, -12.0685, 28.6341, 0.29 ) }
    dend_51 { pt3dadd( 99.0861, -17.657, 33.1253, 0.29 ) }
    dend_51 { pt3dadd( 105.31, -24.0404, 36.2483, 0.29 ) }
    dend_51 { pt3dadd( 111.207, -30.3354, 40.0895, 0.29 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 98/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 46.5751, 3.75746, -6.70271, 0.66 ) }
    dend_50 { pt3dadd( 47.2544, 3.96402, -6.70918, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_50 { pt3dadd( 49.1892, 4.53502, -6.68046, 0.59 ) }
    dend_50 { pt3dadd( 50.1064, 4.79663, -6.62342, 0.37 ) }
    dend_50 { pt3dadd( 51.1975, 5.07897, -6.49469, 0.37 ) }
    dend_50 { pt3dadd( 52.6794, 5.4221, -6.2557, 0.37 ) }
    dend_50 { pt3dadd( 53.9805, 5.70565, -6.00427, 0.37 ) }
    dend_50 { pt3dadd( 54.7276, 5.86733, -5.79637, 0.15 ) }
    dend_50 { pt3dadd( 55.5877, 6.06809, -5.47726, 0.22 ) }
    dend_50 { pt3dadd( 56.5862, 6.30443, -5.0742, 0.22 ) }
    dend_50 { pt3dadd( 57.1144, 6.42774, -4.83701, 0.22 ) }
    dend_50 { pt3dadd( 58.134, 6.68088, -4.37512, 0.29 ) }
    dend_50 { pt3dadd( 59.0642, 6.93216, -3.9534, 0.37 ) }
    dend_50 { pt3dadd( 60.0893, 7.21947, -3.50877, 0.37 ) }
    dend_50 { pt3dadd( 61.0392, 7.49705, -3.14488, 0.37 ) }
    dend_50 { pt3dadd( 62.2872, 7.90295, -2.73131, 0.37 ) }
    dend_50 { pt3dadd( 63.4209, 8.29307, -2.36783, 0.29 ) }
    dend_50 { pt3dadd( 64.1485, 8.54728, -2.12184, 0.29 ) }
    dend_50 { pt3dadd( 64.6418, 8.72552, -1.95266, 0.37 ) }
    dend_50 { pt3dadd( 65.4686, 9.04455, -1.67662, 0.88 ) }
    dend_50 { pt3dadd( 66.8911, 9.62447, -1.19098, 0.22 ) }
    dend_50 { pt3dadd( 67.9481, 10.0446, -0.801872, 0.22 ) }
    dend_50 { pt3dadd( 68.923, 10.3805, -0.395271, 0.22 ) }
    dend_50 { pt3dadd( 69.8207, 10.6461, 0.00143379, 0.73 ) }
    dend_50 { pt3dadd( 71.1783, 11.0278, 0.637283, 0.29 ) }
    dend_50 { pt3dadd( 72.6517, 11.3959, 1.36796, 0.29 ) }
    dend_50 { pt3dadd( 73.7284, 11.6178, 1.91202, 0.29 ) }
    dend_50 { pt3dadd( 74.7267, 11.8065, 2.42629, 0.44 ) }
    dend_50 { pt3dadd( 75.4318, 11.9225, 2.83358, 0.44 ) }
    dend_50 { pt3dadd( 76.2951, 12.0739, 3.38959, 0.29 ) }
    dend_50 { pt3dadd( 76.9261, 12.2036, 3.83002, 0.29 ) }
    dend_50 { pt3dadd( 77.5284, 12.3588, 4.25355, 0.81 ) }
    dend_50 { pt3dadd( 78.6056, 12.7228, 4.87463, 0.22 ) }
    dend_50 { pt3dadd( 79.814, 13.2347, 5.4483, 0.88 ) }
    dend_50 { pt3dadd( 81.1206, 13.8567, 5.94892, 0.22 ) }
    dend_50 { pt3dadd( 81.6552, 14.1502, 6.09587, 0.29 ) }
    dend_50 { pt3dadd( 82.2015, 14.5069, 6.19418, 1.18 ) }
    dend_50 { pt3dadd( 84.1499, 15.8931, 6.3705, 0.37 ) }
    dend_50 { pt3dadd( 85.0455, 16.5604, 6.36628, 0.29 ) }
    dend_50 { pt3dadd( 85.8143, 17.183, 6.32446, 0.29 ) }
    dend_50 { pt3dadd( 86.5895, 17.8605, 6.30335, 0.37 ) }
    dend_50 { pt3dadd( 86.9563, 18.2102, 6.32935, 0.81 ) }
    dend_50 { pt3dadd( 87.8451, 19.0972, 6.4784, 0.22 ) }
    dend_50 { pt3dadd( 88.405, 19.6442, 6.63332, 0.37 ) }
    dend_50 { pt3dadd( 89.2471, 20.4539, 6.88638, 0.37 ) }
    dend_50 { pt3dadd( 90.2315, 21.3581, 7.20892, 0.37 ) }
    dend_50 { pt3dadd( 92.4162, 23.1533, 7.99357, 0.15 ) }
    dend_50 { pt3dadd( 93.2174, 23.761, 8.29875, 0.15 ) }
    dend_50 { pt3dadd( 94.013, 24.3334, 8.63235, 0.81 ) }
    dend_50 { pt3dadd( 94.7797, 24.8356, 8.96838, 0.37 ) }
    dend_50 { pt3dadd( 96.0587, 25.5696, 9.58163, 0.22 ) }
    dend_50 { pt3dadd( 97.5098, 26.2998, 10.3215, 0.22 ) }
    dend_50 { pt3dadd( 98.562, 26.7577, 10.8848, 0.44 ) }
    dend_50 { pt3dadd( 99.2825, 27.063, 11.2879, 0.81 ) }
    dend_50 { pt3dadd( 100.108, 27.4246, 11.7778, 0.95 ) }
    dend_50 { pt3dadd( 101.437, 27.9932, 12.6111, 0.07 ) }
    dend_50 { pt3dadd( 101.714, 28.1324, 12.8062, 0.29 ) }
    // Section: dend_47, id: dend_47, parent: dend_43 (entry count 55/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -8.66654, -6.11831, -20.7462, 1.1 ) }
    dend_47 { pt3dadd( -9.14631, -5.61827, -21.2731, 0.22 ) }
    dend_47 { pt3dadd( -9.43184, -5.07597, -21.749, 0.22 ) }
    dend_47 { pt3dadd( -9.62484, -4.62992, -22.1106, 0.22 ) }
    dend_47 { pt3dadd( -9.75529, -4.26559, -22.3818, 0.29 ) }
    dend_47 { pt3dadd( -9.97511, -3.55767, -22.8455, 0.29 ) }
    dend_47 { pt3dadd( -10.1969, -2.7522, -23.3557, 0.29 ) }
    dend_47 { pt3dadd( -10.3246, -1.92908, -23.879, 0.66 ) }
    dend_47 { pt3dadd( -10.347, -1.48648, -24.1719, 0.66 ) }
    dend_47 { pt3dadd( -10.3241, -0.784148, -24.6798, 0.66 ) }
    dend_47 { pt3dadd( -10.2773, -0.273299, -25.0877, 0.66 ) }
    dend_47 { pt3dadd( -10.2242, 0.0849341, -25.37, 0.66 ) }
    dend_47 { pt3dadd( -10.12, 0.684885, -25.8784, 0.66 ) }
    dend_47 { pt3dadd( -10.0417, 1.18885, -26.2733, 0.66 ) }
    dend_47 { pt3dadd( -9.97581, 1.85072, -26.7311, 0.59 ) }
    dend_47 { pt3dadd( -9.92414, 2.87168, -27.3418, 0.44 ) }
    dend_47 { pt3dadd( -9.88253, 3.47259, -27.7163, 0.44 ) }
    dend_47 { pt3dadd( -9.81361, 4.2924, -28.2355, 0.44 ) }
    dend_47 { pt3dadd( -9.76268, 4.91777, -28.6355, 0.59 ) }
    dend_47 { pt3dadd( -9.73682, 5.35678, -28.9307, 0.59 ) }
    dend_47 { pt3dadd( -9.72783, 5.79515, -29.2575, 0.59 ) }
    dend_47 { pt3dadd( -9.79224, 6.91275, -30.199, 0.59 ) }
    dend_47 { pt3dadd( -9.9241, 7.62956, -30.8074, 0.59 ) }
    dend_47 { pt3dadd( -10.019, 7.9489, -31.0387, 0.59 ) }
    dend_47 { pt3dadd( -10.153, 8.35699, -31.2279, 0.59 ) }
    dend_47 { pt3dadd( -10.3862, 9.11051, -31.4768, 0.44 ) }
    dend_47 { pt3dadd( -10.5502, 9.78135, -31.656, 0.44 ) }
    dend_47 { pt3dadd( -10.6742, 10.6386, -31.8173, 0.44 ) }
    dend_47 { pt3dadd( -10.6851, 11.9027, -32.0948, 0.44 ) }
    dend_47 { pt3dadd( -10.512, 13.5425, -32.5248, 0.44 ) }
    dend_47 { pt3dadd( -10.3374, 14.4521, -32.7965, 0.44 ) }
    dend_47 { pt3dadd( -10.0272, 15.6276, -33.1894, 0.44 ) }
    dend_47 { pt3dadd( -9.67157, 16.6903, -33.5794, 0.81 ) }
    dend_47 { pt3dadd( -9.14112, 17.998, -34.0835, 0.22 ) }
    dend_47 { pt3dadd( -9.03796, 18.2193, -34.1785, 0.22 ) }
    dend_47 { pt3dadd( -8.8175, 18.7008, -34.4061, 0.22 ) }
    dend_47 { pt3dadd( -8.65679, 19.2116, -34.6019, 0.22 ) }
    dend_47 { pt3dadd( -8.60647, 19.791, -34.7904, 0.22 ) }
    dend_47 { pt3dadd( -8.66523, 20.4559, -35.0119, 0.29 ) }
    dend_47 { pt3dadd( -8.78335, 21.1476, -35.2121, 0.29 ) }
    dend_47 { pt3dadd( -8.84787, 21.6069, -35.3619, 0.29 ) }
    dend_47 { pt3dadd( -8.89423, 22.3603, -35.6372, 0.29 ) }
    dend_47 { pt3dadd( -8.86069, 22.9888, -35.8906, 0.29 ) }
    dend_47 { pt3dadd( -8.7646, 23.5232, -36.1282, 0.29 ) }
    dend_47 { pt3dadd( -8.61732, 23.8802, -36.2936, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_47 { pt3dadd( -8.12523, 24.5388, -36.5627, 0.29 ) }
    dend_47 { pt3dadd( -7.67787, 25.0252, -36.7375, 0.29 ) }
    dend_47 { pt3dadd( -7.07645, 25.6266, -36.9236, 0.29 ) }
    dend_47 { pt3dadd( -6.79104, 25.9311, -37.0159, 0.29 ) }
    dend_47 { pt3dadd( -6.62471, 26.2015, -37.1198, 0.29 ) }
    dend_47 { pt3dadd( -6.59202, 26.3557, -37.2172, 0.29 ) }
    dend_47 { pt3dadd( -6.60203, 26.8789, -37.7452, 0.29 ) }
    dend_47 { pt3dadd( -6.69433, 27.4361, -38.3881, 0.29 ) }
    dend_47 { pt3dadd( -6.85638, 28.0066, -39.1109, 0.29 ) }
    dend_47 { pt3dadd( -7.0146, 28.4384, -39.6745, 0.29 ) }
    dend_47 { pt3dadd( -7.23944, 29.0975, -40.4707, 0.29 ) }
    dend_47 { pt3dadd( -7.45385, 29.9649, -41.4179, 0.29 ) }
    dend_47 { pt3dadd( -7.48341, 30.2857, -41.7209, 0.29 ) }
    dend_47 { pt3dadd( -7.46961, 30.7352, -42.0587, 0.29 ) }
    dend_47 { pt3dadd( -7.41909, 31.2358, -42.4103, 0.29 ) }
    dend_47 { pt3dadd( -7.27771, 32.2358, -43.0254, 0.29 ) }
    dend_47 { pt3dadd( -7.13099, 33.0045, -43.4928, 0.29 ) }
    dend_47 { pt3dadd( -6.93734, 33.7376, -43.952, 0.29 ) }
    dend_47 { pt3dadd( -6.72101, 34.3672, -44.3716, 0.29 ) }
    dend_47 { pt3dadd( -6.04713, 35.9191, -45.4244, 0.29 ) }
    dend_47 { pt3dadd( -5.65839, 36.6546, -45.9926, 0.37 ) }
    dend_47 { pt3dadd( -5.22727, 37.3783, -46.6368, 0.29 ) }
    dend_47 { pt3dadd( -4.89227, 37.8761, -47.0866, 0.29 ) }
    dend_47 { pt3dadd( -4.55239, 38.3285, -47.4978, 0.29 ) }
    dend_47 { pt3dadd( -3.96029, 39.0109, -48.0757, 0.29 ) }
    dend_47 { pt3dadd( -3.2733, 39.709, -48.64, 0.29 ) }
    dend_47 { pt3dadd( -2.76712, 40.1471, -49.0607, 0.29 ) }
    dend_47 { pt3dadd( -2.20151, 40.578, -49.5183, 0.29 ) }
    dend_47 { pt3dadd( -1.27302, 41.2022, -50.2797, 0.29 ) }
    dend_47 { pt3dadd( -0.236768, 41.8628, -51.1771, 0.29 ) }
    dend_47 { pt3dadd( 0.587352, 42.368, -51.9142, 0.29 ) }
    dend_47 { pt3dadd( 1.4304, 42.8899, -52.6273, 0.22 ) }
    dend_47 { pt3dadd( 1.75559, 43.1039, -52.8824, 0.22 ) }
    dend_47 { pt3dadd( 2.0152, 43.2947, -53.0824, 0.22 ) }
    dend_47 { pt3dadd( 2.44726, 43.6444, -53.3908, 0.22 ) }
    dend_47 { pt3dadd( 3.21335, 44.2825, -53.8923, 0.22 ) }
    dend_47 { pt3dadd( 3.92875, 44.8455, -54.3009, 0.22 ) }
    dend_47 { pt3dadd( 5.39505, 45.925, -55.0386, 0.22 ) }
    dend_47 { pt3dadd( 6.19936, 46.438, -55.4379, 0.22 ) }
    dend_47 { pt3dadd( 6.39247, 46.5336, -55.5375, 0.37 ) }
    dend_47 { pt3dadd( 7.55402, 46.8816, -56.2098, 0.37 ) }
    dend_47 { pt3dadd( 8.3182, 46.9698, -56.687, 0.22 ) }
    dend_47 { pt3dadd( 8.9264, 46.9602, -57.1023, 0.59 ) }
    dend_47 { pt3dadd( 9.7543, 46.8675, -57.7117, 0.37 ) }
    dend_47 { pt3dadd( 10.705, 46.7344, -58.4244, 0.44 ) }
    dend_47 { pt3dadd( 11.8287, 46.5949, -59.2487, 0.15 ) }
    dend_47 { pt3dadd( 12.5709, 46.5348, -59.7794, 0.15 ) }
    dend_47 { pt3dadd( 13.3842, 46.5157, -60.3298, 0.15 ) }
    dend_47 { pt3dadd( 14.1864, 46.5329, -60.8428, 0.29 ) }
    dend_47 { pt3dadd( 15.0794, 46.6042, -61.3417, 0.37 ) }
    dend_47 { pt3dadd( 15.9661, 46.7652, -61.7419, 0.15 ) }
    dend_47 { pt3dadd( 17.3082, 47.1073, -62.3293, 0.15 ) }
    dend_47 { pt3dadd( 17.9466, 47.2837, -62.6316, 0.15 ) }
    dend_47 { pt3dadd( 18.5477, 47.4519, -62.9343, 0.15 ) }
    dend_47 { pt3dadd( 19.8035, 47.8105, -63.6141, 0.15 ) }
    dend_47 { pt3dadd( 21.9292, 48.4515, -64.921, 0.15 ) }
    dend_47 { pt3dadd( 23.1658, 48.8526, -65.8181, 0.15 ) }
    dend_47 { pt3dadd( 24.0344, 49.1729, -66.562, 0.29 ) }
    dend_47 { pt3dadd( 24.9227, 49.5502, -67.5031, 0.29 ) }
    dend_47 { pt3dadd( 25.7523, 49.9865, -68.6489, 0.29 ) }
    dend_47 { pt3dadd( 26.2836, 50.3853, -69.685, 0.29 ) }
    dend_47 { pt3dadd( 26.6504, 50.7926, -70.7332, 0.15 ) }
    dend_47 { pt3dadd( 27.0478, 51.4411, -72.1903, 0.15 ) }
    dend_47 { pt3dadd( 27.3188, 52.1932, -73.6138, 0.15 ) }
    dend_47 { pt3dadd( 27.4233, 52.8921, -74.7672, 0.15 ) }
    dend_47 { pt3dadd( 27.4266, 53.3255, -75.3911, 0.15 ) }
    dend_47 { pt3dadd( 27.4238, 53.6489, -75.8183, 0.15 ) }
    dend_47 { pt3dadd( 27.4336, 53.9189, -76.1594, 0.15 ) }
    dend_47 { pt3dadd( 27.5023, 54.6133, -77.0016, 0.15 ) }
    dend_47 { pt3dadd( 27.6118, 55.2024, -77.6649, 0.22 ) }
    dend_47 { pt3dadd( 27.9363, 56.2513, -78.7775, 0.37 ) }
    dend_47 { pt3dadd( 28.393, 57.3444, -79.8936, 0.29 ) }
    dend_47 { pt3dadd( 28.6822, 57.93, -80.4721, 0.29 ) }
    dend_47 { pt3dadd( 29.0113, 58.4768, -80.9947, 0.29 ) }
    dend_47 { pt3dadd( 29.5359, 59.2078, -81.677, 0.29 ) }
    dend_47 { pt3dadd( 30.2162, 60.0603, -82.4407, 0.29 ) }
    dend_47 { pt3dadd( 30.8301, 60.8303, -83.0744, 0.29 ) }
    dend_47 { pt3dadd( 31.2727, 61.4181, -83.5134, 0.37 ) }
    dend_47 { pt3dadd( 31.7608, 62.0936, -84.0028, 0.22 ) }
    dend_47 { pt3dadd( 32.2473, 62.7477, -84.5448, 0.15 ) }
    dend_47 { pt3dadd( 32.9909, 63.6508, -85.3554, 0.15 ) }
    dend_47 { pt3dadd( 33.3519, 64.0705, -85.7242, 0.15 ) }
    dend_47 { pt3dadd( 33.9555, 64.7415, -86.2494, 0.15 ) }
    dend_47 { pt3dadd( 34.9213, 65.7974, -87.0554, 0.15 ) }
    dend_47 { pt3dadd( 36.4525, 67.4191, -88.2598, 0.15 ) }
    dend_47 { pt3dadd( 37.4236, 68.3784, -88.9461, 0.15 ) }
    dend_47 { pt3dadd( 38.6687, 69.5181, -89.7411, 0.15 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 87/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -8.66654, -6.11831, -20.7462, 1.1 ) }
    dend_44 { pt3dadd( -9.49459, -6.56966, -20.5903, 0.81 ) }
    dend_44 { pt3dadd( -10.1535, -6.83753, -20.4928, 0.66 ) }
    dend_44 { pt3dadd( -10.6482, -7.00108, -20.4347, 0.51 ) }
    dend_44 { pt3dadd( -11.4332, -7.23088, -20.3942, 0.51 ) }
    dend_44 { pt3dadd( -12.2085, -7.44717, -20.3772, 0.73 ) }
    dend_44 { pt3dadd( -13.1135, -7.72702, -20.3789, 0.59 ) }
    dend_44 { pt3dadd( -13.6251, -7.88408, -20.3977, 0.59 ) }
    dend_44 { pt3dadd( -14.3029, -8.18146, -20.4567, 0.81 ) }
    dend_44 { pt3dadd( -15.4295, -8.9429, -20.6312, 0.51 ) }
    dend_44 { pt3dadd( -15.8854, -9.36349, -20.7518, 0.44 ) }
    dend_44 { pt3dadd( -16.4597, -9.99652, -20.9479, 0.44 ) }
    dend_44 { pt3dadd( -16.9336, -10.5776, -21.1525, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_44 { pt3dadd( -18.0993, -11.9722, -21.7083, 0.44 ) }
    dend_44 { pt3dadd( -18.8799, -12.8555, -22.1008, 0.44 ) }
    dend_44 { pt3dadd( -19.393, -13.3687, -22.3604, 0.66 ) }
    dend_44 { pt3dadd( -20.0409, -13.9152, -22.6814, 0.66 ) }
    dend_44 { pt3dadd( -20.4898, -14.2325, -22.91, 0.66 ) }
    dend_44 { pt3dadd( -21.3242, -14.7035, -23.379, 0.51 ) }
    dend_44 { pt3dadd( -21.788, -14.891, -23.6855, 0.51 ) }
    dend_44 { pt3dadd( -22.5397, -15.137, -24.2591, 0.44 ) }
    dend_44 { pt3dadd( -23.3243, -15.3539, -24.9006, 0.95 ) }
    dend_44 { pt3dadd( -24.1636, -15.5252, -25.6172, 0.59 ) }
    dend_44 { pt3dadd( -24.9317, -15.6073, -26.2314, 0.59 ) }
    dend_44 { pt3dadd( -25.7396, -15.6589, -26.8825, 0.59 ) }
    dend_44 { pt3dadd( -26.5136, -15.7075, -27.4826, 0.59 ) }
    dend_44 { pt3dadd( -27.157, -15.7783, -27.9635, 0.73 ) }
    dend_44 { pt3dadd( -27.9876, -15.9244, -28.5982, 0.44 ) }
    dend_44 { pt3dadd( -28.7149, -16.1211, -29.1656, 0.44 ) }
    dend_44 { pt3dadd( -29.5304, -16.4255, -29.8479, 0.44 ) }
    dend_44 { pt3dadd( -30.3672, -16.7772, -30.5787, 0.59 ) }
    dend_44 { pt3dadd( -31.3608, -17.2236, -31.4917, 0.59 ) }
    dend_44 { pt3dadd( -32.0966, -17.6074, -32.2381, 0.59 ) }
    dend_44 { pt3dadd( -32.6094, -17.9019, -32.8244, 0.59 ) }
    dend_44 { pt3dadd( -33.2534, -18.2479, -33.6295, 0.51 ) }
    dend_44 { pt3dadd( -33.8993, -18.4338, -34.3981, 0.51 ) }
    dend_44 { pt3dadd( -34.3654, -18.4107, -34.9029, 0.88 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 24/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -28.0393, 5.10989, -14.3466, 0.66 ) }
    dend_38 { pt3dadd( -28.0022, 5.7482, -14.9449, 0.51 ) }
    dend_38 { pt3dadd( -27.8937, 6.62325, -15.7455, 0.44 ) }
    dend_38 { pt3dadd( -27.7201, 7.50128, -16.5904, 0.73 ) }
    dend_38 { pt3dadd( -27.4812, 8.77309, -17.8564, 0.44 ) }
    dend_38 { pt3dadd( -27.3204, 9.59823, -18.7014, 0.44 ) }
    dend_38 { pt3dadd( -27.2337, 10.0519, -19.1787, 0.44 ) }
    dend_38 { pt3dadd( -27.069, 10.7012, -19.881, 0.44 ) }
    dend_38 { pt3dadd( -26.8682, 11.3806, -20.5938, 0.44 ) }
    dend_38 { pt3dadd( -26.6513, 12.0599, -21.2344, 0.44 ) }
    dend_38 { pt3dadd( -26.4169, 12.7789, -21.8215, 0.44 ) }
    dend_38 { pt3dadd( -26.0732, 13.8275, -22.612, 0.44 ) }
    dend_38 { pt3dadd( -25.5964, 15.368, -23.6686, 0.44 ) }
    dend_38 { pt3dadd( -25.3363, 16.315, -24.2752, 0.44 ) }
    dend_38 { pt3dadd( -25.0984, 17.491, -24.9368, 0.59 ) }
    dend_38 { pt3dadd( -24.9122, 18.7263, -25.6226, 0.59 ) }
    dend_38 { pt3dadd( -24.8435, 19.572, -26.1271, 0.22 ) }
    dend_38 { pt3dadd( -24.8397, 20.057, -26.4329, 0.51 ) }
    dend_38 { pt3dadd( -24.903, 21.0957, -27.0339, 0.15 ) }
    dend_38 { pt3dadd( -25.0629, 22.9637, -27.9952, 0.15 ) }
    dend_38 { pt3dadd( -25.1549, 24.332, -28.6111, 0.29 ) }
    dend_38 { pt3dadd( -25.1443, 25.6342, -29.1118, 0.44 ) }
    dend_38 { pt3dadd( -25.0234, 26.888, -29.4946, 0.59 ) }
    dend_38 { pt3dadd( -24.4892, 29.1839, -29.9535, 0.15 ) }
    dend_38 { pt3dadd( -24.2565, 29.7447, -30.0443, 0.15 ) }
    dend_38 { pt3dadd( -23.7644, 30.61, -30.1645, 0.15 ) }
    dend_38 { pt3dadd( -23.2543, 31.516, -30.2482, 0.15 ) }
    dend_38 { pt3dadd( -22.8789, 32.2776, -30.3053, 0.15 ) }
    dend_38 { pt3dadd( -22.4228, 33.4421, -30.6585, 0.44 ) }
    dend_38 { pt3dadd( -22.2218, 34.7597, -31.4976, 0.22 ) }
    dend_38 { pt3dadd( -22.2565, 35.1667, -31.8401, 0.22 ) }
    dend_38 { pt3dadd( -22.4387, 35.8302, -32.4758, 0.22 ) }
    dend_38 { pt3dadd( -22.7894, 36.6788, -33.3582, 0.22 ) }
    dend_38 { pt3dadd( -23.5757, 38.2593, -34.9959, 0.22 ) }
    dend_38 { pt3dadd( -24.0178, 39.1199, -35.8689, 0.37 ) }
    dend_38 { pt3dadd( -24.3912, 39.9168, -36.6198, 0.37 ) }
    dend_38 { pt3dadd( -24.7124, 40.7931, -37.3799, 0.37 ) }
    dend_38 { pt3dadd( -24.8692, 41.2948, -37.82, 0.37 ) }
    dend_38 { pt3dadd( -25.124, 42.3313, -38.6878, 0.37 ) }
    dend_38 { pt3dadd( -25.2984, 43.4006, -39.3622, 0.37 ) }
    dend_38 { pt3dadd( -25.4086, 44.2621, -39.8281, 0.29 ) }
    dend_38 { pt3dadd( -25.5979, 46.0901, -40.686, 0.29 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 66/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -28.0393, 5.10989, -14.3466, 0.66 ) }
    dend_37 { pt3dadd( -28.7493, 6.08616, -14.5407, 0.37 ) }
    dend_37 { pt3dadd( -30.8233, 8.28055, -15.0736, 0.37 ) }
    dend_37 { pt3dadd( -32.6696, 9.7097, -15.5277, 0.37 ) }
    dend_37 { pt3dadd( -33.3828, 10.1845, -15.6958, 0.37 ) }
    dend_37 { pt3dadd( -34.3094, 10.7432, -15.9032, 0.37 ) }
    dend_37 { pt3dadd( -35.4928, 11.3606, -16.1618, 0.37 ) }
    dend_37 { pt3dadd( -36.9379, 11.9627, -16.4628, 0.37 ) }
    dend_37 { pt3dadd( -38.5869, 12.4949, -16.7104, 0.37 ) }
    dend_37 { pt3dadd( -39.514, 12.7261, -16.7773, 0.37 ) }
    dend_37 { pt3dadd( -40.5877, 12.9765, -16.7834, 0.37 ) }
    dend_37 { pt3dadd( -42.1809, 13.3093, -16.7194, 0.37 ) }
    dend_37 { pt3dadd( -43.5826, 13.5356, -16.604, 0.37 ) }
    dend_37 { pt3dadd( -45.2532, 13.6924, -16.4821, 0.66 ) }
    dend_37 { pt3dadd( -47.5384, 13.7398, -16.446, 0.37 ) }
    dend_37 { pt3dadd( -48.5372, 13.7128, -16.5376, 0.37 ) }
    dend_37 { pt3dadd( -50.0372, 13.628, -16.8232, 0.37 ) }
    dend_37 { pt3dadd( -52.3609, 13.4568, -17.4336, 0.81 ) }
    dend_37 { pt3dadd( -54.5633, 13.2984, -18.1314, 0.44 ) }
    dend_37 { pt3dadd( -56.6697, 13.1659, -18.8811, 0.51 ) }
    dend_37 { pt3dadd( -59.6192, 13.0144, -20.0572, 0.51 ) }
    dend_37 { pt3dadd( -60.9479, 12.9689, -20.5736, 0.44 ) }
    dend_37 { pt3dadd( -62.215, 12.9627, -21.0715, 0.44 ) }
    dend_37 { pt3dadd( -63.6041, 12.9969, -21.5875, 0.44 ) }
    dend_37 { pt3dadd( -65.1145, 13.049, -22.0611, 0.44 ) }
    dend_37 { pt3dadd( -66.9578, 13.0704, -22.5449, 0.66 ) }
    dend_37 { pt3dadd( -69.1463, 13.0022, -23.0083, 0.37 ) }
    dend_37 { pt3dadd( -71.2816, 12.9004, -23.3473, 0.37 ) }
    dend_37 { pt3dadd( -72.3962, 12.8473, -23.4914, 0.37 ) }
    dend_37 { pt3dadd( -73.5442, 12.8028, -23.5926, 0.37 ) }
    dend_37 { pt3dadd( -74.9214, 12.76, -23.6276, 0.37 ) }
    dend_37 { pt3dadd( -76.179, 12.7184, -23.4692, 0.37 ) }
    dend_37 { pt3dadd( -78.0849, 12.6219, -23.0004, 0.37 ) }
    dend_37 { pt3dadd( -79.2751, 12.555, -22.615, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_37 { pt3dadd( -80.5417, 12.493, -22.1806, 0.37 ) }
    dend_37 { pt3dadd( -82.0724, 12.4328, -21.6318, 0.66 ) }
    dend_37 { pt3dadd( -84.7321, 12.3502, -20.6952, 0.66 ) }
    dend_37 { pt3dadd( -86.7564, 12.2304, -20.0548, 0.51 ) }
    dend_37 { pt3dadd( -87.9377, 12.1117, -19.7247, 0.51 ) }
    dend_37 { pt3dadd( -88.9104, 11.974, -19.4826, 0.51 ) }
    dend_37 { pt3dadd( -89.621, 11.8551, -19.3431, 0.51 ) }
    dend_37 { pt3dadd( -90.6271, 11.6712, -19.2476, 0.51 ) }
    dend_37 { pt3dadd( -92.2665, 11.3569, -19.308, 0.29 ) }
    dend_37 { pt3dadd( -93.5509, 11.127, -19.4214, 0.29 ) }
    dend_37 { pt3dadd( -96.024, 10.7393, -19.6527, 0.29 ) }
    dend_37 { pt3dadd( -98.1703, 10.4539, -19.8641, 0.51 ) }
    dend_37 { pt3dadd( -100.562, 10.2091, -20.1139, 0.29 ) }
    dend_37 { pt3dadd( -103.242, 10.0755, -20.3964, 0.29 ) }
    dend_37 { pt3dadd( -104.63, 10.0929, -20.5418, 0.66 ) }
    dend_37 { pt3dadd( -105.881, 10.1701, -20.6627, 0.66 ) }
    dend_37 { pt3dadd( -106.649, 10.2592, -20.7219, 0.66 ) }
    dend_37 { pt3dadd( -107.431, 10.3743, -20.7354, 0.66 ) }
    dend_37 { pt3dadd( -108.899, 10.6481, -20.6625, 0.37 ) }
    dend_37 { pt3dadd( -109.873, 10.8754, -20.5809, 0.37 ) }
    dend_37 { pt3dadd( -111.276, 11.2715, -20.4804, 0.66 ) }
    dend_37 { pt3dadd( -112.949, 11.8751, -20.3918, 0.37 ) }
    dend_37 { pt3dadd( -114.934, 12.6981, -20.2933, 0.66 ) }
    dend_37 { pt3dadd( -116.53, 13.433, -20.2229, 0.44 ) }
    dend_37 { pt3dadd( -118.049, 14.1782, -20.1662, 0.44 ) }
    dend_37 { pt3dadd( -119.605, 14.9734, -20.1225, 0.44 ) }
    dend_37 { pt3dadd( -122.106, 16.2895, -20.0759, 0.44 ) }
    dend_37 { pt3dadd( -123.099, 16.8036, -20.0712, 0.81 ) }
    dend_37 { pt3dadd( -124.451, 17.4133, -20.0877, 0.51 ) }
    dend_37 { pt3dadd( -125.855, 17.8786, -20.0763, 0.51 ) }
    dend_37 { pt3dadd( -127.066, 18.1336, -20.0475, 0.51 ) }
    dend_37 { pt3dadd( -128.553, 18.3395, -19.9696, 0.37 ) }
    dend_37 { pt3dadd( -129.986, 18.4495, -19.8369, 0.37 ) }
    dend_37 { pt3dadd( -131.639, 18.5632, -19.6123, 0.37 ) }
    dend_37 { pt3dadd( -133.307, 18.6581, -19.3308, 0.37 ) }
    dend_37 { pt3dadd( -134.947, 18.7421, -19.0159, 0.37 ) }
    dend_37 { pt3dadd( -137.027, 18.8553, -18.5228, 0.37 ) }
    dend_37 { pt3dadd( -138.832, 18.9496, -17.9811, 0.51 ) }
    dend_37 { pt3dadd( -140.062, 19.0238, -17.5383, 0.29 ) }
    dend_37 { pt3dadd( -140.883, 19.1032, -17.2041, 0.44 ) }
    dend_37 { pt3dadd( -141.841, 19.1943, -16.7662, 0.44 ) }
    dend_37 { pt3dadd( -143.296, 19.2835, -16.0432, 0.44 ) }
    dend_37 { pt3dadd( -144.569, 19.2856, -15.4386, 0.44 ) }
    dend_37 { pt3dadd( -145.256, 19.2795, -15.1554, 0.44 ) }
    dend_37 { pt3dadd( -146.328, 19.276, -14.7928, 0.44 ) }
    dend_37 { pt3dadd( -147.959, 19.2677, -14.3367, 0.37 ) }
    dend_37 { pt3dadd( -149.318, 19.27, -14.0518, 0.37 ) }
    dend_37 { pt3dadd( -150.779, 19.2738, -13.8378, 1.1 ) }
    dend_37 { pt3dadd( -152.964, 19.2945, -13.6029, 0.22 ) }
    dend_37 { pt3dadd( -154.62, 19.3218, -13.4548, 0.22 ) }
    dend_37 { pt3dadd( -156.064, 19.3748, -13.3204, 0.66 ) }
    dend_37 { pt3dadd( -157.831, 19.5182, -13.1195, 0.51 ) }
    dend_37 { pt3dadd( -158.884, 19.6502, -12.9661, 0.73 ) }
    dend_37 { pt3dadd( -160.285, 19.8803, -12.6831, 0.51 ) }
    dend_37 { pt3dadd( -161.461, 20.115, -12.4013, 0.29 ) }
    dend_37 { pt3dadd( -163.42, 20.5758, -11.863, 0.29 ) }
    dend_37 { pt3dadd( -165.031, 21.0406, -11.3896, 0.29 ) }
    dend_37 { pt3dadd( -166.046, 21.3766, -11.089, 0.29 ) }
    dend_37 { pt3dadd( -167.563, 21.9116, -10.6811, 0.81 ) }
    dend_37 { pt3dadd( -168.366, 22.2057, -10.498, 0.59 ) }
    dend_37 { pt3dadd( -169.463, 22.6268, -10.2748, 0.88 ) }
    dend_37 { pt3dadd( -170.321, 22.9615, -10.1654, 0.95 ) }
    dend_37 { pt3dadd( -171.573, 23.4794, -10.1094, 0.51 ) }
    dend_37 { pt3dadd( -172.625, 23.9242, -10.1251, 0.73 ) }
    dend_37 { pt3dadd( -173.314, 24.1874, -10.2251, 0.73 ) }
    // Section: dend_23, id: dend_23, parent: dend_19 (entry count 65/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -19.78, 2.04636, 6.78087, 1.47 ) }
    dend_23 { pt3dadd( -19.567, 1.01684, 7.35177, 1.1 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 67/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -19.78, 2.04636, 6.78087, 1.47 ) }
    dend_20 { pt3dadd( -20.1491, 2.24747, 7.04248, 0.95 ) }
    dend_20 { pt3dadd( -20.6135, 2.55707, 7.40438, 0.95 ) }
    dend_20 { pt3dadd( -21.4329, 3.21183, 8.09326, 0.51 ) }
    dend_20 { pt3dadd( -21.879, 3.65578, 8.48706, 0.66 ) }
    dend_20 { pt3dadd( -22.5236, 4.44288, 9.08578, 1.25 ) }
    dend_20 { pt3dadd( -22.8415, 4.93123, 9.38852, 1.25 ) }
    dend_20 { pt3dadd( -23.1627, 5.63089, 9.8011, 0.81 ) }
    dend_20 { pt3dadd( -23.3167, 6.07769, 10.0464, 0.51 ) }
    dend_20 { pt3dadd( -23.4872, 6.85509, 10.4159, 0.88 ) }
    dend_20 { pt3dadd( -23.5929, 7.58964, 10.71, 1.18 ) }
    dend_20 { pt3dadd( -23.6955, 8.62981, 10.9981, 1.47 ) }
    dend_20 { pt3dadd( -23.8022, 9.8086, 11.2707, 1.69 ) }
    // Section: dend_18, id: dend_18, parent: dend_14 (entry count 80/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -35.0684, -6.02016, 1.73379, 1.25 ) }
    dend_18 { pt3dadd( -35.5276, -6.81569, 1.41579, 0.51 ) }
    dend_18 { pt3dadd( -35.9801, -7.52818, 1.0802, 0.51 ) }
    dend_18 { pt3dadd( -36.2915, -7.97337, 0.8431, 0.51 ) }
    dend_18 { pt3dadd( -37.1616, -9.10643, 0.152364, 0.73 ) }
    dend_18 { pt3dadd( -37.9314, -10.0641, -0.441412, 0.95 ) }
    dend_18 { pt3dadd( -38.5376, -10.7857, -0.900077, 0.59 ) }
    dend_18 { pt3dadd( -39.1151, -11.4261, -1.32819, 0.44 ) }
    dend_18 { pt3dadd( -39.6793, -12.0067, -1.71011, 0.81 ) }
    dend_18 { pt3dadd( -40.541, -12.807, -2.3101, 0.44 ) }
    dend_18 { pt3dadd( -41.3964, -13.5568, -2.94518, 0.44 ) }
    dend_18 { pt3dadd( -41.8739, -14.0327, -3.34752, 0.66 ) }
    dend_18 { pt3dadd( -42.5528, -14.8303, -3.99732, 0.51 ) }
    dend_18 { pt3dadd( -42.9579, -15.3983, -4.39607, 0.59 ) }
    dend_18 { pt3dadd( -43.7415, -16.629, -5.25702, 1.1 ) }
    dend_18 { pt3dadd( -44.1196, -17.2438, -5.71656, 0.81 ) }
    dend_18 { pt3dadd( -44.9836, -18.5689, -6.84543, 0.44 ) }
    dend_18 { pt3dadd( -45.3882, -19.1433, -7.39527, 0.88 ) }
    dend_18 { pt3dadd( -45.9205, -19.7825, -8.05716, 0.37 ) }
    dend_18 { pt3dadd( -46.7655, -20.6252, -8.97925, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_18 { pt3dadd( -47.5273, -21.2428, -9.64268, 0.66 ) }
    dend_18 { pt3dadd( -48.3982, -21.8285, -10.3194, 0.51 ) }
    dend_18 { pt3dadd( -49.0918, -22.225, -10.8133, 0.73 ) }
    dend_18 { pt3dadd( -50.3263, -22.9658, -11.6201, 0.44 ) }
    dend_18 { pt3dadd( -50.9371, -23.3699, -11.9656, 0.44 ) }
    dend_18 { pt3dadd( -51.4399, -23.7668, -12.185, 1.18 ) }
    dend_18 { pt3dadd( -52.0867, -24.3754, -12.4455, 0.81 ) }
    dend_18 { pt3dadd( -52.3144, -24.6249, -12.5492, 1.03 ) }
    dend_18 { pt3dadd( -53.1548, -25.6635, -12.9981, 0.44 ) }
    dend_18 { pt3dadd( -53.9796, -26.7487, -13.5096, 0.51 ) }
    dend_18 { pt3dadd( -54.7019, -27.6954, -13.9678, 0.73 ) }
    dend_18 { pt3dadd( -55.3893, -28.5529, -14.3912, 0.59 ) }
    dend_18 { pt3dadd( -56.5319, -29.9436, -15.0281, 0.51 ) }
    dend_18 { pt3dadd( -57.0627, -30.6134, -15.3023, 0.44 ) }
    dend_18 { pt3dadd( -57.626, -31.3636, -15.5796, 0.44 ) }
    dend_18 { pt3dadd( -58.0429, -31.9558, -15.7625, 0.59 ) }
    dend_18 { pt3dadd( -58.7961, -33.0251, -16.0253, 0.44 ) }
    dend_18 { pt3dadd( -59.6402, -34.22, -16.2551, 0.59 ) }
    dend_18 { pt3dadd( -60.5034, -35.4224, -16.4576, 0.59 ) }
    dend_18 { pt3dadd( -61.5058, -36.7868, -16.6983, 0.59 ) }
    dend_18 { pt3dadd( -62.2137, -37.748, -16.8826, 0.59 ) }
    dend_18 { pt3dadd( -62.6895, -38.3776, -17.0025, 0.88 ) }
    dend_18 { pt3dadd( -63.6334, -39.6226, -17.2121, 0.73 ) }
    dend_18 { pt3dadd( -64.6055, -40.9006, -17.4314, 0.51 ) }
    dend_18 { pt3dadd( -65.1045, -41.5897, -17.543, 0.66 ) }
    dend_18 { pt3dadd( -65.668, -42.4702, -17.6576, 0.51 ) }
    dend_18 { pt3dadd( -66.3131, -43.7089, -17.7796, 0.95 ) }
    dend_18 { pt3dadd( -66.721, -44.7184, -17.8502, 0.95 ) }
    dend_18 { pt3dadd( -67.1675, -46.2448, -17.9059, 0.66 ) }
    dend_18 { pt3dadd( -67.3107, -47.0009, -17.9228, 0.66 ) }
    dend_18 { pt3dadd( -67.393, -47.5036, -17.9479, 0.95 ) }
    dend_18 { pt3dadd( -67.5616, -48.6236, -18.0473, 0.44 ) }
    dend_18 { pt3dadd( -67.6947, -49.5006, -18.1777, 0.37 ) }
    dend_18 { pt3dadd( -67.8116, -50.0975, -18.2884, 0.81 ) }
    dend_18 { pt3dadd( -68.0944, -51.1665, -18.5023, 0.81 ) }
    dend_18 { pt3dadd( -68.3863, -52.0608, -18.711, 1.25 ) }
    dend_18 { pt3dadd( -68.7774, -53.0711, -19.0176, 0.44 ) }
    dend_18 { pt3dadd( -69.1591, -53.8891, -19.3241, 0.44 ) }
    dend_18 { pt3dadd( -69.442, -54.4186, -19.5408, 0.81 ) }
    dend_18 { pt3dadd( -69.9278, -55.2394, -19.8816, 0.37 ) }
    dend_18 { pt3dadd( -70.3709, -55.968, -20.1322, 0.51 ) }
    dend_18 { pt3dadd( -70.9581, -56.9552, -20.3893, 0.88 ) }
    dend_18 { pt3dadd( -71.6933, -58.1755, -20.6359, 0.37 ) }
    dend_18 { pt3dadd( -72.2258, -59.0741, -20.7655, 0.37 ) }
    dend_18 { pt3dadd( -72.6766, -59.8466, -20.8588, 0.37 ) }
    dend_18 { pt3dadd( -73.5023, -61.2821, -21.0044, 0.66 ) }
    dend_18 { pt3dadd( -74.0895, -62.3041, -21.0938, 0.29 ) }
    dend_18 { pt3dadd( -74.428, -62.8884, -21.134, 0.66 ) }
    dend_18 { pt3dadd( -75.1251, -64.0569, -21.2463, 0.37 ) }
    dend_18 { pt3dadd( -75.8405, -65.1581, -21.438, 0.37 ) }
    dend_18 { pt3dadd( -76.3711, -65.8749, -21.6586, 0.81 ) }
    dend_18 { pt3dadd( -76.5455, -66.0824, -21.7652, 0.66 ) }
    dend_18 { pt3dadd( -77.0581, -66.6919, -22.1011, 0.22 ) }
    dend_18 { pt3dadd( -77.4115, -67.1469, -22.3392, 0.51 ) }
    dend_18 { pt3dadd( -78.0273, -68.0533, -22.7548, 0.59 ) }
    dend_18 { pt3dadd( -78.5325, -68.9331, -23.0779, 0.59 ) }
    dend_18 { pt3dadd( -79.2578, -70.3371, -23.474, 0.51 ) }
    dend_18 { pt3dadd( -79.8809, -71.5698, -23.7744, 0.44 ) }
    dend_18 { pt3dadd( -80.3019, -72.3767, -23.9418, 0.95 ) }
    dend_18 { pt3dadd( -80.7481, -73.2144, -24.0965, 0.44 ) }
    dend_18 { pt3dadd( -81.1917, -74.0466, -24.2489, 0.66 ) }
    dend_18 { pt3dadd( -81.9665, -75.5239, -24.5806, 0.44 ) }
    dend_18 { pt3dadd( -82.5112, -76.5411, -24.8874, 0.29 ) }
    dend_18 { pt3dadd( -83.2434, -77.8153, -25.4018, 0.22 ) }
    dend_18 { pt3dadd( -83.6829, -78.5143, -25.7289, 0.22 ) }
    dend_18 { pt3dadd( -84.4077, -79.5728, -26.2921, 0.44 ) }
    dend_18 { pt3dadd( -84.9373, -80.281, -26.6842, 0.66 ) }
    dend_18 { pt3dadd( -85.2929, -80.7432, -26.9449, 0.66 ) }
    dend_18 { pt3dadd( -85.9392, -81.5918, -27.3645, 0.37 ) }
    dend_18 { pt3dadd( -86.3718, -82.1747, -27.6037, 0.37 ) }
    dend_18 { pt3dadd( -86.5057, -82.3773, -27.6626, 0.73 ) }
    dend_18 { pt3dadd( -86.944, -83.2048, -27.8879, 1.1 ) }
    dend_18 { pt3dadd( -87.2533, -83.9492, -28.1136, 0.66 ) }
    dend_18 { pt3dadd( -87.4504, -84.6188, -28.3508, 0.44 ) }
    dend_18 { pt3dadd( -87.6162, -85.404, -28.6679, 0.44 ) }
    dend_18 { pt3dadd( -87.8606, -86.5929, -29.1909, 0.66 ) }
    dend_18 { pt3dadd( -88.1809, -87.979, -29.8612, 0.37 ) }
    dend_18 { pt3dadd( -88.3649, -88.638, -30.2254, 0.37 ) }
    dend_18 { pt3dadd( -88.6294, -89.3373, -30.6595, 0.37 ) }
    dend_18 { pt3dadd( -88.9086, -89.9299, -31.0675, 0.37 ) }
    dend_18 { pt3dadd( -89.3489, -90.6888, -31.6186, 0.59 ) }
    dend_18 { pt3dadd( -89.7268, -91.238, -32.0503, 0.66 ) }
    dend_18 { pt3dadd( -90.1132, -91.7603, -32.4762, 0.51 ) }
    dend_18 { pt3dadd( -90.5208, -92.3103, -32.9612, 0.59 ) }
    dend_18 { pt3dadd( -90.7881, -92.6747, -33.2817, 0.59 ) }
    dend_18 { pt3dadd( -91.2112, -93.27, -33.7978, 0.59 ) }
    dend_18 { pt3dadd( -91.8974, -94.2279, -34.5962, 0.44 ) }
    dend_18 { pt3dadd( -92.3307, -94.8114, -35.0556, 0.59 ) }
    dend_18 { pt3dadd( -93.0946, -95.8388, -35.7584, 0.73 ) }
    dend_18 { pt3dadd( -93.7648, -96.7411, -36.3618, 0.51 ) }
    dend_18 { pt3dadd( -94.0406, -97.1184, -36.6233, 0.51 ) }
    dend_18 { pt3dadd( -94.4898, -97.8305, -37.0915, 0.51 ) }
    dend_18 { pt3dadd( -94.7188, -98.292, -37.3745, 0.51 ) }
    dend_18 { pt3dadd( -95.0332, -99.0944, -37.8647, 0.51 ) }
    dend_18 { pt3dadd( -95.3767, -100.158, -38.5364, 0.51 ) }
    dend_18 { pt3dadd( -95.621, -100.859, -39.0188, 0.44 ) }
    dend_18 { pt3dadd( -96.0125, -101.852, -39.7316, 0.59 ) }
    dend_18 { pt3dadd( -96.3747, -102.692, -40.3325, 0.37 ) }
    dend_18 { pt3dadd( -96.6706, -103.229, -40.71, 0.66 ) }
    dend_18 { pt3dadd( -97.0569, -103.753, -41.0857, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_18 { pt3dadd( -97.8239, -104.582, -41.6221, 0.37 ) }
    dend_18 { pt3dadd( -98.396, -105.093, -41.9409, 0.37 ) }
    dend_18 { pt3dadd( -99.0469, -105.592, -42.237, 0.37 ) }
    dend_18 { pt3dadd( -99.9577, -106.289, -42.6613, 0.51 ) }
    dend_18 { pt3dadd( -100.717, -106.905, -43.0648, 0.44 ) }
    dend_18 { pt3dadd( -101.251, -107.357, -43.3654, 0.44 ) }
    dend_18 { pt3dadd( -101.967, -107.982, -43.7749, 0.59 ) }
    dend_18 { pt3dadd( -102.881, -108.776, -44.2961, 0.37 ) }
    dend_18 { pt3dadd( -103.787, -109.609, -44.862, 0.37 ) }
    dend_18 { pt3dadd( -104.231, -110.059, -45.1516, 0.37 ) }
    dend_18 { pt3dadd( -104.732, -110.599, -45.4696, 0.37 ) }
    dend_18 { pt3dadd( -105.157, -111.069, -45.7279, 0.37 ) }
    dend_18 { pt3dadd( -105.78, -111.775, -46.0829, 0.37 ) }
    dend_18 { pt3dadd( -106.514, -112.654, -46.4441, 0.29 ) }
    dend_18 { pt3dadd( -107.206, -113.529, -46.7288, 0.29 ) }
    dend_18 { pt3dadd( -107.808, -114.379, -46.9841, 0.37 ) }
    dend_18 { pt3dadd( -108.183, -115.014, -47.1731, 0.51 ) }
    dend_18 { pt3dadd( -108.366, -115.368, -47.2839, 0.73 ) }
    dend_18 { pt3dadd( -108.733, -116.11, -47.5431, 0.37 ) }
    dend_18 { pt3dadd( -109.122, -116.829, -47.8406, 0.37 ) }
    dend_18 { pt3dadd( -109.463, -117.402, -48.1407, 0.37 ) }
    dend_18 { pt3dadd( -109.878, -117.983, -48.4931, 0.29 ) }
    dend_18 { pt3dadd( -110.63, -118.696, -49.022, 0.81 ) }
    dend_18 { pt3dadd( -111.467, -119.284, -49.5335, 0.37 ) }
    dend_18 { pt3dadd( -112.426, -119.821, -50.0696, 0.37 ) }
    dend_18 { pt3dadd( -113.147, -120.153, -50.4254, 0.37 ) }
    dend_18 { pt3dadd( -113.742, -120.386, -50.6941, 0.81 ) }
    dend_18 { pt3dadd( -115.409, -120.977, -51.3589, 0.51 ) }
    dend_18 { pt3dadd( -116.134, -121.216, -51.6133, 0.51 ) }
    dend_18 { pt3dadd( -117.224, -121.566, -51.9755, 0.44 ) }
    dend_18 { pt3dadd( -117.861, -121.777, -52.1711, 0.44 ) }
    dend_18 { pt3dadd( -118.562, -122.018, -52.3765, 0.15 ) }
    dend_18 { pt3dadd( -119.435, -122.343, -52.6323, 0.15 ) }
    dend_18 { pt3dadd( -119.881, -122.522, -52.7573, 0.51 ) }
    dend_18 { pt3dadd( -120.783, -122.888, -52.9796, 0.44 ) }
    dend_18 { pt3dadd( -121.564, -123.204, -53.1424, 0.44 ) }
    dend_18 { pt3dadd( -122.259, -123.481, -53.2931, 0.73 ) }
    dend_18 { pt3dadd( -122.738, -123.663, -53.4074, 0.73 ) }
    dend_18 { pt3dadd( -123.297, -123.878, -53.5426, 0.37 ) }
    dend_18 { pt3dadd( -123.976, -124.18, -53.7063, 0.37 ) }
    dend_18 { pt3dadd( -124.709, -124.563, -53.8754, 0.37 ) }
    dend_18 { pt3dadd( -125.687, -125.139, -54.1108, 0.37 ) }
    dend_18 { pt3dadd( -126.654, -125.748, -54.3114, 0.66 ) }
    dend_18 { pt3dadd( -127.421, -126.263, -54.474, 0.73 ) }
    dend_18 { pt3dadd( -128.247, -126.828, -54.6692, 0.37 ) }
    dend_18 { pt3dadd( -128.8, -127.212, -54.8319, 0.37 ) }
    dend_18 { pt3dadd( -129.325, -127.582, -54.9888, 0.66 ) }
    dend_18 { pt3dadd( -130.31, -128.274, -55.3011, 0.44 ) }
    dend_18 { pt3dadd( -131.183, -128.861, -55.5879, 0.51 ) }
    dend_18 { pt3dadd( -132.304, -129.561, -55.9712, 0.51 ) }
    dend_18 { pt3dadd( -133.327, -130.164, -56.3451, 1.03 ) }
    dend_18 { pt3dadd( -134.556, -130.868, -56.8037, 0.37 ) }
    dend_18 { pt3dadd( -135.501, -131.424, -57.1806, 0.37 ) }
    dend_18 { pt3dadd( -136.072, -131.753, -57.4103, 1.4 ) }
    dend_18 { pt3dadd( -136.561, -132.025, -57.5911, 1.18 ) }
    dend_18 { pt3dadd( -137.669, -132.645, -57.9757, 0.29 ) }
    dend_18 { pt3dadd( -138.738, -133.234, -58.3273, 0.15 ) }
    dend_18 { pt3dadd( -139.66, -133.737, -58.6384, 0.15 ) }
    dend_18 { pt3dadd( -140.429, -134.15, -58.8709, 0.81 ) }
    dend_18 { pt3dadd( -140.55, -134.212, -58.909, 0.81 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 60/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -35.0684, -6.02016, 1.73379, 1.25 ) }
    dend_15 { pt3dadd( -36.1557, -5.35494, 1.85982, 0.66 ) }
    dend_15 { pt3dadd( -37.0364, -4.74386, 2.04822, 0.44 ) }
    dend_15 { pt3dadd( -37.7705, -4.15105, 2.18878, 0.44 ) }
    dend_15 { pt3dadd( -38.1237, -3.84456, 2.25291, 0.81 ) }
    dend_15 { pt3dadd( -39.1062, -2.905, 2.43305, 1.1 ) }
    dend_15 { pt3dadd( -40.0719, -1.91723, 2.60229, 1.25 ) }
    dend_15 { pt3dadd( -40.8911, -0.996094, 2.77586, 1.25 ) }
    dend_15 { pt3dadd( -41.9487, 0.280237, 3.00308, 0.88 ) }
    dend_15 { pt3dadd( -42.6373, 1.13445, 3.13495, 0.51 ) }
    dend_15 { pt3dadd( -43.4726, 2.1125, 3.26984, 0.44 ) }
    dend_15 { pt3dadd( -44.0249, 2.69311, 3.32554, 0.44 ) }
    dend_15 { pt3dadd( -44.4733, 3.06006, 3.35509, 0.44 ) }
    dend_15 { pt3dadd( -45.1267, 3.3696, 3.41927, 0.44 ) }
    dend_15 { pt3dadd( -45.7365, 3.47739, 3.49165, 0.44 ) }
    dend_15 { pt3dadd( -46.8228, 3.56346, 3.60451, 1.03 ) }
    dend_15 { pt3dadd( -48.1915, 3.64873, 3.72714, 0.29 ) }
    dend_15 { pt3dadd( -48.6658, 3.73031, 3.77354, 0.29 ) }
    dend_15 { pt3dadd( -49.3301, 4.03808, 3.81206, 0.59 ) }
    dend_15 { pt3dadd( -49.7521, 4.54615, 3.77216, 0.88 ) }
    dend_15 { pt3dadd( -50.3353, 5.72319, 3.60381, 0.51 ) }
    dend_15 { pt3dadd( -50.6305, 6.52404, 3.46544, 0.51 ) }
    dend_15 { pt3dadd( -50.9858, 7.70056, 3.25809, 0.51 ) }
    dend_15 { pt3dadd( -51.2193, 8.65249, 3.08467, 0.59 ) }
    dend_15 { pt3dadd( -51.4465, 9.86312, 2.85431, 0.59 ) }
    dend_15 { pt3dadd( -51.5749, 10.7092, 2.6859, 0.59 ) }
    dend_15 { pt3dadd( -51.61, 10.9813, 2.60995, 0.59 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 87/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 15.8656, 23.2437, 1.76394, 0.81 ) }
    dend_10 { pt3dadd( 16.1451, 23.9849, 1.04944, 0.66 ) }
    dend_10 { pt3dadd( 16.4816, 24.6088, 0.489872, 0.44 ) }
    dend_10 { pt3dadd( 16.6796, 24.9049, 0.253736, 0.51 ) }
    dend_10 { pt3dadd( 17.2744, 25.69, -0.292847, 0.73 ) }
    dend_10 { pt3dadd( 18.0656, 26.6527, -0.872796, 0.44 ) }
    dend_10 { pt3dadd( 18.6022, 27.2897, -1.20599, 0.51 ) }
    dend_10 { pt3dadd( 19.3829, 28.1394, -1.50373, 0.29 ) }
    dend_10 { pt3dadd( 19.9552, 28.7552, -1.60902, 0.37 ) }
    dend_10 { pt3dadd( 20.4118, 29.2616, -1.61839, 0.37 ) }
    dend_10 { pt3dadd( 21.2636, 30.2125, -1.47249, 0.51 ) }
    dend_10 { pt3dadd( 21.9295, 30.9115, -1.37701, 0.66 ) }
    dend_10 { pt3dadd( 22.6942, 31.6999, -1.33643, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_10 { pt3dadd( 23.3672, 32.3901, -1.33291, 0.37 ) }
    dend_10 { pt3dadd( 24.0536, 33.0586, -1.35311, 0.37 ) }
    dend_10 { pt3dadd( 24.8984, 33.8125, -1.41353, 0.37 ) }
    dend_10 { pt3dadd( 25.7304, 34.4568, -1.52375, 0.44 ) }
    dend_10 { pt3dadd( 26.252, 34.782, -1.64174, 0.66 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 5/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 15.8656, 23.2437, 1.76394, 0.81 ) }
    dend_7 { pt3dadd( 15.121, 21.7223, 2.56479, 0.81 ) }
    dend_7 { pt3dadd( 14.441, 19.2573, 3.97071, 0.66 ) }
    dend_7 { pt3dadd( 14.3261, 17.6566, 5.08249, 0.66 ) }
    dend_7 { pt3dadd( 14.3356, 16.5025, 5.99079, 0.66 ) }
    dend_7 { pt3dadd( 14.3695, 15.7001, 6.69959, 0.66 ) }
    dend_7 { pt3dadd( 14.5486, 14.7434, 7.6164, 0.66 ) }
    dend_7 { pt3dadd( 15.0165, 13.8699, 8.80417, 0.66 ) }
    dend_7 { pt3dadd( 15.4087, 13.4253, 9.64483, 0.66 ) }
    dend_7 { pt3dadd( 15.6116, 13.2328, 10.1476, 0.66 ) }
    dend_7 { pt3dadd( 15.5781, 12.8101, 10.8795, 0.66 ) }
    dend_7 { pt3dadd( 15.1631, 12.1679, 11.1553, 0.66 ) }
    dend_7 { pt3dadd( 14.7042, 11.2975, 11.2973, 0.66 ) }
    dend_7 { pt3dadd( 14.3206, 10.3786, 11.365, 0.66 ) }
    dend_7 { pt3dadd( 13.8997, 9.12527, 11.41, 0.66 ) }
    dend_7 { pt3dadd( 13.6333, 8.02546, 11.4184, 0.88 ) }
    dend_7 { pt3dadd( 13.3159, 5.62016, 11.3874, 0.59 ) }
    dend_7 { pt3dadd( 13.3066, 3.66072, 11.3497, 0.59 ) }
    dend_7 { pt3dadd( 13.444, 2.40163, 11.3265, 0.44 ) }
    dend_7 { pt3dadd( 13.6395, 1.56401, 11.3256, 1.03 ) }
    dend_7 { pt3dadd( 13.8992, 0.840233, 11.3733, 1.1 ) }
    dend_7 { pt3dadd( 14.4455, -0.351514, 11.6483, 0.44 ) }
    dend_7 { pt3dadd( 15.063, -1.55153, 12.2526, 0.66 ) }
    dend_7 { pt3dadd( 15.1276, -1.71818, 12.3883, 0.66 ) }
    dend_7 { pt3dadd( 15.2308, -2.10879, 12.7521, 0.66 ) }
    dend_7 { pt3dadd( 15.3898, -2.86583, 13.4867, 0.66 ) }
    dend_7 { pt3dadd( 15.6416, -4.18311, 14.7205, 0.88 ) }
    dend_7 { pt3dadd( 15.7842, -4.9046, 15.3416, 0.66 ) }
    dend_7 { pt3dadd( 15.9734, -5.75398, 15.9269, 0.66 ) }
    dend_7 { pt3dadd( 16.2019, -6.83587, 16.5356, 0.66 ) }
    dend_7 { pt3dadd( 16.421, -7.9157, 17.0502, 0.66 ) }
    dend_7 { pt3dadd( 16.6222, -8.97631, 17.4738, 0.44 ) }
    dend_7 { pt3dadd( 16.7585, -9.73306, 17.7535, 0.44 ) }
    dend_7 { pt3dadd( 17.0298, -11.245, 18.3884, 0.44 ) }
    dend_7 { pt3dadd( 17.2569, -12.6978, 19.0588, 0.44 ) }
    dend_7 { pt3dadd( 17.3691, -13.4902, 19.449, 0.66 ) }
    dend_7 { pt3dadd( 17.4665, -14.5603, 19.963, 0.59 ) }
    dend_7 { pt3dadd( 17.4959, -15.6626, 20.3757, 0.59 ) }
    dend_7 { pt3dadd( 17.5514, -16.6354, 20.6887, 0.59 ) }
    dend_7 { pt3dadd( 17.6479, -17.3724, 20.8908, 0.59 ) }
    dend_7 { pt3dadd( 17.8267, -18.3164, 21.0669, 0.44 ) }
    dend_7 { pt3dadd( 18.2904, -20.4066, 21.3933, 0.44 ) }
    dend_7 { pt3dadd( 18.9032, -22.8368, 21.754, 0.44 ) }
    dend_7 { pt3dadd( 19.2373, -24.1535, 21.9621, 0.44 ) }
    dend_7 { pt3dadd( 19.4375, -25.0028, 22.1411, 0.51 ) }
    dend_7 { pt3dadd( 19.7128, -26.2671, 22.4877, 0.51 ) }
    dend_7 { pt3dadd( 20.0041, -27.3614, 22.8496, 0.44 ) }
    dend_7 { pt3dadd( 20.4389, -28.5738, 23.3565, 0.59 ) }
    dend_7 { pt3dadd( 20.7016, -29.2223, 23.6999, 0.44 ) }
    dend_7 { pt3dadd( 21.038, -30.3403, 24.2431, 0.44 ) }
    dend_7 { pt3dadd( 21.3603, -31.8425, 24.9951, 0.37 ) }
    dend_7 { pt3dadd( 19.7027, -43.5989, 30.4991, 0.37 ) }
    dend_7 { pt3dadd( 20.6165, -54.3801, 37.7815, 0.37 ) }
    dend_7 { pt3dadd( 19.4343, -64.8964, 45.3856, 0.37 ) }
    dend_7 { pt3dadd( 19.8931, -73.4827, 55.0868, 0.37 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 60/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 12.7317, 20.5066, 1.68441, 0.88 ) }
    dend_5 { pt3dadd( 12.5189, 20.8186, 1.48199, 0.73 ) }
    dend_5 { pt3dadd( 11.3706, 21.8588, 0.873181, 0.51 ) }
    dend_5 { pt3dadd( 10.7285, 22.2022, 0.634994, 0.51 ) }
    dend_5 { pt3dadd( 9.91086, 22.5845, 0.343904, 0.37 ) }
    dend_5 { pt3dadd( 8.90065, 23.0196, -0.0512516, 0.44 ) }
    dend_5 { pt3dadd( 7.55329, 23.4893, -0.551072, 0.44 ) }
    dend_5 { pt3dadd( 6.04187, 23.8984, -1.09389, 0.44 ) }
    dend_5 { pt3dadd( 4.27306, 24.2035, -1.77864, 0.44 ) }
    dend_5 { pt3dadd( 3.89432, 24.2358, -1.93478, 0.66 ) }
    dend_5 { pt3dadd( 2.94879, 24.2609, -2.35646, 0.88 ) }
    dend_5 { pt3dadd( 2.17168, 24.2581, -2.74721, 0.59 ) }
    dend_5 { pt3dadd( 1.5567, 24.256, -3.10629, 0.59 ) }
    dend_5 { pt3dadd( 0.392155, 24.2969, -3.8538, 0.29 ) }
    dend_5 { pt3dadd( 0.24194, 24.3064, -3.96204, 0.29 ) }
    dend_5 { pt3dadd( -0.27112, 24.3318, -4.31548, 0.29 ) }
    dend_5 { pt3dadd( -1.02825, 24.3999, -4.80726, 0.44 ) }
    dend_5 { pt3dadd( -1.68433, 24.5303, -5.27101, 0.66 ) }
    dend_5 { pt3dadd( -2.01249, 24.6647, -5.52276, 0.88 ) }
    dend_5 { pt3dadd( -2.83407, 25.2271, -6.20561, 0.37 ) }
    dend_5 { pt3dadd( -3.15313, 25.4715, -6.47221, 0.37 ) }
    dend_5 { pt3dadd( -3.45509, 25.683, -6.73126, 0.37 ) }
    dend_5 { pt3dadd( -3.94531, 25.9766, -7.11665, 0.37 ) }
    dend_5 { pt3dadd( -4.73023, 26.4048, -7.65661, 0.37 ) }
    dend_5 { pt3dadd( -5.42321, 26.7569, -8.08035, 0.37 ) }
    dend_5 { pt3dadd( -6.0408, 27.0645, -8.44953, 0.37 ) }
    dend_5 { pt3dadd( -6.77781, 27.4115, -8.91332, 0.37 ) }
    dend_5 { pt3dadd( -7.73384, 27.7833, -9.55428, 0.29 ) }
    dend_5 { pt3dadd( -8.14837, 27.9108, -9.84761, 0.29 ) }
    dend_5 { pt3dadd( -8.78288, 28.0501, -10.3342, 0.29 ) }
    dend_5 { pt3dadd( -9.34245, 28.1247, -10.8265, 0.29 ) }
    dend_5 { pt3dadd( -9.72791, 28.1567, -11.1788, 0.29 ) }
    dend_5 { pt3dadd( -10.1256, 28.1889, -11.4949, 0.29 ) }
    dend_5 { pt3dadd( -10.513, 28.2104, -11.7177, 0.29 ) }
    dend_5 { pt3dadd( -11.0378, 28.2277, -11.898, 0.29 ) }
    dend_5 { pt3dadd( -11.8705, 28.2653, -12.0287, 0.29 ) }
    dend_5 { pt3dadd( -13.0443, 28.3596, -12.1104, 1.03 ) }
    dend_5 { pt3dadd( -14.2903, 28.4812, -12.1506, 0.22 ) }
    dend_5 { pt3dadd( -15.6089, 28.6179, -12.1932, 0.22 ) }
    dend_5 { pt3dadd( -16.3858, 28.6861, -12.2314, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_5 { pt3dadd( -17.1936, 28.7423, -12.317, 0.37 ) }
    dend_5 { pt3dadd( -17.8388, 28.7579, -12.4664, 0.37 ) }
    dend_5 { pt3dadd( -18.3251, 28.7072, -12.7051, 0.66 ) }
    dend_5 { pt3dadd( -19.0776, 28.5211, -13.3349, 0.51 ) }
    dend_5 { pt3dadd( -19.6303, 28.354, -13.9595, 0.95 ) }
    dend_5 { pt3dadd( -20.2318, 28.1764, -14.7165, 0.44 ) }
    dend_5 { pt3dadd( -20.5909, 28.0931, -15.1818, 0.44 ) }
    dend_5 { pt3dadd( -20.9816, 28.0621, -15.6363, 0.44 ) }
    dend_5 { pt3dadd( -21.2622, 28.1002, -15.904, 0.73 ) }
    dend_5 { pt3dadd( -21.8745, 28.2767, -16.3523, 0.81 ) }
    dend_5 { pt3dadd( -22.4132, 28.4686, -16.6885, 0.51 ) }
    dend_5 { pt3dadd( -22.8401, 28.6389, -16.948, 0.51 ) }
    dend_5 { pt3dadd( -23.3428, 28.8404, -17.2915, 0.81 ) }
    dend_5 { pt3dadd( -23.8634, 29.0419, -17.736, 0.51 ) }
    dend_5 { pt3dadd( -24.2792, 29.2126, -18.1974, 0.51 ) }
    dend_5 { pt3dadd( -24.5978, 29.3872, -18.6592, 0.51 ) }
    dend_5 { pt3dadd( -25.0383, 29.7388, -19.4741, 0.51 ) }
    dend_5 { pt3dadd( -25.3458, 30.1025, -20.1115, 0.51 ) }
    dend_5 { pt3dadd( -25.5315, 30.4348, -20.5423, 0.51 ) }
    dend_5 { pt3dadd( -25.6844, 30.7985, -20.9402, 0.37 ) }
    dend_5 { pt3dadd( -25.8742, 31.2809, -21.4411, 0.37 ) }
    dend_5 { pt3dadd( -26.1246, 31.8628, -22.0368, 0.37 ) }
    dend_5 { pt3dadd( -26.412, 32.4802, -22.6616, 0.66 ) }
    dend_5 { pt3dadd( -26.6779, 33.096, -23.3064, 0.29 ) }
    dend_5 { pt3dadd( -26.8576, 33.6637, -23.9507, 0.73 ) }
    dend_5 { pt3dadd( -26.946, 34.2046, -24.6485, 0.73 ) }
    dend_5 { pt3dadd( -26.9414, 34.5512, -25.1848, 0.73 ) }
    dend_5 { pt3dadd( -26.8971, 34.7853, -25.6101, 0.59 ) }
    dend_5 { pt3dadd( -26.7971, 35.0154, -26.1516, 0.59 ) }
    dend_5 { pt3dadd( -26.6553, 35.1853, -26.6995, 0.59 ) }
    dend_5 { pt3dadd( -26.4897, 35.2851, -27.0421, 0.59 ) }
    dend_5 { pt3dadd( -26.1553, 35.3547, -27.374, 0.59 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 32/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 12.7317, 20.5066, 1.68441, 0.88 ) }
    dend_2 { pt3dadd( 13.1796, 21.96, 1.47323, 0.73 ) }
    dend_2 { pt3dadd( 13.6082, 23.3513, 1.27109, 0.73 ) }
    dend_2 { pt3dadd( 13.8287, 24.0666, 1.16715, 0.73 ) }
    dend_2 { pt3dadd( 14.002, 24.6292, 1.08541, 0.88 ) }
    dend_2 { pt3dadd( 14.3272, 25.6847, 0.932051, 0.44 ) }
    // Section: apic_26, id: apic_26, parent: apic_24 (entry count 38/100)
    apic_26 { pt3dclear() }
    apic_26 { pt3dadd( 87.5992, -80.8019, 29.463, 0.37 ) }
    apic_26 { pt3dadd( 95.5627, -83.3863, 33.2123, 0.37 ) }
    apic_26 { pt3dadd( 103.332, -85.778, 37.46, 0.37 ) }
    apic_26 { pt3dadd( 110.839, -89.3495, 41.3807, 0.37 ) }
    apic_26 { pt3dadd( 118.546, -91.2939, 45.9471, 0.37 ) }
    apic_26 { pt3dadd( 127.116, -93.1082, 48.6311, 0.37 ) }
    apic_26 { pt3dadd( 135.769, -93.0831, 51.6174, 0.37 ) }
    // Section: apic_25, id: apic_25, parent: apic_24 (entry count 45/100)
    apic_25 { pt3dclear() }
    apic_25 { pt3dadd( 87.5992, -80.8019, 29.463, 0.37 ) }
    apic_25 { pt3dadd( 99.9169, -85.5038, 31.6055, 0.37 ) }
    apic_25 { pt3dadd( 112.446, -89.1882, 34.3464, 0.37 ) }
    apic_25 { pt3dadd( 125.509, -90.8087, 36.4099, 0.37 ) }
    apic_25 { pt3dadd( 138.802, -90.0028, 36.8374, 0.37 ) }
    apic_25 { pt3dadd( 151.625, -91.3065, 40.2118, 0.37 ) }
    apic_25 { pt3dadd( 163.975, -94.5491, 44.0733, 0.37 ) }
    // Section: apic_20, id: apic_20, parent: apic_2 (entry count 52/100)
    apic_20 { pt3dclear() }
    apic_20 { pt3dadd( -36.5631, -93.5431, -25.4952, 1.47 ) }
    apic_20 { pt3dadd( -37.5909, -93.6805, -25.3671, 0.81 ) }
    apic_20 { pt3dadd( -38.5848, -93.8334, -25.2078, 0.66 ) }
    apic_20 { pt3dadd( -39.3106, -93.9708, -25.0759, 0.59 ) }
    apic_20 { pt3dadd( -40.3727, -94.176, -24.8255, 0.59 ) }
    apic_20 { pt3dadd( -41.4129, -94.3332, -24.5467, 0.73 ) }
    apic_20 { pt3dadd( -42.0204, -94.3805, -24.3667, 0.37 ) }
    apic_20 { pt3dadd( -42.6506, -94.3653, -24.1458, 0.37 ) }
    apic_20 { pt3dadd( -43.4155, -94.2845, -23.8565, 0.37 ) }
    apic_20 { pt3dadd( -44.4452, -94.1038, -23.4919, 1.18 ) }
    apic_20 { pt3dadd( -45.5022, -93.8747, -23.1639, 0.66 ) }
    apic_20 { pt3dadd( -46.6577, -93.6221, -22.8671, 0.51 ) }
    apic_20 { pt3dadd( -47.212, -93.4988, -22.7463, 0.51 ) }
    apic_20 { pt3dadd( -47.7758, -93.383, -22.6518, 0.44 ) }
    apic_20 { pt3dadd( -48.3104, -93.3043, -22.599, 0.44 ) }
    apic_20 { pt3dadd( -49.032, -93.2594, -22.5744, 0.44 ) }
    apic_20 { pt3dadd( -49.6757, -93.2428, -22.5594, 0.44 ) }
    apic_20 { pt3dadd( -50.104, -93.2147, -22.5518, 0.44 ) }
    apic_20 { pt3dadd( -50.6859, -93.1195, -22.5328, 0.44 ) }
    apic_20 { pt3dadd( -51.2742, -92.9702, -22.5046, 0.44 ) }
    apic_20 { pt3dadd( -52.7331, -92.512, -22.4271, 0.44 ) }
    apic_20 { pt3dadd( -54.2277, -91.9935, -22.3474, 0.59 ) }
    apic_20 { pt3dadd( -55.4261, -91.5842, -22.2839, 0.59 ) }
    apic_20 { pt3dadd( -57.2847, -91.0519, -22.1802, 0.59 ) }
    apic_20 { pt3dadd( -59.2029, -90.6345, -22.0852, 0.59 ) }
    apic_20 { pt3dadd( -60.4983, -90.4543, -22.0595, 0.51 ) }
    apic_20 { pt3dadd( -61.2736, -90.418, -22.0729, 0.51 ) }
    apic_20 { pt3dadd( -62.41, -90.4686, -22.1291, 0.51 ) }
    apic_20 { pt3dadd( -64.461, -90.7655, -22.3244, 0.51 ) }
    apic_20 { pt3dadd( -65.6159, -91.0705, -22.5205, 0.51 ) }
    apic_20 { pt3dadd( -66.6868, -91.4513, -22.8192, 0.51 ) }
    apic_20 { pt3dadd( -67.1638, -91.6192, -23.0009, 0.51 ) }
    apic_20 { pt3dadd( -67.4686, -91.6927, -23.1442, 0.51 ) }
    apic_20 { pt3dadd( -67.8517, -91.704, -23.3515, 0.51 ) }
    apic_20 { pt3dadd( -68.2807, -91.6186, -23.5494, 0.51 ) }
    apic_20 { pt3dadd( -69.4421, -91.4243, -23.865, 0.51 ) }
    apic_20 { pt3dadd( -70.2285, -91.404, -23.9986, 0.51 ) }
    apic_20 { pt3dadd( -70.9028, -91.4521, -24.0795, 0.37 ) }
    apic_20 { pt3dadd( -71.728, -91.5662, -24.1531, 0.37 ) }
    apic_20 { pt3dadd( -72.5725, -91.7062, -24.2034, 0.51 ) }
    apic_20 { pt3dadd( -73.8074, -91.9536, -24.2495, 0.51 ) }
    apic_20 { pt3dadd( -75.0386, -92.2618, -24.2761, 0.44 ) }
    apic_20 { pt3dadd( -75.8202, -92.5046, -24.2937, 0.44 ) }
    apic_20 { pt3dadd( -76.201, -92.6194, -24.3302, 0.44 ) }
    apic_20 { pt3dadd( -76.8731, -92.7867, -24.4487, 0.37 ) }
    apic_20 { pt3dadd( -77.3025, -92.8707, -24.5603, 0.37 ) }
    apic_20 { pt3dadd( -77.8236, -92.942, -24.719, 0.37 ) }
    apic_20 { pt3dadd( -78.6669, -93.0717, -25.1268, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    apic_20 { pt3dadd( -79.5849, -93.2673, -25.8263, 0.51 ) }
    apic_20 { pt3dadd( -80.1215, -93.4236, -26.3308, 0.51 ) }
    apic_20 { pt3dadd( -80.46, -93.5489, -26.6522, 0.51 ) }
    apic_20 { pt3dadd( -80.8789, -93.7224, -27.0294, 0.51 ) }
    apic_20 { pt3dadd( -81.7066, -94.072, -27.6565, 0.51 ) }
    apic_20 { pt3dadd( -82.4812, -94.3944, -28.1574, 0.51 ) }
    apic_20 { pt3dadd( -83.0295, -94.6014, -28.4412, 0.51 ) }
    apic_20 { pt3dadd( -84.3268, -94.9745, -29.0771, 0.37 ) }
    apic_20 { pt3dadd( -85.2618, -95.1748, -29.479, 0.37 ) }
    apic_20 { pt3dadd( -86.4411, -95.3688, -29.9101, 0.37 ) }
    apic_20 { pt3dadd( -87.3628, -95.5028, -30.185, 0.44 ) }
    apic_20 { pt3dadd( -88.7961, -95.68, -30.581, 0.51 ) }
    apic_20 { pt3dadd( -90.1889, -95.7786, -30.9397, 0.88 ) }
    apic_20 { pt3dadd( -91.205, -95.799, -31.1852, 0.44 ) }
    apic_20 { pt3dadd( -91.9445, -95.7941, -31.3459, 0.44 ) }
    apic_20 { pt3dadd( -93.3915, -95.7716, -31.576, 0.44 ) }
    apic_20 { pt3dadd( -94.1897, -95.7619, -31.6349, 0.44 ) }
    apic_20 { pt3dadd( -95.187, -95.7542, -31.6308, 0.51 ) }
    apic_20 { pt3dadd( -95.9684, -95.7612, -31.6079, 0.51 ) }
    apic_20 { pt3dadd( -96.5533, -95.7924, -31.6035, 0.51 ) }
    apic_20 { pt3dadd( -97.5695, -95.8912, -31.5969, 1.1 ) }
    apic_20 { pt3dadd( -98.5868, -96.0256, -31.58, 1.1 ) }
    apic_20 { pt3dadd( -99.8699, -96.263, -31.5457, 0.44 ) }
    apic_20 { pt3dadd( -101.637, -96.6984, -31.5047, 0.44 ) }
    apic_20 { pt3dadd( -103.997, -97.4164, -31.4508, 0.51 ) }
    apic_20 { pt3dadd( -105.039, -97.7802, -31.4244, 0.37 ) }
    apic_20 { pt3dadd( -106.919, -98.5185, -31.3619, 0.37 ) }
    apic_20 { pt3dadd( -108.144, -99.0522, -31.2972, 0.37 ) }
    apic_20 { pt3dadd( -109.369, -99.6101, -31.2052, 0.37 ) }
    apic_20 { pt3dadd( -111.065, -100.374, -31.027, 0.37 ) }
    apic_20 { pt3dadd( -112.538, -101.033, -30.832, 0.37 ) }
    apic_20 { pt3dadd( -114.346, -101.854, -30.5655, 0.29 ) }
    apic_20 { pt3dadd( -115.193, -102.261, -30.4229, 0.22 ) }
    apic_20 { pt3dadd( -116.073, -102.682, -30.26, 0.22 ) }
    apic_20 { pt3dadd( -117.139, -103.158, -30.052, 0.22 ) }
    apic_20 { pt3dadd( -118.487, -103.719, -29.7711, 0.37 ) }
    apic_20 { pt3dadd( -120.116, -104.366, -29.4677, 0.37 ) }
    apic_20 { pt3dadd( -121.986, -105.091, -29.2241, 0.37 ) }
    apic_20 { pt3dadd( -122.654, -105.334, -29.199, 0.37 ) }
    apic_20 { pt3dadd( -123.804, -105.732, -29.2754, 0.37 ) }
    apic_20 { pt3dadd( -124.825, -106.032, -29.4662, 0.37 ) }
    apic_20 { pt3dadd( -126.081, -106.323, -29.8229, 0.44 ) }
    apic_20 { pt3dadd( -127.373, -106.54, -30.2747, 0.44 ) }
    apic_20 { pt3dadd( -128.914, -106.703, -30.8877, 0.44 ) }
    apic_20 { pt3dadd( -130.048, -106.788, -31.352, 0.44 ) }
    apic_20 { pt3dadd( -131.327, -106.828, -31.8575, 0.44 ) }
    apic_20 { pt3dadd( -132.26, -106.793, -32.2315, 0.44 ) }
    apic_20 { pt3dadd( -132.867, -106.735, -32.4399, 0.44 ) }
    apic_20 { pt3dadd( -133.503, -106.656, -32.6235, 0.44 ) }
    apic_20 { pt3dadd( -134.185, -106.579, -32.8086, 0.44 ) }
    apic_20 { pt3dadd( -135.469, -106.466, -33.2205, 0.44 ) }
    apic_20 { pt3dadd( -136.897, -106.392, -33.7712, 0.44 ) }
    apic_20 { pt3dadd( -137.999, -106.383, -34.2486, 0.29 ) }
    apic_20 { pt3dadd( -139.125, -106.471, -34.7832, 0.37 ) }
    apic_20 { pt3dadd( -140.282, -106.67, -35.3737, 0.88 ) }
    apic_20 { pt3dadd( -141.483, -106.989, -36.0029, 0.44 ) }
    apic_20 { pt3dadd( -142.377, -107.327, -36.477, 0.44 ) }
    apic_20 { pt3dadd( -142.901, -107.563, -36.7454, 0.44 ) }
    apic_20 { pt3dadd( -143.776, -108.015, -37.1989, 0.44 ) }
    apic_20 { pt3dadd( -144.622, -108.503, -37.6121, 0.95 ) }
    apic_20 { pt3dadd( -145.364, -108.969, -37.9402, 0.66 ) }
    apic_20 { pt3dadd( -146.572, -109.758, -38.4091, 0.37 ) }
    apic_20 { pt3dadd( -147.611, -110.417, -38.767, 0.37 ) }
    apic_20 { pt3dadd( -148.452, -110.892, -39.0382, 1.03 ) }
    apic_20 { pt3dadd( -149.682, -111.482, -39.3971, 0.37 ) }
    apic_20 { pt3dadd( -150.476, -111.797, -39.6119, 0.37 ) }
    apic_20 { pt3dadd( -151.116, -112.008, -39.7852, 0.37 ) }
    apic_20 { pt3dadd( -151.764, -112.182, -39.9641, 0.37 ) }
    apic_20 { pt3dadd( -152.483, -112.338, -40.1569, 0.37 ) }
    apic_20 { pt3dadd( -153.534, -112.528, -40.469, 0.88 ) }
    apic_20 { pt3dadd( -154.974, -112.77, -40.9684, 0.37 ) }
    apic_20 { pt3dadd( -156.262, -113.009, -41.511, 0.37 ) }
    apic_20 { pt3dadd( -157.458, -113.248, -42.0884, 0.37 ) }
    apic_20 { pt3dadd( -158.187, -113.424, -42.4861, 0.51 ) }
    apic_20 { pt3dadd( -158.606, -113.541, -42.7211, 0.51 ) }
    apic_20 { pt3dadd( -159.288, -113.717, -43.0737, 0.51 ) }
    apic_20 { pt3dadd( -160.345, -113.914, -43.5611, 0.51 ) }
    apic_20 { pt3dadd( -161.16, -114.001, -43.8828, 0.51 ) }
    apic_20 { pt3dadd( -162.086, -114.019, -44.1913, 0.51 ) }
    apic_20 { pt3dadd( -163.075, -113.989, -44.4757, 0.29 ) }
    apic_20 { pt3dadd( -164.614, -113.913, -44.8936, 0.44 ) }
    apic_20 { pt3dadd( -165.965, -113.814, -45.2556, 0.44 ) }
    apic_20 { pt3dadd( -166.757, -113.736, -45.4709, 0.44 ) }
    apic_20 { pt3dadd( -168.116, -113.623, -45.8893, 0.44 ) }
    apic_20 { pt3dadd( -168.829, -113.569, -46.1197, 0.44 ) }
    apic_20 { pt3dadd( -170.301, -113.459, -46.6681, 0.44 ) }
    apic_20 { pt3dadd( -171.488, -113.369, -47.1393, 0.44 ) }
    apic_20 { pt3dadd( -172.487, -113.281, -47.5286, 0.29 ) }
    apic_20 { pt3dadd( -173.847, -113.147, -48.0476, 0.29 ) }
    apic_20 { pt3dadd( -175.297, -113.0, -48.5765, 0.29 ) }
    apic_20 { pt3dadd( -176.634, -112.871, -49.0115, 0.37 ) }
    apic_20 { pt3dadd( -177.659, -112.789, -49.3057, 0.66 ) }
    apic_20 { pt3dadd( -178.697, -112.747, -49.612, 0.37 ) }
    apic_20 { pt3dadd( -179.547, -112.759, -49.8913, 0.37 ) }
    apic_20 { pt3dadd( -180.447, -112.803, -50.2347, 0.37 ) }
    apic_20 { pt3dadd( -182.318, -112.961, -51.1325, 0.22 ) }
    apic_20 { pt3dadd( -183.441, -113.078, -51.7319, 0.22 ) }
    apic_20 { pt3dadd( -184.478, -113.172, -52.2975, 1.03 ) }
    apic_20 { pt3dadd( -185.882, -113.252, -53.0479, 0.29 ) }
    apic_20 { pt3dadd( -187.224, -113.276, -53.7397, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    apic_20 { pt3dadd( -188.86, -113.231, -54.4521, 0.29 ) }
    apic_20 { pt3dadd( -190.244, -113.138, -54.8892, 1.25 ) }
    apic_20 { pt3dadd( -191.909, -113.035, -55.1831, 0.07 ) }
    apic_20 { pt3dadd( -192.899, -112.988, -55.2444, 0.07 ) }
    apic_20 { pt3dadd( -194.187, -112.961, -55.2035, 1.4 ) }
    apic_20 { pt3dadd( -196.636, -113.029, -54.9678, 0.37 ) }
    apic_20 { pt3dadd( -198.33, -113.148, -54.7598, 0.22 ) }
    apic_20 { pt3dadd( -200.336, -113.374, -54.5812, 0.22 ) }
    apic_20 { pt3dadd( -201.582, -113.58, -54.5431, 0.73 ) }
    apic_20 { pt3dadd( -202.651, -113.785, -54.5619, 0.59 ) }
    apic_20 { pt3dadd( -203.602, -113.968, -54.6401, 0.37 ) }
    apic_20 { pt3dadd( -204.799, -114.173, -54.8808, 0.22 ) }
    apic_20 { pt3dadd( -206.264, -114.31, -55.4372, 0.22 ) }
    apic_20 { pt3dadd( -207.396, -114.299, -56.0881, 0.22 ) }
    apic_20 { pt3dadd( -208.282, -114.219, -56.7275, 0.37 ) }
    apic_20 { pt3dadd( -209.249, -114.07, -57.5069, 0.22 ) }
    apic_20 { pt3dadd( -210.471, -113.847, -58.5697, 0.22 ) }
    apic_20 { pt3dadd( -212.322, -113.519, -60.2845, 0.73 ) }
    apic_20 { pt3dadd( -213.463, -113.337, -61.4272, 0.37 ) }
    apic_20 { pt3dadd( -214.05, -113.253, -62.0533, 0.59 ) }
    apic_20 { pt3dadd( -215.002, -113.15, -63.1022, 0.29 ) }
    apic_20 { pt3dadd( -215.677, -113.092, -63.8255, 0.37 ) }
    apic_20 { pt3dadd( -217.122, -112.967, -65.2794, 0.44 ) }
    apic_20 { pt3dadd( -218.368, -112.833, -66.4108, 0.44 ) }
    apic_20 { pt3dadd( -220.038, -112.582, -67.8081, 0.44 ) }
    apic_20 { pt3dadd( -221.83, -112.207, -69.174, 0.51 ) }
    apic_20 { pt3dadd( -222.73, -111.969, -69.8027, 0.51 ) }
    apic_20 { pt3dadd( -223.592, -111.702, -70.3629, 0.51 ) }
    apic_20 { pt3dadd( -224.283, -111.454, -70.7579, 0.37 ) }
    apic_20 { pt3dadd( -225.487, -110.975, -71.3199, 0.37 ) }
    apic_20 { pt3dadd( -226.893, -110.406, -71.8126, 0.81 ) }
    apic_20 { pt3dadd( -228.223, -109.869, -72.1441, 0.51 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 32/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( -36.5631, -93.5431, -25.4952, 1.47 ) }
    apic_3 { pt3dadd( -36.9374, -94.8024, -25.6921, 1.47 ) }
    apic_3 { pt3dadd( -37.3654, -96.242, -25.9172, 1.47 ) }
    apic_3 { pt3dadd( -37.6562, -97.2206, -26.0701, 1.47 ) }
    apic_3 { pt3dadd( -37.9139, -98.0872, -26.2056, 2.13 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 37/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -34.3654, -18.4107, -34.9029, 0.88 ) }
    dend_46 { pt3dadd( -34.984, -17.8091, -35.3939, 0.66 ) }
    dend_46 { pt3dadd( -36.1072, -16.6818, -36.2189, 0.29 ) }
    dend_46 { pt3dadd( -36.9154, -15.9324, -36.7657, 0.88 ) }
    dend_46 { pt3dadd( -37.282, -15.6317, -37.0031, 0.73 ) }
    dend_46 { pt3dadd( -38.0883, -15.0333, -37.5318, 0.44 ) }
    dend_46 { pt3dadd( -38.9821, -14.385, -38.1131, 0.29 ) }
    dend_46 { pt3dadd( -40.1166, -13.5568, -38.8709, 0.29 ) }
    dend_46 { pt3dadd( -40.867, -12.9425, -39.3888, 0.29 ) }
    dend_46 { pt3dadd( -41.8827, -12.0624, -40.0758, 0.29 ) }
    dend_46 { pt3dadd( -42.6318, -11.434, -40.6059, 0.29 ) }
    dend_46 { pt3dadd( -43.1885, -10.9889, -41.0118, 0.51 ) }
    dend_46 { pt3dadd( -43.6393, -10.6278, -41.376, 0.66 ) }
    dend_46 { pt3dadd( -44.4485, -9.96065, -42.0848, 0.37 ) }
    dend_46 { pt3dadd( -45.0977, -9.42108, -42.6066, 0.22 ) }
    dend_46 { pt3dadd( -45.8074, -8.8215, -43.133, 0.22 ) }
    dend_46 { pt3dadd( -46.3372, -8.39886, -43.4872, 0.22 ) }
    dend_46 { pt3dadd( -47.0416, -7.907, -43.9203, 0.22 ) }
    dend_46 { pt3dadd( -47.8313, -7.43876, -44.353, 0.22 ) }
    dend_46 { pt3dadd( -49.2403, -6.73603, -45.0761, 0.22 ) }
    dend_46 { pt3dadd( -50.6995, -6.08896, -45.8441, 0.22 ) }
    dend_46 { pt3dadd( -51.1756, -5.89571, -46.1066, 0.22 ) }
    dend_46 { pt3dadd( -51.591, -5.77543, -46.346, 0.22 ) }
    dend_46 { pt3dadd( -52.1601, -5.73059, -46.7023, 0.22 ) }
    dend_46 { pt3dadd( -53.068, -5.8973, -47.3286, 0.22 ) }
    dend_46 { pt3dadd( -53.9485, -6.24249, -47.9862, 0.22 ) }
    dend_46 { pt3dadd( -54.8693, -6.66968, -48.6295, 0.37 ) }
    dend_46 { pt3dadd( -55.4995, -6.91863, -49.0105, 0.37 ) }
    dend_46 { pt3dadd( -56.5625, -7.24358, -49.5479, 0.59 ) }
    dend_46 { pt3dadd( -57.9207, -7.56054, -50.1518, 0.15 ) }
    dend_46 { pt3dadd( -58.8681, -7.75099, -50.5177, 0.22 ) }
    dend_46 { pt3dadd( -60.1404, -7.99439, -50.9847, 0.22 ) }
    dend_46 { pt3dadd( -62.1287, -8.34411, -51.7138, 0.22 ) }
    dend_46 { pt3dadd( -63.4954, -8.54488, -52.2009, 0.51 ) }
    dend_46 { pt3dadd( -65.0762, -8.7152, -52.7204, 0.29 ) }
    dend_46 { pt3dadd( -66.4488, -8.79939, -53.1459, 0.51 ) }
    dend_46 { pt3dadd( -67.6876, -8.85812, -53.536, 0.22 ) }
    dend_46 { pt3dadd( -68.2359, -8.89076, -53.712, 0.44 ) }
    dend_46 { pt3dadd( -69.1263, -8.96326, -54.0386, 0.22 ) }
    dend_46 { pt3dadd( -69.8114, -9.01228, -54.3069, 0.22 ) }
    dend_46 { pt3dadd( -70.4013, -9.04704, -54.5272, 0.51 ) }
    dend_46 { pt3dadd( -71.6676, -9.11829, -54.9999, 0.29 ) }
    dend_46 { pt3dadd( -73.1448, -9.22, -55.5542, 0.29 ) }
    dend_46 { pt3dadd( -74.3496, -9.30736, -56.034, 0.29 ) }
    dend_46 { pt3dadd( -76.6294, -9.46144, -57.064, 0.15 ) }
    dend_46 { pt3dadd( -77.4206, -9.51441, -57.4741, 0.15 ) }
    dend_46 { pt3dadd( -78.3401, -9.58069, -57.9963, 0.15 ) }
    dend_46 { pt3dadd( -78.9298, -9.61836, -58.3555, 0.15 ) }
    dend_46 { pt3dadd( -79.2109, -9.63765, -58.5464, 0.59 ) }
    dend_46 { pt3dadd( -80.3802, -9.74614, -59.3313, 0.22 ) }
    dend_46 { pt3dadd( -81.353, -9.89498, -60.0271, 0.51 ) }
    dend_46 { pt3dadd( -81.9227, -9.99864, -60.4263, 0.51 ) }
    dend_46 { pt3dadd( -82.2827, -10.0657, -60.645, 0.51 ) }
    dend_46 { pt3dadd( -83.4379, -10.2689, -61.2182, 0.22 ) }
    dend_46 { pt3dadd( -84.4842, -10.4318, -61.6276, 0.22 ) }
    dend_46 { pt3dadd( -85.4753, -10.5416, -61.9313, 0.22 ) }
    dend_46 { pt3dadd( -86.4298, -10.5796, -62.1945, 0.22 ) }
    dend_46 { pt3dadd( -87.7526, -10.5407, -62.5474, 0.22 ) }
    dend_46 { pt3dadd( -89.1003, -10.4797, -62.9045, 0.22 ) }
    dend_46 { pt3dadd( -90.2652, -10.4203, -63.2215, 0.22 ) }
    dend_46 { pt3dadd( -90.9731, -10.3721, -63.4438, 0.22 ) }
    dend_46 { pt3dadd( -92.5975, -10.2046, -64.06, 0.22 ) }
    dend_46 { pt3dadd( -93.4216, -10.1113, -64.4192, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_46 { pt3dadd( -94.472, -10.0077, -64.944, 0.29 ) }
    dend_46 { pt3dadd( -95.4701, -9.92794, -65.4939, 0.29 ) }
    dend_46 { pt3dadd( -96.4676, -9.84799, -66.0536, 0.29 ) }
    dend_46 { pt3dadd( -97.5178, -9.76104, -66.6153, 0.29 ) }
    dend_46 { pt3dadd( -98.4419, -9.67076, -67.069, 0.29 ) }
    dend_46 { pt3dadd( -99.1927, -9.5903, -67.421, 0.29 ) }
    dend_46 { pt3dadd( -100.345, -9.42345, -67.9501, 0.29 ) }
    dend_46 { pt3dadd( -101.435, -9.26272, -68.4365, 0.29 ) }
    dend_46 { pt3dadd( -102.177, -9.17677, -68.7605, 0.29 ) }
    dend_46 { pt3dadd( -102.811, -9.13189, -69.0445, 0.29 ) }
    dend_46 { pt3dadd( -103.719, -9.11028, -69.485, 0.29 ) }
    dend_46 { pt3dadd( -104.907, -9.14017, -70.0867, 0.29 ) }
    dend_46 { pt3dadd( -105.559, -9.1882, -70.4223, 0.29 ) }
    dend_46 { pt3dadd( -106.089, -9.26528, -70.7066, 0.29 ) }
    dend_46 { pt3dadd( -106.779, -9.40372, -71.0759, 0.29 ) }
    dend_46 { pt3dadd( -108.663, -9.82928, -72.0545, 0.29 ) }
    dend_46 { pt3dadd( -109.74, -10.0692, -72.5642, 0.15 ) }
    dend_46 { pt3dadd( -110.118, -10.1484, -72.7354, 0.37 ) }
    dend_46 { pt3dadd( -111.042, -10.2779, -73.1927, 0.37 ) }
    dend_46 { pt3dadd( -111.855, -10.3231, -73.6165, 0.37 ) }
    dend_46 { pt3dadd( -112.986, -10.2941, -74.2034, 0.29 ) }
    dend_46 { pt3dadd( -114.326, -10.1426, -74.9024, 0.29 ) }
    dend_46 { pt3dadd( -115.484, -9.90572, -75.4701, 0.81 ) }
    dend_46 { pt3dadd( -117.097, -9.4431, -76.2349, 0.37 ) }
    dend_46 { pt3dadd( -118.251, -8.98366, -76.8081, 0.22 ) }
    dend_46 { pt3dadd( -119.144, -8.54047, -77.2718, 0.51 ) }
    dend_46 { pt3dadd( -119.764, -8.17285, -77.5996, 0.51 ) }
    dend_46 { pt3dadd( -120.732, -7.53393, -78.1259, 0.07 ) }
    dend_46 { pt3dadd( -121.324, -7.11794, -78.444, 0.37 ) }
    dend_46 { pt3dadd( -122.595, -6.25947, -79.3138, 0.07 ) }
    dend_46 { pt3dadd( -123.29, -5.81144, -79.9702, 0.07 ) }
    dend_46 { pt3dadd( -123.839, -5.47275, -80.6199, 0.29 ) }
    dend_46 { pt3dadd( -124.556, -5.08668, -81.5941, 0.15 ) }
    dend_46 { pt3dadd( -124.942, -4.91411, -82.1404, 0.37 ) }
    dend_46 { pt3dadd( -126.788, -4.33217, -84.645, 0.37 ) }
    dend_46 { pt3dadd( -127.735, -4.15674, -85.83, 0.37 ) }
    dend_46 { pt3dadd( -128.645, -4.06074, -86.8995, 0.37 ) }
    dend_46 { pt3dadd( -129.882, -4.01682, -88.2404, 0.22 ) }
    dend_46 { pt3dadd( -130.625, -4.02972, -88.9752, 0.44 ) }
    dend_46 { pt3dadd( -131.7, -4.09587, -89.9338, 0.44 ) }
    dend_46 { pt3dadd( -132.737, -4.16438, -90.7247, 0.44 ) }
    dend_46 { pt3dadd( -133.367, -4.22752, -91.1777, 1.03 ) }
    dend_46 { pt3dadd( -135.414, -4.52148, -92.6415, 0.44 ) }
    dend_46 { pt3dadd( -137.172, -4.77994, -93.9381, 0.37 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 44/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -34.3654, -18.4107, -34.9029, 0.88 ) }
    dend_45 { pt3dadd( -34.8655, -18.459, -35.0995, 0.59 ) }
    dend_45 { pt3dadd( -36.5951, -18.6529, -35.8215, 0.29 ) }
    dend_45 { pt3dadd( -37.2947, -18.7465, -36.0901, 0.37 ) }
    dend_45 { pt3dadd( -37.6203, -18.795, -36.2099, 0.51 ) }
    dend_45 { pt3dadd( -38.5415, -18.9406, -36.5403, 0.44 ) }
    dend_45 { pt3dadd( -39.3704, -19.0794, -36.8279, 0.44 ) }
    dend_45 { pt3dadd( -40.3586, -19.2433, -37.1419, 0.44 ) }
    dend_45 { pt3dadd( -41.3402, -19.4055, -37.4256, 0.51 ) }
    dend_45 { pt3dadd( -42.0291, -19.5249, -37.606, 0.37 ) }
    dend_45 { pt3dadd( -42.9564, -19.6869, -37.8422, 0.29 ) }
    dend_45 { pt3dadd( -43.5339, -19.7831, -37.9805, 0.29 ) }
    dend_45 { pt3dadd( -44.0807, -19.8628, -38.1004, 0.29 ) }
    dend_45 { pt3dadd( -44.6179, -19.9306, -38.2148, 0.44 ) }
    dend_45 { pt3dadd( -45.3735, -20.0315, -38.3785, 0.59 ) }
    dend_45 { pt3dadd( -46.3694, -20.1708, -38.5847, 0.37 ) }
    dend_45 { pt3dadd( -47.0156, -20.2674, -38.7095, 0.22 ) }
    dend_45 { pt3dadd( -47.4933, -20.3518, -38.8044, 0.44 ) }
    dend_45 { pt3dadd( -48.1738, -20.494, -38.9487, 0.22 ) }
    dend_45 { pt3dadd( -48.7214, -20.6134, -39.0857, 0.22 ) }
    dend_45 { pt3dadd( -49.1414, -20.7149, -39.2054, 0.22 ) }
    dend_45 { pt3dadd( -49.4945, -20.8206, -39.3159, 0.29 ) }
    dend_45 { pt3dadd( -50.1236, -21.0378, -39.5123, 0.29 ) }
    dend_45 { pt3dadd( -50.8611, -21.3064, -39.7371, 0.22 ) }
    dend_45 { pt3dadd( -51.6986, -21.5936, -40.0108, 0.22 ) }
    dend_45 { pt3dadd( -52.2289, -21.7454, -40.199, 1.03 ) }
    dend_45 { pt3dadd( -52.8433, -21.9109, -40.4216, 0.29 ) }
    dend_45 { pt3dadd( -53.3573, -22.0392, -40.612, 0.44 ) }
    dend_45 { pt3dadd( -53.8145, -22.1361, -40.7732, 0.29 ) }
    dend_45 { pt3dadd( -54.5759, -22.2965, -41.0074, 0.29 ) }
    dend_45 { pt3dadd( -55.243, -22.4496, -41.1775, 0.66 ) }
    dend_45 { pt3dadd( -55.8159, -22.615, -41.306, 0.29 ) }
    dend_45 { pt3dadd( -56.5436, -22.8601, -41.4311, 0.29 ) }
    dend_45 { pt3dadd( -56.7227, -22.9342, -41.4612, 0.29 ) }
    dend_45 { pt3dadd( -57.6947, -23.4185, -41.6038, 2.42 ) }
    dend_45 { pt3dadd( -58.5165, -23.9025, -41.7011, 1.54 ) }
    dend_45 { pt3dadd( -59.4859, -24.5345, -41.8115, 0.37 ) }
    dend_45 { pt3dadd( -60.0842, -24.9413, -41.8962, 0.37 ) }
    dend_45 { pt3dadd( -60.8338, -25.4718, -42.02, 0.37 ) }
    dend_45 { pt3dadd( -61.1855, -25.733, -42.0946, 0.37 ) }
    dend_45 { pt3dadd( -61.6395, -26.0892, -42.2283, 0.37 ) }
    dend_45 { pt3dadd( -62.0904, -26.4619, -42.3994, 0.37 ) }
    dend_45 { pt3dadd( -62.3513, -26.679, -42.5252, 0.37 ) }
    dend_45 { pt3dadd( -62.6617, -26.9574, -42.6967, 0.37 ) }
    dend_45 { pt3dadd( -63.0246, -27.3132, -42.909, 0.37 ) }
    dend_45 { pt3dadd( -63.4792, -27.835, -43.1934, 0.37 ) }
    dend_45 { pt3dadd( -64.097, -28.6783, -43.5666, 0.51 ) }
    dend_45 { pt3dadd( -64.5157, -29.3217, -43.8099, 0.44 ) }
    dend_45 { pt3dadd( -64.8773, -29.8942, -44.0268, 0.37 ) }
    dend_45 { pt3dadd( -65.1852, -30.382, -44.2291, 0.37 ) }
    dend_45 { pt3dadd( -65.6946, -31.1653, -44.6073, 0.37 ) }
    dend_45 { pt3dadd( -66.2211, -31.9378, -45.0498, 0.29 ) }
    dend_45 { pt3dadd( -66.5639, -32.3908, -45.3489, 0.29 ) }
    dend_45 { pt3dadd( -67.0814, -33.0178, -45.7966, 0.29 ) }
    dend_45 { pt3dadd( -67.6655, -33.6189, -46.2899, 0.29 ) }
    dend_45 { pt3dadd( -68.2989, -34.2033, -46.8109, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_45 { pt3dadd( -68.9404, -34.7422, -47.317, 0.44 ) }
    dend_45 { pt3dadd( -69.7839, -35.4224, -47.9445, 0.44 ) }
    dend_45 { pt3dadd( -70.6362, -36.1013, -48.4842, 0.44 ) }
    dend_45 { pt3dadd( -71.3027, -36.6367, -48.827, 0.44 ) }
    dend_45 { pt3dadd( -71.8602, -37.0787, -49.067, 0.29 ) }
    dend_45 { pt3dadd( -72.5694, -37.6279, -49.3187, 0.29 ) }
    dend_45 { pt3dadd( -73.0318, -37.9665, -49.4522, 0.29 ) }
    dend_45 { pt3dadd( -73.8364, -38.5377, -49.6795, 0.22 ) }
    dend_45 { pt3dadd( -74.547, -39.0431, -49.874, 0.22 ) }
    dend_45 { pt3dadd( -75.5994, -39.8177, -50.1663, 0.22 ) }
    dend_45 { pt3dadd( -76.2049, -40.2738, -50.3419, 0.22 ) }
    dend_45 { pt3dadd( -76.8118, -40.7779, -50.5523, 0.22 ) }
    dend_45 { pt3dadd( -77.4558, -41.3662, -50.8175, 0.22 ) }
    dend_45 { pt3dadd( -77.8904, -41.8166, -51.0258, 0.22 ) }
    dend_45 { pt3dadd( -78.11, -42.0756, -51.1532, 0.22 ) }
    dend_45 { pt3dadd( -78.46, -42.5719, -51.4061, 0.22 ) }
    dend_45 { pt3dadd( -79.0901, -43.655, -51.9872, 0.22 ) }
    dend_45 { pt3dadd( -79.4837, -44.4984, -52.4614, 0.22 ) }
    dend_45 { pt3dadd( -79.7294, -45.14, -52.8635, 0.22 ) }
    dend_45 { pt3dadd( -79.8667, -45.6525, -53.236, 0.22 ) }
    dend_45 { pt3dadd( -79.9356, -46.009, -53.5152, 0.22 ) }
    dend_45 { pt3dadd( -80.0127, -46.427, -53.8397, 0.73 ) }
    dend_45 { pt3dadd( -80.1126, -46.9124, -54.1872, 0.29 ) }
    dend_45 { pt3dadd( -80.3147, -47.7674, -54.7557, 0.29 ) }
    dend_45 { pt3dadd( -80.6195, -48.8421, -55.4307, 0.29 ) }
    dend_45 { pt3dadd( -80.7944, -49.3973, -55.7585, 0.29 ) }
    dend_45 { pt3dadd( -81.2369, -50.686, -56.4782, 0.22 ) }
    dend_45 { pt3dadd( -81.6445, -51.7451, -57.022, 0.22 ) }
    dend_45 { pt3dadd( -81.8427, -52.189, -57.2213, 0.88 ) }
    dend_45 { pt3dadd( -82.1658, -52.8261, -57.4473, 0.88 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 30/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -25.5979, 46.0901, -40.686, 0.29 ) }
    dend_40 { pt3dadd( -25.886, 46.3127, -41.8169, 0.44 ) }
    dend_40 { pt3dadd( -25.8838, 46.6664, -43.0605, 0.29 ) }
    dend_40 { pt3dadd( -25.8007, 46.9939, -43.6314, 0.29 ) }
    dend_40 { pt3dadd( -25.7445, 47.4742, -44.215, 0.29 ) }
    dend_40 { pt3dadd( -25.804, 48.0951, -44.8402, 0.29 ) }
    dend_40 { pt3dadd( -25.9443, 48.5918, -45.2805, 0.29 ) }
    dend_40 { pt3dadd( -26.1171, 49.0527, -45.5658, 0.29 ) }
    dend_40 { pt3dadd( -26.5521, 50.1838, -46.157, 0.29 ) }
    dend_40 { pt3dadd( -26.9029, 50.9775, -46.5419, 0.29 ) }
    dend_40 { pt3dadd( -27.4371, 51.9489, -46.9864, 0.29 ) }
    dend_40 { pt3dadd( -27.9511, 52.7449, -47.3328, 0.29 ) }
    dend_40 { pt3dadd( -28.4698, 53.4247, -47.6121, 0.51 ) }
    dend_40 { pt3dadd( -28.8656, 53.873, -47.7871, 0.51 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 44/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -25.5979, 46.0901, -40.686, 0.29 ) }
    dend_39 { pt3dadd( -26.059, 46.6035, -40.4607, 0.29 ) }
    dend_39 { pt3dadd( -26.5149, 47.0599, -40.2044, 0.44 ) }
    dend_39 { pt3dadd( -26.6796, 47.2249, -40.1118, 0.29 ) }
    dend_39 { pt3dadd( -27.1254, 47.6712, -39.8613, 0.44 ) }
    dend_39 { pt3dadd( -28.2286, 48.7758, -39.2412, 0.22 ) }
    dend_39 { pt3dadd( -28.5767, 49.1243, -39.0455, 0.37 ) }
    dend_39 { pt3dadd( -29.1722, 49.7853, -38.5972, 0.44 ) }
    // Section: dend_27, id: dend_27, parent: dend_23 (entry count 52/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -19.567, 1.01684, 7.35177, 1.1 ) }
    dend_27 { pt3dadd( -18.435, 1.62272, 9.57108, 1.1 ) }
    dend_27 { pt3dadd( -18.0957, 1.74333, 10.019, 1.1 ) }
    dend_27 { pt3dadd( -17.5206, 1.89755, 10.5758, 0.73 ) }
    dend_27 { pt3dadd( -16.5392, 2.12492, 11.3135, 0.73 ) }
    dend_27 { pt3dadd( -15.7554, 2.28028, 11.7838, 0.73 ) }
    dend_27 { pt3dadd( -14.963, 2.40134, 12.2103, 1.03 ) }
    dend_27 { pt3dadd( -14.201, 2.4656, 12.4917, 0.59 ) }
    dend_27 { pt3dadd( -13.4819, 2.45957, 12.7274, 0.51 ) }
    dend_27 { pt3dadd( -12.7358, 2.36557, 12.9198, 0.66 ) }
    dend_27 { pt3dadd( -11.5004, 2.03348, 13.1558, 0.37 ) }
    dend_27 { pt3dadd( -10.5742, 1.59518, 13.3302, 0.51 ) }
    dend_27 { pt3dadd( -9.82217, 0.960498, 13.4815, 1.1 ) }
    dend_27 { pt3dadd( -9.27961, 0.262319, 13.5922, 0.59 ) }
    dend_27 { pt3dadd( -8.54542, -1.05926, 13.6995, 0.51 ) }
    dend_27 { pt3dadd( -8.04208, -2.34968, 13.7269, 0.95 ) }
    dend_27 { pt3dadd( -7.64614, -3.77586, 13.6777, 0.59 ) }
    dend_27 { pt3dadd( -7.20077, -5.62497, 13.5777, 0.59 ) }
    dend_27 { pt3dadd( -7.03573, -6.36215, 13.5476, 0.59 ) }
    dend_27 { pt3dadd( -6.6937, -7.93753, 13.5481, 0.59 ) }
    dend_27 { pt3dadd( -6.27006, -9.72463, 13.6301, 0.29 ) }
    dend_27 { pt3dadd( -5.93721, -10.7943, 13.7548, 0.59 ) }
    dend_27 { pt3dadd( -5.36924, -11.9887, 14.0438, 0.59 ) }
    dend_27 { pt3dadd( -4.94194, -12.6364, 14.375, 0.59 ) }
    dend_27 { pt3dadd( -4.59872, -13.1028, 14.7758, 0.59 ) }
    dend_27 { pt3dadd( -4.19467, -13.61, 15.4941, 0.88 ) }
    dend_27 { pt3dadd( -3.60147, -14.2163, 16.8132, 1.03 ) }
    dend_27 { pt3dadd( -3.28936, -14.531, 17.7411, 1.03 ) }
    dend_27 { pt3dadd( -3.10243, -14.7878, 18.6305, 1.03 ) }
    dend_27 { pt3dadd( -2.96896, -15.083, 19.4755, 1.03 ) }
    dend_27 { pt3dadd( -2.91598, -15.3843, 20.2484, 1.03 ) }
    dend_27 { pt3dadd( -2.94232, -15.6914, 21.054, 1.03 ) }
    dend_27 { pt3dadd( -2.99593, -15.8288, 21.5369, 1.03 ) }
    dend_27 { pt3dadd( -3.13126, -15.9858, 22.5974, 1.03 ) }
    dend_27 { pt3dadd( -3.12304, -16.0345, 23.6807, 1.03 ) }
    dend_27 { pt3dadd( -2.98672, -16.0889, 24.3109, 1.03 ) }
    dend_27 { pt3dadd( 2.84969, -24.1397, 29.6087, 1.03 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 89/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -19.567, 1.01684, 7.35177, 1.1 ) }
    dend_24 { pt3dadd( -20.3476, -0.221969, 8.00379, 0.73 ) }
    dend_24 { pt3dadd( -20.7465, -0.7721, 8.31254, 0.59 ) }
    dend_24 { pt3dadd( -21.2069, -1.46427, 8.68948, 0.37 ) }
    dend_24 { pt3dadd( -21.604, -2.12563, 9.02527, 0.51 ) }
    dend_24 { pt3dadd( -22.0382, -2.98072, 9.42693, 0.51 ) }
    dend_24 { pt3dadd( -22.3368, -3.73144, 9.73154, 1.1 ) }
    dend_24 { pt3dadd( -22.5627, -4.52573, 9.97204, 1.25 ) }
    dend_24 { pt3dadd( -22.7303, -5.54494, 10.2603, 0.37 ) }
    dend_24 { pt3dadd( -22.741, -6.11696, 10.4147, 0.37 ) }
    dend_24 { pt3dadd( -22.6731, -7.02775, 10.6355, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_24 { pt3dadd( -22.4417, -8.3139, 10.9212, 0.37 ) }
    dend_24 { pt3dadd( -22.264, -8.99848, 11.0364, 0.29 ) }
    dend_24 { pt3dadd( -22.1454, -9.35067, 11.0834, 0.73 ) }
    dend_24 { pt3dadd( -21.9053, -9.99915, 11.1674, 1.1 ) }
    dend_24 { pt3dadd( -23.8752, -17.842, 14.8638, 1.1 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 5/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -23.8022, 9.8086, 11.2707, 1.69 ) }
    dend_22 { pt3dadd( -23.8394, 10.4244, 10.8891, 1.03 ) }
    dend_22 { pt3dadd( -23.7767, 11.2352, 10.4284, 1.03 ) }
    dend_22 { pt3dadd( -23.6577, 11.9529, 10.0557, 0.44 ) }
    dend_22 { pt3dadd( -23.5135, 12.6762, 9.70598, 0.44 ) }
    dend_22 { pt3dadd( -23.3675, 13.4147, 9.38063, 0.73 ) }
    dend_22 { pt3dadd( -23.2376, 14.1814, 9.06834, 0.37 ) }
    dend_22 { pt3dadd( -23.1558, 14.7237, 8.88932, 0.95 ) }
    dend_22 { pt3dadd( -23.0714, 15.3509, 8.68573, 0.51 ) }
    dend_22 { pt3dadd( -23.0543, 15.7507, 8.54111, 0.51 ) }
    dend_22 { pt3dadd( -23.1571, 16.4248, 8.27645, 0.66 ) }
    dend_22 { pt3dadd( -23.3279, 16.8852, 8.08259, 0.37 ) }
    dend_22 { pt3dadd( -23.6486, 17.5346, 7.81604, 0.73 ) }
    dend_22 { pt3dadd( -23.9933, 18.1697, 7.55482, 0.73 ) }
    dend_22 { pt3dadd( -24.4079, 18.9412, 7.2616, 0.66 ) }
    dend_22 { pt3dadd( -24.6845, 19.6018, 7.05511, 0.66 ) }
    dend_22 { pt3dadd( -24.8345, 20.1184, 6.93498, 0.59 ) }
    dend_22 { pt3dadd( -24.9678, 20.951, 6.77979, 0.51 ) }
    dend_22 { pt3dadd( -25.0055, 21.5113, 6.70303, 0.51 ) }
    dend_22 { pt3dadd( -25.0081, 22.2239, 6.62747, 1.25 ) }
    dend_22 { pt3dadd( -24.9997, 23.4773, 6.49259, 0.73 ) }
    dend_22 { pt3dadd( -25.025, 23.947, 6.44911, 0.66 ) }
    dend_22 { pt3dadd( -25.1601, 24.8527, 6.38138, 0.59 ) }
    dend_22 { pt3dadd( -25.2974, 25.4725, 6.36118, 0.59 ) }
    dend_22 { pt3dadd( -25.5291, 26.3634, 6.3401, 0.81 ) }
    dend_22 { pt3dadd( -25.8981, 27.5655, 6.31009, 0.51 ) }
    dend_22 { pt3dadd( -26.3019, 28.7631, 6.2685, 0.51 ) }
    dend_22 { pt3dadd( -26.609, 29.719, 6.23956, 0.88 ) }
    dend_22 { pt3dadd( -26.892, 30.7136, 6.22596, 0.37 ) }
    dend_22 { pt3dadd( -27.152, 31.7887, 6.19689, 0.73 ) }
    dend_22 { pt3dadd( -27.2468, 32.2973, 6.17113, 0.51 ) }
    dend_22 { pt3dadd( -27.3308, 32.934, 6.13607, 0.59 ) }
    dend_22 { pt3dadd( -27.385, 33.477, 6.08684, 0.81 ) }
    dend_22 { pt3dadd( -27.4949, 34.3262, 5.97097, 0.51 ) }
    dend_22 { pt3dadd( -27.5994, 34.8009, 5.88297, 0.51 ) }
    dend_22 { pt3dadd( -27.8211, 35.5493, 5.72759, 0.81 ) }
    dend_22 { pt3dadd( -28.2027, 36.594, 5.47928, 0.51 ) }
    dend_22 { pt3dadd( -28.5293, 37.2714, 5.29407, 0.37 ) }
    dend_22 { pt3dadd( -28.96, 37.9509, 5.03785, 0.37 ) }
    dend_22 { pt3dadd( -29.4984, 38.5955, 4.72618, 0.59 ) }
    dend_22 { pt3dadd( -29.7791, 38.8966, 4.54931, 0.59 ) }
    dend_22 { pt3dadd( -30.0283, 39.1639, 4.369, 0.59 ) }
    dend_22 { pt3dadd( -30.293, 39.4753, 4.14215, 0.59 ) }
    dend_22 { pt3dadd( -30.7018, 40.1017, 3.75981, 0.66 ) }
    dend_22 { pt3dadd( -31.0137, 40.9784, 3.31397, 0.44 ) }
    dend_22 { pt3dadd( -31.116, 41.7303, 2.99198, 0.44 ) }
    dend_22 { pt3dadd( -31.1293, 42.5, 2.68091, 0.59 ) }
    dend_22 { pt3dadd( -31.115, 42.8529, 2.53418, 0.29 ) }
    dend_22 { pt3dadd( -31.0663, 43.7113, 2.18576, 0.95 ) }
    dend_22 { pt3dadd( -31.0505, 44.5854, 1.8449, 0.44 ) }
    dend_22 { pt3dadd( -31.0815, 45.1176, 1.62421, 0.73 ) }
    dend_22 { pt3dadd( -31.2383, 45.8893, 1.28048, 0.44 ) }
    dend_22 { pt3dadd( -31.4526, 46.5263, 0.982177, 0.44 ) }
    dend_22 { pt3dadd( -31.6796, 47.0713, 0.725549, 0.88 ) }
    dend_22 { pt3dadd( -32.0856, 47.9227, 0.294735, 0.29 ) }
    dend_22 { pt3dadd( -32.4569, 48.687, -0.110518, 0.81 ) }
    dend_22 { pt3dadd( -32.8461, 49.5945, -0.62061, 0.51 ) }
    dend_22 { pt3dadd( -33.0402, 50.2354, -0.992474, 0.51 ) }
    dend_22 { pt3dadd( -33.1064, 50.6636, -1.24818, 0.73 ) }
    dend_22 { pt3dadd( -33.0967, 51.4177, -1.72184, 0.44 ) }
    dend_22 { pt3dadd( -32.9944, 52.0477, -2.10862, 0.44 ) }
    dend_22 { pt3dadd( -32.8641, 52.6047, -2.38043, 0.44 ) }
    dend_22 { pt3dadd( -32.679, 53.2437, -2.57568, 0.66 ) }
    dend_22 { pt3dadd( -32.6286, 53.4819, -2.59707, 0.88 ) }
    dend_22 { pt3dadd( -32.6231, 53.9682, -2.53255, 0.51 ) }
    dend_22 { pt3dadd( -32.7874, 54.6447, -2.33994, 0.51 ) }
    dend_22 { pt3dadd( -33.1545, 55.5184, -2.04789, 0.66 ) }
    dend_22 { pt3dadd( -33.3921, 55.9665, -1.89753, 0.66 ) }
    dend_22 { pt3dadd( -33.8531, 56.7285, -1.65391, 0.37 ) }
    dend_22 { pt3dadd( -34.235, 57.354, -1.47346, 0.51 ) }
    dend_22 { pt3dadd( -34.8381, 58.3731, -1.22105, 0.73 ) }
    dend_22 { pt3dadd( -35.0147, 58.7058, -1.15926, 0.95 ) }
    dend_22 { pt3dadd( -35.2824, 59.2842, -1.09373, 0.59 ) }
    dend_22 { pt3dadd( -35.4087, 59.5854, -1.0711, 0.59 ) }
    dend_22 { pt3dadd( -35.7102, 60.4711, -1.0414, 0.66 ) }
    dend_22 { pt3dadd( -35.9418, 61.3533, -1.0308, 0.81 ) }
    dend_22 { pt3dadd( -36.0205, 61.8151, -1.034, 0.81 ) }
    dend_22 { pt3dadd( -36.0859, 62.3609, -1.07274, 0.37 ) }
    dend_22 { pt3dadd( -36.1473, 63.1281, -1.16218, 0.37 ) }
    dend_22 { pt3dadd( -36.2052, 63.8028, -1.25767, 0.37 ) }
    dend_22 { pt3dadd( -36.2434, 64.0446, -1.29519, 0.37 ) }
    dend_22 { pt3dadd( -36.4109, 64.8512, -1.40822, 1.03 ) }
    dend_22 { pt3dadd( -36.6669, 66.0524, -1.55858, 0.29 ) }
    dend_22 { pt3dadd( -36.7925, 66.6831, -1.64012, 0.29 ) }
    dend_22 { pt3dadd( -36.9264, 67.4375, -1.74359, 0.29 ) }
    dend_22 { pt3dadd( -37.1545, 68.6644, -1.94347, 0.29 ) }
    dend_22 { pt3dadd( -37.2269, 69.0721, -2.03059, 0.29 ) }
    dend_22 { pt3dadd( -37.3611, 69.9093, -2.25082, 0.59 ) }
    dend_22 { pt3dadd( -37.4192, 70.5997, -2.48594, 0.29 ) }
    dend_22 { pt3dadd( -37.4042, 71.0412, -2.71989, 0.29 ) }
    dend_22 { pt3dadd( -37.2189, 71.8189, -3.32796, 0.59 ) }
    dend_22 { pt3dadd( -36.9269, 72.3337, -3.95684, 0.59 ) }
    dend_22 { pt3dadd( -36.7269, 72.4798, -4.33533, 0.37 ) }
    dend_22 { pt3dadd( -36.5261, 72.4288, -4.74703, 0.37 ) }
    dend_22 { pt3dadd( -36.3598, 72.277, -5.15838, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_22 { pt3dadd( -36.2108, 72.0261, -5.68693, 0.81 ) }
    dend_22 { pt3dadd( -36.1732, 71.8863, -5.98119, 0.81 ) }
    dend_22 { pt3dadd( -36.2008, 71.7564, -6.45528, 0.81 ) }
    dend_22 { pt3dadd( -36.3559, 71.6841, -7.78688, 0.81 ) }
    dend_22 { pt3dadd( -36.4112, 71.8282, -8.49489, 0.95 ) }
    dend_22 { pt3dadd( -36.3716, 72.0406, -8.92062, 0.95 ) }
    dend_22 { pt3dadd( -36.2397, 72.4192, -9.49266, 0.37 ) }
    dend_22 { pt3dadd( -36.1088, 72.8034, -10.0287, 0.37 ) }
    dend_22 { pt3dadd( -35.9934, 73.1353, -10.5171, 0.37 ) }
    dend_22 { pt3dadd( -35.823, 73.4598, -11.0838, 0.37 ) }
    dend_22 { pt3dadd( -35.5806, 73.7036, -11.8322, 0.37 ) }
    dend_22 { pt3dadd( -35.3973, 73.6333, -12.5594, 0.59 ) }
    dend_22 { pt3dadd( -35.2213, 73.0752, -13.7861, 0.66 ) }
    dend_22 { pt3dadd( -35.2068, 72.6562, -14.4527, 0.59 ) }
    dend_22 { pt3dadd( -35.2822, 72.0151, -15.4194, 0.44 ) }
    dend_22 { pt3dadd( -35.4138, 71.4251, -16.2729, 0.44 ) }
    dend_22 { pt3dadd( -35.6312, 70.6111, -17.4048, 0.44 ) }
    dend_22 { pt3dadd( -35.729, 70.2031, -17.9686, 0.44 ) }
    dend_22 { pt3dadd( -35.814, 69.7581, -18.6112, 0.44 ) }
    dend_22 { pt3dadd( -35.9197, 69.3265, -19.6274, 0.44 ) }
    dend_22 { pt3dadd( -35.9433, 69.3506, -19.9324, 0.44 ) }
    dend_22 { pt3dadd( -35.9685, 69.6571, -20.4581, 0.44 ) }
    dend_22 { pt3dadd( -35.9813, 70.1174, -20.9291, 0.44 ) }
    dend_22 { pt3dadd( -35.9716, 70.5241, -21.2621, 0.44 ) }
    dend_22 { pt3dadd( -35.9408, 71.0454, -21.6132, 0.44 ) }
    dend_22 { pt3dadd( -35.9522, 71.5928, -21.9301, 0.44 ) }
    dend_22 { pt3dadd( -36.136, 71.9766, -22.2941, 0.44 ) }
    dend_22 { pt3dadd( -36.3848, 72.1362, -22.5945, 0.44 ) }
    dend_22 { pt3dadd( -36.6762, 72.3569, -22.913, 0.44 ) }
    dend_22 { pt3dadd( -36.8915, 72.5763, -23.2214, 0.44 ) }
    dend_22 { pt3dadd( -37.0782, 72.8137, -23.5898, 0.44 ) }
    dend_22 { pt3dadd( -37.2635, 73.0762, -24.0501, 0.44 ) }
    dend_22 { pt3dadd( -37.4248, 73.2779, -24.5086, 0.44 ) }
    dend_22 { pt3dadd( -37.7836, 73.7488, -25.6213, 0.44 ) }
    dend_22 { pt3dadd( -37.9821, 74.0351, -26.2721, 0.44 ) }
    dend_22 { pt3dadd( -38.1304, 74.2723, -26.8709, 0.44 ) }
    dend_22 { pt3dadd( -38.2934, 74.5514, -27.6932, 0.44 ) }
    dend_22 { pt3dadd( -38.4716, 74.8646, -28.7951, 0.44 ) }
    dend_22 { pt3dadd( -38.5597, 75.0475, -29.4851, 0.44 ) }
    dend_22 { pt3dadd( -38.5879, 75.1658, -29.9676, 0.44 ) }
    dend_22 { pt3dadd( -38.5688, 75.3801, -30.7043, 0.44 ) }
    dend_22 { pt3dadd( -38.5396, 75.46, -30.9316, 0.44 ) }
    dend_22 { pt3dadd( -38.4639, 75.6227, -31.3767, 0.44 ) }
    dend_22 { pt3dadd( -38.3576, 75.8915, -32.2725, 0.51 ) }
    dend_22 { pt3dadd( -38.4576, 75.9287, -33.1617, 0.51 ) }
    dend_22 { pt3dadd( -38.6716, 75.8893, -34.0781, 0.51 ) }
    dend_22 { pt3dadd( -38.7508, 75.8751, -34.3686, 0.51 ) }
    dend_22 { pt3dadd( -38.9903, 75.8333, -35.3076, 0.37 ) }
    dend_22 { pt3dadd( -39.2214, 75.8285, -36.3548, 0.37 ) }
    dend_22 { pt3dadd( -39.4228, 75.9632, -37.6139, 0.37 ) }
    dend_22 { pt3dadd( -39.438, 76.2095, -38.2612, 0.37 ) }
    dend_22 { pt3dadd( -39.3573, 76.5871, -38.808, 0.37 ) }
    dend_22 { pt3dadd( -39.1725, 77.1792, -39.5148, 0.37 ) }
    dend_22 { pt3dadd( -38.9432, 77.7327, -40.0984, 0.37 ) }
    dend_22 { pt3dadd( -38.6869, 78.2315, -40.5938, 0.37 ) }
    dend_22 { pt3dadd( -38.4747, 78.5885, -40.9347, 0.37 ) }
    dend_22 { pt3dadd( -37.9105, 79.4723, -41.8027, 0.37 ) }
    dend_22 { pt3dadd( -37.7362, 79.7595, -42.0975, 0.37 ) }
    dend_22 { pt3dadd( -37.5227, 80.1237, -42.4865, 0.37 ) }
    dend_22 { pt3dadd( -37.2791, 80.6194, -43.098, 0.37 ) }
    dend_22 { pt3dadd( -37.1225, 81.1202, -43.7635, 0.37 ) }
    dend_22 { pt3dadd( -37.0771, 81.4095, -44.1444, 0.88 ) }
    dend_22 { pt3dadd( -37.0253, 82.0436, -44.9499, 0.37 ) }
    dend_22 { pt3dadd( -37.0125, 82.4249, -45.407, 0.37 ) }
    dend_22 { pt3dadd( -37.0328, 82.9923, -46.0376, 0.37 ) }
    dend_22 { pt3dadd( -37.1109, 83.6623, -46.7219, 0.37 ) }
    dend_22 { pt3dadd( -37.1781, 84.1709, -47.2022, 0.59 ) }
    dend_22 { pt3dadd( -37.2364, 84.979, -47.8661, 0.29 ) }
    dend_22 { pt3dadd( -37.2122, 85.3631, -48.1431, 0.29 ) }
    dend_22 { pt3dadd( -37.1545, 85.6776, -48.3508, 0.29 ) }
    dend_22 { pt3dadd( -37.0018, 86.2171, -48.6771, 0.29 ) }
    dend_22 { pt3dadd( -36.8329, 86.7604, -48.9933, 0.29 ) }
    dend_22 { pt3dadd( -36.5164, 87.7387, -49.561, 0.59 ) }
    dend_22 { pt3dadd( -36.2228, 88.6116, -50.0671, 0.22 ) }
    dend_22 { pt3dadd( -35.8548, 89.5854, -50.6741, 0.22 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 75/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -23.8022, 9.8086, 11.2707, 1.69 ) }
    dend_21 { pt3dadd( -24.2643, 10.8192, 11.5187, 0.81 ) }
    dend_21 { pt3dadd( -24.6145, 11.5802, 11.6769, 0.73 ) }
    dend_21 { pt3dadd( -24.9394, 12.2555, 11.7858, 0.51 ) }
    dend_21 { pt3dadd( -25.6807, 13.6608, 11.9697, 0.81 ) }
    dend_21 { pt3dadd( -26.1291, 14.4083, 12.0399, 0.51 ) }
    dend_21 { pt3dadd( -26.3601, 14.7399, 12.0606, 0.59 ) }
    dend_21 { pt3dadd( -26.9651, 15.4235, 12.0641, 0.59 ) }
    dend_21 { pt3dadd( -27.3777, 15.7164, 12.039, 0.59 ) }
    dend_21 { pt3dadd( -27.8863, 15.9135, 11.9939, 0.44 ) }
    dend_21 { pt3dadd( -28.6463, 16.0477, 11.9458, 0.44 ) }
    dend_21 { pt3dadd( -29.3909, 16.13, 11.9169, 0.44 ) }
    dend_21 { pt3dadd( -30.3919, 16.2247, 11.8885, 0.81 ) }
    dend_21 { pt3dadd( -31.6074, 16.3546, 11.8304, 0.44 ) }
    dend_21 { pt3dadd( -32.2876, 16.4493, 11.7886, 0.81 ) }
    dend_21 { pt3dadd( -33.4294, 16.629, 11.6858, 0.51 ) }
    dend_21 { pt3dadd( -35.0801, 16.8953, 11.53, 0.37 ) }
    dend_21 { pt3dadd( -36.0622, 17.0463, 11.4325, 0.37 ) }
    dend_21 { pt3dadd( -37.3121, 17.2395, 11.3075, 0.44 ) }
    dend_21 { pt3dadd( -38.1383, 17.3819, 11.2599, 0.37 ) }
    dend_21 { pt3dadd( -38.7784, 17.5016, 11.2657, 0.37 ) }
    dend_21 { pt3dadd( -39.5247, 17.6454, 11.3418, 0.37 ) }
    dend_21 { pt3dadd( -40.2141, 17.7684, 11.4991, 0.59 ) }
    dend_21 { pt3dadd( -41.3633, 17.9654, 11.8446, 0.44 ) }
    dend_21 { pt3dadd( -42.4972, 18.1779, 12.2227, 0.73 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_21 { pt3dadd( -43.4732, 18.3973, 12.5382, 0.73 ) }
    dend_21 { pt3dadd( -44.4732, 18.6714, 12.8419, 0.59 ) }
    dend_21 { pt3dadd( -45.7274, 19.0676, 13.1762, 0.44 ) }
    dend_21 { pt3dadd( -46.5434, 19.3407, 13.376, 0.44 ) }
    dend_21 { pt3dadd( -47.3935, 19.615, 13.5808, 0.44 ) }
    dend_21 { pt3dadd( -48.1448, 19.8505, 13.7442, 0.44 ) }
    dend_21 { pt3dadd( -48.6429, 20.0106, 13.8461, 0.44 ) }
    dend_21 { pt3dadd( -49.0851, 20.1566, 13.9359, 0.73 ) }
    dend_21 { pt3dadd( -49.7645, 20.3979, 14.0901, 0.44 ) }
    dend_21 { pt3dadd( -50.5413, 20.6737, 14.3063, 0.59 ) }
    dend_21 { pt3dadd( -50.7615, 20.7417, 14.3793, 0.95 ) }
    dend_21 { pt3dadd( -51.2038, 20.8577, 14.5446, 0.95 ) }
    dend_21 { pt3dadd( -51.4289, 20.902, 14.6349, 1.03 ) }
    dend_21 { pt3dadd( -59.9121, 24.5865, 13.8484, 1.03 ) }
    dend_21 { pt3dadd( -68.0789, 29.0259, 13.6299, 1.03 ) }
    dend_21 { pt3dadd( -76.3124, 33.3341, 13.8902, 1.03 ) }
    dend_21 { pt3dadd( -84.2038, 38.201, 13.0856, 1.03 ) }
    dend_21 { pt3dadd( -91.4972, 43.7793, 11.4718, 1.03 ) }
    dend_21 { pt3dadd( -99.8065, 47.9298, 11.2147, 1.03 ) }
    dend_21 { pt3dadd( -108.721, 50.2591, 10.2569, 1.03 ) }
    dend_21 { pt3dadd( -117.324, 53.2864, 8.59528, 1.03 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 21/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -51.61, 10.9813, 2.60995, 0.59 ) }
    dend_17 { pt3dadd( -52.0964, 11.7491, 2.36733, 0.29 ) }
    dend_17 { pt3dadd( -52.4517, 12.3307, 2.15109, 0.29 ) }
    dend_17 { pt3dadd( -52.9155, 13.0615, 1.84433, 0.29 ) }
    dend_17 { pt3dadd( -53.4809, 13.9471, 1.44885, 0.37 ) }
    dend_17 { pt3dadd( -53.8319, 14.4959, 1.19959, 0.37 ) }
    dend_17 { pt3dadd( -54.3286, 15.2637, 0.854439, 0.37 ) }
    dend_17 { pt3dadd( -54.6427, 15.814, 0.600865, 0.37 ) }
    dend_17 { pt3dadd( -54.9331, 16.3813, 0.362652, 0.37 ) }
    dend_17 { pt3dadd( -55.2448, 16.9997, 0.117345, 0.37 ) }
    dend_17 { pt3dadd( -55.4922, 17.4587, -0.077776, 0.51 ) }
    dend_17 { pt3dadd( -55.8429, 18.0955, -0.341658, 0.59 ) }
    dend_17 { pt3dadd( -56.3074, 18.9587, -0.690284, 0.29 ) }
    dend_17 { pt3dadd( -56.7214, 19.8112, -1.00375, 0.59 ) }
    dend_17 { pt3dadd( -57.0764, 20.6077, -1.28876, 0.51 ) }
    dend_17 { pt3dadd( -57.5423, 21.6765, -1.69228, 0.37 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 37/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -51.61, 10.9813, 2.60995, 0.59 ) }
    dend_16 { pt3dadd( -51.0303, 11.9584, 2.24493, 0.29 ) }
    dend_16 { pt3dadd( -50.2529, 13.0135, 1.9191, 0.29 ) }
    dend_16 { pt3dadd( -49.4396, 13.9632, 1.61995, 0.22 ) }
    dend_16 { pt3dadd( -48.4955, 14.9416, 1.30379, 0.22 ) }
    dend_16 { pt3dadd( -47.7941, 15.5956, 1.08394, 0.22 ) }
    dend_16 { pt3dadd( -46.6129, 16.6211, 0.732291, 0.22 ) }
    dend_16 { pt3dadd( -44.8219, 17.9389, 0.291518, 0.22 ) }
    dend_16 { pt3dadd( -43.3633, 18.8436, -0.0216892, 0.22 ) }
    dend_16 { pt3dadd( -42.5629, 19.2839, -0.181091, 0.22 ) }
    dend_16 { pt3dadd( -41.4037, 19.8577, -0.40485, 0.22 ) }
    dend_16 { pt3dadd( -40.6539, 20.1927, -0.557072, 0.22 ) }
    dend_16 { pt3dadd( -39.376, 20.6991, -0.844023, 0.22 ) }
    dend_16 { pt3dadd( -38.2063, 21.1259, -1.09893, 0.59 ) }
    dend_16 { pt3dadd( -36.8299, 21.6201, -1.35317, 0.29 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 52/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 26.252, 34.782, -1.64174, 0.66 ) }
    dend_12 { pt3dadd( 27.09, 34.8719, -1.34513, 0.29 ) }
    dend_12 { pt3dadd( 28.6431, 35.0185, -0.602508, 0.29 ) }
    dend_12 { pt3dadd( 29.3875, 35.0669, -0.131069, 0.29 ) }
    dend_12 { pt3dadd( 30.0515, 35.0941, 0.346936, 0.29 ) }
    dend_12 { pt3dadd( 30.768, 35.1143, 0.949028, 0.29 ) }
    dend_12 { pt3dadd( 31.2879, 35.1251, 1.4599, 0.51 ) }
    dend_12 { pt3dadd( 32.0797, 35.1499, 2.32792, 0.22 ) }
    dend_12 { pt3dadd( 32.8293, 35.2084, 3.2336, 0.29 ) }
    dend_12 { pt3dadd( 33.1102, 35.2485, 3.61005, 0.66 ) }
    dend_12 { pt3dadd( 33.8071, 35.4047, 4.59304, 0.15 ) }
    dend_12 { pt3dadd( 34.5511, 35.6694, 5.71308, 0.15 ) }
    dend_12 { pt3dadd( 35.0579, 35.8873, 6.47052, 0.22 ) }
    dend_12 { pt3dadd( 35.4595, 36.1101, 7.08261, 0.66 ) }
    dend_12 { pt3dadd( 35.8097, 36.3372, 7.58302, 0.66 ) }
    dend_12 { pt3dadd( 36.1402, 36.5882, 8.0477, 0.51 ) }
    dend_12 { pt3dadd( 36.7394, 37.1603, 8.91517, 0.22 ) }
    dend_12 { pt3dadd( 42.6365, 39.0226, 16.4221, 0.22 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 70/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 26.252, 34.782, -1.64174, 0.66 ) }
    dend_11 { pt3dadd( 26.9751, 35.3513, -1.8557, 0.29 ) }
    dend_11 { pt3dadd( 28.3418, 36.2345, -2.34502, 0.51 ) }
    dend_11 { pt3dadd( 30.329, 37.3905, -3.04084, 0.37 ) }
    dend_11 { pt3dadd( 31.0197, 37.7824, -3.26654, 0.15 ) }
    dend_11 { pt3dadd( 33.3632, 39.0656, -3.88835, 0.29 ) }
    dend_11 { pt3dadd( 34.9164, 39.9098, -4.27418, 0.29 ) }
    dend_11 { pt3dadd( 35.6826, 40.3113, -4.43023, 0.37 ) }
    dend_11 { pt3dadd( 36.4421, 40.7273, -4.55619, 0.44 ) }
    dend_11 { pt3dadd( 37.2889, 41.2397, -4.66416, 0.44 ) }
    dend_11 { pt3dadd( 38.4325, 42.0372, -4.64813, 0.44 ) }
    dend_11 { pt3dadd( 39.1555, 42.6044, -4.54404, 0.66 ) }
    dend_11 { pt3dadd( 40.9689, 44.1176, -4.24307, 0.29 ) }
    dend_11 { pt3dadd( 42.1332, 45.0742, -4.04585, 0.29 ) }
    dend_11 { pt3dadd( 43.2284, 45.9746, -3.84659, 0.29 ) }
    dend_11 { pt3dadd( 44.099, 46.6751, -3.68829, 0.29 ) }
    dend_11 { pt3dadd( 44.9128, 47.2918, -3.5491, 0.29 ) }
    dend_11 { pt3dadd( 45.7866, 47.8862, -3.39117, 0.51 ) }
    dend_11 { pt3dadd( 46.6601, 48.4014, -3.25074, 0.59 ) }
    dend_11 { pt3dadd( 47.5573, 48.8832, -3.09201, 0.22 ) }
    dend_11 { pt3dadd( 48.7616, 49.4787, -2.86983, 0.22 ) }
    dend_11 { pt3dadd( 49.5456, 49.8342, -2.71951, 0.22 ) }
    dend_11 { pt3dadd( 49.9746, 50.0147, -2.6282, 0.22 ) }
    dend_11 { pt3dadd( 50.6552, 50.2893, -2.47534, 0.22 ) }
    dend_11 { pt3dadd( 51.2432, 50.5136, -2.35213, 0.22 ) }
    dend_11 { pt3dadd( 51.9016, 50.7342, -2.23992, 0.22 ) }
    dend_11 { pt3dadd( 52.2062, 50.8324, -2.19748, 0.22 ) }
    dend_11 { pt3dadd( 53.0529, 51.1175, -2.09127, 0.22 ) }
    dend_11 { pt3dadd( 53.7786, 51.3526, -1.99979, 0.22 ) }
    dend_11 { pt3dadd( 54.1583, 51.4745, -1.9369, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_11 { pt3dadd( 54.8919, 51.728, -1.79238, 0.81 ) }
    dend_11 { pt3dadd( 56.1174, 52.1791, -1.52098, 0.37 ) }
    dend_11 { pt3dadd( 57.0421, 52.5197, -1.31065, 0.44 ) }
    dend_11 { pt3dadd( 58.016, 52.8725, -1.0911, 0.44 ) }
    dend_11 { pt3dadd( 59.643, 53.4278, -0.777347, 0.29 ) }
    dend_11 { pt3dadd( 61.0238, 53.8941, -0.542952, 0.29 ) }
    dend_11 { pt3dadd( 62.9034, 54.5288, -0.232362, 0.44 ) }
    dend_11 { pt3dadd( 64.3732, 55.0366, 0.0314922, 0.29 ) }
    dend_11 { pt3dadd( 65.4611, 55.4209, 0.240232, 0.29 ) }
    dend_11 { pt3dadd( 66.5117, 55.8073, 0.453183, 0.44 ) }
    dend_11 { pt3dadd( 67.6706, 56.2678, 0.718389, 0.73 ) }
    dend_11 { pt3dadd( 68.7559, 56.7759, 1.03653, 0.37 ) }
    dend_11 { pt3dadd( 70.1654, 57.574, 1.5482, 0.22 ) }
    dend_11 { pt3dadd( 70.8132, 57.9889, 1.83453, 0.37 ) }
    dend_11 { pt3dadd( 71.2602, 58.2987, 2.05766, 0.66 ) }
    dend_11 { pt3dadd( 72.4466, 59.1261, 2.67543, 0.22 ) }
    dend_11 { pt3dadd( 73.5533, 59.8538, 3.21002, 0.22 ) }
    dend_11 { pt3dadd( 74.2118, 60.2732, 3.49103, 0.22 ) }
    dend_11 { pt3dadd( 74.8971, 60.6983, 3.73623, 0.22 ) }
    dend_11 { pt3dadd( 75.5581, 61.0809, 3.95975, 1.03 ) }
    dend_11 { pt3dadd( 76.9585, 61.8566, 4.37719, 0.22 ) }
    dend_11 { pt3dadd( 77.621, 62.2101, 4.5427, 0.22 ) }
    dend_11 { pt3dadd( 78.1426, 62.4685, 4.66754, 0.22 ) }
    dend_11 { pt3dadd( 79.1021, 62.9601, 4.89262, 0.22 ) }
    dend_11 { pt3dadd( 80.0538, 63.4777, 5.11929, 0.22 ) }
    dend_11 { pt3dadd( 80.9724, 63.9769, 5.34084, 0.95 ) }
    dend_11 { pt3dadd( 81.8449, 64.4422, 5.57606, 0.37 ) }
    dend_11 { pt3dadd( 82.8427, 64.948, 5.85061, 0.07 ) }
    dend_11 { pt3dadd( 83.3074, 65.1626, 5.98806, 0.37 ) }
    dend_11 { pt3dadd( 84.143, 65.5109, 6.24696, 0.07 ) }
    dend_11 { pt3dadd( 84.9395, 65.8291, 6.49751, 0.66 ) }
    dend_11 { pt3dadd( 86.2118, 66.3189, 6.90717, 0.22 ) }
    dend_11 { pt3dadd( 87.4582, 66.7948, 7.28667, 0.22 ) }
    dend_11 { pt3dadd( 88.4569, 67.1769, 7.56045, 0.22 ) }
    dend_11 { pt3dadd( 89.5225, 67.5674, 7.84998, 0.37 ) }
    dend_11 { pt3dadd( 89.9236, 67.7146, 7.95306, 0.22 ) }
    dend_11 { pt3dadd( 90.5648, 67.9661, 8.1226, 0.51 ) }
    dend_11 { pt3dadd( 99.8125, 73.2135, 11.4461, 0.51 ) }
    dend_11 { pt3dadd( 109.913, 77.8041, 12.2901, 0.51 ) }
    dend_11 { pt3dadd( 119.533, 83.4232, 11.8833, 0.51 ) }
    dend_11 { pt3dadd( 129.116, 88.9751, 10.6158, 0.51 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 41/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 19.8931, -73.4827, 55.0868, 0.37 ) }
    dend_9 { pt3dadd( 20.3805, -82.513, 59.9616, 0.37 ) }
    dend_9 { pt3dadd( 22.1143, -91.7475, 64.1457, 0.37 ) }
    dend_9 { pt3dadd( 24.544, -101.127, 67.6228, 0.37 ) }
    dend_9 { pt3dadd( 25.2566, -110.741, 71.2591, 0.37 ) }
    dend_9 { pt3dadd( 24.9135, -120.886, 73.1907, 0.37 ) }
    dend_9 { pt3dadd( 26.2665, -131.101, 74.0836, 0.37 ) }
    dend_9 { pt3dadd( 28.4901, -141.183, 73.4483, 0.37 ) }
    dend_9 { pt3dadd( 31.0591, -151.024, 71.5951, 0.37 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 50/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 19.8931, -73.4827, 55.0868, 0.37 ) }
    dend_8 { pt3dadd( 20.4337, -81.2454, 59.016, 0.37 ) }
    dend_8 { pt3dadd( 20.0984, -87.9845, 64.4596, 0.37 ) }
    dend_8 { pt3dadd( 19.6595, -95.1278, 69.3797, 0.37 ) }
    dend_8 { pt3dadd( 20.4784, -102.255, 74.2832, 0.37 ) }
    dend_8 { pt3dadd( 21.3877, -110.094, 78.0019, 0.37 ) }
    dend_8 { pt3dadd( 23.0036, -117.955, 81.4371, 0.37 ) }
    dend_8 { pt3dadd( 26.0057, -125.642, 84.297, 0.37 ) }
    dend_8 { pt3dadd( 28.9401, -133.812, 85.4922, 0.37 ) }
    dend_8 { pt3dadd( 31.3812, -141.691, 88.3772, 0.37 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 60/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 14.3272, 25.6847, 0.932051, 0.44 ) }
    dend_4 { pt3dadd( 14.5798, 26.2452, 1.38223, 0.37 ) }
    dend_4 { pt3dadd( 14.5535, 27.4704, 2.31614, 0.37 ) }
    dend_4 { pt3dadd( 14.4496, 27.7739, 2.56119, 0.51 ) }
    dend_4 { pt3dadd( 14.2466, 28.2511, 2.93454, 0.59 ) }
    dend_4 { pt3dadd( 14.1849, 28.3976, 3.06086, 0.88 ) }
    dend_4 { pt3dadd( 13.8333, 29.0871, 3.64104, 0.29 ) }
    dend_4 { pt3dadd( 13.4665, 29.7259, 4.18891, 0.29 ) }
    dend_4 { pt3dadd( 13.1409, 30.2577, 4.64755, 0.59 ) }
    dend_4 { pt3dadd( 12.8291, 30.8061, 5.09252, 0.59 ) }
    dend_4 { pt3dadd( 12.3257, 31.8587, 5.82973, 0.44 ) }
    dend_4 { pt3dadd( 12.0808, 32.4893, 6.19197, 0.44 ) }
    dend_4 { pt3dadd( 11.9621, 32.9679, 6.39259, 0.44 ) }
    dend_4 { pt3dadd( 11.8817, 33.6012, 6.58372, 0.81 ) }
    dend_4 { pt3dadd( 11.853, 34.5747, 6.78821, 0.44 ) }
    dend_4 { pt3dadd( 11.9021, 35.5619, 6.9389, 0.44 ) }
    dend_4 { pt3dadd( 11.9913, 36.3469, 7.02122, 0.44 ) }
    dend_4 { pt3dadd( 12.1613, 37.3619, 7.14977, 0.44 ) }
    dend_4 { pt3dadd( 12.3043, 37.9741, 7.2339, 0.95 ) }
    dend_4 { pt3dadd( 12.6371, 39.0248, 7.38932, 0.29 ) }
    dend_4 { pt3dadd( 13.0221, 40.0213, 7.56593, 0.29 ) }
    dend_4 { pt3dadd( 13.3026, 40.6812, 7.67385, 0.88 ) }
    dend_4 { pt3dadd( 13.6552, 41.4501, 7.75436, 0.88 ) }
    dend_4 { pt3dadd( 14.0741, 42.3119, 7.79086, 0.44 ) }
    dend_4 { pt3dadd( 14.5163, 43.1882, 7.76948, 0.44 ) }
    dend_4 { pt3dadd( 14.9074, 43.9464, 7.69126, 0.37 ) }
    dend_4 { pt3dadd( 15.5375, 45.1442, 7.53455, 0.29 ) }
    dend_4 { pt3dadd( 15.9611, 46.0271, 7.43625, 0.29 ) }
    dend_4 { pt3dadd( 16.2224, 46.6449, 7.39478, 0.29 ) }
    dend_4 { pt3dadd( 16.4837, 47.3483, 7.40263, 0.29 ) }
    dend_4 { pt3dadd( 16.6872, 47.9482, 7.45368, 0.29 ) }
    dend_4 { pt3dadd( 16.8999, 48.57, 7.55308, 1.03 ) }
    dend_4 { pt3dadd( 17.3946, 50.1241, 7.94898, 0.22 ) }
    dend_4 { pt3dadd( 17.6362, 50.9845, 8.2398, 0.29 ) }
    dend_4 { pt3dadd( 17.7963, 51.6384, 8.49901, 0.29 ) }
    dend_4 { pt3dadd( 17.9302, 52.2326, 8.76743, 0.29 ) }
    dend_4 { pt3dadd( 18.0816, 52.9255, 9.09714, 0.29 ) }
    dend_4 { pt3dadd( 18.2244, 53.5899, 9.45394, 0.29 ) }
    dend_4 { pt3dadd( 18.322, 54.0807, 9.75594, 0.81 ) }
    dend_4 { pt3dadd( 18.414, 54.6141, 10.0905, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_4 { pt3dadd( 18.4604, 55.0523, 10.3507, 0.59 ) }
    dend_4 { pt3dadd( 18.4947, 55.6203, 10.6847, 0.88 ) }
    dend_4 { pt3dadd( 18.5767, 56.8032, 11.3949, 0.37 ) }
    dend_4 { pt3dadd( 18.6573, 57.4127, 11.7427, 0.37 ) }
    dend_4 { pt3dadd( 18.7163, 57.8321, 11.9645, 0.37 ) }
    dend_4 { pt3dadd( 18.8188, 58.5418, 12.3167, 0.37 ) }
    dend_4 { pt3dadd( 18.8507, 59.0992, 12.5742, 0.22 ) }
    dend_4 { pt3dadd( 19.5617, 67.502, 14.917, 0.22 ) }
    dend_4 { pt3dadd( 21.1608, 75.3098, 18.4815, 0.22 ) }
    dend_4 { pt3dadd( 24.4142, 82.6845, 21.7845, 0.22 ) }
    dend_4 { pt3dadd( 28.0699, 90.2849, 23.9833, 0.22 ) }
    dend_4 { pt3dadd( 32.1607, 97.9701, 24.2839, 0.22 ) }
    dend_4 { pt3dadd( 36.8262, 105.248, 23.4, 0.22 ) }
    dend_4 { pt3dadd( 42.5449, 111.188, 20.8301, 0.22 ) }
    dend_4 { pt3dadd( 47.9796, 117.779, 19.3957, 0.22 ) }
    dend_4 { pt3dadd( 53.0662, 124.548, 17.5456, 0.22 ) }
    dend_4 { pt3dadd( 58.3324, 131.157, 15.648, 0.22 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 17/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 14.3272, 25.6847, 0.932051, 0.44 ) }
    dend_3 { pt3dadd( 13.5888, 26.3958, 1.32686, 0.44 ) }
    dend_3 { pt3dadd( 12.2188, 27.751, 2.17891, 1.18 ) }
    dend_3 { pt3dadd( 11.2838, 28.7852, 2.72483, 0.44 ) }
    dend_3 { pt3dadd( 10.5147, 29.7219, 3.15386, 0.51 ) }
    dend_3 { pt3dadd( 9.69098, 30.8033, 3.61549, 0.51 ) }
    dend_3 { pt3dadd( 9.01583, 31.7949, 4.01994, 0.73 ) }
    dend_3 { pt3dadd( 8.39557, 32.935, 4.44366, 0.66 ) }
    dend_3 { pt3dadd( 7.83432, 34.2889, 4.85771, 0.44 ) }
    dend_3 { pt3dadd( 7.54381, 35.3071, 5.14179, 0.88 ) }
    dend_3 { pt3dadd( 7.45752, 35.8784, 5.31066, 0.88 ) }
    dend_3 { pt3dadd( 7.41116, 37.1283, 5.66732, 0.44 ) }
    dend_3 { pt3dadd( 7.45555, 38.5641, 6.07279, 0.81 ) }
    dend_3 { pt3dadd( 7.53506, 39.6745, 6.41518, 0.29 ) }
    dend_3 { pt3dadd( 7.62599, 40.9951, 6.8423, 0.29 ) }
    dend_3 { pt3dadd( 7.62236, 42.3198, 7.2818, 1.03 ) }
    dend_3 { pt3dadd( 7.4866, 43.8558, 7.77708, 0.44 ) }
    dend_3 { pt3dadd( 7.2192, 45.071, 8.13916, 0.51 ) }
    dend_3 { pt3dadd( 6.85431, 46.0805, 8.40248, 0.51 ) }
    dend_3 { pt3dadd( 6.48538, 46.8898, 8.61981, 0.44 ) }
    dend_3 { pt3dadd( 5.6565, 48.4543, 9.01813, 0.88 ) }
    dend_3 { pt3dadd( 5.32266, 49.0433, 9.16517, 0.59 ) }
    dend_3 { pt3dadd( 4.58064, 50.3774, 9.51656, 0.44 ) }
    dend_3 { pt3dadd( 4.01725, 51.6199, 9.8428, 0.44 ) }
    dend_3 { pt3dadd( 3.66909, 52.6141, 10.0951, 0.66 ) }
    dend_3 { pt3dadd( 3.4441, 53.4598, 10.2982, 0.95 ) }
    dend_3 { pt3dadd( 3.22198, 54.3998, 10.4882, 0.73 ) }
    dend_3 { pt3dadd( 2.96126, 55.2422, 10.6462, 0.88 ) }
    dend_3 { pt3dadd( 2.56634, 56.4963, 10.8749, 0.59 ) }
    dend_3 { pt3dadd( 2.06934, 57.8057, 11.0591, 0.66 ) }
    dend_3 { pt3dadd( 1.51559, 58.9625, 11.1691, 1.03 ) }
    dend_3 { pt3dadd( 0.871256, 60.0036, 11.2629, 0.44 ) }
    dend_3 { pt3dadd( -0.0540693, 61.1618, 11.3602, 0.37 ) }
    dend_3 { pt3dadd( -4.37384, 73.3786, 14.9848, 0.37 ) }
    // Section: apic_17, id: apic_17, parent: apic_3 (entry count 51/100)
    apic_17 { pt3dclear() }
    apic_17 { pt3dadd( -37.9139, -98.0872, -26.2056, 2.13 ) }
    apic_17 { pt3dadd( -38.4434, -98.5354, -25.8874, 1.47 ) }
    apic_17 { pt3dadd( -39.1677, -99.1242, -25.4703, 0.73 ) }
    apic_17 { pt3dadd( -39.7001, -99.5312, -25.1771, 0.88 ) }
    apic_17 { pt3dadd( -40.6611, -100.211, -24.6676, 0.81 ) }
    apic_17 { pt3dadd( -41.0969, -100.488, -24.4438, 0.66 ) }
    apic_17 { pt3dadd( -41.753, -100.844, -24.1167, 0.51 ) }
    apic_17 { pt3dadd( -42.2073, -101.036, -23.8936, 0.51 ) }
    apic_17 { pt3dadd( -42.8684, -101.222, -23.5736, 0.51 ) }
    apic_17 { pt3dadd( -43.4884, -101.332, -23.2705, 0.51 ) }
    apic_17 { pt3dadd( -44.2563, -101.396, -22.8971, 0.51 ) }
    apic_17 { pt3dadd( -45.3621, -101.442, -22.3438, 0.51 ) }
    apic_17 { pt3dadd( -46.3688, -101.472, -21.8315, 0.51 ) }
    apic_17 { pt3dadd( -47.1212, -101.525, -21.4445, 0.51 ) }
    apic_17 { pt3dadd( -47.8417, -101.614, -21.0841, 0.51 ) }
    apic_17 { pt3dadd( -48.606, -101.751, -20.7348, 0.51 ) }
    apic_17 { pt3dadd( -49.1412, -101.886, -20.5191, 0.51 ) }
    apic_17 { pt3dadd( -49.7285, -102.067, -20.3175, 0.59 ) }
    apic_17 { pt3dadd( -50.6915, -102.365, -20.0558, 0.59 ) }
    apic_17 { pt3dadd( -51.2992, -102.525, -19.9429, 0.59 ) }
    apic_17 { pt3dadd( -51.8952, -102.649, -19.8572, 1.1 ) }
    apic_17 { pt3dadd( -52.7252, -102.8, -19.7586, 0.51 ) }
    apic_17 { pt3dadd( -53.6434, -102.927, -19.6657, 0.51 ) }
    apic_17 { pt3dadd( -54.8392, -103.01, -19.5526, 0.51 ) }
    apic_17 { pt3dadd( -55.9452, -103.0, -19.4441, 0.59 ) }
    apic_17 { pt3dadd( -57.0655, -102.963, -19.3041, 0.81 ) }
    // Section: apic_4, id: apic_4, parent: apic_3 (entry count 77/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( -37.9139, -98.0872, -26.2056, 2.13 ) }
    apic_4 { pt3dadd( -37.0326, -99.6048, -26.5016, 1.32 ) }
    apic_4 { pt3dadd( -36.1449, -100.969, -26.7833, 1.32 ) }
    apic_4 { pt3dadd( -35.3122, -102.185, -27.1088, 1.25 ) }
    apic_4 { pt3dadd( -34.4844, -103.329, -27.5115, 1.76 ) }
    apic_4 { pt3dadd( -33.5406, -104.577, -28.0483, 1.4 ) }
    apic_4 { pt3dadd( -32.3427, -106.135, -28.7835, 1.4 ) }
    apic_4 { pt3dadd( -31.6373, -106.997, -29.2597, 1.4 ) }
    apic_4 { pt3dadd( -30.717, -108.141, -29.8911, 1.4 ) }
    apic_4 { pt3dadd( -29.3734, -109.945, -30.8584, 1.4 ) }
    apic_4 { pt3dadd( -28.7141, -110.911, -31.3474, 1.4 ) }
    apic_4 { pt3dadd( -27.7394, -112.439, -32.109, 1.47 ) }
    apic_4 { pt3dadd( -27.029, -113.544, -32.6534, 1.47 ) }
    apic_4 { pt3dadd( -25.9547, -115.159, -33.4038, 1.47 ) }
    apic_4 { pt3dadd( -24.6499, -117.002, -34.1842, 1.47 ) }
    apic_4 { pt3dadd( -23.7245, -118.202, -34.6622, 1.47 ) }
    apic_4 { pt3dadd( -23.0391, -119.005, -34.9747, 1.47 ) }
    apic_4 { pt3dadd( -22.2468, -119.824, -35.3304, 1.47 ) }
    apic_4 { pt3dadd( -21.7712, -120.23, -35.5403, 1.47 ) }
    apic_4 { pt3dadd( -21.1637, -120.616, -35.834, 1.47 ) }
    apic_4 { pt3dadd( -20.4609, -120.899, -36.115, 1.47 ) }
    apic_4 { pt3dadd( -19.5385, -121.17, -36.446, 1.47 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 99/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -28.8656, 53.873, -47.7871, 0.51 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_42 { pt3dadd( -28.9383, 54.133, -47.9449, 0.59 ) }
    dend_42 { pt3dadd( -29.0658, 54.8075, -48.4299, 0.59 ) }
    dend_42 { pt3dadd( -29.1178, 55.4568, -48.9014, 0.59 ) }
    dend_42 { pt3dadd( -29.1143, 56.3317, -49.5069, 0.37 ) }
    dend_42 { pt3dadd( -29.0646, 57.4806, -50.2875, 0.37 ) }
    dend_42 { pt3dadd( -29.0048, 58.3057, -50.8199, 0.51 ) }
    dend_42 { pt3dadd( -28.9383, 59.4218, -51.5193, 0.37 ) }
    dend_42 { pt3dadd( -28.8915, 60.712, -52.3096, 0.37 ) }
    dend_42 { pt3dadd( -28.8378, 61.5236, -52.77, 0.29 ) }
    dend_42 { pt3dadd( -28.802, 62.1434, -53.0562, 0.29 ) }
    dend_42 { pt3dadd( -28.7839, 63.1701, -53.4386, 0.44 ) }
    dend_42 { pt3dadd( -28.8176, 63.9827, -53.641, 0.29 ) }
    dend_42 { pt3dadd( -28.9149, 64.7883, -53.7432, 0.29 ) }
    dend_42 { pt3dadd( -29.168, 66.2849, -53.7854, 0.29 ) }
    dend_42 { pt3dadd( -29.5092, 67.9146, -53.6806, 0.29 ) }
    dend_42 { pt3dadd( -29.6963, 68.6947, -53.554, 0.29 ) }
    dend_42 { pt3dadd( -30.0708, 69.9761, -53.2561, 0.51 ) }
    dend_42 { pt3dadd( -30.373, 70.8787, -53.0122, 1.03 ) }
    dend_42 { pt3dadd( -30.8308, 72.0512, -52.6718, 0.37 ) }
    dend_42 { pt3dadd( -31.3234, 73.0744, -52.3786, 0.29 ) }
    dend_42 { pt3dadd( -31.7301, 73.7987, -52.1933, 0.29 ) }
    dend_42 { pt3dadd( -32.3082, 74.6998, -51.9937, 0.29 ) }
    dend_42 { pt3dadd( -33.0996, 75.6746, -51.9038, 0.51 ) }
    dend_42 { pt3dadd( -33.6797, 76.2999, -51.8867, 0.22 ) }
    dend_42 { pt3dadd( -34.1638, 76.7707, -51.891, 0.22 ) }
    dend_42 { pt3dadd( -34.614, 77.1975, -51.9174, 0.22 ) }
    dend_42 { pt3dadd( -34.9446, 77.5054, -51.9426, 0.44 ) }
    dend_42 { pt3dadd( -36.6403, 79.0348, -52.0185, 0.22 ) }
    dend_42 { pt3dadd( -37.6171, 79.8504, -52.0281, 0.59 ) }
    dend_42 { pt3dadd( -37.7668, 79.9715, -52.0266, 0.66 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -28.8656, 53.873, -47.7871, 0.51 ) }
    dend_41 { pt3dadd( -29.2486, 53.9949, -48.2183, 0.66 ) }
    dend_41 { pt3dadd( -29.6273, 54.0475, -48.6402, 0.66 ) }
    dend_41 { pt3dadd( -30.1025, 54.0646, -49.2098, 0.37 ) }
    dend_41 { pt3dadd( -30.5909, 54.0801, -49.8393, 0.22 ) }
    dend_41 { pt3dadd( -30.9749, 54.1123, -50.3648, 0.66 ) }
    dend_41 { pt3dadd( -31.2882, 54.1777, -50.8514, 0.44 ) }
    dend_41 { pt3dadd( -31.7523, 54.3445, -51.6267, 0.44 ) }
    dend_41 { pt3dadd( -32.0154, 54.5256, -52.1317, 0.66 ) }
    dend_41 { pt3dadd( -32.1436, 54.6895, -52.4697, 0.66 ) }
    dend_41 { pt3dadd( -32.2303, 54.9269, -52.8717, 0.51 ) }
    dend_41 { pt3dadd( -32.311, 55.4831, -53.6355, 0.44 ) }
    dend_41 { pt3dadd( -32.3099, 55.8841, -54.1195, 0.44 ) }
    dend_41 { pt3dadd( -32.2497, 56.376, -54.6721, 0.44 ) }
    dend_41 { pt3dadd( -32.1953, 56.6243, -54.9857, 0.44 ) }
    dend_41 { pt3dadd( -32.0529, 56.9416, -55.6049, 0.44 ) }
    dend_41 { pt3dadd( -31.9894, 56.9896, -55.8381, 0.44 ) }
    dend_41 { pt3dadd( -31.9202, 56.9884, -56.0945, 0.44 ) }
    dend_41 { pt3dadd( -31.8144, 56.9682, -56.6471, 0.51 ) }
    dend_41 { pt3dadd( -31.8083, 56.9286, -57.1726, 0.51 ) }
    dend_41 { pt3dadd( -31.966, 56.8701, -57.7943, 0.51 ) }
    dend_41 { pt3dadd( -32.1779, 56.8046, -58.2551, 0.51 ) }
    dend_41 { pt3dadd( -32.4438, 56.7004, -58.7105, 0.51 ) }
    dend_41 { pt3dadd( -33.1787, 56.4058, -59.7415, 0.29 ) }
    dend_41 { pt3dadd( -33.5561, 56.278, -60.1692, 0.29 ) }
    dend_41 { pt3dadd( -33.848, 56.2031, -60.4605, 0.29 ) }
    dend_41 { pt3dadd( -34.1727, 56.1177, -60.7877, 0.29 ) }
    dend_41 { pt3dadd( -34.614, 55.9643, -61.3333, 0.29 ) }
    dend_41 { pt3dadd( -34.7218, 55.9144, -61.5286, 0.29 ) }
    dend_41 { pt3dadd( -34.9066, 55.8101, -62.1123, 0.29 ) }
    dend_41 { pt3dadd( -35.0371, 55.7776, -62.6009, 0.29 ) }
    dend_41 { pt3dadd( -35.2406, 55.7822, -63.3134, 0.51 ) }
    dend_41 { pt3dadd( -35.4367, 55.8002, -63.8446, 0.51 ) }
    dend_41 { pt3dadd( -35.6881, 55.8207, -64.4298, 0.51 ) }
    dend_41 { pt3dadd( -35.863, 55.822, -64.7877, 0.51 ) }
    dend_41 { pt3dadd( -36.0837, 55.8036, -65.179, 1.03 ) }
    dend_41 { pt3dadd( -36.328, 55.7572, -65.5095, 0.73 ) }
    dend_41 { pt3dadd( -36.9414, 55.6277, -66.178, 0.22 ) }
    dend_41 { pt3dadd( -37.156, 55.5836, -66.3896, 0.22 ) }
    dend_41 { pt3dadd( -37.545, 55.5037, -66.7623, 0.22 ) }
    dend_41 { pt3dadd( -37.7477, 55.4654, -66.9509, 0.22 ) }
    dend_41 { pt3dadd( -38.2061, 55.38, -67.3703, 0.66 ) }
    dend_41 { pt3dadd( -38.7627, 55.265, -67.8583, 0.22 ) }
    dend_41 { pt3dadd( -39.0062, 55.2186, -68.0479, 0.22 ) }
    dend_41 { pt3dadd( -39.2693, 55.1923, -68.1769, 0.22 ) }
    dend_41 { pt3dadd( -39.7885, 55.1878, -68.4055, 0.22 ) }
    dend_41 { pt3dadd( -40.1799, 55.2235, -68.5817, 0.22 ) }
    dend_41 { pt3dadd( -40.6592, 55.3086, -68.7992, 0.22 ) }
    dend_41 { pt3dadd( -41.3018, 55.432, -69.0713, 0.22 ) }
    dend_41 { pt3dadd( -42.6963, 55.6744, -69.6571, 0.22 ) }
    dend_41 { pt3dadd( -43.6918, 55.8557, -70.1072, 0.22 ) }
    dend_41 { pt3dadd( -44.1729, 55.9543, -70.3441, 0.22 ) }
    dend_41 { pt3dadd( -44.3982, 55.9989, -70.462, 0.44 ) }
    dend_41 { pt3dadd( -44.6883, 56.0532, -70.665, 0.15 ) }
    dend_41 { pt3dadd( -45.0163, 56.1183, -70.9915, 0.81 ) }
    dend_41 { pt3dadd( -45.4284, 56.2411, -71.5699, 0.22 ) }
    dend_41 { pt3dadd( -45.6218, 56.3387, -71.9254, 0.22 ) }
    dend_41 { pt3dadd( -45.9969, 56.5574, -72.6892, 0.81 ) }
    dend_41 { pt3dadd( -46.516, 56.935, -73.8949, 0.37 ) }
    dend_41 { pt3dadd( -46.7586, 57.1775, -74.563, 0.07 ) }
    dend_41 { pt3dadd( -46.9182, 57.4074, -75.1195, 0.88 ) }
    dend_41 { pt3dadd( -47.1432, 57.9387, -76.2933, 0.29 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 92/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 2.84969, -24.1397, 29.6087, 1.03 ) }
    dend_29 { pt3dadd( 7.6406, -29.4325, 34.3114, 0.73 ) }
    dend_29 { pt3dadd( 19.0488, -37.9267, 43.6824, 0.73 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 95/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.84969, -24.1397, 29.6087, 1.03 ) }
    dend_28 { pt3dadd( 8.67551, -31.6297, 35.1924, 0.73 ) }
    dend_28 { pt3dadd( 13.5624, -40.0374, 40.4194, 0.73 ) }
    dend_28 { pt3dadd( 17.281, -48.9491, 45.8108, 0.73 ) }
    dend_28 { pt3dadd( 20.6339, -58.7337, 49.8341, 0.73 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_28 { pt3dadd( 23.642, -68.7461, 53.5916, 0.73 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 1/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -23.8752, -17.842, 14.8638, 1.1 ) }
    dend_26 { pt3dadd( -26.8276, -28.565, 17.8566, 0.44 ) }
    dend_26 { pt3dadd( -30.9655, -38.5099, 21.8365, 0.44 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 4/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -23.8752, -17.842, 14.8638, 1.1 ) }
    dend_25 { pt3dadd( -25.7737, -27.2562, 19.7333, 0.44 ) }
    dend_25 { pt3dadd( -27.1456, -36.3482, 25.3147, 0.44 ) }
    dend_25 { pt3dadd( -30.7949, -45.154, 30.2611, 0.44 ) }
    dend_25 { pt3dadd( -36.1058, -53.3605, 34.6432, 0.44 ) }
    dend_25 { pt3dadd( -39.7734, -61.7219, 40.2656, 0.44 ) }
    // Section: apic_19, id: apic_19, parent: apic_17 (entry count 10/100)
    apic_19 { pt3dclear() }
    apic_19 { pt3dadd( -57.0655, -102.963, -19.3041, 0.81 ) }
    apic_19 { pt3dadd( -57.4828, -102.603, -18.3369, 0.51 ) }
    apic_19 { pt3dadd( -57.7433, -102.432, -17.7842, 0.51 ) }
    apic_19 { pt3dadd( -57.9633, -102.308, -17.2976, 0.51 ) }
    apic_19 { pt3dadd( -58.3326, -102.138, -16.3627, 0.73 ) }
    apic_19 { pt3dadd( -58.5889, -102.046, -15.742, 0.81 ) }
    apic_19 { pt3dadd( -59.044, -101.923, -14.6628, 0.81 ) }
    apic_19 { pt3dadd( -59.5671, -101.779, -13.5231, 0.81 ) }
    apic_19 { pt3dadd( -59.8817, -101.705, -12.9447, 0.81 ) }
    apic_19 { pt3dadd( -60.8133, -101.488, -11.4718, 0.81 ) }
    apic_19 { pt3dadd( -61.3443, -101.374, -10.7551, 0.66 ) }
    apic_19 { pt3dadd( -62.3574, -101.18, -9.51984, 0.37 ) }
    apic_19 { pt3dadd( -63.0621, -101.073, -8.72448, 0.37 ) }
    apic_19 { pt3dadd( -64.2688, -100.955, -7.44295, 0.37 ) }
    apic_19 { pt3dadd( -65.392, -100.886, -6.28446, 0.81 ) }
    apic_19 { pt3dadd( -66.0015, -100.875, -5.67776, 0.44 ) }
    apic_19 { pt3dadd( -66.4908, -100.904, -5.14775, 0.44 ) }
    apic_19 { pt3dadd( -67.0678, -101.036, -4.48959, 0.44 ) }
    apic_19 { pt3dadd( -67.7053, -101.336, -3.62945, 0.51 ) }
    apic_19 { pt3dadd( -68.295, -101.705, -2.8609, 0.51 ) }
    apic_19 { pt3dadd( -68.6966, -101.956, -2.44596, 0.51 ) }
    apic_19 { pt3dadd( -69.2877, -102.264, -1.93841, 0.51 ) }
    apic_19 { pt3dadd( -69.8814, -102.515, -1.51006, 0.29 ) }
    apic_19 { pt3dadd( -70.6694, -102.824, -0.926235, 0.51 ) }
    apic_19 { pt3dadd( -71.8862, -103.302, -0.0509506, 0.29 ) }
    apic_19 { pt3dadd( -72.5069, -103.564, 0.407439, 0.29 ) }
    apic_19 { pt3dadd( -73.3884, -103.938, 1.13267, 0.44 ) }
    apic_19 { pt3dadd( -74.0114, -104.178, 1.67972, 0.44 ) }
    apic_19 { pt3dadd( -75.3092, -104.598, 2.8605, 0.44 ) }
    apic_19 { pt3dadd( -76.2521, -104.875, 3.73695, 0.44 ) }
    apic_19 { pt3dadd( -77.4619, -105.182, 4.88195, 0.44 ) }
    apic_19 { pt3dadd( -78.3141, -105.374, 5.6344, 0.59 ) }
    apic_19 { pt3dadd( -79.2127, -105.583, 6.36344, 0.44 ) }
    apic_19 { pt3dadd( -80.0272, -105.792, 6.97426, 0.44 ) }
    apic_19 { pt3dadd( -80.5517, -105.946, 7.32901, 0.44 ) }
    apic_19 { pt3dadd( -81.2026, -106.164, 7.86811, 0.73 ) }
    apic_19 { pt3dadd( -82.1589, -106.535, 8.77861, 0.51 ) }
    apic_19 { pt3dadd( -82.8723, -106.869, 9.55857, 0.37 ) }
    apic_19 { pt3dadd( -83.2256, -107.1, 10.0013, 0.59 ) }
    apic_19 { pt3dadd( -83.9498, -107.716, 11.052, 0.29 ) }
    apic_19 { pt3dadd( -85.2267, -108.92, 12.9157, 0.29 ) }
    apic_19 { pt3dadd( -85.5789, -109.245, 13.3981, 0.29 ) }
    apic_19 { pt3dadd( -85.9496, -109.546, 13.8251, 0.29 ) }
    apic_19 { pt3dadd( -87.0916, -110.42, 14.7136, 0.29 ) }
    apic_19 { pt3dadd( -87.8107, -110.962, 15.0445, 0.37 ) }
    apic_19 { pt3dadd( -88.7784, -111.72, 15.314, 0.37 ) }
    apic_19 { pt3dadd( -89.631, -112.346, 15.4857, 0.37 ) }
    apic_19 { pt3dadd( -90.0139, -112.598, 15.5876, 0.37 ) }
    apic_19 { pt3dadd( -90.7669, -113.066, 15.8255, 0.22 ) }
    apic_19 { pt3dadd( -91.6849, -113.649, 16.2036, 0.59 ) }
    apic_19 { pt3dadd( -92.9392, -114.506, 16.7749, 1.03 ) }
    apic_19 { pt3dadd( -94.0669, -115.323, 17.3728, 0.22 ) }
    apic_19 { pt3dadd( -94.8184, -115.921, 17.8342, 0.22 ) }
    apic_19 { pt3dadd( -95.4079, -116.419, 18.2453, 0.22 ) }
    apic_19 { pt3dadd( -96.3149, -117.225, 18.9592, 0.66 ) }
    apic_19 { pt3dadd( -96.6128, -117.516, 19.2304, 0.37 ) }
    apic_19 { pt3dadd( -96.8638, -117.78, 19.4965, 0.73 ) }
    apic_19 { pt3dadd( -97.521, -118.515, 20.3694, 0.44 ) }
    apic_19 { pt3dadd( -97.8262, -118.816, 20.7792, 0.44 ) }
    apic_19 { pt3dadd( -98.1673, -119.088, 21.1795, 0.66 ) }
    apic_19 { pt3dadd( -98.6907, -119.554, 21.7212, 0.66 ) }
    apic_19 { pt3dadd( -99.1642, -120.045, 22.1739, 0.66 ) }
    apic_19 { pt3dadd( -99.6367, -120.546, 22.5735, 0.37 ) }
    apic_19 { pt3dadd( -100.069, -120.972, 22.8618, 0.37 ) }
    apic_19 { pt3dadd( -100.935, -121.801, 23.3624, 0.73 ) }
    apic_19 { pt3dadd( -102.058, -122.921, 24.0093, 0.51 ) }
    apic_19 { pt3dadd( -103.128, -124.115, 24.6437, 0.51 ) }
    apic_19 { pt3dadd( -103.976, -125.134, 25.2105, 0.51 ) }
    apic_19 { pt3dadd( -104.731, -126.054, 25.7525, 0.51 ) }
    apic_19 { pt3dadd( -105.413, -126.819, 26.24, 0.29 ) }
    apic_19 { pt3dadd( -106.453, -127.843, 26.9966, 0.44 ) }
    apic_19 { pt3dadd( -107.076, -128.371, 27.4754, 0.44 ) }
    apic_19 { pt3dadd( -107.874, -129.037, 28.1746, 0.44 ) }
    apic_19 { pt3dadd( -108.349, -129.439, 28.6665, 0.73 ) }
    apic_19 { pt3dadd( -109.089, -130.042, 29.4849, 0.95 ) }
    apic_19 { pt3dadd( -109.941, -130.666, 30.3741, 0.44 ) }
    apic_19 { pt3dadd( -110.62, -131.124, 31.0049, 0.44 ) }
    apic_19 { pt3dadd( -111.448, -131.699, 31.722, 0.44 ) }
    apic_19 { pt3dadd( -112.293, -132.452, 32.4524, 0.59 ) }
    apic_19 { pt3dadd( -112.893, -133.177, 33.0498, 0.44 ) }
    apic_19 { pt3dadd( -113.223, -133.696, 33.4368, 0.44 ) }
    apic_19 { pt3dadd( -113.478, -134.19, 33.7467, 0.44 ) }
    apic_19 { pt3dadd( -113.79, -134.896, 34.1607, 0.44 ) }
    apic_19 { pt3dadd( -114.239, -136.169, 34.8816, 0.51 ) }
    apic_19 { pt3dadd( -114.455, -137.176, 35.468, 0.51 ) }
    apic_19 { pt3dadd( -114.516, -137.828, 35.9528, 0.51 ) }
    apic_19 { pt3dadd( -114.64, -137.645, 36.498, 0.51 ) }
    apic_19 { pt3dadd( -114.847, -137.241, 37.0757, 0.51 ) }
    apic_19 { pt3dadd( -115.034, -136.896, 37.4887, 0.51 ) }
    apic_19 { pt3dadd( -115.647, -135.908, 38.5019, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    apic_19 { pt3dadd( -116.134, -135.177, 39.2274, 0.37 ) }
    apic_19 { pt3dadd( -116.579, -134.609, 39.9405, 0.22 ) }
    apic_19 { pt3dadd( -116.917, -134.276, 40.4812, 0.22 ) }
    apic_19 { pt3dadd( -117.153, -134.107, 40.8402, 0.22 ) }
    apic_19 { pt3dadd( -117.708, -133.822, 41.6654, 0.22 ) }
    apic_19 { pt3dadd( -118.429, -133.569, 42.7158, 0.88 ) }
    apic_19 { pt3dadd( -119.691, -133.258, 44.5666, 0.44 ) }
    apic_19 { pt3dadd( -120.193, -133.125, 45.2973, 0.44 ) }
    apic_19 { pt3dadd( -120.43, -133.034, 45.6371, 0.44 ) }
    apic_19 { pt3dadd( -120.726, -132.87, 46.0356, 0.44 ) }
    apic_19 { pt3dadd( -120.96, -132.723, 46.3192, 0.59 ) }
    apic_19 { pt3dadd( -121.617, -132.332, 46.9395, 0.37 ) }
    apic_19 { pt3dadd( -122.478, -131.705, 47.6509, 0.29 ) }
    apic_19 { pt3dadd( -123.203, -131.094, 48.277, 0.37 ) }
    apic_19 { pt3dadd( -124.102, -130.291, 49.08, 0.37 ) }
    apic_19 { pt3dadd( -124.701, -129.755, 49.6213, 0.29 ) }
    apic_19 { pt3dadd( -125.35, -129.232, 50.2131, 0.15 ) }
    apic_19 { pt3dadd( -131.789, -123.453, 56.482, 0.15 ) }
    apic_19 { pt3dadd( -138.295, -117.246, 62.275, 0.15 ) }
    apic_19 { pt3dadd( -144.867, -110.002, 66.687, 0.15 ) }
    apic_19 { pt3dadd( -150.539, -101.108, 68.9562, 0.15 ) }
    apic_19 { pt3dadd( -155.004, -91.2469, 69.3159, 0.15 ) }
    apic_19 { pt3dadd( -159.853, -81.8212, 71.4443, 0.15 ) }
    apic_19 { pt3dadd( -166.977, -74.181, 73.9592, 0.15 ) }
    apic_19 { pt3dadd( -173.301, -66.3433, 77.7203, 0.15 ) }
    apic_19 { pt3dadd( -180.284, -58.8286, 80.9027, 0.15 ) }
    apic_19 { pt3dadd( -186.358, -50.8187, 84.7286, 0.15 ) }
    // Section: apic_18, id: apic_18, parent: apic_17 (entry count 27/100)
    apic_18 { pt3dclear() }
    apic_18 { pt3dadd( -57.0655, -102.963, -19.3041, 0.81 ) }
    apic_18 { pt3dadd( -58.2775, -103.599, -19.3155, 0.59 ) }
    apic_18 { pt3dadd( -59.9979, -104.395, -19.238, 0.51 ) }
    apic_18 { pt3dadd( -61.6528, -105.076, -19.0398, 0.44 ) }
    apic_18 { pt3dadd( -63.5608, -105.821, -18.7242, 0.44 ) }
    apic_18 { pt3dadd( -64.6572, -106.223, -18.5091, 0.44 ) }
    apic_18 { pt3dadd( -65.7448, -106.591, -18.262, 0.44 ) }
    apic_18 { pt3dadd( -67.8235, -107.213, -17.6499, 0.51 ) }
    apic_18 { pt3dadd( -69.8043, -107.743, -16.9924, 0.37 ) }
    apic_18 { pt3dadd( -70.5962, -107.937, -16.7322, 0.37 ) }
    apic_18 { pt3dadd( -72.1051, -108.306, -16.2524, 0.22 ) }
    apic_18 { pt3dadd( -74.5355, -109.011, -15.5366, 0.37 ) }
    apic_18 { pt3dadd( -75.7134, -109.408, -15.2592, 0.37 ) }
    apic_18 { pt3dadd( -76.3902, -109.669, -15.1365, 0.73 ) }
    apic_18 { pt3dadd( -77.9384, -110.317, -14.9307, 0.44 ) }
    apic_18 { pt3dadd( -78.9259, -110.734, -14.8341, 0.44 ) }
    apic_18 { pt3dadd( -80.4245, -111.401, -14.6917, 1.1 ) }
    apic_18 { pt3dadd( -81.8619, -112.07, -14.5107, 0.44 ) }
    apic_18 { pt3dadd( -82.6445, -112.415, -14.3878, 0.44 ) }
    apic_18 { pt3dadd( -83.2189, -112.649, -14.2675, 0.59 ) }
    apic_18 { pt3dadd( -84.3555, -113.065, -13.9655, 0.51 ) }
    apic_18 { pt3dadd( -85.5357, -113.472, -13.6097, 0.44 ) }
    apic_18 { pt3dadd( -86.8025, -113.917, -13.1851, 0.44 ) }
    apic_18 { pt3dadd( -88.0408, -114.423, -12.758, 0.95 ) }
    apic_18 { pt3dadd( -88.8672, -114.79, -12.4848, 0.59 ) }
    apic_18 { pt3dadd( -89.4195, -115.044, -12.3065, 0.59 ) }
    apic_18 { pt3dadd( -90.0828, -115.368, -12.0955, 0.37 ) }
    apic_18 { pt3dadd( -91.1339, -115.892, -11.8298, 0.59 ) }
    apic_18 { pt3dadd( -92.1622, -116.403, -11.6098, 0.73 ) }
    apic_18 { pt3dadd( -93.76, -117.168, -11.2845, 0.81 ) }
    apic_18 { pt3dadd( -94.5428, -117.538, -11.1468, 0.81 ) }
    apic_18 { pt3dadd( -96.1984, -118.329, -10.8343, 0.51 ) }
    apic_18 { pt3dadd( -97.9801, -119.178, -10.4833, 0.51 ) }
    apic_18 { pt3dadd( -98.8206, -119.603, -10.3108, 0.37 ) }
    apic_18 { pt3dadd( -100.16, -120.349, -10.0029, 0.37 ) }
    apic_18 { pt3dadd( -100.665, -120.658, -9.87211, 0.37 ) }
    apic_18 { pt3dadd( -101.914, -121.463, -9.49075, 0.81 ) }
    apic_18 { pt3dadd( -102.692, -121.986, -9.19234, 0.51 ) }
    apic_18 { pt3dadd( -103.397, -122.491, -8.87645, 0.37 ) }
    apic_18 { pt3dadd( -104.223, -123.111, -8.48735, 0.37 ) }
    apic_18 { pt3dadd( -105.158, -123.798, -8.06117, 0.37 ) }
    apic_18 { pt3dadd( -106.078, -124.415, -7.67883, 0.51 ) }
    apic_18 { pt3dadd( -107.475, -125.322, -7.16351, 0.59 ) }
    apic_18 { pt3dadd( -108.602, -126.04, -6.73843, 0.29 ) }
    apic_18 { pt3dadd( -109.425, -126.558, -6.42907, 0.66 ) }
    apic_18 { pt3dadd( -110.411, -127.155, -6.05977, 0.81 ) }
    apic_18 { pt3dadd( -111.118, -127.562, -5.79127, 0.51 ) }
    apic_18 { pt3dadd( -112.706, -128.404, -5.16128, 0.37 ) }
    apic_18 { pt3dadd( -113.757, -128.918, -4.73691, 0.37 ) }
    apic_18 { pt3dadd( -114.762, -129.363, -4.32118, 0.37 ) }
    apic_18 { pt3dadd( -116.185, -129.972, -3.78055, 0.44 ) }
    apic_18 { pt3dadd( -117.25, -130.413, -3.43339, 0.51 ) }
    apic_18 { pt3dadd( -118.153, -130.76, -3.18934, 0.51 ) }
    apic_18 { pt3dadd( -118.975, -131.037, -3.0187, 0.88 ) }
    apic_18 { pt3dadd( -120.409, -131.485, -2.84188, 0.44 ) }
    apic_18 { pt3dadd( -121.64, -131.854, -2.70155, 0.51 ) }
    apic_18 { pt3dadd( -122.603, -132.153, -2.56908, 0.73 ) }
    apic_18 { pt3dadd( -123.276, -132.355, -2.43786, 0.73 ) }
    apic_18 { pt3dadd( -123.719, -132.478, -2.33117, 0.44 ) }
    apic_18 { pt3dadd( -124.704, -132.721, -1.95023, 0.44 ) }
    apic_18 { pt3dadd( -126.184, -133.065, -1.23823, 0.51 ) }
    apic_18 { pt3dadd( -127.149, -133.3, -0.712628, 0.95 ) }
    apic_18 { pt3dadd( -128.007, -133.52, -0.249867, 0.59 ) }
    apic_18 { pt3dadd( -128.844, -133.748, 0.113251, 0.59 ) }
    apic_18 { pt3dadd( -130.059, -134.098, 0.47756, 0.81 ) }
    apic_18 { pt3dadd( -130.951, -134.359, 0.612751, 1.03 ) }
    apic_18 { pt3dadd( -132.073, -134.679, 0.61806, 0.59 ) }
    apic_18 { pt3dadd( -132.563, -134.82, 0.585203, 0.59 ) }
    apic_18 { pt3dadd( -133.749, -135.182, 0.47157, 0.29 ) }
    apic_18 { pt3dadd( -134.679, -135.476, 0.345244, 0.59 ) }
    apic_18 { pt3dadd( -136.107, -135.902, 0.0722914, 0.66 ) }
    apic_18 { pt3dadd( -136.634, -136.045, -0.0323, 0.66 ) }
    apic_18 { pt3dadd( -137.052, -136.159, -0.125558, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    apic_18 { pt3dadd( -137.897, -136.426, -0.306225, 0.66 ) }
    apic_18 { pt3dadd( -139.175, -136.898, -0.563993, 0.44 ) }
    apic_18 { pt3dadd( -140.531, -137.486, -0.814362, 0.44 ) }
    apic_18 { pt3dadd( -141.473, -137.973, -0.978283, 0.59 ) }
    apic_18 { pt3dadd( -142.424, -138.504, -1.08494, 0.73 ) }
    apic_18 { pt3dadd( -143.343, -139.028, -1.11046, 0.66 ) }
    apic_18 { pt3dadd( -143.862, -139.339, -1.0643, 0.73 ) }
    apic_18 { pt3dadd( -144.781, -139.938, -0.842103, 0.51 ) }
    apic_18 { pt3dadd( -145.58, -140.484, -0.546825, 0.51 ) }
    apic_18 { pt3dadd( -146.374, -141.008, -0.186362, 0.37 ) }
    apic_18 { pt3dadd( -147.223, -141.521, 0.253994, 0.37 ) }
    apic_18 { pt3dadd( -147.741, -141.807, 0.52988, 1.1 ) }
    apic_18 { pt3dadd( -148.245, -142.083, 0.797251, 1.1 ) }
    apic_18 { pt3dadd( -148.856, -142.42, 1.0945, 0.51 ) }
    apic_18 { pt3dadd( -149.703, -142.907, 1.47495, 0.37 ) }
    apic_18 { pt3dadd( -150.706, -143.526, 1.8599, 1.1 ) }
    apic_18 { pt3dadd( -151.207, -143.816, 2.03677, 0.88 ) }
    apic_18 { pt3dadd( -151.881, -144.182, 2.24771, 0.66 ) }
    apic_18 { pt3dadd( -152.836, -144.679, 2.50551, 0.37 ) }
    apic_18 { pt3dadd( -153.733, -145.127, 2.71689, 0.37 ) }
    apic_18 { pt3dadd( -154.69, -145.578, 2.91397, 0.37 ) }
    apic_18 { pt3dadd( -156.585, -146.464, 3.24832, 0.37 ) }
    apic_18 { pt3dadd( -157.858, -147.073, 3.45102, 0.37 ) }
    apic_18 { pt3dadd( -158.704, -147.474, 3.57629, 0.51 ) }
    apic_18 { pt3dadd( -159.434, -147.821, 3.67923, 0.51 ) }
    apic_18 { pt3dadd( -159.817, -148.006, 3.72555, 0.51 ) }
    apic_18 { pt3dadd( -160.618, -148.408, 3.824, 0.22 ) }
    apic_18 { pt3dadd( -161.976, -149.129, 4.00042, 0.29 ) }
    apic_18 { pt3dadd( -162.781, -149.545, 4.13541, 0.51 ) }
    apic_18 { pt3dadd( -163.605, -149.957, 4.28473, 0.51 ) }
    apic_18 { pt3dadd( -164.417, -150.358, 4.42446, 0.07 ) }
    apic_18 { pt3dadd( -164.991, -150.649, 4.50703, 0.07 ) }
    apic_18 { pt3dadd( -165.19, -150.752, 4.52604, 0.66 ) }
    apic_18 { pt3dadd( -165.998, -151.168, 4.58022, 0.07 ) }
    apic_18 { pt3dadd( -167.042, -151.71, 4.62851, 0.81 ) }
    apic_18 { pt3dadd( -167.637, -152.016, 4.63751, 1.32 ) }
    apic_18 { pt3dadd( -169.52, -152.975, 4.63495, 0.29 ) }
    apic_18 { pt3dadd( -170.958, -153.688, 4.60865, 0.07 ) }
    apic_18 { pt3dadd( -171.604, -153.986, 4.60114, 0.07 ) }
    apic_18 { pt3dadd( -172.345, -154.302, 4.59215, 0.59 ) }
    apic_18 { pt3dadd( -173.256, -154.661, 4.58275, 0.22 ) }
    apic_18 { pt3dadd( -173.824, -154.869, 4.57569, 1.54 ) }
    apic_18 { pt3dadd( -175.496, -155.453, 4.54323, 0.22 ) }
    apic_18 { pt3dadd( -177.128, -155.963, 4.50099, 0.15 ) }
    apic_18 { pt3dadd( -177.955, -156.201, 4.47698, 0.29 ) }
    apic_18 { pt3dadd( -179.736, -156.681, 4.44151, 0.29 ) }
    apic_18 { pt3dadd( -180.533, -156.877, 4.44082, 0.37 ) }
    apic_18 { pt3dadd( -181.924, -157.188, 4.44988, 2.64 ) }
    apic_18 { pt3dadd( -183.649, -157.544, 4.52249, 0.59 ) }
    apic_18 { pt3dadd( -184.692, -157.737, 4.60713, 0.44 ) }
    apic_18 { pt3dadd( -185.738, -157.918, 4.7588, 0.44 ) }
    apic_18 { pt3dadd( -186.177, -157.99, 4.85004, 0.44 ) }
    apic_18 { pt3dadd( -186.416, -158.029, 4.91097, 0.66 ) }
    apic_18 { pt3dadd( -187.487, -158.241, 5.2383, 0.51 ) }
    apic_18 { pt3dadd( -188.516, -158.516, 5.59489, 0.37 ) }
    apic_18 { pt3dadd( -189.441, -158.776, 5.91367, 0.37 ) }
    apic_18 { pt3dadd( -190.438, -159.063, 6.2538, 0.66 ) }
    apic_18 { pt3dadd( -190.827, -159.183, 6.38308, 0.88 ) }
    apic_18 { pt3dadd( -191.894, -159.55, 6.72655, 0.51 ) }
    apic_18 { pt3dadd( -193.42, -160.14, 7.1535, 0.15 ) }
    apic_18 { pt3dadd( -194.75, -160.723, 7.50273, 0.15 ) }
    apic_18 { pt3dadd( -195.31, -160.998, 7.65518, 0.15 ) }
    apic_18 { pt3dadd( -195.712, -161.221, 7.76722, 0.15 ) }
    apic_18 { pt3dadd( -196.546, -161.738, 7.9956, 0.44 ) }
    apic_18 { pt3dadd( -197.721, -162.518, 8.34265, 0.15 ) }
    apic_18 { pt3dadd( -198.578, -163.131, 8.60622, 1.32 ) }
    apic_18 { pt3dadd( -199.691, -163.948, 8.97875, 0.59 ) }
    apic_18 { pt3dadd( -200.899, -164.821, 9.40564, 0.15 ) }
    apic_18 { pt3dadd( -201.453, -165.213, 9.61249, 0.59 ) }
    apic_18 { pt3dadd( -202.591, -166.004, 10.0534, 0.15 ) }
    apic_18 { pt3dadd( -202.978, -166.279, 10.1959, 0.44 ) }
    apic_18 { pt3dadd( -203.703, -166.804, 10.4112, 0.07 ) }
    apic_18 { pt3dadd( -204.416, -167.314, 10.5523, 0.07 ) }
    apic_18 { pt3dadd( -205.022, -167.752, 10.6321, 0.07 ) }
    apic_18 { pt3dadd( -205.544, -168.14, 10.6589, 1.03 ) }
    apic_18 { pt3dadd( -206.611, -169.032, 10.6271, 0.22 ) }
    apic_18 { pt3dadd( -207.288, -169.671, 10.6186, 0.15 ) }
    apic_18 { pt3dadd( -207.832, -170.225, 10.6058, 0.15 ) }
    apic_18 { pt3dadd( -208.4, -170.825, 10.5958, 0.15 ) }
    apic_18 { pt3dadd( -209.062, -171.473, 10.6221, 0.15 ) }
    apic_18 { pt3dadd( -209.881, -172.239, 10.6803, 0.15 ) }
    apic_18 { pt3dadd( -210.73, -172.971, 10.7326, 0.15 ) }
    apic_18 { pt3dadd( -211.357, -173.49, 10.8024, 0.95 ) }
    apic_18 { pt3dadd( -211.639, -173.711, 10.8611, 1.18 ) }
    apic_18 { pt3dadd( -213.319, -174.92, 11.3654, 0.15 ) }
    apic_18 { pt3dadd( -213.83, -175.262, 11.5553, 0.66 ) }
    apic_18 { pt3dadd( -214.554, -175.692, 11.8394, 0.66 ) }
    apic_18 { pt3dadd( -215.798, -176.389, 12.3469, 0.22 ) }
    apic_18 { pt3dadd( -216.777, -176.942, 12.8116, 0.22 ) }
    apic_18 { pt3dadd( -217.604, -177.419, 13.2512, 0.44 ) }
    apic_18 { pt3dadd( -218.55, -177.979, 13.8657, 0.59 ) }
    apic_18 { pt3dadd( -219.421, -178.481, 14.5206, 0.22 ) }
    apic_18 { pt3dadd( -219.941, -178.774, 14.9428, 0.59 ) }
    apic_18 { pt3dadd( -220.622, -179.144, 15.504, 0.59 ) }
    apic_18 { pt3dadd( -221.27, -179.536, 16.1449, 0.51 ) }
    apic_18 { pt3dadd( -222.032, -180.038, 17.1394, 0.29 ) }
    apic_18 { pt3dadd( -222.643, -180.464, 18.1128, 0.29 ) }
    apic_18 { pt3dadd( -222.817, -180.593, 18.4314, 0.29 ) }
    apic_18 { pt3dadd( -223.207, -180.87, 19.1939, 0.44 ) }
    apic_18 { pt3dadd( -223.925, -181.397, 20.6849, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    apic_18 { pt3dadd( -224.598, -181.955, 22.1805, 0.44 ) }
    apic_18 { pt3dadd( -224.867, -182.205, 22.8073, 0.44 ) }
    apic_18 { pt3dadd( -225.101, -182.423, 23.3743, 0.44 ) }
    apic_18 { pt3dadd( -225.398, -182.693, 24.0876, 0.37 ) }
    apic_18 { pt3dadd( -225.647, -182.909, 24.6473, 0.29 ) }
    apic_18 { pt3dadd( -226.094, -183.324, 25.5656, 0.29 ) }
    apic_18 { pt3dadd( -226.333, -183.695, 26.1074, 0.29 ) }
    apic_18 { pt3dadd( -226.498, -184.176, 26.6808, 0.22 ) }
    apic_18 { pt3dadd( -226.541, -184.476, 26.9669, 0.22 ) }
    apic_18 { pt3dadd( -226.555, -184.886, 27.2812, 0.22 ) }
    apic_18 { pt3dadd( -226.564, -185.259, 27.5415, 0.22 ) }
    apic_18 { pt3dadd( -226.613, -185.865, 27.7625, 0.22 ) }
    apic_18 { pt3dadd( -226.638, -186.107, 27.8563, 0.22 ) }
    apic_18 { pt3dadd( -226.684, -186.295, 27.9476, 0.22 ) }
    apic_18 { pt3dadd( -226.827, -186.534, 28.1062, 0.22 ) }
    apic_18 { pt3dadd( -227.055, -186.775, 28.3318, 0.22 ) }
    apic_18 { pt3dadd( -227.648, -187.267, 28.866, 0.22 ) }
    apic_18 { pt3dadd( -228.538, -187.9, 29.632, 1.98 ) }
    apic_18 { pt3dadd( -229.107, -188.305, 30.1371, 1.98 ) }
    apic_18 { pt3dadd( -230.059, -189.019, 30.9932, 1.18 ) }
    apic_18 { pt3dadd( -230.815, -189.601, 31.6628, 0.44 ) }
    apic_18 { pt3dadd( -231.17, -189.867, 31.9605, 0.44 ) }
    apic_18 { pt3dadd( -231.883, -190.376, 32.526, 0.44 ) }
    apic_18 { pt3dadd( -232.91, -191.102, 33.2291, 0.15 ) }
    apic_18 { pt3dadd( -233.454, -191.53, 33.597, 0.15 ) }
    apic_18 { pt3dadd( -233.91, -191.954, 33.9335, 0.15 ) }
    apic_18 { pt3dadd( -234.514, -192.602, 34.3872, 0.15 ) }
    apic_18 { pt3dadd( -234.744, -192.843, 34.5631, 0.66 ) }
    apic_18 { pt3dadd( -235.247, -193.339, 34.9644, 0.51 ) }
    apic_18 { pt3dadd( -235.9, -193.982, 35.5271, 0.37 ) }
    apic_18 { pt3dadd( -236.59, -194.699, 36.1814, 0.37 ) }
    apic_18 { pt3dadd( -236.962, -195.107, 36.5637, 1.03 ) }
    apic_18 { pt3dadd( -237.562, -195.777, 37.2306, 0.66 ) }
    apic_18 { pt3dadd( -238.124, -196.331, 37.8524, 0.37 ) }
    apic_18 { pt3dadd( -238.722, -196.795, 38.5546, 0.22 ) }
    apic_18 { pt3dadd( -239.249, -197.107, 39.2005, 0.22 ) }
    apic_18 { pt3dadd( -239.701, -197.358, 39.8078, 0.22 ) }
    apic_18 { pt3dadd( -240.059, -197.572, 40.3396, 0.81 ) }
    apic_18 { pt3dadd( -240.483, -197.863, 41.0175, 0.81 ) }
    apic_18 { pt3dadd( -241.126, -198.276, 41.9847, 0.44 ) }
    apic_18 { pt3dadd( -241.728, -198.629, 42.8726, 0.44 ) }
    apic_18 { pt3dadd( -242.464, -199.05, 43.9034, 0.37 ) }
    apic_18 { pt3dadd( -242.898, -199.31, 44.4548, 0.22 ) }
    apic_18 { pt3dadd( -243.483, -199.66, 45.1035, 0.22 ) }
    apic_18 { pt3dadd( -243.992, -199.974, 45.6077, 0.81 ) }
    apic_18 { pt3dadd( -244.816, -200.419, 46.2876, 0.37 ) }
    apic_18 { pt3dadd( -245.358, -200.661, 46.7023, 0.44 ) }
    apic_18 { pt3dadd( -245.798, -200.826, 47.0204, 0.07 ) }
    apic_18 { pt3dadd( -246.124, -200.936, 47.2641, 0.59 ) }
    apic_18 { pt3dadd( -247.23, -201.297, 48.0723, 0.37 ) }
    apic_18 { pt3dadd( -247.749, -201.486, 48.4456, 0.22 ) }
    apic_18 { pt3dadd( -248.711, -201.897, 49.1061, 0.22 ) }
    apic_18 { pt3dadd( -249.164, -202.133, 49.4204, 1.84 ) }
    apic_18 { pt3dadd( -250.422, -202.889, 50.2867, 0.22 ) }
    apic_18 { pt3dadd( -250.994, -203.27, 50.6625, 0.22 ) }
    apic_18 { pt3dadd( -251.52, -203.608, 50.9708, 0.22 ) }
    apic_18 { pt3dadd( -252.053, -203.935, 51.2879, 0.22 ) }
    apic_18 { pt3dadd( -252.713, -204.322, 51.6864, 0.22 ) }
    apic_18 { pt3dadd( -253.26, -204.666, 52.0509, 0.44 ) }
    apic_18 { pt3dadd( -253.556, -204.878, 52.2756, 0.22 ) }
    apic_18 { pt3dadd( -254.612, -205.655, 53.1271, 0.22 ) }
    apic_18 { pt3dadd( -255.443, -206.257, 53.8005, 0.95 ) }
    apic_18 { pt3dadd( -256.315, -206.922, 54.5085, 0.29 ) }
    apic_18 { pt3dadd( -257.03, -207.514, 55.0945, 1.03 ) }
    apic_18 { pt3dadd( -257.943, -208.349, 55.8332, 0.59 ) }
    apic_18 { pt3dadd( -258.523, -208.971, 56.2947, 0.81 ) }
    apic_18 { pt3dadd( -258.944, -209.525, 56.6205, 0.15 ) }
    apic_18 { pt3dadd( -259.34, -210.108, 56.8919, 0.15 ) }
    apic_18 { pt3dadd( -259.621, -210.539, 57.0244, 0.73 ) }
    apic_18 { pt3dadd( -259.997, -211.148, 57.1307, 0.73 ) }
    apic_18 { pt3dadd( -260.367, -211.875, 57.1916, 0.29 ) }
    apic_18 { pt3dadd( -260.536, -212.276, 57.2397, 0.29 ) }
    apic_18 { pt3dadd( -260.716, -212.735, 57.3118, 0.59 ) }
    apic_18 { pt3dadd( -261.196, -214.015, 57.5918, 0.15 ) }
    apic_18 { pt3dadd( -261.419, -214.697, 57.7604, 0.81 ) }
    apic_18 { pt3dadd( -261.742, -215.792, 58.0629, 0.37 ) }
    apic_18 { pt3dadd( -261.986, -216.565, 58.3319, 0.51 ) }
    apic_18 { pt3dadd( -262.128, -216.985, 58.514, 0.15 ) }
    apic_18 { pt3dadd( -262.318, -217.55, 58.837, 0.15 ) }
    apic_18 { pt3dadd( -262.416, -217.888, 59.1049, 0.15 ) }
    // Section: apic_14, id: apic_14, parent: apic_4 (entry count 80/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( -19.5385, -121.17, -36.446, 1.47 ) }
    apic_14 { pt3dadd( -19.4632, -121.925, -38.0527, 0.73 ) }
    apic_14 { pt3dadd( -19.3302, -122.5, -39.4683, 0.73 ) }
    apic_14 { pt3dadd( -19.2446, -122.892, -40.5244, 0.73 ) }
    apic_14 { pt3dadd( -19.2085, -123.442, -42.0971, 0.73 ) }
    apic_14 { pt3dadd( -19.3394, -124.051, -43.8724, 0.73 ) }
    apic_14 { pt3dadd( -19.5983, -124.642, -45.621, 0.73 ) }
    apic_14 { pt3dadd( -19.7535, -124.877, -46.3106, 0.73 ) }
    apic_14 { pt3dadd( -19.984, -125.159, -47.0313, 0.73 ) }
    apic_14 { pt3dadd( -20.4888, -125.675, -48.2764, 0.59 ) }
    apic_14 { pt3dadd( -21.2444, -126.287, -49.6739, 0.51 ) }
    apic_14 { pt3dadd( -21.8412, -126.693, -50.5683, 0.51 ) }
    apic_14 { pt3dadd( -22.2695, -126.955, -51.2035, 0.51 ) }
    apic_14 { pt3dadd( -23.1004, -127.498, -52.6261, 0.51 ) }
    apic_14 { pt3dadd( -23.6073, -127.907, -53.7777, 0.51 ) }
    apic_14 { pt3dadd( -23.8144, -128.128, -54.4427, 0.51 ) }
    apic_14 { pt3dadd( -24.0452, -128.392, -55.2783, 0.73 ) }
    apic_14 { pt3dadd( -24.519, -128.838, -56.7717, 0.73 ) }
    apic_14 { pt3dadd( -24.7238, -128.982, -57.3035, 0.73 ) }
    apic_14 { pt3dadd( -25.1941, -129.226, -58.2619, 0.73 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    apic_14 { pt3dadd( -26.1571, -129.713, -59.8118, 0.59 ) }
    apic_14 { pt3dadd( -26.749, -130.021, -60.6725, 0.59 ) }
    apic_14 { pt3dadd( -27.2207, -130.269, -61.3201, 0.59 ) }
    apic_14 { pt3dadd( -27.9171, -130.629, -62.2266, 0.59 ) }
    apic_14 { pt3dadd( -28.6576, -130.993, -63.2138, 0.59 ) }
    apic_14 { pt3dadd( -29.318, -131.302, -64.1449, 0.59 ) }
    apic_14 { pt3dadd( -30.0515, -131.695, -65.4312, 0.66 ) }
    apic_14 { pt3dadd( -30.288, -131.859, -66.0, 0.66 ) }
    apic_14 { pt3dadd( -30.4332, -132.015, -66.5059, 0.66 ) }
    apic_14 { pt3dadd( -30.5787, -132.312, -67.3412, 0.66 ) }
    apic_14 { pt3dadd( -30.6669, -132.662, -68.2077, 0.66 ) }
    apic_14 { pt3dadd( -30.7788, -133.105, -69.2077, 0.66 ) }
    apic_14 { pt3dadd( -30.9682, -133.506, -70.0915, 0.66 ) }
    apic_14 { pt3dadd( -31.191, -133.807, -70.7178, 0.66 ) }
    apic_14 { pt3dadd( -31.5293, -134.163, -71.3947, 0.66 ) }
    apic_14 { pt3dadd( -31.702, -134.313, -71.6511, 0.51 ) }
    apic_14 { pt3dadd( -32.1234, -134.625, -72.2011, 0.51 ) }
    apic_14 { pt3dadd( -32.4552, -134.829, -72.6805, 0.51 ) }
    apic_14 { pt3dadd( -32.7732, -135.004, -73.3115, 0.51 ) }
    apic_14 { pt3dadd( -32.9759, -135.104, -73.8243, 0.51 ) }
    apic_14 { pt3dadd( -33.2063, -135.214, -74.5135, 0.51 ) }
    apic_14 { pt3dadd( -33.5159, -135.385, -75.5729, 0.51 ) }
    apic_14 { pt3dadd( -33.7512, -135.537, -76.5069, 0.51 ) }
    apic_14 { pt3dadd( -33.9402, -135.626, -77.2295, 0.51 ) }
    apic_14 { pt3dadd( -34.0981, -135.629, -77.7821, 0.51 ) }
    apic_14 { pt3dadd( -34.2358, -135.572, -78.2051, 0.51 ) }
    apic_14 { pt3dadd( -34.3721, -135.466, -78.671, 0.51 ) }
    apic_14 { pt3dadd( -34.5178, -135.321, -79.2158, 0.51 ) }
    apic_14 { pt3dadd( -34.6994, -135.152, -79.9097, 0.51 ) }
    apic_14 { pt3dadd( -35.0031, -134.907, -81.1135, 0.51 ) }
    apic_14 { pt3dadd( -35.2837, -134.745, -82.2368, 0.51 ) }
    apic_14 { pt3dadd( -35.5266, -134.638, -83.2595, 0.51 ) }
    apic_14 { pt3dadd( -35.6445, -134.597, -83.7517, 0.51 ) }
    apic_14 { pt3dadd( -35.8517, -134.509, -84.6216, 0.51 ) }
    apic_14 { pt3dadd( -36.0231, -134.42, -85.3708, 0.51 ) }
    apic_14 { pt3dadd( -36.2373, -134.272, -86.3607, 0.51 ) }
    apic_14 { pt3dadd( -36.4424, -134.083, -87.7665, 0.51 ) }
    apic_14 { pt3dadd( -36.526, -133.968, -88.5542, 0.51 ) }
    apic_14 { pt3dadd( -36.5912, -133.8, -89.561, 0.51 ) }
    apic_14 { pt3dadd( -36.601, -133.687, -90.1597, 0.51 ) }
    apic_14 { pt3dadd( -36.5912, -133.596, -90.8195, 0.51 ) }
    apic_14 { pt3dadd( -36.5682, -133.608, -92.1551, 0.51 ) }
    apic_14 { pt3dadd( -36.6129, -133.826, -93.0635, 0.51 ) }
    apic_14 { pt3dadd( -36.7153, -134.127, -93.7209, 0.51 ) }
    apic_14 { pt3dadd( -36.8888, -134.542, -94.3562, 0.51 ) }
    apic_14 { pt3dadd( -37.125, -134.996, -94.9426, 0.51 ) }
    apic_14 { pt3dadd( -37.5527, -135.65, -95.7176, 0.51 ) }
    apic_14 { pt3dadd( -38.0372, -136.261, -96.4394, 0.51 ) }
    apic_14 { pt3dadd( -38.5273, -136.784, -97.1065, 0.51 ) }
    apic_14 { pt3dadd( -38.8038, -137.008, -97.4485, 0.51 ) }
    apic_14 { pt3dadd( -39.1345, -137.224, -97.8317, 0.51 ) }
    apic_14 { pt3dadd( -39.4698, -137.408, -98.2102, 0.51 ) }
    apic_14 { pt3dadd( -40.0952, -137.768, -98.9524, 0.51 ) }
    apic_14 { pt3dadd( -41.0251, -138.323, -100.148, 0.66 ) }
    apic_14 { pt3dadd( -41.8578, -138.839, -101.248, 0.51 ) }
    apic_14 { pt3dadd( -42.2057, -139.065, -101.691, 0.51 ) }
    apic_14 { pt3dadd( -42.838, -139.46, -102.433, 0.51 ) }
    apic_14 { pt3dadd( -43.7837, -140.044, -103.528, 0.59 ) }
    apic_14 { pt3dadd( -44.7362, -140.597, -104.581, 0.59 ) }
    apic_14 { pt3dadd( -45.2874, -140.874, -105.161, 0.59 ) }
    apic_14 { pt3dadd( -46.1363, -141.174, -106.026, 0.59 ) }
    apic_14 { pt3dadd( -47.21, -141.398, -107.039, 0.59 ) }
    apic_14 { pt3dadd( -48.2376, -141.479, -107.945, 0.59 ) }
    apic_14 { pt3dadd( -48.9616, -141.472, -108.497, 0.59 ) }
    apic_14 { pt3dadd( -50.1059, -141.421, -109.279, 0.59 ) }
    apic_14 { pt3dadd( -51.6627, -141.298, -110.235, 0.37 ) }
    apic_14 { pt3dadd( -52.3588, -141.222, -110.618, 0.37 ) }
    apic_14 { pt3dadd( -53.2827, -141.114, -111.066, 0.37 ) }
    apic_14 { pt3dadd( -54.7625, -140.96, -111.67, 0.66 ) }
    apic_14 { pt3dadd( -55.4415, -140.913, -111.918, 0.66 ) }
    apic_14 { pt3dadd( -57.0536, -140.89, -112.439, 0.66 ) }
    apic_14 { pt3dadd( -57.4473, -140.913, -112.544, 0.66 ) }
    apic_14 { pt3dadd( -58.0415, -140.993, -112.736, 0.66 ) }
    apic_14 { pt3dadd( -59.1504, -141.23, -113.131, 0.66 ) }
    apic_14 { pt3dadd( -59.6917, -141.37, -113.352, 0.51 ) }
    apic_14 { pt3dadd( -60.5312, -141.598, -113.722, 0.37 ) }
    apic_14 { pt3dadd( -61.2741, -141.794, -114.085, 0.95 ) }
    apic_14 { pt3dadd( -62.9855, -142.171, -114.967, 0.29 ) }
    apic_14 { pt3dadd( -63.4514, -142.251, -115.223, 0.51 ) }
    apic_14 { pt3dadd( -64.277, -142.378, -115.703, 0.29 ) }
    apic_14 { pt3dadd( -65.3188, -142.54, -116.325, 0.29 ) }
    apic_14 { pt3dadd( -66.4228, -142.717, -116.986, 0.29 ) }
    apic_14 { pt3dadd( -67.6871, -142.925, -117.632, 0.73 ) }
    apic_14 { pt3dadd( -68.897, -143.099, -118.119, 0.73 ) }
    apic_14 { pt3dadd( -70.1531, -143.259, -118.666, 0.73 ) }
    apic_14 { pt3dadd( -70.8908, -143.343, -118.937, 0.51 ) }
    apic_14 { pt3dadd( -71.7435, -143.383, -119.171, 0.51 ) }
    apic_14 { pt3dadd( -74.5678, -143.218, -119.867, 0.73 ) }
    apic_14 { pt3dadd( -75.9004, -142.931, -120.268, 0.66 ) }
    apic_14 { pt3dadd( -78.2458, -142.155, -121.006, 0.66 ) }
    apic_14 { pt3dadd( -79.9316, -141.342, -121.705, 0.66 ) }
    apic_14 { pt3dadd( -80.7643, -140.844, -122.208, 0.66 ) }
    apic_14 { pt3dadd( -81.6999, -140.18, -123.081, 0.81 ) }
    apic_14 { pt3dadd( -82.4114, -139.621, -123.976, 0.81 ) }
    // Section: apic_5, id: apic_5, parent: apic_4 (entry count 94/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( -19.5385, -121.17, -36.446, 1.47 ) }
    apic_5 { pt3dadd( -19.3039, -121.846, -36.5891, 1.47 ) }
    apic_5 { pt3dadd( -18.8041, -123.208, -36.9439, 1.47 ) }
    apic_5 { pt3dadd( -17.3518, -126.882, -38.2351, 1.47 ) }
    apic_5 { pt3dadd( -16.4316, -129.041, -39.0528, 1.54 ) }
    apic_5 { pt3dadd( -15.2581, -131.639, -40.0583, 1.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    apic_5 { pt3dadd( -14.5172, -133.143, -40.6394, 1.1 ) }
    apic_5 { pt3dadd( -13.1241, -135.681, -41.5824, 1.47 ) }
    apic_5 { pt3dadd( -11.3941, -138.462, -42.5426, 1.47 ) }
    apic_5 { pt3dadd( -9.85473, -140.618, -43.2348, 2.2 ) }
    apic_5 { pt3dadd( -8.30579, -142.606, -43.7745, 1.4 ) }
    apic_5 { pt3dadd( -6.89733, -144.283, -44.0974, 1.4 ) }
    apic_5 { pt3dadd( -5.68911, -145.699, -44.2267, 1.4 ) }
    apic_5 { pt3dadd( -3.78481, -147.976, -44.1983, 1.4 ) }
    apic_5 { pt3dadd( -3.14765, -148.859, -44.1325, 1.4 ) }
    apic_5 { pt3dadd( -2.55604, -149.91, -44.1016, 1.4 ) }
    apic_5 { pt3dadd( -2.00549, -151.337, -44.1547, 1.4 ) }
    apic_5 { pt3dadd( -1.49154, -153.178, -44.4079, 1.32 ) }
    apic_5 { pt3dadd( -1.08569, -154.944, -44.7898, 1.32 ) }
    apic_5 { pt3dadd( -0.522401, -157.607, -45.5296, 1.76 ) }
    apic_5 { pt3dadd( -0.0856666, -159.491, -46.1491, 1.76 ) }
    apic_5 { pt3dadd( 0.788935, -162.849, -47.5391, 1.18 ) }
    apic_5 { pt3dadd( 1.37445, -164.828, -48.5497, 1.47 ) }
    apic_5 { pt3dadd( 1.51214, -165.276, -48.8252, 1.47 ) }
    apic_5 { pt3dadd( 1.86713, -166.508, -49.738, 1.54 ) }
    apic_5 { pt3dadd( 2.19693, -167.809, -50.794, 1.54 ) }
    apic_5 { pt3dadd( 2.46664, -169.371, -52.1345, 1.69 ) }
    apic_5 { pt3dadd( 2.58058, -170.369, -52.9952, 1.69 ) }
    apic_5 { pt3dadd( 2.76803, -172.159, -54.3254, 1.69 ) }
    apic_5 { pt3dadd( 3.02624, -174.157, -55.6507, 1.69 ) }
    apic_5 { pt3dadd( 3.38105, -176.675, -57.1465, 1.4 ) }
    apic_5 { pt3dadd( 3.86801, -179.537, -58.642, 1.4 ) }
    apic_5 { pt3dadd( 4.37192, -181.904, -59.7028, 1.4 ) }
    apic_5 { pt3dadd( 4.9642, -184.211, -60.5777, 1.4 ) }
    apic_5 { pt3dadd( 5.73724, -186.736, -61.3469, 1.69 ) }
    apic_5 { pt3dadd( 6.42247, -188.835, -61.7891, 1.84 ) }
    apic_5 { pt3dadd( 6.8289, -189.974, -61.9253, 1.84 ) }
    apic_5 { pt3dadd( 7.94231, -192.891, -62.0043, 1.98 ) }
    apic_5 { pt3dadd( 8.52934, -194.389, -61.9626, 1.98 ) }
    apic_5 { pt3dadd( 9.12668, -195.892, -61.8639, 1.69 ) }
    apic_5 { pt3dadd( 9.79944, -197.585, -61.6515, 1.69 ) }
    apic_5 { pt3dadd( 10.9985, -200.659, -61.2064, 1.47 ) }
    apic_5 { pt3dadd( 11.48, -202.01, -61.0184, 1.47 ) }
    apic_5 { pt3dadd( 12.0123, -203.749, -60.8852, 1.32 ) }
    apic_5 { pt3dadd( 12.3295, -204.958, -60.8884, 1.32 ) }
    apic_5 { pt3dadd( 12.5912, -206.223, -60.9403, 1.32 ) }
    apic_5 { pt3dadd( 12.8515, -207.991, -61.0774, 1.4 ) }
    apic_5 { pt3dadd( 13.1088, -210.854, -61.3946, 1.84 ) }
    apic_5 { pt3dadd( 13.4684, -215.016, -61.9752, 2.28 ) }
    apic_5 { pt3dadd( 13.6537, -217.301, -62.3337, 1.69 ) }
    apic_5 { pt3dadd( 13.7376, -218.438, -62.5057, 1.47 ) }
    apic_5 { pt3dadd( 13.8301, -220.018, -62.6856, 1.47 ) }
    apic_5 { pt3dadd( 13.9324, -222.942, -62.8486, 2.28 ) }
    apic_5 { pt3dadd( 13.9605, -225.959, -62.8221, 1.4 ) }
    apic_5 { pt3dadd( 13.9751, -227.845, -62.6655, 1.03 ) }
    apic_5 { pt3dadd( 14.0587, -230.339, -62.3322, 1.69 ) }
    apic_5 { pt3dadd( 14.3308, -233.494, -61.796, 1.18 ) }
    apic_5 { pt3dadd( 14.6823, -236.392, -61.1736, 1.69 ) }
    apic_5 { pt3dadd( 15.0299, -239.063, -60.486, 1.98 ) }
    apic_5 { pt3dadd( 15.3233, -241.466, -59.8059, 2.2 ) }
    apic_5 { pt3dadd( 15.6531, -244.744, -58.8599, 1.25 ) }
    apic_5 { pt3dadd( 15.7956, -246.784, -58.2881, 0.95 ) }
    apic_5 { pt3dadd( 15.8121, -248.316, -57.8916, 1.47 ) }
    apic_5 { pt3dadd( 15.6599, -250.071, -57.4626, 1.47 ) }
    apic_5 { pt3dadd( 15.3015, -251.83, -57.1123, 1.62 ) }
    apic_5 { pt3dadd( 14.5661, -254.224, -56.7511, 0.88 ) }
    apic_5 { pt3dadd( 14.1301, -255.418, -56.637, 0.73 ) }
    apic_5 { pt3dadd( 13.5782, -256.977, -56.5457, 0.73 ) }
    apic_5 { pt3dadd( 13.0552, -258.673, -56.4955, 1.62 ) }
    apic_5 { pt3dadd( 12.415, -261.169, -56.4552, 1.76 ) }
    apic_5 { pt3dadd( 11.9833, -263.183, -56.4766, 1.84 ) }
    apic_5 { pt3dadd( 11.562, -265.3, -56.5391, 1.4 ) }
    apic_5 { pt3dadd( 11.0344, -267.824, -56.6597, 1.76 ) }
    apic_5 { pt3dadd( 10.6925, -269.468, -56.7518, 1.76 ) }
    apic_5 { pt3dadd( 10.4283, -270.757, -56.824, 1.76 ) }
    apic_5 { pt3dadd( 9.7679, -273.649, -56.9644, 1.54 ) }
    apic_5 { pt3dadd( 9.32407, -275.458, -57.0832, 1.54 ) }
    apic_5 { pt3dadd( 9.01953, -276.587, -57.1845, 1.54 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 72/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 19.0488, -37.9267, 43.6824, 0.73 ) }
    dend_31 { pt3dadd( 22.6103, -41.7908, 46.5531, 0.37 ) }
    dend_31 { pt3dadd( 25.5304, -45.4565, 50.2801, 0.37 ) }
    dend_31 { pt3dadd( 28.6729, -49.6567, 53.1888, 0.37 ) }
    dend_31 { pt3dadd( 32.2494, -53.461, 56.1175, 0.37 ) }
    dend_31 { pt3dadd( 35.7589, -57.2406, 59.1569, 0.37 ) }
    dend_31 { pt3dadd( 39.7236, -60.8574, 61.7974, 0.37 ) }
    dend_31 { pt3dadd( 44.3091, -63.6885, 64.3606, 0.37 ) }
    dend_31 { pt3dadd( 49.7321, -65.4715, 66.075, 0.37 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 81/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 19.0488, -37.9267, 43.6824, 0.73 ) }
    dend_30 { pt3dadd( 24.248, -42.0912, 48.1371, 0.37 ) }
    dend_30 { pt3dadd( 29.4338, -46.6494, 52.2171, 0.37 ) }
    dend_30 { pt3dadd( 35.2481, -50.173, 56.4411, 0.37 ) }
    dend_30 { pt3dadd( 39.4945, -54.6137, 61.5995, 0.37 ) }
    dend_30 { pt3dadd( 44.2316, -58.4496, 66.7979, 0.37 ) }
    dend_30 { pt3dadd( 47.7152, -63.0188, 72.4063, 0.37 ) }
    dend_30 { pt3dadd( 51.5373, -68.5069, 76.8803, 0.37 ) }
    dend_30 { pt3dadd( 56.4887, -73.7133, 80.4726, 0.37 ) }
    // Section: apic_16, id: apic_16, parent: apic_14 (entry count 90/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( -82.4114, -139.621, -123.976, 0.81 ) }
    apic_16 { pt3dadd( -82.5708, -141.777, -125.132, 0.81 ) }
    apic_16 { pt3dadd( -82.6703, -142.767, -125.695, 0.81 ) }
    apic_16 { pt3dadd( -82.8438, -144.177, -126.589, 0.81 ) }
    apic_16 { pt3dadd( -83.1329, -146.159, -128.017, 0.73 ) }
    apic_16 { pt3dadd( -83.3304, -147.673, -129.205, 0.73 ) }
    apic_16 { pt3dadd( -83.455, -148.62, -129.981, 0.73 ) }
    apic_16 { pt3dadd( -83.6374, -149.951, -131.11, 0.73 ) }
    apic_16 { pt3dadd( -83.8372, -151.16, -132.284, 0.81 ) }
    apic_16 { pt3dadd( -83.9946, -152.192, -133.466, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    apic_16 { pt3dadd( -84.1169, -152.964, -134.532, 0.59 ) }
    apic_16 { pt3dadd( -84.302, -153.986, -136.127, 0.66 ) }
    apic_16 { pt3dadd( -84.5672, -154.936, -137.717, 0.66 ) }
    apic_16 { pt3dadd( -84.8426, -155.543, -138.849, 0.66 ) }
    apic_16 { pt3dadd( -85.2706, -156.202, -140.109, 0.73 ) }
    apic_16 { pt3dadd( -85.7155, -156.693, -141.07, 0.73 ) }
    apic_16 { pt3dadd( -86.2801, -157.16, -142.012, 0.73 ) }
    apic_16 { pt3dadd( -87.3304, -157.946, -143.545, 0.73 ) }
    apic_16 { pt3dadd( -88.6397, -158.978, -145.298, 0.73 ) }
    apic_16 { pt3dadd( -89.17, -159.43, -145.968, 0.73 ) }
    apic_16 { pt3dadd( -89.9939, -160.22, -147.027, 0.73 ) }
    apic_16 { pt3dadd( -90.9001, -161.253, -148.263, 0.73 ) }
    apic_16 { pt3dadd( -91.3597, -161.883, -148.92, 0.73 ) }
    apic_16 { pt3dadd( -92.225, -163.232, -150.089, 0.73 ) }
    apic_16 { pt3dadd( -92.5374, -163.702, -150.421, 0.73 ) }
    apic_16 { pt3dadd( -92.9364, -164.321, -150.816, 0.73 ) }
    apic_16 { pt3dadd( -93.3854, -165.061, -151.232, 0.73 ) }
    apic_16 { pt3dadd( -94.1229, -166.376, -151.905, 0.59 ) }
    apic_16 { pt3dadd( -94.8421, -167.806, -152.625, 1.18 ) }
    apic_16 { pt3dadd( -95.8544, -170.179, -153.78, 0.51 ) }
    apic_16 { pt3dadd( -96.0522, -170.664, -154.044, 0.51 ) }
    apic_16 { pt3dadd( -96.2402, -171.128, -154.304, 0.51 ) }
    apic_16 { pt3dadd( -96.6693, -172.115, -154.901, 0.66 ) }
    apic_16 { pt3dadd( -97.4789, -173.8, -155.984, 0.81 ) }
    apic_16 { pt3dadd( -98.6308, -176.063, -157.419, 0.44 ) }
    apic_16 { pt3dadd( -99.2656, -177.278, -158.2, 0.88 ) }
    apic_16 { pt3dadd( -99.8451, -178.262, -158.877, 0.66 ) }
    apic_16 { pt3dadd( -100.561, -179.351, -159.739, 0.44 ) }
    apic_16 { pt3dadd( -100.852, -179.756, -160.109, 0.44 ) }
    apic_16 { pt3dadd( -101.312, -180.357, -160.772, 0.59 ) }
    apic_16 { pt3dadd( -101.757, -181.024, -161.56, 0.59 ) }
    apic_16 { pt3dadd( -102.273, -181.95, -162.742, 0.59 ) }
    apic_16 { pt3dadd( -102.817, -183.19, -164.442, 0.44 ) }
    apic_16 { pt3dadd( -103.116, -184.045, -165.601, 0.44 ) }
    apic_16 { pt3dadd( -103.428, -184.95, -166.781, 0.81 ) }
    apic_16 { pt3dadd( -103.697, -185.703, -167.75, 0.81 ) }
    apic_16 { pt3dadd( -104.26, -187.28, -169.702, 0.81 ) }
    apic_16 { pt3dadd( -104.735, -188.813, -171.463, 0.15 ) }
    apic_16 { pt3dadd( -104.909, -189.494, -172.185, 0.15 ) }
    apic_16 { pt3dadd( -105.194, -190.68, -173.372, 0.15 ) }
    apic_16 { pt3dadd( -105.398, -191.586, -174.15, 0.22 ) }
    apic_16 { pt3dadd( -105.514, -192.055, -174.467, 0.22 ) }
    apic_16 { pt3dadd( -105.668, -192.635, -174.765, 0.22 ) }
    apic_16 { pt3dadd( -105.867, -193.338, -175.131, 0.22 ) }
    apic_16 { pt3dadd( -106.128, -194.42, -175.814, 0.22 ) }
    apic_16 { pt3dadd( -106.382, -196.084, -177.083, 0.29 ) }
    apic_16 { pt3dadd( -106.483, -197.321, -178.081, 0.29 ) }
    apic_16 { pt3dadd( -106.52, -198.747, -179.327, 0.29 ) }
    apic_16 { pt3dadd( -106.435, -199.565, -180.111, 0.29 ) }
    apic_16 { pt3dadd( -106.202, -200.589, -181.199, 0.29 ) }
    apic_16 { pt3dadd( -105.832, -201.634, -182.359, 0.29 ) }
    apic_16 { pt3dadd( -105.445, -202.487, -183.335, 0.29 ) }
    apic_16 { pt3dadd( -105.098, -203.218, -184.102, 0.29 ) }
    apic_16 { pt3dadd( -104.404, -204.685, -185.41, 0.29 ) }
    apic_16 { pt3dadd( -103.819, -205.924, -186.43, 0.66 ) }
    apic_16 { pt3dadd( -103.45, -206.774, -187.147, 0.37 ) }
    apic_16 { pt3dadd( -103.077, -207.822, -188.073, 0.66 ) }
    apic_16 { pt3dadd( -102.883, -208.65, -188.881, 0.88 ) }
    apic_16 { pt3dadd( -102.88, -209.167, -189.429, 0.44 ) }
    apic_16 { pt3dadd( -103.085, -209.947, -190.32, 0.95 ) }
    apic_16 { pt3dadd( -103.763, -211.465, -192.095, 0.59 ) }
    apic_16 { pt3dadd( -104.328, -211.976, -193.118, 0.22 ) }
    apic_16 { pt3dadd( -104.867, -212.346, -194.001, 0.22 ) }
    apic_16 { pt3dadd( -105.698, -212.84, -195.304, 0.22 ) }
    apic_16 { pt3dadd( -105.937, -212.981, -195.685, 0.22 ) }
    apic_16 { pt3dadd( -106.304, -213.21, -196.314, 1.1 ) }
    apic_16 { pt3dadd( -109.836, -215.411, -202.71, 0.88 ) }
    apic_16 { pt3dadd( -110.391, -215.755, -203.776, 0.88 ) }
    apic_16 { pt3dadd( -111.186, -216.256, -205.365, 0.88 ) }
    apic_16 { pt3dadd( -111.883, -216.687, -206.803, 0.51 ) }
    apic_16 { pt3dadd( -112.759, -217.199, -208.571, 0.51 ) }
    // Section: apic_15, id: apic_15, parent: apic_14 (entry count 71/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( -82.4114, -139.621, -123.976, 0.81 ) }
    apic_15 { pt3dadd( -83.6423, -139.128, -124.579, 0.81 ) }
    apic_15 { pt3dadd( -84.6489, -138.742, -124.938, 0.95 ) }
    apic_15 { pt3dadd( -85.4718, -138.422, -125.148, 0.95 ) }
    apic_15 { pt3dadd( -86.132, -138.184, -125.235, 0.95 ) }
    apic_15 { pt3dadd( -86.6887, -137.991, -125.397, 0.95 ) }
    apic_15 { pt3dadd( -87.0778, -137.871, -125.571, 0.95 ) }
    apic_15 { pt3dadd( -87.8874, -137.675, -125.988, 0.95 ) }
    apic_15 { pt3dadd( -88.6078, -137.543, -126.384, 0.73 ) }
    apic_15 { pt3dadd( -90.348, -137.298, -127.351, 0.73 ) }
    apic_15 { pt3dadd( -92.9451, -136.994, -128.814, 0.95 ) }
    apic_15 { pt3dadd( -94.914, -136.758, -129.905, 1.47 ) }
    apic_15 { pt3dadd( -95.8188, -136.632, -130.399, 2.72 ) }
    apic_15 { pt3dadd( -97.0011, -136.432, -131.025, 2.13 ) }
    apic_15 { pt3dadd( -99.2566, -135.929, -132.141, 0.66 ) }
    apic_15 { pt3dadd( -100.512, -135.568, -132.759, 0.44 ) }
    apic_15 { pt3dadd( -102.356, -134.938, -133.507, 0.44 ) }
    apic_15 { pt3dadd( -103.246, -134.596, -133.85, 0.44 ) }
    apic_15 { pt3dadd( -104.272, -134.201, -134.276, 0.44 ) }
    apic_15 { pt3dadd( -105.466, -133.786, -134.827, 0.44 ) }
    apic_15 { pt3dadd( -107.655, -133.306, -135.896, 1.03 ) }
    apic_15 { pt3dadd( -108.868, -133.329, -136.408, 0.51 ) }
    apic_15 { pt3dadd( -109.494, -133.498, -136.636, 0.37 ) }
    apic_15 { pt3dadd( -110.548, -133.974, -136.988, 0.37 ) }
    apic_15 { pt3dadd( -111.638, -134.667, -137.302, 0.37 ) }
    apic_15 { pt3dadd( -112.563, -135.37, -137.539, 0.37 ) }
    apic_15 { pt3dadd( -114.177, -136.639, -137.877, 0.37 ) }
    apic_15 { pt3dadd( -115.156, -137.387, -138.141, 0.73 ) }
    apic_15 { pt3dadd( -116.379, -138.212, -138.537, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    apic_15 { pt3dadd( -117.94, -139.122, -139.135, 0.44 ) }
    apic_15 { pt3dadd( -119.007, -139.658, -139.644, 0.44 ) }
    apic_15 { pt3dadd( -119.903, -140.035, -140.146, 0.66 ) }
    apic_15 { pt3dadd( -121.024, -140.41, -140.865, 0.81 ) }
    apic_15 { pt3dadd( -122.221, -140.713, -141.638, 0.88 ) }
    apic_15 { pt3dadd( -123.458, -140.984, -142.444, 1.32 ) }
    apic_15 { pt3dadd( -125.091, -141.322, -143.518, 0.51 ) }
    apic_15 { pt3dadd( -126.313, -141.604, -144.307, 0.88 ) }
    apic_15 { pt3dadd( -127.533, -141.927, -145.088, 0.51 ) }
    apic_15 { pt3dadd( -128.3, -142.138, -145.556, 0.51 ) }
    apic_15 { pt3dadd( -129.504, -142.436, -146.317, 0.66 ) }
    apic_15 { pt3dadd( -129.729, -142.466, -146.472, 0.66 ) }
    apic_15 { pt3dadd( -130.133, -142.464, -146.815, 0.66 ) }
    apic_15 { pt3dadd( -130.448, -142.442, -147.152, 0.66 ) }
    apic_15 { pt3dadd( -130.851, -142.413, -147.657, 0.66 ) }
    apic_15 { pt3dadd( -131.518, -142.408, -148.552, 1.1 ) }
    apic_15 { pt3dadd( -132.236, -142.493, -149.53, 1.1 ) }
    apic_15 { pt3dadd( -133.277, -142.759, -150.912, 0.81 ) }
    apic_15 { pt3dadd( -134.129, -143.098, -151.972, 0.81 ) }
    apic_15 { pt3dadd( -135.122, -143.602, -153.119, 0.81 ) }
    apic_15 { pt3dadd( -136.327, -144.311, -154.385, 0.51 ) }
    apic_15 { pt3dadd( -137.423, -145.002, -155.372, 0.66 ) }
    apic_15 { pt3dadd( -138.009, -145.372, -155.814, 0.66 ) }
    apic_15 { pt3dadd( -138.929, -145.9, -156.354, 0.66 ) }
    apic_15 { pt3dadd( -139.624, -146.238, -156.68, 0.66 ) }
    apic_15 { pt3dadd( -140.54, -146.597, -157.035, 0.66 ) }
    apic_15 { pt3dadd( -141.836, -146.992, -157.514, 0.66 ) }
    apic_15 { pt3dadd( -143.225, -147.335, -158.023, 0.66 ) }
    apic_15 { pt3dadd( -144.744, -147.68, -158.62, 0.66 ) }
    apic_15 { pt3dadd( -146.286, -147.991, -159.289, 0.66 ) }
    apic_15 { pt3dadd( -147.372, -148.205, -159.778, 0.81 ) }
    apic_15 { pt3dadd( -149.088, -148.579, -160.548, 0.44 ) }
    apic_15 { pt3dadd( -149.975, -148.784, -160.934, 0.44 ) }
    apic_15 { pt3dadd( -150.773, -149.003, -161.248, 0.66 ) }
    apic_15 { pt3dadd( -152.256, -149.503, -161.741, 0.88 ) }
    apic_15 { pt3dadd( -152.987, -149.79, -161.931, 0.88 ) }
    apic_15 { pt3dadd( -154.393, -150.375, -162.184, 0.51 ) }
    apic_15 { pt3dadd( -155.189, -150.732, -162.287, 0.29 ) }
    apic_15 { pt3dadd( -156.322, -151.267, -162.41, 0.29 ) }
    apic_15 { pt3dadd( -157.954, -152.094, -162.537, 0.66 ) }
    apic_15 { pt3dadd( -159.063, -152.688, -162.599, 0.88 ) }
    apic_15 { pt3dadd( -160.309, -153.354, -162.676, 1.69 ) }
    apic_15 { pt3dadd( -162.518, -154.527, -162.831, 0.37 ) }
    apic_15 { pt3dadd( -163.317, -154.954, -162.887, 0.51 ) }
    apic_15 { pt3dadd( -163.988, -155.294, -162.947, 0.51 ) }
    apic_15 { pt3dadd( -164.776, -155.675, -163.024, 0.73 ) }
    apic_15 { pt3dadd( -165.5, -155.996, -163.107, 0.44 ) }
    apic_15 { pt3dadd( -166.454, -156.418, -163.256, 0.59 ) }
    apic_15 { pt3dadd( -167.207, -156.721, -163.394, 1.03 ) }
    apic_15 { pt3dadd( -168.4, -157.212, -163.692, 0.44 ) }
    apic_15 { pt3dadd( -169.363, -157.615, -163.988, 0.44 ) }
    apic_15 { pt3dadd( -170.413, -158.099, -164.348, 1.4 ) }
    apic_15 { pt3dadd( -171.737, -158.766, -164.826, 0.44 ) }
    apic_15 { pt3dadd( -172.883, -159.386, -165.251, 0.44 ) }
    apic_15 { pt3dadd( -173.98, -160.002, -165.644, 0.81 ) }
    apic_15 { pt3dadd( -175.307, -160.802, -166.109, 0.37 ) }
    apic_15 { pt3dadd( -176.114, -161.332, -166.402, 0.29 ) }
    apic_15 { pt3dadd( -176.617, -161.68, -166.569, 0.29 ) }
    apic_15 { pt3dadd( -177.142, -162.047, -166.763, 0.29 ) }
    apic_15 { pt3dadd( -177.88, -162.636, -167.055, 0.29 ) }
    apic_15 { pt3dadd( -178.478, -163.148, -167.306, 0.81 ) }
    apic_15 { pt3dadd( -178.796, -163.433, -167.459, 1.1 ) }
    apic_15 { pt3dadd( -179.75, -164.215, -167.906, 0.44 ) }
    apic_15 { pt3dadd( -180.962, -165.195, -168.458, 0.44 ) }
    apic_15 { pt3dadd( -181.712, -165.795, -168.774, 1.18 ) }
    apic_15 { pt3dadd( -182.847, -166.677, -169.205, 0.81 ) }
    apic_15 { pt3dadd( -184.372, -167.742, -169.673, 0.44 ) }
    apic_15 { pt3dadd( -185.602, -168.528, -170.022, 0.22 ) }
    apic_15 { pt3dadd( -185.971, -168.753, -170.114, 0.22 ) }
    apic_15 { pt3dadd( -187.154, -169.454, -170.386, 1.25 ) }
    apic_15 { pt3dadd( -187.904, -169.857, -170.604, 0.95 ) }
    apic_15 { pt3dadd( -189.062, -170.41, -171.03, 1.25 ) }
    apic_15 { pt3dadd( -190.638, -171.032, -171.735, 0.73 ) }
    apic_15 { pt3dadd( -191.534, -171.322, -172.218, 0.73 ) }
    apic_15 { pt3dadd( -192.555, -171.587, -172.811, 0.95 ) }
    apic_15 { pt3dadd( -193.913, -171.876, -173.671, 1.1 ) }
    apic_15 { pt3dadd( -194.762, -172.061, -174.245, 1.62 ) }
    apic_15 { pt3dadd( -195.559, -172.2, -174.806, 0.81 ) }
    apic_15 { pt3dadd( -196.256, -172.27, -175.266, 0.81 ) }
    apic_15 { pt3dadd( -196.848, -172.306, -175.612, 0.37 ) }
    apic_15 { pt3dadd( -198.073, -172.425, -176.23, 0.29 ) }
    apic_15 { pt3dadd( -198.893, -172.573, -176.595, 0.29 ) }
    apic_15 { pt3dadd( -200.034, -172.835, -177.073, 0.29 ) }
    apic_15 { pt3dadd( -200.747, -173.006, -177.41, 0.29 ) }
    apic_15 { pt3dadd( -201.664, -173.181, -177.85, 0.81 ) }
    // Section: apic_7, id: apic_7, parent: apic_5 (entry count 85/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 9.01953, -276.587, -57.1845, 1.54 ) }
    apic_7 { pt3dadd( 8.79848, -277.281, -56.824, 1.54 ) }
    apic_7 { pt3dadd( 8.41288, -278.328, -56.3171, 1.76 ) }
    apic_7 { pt3dadd( 8.05505, -279.229, -55.9241, 1.54 ) }
    apic_7 { pt3dadd( 7.72265, -280.028, -55.5859, 1.54 ) }
    apic_7 { pt3dadd( 7.44125, -280.719, -55.2943, 1.1 ) }
    apic_7 { pt3dadd( 7.24206, -281.226, -55.0811, 1.1 ) }
    apic_7 { pt3dadd( 7.01902, -281.809, -54.8577, 1.32 ) }
    apic_7 { pt3dadd( 6.5243, -283.168, -54.3698, 1.4 ) }
    apic_7 { pt3dadd( 6.23265, -284.097, -54.0551, 1.4 ) }
    apic_7 { pt3dadd( 6.0122, -285.005, -53.7781, 1.1 ) }
    apic_7 { pt3dadd( 5.90664, -285.693, -53.59, 0.95 ) }
    apic_7 { pt3dadd( 5.88544, -286.154, -53.4774, 0.95 ) }
    apic_7 { pt3dadd( 5.94798, -286.898, -53.3375, 0.95 ) }
    apic_7 { pt3dadd( 6.13102, -287.813, -53.2509, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    apic_7 { pt3dadd( 6.29265, -288.406, -53.2325, 1.62 ) }
    apic_7 { pt3dadd( 6.46331, -288.923, -53.2467, 1.62 ) }
    apic_7 { pt3dadd( 6.61701, -289.327, -53.2726, 1.62 ) }
    apic_7 { pt3dadd( 7.06924, -290.407, -53.3603, 1.62 ) }
    apic_7 { pt3dadd( 7.21649, -290.762, -53.3982, 1.62 ) }
    // Section: apic_6, id: apic_6, parent: apic_5 (entry count 5/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 9.01953, -276.587, -57.1845, 1.54 ) }
    apic_6 { pt3dadd( 9.65843, -277.062, -57.7361, 1.47 ) }
    apic_6 { pt3dadd( 10.7017, -277.718, -58.4904, 1.47 ) }
    apic_6 { pt3dadd( 11.7068, -278.238, -59.1253, 1.32 ) }
    apic_6 { pt3dadd( 12.5022, -278.587, -59.56, 0.88 ) }
    apic_6 { pt3dadd( 13.0911, -278.822, -59.852, 0.88 ) }
    apic_6 { pt3dadd( 13.7932, -279.096, -60.1749, 0.51 ) }
    apic_6 { pt3dadd( 14.6115, -279.389, -60.4732, 0.51 ) }
    apic_6 { pt3dadd( 15.5122, -279.723, -60.732, 0.51 ) }
    apic_6 { pt3dadd( 16.5, -280.129, -60.9915, 0.51 ) }
    apic_6 { pt3dadd( 17.2208, -280.462, -61.1647, 0.51 ) }
    apic_6 { pt3dadd( 17.8146, -280.76, -61.2971, 0.51 ) }
    apic_6 { pt3dadd( 18.317, -281.025, -61.3987, 0.51 ) }
    apic_6 { pt3dadd( 19.2874, -281.529, -61.5918, 0.51 ) }
    apic_6 { pt3dadd( 19.8731, -281.799, -61.7045, 0.73 ) }
    apic_6 { pt3dadd( 20.4989, -282.025, -61.8351, 1.18 ) }
    apic_6 { pt3dadd( 21.4201, -282.223, -62.048, 0.66 ) }
    apic_6 { pt3dadd( 21.8837, -282.268, -62.1659, 0.66 ) }
    apic_6 { pt3dadd( 22.7971, -282.289, -62.4111, 0.66 ) }
    apic_6 { pt3dadd( 23.4888, -282.257, -62.6086, 0.81 ) }
    apic_6 { pt3dadd( 24.1076, -282.211, -62.8012, 0.81 ) }
    apic_6 { pt3dadd( 25.0749, -282.162, -63.1389, 0.44 ) }
    apic_6 { pt3dadd( 25.6385, -282.15, -63.3717, 0.44 ) }
    apic_6 { pt3dadd( 26.093, -282.144, -63.5903, 0.44 ) }
    apic_6 { pt3dadd( 26.6403, -282.148, -63.897, 0.44 ) }
    apic_6 { pt3dadd( 27.3851, -282.161, -64.3629, 0.44 ) }
    apic_6 { pt3dadd( 28.2207, -282.162, -64.9319, 0.95 ) }
    apic_6 { pt3dadd( 28.8866, -282.176, -65.4148, 0.95 ) }
    apic_6 { pt3dadd( 29.6313, -282.204, -65.98, 1.1 ) }
    apic_6 { pt3dadd( 30.3639, -282.264, -66.5446, 0.73 ) }
    apic_6 { pt3dadd( 30.8875, -282.353, -66.9665, 0.73 ) }
    apic_6 { pt3dadd( 31.2082, -282.447, -67.239, 0.73 ) }
    apic_6 { pt3dadd( 31.6962, -282.639, -67.6743, 0.51 ) }
    apic_6 { pt3dadd( 32.1503, -282.861, -68.0761, 0.51 ) }
    apic_6 { pt3dadd( 32.5246, -283.066, -68.3962, 0.66 ) }
    apic_6 { pt3dadd( 33.0453, -283.365, -68.8315, 0.51 ) }
    apic_6 { pt3dadd( 33.5746, -283.626, -69.2465, 0.81 ) }
    apic_6 { pt3dadd( 33.9252, -283.749, -69.4968, 0.51 ) }
    apic_6 { pt3dadd( 34.3417, -283.822, -69.7756, 0.51 ) }
    apic_6 { pt3dadd( 34.8065, -283.842, -70.0452, 0.59 ) }
    apic_6 { pt3dadd( 35.2791, -283.841, -70.2847, 0.37 ) }
    apic_6 { pt3dadd( 36.0237, -283.863, -70.613, 0.37 ) }
    apic_6 { pt3dadd( 36.5883, -283.917, -70.8227, 0.37 ) }
    apic_6 { pt3dadd( 37.5328, -284.096, -71.1534, 1.18 ) }
    apic_6 { pt3dadd( 38.2667, -284.29, -71.3997, 0.51 ) }
    apic_6 { pt3dadd( 38.821, -284.469, -71.5766, 0.51 ) }
    apic_6 { pt3dadd( 39.674, -284.802, -71.8211, 0.44 ) }
    apic_6 { pt3dadd( 40.4937, -285.164, -72.0322, 0.44 ) }
    apic_6 { pt3dadd( 40.9715, -285.374, -72.1384, 0.51 ) }
    apic_6 { pt3dadd( 41.5956, -285.637, -72.2642, 0.51 ) }
    apic_6 { pt3dadd( 42.3226, -285.912, -72.4219, 0.44 ) }
    apic_6 { pt3dadd( 43.2759, -286.207, -72.6483, 0.51 ) }
    apic_6 { pt3dadd( 44.28, -286.463, -72.9051, 0.51 ) }
    apic_6 { pt3dadd( 45.202, -286.673, -73.1699, 0.51 ) }
    apic_6 { pt3dadd( 45.8729, -286.802, -73.3705, 0.88 ) }
    apic_6 { pt3dadd( 46.7402, -286.935, -73.6521, 0.29 ) }
    apic_6 { pt3dadd( 48.1006, -287.066, -74.1145, 0.59 ) }
    apic_6 { pt3dadd( 48.7751, -287.087, -74.3456, 0.51 ) }
    apic_6 { pt3dadd( 49.2293, -287.075, -74.4954, 0.51 ) }
    apic_6 { pt3dadd( 50.3308, -286.998, -74.8454, 0.37 ) }
    apic_6 { pt3dadd( 50.8728, -286.953, -75.0136, 0.37 ) }
    apic_6 { pt3dadd( 51.6881, -286.891, -75.2602, 0.22 ) }
    apic_6 { pt3dadd( 52.5167, -286.847, -75.5242, 0.29 ) }
    apic_6 { pt3dadd( 53.252, -286.83, -75.7686, 0.29 ) }
    apic_6 { pt3dadd( 53.5564, -286.821, -75.8766, 0.29 ) }
    apic_6 { pt3dadd( 54.1727, -286.813, -76.1371, 0.29 ) }
    apic_6 { pt3dadd( 54.7652, -286.815, -76.4276, 0.44 ) }
    apic_6 { pt3dadd( 55.6208, -286.816, -76.9003, 0.95 ) }
    apic_6 { pt3dadd( 56.0344, -286.806, -77.1335, 0.59 ) }
    apic_6 { pt3dadd( 56.871, -286.746, -77.5832, 0.29 ) }
    apic_6 { pt3dadd( 57.4918, -286.654, -77.8869, 0.51 ) }
    apic_6 { pt3dadd( 57.957, -286.546, -78.0916, 0.51 ) }
    apic_6 { pt3dadd( 58.6813, -286.325, -78.3383, 0.66 ) }
    apic_6 { pt3dadd( 59.7413, -285.978, -78.5902, 0.66 ) }
    apic_6 { pt3dadd( 60.42, -285.781, -78.7034, 0.66 ) }
    apic_6 { pt3dadd( 61.1776, -285.58, -78.7794, 0.66 ) }
    apic_6 { pt3dadd( 61.9809, -285.353, -78.8017, 0.66 ) }
    apic_6 { pt3dadd( 63.1878, -284.983, -78.7606, 0.44 ) }
    apic_6 { pt3dadd( 63.6933, -284.828, -78.71, 0.59 ) }
    apic_6 { pt3dadd( 64.5099, -284.589, -78.5999, 0.59 ) }
    apic_6 { pt3dadd( 64.8958, -284.487, -78.5541, 0.73 ) }
    apic_6 { pt3dadd( 65.4904, -284.352, -78.5123, 1.4 ) }
    apic_6 { pt3dadd( 66.4196, -284.178, -78.514, 0.95 ) }
    apic_6 { pt3dadd( 67.1968, -284.049, -78.6019, 0.29 ) }
    apic_6 { pt3dadd( 67.9101, -283.932, -78.7272, 0.29 ) }
    apic_6 { pt3dadd( 68.5487, -283.825, -78.8671, 0.66 ) }
    apic_6 { pt3dadd( 69.165, -283.735, -79.0368, 0.66 ) }
    apic_6 { pt3dadd( 69.8681, -283.642, -79.2682, 0.44 ) }
    apic_6 { pt3dadd( 70.3494, -283.589, -79.4439, 0.44 ) }
    apic_6 { pt3dadd( 71.0507, -283.513, -79.7018, 0.95 ) }
    apic_6 { pt3dadd( 71.5618, -283.457, -79.877, 0.81 ) }
    apic_6 { pt3dadd( 72.3453, -283.368, -80.1377, 0.51 ) }
    apic_6 { pt3dadd( 73.0019, -283.303, -80.3557, 1.03 ) }
    apic_6 { pt3dadd( 73.881, -283.216, -80.658, 0.44 ) }
    apic_6 { pt3dadd( 74.9133, -283.107, -81.0111, 0.51 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    apic_6 { pt3dadd( 75.8476, -282.958, -81.3016, 0.59 ) }
    apic_6 { pt3dadd( 76.2763, -282.862, -81.4113, 0.66 ) }
    apic_6 { pt3dadd( 76.7777, -282.707, -81.5024, 0.66 ) }
    apic_6 { pt3dadd( 77.1044, -282.569, -81.5394, 1.1 ) }
    apic_6 { pt3dadd( 77.6934, -282.251, -81.556, 1.69 ) }
    apic_6 { pt3dadd( 78.9475, -281.488, -81.4985, 0.51 ) }
    apic_6 { pt3dadd( 79.6577, -281.06, -81.4308, 0.29 ) }
    apic_6 { pt3dadd( 80.0212, -280.869, -81.3891, 0.81 ) }
    apic_6 { pt3dadd( 80.506, -280.669, -81.3389, 0.81 ) }
    apic_6 { pt3dadd( 80.7686, -280.606, -81.3169, 0.81 ) }
    apic_6 { pt3dadd( 81.4599, -280.545, -81.2812, 1.25 ) }
    apic_6 { pt3dadd( 82.2368, -280.566, -81.2668, 0.81 ) }
    apic_6 { pt3dadd( 83.4374, -280.627, -81.2655, 0.37 ) }
    apic_6 { pt3dadd( 84.4019, -280.671, -81.3167, 0.37 ) }
    apic_6 { pt3dadd( 85.1893, -280.701, -81.4196, 0.22 ) }
    apic_6 { pt3dadd( 85.7145, -280.71, -81.5349, 0.22 ) }
    apic_6 { pt3dadd( 86.282, -280.691, -81.7051, 0.22 ) }
    apic_6 { pt3dadd( 86.9521, -280.633, -81.9793, 0.22 ) }
    apic_6 { pt3dadd( 87.8863, -280.532, -82.4468, 0.22 ) }
    apic_6 { pt3dadd( 88.6844, -280.46, -82.8373, 1.03 ) }
    apic_6 { pt3dadd( 89.4517, -280.4, -83.1958, 1.25 ) }
    apic_6 { pt3dadd( 89.9891, -280.365, -83.4253, 1.62 ) }
    apic_6 { pt3dadd( 90.815, -280.309, -83.7618, 2.13 ) }
    apic_6 { pt3dadd( 91.3924, -280.258, -83.9877, 2.13 ) }
    apic_6 { pt3dadd( 93.1049, -280.035, -84.5595, 0.29 ) }
    apic_6 { pt3dadd( 93.4215, -279.978, -84.6571, 0.29 ) }
    apic_6 { pt3dadd( 93.9753, -279.868, -84.8343, 0.29 ) }
    apic_6 { pt3dadd( 94.6222, -279.75, -85.0762, 0.29 ) }
    apic_6 { pt3dadd( 95.2043, -279.647, -85.3017, 0.29 ) }
    apic_6 { pt3dadd( 95.4438, -279.606, -85.4132, 0.29 ) }
    apic_6 { pt3dadd( 96.0573, -279.548, -85.7258, 0.29 ) }
    apic_6 { pt3dadd( 97.0361, -279.557, -86.1877, 0.37 ) }
    apic_6 { pt3dadd( 97.6445, -279.613, -86.4547, 0.95 ) }
    apic_6 { pt3dadd( 98.5722, -279.772, -86.8207, 2.2 ) }
    apic_6 { pt3dadd( 99.4689, -279.991, -87.16, 1.32 ) }
    apic_6 { pt3dadd( 100.676, -280.361, -87.6027, 0.44 ) }
    apic_6 { pt3dadd( 101.596, -280.701, -87.9075, 0.37 ) }
    apic_6 { pt3dadd( 102.0, -280.875, -88.0127, 0.37 ) }
    apic_6 { pt3dadd( 102.71, -281.232, -88.1104, 0.37 ) }
    apic_6 { pt3dadd( 103.335, -281.604, -88.1236, 0.22 ) }
    apic_6 { pt3dadd( 103.84, -281.94, -88.0762, 0.22 ) }
    apic_6 { pt3dadd( 104.461, -282.4, -87.9649, 0.95 ) }
    apic_6 { pt3dadd( 104.983, -282.813, -87.8439, 0.51 ) }
    apic_6 { pt3dadd( 105.798, -283.475, -87.6228, 0.44 ) }
    apic_6 { pt3dadd( 106.598, -284.147, -87.3611, 0.37 ) }
    apic_6 { pt3dadd( 106.758, -284.296, -87.2983, 0.37 ) }
    apic_6 { pt3dadd( 107.026, -284.617, -87.1733, 0.37 ) }
    apic_6 { pt3dadd( 107.187, -284.882, -87.0692, 0.37 ) }
    apic_6 { pt3dadd( 107.329, -285.167, -86.9501, 0.37 ) }
    apic_6 { pt3dadd( 107.551, -285.644, -86.7341, 0.37 ) }
    apic_6 { pt3dadd( 107.848, -286.258, -86.4452, 0.59 ) }
    apic_6 { pt3dadd( 108.322, -287.127, -86.0282, 1.47 ) }
    apic_6 { pt3dadd( 108.922, -288.049, -85.5503, 0.22 ) }
    apic_6 { pt3dadd( 109.154, -288.352, -85.388, 0.22 ) }
    apic_6 { pt3dadd( 109.577, -288.846, -85.1304, 0.22 ) }
    apic_6 { pt3dadd( 109.985, -289.257, -84.9402, 0.81 ) }
    apic_6 { pt3dadd( 110.678, -289.803, -84.7342, 0.15 ) }
    apic_6 { pt3dadd( 111.52, -290.28, -84.5895, 0.15 ) }
    apic_6 { pt3dadd( 112.278, -290.57, -84.5575, 0.15 ) }
    apic_6 { pt3dadd( 112.557, -290.66, -84.5526, 0.81 ) }
    apic_6 { pt3dadd( 113.329, -290.861, -84.5331, 1.03 ) }
    apic_6 { pt3dadd( 113.967, -290.985, -84.5236, 1.25 ) }
    apic_6 { pt3dadd( 114.733, -291.088, -84.5672, 2.06 ) }
    apic_6 { pt3dadd( 115.867, -291.221, -84.6757, 0.29 ) }
    apic_6 { pt3dadd( 116.584, -291.292, -84.7154, 0.29 ) }
    apic_6 { pt3dadd( 117.174, -291.371, -84.7074, 0.29 ) }
    apic_6 { pt3dadd( 117.648, -291.464, -84.674, 0.29 ) }
    apic_6 { pt3dadd( 118.453, -291.683, -84.618, 0.29 ) }
    apic_6 { pt3dadd( 118.713, -291.764, -84.6125, 0.88 ) }
    apic_6 { pt3dadd( 119.169, -291.91, -84.6103, 0.88 ) }
    apic_6 { pt3dadd( 119.954, -292.157, -84.5862, 0.15 ) }
    apic_6 { pt3dadd( 120.523, -292.355, -84.5352, 0.15 ) }
    apic_6 { pt3dadd( 120.837, -292.478, -84.4839, 0.95 ) }
    apic_6 { pt3dadd( 121.369, -292.694, -84.3629, 0.95 ) }
    apic_6 { pt3dadd( 121.711, -292.835, -84.2893, 0.95 ) }
    apic_6 { pt3dadd( 122.688, -293.234, -84.091, 0.22 ) }
    apic_6 { pt3dadd( 123.187, -293.443, -83.9663, 0.22 ) }
    apic_6 { pt3dadd( 123.593, -293.627, -83.844, 0.22 ) }
    apic_6 { pt3dadd( 124.141, -293.892, -83.6457, 1.18 ) }
    apic_6 { pt3dadd( 124.686, -294.165, -83.4307, 0.95 ) }
    apic_6 { pt3dadd( 125.066, -294.346, -83.268, 0.95 ) }
    apic_6 { pt3dadd( 125.794, -294.633, -82.9306, 0.44 ) }
    apic_6 { pt3dadd( 126.104, -294.726, -82.7724, 0.44 ) }
    apic_6 { pt3dadd( 126.836, -294.867, -82.399, 0.66 ) }
    apic_6 { pt3dadd( 127.284, -294.914, -82.1761, 1.32 ) }
    apic_6 { pt3dadd( 128.26, -294.956, -81.7022, 0.51 ) }
    apic_6 { pt3dadd( 129.218, -294.986, -81.2767, 0.95 ) }
    apic_6 { pt3dadd( 129.663, -294.999, -81.0811, 0.95 ) }
    apic_6 { pt3dadd( 130.251, -295.022, -80.8286, 0.29 ) }
    apic_6 { pt3dadd( 130.835, -295.062, -80.5763, 0.29 ) }
    apic_6 { pt3dadd( 131.301, -295.119, -80.3652, 0.29 ) }
    apic_6 { pt3dadd( 132.116, -295.252, -80.0094, 1.47 ) }
    apic_6 { pt3dadd( 133.002, -295.443, -79.6141, 1.47 ) }
    apic_6 { pt3dadd( 133.505, -295.577, -79.384, 0.22 ) }
    apic_6 { pt3dadd( 134.124, -295.794, -79.0962, 0.88 ) }
    apic_6 { pt3dadd( 134.486, -295.954, -78.9383, 0.88 ) }
    apic_6 { pt3dadd( 135.154, -296.292, -78.6885, 0.66 ) }
    apic_6 { pt3dadd( 135.686, -296.582, -78.5293, 0.66 ) }
    apic_6 { pt3dadd( 136.148, -296.841, -78.4285, 0.66 ) }
    apic_6 { pt3dadd( 137.08, -297.366, -78.2664, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    apic_6 { pt3dadd( 138.035, -297.896, -78.153, 0.51 ) }
    apic_6 { pt3dadd( 138.903, -298.369, -78.0735, 0.22 ) }
    apic_6 { pt3dadd( 139.723, -298.801, -78.0224, 0.22 ) }
    apic_6 { pt3dadd( 140.651, -299.254, -77.9818, 0.22 ) }
    apic_6 { pt3dadd( 141.478, -299.6, -77.948, 0.22 ) }
    apic_6 { pt3dadd( 142.269, -299.878, -77.9266, 0.88 ) }
    apic_6 { pt3dadd( 142.404, -299.923, -77.9235, 0.88 ) }
    apic_6 { pt3dadd( 143.147, -300.199, -77.9339, 0.15 ) }
    apic_6 { pt3dadd( 143.942, -300.537, -77.9751, 1.91 ) }
    apic_6 { pt3dadd( 144.672, -300.914, -78.0484, 0.59 ) }
    apic_6 { pt3dadd( 145.093, -301.177, -78.1462, 0.07 ) }
    apic_6 { pt3dadd( 145.388, -301.397, -78.2678, 0.66 ) }
    apic_6 { pt3dadd( 146.044, -301.968, -78.688, 0.22 ) }
    apic_6 { pt3dadd( 146.149, -302.069, -78.7725, 0.22 ) }
    apic_6 { pt3dadd( 146.438, -302.356, -79.0283, 0.22 ) }
    apic_6 { pt3dadd( 147.097, -302.944, -79.475, 0.95 ) }
    apic_6 { pt3dadd( 147.605, -303.277, -79.6347, 0.95 ) }
    apic_6 { pt3dadd( 148.271, -303.614, -79.6835, 0.95 ) }
    apic_6 { pt3dadd( 149.135, -303.987, -79.5996, 0.95 ) }
    apic_6 { pt3dadd( 149.583, -304.149, -79.5379, 0.66 ) }
    apic_6 { pt3dadd( 150.648, -304.455, -79.3905, 0.37 ) }
    apic_6 { pt3dadd( 151.724, -304.705, -79.1946, 0.37 ) }
    apic_6 { pt3dadd( 152.309, -304.812, -79.0776, 0.29 ) }
    apic_6 { pt3dadd( 152.986, -304.916, -78.9528, 0.66 ) }
    apic_6 { pt3dadd( 153.829, -305.032, -78.8461, 0.29 ) }
    apic_6 { pt3dadd( 154.94, -305.139, -78.8153, 0.29 ) }
    apic_6 { pt3dadd( 156.046, -305.199, -78.9247, 1.54 ) }
    apic_6 { pt3dadd( 156.892, -305.217, -79.0896, 0.66 ) }
    apic_6 { pt3dadd( 157.591, -305.216, -79.2836, 0.88 ) }
    apic_6 { pt3dadd( 158.23, -305.2, -79.5052, 1.1 ) }
    apic_6 { pt3dadd( 159.309, -305.125, -79.9461, 0.29 ) }
    apic_6 { pt3dadd( 160.312, -305.012, -80.4438, 0.07 ) }
    apic_6 { pt3dadd( 160.765, -304.951, -80.7172, 0.37 ) }
    apic_6 { pt3dadd( 161.461, -304.844, -81.1627, 0.22 ) }
    apic_6 { pt3dadd( 161.843, -304.779, -81.3881, 0.22 ) }
    apic_6 { pt3dadd( 162.573, -304.683, -81.7869, 0.22 ) }
    apic_6 { pt3dadd( 162.986, -304.664, -81.9866, 0.22 ) }
    apic_6 { pt3dadd( 163.474, -304.637, -82.2102, 0.22 ) }
    apic_6 { pt3dadd( 163.915, -304.604, -82.3944, 0.66 ) }
    apic_6 { pt3dadd( 164.337, -304.571, -82.5573, 0.59 ) }
    apic_6 { pt3dadd( 164.86, -304.537, -82.7628, 0.59 ) }
    apic_6 { pt3dadd( 165.511, -304.502, -83.0164, 0.29 ) }
    apic_6 { pt3dadd( 166.708, -304.392, -83.4831, 0.29 ) }
    apic_6 { pt3dadd( 167.242, -304.32, -83.6969, 0.51 ) }
    apic_6 { pt3dadd( 167.628, -304.258, -83.8564, 0.66 ) }
    apic_6 { pt3dadd( 168.389, -304.11, -84.1943, 0.29 ) }
    apic_6 { pt3dadd( 169.072, -303.958, -84.4988, 0.88 ) }
    apic_6 { pt3dadd( 169.513, -303.859, -84.6861, 0.51 ) }
    apic_6 { pt3dadd( 169.929, -303.77, -84.8645, 0.51 ) }
    apic_6 { pt3dadd( 170.368, -303.678, -85.0593, 0.88 ) }
    apic_6 { pt3dadd( 171.231, -303.486, -85.4943, 0.15 ) }
    apic_6 { pt3dadd( 171.53, -303.414, -85.674, 0.15 ) }
    apic_6 { pt3dadd( 171.99, -303.291, -85.9957, 0.95 ) }
    apic_6 { pt3dadd( 172.618, -303.118, -86.4828, 0.15 ) }
    apic_6 { pt3dadd( 172.876, -303.05, -86.6924, 0.37 ) }
    apic_6 { pt3dadd( 173.415, -302.935, -87.14, 0.07 ) }
    apic_6 { pt3dadd( 174.124, -302.857, -87.7676, 0.07 ) }
    apic_6 { pt3dadd( 174.527, -302.861, -88.1215, 0.07 ) }
    apic_6 { pt3dadd( 174.752, -302.888, -88.3023, 0.07 ) }
    apic_6 { pt3dadd( 175.105, -302.956, -88.5364, 0.88 ) }
    apic_6 { pt3dadd( 175.68, -303.124, -88.7904, 0.51 ) }
    apic_6 { pt3dadd( 176.513, -303.5, -88.9658, 0.22 ) }
    apic_6 { pt3dadd( 177.229, -303.928, -88.9671, 0.22 ) }
    apic_6 { pt3dadd( 177.674, -304.221, -88.8977, 0.22 ) }
    apic_6 { pt3dadd( 178.069, -304.481, -88.7965, 1.32 ) }
    apic_6 { pt3dadd( 179.088, -305.167, -88.4552, 0.44 ) }
    apic_6 { pt3dadd( 179.761, -305.622, -88.1547, 0.44 ) }
    apic_6 { pt3dadd( 180.446, -306.092, -87.7724, 0.44 ) }
    apic_6 { pt3dadd( 180.947, -306.461, -87.4639, 0.44 ) }
    apic_6 { pt3dadd( 181.326, -306.749, -87.2202, 0.81 ) }
    apic_6 { pt3dadd( 181.79, -307.142, -86.8794, 0.15 ) }
    apic_6 { pt3dadd( 182.313, -307.623, -86.4476, 0.88 ) }
    apic_6 { pt3dadd( 182.775, -308.098, -86.0705, 0.07 ) }
    apic_6 { pt3dadd( 183.305, -308.732, -85.6483, 0.15 ) }
    apic_6 { pt3dadd( 183.746, -309.316, -85.2796, 0.15 ) }
    apic_6 { pt3dadd( 184.335, -310.168, -84.7378, 0.15 ) }
    apic_6 { pt3dadd( 184.575, -310.538, -84.505, 0.15 ) }
    apic_6 { pt3dadd( 185.073, -311.426, -84.0351, 0.81 ) }
    apic_6 { pt3dadd( 185.324, -311.997, -83.7806, 0.15 ) }
    // Section: apic_9, id: apic_9, parent: apic_7 (entry count 79/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( 7.21649, -290.762, -53.3982, 1.62 ) }
    apic_9 { pt3dadd( 7.74848, -292.041, -53.272, 1.62 ) }
    apic_9 { pt3dadd( 8.48967, -293.906, -53.181, 1.03 ) }
    apic_9 { pt3dadd( 9.1215, -295.451, -53.1513, 1.03 ) }
    apic_9 { pt3dadd( 9.3938, -296.074, -53.1416, 1.03 ) }
    apic_9 { pt3dadd( 9.93477, -297.223, -53.119, 1.03 ) }
    apic_9 { pt3dadd( 10.7673, -298.867, -53.0735, 0.88 ) }
    apic_9 { pt3dadd( 11.4441, -300.116, -53.0562, 0.66 ) }
    apic_9 { pt3dadd( 12.094, -301.133, -53.0381, 0.66 ) }
    apic_9 { pt3dadd( 12.5859, -301.651, -53.0012, 0.66 ) }
    apic_9 { pt3dadd( 13.0906, -301.919, -52.9051, 0.66 ) }
    apic_9 { pt3dadd( 13.7074, -302.035, -52.7224, 0.59 ) }
    apic_9 { pt3dadd( 14.4211, -302.086, -52.4419, 0.59 ) }
    apic_9 { pt3dadd( 15.4221, -302.211, -51.9516, 0.59 ) }
    apic_9 { pt3dadd( 16.261, -302.495, -51.4233, 0.95 ) }
    apic_9 { pt3dadd( 17.1008, -303.07, -50.7367, 0.66 ) }
    apic_9 { pt3dadd( 17.727, -303.773, -50.0945, 0.81 ) }
    apic_9 { pt3dadd( 18.2051, -304.581, -49.4861, 1.03 ) }
    apic_9 { pt3dadd( 18.6204, -305.633, -48.8109, 1.03 ) }
    apic_9 { pt3dadd( 19.029, -307.168, -47.9076, 1.03 ) }
    apic_9 { pt3dadd( 19.2505, -308.173, -47.3264, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    apic_9 { pt3dadd( 19.4809, -309.251, -46.6665, 0.81 ) }
    apic_9 { pt3dadd( 19.751, -310.349, -45.9551, 1.1 ) }
    apic_9 { pt3dadd( 20.3223, -312.005, -44.8387, 1.1 ) }
    apic_9 { pt3dadd( 21.0188, -313.399, -43.8895, 1.18 ) }
    apic_9 { pt3dadd( 21.9469, -314.683, -43.01, 1.25 ) }
    apic_9 { pt3dadd( 23.0194, -315.766, -42.2483, 1.32 ) }
    apic_9 { pt3dadd( 23.7697, -316.353, -41.8236, 0.95 ) }
    apic_9 { pt3dadd( 25.2107, -317.251, -41.1935, 1.1 ) }
    apic_9 { pt3dadd( 26.4653, -317.93, -40.8299, 1.1 ) }
    apic_9 { pt3dadd( 27.364, -318.416, -40.6526, 1.1 ) }
    apic_9 { pt3dadd( 28.7955, -319.293, -40.4835, 0.95 ) }
    apic_9 { pt3dadd( 29.3262, -319.698, -40.4617, 0.81 ) }
    apic_9 { pt3dadd( 30.0126, -320.358, -40.4468, 1.25 ) }
    apic_9 { pt3dadd( 31.4347, -322.043, -40.5042, 0.51 ) }
    apic_9 { pt3dadd( 32.0918, -322.907, -40.5824, 0.37 ) }
    apic_9 { pt3dadd( 32.6062, -323.589, -40.7336, 1.1 ) }
    apic_9 { pt3dadd( 33.5542, -324.8, -41.1337, 1.91 ) }
    apic_9 { pt3dadd( 34.1196, -325.508, -41.404, 1.91 ) }
    apic_9 { pt3dadd( 35.0609, -326.72, -41.9199, 1.1 ) }
    apic_9 { pt3dadd( 35.5299, -327.415, -42.2054, 1.1 ) }
    apic_9 { pt3dadd( 36.4653, -329.043, -42.808, 1.1 ) }
    apic_9 { pt3dadd( 36.7396, -329.652, -42.9662, 1.1 ) }
    apic_9 { pt3dadd( 36.9935, -330.651, -43.1152, 0.81 ) }
    apic_9 { pt3dadd( 37.1175, -331.796, -43.2029, 1.54 ) }
    apic_9 { pt3dadd( 37.1784, -333.848, -43.2346, 1.32 ) }
    apic_9 { pt3dadd( 37.2069, -334.959, -43.2356, 1.76 ) }
    apic_9 { pt3dadd( 37.2632, -336.392, -43.254, 1.76 ) }
    apic_9 { pt3dadd( 37.4717, -339.018, -43.438, 1.4 ) }
    apic_9 { pt3dadd( 37.6505, -340.184, -43.616, 1.4 ) }
    apic_9 { pt3dadd( 37.9706, -341.683, -43.9861, 1.47 ) }
    apic_9 { pt3dadd( 38.3608, -343.257, -44.5273, 1.03 ) }
    apic_9 { pt3dadd( 38.6277, -344.579, -45.0565, 1.32 ) }
    apic_9 { pt3dadd( 38.8239, -346.021, -45.7044, 1.32 ) }
    apic_9 { pt3dadd( 38.8567, -347.788, -46.4784, 1.18 ) }
    apic_9 { pt3dadd( 38.66, -349.378, -47.0814, 0.88 ) }
    apic_9 { pt3dadd( 38.2601, -350.861, -47.5053, 0.95 ) }
    apic_9 { pt3dadd( 37.4982, -352.87, -47.8342, 0.73 ) }
    apic_9 { pt3dadd( 37.0927, -353.841, -47.8862, 1.47 ) }
    apic_9 { pt3dadd( 36.3501, -355.72, -47.7983, 0.95 ) }
    apic_9 { pt3dadd( 35.9321, -356.985, -47.6162, 0.81 ) }
    apic_9 { pt3dadd( 35.7431, -358.227, -47.34, 1.32 ) }
    apic_9 { pt3dadd( 35.8202, -359.028, -47.1231, 1.32 ) }
    apic_9 { pt3dadd( 36.2268, -360.396, -46.7371, 0.59 ) }
    apic_9 { pt3dadd( 36.8202, -361.94, -46.2993, 1.47 ) }
    apic_9 { pt3dadd( 37.2413, -362.923, -46.0403, 1.47 ) }
    apic_9 { pt3dadd( 37.8086, -364.318, -45.6945, 1.47 ) }
    apic_9 { pt3dadd( 38.3737, -366.017, -45.2611, 1.47 ) }
    apic_9 { pt3dadd( 38.8742, -368.245, -44.6529, 0.95 ) }
    apic_9 { pt3dadd( 39.0219, -369.755, -44.1706, 0.95 ) }
    apic_9 { pt3dadd( 39.0337, -370.806, -43.7839, 1.03 ) }
    apic_9 { pt3dadd( 39.007, -371.959, -43.3208, 1.03 ) }
    apic_9 { pt3dadd( 39.0038, -373.669, -42.579, 1.03 ) }
    apic_9 { pt3dadd( 39.0636, -374.797, -42.0758, 1.03 ) }
    apic_9 { pt3dadd( 39.2569, -376.233, -41.4216, 0.73 ) }
    apic_9 { pt3dadd( 39.599, -377.871, -40.7277, 0.37 ) }
    apic_9 { pt3dadd( 39.9509, -379.259, -40.1498, 1.03 ) }
    apic_9 { pt3dadd( 40.4877, -381.125, -39.3606, 1.03 ) }
    apic_9 { pt3dadd( 40.8151, -382.149, -38.9413, 1.03 ) }
    apic_9 { pt3dadd( 41.169, -383.257, -38.5094, 1.1 ) }
    apic_9 { pt3dadd( 41.7791, -385.364, -37.7599, 1.18 ) }
    apic_9 { pt3dadd( 42.1183, -386.847, -37.2318, 1.18 ) }
    apic_9 { pt3dadd( 42.4543, -388.827, -36.514, 1.25 ) }
    apic_9 { pt3dadd( 42.5092, -389.347, -36.3306, 1.32 ) }
    apic_9 { pt3dadd( 42.5524, -389.919, -36.1526, 1.32 ) }
    apic_9 { pt3dadd( 42.6836, -391.474, -35.7751, 1.03 ) }
    apic_9 { pt3dadd( 42.8098, -392.885, -35.6372, 0.88 ) }
    apic_9 { pt3dadd( 42.8756, -393.734, -35.6767, 0.88 ) }
    apic_9 { pt3dadd( 42.92, -394.725, -35.7947, 0.88 ) }
    apic_9 { pt3dadd( 42.8656, -396.196, -35.9452, 0.88 ) }
    apic_9 { pt3dadd( 42.6897, -397.244, -36.008, 0.44 ) }
    apic_9 { pt3dadd( 42.0664, -398.964, -35.9569, 0.59 ) }
    apic_9 { pt3dadd( 41.6755, -399.711, -35.8662, 0.59 ) }
    apic_9 { pt3dadd( 41.0791, -400.632, -35.6371, 1.18 ) }
    apic_9 { pt3dadd( 39.8713, -402.292, -35.1306, 2.57 ) }
    apic_9 { pt3dadd( 38.6225, -403.925, -34.5496, 1.54 ) }
    apic_9 { pt3dadd( 37.5606, -405.33, -34.0345, 1.03 ) }
    apic_9 { pt3dadd( 37.0577, -406.046, -33.7603, 1.03 ) }
    apic_9 { pt3dadd( 36.2174, -407.463, -33.2789, 0.81 ) }
    apic_9 { pt3dadd( 35.7233, -408.614, -32.9152, 0.66 ) }
    apic_9 { pt3dadd( 35.4738, -409.699, -32.5812, 1.54 ) }
    apic_9 { pt3dadd( 35.3749, -410.657, -32.2749, 1.76 ) }
    apic_9 { pt3dadd( 35.3319, -411.612, -31.9622, 1.76 ) }
    apic_9 { pt3dadd( 35.346, -412.889, -31.4923, 1.91 ) }
    apic_9 { pt3dadd( 35.4936, -414.905, -30.7034, 2.13 ) }
    apic_9 { pt3dadd( 35.6057, -415.908, -30.2908, 2.13 ) }
    apic_9 { pt3dadd( 35.8325, -417.571, -29.6197, 2.13 ) }
    apic_9 { pt3dadd( 36.047, -419.048, -29.0093, 0.88 ) }
    apic_9 { pt3dadd( 36.3236, -420.721, -28.3409, 0.59 ) }
    apic_9 { pt3dadd( 36.5487, -421.95, -27.8762, 0.66 ) }
    apic_9 { pt3dadd( 36.8523, -423.485, -27.3374, 0.95 ) }
    apic_9 { pt3dadd( 37.0947, -424.859, -26.8662, 1.25 ) }
    apic_9 { pt3dadd( 37.2999, -426.581, -26.287, 0.95 ) }
    apic_9 { pt3dadd( 37.3361, -428.234, -25.7265, 1.18 ) }
    apic_9 { pt3dadd( 37.2485, -429.161, -25.4278, 1.18 ) }
    apic_9 { pt3dadd( 37.0162, -430.352, -25.0524, 0.95 ) }
    apic_9 { pt3dadd( 36.6214, -431.884, -24.5679, 0.81 ) }
    apic_9 { pt3dadd( 36.242, -433.23, -24.145, 0.66 ) }
    apic_9 { pt3dadd( 35.9395, -434.279, -23.8182, 1.1 ) }
    apic_9 { pt3dadd( 35.6443, -435.295, -23.4972, 1.4 ) }
    apic_9 { pt3dadd( 35.2522, -436.838, -23.0034, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    apic_9 { pt3dadd( 35.074, -437.877, -22.6763, 0.88 ) }
    apic_9 { pt3dadd( 35.0292, -438.723, -22.4198, 1.25 ) }
    apic_9 { pt3dadd( 35.042, -439.343, -22.2394, 1.25 ) }
    apic_9 { pt3dadd( 35.1256, -441.353, -21.6827, 0.66 ) }
    apic_9 { pt3dadd( 35.144, -442.353, -21.4306, 0.73 ) }
    apic_9 { pt3dadd( 35.1211, -443.495, -21.1571, 0.95 ) }
    apic_9 { pt3dadd( 35.0429, -444.571, -20.9176, 0.73 ) }
    apic_9 { pt3dadd( 34.8246, -446.406, -20.5011, 0.81 ) }
    apic_9 { pt3dadd( 34.6641, -447.638, -20.2167, 0.81 ) }
    apic_9 { pt3dadd( 34.4501, -449.14, -19.8455, 1.54 ) }
    apic_9 { pt3dadd( 34.2858, -450.182, -19.5913, 1.54 ) }
    apic_9 { pt3dadd( 34.1401, -451.173, -19.3463, 0.88 ) }
    apic_9 { pt3dadd( 34.055, -451.945, -19.1452, 1.69 ) }
    apic_9 { pt3dadd( 33.9835, -454.089, -18.5054, 1.47 ) }
    apic_9 { pt3dadd( 34.0401, -455.591, -17.9618, 0.59 ) }
    apic_9 { pt3dadd( 34.1619, -456.662, -17.4379, 0.59 ) }
    apic_9 { pt3dadd( 34.309, -457.533, -16.9123, 0.59 ) }
    apic_9 { pt3dadd( 34.5357, -458.459, -16.2227, 1.03 ) }
    apic_9 { pt3dadd( 34.8792, -459.461, -15.3481, 1.03 ) }
    apic_9 { pt3dadd( 35.3095, -460.439, -14.3496, 1.25 ) }
    apic_9 { pt3dadd( 36.0099, -461.847, -12.8129, 0.95 ) }
    apic_9 { pt3dadd( 36.2707, -462.333, -12.2915, 0.95 ) }
    apic_9 { pt3dadd( 36.7207, -463.184, -11.4853, 0.51 ) }
    apic_9 { pt3dadd( 37.0482, -463.762, -11.0425, 0.51 ) }
    apic_9 { pt3dadd( 37.3155, -464.168, -10.7955, 0.51 ) }
    apic_9 { pt3dadd( 38.0128, -465.058, -10.4353, 0.59 ) }
    apic_9 { pt3dadd( 38.7376, -465.868, -10.263, 0.59 ) }
    apic_9 { pt3dadd( 39.3386, -466.545, -10.1784, 0.59 ) }
    apic_9 { pt3dadd( 39.9373, -467.216, -10.12, 1.18 ) }
    apic_9 { pt3dadd( 41.3645, -468.749, -9.98854, 1.18 ) }
    apic_9 { pt3dadd( 42.1237, -469.491, -9.92799, 1.54 ) }
    apic_9 { pt3dadd( 42.614, -469.924, -9.88569, 1.69 ) }
    apic_9 { pt3dadd( 44.1293, -471.26, -9.59156, 2.28 ) }
    // Section: apic_8, id: apic_8, parent: apic_7 (entry count 33/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 7.21649, -290.762, -53.3982, 1.62 ) }
    apic_8 { pt3dadd( 7.45506, -291.402, -53.7949, 1.18 ) }
    apic_8 { pt3dadd( 7.96956, -292.68, -54.7464, 0.81 ) }
    apic_8 { pt3dadd( 8.27381, -293.371, -55.3046, 0.66 ) }
    apic_8 { pt3dadd( 8.79097, -294.442, -56.1736, 0.66 ) }
    apic_8 { pt3dadd( 9.22627, -295.284, -56.8563, 0.81 ) }
    apic_8 { pt3dadd( 9.75159, -296.252, -57.6365, 0.81 ) }
    apic_8 { pt3dadd( 10.3036, -297.163, -58.3706, 0.95 ) }
    apic_8 { pt3dadd( 10.6078, -297.657, -58.741, 1.1 ) }
    apic_8 { pt3dadd( 10.9458, -298.282, -59.2211, 0.66 ) }
    apic_8 { pt3dadd( 11.1112, -298.695, -59.5297, 0.66 ) }
    apic_8 { pt3dadd( 11.2052, -299.078, -59.7931, 0.66 ) }
    apic_8 { pt3dadd( 11.2609, -299.644, -60.1637, 0.66 ) }
    apic_8 { pt3dadd( 11.222, -300.455, -60.6787, 0.66 ) }
    apic_8 { pt3dadd( 11.1277, -301.172, -61.1373, 0.95 ) }
    apic_8 { pt3dadd( 11.0128, -301.872, -61.5992, 1.1 ) }
    apic_8 { pt3dadd( 10.8911, -302.668, -62.1252, 0.73 ) }
    apic_8 { pt3dadd( 10.713, -303.736, -62.8572, 0.73 ) }
    apic_8 { pt3dadd( 10.5986, -304.31, -63.2565, 0.73 ) }
    apic_8 { pt3dadd( 10.298, -305.477, -64.0858, 0.66 ) }
    apic_8 { pt3dadd( 10.0344, -306.415, -64.7134, 0.88 ) }
    apic_8 { pt3dadd( 9.73612, -307.371, -65.3109, 1.03 ) }
    apic_8 { pt3dadd( 9.47244, -308.09, -65.7122, 1.1 ) }
    apic_8 { pt3dadd( 9.14767, -308.837, -66.0699, 1.32 ) }
    apic_8 { pt3dadd( 8.41407, -310.306, -66.7044, 0.59 ) }
    apic_8 { pt3dadd( 8.12153, -310.81, -66.8785, 0.59 ) }
    apic_8 { pt3dadd( 7.67158, -311.521, -67.0343, 0.59 ) }
    apic_8 { pt3dadd( 7.04321, -312.504, -67.1465, 0.73 ) }
    apic_8 { pt3dadd( 6.56108, -313.285, -67.1794, 0.59 ) }
    apic_8 { pt3dadd( 5.86903, -314.347, -67.1744, 0.44 ) }
    apic_8 { pt3dadd( 5.08876, -315.398, -67.1172, 0.44 ) }
    apic_8 { pt3dadd( 4.54502, -316.035, -67.0651, 0.59 ) }
    apic_8 { pt3dadd( 4.0644, -316.532, -67.0116, 0.51 ) }
    apic_8 { pt3dadd( 3.06083, -317.519, -66.8859, 0.44 ) }
    apic_8 { pt3dadd( 2.24184, -318.369, -66.7661, 0.66 ) }
    apic_8 { pt3dadd( 1.52519, -319.191, -66.6471, 0.66 ) }
    apic_8 { pt3dadd( 0.799274, -320.109, -66.5561, 0.81 ) }
    apic_8 { pt3dadd( 0.0594282, -321.114, -66.5108, 0.44 ) }
    apic_8 { pt3dadd( -0.269631, -321.588, -66.4964, 0.44 ) }
    apic_8 { pt3dadd( -0.805747, -322.436, -66.48, 0.44 ) }
    apic_8 { pt3dadd( -1.18804, -323.079, -66.4845, 0.44 ) }
    apic_8 { pt3dadd( -1.77987, -324.083, -66.5147, 0.44 ) }
    apic_8 { pt3dadd( -2.30606, -324.958, -66.5893, 0.59 ) }
    apic_8 { pt3dadd( -2.63495, -325.501, -66.6565, 0.66 ) }
    apic_8 { pt3dadd( -3.18525, -326.341, -66.7818, 0.37 ) }
    apic_8 { pt3dadd( -3.65633, -327.006, -66.8853, 0.37 ) }
    apic_8 { pt3dadd( -4.0522, -327.553, -66.9467, 0.51 ) }
    apic_8 { pt3dadd( -4.35198, -327.973, -66.9745, 0.51 ) }
    apic_8 { pt3dadd( -5.17216, -329.117, -66.979, 0.29 ) }
    apic_8 { pt3dadd( -5.55958, -329.657, -66.9717, 0.29 ) }
    apic_8 { pt3dadd( -5.99565, -330.291, -66.9773, 0.29 ) }
    apic_8 { pt3dadd( -7.19504, -332.038, -67.0698, 0.29 ) }
    apic_8 { pt3dadd( -7.54471, -332.55, -67.1177, 0.29 ) }
    apic_8 { pt3dadd( -8.18978, -333.526, -67.2477, 2.28 ) }
    apic_8 { pt3dadd( -8.91381, -334.727, -67.4474, 3.01 ) }
    apic_8 { pt3dadd( -9.83805, -336.466, -67.7551, 0.73 ) }
    apic_8 { pt3dadd( -10.4279, -337.717, -67.9946, 0.51 ) }
    apic_8 { pt3dadd( -10.9586, -338.955, -68.2247, 0.51 ) }
    apic_8 { pt3dadd( -11.4666, -340.157, -68.4242, 0.51 ) }
    apic_8 { pt3dadd( -11.8933, -341.109, -68.5648, 0.73 ) }
    apic_8 { pt3dadd( -12.481, -342.288, -68.6934, 0.59 ) }
    apic_8 { pt3dadd( -12.9716, -343.188, -68.7269, 1.76 ) }
    apic_8 { pt3dadd( -14.0263, -345.202, -68.6612, 0.37 ) }
    apic_8 { pt3dadd( -14.4084, -346.026, -68.5874, 0.37 ) }
    apic_8 { pt3dadd( -14.9554, -347.386, -68.4206, 0.73 ) }
    apic_8 { pt3dadd( -15.3405, -348.534, -68.3027, 0.73 ) }
    apic_8 { pt3dadd( -15.6967, -349.875, -68.1777, 1.62 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    apic_8 { pt3dadd( -16.1428, -351.793, -67.9786, 0.81 ) }
    apic_8 { pt3dadd( -16.6013, -354.007, -67.7376, 0.59 ) }
    apic_8 { pt3dadd( -16.9125, -355.482, -67.5553, 0.44 ) }
    apic_8 { pt3dadd( -17.3188, -357.347, -67.303, 0.51 ) }
    apic_8 { pt3dadd( -17.6435, -358.597, -67.1365, 0.29 ) }
    apic_8 { pt3dadd( -18.2165, -360.259, -66.9775, 0.44 ) }
    apic_8 { pt3dadd( -18.7045, -361.289, -66.9194, 0.51 ) }
    apic_8 { pt3dadd( -19.1491, -362.055, -66.9314, 0.73 ) }
    apic_8 { pt3dadd( -19.4492, -362.551, -66.9767, 0.81 ) }
    apic_8 { pt3dadd( -19.9385, -363.388, -67.1086, 0.81 ) }
    apic_8 { pt3dadd( -20.5291, -364.596, -67.4059, 0.51 ) }
    apic_8 { pt3dadd( -20.9455, -365.714, -67.7594, 0.51 ) }
    apic_8 { pt3dadd( -21.334, -367.073, -68.225, 0.51 ) }
    apic_8 { pt3dadd( -21.5857, -368.293, -68.6472, 0.95 ) }
    apic_8 { pt3dadd( -21.7348, -369.064, -68.8978, 0.66 ) }
    apic_8 { pt3dadd( -21.9064, -369.971, -69.1736, 0.51 ) }
    apic_8 { pt3dadd( -22.0525, -370.682, -69.3693, 0.44 ) }
    apic_8 { pt3dadd( -22.2908, -371.655, -69.5727, 0.44 ) }
    apic_8 { pt3dadd( -22.7684, -373.302, -69.776, 2.42 ) }
    apic_8 { pt3dadd( -23.3747, -375.115, -69.8849, 0.66 ) }
    apic_8 { pt3dadd( -23.7229, -376.008, -69.8862, 0.88 ) }
    apic_8 { pt3dadd( -24.3598, -377.454, -69.795, 0.51 ) }
    apic_8 { pt3dadd( -25.0533, -378.925, -69.5976, 0.37 ) }
    apic_8 { pt3dadd( -25.6038, -380.012, -69.3583, 0.51 ) }
    apic_8 { pt3dadd( -26.0938, -380.939, -69.0627, 0.51 ) }
    apic_8 { pt3dadd( -26.5322, -381.772, -68.7459, 0.51 ) }
    apic_8 { pt3dadd( -26.9847, -382.575, -68.4289, 0.59 ) }
    apic_8 { pt3dadd( -27.4344, -383.327, -68.1414, 0.88 ) }
    apic_8 { pt3dadd( -28.2365, -384.633, -67.7057, 0.29 ) }
    apic_8 { pt3dadd( -28.6173, -385.229, -67.529, 0.44 ) }
    apic_8 { pt3dadd( -29.276, -386.209, -67.2339, 0.88 ) }
    apic_8 { pt3dadd( -29.9333, -387.179, -66.9327, 0.44 ) }
    apic_8 { pt3dadd( -30.7278, -388.315, -66.54, 0.44 ) }
    apic_8 { pt3dadd( -31.3696, -389.22, -66.1888, 0.51 ) }
    apic_8 { pt3dadd( -31.9496, -390.035, -65.8364, 0.51 ) }
    apic_8 { pt3dadd( -32.6397, -390.977, -65.402, 0.51 ) }
    apic_8 { pt3dadd( -33.3014, -391.816, -65.0076, 0.44 ) }
    apic_8 { pt3dadd( -34.178, -392.798, -64.5878, 0.44 ) }
    apic_8 { pt3dadd( -34.8821, -393.465, -64.3859, 0.81 ) }
    apic_8 { pt3dadd( -35.3987, -393.891, -64.3173, 0.95 ) }
    apic_8 { pt3dadd( -35.9442, -394.286, -64.2995, 0.95 ) }
    apic_8 { pt3dadd( -37.0797, -394.99, -64.2992, 0.51 ) }
    apic_8 { pt3dadd( -38.5304, -395.783, -64.2626, 0.51 ) }
    apic_8 { pt3dadd( -39.792, -396.427, -64.2722, 0.37 ) }
    apic_8 { pt3dadd( -40.3622, -396.703, -64.3041, 0.51 ) }
    apic_8 { pt3dadd( -41.2448, -397.122, -64.3799, 0.51 ) }
    apic_8 { pt3dadd( -42.4257, -397.733, -64.4708, 0.73 ) }
    apic_8 { pt3dadd( -43.2868, -398.24, -64.5485, 0.73 ) }
    apic_8 { pt3dadd( -44.4418, -398.975, -64.7532, 0.51 ) }
    apic_8 { pt3dadd( -45.4841, -399.664, -65.0537, 0.51 ) }
    apic_8 { pt3dadd( -45.9582, -399.988, -65.2377, 0.51 ) }
    apic_8 { pt3dadd( -46.452, -400.317, -65.471, 0.51 ) }
    apic_8 { pt3dadd( -47.0615, -400.696, -65.7703, 0.51 ) }
    apic_8 { pt3dadd( -47.575, -400.953, -65.9633, 0.44 ) }
    apic_8 { pt3dadd( -48.3209, -401.273, -66.1163, 0.73 ) }
    apic_8 { pt3dadd( -48.7443, -401.462, -66.1851, 0.88 ) }
    apic_8 { pt3dadd( -49.3004, -401.713, -66.2785, 0.88 ) }
    apic_8 { pt3dadd( -49.9356, -402.003, -66.3947, 0.88 ) }
    apic_8 { pt3dadd( -50.5415, -402.33, -66.5415, 0.59 ) }
    apic_8 { pt3dadd( -51.1424, -402.709, -66.7363, 0.44 ) }
    apic_8 { pt3dadd( -51.9326, -403.261, -67.0297, 0.44 ) }
    apic_8 { pt3dadd( -52.3548, -403.574, -67.204, 1.25 ) }
    apic_8 { pt3dadd( -53.1192, -404.179, -67.5381, 1.25 ) }
    apic_8 { pt3dadd( -54.2892, -405.154, -68.1337, 0.15 ) }
    apic_8 { pt3dadd( -54.8474, -405.656, -68.4589, 0.73 ) }
    apic_8 { pt3dadd( -55.2819, -406.047, -68.713, 0.73 ) }
    apic_8 { pt3dadd( -55.9251, -406.61, -69.0631, 0.73 ) }
    apic_8 { pt3dadd( -56.2242, -406.874, -69.2114, 0.88 ) }
    apic_8 { pt3dadd( -57.2427, -407.755, -69.665, 0.51 ) }
    apic_8 { pt3dadd( -57.8871, -408.277, -69.923, 1.03 ) }
    apic_8 { pt3dadd( -58.9016, -409.089, -70.2793, 0.22 ) }
    apic_8 { pt3dadd( -59.9984, -410.033, -70.6326, 0.22 ) }
    apic_8 { pt3dadd( -60.7938, -410.762, -70.8477, 0.51 ) }
    apic_8 { pt3dadd( -61.9244, -411.869, -71.131, 0.37 ) }
    apic_8 { pt3dadd( -62.9916, -412.998, -71.3819, 0.37 ) }
    apic_8 { pt3dadd( -63.4229, -413.49, -71.5105, 0.66 ) }
    apic_8 { pt3dadd( -64.5396, -414.902, -71.9562, 0.37 ) }
    apic_8 { pt3dadd( -65.1935, -415.796, -72.2633, 0.37 ) }
    apic_8 { pt3dadd( -65.7426, -416.573, -72.5335, 0.95 ) }
    apic_8 { pt3dadd( -66.165, -417.196, -72.733, 0.95 ) }
    apic_8 { pt3dadd( -66.945, -418.33, -73.0951, 0.22 ) }
    apic_8 { pt3dadd( -67.4777, -418.993, -73.3529, 0.37 ) }
    apic_8 { pt3dadd( -68.11, -419.621, -73.6832, 0.37 ) }
    apic_8 { pt3dadd( -68.5427, -420.001, -73.9445, 0.59 ) }
    apic_8 { pt3dadd( -68.9314, -420.307, -74.1817, 0.22 ) }
    apic_8 { pt3dadd( -69.08, -420.422, -74.2788, 0.51 ) }
    apic_8 { pt3dadd( -69.949, -421.11, -74.8753, 0.07 ) }
    apic_8 { pt3dadd( -70.8463, -421.927, -75.5702, 1.03 ) }
    apic_8 { pt3dadd( -71.6118, -422.72, -76.16, 1.03 ) }
    apic_8 { pt3dadd( -71.9993, -423.173, -76.4614, 0.29 ) }
    apic_8 { pt3dadd( -72.503, -423.847, -76.8393, 0.88 ) }
    apic_8 { pt3dadd( -72.9631, -424.508, -77.1022, 1.25 ) }
    apic_8 { pt3dadd( -73.5873, -425.492, -77.366, 0.51 ) }
    apic_8 { pt3dadd( -74.2636, -426.56, -77.538, 0.95 ) }
    apic_8 { pt3dadd( -75.0138, -427.687, -77.6782, 1.32 ) }
    apic_8 { pt3dadd( -75.408, -428.24, -77.7662, 1.32 ) }
    apic_8 { pt3dadd( -76.7157, -429.826, -78.1079, 0.37 ) }
    apic_8 { pt3dadd( -77.0437, -430.153, -78.2137, 0.95 ) }
    apic_8 { pt3dadd( -77.6464, -430.649, -78.4319, 0.59 ) }
    apic_8 { pt3dadd( -78.3325, -431.148, -78.7335, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_42()
}

proc basic_shape_42() {
    apic_8 { pt3dadd( -78.9513, -431.561, -79.0253, 0.37 ) }
    apic_8 { pt3dadd( -79.7144, -432.06, -79.4573, 0.37 ) }
    apic_8 { pt3dadd( -80.2723, -432.453, -79.8604, 0.37 ) }
    apic_8 { pt3dadd( -80.701, -432.796, -80.207, 0.37 ) }
    apic_8 { pt3dadd( -81.0999, -433.178, -80.5783, 0.37 ) }
    apic_8 { pt3dadd( -81.735, -433.939, -81.2419, 0.22 ) }
    apic_8 { pt3dadd( -82.005, -434.347, -81.5494, 0.22 ) }
    apic_8 { pt3dadd( -82.1996, -434.678, -81.7741, 0.22 ) }
    apic_8 { pt3dadd( -82.4418, -435.089, -82.0345, 0.22 ) }
    apic_8 { pt3dadd( -82.8679, -435.707, -82.4218, 0.22 ) }
    apic_8 { pt3dadd( -83.1592, -436.056, -82.639, 0.81 ) }
    apic_8 { pt3dadd( -83.5474, -436.448, -82.9306, 0.22 ) }
    apic_8 { pt3dadd( -84.0668, -436.981, -83.338, 0.22 ) }
    apic_8 { pt3dadd( -84.3005, -437.224, -83.5183, 0.22 ) }
    apic_8 { pt3dadd( -84.6985, -437.697, -83.8599, 0.22 ) }
    apic_8 { pt3dadd( -85.0332, -438.212, -84.1983, 0.66 ) }
    apic_8 { pt3dadd( -85.6374, -439.48, -84.9144, 0.37 ) }
    apic_8 { pt3dadd( -85.8971, -440.184, -85.2518, 0.51 ) }
    apic_8 { pt3dadd( -86.0262, -440.584, -85.4258, 0.51 ) }
    apic_8 { pt3dadd( -86.2355, -441.178, -85.6626, 0.51 ) }
    apic_8 { pt3dadd( -86.4928, -441.786, -85.8586, 0.51 ) }
    apic_8 { pt3dadd( -86.8714, -442.502, -86.031, 0.51 ) }
    apic_8 { pt3dadd( -87.3575, -443.148, -86.1396, 0.51 ) }
    apic_8 { pt3dadd( -87.8784, -443.685, -86.2518, 0.51 ) }
    apic_8 { pt3dadd( -88.4047, -444.133, -86.3519, 1.1 ) }
    apic_8 { pt3dadd( -89.29, -444.754, -86.5561, 0.22 ) }
    apic_8 { pt3dadd( -89.6889, -444.999, -86.6744, 0.22 ) }
    apic_8 { pt3dadd( -90.7295, -445.593, -87.0264, 0.22 ) }
    apic_8 { pt3dadd( -91.1134, -445.806, -87.171, 0.73 ) }
    apic_8 { pt3dadd( -91.9135, -446.228, -87.5081, 1.03 ) }
    apic_8 { pt3dadd( -93.1524, -446.854, -88.0613, 0.22 ) }
    apic_8 { pt3dadd( -93.883, -447.191, -88.3936, 0.22 ) }
    apic_8 { pt3dadd( -94.3264, -447.388, -88.5891, 1.84 ) }
    apic_8 { pt3dadd( -94.7278, -447.568, -88.7644, 1.84 ) }
    apic_8 { pt3dadd( -95.8496, -448.056, -89.2375, 0.29 ) }
    apic_8 { pt3dadd( -96.7743, -448.456, -89.621, 0.15 ) }
    apic_8 { pt3dadd( -97.3016, -448.703, -89.8241, 0.15 ) }
    apic_8 { pt3dadd( -97.6579, -448.883, -89.9655, 0.66 ) }
    apic_8 { pt3dadd( -98.2988, -449.226, -90.2306, 0.66 ) }
    apic_8 { pt3dadd( -98.9256, -449.577, -90.4937, 0.81 ) }
    apic_8 { pt3dadd( -99.6203, -449.979, -90.7698, 1.32 ) }
    apic_8 { pt3dadd( -100.789, -450.634, -91.2114, 0.22 ) }
    apic_8 { pt3dadd( -101.574, -451.061, -91.4954, 0.88 ) }
    apic_8 { pt3dadd( -101.983, -451.273, -91.6305, 0.88 ) }
    apic_8 { pt3dadd( -102.523, -451.546, -91.781, 0.88 ) }
    apic_8 { pt3dadd( -103.253, -451.924, -91.9545, 0.88 ) }
    apic_8 { pt3dadd( -103.953, -452.296, -92.1361, 0.51 ) }
    apic_8 { pt3dadd( -104.729, -452.69, -92.3483, 0.37 ) }
    apic_8 { pt3dadd( -105.225, -452.933, -92.5017, 0.88 ) }
    apic_8 { pt3dadd( -105.695, -453.15, -92.6612, 1.03 ) }
    apic_8 { pt3dadd( -106.118, -453.334, -92.8095, 1.03 ) }
    apic_8 { pt3dadd( -106.996, -453.703, -93.1795, 1.03 ) }
    apic_8 { pt3dadd( -107.544, -453.957, -93.3569, 0.44 ) }
    apic_8 { pt3dadd( -107.973, -454.183, -93.4472, 0.22 ) }
    apic_8 { pt3dadd( -108.44, -454.433, -93.5678, 0.15 ) }
    apic_8 { pt3dadd( -109.263, -454.901, -93.7891, 0.15 ) }
    apic_8 { pt3dadd( -110.146, -455.478, -94.022, 0.15 ) }
    apic_8 { pt3dadd( -111.279, -456.374, -94.3007, 0.15 ) }
    apic_8 { pt3dadd( -112.153, -457.25, -94.5759, 1.4 ) }
    apic_8 { pt3dadd( -113.231, -458.638, -95.0362, 0.22 ) }
    apic_8 { pt3dadd( -113.449, -459.012, -95.1724, 0.22 ) }
    apic_8 { pt3dadd( -113.619, -459.4, -95.3371, 0.22 ) }
    apic_8 { pt3dadd( -113.783, -459.874, -95.5623, 0.66 ) }
    apic_8 { pt3dadd( -114.048, -460.796, -95.9878, 0.29 ) }
    apic_8 { pt3dadd( -114.253, -461.614, -96.2856, 1.62 ) }
    apic_8 { pt3dadd( -114.494, -462.495, -96.5627, 1.76 ) }
    apic_8 { pt3dadd( -114.878, -463.68, -96.9279, 0.51 ) }
    apic_8 { pt3dadd( -115.195, -464.542, -97.1792, 0.37 ) }
    apic_8 { pt3dadd( -115.724, -465.882, -97.5338, 0.15 ) }
    apic_8 { pt3dadd( -116.051, -466.66, -97.7159, 1.47 ) }
    apic_8 { pt3dadd( -116.691, -468.137, -98.0145, 0.29 ) }
    apic_8 { pt3dadd( -116.972, -468.752, -98.1249, 0.29 ) }
    apic_8 { pt3dadd( -117.203, -469.228, -98.2118, 0.29 ) }
    apic_8 { pt3dadd( -117.468, -469.692, -98.338, 0.59 ) }
    apic_8 { pt3dadd( -117.896, -470.353, -98.6203, 0.22 ) }
    apic_8 { pt3dadd( -118.351, -471.015, -98.9378, 1.25 ) }
    apic_8 { pt3dadd( -118.999, -471.861, -99.3782, 1.32 ) }
    apic_8 { pt3dadd( -119.961, -473.0, -100.01, 0.29 ) }
    apic_8 { pt3dadd( -120.82, -473.964, -100.554, 0.29 ) }
    apic_8 { pt3dadd( -121.616, -474.825, -101.032, 0.44 ) }
    apic_8 { pt3dadd( -122.191, -475.463, -101.371, 0.88 ) }
    apic_8 { pt3dadd( -122.769, -476.183, -101.723, 0.22 ) }
    apic_8 { pt3dadd( -123.253, -476.901, -102.012, 0.22 ) }
    apic_8 { pt3dadd( -123.514, -477.355, -102.151, 0.81 ) }
    apic_8 { pt3dadd( -123.811, -477.956, -102.267, 0.81 ) }
    apic_8 { pt3dadd( -124.211, -478.768, -102.386, 0.37 ) }
    apic_8 { pt3dadd( -124.672, -479.635, -102.525, 1.03 ) }
    apic_8 { pt3dadd( -125.305, -480.707, -102.722, 0.29 ) }
    apic_8 { pt3dadd( -125.831, -481.469, -102.887, 0.95 ) }
    apic_8 { pt3dadd( -126.6, -482.389, -103.162, 0.15 ) }
    apic_8 { pt3dadd( -127.222, -482.985, -103.381, 0.15 ) }
    apic_8 { pt3dadd( -127.966, -483.566, -103.647, 0.15 ) }
    apic_8 { pt3dadd( -128.945, -484.225, -104.022, 0.15 ) }
    apic_8 { pt3dadd( -129.43, -484.535, -104.215, 0.88 ) }
    apic_8 { pt3dadd( -130.635, -485.313, -104.709, 0.44 ) }
    apic_8 { pt3dadd( -131.586, -485.947, -105.107, 0.44 ) }
    apic_8 { pt3dadd( -132.024, -486.3, -105.303, 0.44 ) }
    apic_8 { pt3dadd( -132.355, -486.623, -105.453, 0.44 ) }
    apic_8 { pt3dadd( -133.112, -487.481, -105.783, 1.1 ) }
    apic_8 { pt3dadd( -133.582, -488.113, -105.993, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_43()
}

proc basic_shape_43() {
    apic_8 { pt3dadd( -133.851, -488.546, -106.115, 0.66 ) }
    apic_8 { pt3dadd( -134.458, -489.756, -106.455, 0.29 ) }
    apic_8 { pt3dadd( -134.779, -490.54, -106.676, 0.29 ) }
    apic_8 { pt3dadd( -134.988, -491.23, -106.837, 0.29 ) }
    apic_8 { pt3dadd( -135.105, -492.044, -106.953, 0.29 ) }
    apic_8 { pt3dadd( -135.101, -492.619, -107.012, 1.1 ) }
    apic_8 { pt3dadd( -135.023, -493.228, -107.067, 1.1 ) }
    apic_8 { pt3dadd( -134.778, -494.301, -107.144, 0.37 ) }
    apic_8 { pt3dadd( -134.387, -495.647, -107.231, 0.88 ) }
    apic_8 { pt3dadd( -133.927, -497.019, -107.299, 0.22 ) }
    apic_8 { pt3dadd( -133.499, -498.245, -107.327, 0.22 ) }
    apic_8 { pt3dadd( -133.229, -498.988, -107.331, 0.22 ) }
    apic_8 { pt3dadd( -132.985, -499.591, -107.348, 0.95 ) }
    // Section: apic_11, id: apic_11, parent: apic_9 (entry count 13/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( 44.1293, -471.26, -9.59156, 2.28 ) }
    apic_11 { pt3dadd( 45.2084, -471.193, -10.1462, 1.1 ) }
    apic_11 { pt3dadd( 46.223, -471.103, -10.549, 0.66 ) }
    apic_11 { pt3dadd( 46.873, -471.03, -10.7442, 0.59 ) }
    apic_11 { pt3dadd( 48.2186, -470.887, -10.9714, 0.44 ) }
    apic_11 { pt3dadd( 49.2097, -470.798, -11.0681, 0.81 ) }
    apic_11 { pt3dadd( 50.0695, -470.734, -11.1266, 0.81 ) }
    apic_11 { pt3dadd( 50.5043, -470.725, -11.1158, 0.81 ) }
    apic_11 { pt3dadd( 51.2579, -470.755, -11.0758, 0.81 ) }
    apic_11 { pt3dadd( 52.6564, -470.882, -11.0323, 0.51 ) }
    apic_11 { pt3dadd( 53.6742, -471.026, -11.0618, 0.51 ) }
    apic_11 { pt3dadd( 54.1493, -471.123, -11.1231, 0.51 ) }
    apic_11 { pt3dadd( 55.2086, -471.426, -11.3678, 0.29 ) }
    apic_11 { pt3dadd( 56.1053, -471.747, -11.6494, 0.29 ) }
    apic_11 { pt3dadd( 56.6626, -471.982, -11.8787, 0.29 ) }
    apic_11 { pt3dadd( 57.3818, -472.338, -12.2578, 0.29 ) }
    apic_11 { pt3dadd( 57.7867, -472.576, -12.4959, 0.29 ) }
    apic_11 { pt3dadd( 58.388, -472.998, -12.8738, 0.29 ) }
    apic_11 { pt3dadd( 58.6815, -473.269, -13.0853, 0.29 ) }
    apic_11 { pt3dadd( 59.1468, -473.788, -13.4476, 0.29 ) }
    apic_11 { pt3dadd( 59.5173, -474.238, -13.7421, 0.29 ) }
    apic_11 { pt3dadd( 60.0414, -474.889, -14.189, 0.29 ) }
    apic_11 { pt3dadd( 60.5143, -475.442, -14.6165, 0.37 ) }
    apic_11 { pt3dadd( 61.3906, -476.34, -15.5075, 0.37 ) }
    apic_11 { pt3dadd( 61.6741, -476.582, -15.8261, 0.37 ) }
    apic_11 { pt3dadd( 62.0942, -476.858, -16.3346, 0.81 ) }
    apic_11 { pt3dadd( 62.5443, -477.055, -16.8828, 0.73 ) }
    apic_11 { pt3dadd( 62.9087, -477.172, -17.3051, 0.88 ) }
    apic_11 { pt3dadd( 63.673, -477.436, -18.1037, 0.73 ) }
    apic_11 { pt3dadd( 64.0734, -477.592, -18.4973, 0.73 ) }
    apic_11 { pt3dadd( 64.5922, -477.827, -18.9927, 0.73 ) }
    apic_11 { pt3dadd( 65.2408, -478.155, -19.6266, 0.51 ) }
    apic_11 { pt3dadd( 66.1373, -478.66, -20.4912, 1.03 ) }
    apic_11 { pt3dadd( 67.2095, -479.31, -21.5288, 0.44 ) }
    apic_11 { pt3dadd( 67.5918, -479.555, -21.9157, 0.51 ) }
    apic_11 { pt3dadd( 68.0329, -479.834, -22.4074, 0.59 ) }
    apic_11 { pt3dadd( 68.6321, -480.197, -23.154, 0.29 ) }
    apic_11 { pt3dadd( 68.9602, -480.377, -23.5904, 0.29 ) }
    apic_11 { pt3dadd( 69.3154, -480.566, -24.0979, 0.59 ) }
    apic_11 { pt3dadd( 69.7257, -480.815, -24.7078, 0.81 ) }
    apic_11 { pt3dadd( 70.3377, -481.264, -25.5684, 0.37 ) }
    apic_11 { pt3dadd( 70.7514, -481.622, -26.188, 0.37 ) }
    apic_11 { pt3dadd( 71.0541, -481.885, -26.6434, 0.59 ) }
    apic_11 { pt3dadd( 71.2361, -482.029, -26.9286, 0.59 ) }
    apic_11 { pt3dadd( 71.6902, -482.356, -27.6271, 0.44 ) }
    apic_11 { pt3dadd( 72.0903, -482.595, -28.224, 0.66 ) }
    apic_11 { pt3dadd( 72.8931, -483.021, -29.4363, 0.59 ) }
    apic_11 { pt3dadd( 73.2485, -483.191, -29.9941, 0.59 ) }
    apic_11 { pt3dadd( 73.4703, -483.286, -30.3565, 0.59 ) }
    apic_11 { pt3dadd( 73.7464, -483.371, -30.7978, 0.59 ) }
    apic_11 { pt3dadd( 74.2181, -483.452, -31.525, 0.73 ) }
    apic_11 { pt3dadd( 74.5008, -483.484, -31.9218, 1.91 ) }
    apic_11 { pt3dadd( 75.0345, -483.569, -32.4246, 1.91 ) }
    // Section: apic_10, id: apic_10, parent: apic_9 (entry count 66/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( 44.1293, -471.26, -9.59156, 2.28 ) }
    apic_10 { pt3dadd( 44.1897, -472.531, -9.39591, 2.28 ) }
    apic_10 { pt3dadd( 44.2636, -474.156, -8.98505, 2.86 ) }
    apic_10 { pt3dadd( 44.3083, -475.254, -8.61896, 1.62 ) }
    apic_10 { pt3dadd( 44.3382, -476.331, -8.20656, 0.88 ) }
    apic_10 { pt3dadd( 44.3652, -477.272, -7.82749, 0.88 ) }
    apic_10 { pt3dadd( 44.3857, -478.245, -7.44539, 0.88 ) }
    apic_10 { pt3dadd( 44.4295, -479.28, -6.98764, 0.73 ) }
    apic_10 { pt3dadd( 44.457, -480.274, -6.515, 0.66 ) }
    apic_10 { pt3dadd( 44.4449, -481.284, -6.02974, 0.88 ) }
    apic_10 { pt3dadd( 44.3994, -481.996, -5.68514, 0.88 ) }
    apic_10 { pt3dadd( 44.3329, -482.57, -5.43996, 0.59 ) }
    apic_10 { pt3dadd( 44.2392, -483.13, -5.24308, 0.37 ) }
    apic_10 { pt3dadd( 44.0193, -484.074, -4.97484, 0.37 ) }
    apic_10 { pt3dadd( 43.8446, -484.6, -4.85077, 0.51 ) }
    apic_10 { pt3dadd( 43.6323, -485.067, -4.7722, 0.59 ) }
    apic_10 { pt3dadd( 43.399, -485.522, -4.71506, 0.59 ) }
    apic_10 { pt3dadd( 43.1022, -486.098, -4.66098, 0.59 ) }
    apic_10 { pt3dadd( 42.7593, -486.741, -4.63798, 0.51 ) }
    apic_10 { pt3dadd( 42.2851, -487.635, -4.64789, 0.73 ) }
    apic_10 { pt3dadd( 41.8054, -488.624, -4.65282, 0.44 ) }
    apic_10 { pt3dadd( 41.5896, -489.106, -4.63536, 0.44 ) }
    apic_10 { pt3dadd( 41.2699, -489.859, -4.55165, 0.44 ) }
    apic_10 { pt3dadd( 40.9083, -490.703, -4.38517, 0.44 ) }
    apic_10 { pt3dadd( 40.6117, -491.331, -4.19615, 0.44 ) }
    apic_10 { pt3dadd( 40.2978, -491.939, -3.95174, 0.66 ) }
    apic_10 { pt3dadd( 39.9578, -492.575, -3.67119, 0.81 ) }
    apic_10 { pt3dadd( 39.5148, -493.384, -3.29459, 0.51 ) }
    apic_10 { pt3dadd( 39.2712, -493.82, -3.06583, 0.66 ) }
    apic_10 { pt3dadd( 38.792, -494.633, -2.61913, 0.73 ) }
    apic_10 { pt3dadd( 38.4936, -495.081, -2.38223, 0.73 ) }
    apic_10 { pt3dadd( 38.0284, -495.698, -2.11432, 1.1 ) }
    apic_10 { pt3dadd( 37.3301, -496.501, -1.84274, 0.66 ) }
    apic_10 { pt3dadd( 36.8388, -496.974, -1.75246, 0.51 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_44()
}

proc basic_shape_44() {
    apic_10 { pt3dadd( 36.2482, -497.458, -1.74938, 0.37 ) }
    apic_10 { pt3dadd( 35.6553, -497.796, -1.85538, 0.37 ) }
    apic_10 { pt3dadd( 35.1737, -498.0, -2.03193, 0.37 ) }
    apic_10 { pt3dadd( 34.6534, -498.181, -2.31516, 0.29 ) }
    apic_10 { pt3dadd( 33.9528, -498.393, -2.76677, 0.22 ) }
    apic_10 { pt3dadd( 33.584, -498.511, -3.04334, 0.22 ) }
    apic_10 { pt3dadd( 33.0088, -498.715, -3.52235, 0.22 ) }
    apic_10 { pt3dadd( 32.3477, -498.985, -4.0994, 0.22 ) }
    apic_10 { pt3dadd( 31.8073, -499.196, -4.62695, 0.22 ) }
    apic_10 { pt3dadd( 26.1275, -500.338, -8.87548, 0.22 ) }
    apic_10 { pt3dadd( 21.2936, -502.4, -13.7878, 0.22 ) }
    apic_10 { pt3dadd( 16.9353, -505.237, -18.7765, 0.22 ) }
    apic_10 { pt3dadd( 12.6503, -507.64, -24.0382, 0.22 ) }
    apic_10 { pt3dadd( 7.49172, -508.9, -28.8785, 0.22 ) }
    apic_10 { pt3dadd( 2.63632, -511.278, -33.631, 0.22 ) }
    apic_10 { pt3dadd( -2.09649, -513.825, -38.4234, 0.22 ) }
    apic_10 { pt3dadd( -5.95463, -517.319, -43.4269, 0.22 ) }
    apic_10 { pt3dadd( -10.3789, -519.026, -48.8309, 0.22 ) }
    apic_10 { pt3dadd( -15.0725, -519.778, -54.2148, 0.22 ) }
    // Section: apic_13, id: apic_13, parent: apic_11 (entry count 19/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( 75.0345, -483.569, -32.4246, 1.91 ) }
    apic_13 { pt3dadd( 74.1106, -483.946, -31.716, 0.59 ) }
    apic_13 { pt3dadd( 73.4647, -484.148, -31.223, 0.59 ) }
    apic_13 { pt3dadd( 72.9111, -484.293, -30.7802, 0.29 ) }
    apic_13 { pt3dadd( 72.5816, -484.368, -30.5218, 0.22 ) }
    apic_13 { pt3dadd( 71.7177, -484.531, -29.8735, 0.22 ) }
    apic_13 { pt3dadd( 70.9695, -484.646, -29.3446, 0.22 ) }
    apic_13 { pt3dadd( 70.2415, -484.706, -28.8622, 0.22 ) }
    apic_13 { pt3dadd( 69.5153, -484.741, -28.4012, 0.66 ) }
    apic_13 { pt3dadd( 69.1123, -484.748, -28.1512, 0.44 ) }
    apic_13 { pt3dadd( 68.6403, -484.743, -27.8459, 0.44 ) }
    apic_13 { pt3dadd( 68.1974, -484.704, -27.5491, 0.66 ) }
    // Section: apic_12, id: apic_12, parent: apic_11 (entry count 31/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( 75.0345, -483.569, -32.4246, 1.91 ) }
    apic_12 { pt3dadd( 75.9232, -482.999, -32.6499, 1.62 ) }
    apic_12 { pt3dadd( 77.0829, -482.251, -32.9509, 0.22 ) }
    apic_12 { pt3dadd( 77.8394, -481.764, -33.1693, 0.22 ) }
    apic_12 { pt3dadd( 78.8259, -481.14, -33.4662, 0.22 ) }
    apic_12 { pt3dadd( 79.4823, -480.752, -33.6749, 0.37 ) }
    apic_12 { pt3dadd( 79.9439, -480.496, -33.8411, 0.37 ) }
    apic_12 { pt3dadd( 80.667, -480.143, -34.1228, 0.95 ) }
    apic_12 { pt3dadd( 81.5269, -479.785, -34.5156, 0.29 ) }
    apic_12 { pt3dadd( 81.9177, -479.646, -34.7188, 0.29 ) }
    apic_12 { pt3dadd( 82.6868, -479.411, -35.1516, 0.66 ) }
    apic_12 { pt3dadd( 83.3262, -479.216, -35.5399, 0.95 ) }
    apic_12 { pt3dadd( 83.6152, -479.124, -35.7152, 0.95 ) }
    apic_12 { pt3dadd( 84.4499, -478.862, -36.1772, 0.59 ) }
    apic_12 { pt3dadd( 84.9768, -478.705, -36.4139, 0.37 ) }
    apic_12 { pt3dadd( 85.6607, -478.493, -36.6099, 0.37 ) }
    apic_12 { pt3dadd( 86.2105, -478.332, -36.6154, 0.59 ) }
    apic_12 { pt3dadd( 86.4115, -478.282, -36.571, 0.59 ) }
    apic_12 { pt3dadd( 86.6895, -478.227, -36.4775, 0.59 ) }
    apic_12 { pt3dadd( 87.674, -478.072, -36.1902, 0.37 ) }
    apic_12 { pt3dadd( 88.3854, -477.97, -36.0878, 0.95 ) }
    apic_12 { pt3dadd( 89.0866, -477.851, -36.0708, 1.18 ) }
    apic_12 { pt3dadd( 89.6671, -477.725, -36.1256, 0.88 ) }
    apic_12 { pt3dadd( 90.5749, -477.497, -36.2718, 1.18 ) }
    apic_12 { pt3dadd( 91.9959, -477.11, -36.5873, 0.29 ) }
    apic_12 { pt3dadd( 93.0818, -476.772, -36.9132, 0.29 ) }
    apic_12 { pt3dadd( 94.1973, -476.393, -37.3337, 0.22 ) }
    apic_12 { pt3dadd( 95.301, -476.006, -37.7911, 0.22 ) }
    apic_12 { pt3dadd( 95.8613, -475.796, -38.033, 0.22 ) }
    apic_12 { pt3dadd( 96.4503, -475.558, -38.2942, 0.44 ) }
    apic_12 { pt3dadd( 97.0337, -475.319, -38.5437, 0.73 ) }
    apic_12 { pt3dadd( 97.9929, -474.965, -38.9976, 0.73 ) }
    apic_12 { pt3dadd( 99.096, -474.644, -39.6233, 0.37 ) }
    apic_12 { pt3dadd( 99.784, -474.484, -40.0351, 0.22 ) }
    apic_12 { pt3dadd( 100.523, -474.324, -40.4761, 0.51 ) }
    apic_12 { pt3dadd( 101.195, -474.18, -40.8559, 0.59 ) }
    apic_12 { pt3dadd( 102.121, -473.98, -41.3457, 0.73 ) }
    apic_12 { pt3dadd( 103.211, -473.718, -41.9015, 0.37 ) }
    apic_12 { pt3dadd( 104.031, -473.503, -42.3311, 0.29 ) }
    apic_12 { pt3dadd( 104.766, -473.317, -42.6833, 0.22 ) }
    apic_12 { pt3dadd( 105.349, -473.14, -42.9309, 0.22 ) }
    apic_12 { pt3dadd( 105.884, -472.962, -43.133, 0.22 ) }
    apic_12 { pt3dadd( 106.67, -472.688, -43.3749, 0.73 ) }
    apic_12 { pt3dadd( 108.04, -472.278, -43.7184, 0.73 ) }
    apic_12 { pt3dadd( 108.764, -472.127, -43.9718, 0.15 ) }
    apic_12 { pt3dadd( 109.574, -472.024, -44.2893, 0.15 ) }
    apic_12 { pt3dadd( 110.607, -471.961, -44.7206, 0.15 ) }
    apic_12 { pt3dadd( 111.272, -471.959, -44.989, 1.1 ) }
    apic_12 { pt3dadd( 112.045, -471.984, -45.2813, 1.69 ) }
    apic_12 { pt3dadd( 114.483, -472.128, -46.1627, 0.29 ) }
    apic_12 { pt3dadd( 115.226, -472.181, -46.4252, 0.59 ) }
    apic_12 { pt3dadd( 116.436, -472.275, -46.8161, 0.29 ) }
    apic_12 { pt3dadd( 117.688, -472.357, -47.1845, 0.29 ) }
    apic_12 { pt3dadd( 118.629, -472.418, -47.4572, 0.73 ) }
    apic_12 { pt3dadd( 118.91, -472.431, -47.5203, 0.73 ) }
    apic_12 { pt3dadd( 119.315, -472.448, -47.5353, 0.81 ) }
    apic_12 { pt3dadd( 119.965, -472.458, -47.5513, 0.37 ) }
    apic_12 { pt3dadd( 120.809, -472.433, -47.5152, 0.88 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, apic_0, axon_0, apic_22, apic_1, axon_1, apic_24, apic_23, apic_21, apic_2, apic_26, apic_25, apic_20, apic_3, apic_17, apic_4, apic_19, apic_18, apic_14, apic_5, apic_16, apic_15, apic_7, apic_6, apic_9, apic_8, apic_11, apic_10, apic_13, apic_12]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    apic_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    apic_22 ModelViewParmSubset_1.append()
    apic_1 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()
    apic_24 ModelViewParmSubset_1.append()
    apic_23 ModelViewParmSubset_1.append()
    apic_21 ModelViewParmSubset_1.append()
    apic_2 ModelViewParmSubset_1.append()
    apic_26 ModelViewParmSubset_1.append()
    apic_25 ModelViewParmSubset_1.append()
    apic_20 ModelViewParmSubset_1.append()
    apic_3 ModelViewParmSubset_1.append()
    apic_17 ModelViewParmSubset_1.append()
    apic_4 ModelViewParmSubset_1.append()
    apic_19 ModelViewParmSubset_1.append()
    apic_18 ModelViewParmSubset_1.append()
    apic_14 ModelViewParmSubset_1.append()
    apic_5 ModelViewParmSubset_1.append()
    apic_16 ModelViewParmSubset_1.append()
    apic_15 ModelViewParmSubset_1.append()
    apic_7 ModelViewParmSubset_1.append()
    apic_6 ModelViewParmSubset_1.append()
    apic_9 ModelViewParmSubset_1.append()
    apic_8 ModelViewParmSubset_1.append()
    apic_11 ModelViewParmSubset_1.append()
    apic_10 ModelViewParmSubset_1.append()
    apic_13 ModelViewParmSubset_1.append()
    apic_12 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_2 = new SectionList()
    soma_0 ModelViewParmSubset_2.append()
    axon_0 ModelViewParmSubset_2.append()
    axon_1 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, apic_0, dend_48, dend_35, dend_32, dend_13, dend_0, apic_22, apic_1, dend_52, dend_49, dend_43, dend_36, dend_34, dend_33, dend_19, dend_14, dend_6, dend_1, apic_24, apic_23, apic_21, apic_2, dend_54, dend_53, dend_51, dend_50, dend_47, dend_44, dend_38, dend_37, dend_23, dend_20, dend_18, dend_15, dend_10, dend_7, dend_5, dend_2, apic_26, apic_25, apic_20, apic_3, dend_46, dend_45, dend_40, dend_39, dend_27, dend_24, dend_22, dend_21, dend_17, dend_16, dend_12, dend_11, dend_9, dend_8, dend_4, dend_3, apic_17, apic_4, dend_42, dend_41, dend_29, dend_28, dend_26, dend_25, apic_19, apic_18, apic_14, apic_5, dend_31, dend_30, apic_16, apic_15, apic_7, apic_6, apic_9, apic_8, apic_11, apic_10, apic_13, apic_12]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    apic_0 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    apic_22 ModelViewParmSubset_3.append()
    apic_1 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    apic_24 ModelViewParmSubset_3.append()
    apic_23 ModelViewParmSubset_3.append()
    apic_21 ModelViewParmSubset_3.append()
    apic_2 ModelViewParmSubset_3.append()
    dend_54 ModelViewParmSubset_3.append()
    dend_53 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    apic_26 ModelViewParmSubset_3.append()
    apic_25 ModelViewParmSubset_3.append()
    apic_20 ModelViewParmSubset_3.append()
    apic_3 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    apic_17 ModelViewParmSubset_3.append()
    apic_4 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    apic_19 ModelViewParmSubset_3.append()
    apic_18 ModelViewParmSubset_3.append()
    apic_14 ModelViewParmSubset_3.append()
    apic_5 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    apic_16 ModelViewParmSubset_3.append()
    apic_15 ModelViewParmSubset_3.append()
    apic_7 ModelViewParmSubset_3.append()
    apic_6 ModelViewParmSubset_3.append()
    apic_9 ModelViewParmSubset_3.append()
    apic_8 ModelViewParmSubset_3.append()
    apic_11 ModelViewParmSubset_3.append()
    apic_10 ModelViewParmSubset_3.append()
    apic_13 ModelViewParmSubset_3.append()
    apic_12 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[apic_0, apic_22, apic_1, apic_24, apic_23, apic_21, apic_2, apic_26, apic_25, apic_20, apic_3, apic_17, apic_4, apic_19, apic_18, apic_14, apic_5, apic_16, apic_15, apic_7, apic_6, apic_9, apic_8, apic_11, apic_10, apic_13, apic_12]}
    ModelViewParmSubset_4 = new SectionList()
    apic_0 ModelViewParmSubset_4.append()
    apic_22 ModelViewParmSubset_4.append()
    apic_1 ModelViewParmSubset_4.append()
    apic_24 ModelViewParmSubset_4.append()
    apic_23 ModelViewParmSubset_4.append()
    apic_21 ModelViewParmSubset_4.append()
    apic_2 ModelViewParmSubset_4.append()
    apic_26 ModelViewParmSubset_4.append()
    apic_25 ModelViewParmSubset_4.append()
    apic_20 ModelViewParmSubset_4.append()
    apic_3 ModelViewParmSubset_4.append()
    apic_17 ModelViewParmSubset_4.append()
    apic_4 ModelViewParmSubset_4.append()
    apic_19 ModelViewParmSubset_4.append()
    apic_18 ModelViewParmSubset_4.append()
    apic_14 ModelViewParmSubset_4.append()
    apic_5 ModelViewParmSubset_4.append()
    apic_16 ModelViewParmSubset_4.append()
    apic_15 ModelViewParmSubset_4.append()
    apic_7 ModelViewParmSubset_4.append()
    apic_6 ModelViewParmSubset_4.append()
    apic_9 ModelViewParmSubset_4.append()
    apic_8 ModelViewParmSubset_4.append()
    apic_11 ModelViewParmSubset_4.append()
    apic_10 ModelViewParmSubset_4.append()
    apic_13 ModelViewParmSubset_4.append()
    apic_12 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_5 = new SectionList()
    axon_0 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()

    // Group: {name=ModelViewParmSubset_6, groups=[], sections=[soma_0, apic_0, apic_22, apic_1, apic_24, apic_23, apic_21, apic_2, apic_26, apic_25, apic_20, apic_3, apic_17, apic_4, apic_19, apic_18, apic_14, apic_5, apic_16, apic_15, apic_7, apic_6, apic_9, apic_8, apic_11, apic_10, apic_13, apic_12]}
    ModelViewParmSubset_6 = new SectionList()
    soma_0 ModelViewParmSubset_6.append()
    apic_0 ModelViewParmSubset_6.append()
    apic_22 ModelViewParmSubset_6.append()
    apic_1 ModelViewParmSubset_6.append()
    apic_24 ModelViewParmSubset_6.append()
    apic_23 ModelViewParmSubset_6.append()
    apic_21 ModelViewParmSubset_6.append()
    apic_2 ModelViewParmSubset_6.append()
    apic_26 ModelViewParmSubset_6.append()
    apic_25 ModelViewParmSubset_6.append()
    apic_20 ModelViewParmSubset_6.append()
    apic_3 ModelViewParmSubset_6.append()
    apic_17 ModelViewParmSubset_6.append()
    apic_4 ModelViewParmSubset_6.append()
    apic_19 ModelViewParmSubset_6.append()
    apic_18 ModelViewParmSubset_6.append()
    apic_14 ModelViewParmSubset_6.append()
    apic_5 ModelViewParmSubset_6.append()
    apic_16 ModelViewParmSubset_6.append()
    apic_15 ModelViewParmSubset_6.append()
    apic_7 ModelViewParmSubset_6.append()
    apic_6 ModelViewParmSubset_6.append()
    apic_9 ModelViewParmSubset_6.append()
    apic_8 ModelViewParmSubset_6.append()
    apic_11 ModelViewParmSubset_6.append()
    apic_10 ModelViewParmSubset_6.append()
    apic_13 ModelViewParmSubset_6.append()
    apic_12 ModelViewParmSubset_6.append()

    // Group: {name=ModelViewParmSubset_7, groups=[], sections=[apic_0, dend_48, dend_35, dend_32, dend_13, dend_0, apic_22, apic_1, dend_52, dend_49, dend_43, dend_36, dend_34, dend_33, dend_19, dend_14, dend_6, dend_1, apic_24, apic_23, apic_21, apic_2, dend_54, dend_53, dend_51, dend_50, dend_47, dend_44, dend_38, dend_37, dend_23, dend_20, dend_18, dend_15, dend_10, dend_7, dend_5, dend_2, apic_26, apic_25, apic_20, apic_3, dend_46, dend_45, dend_40, dend_39, dend_27, dend_24, dend_22, dend_21, dend_17, dend_16, dend_12, dend_11, dend_9, dend_8, dend_4, dend_3, apic_17, apic_4, dend_42, dend_41, dend_29, dend_28, dend_26, dend_25, apic_19, apic_18, apic_14, apic_5, dend_31, dend_30, apic_16, apic_15, apic_7, apic_6, apic_9, apic_8, apic_11, apic_10, apic_13, apic_12]}
    ModelViewParmSubset_7 = new SectionList()
    apic_0 ModelViewParmSubset_7.append()
    dend_48 ModelViewParmSubset_7.append()
    dend_35 ModelViewParmSubset_7.append()
    dend_32 ModelViewParmSubset_7.append()
    dend_13 ModelViewParmSubset_7.append()
    dend_0 ModelViewParmSubset_7.append()
    apic_22 ModelViewParmSubset_7.append()
    apic_1 ModelViewParmSubset_7.append()
    dend_52 ModelViewParmSubset_7.append()
    dend_49 ModelViewParmSubset_7.append()
    dend_43 ModelViewParmSubset_7.append()
    dend_36 ModelViewParmSubset_7.append()
    dend_34 ModelViewParmSubset_7.append()
    dend_33 ModelViewParmSubset_7.append()
    dend_19 ModelViewParmSubset_7.append()
    dend_14 ModelViewParmSubset_7.append()
    dend_6 ModelViewParmSubset_7.append()
    dend_1 ModelViewParmSubset_7.append()
    apic_24 ModelViewParmSubset_7.append()
    apic_23 ModelViewParmSubset_7.append()
    apic_21 ModelViewParmSubset_7.append()
    apic_2 ModelViewParmSubset_7.append()
    dend_54 ModelViewParmSubset_7.append()
    dend_53 ModelViewParmSubset_7.append()
    dend_51 ModelViewParmSubset_7.append()
    dend_50 ModelViewParmSubset_7.append()
    dend_47 ModelViewParmSubset_7.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_44 ModelViewParmSubset_7.append()
    dend_38 ModelViewParmSubset_7.append()
    dend_37 ModelViewParmSubset_7.append()
    dend_23 ModelViewParmSubset_7.append()
    dend_20 ModelViewParmSubset_7.append()
    dend_18 ModelViewParmSubset_7.append()
    dend_15 ModelViewParmSubset_7.append()
    dend_10 ModelViewParmSubset_7.append()
    dend_7 ModelViewParmSubset_7.append()
    dend_5 ModelViewParmSubset_7.append()
    dend_2 ModelViewParmSubset_7.append()
    apic_26 ModelViewParmSubset_7.append()
    apic_25 ModelViewParmSubset_7.append()
    apic_20 ModelViewParmSubset_7.append()
    apic_3 ModelViewParmSubset_7.append()
    dend_46 ModelViewParmSubset_7.append()
    dend_45 ModelViewParmSubset_7.append()
    dend_40 ModelViewParmSubset_7.append()
    dend_39 ModelViewParmSubset_7.append()
    dend_27 ModelViewParmSubset_7.append()
    dend_24 ModelViewParmSubset_7.append()
    dend_22 ModelViewParmSubset_7.append()
    dend_21 ModelViewParmSubset_7.append()
    dend_17 ModelViewParmSubset_7.append()
    dend_16 ModelViewParmSubset_7.append()
    dend_12 ModelViewParmSubset_7.append()
    dend_11 ModelViewParmSubset_7.append()
    dend_9 ModelViewParmSubset_7.append()
    dend_8 ModelViewParmSubset_7.append()
    dend_4 ModelViewParmSubset_7.append()
    dend_3 ModelViewParmSubset_7.append()
    apic_17 ModelViewParmSubset_7.append()
    apic_4 ModelViewParmSubset_7.append()
    dend_42 ModelViewParmSubset_7.append()
    dend_41 ModelViewParmSubset_7.append()
    dend_29 ModelViewParmSubset_7.append()
    dend_28 ModelViewParmSubset_7.append()
    dend_26 ModelViewParmSubset_7.append()
    dend_25 ModelViewParmSubset_7.append()
    apic_19 ModelViewParmSubset_7.append()
    apic_18 ModelViewParmSubset_7.append()
    apic_14 ModelViewParmSubset_7.append()
    apic_5 ModelViewParmSubset_7.append()
    dend_31 ModelViewParmSubset_7.append()
    dend_30 ModelViewParmSubset_7.append()
    apic_16 ModelViewParmSubset_7.append()
    apic_15 ModelViewParmSubset_7.append()
    apic_7 ModelViewParmSubset_7.append()
    apic_6 ModelViewParmSubset_7.append()
    apic_9 ModelViewParmSubset_7.append()
    apic_8 ModelViewParmSubset_7.append()
    apic_11 ModelViewParmSubset_7.append()
    apic_10 ModelViewParmSubset_7.append()
    apic_13 ModelViewParmSubset_7.append()
    apic_12 ModelViewParmSubset_7.append()

    // Group: {name=ModelViewParmSubset_8, groups=[], sections=[soma_0, dend_48, dend_35, dend_32, dend_13, dend_0, dend_52, dend_49, dend_43, dend_36, dend_34, dend_33, dend_19, dend_14, dend_6, dend_1, dend_54, dend_53, dend_51, dend_50, dend_47, dend_44, dend_38, dend_37, dend_23, dend_20, dend_18, dend_15, dend_10, dend_7, dend_5, dend_2, dend_46, dend_45, dend_40, dend_39, dend_27, dend_24, dend_22, dend_21, dend_17, dend_16, dend_12, dend_11, dend_9, dend_8, dend_4, dend_3, dend_42, dend_41, dend_29, dend_28, dend_26, dend_25, dend_31, dend_30]}
    ModelViewParmSubset_8 = new SectionList()
    soma_0 ModelViewParmSubset_8.append()
    dend_48 ModelViewParmSubset_8.append()
    dend_35 ModelViewParmSubset_8.append()
    dend_32 ModelViewParmSubset_8.append()
    dend_13 ModelViewParmSubset_8.append()
    dend_0 ModelViewParmSubset_8.append()
    dend_52 ModelViewParmSubset_8.append()
    dend_49 ModelViewParmSubset_8.append()
    dend_43 ModelViewParmSubset_8.append()
    dend_36 ModelViewParmSubset_8.append()
    dend_34 ModelViewParmSubset_8.append()
    dend_33 ModelViewParmSubset_8.append()
    dend_19 ModelViewParmSubset_8.append()
    dend_14 ModelViewParmSubset_8.append()
    dend_6 ModelViewParmSubset_8.append()
    dend_1 ModelViewParmSubset_8.append()
    dend_54 ModelViewParmSubset_8.append()
    dend_53 ModelViewParmSubset_8.append()
    dend_51 ModelViewParmSubset_8.append()
    dend_50 ModelViewParmSubset_8.append()
    dend_47 ModelViewParmSubset_8.append()
    dend_44 ModelViewParmSubset_8.append()
    dend_38 ModelViewParmSubset_8.append()
    dend_37 ModelViewParmSubset_8.append()
    dend_23 ModelViewParmSubset_8.append()
    dend_20 ModelViewParmSubset_8.append()
    dend_18 ModelViewParmSubset_8.append()
    dend_15 ModelViewParmSubset_8.append()
    dend_10 ModelViewParmSubset_8.append()
    dend_7 ModelViewParmSubset_8.append()
    dend_5 ModelViewParmSubset_8.append()
    dend_2 ModelViewParmSubset_8.append()
    dend_46 ModelViewParmSubset_8.append()
    dend_45 ModelViewParmSubset_8.append()
    dend_40 ModelViewParmSubset_8.append()
    dend_39 ModelViewParmSubset_8.append()
    dend_27 ModelViewParmSubset_8.append()
    dend_24 ModelViewParmSubset_8.append()
    dend_22 ModelViewParmSubset_8.append()
    dend_21 ModelViewParmSubset_8.append()
    dend_17 ModelViewParmSubset_8.append()
    dend_16 ModelViewParmSubset_8.append()
    dend_12 ModelViewParmSubset_8.append()
    dend_11 ModelViewParmSubset_8.append()
    dend_9 ModelViewParmSubset_8.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_8 ModelViewParmSubset_8.append()
    dend_4 ModelViewParmSubset_8.append()
    dend_3 ModelViewParmSubset_8.append()
    dend_42 ModelViewParmSubset_8.append()
    dend_41 ModelViewParmSubset_8.append()
    dend_29 ModelViewParmSubset_8.append()
    dend_28 ModelViewParmSubset_8.append()
    dend_26 ModelViewParmSubset_8.append()
    dend_25 ModelViewParmSubset_8.append()
    dend_31 ModelViewParmSubset_8.append()
    dend_30 ModelViewParmSubset_8.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[apic_24]}
    OneSecGrp_SectionRef_22 = new SectionList()
    apic_24 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[apic_23]}
    OneSecGrp_SectionRef_23 = new SectionList()
    apic_23 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[apic_21]}
    OneSecGrp_SectionRef_24 = new SectionList()
    apic_21 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[apic_2]}
    OneSecGrp_SectionRef_25 = new SectionList()
    apic_2 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[apic_26]}
    OneSecGrp_SectionRef_42 = new SectionList()
    apic_26 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[apic_25]}
    OneSecGrp_SectionRef_43 = new SectionList()
    apic_25 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[apic_20]}
    OneSecGrp_SectionRef_44 = new SectionList()
    apic_20 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[apic_19]}
    OneSecGrp_SectionRef_70 = new SectionList()
    apic_19 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[apic_18]}
    OneSecGrp_SectionRef_71 = new SectionList()
    apic_18 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[apic_14]}
    OneSecGrp_SectionRef_72 = new SectionList()
    apic_14 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[apic_5]}
    OneSecGrp_SectionRef_73 = new SectionList()
    apic_5 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[apic_16]}
    OneSecGrp_SectionRef_76 = new SectionList()
    apic_16 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[apic_15]}
    OneSecGrp_SectionRef_77 = new SectionList()
    apic_15 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[apic_6]}
    OneSecGrp_SectionRef_79 = new SectionList()
    apic_6 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[apic_9]}
    OneSecGrp_SectionRef_80 = new SectionList()
    apic_9 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[apic_8]}
    OneSecGrp_SectionRef_81 = new SectionList()
    apic_8 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[apic_11]}
    OneSecGrp_SectionRef_82 = new SectionList()
    apic_11 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[apic_10]}
    OneSecGrp_SectionRef_83 = new SectionList()
    apic_10 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[apic_12]}
    OneSecGrp_SectionRef_85 = new SectionList()
    apic_12 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    apic_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[apic_22]}
    OneSecGrp_SectionRef_9 = new SectionList()
    apic_22 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[apic_1]}
    OneSecGrp_SectionRef_10 = new SectionList()
    apic_1 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[apic_3]}
    OneSecGrp_SectionRef_45 = new SectionList()
    apic_3 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[apic_17]}
    OneSecGrp_SectionRef_62 = new SectionList()
    apic_17 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[apic_4]}
    OneSecGrp_SectionRef_63 = new SectionList()
    apic_4 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[apic_7]}
    OneSecGrp_SectionRef_78 = new SectionList()
    apic_7 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[apic_13]}
    OneSecGrp_SectionRef_84 = new SectionList()
    apic_13 OneSecGrp_SectionRef_84.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()

    // Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14, apic_15, apic_16, apic_17, apic_18, apic_19, apic_20, apic_21, apic_22, apic_23, apic_24, apic_25, apic_26], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()
    apic_0 apical.append()
    apic_1 apical.append()
    apic_2 apical.append()
    apic_3 apical.append()
    apic_4 apical.append()
    apic_5 apical.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    apic_6 apical.append()
    apic_7 apical.append()
    apic_8 apical.append()
    apic_9 apical.append()
    apic_10 apical.append()
    apic_11 apical.append()
    apic_12 apical.append()
    apic_13 apical.append()
    apic_14 apical.append()
    apic_15 apical.append()
    apic_16 apical.append()
    apic_17 apical.append()
    apic_18 apical.append()
    apic_19 apical.append()
    apic_20 apical.append()
    apic_21 apical.append()
    apic_22 apical.append()
    apic_23 apical.append()
    apic_24 apical.append()
    apic_25 apical.append()
    apic_26 apical.append()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_48, dend_48, dend_48, dend_48, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_43, dend_43, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_3, apic_3, apic_3, apic_3, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_49 all.append()
    dend_49 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_45()
}

proc subsets_45() {
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_46()
}

proc subsets_46() {
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_47()
}

proc subsets_47() {
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_48()
}

proc subsets_48() {
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 2.0  // units: uF/cm2
    forsec apical cm = 2.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec all {
        insert pas_nml2
        gmax_pas_nml2 = 3.0000001E-5  // units: S cm-2
        e_pas_nml2 = -75.0  // units: mV
    }
    forsec basal {
        insert Ih
        gmax_Ih = 8.0E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.025689999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.039763  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 9.999999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.288755  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.029455999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 6.71E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.098377  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.957198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 1.936176  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.072928995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.0038689997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.97688496  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert Ih
        gmax_Ih = 8.0E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_HVA
        gmax_Ca_HVA = 6.8399997E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 6.9999996E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_HVA
        gmax_Ca_HVA = 4.59E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0055919997  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cADpyr_231_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cADpyr_231_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cADpyr_231_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cADpyr_231_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003100))*0.000080))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_49 nseg = 3
    dend_34 nseg = 11
    apic_24 nseg = 5
    apic_23 nseg = 7
    apic_21 nseg = 9
    apic_2 nseg = 3
    dend_54 nseg = 7
    dend_53 nseg = 5
    dend_51 nseg = 5
    dend_50 nseg = 3
    dend_47 nseg = 7
    dend_38 nseg = 3
    dend_37 nseg = 7
    dend_18 nseg = 9
    dend_7 nseg = 5
    dend_5 nseg = 3
    apic_26 nseg = 3
    apic_25 nseg = 5
    apic_20 nseg = 11
    dend_46 nseg = 7
    dend_45 nseg = 3
    dend_27 nseg = 3
    dend_22 nseg = 7
    dend_21 nseg = 5
    dend_11 nseg = 5
    dend_9 nseg = 5
    dend_8 nseg = 3
    dend_4 nseg = 7
    dend_3 nseg = 3
    dend_28 nseg = 3
    dend_25 nseg = 3
    apic_19 nseg = 11
    apic_18 nseg = 13
    apic_14 nseg = 7
    apic_5 nseg = 9
    dend_31 nseg = 3
    dend_30 nseg = 3
    apic_16 nseg = 7
    apic_15 nseg = 7
    apic_6 nseg = 11
    apic_9 nseg = 11
    apic_8 nseg = 15
    apic_11 nseg = 3
    apic_10 nseg = 5
    apic_12 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cADpyr231_L6_IPC_8d0f3a7d2e_0_0


