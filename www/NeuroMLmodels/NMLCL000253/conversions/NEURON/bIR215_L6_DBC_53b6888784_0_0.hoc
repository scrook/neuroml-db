// Cell: bIR215_L6_DBC_53b6888784_0_0
/*
{
  "id" : "bIR215_L6_DBC_53b6888784_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.92851, -12.838, 0.0, 2.34028", "1.77053, -11.651, 0.0, 3.94329", "1.61254, -10.464, 0.0, 5.35921", "1.45455, -9.27692, 0.0, 6.69673", "1.29656, -8.08988, 0.0, 7.75393", "1.13858, -6.90284, 0.0, 8.64632", "0.980589, -5.7158, 0.0, 9.469", "0.822601, -4.52876, 0.0, 10.3084", "0.664614, -3.34172, 0.0, 11.1451", "0.506626, -2.15468, 0.0, 11.8845", "0.348639, -0.967645, 0.0, 12.0097", "0.190651, 0.219395, 0.0, 12.0138", "0.0326638, 1.40643, 0.0, 11.4011", "-0.125324, 2.59347, 0.0, 10.4698", "-0.283311, 3.78051, 0.0, 9.36538", "-0.441299, 4.96755, 0.0, 8.29429", "-0.599286, 6.15459, 0.0, 7.29384", "-0.757274, 7.34163, 0.0, 6.35176", "-0.915261, 8.52867, 0.0, 5.48996", "-1.07325, 9.71571, 0.0, 4.74604", "-1.23124, 10.9027, 0.0, 2.99829" ]
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "2.20047, -12.9375, 0.07, 2.87", "2.27745, -13.4413, 0.0174887, 2.87", "2.70083, -16.0448, 0.0829093, 2.87", "3.16643, -18.718, 0.295394, 2.87", "3.6634, -21.5714, 0.522194, 2.58", "4.18795, -24.5831, 0.761582, 2.58", "4.72139, -27.6458, 1.00503, 2.06", "5.46976, -31.8889, 1.42177, 2.06", "5.73617, -33.4126, 1.6405, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000018766376804
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-2.13953, 12.4515, 1.0, 3.46", "-2.19463, 12.6769, 1.0, 3.46", "-2.77861, 15.2765, 0.993713, 2.65", "-3.25672, 17.416, 0.986479, 2.65", "-3.78628, 19.8451, 0.977592, 2.65", "-4.26706, 22.1041, 0.916524, 2.5", "-4.64094, 23.8895, 0.843994, 2.5", "-5.06807, 25.9922, 0.73217, 2.5", "-5.53887, 28.3325, 0.57888, 2.06", "-6.00184, 30.556, 0.425648, 1.99", "-6.295, 31.9277, 0.333659, 1.99", "-6.66064, 33.671, 0.277044, 1.99", "-7.09583, 35.7464, 0.221429, 1.99", "-7.50718, 37.6001, 0.19493, 1.99", "-7.87788, 39.2983, 0.209629, 1.69", "-8.34685, 41.3567, 0.3158, 1.4", "-8.74509, 43.0781, 0.523989, 1.25" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000018766376804
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-1.23124, 10.9027, 0.0, 0.52", "-3.2102, 25.7716, 0.0, 0.52", "-5.18917, 40.6405, 0.0, 0.52" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "5.73617, -33.4126, 1.6405, 0.74", "6.99639, -34.6697, 2.09671, 0.74", "7.96332, -35.6391, 2.37655, 0.74", "9.41471, -37.0941, 2.7966, 0.74", "10.3821, -38.064, 3.07658, 0.74", "12.0772, -39.7634, 3.56715, 0.74", "13.0824, -40.7712, 3.85807, 0.74", "14.8632, -42.5341, 4.40064, 0.74" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "5.73617, -33.4126, 1.6405, 1.33", "6.10491, -36.0386, 1.33662, 1.33", "6.3394, -37.7086, 1.14338, 1.33", "6.67033, -40.0653, 0.870663, 1.33", "6.87014, -41.4883, 0.706003, 1.33", "7.08665, -43.0301, 0.527581, 1.33", "7.38163, -45.1309, 0.284487, 1.33" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-8.74509, 43.0781, 0.523989, 1.18", "-8.87895, 44.7034, 1.01123, 1.18", "-8.92233, 45.8976, 1.23243, 1.18", "-8.93428, 46.9959, 1.37896, 1.18", "-8.93459, 47.9869, 1.45378, 1.18", "-8.9424, 51.8225, 1.36426, 1.25", "-8.91112, 54.8251, 1.12663, 0.81", "-8.84973, 56.1217, 0.997706, 0.81", "-8.76167, 57.0249, 0.842582, 0.81", "-8.58221, 58.0842, 0.523341, 0.81", "-8.23327, 59.67, -0.131042, 0.81", "-7.9819, 60.699, -0.655076, 0.81", "-7.6964, 61.8609, -1.15317, 0.81", "-7.48416, 62.6804, -1.51736, 0.81", "-7.05168, 64.1907, -2.14909, 0.81", "-6.79339, 65.0351, -2.48038, 0.81", "-6.44275, 66.154, -2.87615, 0.81", "-6.21522, 66.966, -3.18666, 0.81", "-5.93529, 68.2032, -3.66822, 0.81", "-5.69875, 69.3646, -4.07334, 0.81" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-8.74509, 43.0781, 0.523989, 1.25", "-9.0727, 44.315, 1.36753, 1.25", "-9.33129, 45.2913, 2.03338, 1.25", "-9.8519, 47.2567, 3.37384, 1.25" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-5.18917, 40.6405, 0.0, 0.52", "-7.16813, 55.5094, 0.0, 0.52", "-9.14709, 70.3782, 0.0, 0.52" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_89",
    "id" : "dend_89",
    "points3d" : [ "14.8632, -42.5341, 4.40064, 0.37", "15.9404, -44.1149, 4.64668, 0.37", "16.6829, -45.1154, 4.91436, 0.37", "17.3887, -46.0453, 5.19548, 0.37", "18.5191, -47.5949, 5.6484, 0.37", "19.3634, -48.7227, 6.07439, 0.37", "19.9809, -49.5191, 6.40552, 0.37", "20.7308, -50.452, 6.87132, 0.37", "21.4972, -51.386, 7.35859, 0.37", "22.4242, -52.4147, 7.9178, 0.37", "23.7374, -53.7139, 8.54384, 0.37", "24.4557, -54.3842, 8.89435, 0.37", "25.4892, -55.4097, 9.43334, 0.37", "25.7593, -55.6963, 9.57018, 0.37", "26.433, -56.4656, 9.91376, 0.37", "27.319, -57.5397, 10.3645, 0.37", "28.1132, -58.5906, 10.7297, 0.37", "29.1526, -59.9741, 11.2212, 0.37", "29.8405, -60.933, 11.5708, 0.37", "30.6052, -62.0829, 11.9711, 0.37", "31.0125, -62.7752, 12.1877, 0.37", "31.5391, -63.7314, 12.4758, 0.37", "32.0449, -64.4969, 12.6593, 0.37" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "14.8632, -42.5341, 4.40064, 0.59", "16.1252, -42.5802, 4.30921, 0.59", "16.8125, -42.5906, 4.26457, 0.59", "18.2403, -42.596, 4.18368, 0.59", "19.0716, -42.5854, 4.09294, 0.52", "19.5952, -42.5904, 4.02237, 0.52", "20.3984, -42.6039, 3.90284, 0.52", "21.2102, -42.6188, 3.76275, 0.52", "22.0911, -42.6481, 3.63927, 0.52", "23.2132, -42.6961, 3.53421, 0.52", "24.3025, -42.7703, 3.48828, 0.52", "25.43, -42.8766, 3.49457, 0.52", "26.2321, -42.9769, 3.54223, 0.52", "27.4328, -43.1556, 3.69577, 0.52", "28.385, -43.3029, 3.87348, 0.52", "29.1508, -43.4259, 4.08839, 0.52", "29.8844, -43.5386, 4.31471, 0.52", "30.9203, -43.7169, 4.66293, 0.52", "31.7569, -43.8661, 4.94941, 0.52", "32.7339, -44.0366, 5.26558, 0.52", "34.6614, -44.3741, 5.93624, 0.52" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "7.38163, -45.1309, 0.284487, 0.81", "6.494, -47.9329, -0.647569, 0.81", "6.08409, -49.3102, -1.17658, 0.81", "5.78014, -50.3244, -1.57184, 0.81", "5.32796, -51.6854, -2.10067, 0.59", "5.12743, -52.2621, -2.35288, 0.52", "4.75834, -53.3076, -2.8291, 0.52", "4.15873, -54.8364, -3.50919, 0.52", "3.80275, -55.6125, -3.91502, 0.52", "3.482, -56.2241, -4.25992, 0.52", "2.64845, -57.6257, -5.08911, 0.52", "2.31832, -58.1157, -5.38653, 0.52", "1.31993, -59.4036, -6.16301, 0.52", "0.599137, -60.2971, -6.67683, 0.52", "-0.28917, -61.3547, -7.36984, 0.52", "-0.974866, -62.2106, -7.94645, 0.52", "-1.3462, -62.7085, -8.28793, 0.52", "-1.6847, -63.2131, -8.6525, 0.52", "-2.31936, -64.3385, -9.50369, 0.52", "-3.05618, -65.8574, -10.6582, 0.52", "-3.40583, -66.747, -11.3346, 0.52", "-3.81079, -67.9612, -12.2228, 0.52", "-3.93853, -68.3827, -12.546, 0.52", "-4.40571, -69.9994, -13.7963, 0.52", "-4.6285, -70.7952, -14.3809, 0.52", "-4.95734, -72.1186, -15.3215, 0.52", "-5.17655, -72.9909, -15.935, 0.52", "-5.61854, -74.7243, -17.0542, 0.52", "-5.70813, -75.1057, -17.2811, 0.52", "-5.92196, -76.1186, -17.8006, 0.52", "-6.29292, -77.777, -18.5821, 0.52", "-6.53991, -78.7477, -18.9603, 0.52", "-6.92053, -80.1275, -19.428, 0.52", "-7.34409, -81.5227, -19.8679, 0.52", "-7.68664, -82.5051, -20.1605, 0.52", "-8.34061, -84.1237, -20.7034, 0.52", "-8.97113, -85.5095, -21.1791, 0.52", "-9.25381, -86.0718, -21.4199, 0.52", "-10.1544, -87.7459, -22.2241, 0.52", "-11.0941, -89.4242, -23.1863, 0.52", "-12.1647, -91.2848, -24.3939, 0.52", "-12.8128, -92.4168, -25.2475, 0.52", "-13.806, -94.1864, -26.7088, 0.52", "-14.194, -94.9054, -27.3445, 0.52", "-15.1751, -96.8157, -29.0776, 0.52", "-15.3158, -97.1342, -29.3906, 0.52", "-16.0289, -99.047, -31.1731, 0.52", "-16.3119, -99.9874, -32.0859, 0.52", "-16.6475, -101.409, -33.4149, 0.52", "-16.8363, -102.292, -34.2483, 0.52", "-17.2404, -104.25, -36.0027, 0.52", "-17.4226, -105.215, -36.8421, 0.52", "-17.747, -107.101, -38.4467, 0.52", "-17.8572, -107.704, -38.9577, 0.52", "-18.167, -109.206, -40.1136, 0.52", "-18.3158, -109.834, -40.5489, 0.52", "-18.5573, -110.69, -41.0164, 0.52", "-19.1163, -112.466, -41.7743, 0.52", "-19.4976, -113.409, -42.0757, 0.52", "-20.0112, -114.403, -42.3628, 0.52", "-20.4403, -115.101, -42.5292, 0.52", "-20.8885, -115.717, -42.6707, 0.52", "-21.8063, -116.73, -42.8735, 0.52", "-23.449, -118.304, -43.2192, 0.52", "-24.693, -119.452, -43.6849, 0.52", "-25.5531, -120.241, -44.0903, 0.52", "-26.2137, -120.866, -44.4484, 0.52", "-27.757, -122.408, -45.3582, 0.52", "-29.0663, -123.808, -46.2317, 0.52", "-30.9795, -126.054, -47.5938, 0.52", "-31.9971, -127.305, -48.3595, 0.52", "-32.5567, -128.017, -48.8044, 0.52", "-33.6893, -129.561, -49.8177, 0.52", "-34.9957, -131.446, -51.0311, 0.52", "-35.4064, -132.052, -51.3845, 0.52", "-36.1952, -133.239, -52.1352, 0.52", "-37.1096, -134.721, -53.1819, 0.52", "-38.1943, -136.628, -54.5571, 0.52", "-38.9282, -138.038, -55.5687, 0.52", "-39.2794, -138.757, -56.0565, 0.52", "-40.6584, -141.579, -57.8883, 0.52", "-41.2013, -142.717, -58.5683, 0.52", "-41.8354, -143.958, -59.2811, 0.52", "-42.18, -144.594, -59.6239, 0.52", "-42.8778, -145.799, -60.4971, 0.52", "-43.4382, -146.67, -61.2131, 0.52", "-43.9311, -147.379, -61.8077, 0.52", "-45.3254, -149.31, -63.6648, 0.52", "-46.0525, -150.299, -64.7135, 0.52", "-48.0568, -153.059, -67.8501, 0.52", "-48.4794, -153.659, -68.5829, 0.52", "-49.0104, -154.464, -69.6251, 0.52", "-49.7418, -155.581, -71.1465, 0.52" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "7.38163, -45.1309, 0.284487, 1.33", "7.38257, -45.1898, 0.291257, 1.33", "7.42289, -47.5761, 0.509693, 1.33", "7.46619, -50.8934, 0.758344, 1.33", "7.48962, -52.8419, 0.953446, 1.33", "7.52874, -54.7984, 1.17257, 1.18", "7.57589, -56.4094, 1.38952, 1.18", "7.67531, -58.6112, 1.71873, 1.18", "7.77725, -60.4412, 2.01335, 1.18", "7.8418, -62.1295, 2.30792, 1.18", "7.86336, -64.2358, 2.70991, 1.18", "7.84518, -66.5122, 3.19874, 1.18", "7.81574, -68.4189, 3.61979, 1.18", "7.79631, -69.5824, 3.89046, 1.18", "7.72606, -71.6127, 4.3339, 1.18", "7.61509, -73.4617, 4.67661, 1.03", "7.5109, -74.7825, 4.92305, 1.03", "7.28409, -77.3011, 5.36649, 1.03", "7.13541, -78.9658, 5.6761, 1.03", "6.97517, -81.0679, 6.06393, 1.03", "6.82916, -82.9673, 6.37855, 1.03" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-5.69875, 69.3646, -4.07334, 0.52", "-6.42184, 70.9161, -5.34288, 0.52", "-6.82203, 71.7938, -6.06568, 0.52", "-7.7902, 73.7676, -7.59025, 0.52", "-8.06359, 74.2886, -7.96623, 0.52", "-8.57528, 75.1804, -8.56697, 0.52", "-8.96198, 75.8325, -8.97501, 0.52", "-9.75725, 77.1734, -9.74838, 0.52", "-10.3287, 78.1909, -10.2932, 0.52", "-10.7322, 78.9394, -10.632, 0.52", "-11.153, 79.7375, -11.0137, 0.52", "-11.475, 80.3566, -11.305, 0.52", "-12.1804, 81.7396, -12.0226, 0.52", "-12.4637, 82.317, -12.32, 0.52", "-12.721, 82.8328, -12.6234, 0.52", "-13.1043, 83.5408, -13.0526, 0.52", "-13.511, 84.2018, -13.53, 0.52", "-14.6066, 85.7166, -14.7054, 0.52", "-14.9513, 86.1741, -15.0442, 0.52", "-15.2254, 86.5511, -15.3189, 0.52", "-15.7121, 87.242, -15.7951, 0.52", "-16.7682, 88.7355, -16.765, 0.52", "-17.134, 89.2478, -17.0424, 0.52", "-17.735, 90.0788, -17.4399, 0.52", "-18.2006, 90.7772, -17.7726, 0.52", "-18.6946, 91.5813, -18.2113, 0.52", "-19.0928, 92.274, -18.7045, 0.52", "-19.48, 93.0082, -19.2892, 0.52", "-20.1145, 94.3937, -20.5883, 0.52", "-20.3717, 95.1179, -21.4107, 0.52", "-20.5895, 96.2057, -22.7047, 0.52", "-20.5755, 97.73, -24.6179, 0.52", "-20.534, 97.9447, -24.9165, 0.52", "-20.3818, 98.3508, -25.5422, 0.52", "-19.9227, 99.1081, -26.8771, 0.52", "-19.4716, 99.7209, -28.0441, 0.52", "-18.7709, 100.599, -29.6452, 0.52", "-17.793, 101.715, -31.6261, 0.52", "-17.5407, 102.0, -32.1293, 0.52", "-16.7795, 102.825, -33.6126, 0.52", "-16.3982, 103.187, -34.2368, 0.52", "-16.0269, 103.478, -34.7974, 0.52", "-15.6515, 103.748, -35.2787, 0.52", "-15.3118, 103.928, -35.7244, 0.52", "-14.0126, 104.536, -37.4975, 0.52", "-13.5203, 104.722, -38.3901, 0.52", "-12.5042, 104.962, -40.5098, 0.52", "-12.0186, 105.021, -41.5518, 0.52", "-10.5569, 105.058, -44.8972, 0.52", "-10.2296, 105.043, -45.6301, 0.52", "-7.09585, 104.7, -52.2385, 0.52", "-5.92641, 104.517, -54.5789, 0.52", "-5.2835, 104.372, -55.8402, 0.52", "-3.56445, 103.873, -59.2376, 0.52", "-2.79292, 103.612, -60.6622, 0.52", "-2.17904, 103.367, -61.76, 0.52", "-0.249414, 102.487, -64.8565, 0.52", "1.4963, 101.645, -67.651, 0.52", "3.09455, 100.82, -70.3506, 0.52", "3.63235, 100.508, -71.2771, 0.52", "4.82595, 99.7009, -73.5806, 0.52", "5.48439, 99.1983, -74.9347, 0.52", "5.82229, 98.9313, -75.5646, 0.52" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-5.69875, 69.3646, -4.07334, 0.81", "-5.28188, 70.4413, -4.12475, 0.81", "-4.93671, 71.3872, -4.24824, 0.81", "-4.55547, 72.328, -4.39695, 0.81", "-4.04382, 73.4165, -4.57297, 0.81", "-3.55719, 74.3612, -4.72314, 0.81", "-3.03514, 75.3747, -4.88425, 0.81", "-2.23934, 76.977, -5.1338, 0.81", "-1.74584, 77.9678, -5.30679, 0.81", "-0.949769, 79.4174, -5.59696, 0.81", "-0.503434, 80.0891, -5.75242, 0.81" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-9.8519, 47.2567, 3.37384, 0.81", "-8.64122, 48.6677, 5.84126, 0.81", "-8.27552, 48.9301, 6.67789, 0.81", "-7.43705, 49.2859, 8.4896, 0.81", "-6.81897, 49.4344, 9.67571, 0.59", "-6.34025, 49.515, 10.5086, 0.52", "-5.41672, 49.6717, 11.9415, 0.52", "-3.84814, 49.7044, 13.8023, 0.52", "-3.22896, 49.7, 14.435, 0.52", "-2.50389, 49.702, 15.0719, 0.52", "-1.61672, 49.7284, 15.813, 0.52", "-0.666371, 49.7678, 16.6265, 0.52", "0.0786434, 49.7904, 17.2042, 0.52", "0.796725, 49.7355, 17.7246, 0.52", "1.94286, 49.4304, 18.7171, 0.52", "2.88805, 48.9708, 19.5984, 0.52", "3.76515, 48.398, 20.3905, 0.52", "4.42875, 47.9016, 20.9646, 0.52", "5.24161, 47.3139, 21.6569, 0.52", "5.83127, 46.9205, 22.1437, 0.52", "6.52914, 46.4993, 22.6397, 0.52", "7.16131, 46.1421, 23.0576, 0.52", "7.67018, 45.8893, 23.3897, 0.52", "9.33545, 45.1227, 24.5573, 0.52", "10.446, 44.6144, 25.4111, 0.52", "11.2439, 44.2241, 26.0469, 0.52", "11.9717, 43.8131, 26.7235, 0.52" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-9.8519, 47.2567, 3.37384, 0.88", "-11.2796, 47.9878, 4.633, 0.88", "-12.4294, 48.6222, 5.55303, 0.88", "-13.6977, 49.3789, 6.45543, 0.81", "-14.6268, 49.9406, 7.01907, 0.81", "-16.0138, 50.7567, 7.82371, 0.81", "-16.9039, 51.2804, 8.34007, 0.81", "-17.8922, 51.8574, 8.82551, 0.81", "-18.9121, 52.4499, 9.24339, 0.81", "-20.235, 53.2162, 9.65514, 0.81", "-21.3476, 53.9049, 9.97521, 0.81" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_91",
    "id" : "dend_91",
    "points3d" : [ "32.0449, -64.4969, 12.6593, 0.37", "34.7719, -64.0702, 16.2559, 0.37", "35.1293, -64.0968, 16.713, 0.37", "35.8771, -64.2535, 17.5788, 0.37", "36.5842, -64.4253, 18.3263, 0.37", "37.9761, -64.7474, 19.6848, 0.37", "39.0394, -64.9599, 20.6294, 0.37", "40.3969, -65.3136, 21.4468, 0.37", "41.223, -65.55, 21.9289, 0.37", "41.7385, -65.7234, 22.3254, 0.37", "42.2522, -65.8963, 22.7203, 0.37", "43.0913, -66.1108, 23.3274, 0.37", "44.6007, -66.3385, 24.4859, 0.37", "45.1893, -66.4037, 24.9612, 0.37", "47.8105, -66.8458, 27.5554, 0.37" ],
    "parent" : "dend_89",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_90",
    "id" : "dend_90",
    "points3d" : [ "32.0449, -64.4969, 12.6593, 0.37", "34.0516, -64.9568, 12.2747, 0.37", "35.4987, -65.2574, 12.093, 0.37", "36.5227, -65.4681, 12.0101, 0.37", "38.0127, -65.818, 11.9294, 0.37", "38.8776, -66.0437, 11.8812, 0.37", "39.7097, -66.2995, 11.8365, 0.37", "40.7334, -66.6945, 11.7301, 0.37", "41.6965, -67.1668, 11.6807, 0.37", "42.5169, -67.6955, 11.6695, 0.37", "43.0117, -68.0976, 11.667, 0.37", "44.1142, -69.1434, 11.5874, 0.37", "44.996, -70.0508, 11.4432, 0.37", "45.6088, -70.7004, 11.1788, 0.37", "46.4981, -71.6406, 10.6496, 0.37", "47.4892, -72.674, 9.94915, 0.37", "48.744, -73.9869, 8.96398, 0.37", "49.5532, -74.8267, 8.19756, 0.37", "51.7866, -77.107, 5.83935, 0.37", "52.1304, -77.4425, 5.43789, 0.37", "52.5193, -77.8147, 4.94848, 0.37", "53.0596, -78.3618, 4.22866, 0.37", "53.9318, -79.3853, 2.98927, 0.37", "54.2439, -79.839, 2.53066, 0.37", "55.0204, -81.1426, 1.52493, 0.37", "55.351, -81.7057, 1.05087, 0.37", "55.7753, -82.404, 0.454582, 0.37", "56.4121, -83.4709, -0.412794, 0.37", "56.9689, -84.4009, -1.11486, 0.37", "57.3403, -85.0179, -1.56388, 0.37", "58.3127, -86.7191, -2.74963, 0.37", "58.926, -87.8217, -3.51575, 0.37", "59.2263, -88.3809, -3.89452, 0.37", "59.9049, -89.6995, -4.72121, 0.37", "60.3247, -90.5323, -5.21066, 0.37", "60.9007, -91.7147, -5.94606, 0.37", "61.2936, -92.4862, -6.46385, 0.37", "61.5809, -92.9202, -6.8713, 0.37", "61.7969, -93.1415, -7.18165, 0.37", "62.2199, -93.4368, -7.7556, 0.37", "63.2463, -93.9014, -9.01619, 0.37", "64.2025, -94.188, -10.0506, 0.37", "65.2297, -94.4179, -11.084, 0.37", "66.5037, -94.727, -12.3513, 0.37", "67.0026, -94.8748, -12.8513, 0.37", "67.6633, -95.085, -13.5043, 0.37", "68.0988, -95.2205, -13.8867, 0.37", "69.0486, -95.5407, -14.6807, 0.37", "70.2817, -96.0288, -15.7254, 0.37", "71.498, -96.5829, -16.7577, 0.37", "72.2507, -96.9617, -17.4472, 0.37", "72.9043, -97.3211, -18.0528, 0.37", "74.1426, -97.9871, -19.1732, 0.37", "75.2809, -98.5706, -20.1197, 0.37", "75.8626, -98.8578, -20.5795, 0.37", "76.7781, -99.3673, -21.36, 0.37", "77.4611, -99.7904, -21.9781, 0.37", "78.3578, -100.378, -22.8981, 0.37", "78.8877, -100.72, -23.4351, 0.37", "79.7649, -101.34, -24.3377, 0.37", "80.6758, -102.073, -25.3454, 0.37", "80.9257, -102.295, -25.6116, 0.37", "82.0237, -103.34, -26.7708, 0.37", "82.7971, -104.113, -27.5955, 0.37", "83.7029, -105.002, -28.602, 0.37", "84.4454, -105.717, -29.5203, 0.37", "85.2798, -106.5, -30.6049, 0.37", "85.8731, -107.055, -31.4806, 0.37", "87.2542, -108.373, -33.6404, 0.37", "88.1007, -109.168, -35.0067, 0.37", "89.6248, -110.548, -37.5084, 0.37", "90.0285, -110.885, -38.1959, 0.37", "91.6499, -112.105, -40.9941, 0.37", "92.2949, -112.528, -42.0439, 0.37", "92.8322, -112.822, -42.8373, 0.37", "94.4625, -113.567, -45.067, 0.37", "96.5814, -114.31, -47.655, 0.37", "97.3868, -114.527, -48.5278, 0.37", "98.9827, -114.826, -49.9939, 0.37", "99.7249, -114.918, -50.6858, 0.37", "101.29, -115.056, -51.9695, 0.37", "102.54, -115.122, -52.7747, 0.37", "104.796, -115.217, -53.9197, 0.37", "105.523, -115.249, -54.276, 0.37", "109.678, -115.517, -56.4969, 0.37", "111.937, -115.719, -57.794, 0.37", "112.903, -115.814, -58.3543, 0.37", "113.65, -115.916, -58.9644, 0.37", "115.533, -116.298, -60.9563, 0.37", "117.525, -116.895, -63.5068, 0.37", "117.874, -117.039, -64.0768, 0.37", "118.475, -117.346, -65.3037, 0.37", "120.445, -118.554, -70.2245, 0.37", "121.284, -119.157, -72.5147, 0.37", "122.384, -120.053, -75.6722, 0.37", "123.767, -121.325, -79.7693, 0.37", "124.748, -122.373, -82.687, 0.37", "126.179, -124.201, -86.9862, 0.37", "126.755, -125.048, -88.5528, 0.37", "127.119, -125.634, -89.4663, 0.37", "127.949, -127.043, -91.2238, 0.37", "128.908, -128.673, -92.8547, 0.37", "130.465, -131.192, -94.995, 0.37", "131.5, -132.732, -96.1018, 0.37", "133.907, -135.864, -98.5196, 0.37", "135.062, -137.176, -99.5918, 0.37", "135.818, -137.938, -100.21, 0.37", "137.192, -139.194, -101.14, 0.37", "139.243, -140.975, -102.278, 0.37", "143.037, -144.234, -104.046, 0.37", "146.395, -147.11, -105.483, 0.37", "147.943, -148.448, -106.165, 0.37", "151.766, -151.839, -107.864, 0.37", "153.668, -153.59, -108.693, 0.37", "156.973, -156.711, -109.914, 0.37" ],
    "parent" : "dend_89",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "34.6614, -44.3741, 5.93624, 0.44", "35.3456, -44.3429, 6.51038, 0.44", "36.3919, -44.2952, 7.38829, 0.44", "37.3004, -44.2538, 8.15071, 0.44", "37.9375, -44.2248, 8.68529, 0.44" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "34.6614, -44.3741, 5.93624, 0.44", "35.1317, -43.2422, 5.96891, 0.44", "35.4412, -42.4973, 5.99042, 0.44", "35.8608, -41.4873, 6.01957, 0.44" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "-49.7418, -155.581, -71.1465, 0.52", "-49.305, -157.038, -71.331, 0.52", "-49.1165, -157.789, -71.4021, 0.52", "-48.8993, -158.893, -71.6516, 0.52", "-48.6814, -160.263, -72.0121, 0.52", "-48.5356, -161.36, -72.3004, 0.52", "-48.3831, -162.729, -72.7072, 0.52", "-48.3116, -163.893, -73.05, 0.52", "-48.2233, -166.64, -74.0684, 0.44", "-48.1962, -167.698, -74.5164, 0.44", "-48.1629, -169.208, -75.221, 0.44", "-48.1475, -171.171, -76.2609, 0.44", "-48.1648, -173.083, -77.3582, 0.44", "-48.2201, -175.72, -79.052, 0.44", "-48.2389, -176.405, -79.5513, 0.44", "-48.271, -177.14, -80.1474, 0.44", "-48.3646, -178.603, -81.393, 0.44", "-48.4411, -179.359, -82.0882, 0.44", "-48.7078, -181.393, -84.0167, 0.44", "-48.9895, -183.285, -85.6927, 0.44", "-49.1829, -184.371, -86.5534, 0.44", "-49.3851, -185.364, -87.2397, 0.44", "-50.1399, -188.215, -88.9294, 0.44", "-50.5028, -189.318, -89.492, 0.44", "-50.9451, -190.465, -89.9861, 0.44", "-51.9026, -192.856, -90.8667, 0.44", "-52.304, -193.853, -91.1933, 0.44", "-53.4247, -196.665, -91.9296, 0.44", "-54.0275, -198.225, -92.2288, 0.44", "-54.8067, -200.292, -92.5914, 0.44", "-55.7281, -202.845, -92.8769, 0.44", "-56.5741, -205.346, -92.9998, 0.44", "-57.5918, -208.557, -92.9551, 0.44", "-58.0929, -210.283, -92.8062, 0.44", "-58.6067, -212.09, -92.5703, 0.44", "-59.3869, -214.824, -92.0802, 0.44", "-59.9812, -216.865, -91.6457, 0.44", "-60.4138, -218.391, -91.2588, 0.44", "-60.8582, -219.99, -90.7759, 0.44", "-61.2302, -221.329, -90.3491, 0.44" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-49.7418, -155.581, -71.1465, 0.52", "-50.6824, -156.26, -72.1225, 0.52", "-53.1895, -158.303, -75.1891, 0.52", "-53.8897, -158.939, -76.0848, 0.52", "-54.428, -159.479, -76.8118, 0.52", "-54.7145, -159.78, -77.2114, 0.52", "-55.1884, -160.285, -77.9094, 0.52", "-56.8482, -162.124, -80.3984, 0.52", "-57.2733, -162.628, -81.0071, 0.52", "-57.7188, -163.154, -81.6591, 0.52", "-58.7313, -164.315, -83.0892, 0.52", "-60.1418, -165.981, -84.995, 0.52", "-60.8027, -166.827, -85.9164, 0.52", "-61.3064, -167.509, -86.5708, 0.52", "-62.3843, -169.119, -88.0187, 0.52", "-62.771, -169.76, -88.5364, 0.52", "-63.2884, -170.82, -89.3011, 0.52", "-64.1422, -172.975, -90.7017, 0.52", "-64.5357, -174.151, -91.4313, 0.52", "-64.8342, -175.16, -91.996, 0.52", "-65.1381, -176.226, -92.5998, 0.52", "-65.5684, -177.565, -93.3821, 0.52", "-65.7961, -178.157, -93.7255, 0.52", "-66.3371, -179.379, -94.3741, 0.52", "-66.8965, -180.491, -94.9738, 0.52", "-68.4706, -183.169, -96.3564, 0.52", "-69.1328, -184.106, -96.8704, 0.52", "-69.6081, -184.65, -97.1757, 0.52", "-70.3337, -185.361, -97.6797, 0.52", "-71.1087, -186.018, -98.3056, 0.52", "-72.4561, -187.013, -99.4164, 0.52", "-74.0109, -188.046, -100.661, 0.52", "-75.1697, -188.778, -101.712, 0.52", "-77.0727, -190.02, -103.525, 0.52", "-79.2836, -191.469, -105.657, 0.52", "-80.0334, -191.984, -106.471, 0.52", "-80.7244, -192.509, -107.268, 0.52", "-82.6537, -194.172, -109.547, 0.52", "-83.7533, -195.282, -110.93, 0.52", "-84.2526, -195.949, -111.583, 0.52", "-85.8514, -199.115, -114.049, 0.52", "-86.286, -200.473, -114.931, 0.52", "-86.4546, -201.503, -115.349, 0.52", "-86.4915, -202.746, -115.522, 0.52", "-86.3996, -205.446, -115.314, 0.52", "-86.3338, -207.131, -114.915, 0.52", "-86.305, -208.437, -114.49, 0.52", "-86.3491, -212.336, -112.931, 0.52", "-86.44, -213.704, -112.325, 0.52", "-86.6954, -215.887, -111.315, 0.52", "-86.9816, -217.56, -110.476, 0.52", "-87.4061, -219.701, -109.382, 0.52", "-88.0003, -222.364, -108.135, 0.52", "-88.5519, -224.506, -107.512, 0.52", "-89.0475, -226.477, -106.953, 0.52" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "6.82916, -82.9673, 6.37855, 0.66", "5.82762, -84.3132, 6.1636, 0.66", "5.12622, -85.0611, 6.15381, 0.66", "4.3008, -85.8597, 6.21193, 0.66", "3.53717, -86.5737, 6.28369, 0.66", "2.20158, -87.7739, 6.49969, 0.66", "1.2258, -88.6079, 6.68669, 0.66", "-0.495822, -89.9282, 7.08943, 0.66", "-1.86992, -90.8996, 7.49243, 0.66", "-2.6019, -91.3758, 7.72708, 0.66", "-3.88707, -92.1734, 8.19644, 0.66", "-4.95027, -92.8368, 8.66755, 0.66", "-5.65056, -93.3002, 8.9861, 0.66", "-6.8011, -94.1042, 9.42521, 0.66" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "6.82916, -82.9673, 6.37855, 0.81", "6.84533, -84.758, 6.35918, 0.81", "6.85127, -86.4004, 6.31987, 0.81", "6.83916, -88.5448, 6.25959, 0.81", "6.82657, -89.6088, 6.22893, 0.81", "6.82692, -91.1896, 6.18433, 0.81", "6.86174, -93.0084, 6.13608, 0.81", "6.88212, -94.8936, 6.08048, 0.81", "6.90491, -96.6642, 6.02377, 0.81", "6.9357, -98.0981, 5.99692, 0.81", "6.98299, -99.4774, 5.9917, 0.81", "7.0703, -101.502, 6.0178, 0.81", "7.15071, -103.089, 6.06526, 0.81", "7.20058, -104.045, 6.10005, 0.81", "7.26384, -105.152, 6.14915, 0.81", "7.33298, -106.678, 6.2316, 0.81", "7.33706, -108.031, 6.32246, 0.81" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-0.503434, 80.0891, -5.75242, 0.52", "1.17486, 80.3371, -5.92666, 0.52", "2.37331, 80.5647, -6.02372, 0.52", "3.01179, 80.7042, -6.06325, 0.52", "3.96199, 80.9076, -6.10452, 0.52", "4.90633, 81.1009, -6.22039, 0.52", "5.71551, 81.2465, -6.35388, 0.52", "6.71212, 81.3805, -6.57202, 0.52", "7.93883, 81.4828, -6.85747, 0.52", "8.60157, 81.5025, -7.009, 0.52", "10.6376, 81.4581, -7.45694, 0.52", "11.5269, 81.3688, -7.6309, 0.52", "12.7497, 81.1417, -7.87657, 0.52", "14.3418, 80.7493, -8.17529, 0.52", "15.1824, 80.5124, -8.30702, 0.52", "15.9778, 80.2896, -8.39158, 0.52", "17.0578, 79.9955, -8.43066, 0.52", "18.1912, 79.7166, -8.48411, 0.52", "19.2227, 79.4939, -8.54074, 0.52", "20.1994, 79.303, -8.63833, 0.52", "21.3598, 79.095, -8.73468, 0.52", "22.3713, 78.9513, -8.79522, 0.52", "22.9697, 78.9083, -8.81463, 0.52", "24.1437, 78.8863, -8.81463, 0.52", "25.3278, 78.9087, -8.81463, 0.52", "26.5314, 78.9623, -8.81463, 0.52", "27.5123, 79.0016, -8.88605, 0.52", "28.6537, 79.0306, -9.04341, 0.52", "29.358, 79.0566, -9.17941, 0.52", "29.8536, 79.0975, -9.29935, 0.52", "30.7221, 79.1799, -9.5253, 0.52", "32.7321, 79.3301, -10.2131, 0.52", "33.4236, 79.36, -10.4816, 0.52", "34.2452, 79.3918, -10.8152, 0.52", "35.4608, 79.5176, -11.299, 0.52", "36.4214, 79.6935, -11.6514, 0.52", "38.0123, 80.0981, -12.1443, 0.52", "38.7836, 80.3368, -12.3116, 0.52", "39.4609, 80.5585, -12.4475, 0.52", "40.4648, 80.8378, -12.6243, 0.52", "41.1606, 80.9976, -12.7195, 0.52", "41.9576, 81.1465, -12.7827, 0.52", "42.857, 81.2486, -12.7827, 0.52", "43.7668, 81.279, -12.8637, 0.52", "44.7443, 81.2041, -13.0146, 0.52", "45.655, 81.0745, -13.1858, 0.52", "46.7252, 80.8991, -13.4011, 0.52", "47.441, 80.7833, -13.6036, 0.52", "49.2954, 80.4915, -14.2136, 0.52", "50.9594, 80.2823, -14.8006, 0.52", "52.4816, 80.1734, -15.3436, 0.52", "53.5999, 80.1346, -15.7313, 0.52", "55.7047, 80.109, -16.4906, 0.52", "56.6202, 80.1049, -16.8113, 0.52", "57.5385, 80.1219, -17.0961, 0.52", "58.62, 80.1865, -17.4431, 0.52", "59.5565, 80.2661, -17.7266, 0.52", "61.1912, 80.4576, -18.2019, 0.52", "61.9367, 80.5455, -18.3834, 0.52", "63.0429, 80.6722, -18.6676, 0.52", "63.7657, 80.7458, -18.8531, 0.52", "64.8266, 80.8458, -19.1085, 0.52", "66.4976, 80.9969, -19.4551, 0.52", "67.4814, 81.1085, -19.6233, 0.52", "68.5602, 81.2631, -19.8374, 0.52", "69.2682, 81.3791, -19.9869, 0.52", "70.1217, 81.5611, -20.1563, 0.52", "70.8347, 81.714, -20.278, 0.52", "71.7161, 81.9063, -20.3882, 0.52", "72.6891, 82.1179, -20.5058, 0.52", "73.9454, 82.3719, -20.6432, 0.52", "75.5885, 82.6773, -20.793, 0.52", "76.6871, 82.8416, -20.8709, 0.52", "77.9433, 82.973, -20.929, 0.52", "78.8237, 83.0355, -20.9446, 0.52", "79.9927, 83.1107, -20.9446, 0.52", "81.2066, 83.2086, -20.9446, 0.52", "82.0512, 83.3096, -20.9446, 0.52", "83.1294, 83.5198, -20.9834, 0.52", "83.931, 83.7263, -21.0395, 0.52", "84.671, 83.9492, -21.1161, 0.52", "85.5735, 84.2251, -21.2696, 0.52", "86.3414, 84.4603, -21.4403, 0.52", "87.5022, 84.7808, -21.7785, 0.52", "88.4428, 84.9762, -22.1049, 0.52", "89.0149, 85.0381, -22.3351, 0.52", "90.2269, 85.1079, -22.8448, 0.52", "90.8499, 85.1308, -23.1061, 0.52", "92.1438, 85.1691, -23.6249, 0.52", "93.0792, 85.1901, -23.9598, 0.52", "94.7801, 85.212, -24.5306, 0.52", "95.8286, 85.2291, -24.8552, 0.52", "96.6166, 85.2643, -25.068, 0.52", "97.1275, 85.3025, -25.2124, 0.52", "97.961, 85.4119, -25.4837, 0.52", "98.5208, 85.5323, -25.7241, 0.52", "99.5616, 85.8429, -26.398, 0.52", "100.382, 86.1456, -27.0769, 0.52", "101.323, 86.5602, -27.9458, 0.52", "102.357, 87.0437, -28.9389, 0.52", "103.37, 87.5088, -30.0112, 0.52", "104.756, 88.0571, -31.5998, 0.52", "105.202, 88.1901, -32.1751, 0.52", "105.832, 88.33, -33.0271, 0.52", "106.402, 88.4246, -33.785, 0.52", "107.635, 88.6138, -35.3613, 0.52", "109.024, 88.8291, -37.0379, 0.52", "110.995, 89.2387, -39.318, 0.52", "111.887, 89.5064, -40.378, 0.52", "112.187, 89.6299, -40.7265, 0.52", "112.894, 90.0106, -41.5117, 0.52", "113.449, 90.3585, -42.0411, 0.52", "114.714, 91.1692, -43.0456, 0.52", "116.312, 92.1406, -44.1702, 0.52", "117.15, 92.6071, -44.7533, 0.52", "118.918, 93.5072, -45.9284, 0.52", "119.952, 93.9927, -46.5817, 0.52", "121.165, 94.5603, -47.3599, 0.52", "122.537, 95.2099, -48.2713, 0.52", "124.371, 96.1357, -49.662, 0.52", "125.368, 96.6883, -50.4898, 0.52", "125.626, 96.8471, -50.7075, 0.52", "127.238, 97.9635, -52.1893, 0.52", "128.722, 99.1123, -53.5957, 0.52", "130.299, 100.484, -55.1485, 0.52", "131.1, 101.299, -56.0421, 0.52", "131.904, 102.212, -56.9897, 0.52", "133.004, 103.53, -58.3047, 0.52", "133.686, 104.4, -59.0931, 0.52", "134.974, 106.136, -60.551, 0.52", "136.243, 107.905, -62.1339, 0.52", "136.853, 108.807, -62.9819, 0.52", "137.875, 110.338, -64.4444, 0.52", "138.375, 111.071, -65.1408, 0.52", "138.987, 111.927, -65.9291, 0.52", "140.531, 113.981, -67.6294, 0.52", "141.289, 114.995, -68.3663, 0.52", "141.764, 115.669, -68.8084, 0.52", "143.224, 117.861, -70.1243, 0.52", "144.005, 119.073, -70.7899, 0.52", "144.561, 119.971, -71.2118, 0.52", "145.333, 121.273, -71.6966, 0.52", "145.808, 122.131, -72.0003, 0.52", "147.119, 124.831, -72.8383, 0.52", "147.882, 126.759, -73.2902, 0.52", "148.246, 127.852, -73.6175, 0.52", "148.458, 128.648, -73.8792, 0.52", "148.632, 129.482, -74.1588, 0.52", "148.821, 130.679, -74.5914, 0.52", "149.111, 133.025, -75.4306, 0.52", "149.579, 136.266, -76.798, 0.52", "149.848, 137.803, -77.4823, 0.52", "150.099, 139.014, -78.0694, 0.52", "150.743, 141.828, -79.5221, 0.52", "151.234, 143.83, -80.6499, 0.52", "151.963, 146.488, -82.2919, 0.52", "152.342, 147.702, -83.025, 0.52", "152.978, 149.42, -84.0936, 0.52", "153.445, 150.527, -84.7755, 0.52", "154.277, 152.155, -85.7204, 0.52", "155.956, 154.831, -87.1978, 0.52", "157.222, 156.525, -88.0096, 0.52", "158.464, 157.961, -88.6956, 0.52", "159.377, 158.891, -89.1629, 0.52", "160.982, 160.42, -90.1109, 0.52", "162.099, 161.492, -90.8957, 0.52", "162.629, 161.98, -91.2981, 0.52", "164.354, 163.6, -92.9099, 0.52", "165.827, 165.092, -94.6274, 0.52", "167.417, 166.927, -96.9683, 0.52", "168.369, 168.277, -98.8609, 0.52" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-0.503434, 80.0891, -5.75242, 0.81", "-0.0412131, 81.0708, -5.83189, 0.81", "0.361045, 82.0683, -5.93578, 0.81", "0.579018, 82.7685, -6.01367, 0.81", "0.776781, 83.6566, -6.11188, 0.81", "0.931295, 84.6279, -6.2129, 0.52", "1.03642, 85.4884, -6.33688, 0.59", "1.09686, 86.24, -6.51104, 0.59", "1.12912, 86.9778, -6.71711, 0.59", "1.15609, 87.6819, -6.92647, 0.59", "1.20823, 88.5727, -7.19705, 0.59", "1.34658, 90.0211, -7.62695, 0.59", "1.57428, 91.3801, -8.03914, 0.59", "1.86172, 92.4533, -8.37683, 0.59", "2.12709, 93.1982, -8.61814, 0.59", "2.37066, 93.7796, -8.80903, 0.59", "2.66038, 94.4098, -9.03417, 0.59", "3.15903, 95.4184, -9.38495, 0.59", "3.54474, 96.2067, -9.66043, 0.59", "3.87045, 96.9187, -9.92375, 0.59", "4.30186, 97.9364, -10.2843, 0.59", "4.70783, 98.9359, -10.6083, 0.59", "4.9991, 99.6296, -10.8315, 0.59", "5.33268, 100.476, -11.073, 0.59", "5.56738, 101.124, -11.2695, 0.59", "5.92618, 102.122, -11.6401, 0.59", "6.15406, 102.734, -11.8984, 0.59", "6.60243, 103.892, -12.4172, 0.59", "6.96276, 104.801, -12.8574, 0.59", "7.34502, 105.76, -13.304, 0.59", "7.85133, 107.038, -13.9335, 0.59", "8.03643, 107.533, -14.1865, 0.59", "8.36558, 108.447, -14.6424, 0.59", "8.74496, 109.542, -15.1144, 0.59", "9.35108, 111.143, -15.7287, 0.59" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "11.9717, 43.8131, 26.7235, 0.52", "12.8018, 44.4232, 27.3345, 0.52", "13.5275, 44.9202, 27.7937, 0.52", "14.2483, 45.4486, 28.2786, 0.52", "15.0148, 46.0853, 28.8191, 0.52", "16.2803, 47.3352, 29.8556, 0.52", "16.8794, 48.0515, 30.4078, 0.52", "17.4258, 48.8862, 31.0087, 0.52", "18.1703, 50.2287, 31.8103, 0.52", "18.519, 51.002, 32.1727, 0.52", "19.0199, 52.3878, 32.6734, 0.52", "19.3223, 53.5124, 32.9722, 0.52", "19.4657, 54.2507, 33.1536, 0.52", "19.6208, 55.4354, 33.3775, 0.52", "19.7131, 55.9793, 33.3942, 0.52", "20.0147, 56.9309, 33.3205, 0.52" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "11.9717, 43.8131, 26.7235, 0.52", "12.8757, 42.7177, 26.9895, 0.52", "13.8426, 41.347, 27.4495, 0.52", "14.339, 40.6007, 27.7587, 0.52", "14.7812, 39.9314, 28.1079, 0.52", "15.4345, 38.9242, 28.6561, 0.52", "16.2881, 37.5653, 29.3813, 0.52", "17.3601, 35.7883, 30.3551, 0.52", "18.0818, 34.493, 31.0148, 0.52", "18.9094, 32.9902, 31.7637, 0.52", "19.5292, 31.9445, 32.281, 0.52", "20.1384, 31.0391, 32.7073, 0.52", "20.7055, 30.3389, 32.9732, 0.52", "21.4444, 29.6199, 33.1607, 0.52", "22.2036, 29.0585, 33.234, 0.52", "22.9264, 28.6955, 33.234, 0.52", "23.9022, 28.4624, 33.234, 0.52", "24.6403, 28.3768, 33.234, 0.52", "25.6127, 28.3657, 33.234, 0.52", "26.3939, 28.4356, 33.234, 0.52", "27.2132, 28.5712, 33.234, 0.52", "28.3144, 28.8606, 33.234, 0.52" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-21.3476, 53.9049, 9.97521, 0.44", "-23.283, 54.1502, 10.5493, 0.44", "-24.1493, 54.2857, 10.7497, 0.44", "-25.3529, 54.4913, 10.9894, 0.44", "-26.3861, 54.683, 11.1693, 0.44", "-27.9749, 54.9621, 11.4082, 0.44", "-29.1662, 55.1323, 11.5659, 0.44", "-30.553, 55.2707, 11.7182, 0.44", "-30.9926, 55.3013, 11.7712, 0.44", "-31.8231, 55.35, 11.8978, 0.44", "-33.0099, 55.4586, 12.2227, 0.44", "-33.9932, 55.54, 12.562, 0.44", "-35.4539, 55.6107, 13.1794, 0.44", "-36.2493, 55.6264, 13.5895, 0.44", "-37.341, 55.6599, 14.2427, 0.44", "-38.4404, 55.7426, 15.0641, 0.44" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-21.3476, 53.9049, 9.97521, 0.52", "-22.9763, 54.439, 9.97521, 0.52", "-23.9269, 54.7301, 9.97978, 0.52", "-24.7139, 54.98, 10.0069, 0.52", "-26.0252, 55.4403, 10.0708, 0.52", "-26.9359, 55.7676, 10.1198, 0.52", "-28.2627, 56.2414, 10.1566, 0.52", "-29.3365, 56.5896, 10.1681, 0.52", "-30.3258, 56.9236, 10.1626, 0.52", "-31.4557, 57.3651, 10.1383, 0.52", "-32.7827, 57.9954, 10.0897, 0.52", "-33.648, 58.4711, 10.0475, 0.52", "-34.294, 58.8537, 10.0088, 0.52", "-35.2883, 59.4424, 9.94169, 0.52", "-36.7413, 60.331, 9.83845, 0.52", "-37.6604, 60.9279, 9.79037, 0.52", "-38.8366, 61.752, 9.78784, 0.52", "-39.4925, 62.2267, 9.81785, 0.52", "-40.4436, 62.9345, 9.88899, 0.52", "-41.2975, 63.5878, 9.986, 0.52", "-42.2674, 64.3566, 10.1334, 0.52", "-43.3615, 65.2175, 10.3257, 0.52", "-44.2268, 65.8834, 10.5347, 0.52", "-44.9595, 66.4233, 10.7441, 0.52", "-46.0574, 67.145, 10.8966, 0.52", "-46.3509, 67.3078, 10.9072, 0.52", "-47.6674, 67.9198, 10.6878, 0.52", "-48.9229, 68.4045, 10.1791, 0.52", "-49.4604, 68.5737, 9.83256, 0.52", "-52.7143, 69.351, 7.31732, 0.52", "-53.8965, 69.5718, 6.31099, 0.52", "-55.3602, 69.8226, 5.03425, 0.52", "-56.2153, 69.9675, 4.20604, 0.52", "-57.6235, 70.2433, 2.78827, 0.52", "-58.352, 70.4205, 2.04942, 0.52", "-58.7612, 70.5526, 1.6435, 0.52", "-59.4682, 70.7875, 0.896297, 0.52", "-61.0648, 71.3609, -0.739968, 0.52", "-62.2823, 71.8731, -2.01197, 0.52", "-63.4795, 72.4895, -3.35089, 0.52", "-64.4201, 73.0711, -4.55871, 0.52" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_93",
    "id" : "dend_93",
    "points3d" : [ "47.8105, -66.8458, 27.5554, 0.37", "48.5403, -65.6865, 27.4193, 0.37", "49.2738, -64.5212, 27.2825, 0.37", "49.4619, -64.2224, 27.2474, 0.37" ],
    "parent" : "dend_91",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_92",
    "id" : "dend_92",
    "points3d" : [ "47.8105, -66.8458, 27.5554, 0.37", "49.0555, -66.7534, 28.047, 0.37", "49.7, -66.7574, 28.2816, 0.37", "50.8221, -66.8895, 28.6603, 0.37", "52.3663, -67.1852, 29.1196, 0.37", "53.6936, -67.4958, 29.4736, 0.37", "55.0178, -67.8972, 29.8503, 0.37", "56.0842, -68.3503, 30.1654, 0.37", "57.156, -68.8965, 30.4817, 0.37", "58.1825, -69.5422, 30.7699, 0.37", "58.7214, -69.9445, 30.8919, 0.37", "60.1077, -71.1422, 31.2155, 0.37", "61.3281, -72.2555, 31.4532, 0.37" ],
    "parent" : "dend_91",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "37.9375, -44.2248, 8.68529, 0.44", "38.65, -44.3926, 8.68948, 0.44", "39.3537, -44.5717, 8.69262, 0.44", "40.3141, -44.816, 8.69691, 0.44", "41.105, -45.0172, 8.70044, 0.44", "42.8015, -45.4488, 8.70801, 0.44", "43.9099, -45.7308, 8.71296, 0.44", "44.9768, -46.0828, 8.71296, 0.44" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "37.9375, -44.2248, 8.68529, 0.44", "37.5955, -43.3556, 8.70703, 0.44", "36.998, -41.8373, 8.74499, 0.44", "36.7186, -41.1275, 8.76275, 0.44" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-6.8011, -94.1042, 9.42521, 0.52", "-8.00536, -94.4409, 9.52075, 0.52", "-8.91127, -94.6556, 9.69396, 0.52", "-9.72996, -94.8498, 9.88204, 0.52", "-10.6126, -95.0924, 10.1036, 0.52", "-11.6708, -95.4558, 10.4705, 0.52", "-12.4444, -95.7687, 10.7819, 0.52", "-13.7965, -96.3937, 11.4013, 0.52", "-14.3871, -96.6963, 11.7035, 0.52", "-14.9064, -96.9953, 11.9847, 0.52", "-16.2471, -97.8446, 12.6964, 0.52", "-16.7422, -98.1679, 12.9045, 0.52", "-17.5116, -98.6517, 13.1052, 0.52", "-18.2542, -99.0589, 13.2122, 0.52", "-19.0523, -99.4278, 13.3476, 0.52", "-19.9023, -99.7547, 13.4863, 0.52", "-21.0968, -100.165, 13.6536, 0.52", "-21.7416, -100.385, 13.766, 0.52", "-23.0126, -100.823, 14.0209, 0.52", "-24.6494, -101.441, 14.4143, 0.52", "-25.6485, -101.824, 14.6807, 0.52", "-26.3711, -102.071, 14.8822, 0.52", "-26.9944, -102.246, 15.058, 0.52", "-27.9576, -102.463, 15.2742, 0.52", "-28.8254, -102.639, 15.3887, 0.52", "-29.7761, -102.839, 15.5086, 0.52", "-30.7991, -103.091, 15.6844, 0.52", "-31.3835, -103.258, 15.8804, 0.52", "-31.9889, -103.462, 16.1834, 0.52", "-32.6468, -103.735, 16.6045, 0.52", "-33.7521, -104.252, 17.4055, 0.52", "-34.4667, -104.624, 17.9857, 0.52", "-36.1483, -105.508, 19.3642, 0.52", "-36.8435, -105.839, 19.8925, 0.52", "-37.2274, -105.985, 20.1392, 0.52", "-37.8971, -106.17, 20.4433, 0.52", "-38.5101, -106.292, 20.5994, 0.52", "-39.4562, -106.467, 20.74, 0.52", "-40.4319, -106.688, 20.7749, 0.52", "-41.4881, -106.983, 20.7991, 0.52", "-42.7822, -107.445, 20.8418, 0.52", "-43.3812, -107.72, 20.8705, 0.52", "-44.335, -108.244, 20.9694, 0.52", "-45.3339, -108.832, 21.1366, 0.52", "-45.8826, -109.146, 21.2518, 0.52", "-46.6832, -109.559, 21.4344, 0.52", "-47.2971, -109.841, 21.576, 0.52", "-48.6535, -110.4, 21.8717, 0.52", "-49.669, -110.784, 22.0647, 0.52", "-50.9165, -111.243, 22.24, 0.52", "-51.8639, -111.617, 22.3231, 0.52", "-52.4271, -111.869, 22.3851, 0.52", "-52.8501, -112.088, 22.432, 0.52", "-54.0292, -112.784, 22.5596, 0.52", "-55.4175, -113.653, 22.6862, 0.52", "-56.5965, -114.41, 22.7759, 0.52", "-59.5216, -116.338, 22.9907, 0.52", "-61.0538, -117.372, 23.0974, 0.52", "-61.6772, -117.815, 23.1281, 0.52", "-62.8371, -118.695, 23.1642, 0.52", "-63.5003, -119.234, 23.1704, 0.52", "-64.4179, -119.985, 23.0909, 0.52", "-65.304, -120.698, 22.8985, 0.52", "-66.6827, -121.678, 22.5661, 0.52", "-67.412, -122.121, 22.3828, 0.52", "-68.4926, -122.686, 22.2029, 0.52", "-70.2197, -123.35, 22.0132, 0.52", "-70.9572, -123.497, 21.9957, 0.52", "-71.7683, -123.526, 22.0985, 0.52", "-72.717, -123.459, 22.3631, 0.52", "-74.5998, -123.231, 23.0308, 0.52", "-75.3265, -123.119, 23.3926, 0.52", "-76.3753, -122.938, 24.1322, 0.52", "-77.5988, -122.716, 25.1537, 0.52", "-78.3477, -122.573, 25.8869, 0.52" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-6.8011, -94.1042, 9.42521, 0.59", "-7.62428, -95.0088, 9.43362, 0.59", "-8.32099, -95.8616, 9.44329, 0.59", "-8.90278, -96.6834, 9.41491, 0.59", "-9.39518, -97.4781, 9.3415, 0.59", "-9.97255, -98.4348, 9.21464, 0.59", "-10.7633, -99.6674, 9.02302, 0.59", "-11.3599, -100.502, 8.86085, 0.59", "-12.1507, -101.552, 8.62723, 0.59", "-12.8607, -102.472, 8.43451, 0.59", "-13.3963, -103.146, 8.26562, 0.59", "-14.106, -103.942, 7.96969, 0.59", "-14.6755, -104.49, 7.7085, 0.59", "-15.1705, -104.903, 7.4919, 0.59", "-16.1256, -105.668, 7.11053, 0.59", "-17.2733, -106.656, 6.72643, 0.59", "-18.3284, -107.732, 6.45021, 0.59", "-18.8548, -108.35, 6.35265, 0.59", "-19.5926, -109.34, 6.33068, 0.59", "-20.1606, -110.231, 6.41382, 0.59", "-20.7852, -111.392, 6.6463, 0.59", "-21.2834, -112.446, 6.97296, 0.52", "-21.6202, -113.248, 7.25694, 0.52", "-22.121, -114.529, 7.67936, 0.52", "-22.4894, -115.539, 7.97096, 0.52", "-22.8399, -116.436, 8.21847, 0.52", "-23.0748, -117.034, 8.35754, 0.52", "-23.3822, -117.819, 8.52153, 0.52", "-23.7923, -118.807, 8.72444, 0.52", "-24.2133, -119.633, 8.87658, 0.52", "-24.9556, -120.849, 9.12236, 0.52", "-25.2628, -121.312, 9.2185, 0.52", "-25.4905, -121.664, 9.28783, 0.52", "-26.0234, -122.57, 9.44286, 0.52", "-26.5314, -123.528, 9.568, 0.52", "-26.8519, -124.162, 9.618, 0.52", "-27.0904, -124.665, 9.61858, 0.52", "-27.3442, -125.193, 9.61473, 0.52", "-27.804, -126.153, 9.60205, 0.52", "-28.1716, -126.94, 9.58882, 0.52", "-28.5302, -127.728, 9.57407, 0.52", "-28.8877, -128.551, 9.55835, 0.52", "-29.3624, -129.684, 9.54958, 0.52", "-29.9972, -131.173, 9.56659, 0.52", "-30.4534, -132.206, 9.59781, 0.52", "-30.7407, -132.863, 9.62747, 0.52", "-31.2348, -134.006, 9.69476, 0.52", "-31.7793, -135.268, 9.78671, 0.52", "-32.2974, -136.545, 9.88155, 0.52", "-32.5159, -137.12, 9.9222, 0.52", "-33.0486, -138.519, 10.0073, 0.52", "-33.4982, -139.646, 10.0806, 0.52", "-33.9534, -140.742, 10.15, 0.52", "-34.3584, -141.756, 10.2058, 0.52", "-34.8305, -143.035, 10.2702, 0.52", "-35.4042, -144.577, 10.3498, 0.52", "-35.777, -145.532, 10.404, 0.52", "-36.126, -146.354, 10.4519, 0.52", "-36.459, -147.077, 10.4921, 0.52", "-36.788, -147.706, 10.5232, 0.52", "-37.3457, -148.656, 10.5604, 0.52", "-37.9217, -149.615, 10.5812, 0.52", "-38.4378, -150.473, 10.5911, 0.52", "-39.0394, -151.454, 10.6044, 0.52", "-39.4802, -152.164, 10.6157, 0.52", "-39.8601, -152.812, 10.628, 0.52", "-40.3198, -153.704, 10.6491, 0.52", "-40.5344, -154.125, 10.6626, 0.52" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "7.33706, -108.031, 6.32246, 0.59", "7.8248, -109.595, 6.31057, 0.59", "8.06972, -110.519, 6.33989, 0.59", "8.31698, -111.644, 6.39376, 0.52", "8.58402, -113.035, 6.46848, 0.52", "8.77283, -114.17, 6.53374, 0.52", "9.0303, -115.684, 6.61861, 0.52", "9.16702, -116.537, 6.6916, 0.52", "9.31337, -117.592, 6.76551, 0.52", "9.43671, -118.605, 6.82796, 0.52", "9.67266, -120.688, 6.93307, 0.52", "9.86588, -122.397, 6.99065, 0.52", "10.033, -123.72, 6.99848, 0.44", "10.1927, -124.716, 6.99804, 0.44", "10.3688, -125.629, 6.99179, 0.44", "10.5039, -126.241, 6.98324, 0.44", "10.8159, -127.542, 6.9532, 0.44", "11.1295, -128.872, 6.91685, 0.44", "11.4245, -130.085, 6.88152, 0.44", "11.6432, -131.056, 6.85693, 0.44", "11.7348, -131.504, 6.87131, 0.44", "11.9232, -132.484, 6.91424, 0.44", "12.0975, -133.612, 6.98714, 0.44", "12.1874, -134.619, 7.08332, 0.44", "12.2294, -136.174, 7.26846, 0.44", "12.1996, -137.663, 7.48442, 0.44" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "7.33706, -108.031, 6.32246, 0.59", "7.4666, -109.556, 6.35612, 0.59", "7.56782, -110.912, 6.37817, 0.59", "7.6667, -112.483, 6.39807, 0.59", "7.711, -113.364, 6.40697, 0.59", "7.79394, -114.805, 6.41891, 0.59", "7.87441, -116.037, 6.41456, 0.59", "8.04366, -117.835, 6.3774, 0.59", "8.19863, -119.182, 6.3384, 0.59", "8.37824, -120.67, 6.21861, 0.59", "8.56331, -122.125, 6.03669, 0.59", "8.72221, -123.354, 5.80836, 0.59", "8.85276, -124.393, 5.55862, 0.59", "8.9262, -125.072, 5.35958, 0.59", "9.1186, -126.844, 4.71482, 0.59", "9.20835, -127.87, 4.2979, 0.59", "9.23529, -129.062, 3.81608, 0.59", "9.20551, -129.736, 3.57344, 0.59", "9.13463, -130.38, 3.3794, 0.59", "8.93006, -131.701, 3.07424, 0.59", "8.73013, -132.947, 2.84091, 0.59", "8.55196, -134.32, 2.53423, 0.59", "8.42078, -135.56, 2.24397, 0.59", "8.29558, -136.829, 1.93195, 0.59", "8.17347, -137.903, 1.67244, 0.59", "7.97136, -139.383, 1.3427, 0.59", "7.78301, -140.716, 1.03541, 0.59", "7.6409, -141.766, 0.801131, 0.59", "7.51848, -142.739, 0.609032, 0.59", "7.38486, -144.005, 0.410165, 0.59", "7.3012, -145.144, 0.311112, 0.59", "7.27477, -146.143, 0.305722, 0.59", "7.30705, -147.208, 0.348397, 0.59", "7.42308, -148.464, 0.408835, 0.59", "7.54887, -149.555, 0.462084, 0.59", "7.7041, -150.743, 0.519612, 0.59", "7.85001, -151.997, 0.574496, 0.59", "7.92737, -152.872, 0.572813, 0.59", "7.94867, -154.169, 0.512063, 0.59", "7.87586, -155.387, 0.40734, 0.59", "7.79807, -156.091, 0.300481, 0.59", "7.63123, -157.47, 0.0234073, 0.59", "7.49967, -158.727, -0.249778, 0.59", "7.40995, -160.044, -0.561826, 0.59", "7.39459, -160.967, -0.780509, 0.59", "7.44592, -162.381, -1.08341, 0.59", "7.5055, -163.419, -1.27768, 0.59", "7.58724, -164.699, -1.47685, 0.59", "7.66955, -166.153, -1.68594, 0.59", "7.7647, -167.562, -1.95323, 0.59", "7.88711, -169.304, -2.33058, 0.59", "7.99958, -170.649, -2.63757, 0.59", "8.09129, -171.543, -2.86912, 0.59", "8.28921, -172.927, -3.30753, 0.59", "8.56123, -174.467, -3.85832, 0.59", "8.67756, -175.112, -4.11973, 0.59", "8.81724, -175.946, -4.49251, 0.59", "8.90163, -176.501, -4.73323, 0.59", "9.06941, -177.806, -5.26502, 0.59", "9.13811, -178.757, -5.59584, 0.59", "9.1138, -179.482, -5.84093, 0.59", "8.89599, -180.922, -6.41027, 0.59", "8.64501, -181.888, -6.81874, 0.59", "8.32371, -182.816, -7.20519, 0.59", "7.99357, -183.569, -7.50275, 0.59", "7.3431, -184.833, -8.04841, 0.59", "6.52523, -186.251, -8.67335, 0.59", "6.08196, -186.974, -8.97519, 0.59", "5.44812, -188.037, -9.39542, 0.59", "5.10472, -188.678, -9.61515, 0.59", "4.34606, -190.395, -10.112, 0.59", "4.13527, -191.01, -10.2783, 0.59", "3.85328, -192.088, -10.5602, 0.59", "3.70095, -192.862, -10.7719, 0.59", "3.58402, -193.77, -11.0157, 0.59", "3.51505, -194.81, -11.2965, 0.59", "3.43679, -196.746, -11.7861, 0.59", "3.37427, -197.769, -12.0905, 0.59", "3.30807, -198.532, -12.3395, 0.59", "3.19996, -199.457, -12.6509, 0.59", "2.94853, -200.884, -13.1301, 0.59", "2.68979, -201.871, -13.4466, 0.59", "2.17173, -203.269, -13.8343, 0.59", "1.84703, -203.938, -14.0249, 0.59", "1.54427, -204.443, -14.18, 0.59", "0.87126, -205.416, -14.4733, 0.59", "0.279839, -206.231, -14.686, 0.59", "-0.184899, -206.952, -14.8516, 0.59", "-0.479384, -207.515, -14.978, 0.59", "-1.03712, -208.885, -15.3147, 0.59", "-1.31534, -209.79, -15.5414, 0.59", "-1.49851, -210.582, -15.7694, 0.59", "-1.72865, -211.821, -16.1437, 0.59", "-1.92917, -212.988, -16.4987, 0.59", "-2.06735, -213.862, -16.7568, 0.59", "-2.17446, -214.577, -16.9398, 0.59", "-2.37042, -215.832, -17.2345, 0.52", "-2.5476, -216.659, -17.4006, 0.52", "-2.77437, -217.402, -17.5139, 0.52", "-3.04957, -218.129, -17.6095, 0.52", "-3.60834, -219.513, -17.79, 0.52", "-4.06969, -220.642, -17.9208, 0.52", "-4.58454, -221.804, -18.0251, 0.52", "-5.19462, -223.09, -18.2049, 0.52", "-5.73394, -224.225, -18.3972, 0.52", "-6.14801, -225.123, -18.5657, 0.52", "-6.5974, -226.167, -18.7977, 0.52", "-7.2381, -227.878, -19.2047, 0.52", "-7.77987, -229.706, -19.6942, 0.52", "-8.09782, -231.051, -20.0714, 0.52", "-8.28558, -231.927, -20.3148, 0.52", "-8.5886, -233.476, -20.7632, 0.52", "-8.72307, -234.306, -20.9988, 0.52", "-8.91483, -235.733, -21.3596, 0.52", "-9.04228, -236.561, -21.5202, 0.52", "-9.19976, -237.35, -21.6479, 0.52", "-9.41971, -238.325, -21.7636, 0.52", "-9.70222, -239.564, -21.844, 0.52", "-10.0305, -241.003, -21.9436, 0.52", "-10.2573, -241.946, -22.0012, 0.52", "-10.6245, -243.44, -22.1584, 0.52", "-10.8074, -244.206, -22.2644, 0.52", "-11.0168, -245.104, -22.4095, 0.52", "-11.2633, -246.266, -22.6123, 0.52", "-11.5364, -247.724, -22.8712, 0.52", "-11.7679, -249.015, -23.1115, 0.52", "-11.9363, -249.994, -23.2901, 0.52", "-12.1947, -251.523, -23.544, 0.52", "-12.401, -252.715, -23.7124, 0.52", "-12.5413, -253.565, -23.8008, 0.52", "-12.8041, -255.31, -24.0485, 0.52", "-12.9696, -256.426, -24.2322, 0.52", "-13.112, -257.377, -24.4232, 0.52", "-13.2499, -258.279, -24.631, 0.52", "-13.4158, -259.386, -24.9374, 0.52", "-13.6623, -261.165, -25.4602, 0.52", "-13.7423, -261.785, -25.6418, 0.52", "-13.8274, -262.564, -25.8645, 0.52", "-13.8951, -263.407, -26.081, 0.52", "-13.946, -264.835, -26.39, 0.52", "-13.9569, -266.321, -26.6373, 0.52", "-13.9598, -267.237, -26.7321, 0.52", "-13.9928, -268.551, -26.8505, 0.52", "-14.0664, -269.848, -26.9357, 0.52", "-14.1542, -270.722, -26.9649, 0.52", "-14.2631, -271.395, -26.923, 0.52", "-14.4909, -272.335, -26.811, 0.52", "-14.8432, -273.345, -26.5999, 0.52", "-15.2102, -274.15, -26.3697, 0.52", "-15.7135, -275.137, -26.0363, 0.52", "-16.3853, -276.447, -25.5705, 0.52", "-16.7322, -277.153, -25.3184, 0.52", "-17.1959, -278.214, -24.9596, 0.52", "-17.5693, -279.262, -24.6343, 0.52", "-17.7737, -280.014, -24.4729, 0.52", "-18.0007, -281.055, -24.3979, 0.52", "-18.1308, -281.774, -24.4411, 0.52", "-18.2893, -282.812, -24.6364, 0.52", "-18.4831, -284.274, -25.0526, 0.52", "-18.6854, -285.662, -25.5135, 0.52", "-18.9265, -287.054, -26.0168, 0.52", "-19.1076, -287.901, -26.3635, 0.52", "-19.5191, -289.476, -27.0518, 0.52", "-20.0052, -290.995, -27.7256, 0.52", "-20.3311, -291.826, -28.08, 0.52", "-20.6012, -292.416, -28.3014, 0.52", "-21.2428, -293.716, -28.7247, 0.52", "-21.5766, -294.356, -28.9544, 0.52", "-22.136, -295.39, -29.4265, 0.52", "-22.553, -296.133, -29.8234, 0.52", "-23.0286, -297.012, -30.3399, 0.52", "-23.3486, -297.638, -30.7405, 0.52", "-23.9159, -298.85, -31.5913, 0.52", "-24.4852, -300.232, -32.7782, 0.52" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "9.35108, 111.143, -15.7287, 0.59", "10.5369, 111.763, -16.2306, 0.59", "11.4163, 112.204, -16.5632, 0.59", "12.406, 112.692, -16.8932, 0.59", "13.3525, 113.159, -17.17, 0.59", "14.7189, 113.793, -17.6, 0.59", "16.0185, 114.376, -18.0448, 0.59", "17.4799, 115.055, -18.5515, 0.59", "18.5, 115.551, -19.0134, 0.59", "19.5464, 116.094, -19.5948, 0.59", "20.7433, 116.826, -20.4805, 0.52", "21.6503, 117.533, -21.3331, 0.52", "22.1487, 118.075, -21.9639, 0.52", "23.3214, 119.895, -23.9447, 0.52", "23.5982, 120.627, -24.674, 0.52", "23.7965, 122.162, -26.1291, 0.52", "23.7733, 122.953, -26.7856, 0.52", "23.6374, 124.029, -27.6677, 0.52", "23.5126, 124.762, -28.2369, 0.52", "23.2214, 126.259, -29.2646, 0.52", "22.7667, 128.521, -30.8141, 0.52", "22.5651, 129.651, -31.555, 0.52", "22.2648, 131.789, -32.9719, 0.52", "22.157, 132.88, -33.6845, 0.52", "22.1136, 133.621, -34.1285, 0.52", "22.0477, 135.26, -35.0223, 0.52", "22.0081, 135.895, -35.3575, 0.52", "21.8894, 136.995, -35.9687, 0.52", "21.6662, 138.273, -36.6504, 0.52", "21.4406, 139.149, -37.1674, 0.52", "20.9495, 140.591, -38.0232, 0.52", "20.1702, 142.498, -39.2473, 0.52", "19.7853, 143.314, -39.7926, 0.52", "19.3149, 144.205, -40.476, 0.52", "18.6458, 145.397, -42.185, 0.52", "18.2607, 146.087, -43.4249, 0.52", "17.7665, 147.025, -45.4198, 0.52", "17.5177, 147.553, -46.6337, 0.52", "17.0507, 148.723, -49.4618, 0.52", "15.7767, 152.721, -59.2285, 0.52", "15.6567, 153.194, -60.3379, 0.52", "15.4196, 154.406, -62.9714, 0.52", "15.3072, 155.192, -64.4489, 0.52", "15.197, 156.579, -66.6112, 0.52", "15.1766, 157.338, -67.4026, 0.52", "15.2307, 160.435, -69.1376, 0.52", "15.3122, 161.821, -69.7664, 0.52", "15.4578, 163.462, -70.308, 0.52", "15.6699, 165.153, -70.7425, 0.52", "16.0514, 167.376, -71.0974, 0.52", "16.3641, 168.789, -71.2437, 0.52", "16.9003, 170.847, -71.3142, 0.52", "17.2007, 172.034, -71.3362, 0.52", "17.602, 173.782, -71.3488, 0.52", "18.0161, 175.85, -71.34, 0.52", "18.3704, 177.842, -71.3247, 0.52", "18.6142, 179.494, -71.3077, 0.52", "18.8022, 181.101, -71.288, 0.52", "19.0024, 182.972, -71.263, 0.52", "19.1955, 184.851, -71.2364, 0.52", "19.3843, 186.583, -71.212, 0.52", "19.5684, 188.07, -71.1707, 0.52", "19.7849, 189.551, -71.0969, 0.52", "20.0873, 191.285, -70.9641, 0.52", "20.3645, 192.765, -70.8369, 0.52", "20.6785, 194.441, -70.6763, 0.52", "21.0159, 196.285, -70.4662, 0.52", "21.3667, 198.151, -70.2127, 0.52", "21.64, 199.611, -69.9717, 0.52" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "9.35108, 111.143, -15.7287, 0.59", "8.29292, 112.146, -15.6021, 0.59", "7.35227, 112.986, -15.5103, 0.59", "6.15937, 114.077, -15.4503, 0.59", "5.35515, 114.88, -15.4312, 0.59", "4.47336, 115.861, -15.4015, 0.59", "3.86458, 116.635, -15.3761, 0.59", "3.02408, 117.918, -15.2981, 0.59", "2.54341, 118.942, -15.2275, 0.59", "2.33033, 120.141, -15.1377, 0.59", "2.44702, 121.199, -15.0194, 0.59", "2.80659, 122.264, -14.8728, 0.59", "3.39858, 123.372, -14.6992, 0.59", "3.90651, 124.081, -14.5784, 0.59", "4.59006, 124.9, -14.4336, 0.59", "5.11544, 125.486, -14.3536, 0.59", "5.57483, 125.994, -14.2793, 0.59", "6.17379, 126.699, -14.1673, 0.59", "6.86904, 127.679, -14.3405, 0.59", "7.23608, 128.311, -14.5859, 0.59", "7.69132, 129.281, -15.0941, 0.59", "8.17121, 130.578, -16.0025, 0.59", "8.3948, 131.378, -16.6289, 0.59", "9.21504, 135.686, -20.2167, 0.59", "9.2928, 136.43, -20.8384, 0.59", "9.31697, 137.083, -21.3602, 0.59", "9.28087, 139.081, -22.8706, 0.59", "9.21321, 140.035, -23.5172, 0.59", "9.14764, 140.615, -23.7707, 0.59", "8.97423, 141.961, -23.8413, 0.44", "8.84767, 143.097, -23.7933, 0.44", "8.76109, 143.932, -23.6482, 0.44", "8.68944, 144.687, -23.3856, 0.44", "8.60982, 146.234, -22.7659, 0.44", "8.60719, 147.697, -22.1571, 0.44", "8.63368, 148.388, -21.8748, 0.44", "8.71965, 149.833, -21.2982, 0.44", "8.80725, 151.111, -20.784, 0.44", "8.89565, 152.381, -20.2968, 0.44", "8.94442, 153.403, -19.9571, 0.44", "8.94569, 154.436, -19.6973, 0.44", "8.89079, 155.903, -19.3952, 0.44", "8.81231, 157.044, -19.2372, 0.44", "8.71397, 158.025, -19.1342, 0.44", "8.51734, 159.557, -18.9662, 0.44", "8.39716, 160.413, -18.8628, 0.44", "8.28889, 161.198, -18.7538, 0.44", "8.1217, 162.601, -18.553, 0.44", "8.00765, 164.09, -18.3531, 0.44", "7.97359, 165.018, -18.2183, 0.44", "7.94588, 166.303, -18.0284, 0.44", "7.92536, 167.533, -17.8579, 0.44", "7.91678, 168.668, -17.7197, 0.44", "7.92791, 169.433, -17.6585, 0.44", "7.96723, 170.704, -17.6422, 0.44", "8.01777, 172.146, -17.7285, 0.44", "8.06264, 173.347, -17.8714, 0.44", "8.09364, 174.702, -18.0808, 0.44", "8.11476, 176.134, -18.3163, 0.44", "8.11089, 177.72, -18.5829, 0.44", "8.10505, 179.514, -18.8827, 0.44", "8.11195, 180.709, -19.0715, 0.44", "8.10784, 181.746, -19.2166, 0.44", "8.07945, 183.389, -19.3946, 0.44", "8.04984, 184.311, -19.4528, 0.44", "8.00718, 185.6, -19.4851, 0.44", "7.9761, 186.734, -19.4851, 0.44", "7.95874, 187.701, -19.5186, 0.44", "7.95626, 189.2, -19.6125, 0.44", "7.96687, 190.579, -19.7287, 0.44", "7.97629, 191.511, -19.8195, 0.44", "7.96524, 192.776, -19.9541, 0.44", "7.9383, 194.413, -20.1335, 0.44", "7.91713, 195.99, -20.3047, 0.44", "7.89221, 196.979, -20.4063, 0.44", "7.82939, 198.219, -20.5139, 0.44", "7.74099, 199.413, -20.5895, 0.44", "7.64302, 200.475, -20.6173, 0.44", "7.55478, 201.401, -20.6326, 0.44", "7.49112, 202.196, -20.6656, 0.44", "7.43361, 203.715, -20.8454, 0.44", "7.45966, 204.842, -21.0529, 0.44", "7.54637, 205.902, -21.2636, 0.44", "7.78062, 207.411, -21.569, 0.44", "7.95378, 208.177, -21.7145, 0.44", "8.47982, 209.974, -22.0264, 0.44", "8.68575, 210.591, -22.1164, 0.44", "9.10794, 211.896, -22.2407, 0.44", "9.47511, 213.157, -22.2941, 0.44", "9.81706, 214.536, -22.2666, 0.44", "9.94934, 215.168, -22.2397, 0.44", "10.1111, 216.177, -22.1727, 0.44", "10.3422, 218.022, -22.0891, 0.44", "10.4766, 219.304, -22.0685, 0.44", "10.5479, 220.026, -22.0509, 0.44", "10.6857, 221.038, -22.0192, 0.44", "10.8827, 222.109, -21.98, 0.44", "11.2046, 223.427, -21.9254, 0.44", "11.6087, 224.801, -21.8647, 0.44", "11.738, 225.201, -21.8467, 0.44", "12.124, 226.384, -21.8004, 0.44", "12.4114, 227.296, -21.7587, 0.44", "12.679, 228.191, -21.7168, 0.44", "13.0322, 229.578, -21.6586, 0.44", "13.2854, 230.762, -21.6022, 0.44", "13.5338, 232.169, -21.5331, 0.44", "13.6693, 233.147, -21.4838, 0.44", "13.7546, 233.867, -21.4484, 0.44", "13.9393, 235.441, -21.3773, 0.44", "14.0245, 236.141, -21.3681, 0.44", "14.1847, 237.352, -21.3915, 0.44", "14.2649, 237.924, -21.4177, 0.44", "14.4033, 238.839, -21.4982, 0.44", "14.5842, 239.985, -21.6218, 0.44", "14.8123, 241.515, -21.8057, 0.44", "15.0046, 242.91, -21.9789, 0.44", "15.1579, 244.038, -22.1201, 0.44", "15.3716, 245.497, -22.2933, 0.44", "15.5249, 246.4, -22.3905, 0.44", "15.7894, 247.667, -22.499, 0.44", "15.967, 248.36, -22.5323, 0.44", "16.1678, 249.097, -22.5542, 0.44", "16.4566, 250.175, -22.5633, 0.44", "16.7397, 251.187, -22.5529, 0.44", "17.1971, 252.699, -22.5362, 0.44", "17.7534, 254.458, -22.5167, 0.44", "18.3686, 256.362, -22.5482, 0.44", "18.9935, 258.264, -22.6016, 0.44", "19.468, 259.691, -22.6297, 0.44", "20.0355, 261.387, -22.6514, 0.44", "20.5616, 262.901, -22.6604, 0.44", "21.1723, 264.572, -22.577, 0.44", "21.5611, 265.644, -22.4396, 0.44", "21.9325, 266.674, -22.1741, 0.44", "22.2519, 267.64, -21.8229, 0.44", "22.6953, 269.142, -21.1487, 0.44", "23.221, 271.103, -20.0742, 0.44", "23.6797, 272.932, -18.9468, 0.44", "24.0777, 274.618, -17.8717, 0.44", "24.2799, 275.499, -17.2897, 0.44", "24.438, 276.221, -16.759, 0.44", "24.6374, 277.248, -15.9113, 0.44" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-38.4404, 55.7426, 15.0641, 0.44", "-39.6627, 56.487, 16.5275, 0.44", "-40.2577, 56.7336, 17.3106, 0.44", "-40.5572, 56.8231, 17.7319, 0.44", "-40.9609, 56.8875, 18.2659, 0.44", "-41.5149, 56.9048, 18.9016, 0.44", "-43.8211, 56.6785, 21.2299, 0.44", "-44.1115, 56.5554, 21.5086, 0.44", "-44.4168, 56.3855, 21.8187, 0.44", "-45.0691, 55.9516, 22.5159, 0.44", "-45.729, 55.4286, 23.2536, 0.44", "-46.2686, 54.9266, 23.7887, 0.44", "-47.1718, 54.0366, 24.0179, 0.44" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-38.4404, 55.7426, 15.0641, 0.44", "-39.3195, 56.1163, 14.9481, 0.44", "-40.2837, 56.4936, 14.819, 0.44", "-41.3928, 56.8972, 14.786, 0.44", "-42.3913, 57.2237, 14.8183, 0.44", "-43.5806, 57.6018, 14.8959, 0.44", "-44.4891, 57.9053, 14.9716, 0.44", "-45.2371, 58.1824, 15.0973, 0.44", "-46.6801, 58.8037, 15.4649, 0.44", "-47.5647, 59.2495, 15.7658, 0.44", "-48.1402, 59.5514, 15.9934, 0.44", "-48.8486, 59.9591, 16.3002, 0.44", "-49.9758, 60.7008, 16.8145, 0.44", "-50.3121, 60.9471, 16.9843, 0.44", "-50.9316, 61.4329, 17.2908, 0.44", "-51.7231, 62.0773, 17.7138, 0.44", "-52.2684, 62.5068, 17.9929, 0.44", "-53.0771, 63.1134, 18.3582, 0.44", "-54.156, 63.8644, 18.7429, 0.44", "-54.8174, 64.3172, 18.9606, 0.44", "-55.5718, 64.8214, 19.1825, 0.44", "-56.4367, 65.3641, 19.4344, 0.44", "-57.3028, 65.8456, 19.6534, 0.44", "-58.3435, 66.3806, 19.9062, 0.44", "-58.6649, 66.5368, 19.9863, 0.44", "-59.3674, 66.877, 20.1886, 0.44", "-61.0086, 67.7069, 20.7145, 0.44", "-61.8331, 68.1666, 20.9996, 0.44", "-62.8063, 68.7925, 21.3767, 0.44", "-63.5031, 69.2816, 21.6511, 0.44", "-64.2946, 69.8736, 21.944, 0.44", "-64.8441, 70.312, 22.1238, 0.44", "-65.6258, 70.9494, 22.3128, 0.44", "-66.7146, 71.8101, 22.5237, 0.44", "-67.5906, 72.4543, 22.6383, 0.44", "-68.2269, 72.8854, 22.7082, 0.44", "-68.9546, 73.3287, 22.7492, 0.44", "-70.0438, 73.9449, 22.7594, 0.44", "-71.1913, 74.5796, 22.6631, 0.44", "-72.2992, 75.1891, 22.4875, 0.44", "-73.3378, 75.7714, 22.2894, 0.44", "-74.547, 76.46, 22.0616, 0.44", "-75.707, 77.1581, 21.8463, 0.44", "-77.065, 78.0395, 21.5484, 0.44", "-78.0133, 78.7047, 21.3014, 0.44", "-78.8804, 79.3596, 21.0608, 0.44", "-79.9889, 80.2514, 20.758, 0.44", "-80.7668, 80.8739, 20.5718, 0.44", "-81.9056, 81.6929, 20.3371, 0.44", "-82.7753, 82.2651, 20.0985, 0.44", "-84.0708, 83.0789, 19.6278, 0.44", "-84.7645, 83.497, 19.3365, 0.44", "-85.6491, 84.005, 18.9409, 0.44", "-86.7858, 84.621, 18.3887, 0.44", "-89.3159, 85.9197, 17.1722, 0.44", "-90.1608, 86.358, 16.7485, 0.44", "-90.8738, 86.7457, 16.374, 0.44", "-91.7, 87.2295, 15.9467, 0.44", "-93.4252, 88.3116, 15.1073, 0.44", "-94.4324, 88.9417, 14.7009, 0.44", "-95.0953, 89.3031, 14.5325, 0.44", "-95.9341, 89.6952, 14.3499, 0.44", "-96.748, 90.0257, 14.2141, 0.44", "-97.4263, 90.2625, 14.1499, 0.44", "-98.3996, 90.5729, 14.1499, 0.44", "-99.0015, 90.7645, 14.1499, 0.44", "-100.12, 91.1375, 14.0791, 0.44", "-100.769, 91.3692, 13.9772, 0.44", "-101.635, 91.7063, 13.7843, 0.44", "-102.691, 92.1975, 13.4178, 0.44", "-103.658, 92.7501, 12.9782, 0.44", "-105.067, 93.7483, 12.2025, 0.44", "-105.965, 94.5264, 11.6305, 0.44", "-106.598, 95.2159, 11.1369, 0.44", "-107.497, 96.4188, 10.3273, 0.44", "-107.935, 97.1141, 9.85334, 0.44", "-108.35, 97.8947, 9.35143, 0.44", "-108.754, 98.7795, 8.85307, 0.44", "-109.57, 100.725, 7.86409, 0.44", "-109.867, 101.465, 7.51328, 0.44", "-110.369, 102.645, 7.02338, 0.44", "-110.69, 103.33, 6.73743, 0.44", "-110.944, 103.827, 6.5532, 0.44", "-111.208, 104.34, 6.34945, 0.44", "-111.563, 104.996, 6.1456, 0.44", "-111.831, 105.491, 6.0045, 0.44", "-112.171, 106.109, 5.87413, 0.44", "-112.889, 107.374, 5.54429, 0.44", "-113.738, 108.964, 5.04448, 0.44" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-64.4201, 73.0711, -4.55871, 0.44", "-63.8976, 74.571, -4.64986, 0.44", "-63.6173, 75.3839, -4.83121, 0.44", "-63.4198, 75.979, -4.99738, 0.44", "-63.2221, 76.7121, -5.25841, 0.44", "-62.8852, 78.2671, -5.84814, 0.44", "-62.6903, 79.3517, -6.2529, 0.44", "-62.3954, 81.4622, -7.03257, 0.44", "-62.3043, 82.1204, -7.27624, 0.44", "-62.0925, 83.66, -7.83683, 0.44", "-61.9671, 84.6936, -8.19984, 0.44", "-61.8401, 85.9111, -8.59098, 0.44", "-61.7182, 87.0284, -8.94539, 0.44", "-61.6108, 87.8886, -9.16384, 0.44", "-61.5514, 88.3015, -9.27471, 0.44", "-61.4775, 88.7638, -9.39207, 0.44", "-61.4158, 89.2439, -9.51767, 0.44", "-61.2959, 91.2492, -10.0198, 0.44", "-61.3084, 91.947, -10.1756, 0.44", "-61.3828, 93.2137, -10.418, 0.44", "-61.4501, 94.3498, -10.5989, 0.44", "-61.4942, 96.1867, -10.822, 0.44", "-61.4809, 97.2836, -10.9409, 0.44", "-61.4432, 98.3704, -11.0188, 0.44", "-61.3802, 99.1339, -11.1703, 0.44", "-61.2763, 99.7511, -11.3698, 0.44", "-60.9692, 100.746, -12.0495, 0.44", "-60.5975, 101.633, -13.0663, 0.44", "-60.3136, 102.339, -14.0841, 0.44", "-59.8488, 103.673, -16.1878, 0.44", "-59.7304, 104.15, -16.9802, 0.44", "-59.3574, 106.219, -20.5935, 0.44", "-59.1665, 107.856, -23.6207, 0.44", "-59.045, 109.205, -26.1128, 0.44", "-59.0152, 109.606, -26.8412, 0.44", "-58.9728, 111.101, -29.3818, 0.44", "-58.9609, 112.702, -31.9857, 0.44", "-58.8957, 115.467, -36.0411, 0.44", "-58.835, 116.052, -36.8686, 0.44", "-58.6979, 116.662, -37.6886, 0.44", "-58.3277, 117.801, -39.1797, 0.44", "-57.8403, 119.014, -40.6102, 0.44", "-57.4222, 120.001, -41.5803, 0.44", "-56.4045, 122.33, -43.5011, 0.44", "-55.7715, 123.966, -44.7717, 0.44", "-55.0313, 126.14, -46.3015, 0.44", "-54.6754, 127.402, -47.0761, 0.44", "-54.2388, 129.461, -48.1673, 0.44", "-54.078, 130.651, -48.7228, 0.44", "-53.9207, 133.286, -49.7239, 0.44", "-53.9036, 134.308, -50.0758, 0.44", "-53.9343, 136.923, -50.8814, 0.44", "-53.9602, 137.873, -51.2012, 0.44", "-53.9976, 138.983, -51.6047, 0.44", "-54.0168, 140.188, -52.0211, 0.44", "-54.0029, 141.316, -52.2779, 0.44" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-64.4201, 73.0711, -4.55871, 0.52", "-65.314, 73.5056, -4.78544, 0.52", "-66.9363, 74.2069, -5.25466, 0.52", "-67.4773, 74.389, -5.40681, 0.52", "-68.6595, 74.6934, -5.70819, 0.52", "-69.573, 74.9122, -5.97576, 0.52", "-70.3392, 75.1054, -6.20748, 0.52", "-71.4953, 75.4218, -6.62598, 0.52", "-72.6347, 75.8099, -7.07292, 0.52", "-73.7071, 76.2506, -7.55756, 0.52", "-74.9771, 76.8662, -8.20376, 0.52", "-75.8971, 77.3685, -8.68115, 0.52", "-77.1429, 78.1724, -9.30119, 0.52", "-77.9911, 78.8154, -9.69074, 0.52", "-78.7557, 79.4557, -9.99622, 0.52", "-79.672, 80.2214, -10.246, 0.52", "-80.5003, 80.8417, -10.3302, 0.52", "-81.544, 81.5474, -10.3279, 0.52", "-82.2035, 81.9608, -10.2572, 0.52", "-83.1354, 82.5607, -10.1077, 0.52", "-84.0369, 83.1901, -9.89729, 0.52", "-85.0304, 83.9623, -9.61394, 0.52", "-85.4362, 84.3283, -9.49333, 0.52", "-86.0604, 84.9924, -9.33456, 0.52", "-86.7378, 85.8455, -9.217, 0.52", "-87.2872, 86.6565, -9.19343, 0.52", "-87.7432, 87.4546, -9.21362, 0.52", "-88.1932, 88.3459, -9.25663, 0.52", "-88.6943, 89.4055, -9.33058, 0.52", "-89.1933, 90.587, -9.43604, 0.52", "-89.6107, 91.6277, -9.58775, 0.52", "-89.8386, 92.2227, -9.72356, 0.52", "-90.1397, 92.9733, -9.92, 0.52", "-90.5599, 93.9177, -10.2214, 0.52", "-90.8636, 94.5326, -10.4345, 0.52", "-91.5015, 95.7113, -10.8822, 0.52", "-92.3082, 97.0634, -11.4076, 0.52", "-93.408, 98.6841, -12.0884, 0.52", "-94.3259, 99.9514, -12.6175, 0.52", "-94.8836, 100.687, -12.9032, 0.52", "-95.3997, 101.327, -13.1217, 0.52", "-96.1907, 102.254, -13.3653, 0.52", "-97.0626, 103.212, -13.5584, 0.52", "-98.2873, 104.488, -13.7706, 0.52", "-99.2619, 105.443, -13.8807, 0.52", "-100.262, 106.361, -13.9686, 0.52", "-101.749, 107.673, -14.0601, 0.52", "-102.578, 108.372, -14.0861, 0.52", "-103.395, 109.01, -14.0861, 0.52", "-104.305, 109.641, -14.0861, 0.52", "-105.491, 110.438, -14.0393, 0.52", "-106.85, 111.375, -13.9399, 0.52", "-107.431, 111.783, -13.8822, 0.52", "-108.625, 112.652, -13.7427, 0.52", "-109.893, 113.602, -13.5786, 0.52", "-111.288, 114.668, -13.385, 0.52", "-112.65, 115.7, -13.1893, 0.52", "-113.513, 116.341, -13.0702, 0.52", "-114.19, 116.834, -12.9903, 0.52", "-114.945, 117.374, -12.8996, 0.52", "-115.613, 117.824, -12.8627, 0.52", "-116.248, 118.22, -12.8585, 0.52", "-117.364, 118.874, -12.8506, 0.52", "-118.784, 119.664, -12.8403, 0.52", "-120.011, 120.315, -12.8319, 0.52", "-121.353, 121.051, -12.8245, 0.52" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "44.9768, -46.0828, 8.71296, 0.37", "44.5939, -44.3198, 8.00915, 0.37", "44.4212, -43.5249, 7.69177, 0.37", "44.1957, -42.487, 7.27743, 0.37", "43.9013, -41.1317, 6.73635, 0.37", "43.7407, -40.3922, 6.44115, 0.37", "43.4141, -38.889, 5.841, 0.37" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "44.9768, -46.0828, 8.71296, 0.44", "45.9787, -46.428, 8.73648, 0.44", "46.8023, -46.7398, 8.75323, 0.44", "47.7027, -47.1431, 8.7696, 0.44", "48.7065, -47.6394, 8.84453, 0.44", "50.1891, -48.4273, 9.03481, 0.44", "51.2177, -48.9787, 9.19816, 0.44", "51.8051, -49.3058, 9.31225, 0.44", "52.7325, -49.8214, 9.54441, 0.44", "53.8209, -50.449, 9.87099, 0.44", "54.7069, -51.0008, 10.2586, 0.44", "55.3974, -51.5021, 10.6507, 0.44", "56.2853, -52.2331, 11.2017, 0.44", "56.9208, -52.7874, 11.5733, 0.44", "57.6268, -53.4101, 11.8934, 0.44", "58.8941, -54.5382, 12.4588, 0.44", "59.8844, -55.4066, 12.9096, 0.44", "60.886, -56.2583, 13.3556, 0.44", "62.0447, -57.1958, 13.8292, 0.44", "63.1829, -58.0577, 14.2239, 0.44", "65.3012, -59.6302, 14.896, 0.44", "65.8629, -60.0453, 15.055, 0.44", "66.6459, -60.6147, 15.3126, 0.44", "67.3018, -61.0861, 15.5509, 0.44", "68.2602, -61.7649, 15.9374, 0.44", "69.2111, -62.381, 16.2961, 0.44", "70.0845, -62.8677, 16.4965, 0.44", "70.7865, -63.1954, 16.6537, 0.44", "71.4895, -63.4518, 16.8005, 0.44", "72.6244, -63.8329, 17.0072, 0.44", "73.9299, -64.264, 17.2086, 0.44", "74.8104, -64.6054, 17.3138, 0.44", "75.4484, -64.9559, 17.3676, 0.44", "75.9393, -65.3032, 17.3995, 0.44", "77.1628, -66.3223, 17.4425, 0.44", "77.6349, -66.7757, 17.4425, 0.44", "78.2571, -67.4594, 17.4425, 0.44", "78.9868, -68.3161, 17.4425, 0.44", "79.6325, -69.1058, 17.445, 0.37", "80.6289, -70.4322, 17.4477, 0.37", "81.2377, -71.2686, 17.4489, 0.37", "81.8373, -72.0951, 17.4313, 0.37", "82.8624, -73.482, 17.3775, 0.37", "83.9693, -74.9403, 17.2879, 0.37", "85.3092, -76.7941, 17.1619, 0.37", "85.8406, -77.5416, 17.1028, 0.37", "86.5645, -78.5103, 17.0119, 0.37", "87.3382, -79.465, 16.8997, 0.37", "88.0934, -80.3003, 16.7606, 0.37" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-40.5344, -154.125, 10.6626, 0.52", "-41.1893, -155.072, 10.6093, 0.52", "-41.7133, -155.899, 10.5766, 0.52", "-42.0379, -156.423, 10.5599, 0.52", "-42.2382, -156.734, 10.5515, 0.52", "-42.5507, -157.212, 10.5405, 0.52", "-43.001, -157.947, 10.5598, 0.52", "-43.4965, -158.814, 10.6292, 0.52", "-43.6756, -159.134, 10.6619, 0.52", "-43.9738, -159.663, 10.724, 0.52", "-44.269, -160.203, 10.79, 0.52", "-44.9135, -161.465, 10.9452, 0.52", "-45.2559, -162.252, 11.0379, 0.52", "-45.5939, -163.144, 11.1321, 0.52", "-45.8476, -163.891, 11.1708, 0.52", "-46.1478, -164.843, 11.1727, 0.52", "-46.3871, -165.597, 11.1336, 0.52", "-46.658, -166.389, 11.0399, 0.52", "-46.9666, -167.251, 10.9218, 0.52", "-47.3098, -168.118, 10.8317, 0.52", "-47.5828, -168.673, 10.812, 0.52", "-47.8465, -169.116, 10.8278, 0.52", "-48.3299, -169.847, 10.8939, 0.52", "-48.9074, -170.666, 10.9872, 0.52", "-49.5878, -171.657, 11.0676, 0.52", "-50.2021, -172.627, 11.1241, 0.52", "-50.8126, -173.734, 11.1275, 0.52", "-51.3581, -174.856, 11.0785, 0.52", "-51.5555, -175.325, 11.037, 0.52", "-52.0266, -176.58, 10.8691, 0.52", "-52.3302, -177.541, 10.7237, 0.52", "-52.7014, -178.841, 10.545, 0.52", "-52.9157, -179.556, 10.4765, 0.52", "-53.216, -180.449, 10.3937, 0.52", "-53.424, -180.967, 10.3299, 0.52", "-54.0861, -182.378, 10.1158, 0.52", "-54.4518, -183.085, 9.95451, 0.52", "-54.8726, -183.89, 9.71618, 0.52", "-55.3492, -184.904, 9.32765, 0.52", "-55.8589, -186.089, 8.78806, 0.52", "-56.1787, -186.945, 8.3699, 0.52", "-56.4166, -187.688, 8.00007, 0.52", "-56.5351, -188.152, 7.80285, 0.52", "-56.7836, -189.241, 7.45001, 0.52", "-56.8859, -189.732, 7.33671, 0.52", "-57.0848, -190.652, 7.17953, 0.52", "-57.3718, -191.737, 6.98637, 0.52", "-57.5832, -192.378, 6.8809, 0.52", "-57.8148, -192.953, 6.81529, 0.52" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-40.5344, -154.125, 10.6626, 0.52", "-40.0465, -155.077, 10.6848, 0.52", "-39.6276, -155.894, 10.7038, 0.52", "-39.2343, -156.662, 10.7217, 0.52" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "12.1996, -137.663, 7.48442, 0.44", "12.9044, -139.558, 7.27271, 0.44", "13.1639, -140.456, 7.25332, 0.44", "13.3816, -141.356, 7.27825, 0.44", "13.5924, -142.33, 7.33171, 0.44", "13.8363, -143.752, 7.42843, 0.44", "13.9585, -144.749, 7.50152, 0.44", "14.0223, -146.147, 7.644, 0.44", "14.0275, -146.644, 7.70559, 0.44", "13.9987, -147.697, 7.82565, 0.44", "13.973, -148.938, 7.93644, 0.44", "13.9967, -149.924, 8.02009, 0.44", "14.0511, -151.021, 8.09644, 0.44", "14.0995, -152.098, 8.149, 0.44", "14.1346, -153.028, 8.19508, 0.44", "14.2081, -155.509, 8.32466, 0.44", "14.2496, -157.046, 8.36941, 0.44", "14.2574, -158.992, 8.37028, 0.44", "14.2008, -160.912, 8.3224, 0.44", "14.1446, -161.922, 8.27384, 0.44", "14.0768, -162.776, 8.21306, 0.44", "13.8994, -164.115, 8.08124, 0.44", "13.6001, -165.829, 7.87015, 0.44", "13.3429, -167.161, 7.69876, 0.44", "13.108, -168.186, 7.57154, 0.44", "12.8011, -169.281, 7.45455, 0.44", "12.4819, -170.235, 7.38311, 0.44", "12.2017, -170.887, 7.37235, 0.44", "11.9612, -171.307, 7.34502, 0.44", "11.5438, -171.896, 7.29157, 0.44", "11.265, -172.227, 7.24977, 0.44", "10.8318, -172.667, 7.16996, 0.44", "10.3327, -173.167, 7.04269, 0.44", "9.42606, -174.126, 6.72559, 0.44" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "12.1996, -137.663, 7.48442, 0.44", "11.4711, -137.443, 8.21141, 0.44", "11.0181, -137.306, 8.66345, 0.44", "10.1986, -137.058, 9.48129, 0.44", "9.11136, -136.73, 10.5663, 0.44" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-24.4852, -300.232, -32.7782, 0.44", "-25.1303, -298.812, -32.552, 0.44", "-25.4002, -298.143, -32.4037, 0.44", "-25.7243, -297.289, -32.2129, 0.44", "-25.9078, -296.747, -32.0534, 0.44", "-26.086, -296.153, -31.8629, 0.44", "-26.589, -294.282, -31.1332, 0.44", "-26.897, -292.91, -30.5113, 0.44", "-27.1489, -291.732, -29.9568, 0.44", "-27.6395, -289.547, -28.9244, 0.44", "-27.8838, -288.489, -28.4384, 0.44", "-28.3519, -286.377, -27.5415, 0.44", "-28.5305, -285.518, -27.2212, 0.44", "-28.6853, -284.687, -26.9459, 0.44", "-28.8657, -283.525, -26.6145, 0.44", "-28.9709, -282.761, -26.4596, 0.44", "-29.1357, -281.53, -26.2256, 0.44", "-29.24, -280.621, -26.0751, 0.44", "-29.3688, -279.143, -25.8003, 0.44", "-29.5173, -277.083, -25.4137, 0.44", "-29.6375, -275.561, -25.1354, 0.44", "-29.7238, -274.475, -24.9285, 0.44", "-29.8109, -273.569, -24.7495, 0.44", "-29.9589, -272.251, -24.4917, 0.44", "-30.2679, -270.01, -24.0979, 0.44", "-30.4674, -268.73, -23.9706, 0.44" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-24.4852, -300.232, -32.7782, 0.52", "-25.3029, -301.976, -32.7782, 0.52", "-26.0172, -303.498, -32.7782, 0.52", "-26.2548, -304.005, -32.7782, 0.52" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "21.64, 199.611, -69.9717, 0.52", "23.3109, 201.949, -67.1591, 0.52", "24.4799, 203.401, -65.0214, 0.52", "25.2305, 204.226, -63.5765, 0.52", "25.8184, 204.72, -62.4825, 0.52", "28.5222, 206.169, -57.6181, 0.52", "28.7529, 206.158, -57.1709, 0.52", "29.1769, 205.579, -56.0824, 0.52", "29.3703, 205.205, -55.4895, 0.52", "29.747, 204.275, -54.2522, 0.52", "30.0327, 203.483, -53.4067, 0.52", "30.6834, 201.742, -51.9076, 0.52", "31.3062, 200.248, -50.8395, 0.52", "32.2202, 198.352, -49.7845, 0.52", "33.2554, 196.483, -49.0827, 0.52", "34.8846, 194.034, -48.5539, 0.52", "36.2314, 192.402, -48.743, 0.52", "40.9304, 187.675, -50.8832, 0.52", "42.0319, 186.739, -51.5939, 0.52", "42.9806, 186.029, -52.3436, 0.52", "44.6216, 184.972, -53.8881, 0.52", "47.0563, 183.725, -56.508, 0.52", "47.3295, 183.613, -56.8015, 0.52", "47.865, 183.463, -57.0041, 0.52" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "21.64, 199.611, -69.9717, 0.52", "21.6773, 202.204, -71.9539, 0.52", "21.7827, 204.088, -73.4094, 0.52", "21.9047, 205.132, -74.2244, 0.52", "22.205, 206.555, -75.413, 0.52", "22.8, 208.506, -77.1577, 0.52", "23.3129, 209.809, -78.419, 0.52", "24.6001, 211.997, -80.6547, 0.52", "25.4626, 212.989, -81.8902, 0.52", "26.7923, 214.001, -83.6404, 0.52", "27.8266, 214.474, -84.9431, 0.52", "29.0207, 214.82, -86.3654, 0.52", "29.978, 214.972, -87.4793, 0.52", "31.9534, 215.037, -89.6472, 0.52", "33.4527, 214.97, -91.3753, 0.52", "34.6667, 214.848, -92.8802, 0.52" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "24.6374, 277.248, -15.9113, 0.44", "24.585, 278.626, -15.3241, 0.44", "24.5322, 280.217, -14.6938, 0.44", "24.451, 281.46, -14.2073, 0.44", "24.3601, 282.495, -13.7672, 0.44", "24.2667, 283.559, -13.3148, 0.44", "24.1915, 284.415, -12.9508, 0.44", "24.0666, 285.489, -12.4826, 0.44", "23.8098, 287.116, -11.8627, 0.44", "23.6312, 288.25, -11.4328, 0.44" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "24.6374, 277.248, -15.9113, 0.44", "23.4642, 278.136, -15.9113, 0.44", "22.5985, 278.792, -15.9113, 0.44" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-121.353, 121.051, -12.8245, 0.52", "-122.146, 122.258, -13.5606, 0.52", "-122.657, 123.04, -13.9832, 0.52", "-123.597, 124.402, -14.6485, 0.52", "-124.619, 125.83, -15.2823, 0.52", "-125.085, 126.477, -15.5382, 0.52", "-125.636, 127.23, -15.8115, 0.52", "-126.195, 127.905, -16.0796, 0.52", "-126.798, 128.593, -16.347, 0.52", "-127.253, 129.11, -16.5075, 0.52", "-127.873, 129.838, -16.7108, 0.52", "-128.166, 130.206, -16.837, 0.52", "-129.367, 131.814, -17.4213, 0.52", "-129.823, 132.461, -17.6535, 0.52", "-130.6, 133.61, -18.044, 0.52", "-131.491, 134.966, -18.4627, 0.52", "-132.664, 136.745, -18.9491, 0.52", "-133.305, 137.706, -19.1623, 0.52", "-133.881, 138.561, -19.2908, 0.52", "-134.499, 139.42, -19.4094, 0.52", "-135.198, 140.297, -19.51, 0.52", "-135.753, 140.935, -19.553, 0.52", "-136.56, 141.791, -19.5905, 0.52", "-137.126, 142.368, -19.684, 0.52", "-137.81, 143.045, -19.8592, 0.52", "-138.585, 143.798, -20.1073, 0.52", "-139.583, 144.754, -20.4662, 0.52", "-140.576, 145.742, -20.8496, 0.52", "-141.706, 146.91, -21.3028, 0.52", "-142.5, 147.75, -21.6028, 0.52", "-143.139, 148.456, -21.8223, 0.52", "-143.763, 149.169, -22.031, 0.52", "-144.454, 149.982, -22.2318, 0.52", "-144.999, 150.692, -22.3554, 0.52", "-145.948, 152.01, -22.5276, 0.52", "-146.494, 152.81, -22.6719, 0.52", "-147.73, 154.675, -23.0708, 0.52", "-148.494, 155.822, -23.3427, 0.52", "-149.372, 157.075, -23.6951, 0.52", "-149.847, 157.712, -23.8927, 0.52", "-150.824, 158.955, -24.361, 0.52", "-151.4, 159.621, -24.6392, 0.52", "-152.201, 160.454, -25.0032, 0.52", "-153.25, 161.441, -25.5104, 0.52", "-154.143, 162.213, -25.9412, 0.52", "-155.291, 163.176, -26.5263, 0.52", "-156.183, 163.882, -27.0252, 0.52", "-157.011, 164.506, -27.5419, 0.52", "-157.9, 165.123, -28.1146, 0.52", "-158.41, 165.432, -28.4465, 0.52", "-159.721, 166.11, -29.2945, 0.52", "-161.174, 166.725, -30.223, 0.52", "-161.831, 166.947, -30.6441, 0.52", "-162.773, 167.205, -31.2926, 0.52", "-164.079, 167.568, -32.2179, 0.52", "-164.623, 167.743, -32.5893, 0.52", "-166.088, 168.263, -33.5147, 0.52", "-166.933, 168.594, -34.02, 0.52", "-169.344, 169.611, -35.3876, 0.52", "-172.004, 170.787, -36.7338, 0.52", "-174.232, 171.789, -37.6175, 0.52", "-175.766, 172.494, -38.1867, 0.52", "-177.475, 173.302, -38.7294, 0.52", "-179.095, 174.077, -39.1574, 0.52", "-181.365, 175.109, -39.4473, 0.52", "-183.58, 176.0, -39.4944, 0.52" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-121.353, 121.051, -12.8245, 0.52", "-122.097, 120.651, -13.4521, 0.52", "-122.517, 120.426, -13.8058, 0.52", "-123.527, 119.883, -14.6581, 0.52" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "88.0934, -80.3003, 16.7606, 0.37", "88.9283, -80.8234, 16.7606, 0.37", "89.6562, -81.4035, 16.6868, 0.37", "90.0752, -81.7906, 16.6299, 0.37", "90.541, -82.2561, 16.5615, 0.37", "91.2971, -83.0848, 16.3992, 0.37", "91.8367, -83.6962, 16.2697, 0.37", "93.0044, -85.0808, 15.8743, 0.37", "93.7181, -85.9179, 15.5943, 0.37", "94.1067, -86.3732, 15.4169, 0.37", "95.1162, -87.5907, 14.9138, 0.37", "95.8017, -88.4236, 14.5397, 0.37", "96.7072, -89.4753, 14.0231, 0.37", "97.5959, -90.4087, 13.5143, 0.37", "98.3295, -91.1184, 13.0654, 0.37" ],
    "parent" : "dend_81",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "88.0934, -80.3003, 16.7606, 0.37", "87.7266, -80.8688, 16.7606, 0.37", "87.3203, -81.4986, 16.7606, 0.37", "86.9841, -82.0196, 16.7606, 0.37", "86.5825, -82.6421, 16.7606, 0.37" ],
    "parent" : "dend_81",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-30.4674, -268.73, -23.9706, 0.44", "-31.8343, -268.32, -24.3008, 0.44", "-32.6678, -268.07, -24.5022, 0.44", "-33.5635, -267.802, -24.7186, 0.44" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-30.4674, -268.73, -23.9706, 0.44", "-30.7121, -267.234, -23.4761, 0.44", "-30.8706, -266.296, -23.1042, 0.44", "-31.0527, -265.129, -22.6404, 0.44", "-31.2245, -263.86, -22.1652, 0.44", "-31.3506, -262.908, -21.8477, 0.44", "-31.5959, -261.161, -21.2411, 0.44", "-31.8874, -259.224, -20.5844, 0.44", "-32.0495, -258.222, -20.2814, 0.44", "-32.2709, -256.919, -19.9459, 0.44", "-32.611, -254.945, -19.554, 0.44", "-32.9478, -252.923, -19.2484, 0.44", "-33.1635, -251.576, -19.1438, 0.44", "-33.4078, -249.898, -19.1264, 0.44", "-33.5577, -248.91, -19.1439, 0.44", "-33.7116, -247.926, -19.1956, 0.44", "-33.8625, -246.873, -19.299, 0.44", "-33.9992, -245.798, -19.4547, 0.44", "-34.1085, -244.948, -19.5476, 0.44", "-34.3251, -243.707, -19.616, 0.44", "-34.4534, -243.176, -19.6414, 0.44", "-34.6658, -242.458, -19.667, 0.44", "-34.95, -241.571, -19.7079, 0.44", "-35.209, -240.748, -19.712, 0.44", "-35.4997, -239.826, -19.6757, 0.44", "-35.7326, -239.035, -19.5738, 0.44", "-35.9832, -238.209, -19.3518, 0.44", "-36.3788, -237.014, -18.8623, 0.44", "-36.8853, -235.454, -17.9802, 0.44", "-37.1627, -234.559, -17.3284, 0.44", "-37.5405, -233.297, -16.3208, 0.44", "-38.0473, -231.626, -14.8451, 0.44", "-38.4716, -230.295, -13.5247, 0.44", "-38.8981, -229.033, -12.0911, 0.44", "-39.263, -227.985, -10.7831, 0.44" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-26.2548, -304.005, -32.7782, 0.29", "-25.0731, -306.041, -37.2817, 0.29", "-24.6056, -306.913, -39.078, 0.29", "-24.2267, -307.669, -40.5291, 0.29", "-23.922, -308.285, -41.6191, 0.29", "-21.663, -312.969, -49.024, 0.29", "-21.2129, -313.905, -50.3175, 0.29", "-20.9871, -314.401, -50.8923, 0.29", "-20.7713, -314.895, -51.3926, 0.29", "-20.2912, -316.048, -52.3533, 0.29", "-19.7163, -317.504, -53.2243, 0.29", "-18.9987, -319.374, -53.9417, 0.29", "-17.9226, -322.345, -55.4182, 0.29", "-17.2749, -324.132, -56.449, 0.29", "-16.8209, -325.369, -57.269, 0.29", "-16.4804, -326.299, -58.0132, 0.29", "-15.8472, -327.99, -59.6968, 0.29", "-15.1853, -329.785, -61.4978, 0.29", "-14.7375, -330.963, -62.7236, 0.29", "-14.3211, -332.007, -63.9592, 0.29", "-13.6171, -333.594, -66.007, 0.29", "-12.7518, -335.341, -68.3289, 0.29", "-11.5166, -337.583, -71.0133, 0.29" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-26.2548, -304.005, -32.7782, 0.52", "-26.645, -305.206, -32.9391, 0.52", "-27.0605, -306.473, -33.1755, 0.52", "-27.3042, -307.188, -33.3218, 0.52", "-27.7658, -308.541, -33.6696, 0.52", "-28.2406, -309.981, -34.0651, 0.52", "-28.7235, -311.514, -34.4873, 0.52", "-29.0387, -312.64, -34.7944, 0.52", "-29.2237, -313.385, -34.9813, 0.52", "-29.5615, -314.888, -35.3676, 0.52", "-29.8104, -316.055, -35.6491, 0.52", "-30.0208, -316.991, -35.9395, 0.52", "-30.2103, -317.821, -36.2214, 0.52", "-30.4318, -318.738, -36.5562, 0.52", "-30.8875, -320.439, -37.2276, 0.52", "-31.2133, -321.566, -37.6656, 0.52", "-31.7456, -323.353, -38.3848, 0.52", "-32.0503, -324.4, -38.8307, 0.52", "-32.4978, -325.961, -39.496, 0.52", "-32.7764, -326.953, -39.8735, 0.52", "-33.1963, -328.491, -40.3357, 0.52", "-33.4111, -329.303, -40.5333, 0.52", "-33.7632, -330.746, -40.7691, 0.52", "-34.0134, -331.811, -40.9699, 0.52", "-34.3591, -333.24, -41.2452, 0.52", "-34.6582, -334.375, -41.4766, 0.52", "-35.0269, -335.677, -41.8016, 0.52", "-35.3918, -336.953, -42.1392, 0.52", "-35.9251, -338.835, -42.6297, 0.52", "-36.2253, -339.927, -42.9265, 0.52", "-36.8457, -342.322, -43.5802, 0.52", "-37.3447, -344.367, -44.0425, 0.52", "-37.6222, -345.534, -44.2416, 0.52", "-37.9567, -346.865, -44.3696, 0.52", "-38.2175, -347.86, -44.3619, 0.52", "-38.4977, -348.906, -44.292, 0.52", "-38.9626, -350.564, -44.0283, 0.52", "-39.1655, -351.27, -43.8983, 0.52", "-39.4363, -352.233, -43.7981, 0.52", "-39.6584, -353.025, -43.7967, 0.52", "-39.8649, -353.778, -43.8725, 0.52", "-40.0482, -354.483, -44.0032, 0.52", "-40.4203, -356.238, -44.4371, 0.52", "-40.5628, -357.123, -44.6928, 0.52", "-40.6943, -358.125, -45.0051, 0.52", "-40.8129, -358.931, -45.2612, 0.52", "-41.0434, -360.139, -45.6349, 0.52", "-41.2294, -360.942, -45.8551, 0.52", "-41.5576, -362.348, -46.1385, 0.52", "-41.6714, -362.879, -46.2429, 0.52", "-41.8212, -363.675, -46.3827, 0.52", "-41.9503, -364.327, -46.4779, 0.52", "-42.1193, -365.168, -46.5683, 0.52", "-42.3482, -366.41, -46.641, 0.52", "-42.4814, -367.469, -46.6469, 0.52", "-42.5599, -368.612, -46.6513, 0.52", "-42.5967, -369.374, -46.6791, 0.52", "-42.6299, -370.085, -46.7393, 0.52", "-42.6984, -371.227, -46.8789, 0.52", "-42.8762, -373.224, -47.1789, 0.52", "-42.9468, -373.945, -47.2555, 0.52", "-43.1266, -375.663, -47.3523, 0.52", "-43.2551, -376.86, -47.3665, 0.52", "-43.4211, -378.211, -47.3267, 0.52", "-43.5738, -379.219, -47.2535, 0.52", "-43.932, -381.206, -47.0156, 0.52", "-44.2712, -382.869, -46.7703, 0.52", "-44.4844, -383.838, -46.5965, 0.52", "-44.7121, -384.798, -46.4353, 0.52", "-44.9026, -385.614, -46.3435, 0.52", "-45.0706, -386.393, -46.3079, 0.52", "-45.2739, -387.691, -46.3453, 0.52", "-45.3805, -388.974, -46.3772, 0.52", "-45.4318, -389.762, -46.3967, 0.52", "-45.4739, -391.061, -46.4269, 0.52", "-45.463, -392.016, -46.4458, 0.52", "-45.3027, -394.629, -46.48, 0.52", "-45.0068, -396.866, -46.48, 0.52" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "23.6312, 288.25, -11.4328, 0.44", "23.1917, 289.57, -10.9499, 0.44", "22.8317, 290.699, -10.5529, 0.44", "22.2981, 292.27, -10.0217, 0.44", "21.8895, 293.348, -9.61669, 0.44", "21.5481, 294.128, -9.26648, 0.44", "21.0304, 295.1, -8.78671, 0.44", "20.688, 295.555, -8.52763, 0.44", "20.0758, 296.149, -8.15412, 0.44", "19.1254, 296.815, -7.68919, 0.44", "18.0813, 297.399, -7.23039, 0.44", "16.8714, 297.977, -6.70651, 0.44", "15.803, 298.4, -6.26874, 0.44", "14.831, 298.738, -5.90646, 0.44", "13.8466, 299.05, -5.58292, 0.44", "12.3793, 299.505, -5.25282, 0.44" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "23.6312, 288.25, -11.4328, 0.44", "22.7488, 289.415, -11.4328, 0.44", "21.9886, 290.5, -11.4328, 0.44", "21.3206, 291.559, -11.1888, 0.44", "20.9372, 292.189, -10.931, 0.44", "20.6456, 292.683, -10.6949, 0.44", "20.1978, 293.446, -10.3138, 0.44", "19.8938, 293.996, -9.95954, 0.44", "18.7697, 296.236, -8.20474, 0.44", "18.4465, 296.94, -7.54771, 0.44", "17.9672, 298.052, -6.46877, 0.44", "17.7962, 298.486, -6.05595, 0.44", "17.2849, 299.796, -4.85994, 0.44", "16.7529, 301.147, -3.77572, 0.44", "16.1599, 302.768, -2.76857, 0.44", "15.7855, 303.867, -2.2056, 0.44", "15.4743, 304.813, -1.79066, 0.44", "15.2059, 305.644, -1.51085, 0.44", "14.7347, 307.133, -1.27938, 0.44", "14.3468, 308.465, -1.25588, 0.44", "14.0615, 309.46, -1.31454, 0.44", "13.8438, 310.246, -1.37058, 0.44", "13.4236, 311.796, -1.50505, 0.44", "13.0504, 313.463, -1.68761, 0.44", "12.9432, 314.064, -1.78268, 0.44" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-183.58, 176.0, -39.4944, 0.44", "-184.807, 176.624, -39.4869, 0.44", "-185.996, 177.244, -39.3674, 0.44", "-187.085, 177.895, -39.2004, 0.44", "-187.771, 178.374, -39.0755, 0.44", "-188.977, 179.264, -38.7618, 0.44", "-189.757, 179.839, -38.5334, 0.44", "-190.846, 180.663, -38.1601, 0.44", "-191.845, 181.389, -37.739, 0.44", "-192.882, 182.059, -37.2469, 0.44", "-194.384, 182.86, -36.5688, 0.44", "-195.283, 183.245, -36.2034, 0.44", "-196.535, 183.665, -35.7695, 0.44", "-198.509, 184.159, -35.1948, 0.44", "-201.224, 184.649, -34.4864, 0.44", "-203.441, 184.967, -33.9685, 0.44", "-205.198, 185.213, -33.7046, 0.44", "-206.939, 185.464, -33.6381, 0.44", "-209.048, 185.79, -33.7753, 0.44", "-211.427, 186.222, -34.244, 0.44", "-212.407, 186.438, -34.5334, 0.44", "-215.418, 187.256, -35.6784, 0.44", "-218.46, 188.186, -37.1517, 0.44", "-219.824, 188.62, -37.9162, 0.44", "-221.963, 189.311, -39.2368, 0.44", "-222.801, 189.572, -39.7712, 0.44", "-224.549, 190.044, -40.8199, 0.44", "-226.84, 190.552, -41.9828, 0.44", "-228.209, 190.788, -42.5449, 0.44", "-229.103, 190.88, -42.8632, 0.44", "-229.967, 190.886, -43.0828, 0.44", "-231.189, 190.772, -43.2978, 0.44", "-232.343, 190.541, -43.3777, 0.44", "-233.534, 190.168, -43.3721, 0.44", "-234.642, 189.752, -43.2415, 0.44", "-236.104, 189.148, -42.964, 0.44", "-237.295, 188.639, -42.6886, 0.44", "-238.356, 188.197, -42.3986, 0.44", "-240.424, 187.347, -41.7123, 0.44", "-243.6, 186.118, -40.5436, 0.44", "-244.597, 185.775, -40.155, 0.44", "-246.405, 185.249, -39.434, 0.44", "-247.854, 184.895, -38.8699, 0.44", "-249.79, 184.494, -38.0342, 0.44", "-250.868, 184.318, -37.5717, 0.44", "-251.492, 184.237, -37.3353, 0.44", "-252.377, 184.161, -36.9967, 0.44", "-253.303, 184.113, -36.5519, 0.44", "-256.757, 184.007, -34.751, 0.44", "-258.651, 184.016, -33.609, 0.44", "-259.842, 184.072, -32.7459, 0.44", "-260.768, 184.155, -32.01, 0.44", "-263.875, 184.595, -29.1591, 0.44", "-264.509, 184.732, -28.4501, 0.44", "-265.977, 185.154, -26.5858, 0.44", "-267.193, 185.574, -24.8412, 0.44", "-267.883, 185.868, -23.7402, 0.44", "-269.345, 186.657, -21.2772, 0.44", "-270.999, 187.708, -18.4766, 0.44", "-271.448, 188.015, -17.6791, 0.44", "-271.861, 188.313, -16.9444, 0.44", "-273.029, 189.179, -14.7859, 0.44", "-273.385, 189.483, -14.0408, 0.44" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-183.58, 176.0, -39.4944, 0.52", "-184.242, 177.432, -39.5105, 0.52", "-185.058, 179.361, -39.6813, 0.52", "-186.023, 181.899, -39.9824, 0.52", "-186.381, 182.888, -40.1107, 0.52", "-187.04, 184.792, -40.3582, 0.52", "-187.474, 186.14, -40.5727, 0.52", "-188.168, 188.611, -41.0494, 0.52", "-188.479, 189.887, -41.3813, 0.52", "-188.767, 191.217, -41.7919, 0.52", "-189.134, 192.979, -42.3729, 0.52", "-189.588, 195.248, -43.1415, 0.44", "-189.788, 196.291, -43.4802, 0.44", "-190.206, 198.651, -44.185, 0.44", "-190.395, 199.841, -44.5349, 0.44", "-190.531, 200.998, -44.9161, 0.44", "-190.614, 202.162, -45.2985, 0.44", "-190.617, 202.976, -45.5904, 0.44", "-190.573, 203.608, -45.8515, 0.44", "-190.497, 204.305, -46.2353, 0.44", "-190.283, 206.2, -47.6225, 0.44", "-190.075, 207.877, -48.9581, 0.44", "-189.858, 209.817, -50.6509, 0.44", "-189.809, 210.278, -51.0702, 0.44", "-189.566, 212.899, -53.5308, 0.44", "-189.416, 214.666, -55.2389, 0.44", "-189.305, 216.139, -56.6655, 0.44", "-189.184, 218.53, -59.199, 0.44" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "98.3295, -91.1184, 13.0654, 0.37", "100.006, -92.2066, 11.6695, 0.37", "100.952, -92.7271, 10.9741, 0.37", "101.944, -93.2454, 10.3063, 0.37", "102.775, -93.68, 9.76309, 0.37", "103.4, -93.9882, 9.34958, 0.37", "104.141, -94.3451, 8.87127, 0.37", "104.276, -94.399, 8.80043, 0.37", "104.781, -94.5986, 8.58779, 0.37", "106.275, -95.2246, 8.08756, 0.37", "107.809, -95.9314, 7.69455, 0.37", "108.386, -96.2316, 7.5788, 0.37", "108.759, -96.4323, 7.52844, 0.37", "110.461, -97.2856, 7.41748, 0.37", "111.272, -97.6647, 7.42397, 0.37", "111.921, -97.956, 7.48395, 0.37", "112.928, -98.3815, 7.60079, 0.37", "113.945, -98.7669, 7.68598, 0.37", "114.846, -99.0681, 7.72895, 0.37", "115.473, -99.2704, 7.72895, 0.37", "116.741, -99.6766, 7.72895, 0.37", "118.13, -100.105, 7.57144, 0.37", "118.691, -100.275, 7.44727, 0.37", "119.224, -100.455, 7.27387, 0.37", "120.047, -100.74, 6.93333, 0.37", "120.573, -100.913, 6.68165, 0.37", "122.955, -101.773, 5.57372, 0.37", "123.537, -101.993, 5.35198, 0.37", "124.004, -102.181, 5.22689, 0.37", "124.563, -102.392, 5.14291, 0.37", "125.388, -102.702, 5.0421, 0.37", "127.142, -103.381, 4.85322, 0.37", "128.514, -103.927, 4.81061, 0.37", "129.81, -104.459, 4.75421, 0.37", "131.576, -105.195, 4.64533, 0.37", "133.216, -105.915, 4.4931, 0.37", "134.16, -106.342, 4.34685, 0.37" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "98.3295, -91.1184, 13.0654, 0.37", "97.8678, -89.4185, 11.3993, 0.37", "97.7094, -88.8354, 10.8278, 0.37", "97.595, -88.4143, 10.4151, 0.37" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-39.263, -227.985, -10.7831, 0.44", "-40.8964, -228.363, -10.7831, 0.44", "-41.5389, -228.511, -10.7831, 0.44", "-42.7686, -228.796, -10.7831, 0.44", "-44.0021, -229.081, -10.7831, 0.44", "-44.6723, -229.236, -10.7831, 0.44" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-39.263, -227.985, -10.7831, 0.44", "-38.8374, -226.357, -9.81375, 0.44", "-38.6967, -225.586, -9.40432, 0.44", "-38.3257, -222.782, -8.03483, 0.44", "-38.2108, -221.753, -7.55691, 0.44", "-38.1204, -221.116, -7.16451, 0.44", "-37.9782, -220.322, -6.60917, 0.44", "-37.868, -219.815, -5.97348, 0.44", "-37.7417, -219.368, -5.26678, 0.44", "-37.5913, -218.885, -4.3982, 0.44", "-36.9807, -217.283, -1.07697, 0.44", "-36.8852, -217.08, -0.597804, 0.44", "-35.6809, -214.996, 5.0004, 0.44", "-35.4614, -214.67, 6.00663, 0.44" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-45.0068, -396.866, -46.48, 0.37", "-43.2395, -398.621, -46.3311, 0.37", "-41.6894, -399.968, -46.0588, 0.37", "-40.2451, -401.135, -45.8807, 0.37", "-39.7745, -401.503, -45.8719, 0.37", "-39.1276, -402.03, -45.9019, 0.37", "-38.3042, -402.767, -45.9235, 0.37", "-37.3274, -403.727, -45.8837, 0.37", "-36.2526, -405.045, -45.9246, 0.37", "-35.5754, -406.393, -45.9764, 0.37", "-35.1606, -407.423, -46.0217, 0.37", "-34.6872, -409.088, -46.0838, 0.37", "-34.4914, -410.217, -46.1106, 0.37", "-34.409, -411.21, -46.113, 0.37", "-34.4262, -412.765, -45.8513, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-45.0068, -396.866, -46.48, 0.52", "-45.0073, -398.289, -46.8895, 0.52", "-44.9909, -399.563, -47.2321, 0.52", "-44.9872, -400.997, -47.6736, 0.52", "-44.9982, -402.168, -48.0292, 0.52", "-45.021, -403.831, -48.5046, 0.52", "-45.0469, -405.036, -48.8142, 0.52", "-45.0766, -405.897, -48.9964, 0.52", "-45.1284, -407.8, -49.3792, 0.52", "-45.1485, -409.417, -49.6775, 0.52", "-45.1685, -410.768, -49.883, 0.52", "-45.219, -412.823, -50.0926, 0.52", "-45.2443, -413.746, -50.1667, 0.52", "-45.2629, -414.675, -50.1724, 0.52", "-45.2701, -415.059, -50.1408, 0.52", "-45.3166, -416.202, -50.0032, 0.52", "-45.3979, -417.333, -49.8399, 0.52", "-45.5207, -418.437, -49.6714, 0.52", "-45.7737, -420.123, -49.4314, 0.52", "-45.9629, -421.097, -49.3057, 0.52", "-46.2052, -422.241, -49.1764, 0.52", "-46.582, -424.114, -48.9779, 0.52", "-46.896, -425.698, -48.8321, 0.52", "-47.1894, -427.114, -48.7009, 0.52", "-47.4194, -428.27, -48.609, 0.52", "-47.5872, -429.328, -48.5037, 0.52", "-47.7576, -431.016, -48.3116, 0.52", "-47.8245, -431.876, -48.1975, 0.52", "-47.8854, -433.438, -47.9617, 0.52", "-47.884, -434.492, -47.7858, 0.52", "-47.831, -435.789, -47.556, 0.52", "-47.7426, -437.584, -47.2357, 0.52" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "134.16, -106.342, 4.34685, 0.37", "134.253, -108.29, 3.35962, 0.37", "134.284, -108.93, 3.03549, 0.37", "134.317, -109.624, 2.68364, 0.37", "134.342, -110.149, 2.41776, 0.37", "134.373, -110.789, 2.09364, 0.37", "134.464, -112.71, 1.12024, 0.37" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "134.16, -106.342, 4.34685, 0.37", "136.339, -106.632, 4.79055, 0.37", "137.982, -106.851, 5.12517, 0.37", "139.451, -107.047, 5.42417, 0.37", "140.533, -107.192, 5.64459, 0.37", "140.962, -107.249, 5.73197, 0.37" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-35.4614, -214.67, 6.00663, 0.44", "-34.6314, -215.216, 6.32663, 0.44" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-35.4614, -214.67, 6.00663, 0.44", "-35.3327, -213.363, 6.00663, 0.44", "-35.2614, -212.533, 6.00663, 0.44", "-35.1943, -211.759, 6.00663, 0.44", "-35.0976, -210.976, 5.95887, 0.44", "-34.8978, -209.684, 5.84145, 0.44", "-34.7937, -209.13, 5.77292, 0.44", "-34.5632, -208.245, 5.58504, 0.44", "-34.4365, -207.843, 5.46941, 0.44", "-33.9589, -206.44, 4.97428, 0.44", "-33.7011, -205.674, 4.59105, 0.44", "-33.5597, -205.179, 4.29848, 0.44", "-33.349, -204.317, 3.68782, 0.44", "-33.264, -203.851, 3.26275, 0.44", "-33.2325, -203.44, 2.85826, 0.44", "-33.248, -202.099, 1.53669, 0.44", "-33.2959, -201.202, 0.685644, 0.44", "-33.4419, -199.864, -0.459339, 0.44", "-33.7069, -198.051, -1.95253, 0.44", "-33.8269, -197.196, -2.63592, 0.44", "-33.9163, -196.463, -3.2155, 0.44", "-33.9711, -195.836, -3.70741, 0.44", "-34.0424, -194.669, -4.62393, 0.44", "-34.0976, -193.095, -5.71998, 0.44", "-34.0912, -192.441, -6.14024, 0.44", "-34.0288, -191.598, -6.80057, 0.44", "-33.9385, -190.811, -7.55485, 0.44" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-47.7426, -437.584, -47.2357, 0.52", "-47.8055, -438.925, -47.4901, 0.52", "-47.8678, -439.851, -47.6302, 0.52", "-47.958, -441.139, -47.8397, 0.52", "-48.0387, -442.686, -48.0789, 0.52", "-48.0682, -443.529, -48.1981, 0.52", "-48.0819, -444.819, -48.3649, 0.52", "-48.079, -446.307, -48.5306, 0.52", "-48.0188, -448.363, -48.7143, 0.52", "-47.9229, -450.048, -48.8187, 0.52", "-47.7949, -451.706, -48.8859, 0.52", "-47.6937, -453.045, -48.91, 0.52", "-47.5588, -454.89, -48.8992, 0.52", "-47.4874, -456.179, -48.8549, 0.52", "-47.4563, -457.627, -48.7567, 0.52", "-47.4763, -458.615, -48.6854, 0.52", "-47.5823, -460.13, -48.5747, 0.52", "-47.7087, -461.05, -48.5103, 0.52", "-47.95, -462.228, -48.4352, 0.52", "-48.4087, -463.874, -48.281, 0.52", "-48.8221, -465.161, -48.1353, 0.52", "-49.1223, -466.004, -48.0354, 0.52", "-49.4716, -466.843, -47.9087, 0.52", "-49.7538, -467.441, -47.8056, 0.52", "-50.5151, -468.949, -47.5619, 0.52", "-51.0296, -469.971, -47.4175, 0.52", "-51.591, -471.157, -47.2912, 0.52", "-51.9452, -472.009, -47.2382, 0.52", "-52.2853, -472.951, -47.2242, 0.52", "-52.592, -473.903, -47.2573, 0.52", "-52.8546, -474.802, -47.3413, 0.52", "-53.0843, -475.635, -47.4146, 0.52", "-53.3356, -476.668, -47.4911, 0.52", "-53.5761, -477.727, -47.549, 0.52", "-53.7852, -478.624, -47.5762, 0.52", "-54.0037, -479.458, -47.5762, 0.52", "-54.1756, -480.05, -47.5762, 0.52", "-54.5126, -481.137, -47.5762, 0.52", "-54.7718, -481.878, -47.5762, 0.52", "-55.0155, -482.559, -47.5762, 0.52", "-55.4408, -483.843, -47.5762, 0.52", "-55.7598, -484.92, -47.5762, 0.52", "-56.0615, -486.033, -47.5762, 0.52", "-56.4817, -487.516, -47.5762, 0.52", "-57.0508, -489.355, -47.551, 0.52", "-57.4842, -490.71, -47.5678, 0.52", "-57.926, -492.071, -47.6381, 0.52", "-58.5586, -493.959, -47.8291, 0.52", "-59.1232, -495.56, -48.0554, 0.52", "-60.1074, -498.046, -48.5001, 0.52", "-60.9453, -499.89, -48.8954, 0.52", "-61.6511, -501.293, -49.234, 0.52", "-62.235, -502.393, -49.5249, 0.52", "-62.6889, -503.223, -49.7551, 0.52", "-63.1491, -504.078, -49.9783, 0.52", "-63.5004, -504.729, -50.1149, 0.52", "-64.0485, -505.681, -50.2053, 0.52", "-64.5433, -506.545, -50.2321, 0.52", "-65.1858, -507.697, -50.2321, 0.52", "-65.8111, -508.867, -50.2321, 0.52", "-66.4171, -510.123, -50.2321, 0.52", "-67.119, -511.667, -50.2321, 0.52", "-67.6094, -512.79, -50.2321, 0.52", "-68.1435, -514.09, -50.2321, 0.52", "-68.5236, -515.078, -50.2671, 0.52", "-69.1278, -516.695, -50.3363, 0.52", "-69.3151, -517.231, -50.3646, 0.52", "-69.6792, -518.434, -50.4444, 0.52", "-69.9678, -519.388, -50.5261, 0.52", "-70.4019, -520.858, -50.6971, 0.52" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-47.7426, -437.584, -47.2357, 0.52", "-45.9861, -438.077, -47.2357, 0.52", "-45.3588, -438.253, -47.2357, 0.52" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-34.6314, -215.216, 6.32663, 0.44", "-34.065, -215.704, 5.69578, 0.44", "-33.7195, -216.002, 5.31087, 0.44", "-32.1902, -217.321, 3.60738, 0.44" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-34.6314, -215.216, 6.32663, 0.44", "-35.0101, -216.836, 6.81859, 0.44", "-35.1192, -217.308, 6.9401, 0.44", "-35.1951, -217.704, 7.06776, 0.44", "-35.274, -218.33, 7.27235, 0.44", "-35.3686, -219.151, 7.5485, 0.44", "-35.443, -219.875, 7.82562, 0.44", "-35.5508, -220.859, 8.25393, 0.44", "-35.7413, -222.022, 8.8385, 0.44", "-35.9528, -222.88, 9.38179, 0.44", "-36.1742, -223.471, 9.82891, 0.44", "-36.7514, -224.552, 10.8659, 0.44", "-37.4739, -225.645, 12.0964, 0.44", "-37.8129, -226.071, 12.6433, 0.44", "-38.6652, -226.939, 13.8579, 0.44", "-39.2418, -227.506, 14.7163, 0.44", "-39.9431, -228.289, 15.8649, 0.44", "-40.1245, -228.481, 16.1598, 0.44", "-40.3013, -228.725, 16.5141, 0.44", "-40.4732, -229.123, 17.0213, 0.44", "-40.5865, -230.462, 18.1634, 0.44", "-40.5438, -231.034, 18.5906, 0.44" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-33.9385, -190.811, -7.55485, 0.44", "-32.6874, -191.3, -7.93121, 0.44", "-31.6919, -191.69, -8.23069, 0.44", "-30.3033, -192.233, -8.64842, 0.44", "-29.7459, -192.451, -8.8161, 0.44" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-33.9385, -190.811, -7.55485, 0.44", "-33.9373, -189.661, -7.49371, 0.44", "-33.9362, -188.497, -7.43181, 0.44", "-33.9357, -187.93, -7.40168, 0.44", "-33.9348, -187.031, -7.35389, 0.44", "-33.9338, -185.959, -7.29689, 0.44", "-33.9329, -185.03, -7.24747, 0.44" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-70.4019, -520.858, -50.6971, 0.37", "-71.4138, -521.724, -50.9722, 0.37", "-72.1765, -522.424, -51.3018, 0.37", "-72.9575, -523.201, -51.675, 0.37", "-73.5569, -523.789, -51.9553, 0.37", "-74.0338, -524.208, -52.1532, 0.37", "-74.6681, -524.711, -52.3924, 0.37", "-75.7665, -525.442, -52.9133, 0.37", "-76.7122, -525.89, -53.3558, 0.37", "-77.3295, -526.065, -53.6289, 0.37", "-78.541, -526.241, -54.1481, 0.37", "-79.0538, -526.263, -54.3292, 0.37", "-81.2767, -526.191, -54.9408, 0.37", "-82.1296, -526.111, -55.1113, 0.37", "-84.0941, -525.817, -55.4269, 0.37", "-85.2536, -525.596, -55.5099, 0.37", "-86.9491, -525.16, -55.484, 0.37", "-88.3368, -524.719, -55.3493, 0.37", "-89.3543, -524.319, -55.1624, 0.37", "-90.563, -523.773, -54.9399, 0.37", "-92.3887, -522.885, -54.6175, 0.37", "-94.0273, -522.027, -54.3879, 0.37", "-94.9344, -521.519, -54.3576, 0.37", "-96.4459, -520.653, -54.3373, 0.37", "-99.4418, -518.949, -54.3923, 0.37", "-101.257, -517.939, -54.5055, 0.37", "-103.016, -517.001, -54.7403, 0.37", "-105.673, -515.681, -55.1494, 0.37" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-70.4019, -520.858, -50.6971, 0.52", "-70.7579, -522.593, -50.5452, 0.52", "-70.8536, -523.291, -50.5014, 0.52", "-70.9051, -524.151, -50.4604, 0.52", "-70.8502, -525.005, -50.4279, 0.52", "-70.6937, -526.082, -50.3933, 0.52", "-70.369, -527.824, -50.4617, 0.52", "-70.0234, -529.189, -50.623, 0.52", "-69.652, -530.53, -50.8354, 0.52", "-69.1362, -532.391, -51.188, 0.52", "-68.937, -533.167, -51.3539, 0.52", "-68.5184, -535.275, -51.8529, 0.52", "-68.4435, -536.031, -52.0449, 0.52", "-68.5203, -537.091, -52.33, 0.52", "-68.814, -538.218, -52.6056, 0.52", "-69.1404, -539.055, -52.7732, 0.52", "-69.5091, -539.864, -52.8888, 0.52", "-69.8898, -540.639, -52.9524, 0.52", "-70.5981, -542.08, -53.0668, 0.52", "-71.4782, -543.99, -53.2203, 0.52", "-72.0379, -545.383, -53.3433, 0.52", "-72.7366, -547.2, -53.5021, 0.52", "-73.1609, -548.336, -53.597, 0.52", "-73.5559, -549.412, -53.6754, 0.52", "-73.9398, -550.565, -53.7265, 0.52", "-74.4096, -552.363, -53.8358, 0.52" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-40.5438, -231.034, 18.5906, 0.44", "-40.1068, -232.851, 20.311, 0.44", "-39.9549, -233.483, 20.909, 0.44", "-39.7957, -234.145, 21.5356, 0.44", "-39.6793, -234.629, 21.994, 0.44" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-40.5438, -231.034, 18.5906, 0.44", "-39.6219, -231.357, 19.718, 0.44", "-38.6184, -231.708, 20.9452, 0.44", "-38.0686, -231.9, 21.6176, 0.44", "-37.6595, -232.043, 22.1178, 0.44" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-33.9329, -185.03, -7.24747, 0.44", "-35.4319, -186.28, -6.78843, 0.44", "-36.208, -186.927, -6.55076, 0.44", "-38.3101, -188.68, -5.90703, 0.44" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-33.9329, -185.03, -7.24747, 0.44", "-33.5652, -184.071, -8.04035, 0.44", "-32.7044, -181.473, -9.95327, 0.44", "-32.4988, -180.764, -10.4014, 0.44", "-32.3142, -180.026, -10.8194, 0.44", "-32.1642, -179.201, -11.2275, 0.44", "-32.0592, -178.243, -11.6749, 0.44", "-31.9195, -175.751, -12.6692, 0.44", "-31.8974, -174.38, -13.0836, 0.44", "-31.8806, -173.648, -13.321, 0.44", "-31.8282, -172.032, -13.918, 0.44", "-31.7255, -169.541, -14.8847, 0.44", "-31.6716, -168.492, -15.2899, 0.44", "-31.5736, -167.073, -15.8011, 0.44", "-31.4096, -165.486, -16.4346, 0.44", "-31.1472, -163.756, -17.1516, 0.44", "-30.887, -162.601, -17.636, 0.44", "-30.6493, -161.76, -17.9639, 0.44", "-30.379, -160.915, -18.3273, 0.44", "-29.7439, -159.151, -19.1122, 0.44", "-29.4505, -158.389, -19.4242, 0.44", "-29.0527, -157.552, -19.7574, 0.44", "-28.6854, -156.859, -20.0512, 0.44", "-27.8396, -155.313, -20.6902, 0.44", "-27.6193, -154.889, -20.8494, 0.44", "-27.3571, -154.318, -21.013, 0.44", "-27.112, -153.577, -21.1873, 0.44", "-26.954, -152.798, -21.3127, 0.44", "-26.8249, -151.966, -21.4238, 0.44", "-26.7345, -151.384, -21.5475, 0.44", "-26.6094, -150.696, -21.7508, 0.44", "-26.4229, -149.757, -22.0685, 0.44", "-26.2198, -148.765, -22.4152, 0.44", "-25.8726, -147.42, -22.8679, 0.44", "-25.0706, -144.878, -23.7752, 0.44", "-24.7612, -144.023, -24.0871, 0.44", "-24.3832, -143.08, -24.4614, 0.44", "-23.8479, -141.843, -24.9612, 0.44", "-23.0369, -140.081, -25.6347, 0.44", "-22.2109, -138.324, -26.2513, 0.44", "-21.6719, -137.233, -26.6029, 0.44", "-20.8755, -135.69, -27.1551, 0.44", "-20.3069, -134.649, -27.5742, 0.44", "-19.5892, -133.407, -28.1445, 0.44" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-74.4096, -552.363, -53.8358, 0.52", "-74.6196, -554.13, -53.7083, 0.52", "-74.7471, -555.203, -53.6309, 0.52", "-74.8746, -556.276, -53.5535, 0.52", "-75.009, -557.407, -53.4719, 0.52", "-75.2022, -559.033, -53.3546, 0.52" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-74.4096, -552.363, -53.8358, 0.52", "-73.6926, -554.184, -54.0138, 0.52", "-73.3052, -555.166, -54.0418, 0.52", "-72.8731, -556.233, -53.958, 0.52", "-72.3764, -557.392, -53.807, 0.52", "-71.8758, -558.559, -53.6549, 0.52", "-71.5166, -559.396, -53.5458, 0.52", "-71.0815, -560.354, -53.3256, 0.52", "-70.336, -561.942, -52.8803, 0.52", "-69.8388, -562.939, -52.5287, 0.52" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-39.6793, -234.629, 21.994, 0.44", "-39.7663, -235.497, 22.6105, 0.44", "-39.9181, -236.555, 23.2594, 0.44", "-39.9977, -237.131, 23.5751, 0.44", "-40.1041, -238.179, 24.097, 0.44", "-40.1932, -239.536, 24.8031, 0.44", "-40.2135, -240.487, 25.2945, 0.44", "-40.2114, -241.203, 25.6176, 0.44", "-40.1891, -241.733, 25.8238, 0.44", "-40.1419, -242.361, 26.0558, 0.44", "-40.0247, -243.854, 26.6177, 0.44", "-39.9945, -244.559, 26.8705, 0.44", "-40.0447, -245.249, 27.1339, 0.44", "-40.1977, -245.982, 27.407, 0.44", "-40.408, -246.649, 27.6246, 0.44", "-40.9193, -248.024, 28.0723, 0.44", "-41.1764, -248.623, 28.2537, 0.44", "-41.712, -249.733, 28.606, 0.44", "-42.0189, -250.355, 28.8041, 0.44", "-42.4343, -251.298, 29.088, 0.44", "-43.1306, -253.275, 29.6012, 0.44", "-43.2907, -253.851, 29.7157, 0.44", "-43.5302, -254.881, 29.898, 0.44", "-43.6464, -255.442, 29.977, 0.44", "-43.8401, -256.427, 30.1341, 0.44", "-44.0225, -257.432, 30.2957, 0.44", "-44.2139, -258.541, 30.4539, 0.44", "-44.3492, -259.332, 30.5826, 0.44", "-44.7416, -261.19, 30.915, 0.44", "-45.1715, -262.696, 31.1992, 0.44", "-45.3873, -263.296, 31.3167, 0.44", "-45.7173, -264.046, 31.4315, 0.44", "-46.0651, -264.698, 31.4942, 0.44", "-46.7168, -265.685, 31.5157, 0.44", "-47.1823, -266.287, 31.4756, 0.44", "-47.5392, -266.747, 31.4286, 0.44", "-48.478, -268.022, 31.3323, 0.44", "-49.096, -268.958, 31.2835, 0.44", "-49.6411, -269.931, 31.2551, 0.44", "-50.1566, -271.077, 31.2505, 0.44", "-50.6401, -272.471, 31.2785, 0.44", "-50.9062, -273.447, 31.3219, 0.44", "-51.0607, -274.291, 31.3824, 0.44", "-51.2263, -275.386, 31.4821, 0.44", "-51.4071, -276.321, 31.5798, 0.44", "-51.7001, -277.307, 31.6924, 0.44", "-52.0452, -278.304, 31.7983, 0.44", "-52.3778, -279.086, 31.8983, 0.44", "-53.0502, -280.29, 32.0865, 0.44", "-53.9635, -281.486, 32.3227, 0.44", "-54.5355, -282.046, 32.4617, 0.44" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-39.6793, -234.629, 21.994, 0.44", "-40.7444, -235.185, 21.8369, 0.44", "-41.5015, -235.579, 21.7252, 0.44" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-19.5892, -133.407, -28.1445, 0.44", "-21.3271, -132.176, -29.5363, 0.44", "-22.1155, -131.617, -30.1676, 0.44", "-22.7171, -131.191, -30.6494, 0.44", "-23.8241, -130.407, -31.536, 0.44" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-19.5892, -133.407, -28.1445, 0.44", "-19.0242, -131.406, -28.3663, 0.44", "-18.4797, -129.478, -28.58, 0.44", "-17.8296, -127.176, -28.8352, 0.44", "-17.516, -126.066, -28.9582, 0.44", "-17.2563, -125.146, -29.0602, 0.44" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_29", "dend_0", "dend_75", "dend_30", "dend_16", "dend_1", "dend_89", "dend_76", "dend_72", "dend_31", "dend_28", "dend_17", "dend_13", "dend_2", "dend_91", "dend_90", "dend_78", "dend_77", "dend_74", "dend_73", "dend_67", "dend_32", "dend_27", "dend_18", "dend_15", "dend_14", "dend_10", "dend_3", "dend_93", "dend_92", "dend_80", "dend_79", "dend_71", "dend_68", "dend_64", "dend_33", "dend_24", "dend_19", "dend_12", "dend_11", "dend_9", "dend_4", "dend_88", "dend_81", "dend_70", "dend_69", "dend_66", "dend_65", "dend_45", "dend_34", "dend_26", "dend_25", "dend_21", "dend_20", "dend_6", "dend_5", "dend_83", "dend_82", "dend_63", "dend_46", "dend_44", "dend_35", "dend_23", "dend_22", "dend_8", "dend_7", "dend_85", "dend_84", "dend_62", "dend_47", "dend_43", "dend_36", "dend_87", "dend_86", "dend_55", "dend_48", "dend_38", "dend_37", "dend_61", "dend_56", "dend_54", "dend_49", "dend_42", "dend_39", "dend_58", "dend_57", "dend_53", "dend_50", "dend_41", "dend_40", "dend_60", "dend_59", "dend_52", "dend_51" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_29", "dend_0", "dend_75", "dend_30", "dend_16", "dend_1", "dend_89", "dend_76", "dend_72", "dend_31", "dend_28", "dend_17", "dend_13", "dend_2", "dend_91", "dend_90", "dend_78", "dend_77", "dend_74", "dend_73", "dend_67", "dend_32", "dend_27", "dend_18", "dend_15", "dend_14", "dend_10", "dend_3", "dend_93", "dend_92", "dend_80", "dend_79", "dend_71", "dend_68", "dend_64", "dend_33", "dend_24", "dend_19", "dend_12", "dend_11", "dend_9", "dend_4", "dend_88", "dend_81", "dend_70", "dend_69", "dend_66", "dend_65", "dend_45", "dend_34", "dend_26", "dend_25", "dend_21", "dend_20", "dend_6", "dend_5", "dend_83", "dend_82", "dend_63", "dend_46", "dend_44", "dend_35", "dend_23", "dend_22", "dend_8", "dend_7", "dend_85", "dend_84", "dend_62", "dend_47", "dend_43", "dend_36", "dend_87", "dend_86", "dend_55", "dend_48", "dend_38", "dend_37", "dend_61", "dend_56", "dend_54", "dend_49", "dend_42", "dend_39", "dend_58", "dend_57", "dend_53", "dend_50", "dend_41", "dend_40", "dend_60", "dend_59", "dend_52", "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_90" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_94",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_89" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_91" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_93" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_92" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_95",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_96",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_97",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_93",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88", "dend_89", "dend_90", "dend_91", "dend_92", "dend_93" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_78", "dend_78", "dend_78", "dend_78", "dend_77", "dend_77", "dend_77", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_93", "dend_93", "dend_93", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_79", "dend_79", "dend_79", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_69", "dend_69", "dend_69", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_34", "dend_34", "dend_34", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_82", "dend_82", "dend_82", "dend_82", "dend_63", "dend_63", "dend_63", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_84", "dend_84", "dend_84", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_55", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_54", "dend_54", "dend_54", "dend_54", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_58", "dend_58", "dend_58", "dend_58", "dend_57", "dend_57", "dend_57", "dend_57", "dend_53", "dend_53", "dend_53", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L6_DBC_53b6888784_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_75, id: dend_75, parent: dend_29
create dend_75
public dend_75
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_16, id: dend_16, parent: dend_0
create dend_16
public dend_16
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_89, id: dend_89, parent: dend_75
create dend_89
public dend_89
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_72, id: dend_72, parent: dend_30
create dend_72
public dend_72
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_16
create dend_28
public dend_28
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_13, id: dend_13, parent: dend_1
create dend_13
public dend_13
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_91, id: dend_91, parent: dend_89
create dend_91
public dend_91
// Section: dend_90, id: dend_90, parent: dend_89
create dend_90
public dend_90
// Section: dend_78, id: dend_78, parent: dend_76
create dend_78
public dend_78
// Section: dend_77, id: dend_77, parent: dend_76
create dend_77
public dend_77
// Section: dend_74, id: dend_74, parent: dend_72
create dend_74
public dend_74
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_67, id: dend_67, parent: dend_31
create dend_67
public dend_67
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_27, id: dend_27, parent: dend_17
create dend_27
public dend_27
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_93, id: dend_93, parent: dend_91
create dend_93
public dend_93
// Section: dend_92, id: dend_92, parent: dend_91
create dend_92
public dend_92
// Section: dend_80, id: dend_80, parent: dend_78
create dend_80
public dend_80
// Section: dend_79, id: dend_79, parent: dend_78
create dend_79
public dend_79
// Section: dend_71, id: dend_71, parent: dend_67
create dend_71
public dend_71
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_64, id: dend_64, parent: dend_32
create dend_64
public dend_64
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_24, id: dend_24, parent: dend_18
create dend_24
public dend_24
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_3
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_88, id: dend_88, parent: dend_80
create dend_88
public dend_88
// Section: dend_81, id: dend_81, parent: dend_80
create dend_81
public dend_81
// Section: dend_70, id: dend_70, parent: dend_68
create dend_70
public dend_70
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_45, id: dend_45, parent: dend_33
create dend_45
public dend_45
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_83, id: dend_83, parent: dend_81
create dend_83
public dend_83
// Section: dend_82, id: dend_82, parent: dend_81
create dend_82
public dend_82
// Section: dend_63, id: dend_63, parent: dend_45
create dend_63
public dend_63
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_44, id: dend_44, parent: dend_34
create dend_44
public dend_44
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_85, id: dend_85, parent: dend_83
create dend_85
public dend_85
// Section: dend_84, id: dend_84, parent: dend_83
create dend_84
public dend_84
// Section: dend_62, id: dend_62, parent: dend_46
create dend_62
public dend_62
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_43, id: dend_43, parent: dend_35
create dend_43
public dend_43
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_87, id: dend_87, parent: dend_85
create dend_87
public dend_87
// Section: dend_86, id: dend_86, parent: dend_85
create dend_86
public dend_86
// Section: dend_55, id: dend_55, parent: dend_47
create dend_55
public dend_55
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_54, id: dend_54, parent: dend_48
create dend_54
public dend_54
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_42, id: dend_42, parent: dend_38
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_53, id: dend_53, parent: dend_49
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_29, dend_0, dend_75, dend_30, dend_16, dend_1, dend_89, dend_76, dend_72, dend_31, dend_28, dend_17, dend_13, dend_2, dend_91, dend_90, dend_78, dend_77, dend_74, dend_73, dend_67, dend_32, dend_27, dend_18, dend_15, dend_14, dend_10, dend_3, dend_93, dend_92, dend_80, dend_79, dend_71, dend_68, dend_64, dend_33, dend_24, dend_19, dend_12, dend_11, dend_9, dend_4, dend_88, dend_81, dend_70, dend_69, dend_66, dend_65, dend_45, dend_34, dend_26, dend_25, dend_21, dend_20, dend_6, dend_5, dend_83, dend_82, dend_63, dend_46, dend_44, dend_35, dend_23, dend_22, dend_8, dend_7, dend_85, dend_84, dend_62, dend_47, dend_43, dend_36, dend_87, dend_86, dend_55, dend_48, dend_38, dend_37, dend_61, dend_56, dend_54, dend_49, dend_42, dend_39, dend_58, dend_57, dend_53, dend_50, dend_41, dend_40, dend_60, dend_59, dend_52, dend_51]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_29, dend_0, dend_75, dend_30, dend_16, dend_1, dend_89, dend_76, dend_72, dend_31, dend_28, dend_17, dend_13, dend_2, dend_91, dend_90, dend_78, dend_77, dend_74, dend_73, dend_67, dend_32, dend_27, dend_18, dend_15, dend_14, dend_10, dend_3, dend_93, dend_92, dend_80, dend_79, dend_71, dend_68, dend_64, dend_33, dend_24, dend_19, dend_12, dend_11, dend_9, dend_4, dend_88, dend_81, dend_70, dend_69, dend_66, dend_65, dend_45, dend_34, dend_26, dend_25, dend_21, dend_20, dend_6, dend_5, dend_83, dend_82, dend_63, dend_46, dend_44, dend_35, dend_23, dend_22, dend_8, dend_7, dend_85, dend_84, dend_62, dend_47, dend_43, dend_36, dend_87, dend_86, dend_55, dend_48, dend_38, dend_37, dend_61, dend_56, dend_54, dend_49, dend_42, dend_39, dend_58, dend_57, dend_53, dend_50, dend_41, dend_40, dend_60, dend_59, dend_52, dend_51]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_90]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_94
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_89]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_91]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_93]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_92]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_95
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_96
// Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_97
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_92
// Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_93
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_1, dend_1, dend_1, axon_1, axon_1, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_78, dend_78, dend_78, dend_78, dend_77, dend_77, dend_77, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_93, dend_93, dend_93, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_79, dend_79, dend_79, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_69, dend_69, dend_69, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_34, dend_34, dend_34, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_82, dend_82, dend_82, dend_82, dend_63, dend_63, dend_63, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_84, dend_84, dend_84, dend_62, dend_62, dend_62, dend_62, dend_62, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_86, dend_55, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_29(0), soma_0(0.45000018766376804)
    connect dend_0(0), soma_0(0.45000018766376804)
    connect axon_0(0), soma_0(1.0)
    connect dend_75(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_16(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_89(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_72(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_28(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_13(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_91(0), dend_89(1.0)
    connect dend_90(0), dend_89(1.0)
    connect dend_78(0), dend_76(1.0)
    connect dend_77(0), dend_76(1.0)
    connect dend_74(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_67(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_27(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_93(0), dend_91(1.0)
    connect dend_92(0), dend_91(1.0)
    connect dend_80(0), dend_78(1.0)
    connect dend_79(0), dend_78(1.0)
    connect dend_71(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_64(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_24(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_88(0), dend_80(1.0)
    connect dend_81(0), dend_80(1.0)
    connect dend_70(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_45(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_83(0), dend_81(1.0)
    connect dend_82(0), dend_81(1.0)
    connect dend_63(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_44(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_85(0), dend_83(1.0)
    connect dend_84(0), dend_83(1.0)
    connect dend_62(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_43(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_87(0), dend_85(1.0)
    connect dend_86(0), dend_85(1.0)
    connect dend_55(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_54(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_42(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_53(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.92851, -12.838, 0.0, 2.34028 ) }
    soma_0 { pt3dadd( 1.77053, -11.651, 0.0, 3.94329 ) }
    soma_0 { pt3dadd( 1.61254, -10.464, 0.0, 5.35921 ) }
    soma_0 { pt3dadd( 1.45455, -9.27692, 0.0, 6.69673 ) }
    soma_0 { pt3dadd( 1.29656, -8.08988, 0.0, 7.75393 ) }
    soma_0 { pt3dadd( 1.13858, -6.90284, 0.0, 8.64632 ) }
    soma_0 { pt3dadd( 0.980589, -5.7158, 0.0, 9.469 ) }
    soma_0 { pt3dadd( 0.822601, -4.52876, 0.0, 10.3084 ) }
    soma_0 { pt3dadd( 0.664614, -3.34172, 0.0, 11.1451 ) }
    soma_0 { pt3dadd( 0.506626, -2.15468, 0.0, 11.8845 ) }
    soma_0 { pt3dadd( 0.348639, -0.967645, 0.0, 12.0097 ) }
    soma_0 { pt3dadd( 0.190651, 0.219395, 0.0, 12.0138 ) }
    soma_0 { pt3dadd( 0.0326638, 1.40643, 0.0, 11.4011 ) }
    soma_0 { pt3dadd( -0.125324, 2.59347, 0.0, 10.4698 ) }
    soma_0 { pt3dadd( -0.283311, 3.78051, 0.0, 9.36538 ) }
    soma_0 { pt3dadd( -0.441299, 4.96755, 0.0, 8.29429 ) }
    soma_0 { pt3dadd( -0.599286, 6.15459, 0.0, 7.29384 ) }
    soma_0 { pt3dadd( -0.757274, 7.34163, 0.0, 6.35176 ) }
    soma_0 { pt3dadd( -0.915261, 8.52867, 0.0, 5.48996 ) }
    soma_0 { pt3dadd( -1.07325, 9.71571, 0.0, 4.74604 ) }
    soma_0 { pt3dadd( -1.23124, 10.9027, 0.0, 2.99829 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 21/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 2.20047, -12.9375, 0.07, 2.87 ) }
    dend_29 { pt3dadd( 2.27745, -13.4413, 0.0174887, 2.87 ) }
    dend_29 { pt3dadd( 2.70083, -16.0448, 0.0829093, 2.87 ) }
    dend_29 { pt3dadd( 3.16643, -18.718, 0.295394, 2.87 ) }
    dend_29 { pt3dadd( 3.6634, -21.5714, 0.522194, 2.58 ) }
    dend_29 { pt3dadd( 4.18795, -24.5831, 0.761582, 2.58 ) }
    dend_29 { pt3dadd( 4.72139, -27.6458, 1.00503, 2.06 ) }
    dend_29 { pt3dadd( 5.46976, -31.8889, 1.42177, 2.06 ) }
    dend_29 { pt3dadd( 5.73617, -33.4126, 1.6405, 2.06 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 30/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -2.13953, 12.4515, 1.0, 3.46 ) }
    dend_0 { pt3dadd( -2.19463, 12.6769, 1.0, 3.46 ) }
    dend_0 { pt3dadd( -2.77861, 15.2765, 0.993713, 2.65 ) }
    dend_0 { pt3dadd( -3.25672, 17.416, 0.986479, 2.65 ) }
    dend_0 { pt3dadd( -3.78628, 19.8451, 0.977592, 2.65 ) }
    dend_0 { pt3dadd( -4.26706, 22.1041, 0.916524, 2.5 ) }
    dend_0 { pt3dadd( -4.64094, 23.8895, 0.843994, 2.5 ) }
    dend_0 { pt3dadd( -5.06807, 25.9922, 0.73217, 2.5 ) }
    dend_0 { pt3dadd( -5.53887, 28.3325, 0.57888, 2.06 ) }
    dend_0 { pt3dadd( -6.00184, 30.556, 0.425648, 1.99 ) }
    dend_0 { pt3dadd( -6.295, 31.9277, 0.333659, 1.99 ) }
    dend_0 { pt3dadd( -6.66064, 33.671, 0.277044, 1.99 ) }
    dend_0 { pt3dadd( -7.09583, 35.7464, 0.221429, 1.99 ) }
    dend_0 { pt3dadd( -7.50718, 37.6001, 0.19493, 1.99 ) }
    dend_0 { pt3dadd( -7.87788, 39.2983, 0.209629, 1.69 ) }
    dend_0 { pt3dadd( -8.34685, 41.3567, 0.3158, 1.4 ) }
    dend_0 { pt3dadd( -8.74509, 43.0781, 0.523989, 1.25 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 47/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -1.23124, 10.9027, 0.0, 0.52 ) }
    axon_0 { pt3dadd( -3.2102, 25.7716, 0.0, 0.52 ) }
    axon_0 { pt3dadd( -5.18917, 40.6405, 0.0, 0.52 ) }
    // Section: dend_75, id: dend_75, parent: dend_29 (entry count 50/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 5.73617, -33.4126, 1.6405, 0.74 ) }
    dend_75 { pt3dadd( 6.99639, -34.6697, 2.09671, 0.74 ) }
    dend_75 { pt3dadd( 7.96332, -35.6391, 2.37655, 0.74 ) }
    dend_75 { pt3dadd( 9.41471, -37.0941, 2.7966, 0.74 ) }
    dend_75 { pt3dadd( 10.3821, -38.064, 3.07658, 0.74 ) }
    dend_75 { pt3dadd( 12.0772, -39.7634, 3.56715, 0.74 ) }
    dend_75 { pt3dadd( 13.0824, -40.7712, 3.85807, 0.74 ) }
    dend_75 { pt3dadd( 14.8632, -42.5341, 4.40064, 0.74 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 58/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 5.73617, -33.4126, 1.6405, 1.33 ) }
    dend_30 { pt3dadd( 6.10491, -36.0386, 1.33662, 1.33 ) }
    dend_30 { pt3dadd( 6.3394, -37.7086, 1.14338, 1.33 ) }
    dend_30 { pt3dadd( 6.67033, -40.0653, 0.870663, 1.33 ) }
    dend_30 { pt3dadd( 6.87014, -41.4883, 0.706003, 1.33 ) }
    dend_30 { pt3dadd( 7.08665, -43.0301, 0.527581, 1.33 ) }
    dend_30 { pt3dadd( 7.38163, -45.1309, 0.284487, 1.33 ) }
    // Section: dend_16, id: dend_16, parent: dend_0 (entry count 65/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -8.74509, 43.0781, 0.523989, 1.18 ) }
    dend_16 { pt3dadd( -8.87895, 44.7034, 1.01123, 1.18 ) }
    dend_16 { pt3dadd( -8.92233, 45.8976, 1.23243, 1.18 ) }
    dend_16 { pt3dadd( -8.93428, 46.9959, 1.37896, 1.18 ) }
    dend_16 { pt3dadd( -8.93459, 47.9869, 1.45378, 1.18 ) }
    dend_16 { pt3dadd( -8.9424, 51.8225, 1.36426, 1.25 ) }
    dend_16 { pt3dadd( -8.91112, 54.8251, 1.12663, 0.81 ) }
    dend_16 { pt3dadd( -8.84973, 56.1217, 0.997706, 0.81 ) }
    dend_16 { pt3dadd( -8.76167, 57.0249, 0.842582, 0.81 ) }
    dend_16 { pt3dadd( -8.58221, 58.0842, 0.523341, 0.81 ) }
    dend_16 { pt3dadd( -8.23327, 59.67, -0.131042, 0.81 ) }
    dend_16 { pt3dadd( -7.9819, 60.699, -0.655076, 0.81 ) }
    dend_16 { pt3dadd( -7.6964, 61.8609, -1.15317, 0.81 ) }
    dend_16 { pt3dadd( -7.48416, 62.6804, -1.51736, 0.81 ) }
    dend_16 { pt3dadd( -7.05168, 64.1907, -2.14909, 0.81 ) }
    dend_16 { pt3dadd( -6.79339, 65.0351, -2.48038, 0.81 ) }
    dend_16 { pt3dadd( -6.44275, 66.154, -2.87615, 0.81 ) }
    dend_16 { pt3dadd( -6.21522, 66.966, -3.18666, 0.81 ) }
    dend_16 { pt3dadd( -5.93529, 68.2032, -3.66822, 0.81 ) }
    dend_16 { pt3dadd( -5.69875, 69.3646, -4.07334, 0.81 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 85/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -8.74509, 43.0781, 0.523989, 1.25 ) }
    dend_1 { pt3dadd( -9.0727, 44.315, 1.36753, 1.25 ) }
    dend_1 { pt3dadd( -9.33129, 45.2913, 2.03338, 1.25 ) }
    dend_1 { pt3dadd( -9.8519, 47.2567, 3.37384, 1.25 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 89/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -5.18917, 40.6405, 0.0, 0.52 ) }
    axon_1 { pt3dadd( -7.16813, 55.5094, 0.0, 0.52 ) }
    axon_1 { pt3dadd( -9.14709, 70.3782, 0.0, 0.52 ) }
    // Section: dend_89, id: dend_89, parent: dend_75 (entry count 92/100)
    dend_89 { pt3dclear() }
    dend_89 { pt3dadd( 14.8632, -42.5341, 4.40064, 0.37 ) }
    dend_89 { pt3dadd( 15.9404, -44.1149, 4.64668, 0.37 ) }
    dend_89 { pt3dadd( 16.6829, -45.1154, 4.91436, 0.37 ) }
    dend_89 { pt3dadd( 17.3887, -46.0453, 5.19548, 0.37 ) }
    dend_89 { pt3dadd( 18.5191, -47.5949, 5.6484, 0.37 ) }
    dend_89 { pt3dadd( 19.3634, -48.7227, 6.07439, 0.37 ) }
    dend_89 { pt3dadd( 19.9809, -49.5191, 6.40552, 0.37 ) }
    dend_89 { pt3dadd( 20.7308, -50.452, 6.87132, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_89 { pt3dadd( 21.4972, -51.386, 7.35859, 0.37 ) }
    dend_89 { pt3dadd( 22.4242, -52.4147, 7.9178, 0.37 ) }
    dend_89 { pt3dadd( 23.7374, -53.7139, 8.54384, 0.37 ) }
    dend_89 { pt3dadd( 24.4557, -54.3842, 8.89435, 0.37 ) }
    dend_89 { pt3dadd( 25.4892, -55.4097, 9.43334, 0.37 ) }
    dend_89 { pt3dadd( 25.7593, -55.6963, 9.57018, 0.37 ) }
    dend_89 { pt3dadd( 26.433, -56.4656, 9.91376, 0.37 ) }
    dend_89 { pt3dadd( 27.319, -57.5397, 10.3645, 0.37 ) }
    dend_89 { pt3dadd( 28.1132, -58.5906, 10.7297, 0.37 ) }
    dend_89 { pt3dadd( 29.1526, -59.9741, 11.2212, 0.37 ) }
    dend_89 { pt3dadd( 29.8405, -60.933, 11.5708, 0.37 ) }
    dend_89 { pt3dadd( 30.6052, -62.0829, 11.9711, 0.37 ) }
    dend_89 { pt3dadd( 31.0125, -62.7752, 12.1877, 0.37 ) }
    dend_89 { pt3dadd( 31.5391, -63.7314, 12.4758, 0.37 ) }
    dend_89 { pt3dadd( 32.0449, -64.4969, 12.6593, 0.37 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 15/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 14.8632, -42.5341, 4.40064, 0.59 ) }
    dend_76 { pt3dadd( 16.1252, -42.5802, 4.30921, 0.59 ) }
    dend_76 { pt3dadd( 16.8125, -42.5906, 4.26457, 0.59 ) }
    dend_76 { pt3dadd( 18.2403, -42.596, 4.18368, 0.59 ) }
    dend_76 { pt3dadd( 19.0716, -42.5854, 4.09294, 0.52 ) }
    dend_76 { pt3dadd( 19.5952, -42.5904, 4.02237, 0.52 ) }
    dend_76 { pt3dadd( 20.3984, -42.6039, 3.90284, 0.52 ) }
    dend_76 { pt3dadd( 21.2102, -42.6188, 3.76275, 0.52 ) }
    dend_76 { pt3dadd( 22.0911, -42.6481, 3.63927, 0.52 ) }
    dend_76 { pt3dadd( 23.2132, -42.6961, 3.53421, 0.52 ) }
    dend_76 { pt3dadd( 24.3025, -42.7703, 3.48828, 0.52 ) }
    dend_76 { pt3dadd( 25.43, -42.8766, 3.49457, 0.52 ) }
    dend_76 { pt3dadd( 26.2321, -42.9769, 3.54223, 0.52 ) }
    dend_76 { pt3dadd( 27.4328, -43.1556, 3.69577, 0.52 ) }
    dend_76 { pt3dadd( 28.385, -43.3029, 3.87348, 0.52 ) }
    dend_76 { pt3dadd( 29.1508, -43.4259, 4.08839, 0.52 ) }
    dend_76 { pt3dadd( 29.8844, -43.5386, 4.31471, 0.52 ) }
    dend_76 { pt3dadd( 30.9203, -43.7169, 4.66293, 0.52 ) }
    dend_76 { pt3dadd( 31.7569, -43.8661, 4.94941, 0.52 ) }
    dend_76 { pt3dadd( 32.7339, -44.0366, 5.26558, 0.52 ) }
    dend_76 { pt3dadd( 34.6614, -44.3741, 5.93624, 0.52 ) }
    // Section: dend_72, id: dend_72, parent: dend_30 (entry count 36/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 7.38163, -45.1309, 0.284487, 0.81 ) }
    dend_72 { pt3dadd( 6.494, -47.9329, -0.647569, 0.81 ) }
    dend_72 { pt3dadd( 6.08409, -49.3102, -1.17658, 0.81 ) }
    dend_72 { pt3dadd( 5.78014, -50.3244, -1.57184, 0.81 ) }
    dend_72 { pt3dadd( 5.32796, -51.6854, -2.10067, 0.59 ) }
    dend_72 { pt3dadd( 5.12743, -52.2621, -2.35288, 0.52 ) }
    dend_72 { pt3dadd( 4.75834, -53.3076, -2.8291, 0.52 ) }
    dend_72 { pt3dadd( 4.15873, -54.8364, -3.50919, 0.52 ) }
    dend_72 { pt3dadd( 3.80275, -55.6125, -3.91502, 0.52 ) }
    dend_72 { pt3dadd( 3.482, -56.2241, -4.25992, 0.52 ) }
    dend_72 { pt3dadd( 2.64845, -57.6257, -5.08911, 0.52 ) }
    dend_72 { pt3dadd( 2.31832, -58.1157, -5.38653, 0.52 ) }
    dend_72 { pt3dadd( 1.31993, -59.4036, -6.16301, 0.52 ) }
    dend_72 { pt3dadd( 0.599137, -60.2971, -6.67683, 0.52 ) }
    dend_72 { pt3dadd( -0.28917, -61.3547, -7.36984, 0.52 ) }
    dend_72 { pt3dadd( -0.974866, -62.2106, -7.94645, 0.52 ) }
    dend_72 { pt3dadd( -1.3462, -62.7085, -8.28793, 0.52 ) }
    dend_72 { pt3dadd( -1.6847, -63.2131, -8.6525, 0.52 ) }
    dend_72 { pt3dadd( -2.31936, -64.3385, -9.50369, 0.52 ) }
    dend_72 { pt3dadd( -3.05618, -65.8574, -10.6582, 0.52 ) }
    dend_72 { pt3dadd( -3.40583, -66.747, -11.3346, 0.52 ) }
    dend_72 { pt3dadd( -3.81079, -67.9612, -12.2228, 0.52 ) }
    dend_72 { pt3dadd( -3.93853, -68.3827, -12.546, 0.52 ) }
    dend_72 { pt3dadd( -4.40571, -69.9994, -13.7963, 0.52 ) }
    dend_72 { pt3dadd( -4.6285, -70.7952, -14.3809, 0.52 ) }
    dend_72 { pt3dadd( -4.95734, -72.1186, -15.3215, 0.52 ) }
    dend_72 { pt3dadd( -5.17655, -72.9909, -15.935, 0.52 ) }
    dend_72 { pt3dadd( -5.61854, -74.7243, -17.0542, 0.52 ) }
    dend_72 { pt3dadd( -5.70813, -75.1057, -17.2811, 0.52 ) }
    dend_72 { pt3dadd( -5.92196, -76.1186, -17.8006, 0.52 ) }
    dend_72 { pt3dadd( -6.29292, -77.777, -18.5821, 0.52 ) }
    dend_72 { pt3dadd( -6.53991, -78.7477, -18.9603, 0.52 ) }
    dend_72 { pt3dadd( -6.92053, -80.1275, -19.428, 0.52 ) }
    dend_72 { pt3dadd( -7.34409, -81.5227, -19.8679, 0.52 ) }
    dend_72 { pt3dadd( -7.68664, -82.5051, -20.1605, 0.52 ) }
    dend_72 { pt3dadd( -8.34061, -84.1237, -20.7034, 0.52 ) }
    dend_72 { pt3dadd( -8.97113, -85.5095, -21.1791, 0.52 ) }
    dend_72 { pt3dadd( -9.25381, -86.0718, -21.4199, 0.52 ) }
    dend_72 { pt3dadd( -10.1544, -87.7459, -22.2241, 0.52 ) }
    dend_72 { pt3dadd( -11.0941, -89.4242, -23.1863, 0.52 ) }
    dend_72 { pt3dadd( -12.1647, -91.2848, -24.3939, 0.52 ) }
    dend_72 { pt3dadd( -12.8128, -92.4168, -25.2475, 0.52 ) }
    dend_72 { pt3dadd( -13.806, -94.1864, -26.7088, 0.52 ) }
    dend_72 { pt3dadd( -14.194, -94.9054, -27.3445, 0.52 ) }
    dend_72 { pt3dadd( -15.1751, -96.8157, -29.0776, 0.52 ) }
    dend_72 { pt3dadd( -15.3158, -97.1342, -29.3906, 0.52 ) }
    dend_72 { pt3dadd( -16.0289, -99.047, -31.1731, 0.52 ) }
    dend_72 { pt3dadd( -16.3119, -99.9874, -32.0859, 0.52 ) }
    dend_72 { pt3dadd( -16.6475, -101.409, -33.4149, 0.52 ) }
    dend_72 { pt3dadd( -16.8363, -102.292, -34.2483, 0.52 ) }
    dend_72 { pt3dadd( -17.2404, -104.25, -36.0027, 0.52 ) }
    dend_72 { pt3dadd( -17.4226, -105.215, -36.8421, 0.52 ) }
    dend_72 { pt3dadd( -17.747, -107.101, -38.4467, 0.52 ) }
    dend_72 { pt3dadd( -17.8572, -107.704, -38.9577, 0.52 ) }
    dend_72 { pt3dadd( -18.167, -109.206, -40.1136, 0.52 ) }
    dend_72 { pt3dadd( -18.3158, -109.834, -40.5489, 0.52 ) }
    dend_72 { pt3dadd( -18.5573, -110.69, -41.0164, 0.52 ) }
    dend_72 { pt3dadd( -19.1163, -112.466, -41.7743, 0.52 ) }
    dend_72 { pt3dadd( -19.4976, -113.409, -42.0757, 0.52 ) }
    dend_72 { pt3dadd( -20.0112, -114.403, -42.3628, 0.52 ) }
    dend_72 { pt3dadd( -20.4403, -115.101, -42.5292, 0.52 ) }
    dend_72 { pt3dadd( -20.8885, -115.717, -42.6707, 0.52 ) }
    dend_72 { pt3dadd( -21.8063, -116.73, -42.8735, 0.52 ) }
    dend_72 { pt3dadd( -23.449, -118.304, -43.2192, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_72 { pt3dadd( -24.693, -119.452, -43.6849, 0.52 ) }
    dend_72 { pt3dadd( -25.5531, -120.241, -44.0903, 0.52 ) }
    dend_72 { pt3dadd( -26.2137, -120.866, -44.4484, 0.52 ) }
    dend_72 { pt3dadd( -27.757, -122.408, -45.3582, 0.52 ) }
    dend_72 { pt3dadd( -29.0663, -123.808, -46.2317, 0.52 ) }
    dend_72 { pt3dadd( -30.9795, -126.054, -47.5938, 0.52 ) }
    dend_72 { pt3dadd( -31.9971, -127.305, -48.3595, 0.52 ) }
    dend_72 { pt3dadd( -32.5567, -128.017, -48.8044, 0.52 ) }
    dend_72 { pt3dadd( -33.6893, -129.561, -49.8177, 0.52 ) }
    dend_72 { pt3dadd( -34.9957, -131.446, -51.0311, 0.52 ) }
    dend_72 { pt3dadd( -35.4064, -132.052, -51.3845, 0.52 ) }
    dend_72 { pt3dadd( -36.1952, -133.239, -52.1352, 0.52 ) }
    dend_72 { pt3dadd( -37.1096, -134.721, -53.1819, 0.52 ) }
    dend_72 { pt3dadd( -38.1943, -136.628, -54.5571, 0.52 ) }
    dend_72 { pt3dadd( -38.9282, -138.038, -55.5687, 0.52 ) }
    dend_72 { pt3dadd( -39.2794, -138.757, -56.0565, 0.52 ) }
    dend_72 { pt3dadd( -40.6584, -141.579, -57.8883, 0.52 ) }
    dend_72 { pt3dadd( -41.2013, -142.717, -58.5683, 0.52 ) }
    dend_72 { pt3dadd( -41.8354, -143.958, -59.2811, 0.52 ) }
    dend_72 { pt3dadd( -42.18, -144.594, -59.6239, 0.52 ) }
    dend_72 { pt3dadd( -42.8778, -145.799, -60.4971, 0.52 ) }
    dend_72 { pt3dadd( -43.4382, -146.67, -61.2131, 0.52 ) }
    dend_72 { pt3dadd( -43.9311, -147.379, -61.8077, 0.52 ) }
    dend_72 { pt3dadd( -45.3254, -149.31, -63.6648, 0.52 ) }
    dend_72 { pt3dadd( -46.0525, -150.299, -64.7135, 0.52 ) }
    dend_72 { pt3dadd( -48.0568, -153.059, -67.8501, 0.52 ) }
    dend_72 { pt3dadd( -48.4794, -153.659, -68.5829, 0.52 ) }
    dend_72 { pt3dadd( -49.0104, -154.464, -69.6251, 0.52 ) }
    dend_72 { pt3dadd( -49.7418, -155.581, -71.1465, 0.52 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 29/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 7.38163, -45.1309, 0.284487, 1.33 ) }
    dend_31 { pt3dadd( 7.38257, -45.1898, 0.291257, 1.33 ) }
    dend_31 { pt3dadd( 7.42289, -47.5761, 0.509693, 1.33 ) }
    dend_31 { pt3dadd( 7.46619, -50.8934, 0.758344, 1.33 ) }
    dend_31 { pt3dadd( 7.48962, -52.8419, 0.953446, 1.33 ) }
    dend_31 { pt3dadd( 7.52874, -54.7984, 1.17257, 1.18 ) }
    dend_31 { pt3dadd( 7.57589, -56.4094, 1.38952, 1.18 ) }
    dend_31 { pt3dadd( 7.67531, -58.6112, 1.71873, 1.18 ) }
    dend_31 { pt3dadd( 7.77725, -60.4412, 2.01335, 1.18 ) }
    dend_31 { pt3dadd( 7.8418, -62.1295, 2.30792, 1.18 ) }
    dend_31 { pt3dadd( 7.86336, -64.2358, 2.70991, 1.18 ) }
    dend_31 { pt3dadd( 7.84518, -66.5122, 3.19874, 1.18 ) }
    dend_31 { pt3dadd( 7.81574, -68.4189, 3.61979, 1.18 ) }
    dend_31 { pt3dadd( 7.79631, -69.5824, 3.89046, 1.18 ) }
    dend_31 { pt3dadd( 7.72606, -71.6127, 4.3339, 1.18 ) }
    dend_31 { pt3dadd( 7.61509, -73.4617, 4.67661, 1.03 ) }
    dend_31 { pt3dadd( 7.5109, -74.7825, 4.92305, 1.03 ) }
    dend_31 { pt3dadd( 7.28409, -77.3011, 5.36649, 1.03 ) }
    dend_31 { pt3dadd( 7.13541, -78.9658, 5.6761, 1.03 ) }
    dend_31 { pt3dadd( 6.97517, -81.0679, 6.06393, 1.03 ) }
    dend_31 { pt3dadd( 6.82916, -82.9673, 6.37855, 1.03 ) }
    // Section: dend_28, id: dend_28, parent: dend_16 (entry count 50/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -5.69875, 69.3646, -4.07334, 0.52 ) }
    dend_28 { pt3dadd( -6.42184, 70.9161, -5.34288, 0.52 ) }
    dend_28 { pt3dadd( -6.82203, 71.7938, -6.06568, 0.52 ) }
    dend_28 { pt3dadd( -7.7902, 73.7676, -7.59025, 0.52 ) }
    dend_28 { pt3dadd( -8.06359, 74.2886, -7.96623, 0.52 ) }
    dend_28 { pt3dadd( -8.57528, 75.1804, -8.56697, 0.52 ) }
    dend_28 { pt3dadd( -8.96198, 75.8325, -8.97501, 0.52 ) }
    dend_28 { pt3dadd( -9.75725, 77.1734, -9.74838, 0.52 ) }
    dend_28 { pt3dadd( -10.3287, 78.1909, -10.2932, 0.52 ) }
    dend_28 { pt3dadd( -10.7322, 78.9394, -10.632, 0.52 ) }
    dend_28 { pt3dadd( -11.153, 79.7375, -11.0137, 0.52 ) }
    dend_28 { pt3dadd( -11.475, 80.3566, -11.305, 0.52 ) }
    dend_28 { pt3dadd( -12.1804, 81.7396, -12.0226, 0.52 ) }
    dend_28 { pt3dadd( -12.4637, 82.317, -12.32, 0.52 ) }
    dend_28 { pt3dadd( -12.721, 82.8328, -12.6234, 0.52 ) }
    dend_28 { pt3dadd( -13.1043, 83.5408, -13.0526, 0.52 ) }
    dend_28 { pt3dadd( -13.511, 84.2018, -13.53, 0.52 ) }
    dend_28 { pt3dadd( -14.6066, 85.7166, -14.7054, 0.52 ) }
    dend_28 { pt3dadd( -14.9513, 86.1741, -15.0442, 0.52 ) }
    dend_28 { pt3dadd( -15.2254, 86.5511, -15.3189, 0.52 ) }
    dend_28 { pt3dadd( -15.7121, 87.242, -15.7951, 0.52 ) }
    dend_28 { pt3dadd( -16.7682, 88.7355, -16.765, 0.52 ) }
    dend_28 { pt3dadd( -17.134, 89.2478, -17.0424, 0.52 ) }
    dend_28 { pt3dadd( -17.735, 90.0788, -17.4399, 0.52 ) }
    dend_28 { pt3dadd( -18.2006, 90.7772, -17.7726, 0.52 ) }
    dend_28 { pt3dadd( -18.6946, 91.5813, -18.2113, 0.52 ) }
    dend_28 { pt3dadd( -19.0928, 92.274, -18.7045, 0.52 ) }
    dend_28 { pt3dadd( -19.48, 93.0082, -19.2892, 0.52 ) }
    dend_28 { pt3dadd( -20.1145, 94.3937, -20.5883, 0.52 ) }
    dend_28 { pt3dadd( -20.3717, 95.1179, -21.4107, 0.52 ) }
    dend_28 { pt3dadd( -20.5895, 96.2057, -22.7047, 0.52 ) }
    dend_28 { pt3dadd( -20.5755, 97.73, -24.6179, 0.52 ) }
    dend_28 { pt3dadd( -20.534, 97.9447, -24.9165, 0.52 ) }
    dend_28 { pt3dadd( -20.3818, 98.3508, -25.5422, 0.52 ) }
    dend_28 { pt3dadd( -19.9227, 99.1081, -26.8771, 0.52 ) }
    dend_28 { pt3dadd( -19.4716, 99.7209, -28.0441, 0.52 ) }
    dend_28 { pt3dadd( -18.7709, 100.599, -29.6452, 0.52 ) }
    dend_28 { pt3dadd( -17.793, 101.715, -31.6261, 0.52 ) }
    dend_28 { pt3dadd( -17.5407, 102.0, -32.1293, 0.52 ) }
    dend_28 { pt3dadd( -16.7795, 102.825, -33.6126, 0.52 ) }
    dend_28 { pt3dadd( -16.3982, 103.187, -34.2368, 0.52 ) }
    dend_28 { pt3dadd( -16.0269, 103.478, -34.7974, 0.52 ) }
    dend_28 { pt3dadd( -15.6515, 103.748, -35.2787, 0.52 ) }
    dend_28 { pt3dadd( -15.3118, 103.928, -35.7244, 0.52 ) }
    dend_28 { pt3dadd( -14.0126, 104.536, -37.4975, 0.52 ) }
    dend_28 { pt3dadd( -13.5203, 104.722, -38.3901, 0.52 ) }
    dend_28 { pt3dadd( -12.5042, 104.962, -40.5098, 0.52 ) }
    dend_28 { pt3dadd( -12.0186, 105.021, -41.5518, 0.52 ) }
    dend_28 { pt3dadd( -10.5569, 105.058, -44.8972, 0.52 ) }
    dend_28 { pt3dadd( -10.2296, 105.043, -45.6301, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_28 { pt3dadd( -7.09585, 104.7, -52.2385, 0.52 ) }
    dend_28 { pt3dadd( -5.92641, 104.517, -54.5789, 0.52 ) }
    dend_28 { pt3dadd( -5.2835, 104.372, -55.8402, 0.52 ) }
    dend_28 { pt3dadd( -3.56445, 103.873, -59.2376, 0.52 ) }
    dend_28 { pt3dadd( -2.79292, 103.612, -60.6622, 0.52 ) }
    dend_28 { pt3dadd( -2.17904, 103.367, -61.76, 0.52 ) }
    dend_28 { pt3dadd( -0.249414, 102.487, -64.8565, 0.52 ) }
    dend_28 { pt3dadd( 1.4963, 101.645, -67.651, 0.52 ) }
    dend_28 { pt3dadd( 3.09455, 100.82, -70.3506, 0.52 ) }
    dend_28 { pt3dadd( 3.63235, 100.508, -71.2771, 0.52 ) }
    dend_28 { pt3dadd( 4.82595, 99.7009, -73.5806, 0.52 ) }
    dend_28 { pt3dadd( 5.48439, 99.1983, -74.9347, 0.52 ) }
    dend_28 { pt3dadd( 5.82229, 98.9313, -75.5646, 0.52 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 13/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -5.69875, 69.3646, -4.07334, 0.81 ) }
    dend_17 { pt3dadd( -5.28188, 70.4413, -4.12475, 0.81 ) }
    dend_17 { pt3dadd( -4.93671, 71.3872, -4.24824, 0.81 ) }
    dend_17 { pt3dadd( -4.55547, 72.328, -4.39695, 0.81 ) }
    dend_17 { pt3dadd( -4.04382, 73.4165, -4.57297, 0.81 ) }
    dend_17 { pt3dadd( -3.55719, 74.3612, -4.72314, 0.81 ) }
    dend_17 { pt3dadd( -3.03514, 75.3747, -4.88425, 0.81 ) }
    dend_17 { pt3dadd( -2.23934, 76.977, -5.1338, 0.81 ) }
    dend_17 { pt3dadd( -1.74584, 77.9678, -5.30679, 0.81 ) }
    dend_17 { pt3dadd( -0.949769, 79.4174, -5.59696, 0.81 ) }
    dend_17 { pt3dadd( -0.503434, 80.0891, -5.75242, 0.81 ) }
    // Section: dend_13, id: dend_13, parent: dend_1 (entry count 24/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -9.8519, 47.2567, 3.37384, 0.81 ) }
    dend_13 { pt3dadd( -8.64122, 48.6677, 5.84126, 0.81 ) }
    dend_13 { pt3dadd( -8.27552, 48.9301, 6.67789, 0.81 ) }
    dend_13 { pt3dadd( -7.43705, 49.2859, 8.4896, 0.81 ) }
    dend_13 { pt3dadd( -6.81897, 49.4344, 9.67571, 0.59 ) }
    dend_13 { pt3dadd( -6.34025, 49.515, 10.5086, 0.52 ) }
    dend_13 { pt3dadd( -5.41672, 49.6717, 11.9415, 0.52 ) }
    dend_13 { pt3dadd( -3.84814, 49.7044, 13.8023, 0.52 ) }
    dend_13 { pt3dadd( -3.22896, 49.7, 14.435, 0.52 ) }
    dend_13 { pt3dadd( -2.50389, 49.702, 15.0719, 0.52 ) }
    dend_13 { pt3dadd( -1.61672, 49.7284, 15.813, 0.52 ) }
    dend_13 { pt3dadd( -0.666371, 49.7678, 16.6265, 0.52 ) }
    dend_13 { pt3dadd( 0.0786434, 49.7904, 17.2042, 0.52 ) }
    dend_13 { pt3dadd( 0.796725, 49.7355, 17.7246, 0.52 ) }
    dend_13 { pt3dadd( 1.94286, 49.4304, 18.7171, 0.52 ) }
    dend_13 { pt3dadd( 2.88805, 48.9708, 19.5984, 0.52 ) }
    dend_13 { pt3dadd( 3.76515, 48.398, 20.3905, 0.52 ) }
    dend_13 { pt3dadd( 4.42875, 47.9016, 20.9646, 0.52 ) }
    dend_13 { pt3dadd( 5.24161, 47.3139, 21.6569, 0.52 ) }
    dend_13 { pt3dadd( 5.83127, 46.9205, 22.1437, 0.52 ) }
    dend_13 { pt3dadd( 6.52914, 46.4993, 22.6397, 0.52 ) }
    dend_13 { pt3dadd( 7.16131, 46.1421, 23.0576, 0.52 ) }
    dend_13 { pt3dadd( 7.67018, 45.8893, 23.3897, 0.52 ) }
    dend_13 { pt3dadd( 9.33545, 45.1227, 24.5573, 0.52 ) }
    dend_13 { pt3dadd( 10.446, 44.6144, 25.4111, 0.52 ) }
    dend_13 { pt3dadd( 11.2439, 44.2241, 26.0469, 0.52 ) }
    dend_13 { pt3dadd( 11.9717, 43.8131, 26.7235, 0.52 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 51/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -9.8519, 47.2567, 3.37384, 0.88 ) }
    dend_2 { pt3dadd( -11.2796, 47.9878, 4.633, 0.88 ) }
    dend_2 { pt3dadd( -12.4294, 48.6222, 5.55303, 0.88 ) }
    dend_2 { pt3dadd( -13.6977, 49.3789, 6.45543, 0.81 ) }
    dend_2 { pt3dadd( -14.6268, 49.9406, 7.01907, 0.81 ) }
    dend_2 { pt3dadd( -16.0138, 50.7567, 7.82371, 0.81 ) }
    dend_2 { pt3dadd( -16.9039, 51.2804, 8.34007, 0.81 ) }
    dend_2 { pt3dadd( -17.8922, 51.8574, 8.82551, 0.81 ) }
    dend_2 { pt3dadd( -18.9121, 52.4499, 9.24339, 0.81 ) }
    dend_2 { pt3dadd( -20.235, 53.2162, 9.65514, 0.81 ) }
    dend_2 { pt3dadd( -21.3476, 53.9049, 9.97521, 0.81 ) }
    // Section: dend_91, id: dend_91, parent: dend_89 (entry count 62/100)
    dend_91 { pt3dclear() }
    dend_91 { pt3dadd( 32.0449, -64.4969, 12.6593, 0.37 ) }
    dend_91 { pt3dadd( 34.7719, -64.0702, 16.2559, 0.37 ) }
    dend_91 { pt3dadd( 35.1293, -64.0968, 16.713, 0.37 ) }
    dend_91 { pt3dadd( 35.8771, -64.2535, 17.5788, 0.37 ) }
    dend_91 { pt3dadd( 36.5842, -64.4253, 18.3263, 0.37 ) }
    dend_91 { pt3dadd( 37.9761, -64.7474, 19.6848, 0.37 ) }
    dend_91 { pt3dadd( 39.0394, -64.9599, 20.6294, 0.37 ) }
    dend_91 { pt3dadd( 40.3969, -65.3136, 21.4468, 0.37 ) }
    dend_91 { pt3dadd( 41.223, -65.55, 21.9289, 0.37 ) }
    dend_91 { pt3dadd( 41.7385, -65.7234, 22.3254, 0.37 ) }
    dend_91 { pt3dadd( 42.2522, -65.8963, 22.7203, 0.37 ) }
    dend_91 { pt3dadd( 43.0913, -66.1108, 23.3274, 0.37 ) }
    dend_91 { pt3dadd( 44.6007, -66.3385, 24.4859, 0.37 ) }
    dend_91 { pt3dadd( 45.1893, -66.4037, 24.9612, 0.37 ) }
    dend_91 { pt3dadd( 47.8105, -66.8458, 27.5554, 0.37 ) }
    // Section: dend_90, id: dend_90, parent: dend_89 (entry count 77/100)
    dend_90 { pt3dclear() }
    dend_90 { pt3dadd( 32.0449, -64.4969, 12.6593, 0.37 ) }
    dend_90 { pt3dadd( 34.0516, -64.9568, 12.2747, 0.37 ) }
    dend_90 { pt3dadd( 35.4987, -65.2574, 12.093, 0.37 ) }
    dend_90 { pt3dadd( 36.5227, -65.4681, 12.0101, 0.37 ) }
    dend_90 { pt3dadd( 38.0127, -65.818, 11.9294, 0.37 ) }
    dend_90 { pt3dadd( 38.8776, -66.0437, 11.8812, 0.37 ) }
    dend_90 { pt3dadd( 39.7097, -66.2995, 11.8365, 0.37 ) }
    dend_90 { pt3dadd( 40.7334, -66.6945, 11.7301, 0.37 ) }
    dend_90 { pt3dadd( 41.6965, -67.1668, 11.6807, 0.37 ) }
    dend_90 { pt3dadd( 42.5169, -67.6955, 11.6695, 0.37 ) }
    dend_90 { pt3dadd( 43.0117, -68.0976, 11.667, 0.37 ) }
    dend_90 { pt3dadd( 44.1142, -69.1434, 11.5874, 0.37 ) }
    dend_90 { pt3dadd( 44.996, -70.0508, 11.4432, 0.37 ) }
    dend_90 { pt3dadd( 45.6088, -70.7004, 11.1788, 0.37 ) }
    dend_90 { pt3dadd( 46.4981, -71.6406, 10.6496, 0.37 ) }
    dend_90 { pt3dadd( 47.4892, -72.674, 9.94915, 0.37 ) }
    dend_90 { pt3dadd( 48.744, -73.9869, 8.96398, 0.37 ) }
    dend_90 { pt3dadd( 49.5532, -74.8267, 8.19756, 0.37 ) }
    dend_90 { pt3dadd( 51.7866, -77.107, 5.83935, 0.37 ) }
    dend_90 { pt3dadd( 52.1304, -77.4425, 5.43789, 0.37 ) }
    dend_90 { pt3dadd( 52.5193, -77.8147, 4.94848, 0.37 ) }
    dend_90 { pt3dadd( 53.0596, -78.3618, 4.22866, 0.37 ) }
    dend_90 { pt3dadd( 53.9318, -79.3853, 2.98927, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_90 { pt3dadd( 54.2439, -79.839, 2.53066, 0.37 ) }
    dend_90 { pt3dadd( 55.0204, -81.1426, 1.52493, 0.37 ) }
    dend_90 { pt3dadd( 55.351, -81.7057, 1.05087, 0.37 ) }
    dend_90 { pt3dadd( 55.7753, -82.404, 0.454582, 0.37 ) }
    dend_90 { pt3dadd( 56.4121, -83.4709, -0.412794, 0.37 ) }
    dend_90 { pt3dadd( 56.9689, -84.4009, -1.11486, 0.37 ) }
    dend_90 { pt3dadd( 57.3403, -85.0179, -1.56388, 0.37 ) }
    dend_90 { pt3dadd( 58.3127, -86.7191, -2.74963, 0.37 ) }
    dend_90 { pt3dadd( 58.926, -87.8217, -3.51575, 0.37 ) }
    dend_90 { pt3dadd( 59.2263, -88.3809, -3.89452, 0.37 ) }
    dend_90 { pt3dadd( 59.9049, -89.6995, -4.72121, 0.37 ) }
    dend_90 { pt3dadd( 60.3247, -90.5323, -5.21066, 0.37 ) }
    dend_90 { pt3dadd( 60.9007, -91.7147, -5.94606, 0.37 ) }
    dend_90 { pt3dadd( 61.2936, -92.4862, -6.46385, 0.37 ) }
    dend_90 { pt3dadd( 61.5809, -92.9202, -6.8713, 0.37 ) }
    dend_90 { pt3dadd( 61.7969, -93.1415, -7.18165, 0.37 ) }
    dend_90 { pt3dadd( 62.2199, -93.4368, -7.7556, 0.37 ) }
    dend_90 { pt3dadd( 63.2463, -93.9014, -9.01619, 0.37 ) }
    dend_90 { pt3dadd( 64.2025, -94.188, -10.0506, 0.37 ) }
    dend_90 { pt3dadd( 65.2297, -94.4179, -11.084, 0.37 ) }
    dend_90 { pt3dadd( 66.5037, -94.727, -12.3513, 0.37 ) }
    dend_90 { pt3dadd( 67.0026, -94.8748, -12.8513, 0.37 ) }
    dend_90 { pt3dadd( 67.6633, -95.085, -13.5043, 0.37 ) }
    dend_90 { pt3dadd( 68.0988, -95.2205, -13.8867, 0.37 ) }
    dend_90 { pt3dadd( 69.0486, -95.5407, -14.6807, 0.37 ) }
    dend_90 { pt3dadd( 70.2817, -96.0288, -15.7254, 0.37 ) }
    dend_90 { pt3dadd( 71.498, -96.5829, -16.7577, 0.37 ) }
    dend_90 { pt3dadd( 72.2507, -96.9617, -17.4472, 0.37 ) }
    dend_90 { pt3dadd( 72.9043, -97.3211, -18.0528, 0.37 ) }
    dend_90 { pt3dadd( 74.1426, -97.9871, -19.1732, 0.37 ) }
    dend_90 { pt3dadd( 75.2809, -98.5706, -20.1197, 0.37 ) }
    dend_90 { pt3dadd( 75.8626, -98.8578, -20.5795, 0.37 ) }
    dend_90 { pt3dadd( 76.7781, -99.3673, -21.36, 0.37 ) }
    dend_90 { pt3dadd( 77.4611, -99.7904, -21.9781, 0.37 ) }
    dend_90 { pt3dadd( 78.3578, -100.378, -22.8981, 0.37 ) }
    dend_90 { pt3dadd( 78.8877, -100.72, -23.4351, 0.37 ) }
    dend_90 { pt3dadd( 79.7649, -101.34, -24.3377, 0.37 ) }
    dend_90 { pt3dadd( 80.6758, -102.073, -25.3454, 0.37 ) }
    dend_90 { pt3dadd( 80.9257, -102.295, -25.6116, 0.37 ) }
    dend_90 { pt3dadd( 82.0237, -103.34, -26.7708, 0.37 ) }
    dend_90 { pt3dadd( 82.7971, -104.113, -27.5955, 0.37 ) }
    dend_90 { pt3dadd( 83.7029, -105.002, -28.602, 0.37 ) }
    dend_90 { pt3dadd( 84.4454, -105.717, -29.5203, 0.37 ) }
    dend_90 { pt3dadd( 85.2798, -106.5, -30.6049, 0.37 ) }
    dend_90 { pt3dadd( 85.8731, -107.055, -31.4806, 0.37 ) }
    dend_90 { pt3dadd( 87.2542, -108.373, -33.6404, 0.37 ) }
    dend_90 { pt3dadd( 88.1007, -109.168, -35.0067, 0.37 ) }
    dend_90 { pt3dadd( 89.6248, -110.548, -37.5084, 0.37 ) }
    dend_90 { pt3dadd( 90.0285, -110.885, -38.1959, 0.37 ) }
    dend_90 { pt3dadd( 91.6499, -112.105, -40.9941, 0.37 ) }
    dend_90 { pt3dadd( 92.2949, -112.528, -42.0439, 0.37 ) }
    dend_90 { pt3dadd( 92.8322, -112.822, -42.8373, 0.37 ) }
    dend_90 { pt3dadd( 94.4625, -113.567, -45.067, 0.37 ) }
    dend_90 { pt3dadd( 96.5814, -114.31, -47.655, 0.37 ) }
    dend_90 { pt3dadd( 97.3868, -114.527, -48.5278, 0.37 ) }
    dend_90 { pt3dadd( 98.9827, -114.826, -49.9939, 0.37 ) }
    dend_90 { pt3dadd( 99.7249, -114.918, -50.6858, 0.37 ) }
    dend_90 { pt3dadd( 101.29, -115.056, -51.9695, 0.37 ) }
    dend_90 { pt3dadd( 102.54, -115.122, -52.7747, 0.37 ) }
    dend_90 { pt3dadd( 104.796, -115.217, -53.9197, 0.37 ) }
    dend_90 { pt3dadd( 105.523, -115.249, -54.276, 0.37 ) }
    dend_90 { pt3dadd( 109.678, -115.517, -56.4969, 0.37 ) }
    dend_90 { pt3dadd( 111.937, -115.719, -57.794, 0.37 ) }
    dend_90 { pt3dadd( 112.903, -115.814, -58.3543, 0.37 ) }
    dend_90 { pt3dadd( 113.65, -115.916, -58.9644, 0.37 ) }
    dend_90 { pt3dadd( 115.533, -116.298, -60.9563, 0.37 ) }
    dend_90 { pt3dadd( 117.525, -116.895, -63.5068, 0.37 ) }
    dend_90 { pt3dadd( 117.874, -117.039, -64.0768, 0.37 ) }
    dend_90 { pt3dadd( 118.475, -117.346, -65.3037, 0.37 ) }
    dend_90 { pt3dadd( 120.445, -118.554, -70.2245, 0.37 ) }
    dend_90 { pt3dadd( 121.284, -119.157, -72.5147, 0.37 ) }
    dend_90 { pt3dadd( 122.384, -120.053, -75.6722, 0.37 ) }
    dend_90 { pt3dadd( 123.767, -121.325, -79.7693, 0.37 ) }
    dend_90 { pt3dadd( 124.748, -122.373, -82.687, 0.37 ) }
    dend_90 { pt3dadd( 126.179, -124.201, -86.9862, 0.37 ) }
    dend_90 { pt3dadd( 126.755, -125.048, -88.5528, 0.37 ) }
    dend_90 { pt3dadd( 127.119, -125.634, -89.4663, 0.37 ) }
    dend_90 { pt3dadd( 127.949, -127.043, -91.2238, 0.37 ) }
    dend_90 { pt3dadd( 128.908, -128.673, -92.8547, 0.37 ) }
    dend_90 { pt3dadd( 130.465, -131.192, -94.995, 0.37 ) }
    dend_90 { pt3dadd( 131.5, -132.732, -96.1018, 0.37 ) }
    dend_90 { pt3dadd( 133.907, -135.864, -98.5196, 0.37 ) }
    dend_90 { pt3dadd( 135.062, -137.176, -99.5918, 0.37 ) }
    dend_90 { pt3dadd( 135.818, -137.938, -100.21, 0.37 ) }
    dend_90 { pt3dadd( 137.192, -139.194, -101.14, 0.37 ) }
    dend_90 { pt3dadd( 139.243, -140.975, -102.278, 0.37 ) }
    dend_90 { pt3dadd( 143.037, -144.234, -104.046, 0.37 ) }
    dend_90 { pt3dadd( 146.395, -147.11, -105.483, 0.37 ) }
    dend_90 { pt3dadd( 147.943, -148.448, -106.165, 0.37 ) }
    dend_90 { pt3dadd( 151.766, -151.839, -107.864, 0.37 ) }
    dend_90 { pt3dadd( 153.668, -153.59, -108.693, 0.37 ) }
    dend_90 { pt3dadd( 156.973, -156.711, -109.914, 0.37 ) }
    // Section: dend_78, id: dend_78, parent: dend_76 (entry count 92/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 34.6614, -44.3741, 5.93624, 0.44 ) }
    dend_78 { pt3dadd( 35.3456, -44.3429, 6.51038, 0.44 ) }
    dend_78 { pt3dadd( 36.3919, -44.2952, 7.38829, 0.44 ) }
    dend_78 { pt3dadd( 37.3004, -44.2538, 8.15071, 0.44 ) }
    dend_78 { pt3dadd( 37.9375, -44.2248, 8.68529, 0.44 ) }
    // Section: dend_77, id: dend_77, parent: dend_76 (entry count 97/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 34.6614, -44.3741, 5.93624, 0.44 ) }
    dend_77 { pt3dadd( 35.1317, -43.2422, 5.96891, 0.44 ) }
    dend_77 { pt3dadd( 35.4412, -42.4973, 5.99042, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_77 { pt3dadd( 35.8608, -41.4873, 6.01957, 0.44 ) }
    // Section: dend_74, id: dend_74, parent: dend_72 (entry count 1/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( -49.7418, -155.581, -71.1465, 0.52 ) }
    dend_74 { pt3dadd( -49.305, -157.038, -71.331, 0.52 ) }
    dend_74 { pt3dadd( -49.1165, -157.789, -71.4021, 0.52 ) }
    dend_74 { pt3dadd( -48.8993, -158.893, -71.6516, 0.52 ) }
    dend_74 { pt3dadd( -48.6814, -160.263, -72.0121, 0.52 ) }
    dend_74 { pt3dadd( -48.5356, -161.36, -72.3004, 0.52 ) }
    dend_74 { pt3dadd( -48.3831, -162.729, -72.7072, 0.52 ) }
    dend_74 { pt3dadd( -48.3116, -163.893, -73.05, 0.52 ) }
    dend_74 { pt3dadd( -48.2233, -166.64, -74.0684, 0.44 ) }
    dend_74 { pt3dadd( -48.1962, -167.698, -74.5164, 0.44 ) }
    dend_74 { pt3dadd( -48.1629, -169.208, -75.221, 0.44 ) }
    dend_74 { pt3dadd( -48.1475, -171.171, -76.2609, 0.44 ) }
    dend_74 { pt3dadd( -48.1648, -173.083, -77.3582, 0.44 ) }
    dend_74 { pt3dadd( -48.2201, -175.72, -79.052, 0.44 ) }
    dend_74 { pt3dadd( -48.2389, -176.405, -79.5513, 0.44 ) }
    dend_74 { pt3dadd( -48.271, -177.14, -80.1474, 0.44 ) }
    dend_74 { pt3dadd( -48.3646, -178.603, -81.393, 0.44 ) }
    dend_74 { pt3dadd( -48.4411, -179.359, -82.0882, 0.44 ) }
    dend_74 { pt3dadd( -48.7078, -181.393, -84.0167, 0.44 ) }
    dend_74 { pt3dadd( -48.9895, -183.285, -85.6927, 0.44 ) }
    dend_74 { pt3dadd( -49.1829, -184.371, -86.5534, 0.44 ) }
    dend_74 { pt3dadd( -49.3851, -185.364, -87.2397, 0.44 ) }
    dend_74 { pt3dadd( -50.1399, -188.215, -88.9294, 0.44 ) }
    dend_74 { pt3dadd( -50.5028, -189.318, -89.492, 0.44 ) }
    dend_74 { pt3dadd( -50.9451, -190.465, -89.9861, 0.44 ) }
    dend_74 { pt3dadd( -51.9026, -192.856, -90.8667, 0.44 ) }
    dend_74 { pt3dadd( -52.304, -193.853, -91.1933, 0.44 ) }
    dend_74 { pt3dadd( -53.4247, -196.665, -91.9296, 0.44 ) }
    dend_74 { pt3dadd( -54.0275, -198.225, -92.2288, 0.44 ) }
    dend_74 { pt3dadd( -54.8067, -200.292, -92.5914, 0.44 ) }
    dend_74 { pt3dadd( -55.7281, -202.845, -92.8769, 0.44 ) }
    dend_74 { pt3dadd( -56.5741, -205.346, -92.9998, 0.44 ) }
    dend_74 { pt3dadd( -57.5918, -208.557, -92.9551, 0.44 ) }
    dend_74 { pt3dadd( -58.0929, -210.283, -92.8062, 0.44 ) }
    dend_74 { pt3dadd( -58.6067, -212.09, -92.5703, 0.44 ) }
    dend_74 { pt3dadd( -59.3869, -214.824, -92.0802, 0.44 ) }
    dend_74 { pt3dadd( -59.9812, -216.865, -91.6457, 0.44 ) }
    dend_74 { pt3dadd( -60.4138, -218.391, -91.2588, 0.44 ) }
    dend_74 { pt3dadd( -60.8582, -219.99, -90.7759, 0.44 ) }
    dend_74 { pt3dadd( -61.2302, -221.329, -90.3491, 0.44 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 41/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -49.7418, -155.581, -71.1465, 0.52 ) }
    dend_73 { pt3dadd( -50.6824, -156.26, -72.1225, 0.52 ) }
    dend_73 { pt3dadd( -53.1895, -158.303, -75.1891, 0.52 ) }
    dend_73 { pt3dadd( -53.8897, -158.939, -76.0848, 0.52 ) }
    dend_73 { pt3dadd( -54.428, -159.479, -76.8118, 0.52 ) }
    dend_73 { pt3dadd( -54.7145, -159.78, -77.2114, 0.52 ) }
    dend_73 { pt3dadd( -55.1884, -160.285, -77.9094, 0.52 ) }
    dend_73 { pt3dadd( -56.8482, -162.124, -80.3984, 0.52 ) }
    dend_73 { pt3dadd( -57.2733, -162.628, -81.0071, 0.52 ) }
    dend_73 { pt3dadd( -57.7188, -163.154, -81.6591, 0.52 ) }
    dend_73 { pt3dadd( -58.7313, -164.315, -83.0892, 0.52 ) }
    dend_73 { pt3dadd( -60.1418, -165.981, -84.995, 0.52 ) }
    dend_73 { pt3dadd( -60.8027, -166.827, -85.9164, 0.52 ) }
    dend_73 { pt3dadd( -61.3064, -167.509, -86.5708, 0.52 ) }
    dend_73 { pt3dadd( -62.3843, -169.119, -88.0187, 0.52 ) }
    dend_73 { pt3dadd( -62.771, -169.76, -88.5364, 0.52 ) }
    dend_73 { pt3dadd( -63.2884, -170.82, -89.3011, 0.52 ) }
    dend_73 { pt3dadd( -64.1422, -172.975, -90.7017, 0.52 ) }
    dend_73 { pt3dadd( -64.5357, -174.151, -91.4313, 0.52 ) }
    dend_73 { pt3dadd( -64.8342, -175.16, -91.996, 0.52 ) }
    dend_73 { pt3dadd( -65.1381, -176.226, -92.5998, 0.52 ) }
    dend_73 { pt3dadd( -65.5684, -177.565, -93.3821, 0.52 ) }
    dend_73 { pt3dadd( -65.7961, -178.157, -93.7255, 0.52 ) }
    dend_73 { pt3dadd( -66.3371, -179.379, -94.3741, 0.52 ) }
    dend_73 { pt3dadd( -66.8965, -180.491, -94.9738, 0.52 ) }
    dend_73 { pt3dadd( -68.4706, -183.169, -96.3564, 0.52 ) }
    dend_73 { pt3dadd( -69.1328, -184.106, -96.8704, 0.52 ) }
    dend_73 { pt3dadd( -69.6081, -184.65, -97.1757, 0.52 ) }
    dend_73 { pt3dadd( -70.3337, -185.361, -97.6797, 0.52 ) }
    dend_73 { pt3dadd( -71.1087, -186.018, -98.3056, 0.52 ) }
    dend_73 { pt3dadd( -72.4561, -187.013, -99.4164, 0.52 ) }
    dend_73 { pt3dadd( -74.0109, -188.046, -100.661, 0.52 ) }
    dend_73 { pt3dadd( -75.1697, -188.778, -101.712, 0.52 ) }
    dend_73 { pt3dadd( -77.0727, -190.02, -103.525, 0.52 ) }
    dend_73 { pt3dadd( -79.2836, -191.469, -105.657, 0.52 ) }
    dend_73 { pt3dadd( -80.0334, -191.984, -106.471, 0.52 ) }
    dend_73 { pt3dadd( -80.7244, -192.509, -107.268, 0.52 ) }
    dend_73 { pt3dadd( -82.6537, -194.172, -109.547, 0.52 ) }
    dend_73 { pt3dadd( -83.7533, -195.282, -110.93, 0.52 ) }
    dend_73 { pt3dadd( -84.2526, -195.949, -111.583, 0.52 ) }
    dend_73 { pt3dadd( -85.8514, -199.115, -114.049, 0.52 ) }
    dend_73 { pt3dadd( -86.286, -200.473, -114.931, 0.52 ) }
    dend_73 { pt3dadd( -86.4546, -201.503, -115.349, 0.52 ) }
    dend_73 { pt3dadd( -86.4915, -202.746, -115.522, 0.52 ) }
    dend_73 { pt3dadd( -86.3996, -205.446, -115.314, 0.52 ) }
    dend_73 { pt3dadd( -86.3338, -207.131, -114.915, 0.52 ) }
    dend_73 { pt3dadd( -86.305, -208.437, -114.49, 0.52 ) }
    dend_73 { pt3dadd( -86.3491, -212.336, -112.931, 0.52 ) }
    dend_73 { pt3dadd( -86.44, -213.704, -112.325, 0.52 ) }
    dend_73 { pt3dadd( -86.6954, -215.887, -111.315, 0.52 ) }
    dend_73 { pt3dadd( -86.9816, -217.56, -110.476, 0.52 ) }
    dend_73 { pt3dadd( -87.4061, -219.701, -109.382, 0.52 ) }
    dend_73 { pt3dadd( -88.0003, -222.364, -108.135, 0.52 ) }
    dend_73 { pt3dadd( -88.5519, -224.506, -107.512, 0.52 ) }
    dend_73 { pt3dadd( -89.0475, -226.477, -106.953, 0.52 ) }
    // Section: dend_67, id: dend_67, parent: dend_31 (entry count 96/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 6.82916, -82.9673, 6.37855, 0.66 ) }
    dend_67 { pt3dadd( 5.82762, -84.3132, 6.1636, 0.66 ) }
    dend_67 { pt3dadd( 5.12622, -85.0611, 6.15381, 0.66 ) }
    dend_67 { pt3dadd( 4.3008, -85.8597, 6.21193, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_67 { pt3dadd( 3.53717, -86.5737, 6.28369, 0.66 ) }
    dend_67 { pt3dadd( 2.20158, -87.7739, 6.49969, 0.66 ) }
    dend_67 { pt3dadd( 1.2258, -88.6079, 6.68669, 0.66 ) }
    dend_67 { pt3dadd( -0.495822, -89.9282, 7.08943, 0.66 ) }
    dend_67 { pt3dadd( -1.86992, -90.8996, 7.49243, 0.66 ) }
    dend_67 { pt3dadd( -2.6019, -91.3758, 7.72708, 0.66 ) }
    dend_67 { pt3dadd( -3.88707, -92.1734, 8.19644, 0.66 ) }
    dend_67 { pt3dadd( -4.95027, -92.8368, 8.66755, 0.66 ) }
    dend_67 { pt3dadd( -5.65056, -93.3002, 8.9861, 0.66 ) }
    dend_67 { pt3dadd( -6.8011, -94.1042, 9.42521, 0.66 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 10/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 6.82916, -82.9673, 6.37855, 0.81 ) }
    dend_32 { pt3dadd( 6.84533, -84.758, 6.35918, 0.81 ) }
    dend_32 { pt3dadd( 6.85127, -86.4004, 6.31987, 0.81 ) }
    dend_32 { pt3dadd( 6.83916, -88.5448, 6.25959, 0.81 ) }
    dend_32 { pt3dadd( 6.82657, -89.6088, 6.22893, 0.81 ) }
    dend_32 { pt3dadd( 6.82692, -91.1896, 6.18433, 0.81 ) }
    dend_32 { pt3dadd( 6.86174, -93.0084, 6.13608, 0.81 ) }
    dend_32 { pt3dadd( 6.88212, -94.8936, 6.08048, 0.81 ) }
    dend_32 { pt3dadd( 6.90491, -96.6642, 6.02377, 0.81 ) }
    dend_32 { pt3dadd( 6.9357, -98.0981, 5.99692, 0.81 ) }
    dend_32 { pt3dadd( 6.98299, -99.4774, 5.9917, 0.81 ) }
    dend_32 { pt3dadd( 7.0703, -101.502, 6.0178, 0.81 ) }
    dend_32 { pt3dadd( 7.15071, -103.089, 6.06526, 0.81 ) }
    dend_32 { pt3dadd( 7.20058, -104.045, 6.10005, 0.81 ) }
    dend_32 { pt3dadd( 7.26384, -105.152, 6.14915, 0.81 ) }
    dend_32 { pt3dadd( 7.33298, -106.678, 6.2316, 0.81 ) }
    dend_32 { pt3dadd( 7.33706, -108.031, 6.32246, 0.81 ) }
    // Section: dend_27, id: dend_27, parent: dend_17 (entry count 27/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -0.503434, 80.0891, -5.75242, 0.52 ) }
    dend_27 { pt3dadd( 1.17486, 80.3371, -5.92666, 0.52 ) }
    dend_27 { pt3dadd( 2.37331, 80.5647, -6.02372, 0.52 ) }
    dend_27 { pt3dadd( 3.01179, 80.7042, -6.06325, 0.52 ) }
    dend_27 { pt3dadd( 3.96199, 80.9076, -6.10452, 0.52 ) }
    dend_27 { pt3dadd( 4.90633, 81.1009, -6.22039, 0.52 ) }
    dend_27 { pt3dadd( 5.71551, 81.2465, -6.35388, 0.52 ) }
    dend_27 { pt3dadd( 6.71212, 81.3805, -6.57202, 0.52 ) }
    dend_27 { pt3dadd( 7.93883, 81.4828, -6.85747, 0.52 ) }
    dend_27 { pt3dadd( 8.60157, 81.5025, -7.009, 0.52 ) }
    dend_27 { pt3dadd( 10.6376, 81.4581, -7.45694, 0.52 ) }
    dend_27 { pt3dadd( 11.5269, 81.3688, -7.6309, 0.52 ) }
    dend_27 { pt3dadd( 12.7497, 81.1417, -7.87657, 0.52 ) }
    dend_27 { pt3dadd( 14.3418, 80.7493, -8.17529, 0.52 ) }
    dend_27 { pt3dadd( 15.1824, 80.5124, -8.30702, 0.52 ) }
    dend_27 { pt3dadd( 15.9778, 80.2896, -8.39158, 0.52 ) }
    dend_27 { pt3dadd( 17.0578, 79.9955, -8.43066, 0.52 ) }
    dend_27 { pt3dadd( 18.1912, 79.7166, -8.48411, 0.52 ) }
    dend_27 { pt3dadd( 19.2227, 79.4939, -8.54074, 0.52 ) }
    dend_27 { pt3dadd( 20.1994, 79.303, -8.63833, 0.52 ) }
    dend_27 { pt3dadd( 21.3598, 79.095, -8.73468, 0.52 ) }
    dend_27 { pt3dadd( 22.3713, 78.9513, -8.79522, 0.52 ) }
    dend_27 { pt3dadd( 22.9697, 78.9083, -8.81463, 0.52 ) }
    dend_27 { pt3dadd( 24.1437, 78.8863, -8.81463, 0.52 ) }
    dend_27 { pt3dadd( 25.3278, 78.9087, -8.81463, 0.52 ) }
    dend_27 { pt3dadd( 26.5314, 78.9623, -8.81463, 0.52 ) }
    dend_27 { pt3dadd( 27.5123, 79.0016, -8.88605, 0.52 ) }
    dend_27 { pt3dadd( 28.6537, 79.0306, -9.04341, 0.52 ) }
    dend_27 { pt3dadd( 29.358, 79.0566, -9.17941, 0.52 ) }
    dend_27 { pt3dadd( 29.8536, 79.0975, -9.29935, 0.52 ) }
    dend_27 { pt3dadd( 30.7221, 79.1799, -9.5253, 0.52 ) }
    dend_27 { pt3dadd( 32.7321, 79.3301, -10.2131, 0.52 ) }
    dend_27 { pt3dadd( 33.4236, 79.36, -10.4816, 0.52 ) }
    dend_27 { pt3dadd( 34.2452, 79.3918, -10.8152, 0.52 ) }
    dend_27 { pt3dadd( 35.4608, 79.5176, -11.299, 0.52 ) }
    dend_27 { pt3dadd( 36.4214, 79.6935, -11.6514, 0.52 ) }
    dend_27 { pt3dadd( 38.0123, 80.0981, -12.1443, 0.52 ) }
    dend_27 { pt3dadd( 38.7836, 80.3368, -12.3116, 0.52 ) }
    dend_27 { pt3dadd( 39.4609, 80.5585, -12.4475, 0.52 ) }
    dend_27 { pt3dadd( 40.4648, 80.8378, -12.6243, 0.52 ) }
    dend_27 { pt3dadd( 41.1606, 80.9976, -12.7195, 0.52 ) }
    dend_27 { pt3dadd( 41.9576, 81.1465, -12.7827, 0.52 ) }
    dend_27 { pt3dadd( 42.857, 81.2486, -12.7827, 0.52 ) }
    dend_27 { pt3dadd( 43.7668, 81.279, -12.8637, 0.52 ) }
    dend_27 { pt3dadd( 44.7443, 81.2041, -13.0146, 0.52 ) }
    dend_27 { pt3dadd( 45.655, 81.0745, -13.1858, 0.52 ) }
    dend_27 { pt3dadd( 46.7252, 80.8991, -13.4011, 0.52 ) }
    dend_27 { pt3dadd( 47.441, 80.7833, -13.6036, 0.52 ) }
    dend_27 { pt3dadd( 49.2954, 80.4915, -14.2136, 0.52 ) }
    dend_27 { pt3dadd( 50.9594, 80.2823, -14.8006, 0.52 ) }
    dend_27 { pt3dadd( 52.4816, 80.1734, -15.3436, 0.52 ) }
    dend_27 { pt3dadd( 53.5999, 80.1346, -15.7313, 0.52 ) }
    dend_27 { pt3dadd( 55.7047, 80.109, -16.4906, 0.52 ) }
    dend_27 { pt3dadd( 56.6202, 80.1049, -16.8113, 0.52 ) }
    dend_27 { pt3dadd( 57.5385, 80.1219, -17.0961, 0.52 ) }
    dend_27 { pt3dadd( 58.62, 80.1865, -17.4431, 0.52 ) }
    dend_27 { pt3dadd( 59.5565, 80.2661, -17.7266, 0.52 ) }
    dend_27 { pt3dadd( 61.1912, 80.4576, -18.2019, 0.52 ) }
    dend_27 { pt3dadd( 61.9367, 80.5455, -18.3834, 0.52 ) }
    dend_27 { pt3dadd( 63.0429, 80.6722, -18.6676, 0.52 ) }
    dend_27 { pt3dadd( 63.7657, 80.7458, -18.8531, 0.52 ) }
    dend_27 { pt3dadd( 64.8266, 80.8458, -19.1085, 0.52 ) }
    dend_27 { pt3dadd( 66.4976, 80.9969, -19.4551, 0.52 ) }
    dend_27 { pt3dadd( 67.4814, 81.1085, -19.6233, 0.52 ) }
    dend_27 { pt3dadd( 68.5602, 81.2631, -19.8374, 0.52 ) }
    dend_27 { pt3dadd( 69.2682, 81.3791, -19.9869, 0.52 ) }
    dend_27 { pt3dadd( 70.1217, 81.5611, -20.1563, 0.52 ) }
    dend_27 { pt3dadd( 70.8347, 81.714, -20.278, 0.52 ) }
    dend_27 { pt3dadd( 71.7161, 81.9063, -20.3882, 0.52 ) }
    dend_27 { pt3dadd( 72.6891, 82.1179, -20.5058, 0.52 ) }
    dend_27 { pt3dadd( 73.9454, 82.3719, -20.6432, 0.52 ) }
    dend_27 { pt3dadd( 75.5885, 82.6773, -20.793, 0.52 ) }
    dend_27 { pt3dadd( 76.6871, 82.8416, -20.8709, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_27 { pt3dadd( 77.9433, 82.973, -20.929, 0.52 ) }
    dend_27 { pt3dadd( 78.8237, 83.0355, -20.9446, 0.52 ) }
    dend_27 { pt3dadd( 79.9927, 83.1107, -20.9446, 0.52 ) }
    dend_27 { pt3dadd( 81.2066, 83.2086, -20.9446, 0.52 ) }
    dend_27 { pt3dadd( 82.0512, 83.3096, -20.9446, 0.52 ) }
    dend_27 { pt3dadd( 83.1294, 83.5198, -20.9834, 0.52 ) }
    dend_27 { pt3dadd( 83.931, 83.7263, -21.0395, 0.52 ) }
    dend_27 { pt3dadd( 84.671, 83.9492, -21.1161, 0.52 ) }
    dend_27 { pt3dadd( 85.5735, 84.2251, -21.2696, 0.52 ) }
    dend_27 { pt3dadd( 86.3414, 84.4603, -21.4403, 0.52 ) }
    dend_27 { pt3dadd( 87.5022, 84.7808, -21.7785, 0.52 ) }
    dend_27 { pt3dadd( 88.4428, 84.9762, -22.1049, 0.52 ) }
    dend_27 { pt3dadd( 89.0149, 85.0381, -22.3351, 0.52 ) }
    dend_27 { pt3dadd( 90.2269, 85.1079, -22.8448, 0.52 ) }
    dend_27 { pt3dadd( 90.8499, 85.1308, -23.1061, 0.52 ) }
    dend_27 { pt3dadd( 92.1438, 85.1691, -23.6249, 0.52 ) }
    dend_27 { pt3dadd( 93.0792, 85.1901, -23.9598, 0.52 ) }
    dend_27 { pt3dadd( 94.7801, 85.212, -24.5306, 0.52 ) }
    dend_27 { pt3dadd( 95.8286, 85.2291, -24.8552, 0.52 ) }
    dend_27 { pt3dadd( 96.6166, 85.2643, -25.068, 0.52 ) }
    dend_27 { pt3dadd( 97.1275, 85.3025, -25.2124, 0.52 ) }
    dend_27 { pt3dadd( 97.961, 85.4119, -25.4837, 0.52 ) }
    dend_27 { pt3dadd( 98.5208, 85.5323, -25.7241, 0.52 ) }
    dend_27 { pt3dadd( 99.5616, 85.8429, -26.398, 0.52 ) }
    dend_27 { pt3dadd( 100.382, 86.1456, -27.0769, 0.52 ) }
    dend_27 { pt3dadd( 101.323, 86.5602, -27.9458, 0.52 ) }
    dend_27 { pt3dadd( 102.357, 87.0437, -28.9389, 0.52 ) }
    dend_27 { pt3dadd( 103.37, 87.5088, -30.0112, 0.52 ) }
    dend_27 { pt3dadd( 104.756, 88.0571, -31.5998, 0.52 ) }
    dend_27 { pt3dadd( 105.202, 88.1901, -32.1751, 0.52 ) }
    dend_27 { pt3dadd( 105.832, 88.33, -33.0271, 0.52 ) }
    dend_27 { pt3dadd( 106.402, 88.4246, -33.785, 0.52 ) }
    dend_27 { pt3dadd( 107.635, 88.6138, -35.3613, 0.52 ) }
    dend_27 { pt3dadd( 109.024, 88.8291, -37.0379, 0.52 ) }
    dend_27 { pt3dadd( 110.995, 89.2387, -39.318, 0.52 ) }
    dend_27 { pt3dadd( 111.887, 89.5064, -40.378, 0.52 ) }
    dend_27 { pt3dadd( 112.187, 89.6299, -40.7265, 0.52 ) }
    dend_27 { pt3dadd( 112.894, 90.0106, -41.5117, 0.52 ) }
    dend_27 { pt3dadd( 113.449, 90.3585, -42.0411, 0.52 ) }
    dend_27 { pt3dadd( 114.714, 91.1692, -43.0456, 0.52 ) }
    dend_27 { pt3dadd( 116.312, 92.1406, -44.1702, 0.52 ) }
    dend_27 { pt3dadd( 117.15, 92.6071, -44.7533, 0.52 ) }
    dend_27 { pt3dadd( 118.918, 93.5072, -45.9284, 0.52 ) }
    dend_27 { pt3dadd( 119.952, 93.9927, -46.5817, 0.52 ) }
    dend_27 { pt3dadd( 121.165, 94.5603, -47.3599, 0.52 ) }
    dend_27 { pt3dadd( 122.537, 95.2099, -48.2713, 0.52 ) }
    dend_27 { pt3dadd( 124.371, 96.1357, -49.662, 0.52 ) }
    dend_27 { pt3dadd( 125.368, 96.6883, -50.4898, 0.52 ) }
    dend_27 { pt3dadd( 125.626, 96.8471, -50.7075, 0.52 ) }
    dend_27 { pt3dadd( 127.238, 97.9635, -52.1893, 0.52 ) }
    dend_27 { pt3dadd( 128.722, 99.1123, -53.5957, 0.52 ) }
    dend_27 { pt3dadd( 130.299, 100.484, -55.1485, 0.52 ) }
    dend_27 { pt3dadd( 131.1, 101.299, -56.0421, 0.52 ) }
    dend_27 { pt3dadd( 131.904, 102.212, -56.9897, 0.52 ) }
    dend_27 { pt3dadd( 133.004, 103.53, -58.3047, 0.52 ) }
    dend_27 { pt3dadd( 133.686, 104.4, -59.0931, 0.52 ) }
    dend_27 { pt3dadd( 134.974, 106.136, -60.551, 0.52 ) }
    dend_27 { pt3dadd( 136.243, 107.905, -62.1339, 0.52 ) }
    dend_27 { pt3dadd( 136.853, 108.807, -62.9819, 0.52 ) }
    dend_27 { pt3dadd( 137.875, 110.338, -64.4444, 0.52 ) }
    dend_27 { pt3dadd( 138.375, 111.071, -65.1408, 0.52 ) }
    dend_27 { pt3dadd( 138.987, 111.927, -65.9291, 0.52 ) }
    dend_27 { pt3dadd( 140.531, 113.981, -67.6294, 0.52 ) }
    dend_27 { pt3dadd( 141.289, 114.995, -68.3663, 0.52 ) }
    dend_27 { pt3dadd( 141.764, 115.669, -68.8084, 0.52 ) }
    dend_27 { pt3dadd( 143.224, 117.861, -70.1243, 0.52 ) }
    dend_27 { pt3dadd( 144.005, 119.073, -70.7899, 0.52 ) }
    dend_27 { pt3dadd( 144.561, 119.971, -71.2118, 0.52 ) }
    dend_27 { pt3dadd( 145.333, 121.273, -71.6966, 0.52 ) }
    dend_27 { pt3dadd( 145.808, 122.131, -72.0003, 0.52 ) }
    dend_27 { pt3dadd( 147.119, 124.831, -72.8383, 0.52 ) }
    dend_27 { pt3dadd( 147.882, 126.759, -73.2902, 0.52 ) }
    dend_27 { pt3dadd( 148.246, 127.852, -73.6175, 0.52 ) }
    dend_27 { pt3dadd( 148.458, 128.648, -73.8792, 0.52 ) }
    dend_27 { pt3dadd( 148.632, 129.482, -74.1588, 0.52 ) }
    dend_27 { pt3dadd( 148.821, 130.679, -74.5914, 0.52 ) }
    dend_27 { pt3dadd( 149.111, 133.025, -75.4306, 0.52 ) }
    dend_27 { pt3dadd( 149.579, 136.266, -76.798, 0.52 ) }
    dend_27 { pt3dadd( 149.848, 137.803, -77.4823, 0.52 ) }
    dend_27 { pt3dadd( 150.099, 139.014, -78.0694, 0.52 ) }
    dend_27 { pt3dadd( 150.743, 141.828, -79.5221, 0.52 ) }
    dend_27 { pt3dadd( 151.234, 143.83, -80.6499, 0.52 ) }
    dend_27 { pt3dadd( 151.963, 146.488, -82.2919, 0.52 ) }
    dend_27 { pt3dadd( 152.342, 147.702, -83.025, 0.52 ) }
    dend_27 { pt3dadd( 152.978, 149.42, -84.0936, 0.52 ) }
    dend_27 { pt3dadd( 153.445, 150.527, -84.7755, 0.52 ) }
    dend_27 { pt3dadd( 154.277, 152.155, -85.7204, 0.52 ) }
    dend_27 { pt3dadd( 155.956, 154.831, -87.1978, 0.52 ) }
    dend_27 { pt3dadd( 157.222, 156.525, -88.0096, 0.52 ) }
    dend_27 { pt3dadd( 158.464, 157.961, -88.6956, 0.52 ) }
    dend_27 { pt3dadd( 159.377, 158.891, -89.1629, 0.52 ) }
    dend_27 { pt3dadd( 160.982, 160.42, -90.1109, 0.52 ) }
    dend_27 { pt3dadd( 162.099, 161.492, -90.8957, 0.52 ) }
    dend_27 { pt3dadd( 162.629, 161.98, -91.2981, 0.52 ) }
    dend_27 { pt3dadd( 164.354, 163.6, -92.9099, 0.52 ) }
    dend_27 { pt3dadd( 165.827, 165.092, -94.6274, 0.52 ) }
    dend_27 { pt3dadd( 167.417, 166.927, -96.9683, 0.52 ) }
    dend_27 { pt3dadd( 168.369, 168.277, -98.8609, 0.52 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 98/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -0.503434, 80.0891, -5.75242, 0.81 ) }
    dend_18 { pt3dadd( -0.0412131, 81.0708, -5.83189, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_18 { pt3dadd( 0.361045, 82.0683, -5.93578, 0.81 ) }
    dend_18 { pt3dadd( 0.579018, 82.7685, -6.01367, 0.81 ) }
    dend_18 { pt3dadd( 0.776781, 83.6566, -6.11188, 0.81 ) }
    dend_18 { pt3dadd( 0.931295, 84.6279, -6.2129, 0.52 ) }
    dend_18 { pt3dadd( 1.03642, 85.4884, -6.33688, 0.59 ) }
    dend_18 { pt3dadd( 1.09686, 86.24, -6.51104, 0.59 ) }
    dend_18 { pt3dadd( 1.12912, 86.9778, -6.71711, 0.59 ) }
    dend_18 { pt3dadd( 1.15609, 87.6819, -6.92647, 0.59 ) }
    dend_18 { pt3dadd( 1.20823, 88.5727, -7.19705, 0.59 ) }
    dend_18 { pt3dadd( 1.34658, 90.0211, -7.62695, 0.59 ) }
    dend_18 { pt3dadd( 1.57428, 91.3801, -8.03914, 0.59 ) }
    dend_18 { pt3dadd( 1.86172, 92.4533, -8.37683, 0.59 ) }
    dend_18 { pt3dadd( 2.12709, 93.1982, -8.61814, 0.59 ) }
    dend_18 { pt3dadd( 2.37066, 93.7796, -8.80903, 0.59 ) }
    dend_18 { pt3dadd( 2.66038, 94.4098, -9.03417, 0.59 ) }
    dend_18 { pt3dadd( 3.15903, 95.4184, -9.38495, 0.59 ) }
    dend_18 { pt3dadd( 3.54474, 96.2067, -9.66043, 0.59 ) }
    dend_18 { pt3dadd( 3.87045, 96.9187, -9.92375, 0.59 ) }
    dend_18 { pt3dadd( 4.30186, 97.9364, -10.2843, 0.59 ) }
    dend_18 { pt3dadd( 4.70783, 98.9359, -10.6083, 0.59 ) }
    dend_18 { pt3dadd( 4.9991, 99.6296, -10.8315, 0.59 ) }
    dend_18 { pt3dadd( 5.33268, 100.476, -11.073, 0.59 ) }
    dend_18 { pt3dadd( 5.56738, 101.124, -11.2695, 0.59 ) }
    dend_18 { pt3dadd( 5.92618, 102.122, -11.6401, 0.59 ) }
    dend_18 { pt3dadd( 6.15406, 102.734, -11.8984, 0.59 ) }
    dend_18 { pt3dadd( 6.60243, 103.892, -12.4172, 0.59 ) }
    dend_18 { pt3dadd( 6.96276, 104.801, -12.8574, 0.59 ) }
    dend_18 { pt3dadd( 7.34502, 105.76, -13.304, 0.59 ) }
    dend_18 { pt3dadd( 7.85133, 107.038, -13.9335, 0.59 ) }
    dend_18 { pt3dadd( 8.03643, 107.533, -14.1865, 0.59 ) }
    dend_18 { pt3dadd( 8.36558, 108.447, -14.6424, 0.59 ) }
    dend_18 { pt3dadd( 8.74496, 109.542, -15.1144, 0.59 ) }
    dend_18 { pt3dadd( 9.35108, 111.143, -15.7287, 0.59 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 33/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 11.9717, 43.8131, 26.7235, 0.52 ) }
    dend_15 { pt3dadd( 12.8018, 44.4232, 27.3345, 0.52 ) }
    dend_15 { pt3dadd( 13.5275, 44.9202, 27.7937, 0.52 ) }
    dend_15 { pt3dadd( 14.2483, 45.4486, 28.2786, 0.52 ) }
    dend_15 { pt3dadd( 15.0148, 46.0853, 28.8191, 0.52 ) }
    dend_15 { pt3dadd( 16.2803, 47.3352, 29.8556, 0.52 ) }
    dend_15 { pt3dadd( 16.8794, 48.0515, 30.4078, 0.52 ) }
    dend_15 { pt3dadd( 17.4258, 48.8862, 31.0087, 0.52 ) }
    dend_15 { pt3dadd( 18.1703, 50.2287, 31.8103, 0.52 ) }
    dend_15 { pt3dadd( 18.519, 51.002, 32.1727, 0.52 ) }
    dend_15 { pt3dadd( 19.0199, 52.3878, 32.6734, 0.52 ) }
    dend_15 { pt3dadd( 19.3223, 53.5124, 32.9722, 0.52 ) }
    dend_15 { pt3dadd( 19.4657, 54.2507, 33.1536, 0.52 ) }
    dend_15 { pt3dadd( 19.6208, 55.4354, 33.3775, 0.52 ) }
    dend_15 { pt3dadd( 19.7131, 55.9793, 33.3942, 0.52 ) }
    dend_15 { pt3dadd( 20.0147, 56.9309, 33.3205, 0.52 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 49/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 11.9717, 43.8131, 26.7235, 0.52 ) }
    dend_14 { pt3dadd( 12.8757, 42.7177, 26.9895, 0.52 ) }
    dend_14 { pt3dadd( 13.8426, 41.347, 27.4495, 0.52 ) }
    dend_14 { pt3dadd( 14.339, 40.6007, 27.7587, 0.52 ) }
    dend_14 { pt3dadd( 14.7812, 39.9314, 28.1079, 0.52 ) }
    dend_14 { pt3dadd( 15.4345, 38.9242, 28.6561, 0.52 ) }
    dend_14 { pt3dadd( 16.2881, 37.5653, 29.3813, 0.52 ) }
    dend_14 { pt3dadd( 17.3601, 35.7883, 30.3551, 0.52 ) }
    dend_14 { pt3dadd( 18.0818, 34.493, 31.0148, 0.52 ) }
    dend_14 { pt3dadd( 18.9094, 32.9902, 31.7637, 0.52 ) }
    dend_14 { pt3dadd( 19.5292, 31.9445, 32.281, 0.52 ) }
    dend_14 { pt3dadd( 20.1384, 31.0391, 32.7073, 0.52 ) }
    dend_14 { pt3dadd( 20.7055, 30.3389, 32.9732, 0.52 ) }
    dend_14 { pt3dadd( 21.4444, 29.6199, 33.1607, 0.52 ) }
    dend_14 { pt3dadd( 22.2036, 29.0585, 33.234, 0.52 ) }
    dend_14 { pt3dadd( 22.9264, 28.6955, 33.234, 0.52 ) }
    dend_14 { pt3dadd( 23.9022, 28.4624, 33.234, 0.52 ) }
    dend_14 { pt3dadd( 24.6403, 28.3768, 33.234, 0.52 ) }
    dend_14 { pt3dadd( 25.6127, 28.3657, 33.234, 0.52 ) }
    dend_14 { pt3dadd( 26.3939, 28.4356, 33.234, 0.52 ) }
    dend_14 { pt3dadd( 27.2132, 28.5712, 33.234, 0.52 ) }
    dend_14 { pt3dadd( 28.3144, 28.8606, 33.234, 0.52 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 71/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -21.3476, 53.9049, 9.97521, 0.44 ) }
    dend_10 { pt3dadd( -23.283, 54.1502, 10.5493, 0.44 ) }
    dend_10 { pt3dadd( -24.1493, 54.2857, 10.7497, 0.44 ) }
    dend_10 { pt3dadd( -25.3529, 54.4913, 10.9894, 0.44 ) }
    dend_10 { pt3dadd( -26.3861, 54.683, 11.1693, 0.44 ) }
    dend_10 { pt3dadd( -27.9749, 54.9621, 11.4082, 0.44 ) }
    dend_10 { pt3dadd( -29.1662, 55.1323, 11.5659, 0.44 ) }
    dend_10 { pt3dadd( -30.553, 55.2707, 11.7182, 0.44 ) }
    dend_10 { pt3dadd( -30.9926, 55.3013, 11.7712, 0.44 ) }
    dend_10 { pt3dadd( -31.8231, 55.35, 11.8978, 0.44 ) }
    dend_10 { pt3dadd( -33.0099, 55.4586, 12.2227, 0.44 ) }
    dend_10 { pt3dadd( -33.9932, 55.54, 12.562, 0.44 ) }
    dend_10 { pt3dadd( -35.4539, 55.6107, 13.1794, 0.44 ) }
    dend_10 { pt3dadd( -36.2493, 55.6264, 13.5895, 0.44 ) }
    dend_10 { pt3dadd( -37.341, 55.6599, 14.2427, 0.44 ) }
    dend_10 { pt3dadd( -38.4404, 55.7426, 15.0641, 0.44 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 87/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -21.3476, 53.9049, 9.97521, 0.52 ) }
    dend_3 { pt3dadd( -22.9763, 54.439, 9.97521, 0.52 ) }
    dend_3 { pt3dadd( -23.9269, 54.7301, 9.97978, 0.52 ) }
    dend_3 { pt3dadd( -24.7139, 54.98, 10.0069, 0.52 ) }
    dend_3 { pt3dadd( -26.0252, 55.4403, 10.0708, 0.52 ) }
    dend_3 { pt3dadd( -26.9359, 55.7676, 10.1198, 0.52 ) }
    dend_3 { pt3dadd( -28.2627, 56.2414, 10.1566, 0.52 ) }
    dend_3 { pt3dadd( -29.3365, 56.5896, 10.1681, 0.52 ) }
    dend_3 { pt3dadd( -30.3258, 56.9236, 10.1626, 0.52 ) }
    dend_3 { pt3dadd( -31.4557, 57.3651, 10.1383, 0.52 ) }
    dend_3 { pt3dadd( -32.7827, 57.9954, 10.0897, 0.52 ) }
    dend_3 { pt3dadd( -33.648, 58.4711, 10.0475, 0.52 ) }
    dend_3 { pt3dadd( -34.294, 58.8537, 10.0088, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_3 { pt3dadd( -35.2883, 59.4424, 9.94169, 0.52 ) }
    dend_3 { pt3dadd( -36.7413, 60.331, 9.83845, 0.52 ) }
    dend_3 { pt3dadd( -37.6604, 60.9279, 9.79037, 0.52 ) }
    dend_3 { pt3dadd( -38.8366, 61.752, 9.78784, 0.52 ) }
    dend_3 { pt3dadd( -39.4925, 62.2267, 9.81785, 0.52 ) }
    dend_3 { pt3dadd( -40.4436, 62.9345, 9.88899, 0.52 ) }
    dend_3 { pt3dadd( -41.2975, 63.5878, 9.986, 0.52 ) }
    dend_3 { pt3dadd( -42.2674, 64.3566, 10.1334, 0.52 ) }
    dend_3 { pt3dadd( -43.3615, 65.2175, 10.3257, 0.52 ) }
    dend_3 { pt3dadd( -44.2268, 65.8834, 10.5347, 0.52 ) }
    dend_3 { pt3dadd( -44.9595, 66.4233, 10.7441, 0.52 ) }
    dend_3 { pt3dadd( -46.0574, 67.145, 10.8966, 0.52 ) }
    dend_3 { pt3dadd( -46.3509, 67.3078, 10.9072, 0.52 ) }
    dend_3 { pt3dadd( -47.6674, 67.9198, 10.6878, 0.52 ) }
    dend_3 { pt3dadd( -48.9229, 68.4045, 10.1791, 0.52 ) }
    dend_3 { pt3dadd( -49.4604, 68.5737, 9.83256, 0.52 ) }
    dend_3 { pt3dadd( -52.7143, 69.351, 7.31732, 0.52 ) }
    dend_3 { pt3dadd( -53.8965, 69.5718, 6.31099, 0.52 ) }
    dend_3 { pt3dadd( -55.3602, 69.8226, 5.03425, 0.52 ) }
    dend_3 { pt3dadd( -56.2153, 69.9675, 4.20604, 0.52 ) }
    dend_3 { pt3dadd( -57.6235, 70.2433, 2.78827, 0.52 ) }
    dend_3 { pt3dadd( -58.352, 70.4205, 2.04942, 0.52 ) }
    dend_3 { pt3dadd( -58.7612, 70.5526, 1.6435, 0.52 ) }
    dend_3 { pt3dadd( -59.4682, 70.7875, 0.896297, 0.52 ) }
    dend_3 { pt3dadd( -61.0648, 71.3609, -0.739968, 0.52 ) }
    dend_3 { pt3dadd( -62.2823, 71.8731, -2.01197, 0.52 ) }
    dend_3 { pt3dadd( -63.4795, 72.4895, -3.35089, 0.52 ) }
    dend_3 { pt3dadd( -64.4201, 73.0711, -4.55871, 0.52 ) }
    // Section: dend_93, id: dend_93, parent: dend_91 (entry count 28/100)
    dend_93 { pt3dclear() }
    dend_93 { pt3dadd( 47.8105, -66.8458, 27.5554, 0.37 ) }
    dend_93 { pt3dadd( 48.5403, -65.6865, 27.4193, 0.37 ) }
    dend_93 { pt3dadd( 49.2738, -64.5212, 27.2825, 0.37 ) }
    dend_93 { pt3dadd( 49.4619, -64.2224, 27.2474, 0.37 ) }
    // Section: dend_92, id: dend_92, parent: dend_91 (entry count 32/100)
    dend_92 { pt3dclear() }
    dend_92 { pt3dadd( 47.8105, -66.8458, 27.5554, 0.37 ) }
    dend_92 { pt3dadd( 49.0555, -66.7534, 28.047, 0.37 ) }
    dend_92 { pt3dadd( 49.7, -66.7574, 28.2816, 0.37 ) }
    dend_92 { pt3dadd( 50.8221, -66.8895, 28.6603, 0.37 ) }
    dend_92 { pt3dadd( 52.3663, -67.1852, 29.1196, 0.37 ) }
    dend_92 { pt3dadd( 53.6936, -67.4958, 29.4736, 0.37 ) }
    dend_92 { pt3dadd( 55.0178, -67.8972, 29.8503, 0.37 ) }
    dend_92 { pt3dadd( 56.0842, -68.3503, 30.1654, 0.37 ) }
    dend_92 { pt3dadd( 57.156, -68.8965, 30.4817, 0.37 ) }
    dend_92 { pt3dadd( 58.1825, -69.5422, 30.7699, 0.37 ) }
    dend_92 { pt3dadd( 58.7214, -69.9445, 30.8919, 0.37 ) }
    dend_92 { pt3dadd( 60.1077, -71.1422, 31.2155, 0.37 ) }
    dend_92 { pt3dadd( 61.3281, -72.2555, 31.4532, 0.37 ) }
    // Section: dend_80, id: dend_80, parent: dend_78 (entry count 45/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( 37.9375, -44.2248, 8.68529, 0.44 ) }
    dend_80 { pt3dadd( 38.65, -44.3926, 8.68948, 0.44 ) }
    dend_80 { pt3dadd( 39.3537, -44.5717, 8.69262, 0.44 ) }
    dend_80 { pt3dadd( 40.3141, -44.816, 8.69691, 0.44 ) }
    dend_80 { pt3dadd( 41.105, -45.0172, 8.70044, 0.44 ) }
    dend_80 { pt3dadd( 42.8015, -45.4488, 8.70801, 0.44 ) }
    dend_80 { pt3dadd( 43.9099, -45.7308, 8.71296, 0.44 ) }
    dend_80 { pt3dadd( 44.9768, -46.0828, 8.71296, 0.44 ) }
    // Section: dend_79, id: dend_79, parent: dend_78 (entry count 53/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( 37.9375, -44.2248, 8.68529, 0.44 ) }
    dend_79 { pt3dadd( 37.5955, -43.3556, 8.70703, 0.44 ) }
    dend_79 { pt3dadd( 36.998, -41.8373, 8.74499, 0.44 ) }
    dend_79 { pt3dadd( 36.7186, -41.1275, 8.76275, 0.44 ) }
    // Section: dend_71, id: dend_71, parent: dend_67 (entry count 57/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -6.8011, -94.1042, 9.42521, 0.52 ) }
    dend_71 { pt3dadd( -8.00536, -94.4409, 9.52075, 0.52 ) }
    dend_71 { pt3dadd( -8.91127, -94.6556, 9.69396, 0.52 ) }
    dend_71 { pt3dadd( -9.72996, -94.8498, 9.88204, 0.52 ) }
    dend_71 { pt3dadd( -10.6126, -95.0924, 10.1036, 0.52 ) }
    dend_71 { pt3dadd( -11.6708, -95.4558, 10.4705, 0.52 ) }
    dend_71 { pt3dadd( -12.4444, -95.7687, 10.7819, 0.52 ) }
    dend_71 { pt3dadd( -13.7965, -96.3937, 11.4013, 0.52 ) }
    dend_71 { pt3dadd( -14.3871, -96.6963, 11.7035, 0.52 ) }
    dend_71 { pt3dadd( -14.9064, -96.9953, 11.9847, 0.52 ) }
    dend_71 { pt3dadd( -16.2471, -97.8446, 12.6964, 0.52 ) }
    dend_71 { pt3dadd( -16.7422, -98.1679, 12.9045, 0.52 ) }
    dend_71 { pt3dadd( -17.5116, -98.6517, 13.1052, 0.52 ) }
    dend_71 { pt3dadd( -18.2542, -99.0589, 13.2122, 0.52 ) }
    dend_71 { pt3dadd( -19.0523, -99.4278, 13.3476, 0.52 ) }
    dend_71 { pt3dadd( -19.9023, -99.7547, 13.4863, 0.52 ) }
    dend_71 { pt3dadd( -21.0968, -100.165, 13.6536, 0.52 ) }
    dend_71 { pt3dadd( -21.7416, -100.385, 13.766, 0.52 ) }
    dend_71 { pt3dadd( -23.0126, -100.823, 14.0209, 0.52 ) }
    dend_71 { pt3dadd( -24.6494, -101.441, 14.4143, 0.52 ) }
    dend_71 { pt3dadd( -25.6485, -101.824, 14.6807, 0.52 ) }
    dend_71 { pt3dadd( -26.3711, -102.071, 14.8822, 0.52 ) }
    dend_71 { pt3dadd( -26.9944, -102.246, 15.058, 0.52 ) }
    dend_71 { pt3dadd( -27.9576, -102.463, 15.2742, 0.52 ) }
    dend_71 { pt3dadd( -28.8254, -102.639, 15.3887, 0.52 ) }
    dend_71 { pt3dadd( -29.7761, -102.839, 15.5086, 0.52 ) }
    dend_71 { pt3dadd( -30.7991, -103.091, 15.6844, 0.52 ) }
    dend_71 { pt3dadd( -31.3835, -103.258, 15.8804, 0.52 ) }
    dend_71 { pt3dadd( -31.9889, -103.462, 16.1834, 0.52 ) }
    dend_71 { pt3dadd( -32.6468, -103.735, 16.6045, 0.52 ) }
    dend_71 { pt3dadd( -33.7521, -104.252, 17.4055, 0.52 ) }
    dend_71 { pt3dadd( -34.4667, -104.624, 17.9857, 0.52 ) }
    dend_71 { pt3dadd( -36.1483, -105.508, 19.3642, 0.52 ) }
    dend_71 { pt3dadd( -36.8435, -105.839, 19.8925, 0.52 ) }
    dend_71 { pt3dadd( -37.2274, -105.985, 20.1392, 0.52 ) }
    dend_71 { pt3dadd( -37.8971, -106.17, 20.4433, 0.52 ) }
    dend_71 { pt3dadd( -38.5101, -106.292, 20.5994, 0.52 ) }
    dend_71 { pt3dadd( -39.4562, -106.467, 20.74, 0.52 ) }
    dend_71 { pt3dadd( -40.4319, -106.688, 20.7749, 0.52 ) }
    dend_71 { pt3dadd( -41.4881, -106.983, 20.7991, 0.52 ) }
    dend_71 { pt3dadd( -42.7822, -107.445, 20.8418, 0.52 ) }
    dend_71 { pt3dadd( -43.3812, -107.72, 20.8705, 0.52 ) }
    dend_71 { pt3dadd( -44.335, -108.244, 20.9694, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_71 { pt3dadd( -45.3339, -108.832, 21.1366, 0.52 ) }
    dend_71 { pt3dadd( -45.8826, -109.146, 21.2518, 0.52 ) }
    dend_71 { pt3dadd( -46.6832, -109.559, 21.4344, 0.52 ) }
    dend_71 { pt3dadd( -47.2971, -109.841, 21.576, 0.52 ) }
    dend_71 { pt3dadd( -48.6535, -110.4, 21.8717, 0.52 ) }
    dend_71 { pt3dadd( -49.669, -110.784, 22.0647, 0.52 ) }
    dend_71 { pt3dadd( -50.9165, -111.243, 22.24, 0.52 ) }
    dend_71 { pt3dadd( -51.8639, -111.617, 22.3231, 0.52 ) }
    dend_71 { pt3dadd( -52.4271, -111.869, 22.3851, 0.52 ) }
    dend_71 { pt3dadd( -52.8501, -112.088, 22.432, 0.52 ) }
    dend_71 { pt3dadd( -54.0292, -112.784, 22.5596, 0.52 ) }
    dend_71 { pt3dadd( -55.4175, -113.653, 22.6862, 0.52 ) }
    dend_71 { pt3dadd( -56.5965, -114.41, 22.7759, 0.52 ) }
    dend_71 { pt3dadd( -59.5216, -116.338, 22.9907, 0.52 ) }
    dend_71 { pt3dadd( -61.0538, -117.372, 23.0974, 0.52 ) }
    dend_71 { pt3dadd( -61.6772, -117.815, 23.1281, 0.52 ) }
    dend_71 { pt3dadd( -62.8371, -118.695, 23.1642, 0.52 ) }
    dend_71 { pt3dadd( -63.5003, -119.234, 23.1704, 0.52 ) }
    dend_71 { pt3dadd( -64.4179, -119.985, 23.0909, 0.52 ) }
    dend_71 { pt3dadd( -65.304, -120.698, 22.8985, 0.52 ) }
    dend_71 { pt3dadd( -66.6827, -121.678, 22.5661, 0.52 ) }
    dend_71 { pt3dadd( -67.412, -122.121, 22.3828, 0.52 ) }
    dend_71 { pt3dadd( -68.4926, -122.686, 22.2029, 0.52 ) }
    dend_71 { pt3dadd( -70.2197, -123.35, 22.0132, 0.52 ) }
    dend_71 { pt3dadd( -70.9572, -123.497, 21.9957, 0.52 ) }
    dend_71 { pt3dadd( -71.7683, -123.526, 22.0985, 0.52 ) }
    dend_71 { pt3dadd( -72.717, -123.459, 22.3631, 0.52 ) }
    dend_71 { pt3dadd( -74.5998, -123.231, 23.0308, 0.52 ) }
    dend_71 { pt3dadd( -75.3265, -123.119, 23.3926, 0.52 ) }
    dend_71 { pt3dadd( -76.3753, -122.938, 24.1322, 0.52 ) }
    dend_71 { pt3dadd( -77.5988, -122.716, 25.1537, 0.52 ) }
    dend_71 { pt3dadd( -78.3477, -122.573, 25.8869, 0.52 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 32/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -6.8011, -94.1042, 9.42521, 0.59 ) }
    dend_68 { pt3dadd( -7.62428, -95.0088, 9.43362, 0.59 ) }
    dend_68 { pt3dadd( -8.32099, -95.8616, 9.44329, 0.59 ) }
    dend_68 { pt3dadd( -8.90278, -96.6834, 9.41491, 0.59 ) }
    dend_68 { pt3dadd( -9.39518, -97.4781, 9.3415, 0.59 ) }
    dend_68 { pt3dadd( -9.97255, -98.4348, 9.21464, 0.59 ) }
    dend_68 { pt3dadd( -10.7633, -99.6674, 9.02302, 0.59 ) }
    dend_68 { pt3dadd( -11.3599, -100.502, 8.86085, 0.59 ) }
    dend_68 { pt3dadd( -12.1507, -101.552, 8.62723, 0.59 ) }
    dend_68 { pt3dadd( -12.8607, -102.472, 8.43451, 0.59 ) }
    dend_68 { pt3dadd( -13.3963, -103.146, 8.26562, 0.59 ) }
    dend_68 { pt3dadd( -14.106, -103.942, 7.96969, 0.59 ) }
    dend_68 { pt3dadd( -14.6755, -104.49, 7.7085, 0.59 ) }
    dend_68 { pt3dadd( -15.1705, -104.903, 7.4919, 0.59 ) }
    dend_68 { pt3dadd( -16.1256, -105.668, 7.11053, 0.59 ) }
    dend_68 { pt3dadd( -17.2733, -106.656, 6.72643, 0.59 ) }
    dend_68 { pt3dadd( -18.3284, -107.732, 6.45021, 0.59 ) }
    dend_68 { pt3dadd( -18.8548, -108.35, 6.35265, 0.59 ) }
    dend_68 { pt3dadd( -19.5926, -109.34, 6.33068, 0.59 ) }
    dend_68 { pt3dadd( -20.1606, -110.231, 6.41382, 0.59 ) }
    dend_68 { pt3dadd( -20.7852, -111.392, 6.6463, 0.59 ) }
    dend_68 { pt3dadd( -21.2834, -112.446, 6.97296, 0.52 ) }
    dend_68 { pt3dadd( -21.6202, -113.248, 7.25694, 0.52 ) }
    dend_68 { pt3dadd( -22.121, -114.529, 7.67936, 0.52 ) }
    dend_68 { pt3dadd( -22.4894, -115.539, 7.97096, 0.52 ) }
    dend_68 { pt3dadd( -22.8399, -116.436, 8.21847, 0.52 ) }
    dend_68 { pt3dadd( -23.0748, -117.034, 8.35754, 0.52 ) }
    dend_68 { pt3dadd( -23.3822, -117.819, 8.52153, 0.52 ) }
    dend_68 { pt3dadd( -23.7923, -118.807, 8.72444, 0.52 ) }
    dend_68 { pt3dadd( -24.2133, -119.633, 8.87658, 0.52 ) }
    dend_68 { pt3dadd( -24.9556, -120.849, 9.12236, 0.52 ) }
    dend_68 { pt3dadd( -25.2628, -121.312, 9.2185, 0.52 ) }
    dend_68 { pt3dadd( -25.4905, -121.664, 9.28783, 0.52 ) }
    dend_68 { pt3dadd( -26.0234, -122.57, 9.44286, 0.52 ) }
    dend_68 { pt3dadd( -26.5314, -123.528, 9.568, 0.52 ) }
    dend_68 { pt3dadd( -26.8519, -124.162, 9.618, 0.52 ) }
    dend_68 { pt3dadd( -27.0904, -124.665, 9.61858, 0.52 ) }
    dend_68 { pt3dadd( -27.3442, -125.193, 9.61473, 0.52 ) }
    dend_68 { pt3dadd( -27.804, -126.153, 9.60205, 0.52 ) }
    dend_68 { pt3dadd( -28.1716, -126.94, 9.58882, 0.52 ) }
    dend_68 { pt3dadd( -28.5302, -127.728, 9.57407, 0.52 ) }
    dend_68 { pt3dadd( -28.8877, -128.551, 9.55835, 0.52 ) }
    dend_68 { pt3dadd( -29.3624, -129.684, 9.54958, 0.52 ) }
    dend_68 { pt3dadd( -29.9972, -131.173, 9.56659, 0.52 ) }
    dend_68 { pt3dadd( -30.4534, -132.206, 9.59781, 0.52 ) }
    dend_68 { pt3dadd( -30.7407, -132.863, 9.62747, 0.52 ) }
    dend_68 { pt3dadd( -31.2348, -134.006, 9.69476, 0.52 ) }
    dend_68 { pt3dadd( -31.7793, -135.268, 9.78671, 0.52 ) }
    dend_68 { pt3dadd( -32.2974, -136.545, 9.88155, 0.52 ) }
    dend_68 { pt3dadd( -32.5159, -137.12, 9.9222, 0.52 ) }
    dend_68 { pt3dadd( -33.0486, -138.519, 10.0073, 0.52 ) }
    dend_68 { pt3dadd( -33.4982, -139.646, 10.0806, 0.52 ) }
    dend_68 { pt3dadd( -33.9534, -140.742, 10.15, 0.52 ) }
    dend_68 { pt3dadd( -34.3584, -141.756, 10.2058, 0.52 ) }
    dend_68 { pt3dadd( -34.8305, -143.035, 10.2702, 0.52 ) }
    dend_68 { pt3dadd( -35.4042, -144.577, 10.3498, 0.52 ) }
    dend_68 { pt3dadd( -35.777, -145.532, 10.404, 0.52 ) }
    dend_68 { pt3dadd( -36.126, -146.354, 10.4519, 0.52 ) }
    dend_68 { pt3dadd( -36.459, -147.077, 10.4921, 0.52 ) }
    dend_68 { pt3dadd( -36.788, -147.706, 10.5232, 0.52 ) }
    dend_68 { pt3dadd( -37.3457, -148.656, 10.5604, 0.52 ) }
    dend_68 { pt3dadd( -37.9217, -149.615, 10.5812, 0.52 ) }
    dend_68 { pt3dadd( -38.4378, -150.473, 10.5911, 0.52 ) }
    dend_68 { pt3dadd( -39.0394, -151.454, 10.6044, 0.52 ) }
    dend_68 { pt3dadd( -39.4802, -152.164, 10.6157, 0.52 ) }
    dend_68 { pt3dadd( -39.8601, -152.812, 10.628, 0.52 ) }
    dend_68 { pt3dadd( -40.3198, -153.704, 10.6491, 0.52 ) }
    dend_68 { pt3dadd( -40.5344, -154.125, 10.6626, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    // Section: dend_64, id: dend_64, parent: dend_32 (entry count 0/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 7.33706, -108.031, 6.32246, 0.59 ) }
    dend_64 { pt3dadd( 7.8248, -109.595, 6.31057, 0.59 ) }
    dend_64 { pt3dadd( 8.06972, -110.519, 6.33989, 0.59 ) }
    dend_64 { pt3dadd( 8.31698, -111.644, 6.39376, 0.52 ) }
    dend_64 { pt3dadd( 8.58402, -113.035, 6.46848, 0.52 ) }
    dend_64 { pt3dadd( 8.77283, -114.17, 6.53374, 0.52 ) }
    dend_64 { pt3dadd( 9.0303, -115.684, 6.61861, 0.52 ) }
    dend_64 { pt3dadd( 9.16702, -116.537, 6.6916, 0.52 ) }
    dend_64 { pt3dadd( 9.31337, -117.592, 6.76551, 0.52 ) }
    dend_64 { pt3dadd( 9.43671, -118.605, 6.82796, 0.52 ) }
    dend_64 { pt3dadd( 9.67266, -120.688, 6.93307, 0.52 ) }
    dend_64 { pt3dadd( 9.86588, -122.397, 6.99065, 0.52 ) }
    dend_64 { pt3dadd( 10.033, -123.72, 6.99848, 0.44 ) }
    dend_64 { pt3dadd( 10.1927, -124.716, 6.99804, 0.44 ) }
    dend_64 { pt3dadd( 10.3688, -125.629, 6.99179, 0.44 ) }
    dend_64 { pt3dadd( 10.5039, -126.241, 6.98324, 0.44 ) }
    dend_64 { pt3dadd( 10.8159, -127.542, 6.9532, 0.44 ) }
    dend_64 { pt3dadd( 11.1295, -128.872, 6.91685, 0.44 ) }
    dend_64 { pt3dadd( 11.4245, -130.085, 6.88152, 0.44 ) }
    dend_64 { pt3dadd( 11.6432, -131.056, 6.85693, 0.44 ) }
    dend_64 { pt3dadd( 11.7348, -131.504, 6.87131, 0.44 ) }
    dend_64 { pt3dadd( 11.9232, -132.484, 6.91424, 0.44 ) }
    dend_64 { pt3dadd( 12.0975, -133.612, 6.98714, 0.44 ) }
    dend_64 { pt3dadd( 12.1874, -134.619, 7.08332, 0.44 ) }
    dend_64 { pt3dadd( 12.2294, -136.174, 7.26846, 0.44 ) }
    dend_64 { pt3dadd( 12.1996, -137.663, 7.48442, 0.44 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 26/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 7.33706, -108.031, 6.32246, 0.59 ) }
    dend_33 { pt3dadd( 7.4666, -109.556, 6.35612, 0.59 ) }
    dend_33 { pt3dadd( 7.56782, -110.912, 6.37817, 0.59 ) }
    dend_33 { pt3dadd( 7.6667, -112.483, 6.39807, 0.59 ) }
    dend_33 { pt3dadd( 7.711, -113.364, 6.40697, 0.59 ) }
    dend_33 { pt3dadd( 7.79394, -114.805, 6.41891, 0.59 ) }
    dend_33 { pt3dadd( 7.87441, -116.037, 6.41456, 0.59 ) }
    dend_33 { pt3dadd( 8.04366, -117.835, 6.3774, 0.59 ) }
    dend_33 { pt3dadd( 8.19863, -119.182, 6.3384, 0.59 ) }
    dend_33 { pt3dadd( 8.37824, -120.67, 6.21861, 0.59 ) }
    dend_33 { pt3dadd( 8.56331, -122.125, 6.03669, 0.59 ) }
    dend_33 { pt3dadd( 8.72221, -123.354, 5.80836, 0.59 ) }
    dend_33 { pt3dadd( 8.85276, -124.393, 5.55862, 0.59 ) }
    dend_33 { pt3dadd( 8.9262, -125.072, 5.35958, 0.59 ) }
    dend_33 { pt3dadd( 9.1186, -126.844, 4.71482, 0.59 ) }
    dend_33 { pt3dadd( 9.20835, -127.87, 4.2979, 0.59 ) }
    dend_33 { pt3dadd( 9.23529, -129.062, 3.81608, 0.59 ) }
    dend_33 { pt3dadd( 9.20551, -129.736, 3.57344, 0.59 ) }
    dend_33 { pt3dadd( 9.13463, -130.38, 3.3794, 0.59 ) }
    dend_33 { pt3dadd( 8.93006, -131.701, 3.07424, 0.59 ) }
    dend_33 { pt3dadd( 8.73013, -132.947, 2.84091, 0.59 ) }
    dend_33 { pt3dadd( 8.55196, -134.32, 2.53423, 0.59 ) }
    dend_33 { pt3dadd( 8.42078, -135.56, 2.24397, 0.59 ) }
    dend_33 { pt3dadd( 8.29558, -136.829, 1.93195, 0.59 ) }
    dend_33 { pt3dadd( 8.17347, -137.903, 1.67244, 0.59 ) }
    dend_33 { pt3dadd( 7.97136, -139.383, 1.3427, 0.59 ) }
    dend_33 { pt3dadd( 7.78301, -140.716, 1.03541, 0.59 ) }
    dend_33 { pt3dadd( 7.6409, -141.766, 0.801131, 0.59 ) }
    dend_33 { pt3dadd( 7.51848, -142.739, 0.609032, 0.59 ) }
    dend_33 { pt3dadd( 7.38486, -144.005, 0.410165, 0.59 ) }
    dend_33 { pt3dadd( 7.3012, -145.144, 0.311112, 0.59 ) }
    dend_33 { pt3dadd( 7.27477, -146.143, 0.305722, 0.59 ) }
    dend_33 { pt3dadd( 7.30705, -147.208, 0.348397, 0.59 ) }
    dend_33 { pt3dadd( 7.42308, -148.464, 0.408835, 0.59 ) }
    dend_33 { pt3dadd( 7.54887, -149.555, 0.462084, 0.59 ) }
    dend_33 { pt3dadd( 7.7041, -150.743, 0.519612, 0.59 ) }
    dend_33 { pt3dadd( 7.85001, -151.997, 0.574496, 0.59 ) }
    dend_33 { pt3dadd( 7.92737, -152.872, 0.572813, 0.59 ) }
    dend_33 { pt3dadd( 7.94867, -154.169, 0.512063, 0.59 ) }
    dend_33 { pt3dadd( 7.87586, -155.387, 0.40734, 0.59 ) }
    dend_33 { pt3dadd( 7.79807, -156.091, 0.300481, 0.59 ) }
    dend_33 { pt3dadd( 7.63123, -157.47, 0.0234073, 0.59 ) }
    dend_33 { pt3dadd( 7.49967, -158.727, -0.249778, 0.59 ) }
    dend_33 { pt3dadd( 7.40995, -160.044, -0.561826, 0.59 ) }
    dend_33 { pt3dadd( 7.39459, -160.967, -0.780509, 0.59 ) }
    dend_33 { pt3dadd( 7.44592, -162.381, -1.08341, 0.59 ) }
    dend_33 { pt3dadd( 7.5055, -163.419, -1.27768, 0.59 ) }
    dend_33 { pt3dadd( 7.58724, -164.699, -1.47685, 0.59 ) }
    dend_33 { pt3dadd( 7.66955, -166.153, -1.68594, 0.59 ) }
    dend_33 { pt3dadd( 7.7647, -167.562, -1.95323, 0.59 ) }
    dend_33 { pt3dadd( 7.88711, -169.304, -2.33058, 0.59 ) }
    dend_33 { pt3dadd( 7.99958, -170.649, -2.63757, 0.59 ) }
    dend_33 { pt3dadd( 8.09129, -171.543, -2.86912, 0.59 ) }
    dend_33 { pt3dadd( 8.28921, -172.927, -3.30753, 0.59 ) }
    dend_33 { pt3dadd( 8.56123, -174.467, -3.85832, 0.59 ) }
    dend_33 { pt3dadd( 8.67756, -175.112, -4.11973, 0.59 ) }
    dend_33 { pt3dadd( 8.81724, -175.946, -4.49251, 0.59 ) }
    dend_33 { pt3dadd( 8.90163, -176.501, -4.73323, 0.59 ) }
    dend_33 { pt3dadd( 9.06941, -177.806, -5.26502, 0.59 ) }
    dend_33 { pt3dadd( 9.13811, -178.757, -5.59584, 0.59 ) }
    dend_33 { pt3dadd( 9.1138, -179.482, -5.84093, 0.59 ) }
    dend_33 { pt3dadd( 8.89599, -180.922, -6.41027, 0.59 ) }
    dend_33 { pt3dadd( 8.64501, -181.888, -6.81874, 0.59 ) }
    dend_33 { pt3dadd( 8.32371, -182.816, -7.20519, 0.59 ) }
    dend_33 { pt3dadd( 7.99357, -183.569, -7.50275, 0.59 ) }
    dend_33 { pt3dadd( 7.3431, -184.833, -8.04841, 0.59 ) }
    dend_33 { pt3dadd( 6.52523, -186.251, -8.67335, 0.59 ) }
    dend_33 { pt3dadd( 6.08196, -186.974, -8.97519, 0.59 ) }
    dend_33 { pt3dadd( 5.44812, -188.037, -9.39542, 0.59 ) }
    dend_33 { pt3dadd( 5.10472, -188.678, -9.61515, 0.59 ) }
    dend_33 { pt3dadd( 4.34606, -190.395, -10.112, 0.59 ) }
    dend_33 { pt3dadd( 4.13527, -191.01, -10.2783, 0.59 ) }
    dend_33 { pt3dadd( 3.85328, -192.088, -10.5602, 0.59 ) }
    dend_33 { pt3dadd( 3.70095, -192.862, -10.7719, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_33 { pt3dadd( 3.58402, -193.77, -11.0157, 0.59 ) }
    dend_33 { pt3dadd( 3.51505, -194.81, -11.2965, 0.59 ) }
    dend_33 { pt3dadd( 3.43679, -196.746, -11.7861, 0.59 ) }
    dend_33 { pt3dadd( 3.37427, -197.769, -12.0905, 0.59 ) }
    dend_33 { pt3dadd( 3.30807, -198.532, -12.3395, 0.59 ) }
    dend_33 { pt3dadd( 3.19996, -199.457, -12.6509, 0.59 ) }
    dend_33 { pt3dadd( 2.94853, -200.884, -13.1301, 0.59 ) }
    dend_33 { pt3dadd( 2.68979, -201.871, -13.4466, 0.59 ) }
    dend_33 { pt3dadd( 2.17173, -203.269, -13.8343, 0.59 ) }
    dend_33 { pt3dadd( 1.84703, -203.938, -14.0249, 0.59 ) }
    dend_33 { pt3dadd( 1.54427, -204.443, -14.18, 0.59 ) }
    dend_33 { pt3dadd( 0.87126, -205.416, -14.4733, 0.59 ) }
    dend_33 { pt3dadd( 0.279839, -206.231, -14.686, 0.59 ) }
    dend_33 { pt3dadd( -0.184899, -206.952, -14.8516, 0.59 ) }
    dend_33 { pt3dadd( -0.479384, -207.515, -14.978, 0.59 ) }
    dend_33 { pt3dadd( -1.03712, -208.885, -15.3147, 0.59 ) }
    dend_33 { pt3dadd( -1.31534, -209.79, -15.5414, 0.59 ) }
    dend_33 { pt3dadd( -1.49851, -210.582, -15.7694, 0.59 ) }
    dend_33 { pt3dadd( -1.72865, -211.821, -16.1437, 0.59 ) }
    dend_33 { pt3dadd( -1.92917, -212.988, -16.4987, 0.59 ) }
    dend_33 { pt3dadd( -2.06735, -213.862, -16.7568, 0.59 ) }
    dend_33 { pt3dadd( -2.17446, -214.577, -16.9398, 0.59 ) }
    dend_33 { pt3dadd( -2.37042, -215.832, -17.2345, 0.52 ) }
    dend_33 { pt3dadd( -2.5476, -216.659, -17.4006, 0.52 ) }
    dend_33 { pt3dadd( -2.77437, -217.402, -17.5139, 0.52 ) }
    dend_33 { pt3dadd( -3.04957, -218.129, -17.6095, 0.52 ) }
    dend_33 { pt3dadd( -3.60834, -219.513, -17.79, 0.52 ) }
    dend_33 { pt3dadd( -4.06969, -220.642, -17.9208, 0.52 ) }
    dend_33 { pt3dadd( -4.58454, -221.804, -18.0251, 0.52 ) }
    dend_33 { pt3dadd( -5.19462, -223.09, -18.2049, 0.52 ) }
    dend_33 { pt3dadd( -5.73394, -224.225, -18.3972, 0.52 ) }
    dend_33 { pt3dadd( -6.14801, -225.123, -18.5657, 0.52 ) }
    dend_33 { pt3dadd( -6.5974, -226.167, -18.7977, 0.52 ) }
    dend_33 { pt3dadd( -7.2381, -227.878, -19.2047, 0.52 ) }
    dend_33 { pt3dadd( -7.77987, -229.706, -19.6942, 0.52 ) }
    dend_33 { pt3dadd( -8.09782, -231.051, -20.0714, 0.52 ) }
    dend_33 { pt3dadd( -8.28558, -231.927, -20.3148, 0.52 ) }
    dend_33 { pt3dadd( -8.5886, -233.476, -20.7632, 0.52 ) }
    dend_33 { pt3dadd( -8.72307, -234.306, -20.9988, 0.52 ) }
    dend_33 { pt3dadd( -8.91483, -235.733, -21.3596, 0.52 ) }
    dend_33 { pt3dadd( -9.04228, -236.561, -21.5202, 0.52 ) }
    dend_33 { pt3dadd( -9.19976, -237.35, -21.6479, 0.52 ) }
    dend_33 { pt3dadd( -9.41971, -238.325, -21.7636, 0.52 ) }
    dend_33 { pt3dadd( -9.70222, -239.564, -21.844, 0.52 ) }
    dend_33 { pt3dadd( -10.0305, -241.003, -21.9436, 0.52 ) }
    dend_33 { pt3dadd( -10.2573, -241.946, -22.0012, 0.52 ) }
    dend_33 { pt3dadd( -10.6245, -243.44, -22.1584, 0.52 ) }
    dend_33 { pt3dadd( -10.8074, -244.206, -22.2644, 0.52 ) }
    dend_33 { pt3dadd( -11.0168, -245.104, -22.4095, 0.52 ) }
    dend_33 { pt3dadd( -11.2633, -246.266, -22.6123, 0.52 ) }
    dend_33 { pt3dadd( -11.5364, -247.724, -22.8712, 0.52 ) }
    dend_33 { pt3dadd( -11.7679, -249.015, -23.1115, 0.52 ) }
    dend_33 { pt3dadd( -11.9363, -249.994, -23.2901, 0.52 ) }
    dend_33 { pt3dadd( -12.1947, -251.523, -23.544, 0.52 ) }
    dend_33 { pt3dadd( -12.401, -252.715, -23.7124, 0.52 ) }
    dend_33 { pt3dadd( -12.5413, -253.565, -23.8008, 0.52 ) }
    dend_33 { pt3dadd( -12.8041, -255.31, -24.0485, 0.52 ) }
    dend_33 { pt3dadd( -12.9696, -256.426, -24.2322, 0.52 ) }
    dend_33 { pt3dadd( -13.112, -257.377, -24.4232, 0.52 ) }
    dend_33 { pt3dadd( -13.2499, -258.279, -24.631, 0.52 ) }
    dend_33 { pt3dadd( -13.4158, -259.386, -24.9374, 0.52 ) }
    dend_33 { pt3dadd( -13.6623, -261.165, -25.4602, 0.52 ) }
    dend_33 { pt3dadd( -13.7423, -261.785, -25.6418, 0.52 ) }
    dend_33 { pt3dadd( -13.8274, -262.564, -25.8645, 0.52 ) }
    dend_33 { pt3dadd( -13.8951, -263.407, -26.081, 0.52 ) }
    dend_33 { pt3dadd( -13.946, -264.835, -26.39, 0.52 ) }
    dend_33 { pt3dadd( -13.9569, -266.321, -26.6373, 0.52 ) }
    dend_33 { pt3dadd( -13.9598, -267.237, -26.7321, 0.52 ) }
    dend_33 { pt3dadd( -13.9928, -268.551, -26.8505, 0.52 ) }
    dend_33 { pt3dadd( -14.0664, -269.848, -26.9357, 0.52 ) }
    dend_33 { pt3dadd( -14.1542, -270.722, -26.9649, 0.52 ) }
    dend_33 { pt3dadd( -14.2631, -271.395, -26.923, 0.52 ) }
    dend_33 { pt3dadd( -14.4909, -272.335, -26.811, 0.52 ) }
    dend_33 { pt3dadd( -14.8432, -273.345, -26.5999, 0.52 ) }
    dend_33 { pt3dadd( -15.2102, -274.15, -26.3697, 0.52 ) }
    dend_33 { pt3dadd( -15.7135, -275.137, -26.0363, 0.52 ) }
    dend_33 { pt3dadd( -16.3853, -276.447, -25.5705, 0.52 ) }
    dend_33 { pt3dadd( -16.7322, -277.153, -25.3184, 0.52 ) }
    dend_33 { pt3dadd( -17.1959, -278.214, -24.9596, 0.52 ) }
    dend_33 { pt3dadd( -17.5693, -279.262, -24.6343, 0.52 ) }
    dend_33 { pt3dadd( -17.7737, -280.014, -24.4729, 0.52 ) }
    dend_33 { pt3dadd( -18.0007, -281.055, -24.3979, 0.52 ) }
    dend_33 { pt3dadd( -18.1308, -281.774, -24.4411, 0.52 ) }
    dend_33 { pt3dadd( -18.2893, -282.812, -24.6364, 0.52 ) }
    dend_33 { pt3dadd( -18.4831, -284.274, -25.0526, 0.52 ) }
    dend_33 { pt3dadd( -18.6854, -285.662, -25.5135, 0.52 ) }
    dend_33 { pt3dadd( -18.9265, -287.054, -26.0168, 0.52 ) }
    dend_33 { pt3dadd( -19.1076, -287.901, -26.3635, 0.52 ) }
    dend_33 { pt3dadd( -19.5191, -289.476, -27.0518, 0.52 ) }
    dend_33 { pt3dadd( -20.0052, -290.995, -27.7256, 0.52 ) }
    dend_33 { pt3dadd( -20.3311, -291.826, -28.08, 0.52 ) }
    dend_33 { pt3dadd( -20.6012, -292.416, -28.3014, 0.52 ) }
    dend_33 { pt3dadd( -21.2428, -293.716, -28.7247, 0.52 ) }
    dend_33 { pt3dadd( -21.5766, -294.356, -28.9544, 0.52 ) }
    dend_33 { pt3dadd( -22.136, -295.39, -29.4265, 0.52 ) }
    dend_33 { pt3dadd( -22.553, -296.133, -29.8234, 0.52 ) }
    dend_33 { pt3dadd( -23.0286, -297.012, -30.3399, 0.52 ) }
    dend_33 { pt3dadd( -23.3486, -297.638, -30.7405, 0.52 ) }
    dend_33 { pt3dadd( -23.9159, -298.85, -31.5913, 0.52 ) }
    dend_33 { pt3dadd( -24.4852, -300.232, -32.7782, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    // Section: dend_24, id: dend_24, parent: dend_18 (entry count 0/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 9.35108, 111.143, -15.7287, 0.59 ) }
    dend_24 { pt3dadd( 10.5369, 111.763, -16.2306, 0.59 ) }
    dend_24 { pt3dadd( 11.4163, 112.204, -16.5632, 0.59 ) }
    dend_24 { pt3dadd( 12.406, 112.692, -16.8932, 0.59 ) }
    dend_24 { pt3dadd( 13.3525, 113.159, -17.17, 0.59 ) }
    dend_24 { pt3dadd( 14.7189, 113.793, -17.6, 0.59 ) }
    dend_24 { pt3dadd( 16.0185, 114.376, -18.0448, 0.59 ) }
    dend_24 { pt3dadd( 17.4799, 115.055, -18.5515, 0.59 ) }
    dend_24 { pt3dadd( 18.5, 115.551, -19.0134, 0.59 ) }
    dend_24 { pt3dadd( 19.5464, 116.094, -19.5948, 0.59 ) }
    dend_24 { pt3dadd( 20.7433, 116.826, -20.4805, 0.52 ) }
    dend_24 { pt3dadd( 21.6503, 117.533, -21.3331, 0.52 ) }
    dend_24 { pt3dadd( 22.1487, 118.075, -21.9639, 0.52 ) }
    dend_24 { pt3dadd( 23.3214, 119.895, -23.9447, 0.52 ) }
    dend_24 { pt3dadd( 23.5982, 120.627, -24.674, 0.52 ) }
    dend_24 { pt3dadd( 23.7965, 122.162, -26.1291, 0.52 ) }
    dend_24 { pt3dadd( 23.7733, 122.953, -26.7856, 0.52 ) }
    dend_24 { pt3dadd( 23.6374, 124.029, -27.6677, 0.52 ) }
    dend_24 { pt3dadd( 23.5126, 124.762, -28.2369, 0.52 ) }
    dend_24 { pt3dadd( 23.2214, 126.259, -29.2646, 0.52 ) }
    dend_24 { pt3dadd( 22.7667, 128.521, -30.8141, 0.52 ) }
    dend_24 { pt3dadd( 22.5651, 129.651, -31.555, 0.52 ) }
    dend_24 { pt3dadd( 22.2648, 131.789, -32.9719, 0.52 ) }
    dend_24 { pt3dadd( 22.157, 132.88, -33.6845, 0.52 ) }
    dend_24 { pt3dadd( 22.1136, 133.621, -34.1285, 0.52 ) }
    dend_24 { pt3dadd( 22.0477, 135.26, -35.0223, 0.52 ) }
    dend_24 { pt3dadd( 22.0081, 135.895, -35.3575, 0.52 ) }
    dend_24 { pt3dadd( 21.8894, 136.995, -35.9687, 0.52 ) }
    dend_24 { pt3dadd( 21.6662, 138.273, -36.6504, 0.52 ) }
    dend_24 { pt3dadd( 21.4406, 139.149, -37.1674, 0.52 ) }
    dend_24 { pt3dadd( 20.9495, 140.591, -38.0232, 0.52 ) }
    dend_24 { pt3dadd( 20.1702, 142.498, -39.2473, 0.52 ) }
    dend_24 { pt3dadd( 19.7853, 143.314, -39.7926, 0.52 ) }
    dend_24 { pt3dadd( 19.3149, 144.205, -40.476, 0.52 ) }
    dend_24 { pt3dadd( 18.6458, 145.397, -42.185, 0.52 ) }
    dend_24 { pt3dadd( 18.2607, 146.087, -43.4249, 0.52 ) }
    dend_24 { pt3dadd( 17.7665, 147.025, -45.4198, 0.52 ) }
    dend_24 { pt3dadd( 17.5177, 147.553, -46.6337, 0.52 ) }
    dend_24 { pt3dadd( 17.0507, 148.723, -49.4618, 0.52 ) }
    dend_24 { pt3dadd( 15.7767, 152.721, -59.2285, 0.52 ) }
    dend_24 { pt3dadd( 15.6567, 153.194, -60.3379, 0.52 ) }
    dend_24 { pt3dadd( 15.4196, 154.406, -62.9714, 0.52 ) }
    dend_24 { pt3dadd( 15.3072, 155.192, -64.4489, 0.52 ) }
    dend_24 { pt3dadd( 15.197, 156.579, -66.6112, 0.52 ) }
    dend_24 { pt3dadd( 15.1766, 157.338, -67.4026, 0.52 ) }
    dend_24 { pt3dadd( 15.2307, 160.435, -69.1376, 0.52 ) }
    dend_24 { pt3dadd( 15.3122, 161.821, -69.7664, 0.52 ) }
    dend_24 { pt3dadd( 15.4578, 163.462, -70.308, 0.52 ) }
    dend_24 { pt3dadd( 15.6699, 165.153, -70.7425, 0.52 ) }
    dend_24 { pt3dadd( 16.0514, 167.376, -71.0974, 0.52 ) }
    dend_24 { pt3dadd( 16.3641, 168.789, -71.2437, 0.52 ) }
    dend_24 { pt3dadd( 16.9003, 170.847, -71.3142, 0.52 ) }
    dend_24 { pt3dadd( 17.2007, 172.034, -71.3362, 0.52 ) }
    dend_24 { pt3dadd( 17.602, 173.782, -71.3488, 0.52 ) }
    dend_24 { pt3dadd( 18.0161, 175.85, -71.34, 0.52 ) }
    dend_24 { pt3dadd( 18.3704, 177.842, -71.3247, 0.52 ) }
    dend_24 { pt3dadd( 18.6142, 179.494, -71.3077, 0.52 ) }
    dend_24 { pt3dadd( 18.8022, 181.101, -71.288, 0.52 ) }
    dend_24 { pt3dadd( 19.0024, 182.972, -71.263, 0.52 ) }
    dend_24 { pt3dadd( 19.1955, 184.851, -71.2364, 0.52 ) }
    dend_24 { pt3dadd( 19.3843, 186.583, -71.212, 0.52 ) }
    dend_24 { pt3dadd( 19.5684, 188.07, -71.1707, 0.52 ) }
    dend_24 { pt3dadd( 19.7849, 189.551, -71.0969, 0.52 ) }
    dend_24 { pt3dadd( 20.0873, 191.285, -70.9641, 0.52 ) }
    dend_24 { pt3dadd( 20.3645, 192.765, -70.8369, 0.52 ) }
    dend_24 { pt3dadd( 20.6785, 194.441, -70.6763, 0.52 ) }
    dend_24 { pt3dadd( 21.0159, 196.285, -70.4662, 0.52 ) }
    dend_24 { pt3dadd( 21.3667, 198.151, -70.2127, 0.52 ) }
    dend_24 { pt3dadd( 21.64, 199.611, -69.9717, 0.52 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 69/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 9.35108, 111.143, -15.7287, 0.59 ) }
    dend_19 { pt3dadd( 8.29292, 112.146, -15.6021, 0.59 ) }
    dend_19 { pt3dadd( 7.35227, 112.986, -15.5103, 0.59 ) }
    dend_19 { pt3dadd( 6.15937, 114.077, -15.4503, 0.59 ) }
    dend_19 { pt3dadd( 5.35515, 114.88, -15.4312, 0.59 ) }
    dend_19 { pt3dadd( 4.47336, 115.861, -15.4015, 0.59 ) }
    dend_19 { pt3dadd( 3.86458, 116.635, -15.3761, 0.59 ) }
    dend_19 { pt3dadd( 3.02408, 117.918, -15.2981, 0.59 ) }
    dend_19 { pt3dadd( 2.54341, 118.942, -15.2275, 0.59 ) }
    dend_19 { pt3dadd( 2.33033, 120.141, -15.1377, 0.59 ) }
    dend_19 { pt3dadd( 2.44702, 121.199, -15.0194, 0.59 ) }
    dend_19 { pt3dadd( 2.80659, 122.264, -14.8728, 0.59 ) }
    dend_19 { pt3dadd( 3.39858, 123.372, -14.6992, 0.59 ) }
    dend_19 { pt3dadd( 3.90651, 124.081, -14.5784, 0.59 ) }
    dend_19 { pt3dadd( 4.59006, 124.9, -14.4336, 0.59 ) }
    dend_19 { pt3dadd( 5.11544, 125.486, -14.3536, 0.59 ) }
    dend_19 { pt3dadd( 5.57483, 125.994, -14.2793, 0.59 ) }
    dend_19 { pt3dadd( 6.17379, 126.699, -14.1673, 0.59 ) }
    dend_19 { pt3dadd( 6.86904, 127.679, -14.3405, 0.59 ) }
    dend_19 { pt3dadd( 7.23608, 128.311, -14.5859, 0.59 ) }
    dend_19 { pt3dadd( 7.69132, 129.281, -15.0941, 0.59 ) }
    dend_19 { pt3dadd( 8.17121, 130.578, -16.0025, 0.59 ) }
    dend_19 { pt3dadd( 8.3948, 131.378, -16.6289, 0.59 ) }
    dend_19 { pt3dadd( 9.21504, 135.686, -20.2167, 0.59 ) }
    dend_19 { pt3dadd( 9.2928, 136.43, -20.8384, 0.59 ) }
    dend_19 { pt3dadd( 9.31697, 137.083, -21.3602, 0.59 ) }
    dend_19 { pt3dadd( 9.28087, 139.081, -22.8706, 0.59 ) }
    dend_19 { pt3dadd( 9.21321, 140.035, -23.5172, 0.59 ) }
    dend_19 { pt3dadd( 9.14764, 140.615, -23.7707, 0.59 ) }
    dend_19 { pt3dadd( 8.97423, 141.961, -23.8413, 0.44 ) }
    dend_19 { pt3dadd( 8.84767, 143.097, -23.7933, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_19 { pt3dadd( 8.76109, 143.932, -23.6482, 0.44 ) }
    dend_19 { pt3dadd( 8.68944, 144.687, -23.3856, 0.44 ) }
    dend_19 { pt3dadd( 8.60982, 146.234, -22.7659, 0.44 ) }
    dend_19 { pt3dadd( 8.60719, 147.697, -22.1571, 0.44 ) }
    dend_19 { pt3dadd( 8.63368, 148.388, -21.8748, 0.44 ) }
    dend_19 { pt3dadd( 8.71965, 149.833, -21.2982, 0.44 ) }
    dend_19 { pt3dadd( 8.80725, 151.111, -20.784, 0.44 ) }
    dend_19 { pt3dadd( 8.89565, 152.381, -20.2968, 0.44 ) }
    dend_19 { pt3dadd( 8.94442, 153.403, -19.9571, 0.44 ) }
    dend_19 { pt3dadd( 8.94569, 154.436, -19.6973, 0.44 ) }
    dend_19 { pt3dadd( 8.89079, 155.903, -19.3952, 0.44 ) }
    dend_19 { pt3dadd( 8.81231, 157.044, -19.2372, 0.44 ) }
    dend_19 { pt3dadd( 8.71397, 158.025, -19.1342, 0.44 ) }
    dend_19 { pt3dadd( 8.51734, 159.557, -18.9662, 0.44 ) }
    dend_19 { pt3dadd( 8.39716, 160.413, -18.8628, 0.44 ) }
    dend_19 { pt3dadd( 8.28889, 161.198, -18.7538, 0.44 ) }
    dend_19 { pt3dadd( 8.1217, 162.601, -18.553, 0.44 ) }
    dend_19 { pt3dadd( 8.00765, 164.09, -18.3531, 0.44 ) }
    dend_19 { pt3dadd( 7.97359, 165.018, -18.2183, 0.44 ) }
    dend_19 { pt3dadd( 7.94588, 166.303, -18.0284, 0.44 ) }
    dend_19 { pt3dadd( 7.92536, 167.533, -17.8579, 0.44 ) }
    dend_19 { pt3dadd( 7.91678, 168.668, -17.7197, 0.44 ) }
    dend_19 { pt3dadd( 7.92791, 169.433, -17.6585, 0.44 ) }
    dend_19 { pt3dadd( 7.96723, 170.704, -17.6422, 0.44 ) }
    dend_19 { pt3dadd( 8.01777, 172.146, -17.7285, 0.44 ) }
    dend_19 { pt3dadd( 8.06264, 173.347, -17.8714, 0.44 ) }
    dend_19 { pt3dadd( 8.09364, 174.702, -18.0808, 0.44 ) }
    dend_19 { pt3dadd( 8.11476, 176.134, -18.3163, 0.44 ) }
    dend_19 { pt3dadd( 8.11089, 177.72, -18.5829, 0.44 ) }
    dend_19 { pt3dadd( 8.10505, 179.514, -18.8827, 0.44 ) }
    dend_19 { pt3dadd( 8.11195, 180.709, -19.0715, 0.44 ) }
    dend_19 { pt3dadd( 8.10784, 181.746, -19.2166, 0.44 ) }
    dend_19 { pt3dadd( 8.07945, 183.389, -19.3946, 0.44 ) }
    dend_19 { pt3dadd( 8.04984, 184.311, -19.4528, 0.44 ) }
    dend_19 { pt3dadd( 8.00718, 185.6, -19.4851, 0.44 ) }
    dend_19 { pt3dadd( 7.9761, 186.734, -19.4851, 0.44 ) }
    dend_19 { pt3dadd( 7.95874, 187.701, -19.5186, 0.44 ) }
    dend_19 { pt3dadd( 7.95626, 189.2, -19.6125, 0.44 ) }
    dend_19 { pt3dadd( 7.96687, 190.579, -19.7287, 0.44 ) }
    dend_19 { pt3dadd( 7.97629, 191.511, -19.8195, 0.44 ) }
    dend_19 { pt3dadd( 7.96524, 192.776, -19.9541, 0.44 ) }
    dend_19 { pt3dadd( 7.9383, 194.413, -20.1335, 0.44 ) }
    dend_19 { pt3dadd( 7.91713, 195.99, -20.3047, 0.44 ) }
    dend_19 { pt3dadd( 7.89221, 196.979, -20.4063, 0.44 ) }
    dend_19 { pt3dadd( 7.82939, 198.219, -20.5139, 0.44 ) }
    dend_19 { pt3dadd( 7.74099, 199.413, -20.5895, 0.44 ) }
    dend_19 { pt3dadd( 7.64302, 200.475, -20.6173, 0.44 ) }
    dend_19 { pt3dadd( 7.55478, 201.401, -20.6326, 0.44 ) }
    dend_19 { pt3dadd( 7.49112, 202.196, -20.6656, 0.44 ) }
    dend_19 { pt3dadd( 7.43361, 203.715, -20.8454, 0.44 ) }
    dend_19 { pt3dadd( 7.45966, 204.842, -21.0529, 0.44 ) }
    dend_19 { pt3dadd( 7.54637, 205.902, -21.2636, 0.44 ) }
    dend_19 { pt3dadd( 7.78062, 207.411, -21.569, 0.44 ) }
    dend_19 { pt3dadd( 7.95378, 208.177, -21.7145, 0.44 ) }
    dend_19 { pt3dadd( 8.47982, 209.974, -22.0264, 0.44 ) }
    dend_19 { pt3dadd( 8.68575, 210.591, -22.1164, 0.44 ) }
    dend_19 { pt3dadd( 9.10794, 211.896, -22.2407, 0.44 ) }
    dend_19 { pt3dadd( 9.47511, 213.157, -22.2941, 0.44 ) }
    dend_19 { pt3dadd( 9.81706, 214.536, -22.2666, 0.44 ) }
    dend_19 { pt3dadd( 9.94934, 215.168, -22.2397, 0.44 ) }
    dend_19 { pt3dadd( 10.1111, 216.177, -22.1727, 0.44 ) }
    dend_19 { pt3dadd( 10.3422, 218.022, -22.0891, 0.44 ) }
    dend_19 { pt3dadd( 10.4766, 219.304, -22.0685, 0.44 ) }
    dend_19 { pt3dadd( 10.5479, 220.026, -22.0509, 0.44 ) }
    dend_19 { pt3dadd( 10.6857, 221.038, -22.0192, 0.44 ) }
    dend_19 { pt3dadd( 10.8827, 222.109, -21.98, 0.44 ) }
    dend_19 { pt3dadd( 11.2046, 223.427, -21.9254, 0.44 ) }
    dend_19 { pt3dadd( 11.6087, 224.801, -21.8647, 0.44 ) }
    dend_19 { pt3dadd( 11.738, 225.201, -21.8467, 0.44 ) }
    dend_19 { pt3dadd( 12.124, 226.384, -21.8004, 0.44 ) }
    dend_19 { pt3dadd( 12.4114, 227.296, -21.7587, 0.44 ) }
    dend_19 { pt3dadd( 12.679, 228.191, -21.7168, 0.44 ) }
    dend_19 { pt3dadd( 13.0322, 229.578, -21.6586, 0.44 ) }
    dend_19 { pt3dadd( 13.2854, 230.762, -21.6022, 0.44 ) }
    dend_19 { pt3dadd( 13.5338, 232.169, -21.5331, 0.44 ) }
    dend_19 { pt3dadd( 13.6693, 233.147, -21.4838, 0.44 ) }
    dend_19 { pt3dadd( 13.7546, 233.867, -21.4484, 0.44 ) }
    dend_19 { pt3dadd( 13.9393, 235.441, -21.3773, 0.44 ) }
    dend_19 { pt3dadd( 14.0245, 236.141, -21.3681, 0.44 ) }
    dend_19 { pt3dadd( 14.1847, 237.352, -21.3915, 0.44 ) }
    dend_19 { pt3dadd( 14.2649, 237.924, -21.4177, 0.44 ) }
    dend_19 { pt3dadd( 14.4033, 238.839, -21.4982, 0.44 ) }
    dend_19 { pt3dadd( 14.5842, 239.985, -21.6218, 0.44 ) }
    dend_19 { pt3dadd( 14.8123, 241.515, -21.8057, 0.44 ) }
    dend_19 { pt3dadd( 15.0046, 242.91, -21.9789, 0.44 ) }
    dend_19 { pt3dadd( 15.1579, 244.038, -22.1201, 0.44 ) }
    dend_19 { pt3dadd( 15.3716, 245.497, -22.2933, 0.44 ) }
    dend_19 { pt3dadd( 15.5249, 246.4, -22.3905, 0.44 ) }
    dend_19 { pt3dadd( 15.7894, 247.667, -22.499, 0.44 ) }
    dend_19 { pt3dadd( 15.967, 248.36, -22.5323, 0.44 ) }
    dend_19 { pt3dadd( 16.1678, 249.097, -22.5542, 0.44 ) }
    dend_19 { pt3dadd( 16.4566, 250.175, -22.5633, 0.44 ) }
    dend_19 { pt3dadd( 16.7397, 251.187, -22.5529, 0.44 ) }
    dend_19 { pt3dadd( 17.1971, 252.699, -22.5362, 0.44 ) }
    dend_19 { pt3dadd( 17.7534, 254.458, -22.5167, 0.44 ) }
    dend_19 { pt3dadd( 18.3686, 256.362, -22.5482, 0.44 ) }
    dend_19 { pt3dadd( 18.9935, 258.264, -22.6016, 0.44 ) }
    dend_19 { pt3dadd( 19.468, 259.691, -22.6297, 0.44 ) }
    dend_19 { pt3dadd( 20.0355, 261.387, -22.6514, 0.44 ) }
    dend_19 { pt3dadd( 20.5616, 262.901, -22.6604, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_19 { pt3dadd( 21.1723, 264.572, -22.577, 0.44 ) }
    dend_19 { pt3dadd( 21.5611, 265.644, -22.4396, 0.44 ) }
    dend_19 { pt3dadd( 21.9325, 266.674, -22.1741, 0.44 ) }
    dend_19 { pt3dadd( 22.2519, 267.64, -21.8229, 0.44 ) }
    dend_19 { pt3dadd( 22.6953, 269.142, -21.1487, 0.44 ) }
    dend_19 { pt3dadd( 23.221, 271.103, -20.0742, 0.44 ) }
    dend_19 { pt3dadd( 23.6797, 272.932, -18.9468, 0.44 ) }
    dend_19 { pt3dadd( 24.0777, 274.618, -17.8717, 0.44 ) }
    dend_19 { pt3dadd( 24.2799, 275.499, -17.2897, 0.44 ) }
    dend_19 { pt3dadd( 24.438, 276.221, -16.759, 0.44 ) }
    dend_19 { pt3dadd( 24.6374, 277.248, -15.9113, 0.44 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 11/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -38.4404, 55.7426, 15.0641, 0.44 ) }
    dend_12 { pt3dadd( -39.6627, 56.487, 16.5275, 0.44 ) }
    dend_12 { pt3dadd( -40.2577, 56.7336, 17.3106, 0.44 ) }
    dend_12 { pt3dadd( -40.5572, 56.8231, 17.7319, 0.44 ) }
    dend_12 { pt3dadd( -40.9609, 56.8875, 18.2659, 0.44 ) }
    dend_12 { pt3dadd( -41.5149, 56.9048, 18.9016, 0.44 ) }
    dend_12 { pt3dadd( -43.8211, 56.6785, 21.2299, 0.44 ) }
    dend_12 { pt3dadd( -44.1115, 56.5554, 21.5086, 0.44 ) }
    dend_12 { pt3dadd( -44.4168, 56.3855, 21.8187, 0.44 ) }
    dend_12 { pt3dadd( -45.0691, 55.9516, 22.5159, 0.44 ) }
    dend_12 { pt3dadd( -45.729, 55.4286, 23.2536, 0.44 ) }
    dend_12 { pt3dadd( -46.2686, 54.9266, 23.7887, 0.44 ) }
    dend_12 { pt3dadd( -47.1718, 54.0366, 24.0179, 0.44 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 24/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -38.4404, 55.7426, 15.0641, 0.44 ) }
    dend_11 { pt3dadd( -39.3195, 56.1163, 14.9481, 0.44 ) }
    dend_11 { pt3dadd( -40.2837, 56.4936, 14.819, 0.44 ) }
    dend_11 { pt3dadd( -41.3928, 56.8972, 14.786, 0.44 ) }
    dend_11 { pt3dadd( -42.3913, 57.2237, 14.8183, 0.44 ) }
    dend_11 { pt3dadd( -43.5806, 57.6018, 14.8959, 0.44 ) }
    dend_11 { pt3dadd( -44.4891, 57.9053, 14.9716, 0.44 ) }
    dend_11 { pt3dadd( -45.2371, 58.1824, 15.0973, 0.44 ) }
    dend_11 { pt3dadd( -46.6801, 58.8037, 15.4649, 0.44 ) }
    dend_11 { pt3dadd( -47.5647, 59.2495, 15.7658, 0.44 ) }
    dend_11 { pt3dadd( -48.1402, 59.5514, 15.9934, 0.44 ) }
    dend_11 { pt3dadd( -48.8486, 59.9591, 16.3002, 0.44 ) }
    dend_11 { pt3dadd( -49.9758, 60.7008, 16.8145, 0.44 ) }
    dend_11 { pt3dadd( -50.3121, 60.9471, 16.9843, 0.44 ) }
    dend_11 { pt3dadd( -50.9316, 61.4329, 17.2908, 0.44 ) }
    dend_11 { pt3dadd( -51.7231, 62.0773, 17.7138, 0.44 ) }
    dend_11 { pt3dadd( -52.2684, 62.5068, 17.9929, 0.44 ) }
    dend_11 { pt3dadd( -53.0771, 63.1134, 18.3582, 0.44 ) }
    dend_11 { pt3dadd( -54.156, 63.8644, 18.7429, 0.44 ) }
    dend_11 { pt3dadd( -54.8174, 64.3172, 18.9606, 0.44 ) }
    dend_11 { pt3dadd( -55.5718, 64.8214, 19.1825, 0.44 ) }
    dend_11 { pt3dadd( -56.4367, 65.3641, 19.4344, 0.44 ) }
    dend_11 { pt3dadd( -57.3028, 65.8456, 19.6534, 0.44 ) }
    dend_11 { pt3dadd( -58.3435, 66.3806, 19.9062, 0.44 ) }
    dend_11 { pt3dadd( -58.6649, 66.5368, 19.9863, 0.44 ) }
    dend_11 { pt3dadd( -59.3674, 66.877, 20.1886, 0.44 ) }
    dend_11 { pt3dadd( -61.0086, 67.7069, 20.7145, 0.44 ) }
    dend_11 { pt3dadd( -61.8331, 68.1666, 20.9996, 0.44 ) }
    dend_11 { pt3dadd( -62.8063, 68.7925, 21.3767, 0.44 ) }
    dend_11 { pt3dadd( -63.5031, 69.2816, 21.6511, 0.44 ) }
    dend_11 { pt3dadd( -64.2946, 69.8736, 21.944, 0.44 ) }
    dend_11 { pt3dadd( -64.8441, 70.312, 22.1238, 0.44 ) }
    dend_11 { pt3dadd( -65.6258, 70.9494, 22.3128, 0.44 ) }
    dend_11 { pt3dadd( -66.7146, 71.8101, 22.5237, 0.44 ) }
    dend_11 { pt3dadd( -67.5906, 72.4543, 22.6383, 0.44 ) }
    dend_11 { pt3dadd( -68.2269, 72.8854, 22.7082, 0.44 ) }
    dend_11 { pt3dadd( -68.9546, 73.3287, 22.7492, 0.44 ) }
    dend_11 { pt3dadd( -70.0438, 73.9449, 22.7594, 0.44 ) }
    dend_11 { pt3dadd( -71.1913, 74.5796, 22.6631, 0.44 ) }
    dend_11 { pt3dadd( -72.2992, 75.1891, 22.4875, 0.44 ) }
    dend_11 { pt3dadd( -73.3378, 75.7714, 22.2894, 0.44 ) }
    dend_11 { pt3dadd( -74.547, 76.46, 22.0616, 0.44 ) }
    dend_11 { pt3dadd( -75.707, 77.1581, 21.8463, 0.44 ) }
    dend_11 { pt3dadd( -77.065, 78.0395, 21.5484, 0.44 ) }
    dend_11 { pt3dadd( -78.0133, 78.7047, 21.3014, 0.44 ) }
    dend_11 { pt3dadd( -78.8804, 79.3596, 21.0608, 0.44 ) }
    dend_11 { pt3dadd( -79.9889, 80.2514, 20.758, 0.44 ) }
    dend_11 { pt3dadd( -80.7668, 80.8739, 20.5718, 0.44 ) }
    dend_11 { pt3dadd( -81.9056, 81.6929, 20.3371, 0.44 ) }
    dend_11 { pt3dadd( -82.7753, 82.2651, 20.0985, 0.44 ) }
    dend_11 { pt3dadd( -84.0708, 83.0789, 19.6278, 0.44 ) }
    dend_11 { pt3dadd( -84.7645, 83.497, 19.3365, 0.44 ) }
    dend_11 { pt3dadd( -85.6491, 84.005, 18.9409, 0.44 ) }
    dend_11 { pt3dadd( -86.7858, 84.621, 18.3887, 0.44 ) }
    dend_11 { pt3dadd( -89.3159, 85.9197, 17.1722, 0.44 ) }
    dend_11 { pt3dadd( -90.1608, 86.358, 16.7485, 0.44 ) }
    dend_11 { pt3dadd( -90.8738, 86.7457, 16.374, 0.44 ) }
    dend_11 { pt3dadd( -91.7, 87.2295, 15.9467, 0.44 ) }
    dend_11 { pt3dadd( -93.4252, 88.3116, 15.1073, 0.44 ) }
    dend_11 { pt3dadd( -94.4324, 88.9417, 14.7009, 0.44 ) }
    dend_11 { pt3dadd( -95.0953, 89.3031, 14.5325, 0.44 ) }
    dend_11 { pt3dadd( -95.9341, 89.6952, 14.3499, 0.44 ) }
    dend_11 { pt3dadd( -96.748, 90.0257, 14.2141, 0.44 ) }
    dend_11 { pt3dadd( -97.4263, 90.2625, 14.1499, 0.44 ) }
    dend_11 { pt3dadd( -98.3996, 90.5729, 14.1499, 0.44 ) }
    dend_11 { pt3dadd( -99.0015, 90.7645, 14.1499, 0.44 ) }
    dend_11 { pt3dadd( -100.12, 91.1375, 14.0791, 0.44 ) }
    dend_11 { pt3dadd( -100.769, 91.3692, 13.9772, 0.44 ) }
    dend_11 { pt3dadd( -101.635, 91.7063, 13.7843, 0.44 ) }
    dend_11 { pt3dadd( -102.691, 92.1975, 13.4178, 0.44 ) }
    dend_11 { pt3dadd( -103.658, 92.7501, 12.9782, 0.44 ) }
    dend_11 { pt3dadd( -105.067, 93.7483, 12.2025, 0.44 ) }
    dend_11 { pt3dadd( -105.965, 94.5264, 11.6305, 0.44 ) }
    dend_11 { pt3dadd( -106.598, 95.2159, 11.1369, 0.44 ) }
    dend_11 { pt3dadd( -107.497, 96.4188, 10.3273, 0.44 ) }
    dend_11 { pt3dadd( -107.935, 97.1141, 9.85334, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_11 { pt3dadd( -108.35, 97.8947, 9.35143, 0.44 ) }
    dend_11 { pt3dadd( -108.754, 98.7795, 8.85307, 0.44 ) }
    dend_11 { pt3dadd( -109.57, 100.725, 7.86409, 0.44 ) }
    dend_11 { pt3dadd( -109.867, 101.465, 7.51328, 0.44 ) }
    dend_11 { pt3dadd( -110.369, 102.645, 7.02338, 0.44 ) }
    dend_11 { pt3dadd( -110.69, 103.33, 6.73743, 0.44 ) }
    dend_11 { pt3dadd( -110.944, 103.827, 6.5532, 0.44 ) }
    dend_11 { pt3dadd( -111.208, 104.34, 6.34945, 0.44 ) }
    dend_11 { pt3dadd( -111.563, 104.996, 6.1456, 0.44 ) }
    dend_11 { pt3dadd( -111.831, 105.491, 6.0045, 0.44 ) }
    dend_11 { pt3dadd( -112.171, 106.109, 5.87413, 0.44 ) }
    dend_11 { pt3dadd( -112.889, 107.374, 5.54429, 0.44 ) }
    dend_11 { pt3dadd( -113.738, 108.964, 5.04448, 0.44 ) }
    // Section: dend_9, id: dend_9, parent: dend_3 (entry count 13/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -64.4201, 73.0711, -4.55871, 0.44 ) }
    dend_9 { pt3dadd( -63.8976, 74.571, -4.64986, 0.44 ) }
    dend_9 { pt3dadd( -63.6173, 75.3839, -4.83121, 0.44 ) }
    dend_9 { pt3dadd( -63.4198, 75.979, -4.99738, 0.44 ) }
    dend_9 { pt3dadd( -63.2221, 76.7121, -5.25841, 0.44 ) }
    dend_9 { pt3dadd( -62.8852, 78.2671, -5.84814, 0.44 ) }
    dend_9 { pt3dadd( -62.6903, 79.3517, -6.2529, 0.44 ) }
    dend_9 { pt3dadd( -62.3954, 81.4622, -7.03257, 0.44 ) }
    dend_9 { pt3dadd( -62.3043, 82.1204, -7.27624, 0.44 ) }
    dend_9 { pt3dadd( -62.0925, 83.66, -7.83683, 0.44 ) }
    dend_9 { pt3dadd( -61.9671, 84.6936, -8.19984, 0.44 ) }
    dend_9 { pt3dadd( -61.8401, 85.9111, -8.59098, 0.44 ) }
    dend_9 { pt3dadd( -61.7182, 87.0284, -8.94539, 0.44 ) }
    dend_9 { pt3dadd( -61.6108, 87.8886, -9.16384, 0.44 ) }
    dend_9 { pt3dadd( -61.5514, 88.3015, -9.27471, 0.44 ) }
    dend_9 { pt3dadd( -61.4775, 88.7638, -9.39207, 0.44 ) }
    dend_9 { pt3dadd( -61.4158, 89.2439, -9.51767, 0.44 ) }
    dend_9 { pt3dadd( -61.2959, 91.2492, -10.0198, 0.44 ) }
    dend_9 { pt3dadd( -61.3084, 91.947, -10.1756, 0.44 ) }
    dend_9 { pt3dadd( -61.3828, 93.2137, -10.418, 0.44 ) }
    dend_9 { pt3dadd( -61.4501, 94.3498, -10.5989, 0.44 ) }
    dend_9 { pt3dadd( -61.4942, 96.1867, -10.822, 0.44 ) }
    dend_9 { pt3dadd( -61.4809, 97.2836, -10.9409, 0.44 ) }
    dend_9 { pt3dadd( -61.4432, 98.3704, -11.0188, 0.44 ) }
    dend_9 { pt3dadd( -61.3802, 99.1339, -11.1703, 0.44 ) }
    dend_9 { pt3dadd( -61.2763, 99.7511, -11.3698, 0.44 ) }
    dend_9 { pt3dadd( -60.9692, 100.746, -12.0495, 0.44 ) }
    dend_9 { pt3dadd( -60.5975, 101.633, -13.0663, 0.44 ) }
    dend_9 { pt3dadd( -60.3136, 102.339, -14.0841, 0.44 ) }
    dend_9 { pt3dadd( -59.8488, 103.673, -16.1878, 0.44 ) }
    dend_9 { pt3dadd( -59.7304, 104.15, -16.9802, 0.44 ) }
    dend_9 { pt3dadd( -59.3574, 106.219, -20.5935, 0.44 ) }
    dend_9 { pt3dadd( -59.1665, 107.856, -23.6207, 0.44 ) }
    dend_9 { pt3dadd( -59.045, 109.205, -26.1128, 0.44 ) }
    dend_9 { pt3dadd( -59.0152, 109.606, -26.8412, 0.44 ) }
    dend_9 { pt3dadd( -58.9728, 111.101, -29.3818, 0.44 ) }
    dend_9 { pt3dadd( -58.9609, 112.702, -31.9857, 0.44 ) }
    dend_9 { pt3dadd( -58.8957, 115.467, -36.0411, 0.44 ) }
    dend_9 { pt3dadd( -58.835, 116.052, -36.8686, 0.44 ) }
    dend_9 { pt3dadd( -58.6979, 116.662, -37.6886, 0.44 ) }
    dend_9 { pt3dadd( -58.3277, 117.801, -39.1797, 0.44 ) }
    dend_9 { pt3dadd( -57.8403, 119.014, -40.6102, 0.44 ) }
    dend_9 { pt3dadd( -57.4222, 120.001, -41.5803, 0.44 ) }
    dend_9 { pt3dadd( -56.4045, 122.33, -43.5011, 0.44 ) }
    dend_9 { pt3dadd( -55.7715, 123.966, -44.7717, 0.44 ) }
    dend_9 { pt3dadd( -55.0313, 126.14, -46.3015, 0.44 ) }
    dend_9 { pt3dadd( -54.6754, 127.402, -47.0761, 0.44 ) }
    dend_9 { pt3dadd( -54.2388, 129.461, -48.1673, 0.44 ) }
    dend_9 { pt3dadd( -54.078, 130.651, -48.7228, 0.44 ) }
    dend_9 { pt3dadd( -53.9207, 133.286, -49.7239, 0.44 ) }
    dend_9 { pt3dadd( -53.9036, 134.308, -50.0758, 0.44 ) }
    dend_9 { pt3dadd( -53.9343, 136.923, -50.8814, 0.44 ) }
    dend_9 { pt3dadd( -53.9602, 137.873, -51.2012, 0.44 ) }
    dend_9 { pt3dadd( -53.9976, 138.983, -51.6047, 0.44 ) }
    dend_9 { pt3dadd( -54.0168, 140.188, -52.0211, 0.44 ) }
    dend_9 { pt3dadd( -54.0029, 141.316, -52.2779, 0.44 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 69/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -64.4201, 73.0711, -4.55871, 0.52 ) }
    dend_4 { pt3dadd( -65.314, 73.5056, -4.78544, 0.52 ) }
    dend_4 { pt3dadd( -66.9363, 74.2069, -5.25466, 0.52 ) }
    dend_4 { pt3dadd( -67.4773, 74.389, -5.40681, 0.52 ) }
    dend_4 { pt3dadd( -68.6595, 74.6934, -5.70819, 0.52 ) }
    dend_4 { pt3dadd( -69.573, 74.9122, -5.97576, 0.52 ) }
    dend_4 { pt3dadd( -70.3392, 75.1054, -6.20748, 0.52 ) }
    dend_4 { pt3dadd( -71.4953, 75.4218, -6.62598, 0.52 ) }
    dend_4 { pt3dadd( -72.6347, 75.8099, -7.07292, 0.52 ) }
    dend_4 { pt3dadd( -73.7071, 76.2506, -7.55756, 0.52 ) }
    dend_4 { pt3dadd( -74.9771, 76.8662, -8.20376, 0.52 ) }
    dend_4 { pt3dadd( -75.8971, 77.3685, -8.68115, 0.52 ) }
    dend_4 { pt3dadd( -77.1429, 78.1724, -9.30119, 0.52 ) }
    dend_4 { pt3dadd( -77.9911, 78.8154, -9.69074, 0.52 ) }
    dend_4 { pt3dadd( -78.7557, 79.4557, -9.99622, 0.52 ) }
    dend_4 { pt3dadd( -79.672, 80.2214, -10.246, 0.52 ) }
    dend_4 { pt3dadd( -80.5003, 80.8417, -10.3302, 0.52 ) }
    dend_4 { pt3dadd( -81.544, 81.5474, -10.3279, 0.52 ) }
    dend_4 { pt3dadd( -82.2035, 81.9608, -10.2572, 0.52 ) }
    dend_4 { pt3dadd( -83.1354, 82.5607, -10.1077, 0.52 ) }
    dend_4 { pt3dadd( -84.0369, 83.1901, -9.89729, 0.52 ) }
    dend_4 { pt3dadd( -85.0304, 83.9623, -9.61394, 0.52 ) }
    dend_4 { pt3dadd( -85.4362, 84.3283, -9.49333, 0.52 ) }
    dend_4 { pt3dadd( -86.0604, 84.9924, -9.33456, 0.52 ) }
    dend_4 { pt3dadd( -86.7378, 85.8455, -9.217, 0.52 ) }
    dend_4 { pt3dadd( -87.2872, 86.6565, -9.19343, 0.52 ) }
    dend_4 { pt3dadd( -87.7432, 87.4546, -9.21362, 0.52 ) }
    dend_4 { pt3dadd( -88.1932, 88.3459, -9.25663, 0.52 ) }
    dend_4 { pt3dadd( -88.6943, 89.4055, -9.33058, 0.52 ) }
    dend_4 { pt3dadd( -89.1933, 90.587, -9.43604, 0.52 ) }
    dend_4 { pt3dadd( -89.6107, 91.6277, -9.58775, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_4 { pt3dadd( -89.8386, 92.2227, -9.72356, 0.52 ) }
    dend_4 { pt3dadd( -90.1397, 92.9733, -9.92, 0.52 ) }
    dend_4 { pt3dadd( -90.5599, 93.9177, -10.2214, 0.52 ) }
    dend_4 { pt3dadd( -90.8636, 94.5326, -10.4345, 0.52 ) }
    dend_4 { pt3dadd( -91.5015, 95.7113, -10.8822, 0.52 ) }
    dend_4 { pt3dadd( -92.3082, 97.0634, -11.4076, 0.52 ) }
    dend_4 { pt3dadd( -93.408, 98.6841, -12.0884, 0.52 ) }
    dend_4 { pt3dadd( -94.3259, 99.9514, -12.6175, 0.52 ) }
    dend_4 { pt3dadd( -94.8836, 100.687, -12.9032, 0.52 ) }
    dend_4 { pt3dadd( -95.3997, 101.327, -13.1217, 0.52 ) }
    dend_4 { pt3dadd( -96.1907, 102.254, -13.3653, 0.52 ) }
    dend_4 { pt3dadd( -97.0626, 103.212, -13.5584, 0.52 ) }
    dend_4 { pt3dadd( -98.2873, 104.488, -13.7706, 0.52 ) }
    dend_4 { pt3dadd( -99.2619, 105.443, -13.8807, 0.52 ) }
    dend_4 { pt3dadd( -100.262, 106.361, -13.9686, 0.52 ) }
    dend_4 { pt3dadd( -101.749, 107.673, -14.0601, 0.52 ) }
    dend_4 { pt3dadd( -102.578, 108.372, -14.0861, 0.52 ) }
    dend_4 { pt3dadd( -103.395, 109.01, -14.0861, 0.52 ) }
    dend_4 { pt3dadd( -104.305, 109.641, -14.0861, 0.52 ) }
    dend_4 { pt3dadd( -105.491, 110.438, -14.0393, 0.52 ) }
    dend_4 { pt3dadd( -106.85, 111.375, -13.9399, 0.52 ) }
    dend_4 { pt3dadd( -107.431, 111.783, -13.8822, 0.52 ) }
    dend_4 { pt3dadd( -108.625, 112.652, -13.7427, 0.52 ) }
    dend_4 { pt3dadd( -109.893, 113.602, -13.5786, 0.52 ) }
    dend_4 { pt3dadd( -111.288, 114.668, -13.385, 0.52 ) }
    dend_4 { pt3dadd( -112.65, 115.7, -13.1893, 0.52 ) }
    dend_4 { pt3dadd( -113.513, 116.341, -13.0702, 0.52 ) }
    dend_4 { pt3dadd( -114.19, 116.834, -12.9903, 0.52 ) }
    dend_4 { pt3dadd( -114.945, 117.374, -12.8996, 0.52 ) }
    dend_4 { pt3dadd( -115.613, 117.824, -12.8627, 0.52 ) }
    dend_4 { pt3dadd( -116.248, 118.22, -12.8585, 0.52 ) }
    dend_4 { pt3dadd( -117.364, 118.874, -12.8506, 0.52 ) }
    dend_4 { pt3dadd( -118.784, 119.664, -12.8403, 0.52 ) }
    dend_4 { pt3dadd( -120.011, 120.315, -12.8319, 0.52 ) }
    dend_4 { pt3dadd( -121.353, 121.051, -12.8245, 0.52 ) }
    // Section: dend_88, id: dend_88, parent: dend_80 (entry count 35/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( 44.9768, -46.0828, 8.71296, 0.37 ) }
    dend_88 { pt3dadd( 44.5939, -44.3198, 8.00915, 0.37 ) }
    dend_88 { pt3dadd( 44.4212, -43.5249, 7.69177, 0.37 ) }
    dend_88 { pt3dadd( 44.1957, -42.487, 7.27743, 0.37 ) }
    dend_88 { pt3dadd( 43.9013, -41.1317, 6.73635, 0.37 ) }
    dend_88 { pt3dadd( 43.7407, -40.3922, 6.44115, 0.37 ) }
    dend_88 { pt3dadd( 43.4141, -38.889, 5.841, 0.37 ) }
    // Section: dend_81, id: dend_81, parent: dend_80 (entry count 42/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( 44.9768, -46.0828, 8.71296, 0.44 ) }
    dend_81 { pt3dadd( 45.9787, -46.428, 8.73648, 0.44 ) }
    dend_81 { pt3dadd( 46.8023, -46.7398, 8.75323, 0.44 ) }
    dend_81 { pt3dadd( 47.7027, -47.1431, 8.7696, 0.44 ) }
    dend_81 { pt3dadd( 48.7065, -47.6394, 8.84453, 0.44 ) }
    dend_81 { pt3dadd( 50.1891, -48.4273, 9.03481, 0.44 ) }
    dend_81 { pt3dadd( 51.2177, -48.9787, 9.19816, 0.44 ) }
    dend_81 { pt3dadd( 51.8051, -49.3058, 9.31225, 0.44 ) }
    dend_81 { pt3dadd( 52.7325, -49.8214, 9.54441, 0.44 ) }
    dend_81 { pt3dadd( 53.8209, -50.449, 9.87099, 0.44 ) }
    dend_81 { pt3dadd( 54.7069, -51.0008, 10.2586, 0.44 ) }
    dend_81 { pt3dadd( 55.3974, -51.5021, 10.6507, 0.44 ) }
    dend_81 { pt3dadd( 56.2853, -52.2331, 11.2017, 0.44 ) }
    dend_81 { pt3dadd( 56.9208, -52.7874, 11.5733, 0.44 ) }
    dend_81 { pt3dadd( 57.6268, -53.4101, 11.8934, 0.44 ) }
    dend_81 { pt3dadd( 58.8941, -54.5382, 12.4588, 0.44 ) }
    dend_81 { pt3dadd( 59.8844, -55.4066, 12.9096, 0.44 ) }
    dend_81 { pt3dadd( 60.886, -56.2583, 13.3556, 0.44 ) }
    dend_81 { pt3dadd( 62.0447, -57.1958, 13.8292, 0.44 ) }
    dend_81 { pt3dadd( 63.1829, -58.0577, 14.2239, 0.44 ) }
    dend_81 { pt3dadd( 65.3012, -59.6302, 14.896, 0.44 ) }
    dend_81 { pt3dadd( 65.8629, -60.0453, 15.055, 0.44 ) }
    dend_81 { pt3dadd( 66.6459, -60.6147, 15.3126, 0.44 ) }
    dend_81 { pt3dadd( 67.3018, -61.0861, 15.5509, 0.44 ) }
    dend_81 { pt3dadd( 68.2602, -61.7649, 15.9374, 0.44 ) }
    dend_81 { pt3dadd( 69.2111, -62.381, 16.2961, 0.44 ) }
    dend_81 { pt3dadd( 70.0845, -62.8677, 16.4965, 0.44 ) }
    dend_81 { pt3dadd( 70.7865, -63.1954, 16.6537, 0.44 ) }
    dend_81 { pt3dadd( 71.4895, -63.4518, 16.8005, 0.44 ) }
    dend_81 { pt3dadd( 72.6244, -63.8329, 17.0072, 0.44 ) }
    dend_81 { pt3dadd( 73.9299, -64.264, 17.2086, 0.44 ) }
    dend_81 { pt3dadd( 74.8104, -64.6054, 17.3138, 0.44 ) }
    dend_81 { pt3dadd( 75.4484, -64.9559, 17.3676, 0.44 ) }
    dend_81 { pt3dadd( 75.9393, -65.3032, 17.3995, 0.44 ) }
    dend_81 { pt3dadd( 77.1628, -66.3223, 17.4425, 0.44 ) }
    dend_81 { pt3dadd( 77.6349, -66.7757, 17.4425, 0.44 ) }
    dend_81 { pt3dadd( 78.2571, -67.4594, 17.4425, 0.44 ) }
    dend_81 { pt3dadd( 78.9868, -68.3161, 17.4425, 0.44 ) }
    dend_81 { pt3dadd( 79.6325, -69.1058, 17.445, 0.37 ) }
    dend_81 { pt3dadd( 80.6289, -70.4322, 17.4477, 0.37 ) }
    dend_81 { pt3dadd( 81.2377, -71.2686, 17.4489, 0.37 ) }
    dend_81 { pt3dadd( 81.8373, -72.0951, 17.4313, 0.37 ) }
    dend_81 { pt3dadd( 82.8624, -73.482, 17.3775, 0.37 ) }
    dend_81 { pt3dadd( 83.9693, -74.9403, 17.2879, 0.37 ) }
    dend_81 { pt3dadd( 85.3092, -76.7941, 17.1619, 0.37 ) }
    dend_81 { pt3dadd( 85.8406, -77.5416, 17.1028, 0.37 ) }
    dend_81 { pt3dadd( 86.5645, -78.5103, 17.0119, 0.37 ) }
    dend_81 { pt3dadd( 87.3382, -79.465, 16.8997, 0.37 ) }
    dend_81 { pt3dadd( 88.0934, -80.3003, 16.7606, 0.37 ) }
    // Section: dend_70, id: dend_70, parent: dend_68 (entry count 91/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -40.5344, -154.125, 10.6626, 0.52 ) }
    dend_70 { pt3dadd( -41.1893, -155.072, 10.6093, 0.52 ) }
    dend_70 { pt3dadd( -41.7133, -155.899, 10.5766, 0.52 ) }
    dend_70 { pt3dadd( -42.0379, -156.423, 10.5599, 0.52 ) }
    dend_70 { pt3dadd( -42.2382, -156.734, 10.5515, 0.52 ) }
    dend_70 { pt3dadd( -42.5507, -157.212, 10.5405, 0.52 ) }
    dend_70 { pt3dadd( -43.001, -157.947, 10.5598, 0.52 ) }
    dend_70 { pt3dadd( -43.4965, -158.814, 10.6292, 0.52 ) }
    dend_70 { pt3dadd( -43.6756, -159.134, 10.6619, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_70 { pt3dadd( -43.9738, -159.663, 10.724, 0.52 ) }
    dend_70 { pt3dadd( -44.269, -160.203, 10.79, 0.52 ) }
    dend_70 { pt3dadd( -44.9135, -161.465, 10.9452, 0.52 ) }
    dend_70 { pt3dadd( -45.2559, -162.252, 11.0379, 0.52 ) }
    dend_70 { pt3dadd( -45.5939, -163.144, 11.1321, 0.52 ) }
    dend_70 { pt3dadd( -45.8476, -163.891, 11.1708, 0.52 ) }
    dend_70 { pt3dadd( -46.1478, -164.843, 11.1727, 0.52 ) }
    dend_70 { pt3dadd( -46.3871, -165.597, 11.1336, 0.52 ) }
    dend_70 { pt3dadd( -46.658, -166.389, 11.0399, 0.52 ) }
    dend_70 { pt3dadd( -46.9666, -167.251, 10.9218, 0.52 ) }
    dend_70 { pt3dadd( -47.3098, -168.118, 10.8317, 0.52 ) }
    dend_70 { pt3dadd( -47.5828, -168.673, 10.812, 0.52 ) }
    dend_70 { pt3dadd( -47.8465, -169.116, 10.8278, 0.52 ) }
    dend_70 { pt3dadd( -48.3299, -169.847, 10.8939, 0.52 ) }
    dend_70 { pt3dadd( -48.9074, -170.666, 10.9872, 0.52 ) }
    dend_70 { pt3dadd( -49.5878, -171.657, 11.0676, 0.52 ) }
    dend_70 { pt3dadd( -50.2021, -172.627, 11.1241, 0.52 ) }
    dend_70 { pt3dadd( -50.8126, -173.734, 11.1275, 0.52 ) }
    dend_70 { pt3dadd( -51.3581, -174.856, 11.0785, 0.52 ) }
    dend_70 { pt3dadd( -51.5555, -175.325, 11.037, 0.52 ) }
    dend_70 { pt3dadd( -52.0266, -176.58, 10.8691, 0.52 ) }
    dend_70 { pt3dadd( -52.3302, -177.541, 10.7237, 0.52 ) }
    dend_70 { pt3dadd( -52.7014, -178.841, 10.545, 0.52 ) }
    dend_70 { pt3dadd( -52.9157, -179.556, 10.4765, 0.52 ) }
    dend_70 { pt3dadd( -53.216, -180.449, 10.3937, 0.52 ) }
    dend_70 { pt3dadd( -53.424, -180.967, 10.3299, 0.52 ) }
    dend_70 { pt3dadd( -54.0861, -182.378, 10.1158, 0.52 ) }
    dend_70 { pt3dadd( -54.4518, -183.085, 9.95451, 0.52 ) }
    dend_70 { pt3dadd( -54.8726, -183.89, 9.71618, 0.52 ) }
    dend_70 { pt3dadd( -55.3492, -184.904, 9.32765, 0.52 ) }
    dend_70 { pt3dadd( -55.8589, -186.089, 8.78806, 0.52 ) }
    dend_70 { pt3dadd( -56.1787, -186.945, 8.3699, 0.52 ) }
    dend_70 { pt3dadd( -56.4166, -187.688, 8.00007, 0.52 ) }
    dend_70 { pt3dadd( -56.5351, -188.152, 7.80285, 0.52 ) }
    dend_70 { pt3dadd( -56.7836, -189.241, 7.45001, 0.52 ) }
    dend_70 { pt3dadd( -56.8859, -189.732, 7.33671, 0.52 ) }
    dend_70 { pt3dadd( -57.0848, -190.652, 7.17953, 0.52 ) }
    dend_70 { pt3dadd( -57.3718, -191.737, 6.98637, 0.52 ) }
    dend_70 { pt3dadd( -57.5832, -192.378, 6.8809, 0.52 ) }
    dend_70 { pt3dadd( -57.8148, -192.953, 6.81529, 0.52 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 40/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -40.5344, -154.125, 10.6626, 0.52 ) }
    dend_69 { pt3dadd( -40.0465, -155.077, 10.6848, 0.52 ) }
    dend_69 { pt3dadd( -39.6276, -155.894, 10.7038, 0.52 ) }
    dend_69 { pt3dadd( -39.2343, -156.662, 10.7217, 0.52 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 44/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 12.1996, -137.663, 7.48442, 0.44 ) }
    dend_66 { pt3dadd( 12.9044, -139.558, 7.27271, 0.44 ) }
    dend_66 { pt3dadd( 13.1639, -140.456, 7.25332, 0.44 ) }
    dend_66 { pt3dadd( 13.3816, -141.356, 7.27825, 0.44 ) }
    dend_66 { pt3dadd( 13.5924, -142.33, 7.33171, 0.44 ) }
    dend_66 { pt3dadd( 13.8363, -143.752, 7.42843, 0.44 ) }
    dend_66 { pt3dadd( 13.9585, -144.749, 7.50152, 0.44 ) }
    dend_66 { pt3dadd( 14.0223, -146.147, 7.644, 0.44 ) }
    dend_66 { pt3dadd( 14.0275, -146.644, 7.70559, 0.44 ) }
    dend_66 { pt3dadd( 13.9987, -147.697, 7.82565, 0.44 ) }
    dend_66 { pt3dadd( 13.973, -148.938, 7.93644, 0.44 ) }
    dend_66 { pt3dadd( 13.9967, -149.924, 8.02009, 0.44 ) }
    dend_66 { pt3dadd( 14.0511, -151.021, 8.09644, 0.44 ) }
    dend_66 { pt3dadd( 14.0995, -152.098, 8.149, 0.44 ) }
    dend_66 { pt3dadd( 14.1346, -153.028, 8.19508, 0.44 ) }
    dend_66 { pt3dadd( 14.2081, -155.509, 8.32466, 0.44 ) }
    dend_66 { pt3dadd( 14.2496, -157.046, 8.36941, 0.44 ) }
    dend_66 { pt3dadd( 14.2574, -158.992, 8.37028, 0.44 ) }
    dend_66 { pt3dadd( 14.2008, -160.912, 8.3224, 0.44 ) }
    dend_66 { pt3dadd( 14.1446, -161.922, 8.27384, 0.44 ) }
    dend_66 { pt3dadd( 14.0768, -162.776, 8.21306, 0.44 ) }
    dend_66 { pt3dadd( 13.8994, -164.115, 8.08124, 0.44 ) }
    dend_66 { pt3dadd( 13.6001, -165.829, 7.87015, 0.44 ) }
    dend_66 { pt3dadd( 13.3429, -167.161, 7.69876, 0.44 ) }
    dend_66 { pt3dadd( 13.108, -168.186, 7.57154, 0.44 ) }
    dend_66 { pt3dadd( 12.8011, -169.281, 7.45455, 0.44 ) }
    dend_66 { pt3dadd( 12.4819, -170.235, 7.38311, 0.44 ) }
    dend_66 { pt3dadd( 12.2017, -170.887, 7.37235, 0.44 ) }
    dend_66 { pt3dadd( 11.9612, -171.307, 7.34502, 0.44 ) }
    dend_66 { pt3dadd( 11.5438, -171.896, 7.29157, 0.44 ) }
    dend_66 { pt3dadd( 11.265, -172.227, 7.24977, 0.44 ) }
    dend_66 { pt3dadd( 10.8318, -172.667, 7.16996, 0.44 ) }
    dend_66 { pt3dadd( 10.3327, -173.167, 7.04269, 0.44 ) }
    dend_66 { pt3dadd( 9.42606, -174.126, 6.72559, 0.44 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 78/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 12.1996, -137.663, 7.48442, 0.44 ) }
    dend_65 { pt3dadd( 11.4711, -137.443, 8.21141, 0.44 ) }
    dend_65 { pt3dadd( 11.0181, -137.306, 8.66345, 0.44 ) }
    dend_65 { pt3dadd( 10.1986, -137.058, 9.48129, 0.44 ) }
    dend_65 { pt3dadd( 9.11136, -136.73, 10.5663, 0.44 ) }
    // Section: dend_45, id: dend_45, parent: dend_33 (entry count 83/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -24.4852, -300.232, -32.7782, 0.44 ) }
    dend_45 { pt3dadd( -25.1303, -298.812, -32.552, 0.44 ) }
    dend_45 { pt3dadd( -25.4002, -298.143, -32.4037, 0.44 ) }
    dend_45 { pt3dadd( -25.7243, -297.289, -32.2129, 0.44 ) }
    dend_45 { pt3dadd( -25.9078, -296.747, -32.0534, 0.44 ) }
    dend_45 { pt3dadd( -26.086, -296.153, -31.8629, 0.44 ) }
    dend_45 { pt3dadd( -26.589, -294.282, -31.1332, 0.44 ) }
    dend_45 { pt3dadd( -26.897, -292.91, -30.5113, 0.44 ) }
    dend_45 { pt3dadd( -27.1489, -291.732, -29.9568, 0.44 ) }
    dend_45 { pt3dadd( -27.6395, -289.547, -28.9244, 0.44 ) }
    dend_45 { pt3dadd( -27.8838, -288.489, -28.4384, 0.44 ) }
    dend_45 { pt3dadd( -28.3519, -286.377, -27.5415, 0.44 ) }
    dend_45 { pt3dadd( -28.5305, -285.518, -27.2212, 0.44 ) }
    dend_45 { pt3dadd( -28.6853, -284.687, -26.9459, 0.44 ) }
    dend_45 { pt3dadd( -28.8657, -283.525, -26.6145, 0.44 ) }
    dend_45 { pt3dadd( -28.9709, -282.761, -26.4596, 0.44 ) }
    dend_45 { pt3dadd( -29.1357, -281.53, -26.2256, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_45 { pt3dadd( -29.24, -280.621, -26.0751, 0.44 ) }
    dend_45 { pt3dadd( -29.3688, -279.143, -25.8003, 0.44 ) }
    dend_45 { pt3dadd( -29.5173, -277.083, -25.4137, 0.44 ) }
    dend_45 { pt3dadd( -29.6375, -275.561, -25.1354, 0.44 ) }
    dend_45 { pt3dadd( -29.7238, -274.475, -24.9285, 0.44 ) }
    dend_45 { pt3dadd( -29.8109, -273.569, -24.7495, 0.44 ) }
    dend_45 { pt3dadd( -29.9589, -272.251, -24.4917, 0.44 ) }
    dend_45 { pt3dadd( -30.2679, -270.01, -24.0979, 0.44 ) }
    dend_45 { pt3dadd( -30.4674, -268.73, -23.9706, 0.44 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 9/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -24.4852, -300.232, -32.7782, 0.52 ) }
    dend_34 { pt3dadd( -25.3029, -301.976, -32.7782, 0.52 ) }
    dend_34 { pt3dadd( -26.0172, -303.498, -32.7782, 0.52 ) }
    dend_34 { pt3dadd( -26.2548, -304.005, -32.7782, 0.52 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 13/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 21.64, 199.611, -69.9717, 0.52 ) }
    dend_26 { pt3dadd( 23.3109, 201.949, -67.1591, 0.52 ) }
    dend_26 { pt3dadd( 24.4799, 203.401, -65.0214, 0.52 ) }
    dend_26 { pt3dadd( 25.2305, 204.226, -63.5765, 0.52 ) }
    dend_26 { pt3dadd( 25.8184, 204.72, -62.4825, 0.52 ) }
    dend_26 { pt3dadd( 28.5222, 206.169, -57.6181, 0.52 ) }
    dend_26 { pt3dadd( 28.7529, 206.158, -57.1709, 0.52 ) }
    dend_26 { pt3dadd( 29.1769, 205.579, -56.0824, 0.52 ) }
    dend_26 { pt3dadd( 29.3703, 205.205, -55.4895, 0.52 ) }
    dend_26 { pt3dadd( 29.747, 204.275, -54.2522, 0.52 ) }
    dend_26 { pt3dadd( 30.0327, 203.483, -53.4067, 0.52 ) }
    dend_26 { pt3dadd( 30.6834, 201.742, -51.9076, 0.52 ) }
    dend_26 { pt3dadd( 31.3062, 200.248, -50.8395, 0.52 ) }
    dend_26 { pt3dadd( 32.2202, 198.352, -49.7845, 0.52 ) }
    dend_26 { pt3dadd( 33.2554, 196.483, -49.0827, 0.52 ) }
    dend_26 { pt3dadd( 34.8846, 194.034, -48.5539, 0.52 ) }
    dend_26 { pt3dadd( 36.2314, 192.402, -48.743, 0.52 ) }
    dend_26 { pt3dadd( 40.9304, 187.675, -50.8832, 0.52 ) }
    dend_26 { pt3dadd( 42.0319, 186.739, -51.5939, 0.52 ) }
    dend_26 { pt3dadd( 42.9806, 186.029, -52.3436, 0.52 ) }
    dend_26 { pt3dadd( 44.6216, 184.972, -53.8881, 0.52 ) }
    dend_26 { pt3dadd( 47.0563, 183.725, -56.508, 0.52 ) }
    dend_26 { pt3dadd( 47.3295, 183.613, -56.8015, 0.52 ) }
    dend_26 { pt3dadd( 47.865, 183.463, -57.0041, 0.52 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 37/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 21.64, 199.611, -69.9717, 0.52 ) }
    dend_25 { pt3dadd( 21.6773, 202.204, -71.9539, 0.52 ) }
    dend_25 { pt3dadd( 21.7827, 204.088, -73.4094, 0.52 ) }
    dend_25 { pt3dadd( 21.9047, 205.132, -74.2244, 0.52 ) }
    dend_25 { pt3dadd( 22.205, 206.555, -75.413, 0.52 ) }
    dend_25 { pt3dadd( 22.8, 208.506, -77.1577, 0.52 ) }
    dend_25 { pt3dadd( 23.3129, 209.809, -78.419, 0.52 ) }
    dend_25 { pt3dadd( 24.6001, 211.997, -80.6547, 0.52 ) }
    dend_25 { pt3dadd( 25.4626, 212.989, -81.8902, 0.52 ) }
    dend_25 { pt3dadd( 26.7923, 214.001, -83.6404, 0.52 ) }
    dend_25 { pt3dadd( 27.8266, 214.474, -84.9431, 0.52 ) }
    dend_25 { pt3dadd( 29.0207, 214.82, -86.3654, 0.52 ) }
    dend_25 { pt3dadd( 29.978, 214.972, -87.4793, 0.52 ) }
    dend_25 { pt3dadd( 31.9534, 215.037, -89.6472, 0.52 ) }
    dend_25 { pt3dadd( 33.4527, 214.97, -91.3753, 0.52 ) }
    dend_25 { pt3dadd( 34.6667, 214.848, -92.8802, 0.52 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 53/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 24.6374, 277.248, -15.9113, 0.44 ) }
    dend_21 { pt3dadd( 24.585, 278.626, -15.3241, 0.44 ) }
    dend_21 { pt3dadd( 24.5322, 280.217, -14.6938, 0.44 ) }
    dend_21 { pt3dadd( 24.451, 281.46, -14.2073, 0.44 ) }
    dend_21 { pt3dadd( 24.3601, 282.495, -13.7672, 0.44 ) }
    dend_21 { pt3dadd( 24.2667, 283.559, -13.3148, 0.44 ) }
    dend_21 { pt3dadd( 24.1915, 284.415, -12.9508, 0.44 ) }
    dend_21 { pt3dadd( 24.0666, 285.489, -12.4826, 0.44 ) }
    dend_21 { pt3dadd( 23.8098, 287.116, -11.8627, 0.44 ) }
    dend_21 { pt3dadd( 23.6312, 288.25, -11.4328, 0.44 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 63/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 24.6374, 277.248, -15.9113, 0.44 ) }
    dend_20 { pt3dadd( 23.4642, 278.136, -15.9113, 0.44 ) }
    dend_20 { pt3dadd( 22.5985, 278.792, -15.9113, 0.44 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 66/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -121.353, 121.051, -12.8245, 0.52 ) }
    dend_6 { pt3dadd( -122.146, 122.258, -13.5606, 0.52 ) }
    dend_6 { pt3dadd( -122.657, 123.04, -13.9832, 0.52 ) }
    dend_6 { pt3dadd( -123.597, 124.402, -14.6485, 0.52 ) }
    dend_6 { pt3dadd( -124.619, 125.83, -15.2823, 0.52 ) }
    dend_6 { pt3dadd( -125.085, 126.477, -15.5382, 0.52 ) }
    dend_6 { pt3dadd( -125.636, 127.23, -15.8115, 0.52 ) }
    dend_6 { pt3dadd( -126.195, 127.905, -16.0796, 0.52 ) }
    dend_6 { pt3dadd( -126.798, 128.593, -16.347, 0.52 ) }
    dend_6 { pt3dadd( -127.253, 129.11, -16.5075, 0.52 ) }
    dend_6 { pt3dadd( -127.873, 129.838, -16.7108, 0.52 ) }
    dend_6 { pt3dadd( -128.166, 130.206, -16.837, 0.52 ) }
    dend_6 { pt3dadd( -129.367, 131.814, -17.4213, 0.52 ) }
    dend_6 { pt3dadd( -129.823, 132.461, -17.6535, 0.52 ) }
    dend_6 { pt3dadd( -130.6, 133.61, -18.044, 0.52 ) }
    dend_6 { pt3dadd( -131.491, 134.966, -18.4627, 0.52 ) }
    dend_6 { pt3dadd( -132.664, 136.745, -18.9491, 0.52 ) }
    dend_6 { pt3dadd( -133.305, 137.706, -19.1623, 0.52 ) }
    dend_6 { pt3dadd( -133.881, 138.561, -19.2908, 0.52 ) }
    dend_6 { pt3dadd( -134.499, 139.42, -19.4094, 0.52 ) }
    dend_6 { pt3dadd( -135.198, 140.297, -19.51, 0.52 ) }
    dend_6 { pt3dadd( -135.753, 140.935, -19.553, 0.52 ) }
    dend_6 { pt3dadd( -136.56, 141.791, -19.5905, 0.52 ) }
    dend_6 { pt3dadd( -137.126, 142.368, -19.684, 0.52 ) }
    dend_6 { pt3dadd( -137.81, 143.045, -19.8592, 0.52 ) }
    dend_6 { pt3dadd( -138.585, 143.798, -20.1073, 0.52 ) }
    dend_6 { pt3dadd( -139.583, 144.754, -20.4662, 0.52 ) }
    dend_6 { pt3dadd( -140.576, 145.742, -20.8496, 0.52 ) }
    dend_6 { pt3dadd( -141.706, 146.91, -21.3028, 0.52 ) }
    dend_6 { pt3dadd( -142.5, 147.75, -21.6028, 0.52 ) }
    dend_6 { pt3dadd( -143.139, 148.456, -21.8223, 0.52 ) }
    dend_6 { pt3dadd( -143.763, 149.169, -22.031, 0.52 ) }
    dend_6 { pt3dadd( -144.454, 149.982, -22.2318, 0.52 ) }
    dend_6 { pt3dadd( -144.999, 150.692, -22.3554, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_6 { pt3dadd( -145.948, 152.01, -22.5276, 0.52 ) }
    dend_6 { pt3dadd( -146.494, 152.81, -22.6719, 0.52 ) }
    dend_6 { pt3dadd( -147.73, 154.675, -23.0708, 0.52 ) }
    dend_6 { pt3dadd( -148.494, 155.822, -23.3427, 0.52 ) }
    dend_6 { pt3dadd( -149.372, 157.075, -23.6951, 0.52 ) }
    dend_6 { pt3dadd( -149.847, 157.712, -23.8927, 0.52 ) }
    dend_6 { pt3dadd( -150.824, 158.955, -24.361, 0.52 ) }
    dend_6 { pt3dadd( -151.4, 159.621, -24.6392, 0.52 ) }
    dend_6 { pt3dadd( -152.201, 160.454, -25.0032, 0.52 ) }
    dend_6 { pt3dadd( -153.25, 161.441, -25.5104, 0.52 ) }
    dend_6 { pt3dadd( -154.143, 162.213, -25.9412, 0.52 ) }
    dend_6 { pt3dadd( -155.291, 163.176, -26.5263, 0.52 ) }
    dend_6 { pt3dadd( -156.183, 163.882, -27.0252, 0.52 ) }
    dend_6 { pt3dadd( -157.011, 164.506, -27.5419, 0.52 ) }
    dend_6 { pt3dadd( -157.9, 165.123, -28.1146, 0.52 ) }
    dend_6 { pt3dadd( -158.41, 165.432, -28.4465, 0.52 ) }
    dend_6 { pt3dadd( -159.721, 166.11, -29.2945, 0.52 ) }
    dend_6 { pt3dadd( -161.174, 166.725, -30.223, 0.52 ) }
    dend_6 { pt3dadd( -161.831, 166.947, -30.6441, 0.52 ) }
    dend_6 { pt3dadd( -162.773, 167.205, -31.2926, 0.52 ) }
    dend_6 { pt3dadd( -164.079, 167.568, -32.2179, 0.52 ) }
    dend_6 { pt3dadd( -164.623, 167.743, -32.5893, 0.52 ) }
    dend_6 { pt3dadd( -166.088, 168.263, -33.5147, 0.52 ) }
    dend_6 { pt3dadd( -166.933, 168.594, -34.02, 0.52 ) }
    dend_6 { pt3dadd( -169.344, 169.611, -35.3876, 0.52 ) }
    dend_6 { pt3dadd( -172.004, 170.787, -36.7338, 0.52 ) }
    dend_6 { pt3dadd( -174.232, 171.789, -37.6175, 0.52 ) }
    dend_6 { pt3dadd( -175.766, 172.494, -38.1867, 0.52 ) }
    dend_6 { pt3dadd( -177.475, 173.302, -38.7294, 0.52 ) }
    dend_6 { pt3dadd( -179.095, 174.077, -39.1574, 0.52 ) }
    dend_6 { pt3dadd( -181.365, 175.109, -39.4473, 0.52 ) }
    dend_6 { pt3dadd( -183.58, 176.0, -39.4944, 0.52 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 32/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -121.353, 121.051, -12.8245, 0.52 ) }
    dend_5 { pt3dadd( -122.097, 120.651, -13.4521, 0.52 ) }
    dend_5 { pt3dadd( -122.517, 120.426, -13.8058, 0.52 ) }
    dend_5 { pt3dadd( -123.527, 119.883, -14.6581, 0.52 ) }
    // Section: dend_83, id: dend_83, parent: dend_81 (entry count 36/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( 88.0934, -80.3003, 16.7606, 0.37 ) }
    dend_83 { pt3dadd( 88.9283, -80.8234, 16.7606, 0.37 ) }
    dend_83 { pt3dadd( 89.6562, -81.4035, 16.6868, 0.37 ) }
    dend_83 { pt3dadd( 90.0752, -81.7906, 16.6299, 0.37 ) }
    dend_83 { pt3dadd( 90.541, -82.2561, 16.5615, 0.37 ) }
    dend_83 { pt3dadd( 91.2971, -83.0848, 16.3992, 0.37 ) }
    dend_83 { pt3dadd( 91.8367, -83.6962, 16.2697, 0.37 ) }
    dend_83 { pt3dadd( 93.0044, -85.0808, 15.8743, 0.37 ) }
    dend_83 { pt3dadd( 93.7181, -85.9179, 15.5943, 0.37 ) }
    dend_83 { pt3dadd( 94.1067, -86.3732, 15.4169, 0.37 ) }
    dend_83 { pt3dadd( 95.1162, -87.5907, 14.9138, 0.37 ) }
    dend_83 { pt3dadd( 95.8017, -88.4236, 14.5397, 0.37 ) }
    dend_83 { pt3dadd( 96.7072, -89.4753, 14.0231, 0.37 ) }
    dend_83 { pt3dadd( 97.5959, -90.4087, 13.5143, 0.37 ) }
    dend_83 { pt3dadd( 98.3295, -91.1184, 13.0654, 0.37 ) }
    // Section: dend_82, id: dend_82, parent: dend_81 (entry count 51/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( 88.0934, -80.3003, 16.7606, 0.37 ) }
    dend_82 { pt3dadd( 87.7266, -80.8688, 16.7606, 0.37 ) }
    dend_82 { pt3dadd( 87.3203, -81.4986, 16.7606, 0.37 ) }
    dend_82 { pt3dadd( 86.9841, -82.0196, 16.7606, 0.37 ) }
    dend_82 { pt3dadd( 86.5825, -82.6421, 16.7606, 0.37 ) }
    // Section: dend_63, id: dend_63, parent: dend_45 (entry count 56/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -30.4674, -268.73, -23.9706, 0.44 ) }
    dend_63 { pt3dadd( -31.8343, -268.32, -24.3008, 0.44 ) }
    dend_63 { pt3dadd( -32.6678, -268.07, -24.5022, 0.44 ) }
    dend_63 { pt3dadd( -33.5635, -267.802, -24.7186, 0.44 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 60/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -30.4674, -268.73, -23.9706, 0.44 ) }
    dend_46 { pt3dadd( -30.7121, -267.234, -23.4761, 0.44 ) }
    dend_46 { pt3dadd( -30.8706, -266.296, -23.1042, 0.44 ) }
    dend_46 { pt3dadd( -31.0527, -265.129, -22.6404, 0.44 ) }
    dend_46 { pt3dadd( -31.2245, -263.86, -22.1652, 0.44 ) }
    dend_46 { pt3dadd( -31.3506, -262.908, -21.8477, 0.44 ) }
    dend_46 { pt3dadd( -31.5959, -261.161, -21.2411, 0.44 ) }
    dend_46 { pt3dadd( -31.8874, -259.224, -20.5844, 0.44 ) }
    dend_46 { pt3dadd( -32.0495, -258.222, -20.2814, 0.44 ) }
    dend_46 { pt3dadd( -32.2709, -256.919, -19.9459, 0.44 ) }
    dend_46 { pt3dadd( -32.611, -254.945, -19.554, 0.44 ) }
    dend_46 { pt3dadd( -32.9478, -252.923, -19.2484, 0.44 ) }
    dend_46 { pt3dadd( -33.1635, -251.576, -19.1438, 0.44 ) }
    dend_46 { pt3dadd( -33.4078, -249.898, -19.1264, 0.44 ) }
    dend_46 { pt3dadd( -33.5577, -248.91, -19.1439, 0.44 ) }
    dend_46 { pt3dadd( -33.7116, -247.926, -19.1956, 0.44 ) }
    dend_46 { pt3dadd( -33.8625, -246.873, -19.299, 0.44 ) }
    dend_46 { pt3dadd( -33.9992, -245.798, -19.4547, 0.44 ) }
    dend_46 { pt3dadd( -34.1085, -244.948, -19.5476, 0.44 ) }
    dend_46 { pt3dadd( -34.3251, -243.707, -19.616, 0.44 ) }
    dend_46 { pt3dadd( -34.4534, -243.176, -19.6414, 0.44 ) }
    dend_46 { pt3dadd( -34.6658, -242.458, -19.667, 0.44 ) }
    dend_46 { pt3dadd( -34.95, -241.571, -19.7079, 0.44 ) }
    dend_46 { pt3dadd( -35.209, -240.748, -19.712, 0.44 ) }
    dend_46 { pt3dadd( -35.4997, -239.826, -19.6757, 0.44 ) }
    dend_46 { pt3dadd( -35.7326, -239.035, -19.5738, 0.44 ) }
    dend_46 { pt3dadd( -35.9832, -238.209, -19.3518, 0.44 ) }
    dend_46 { pt3dadd( -36.3788, -237.014, -18.8623, 0.44 ) }
    dend_46 { pt3dadd( -36.8853, -235.454, -17.9802, 0.44 ) }
    dend_46 { pt3dadd( -37.1627, -234.559, -17.3284, 0.44 ) }
    dend_46 { pt3dadd( -37.5405, -233.297, -16.3208, 0.44 ) }
    dend_46 { pt3dadd( -38.0473, -231.626, -14.8451, 0.44 ) }
    dend_46 { pt3dadd( -38.4716, -230.295, -13.5247, 0.44 ) }
    dend_46 { pt3dadd( -38.8981, -229.033, -12.0911, 0.44 ) }
    dend_46 { pt3dadd( -39.263, -227.985, -10.7831, 0.44 ) }
    // Section: dend_44, id: dend_44, parent: dend_34 (entry count 95/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -26.2548, -304.005, -32.7782, 0.29 ) }
    dend_44 { pt3dadd( -25.0731, -306.041, -37.2817, 0.29 ) }
    dend_44 { pt3dadd( -24.6056, -306.913, -39.078, 0.29 ) }
    dend_44 { pt3dadd( -24.2267, -307.669, -40.5291, 0.29 ) }
    dend_44 { pt3dadd( -23.922, -308.285, -41.6191, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_44 { pt3dadd( -21.663, -312.969, -49.024, 0.29 ) }
    dend_44 { pt3dadd( -21.2129, -313.905, -50.3175, 0.29 ) }
    dend_44 { pt3dadd( -20.9871, -314.401, -50.8923, 0.29 ) }
    dend_44 { pt3dadd( -20.7713, -314.895, -51.3926, 0.29 ) }
    dend_44 { pt3dadd( -20.2912, -316.048, -52.3533, 0.29 ) }
    dend_44 { pt3dadd( -19.7163, -317.504, -53.2243, 0.29 ) }
    dend_44 { pt3dadd( -18.9987, -319.374, -53.9417, 0.29 ) }
    dend_44 { pt3dadd( -17.9226, -322.345, -55.4182, 0.29 ) }
    dend_44 { pt3dadd( -17.2749, -324.132, -56.449, 0.29 ) }
    dend_44 { pt3dadd( -16.8209, -325.369, -57.269, 0.29 ) }
    dend_44 { pt3dadd( -16.4804, -326.299, -58.0132, 0.29 ) }
    dend_44 { pt3dadd( -15.8472, -327.99, -59.6968, 0.29 ) }
    dend_44 { pt3dadd( -15.1853, -329.785, -61.4978, 0.29 ) }
    dend_44 { pt3dadd( -14.7375, -330.963, -62.7236, 0.29 ) }
    dend_44 { pt3dadd( -14.3211, -332.007, -63.9592, 0.29 ) }
    dend_44 { pt3dadd( -13.6171, -333.594, -66.007, 0.29 ) }
    dend_44 { pt3dadd( -12.7518, -335.341, -68.3289, 0.29 ) }
    dend_44 { pt3dadd( -11.5166, -337.583, -71.0133, 0.29 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 18/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -26.2548, -304.005, -32.7782, 0.52 ) }
    dend_35 { pt3dadd( -26.645, -305.206, -32.9391, 0.52 ) }
    dend_35 { pt3dadd( -27.0605, -306.473, -33.1755, 0.52 ) }
    dend_35 { pt3dadd( -27.3042, -307.188, -33.3218, 0.52 ) }
    dend_35 { pt3dadd( -27.7658, -308.541, -33.6696, 0.52 ) }
    dend_35 { pt3dadd( -28.2406, -309.981, -34.0651, 0.52 ) }
    dend_35 { pt3dadd( -28.7235, -311.514, -34.4873, 0.52 ) }
    dend_35 { pt3dadd( -29.0387, -312.64, -34.7944, 0.52 ) }
    dend_35 { pt3dadd( -29.2237, -313.385, -34.9813, 0.52 ) }
    dend_35 { pt3dadd( -29.5615, -314.888, -35.3676, 0.52 ) }
    dend_35 { pt3dadd( -29.8104, -316.055, -35.6491, 0.52 ) }
    dend_35 { pt3dadd( -30.0208, -316.991, -35.9395, 0.52 ) }
    dend_35 { pt3dadd( -30.2103, -317.821, -36.2214, 0.52 ) }
    dend_35 { pt3dadd( -30.4318, -318.738, -36.5562, 0.52 ) }
    dend_35 { pt3dadd( -30.8875, -320.439, -37.2276, 0.52 ) }
    dend_35 { pt3dadd( -31.2133, -321.566, -37.6656, 0.52 ) }
    dend_35 { pt3dadd( -31.7456, -323.353, -38.3848, 0.52 ) }
    dend_35 { pt3dadd( -32.0503, -324.4, -38.8307, 0.52 ) }
    dend_35 { pt3dadd( -32.4978, -325.961, -39.496, 0.52 ) }
    dend_35 { pt3dadd( -32.7764, -326.953, -39.8735, 0.52 ) }
    dend_35 { pt3dadd( -33.1963, -328.491, -40.3357, 0.52 ) }
    dend_35 { pt3dadd( -33.4111, -329.303, -40.5333, 0.52 ) }
    dend_35 { pt3dadd( -33.7632, -330.746, -40.7691, 0.52 ) }
    dend_35 { pt3dadd( -34.0134, -331.811, -40.9699, 0.52 ) }
    dend_35 { pt3dadd( -34.3591, -333.24, -41.2452, 0.52 ) }
    dend_35 { pt3dadd( -34.6582, -334.375, -41.4766, 0.52 ) }
    dend_35 { pt3dadd( -35.0269, -335.677, -41.8016, 0.52 ) }
    dend_35 { pt3dadd( -35.3918, -336.953, -42.1392, 0.52 ) }
    dend_35 { pt3dadd( -35.9251, -338.835, -42.6297, 0.52 ) }
    dend_35 { pt3dadd( -36.2253, -339.927, -42.9265, 0.52 ) }
    dend_35 { pt3dadd( -36.8457, -342.322, -43.5802, 0.52 ) }
    dend_35 { pt3dadd( -37.3447, -344.367, -44.0425, 0.52 ) }
    dend_35 { pt3dadd( -37.6222, -345.534, -44.2416, 0.52 ) }
    dend_35 { pt3dadd( -37.9567, -346.865, -44.3696, 0.52 ) }
    dend_35 { pt3dadd( -38.2175, -347.86, -44.3619, 0.52 ) }
    dend_35 { pt3dadd( -38.4977, -348.906, -44.292, 0.52 ) }
    dend_35 { pt3dadd( -38.9626, -350.564, -44.0283, 0.52 ) }
    dend_35 { pt3dadd( -39.1655, -351.27, -43.8983, 0.52 ) }
    dend_35 { pt3dadd( -39.4363, -352.233, -43.7981, 0.52 ) }
    dend_35 { pt3dadd( -39.6584, -353.025, -43.7967, 0.52 ) }
    dend_35 { pt3dadd( -39.8649, -353.778, -43.8725, 0.52 ) }
    dend_35 { pt3dadd( -40.0482, -354.483, -44.0032, 0.52 ) }
    dend_35 { pt3dadd( -40.4203, -356.238, -44.4371, 0.52 ) }
    dend_35 { pt3dadd( -40.5628, -357.123, -44.6928, 0.52 ) }
    dend_35 { pt3dadd( -40.6943, -358.125, -45.0051, 0.52 ) }
    dend_35 { pt3dadd( -40.8129, -358.931, -45.2612, 0.52 ) }
    dend_35 { pt3dadd( -41.0434, -360.139, -45.6349, 0.52 ) }
    dend_35 { pt3dadd( -41.2294, -360.942, -45.8551, 0.52 ) }
    dend_35 { pt3dadd( -41.5576, -362.348, -46.1385, 0.52 ) }
    dend_35 { pt3dadd( -41.6714, -362.879, -46.2429, 0.52 ) }
    dend_35 { pt3dadd( -41.8212, -363.675, -46.3827, 0.52 ) }
    dend_35 { pt3dadd( -41.9503, -364.327, -46.4779, 0.52 ) }
    dend_35 { pt3dadd( -42.1193, -365.168, -46.5683, 0.52 ) }
    dend_35 { pt3dadd( -42.3482, -366.41, -46.641, 0.52 ) }
    dend_35 { pt3dadd( -42.4814, -367.469, -46.6469, 0.52 ) }
    dend_35 { pt3dadd( -42.5599, -368.612, -46.6513, 0.52 ) }
    dend_35 { pt3dadd( -42.5967, -369.374, -46.6791, 0.52 ) }
    dend_35 { pt3dadd( -42.6299, -370.085, -46.7393, 0.52 ) }
    dend_35 { pt3dadd( -42.6984, -371.227, -46.8789, 0.52 ) }
    dend_35 { pt3dadd( -42.8762, -373.224, -47.1789, 0.52 ) }
    dend_35 { pt3dadd( -42.9468, -373.945, -47.2555, 0.52 ) }
    dend_35 { pt3dadd( -43.1266, -375.663, -47.3523, 0.52 ) }
    dend_35 { pt3dadd( -43.2551, -376.86, -47.3665, 0.52 ) }
    dend_35 { pt3dadd( -43.4211, -378.211, -47.3267, 0.52 ) }
    dend_35 { pt3dadd( -43.5738, -379.219, -47.2535, 0.52 ) }
    dend_35 { pt3dadd( -43.932, -381.206, -47.0156, 0.52 ) }
    dend_35 { pt3dadd( -44.2712, -382.869, -46.7703, 0.52 ) }
    dend_35 { pt3dadd( -44.4844, -383.838, -46.5965, 0.52 ) }
    dend_35 { pt3dadd( -44.7121, -384.798, -46.4353, 0.52 ) }
    dend_35 { pt3dadd( -44.9026, -385.614, -46.3435, 0.52 ) }
    dend_35 { pt3dadd( -45.0706, -386.393, -46.3079, 0.52 ) }
    dend_35 { pt3dadd( -45.2739, -387.691, -46.3453, 0.52 ) }
    dend_35 { pt3dadd( -45.3805, -388.974, -46.3772, 0.52 ) }
    dend_35 { pt3dadd( -45.4318, -389.762, -46.3967, 0.52 ) }
    dend_35 { pt3dadd( -45.4739, -391.061, -46.4269, 0.52 ) }
    dend_35 { pt3dadd( -45.463, -392.016, -46.4458, 0.52 ) }
    dend_35 { pt3dadd( -45.3027, -394.629, -46.48, 0.52 ) }
    dend_35 { pt3dadd( -45.0068, -396.866, -46.48, 0.52 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 96/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 23.6312, 288.25, -11.4328, 0.44 ) }
    dend_23 { pt3dadd( 23.1917, 289.57, -10.9499, 0.44 ) }
    dend_23 { pt3dadd( 22.8317, 290.699, -10.5529, 0.44 ) }
    dend_23 { pt3dadd( 22.2981, 292.27, -10.0217, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_23 { pt3dadd( 21.8895, 293.348, -9.61669, 0.44 ) }
    dend_23 { pt3dadd( 21.5481, 294.128, -9.26648, 0.44 ) }
    dend_23 { pt3dadd( 21.0304, 295.1, -8.78671, 0.44 ) }
    dend_23 { pt3dadd( 20.688, 295.555, -8.52763, 0.44 ) }
    dend_23 { pt3dadd( 20.0758, 296.149, -8.15412, 0.44 ) }
    dend_23 { pt3dadd( 19.1254, 296.815, -7.68919, 0.44 ) }
    dend_23 { pt3dadd( 18.0813, 297.399, -7.23039, 0.44 ) }
    dend_23 { pt3dadd( 16.8714, 297.977, -6.70651, 0.44 ) }
    dend_23 { pt3dadd( 15.803, 298.4, -6.26874, 0.44 ) }
    dend_23 { pt3dadd( 14.831, 298.738, -5.90646, 0.44 ) }
    dend_23 { pt3dadd( 13.8466, 299.05, -5.58292, 0.44 ) }
    dend_23 { pt3dadd( 12.3793, 299.505, -5.25282, 0.44 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 12/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 23.6312, 288.25, -11.4328, 0.44 ) }
    dend_22 { pt3dadd( 22.7488, 289.415, -11.4328, 0.44 ) }
    dend_22 { pt3dadd( 21.9886, 290.5, -11.4328, 0.44 ) }
    dend_22 { pt3dadd( 21.3206, 291.559, -11.1888, 0.44 ) }
    dend_22 { pt3dadd( 20.9372, 292.189, -10.931, 0.44 ) }
    dend_22 { pt3dadd( 20.6456, 292.683, -10.6949, 0.44 ) }
    dend_22 { pt3dadd( 20.1978, 293.446, -10.3138, 0.44 ) }
    dend_22 { pt3dadd( 19.8938, 293.996, -9.95954, 0.44 ) }
    dend_22 { pt3dadd( 18.7697, 296.236, -8.20474, 0.44 ) }
    dend_22 { pt3dadd( 18.4465, 296.94, -7.54771, 0.44 ) }
    dend_22 { pt3dadd( 17.9672, 298.052, -6.46877, 0.44 ) }
    dend_22 { pt3dadd( 17.7962, 298.486, -6.05595, 0.44 ) }
    dend_22 { pt3dadd( 17.2849, 299.796, -4.85994, 0.44 ) }
    dend_22 { pt3dadd( 16.7529, 301.147, -3.77572, 0.44 ) }
    dend_22 { pt3dadd( 16.1599, 302.768, -2.76857, 0.44 ) }
    dend_22 { pt3dadd( 15.7855, 303.867, -2.2056, 0.44 ) }
    dend_22 { pt3dadd( 15.4743, 304.813, -1.79066, 0.44 ) }
    dend_22 { pt3dadd( 15.2059, 305.644, -1.51085, 0.44 ) }
    dend_22 { pt3dadd( 14.7347, 307.133, -1.27938, 0.44 ) }
    dend_22 { pt3dadd( 14.3468, 308.465, -1.25588, 0.44 ) }
    dend_22 { pt3dadd( 14.0615, 309.46, -1.31454, 0.44 ) }
    dend_22 { pt3dadd( 13.8438, 310.246, -1.37058, 0.44 ) }
    dend_22 { pt3dadd( 13.4236, 311.796, -1.50505, 0.44 ) }
    dend_22 { pt3dadd( 13.0504, 313.463, -1.68761, 0.44 ) }
    dend_22 { pt3dadd( 12.9432, 314.064, -1.78268, 0.44 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 37/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -183.58, 176.0, -39.4944, 0.44 ) }
    dend_8 { pt3dadd( -184.807, 176.624, -39.4869, 0.44 ) }
    dend_8 { pt3dadd( -185.996, 177.244, -39.3674, 0.44 ) }
    dend_8 { pt3dadd( -187.085, 177.895, -39.2004, 0.44 ) }
    dend_8 { pt3dadd( -187.771, 178.374, -39.0755, 0.44 ) }
    dend_8 { pt3dadd( -188.977, 179.264, -38.7618, 0.44 ) }
    dend_8 { pt3dadd( -189.757, 179.839, -38.5334, 0.44 ) }
    dend_8 { pt3dadd( -190.846, 180.663, -38.1601, 0.44 ) }
    dend_8 { pt3dadd( -191.845, 181.389, -37.739, 0.44 ) }
    dend_8 { pt3dadd( -192.882, 182.059, -37.2469, 0.44 ) }
    dend_8 { pt3dadd( -194.384, 182.86, -36.5688, 0.44 ) }
    dend_8 { pt3dadd( -195.283, 183.245, -36.2034, 0.44 ) }
    dend_8 { pt3dadd( -196.535, 183.665, -35.7695, 0.44 ) }
    dend_8 { pt3dadd( -198.509, 184.159, -35.1948, 0.44 ) }
    dend_8 { pt3dadd( -201.224, 184.649, -34.4864, 0.44 ) }
    dend_8 { pt3dadd( -203.441, 184.967, -33.9685, 0.44 ) }
    dend_8 { pt3dadd( -205.198, 185.213, -33.7046, 0.44 ) }
    dend_8 { pt3dadd( -206.939, 185.464, -33.6381, 0.44 ) }
    dend_8 { pt3dadd( -209.048, 185.79, -33.7753, 0.44 ) }
    dend_8 { pt3dadd( -211.427, 186.222, -34.244, 0.44 ) }
    dend_8 { pt3dadd( -212.407, 186.438, -34.5334, 0.44 ) }
    dend_8 { pt3dadd( -215.418, 187.256, -35.6784, 0.44 ) }
    dend_8 { pt3dadd( -218.46, 188.186, -37.1517, 0.44 ) }
    dend_8 { pt3dadd( -219.824, 188.62, -37.9162, 0.44 ) }
    dend_8 { pt3dadd( -221.963, 189.311, -39.2368, 0.44 ) }
    dend_8 { pt3dadd( -222.801, 189.572, -39.7712, 0.44 ) }
    dend_8 { pt3dadd( -224.549, 190.044, -40.8199, 0.44 ) }
    dend_8 { pt3dadd( -226.84, 190.552, -41.9828, 0.44 ) }
    dend_8 { pt3dadd( -228.209, 190.788, -42.5449, 0.44 ) }
    dend_8 { pt3dadd( -229.103, 190.88, -42.8632, 0.44 ) }
    dend_8 { pt3dadd( -229.967, 190.886, -43.0828, 0.44 ) }
    dend_8 { pt3dadd( -231.189, 190.772, -43.2978, 0.44 ) }
    dend_8 { pt3dadd( -232.343, 190.541, -43.3777, 0.44 ) }
    dend_8 { pt3dadd( -233.534, 190.168, -43.3721, 0.44 ) }
    dend_8 { pt3dadd( -234.642, 189.752, -43.2415, 0.44 ) }
    dend_8 { pt3dadd( -236.104, 189.148, -42.964, 0.44 ) }
    dend_8 { pt3dadd( -237.295, 188.639, -42.6886, 0.44 ) }
    dend_8 { pt3dadd( -238.356, 188.197, -42.3986, 0.44 ) }
    dend_8 { pt3dadd( -240.424, 187.347, -41.7123, 0.44 ) }
    dend_8 { pt3dadd( -243.6, 186.118, -40.5436, 0.44 ) }
    dend_8 { pt3dadd( -244.597, 185.775, -40.155, 0.44 ) }
    dend_8 { pt3dadd( -246.405, 185.249, -39.434, 0.44 ) }
    dend_8 { pt3dadd( -247.854, 184.895, -38.8699, 0.44 ) }
    dend_8 { pt3dadd( -249.79, 184.494, -38.0342, 0.44 ) }
    dend_8 { pt3dadd( -250.868, 184.318, -37.5717, 0.44 ) }
    dend_8 { pt3dadd( -251.492, 184.237, -37.3353, 0.44 ) }
    dend_8 { pt3dadd( -252.377, 184.161, -36.9967, 0.44 ) }
    dend_8 { pt3dadd( -253.303, 184.113, -36.5519, 0.44 ) }
    dend_8 { pt3dadd( -256.757, 184.007, -34.751, 0.44 ) }
    dend_8 { pt3dadd( -258.651, 184.016, -33.609, 0.44 ) }
    dend_8 { pt3dadd( -259.842, 184.072, -32.7459, 0.44 ) }
    dend_8 { pt3dadd( -260.768, 184.155, -32.01, 0.44 ) }
    dend_8 { pt3dadd( -263.875, 184.595, -29.1591, 0.44 ) }
    dend_8 { pt3dadd( -264.509, 184.732, -28.4501, 0.44 ) }
    dend_8 { pt3dadd( -265.977, 185.154, -26.5858, 0.44 ) }
    dend_8 { pt3dadd( -267.193, 185.574, -24.8412, 0.44 ) }
    dend_8 { pt3dadd( -267.883, 185.868, -23.7402, 0.44 ) }
    dend_8 { pt3dadd( -269.345, 186.657, -21.2772, 0.44 ) }
    dend_8 { pt3dadd( -270.999, 187.708, -18.4766, 0.44 ) }
    dend_8 { pt3dadd( -271.448, 188.015, -17.6791, 0.44 ) }
    dend_8 { pt3dadd( -271.861, 188.313, -16.9444, 0.44 ) }
    dend_8 { pt3dadd( -273.029, 189.179, -14.7859, 0.44 ) }
    dend_8 { pt3dadd( -273.385, 189.483, -14.0408, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 0/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -183.58, 176.0, -39.4944, 0.52 ) }
    dend_7 { pt3dadd( -184.242, 177.432, -39.5105, 0.52 ) }
    dend_7 { pt3dadd( -185.058, 179.361, -39.6813, 0.52 ) }
    dend_7 { pt3dadd( -186.023, 181.899, -39.9824, 0.52 ) }
    dend_7 { pt3dadd( -186.381, 182.888, -40.1107, 0.52 ) }
    dend_7 { pt3dadd( -187.04, 184.792, -40.3582, 0.52 ) }
    dend_7 { pt3dadd( -187.474, 186.14, -40.5727, 0.52 ) }
    dend_7 { pt3dadd( -188.168, 188.611, -41.0494, 0.52 ) }
    dend_7 { pt3dadd( -188.479, 189.887, -41.3813, 0.52 ) }
    dend_7 { pt3dadd( -188.767, 191.217, -41.7919, 0.52 ) }
    dend_7 { pt3dadd( -189.134, 192.979, -42.3729, 0.52 ) }
    dend_7 { pt3dadd( -189.588, 195.248, -43.1415, 0.44 ) }
    dend_7 { pt3dadd( -189.788, 196.291, -43.4802, 0.44 ) }
    dend_7 { pt3dadd( -190.206, 198.651, -44.185, 0.44 ) }
    dend_7 { pt3dadd( -190.395, 199.841, -44.5349, 0.44 ) }
    dend_7 { pt3dadd( -190.531, 200.998, -44.9161, 0.44 ) }
    dend_7 { pt3dadd( -190.614, 202.162, -45.2985, 0.44 ) }
    dend_7 { pt3dadd( -190.617, 202.976, -45.5904, 0.44 ) }
    dend_7 { pt3dadd( -190.573, 203.608, -45.8515, 0.44 ) }
    dend_7 { pt3dadd( -190.497, 204.305, -46.2353, 0.44 ) }
    dend_7 { pt3dadd( -190.283, 206.2, -47.6225, 0.44 ) }
    dend_7 { pt3dadd( -190.075, 207.877, -48.9581, 0.44 ) }
    dend_7 { pt3dadd( -189.858, 209.817, -50.6509, 0.44 ) }
    dend_7 { pt3dadd( -189.809, 210.278, -51.0702, 0.44 ) }
    dend_7 { pt3dadd( -189.566, 212.899, -53.5308, 0.44 ) }
    dend_7 { pt3dadd( -189.416, 214.666, -55.2389, 0.44 ) }
    dend_7 { pt3dadd( -189.305, 216.139, -56.6655, 0.44 ) }
    dend_7 { pt3dadd( -189.184, 218.53, -59.199, 0.44 ) }
    // Section: dend_85, id: dend_85, parent: dend_83 (entry count 28/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( 98.3295, -91.1184, 13.0654, 0.37 ) }
    dend_85 { pt3dadd( 100.006, -92.2066, 11.6695, 0.37 ) }
    dend_85 { pt3dadd( 100.952, -92.7271, 10.9741, 0.37 ) }
    dend_85 { pt3dadd( 101.944, -93.2454, 10.3063, 0.37 ) }
    dend_85 { pt3dadd( 102.775, -93.68, 9.76309, 0.37 ) }
    dend_85 { pt3dadd( 103.4, -93.9882, 9.34958, 0.37 ) }
    dend_85 { pt3dadd( 104.141, -94.3451, 8.87127, 0.37 ) }
    dend_85 { pt3dadd( 104.276, -94.399, 8.80043, 0.37 ) }
    dend_85 { pt3dadd( 104.781, -94.5986, 8.58779, 0.37 ) }
    dend_85 { pt3dadd( 106.275, -95.2246, 8.08756, 0.37 ) }
    dend_85 { pt3dadd( 107.809, -95.9314, 7.69455, 0.37 ) }
    dend_85 { pt3dadd( 108.386, -96.2316, 7.5788, 0.37 ) }
    dend_85 { pt3dadd( 108.759, -96.4323, 7.52844, 0.37 ) }
    dend_85 { pt3dadd( 110.461, -97.2856, 7.41748, 0.37 ) }
    dend_85 { pt3dadd( 111.272, -97.6647, 7.42397, 0.37 ) }
    dend_85 { pt3dadd( 111.921, -97.956, 7.48395, 0.37 ) }
    dend_85 { pt3dadd( 112.928, -98.3815, 7.60079, 0.37 ) }
    dend_85 { pt3dadd( 113.945, -98.7669, 7.68598, 0.37 ) }
    dend_85 { pt3dadd( 114.846, -99.0681, 7.72895, 0.37 ) }
    dend_85 { pt3dadd( 115.473, -99.2704, 7.72895, 0.37 ) }
    dend_85 { pt3dadd( 116.741, -99.6766, 7.72895, 0.37 ) }
    dend_85 { pt3dadd( 118.13, -100.105, 7.57144, 0.37 ) }
    dend_85 { pt3dadd( 118.691, -100.275, 7.44727, 0.37 ) }
    dend_85 { pt3dadd( 119.224, -100.455, 7.27387, 0.37 ) }
    dend_85 { pt3dadd( 120.047, -100.74, 6.93333, 0.37 ) }
    dend_85 { pt3dadd( 120.573, -100.913, 6.68165, 0.37 ) }
    dend_85 { pt3dadd( 122.955, -101.773, 5.57372, 0.37 ) }
    dend_85 { pt3dadd( 123.537, -101.993, 5.35198, 0.37 ) }
    dend_85 { pt3dadd( 124.004, -102.181, 5.22689, 0.37 ) }
    dend_85 { pt3dadd( 124.563, -102.392, 5.14291, 0.37 ) }
    dend_85 { pt3dadd( 125.388, -102.702, 5.0421, 0.37 ) }
    dend_85 { pt3dadd( 127.142, -103.381, 4.85322, 0.37 ) }
    dend_85 { pt3dadd( 128.514, -103.927, 4.81061, 0.37 ) }
    dend_85 { pt3dadd( 129.81, -104.459, 4.75421, 0.37 ) }
    dend_85 { pt3dadd( 131.576, -105.195, 4.64533, 0.37 ) }
    dend_85 { pt3dadd( 133.216, -105.915, 4.4931, 0.37 ) }
    dend_85 { pt3dadd( 134.16, -106.342, 4.34685, 0.37 ) }
    // Section: dend_84, id: dend_84, parent: dend_83 (entry count 65/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( 98.3295, -91.1184, 13.0654, 0.37 ) }
    dend_84 { pt3dadd( 97.8678, -89.4185, 11.3993, 0.37 ) }
    dend_84 { pt3dadd( 97.7094, -88.8354, 10.8278, 0.37 ) }
    dend_84 { pt3dadd( 97.595, -88.4143, 10.4151, 0.37 ) }
    // Section: dend_62, id: dend_62, parent: dend_46 (entry count 69/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -39.263, -227.985, -10.7831, 0.44 ) }
    dend_62 { pt3dadd( -40.8964, -228.363, -10.7831, 0.44 ) }
    dend_62 { pt3dadd( -41.5389, -228.511, -10.7831, 0.44 ) }
    dend_62 { pt3dadd( -42.7686, -228.796, -10.7831, 0.44 ) }
    dend_62 { pt3dadd( -44.0021, -229.081, -10.7831, 0.44 ) }
    dend_62 { pt3dadd( -44.6723, -229.236, -10.7831, 0.44 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 75/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -39.263, -227.985, -10.7831, 0.44 ) }
    dend_47 { pt3dadd( -38.8374, -226.357, -9.81375, 0.44 ) }
    dend_47 { pt3dadd( -38.6967, -225.586, -9.40432, 0.44 ) }
    dend_47 { pt3dadd( -38.3257, -222.782, -8.03483, 0.44 ) }
    dend_47 { pt3dadd( -38.2108, -221.753, -7.55691, 0.44 ) }
    dend_47 { pt3dadd( -38.1204, -221.116, -7.16451, 0.44 ) }
    dend_47 { pt3dadd( -37.9782, -220.322, -6.60917, 0.44 ) }
    dend_47 { pt3dadd( -37.868, -219.815, -5.97348, 0.44 ) }
    dend_47 { pt3dadd( -37.7417, -219.368, -5.26678, 0.44 ) }
    dend_47 { pt3dadd( -37.5913, -218.885, -4.3982, 0.44 ) }
    dend_47 { pt3dadd( -36.9807, -217.283, -1.07697, 0.44 ) }
    dend_47 { pt3dadd( -36.8852, -217.08, -0.597804, 0.44 ) }
    dend_47 { pt3dadd( -35.6809, -214.996, 5.0004, 0.44 ) }
    dend_47 { pt3dadd( -35.4614, -214.67, 6.00663, 0.44 ) }
    // Section: dend_43, id: dend_43, parent: dend_35 (entry count 89/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -45.0068, -396.866, -46.48, 0.37 ) }
    dend_43 { pt3dadd( -43.2395, -398.621, -46.3311, 0.37 ) }
    dend_43 { pt3dadd( -41.6894, -399.968, -46.0588, 0.37 ) }
    dend_43 { pt3dadd( -40.2451, -401.135, -45.8807, 0.37 ) }
    dend_43 { pt3dadd( -39.7745, -401.503, -45.8719, 0.37 ) }
    dend_43 { pt3dadd( -39.1276, -402.03, -45.9019, 0.37 ) }
    dend_43 { pt3dadd( -38.3042, -402.767, -45.9235, 0.37 ) }
    dend_43 { pt3dadd( -37.3274, -403.727, -45.8837, 0.37 ) }
    dend_43 { pt3dadd( -36.2526, -405.045, -45.9246, 0.37 ) }
    dend_43 { pt3dadd( -35.5754, -406.393, -45.9764, 0.37 ) }
    dend_43 { pt3dadd( -35.1606, -407.423, -46.0217, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_43 { pt3dadd( -34.6872, -409.088, -46.0838, 0.37 ) }
    dend_43 { pt3dadd( -34.4914, -410.217, -46.1106, 0.37 ) }
    dend_43 { pt3dadd( -34.409, -411.21, -46.113, 0.37 ) }
    dend_43 { pt3dadd( -34.4262, -412.765, -45.8513, 0.37 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 4/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -45.0068, -396.866, -46.48, 0.52 ) }
    dend_36 { pt3dadd( -45.0073, -398.289, -46.8895, 0.52 ) }
    dend_36 { pt3dadd( -44.9909, -399.563, -47.2321, 0.52 ) }
    dend_36 { pt3dadd( -44.9872, -400.997, -47.6736, 0.52 ) }
    dend_36 { pt3dadd( -44.9982, -402.168, -48.0292, 0.52 ) }
    dend_36 { pt3dadd( -45.021, -403.831, -48.5046, 0.52 ) }
    dend_36 { pt3dadd( -45.0469, -405.036, -48.8142, 0.52 ) }
    dend_36 { pt3dadd( -45.0766, -405.897, -48.9964, 0.52 ) }
    dend_36 { pt3dadd( -45.1284, -407.8, -49.3792, 0.52 ) }
    dend_36 { pt3dadd( -45.1485, -409.417, -49.6775, 0.52 ) }
    dend_36 { pt3dadd( -45.1685, -410.768, -49.883, 0.52 ) }
    dend_36 { pt3dadd( -45.219, -412.823, -50.0926, 0.52 ) }
    dend_36 { pt3dadd( -45.2443, -413.746, -50.1667, 0.52 ) }
    dend_36 { pt3dadd( -45.2629, -414.675, -50.1724, 0.52 ) }
    dend_36 { pt3dadd( -45.2701, -415.059, -50.1408, 0.52 ) }
    dend_36 { pt3dadd( -45.3166, -416.202, -50.0032, 0.52 ) }
    dend_36 { pt3dadd( -45.3979, -417.333, -49.8399, 0.52 ) }
    dend_36 { pt3dadd( -45.5207, -418.437, -49.6714, 0.52 ) }
    dend_36 { pt3dadd( -45.7737, -420.123, -49.4314, 0.52 ) }
    dend_36 { pt3dadd( -45.9629, -421.097, -49.3057, 0.52 ) }
    dend_36 { pt3dadd( -46.2052, -422.241, -49.1764, 0.52 ) }
    dend_36 { pt3dadd( -46.582, -424.114, -48.9779, 0.52 ) }
    dend_36 { pt3dadd( -46.896, -425.698, -48.8321, 0.52 ) }
    dend_36 { pt3dadd( -47.1894, -427.114, -48.7009, 0.52 ) }
    dend_36 { pt3dadd( -47.4194, -428.27, -48.609, 0.52 ) }
    dend_36 { pt3dadd( -47.5872, -429.328, -48.5037, 0.52 ) }
    dend_36 { pt3dadd( -47.7576, -431.016, -48.3116, 0.52 ) }
    dend_36 { pt3dadd( -47.8245, -431.876, -48.1975, 0.52 ) }
    dend_36 { pt3dadd( -47.8854, -433.438, -47.9617, 0.52 ) }
    dend_36 { pt3dadd( -47.884, -434.492, -47.7858, 0.52 ) }
    dend_36 { pt3dadd( -47.831, -435.789, -47.556, 0.52 ) }
    dend_36 { pt3dadd( -47.7426, -437.584, -47.2357, 0.52 ) }
    // Section: dend_87, id: dend_87, parent: dend_85 (entry count 36/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( 134.16, -106.342, 4.34685, 0.37 ) }
    dend_87 { pt3dadd( 134.253, -108.29, 3.35962, 0.37 ) }
    dend_87 { pt3dadd( 134.284, -108.93, 3.03549, 0.37 ) }
    dend_87 { pt3dadd( 134.317, -109.624, 2.68364, 0.37 ) }
    dend_87 { pt3dadd( 134.342, -110.149, 2.41776, 0.37 ) }
    dend_87 { pt3dadd( 134.373, -110.789, 2.09364, 0.37 ) }
    dend_87 { pt3dadd( 134.464, -112.71, 1.12024, 0.37 ) }
    // Section: dend_86, id: dend_86, parent: dend_85 (entry count 43/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( 134.16, -106.342, 4.34685, 0.37 ) }
    dend_86 { pt3dadd( 136.339, -106.632, 4.79055, 0.37 ) }
    dend_86 { pt3dadd( 137.982, -106.851, 5.12517, 0.37 ) }
    dend_86 { pt3dadd( 139.451, -107.047, 5.42417, 0.37 ) }
    dend_86 { pt3dadd( 140.533, -107.192, 5.64459, 0.37 ) }
    dend_86 { pt3dadd( 140.962, -107.249, 5.73197, 0.37 ) }
    // Section: dend_55, id: dend_55, parent: dend_47 (entry count 49/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -35.4614, -214.67, 6.00663, 0.44 ) }
    dend_55 { pt3dadd( -34.6314, -215.216, 6.32663, 0.44 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 51/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -35.4614, -214.67, 6.00663, 0.44 ) }
    dend_48 { pt3dadd( -35.3327, -213.363, 6.00663, 0.44 ) }
    dend_48 { pt3dadd( -35.2614, -212.533, 6.00663, 0.44 ) }
    dend_48 { pt3dadd( -35.1943, -211.759, 6.00663, 0.44 ) }
    dend_48 { pt3dadd( -35.0976, -210.976, 5.95887, 0.44 ) }
    dend_48 { pt3dadd( -34.8978, -209.684, 5.84145, 0.44 ) }
    dend_48 { pt3dadd( -34.7937, -209.13, 5.77292, 0.44 ) }
    dend_48 { pt3dadd( -34.5632, -208.245, 5.58504, 0.44 ) }
    dend_48 { pt3dadd( -34.4365, -207.843, 5.46941, 0.44 ) }
    dend_48 { pt3dadd( -33.9589, -206.44, 4.97428, 0.44 ) }
    dend_48 { pt3dadd( -33.7011, -205.674, 4.59105, 0.44 ) }
    dend_48 { pt3dadd( -33.5597, -205.179, 4.29848, 0.44 ) }
    dend_48 { pt3dadd( -33.349, -204.317, 3.68782, 0.44 ) }
    dend_48 { pt3dadd( -33.264, -203.851, 3.26275, 0.44 ) }
    dend_48 { pt3dadd( -33.2325, -203.44, 2.85826, 0.44 ) }
    dend_48 { pt3dadd( -33.248, -202.099, 1.53669, 0.44 ) }
    dend_48 { pt3dadd( -33.2959, -201.202, 0.685644, 0.44 ) }
    dend_48 { pt3dadd( -33.4419, -199.864, -0.459339, 0.44 ) }
    dend_48 { pt3dadd( -33.7069, -198.051, -1.95253, 0.44 ) }
    dend_48 { pt3dadd( -33.8269, -197.196, -2.63592, 0.44 ) }
    dend_48 { pt3dadd( -33.9163, -196.463, -3.2155, 0.44 ) }
    dend_48 { pt3dadd( -33.9711, -195.836, -3.70741, 0.44 ) }
    dend_48 { pt3dadd( -34.0424, -194.669, -4.62393, 0.44 ) }
    dend_48 { pt3dadd( -34.0976, -193.095, -5.71998, 0.44 ) }
    dend_48 { pt3dadd( -34.0912, -192.441, -6.14024, 0.44 ) }
    dend_48 { pt3dadd( -34.0288, -191.598, -6.80057, 0.44 ) }
    dend_48 { pt3dadd( -33.9385, -190.811, -7.55485, 0.44 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 78/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -47.7426, -437.584, -47.2357, 0.52 ) }
    dend_38 { pt3dadd( -47.8055, -438.925, -47.4901, 0.52 ) }
    dend_38 { pt3dadd( -47.8678, -439.851, -47.6302, 0.52 ) }
    dend_38 { pt3dadd( -47.958, -441.139, -47.8397, 0.52 ) }
    dend_38 { pt3dadd( -48.0387, -442.686, -48.0789, 0.52 ) }
    dend_38 { pt3dadd( -48.0682, -443.529, -48.1981, 0.52 ) }
    dend_38 { pt3dadd( -48.0819, -444.819, -48.3649, 0.52 ) }
    dend_38 { pt3dadd( -48.079, -446.307, -48.5306, 0.52 ) }
    dend_38 { pt3dadd( -48.0188, -448.363, -48.7143, 0.52 ) }
    dend_38 { pt3dadd( -47.9229, -450.048, -48.8187, 0.52 ) }
    dend_38 { pt3dadd( -47.7949, -451.706, -48.8859, 0.52 ) }
    dend_38 { pt3dadd( -47.6937, -453.045, -48.91, 0.52 ) }
    dend_38 { pt3dadd( -47.5588, -454.89, -48.8992, 0.52 ) }
    dend_38 { pt3dadd( -47.4874, -456.179, -48.8549, 0.52 ) }
    dend_38 { pt3dadd( -47.4563, -457.627, -48.7567, 0.52 ) }
    dend_38 { pt3dadd( -47.4763, -458.615, -48.6854, 0.52 ) }
    dend_38 { pt3dadd( -47.5823, -460.13, -48.5747, 0.52 ) }
    dend_38 { pt3dadd( -47.7087, -461.05, -48.5103, 0.52 ) }
    dend_38 { pt3dadd( -47.95, -462.228, -48.4352, 0.52 ) }
    dend_38 { pt3dadd( -48.4087, -463.874, -48.281, 0.52 ) }
    dend_38 { pt3dadd( -48.8221, -465.161, -48.1353, 0.52 ) }
    dend_38 { pt3dadd( -49.1223, -466.004, -48.0354, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_38 { pt3dadd( -49.4716, -466.843, -47.9087, 0.52 ) }
    dend_38 { pt3dadd( -49.7538, -467.441, -47.8056, 0.52 ) }
    dend_38 { pt3dadd( -50.5151, -468.949, -47.5619, 0.52 ) }
    dend_38 { pt3dadd( -51.0296, -469.971, -47.4175, 0.52 ) }
    dend_38 { pt3dadd( -51.591, -471.157, -47.2912, 0.52 ) }
    dend_38 { pt3dadd( -51.9452, -472.009, -47.2382, 0.52 ) }
    dend_38 { pt3dadd( -52.2853, -472.951, -47.2242, 0.52 ) }
    dend_38 { pt3dadd( -52.592, -473.903, -47.2573, 0.52 ) }
    dend_38 { pt3dadd( -52.8546, -474.802, -47.3413, 0.52 ) }
    dend_38 { pt3dadd( -53.0843, -475.635, -47.4146, 0.52 ) }
    dend_38 { pt3dadd( -53.3356, -476.668, -47.4911, 0.52 ) }
    dend_38 { pt3dadd( -53.5761, -477.727, -47.549, 0.52 ) }
    dend_38 { pt3dadd( -53.7852, -478.624, -47.5762, 0.52 ) }
    dend_38 { pt3dadd( -54.0037, -479.458, -47.5762, 0.52 ) }
    dend_38 { pt3dadd( -54.1756, -480.05, -47.5762, 0.52 ) }
    dend_38 { pt3dadd( -54.5126, -481.137, -47.5762, 0.52 ) }
    dend_38 { pt3dadd( -54.7718, -481.878, -47.5762, 0.52 ) }
    dend_38 { pt3dadd( -55.0155, -482.559, -47.5762, 0.52 ) }
    dend_38 { pt3dadd( -55.4408, -483.843, -47.5762, 0.52 ) }
    dend_38 { pt3dadd( -55.7598, -484.92, -47.5762, 0.52 ) }
    dend_38 { pt3dadd( -56.0615, -486.033, -47.5762, 0.52 ) }
    dend_38 { pt3dadd( -56.4817, -487.516, -47.5762, 0.52 ) }
    dend_38 { pt3dadd( -57.0508, -489.355, -47.551, 0.52 ) }
    dend_38 { pt3dadd( -57.4842, -490.71, -47.5678, 0.52 ) }
    dend_38 { pt3dadd( -57.926, -492.071, -47.6381, 0.52 ) }
    dend_38 { pt3dadd( -58.5586, -493.959, -47.8291, 0.52 ) }
    dend_38 { pt3dadd( -59.1232, -495.56, -48.0554, 0.52 ) }
    dend_38 { pt3dadd( -60.1074, -498.046, -48.5001, 0.52 ) }
    dend_38 { pt3dadd( -60.9453, -499.89, -48.8954, 0.52 ) }
    dend_38 { pt3dadd( -61.6511, -501.293, -49.234, 0.52 ) }
    dend_38 { pt3dadd( -62.235, -502.393, -49.5249, 0.52 ) }
    dend_38 { pt3dadd( -62.6889, -503.223, -49.7551, 0.52 ) }
    dend_38 { pt3dadd( -63.1491, -504.078, -49.9783, 0.52 ) }
    dend_38 { pt3dadd( -63.5004, -504.729, -50.1149, 0.52 ) }
    dend_38 { pt3dadd( -64.0485, -505.681, -50.2053, 0.52 ) }
    dend_38 { pt3dadd( -64.5433, -506.545, -50.2321, 0.52 ) }
    dend_38 { pt3dadd( -65.1858, -507.697, -50.2321, 0.52 ) }
    dend_38 { pt3dadd( -65.8111, -508.867, -50.2321, 0.52 ) }
    dend_38 { pt3dadd( -66.4171, -510.123, -50.2321, 0.52 ) }
    dend_38 { pt3dadd( -67.119, -511.667, -50.2321, 0.52 ) }
    dend_38 { pt3dadd( -67.6094, -512.79, -50.2321, 0.52 ) }
    dend_38 { pt3dadd( -68.1435, -514.09, -50.2321, 0.52 ) }
    dend_38 { pt3dadd( -68.5236, -515.078, -50.2671, 0.52 ) }
    dend_38 { pt3dadd( -69.1278, -516.695, -50.3363, 0.52 ) }
    dend_38 { pt3dadd( -69.3151, -517.231, -50.3646, 0.52 ) }
    dend_38 { pt3dadd( -69.6792, -518.434, -50.4444, 0.52 ) }
    dend_38 { pt3dadd( -69.9678, -519.388, -50.5261, 0.52 ) }
    dend_38 { pt3dadd( -70.4019, -520.858, -50.6971, 0.52 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 48/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -47.7426, -437.584, -47.2357, 0.52 ) }
    dend_37 { pt3dadd( -45.9861, -438.077, -47.2357, 0.52 ) }
    dend_37 { pt3dadd( -45.3588, -438.253, -47.2357, 0.52 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 51/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -34.6314, -215.216, 6.32663, 0.44 ) }
    dend_61 { pt3dadd( -34.065, -215.704, 5.69578, 0.44 ) }
    dend_61 { pt3dadd( -33.7195, -216.002, 5.31087, 0.44 ) }
    dend_61 { pt3dadd( -32.1902, -217.321, 3.60738, 0.44 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 55/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -34.6314, -215.216, 6.32663, 0.44 ) }
    dend_56 { pt3dadd( -35.0101, -216.836, 6.81859, 0.44 ) }
    dend_56 { pt3dadd( -35.1192, -217.308, 6.9401, 0.44 ) }
    dend_56 { pt3dadd( -35.1951, -217.704, 7.06776, 0.44 ) }
    dend_56 { pt3dadd( -35.274, -218.33, 7.27235, 0.44 ) }
    dend_56 { pt3dadd( -35.3686, -219.151, 7.5485, 0.44 ) }
    dend_56 { pt3dadd( -35.443, -219.875, 7.82562, 0.44 ) }
    dend_56 { pt3dadd( -35.5508, -220.859, 8.25393, 0.44 ) }
    dend_56 { pt3dadd( -35.7413, -222.022, 8.8385, 0.44 ) }
    dend_56 { pt3dadd( -35.9528, -222.88, 9.38179, 0.44 ) }
    dend_56 { pt3dadd( -36.1742, -223.471, 9.82891, 0.44 ) }
    dend_56 { pt3dadd( -36.7514, -224.552, 10.8659, 0.44 ) }
    dend_56 { pt3dadd( -37.4739, -225.645, 12.0964, 0.44 ) }
    dend_56 { pt3dadd( -37.8129, -226.071, 12.6433, 0.44 ) }
    dend_56 { pt3dadd( -38.6652, -226.939, 13.8579, 0.44 ) }
    dend_56 { pt3dadd( -39.2418, -227.506, 14.7163, 0.44 ) }
    dend_56 { pt3dadd( -39.9431, -228.289, 15.8649, 0.44 ) }
    dend_56 { pt3dadd( -40.1245, -228.481, 16.1598, 0.44 ) }
    dend_56 { pt3dadd( -40.3013, -228.725, 16.5141, 0.44 ) }
    dend_56 { pt3dadd( -40.4732, -229.123, 17.0213, 0.44 ) }
    dend_56 { pt3dadd( -40.5865, -230.462, 18.1634, 0.44 ) }
    dend_56 { pt3dadd( -40.5438, -231.034, 18.5906, 0.44 ) }
    // Section: dend_54, id: dend_54, parent: dend_48 (entry count 77/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -33.9385, -190.811, -7.55485, 0.44 ) }
    dend_54 { pt3dadd( -32.6874, -191.3, -7.93121, 0.44 ) }
    dend_54 { pt3dadd( -31.6919, -191.69, -8.23069, 0.44 ) }
    dend_54 { pt3dadd( -30.3033, -192.233, -8.64842, 0.44 ) }
    dend_54 { pt3dadd( -29.7459, -192.451, -8.8161, 0.44 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 82/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -33.9385, -190.811, -7.55485, 0.44 ) }
    dend_49 { pt3dadd( -33.9373, -189.661, -7.49371, 0.44 ) }
    dend_49 { pt3dadd( -33.9362, -188.497, -7.43181, 0.44 ) }
    dend_49 { pt3dadd( -33.9357, -187.93, -7.40168, 0.44 ) }
    dend_49 { pt3dadd( -33.9348, -187.031, -7.35389, 0.44 ) }
    dend_49 { pt3dadd( -33.9338, -185.959, -7.29689, 0.44 ) }
    dend_49 { pt3dadd( -33.9329, -185.03, -7.24747, 0.44 ) }
    // Section: dend_42, id: dend_42, parent: dend_38 (entry count 89/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -70.4019, -520.858, -50.6971, 0.37 ) }
    dend_42 { pt3dadd( -71.4138, -521.724, -50.9722, 0.37 ) }
    dend_42 { pt3dadd( -72.1765, -522.424, -51.3018, 0.37 ) }
    dend_42 { pt3dadd( -72.9575, -523.201, -51.675, 0.37 ) }
    dend_42 { pt3dadd( -73.5569, -523.789, -51.9553, 0.37 ) }
    dend_42 { pt3dadd( -74.0338, -524.208, -52.1532, 0.37 ) }
    dend_42 { pt3dadd( -74.6681, -524.711, -52.3924, 0.37 ) }
    dend_42 { pt3dadd( -75.7665, -525.442, -52.9133, 0.37 ) }
    dend_42 { pt3dadd( -76.7122, -525.89, -53.3558, 0.37 ) }
    dend_42 { pt3dadd( -77.3295, -526.065, -53.6289, 0.37 ) }
    dend_42 { pt3dadd( -78.541, -526.241, -54.1481, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_42 { pt3dadd( -79.0538, -526.263, -54.3292, 0.37 ) }
    dend_42 { pt3dadd( -81.2767, -526.191, -54.9408, 0.37 ) }
    dend_42 { pt3dadd( -82.1296, -526.111, -55.1113, 0.37 ) }
    dend_42 { pt3dadd( -84.0941, -525.817, -55.4269, 0.37 ) }
    dend_42 { pt3dadd( -85.2536, -525.596, -55.5099, 0.37 ) }
    dend_42 { pt3dadd( -86.9491, -525.16, -55.484, 0.37 ) }
    dend_42 { pt3dadd( -88.3368, -524.719, -55.3493, 0.37 ) }
    dend_42 { pt3dadd( -89.3543, -524.319, -55.1624, 0.37 ) }
    dend_42 { pt3dadd( -90.563, -523.773, -54.9399, 0.37 ) }
    dend_42 { pt3dadd( -92.3887, -522.885, -54.6175, 0.37 ) }
    dend_42 { pt3dadd( -94.0273, -522.027, -54.3879, 0.37 ) }
    dend_42 { pt3dadd( -94.9344, -521.519, -54.3576, 0.37 ) }
    dend_42 { pt3dadd( -96.4459, -520.653, -54.3373, 0.37 ) }
    dend_42 { pt3dadd( -99.4418, -518.949, -54.3923, 0.37 ) }
    dend_42 { pt3dadd( -101.257, -517.939, -54.5055, 0.37 ) }
    dend_42 { pt3dadd( -103.016, -517.001, -54.7403, 0.37 ) }
    dend_42 { pt3dadd( -105.673, -515.681, -55.1494, 0.37 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 17/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -70.4019, -520.858, -50.6971, 0.52 ) }
    dend_39 { pt3dadd( -70.7579, -522.593, -50.5452, 0.52 ) }
    dend_39 { pt3dadd( -70.8536, -523.291, -50.5014, 0.52 ) }
    dend_39 { pt3dadd( -70.9051, -524.151, -50.4604, 0.52 ) }
    dend_39 { pt3dadd( -70.8502, -525.005, -50.4279, 0.52 ) }
    dend_39 { pt3dadd( -70.6937, -526.082, -50.3933, 0.52 ) }
    dend_39 { pt3dadd( -70.369, -527.824, -50.4617, 0.52 ) }
    dend_39 { pt3dadd( -70.0234, -529.189, -50.623, 0.52 ) }
    dend_39 { pt3dadd( -69.652, -530.53, -50.8354, 0.52 ) }
    dend_39 { pt3dadd( -69.1362, -532.391, -51.188, 0.52 ) }
    dend_39 { pt3dadd( -68.937, -533.167, -51.3539, 0.52 ) }
    dend_39 { pt3dadd( -68.5184, -535.275, -51.8529, 0.52 ) }
    dend_39 { pt3dadd( -68.4435, -536.031, -52.0449, 0.52 ) }
    dend_39 { pt3dadd( -68.5203, -537.091, -52.33, 0.52 ) }
    dend_39 { pt3dadd( -68.814, -538.218, -52.6056, 0.52 ) }
    dend_39 { pt3dadd( -69.1404, -539.055, -52.7732, 0.52 ) }
    dend_39 { pt3dadd( -69.5091, -539.864, -52.8888, 0.52 ) }
    dend_39 { pt3dadd( -69.8898, -540.639, -52.9524, 0.52 ) }
    dend_39 { pt3dadd( -70.5981, -542.08, -53.0668, 0.52 ) }
    dend_39 { pt3dadd( -71.4782, -543.99, -53.2203, 0.52 ) }
    dend_39 { pt3dadd( -72.0379, -545.383, -53.3433, 0.52 ) }
    dend_39 { pt3dadd( -72.7366, -547.2, -53.5021, 0.52 ) }
    dend_39 { pt3dadd( -73.1609, -548.336, -53.597, 0.52 ) }
    dend_39 { pt3dadd( -73.5559, -549.412, -53.6754, 0.52 ) }
    dend_39 { pt3dadd( -73.9398, -550.565, -53.7265, 0.52 ) }
    dend_39 { pt3dadd( -74.4096, -552.363, -53.8358, 0.52 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 43/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -40.5438, -231.034, 18.5906, 0.44 ) }
    dend_58 { pt3dadd( -40.1068, -232.851, 20.311, 0.44 ) }
    dend_58 { pt3dadd( -39.9549, -233.483, 20.909, 0.44 ) }
    dend_58 { pt3dadd( -39.7957, -234.145, 21.5356, 0.44 ) }
    dend_58 { pt3dadd( -39.6793, -234.629, 21.994, 0.44 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 48/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -40.5438, -231.034, 18.5906, 0.44 ) }
    dend_57 { pt3dadd( -39.6219, -231.357, 19.718, 0.44 ) }
    dend_57 { pt3dadd( -38.6184, -231.708, 20.9452, 0.44 ) }
    dend_57 { pt3dadd( -38.0686, -231.9, 21.6176, 0.44 ) }
    dend_57 { pt3dadd( -37.6595, -232.043, 22.1178, 0.44 ) }
    // Section: dend_53, id: dend_53, parent: dend_49 (entry count 53/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -33.9329, -185.03, -7.24747, 0.44 ) }
    dend_53 { pt3dadd( -35.4319, -186.28, -6.78843, 0.44 ) }
    dend_53 { pt3dadd( -36.208, -186.927, -6.55076, 0.44 ) }
    dend_53 { pt3dadd( -38.3101, -188.68, -5.90703, 0.44 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 57/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -33.9329, -185.03, -7.24747, 0.44 ) }
    dend_50 { pt3dadd( -33.5652, -184.071, -8.04035, 0.44 ) }
    dend_50 { pt3dadd( -32.7044, -181.473, -9.95327, 0.44 ) }
    dend_50 { pt3dadd( -32.4988, -180.764, -10.4014, 0.44 ) }
    dend_50 { pt3dadd( -32.3142, -180.026, -10.8194, 0.44 ) }
    dend_50 { pt3dadd( -32.1642, -179.201, -11.2275, 0.44 ) }
    dend_50 { pt3dadd( -32.0592, -178.243, -11.6749, 0.44 ) }
    dend_50 { pt3dadd( -31.9195, -175.751, -12.6692, 0.44 ) }
    dend_50 { pt3dadd( -31.8974, -174.38, -13.0836, 0.44 ) }
    dend_50 { pt3dadd( -31.8806, -173.648, -13.321, 0.44 ) }
    dend_50 { pt3dadd( -31.8282, -172.032, -13.918, 0.44 ) }
    dend_50 { pt3dadd( -31.7255, -169.541, -14.8847, 0.44 ) }
    dend_50 { pt3dadd( -31.6716, -168.492, -15.2899, 0.44 ) }
    dend_50 { pt3dadd( -31.5736, -167.073, -15.8011, 0.44 ) }
    dend_50 { pt3dadd( -31.4096, -165.486, -16.4346, 0.44 ) }
    dend_50 { pt3dadd( -31.1472, -163.756, -17.1516, 0.44 ) }
    dend_50 { pt3dadd( -30.887, -162.601, -17.636, 0.44 ) }
    dend_50 { pt3dadd( -30.6493, -161.76, -17.9639, 0.44 ) }
    dend_50 { pt3dadd( -30.379, -160.915, -18.3273, 0.44 ) }
    dend_50 { pt3dadd( -29.7439, -159.151, -19.1122, 0.44 ) }
    dend_50 { pt3dadd( -29.4505, -158.389, -19.4242, 0.44 ) }
    dend_50 { pt3dadd( -29.0527, -157.552, -19.7574, 0.44 ) }
    dend_50 { pt3dadd( -28.6854, -156.859, -20.0512, 0.44 ) }
    dend_50 { pt3dadd( -27.8396, -155.313, -20.6902, 0.44 ) }
    dend_50 { pt3dadd( -27.6193, -154.889, -20.8494, 0.44 ) }
    dend_50 { pt3dadd( -27.3571, -154.318, -21.013, 0.44 ) }
    dend_50 { pt3dadd( -27.112, -153.577, -21.1873, 0.44 ) }
    dend_50 { pt3dadd( -26.954, -152.798, -21.3127, 0.44 ) }
    dend_50 { pt3dadd( -26.8249, -151.966, -21.4238, 0.44 ) }
    dend_50 { pt3dadd( -26.7345, -151.384, -21.5475, 0.44 ) }
    dend_50 { pt3dadd( -26.6094, -150.696, -21.7508, 0.44 ) }
    dend_50 { pt3dadd( -26.4229, -149.757, -22.0685, 0.44 ) }
    dend_50 { pt3dadd( -26.2198, -148.765, -22.4152, 0.44 ) }
    dend_50 { pt3dadd( -25.8726, -147.42, -22.8679, 0.44 ) }
    dend_50 { pt3dadd( -25.0706, -144.878, -23.7752, 0.44 ) }
    dend_50 { pt3dadd( -24.7612, -144.023, -24.0871, 0.44 ) }
    dend_50 { pt3dadd( -24.3832, -143.08, -24.4614, 0.44 ) }
    dend_50 { pt3dadd( -23.8479, -141.843, -24.9612, 0.44 ) }
    dend_50 { pt3dadd( -23.0369, -140.081, -25.6347, 0.44 ) }
    dend_50 { pt3dadd( -22.2109, -138.324, -26.2513, 0.44 ) }
    dend_50 { pt3dadd( -21.6719, -137.233, -26.6029, 0.44 ) }
    dend_50 { pt3dadd( -20.8755, -135.69, -27.1551, 0.44 ) }
    dend_50 { pt3dadd( -20.3069, -134.649, -27.5742, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_50 { pt3dadd( -19.5892, -133.407, -28.1445, 0.44 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 1/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -74.4096, -552.363, -53.8358, 0.52 ) }
    dend_41 { pt3dadd( -74.6196, -554.13, -53.7083, 0.52 ) }
    dend_41 { pt3dadd( -74.7471, -555.203, -53.6309, 0.52 ) }
    dend_41 { pt3dadd( -74.8746, -556.276, -53.5535, 0.52 ) }
    dend_41 { pt3dadd( -75.009, -557.407, -53.4719, 0.52 ) }
    dend_41 { pt3dadd( -75.2022, -559.033, -53.3546, 0.52 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 7/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -74.4096, -552.363, -53.8358, 0.52 ) }
    dend_40 { pt3dadd( -73.6926, -554.184, -54.0138, 0.52 ) }
    dend_40 { pt3dadd( -73.3052, -555.166, -54.0418, 0.52 ) }
    dend_40 { pt3dadd( -72.8731, -556.233, -53.958, 0.52 ) }
    dend_40 { pt3dadd( -72.3764, -557.392, -53.807, 0.52 ) }
    dend_40 { pt3dadd( -71.8758, -558.559, -53.6549, 0.52 ) }
    dend_40 { pt3dadd( -71.5166, -559.396, -53.5458, 0.52 ) }
    dend_40 { pt3dadd( -71.0815, -560.354, -53.3256, 0.52 ) }
    dend_40 { pt3dadd( -70.336, -561.942, -52.8803, 0.52 ) }
    dend_40 { pt3dadd( -69.8388, -562.939, -52.5287, 0.52 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 17/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -39.6793, -234.629, 21.994, 0.44 ) }
    dend_60 { pt3dadd( -39.7663, -235.497, 22.6105, 0.44 ) }
    dend_60 { pt3dadd( -39.9181, -236.555, 23.2594, 0.44 ) }
    dend_60 { pt3dadd( -39.9977, -237.131, 23.5751, 0.44 ) }
    dend_60 { pt3dadd( -40.1041, -238.179, 24.097, 0.44 ) }
    dend_60 { pt3dadd( -40.1932, -239.536, 24.8031, 0.44 ) }
    dend_60 { pt3dadd( -40.2135, -240.487, 25.2945, 0.44 ) }
    dend_60 { pt3dadd( -40.2114, -241.203, 25.6176, 0.44 ) }
    dend_60 { pt3dadd( -40.1891, -241.733, 25.8238, 0.44 ) }
    dend_60 { pt3dadd( -40.1419, -242.361, 26.0558, 0.44 ) }
    dend_60 { pt3dadd( -40.0247, -243.854, 26.6177, 0.44 ) }
    dend_60 { pt3dadd( -39.9945, -244.559, 26.8705, 0.44 ) }
    dend_60 { pt3dadd( -40.0447, -245.249, 27.1339, 0.44 ) }
    dend_60 { pt3dadd( -40.1977, -245.982, 27.407, 0.44 ) }
    dend_60 { pt3dadd( -40.408, -246.649, 27.6246, 0.44 ) }
    dend_60 { pt3dadd( -40.9193, -248.024, 28.0723, 0.44 ) }
    dend_60 { pt3dadd( -41.1764, -248.623, 28.2537, 0.44 ) }
    dend_60 { pt3dadd( -41.712, -249.733, 28.606, 0.44 ) }
    dend_60 { pt3dadd( -42.0189, -250.355, 28.8041, 0.44 ) }
    dend_60 { pt3dadd( -42.4343, -251.298, 29.088, 0.44 ) }
    dend_60 { pt3dadd( -43.1306, -253.275, 29.6012, 0.44 ) }
    dend_60 { pt3dadd( -43.2907, -253.851, 29.7157, 0.44 ) }
    dend_60 { pt3dadd( -43.5302, -254.881, 29.898, 0.44 ) }
    dend_60 { pt3dadd( -43.6464, -255.442, 29.977, 0.44 ) }
    dend_60 { pt3dadd( -43.8401, -256.427, 30.1341, 0.44 ) }
    dend_60 { pt3dadd( -44.0225, -257.432, 30.2957, 0.44 ) }
    dend_60 { pt3dadd( -44.2139, -258.541, 30.4539, 0.44 ) }
    dend_60 { pt3dadd( -44.3492, -259.332, 30.5826, 0.44 ) }
    dend_60 { pt3dadd( -44.7416, -261.19, 30.915, 0.44 ) }
    dend_60 { pt3dadd( -45.1715, -262.696, 31.1992, 0.44 ) }
    dend_60 { pt3dadd( -45.3873, -263.296, 31.3167, 0.44 ) }
    dend_60 { pt3dadd( -45.7173, -264.046, 31.4315, 0.44 ) }
    dend_60 { pt3dadd( -46.0651, -264.698, 31.4942, 0.44 ) }
    dend_60 { pt3dadd( -46.7168, -265.685, 31.5157, 0.44 ) }
    dend_60 { pt3dadd( -47.1823, -266.287, 31.4756, 0.44 ) }
    dend_60 { pt3dadd( -47.5392, -266.747, 31.4286, 0.44 ) }
    dend_60 { pt3dadd( -48.478, -268.022, 31.3323, 0.44 ) }
    dend_60 { pt3dadd( -49.096, -268.958, 31.2835, 0.44 ) }
    dend_60 { pt3dadd( -49.6411, -269.931, 31.2551, 0.44 ) }
    dend_60 { pt3dadd( -50.1566, -271.077, 31.2505, 0.44 ) }
    dend_60 { pt3dadd( -50.6401, -272.471, 31.2785, 0.44 ) }
    dend_60 { pt3dadd( -50.9062, -273.447, 31.3219, 0.44 ) }
    dend_60 { pt3dadd( -51.0607, -274.291, 31.3824, 0.44 ) }
    dend_60 { pt3dadd( -51.2263, -275.386, 31.4821, 0.44 ) }
    dend_60 { pt3dadd( -51.4071, -276.321, 31.5798, 0.44 ) }
    dend_60 { pt3dadd( -51.7001, -277.307, 31.6924, 0.44 ) }
    dend_60 { pt3dadd( -52.0452, -278.304, 31.7983, 0.44 ) }
    dend_60 { pt3dadd( -52.3778, -279.086, 31.8983, 0.44 ) }
    dend_60 { pt3dadd( -53.0502, -280.29, 32.0865, 0.44 ) }
    dend_60 { pt3dadd( -53.9635, -281.486, 32.3227, 0.44 ) }
    dend_60 { pt3dadd( -54.5355, -282.046, 32.4617, 0.44 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 68/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -39.6793, -234.629, 21.994, 0.44 ) }
    dend_59 { pt3dadd( -40.7444, -235.185, 21.8369, 0.44 ) }
    dend_59 { pt3dadd( -41.5015, -235.579, 21.7252, 0.44 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 71/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -19.5892, -133.407, -28.1445, 0.44 ) }
    dend_52 { pt3dadd( -21.3271, -132.176, -29.5363, 0.44 ) }
    dend_52 { pt3dadd( -22.1155, -131.617, -30.1676, 0.44 ) }
    dend_52 { pt3dadd( -22.7171, -131.191, -30.6494, 0.44 ) }
    dend_52 { pt3dadd( -23.8241, -130.407, -31.536, 0.44 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 76/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -19.5892, -133.407, -28.1445, 0.44 ) }
    dend_51 { pt3dadd( -19.0242, -131.406, -28.3663, 0.44 ) }
    dend_51 { pt3dadd( -18.4797, -129.478, -28.58, 0.44 ) }
    dend_51 { pt3dadd( -17.8296, -127.176, -28.8352, 0.44 ) }
    dend_51 { pt3dadd( -17.516, -126.066, -28.9582, 0.44 ) }
    dend_51 { pt3dadd( -17.2563, -125.146, -29.0602, 0.44 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_29, dend_0, dend_75, dend_30, dend_16, dend_1, dend_89, dend_76, dend_72, dend_31, dend_28, dend_17, dend_13, dend_2, dend_91, dend_90, dend_78, dend_77, dend_74, dend_73, dend_67, dend_32, dend_27, dend_18, dend_15, dend_14, dend_10, dend_3, dend_93, dend_92, dend_80, dend_79, dend_71, dend_68, dend_64, dend_33, dend_24, dend_19, dend_12, dend_11, dend_9, dend_4, dend_88, dend_81, dend_70, dend_69, dend_66, dend_65, dend_45, dend_34, dend_26, dend_25, dend_21, dend_20, dend_6, dend_5, dend_83, dend_82, dend_63, dend_46, dend_44, dend_35, dend_23, dend_22, dend_8, dend_7, dend_85, dend_84, dend_62, dend_47, dend_43, dend_36, dend_87, dend_86, dend_55, dend_48, dend_38, dend_37, dend_61, dend_56, dend_54, dend_49, dend_42, dend_39, dend_58, dend_57, dend_53, dend_50, dend_41, dend_40, dend_60, dend_59, dend_52, dend_51]}
    ModelViewParmSubset_2 = new SectionList()
    dend_29 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_89 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_91 ModelViewParmSubset_2.append()
    dend_90 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_93 ModelViewParmSubset_2.append()
    dend_92 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_29, dend_0, dend_75, dend_30, dend_16, dend_1, dend_89, dend_76, dend_72, dend_31, dend_28, dend_17, dend_13, dend_2, dend_91, dend_90, dend_78, dend_77, dend_74, dend_73, dend_67, dend_32, dend_27, dend_18, dend_15, dend_14, dend_10, dend_3, dend_93, dend_92, dend_80, dend_79, dend_71, dend_68, dend_64, dend_33, dend_24, dend_19, dend_12, dend_11, dend_9, dend_4, dend_88, dend_81, dend_70, dend_69, dend_66, dend_65, dend_45, dend_34, dend_26, dend_25, dend_21, dend_20, dend_6, dend_5, dend_83, dend_82, dend_63, dend_46, dend_44, dend_35, dend_23, dend_22, dend_8, dend_7, dend_85, dend_84, dend_62, dend_47, dend_43, dend_36, dend_87, dend_86, dend_55, dend_48, dend_38, dend_37, dend_61, dend_56, dend_54, dend_49, dend_42, dend_39, dend_58, dend_57, dend_53, dend_50, dend_41, dend_40, dend_60, dend_59, dend_52, dend_51]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_29 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_89 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_91 ModelViewParmSubset_4.append()
    dend_90 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_93 ModelViewParmSubset_4.append()
    dend_92 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_72 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_28 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_90]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_90 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_74 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_73 OneSecGrp_SectionRef_23.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_27 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_3 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_71 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_68 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_33 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_24 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_19 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_11 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_9 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_4 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_81 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_70 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_26 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_6 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_46 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_44 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_35 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_8 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_7 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_85 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_36 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_38 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_42 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_50 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_94 = new SectionList()
    dend_60 OneSecGrp_SectionRef_94.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_29 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_30 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_75 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_2 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_76 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_77 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_78 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_16 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_79 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_89]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_89 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_80 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_10 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_13 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_31 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_17 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_88 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_12 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_91]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_91 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_15 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_93]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_93 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_67 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_32 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_14 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_92]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_92 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_18 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_82 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_64 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_65 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_83 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_84 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_69 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_66 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_5 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_86 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_87 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_25 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_20 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_21 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_34 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_23 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_22 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_45 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_63 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_62 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_47 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_55 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_61 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_43 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_56 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_57 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_58 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_48 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_95 = new SectionList()
    dend_59 OneSecGrp_SectionRef_95.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_54 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_49 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_53 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_37 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_96 = new SectionList()
    dend_52 OneSecGrp_SectionRef_96.append()

    // Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_97 = new SectionList()
    dend_51 OneSecGrp_SectionRef_97.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_39 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_41 OneSecGrp_SectionRef_92.append()

    // Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_93 = new SectionList()
    dend_40 OneSecGrp_SectionRef_93.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()
    dend_89 basal.append()
    dend_90 basal.append()
    dend_91 basal.append()
    dend_92 basal.append()
    dend_93 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_1, dend_1, dend_1, axon_1, axon_1, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_78, dend_78, dend_78, dend_78, dend_77, dend_77, dend_77, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_93, dend_93, dend_93, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_79, dend_79, dend_79, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_69, dend_69, dend_69, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_34, dend_34, dend_34, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_82, dend_82, dend_82, dend_82, dend_63, dend_63, dend_63, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_84, dend_84, dend_84, dend_62, dend_62, dend_62, dend_62, dend_62, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_86, dend_55, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_80 all.append()
    dend_80 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_47 all.append()
    dend_47 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_55 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_72 nseg = 7
    dend_28 nseg = 5
    dend_90 nseg = 11
    dend_74 nseg = 3
    dend_73 nseg = 5
    dend_27 nseg = 13
    dend_3 nseg = 3
    dend_71 nseg = 5
    dend_68 nseg = 3
    dend_33 nseg = 11
    dend_24 nseg = 7
    dend_19 nseg = 9
    dend_11 nseg = 5
    dend_9 nseg = 5
    dend_4 nseg = 3
    dend_81 nseg = 3
    dend_70 nseg = 3
    dend_26 nseg = 3
    dend_6 nseg = 5
    dend_46 nseg = 3
    dend_44 nseg = 3
    dend_35 nseg = 5
    dend_8 nseg = 5
    dend_7 nseg = 3
    dend_85 nseg = 3
    dend_36 nseg = 3
    dend_38 nseg = 5
    dend_42 nseg = 3
    dend_50 nseg = 3
    dend_60 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L6_DBC_53b6888784_0_0


