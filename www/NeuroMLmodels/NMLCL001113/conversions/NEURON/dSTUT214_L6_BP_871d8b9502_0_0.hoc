// Cell: dSTUT214_L6_BP_871d8b9502_0_0
/*
{
  "id" : "dSTUT214_L6_BP_871d8b9502_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 6.22701, 2.40803, 0.83", "-2.54439, 7.73457, 2.72585, 0.83", "-4.62818, 9.34968, 3.04012, 1.11", "-5.8568, 10.3013, 3.20359, 0.83", "-7.05045, 11.2179, 3.35006, 0.83", "-7.75718, 11.7405, 3.43033, 1.11", "-9.97033, 13.3737, 3.68757, 1.11", "-13.9288, 16.1697, 4.1423, 0.83", "-15.3549, 17.1386, 4.29246, 0.83", "-16.4842, 17.883, 4.38573, 0.83", "-17.5855, 18.6208, 4.46646, 0.83", "-18.4819, 19.2289, 4.51003, 0.55", "-19.1557, 19.6407, 4.55424, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.44701, -5.68197, 0.55", "5.38265, 6.57599, -6.45346, 0.55", "9.18369, 7.39823, -7.3023, 0.55", "11.3892, 7.6058, -8.42549, 0.83", "14.88, 7.82669, -10.5119, 0.55", "16.5651, 7.93331, -11.519, 1.38", "20.7083, 8.19549, -13.9954, 0.55", "22.4729, 8.10671, -15.177, 0.83", "31.6011, 6.47854, -21.8158, 0.55", "32.4842, 6.25959, -22.5462, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -8.24299, 2.42803, 1.11", "-0.683563, -10.4377, 3.21485, 1.11", "-0.730833, -14.6084, 4.71001, 1.11", "-0.750084, -16.3069, 5.31893, 0.83", "-0.775661, -18.5635, 6.12792, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.59701, -1.26197, 1.11", "0.859452, 9.54991, -1.35782, 1.11", "0.932507, 11.2698, -1.34355, 1.11", "1.04218, 14.0758, -1.21796, 1.38", "1.05093, 14.2321, -1.20811, 1.38", "1.27537, 16.1656, -1.06428, 0.83", "1.59341, 18.21, -0.801236, 0.83", "2.14401, 20.518, -0.220943, 0.83", "2.45904, 21.3932, 0.109116, 0.83", "2.77098, 22.0269, 0.413786, 1.11", "3.68584, 23.5701, 1.20197, 0.55", "4.75004, 25.1808, 2.14334, 0.83", "6.14786, 26.8369, 3.21461, 0.55", "6.86213, 27.5246, 3.70121, 0.83", "7.85954, 28.4559, 4.45924, 0.55", "9.09383, 29.6405, 5.48456, 0.55", "10.8156, 31.4235, 7.04957, 0.55", "12.7129, 33.4616, 8.77753, 0.55", "13.9066, 34.7843, 10.0667, 0.55", "15.3658, 36.4568, 11.8848, 0.55", "15.6685, 36.7922, 12.297, 0.83", "16.4669, 37.6785, 13.4596, 0.55", "17.1398, 38.3693, 14.3726, 0.83", "18.688, 40.2573, 16.5373, 0.55", "19.2738, 40.9468, 17.1708, 0.83", "19.8249, 41.4548, 17.6018, 0.55", "20.3732, 41.892, 17.9336, 0.83", "21.5913, 42.7047, 18.5368, 0.83", "23.2042, 43.8112, 19.1876, 0.83", "24.1952, 44.5428, 19.4774, 0.55", "24.9507, 45.176, 19.7027, 0.55", "26.9316, 46.8121, 20.2629, 0.83", "28.2116, 47.8612, 20.572, 0.55", "30.156, 49.3981, 20.9608, 0.55", "31.9383, 50.6864, 21.2445, 0.55", "33.5331, 51.7777, 21.4546, 0.55", "35.5493, 53.056, 21.6272, 0.55", "36.7821, 53.6819, 21.692, 0.55", "37.6241, 54.0336, 21.6346, 0.55", "38.7435, 54.2958, 21.4632, 0.55", "40.4153, 54.4149, 21.07, 0.55", "41.4581, 54.357, 20.7846, 0.55", "42.9812, 54.2309, 20.4743, 0.55", "45.8807, 54.0831, 20.143, 0.55", "48.1547, 54.0722, 20.0453, 0.55", "50.5637, 54.1755, 20.086, 0.55", "52.1075, 54.2947, 20.2344, 0.55", "56.1161, 54.9681, 20.8851, 0.55", "58.4865, 55.5496, 21.4495, 0.55", "60.2627, 56.1025, 22.0401, 0.55", "61.3415, 56.6185, 22.4413, 0.55", "62.5918, 57.3865, 22.9003, 0.55", "64.7093, 58.901, 23.4871, 0.55", "65.1954, 59.2657, 23.554, 0.55", "66.5908, 60.2409, 23.6532, 0.55", "67.8729, 61.2798, 23.7397, 0.83", "68.5726, 61.8562, 23.7758, 0.55", "69.6206, 62.8456, 23.788, 0.83", "75.1294, 68.1292, 25.3153, 0.83", "79.9205, 74.1908, 26.2623, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-19.1557, 19.6407, 4.55424, 0.55", "-21.3657, 20.8782, 3.37595, 0.55", "-23.7688, 22.2239, 2.09468, 0.55", "-26.6688, 23.8479, 0.548466, 0.55", "-29.0634, 25.1889, -0.728284, 0.83", "-31.0701, 26.3126, -1.7982, 0.55", "-34.7949, 28.3984, -3.78412, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-19.1557, 19.6407, 4.55424, 0.55", "-21.3546, 20.0112, 4.37792, 0.55", "-23.6826, 20.3432, 4.42515, 0.55", "-26.3194, 20.7183, 4.54322, 0.55", "-30.1211, 21.2362, 5.06678, 0.55", "-33.2905, 21.5869, 5.73664, 0.55", "-36.6072, 21.9095, 6.58506, 0.55", "-39.7939, 22.0174, 7.76566, 0.55", "-42.5207, 21.8504, 9.06584, 0.55", "-45.8977, 21.4149, 11.0719, 0.55", "-47.3546, 21.1239, 12.1613, 0.55", "-48.9246, 20.7952, 13.4098, 0.55", "-51.6975, 19.9904, 15.4906, 0.55", "-53.1848, 19.5558, 16.3548, 0.55", "-54.7425, 19.0507, 17.2528, 0.55", "-56.6045, 18.4654, 18.1249, 0.55", "-58.6314, 17.8702, 19.0135, 0.55", "-61.527, 17.0105, 20.217, 0.55", "-65.415, 16.1115, 21.455, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "32.4842, 6.25959, -22.5462, 0.55", "37.0483, 7.04551, -23.5033, 0.55", "39.6509, 7.41871, -24.4413, 0.55", "42.2043, 7.68195, -25.4249, 0.55", "43.9401, 7.79359, -26.1093, 0.55", "46.4703, 7.89524, -27.1015, 0.55", "51.702, 8.03731, -29.3413, 0.55", "57.6225, 8.23694, -32.2831, 0.55", "60.4656, 8.19408, -33.942, 0.55", "61.981, 8.15294, -34.9384, 0.55", "63.6418, 8.12906, -36.0977, 0.55", "66.5952, 8.00088, -38.1705, 0.55", "67.6587, 7.89765, -38.9718, 0.55", "72.1666, 7.64373, -42.6989, 0.55", "75.3579, 7.56254, -45.5693, 0.55", "77.1987, 7.56213, -47.2668, 0.55", "79.0325, 7.54498, -48.9616, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "32.4842, 6.25959, -22.5462, 0.83", "34.1989, 7.51248, -22.6463, 0.83", "35.1805, 8.22316, -22.7508, 0.55", "36.6266, 9.29039, -23.0377, 0.83", "37.5977, 10.0312, -23.2642, 0.55", "38.9332, 11.0925, -23.5595, 0.83", "40.5346, 12.408, -23.8549, 0.55", "41.3444, 13.0102, -23.9619, 0.55", "43.2256, 14.1425, -24.043, 0.83", "44.9439, 14.9779, -23.8628, 0.55", "45.9023, 15.4437, -23.6652, 0.83", "47.3328, 16.1907, -23.2139, 0.55", "49.3756, 17.3286, -22.2933, 0.55", "52.2201, 18.7697, -20.8458, 0.55", "54.9346, 20.0606, -19.2577, 0.55", "57.0859, 21.0631, -17.9565, 0.55", "60.6304, 22.7352, -15.7933, 0.55", "63.2153, 24.0425, -14.1582, 0.55", "64.7625, 24.9753, -13.1238, 0.55", "67.5847, 27.0059, -11.2209, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.775661, -18.5635, 6.12792, 0.83", "-1.35114, -21.3487, 6.10689, 0.83", "-1.91182, -24.0623, 6.08641, 0.83", "-2.53782, -27.092, 6.06353, 0.83", "-2.86472, -28.6741, 6.05159, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.775661, -18.5635, 6.12792, 0.55", "-0.318233, -19.9177, 7.11563, 0.55", "0.0695368, -21.5797, 8.38657, 0.55", "0.23612, -23.7652, 10.1171, 0.55", "0.239405, -24.6161, 10.8088, 0.83", "0.0305861, -26.7917, 12.8097, 0.55", "-0.171161, -27.9172, 13.8581, 0.55", "-0.616291, -30.1069, 15.9869, 0.83", "-1.04786, -31.7348, 17.6648, 0.55", "-1.52188, -33.0804, 19.0199, 0.55", "-2.47378, -35.6302, 21.5364, 0.55", "-3.22878, -37.6625, 23.5185, 0.55", "-3.80259, -39.2909, 25.1325, 0.55", "-4.31295, -41.0178, 26.7981, 0.28", "-4.46318, -41.7358, 27.4683, 0.55", "-4.70098, -43.0613, 28.6332, 0.28", "-4.76809, -45.1247, 30.1489, 0.55", "-6.6773, -52.0263, 35.4517, 0.55", "-8.8138, -58.4086, 41.2912, 0.55", "-10.6528, -63.6487, 48.2595, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-34.7949, 28.3984, -3.78412, 0.55", "-37.5054, 29.2793, -1.48139, 0.55", "-38.5998, 29.6257, -0.335999, 0.83", "-39.8222, 30.0138, 1.22261, 0.55", "-40.7292, 30.3411, 2.51836, 0.83", "-43.118, 31.3002, 5.85596, 0.55", "-44.021, 31.6854, 7.12298, 0.28", "-45.4836, 32.3968, 9.38811, 0.55", "-47.4501, 33.3631, 12.4112, 0.55", "-48.9677, 34.0711, 14.6184, 0.55", "-51.0174, 34.9916, 17.4853, 0.28", "-51.5725, 35.2119, 18.1484, 0.55", "-52.7365, 35.669, 19.4639, 0.28", "-53.5523, 35.9782, 20.2622, 0.55", "-55.2629, 36.5459, 21.7302, 0.28", "-56.2805, 36.7979, 22.5522, 0.55", "-58.065, 37.0981, 24.0617, 0.28", "-59.276, 37.2768, 25.0316, 0.55", "-65.6296, 38.7779, 34.7307, 0.55", "-71.0734, 39.352, 45.0616, 0.55", "-76.1911, 38.8474, 55.5616, 0.55", "-81.3573, 36.8984, 65.8671, 0.55", "-84.9836, 35.7131, 76.9187, 0.55", "-89.5718, 34.8365, 87.6367, 0.55", "-94.2563, 35.9048, 98.2953, 0.55", "-98.9155, 36.0362, 109.017, 0.55", "-103.309, 36.999, 119.809, 0.55", "-107.094, 37.8759, 130.836, 0.55", "-109.648, 37.5433, 142.24, 0.55", "-112.289, 38.3129, 153.604, 0.55", "-115.13, 37.8661, 164.936, 0.55", "-116.531, 37.0315, 176.513, 0.55", "-115.886, 37.1154, 188.187, 0.55", "-115.285, 34.9382, 199.658, 0.55", "-113.04, 32.5258, 210.875, 0.55", "-111.366, 30.6489, 222.293, 0.55", "-110.891, 29.6578, 233.933, 0.55", "-112.878, 30.4205, 245.429, 0.55", "-113.834, 29.9233, 257.072, 0.55", "-112.523, 31.4675, 268.586, 0.55", "-113.117, 33.8146, 280.025, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-34.7949, 28.3984, -3.78412, 0.55", "-36.8839, 28.8717, -5.85269, 0.55", "-38.5785, 29.3864, -8.2298, 0.55", "-40.1979, 30.0919, -10.7927, 0.55", "-41.212, 30.5337, -12.3976, 0.55", "-43.0617, 31.3395, -15.3251, 0.83", "-44.415, 31.9291, -17.4669, 0.55", "-46.0442, 32.6947, -20.6393, 0.83", "-46.7139, 33.271, -22.4747, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-65.415, 16.1115, 21.455, 0.28", "-66.6136, 13.5959, 21.6343, 0.28", "-67.2016, 12.4927, 21.6329, 0.28", "-67.9672, 10.9251, 21.5712, 0.55", "-68.5943, 9.55149, 21.5233, 0.28", "-69.5146, 7.4658, 21.4711, 0.55", "-72.0531, 1.36351, 21.3933, 0.28", "-72.8923, -0.807179, 21.2026, 0.55", "-74.173, -4.17122, 20.8045, 0.28", "-74.9153, -6.19951, 20.4817, 0.55", "-75.4313, -7.60392, 20.2293, 0.28", "-76.018, -9.21303, 19.951, 0.55", "-77.7671, -14.5476, 19.1192, 0.28", "-78.3243, -16.1736, 18.819, 0.55", "-79.3313, -18.7163, 18.1449, 0.28", "-80.1789, -20.3809, 17.6088, 0.28", "-80.945, -21.5101, 17.234, 0.55", "-83.6076, -24.6887, 16.3047, 0.28", "-84.8435, -25.9783, 15.966, 0.55", "-87.8846, -28.959, 15.061, 0.28", "-90.933, -31.6258, 14.2387, 0.28", "-94.2592, -34.2134, 13.3837, 0.28", "-95.7824, -35.2032, 13.0779, 0.55", "-102.894, -45.1806, 11.3431, 0.55", "-110.586, -54.8574, 11.9252, 0.55", "-118.33, -64.4233, 10.6343, 0.55", "-126.435, -73.4562, 8.21384, 0.55", "-134.809, -81.8326, 4.62784, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-65.415, 16.1115, 21.455, 0.55", "-66.1197, 16.0409, 21.6467, 0.55", "-68.0815, 15.913, 22.4421, 0.55", "-68.8132, 15.8565, 22.7855, 0.55", "-70.5269, 15.6779, 23.6337, 0.55", "-73.1779, 15.3957, 24.8013, 0.55", "-74.5615, 15.2854, 25.3721, 0.28", "-76.7151, 15.0549, 26.2305, 0.55", "-78.3178, 14.835, 26.8187, 0.55", "-78.9941, 14.738, 27.0698, 0.28", "-83.0509, 14.1527, 28.5709, 0.55", "-84.9519, 13.7596, 29.1793, 0.28", "-87.5305, 13.1791, 29.8519, 0.28", "-89.7694, 12.6761, 30.2936, 0.55", "-98.416, 12.4888, 33.5605, 0.55", "-106.644, 12.3424, 37.7716, 0.55", "-114.216, 11.5473, 43.0168, 0.55", "-121.598, 12.4405, 48.5097, 0.55", "-127.66, 13.4911, 55.4104, 0.55", "-132.318, 15.4061, 63.1633, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "79.0325, 7.54498, -48.9616, 0.55", "82.3046, 8.65745, -51.427, 0.55", "83.3272, 8.9883, -52.2808, 0.55", "84.5981, 9.35851, -53.348, 0.55", "86.896, 10.0553, -55.4197, 0.55", "89.2707, 10.7092, -57.6695, 0.55", "90.4113, 10.9311, -58.7707, 0.83", "91.3333, 11.075, -59.7677, 0.55", "92.0074, 11.1501, -60.6021, 0.83", "93.5733, 11.141, -62.8054, 0.55", "94.8322, 11.0101, -64.6716, 0.55", "96.2799, 10.8223, -66.7433, 0.55", "97.9026, 10.6754, -69.0693, 0.55", "98.9835, 10.5593, -70.668, 0.55", "100.201, 10.4388, -72.5157, 0.55", "101.261, 10.4024, -74.1798, 0.55", "101.94, 10.4779, -75.3016, 0.55", "102.767, 10.7835, -77.4926, 0.55", "103.2, 10.9517, -78.8683, 0.55", "103.519, 11.1534, -80.696, 0.55", "103.899, 11.4394, -83.7992, 0.55", "103.967, 11.4828, -84.5055, 0.28", "104.857, 11.9051, -93.1283, 0.28", "105.192, 12.0298, -95.6614, 0.83", "106.558, 12.2846, -104.713, 0.83", "107.261, 12.2322, -108.975, 0.83", "107.613, 12.1322, -110.729, 0.55", "108.045, 12.0088, -112.449, 0.55", "109.377, 11.5987, -115.71, 0.55", "110.86, 11.1453, -118.614, 0.28", "111.351, 10.9111, -118.862, 0.55", "112.464, 10.336, -118.971, 0.28", "113.167, 9.99499, -118.918, 0.55", "113.9, 9.60854, -118.803, 0.28", "114.791, 9.1746, -118.609, 0.55", "116.138, 8.64254, -118.439, 0.28", "117.21, 8.19488, -118.348, 0.55", "118.413, 7.80853, -118.317, 0.28", "120.046, 7.33683, -118.416, 0.55", "121.884, 6.88549, -118.622, 0.55", "123.502, 6.54267, -118.903, 0.28", "125.742, 6.12888, -119.408, 0.55", "129.629, 5.65292, -120.652, 0.55", "131.361, 5.5965, -121.377, 0.55", "132.11, 5.62781, -121.757, 0.83", "133.537, 5.73966, -122.603, 0.55", "134.535, 5.87553, -123.238, 0.83", "137.234, 6.31749, -124.954, 0.55", "138.855, 6.49477, -126.078, 0.28", "139.53, 6.50396, -126.49, 0.55", "141.345, 6.29682, -127.47, 0.28", "141.968, 6.15289, -127.791, 0.55", "143.238, 5.70811, -128.275, 0.28", "144.506, 5.05139, -128.579, 0.55", "147.047, 3.42486, -128.767, 0.28", "148.209, 2.57702, -128.739, 0.55", "149.915, 1.1795, -128.633, 0.28", "152.074, -0.605318, -128.412, 0.55", "153.643, -1.88245, -128.218, 0.55", "156.382, -4.02126, -127.805, 0.28", "157.517, -4.81165, -127.716, 0.55", "159.495, -5.9828, -127.752, 0.28", "161.499, -6.94753, -127.882, 0.55", "162.624, -7.29888, -128.069, 0.28", "163.671, -7.45522, -128.274, 0.55", "166.66, -7.63741, -129.07, 0.28", "168.828, -7.61704, -129.627, 0.28", "170.743, -7.46295, -130.095, 0.55", "172.867, -7.20505, -130.695, 0.28", "173.41, -7.11515, -130.819, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "79.0325, 7.54498, -48.9616, 0.55", "79.1395, 6.43534, -50.3516, 0.55", "79.1234, 5.48305, -51.4386, 0.28", "79.1087, 4.57854, -52.3438, 0.55", "79.1979, 2.65097, -54.2928, 0.28", "79.1992, 2.53737, -54.4351, 0.55", "79.2265, 1.96087, -55.2432, 0.28", "79.1891, 1.52745, -56.0046, 0.55", "79.1109, 1.10681, -56.8697, 0.28", "78.9769, 0.551517, -58.0883, 0.55", "78.6396, -0.85747, -61.1066, 0.55", "78.3076, -2.12538, -63.8914, 0.55", "78.0257, -3.13553, -66.1181, 0.55", "77.7189, -4.13402, -68.2767, 0.55", "77.6385, -4.39799, -68.817, 0.28", "77.566, -4.69483, -69.3589, 0.55", "77.525, -5.1347, -70.0582, 0.28", "77.5668, -5.97568, -71.2217, 0.55", "77.8346, -7.73014, -73.1379, 0.55", "77.9901, -8.71049, -74.0701, 0.28", "78.0796, -9.67929, -75.0616, 0.55", "78.0844, -10.9968, -76.5002, 0.28", "78.0034, -12.0368, -77.6846, 0.55", "77.7981, -13.5776, -79.4527, 0.28", "77.6013, -15.1956, -81.2226, 0.55", "77.276, -17.5301, -83.8144, 0.28", "77.068, -18.7675, -85.1983, 0.55", "76.8286, -20.0162, -86.6485, 0.28", "76.6016, -21.0833, -88.0092, 0.28", "76.3766, -22.3755, -89.8633, 0.55", "76.2827, -23.6048, -91.5512, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "67.5847, 27.0059, -11.2209, 0.55", "70.3911, 26.8641, -10.6051, 0.55", "72.4408, 26.6747, -10.348, 0.55", "76.9303, 26.1995, -10.0174, 0.55", "78.9508, 25.9372, -10.0466, 0.55", "81.1525, 25.6934, -10.1919, 0.55", "84.1043, 25.4098, -10.5978, 0.55", "87.2212, 25.0166, -11.3184, 0.55", "88.8572, 24.7817, -11.8826, 0.55", "92.1785, 24.2856, -13.4828, 0.55", "93.707, 24.068, -14.2689, 0.55", "97.2918, 23.4855, -16.2017, 0.55", "99.7255, 22.9935, -17.4872, 0.55", "101.518, 22.6233, -18.3513, 0.83", "104.389, 21.9261, -19.6957, 0.55", "107.209, 21.11, -20.8985, 0.83", "109.608, 20.3107, -21.8302, 0.55", "111.743, 19.6347, -22.5491, 0.55", "112.955, 19.306, -22.893, 0.83", "115.785, 18.553, -23.5473, 0.28", "117.191, 18.2402, -23.7855, 0.28", "118.554, 17.8484, -24.0834, 0.28", "120.026, 17.464, -24.4132, 0.28", "122.378, 16.8913, -24.991, 0.28", "123.324, 16.6737, -25.1958, 0.55", "125.589, 16.1849, -25.465, 0.55", "129.668, 15.2735, -25.7435, 0.55", "130.8, 14.9934, -25.7702, 0.55", "131.812, 14.712, -25.7499, 0.83", "134.01, 14.175, -25.5315, 0.55", "135.921, 13.7132, -25.3115, 0.55", "137.726, 13.2847, -25.0954, 0.55", "139.125, 12.9271, -24.9667, 0.55", "141.35, 12.2016, -24.8657, 0.55", "143.981, 11.1113, -24.8839, 0.55", "148.09, 8.94917, -25.1827, 0.55", "150.359, 7.4282, -25.4788, 0.55", "152.341, 5.7749, -25.8235, 0.28", "152.938, 5.1534, -25.9564, 0.55", "154.273, 3.38956, -26.3062, 0.28", "155.441, 1.38953, -26.652, 0.55", "156.57, -1.12178, -26.8757, 0.55", "157.331, -2.76782, -26.9431, 0.28", "157.609, -3.34753, -26.9381, 0.55", "158.328, -4.78468, -26.9057, 0.28", "159.305, -6.64946, -26.8179, 0.55", "161.839, -11.1249, -26.4939, 0.55", "163.156, -13.3753, -26.2823, 0.55", "164.379, -15.4358, -26.0695, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "67.5847, 27.0059, -11.2209, 0.55", "69.443, 27.2667, -9.86596, 0.55", "70.0383, 27.3511, -9.4639, 0.55", "72.263, 27.5697, -8.07132, 0.55", "74.7435, 27.8583, -6.47537, 0.55", "77.9254, 28.2135, -4.34735, 0.55", "78.8041, 28.3131, -3.76525, 0.55", "80.3853, 28.4339, -2.74253, 0.55", "82.1136, 28.6114, -1.68154, 0.55", "84.116, 28.881, -0.53105, 0.55", "86.0009, 29.1607, 0.562616, 0.55", "87.0297, 29.3649, 1.12017, 0.55", "88.2344, 29.6392, 1.77646, 0.55", "89.7203, 30.0238, 2.56625, 0.83", "92.1478, 30.6723, 3.6049, 0.55", "93.7587, 31.0457, 4.20844, 0.83", "96.002, 31.4693, 4.95844, 0.55", "96.6939, 31.5632, 5.17481, 0.55", "98.8485, 31.7534, 5.79021, 0.55", "102.72, 31.8794, 6.71396, 0.55", "105.566, 31.8235, 7.30957, 0.55", "107.83, 31.6724, 7.8217, 0.55", "110.15, 31.3932, 8.40797, 0.55", "110.639, 31.3216, 8.53228, 0.28", "111.634, 31.1383, 8.77787, 0.83", "115.726, 30.3263, 9.80297, 0.55", "118.587, 29.7665, 10.4668, 0.55", "120.932, 29.3588, 11.0751, 0.55", "122.333, 29.1098, 11.4511, 0.83", "123.435, 28.9291, 11.7508, 0.28", "124.435, 28.7676, 12.0136, 0.55", "132.096, 29.2329, 15.3549, 0.55", "140.263, 28.6179, 17.0903, 0.55", "148.322, 28.9644, 19.3276, 0.55", "155.685, 27.9129, 23.1709, 0.55", "162.65, 25.6823, 27.2442, 0.55", "170.245, 22.5536, 28.8587, 0.55", "177.725, 18.7976, 28.9911, 0.55", "185.799, 16.5949, 28.7823, 0.55", "193.815, 14.2047, 29.1142, 0.55", "202.064, 12.7826, 29.0173, 0.55", "210.291, 11.6107, 30.0317, 0.55", "218.128, 8.96466, 31.3211, 0.55", "226.084, 7.69454, 33.5937, 0.55", "233.651, 7.49258, 37.1685, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-2.86472, -28.6741, 6.05159, 1.38", "-0.948881, -32.1115, 4.11176, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-2.86472, -28.6741, 6.05159, 0.55", "-4.41236, -30.2459, 6.84051, 0.55", "-6.17349, -32.2999, 7.71735, 0.55", "-7.49476, -33.6324, 8.40963, 0.55", "-8.69126, -34.7334, 8.84194, 0.55", "-11.3912, -36.9797, 9.58434, 0.55", "-13.2937, -38.4638, 10.063, 0.55", "-15.0152, -39.7925, 10.439, 0.55", "-19.4024, -42.9935, 11.4058, 0.55", "-24.6291, -46.6743, 12.5979, 0.55", "-28.6953, -49.4449, 13.4658, 0.55", "-31.3166, -51.2729, 13.9914, 0.55", "-34.3388, -53.4869, 14.6026, 0.55", "-38.2213, -56.7378, 15.4212, 0.55", "-40.5482, -59.1158, 15.9413, 0.55", "-43.4034, -62.6165, 16.7736, 0.55", "-45.7298, -65.9555, 17.5098, 0.55", "-48.2033, -70.1958, 18.2926, 0.55", "-50.6658, -75.249, 19.1114, 0.55", "-52.1526, -79.1789, 19.6255, 0.55", "-52.7073, -81.1643, 19.9299, 0.55", "-53.6344, -85.8902, 20.7324, 0.55", "-54.3753, -90.3319, 21.5468, 0.55", "-54.7573, -94.8634, 22.5457, 0.55", "-54.9305, -97.4684, 23.256, 0.55", "-55.2798, -105.549, 25.686, 0.55", "-55.3039, -106.144, 25.8759, 0.55", "-55.3489, -109.805, 27.0832, 0.55", "-55.6155, -116.315, 29.5235, 0.55", "-55.7784, -118.482, 30.2333, 0.55", "-56.3888, -121.819, 30.8767, 0.55", "-56.7282, -123.045, 30.8482, 0.55", "-58.1051, -127.169, 29.9606, 0.55", "-59.1485, -129.825, 28.802, 0.55", "-61.1431, -134.016, 26.1173, 0.55", "-63.5988, -139.15, 22.3626, 0.28", "-64.2756, -140.41, 21.2672, 0.55", "-65.3829, -142.31, 19.448, 0.28", "-65.56, -142.595, 19.1611, 0.55", "-66.4695, -144.162, 17.7199, 0.28", "-66.7481, -144.697, 17.3632, 0.55", "-67.9764, -147.506, 16.037, 0.28", "-68.4215, -148.456, 15.6158, 0.55", "-69.6596, -151.211, 14.5591, 0.28", "-70.0442, -152.079, 14.2274, 0.55", "-71.3686, -155.073, 13.1401, 0.28", "-71.975, -156.452, 12.6297, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-10.6528, -63.6487, 48.2595, 0.55", "-14.9456, -71.4576, 56.2278, 0.55", "-20.2589, -78.1229, 64.6091, 0.55", "-25.3792, -85.5831, 72.4212, 0.55", "-30.7217, -93.0597, 80.0671, 0.55", "-35.0394, -101.97, 86.7648, 0.55", "-39.1551, -110.525, 94.029, 0.55", "-42.329, -121.002, 98.8314, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-10.6528, -63.6487, 48.2595, 0.55", "-9.9283, -73.5117, 57.3421, 0.55", "-8.8868, -84.8501, 64.4593, 0.55", "-10.0039, -96.127, 71.6623, 0.55", "-12.0092, -107.965, 77.6727, 0.55", "-13.4603, -119.796, 83.8549, 0.55", "-14.7249, -131.173, 90.8735, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-46.7139, 33.271, -22.4747, 0.83", "-46.5871, 34.2889, -23.7837, 0.83", "-46.3422, 36.7631, -26.7255, 0.55", "-46.2307, 37.8401, -27.8962, 0.83", "-46.103, 39.0013, -29.0625, 0.55", "-45.9638, 40.2143, -30.0783, 0.55", "-45.885, 40.8324, -30.5049, 0.28", "-45.8549, 41.251, -30.6775, 0.55", "-45.6966, 42.682, -30.9494, 0.28", "-45.6122, 43.2982, -31.0359, 0.55", "-45.3405, 45.4472, -31.248, 0.28", "-45.1659, 47.1529, -31.356, 0.55", "-45.0145, 49.8163, -31.4347, 0.28", "-44.96, 52.1565, -31.4539, 0.28", "-45.0028, 53.4636, -31.4344, 0.55", "-45.1473, 55.0069, -31.4042, 0.28", "-45.2637, 55.7409, -31.3762, 0.55", "-45.6351, 57.453, -31.3819, 0.28", "-45.9617, 58.5826, -31.4406, 0.28", "-46.3081, 59.6869, -31.5309, 0.28", "-46.4687, 60.2719, -31.5825, 0.55", "-46.9934, 62.6434, -31.8565, 0.28", "-47.5236, 65.4549, -32.2398, 0.55", "-47.6927, 66.4268, -32.377, 0.55", "-47.8767, 67.4018, -32.4922, 0.55", "-48.3794, 69.461, -32.7638, 0.55", "-48.7989, 70.8025, -32.9658, 0.28", "-49.0178, 71.3045, -33.0453, 0.55", "-49.7074, 72.6579, -33.2239, 0.28", "-50.5056, 74.0876, -33.4695, 0.55", "-51.8568, 76.1172, -33.8934, 0.28", "-52.5191, 76.9528, -34.093, 0.28", "-53.6063, 78.0881, -34.4854, 0.55", "-54.8289, 79.2562, -34.9574, 0.28", "-55.0519, 79.4358, -35.0397, 0.55", "-55.8557, 79.9972, -35.323, 0.28", "-58.6251, 81.7764, -36.2336, 0.55", "-62.4855, 83.9072, -37.6063, 0.28", "-63.2014, 84.253, -37.8966, 0.55", "-65.1687, 85.1263, -38.7179, 0.28", "-65.9961, 85.4799, -39.083, 0.28", "-66.7176, 85.7662, -39.4315, 0.55", "-68.839, 86.3473, -40.5823, 0.28", "-70.3329, 86.6173, -41.3238, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-46.7139, 33.271, -22.4747, 0.55", "-46.9419, 34.4268, -22.7134, 0.55", "-47.0898, 35.114, -22.7883, 0.28", "-47.2866, 35.611, -22.7134, 0.55", "-47.7384, 36.7523, -22.5415, 0.28", "-48.0557, 37.5539, -22.4207, 0.55", "-48.6407, 39.0317, -22.1981, 0.28", "-49.0251, 39.8318, -21.9353, 0.55", "-50.458, 41.765, -20.6004, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-134.809, -81.8326, 4.62784, 0.55", "-141.666, -92.2105, 3.87225, 0.55", "-146.564, -103.577, 2.42111, 0.55", "-150.653, -114.608, -1.69046, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-134.809, -81.8326, 4.62784, 0.55", "-140.548, -89.264, 2.41007, 0.55", "-145.406, -96.9138, -0.900663, 0.55", "-149.884, -104.709, -4.4007, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-132.318, 15.4061, 63.1633, 0.55", "-137.773, 16.275, 67.7403, 0.55", "-143.739, 17.7463, 71.4422, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-132.318, 15.4061, 63.1633, 0.55", "-141.786, 14.6419, 68.5443, 0.55", "-151.563, 15.5496, 73.3152, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "76.2827, -23.6048, -91.5512, 0.28", "85.0446, -25.7946, -109.014, 0.28", "85.87, -26.1408, -110.619, 0.55", "87.2634, -26.7254, -113.328, 0.28", "88.4367, -27.2177, -115.61, 0.28", "89.9899, -27.8693, -118.63, 0.55", "92.0376, -28.7283, -122.611, 0.55", "94.2803, -31.4456, -125.39, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "76.2827, -23.6048, -91.5512, 0.55", "76.5437, -24.1297, -92.558, 0.55", "76.598, -24.3524, -93.0035, 0.28", "76.6603, -24.7229, -93.7777, 0.55", "76.7973, -25.5392, -95.483, 0.28", "76.8923, -26.1049, -96.6648, 0.55", "77.0533, -27.0633, -98.6671, 0.28", "77.2004, -28.1711, -101.253, 0.28", "77.2317, -28.6663, -102.457, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "164.379, -15.4358, -26.0695, 0.28", "167.02, -17.8442, -24.2119, 0.28", "170.365, -20.9122, -21.4148, 0.28", "172.483, -22.8677, -19.4906, 0.55", "173.749, -23.9047, -18.3558, 0.28", "174.423, -24.4611, -17.7369, 0.28", "177.762, -27.2305, -14.7433, 0.55", "178.526, -27.7972, -13.9627, 0.28", "180.346, -29.2557, -11.7473, 0.55", "181.903, -30.5611, -9.9052, 0.28", "183.255, -31.6231, -8.43974, 0.55", "184.846, -32.9468, -6.80945, 0.55", "187.389, -35.206, -4.61228, 0.55", "188.003, -35.7729, -4.1007, 0.55", "190.212, -37.9146, -2.22202, 0.28", "191.073, -38.8083, -1.48498, 0.55", "192.265, -39.9386, -0.549308, 0.28", "193.95, -41.5835, 0.682765, 0.55", "196.745, -44.3525, 2.14201, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "164.379, -15.4358, -26.0695, 0.55", "161.081, -15.5413, -26.2508, 0.55", "158.402, -15.627, -26.398, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-0.948881, -32.1115, 4.11176, 0.83", "-0.853851, -32.4478, 4.02936, 0.83", "0.447178, -35.4773, 3.30878, 0.83", "1.52594, -38.1231, 2.52083, 0.55", "2.38656, -40.2339, 1.8922, 0.55", "4.21584, -44.7205, 0.556047, 0.83", "6.43464, -50.1624, -1.06462, 0.55", "7.68215, -53.0207, -1.88915, 0.83", "10.0331, -57.6103, -3.13866, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-0.948881, -32.1115, 4.11176, 0.55", "-3.38639, -32.6983, 2.63212, 0.55", "-6.00275, -33.3282, 1.0439, 0.55", "-9.09138, -34.0718, -0.830997, 0.55", "-12.842, -34.9747, -3.10774, 0.55", "-14.9704, -35.4871, -4.39971, 0.55", "-15.3979, -35.5901, -4.65925, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-14.7249, -131.173, 90.8735, 0.55", "-14.7597, -134.44, 93.2361, 0.55", "-14.1862, -137.875, 95.2666, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-14.7249, -131.173, 90.8735, 0.55", "-15.3654, -137.976, 94.7037, 0.55", "-16.3575, -144.608, 98.7527, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-50.458, 41.765, -20.6004, 0.28", "-51.9004, 43.7595, -18.809, 0.28", "-52.4338, 44.5249, -18.0424, 0.55", "-53.9502, 46.7486, -15.7781, 0.28", "-54.7177, 47.8383, -14.7677, 0.55", "-56.8304, 50.7756, -12.1351, 0.28", "-58.9776, 53.7608, -9.45952, 0.55", "-62.5188, 58.455, -4.95925, 0.28", "-63.2727, 59.4629, -4.00091, 0.55", "-64.9442, 61.809, -1.98876, 0.28", "-65.5961, 62.7798, -1.20464, 0.55", "-73.1262, 69.2302, 5.93182, 0.55", "-81.8166, 76.632, 10.2826, 0.55", "-89.108, 84.5846, 16.0124, 0.55", "-94.9002, 94.0338, 21.1509, 0.55", "-102.01, 102.875, 25.6794, 0.55", "-109.93, 109.974, 31.6896, 0.55", "-116.853, 116.386, 39.4489, 0.55", "-122.447, 121.827, 48.8473, 0.55", "-128.13, 127.911, 57.7879, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-50.458, 41.765, -20.6004, 0.55", "-53.19, 41.3192, -18.0847, 0.55", "-54.6087, 41.0314, -16.7622, 0.28", "-55.6645, 40.8172, -15.778, 0.55", "-56.5445, 40.6387, -14.9577, 0.28", "-57.1608, 40.5137, -14.3832, 0.55", "-58.8603, 40.169, -12.7989, 0.28", "-60.0372, 39.7736, -11.8676, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-150.653, -114.608, -1.69046, 0.55", "-154.506, -124.422, 0.223031, 0.55", "-158.094, -134.036, 3.3061, 0.55", "-160.951, -144.285, 4.57849, 0.55", "-164.837, -153.929, 7.16887, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-150.653, -114.608, -1.69046, 0.55", "-154.358, -118.634, -5.85844, 0.55", "-157.924, -121.816, -10.804, 0.55", "-161.863, -125.724, -14.8683, 0.55", "-167.106, -128.592, -18.2729, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-149.884, -104.709, -4.4007, 0.55", "-154.529, -108.979, -9.66983, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-149.884, -104.709, -4.4007, 0.55", "-152.683, -112.112, -2.44981, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "94.2803, -31.4456, -125.39, 0.28", "96.5843, -33.1658, -127.544, 0.28", "97.6546, -33.9648, -128.545, 0.55", "99.6955, -35.4886, -130.453, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "94.2803, -31.4456, -125.39, 0.55", "93.7227, -31.5172, -127.024, 0.55", "92.6073, -31.6604, -130.291, 0.28", "92.244, -31.707, -131.355, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "77.2317, -28.6663, -102.457, 0.28", "77.5427, -30.4081, -106.995, 0.28", "77.6966, -31.2706, -109.243, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "77.2317, -28.6663, -102.457, 0.55", "74.988, -28.1357, -102.218, 0.55", "68.7312, -26.6561, -101.551, 0.28", "67.2448, -26.3046, -101.393, 0.55", "63.1788, -25.3431, -100.959, 0.28", "60.558, -24.7234, -100.68, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "10.0331, -57.6103, -3.13866, 0.83", "10.0203, -57.886, -3.18281, 0.83", "9.93899, -61.5017, -3.68632, 0.83", "9.72186, -64.1946, -3.81833, 0.83", "9.43847, -66.7861, -3.62813, 0.83", "9.04086, -70.2321, -3.08587, 0.83", "8.53284, -74.1964, -2.28329, 0.83", "8.06717, -78.6325, -1.17487, 0.83", "7.68767, -82.9483, 0.0888137, 0.83", "6.85435, -88.2088, 1.64946, 0.83", "6.29635, -90.6078, 2.28459, 0.83", "5.82839, -92.4075, 2.65599, 0.83", "4.83375, -95.8506, 3.3254, 0.83", "3.94943, -98.936, 3.73433, 0.83", "2.13484, -105.527, 3.76813, 0.83", "1.00956, -109.121, 3.31973, 0.83", "-0.118578, -112.424, 2.67441, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "10.0331, -57.6103, -3.13866, 0.55", "9.15209, -59.1929, -2.8991, 0.55", "8.51774, -60.3429, -2.63247, 0.55", "8.15093, -61.0829, -2.39123, 0.55", "7.66123, -62.2506, -1.91296, 0.55", "6.78943, -64.574, -0.830758, 0.55", "6.16355, -66.3375, 0.186722, 0.55", "5.701, -67.7563, 1.15332, 0.55", "5.22451, -69.189, 2.23991, 0.55", "4.835, -70.3782, 3.20567, 0.28", "4.53837, -71.3532, 4.14043, 0.55", "4.02017, -73.1311, 6.10012, 0.55", "3.67287, -74.2186, 7.43351, 0.55", "3.4701, -74.8268, 8.1761, 0.55", "3.18541, -75.5393, 9.0235, 0.83", "2.28651, -77.6455, 11.3985, 0.28", "1.98489, -78.342, 12.165, 0.55", "1.46944, -79.6022, 13.4973, 0.28", "1.31809, -79.9916, 13.9366, 0.55", "1.00935, -80.9108, 14.9368, 0.28", "0.827579, -81.4327, 15.4661, 0.55", "0.015183, -83.1052, 16.7551, 0.55", "-0.573509, -87.7921, 21.7391, 0.55", "-0.756428, -92.3009, 26.915, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-15.3979, -35.5901, -4.65925, 0.55", "-18.5468, -36.4933, -7.6574, 0.55", "-19.462, -36.6838, -8.50876, 0.55", "-21.7636, -37.1526, -10.5621, 0.55", "-26.7775, -38.0111, -14.8692, 0.28", "-27.5218, -38.1172, -15.4671, 0.55", "-30.6482, -38.6274, -17.8352, 0.55", "-34.9414, -39.2828, -20.6865, 0.55", "-36.5748, -39.4818, -21.7458, 0.28", "-37.9885, -39.5577, -22.6075, 0.28", "-40.3986, -39.6078, -23.7766, 0.55", "-43.3112, -39.5533, -25.3218, 0.28", "-45.9564, -39.2956, -26.8322, 0.55", "-47.9681, -38.9325, -27.981, 0.55", "-49.33, -38.576, -28.8285, 0.55", "-53.2938, -37.366, -31.4596, 0.55", "-57.4081, -35.8042, -34.1826, 0.55", "-59.0885, -35.0605, -35.2754, 0.28", "-60.6905, -34.3829, -36.3412, 0.55", "-63.9865, -33.2156, -38.4439, 0.28", "-65.1026, -32.8531, -39.1363, 0.83", "-67.1833, -32.136, -40.2887, 0.28", "-68.7074, -31.709, -40.9076, 0.55", "-70.9368, -31.1591, -41.7529, 0.28", "-71.8223, -30.926, -42.0619, 0.55", "-73.4697, -30.5144, -42.5433, 0.55", "-75.9062, -29.6429, -43.2051, 0.55", "-77.4758, -28.9676, -43.5585, 0.28", "-78.7053, -28.2568, -43.7589, 0.55", "-80.1148, -27.2383, -44.0236, 0.28", "-80.3428, -27.0523, -44.078, 0.55", "-82.449, -25.3251, -44.9879, 0.28", "-83.9761, -24.0572, -45.8314, 0.55", "-85.9688, -22.2738, -47.2677, 0.83", "-87.607, -20.7853, -48.6614, 0.28", "-88.0321, -20.4089, -49.0679, 0.55", "-91.3085, -17.5949, -52.3826, 0.28", "-91.8855, -17.1193, -53.0244, 0.55", "-93.5626, -15.6046, -55.0522, 0.28", "-93.9959, -15.2152, -55.5792, 0.55", "-95.104, -14.1945, -56.8465, 0.28", "-95.8861, -13.4555, -57.689, 0.55", "-97.6295, -11.7738, -59.2695, 0.28", "-98.6834, -10.8514, -60.1523, 0.55", "-100.967, -9.02258, -61.8819, 0.28", "-101.657, -8.51668, -62.3803, 0.55", "-102.76, -7.80753, -63.1075, 0.28", "-103.693, -7.20436, -63.674, 0.55", "-105.637, -5.96592, -64.7213, 0.28", "-106.225, -5.60452, -65.0143, 0.55", "-110.57, -2.80845, -66.9837, 0.28", "-112.062, -1.70108, -67.544, 0.55", "-114.685, 0.429061, -68.3714, 0.28", "-115.854, 1.44369, -68.7096, 0.55", "-118.529, 3.76586, -69.3079, 0.28", "-119.52, 4.57507, -69.4731, 0.55", "-123.177, 7.17341, -69.8103, 0.28", "-124.749, 8.05442, -69.9103, 0.55", "-127.083, 8.93292, -69.9784, 0.55", "-128.538, 9.38575, -69.9735, 0.55", "-131.503, 10.2542, -69.7209, 0.28", "-134.41, 11.096, -69.2806, 0.28", "-136.821, 11.8123, -68.8424, 0.55", "-139.668, 12.9694, -68.0043, 0.28", "-141.003, 13.7394, -67.4095, 0.55", "-143.986, 16.1572, -65.7042, 0.28", "-145.346, 17.7847, -64.4301, 0.55", "-146.12, 19.0345, -63.3681, 0.28", "-146.9, 20.4593, -61.8502, 0.55", "-147.801, 22.3126, -59.753, 0.28", "-148.157, 22.979, -58.9608, 0.55", "-150.224, 26.085, -55.2188, 0.28", "-150.939, 27.0854, -53.9629, 0.55", "-152.647, 29.3575, -50.8933, 0.28", "-153.58, 30.5733, -49.224, 0.55", "-154.35, 31.5707, -47.8539, 0.55", "-155.288, 32.7496, -46.2541, 0.28", "-155.826, 33.3504, -45.5478, 0.55", "-157.669, 35.4469, -43.3503, 0.28", "-158.579, 36.706, -42.1915, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-15.3979, -35.5901, -4.65925, 0.55", "-15.517, -35.7372, -5.94215, 0.55", "-15.5768, -35.7523, -7.23747, 0.55", "-15.5526, -35.6753, -8.85462, 0.55", "-15.4606, -35.5204, -10.1708, 0.55", "-14.1004, -33.7559, -18.7342, 0.55", "-13.778, -33.1547, -20.6755, 0.55", "-13.3181, -32.0706, -23.5622, 0.55", "-12.9925, -31.2398, -25.6096, 0.55", "-12.6204, -30.3305, -27.5895, 0.28", "-11.8962, -28.7933, -30.5854, 0.55", "-10.5875, -26.4091, -34.9574, 0.28", "-10.5648, -26.2611, -35.378, 0.55", "-11.1725, -25.7044, -38.1605, 0.28", "-11.9112, -25.4055, -39.9593, 0.55", "-12.9138, -25.2048, -41.832, 0.55", "-14.7906, -25.0288, -45.1739, 0.55", "-18.4631, -24.7379, -51.7424, 0.55", "-20.8587, -24.6042, -56.1965, 0.55", "-21.6468, -24.5786, -57.7553, 0.55", "-26.5706, -24.3518, -68.1166, 0.55", "-27.7791, -24.2609, -70.976, 0.55", "-28.3371, -24.2251, -72.6307, 0.55", "-29.317, -24.2812, -76.6013, 0.55", "-31.1794, -24.9656, -86.2675, 0.55", "-31.584, -25.2674, -88.8922, 0.28", "-31.71, -25.5172, -90.4025, 0.55", "-31.8662, -25.98, -92.6444, 0.28", "-31.873, -26.2664, -93.5687, 0.55", "-31.2637, -27.5899, -96.2203, 0.28", "-30.0405, -29.3833, -97.4747, 0.55", "-29.2843, -30.6397, -98.1597, 0.28", "-28.5403, -32.008, -98.6715, 0.55", "-27.8748, -33.4739, -99.0416, 0.28", "-27.6119, -34.2173, -99.2114, 0.55", "-26.9846, -36.1537, -99.5302, 0.28", "-26.8797, -36.7205, -99.6762, 0.55", "-26.3885, -39.955, -100.655, 0.28", "-26.2322, -41.442, -101.29, 0.55", "-26.0009, -44.6045, -103.004, 0.28", "-25.9476, -45.7649, -103.77, 0.55", "-25.778, -49.5736, -106.567, 0.28", "-25.754, -50.4972, -107.284, 0.55", "-25.8049, -53.405, -109.595, 0.28", "-25.8204, -54.0861, -110.07, 0.55", "-25.9024, -55.8805, -111.276, 0.28", "-25.9992, -56.9149, -112.067, 0.55", "-26.1107, -57.9282, -112.933, 0.55", "-26.3236, -59.9512, -114.649, 0.28", "-26.44, -61.2042, -115.903, 0.55", "-26.6219, -64.344, -120.006, 0.28", "-26.6774, -65.3618, -121.662, 0.55", "-26.6841, -66.0112, -122.801, 0.28", "-26.6586, -66.6074, -123.955, 0.55", "-26.4802, -68.2893, -127.503, 0.28", "-26.3024, -69.5999, -130.153, 0.55", "-25.8264, -72.1142, -134.484, 0.28", "-25.6695, -72.8977, -135.845, 0.55", "-25.207, -74.3614, -138.335, 0.28", "-25.0064, -74.8484, -139.125, 0.55", "-24.5212, -75.6502, -140.262, 0.28", "-24.0235, -76.3387, -141.202, 0.55", "-22.4427, -78.0931, -143.543, 0.28", "-20.5661, -79.9819, -146.195, 0.28", "-19.523, -80.8769, -147.453, 0.28", "-18.528, -81.7188, -148.8, 0.55", "-17.0585, -82.8386, -150.78, 0.28", "-16.3862, -83.323, -151.645, 0.83", "-14.6081, -84.6042, -153.768, 0.28", "-13.8865, -85.1801, -154.738, 0.55", "-10.9176, -87.8826, -159.178, 0.28", "-9.58241, -89.2436, -161.555, 0.28", "-8.69767, -90.2205, -163.375, 0.55", "-8.27465, -90.7999, -164.526, 0.55", "-7.32645, -92.3531, -167.743, 0.28", "-6.54664, -93.9163, -170.824, 0.55", "-5.85299, -95.4168, -173.626, 0.28", "-5.31995, -96.7937, -176.243, 0.55", "-4.86627, -97.9108, -178.399, 0.28", "-4.41071, -98.7248, -180.113, 0.55", "-3.14162, -100.499, -184.139, 0.28", "-2.44039, -101.404, -186.126, 0.55", "-1.31228, -102.782, -189.037, 0.28", "-0.335862, -103.849, -191.385, 0.55", "1.99267, -106.109, -196.9, 0.28", "2.85816, -106.89, -199.256, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-14.1862, -137.875, 95.2666, 0.55", "-14.0506, -148.042, 100.045, 0.55", "-12.7398, -158.963, 102.337, 0.55", "-12.1419, -169.523, 106.125, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-14.1862, -137.875, 95.2666, 0.55", "-13.1728, -147.956, 103.285, 0.55", "-14.4641, -156.836, 112.582, 0.55", "-16.4172, -163.624, 123.402, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-16.3575, -144.608, 98.7527, 0.55", "-16.1708, -149.546, 101.821, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-16.3575, -144.608, 98.7527, 0.55", "-17.2419, -150.866, 102.227, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-0.118578, -112.424, 2.67441, 0.83", "0.469143, -116.048, 2.78721, 0.83", "1.18742, -119.121, 3.01175, 0.83", "1.9014, -122.175, 3.23494, 0.83", "2.57946, -125.076, 3.44691, 0.83", "3.62438, -129.547, 3.77356, 0.83", "4.66176, -133.985, 4.09785, 0.83", "5.72088, -136.956, 4.52857, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-0.118578, -112.424, 2.67441, 0.55", "0.739671, -114.19, 2.12158, 0.55", "1.28651, -115.559, 1.50274, 0.55", "1.60643, -116.563, 0.98451, 0.55", "1.76449, -117.719, 0.338004, 0.83", "1.79466, -119.019, -0.48954, 0.55", "1.82417, -120.29, -1.29898, 0.83", "1.72798, -121.657, -2.24821, 0.55", "1.6346, -122.447, -2.86182, 0.83", "1.14184, -124.985, -4.96729, 0.55", "0.550235, -126.958, -6.64755, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-0.756428, -92.3009, 26.915, 0.55", "-3.44118, -99.2569, 32.5215, 0.55", "-7.1495, -105.193, 38.6891, 0.55", "-11.2414, -110.211, 45.405, 0.55", "-15.8952, -114.075, 52.5066, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-0.756428, -92.3009, 26.915, 0.55", "-1.41681, -98.3444, 32.6711, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "5.72088, -136.956, 4.52857, 0.55", "5.77725, -139.575, 5.12278, 0.55", "5.95182, -142.929, 5.94906, 0.55", "6.11492, -146.094, 6.71191, 0.55", "6.20008, -148.342, 7.22484, 0.55", "6.2984, -152.347, 8.08665, 0.55", "6.69615, -163.612, 10.1998, 0.55", "6.89502, -167.439, 10.7407, 0.55", "7.02356, -170.135, 10.9876, 0.55", "7.1553, -173.208, 11.0234, 0.55", "7.18373, -175.576, 10.8506, 0.55", "7.37438, -181.114, 10.1941, 0.55", "7.37402, -185.308, 9.71483, 0.55", "7.46019, -188.069, 9.46779, 0.55", "7.71936, -195.239, 9.19263, 0.55", "7.8989, -200.064, 9.22291, 0.55", "8.2177, -206.296, 9.60067, 0.55", "8.75992, -213.39, 10.5474, 0.55", "9.37867, -218.15, 11.4295, 0.55", "9.82282, -220.97, 12.0124, 0.55", "10.1843, -223.566, 12.5507, 0.55", "10.6703, -226.853, 13.0723, 0.55", "11.661, -234.754, 13.8244, 0.55", "12.1259, -237.815, 13.9871, 0.55", "12.5607, -241.218, 14.1597, 0.55", "13.1683, -246.324, 14.4002, 0.55", "13.4638, -250.238, 14.6533, 0.55", "13.5262, -253.941, 14.8838, 0.55", "13.4318, -257.46, 15.1317, 0.55", "13.2904, -260.892, 15.433, 0.55", "13.2002, -263.335, 15.6208, 0.55", "13.0539, -267.329, 15.7873, 0.55", "12.7509, -272.109, 15.6371, 0.55", "12.6341, -274.43, 15.38, 0.55", "12.5277, -276.464, 14.9965, 0.55", "12.464, -280.307, 14.0144, 0.55", "12.3877, -282.74, 13.3284, 0.55", "12.3462, -285.744, 12.5903, 0.55", "12.2592, -287.854, 12.2133, 0.55", "11.9705, -293.34, 11.465, 0.55", "11.703, -297.45, 11.2162, 0.55", "11.2699, -303.821, 11.3695, 0.55", "11.1426, -307.95, 11.8394, 0.55", "10.9991, -312.288, 12.4782, 0.28", "10.9106, -314.03, 12.8134, 0.28", "10.7388, -318.27, 14.0113, 0.28", "10.595, -322.194, 15.4318, 0.28", "10.9617, -327.429, 17.7569, 0.28", "12.801, -339.219, 19.7856, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "5.72088, -136.956, 4.52857, 0.55", "7.1493, -137.672, 5.38552, 0.55", "9.97788, -139.429, 7.36502, 0.55", "12.3627, -141.121, 9.18172, 0.28", "14.8807, -143.027, 11.2144, 0.55", "16.3036, -144.232, 12.6751, 0.28", "18.6528, -146.387, 15.4859, 0.55", "19.466, -147.492, 17.0144, 0.28", "19.7229, -147.891, 17.6517, 0.28", "20.1719, -148.472, 18.7671, 0.55", "22.0833, -150.424, 22.874, 0.28", "22.9327, -151.196, 24.5688, 0.55", "25.7699, -153.46, 29.2172, 0.28", "27.4085, -154.597, 31.5812, 0.28", "29.5372, -156.053, 34.3592, 0.55", "32.89, -158.306, 38.1223, 0.28", "33.375, -158.607, 38.5703, 0.55", "35.8561, -160.079, 40.5846, 0.28", "36.094, -160.216, 40.7391, 0.55", "38.1336, -161.757, 42.1622, 0.28", "39.0669, -162.583, 42.903, 0.55", "46.7591, -168.771, 49.0937, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-15.8952, -114.075, 52.5066, 0.55", "-17.5173, -116.65, 58.1203, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-15.8952, -114.075, 52.5066, 0.55", "-19.7841, -119.685, 58.1138, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.936579E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dSTUT214_L6_BP_871d8b9502_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 6.22701, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -2.54439, 7.73457, 2.72585, 0.83 ) }
    dend_43 { pt3dadd( -4.62818, 9.34968, 3.04012, 1.11 ) }
    dend_43 { pt3dadd( -5.8568, 10.3013, 3.20359, 0.83 ) }
    dend_43 { pt3dadd( -7.05045, 11.2179, 3.35006, 0.83 ) }
    dend_43 { pt3dadd( -7.75718, 11.7405, 3.43033, 1.11 ) }
    dend_43 { pt3dadd( -9.97033, 13.3737, 3.68757, 1.11 ) }
    dend_43 { pt3dadd( -13.9288, 16.1697, 4.1423, 0.83 ) }
    dend_43 { pt3dadd( -15.3549, 17.1386, 4.29246, 0.83 ) }
    dend_43 { pt3dadd( -16.4842, 17.883, 4.38573, 0.83 ) }
    dend_43 { pt3dadd( -17.5855, 18.6208, 4.46646, 0.83 ) }
    dend_43 { pt3dadd( -18.4819, 19.2289, 4.51003, 0.55 ) }
    dend_43 { pt3dadd( -19.1557, 19.6407, 4.55424, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.44701, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 5.38265, 6.57599, -6.45346, 0.55 ) }
    dend_28 { pt3dadd( 9.18369, 7.39823, -7.3023, 0.55 ) }
    dend_28 { pt3dadd( 11.3892, 7.6058, -8.42549, 0.83 ) }
    dend_28 { pt3dadd( 14.88, 7.82669, -10.5119, 0.55 ) }
    dend_28 { pt3dadd( 16.5651, 7.93331, -11.519, 1.38 ) }
    dend_28 { pt3dadd( 20.7083, 8.19549, -13.9954, 0.55 ) }
    dend_28 { pt3dadd( 22.4729, 8.10671, -15.177, 0.83 ) }
    dend_28 { pt3dadd( 31.6011, 6.47854, -21.8158, 0.55 ) }
    dend_28 { pt3dadd( 32.4842, 6.25959, -22.5462, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -8.24299, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.683563, -10.4377, 3.21485, 1.11 ) }
    dend_1 { pt3dadd( -0.730833, -14.6084, 4.71001, 1.11 ) }
    dend_1 { pt3dadd( -0.750084, -16.3069, 5.31893, 0.83 ) }
    dend_1 { pt3dadd( -0.775661, -18.5635, 6.12792, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.59701, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 0.859452, 9.54991, -1.35782, 1.11 ) }
    dend_0 { pt3dadd( 0.932507, 11.2698, -1.34355, 1.11 ) }
    dend_0 { pt3dadd( 1.04218, 14.0758, -1.21796, 1.38 ) }
    dend_0 { pt3dadd( 1.05093, 14.2321, -1.20811, 1.38 ) }
    dend_0 { pt3dadd( 1.27537, 16.1656, -1.06428, 0.83 ) }
    dend_0 { pt3dadd( 1.59341, 18.21, -0.801236, 0.83 ) }
    dend_0 { pt3dadd( 2.14401, 20.518, -0.220943, 0.83 ) }
    dend_0 { pt3dadd( 2.45904, 21.3932, 0.109116, 0.83 ) }
    dend_0 { pt3dadd( 2.77098, 22.0269, 0.413786, 1.11 ) }
    dend_0 { pt3dadd( 3.68584, 23.5701, 1.20197, 0.55 ) }
    dend_0 { pt3dadd( 4.75004, 25.1808, 2.14334, 0.83 ) }
    dend_0 { pt3dadd( 6.14786, 26.8369, 3.21461, 0.55 ) }
    dend_0 { pt3dadd( 6.86213, 27.5246, 3.70121, 0.83 ) }
    dend_0 { pt3dadd( 7.85954, 28.4559, 4.45924, 0.55 ) }
    dend_0 { pt3dadd( 9.09383, 29.6405, 5.48456, 0.55 ) }
    dend_0 { pt3dadd( 10.8156, 31.4235, 7.04957, 0.55 ) }
    dend_0 { pt3dadd( 12.7129, 33.4616, 8.77753, 0.55 ) }
    dend_0 { pt3dadd( 13.9066, 34.7843, 10.0667, 0.55 ) }
    dend_0 { pt3dadd( 15.3658, 36.4568, 11.8848, 0.55 ) }
    dend_0 { pt3dadd( 15.6685, 36.7922, 12.297, 0.83 ) }
    dend_0 { pt3dadd( 16.4669, 37.6785, 13.4596, 0.55 ) }
    dend_0 { pt3dadd( 17.1398, 38.3693, 14.3726, 0.83 ) }
    dend_0 { pt3dadd( 18.688, 40.2573, 16.5373, 0.55 ) }
    dend_0 { pt3dadd( 19.2738, 40.9468, 17.1708, 0.83 ) }
    dend_0 { pt3dadd( 19.8249, 41.4548, 17.6018, 0.55 ) }
    dend_0 { pt3dadd( 20.3732, 41.892, 17.9336, 0.83 ) }
    dend_0 { pt3dadd( 21.5913, 42.7047, 18.5368, 0.83 ) }
    dend_0 { pt3dadd( 23.2042, 43.8112, 19.1876, 0.83 ) }
    dend_0 { pt3dadd( 24.1952, 44.5428, 19.4774, 0.55 ) }
    dend_0 { pt3dadd( 24.9507, 45.176, 19.7027, 0.55 ) }
    dend_0 { pt3dadd( 26.9316, 46.8121, 20.2629, 0.83 ) }
    dend_0 { pt3dadd( 28.2116, 47.8612, 20.572, 0.55 ) }
    dend_0 { pt3dadd( 30.156, 49.3981, 20.9608, 0.55 ) }
    dend_0 { pt3dadd( 31.9383, 50.6864, 21.2445, 0.55 ) }
    dend_0 { pt3dadd( 33.5331, 51.7777, 21.4546, 0.55 ) }
    dend_0 { pt3dadd( 35.5493, 53.056, 21.6272, 0.55 ) }
    dend_0 { pt3dadd( 36.7821, 53.6819, 21.692, 0.55 ) }
    dend_0 { pt3dadd( 37.6241, 54.0336, 21.6346, 0.55 ) }
    dend_0 { pt3dadd( 38.7435, 54.2958, 21.4632, 0.55 ) }
    dend_0 { pt3dadd( 40.4153, 54.4149, 21.07, 0.55 ) }
    dend_0 { pt3dadd( 41.4581, 54.357, 20.7846, 0.55 ) }
    dend_0 { pt3dadd( 42.9812, 54.2309, 20.4743, 0.55 ) }
    dend_0 { pt3dadd( 45.8807, 54.0831, 20.143, 0.55 ) }
    dend_0 { pt3dadd( 48.1547, 54.0722, 20.0453, 0.55 ) }
    dend_0 { pt3dadd( 50.5637, 54.1755, 20.086, 0.55 ) }
    dend_0 { pt3dadd( 52.1075, 54.2947, 20.2344, 0.55 ) }
    dend_0 { pt3dadd( 56.1161, 54.9681, 20.8851, 0.55 ) }
    dend_0 { pt3dadd( 58.4865, 55.5496, 21.4495, 0.55 ) }
    dend_0 { pt3dadd( 60.2627, 56.1025, 22.0401, 0.55 ) }
    dend_0 { pt3dadd( 61.3415, 56.6185, 22.4413, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 62.5918, 57.3865, 22.9003, 0.55 ) }
    dend_0 { pt3dadd( 64.7093, 58.901, 23.4871, 0.55 ) }
    dend_0 { pt3dadd( 65.1954, 59.2657, 23.554, 0.55 ) }
    dend_0 { pt3dadd( 66.5908, 60.2409, 23.6532, 0.55 ) }
    dend_0 { pt3dadd( 67.8729, 61.2798, 23.7397, 0.83 ) }
    dend_0 { pt3dadd( 68.5726, 61.8562, 23.7758, 0.55 ) }
    dend_0 { pt3dadd( 69.6206, 62.8456, 23.788, 0.83 ) }
    dend_0 { pt3dadd( 75.1294, 68.1292, 25.3153, 0.83 ) }
    dend_0 { pt3dadd( 79.9205, 74.1908, 26.2623, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -19.1557, 19.6407, 4.55424, 0.55 ) }
    dend_55 { pt3dadd( -21.3657, 20.8782, 3.37595, 0.55 ) }
    dend_55 { pt3dadd( -23.7688, 22.2239, 2.09468, 0.55 ) }
    dend_55 { pt3dadd( -26.6688, 23.8479, 0.548466, 0.55 ) }
    dend_55 { pt3dadd( -29.0634, 25.1889, -0.728284, 0.83 ) }
    dend_55 { pt3dadd( -31.0701, 26.3126, -1.7982, 0.55 ) }
    dend_55 { pt3dadd( -34.7949, 28.3984, -3.78412, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -19.1557, 19.6407, 4.55424, 0.55 ) }
    dend_44 { pt3dadd( -21.3546, 20.0112, 4.37792, 0.55 ) }
    dend_44 { pt3dadd( -23.6826, 20.3432, 4.42515, 0.55 ) }
    dend_44 { pt3dadd( -26.3194, 20.7183, 4.54322, 0.55 ) }
    dend_44 { pt3dadd( -30.1211, 21.2362, 5.06678, 0.55 ) }
    dend_44 { pt3dadd( -33.2905, 21.5869, 5.73664, 0.55 ) }
    dend_44 { pt3dadd( -36.6072, 21.9095, 6.58506, 0.55 ) }
    dend_44 { pt3dadd( -39.7939, 22.0174, 7.76566, 0.55 ) }
    dend_44 { pt3dadd( -42.5207, 21.8504, 9.06584, 0.55 ) }
    dend_44 { pt3dadd( -45.8977, 21.4149, 11.0719, 0.55 ) }
    dend_44 { pt3dadd( -47.3546, 21.1239, 12.1613, 0.55 ) }
    dend_44 { pt3dadd( -48.9246, 20.7952, 13.4098, 0.55 ) }
    dend_44 { pt3dadd( -51.6975, 19.9904, 15.4906, 0.55 ) }
    dend_44 { pt3dadd( -53.1848, 19.5558, 16.3548, 0.55 ) }
    dend_44 { pt3dadd( -54.7425, 19.0507, 17.2528, 0.55 ) }
    dend_44 { pt3dadd( -56.6045, 18.4654, 18.1249, 0.55 ) }
    dend_44 { pt3dadd( -58.6314, 17.8702, 19.0135, 0.55 ) }
    dend_44 { pt3dadd( -61.527, 17.0105, 20.217, 0.55 ) }
    dend_44 { pt3dadd( -65.415, 16.1115, 21.455, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 32.4842, 6.25959, -22.5462, 0.55 ) }
    dend_34 { pt3dadd( 37.0483, 7.04551, -23.5033, 0.55 ) }
    dend_34 { pt3dadd( 39.6509, 7.41871, -24.4413, 0.55 ) }
    dend_34 { pt3dadd( 42.2043, 7.68195, -25.4249, 0.55 ) }
    dend_34 { pt3dadd( 43.9401, 7.79359, -26.1093, 0.55 ) }
    dend_34 { pt3dadd( 46.4703, 7.89524, -27.1015, 0.55 ) }
    dend_34 { pt3dadd( 51.702, 8.03731, -29.3413, 0.55 ) }
    dend_34 { pt3dadd( 57.6225, 8.23694, -32.2831, 0.55 ) }
    dend_34 { pt3dadd( 60.4656, 8.19408, -33.942, 0.55 ) }
    dend_34 { pt3dadd( 61.981, 8.15294, -34.9384, 0.55 ) }
    dend_34 { pt3dadd( 63.6418, 8.12906, -36.0977, 0.55 ) }
    dend_34 { pt3dadd( 66.5952, 8.00088, -38.1705, 0.55 ) }
    dend_34 { pt3dadd( 67.6587, 7.89765, -38.9718, 0.55 ) }
    dend_34 { pt3dadd( 72.1666, 7.64373, -42.6989, 0.55 ) }
    dend_34 { pt3dadd( 75.3579, 7.56254, -45.5693, 0.55 ) }
    dend_34 { pt3dadd( 77.1987, 7.56213, -47.2668, 0.55 ) }
    dend_34 { pt3dadd( 79.0325, 7.54498, -48.9616, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 32.4842, 6.25959, -22.5462, 0.83 ) }
    dend_29 { pt3dadd( 34.1989, 7.51248, -22.6463, 0.83 ) }
    dend_29 { pt3dadd( 35.1805, 8.22316, -22.7508, 0.55 ) }
    dend_29 { pt3dadd( 36.6266, 9.29039, -23.0377, 0.83 ) }
    dend_29 { pt3dadd( 37.5977, 10.0312, -23.2642, 0.55 ) }
    dend_29 { pt3dadd( 38.9332, 11.0925, -23.5595, 0.83 ) }
    dend_29 { pt3dadd( 40.5346, 12.408, -23.8549, 0.55 ) }
    dend_29 { pt3dadd( 41.3444, 13.0102, -23.9619, 0.55 ) }
    dend_29 { pt3dadd( 43.2256, 14.1425, -24.043, 0.83 ) }
    dend_29 { pt3dadd( 44.9439, 14.9779, -23.8628, 0.55 ) }
    dend_29 { pt3dadd( 45.9023, 15.4437, -23.6652, 0.83 ) }
    dend_29 { pt3dadd( 47.3328, 16.1907, -23.2139, 0.55 ) }
    dend_29 { pt3dadd( 49.3756, 17.3286, -22.2933, 0.55 ) }
    dend_29 { pt3dadd( 52.2201, 18.7697, -20.8458, 0.55 ) }
    dend_29 { pt3dadd( 54.9346, 20.0606, -19.2577, 0.55 ) }
    dend_29 { pt3dadd( 57.0859, 21.0631, -17.9565, 0.55 ) }
    dend_29 { pt3dadd( 60.6304, 22.7352, -15.7933, 0.55 ) }
    dend_29 { pt3dadd( 63.2153, 24.0425, -14.1582, 0.55 ) }
    dend_29 { pt3dadd( 64.7625, 24.9753, -13.1238, 0.55 ) }
    dend_29 { pt3dadd( 67.5847, 27.0059, -11.2209, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.775661, -18.5635, 6.12792, 0.83 ) }
    dend_11 { pt3dadd( -1.35114, -21.3487, 6.10689, 0.83 ) }
    dend_11 { pt3dadd( -1.91182, -24.0623, 6.08641, 0.83 ) }
    dend_11 { pt3dadd( -2.53782, -27.092, 6.06353, 0.83 ) }
    dend_11 { pt3dadd( -2.86472, -28.6741, 6.05159, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.775661, -18.5635, 6.12792, 0.55 ) }
    dend_2 { pt3dadd( -0.318233, -19.9177, 7.11563, 0.55 ) }
    dend_2 { pt3dadd( 0.0695368, -21.5797, 8.38657, 0.55 ) }
    dend_2 { pt3dadd( 0.23612, -23.7652, 10.1171, 0.55 ) }
    dend_2 { pt3dadd( 0.239405, -24.6161, 10.8088, 0.83 ) }
    dend_2 { pt3dadd( 0.0305861, -26.7917, 12.8097, 0.55 ) }
    dend_2 { pt3dadd( -0.171161, -27.9172, 13.8581, 0.55 ) }
    dend_2 { pt3dadd( -0.616291, -30.1069, 15.9869, 0.83 ) }
    dend_2 { pt3dadd( -1.04786, -31.7348, 17.6648, 0.55 ) }
    dend_2 { pt3dadd( -1.52188, -33.0804, 19.0199, 0.55 ) }
    dend_2 { pt3dadd( -2.47378, -35.6302, 21.5364, 0.55 ) }
    dend_2 { pt3dadd( -3.22878, -37.6625, 23.5185, 0.55 ) }
    dend_2 { pt3dadd( -3.80259, -39.2909, 25.1325, 0.55 ) }
    dend_2 { pt3dadd( -4.31295, -41.0178, 26.7981, 0.28 ) }
    dend_2 { pt3dadd( -4.46318, -41.7358, 27.4683, 0.55 ) }
    dend_2 { pt3dadd( -4.70098, -43.0613, 28.6332, 0.28 ) }
    dend_2 { pt3dadd( -4.76809, -45.1247, 30.1489, 0.55 ) }
    dend_2 { pt3dadd( -6.6773, -52.0263, 35.4517, 0.55 ) }
    dend_2 { pt3dadd( -8.8138, -58.4086, 41.2912, 0.55 ) }
    dend_2 { pt3dadd( -10.6528, -63.6487, 48.2595, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -34.7949, 28.3984, -3.78412, 0.55 ) }
    dend_61 { pt3dadd( -37.5054, 29.2793, -1.48139, 0.55 ) }
    dend_61 { pt3dadd( -38.5998, 29.6257, -0.335999, 0.83 ) }
    dend_61 { pt3dadd( -39.8222, 30.0138, 1.22261, 0.55 ) }
    dend_61 { pt3dadd( -40.7292, 30.3411, 2.51836, 0.83 ) }
    dend_61 { pt3dadd( -43.118, 31.3002, 5.85596, 0.55 ) }
    dend_61 { pt3dadd( -44.021, 31.6854, 7.12298, 0.28 ) }
    dend_61 { pt3dadd( -45.4836, 32.3968, 9.38811, 0.55 ) }
    dend_61 { pt3dadd( -47.4501, 33.3631, 12.4112, 0.55 ) }
    dend_61 { pt3dadd( -48.9677, 34.0711, 14.6184, 0.55 ) }
    dend_61 { pt3dadd( -51.0174, 34.9916, 17.4853, 0.28 ) }
    dend_61 { pt3dadd( -51.5725, 35.2119, 18.1484, 0.55 ) }
    dend_61 { pt3dadd( -52.7365, 35.669, 19.4639, 0.28 ) }
    dend_61 { pt3dadd( -53.5523, 35.9782, 20.2622, 0.55 ) }
    dend_61 { pt3dadd( -55.2629, 36.5459, 21.7302, 0.28 ) }
    dend_61 { pt3dadd( -56.2805, 36.7979, 22.5522, 0.55 ) }
    dend_61 { pt3dadd( -58.065, 37.0981, 24.0617, 0.28 ) }
    dend_61 { pt3dadd( -59.276, 37.2768, 25.0316, 0.55 ) }
    dend_61 { pt3dadd( -65.6296, 38.7779, 34.7307, 0.55 ) }
    dend_61 { pt3dadd( -71.0734, 39.352, 45.0616, 0.55 ) }
    dend_61 { pt3dadd( -76.1911, 38.8474, 55.5616, 0.55 ) }
    dend_61 { pt3dadd( -81.3573, 36.8984, 65.8671, 0.55 ) }
    dend_61 { pt3dadd( -84.9836, 35.7131, 76.9187, 0.55 ) }
    dend_61 { pt3dadd( -89.5718, 34.8365, 87.6367, 0.55 ) }
    dend_61 { pt3dadd( -94.2563, 35.9048, 98.2953, 0.55 ) }
    dend_61 { pt3dadd( -98.9155, 36.0362, 109.017, 0.55 ) }
    dend_61 { pt3dadd( -103.309, 36.999, 119.809, 0.55 ) }
    dend_61 { pt3dadd( -107.094, 37.8759, 130.836, 0.55 ) }
    dend_61 { pt3dadd( -109.648, 37.5433, 142.24, 0.55 ) }
    dend_61 { pt3dadd( -112.289, 38.3129, 153.604, 0.55 ) }
    dend_61 { pt3dadd( -115.13, 37.8661, 164.936, 0.55 ) }
    dend_61 { pt3dadd( -116.531, 37.0315, 176.513, 0.55 ) }
    dend_61 { pt3dadd( -115.886, 37.1154, 188.187, 0.55 ) }
    dend_61 { pt3dadd( -115.285, 34.9382, 199.658, 0.55 ) }
    dend_61 { pt3dadd( -113.04, 32.5258, 210.875, 0.55 ) }
    dend_61 { pt3dadd( -111.366, 30.6489, 222.293, 0.55 ) }
    dend_61 { pt3dadd( -110.891, 29.6578, 233.933, 0.55 ) }
    dend_61 { pt3dadd( -112.878, 30.4205, 245.429, 0.55 ) }
    dend_61 { pt3dadd( -113.834, 29.9233, 257.072, 0.55 ) }
    dend_61 { pt3dadd( -112.523, 31.4675, 268.586, 0.55 ) }
    dend_61 { pt3dadd( -113.117, 33.8146, 280.025, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -34.7949, 28.3984, -3.78412, 0.55 ) }
    dend_56 { pt3dadd( -36.8839, 28.8717, -5.85269, 0.55 ) }
    dend_56 { pt3dadd( -38.5785, 29.3864, -8.2298, 0.55 ) }
    dend_56 { pt3dadd( -40.1979, 30.0919, -10.7927, 0.55 ) }
    dend_56 { pt3dadd( -41.212, 30.5337, -12.3976, 0.55 ) }
    dend_56 { pt3dadd( -43.0617, 31.3395, -15.3251, 0.83 ) }
    dend_56 { pt3dadd( -44.415, 31.9291, -17.4669, 0.55 ) }
    dend_56 { pt3dadd( -46.0442, 32.6947, -20.6393, 0.83 ) }
    dend_56 { pt3dadd( -46.7139, 33.271, -22.4747, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -65.415, 16.1115, 21.455, 0.28 ) }
    dend_48 { pt3dadd( -66.6136, 13.5959, 21.6343, 0.28 ) }
    dend_48 { pt3dadd( -67.2016, 12.4927, 21.6329, 0.28 ) }
    dend_48 { pt3dadd( -67.9672, 10.9251, 21.5712, 0.55 ) }
    dend_48 { pt3dadd( -68.5943, 9.55149, 21.5233, 0.28 ) }
    dend_48 { pt3dadd( -69.5146, 7.4658, 21.4711, 0.55 ) }
    dend_48 { pt3dadd( -72.0531, 1.36351, 21.3933, 0.28 ) }
    dend_48 { pt3dadd( -72.8923, -0.807179, 21.2026, 0.55 ) }
    dend_48 { pt3dadd( -74.173, -4.17122, 20.8045, 0.28 ) }
    dend_48 { pt3dadd( -74.9153, -6.19951, 20.4817, 0.55 ) }
    dend_48 { pt3dadd( -75.4313, -7.60392, 20.2293, 0.28 ) }
    dend_48 { pt3dadd( -76.018, -9.21303, 19.951, 0.55 ) }
    dend_48 { pt3dadd( -77.7671, -14.5476, 19.1192, 0.28 ) }
    dend_48 { pt3dadd( -78.3243, -16.1736, 18.819, 0.55 ) }
    dend_48 { pt3dadd( -79.3313, -18.7163, 18.1449, 0.28 ) }
    dend_48 { pt3dadd( -80.1789, -20.3809, 17.6088, 0.28 ) }
    dend_48 { pt3dadd( -80.945, -21.5101, 17.234, 0.55 ) }
    dend_48 { pt3dadd( -83.6076, -24.6887, 16.3047, 0.28 ) }
    dend_48 { pt3dadd( -84.8435, -25.9783, 15.966, 0.55 ) }
    dend_48 { pt3dadd( -87.8846, -28.959, 15.061, 0.28 ) }
    dend_48 { pt3dadd( -90.933, -31.6258, 14.2387, 0.28 ) }
    dend_48 { pt3dadd( -94.2592, -34.2134, 13.3837, 0.28 ) }
    dend_48 { pt3dadd( -95.7824, -35.2032, 13.0779, 0.55 ) }
    dend_48 { pt3dadd( -102.894, -45.1806, 11.3431, 0.55 ) }
    dend_48 { pt3dadd( -110.586, -54.8574, 11.9252, 0.55 ) }
    dend_48 { pt3dadd( -118.33, -64.4233, 10.6343, 0.55 ) }
    dend_48 { pt3dadd( -126.435, -73.4562, 8.21384, 0.55 ) }
    dend_48 { pt3dadd( -134.809, -81.8326, 4.62784, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -65.415, 16.1115, 21.455, 0.55 ) }
    dend_45 { pt3dadd( -66.1197, 16.0409, 21.6467, 0.55 ) }
    dend_45 { pt3dadd( -68.0815, 15.913, 22.4421, 0.55 ) }
    dend_45 { pt3dadd( -68.8132, 15.8565, 22.7855, 0.55 ) }
    dend_45 { pt3dadd( -70.5269, 15.6779, 23.6337, 0.55 ) }
    dend_45 { pt3dadd( -73.1779, 15.3957, 24.8013, 0.55 ) }
    dend_45 { pt3dadd( -74.5615, 15.2854, 25.3721, 0.28 ) }
    dend_45 { pt3dadd( -76.7151, 15.0549, 26.2305, 0.55 ) }
    dend_45 { pt3dadd( -78.3178, 14.835, 26.8187, 0.55 ) }
    dend_45 { pt3dadd( -78.9941, 14.738, 27.0698, 0.28 ) }
    dend_45 { pt3dadd( -83.0509, 14.1527, 28.5709, 0.55 ) }
    dend_45 { pt3dadd( -84.9519, 13.7596, 29.1793, 0.28 ) }
    dend_45 { pt3dadd( -87.5305, 13.1791, 29.8519, 0.28 ) }
    dend_45 { pt3dadd( -89.7694, 12.6761, 30.2936, 0.55 ) }
    dend_45 { pt3dadd( -98.416, 12.4888, 33.5605, 0.55 ) }
    dend_45 { pt3dadd( -106.644, 12.3424, 37.7716, 0.55 ) }
    dend_45 { pt3dadd( -114.216, 11.5473, 43.0168, 0.55 ) }
    dend_45 { pt3dadd( -121.598, 12.4405, 48.5097, 0.55 ) }
    dend_45 { pt3dadd( -127.66, 13.4911, 55.4104, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -132.318, 15.4061, 63.1633, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 79.0325, 7.54498, -48.9616, 0.55 ) }
    dend_42 { pt3dadd( 82.3046, 8.65745, -51.427, 0.55 ) }
    dend_42 { pt3dadd( 83.3272, 8.9883, -52.2808, 0.55 ) }
    dend_42 { pt3dadd( 84.5981, 9.35851, -53.348, 0.55 ) }
    dend_42 { pt3dadd( 86.896, 10.0553, -55.4197, 0.55 ) }
    dend_42 { pt3dadd( 89.2707, 10.7092, -57.6695, 0.55 ) }
    dend_42 { pt3dadd( 90.4113, 10.9311, -58.7707, 0.83 ) }
    dend_42 { pt3dadd( 91.3333, 11.075, -59.7677, 0.55 ) }
    dend_42 { pt3dadd( 92.0074, 11.1501, -60.6021, 0.83 ) }
    dend_42 { pt3dadd( 93.5733, 11.141, -62.8054, 0.55 ) }
    dend_42 { pt3dadd( 94.8322, 11.0101, -64.6716, 0.55 ) }
    dend_42 { pt3dadd( 96.2799, 10.8223, -66.7433, 0.55 ) }
    dend_42 { pt3dadd( 97.9026, 10.6754, -69.0693, 0.55 ) }
    dend_42 { pt3dadd( 98.9835, 10.5593, -70.668, 0.55 ) }
    dend_42 { pt3dadd( 100.201, 10.4388, -72.5157, 0.55 ) }
    dend_42 { pt3dadd( 101.261, 10.4024, -74.1798, 0.55 ) }
    dend_42 { pt3dadd( 101.94, 10.4779, -75.3016, 0.55 ) }
    dend_42 { pt3dadd( 102.767, 10.7835, -77.4926, 0.55 ) }
    dend_42 { pt3dadd( 103.2, 10.9517, -78.8683, 0.55 ) }
    dend_42 { pt3dadd( 103.519, 11.1534, -80.696, 0.55 ) }
    dend_42 { pt3dadd( 103.899, 11.4394, -83.7992, 0.55 ) }
    dend_42 { pt3dadd( 103.967, 11.4828, -84.5055, 0.28 ) }
    dend_42 { pt3dadd( 104.857, 11.9051, -93.1283, 0.28 ) }
    dend_42 { pt3dadd( 105.192, 12.0298, -95.6614, 0.83 ) }
    dend_42 { pt3dadd( 106.558, 12.2846, -104.713, 0.83 ) }
    dend_42 { pt3dadd( 107.261, 12.2322, -108.975, 0.83 ) }
    dend_42 { pt3dadd( 107.613, 12.1322, -110.729, 0.55 ) }
    dend_42 { pt3dadd( 108.045, 12.0088, -112.449, 0.55 ) }
    dend_42 { pt3dadd( 109.377, 11.5987, -115.71, 0.55 ) }
    dend_42 { pt3dadd( 110.86, 11.1453, -118.614, 0.28 ) }
    dend_42 { pt3dadd( 111.351, 10.9111, -118.862, 0.55 ) }
    dend_42 { pt3dadd( 112.464, 10.336, -118.971, 0.28 ) }
    dend_42 { pt3dadd( 113.167, 9.99499, -118.918, 0.55 ) }
    dend_42 { pt3dadd( 113.9, 9.60854, -118.803, 0.28 ) }
    dend_42 { pt3dadd( 114.791, 9.1746, -118.609, 0.55 ) }
    dend_42 { pt3dadd( 116.138, 8.64254, -118.439, 0.28 ) }
    dend_42 { pt3dadd( 117.21, 8.19488, -118.348, 0.55 ) }
    dend_42 { pt3dadd( 118.413, 7.80853, -118.317, 0.28 ) }
    dend_42 { pt3dadd( 120.046, 7.33683, -118.416, 0.55 ) }
    dend_42 { pt3dadd( 121.884, 6.88549, -118.622, 0.55 ) }
    dend_42 { pt3dadd( 123.502, 6.54267, -118.903, 0.28 ) }
    dend_42 { pt3dadd( 125.742, 6.12888, -119.408, 0.55 ) }
    dend_42 { pt3dadd( 129.629, 5.65292, -120.652, 0.55 ) }
    dend_42 { pt3dadd( 131.361, 5.5965, -121.377, 0.55 ) }
    dend_42 { pt3dadd( 132.11, 5.62781, -121.757, 0.83 ) }
    dend_42 { pt3dadd( 133.537, 5.73966, -122.603, 0.55 ) }
    dend_42 { pt3dadd( 134.535, 5.87553, -123.238, 0.83 ) }
    dend_42 { pt3dadd( 137.234, 6.31749, -124.954, 0.55 ) }
    dend_42 { pt3dadd( 138.855, 6.49477, -126.078, 0.28 ) }
    dend_42 { pt3dadd( 139.53, 6.50396, -126.49, 0.55 ) }
    dend_42 { pt3dadd( 141.345, 6.29682, -127.47, 0.28 ) }
    dend_42 { pt3dadd( 141.968, 6.15289, -127.791, 0.55 ) }
    dend_42 { pt3dadd( 143.238, 5.70811, -128.275, 0.28 ) }
    dend_42 { pt3dadd( 144.506, 5.05139, -128.579, 0.55 ) }
    dend_42 { pt3dadd( 147.047, 3.42486, -128.767, 0.28 ) }
    dend_42 { pt3dadd( 148.209, 2.57702, -128.739, 0.55 ) }
    dend_42 { pt3dadd( 149.915, 1.1795, -128.633, 0.28 ) }
    dend_42 { pt3dadd( 152.074, -0.605318, -128.412, 0.55 ) }
    dend_42 { pt3dadd( 153.643, -1.88245, -128.218, 0.55 ) }
    dend_42 { pt3dadd( 156.382, -4.02126, -127.805, 0.28 ) }
    dend_42 { pt3dadd( 157.517, -4.81165, -127.716, 0.55 ) }
    dend_42 { pt3dadd( 159.495, -5.9828, -127.752, 0.28 ) }
    dend_42 { pt3dadd( 161.499, -6.94753, -127.882, 0.55 ) }
    dend_42 { pt3dadd( 162.624, -7.29888, -128.069, 0.28 ) }
    dend_42 { pt3dadd( 163.671, -7.45522, -128.274, 0.55 ) }
    dend_42 { pt3dadd( 166.66, -7.63741, -129.07, 0.28 ) }
    dend_42 { pt3dadd( 168.828, -7.61704, -129.627, 0.28 ) }
    dend_42 { pt3dadd( 170.743, -7.46295, -130.095, 0.55 ) }
    dend_42 { pt3dadd( 172.867, -7.20505, -130.695, 0.28 ) }
    dend_42 { pt3dadd( 173.41, -7.11515, -130.819, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 79.0325, 7.54498, -48.9616, 0.55 ) }
    dend_35 { pt3dadd( 79.1395, 6.43534, -50.3516, 0.55 ) }
    dend_35 { pt3dadd( 79.1234, 5.48305, -51.4386, 0.28 ) }
    dend_35 { pt3dadd( 79.1087, 4.57854, -52.3438, 0.55 ) }
    dend_35 { pt3dadd( 79.1979, 2.65097, -54.2928, 0.28 ) }
    dend_35 { pt3dadd( 79.1992, 2.53737, -54.4351, 0.55 ) }
    dend_35 { pt3dadd( 79.2265, 1.96087, -55.2432, 0.28 ) }
    dend_35 { pt3dadd( 79.1891, 1.52745, -56.0046, 0.55 ) }
    dend_35 { pt3dadd( 79.1109, 1.10681, -56.8697, 0.28 ) }
    dend_35 { pt3dadd( 78.9769, 0.551517, -58.0883, 0.55 ) }
    dend_35 { pt3dadd( 78.6396, -0.85747, -61.1066, 0.55 ) }
    dend_35 { pt3dadd( 78.3076, -2.12538, -63.8914, 0.55 ) }
    dend_35 { pt3dadd( 78.0257, -3.13553, -66.1181, 0.55 ) }
    dend_35 { pt3dadd( 77.7189, -4.13402, -68.2767, 0.55 ) }
    dend_35 { pt3dadd( 77.6385, -4.39799, -68.817, 0.28 ) }
    dend_35 { pt3dadd( 77.566, -4.69483, -69.3589, 0.55 ) }
    dend_35 { pt3dadd( 77.525, -5.1347, -70.0582, 0.28 ) }
    dend_35 { pt3dadd( 77.5668, -5.97568, -71.2217, 0.55 ) }
    dend_35 { pt3dadd( 77.8346, -7.73014, -73.1379, 0.55 ) }
    dend_35 { pt3dadd( 77.9901, -8.71049, -74.0701, 0.28 ) }
    dend_35 { pt3dadd( 78.0796, -9.67929, -75.0616, 0.55 ) }
    dend_35 { pt3dadd( 78.0844, -10.9968, -76.5002, 0.28 ) }
    dend_35 { pt3dadd( 78.0034, -12.0368, -77.6846, 0.55 ) }
    dend_35 { pt3dadd( 77.7981, -13.5776, -79.4527, 0.28 ) }
    dend_35 { pt3dadd( 77.6013, -15.1956, -81.2226, 0.55 ) }
    dend_35 { pt3dadd( 77.276, -17.5301, -83.8144, 0.28 ) }
    dend_35 { pt3dadd( 77.068, -18.7675, -85.1983, 0.55 ) }
    dend_35 { pt3dadd( 76.8286, -20.0162, -86.6485, 0.28 ) }
    dend_35 { pt3dadd( 76.6016, -21.0833, -88.0092, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 76.3766, -22.3755, -89.8633, 0.55 ) }
    dend_35 { pt3dadd( 76.2827, -23.6048, -91.5512, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 67.5847, 27.0059, -11.2209, 0.55 ) }
    dend_31 { pt3dadd( 70.3911, 26.8641, -10.6051, 0.55 ) }
    dend_31 { pt3dadd( 72.4408, 26.6747, -10.348, 0.55 ) }
    dend_31 { pt3dadd( 76.9303, 26.1995, -10.0174, 0.55 ) }
    dend_31 { pt3dadd( 78.9508, 25.9372, -10.0466, 0.55 ) }
    dend_31 { pt3dadd( 81.1525, 25.6934, -10.1919, 0.55 ) }
    dend_31 { pt3dadd( 84.1043, 25.4098, -10.5978, 0.55 ) }
    dend_31 { pt3dadd( 87.2212, 25.0166, -11.3184, 0.55 ) }
    dend_31 { pt3dadd( 88.8572, 24.7817, -11.8826, 0.55 ) }
    dend_31 { pt3dadd( 92.1785, 24.2856, -13.4828, 0.55 ) }
    dend_31 { pt3dadd( 93.707, 24.068, -14.2689, 0.55 ) }
    dend_31 { pt3dadd( 97.2918, 23.4855, -16.2017, 0.55 ) }
    dend_31 { pt3dadd( 99.7255, 22.9935, -17.4872, 0.55 ) }
    dend_31 { pt3dadd( 101.518, 22.6233, -18.3513, 0.83 ) }
    dend_31 { pt3dadd( 104.389, 21.9261, -19.6957, 0.55 ) }
    dend_31 { pt3dadd( 107.209, 21.11, -20.8985, 0.83 ) }
    dend_31 { pt3dadd( 109.608, 20.3107, -21.8302, 0.55 ) }
    dend_31 { pt3dadd( 111.743, 19.6347, -22.5491, 0.55 ) }
    dend_31 { pt3dadd( 112.955, 19.306, -22.893, 0.83 ) }
    dend_31 { pt3dadd( 115.785, 18.553, -23.5473, 0.28 ) }
    dend_31 { pt3dadd( 117.191, 18.2402, -23.7855, 0.28 ) }
    dend_31 { pt3dadd( 118.554, 17.8484, -24.0834, 0.28 ) }
    dend_31 { pt3dadd( 120.026, 17.464, -24.4132, 0.28 ) }
    dend_31 { pt3dadd( 122.378, 16.8913, -24.991, 0.28 ) }
    dend_31 { pt3dadd( 123.324, 16.6737, -25.1958, 0.55 ) }
    dend_31 { pt3dadd( 125.589, 16.1849, -25.465, 0.55 ) }
    dend_31 { pt3dadd( 129.668, 15.2735, -25.7435, 0.55 ) }
    dend_31 { pt3dadd( 130.8, 14.9934, -25.7702, 0.55 ) }
    dend_31 { pt3dadd( 131.812, 14.712, -25.7499, 0.83 ) }
    dend_31 { pt3dadd( 134.01, 14.175, -25.5315, 0.55 ) }
    dend_31 { pt3dadd( 135.921, 13.7132, -25.3115, 0.55 ) }
    dend_31 { pt3dadd( 137.726, 13.2847, -25.0954, 0.55 ) }
    dend_31 { pt3dadd( 139.125, 12.9271, -24.9667, 0.55 ) }
    dend_31 { pt3dadd( 141.35, 12.2016, -24.8657, 0.55 ) }
    dend_31 { pt3dadd( 143.981, 11.1113, -24.8839, 0.55 ) }
    dend_31 { pt3dadd( 148.09, 8.94917, -25.1827, 0.55 ) }
    dend_31 { pt3dadd( 150.359, 7.4282, -25.4788, 0.55 ) }
    dend_31 { pt3dadd( 152.341, 5.7749, -25.8235, 0.28 ) }
    dend_31 { pt3dadd( 152.938, 5.1534, -25.9564, 0.55 ) }
    dend_31 { pt3dadd( 154.273, 3.38956, -26.3062, 0.28 ) }
    dend_31 { pt3dadd( 155.441, 1.38953, -26.652, 0.55 ) }
    dend_31 { pt3dadd( 156.57, -1.12178, -26.8757, 0.55 ) }
    dend_31 { pt3dadd( 157.331, -2.76782, -26.9431, 0.28 ) }
    dend_31 { pt3dadd( 157.609, -3.34753, -26.9381, 0.55 ) }
    dend_31 { pt3dadd( 158.328, -4.78468, -26.9057, 0.28 ) }
    dend_31 { pt3dadd( 159.305, -6.64946, -26.8179, 0.55 ) }
    dend_31 { pt3dadd( 161.839, -11.1249, -26.4939, 0.55 ) }
    dend_31 { pt3dadd( 163.156, -13.3753, -26.2823, 0.55 ) }
    dend_31 { pt3dadd( 164.379, -15.4358, -26.0695, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 67.5847, 27.0059, -11.2209, 0.55 ) }
    dend_30 { pt3dadd( 69.443, 27.2667, -9.86596, 0.55 ) }
    dend_30 { pt3dadd( 70.0383, 27.3511, -9.4639, 0.55 ) }
    dend_30 { pt3dadd( 72.263, 27.5697, -8.07132, 0.55 ) }
    dend_30 { pt3dadd( 74.7435, 27.8583, -6.47537, 0.55 ) }
    dend_30 { pt3dadd( 77.9254, 28.2135, -4.34735, 0.55 ) }
    dend_30 { pt3dadd( 78.8041, 28.3131, -3.76525, 0.55 ) }
    dend_30 { pt3dadd( 80.3853, 28.4339, -2.74253, 0.55 ) }
    dend_30 { pt3dadd( 82.1136, 28.6114, -1.68154, 0.55 ) }
    dend_30 { pt3dadd( 84.116, 28.881, -0.53105, 0.55 ) }
    dend_30 { pt3dadd( 86.0009, 29.1607, 0.562616, 0.55 ) }
    dend_30 { pt3dadd( 87.0297, 29.3649, 1.12017, 0.55 ) }
    dend_30 { pt3dadd( 88.2344, 29.6392, 1.77646, 0.55 ) }
    dend_30 { pt3dadd( 89.7203, 30.0238, 2.56625, 0.83 ) }
    dend_30 { pt3dadd( 92.1478, 30.6723, 3.6049, 0.55 ) }
    dend_30 { pt3dadd( 93.7587, 31.0457, 4.20844, 0.83 ) }
    dend_30 { pt3dadd( 96.002, 31.4693, 4.95844, 0.55 ) }
    dend_30 { pt3dadd( 96.6939, 31.5632, 5.17481, 0.55 ) }
    dend_30 { pt3dadd( 98.8485, 31.7534, 5.79021, 0.55 ) }
    dend_30 { pt3dadd( 102.72, 31.8794, 6.71396, 0.55 ) }
    dend_30 { pt3dadd( 105.566, 31.8235, 7.30957, 0.55 ) }
    dend_30 { pt3dadd( 107.83, 31.6724, 7.8217, 0.55 ) }
    dend_30 { pt3dadd( 110.15, 31.3932, 8.40797, 0.55 ) }
    dend_30 { pt3dadd( 110.639, 31.3216, 8.53228, 0.28 ) }
    dend_30 { pt3dadd( 111.634, 31.1383, 8.77787, 0.83 ) }
    dend_30 { pt3dadd( 115.726, 30.3263, 9.80297, 0.55 ) }
    dend_30 { pt3dadd( 118.587, 29.7665, 10.4668, 0.55 ) }
    dend_30 { pt3dadd( 120.932, 29.3588, 11.0751, 0.55 ) }
    dend_30 { pt3dadd( 122.333, 29.1098, 11.4511, 0.83 ) }
    dend_30 { pt3dadd( 123.435, 28.9291, 11.7508, 0.28 ) }
    dend_30 { pt3dadd( 124.435, 28.7676, 12.0136, 0.55 ) }
    dend_30 { pt3dadd( 132.096, 29.2329, 15.3549, 0.55 ) }
    dend_30 { pt3dadd( 140.263, 28.6179, 17.0903, 0.55 ) }
    dend_30 { pt3dadd( 148.322, 28.9644, 19.3276, 0.55 ) }
    dend_30 { pt3dadd( 155.685, 27.9129, 23.1709, 0.55 ) }
    dend_30 { pt3dadd( 162.65, 25.6823, 27.2442, 0.55 ) }
    dend_30 { pt3dadd( 170.245, 22.5536, 28.8587, 0.55 ) }
    dend_30 { pt3dadd( 177.725, 18.7976, 28.9911, 0.55 ) }
    dend_30 { pt3dadd( 185.799, 16.5949, 28.7823, 0.55 ) }
    dend_30 { pt3dadd( 193.815, 14.2047, 29.1142, 0.55 ) }
    dend_30 { pt3dadd( 202.064, 12.7826, 29.0173, 0.55 ) }
    dend_30 { pt3dadd( 210.291, 11.6107, 30.0317, 0.55 ) }
    dend_30 { pt3dadd( 218.128, 8.96466, 31.3211, 0.55 ) }
    dend_30 { pt3dadd( 226.084, 7.69454, 33.5937, 0.55 ) }
    dend_30 { pt3dadd( 233.651, 7.49258, 37.1685, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -2.86472, -28.6741, 6.05159, 1.38 ) }
    dend_13 { pt3dadd( -0.948881, -32.1115, 4.11176, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -2.86472, -28.6741, 6.05159, 0.55 ) }
    dend_12 { pt3dadd( -4.41236, -30.2459, 6.84051, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -6.17349, -32.2999, 7.71735, 0.55 ) }
    dend_12 { pt3dadd( -7.49476, -33.6324, 8.40963, 0.55 ) }
    dend_12 { pt3dadd( -8.69126, -34.7334, 8.84194, 0.55 ) }
    dend_12 { pt3dadd( -11.3912, -36.9797, 9.58434, 0.55 ) }
    dend_12 { pt3dadd( -13.2937, -38.4638, 10.063, 0.55 ) }
    dend_12 { pt3dadd( -15.0152, -39.7925, 10.439, 0.55 ) }
    dend_12 { pt3dadd( -19.4024, -42.9935, 11.4058, 0.55 ) }
    dend_12 { pt3dadd( -24.6291, -46.6743, 12.5979, 0.55 ) }
    dend_12 { pt3dadd( -28.6953, -49.4449, 13.4658, 0.55 ) }
    dend_12 { pt3dadd( -31.3166, -51.2729, 13.9914, 0.55 ) }
    dend_12 { pt3dadd( -34.3388, -53.4869, 14.6026, 0.55 ) }
    dend_12 { pt3dadd( -38.2213, -56.7378, 15.4212, 0.55 ) }
    dend_12 { pt3dadd( -40.5482, -59.1158, 15.9413, 0.55 ) }
    dend_12 { pt3dadd( -43.4034, -62.6165, 16.7736, 0.55 ) }
    dend_12 { pt3dadd( -45.7298, -65.9555, 17.5098, 0.55 ) }
    dend_12 { pt3dadd( -48.2033, -70.1958, 18.2926, 0.55 ) }
    dend_12 { pt3dadd( -50.6658, -75.249, 19.1114, 0.55 ) }
    dend_12 { pt3dadd( -52.1526, -79.1789, 19.6255, 0.55 ) }
    dend_12 { pt3dadd( -52.7073, -81.1643, 19.9299, 0.55 ) }
    dend_12 { pt3dadd( -53.6344, -85.8902, 20.7324, 0.55 ) }
    dend_12 { pt3dadd( -54.3753, -90.3319, 21.5468, 0.55 ) }
    dend_12 { pt3dadd( -54.7573, -94.8634, 22.5457, 0.55 ) }
    dend_12 { pt3dadd( -54.9305, -97.4684, 23.256, 0.55 ) }
    dend_12 { pt3dadd( -55.2798, -105.549, 25.686, 0.55 ) }
    dend_12 { pt3dadd( -55.3039, -106.144, 25.8759, 0.55 ) }
    dend_12 { pt3dadd( -55.3489, -109.805, 27.0832, 0.55 ) }
    dend_12 { pt3dadd( -55.6155, -116.315, 29.5235, 0.55 ) }
    dend_12 { pt3dadd( -55.7784, -118.482, 30.2333, 0.55 ) }
    dend_12 { pt3dadd( -56.3888, -121.819, 30.8767, 0.55 ) }
    dend_12 { pt3dadd( -56.7282, -123.045, 30.8482, 0.55 ) }
    dend_12 { pt3dadd( -58.1051, -127.169, 29.9606, 0.55 ) }
    dend_12 { pt3dadd( -59.1485, -129.825, 28.802, 0.55 ) }
    dend_12 { pt3dadd( -61.1431, -134.016, 26.1173, 0.55 ) }
    dend_12 { pt3dadd( -63.5988, -139.15, 22.3626, 0.28 ) }
    dend_12 { pt3dadd( -64.2756, -140.41, 21.2672, 0.55 ) }
    dend_12 { pt3dadd( -65.3829, -142.31, 19.448, 0.28 ) }
    dend_12 { pt3dadd( -65.56, -142.595, 19.1611, 0.55 ) }
    dend_12 { pt3dadd( -66.4695, -144.162, 17.7199, 0.28 ) }
    dend_12 { pt3dadd( -66.7481, -144.697, 17.3632, 0.55 ) }
    dend_12 { pt3dadd( -67.9764, -147.506, 16.037, 0.28 ) }
    dend_12 { pt3dadd( -68.4215, -148.456, 15.6158, 0.55 ) }
    dend_12 { pt3dadd( -69.6596, -151.211, 14.5591, 0.28 ) }
    dend_12 { pt3dadd( -70.0442, -152.079, 14.2274, 0.55 ) }
    dend_12 { pt3dadd( -71.3686, -155.073, 13.1401, 0.28 ) }
    dend_12 { pt3dadd( -71.975, -156.452, 12.6297, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -10.6528, -63.6487, 48.2595, 0.55 ) }
    dend_10 { pt3dadd( -14.9456, -71.4576, 56.2278, 0.55 ) }
    dend_10 { pt3dadd( -20.2589, -78.1229, 64.6091, 0.55 ) }
    dend_10 { pt3dadd( -25.3792, -85.5831, 72.4212, 0.55 ) }
    dend_10 { pt3dadd( -30.7217, -93.0597, 80.0671, 0.55 ) }
    dend_10 { pt3dadd( -35.0394, -101.97, 86.7648, 0.55 ) }
    dend_10 { pt3dadd( -39.1551, -110.525, 94.029, 0.55 ) }
    dend_10 { pt3dadd( -42.329, -121.002, 98.8314, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -10.6528, -63.6487, 48.2595, 0.55 ) }
    dend_3 { pt3dadd( -9.9283, -73.5117, 57.3421, 0.55 ) }
    dend_3 { pt3dadd( -8.8868, -84.8501, 64.4593, 0.55 ) }
    dend_3 { pt3dadd( -10.0039, -96.127, 71.6623, 0.55 ) }
    dend_3 { pt3dadd( -12.0092, -107.965, 77.6727, 0.55 ) }
    dend_3 { pt3dadd( -13.4603, -119.796, 83.8549, 0.55 ) }
    dend_3 { pt3dadd( -14.7249, -131.173, 90.8735, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -46.7139, 33.271, -22.4747, 0.83 ) }
    dend_60 { pt3dadd( -46.5871, 34.2889, -23.7837, 0.83 ) }
    dend_60 { pt3dadd( -46.3422, 36.7631, -26.7255, 0.55 ) }
    dend_60 { pt3dadd( -46.2307, 37.8401, -27.8962, 0.83 ) }
    dend_60 { pt3dadd( -46.103, 39.0013, -29.0625, 0.55 ) }
    dend_60 { pt3dadd( -45.9638, 40.2143, -30.0783, 0.55 ) }
    dend_60 { pt3dadd( -45.885, 40.8324, -30.5049, 0.28 ) }
    dend_60 { pt3dadd( -45.8549, 41.251, -30.6775, 0.55 ) }
    dend_60 { pt3dadd( -45.6966, 42.682, -30.9494, 0.28 ) }
    dend_60 { pt3dadd( -45.6122, 43.2982, -31.0359, 0.55 ) }
    dend_60 { pt3dadd( -45.3405, 45.4472, -31.248, 0.28 ) }
    dend_60 { pt3dadd( -45.1659, 47.1529, -31.356, 0.55 ) }
    dend_60 { pt3dadd( -45.0145, 49.8163, -31.4347, 0.28 ) }
    dend_60 { pt3dadd( -44.96, 52.1565, -31.4539, 0.28 ) }
    dend_60 { pt3dadd( -45.0028, 53.4636, -31.4344, 0.55 ) }
    dend_60 { pt3dadd( -45.1473, 55.0069, -31.4042, 0.28 ) }
    dend_60 { pt3dadd( -45.2637, 55.7409, -31.3762, 0.55 ) }
    dend_60 { pt3dadd( -45.6351, 57.453, -31.3819, 0.28 ) }
    dend_60 { pt3dadd( -45.9617, 58.5826, -31.4406, 0.28 ) }
    dend_60 { pt3dadd( -46.3081, 59.6869, -31.5309, 0.28 ) }
    dend_60 { pt3dadd( -46.4687, 60.2719, -31.5825, 0.55 ) }
    dend_60 { pt3dadd( -46.9934, 62.6434, -31.8565, 0.28 ) }
    dend_60 { pt3dadd( -47.5236, 65.4549, -32.2398, 0.55 ) }
    dend_60 { pt3dadd( -47.6927, 66.4268, -32.377, 0.55 ) }
    dend_60 { pt3dadd( -47.8767, 67.4018, -32.4922, 0.55 ) }
    dend_60 { pt3dadd( -48.3794, 69.461, -32.7638, 0.55 ) }
    dend_60 { pt3dadd( -48.7989, 70.8025, -32.9658, 0.28 ) }
    dend_60 { pt3dadd( -49.0178, 71.3045, -33.0453, 0.55 ) }
    dend_60 { pt3dadd( -49.7074, 72.6579, -33.2239, 0.28 ) }
    dend_60 { pt3dadd( -50.5056, 74.0876, -33.4695, 0.55 ) }
    dend_60 { pt3dadd( -51.8568, 76.1172, -33.8934, 0.28 ) }
    dend_60 { pt3dadd( -52.5191, 76.9528, -34.093, 0.28 ) }
    dend_60 { pt3dadd( -53.6063, 78.0881, -34.4854, 0.55 ) }
    dend_60 { pt3dadd( -54.8289, 79.2562, -34.9574, 0.28 ) }
    dend_60 { pt3dadd( -55.0519, 79.4358, -35.0397, 0.55 ) }
    dend_60 { pt3dadd( -55.8557, 79.9972, -35.323, 0.28 ) }
    dend_60 { pt3dadd( -58.6251, 81.7764, -36.2336, 0.55 ) }
    dend_60 { pt3dadd( -62.4855, 83.9072, -37.6063, 0.28 ) }
    dend_60 { pt3dadd( -63.2014, 84.253, -37.8966, 0.55 ) }
    dend_60 { pt3dadd( -65.1687, 85.1263, -38.7179, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -65.9961, 85.4799, -39.083, 0.28 ) }
    dend_60 { pt3dadd( -66.7176, 85.7662, -39.4315, 0.55 ) }
    dend_60 { pt3dadd( -68.839, 86.3473, -40.5823, 0.28 ) }
    dend_60 { pt3dadd( -70.3329, 86.6173, -41.3238, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -46.7139, 33.271, -22.4747, 0.55 ) }
    dend_57 { pt3dadd( -46.9419, 34.4268, -22.7134, 0.55 ) }
    dend_57 { pt3dadd( -47.0898, 35.114, -22.7883, 0.28 ) }
    dend_57 { pt3dadd( -47.2866, 35.611, -22.7134, 0.55 ) }
    dend_57 { pt3dadd( -47.7384, 36.7523, -22.5415, 0.28 ) }
    dend_57 { pt3dadd( -48.0557, 37.5539, -22.4207, 0.55 ) }
    dend_57 { pt3dadd( -48.6407, 39.0317, -22.1981, 0.28 ) }
    dend_57 { pt3dadd( -49.0251, 39.8318, -21.9353, 0.55 ) }
    dend_57 { pt3dadd( -50.458, 41.765, -20.6004, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -134.809, -81.8326, 4.62784, 0.55 ) }
    dend_52 { pt3dadd( -141.666, -92.2105, 3.87225, 0.55 ) }
    dend_52 { pt3dadd( -146.564, -103.577, 2.42111, 0.55 ) }
    dend_52 { pt3dadd( -150.653, -114.608, -1.69046, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -134.809, -81.8326, 4.62784, 0.55 ) }
    dend_49 { pt3dadd( -140.548, -89.264, 2.41007, 0.55 ) }
    dend_49 { pt3dadd( -145.406, -96.9138, -0.900663, 0.55 ) }
    dend_49 { pt3dadd( -149.884, -104.709, -4.4007, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -132.318, 15.4061, 63.1633, 0.55 ) }
    dend_47 { pt3dadd( -137.773, 16.275, 67.7403, 0.55 ) }
    dend_47 { pt3dadd( -143.739, 17.7463, 71.4422, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -132.318, 15.4061, 63.1633, 0.55 ) }
    dend_46 { pt3dadd( -141.786, 14.6419, 68.5443, 0.55 ) }
    dend_46 { pt3dadd( -151.563, 15.5496, 73.3152, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 76.2827, -23.6048, -91.5512, 0.28 ) }
    dend_39 { pt3dadd( 85.0446, -25.7946, -109.014, 0.28 ) }
    dend_39 { pt3dadd( 85.87, -26.1408, -110.619, 0.55 ) }
    dend_39 { pt3dadd( 87.2634, -26.7254, -113.328, 0.28 ) }
    dend_39 { pt3dadd( 88.4367, -27.2177, -115.61, 0.28 ) }
    dend_39 { pt3dadd( 89.9899, -27.8693, -118.63, 0.55 ) }
    dend_39 { pt3dadd( 92.0376, -28.7283, -122.611, 0.55 ) }
    dend_39 { pt3dadd( 94.2803, -31.4456, -125.39, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 76.2827, -23.6048, -91.5512, 0.55 ) }
    dend_36 { pt3dadd( 76.5437, -24.1297, -92.558, 0.55 ) }
    dend_36 { pt3dadd( 76.598, -24.3524, -93.0035, 0.28 ) }
    dend_36 { pt3dadd( 76.6603, -24.7229, -93.7777, 0.55 ) }
    dend_36 { pt3dadd( 76.7973, -25.5392, -95.483, 0.28 ) }
    dend_36 { pt3dadd( 76.8923, -26.1049, -96.6648, 0.55 ) }
    dend_36 { pt3dadd( 77.0533, -27.0633, -98.6671, 0.28 ) }
    dend_36 { pt3dadd( 77.2004, -28.1711, -101.253, 0.28 ) }
    dend_36 { pt3dadd( 77.2317, -28.6663, -102.457, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 164.379, -15.4358, -26.0695, 0.28 ) }
    dend_33 { pt3dadd( 167.02, -17.8442, -24.2119, 0.28 ) }
    dend_33 { pt3dadd( 170.365, -20.9122, -21.4148, 0.28 ) }
    dend_33 { pt3dadd( 172.483, -22.8677, -19.4906, 0.55 ) }
    dend_33 { pt3dadd( 173.749, -23.9047, -18.3558, 0.28 ) }
    dend_33 { pt3dadd( 174.423, -24.4611, -17.7369, 0.28 ) }
    dend_33 { pt3dadd( 177.762, -27.2305, -14.7433, 0.55 ) }
    dend_33 { pt3dadd( 178.526, -27.7972, -13.9627, 0.28 ) }
    dend_33 { pt3dadd( 180.346, -29.2557, -11.7473, 0.55 ) }
    dend_33 { pt3dadd( 181.903, -30.5611, -9.9052, 0.28 ) }
    dend_33 { pt3dadd( 183.255, -31.6231, -8.43974, 0.55 ) }
    dend_33 { pt3dadd( 184.846, -32.9468, -6.80945, 0.55 ) }
    dend_33 { pt3dadd( 187.389, -35.206, -4.61228, 0.55 ) }
    dend_33 { pt3dadd( 188.003, -35.7729, -4.1007, 0.55 ) }
    dend_33 { pt3dadd( 190.212, -37.9146, -2.22202, 0.28 ) }
    dend_33 { pt3dadd( 191.073, -38.8083, -1.48498, 0.55 ) }
    dend_33 { pt3dadd( 192.265, -39.9386, -0.549308, 0.28 ) }
    dend_33 { pt3dadd( 193.95, -41.5835, 0.682765, 0.55 ) }
    dend_33 { pt3dadd( 196.745, -44.3525, 2.14201, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 164.379, -15.4358, -26.0695, 0.55 ) }
    dend_32 { pt3dadd( 161.081, -15.5413, -26.2508, 0.55 ) }
    dend_32 { pt3dadd( 158.402, -15.627, -26.398, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -0.948881, -32.1115, 4.11176, 0.83 ) }
    dend_17 { pt3dadd( -0.853851, -32.4478, 4.02936, 0.83 ) }
    dend_17 { pt3dadd( 0.447178, -35.4773, 3.30878, 0.83 ) }
    dend_17 { pt3dadd( 1.52594, -38.1231, 2.52083, 0.55 ) }
    dend_17 { pt3dadd( 2.38656, -40.2339, 1.8922, 0.55 ) }
    dend_17 { pt3dadd( 4.21584, -44.7205, 0.556047, 0.83 ) }
    dend_17 { pt3dadd( 6.43464, -50.1624, -1.06462, 0.55 ) }
    dend_17 { pt3dadd( 7.68215, -53.0207, -1.88915, 0.83 ) }
    dend_17 { pt3dadd( 10.0331, -57.6103, -3.13866, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -0.948881, -32.1115, 4.11176, 0.55 ) }
    dend_14 { pt3dadd( -3.38639, -32.6983, 2.63212, 0.55 ) }
    dend_14 { pt3dadd( -6.00275, -33.3282, 1.0439, 0.55 ) }
    dend_14 { pt3dadd( -9.09138, -34.0718, -0.830997, 0.55 ) }
    dend_14 { pt3dadd( -12.842, -34.9747, -3.10774, 0.55 ) }
    dend_14 { pt3dadd( -14.9704, -35.4871, -4.39971, 0.55 ) }
    dend_14 { pt3dadd( -15.3979, -35.5901, -4.65925, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -14.7249, -131.173, 90.8735, 0.55 ) }
    dend_7 { pt3dadd( -14.7597, -134.44, 93.2361, 0.55 ) }
    dend_7 { pt3dadd( -14.1862, -137.875, 95.2666, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -14.7249, -131.173, 90.8735, 0.55 ) }
    dend_4 { pt3dadd( -15.3654, -137.976, 94.7037, 0.55 ) }
    dend_4 { pt3dadd( -16.3575, -144.608, 98.7527, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -50.458, 41.765, -20.6004, 0.28 ) }
    dend_59 { pt3dadd( -51.9004, 43.7595, -18.809, 0.28 ) }
    dend_59 { pt3dadd( -52.4338, 44.5249, -18.0424, 0.55 ) }
    dend_59 { pt3dadd( -53.9502, 46.7486, -15.7781, 0.28 ) }
    dend_59 { pt3dadd( -54.7177, 47.8383, -14.7677, 0.55 ) }
    dend_59 { pt3dadd( -56.8304, 50.7756, -12.1351, 0.28 ) }
    dend_59 { pt3dadd( -58.9776, 53.7608, -9.45952, 0.55 ) }
    dend_59 { pt3dadd( -62.5188, 58.455, -4.95925, 0.28 ) }
    dend_59 { pt3dadd( -63.2727, 59.4629, -4.00091, 0.55 ) }
    dend_59 { pt3dadd( -64.9442, 61.809, -1.98876, 0.28 ) }
    dend_59 { pt3dadd( -65.5961, 62.7798, -1.20464, 0.55 ) }
    dend_59 { pt3dadd( -73.1262, 69.2302, 5.93182, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -81.8166, 76.632, 10.2826, 0.55 ) }
    dend_59 { pt3dadd( -89.108, 84.5846, 16.0124, 0.55 ) }
    dend_59 { pt3dadd( -94.9002, 94.0338, 21.1509, 0.55 ) }
    dend_59 { pt3dadd( -102.01, 102.875, 25.6794, 0.55 ) }
    dend_59 { pt3dadd( -109.93, 109.974, 31.6896, 0.55 ) }
    dend_59 { pt3dadd( -116.853, 116.386, 39.4489, 0.55 ) }
    dend_59 { pt3dadd( -122.447, 121.827, 48.8473, 0.55 ) }
    dend_59 { pt3dadd( -128.13, 127.911, 57.7879, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -50.458, 41.765, -20.6004, 0.55 ) }
    dend_58 { pt3dadd( -53.19, 41.3192, -18.0847, 0.55 ) }
    dend_58 { pt3dadd( -54.6087, 41.0314, -16.7622, 0.28 ) }
    dend_58 { pt3dadd( -55.6645, 40.8172, -15.778, 0.55 ) }
    dend_58 { pt3dadd( -56.5445, 40.6387, -14.9577, 0.28 ) }
    dend_58 { pt3dadd( -57.1608, 40.5137, -14.3832, 0.55 ) }
    dend_58 { pt3dadd( -58.8603, 40.169, -12.7989, 0.28 ) }
    dend_58 { pt3dadd( -60.0372, 39.7736, -11.8676, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -150.653, -114.608, -1.69046, 0.55 ) }
    dend_54 { pt3dadd( -154.506, -124.422, 0.223031, 0.55 ) }
    dend_54 { pt3dadd( -158.094, -134.036, 3.3061, 0.55 ) }
    dend_54 { pt3dadd( -160.951, -144.285, 4.57849, 0.55 ) }
    dend_54 { pt3dadd( -164.837, -153.929, 7.16887, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -150.653, -114.608, -1.69046, 0.55 ) }
    dend_53 { pt3dadd( -154.358, -118.634, -5.85844, 0.55 ) }
    dend_53 { pt3dadd( -157.924, -121.816, -10.804, 0.55 ) }
    dend_53 { pt3dadd( -161.863, -125.724, -14.8683, 0.55 ) }
    dend_53 { pt3dadd( -167.106, -128.592, -18.2729, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -149.884, -104.709, -4.4007, 0.55 ) }
    dend_51 { pt3dadd( -154.529, -108.979, -9.66983, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -149.884, -104.709, -4.4007, 0.55 ) }
    dend_50 { pt3dadd( -152.683, -112.112, -2.44981, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 94.2803, -31.4456, -125.39, 0.28 ) }
    dend_41 { pt3dadd( 96.5843, -33.1658, -127.544, 0.28 ) }
    dend_41 { pt3dadd( 97.6546, -33.9648, -128.545, 0.55 ) }
    dend_41 { pt3dadd( 99.6955, -35.4886, -130.453, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 94.2803, -31.4456, -125.39, 0.55 ) }
    dend_40 { pt3dadd( 93.7227, -31.5172, -127.024, 0.55 ) }
    dend_40 { pt3dadd( 92.6073, -31.6604, -130.291, 0.28 ) }
    dend_40 { pt3dadd( 92.244, -31.707, -131.355, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 77.2317, -28.6663, -102.457, 0.28 ) }
    dend_38 { pt3dadd( 77.5427, -30.4081, -106.995, 0.28 ) }
    dend_38 { pt3dadd( 77.6966, -31.2706, -109.243, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 77.2317, -28.6663, -102.457, 0.55 ) }
    dend_37 { pt3dadd( 74.988, -28.1357, -102.218, 0.55 ) }
    dend_37 { pt3dadd( 68.7312, -26.6561, -101.551, 0.28 ) }
    dend_37 { pt3dadd( 67.2448, -26.3046, -101.393, 0.55 ) }
    dend_37 { pt3dadd( 63.1788, -25.3431, -100.959, 0.28 ) }
    dend_37 { pt3dadd( 60.558, -24.7234, -100.68, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 10.0331, -57.6103, -3.13866, 0.83 ) }
    dend_23 { pt3dadd( 10.0203, -57.886, -3.18281, 0.83 ) }
    dend_23 { pt3dadd( 9.93899, -61.5017, -3.68632, 0.83 ) }
    dend_23 { pt3dadd( 9.72186, -64.1946, -3.81833, 0.83 ) }
    dend_23 { pt3dadd( 9.43847, -66.7861, -3.62813, 0.83 ) }
    dend_23 { pt3dadd( 9.04086, -70.2321, -3.08587, 0.83 ) }
    dend_23 { pt3dadd( 8.53284, -74.1964, -2.28329, 0.83 ) }
    dend_23 { pt3dadd( 8.06717, -78.6325, -1.17487, 0.83 ) }
    dend_23 { pt3dadd( 7.68767, -82.9483, 0.0888137, 0.83 ) }
    dend_23 { pt3dadd( 6.85435, -88.2088, 1.64946, 0.83 ) }
    dend_23 { pt3dadd( 6.29635, -90.6078, 2.28459, 0.83 ) }
    dend_23 { pt3dadd( 5.82839, -92.4075, 2.65599, 0.83 ) }
    dend_23 { pt3dadd( 4.83375, -95.8506, 3.3254, 0.83 ) }
    dend_23 { pt3dadd( 3.94943, -98.936, 3.73433, 0.83 ) }
    dend_23 { pt3dadd( 2.13484, -105.527, 3.76813, 0.83 ) }
    dend_23 { pt3dadd( 1.00956, -109.121, 3.31973, 0.83 ) }
    dend_23 { pt3dadd( -0.118578, -112.424, 2.67441, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 10.0331, -57.6103, -3.13866, 0.55 ) }
    dend_18 { pt3dadd( 9.15209, -59.1929, -2.8991, 0.55 ) }
    dend_18 { pt3dadd( 8.51774, -60.3429, -2.63247, 0.55 ) }
    dend_18 { pt3dadd( 8.15093, -61.0829, -2.39123, 0.55 ) }
    dend_18 { pt3dadd( 7.66123, -62.2506, -1.91296, 0.55 ) }
    dend_18 { pt3dadd( 6.78943, -64.574, -0.830758, 0.55 ) }
    dend_18 { pt3dadd( 6.16355, -66.3375, 0.186722, 0.55 ) }
    dend_18 { pt3dadd( 5.701, -67.7563, 1.15332, 0.55 ) }
    dend_18 { pt3dadd( 5.22451, -69.189, 2.23991, 0.55 ) }
    dend_18 { pt3dadd( 4.835, -70.3782, 3.20567, 0.28 ) }
    dend_18 { pt3dadd( 4.53837, -71.3532, 4.14043, 0.55 ) }
    dend_18 { pt3dadd( 4.02017, -73.1311, 6.10012, 0.55 ) }
    dend_18 { pt3dadd( 3.67287, -74.2186, 7.43351, 0.55 ) }
    dend_18 { pt3dadd( 3.4701, -74.8268, 8.1761, 0.55 ) }
    dend_18 { pt3dadd( 3.18541, -75.5393, 9.0235, 0.83 ) }
    dend_18 { pt3dadd( 2.28651, -77.6455, 11.3985, 0.28 ) }
    dend_18 { pt3dadd( 1.98489, -78.342, 12.165, 0.55 ) }
    dend_18 { pt3dadd( 1.46944, -79.6022, 13.4973, 0.28 ) }
    dend_18 { pt3dadd( 1.31809, -79.9916, 13.9366, 0.55 ) }
    dend_18 { pt3dadd( 1.00935, -80.9108, 14.9368, 0.28 ) }
    dend_18 { pt3dadd( 0.827579, -81.4327, 15.4661, 0.55 ) }
    dend_18 { pt3dadd( 0.015183, -83.1052, 16.7551, 0.55 ) }
    dend_18 { pt3dadd( -0.573509, -87.7921, 21.7391, 0.55 ) }
    dend_18 { pt3dadd( -0.756428, -92.3009, 26.915, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -15.3979, -35.5901, -4.65925, 0.55 ) }
    dend_16 { pt3dadd( -18.5468, -36.4933, -7.6574, 0.55 ) }
    dend_16 { pt3dadd( -19.462, -36.6838, -8.50876, 0.55 ) }
    dend_16 { pt3dadd( -21.7636, -37.1526, -10.5621, 0.55 ) }
    dend_16 { pt3dadd( -26.7775, -38.0111, -14.8692, 0.28 ) }
    dend_16 { pt3dadd( -27.5218, -38.1172, -15.4671, 0.55 ) }
    dend_16 { pt3dadd( -30.6482, -38.6274, -17.8352, 0.55 ) }
    dend_16 { pt3dadd( -34.9414, -39.2828, -20.6865, 0.55 ) }
    dend_16 { pt3dadd( -36.5748, -39.4818, -21.7458, 0.28 ) }
    dend_16 { pt3dadd( -37.9885, -39.5577, -22.6075, 0.28 ) }
    dend_16 { pt3dadd( -40.3986, -39.6078, -23.7766, 0.55 ) }
    dend_16 { pt3dadd( -43.3112, -39.5533, -25.3218, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -45.9564, -39.2956, -26.8322, 0.55 ) }
    dend_16 { pt3dadd( -47.9681, -38.9325, -27.981, 0.55 ) }
    dend_16 { pt3dadd( -49.33, -38.576, -28.8285, 0.55 ) }
    dend_16 { pt3dadd( -53.2938, -37.366, -31.4596, 0.55 ) }
    dend_16 { pt3dadd( -57.4081, -35.8042, -34.1826, 0.55 ) }
    dend_16 { pt3dadd( -59.0885, -35.0605, -35.2754, 0.28 ) }
    dend_16 { pt3dadd( -60.6905, -34.3829, -36.3412, 0.55 ) }
    dend_16 { pt3dadd( -63.9865, -33.2156, -38.4439, 0.28 ) }
    dend_16 { pt3dadd( -65.1026, -32.8531, -39.1363, 0.83 ) }
    dend_16 { pt3dadd( -67.1833, -32.136, -40.2887, 0.28 ) }
    dend_16 { pt3dadd( -68.7074, -31.709, -40.9076, 0.55 ) }
    dend_16 { pt3dadd( -70.9368, -31.1591, -41.7529, 0.28 ) }
    dend_16 { pt3dadd( -71.8223, -30.926, -42.0619, 0.55 ) }
    dend_16 { pt3dadd( -73.4697, -30.5144, -42.5433, 0.55 ) }
    dend_16 { pt3dadd( -75.9062, -29.6429, -43.2051, 0.55 ) }
    dend_16 { pt3dadd( -77.4758, -28.9676, -43.5585, 0.28 ) }
    dend_16 { pt3dadd( -78.7053, -28.2568, -43.7589, 0.55 ) }
    dend_16 { pt3dadd( -80.1148, -27.2383, -44.0236, 0.28 ) }
    dend_16 { pt3dadd( -80.3428, -27.0523, -44.078, 0.55 ) }
    dend_16 { pt3dadd( -82.449, -25.3251, -44.9879, 0.28 ) }
    dend_16 { pt3dadd( -83.9761, -24.0572, -45.8314, 0.55 ) }
    dend_16 { pt3dadd( -85.9688, -22.2738, -47.2677, 0.83 ) }
    dend_16 { pt3dadd( -87.607, -20.7853, -48.6614, 0.28 ) }
    dend_16 { pt3dadd( -88.0321, -20.4089, -49.0679, 0.55 ) }
    dend_16 { pt3dadd( -91.3085, -17.5949, -52.3826, 0.28 ) }
    dend_16 { pt3dadd( -91.8855, -17.1193, -53.0244, 0.55 ) }
    dend_16 { pt3dadd( -93.5626, -15.6046, -55.0522, 0.28 ) }
    dend_16 { pt3dadd( -93.9959, -15.2152, -55.5792, 0.55 ) }
    dend_16 { pt3dadd( -95.104, -14.1945, -56.8465, 0.28 ) }
    dend_16 { pt3dadd( -95.8861, -13.4555, -57.689, 0.55 ) }
    dend_16 { pt3dadd( -97.6295, -11.7738, -59.2695, 0.28 ) }
    dend_16 { pt3dadd( -98.6834, -10.8514, -60.1523, 0.55 ) }
    dend_16 { pt3dadd( -100.967, -9.02258, -61.8819, 0.28 ) }
    dend_16 { pt3dadd( -101.657, -8.51668, -62.3803, 0.55 ) }
    dend_16 { pt3dadd( -102.76, -7.80753, -63.1075, 0.28 ) }
    dend_16 { pt3dadd( -103.693, -7.20436, -63.674, 0.55 ) }
    dend_16 { pt3dadd( -105.637, -5.96592, -64.7213, 0.28 ) }
    dend_16 { pt3dadd( -106.225, -5.60452, -65.0143, 0.55 ) }
    dend_16 { pt3dadd( -110.57, -2.80845, -66.9837, 0.28 ) }
    dend_16 { pt3dadd( -112.062, -1.70108, -67.544, 0.55 ) }
    dend_16 { pt3dadd( -114.685, 0.429061, -68.3714, 0.28 ) }
    dend_16 { pt3dadd( -115.854, 1.44369, -68.7096, 0.55 ) }
    dend_16 { pt3dadd( -118.529, 3.76586, -69.3079, 0.28 ) }
    dend_16 { pt3dadd( -119.52, 4.57507, -69.4731, 0.55 ) }
    dend_16 { pt3dadd( -123.177, 7.17341, -69.8103, 0.28 ) }
    dend_16 { pt3dadd( -124.749, 8.05442, -69.9103, 0.55 ) }
    dend_16 { pt3dadd( -127.083, 8.93292, -69.9784, 0.55 ) }
    dend_16 { pt3dadd( -128.538, 9.38575, -69.9735, 0.55 ) }
    dend_16 { pt3dadd( -131.503, 10.2542, -69.7209, 0.28 ) }
    dend_16 { pt3dadd( -134.41, 11.096, -69.2806, 0.28 ) }
    dend_16 { pt3dadd( -136.821, 11.8123, -68.8424, 0.55 ) }
    dend_16 { pt3dadd( -139.668, 12.9694, -68.0043, 0.28 ) }
    dend_16 { pt3dadd( -141.003, 13.7394, -67.4095, 0.55 ) }
    dend_16 { pt3dadd( -143.986, 16.1572, -65.7042, 0.28 ) }
    dend_16 { pt3dadd( -145.346, 17.7847, -64.4301, 0.55 ) }
    dend_16 { pt3dadd( -146.12, 19.0345, -63.3681, 0.28 ) }
    dend_16 { pt3dadd( -146.9, 20.4593, -61.8502, 0.55 ) }
    dend_16 { pt3dadd( -147.801, 22.3126, -59.753, 0.28 ) }
    dend_16 { pt3dadd( -148.157, 22.979, -58.9608, 0.55 ) }
    dend_16 { pt3dadd( -150.224, 26.085, -55.2188, 0.28 ) }
    dend_16 { pt3dadd( -150.939, 27.0854, -53.9629, 0.55 ) }
    dend_16 { pt3dadd( -152.647, 29.3575, -50.8933, 0.28 ) }
    dend_16 { pt3dadd( -153.58, 30.5733, -49.224, 0.55 ) }
    dend_16 { pt3dadd( -154.35, 31.5707, -47.8539, 0.55 ) }
    dend_16 { pt3dadd( -155.288, 32.7496, -46.2541, 0.28 ) }
    dend_16 { pt3dadd( -155.826, 33.3504, -45.5478, 0.55 ) }
    dend_16 { pt3dadd( -157.669, 35.4469, -43.3503, 0.28 ) }
    dend_16 { pt3dadd( -158.579, 36.706, -42.1915, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -15.3979, -35.5901, -4.65925, 0.55 ) }
    dend_15 { pt3dadd( -15.517, -35.7372, -5.94215, 0.55 ) }
    dend_15 { pt3dadd( -15.5768, -35.7523, -7.23747, 0.55 ) }
    dend_15 { pt3dadd( -15.5526, -35.6753, -8.85462, 0.55 ) }
    dend_15 { pt3dadd( -15.4606, -35.5204, -10.1708, 0.55 ) }
    dend_15 { pt3dadd( -14.1004, -33.7559, -18.7342, 0.55 ) }
    dend_15 { pt3dadd( -13.778, -33.1547, -20.6755, 0.55 ) }
    dend_15 { pt3dadd( -13.3181, -32.0706, -23.5622, 0.55 ) }
    dend_15 { pt3dadd( -12.9925, -31.2398, -25.6096, 0.55 ) }
    dend_15 { pt3dadd( -12.6204, -30.3305, -27.5895, 0.28 ) }
    dend_15 { pt3dadd( -11.8962, -28.7933, -30.5854, 0.55 ) }
    dend_15 { pt3dadd( -10.5875, -26.4091, -34.9574, 0.28 ) }
    dend_15 { pt3dadd( -10.5648, -26.2611, -35.378, 0.55 ) }
    dend_15 { pt3dadd( -11.1725, -25.7044, -38.1605, 0.28 ) }
    dend_15 { pt3dadd( -11.9112, -25.4055, -39.9593, 0.55 ) }
    dend_15 { pt3dadd( -12.9138, -25.2048, -41.832, 0.55 ) }
    dend_15 { pt3dadd( -14.7906, -25.0288, -45.1739, 0.55 ) }
    dend_15 { pt3dadd( -18.4631, -24.7379, -51.7424, 0.55 ) }
    dend_15 { pt3dadd( -20.8587, -24.6042, -56.1965, 0.55 ) }
    dend_15 { pt3dadd( -21.6468, -24.5786, -57.7553, 0.55 ) }
    dend_15 { pt3dadd( -26.5706, -24.3518, -68.1166, 0.55 ) }
    dend_15 { pt3dadd( -27.7791, -24.2609, -70.976, 0.55 ) }
    dend_15 { pt3dadd( -28.3371, -24.2251, -72.6307, 0.55 ) }
    dend_15 { pt3dadd( -29.317, -24.2812, -76.6013, 0.55 ) }
    dend_15 { pt3dadd( -31.1794, -24.9656, -86.2675, 0.55 ) }
    dend_15 { pt3dadd( -31.584, -25.2674, -88.8922, 0.28 ) }
    dend_15 { pt3dadd( -31.71, -25.5172, -90.4025, 0.55 ) }
    dend_15 { pt3dadd( -31.8662, -25.98, -92.6444, 0.28 ) }
    dend_15 { pt3dadd( -31.873, -26.2664, -93.5687, 0.55 ) }
    dend_15 { pt3dadd( -31.2637, -27.5899, -96.2203, 0.28 ) }
    dend_15 { pt3dadd( -30.0405, -29.3833, -97.4747, 0.55 ) }
    dend_15 { pt3dadd( -29.2843, -30.6397, -98.1597, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( -28.5403, -32.008, -98.6715, 0.55 ) }
    dend_15 { pt3dadd( -27.8748, -33.4739, -99.0416, 0.28 ) }
    dend_15 { pt3dadd( -27.6119, -34.2173, -99.2114, 0.55 ) }
    dend_15 { pt3dadd( -26.9846, -36.1537, -99.5302, 0.28 ) }
    dend_15 { pt3dadd( -26.8797, -36.7205, -99.6762, 0.55 ) }
    dend_15 { pt3dadd( -26.3885, -39.955, -100.655, 0.28 ) }
    dend_15 { pt3dadd( -26.2322, -41.442, -101.29, 0.55 ) }
    dend_15 { pt3dadd( -26.0009, -44.6045, -103.004, 0.28 ) }
    dend_15 { pt3dadd( -25.9476, -45.7649, -103.77, 0.55 ) }
    dend_15 { pt3dadd( -25.778, -49.5736, -106.567, 0.28 ) }
    dend_15 { pt3dadd( -25.754, -50.4972, -107.284, 0.55 ) }
    dend_15 { pt3dadd( -25.8049, -53.405, -109.595, 0.28 ) }
    dend_15 { pt3dadd( -25.8204, -54.0861, -110.07, 0.55 ) }
    dend_15 { pt3dadd( -25.9024, -55.8805, -111.276, 0.28 ) }
    dend_15 { pt3dadd( -25.9992, -56.9149, -112.067, 0.55 ) }
    dend_15 { pt3dadd( -26.1107, -57.9282, -112.933, 0.55 ) }
    dend_15 { pt3dadd( -26.3236, -59.9512, -114.649, 0.28 ) }
    dend_15 { pt3dadd( -26.44, -61.2042, -115.903, 0.55 ) }
    dend_15 { pt3dadd( -26.6219, -64.344, -120.006, 0.28 ) }
    dend_15 { pt3dadd( -26.6774, -65.3618, -121.662, 0.55 ) }
    dend_15 { pt3dadd( -26.6841, -66.0112, -122.801, 0.28 ) }
    dend_15 { pt3dadd( -26.6586, -66.6074, -123.955, 0.55 ) }
    dend_15 { pt3dadd( -26.4802, -68.2893, -127.503, 0.28 ) }
    dend_15 { pt3dadd( -26.3024, -69.5999, -130.153, 0.55 ) }
    dend_15 { pt3dadd( -25.8264, -72.1142, -134.484, 0.28 ) }
    dend_15 { pt3dadd( -25.6695, -72.8977, -135.845, 0.55 ) }
    dend_15 { pt3dadd( -25.207, -74.3614, -138.335, 0.28 ) }
    dend_15 { pt3dadd( -25.0064, -74.8484, -139.125, 0.55 ) }
    dend_15 { pt3dadd( -24.5212, -75.6502, -140.262, 0.28 ) }
    dend_15 { pt3dadd( -24.0235, -76.3387, -141.202, 0.55 ) }
    dend_15 { pt3dadd( -22.4427, -78.0931, -143.543, 0.28 ) }
    dend_15 { pt3dadd( -20.5661, -79.9819, -146.195, 0.28 ) }
    dend_15 { pt3dadd( -19.523, -80.8769, -147.453, 0.28 ) }
    dend_15 { pt3dadd( -18.528, -81.7188, -148.8, 0.55 ) }
    dend_15 { pt3dadd( -17.0585, -82.8386, -150.78, 0.28 ) }
    dend_15 { pt3dadd( -16.3862, -83.323, -151.645, 0.83 ) }
    dend_15 { pt3dadd( -14.6081, -84.6042, -153.768, 0.28 ) }
    dend_15 { pt3dadd( -13.8865, -85.1801, -154.738, 0.55 ) }
    dend_15 { pt3dadd( -10.9176, -87.8826, -159.178, 0.28 ) }
    dend_15 { pt3dadd( -9.58241, -89.2436, -161.555, 0.28 ) }
    dend_15 { pt3dadd( -8.69767, -90.2205, -163.375, 0.55 ) }
    dend_15 { pt3dadd( -8.27465, -90.7999, -164.526, 0.55 ) }
    dend_15 { pt3dadd( -7.32645, -92.3531, -167.743, 0.28 ) }
    dend_15 { pt3dadd( -6.54664, -93.9163, -170.824, 0.55 ) }
    dend_15 { pt3dadd( -5.85299, -95.4168, -173.626, 0.28 ) }
    dend_15 { pt3dadd( -5.31995, -96.7937, -176.243, 0.55 ) }
    dend_15 { pt3dadd( -4.86627, -97.9108, -178.399, 0.28 ) }
    dend_15 { pt3dadd( -4.41071, -98.7248, -180.113, 0.55 ) }
    dend_15 { pt3dadd( -3.14162, -100.499, -184.139, 0.28 ) }
    dend_15 { pt3dadd( -2.44039, -101.404, -186.126, 0.55 ) }
    dend_15 { pt3dadd( -1.31228, -102.782, -189.037, 0.28 ) }
    dend_15 { pt3dadd( -0.335862, -103.849, -191.385, 0.55 ) }
    dend_15 { pt3dadd( 1.99267, -106.109, -196.9, 0.28 ) }
    dend_15 { pt3dadd( 2.85816, -106.89, -199.256, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -14.1862, -137.875, 95.2666, 0.55 ) }
    dend_9 { pt3dadd( -14.0506, -148.042, 100.045, 0.55 ) }
    dend_9 { pt3dadd( -12.7398, -158.963, 102.337, 0.55 ) }
    dend_9 { pt3dadd( -12.1419, -169.523, 106.125, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -14.1862, -137.875, 95.2666, 0.55 ) }
    dend_8 { pt3dadd( -13.1728, -147.956, 103.285, 0.55 ) }
    dend_8 { pt3dadd( -14.4641, -156.836, 112.582, 0.55 ) }
    dend_8 { pt3dadd( -16.4172, -163.624, 123.402, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -16.3575, -144.608, 98.7527, 0.55 ) }
    dend_6 { pt3dadd( -16.1708, -149.546, 101.821, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -16.3575, -144.608, 98.7527, 0.55 ) }
    dend_5 { pt3dadd( -17.2419, -150.866, 102.227, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -0.118578, -112.424, 2.67441, 0.83 ) }
    dend_25 { pt3dadd( 0.469143, -116.048, 2.78721, 0.83 ) }
    dend_25 { pt3dadd( 1.18742, -119.121, 3.01175, 0.83 ) }
    dend_25 { pt3dadd( 1.9014, -122.175, 3.23494, 0.83 ) }
    dend_25 { pt3dadd( 2.57946, -125.076, 3.44691, 0.83 ) }
    dend_25 { pt3dadd( 3.62438, -129.547, 3.77356, 0.83 ) }
    dend_25 { pt3dadd( 4.66176, -133.985, 4.09785, 0.83 ) }
    dend_25 { pt3dadd( 5.72088, -136.956, 4.52857, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -0.118578, -112.424, 2.67441, 0.55 ) }
    dend_24 { pt3dadd( 0.739671, -114.19, 2.12158, 0.55 ) }
    dend_24 { pt3dadd( 1.28651, -115.559, 1.50274, 0.55 ) }
    dend_24 { pt3dadd( 1.60643, -116.563, 0.98451, 0.55 ) }
    dend_24 { pt3dadd( 1.76449, -117.719, 0.338004, 0.83 ) }
    dend_24 { pt3dadd( 1.79466, -119.019, -0.48954, 0.55 ) }
    dend_24 { pt3dadd( 1.82417, -120.29, -1.29898, 0.83 ) }
    dend_24 { pt3dadd( 1.72798, -121.657, -2.24821, 0.55 ) }
    dend_24 { pt3dadd( 1.6346, -122.447, -2.86182, 0.83 ) }
    dend_24 { pt3dadd( 1.14184, -124.985, -4.96729, 0.55 ) }
    dend_24 { pt3dadd( 0.550235, -126.958, -6.64755, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -0.756428, -92.3009, 26.915, 0.55 ) }
    dend_20 { pt3dadd( -3.44118, -99.2569, 32.5215, 0.55 ) }
    dend_20 { pt3dadd( -7.1495, -105.193, 38.6891, 0.55 ) }
    dend_20 { pt3dadd( -11.2414, -110.211, 45.405, 0.55 ) }
    dend_20 { pt3dadd( -15.8952, -114.075, 52.5066, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -0.756428, -92.3009, 26.915, 0.55 ) }
    dend_19 { pt3dadd( -1.41681, -98.3444, 32.6711, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 5.72088, -136.956, 4.52857, 0.55 ) }
    dend_27 { pt3dadd( 5.77725, -139.575, 5.12278, 0.55 ) }
    dend_27 { pt3dadd( 5.95182, -142.929, 5.94906, 0.55 ) }
    dend_27 { pt3dadd( 6.11492, -146.094, 6.71191, 0.55 ) }
    dend_27 { pt3dadd( 6.20008, -148.342, 7.22484, 0.55 ) }
    dend_27 { pt3dadd( 6.2984, -152.347, 8.08665, 0.55 ) }
    dend_27 { pt3dadd( 6.69615, -163.612, 10.1998, 0.55 ) }
    dend_27 { pt3dadd( 6.89502, -167.439, 10.7407, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 7.02356, -170.135, 10.9876, 0.55 ) }
    dend_27 { pt3dadd( 7.1553, -173.208, 11.0234, 0.55 ) }
    dend_27 { pt3dadd( 7.18373, -175.576, 10.8506, 0.55 ) }
    dend_27 { pt3dadd( 7.37438, -181.114, 10.1941, 0.55 ) }
    dend_27 { pt3dadd( 7.37402, -185.308, 9.71483, 0.55 ) }
    dend_27 { pt3dadd( 7.46019, -188.069, 9.46779, 0.55 ) }
    dend_27 { pt3dadd( 7.71936, -195.239, 9.19263, 0.55 ) }
    dend_27 { pt3dadd( 7.8989, -200.064, 9.22291, 0.55 ) }
    dend_27 { pt3dadd( 8.2177, -206.296, 9.60067, 0.55 ) }
    dend_27 { pt3dadd( 8.75992, -213.39, 10.5474, 0.55 ) }
    dend_27 { pt3dadd( 9.37867, -218.15, 11.4295, 0.55 ) }
    dend_27 { pt3dadd( 9.82282, -220.97, 12.0124, 0.55 ) }
    dend_27 { pt3dadd( 10.1843, -223.566, 12.5507, 0.55 ) }
    dend_27 { pt3dadd( 10.6703, -226.853, 13.0723, 0.55 ) }
    dend_27 { pt3dadd( 11.661, -234.754, 13.8244, 0.55 ) }
    dend_27 { pt3dadd( 12.1259, -237.815, 13.9871, 0.55 ) }
    dend_27 { pt3dadd( 12.5607, -241.218, 14.1597, 0.55 ) }
    dend_27 { pt3dadd( 13.1683, -246.324, 14.4002, 0.55 ) }
    dend_27 { pt3dadd( 13.4638, -250.238, 14.6533, 0.55 ) }
    dend_27 { pt3dadd( 13.5262, -253.941, 14.8838, 0.55 ) }
    dend_27 { pt3dadd( 13.4318, -257.46, 15.1317, 0.55 ) }
    dend_27 { pt3dadd( 13.2904, -260.892, 15.433, 0.55 ) }
    dend_27 { pt3dadd( 13.2002, -263.335, 15.6208, 0.55 ) }
    dend_27 { pt3dadd( 13.0539, -267.329, 15.7873, 0.55 ) }
    dend_27 { pt3dadd( 12.7509, -272.109, 15.6371, 0.55 ) }
    dend_27 { pt3dadd( 12.6341, -274.43, 15.38, 0.55 ) }
    dend_27 { pt3dadd( 12.5277, -276.464, 14.9965, 0.55 ) }
    dend_27 { pt3dadd( 12.464, -280.307, 14.0144, 0.55 ) }
    dend_27 { pt3dadd( 12.3877, -282.74, 13.3284, 0.55 ) }
    dend_27 { pt3dadd( 12.3462, -285.744, 12.5903, 0.55 ) }
    dend_27 { pt3dadd( 12.2592, -287.854, 12.2133, 0.55 ) }
    dend_27 { pt3dadd( 11.9705, -293.34, 11.465, 0.55 ) }
    dend_27 { pt3dadd( 11.703, -297.45, 11.2162, 0.55 ) }
    dend_27 { pt3dadd( 11.2699, -303.821, 11.3695, 0.55 ) }
    dend_27 { pt3dadd( 11.1426, -307.95, 11.8394, 0.55 ) }
    dend_27 { pt3dadd( 10.9991, -312.288, 12.4782, 0.28 ) }
    dend_27 { pt3dadd( 10.9106, -314.03, 12.8134, 0.28 ) }
    dend_27 { pt3dadd( 10.7388, -318.27, 14.0113, 0.28 ) }
    dend_27 { pt3dadd( 10.595, -322.194, 15.4318, 0.28 ) }
    dend_27 { pt3dadd( 10.9617, -327.429, 17.7569, 0.28 ) }
    dend_27 { pt3dadd( 12.801, -339.219, 19.7856, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 5.72088, -136.956, 4.52857, 0.55 ) }
    dend_26 { pt3dadd( 7.1493, -137.672, 5.38552, 0.55 ) }
    dend_26 { pt3dadd( 9.97788, -139.429, 7.36502, 0.55 ) }
    dend_26 { pt3dadd( 12.3627, -141.121, 9.18172, 0.28 ) }
    dend_26 { pt3dadd( 14.8807, -143.027, 11.2144, 0.55 ) }
    dend_26 { pt3dadd( 16.3036, -144.232, 12.6751, 0.28 ) }
    dend_26 { pt3dadd( 18.6528, -146.387, 15.4859, 0.55 ) }
    dend_26 { pt3dadd( 19.466, -147.492, 17.0144, 0.28 ) }
    dend_26 { pt3dadd( 19.7229, -147.891, 17.6517, 0.28 ) }
    dend_26 { pt3dadd( 20.1719, -148.472, 18.7671, 0.55 ) }
    dend_26 { pt3dadd( 22.0833, -150.424, 22.874, 0.28 ) }
    dend_26 { pt3dadd( 22.9327, -151.196, 24.5688, 0.55 ) }
    dend_26 { pt3dadd( 25.7699, -153.46, 29.2172, 0.28 ) }
    dend_26 { pt3dadd( 27.4085, -154.597, 31.5812, 0.28 ) }
    dend_26 { pt3dadd( 29.5372, -156.053, 34.3592, 0.55 ) }
    dend_26 { pt3dadd( 32.89, -158.306, 38.1223, 0.28 ) }
    dend_26 { pt3dadd( 33.375, -158.607, 38.5703, 0.55 ) }
    dend_26 { pt3dadd( 35.8561, -160.079, 40.5846, 0.28 ) }
    dend_26 { pt3dadd( 36.094, -160.216, 40.7391, 0.55 ) }
    dend_26 { pt3dadd( 38.1336, -161.757, 42.1622, 0.28 ) }
    dend_26 { pt3dadd( 39.0669, -162.583, 42.903, 0.55 ) }
    dend_26 { pt3dadd( 46.7591, -168.771, 49.0937, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -15.8952, -114.075, 52.5066, 0.55 ) }
    dend_22 { pt3dadd( -17.5173, -116.65, 58.1203, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -15.8952, -114.075, 52.5066, 0.55 ) }
    dend_21 { pt3dadd( -19.7841, -119.685, 58.1138, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_55 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_61 ModelViewParmSubset_3.append()
    dend_56 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_60 ModelViewParmSubset_3.append()
    dend_57 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_7 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_59 ModelViewParmSubset_3.append()
    dend_58 ModelViewParmSubset_3.append()
    dend_54 ModelViewParmSubset_3.append()
    dend_53 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 8.936579E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 5
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_29 nseg = 3
    dend_2 nseg = 3
    dend_61 nseg = 15
    dend_48 nseg = 7
    dend_45 nseg = 5
    dend_42 nseg = 7
    dend_35 nseg = 3
    dend_31 nseg = 5
    dend_30 nseg = 9
    dend_12 nseg = 9
    dend_10 nseg = 5
    dend_3 nseg = 5
    dend_60 nseg = 3
    dend_33 nseg = 3
    dend_59 nseg = 7
    dend_54 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 3
    dend_16 nseg = 9
    dend_15 nseg = 13
    dend_27 nseg = 11
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dSTUT214_L6_BP_871d8b9502_0_0


