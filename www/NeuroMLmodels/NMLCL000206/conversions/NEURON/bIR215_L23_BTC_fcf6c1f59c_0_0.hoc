// Cell: bIR215_L23_BTC_fcf6c1f59c_0_0
/*
{
  "id" : "bIR215_L23_BTC_fcf6c1f59c_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.701782, -14.5938, 2.84454, 2.73269", "0.624028, -13.2198, 2.58654, 4.41229", "0.546274, -11.8458, 2.32855, 5.84991", "0.46852, -10.4718, 2.07055, 7.31637", "0.390766, -9.09779, 1.81255, 8.68275", "0.313011, -7.72379, 1.55455, 10.1324", "0.235257, -6.34979, 1.29656, 11.1056", "0.157503, -4.97579, 1.03856, 11.7054", "0.0797487, -3.60179, 0.780562, 12.0256", "0.00199453, -2.22779, 0.522565, 12.4948", "-0.0757597, -0.853785, 0.264567, 12.7838", "-0.153514, 0.520216, 0.00657008, 12.9275", "-0.231268, 1.89422, -0.251427, 12.8186", "-0.309022, 3.26822, -0.509424, 12.3668", "-0.386777, 4.64222, -0.767422, 11.8063", "-0.464531, 6.01622, -1.02542, 10.8607", "-0.542285, 7.39022, -1.28342, 9.60756", "-0.620039, 8.76422, -1.54141, 8.32491", "-0.697793, 10.1382, -1.79941, 6.57632", "-0.775548, 11.5122, -2.05741, 4.5422", "-0.853302, 12.8862, -2.3154, 2.90642" ]
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-3.99768, 4.28759, 12.0608, 1.77", "-4.2091, 5.21556, 12.3693, 1.77", "-4.59059, 6.65388, 13.0412, 1.55", "-4.89421, 7.61559, 13.6079, 1.55", "-5.34115, 8.70645, 14.4356, 1.4", "-6.15286, 10.1991, 15.7697, 1.4", "-6.82206, 11.1714, 16.7369, 1.4", "-7.5835, 11.9321, 17.678, 1.69", "-8.24619, 12.4008, 18.3622, 1.69", "-9.51861, 13.0914, 19.419, 1.4", "-10.6485, 13.5944, 20.1983, 1.33", "-11.667, 14.0145, 20.644, 1.18", "-13.2832, 14.7361, 20.9657, 1.18", "-14.4122, 15.3211, 20.9982, 1.18", "-15.5398, 16.005, 20.9732, 1.33", "-17.0101, 17.0992, 20.8624, 1.4", "-19.5173, 19.4688, 20.6296, 1.62", "-20.44, 20.5843, 20.5585, 1.69", "-21.3723, 21.92, 20.4872, 1.33", "-22.5272, 23.881, 20.4523, 1.62", "-23.0635, 25.0694, 20.5382, 1.62", "-23.4508, 26.3718, 20.9208, 1.84", "-23.5886, 27.0739, 21.4049, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500003629291099
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "1.09232, -14.5417, 2.30081, 3.98", "1.09232, -14.5417, 2.30081, 3.98", "1.19829, -15.8754, 2.30081, 3.98", "1.33426, -17.5869, 2.30081, 3.76", "1.46972, -19.2919, 2.30081, 3.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500003629291099
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.877678, 13.0001, -4.94919, 2.58", "-0.877678, 13.0001, -4.94919, 2.58", "-0.337241, 14.7325, -4.59086, 2.14", "-0.038973, 15.7245, -4.37463, 2.14", "0.254149, 16.7826, -4.14823, 1.92", "0.652897, 18.4093, -3.79556, 1.69", "0.872409, 19.4407, -3.5873, 1.69", "1.03206, 20.4325, -3.41282, 1.69", "1.16827, 21.9006, -3.2136, 1.92", "1.18304, 22.7905, -3.16484, 2.06", "1.10901, 24.1052, -3.27877, 1.99", "1.0198, 24.968, -3.48912, 1.84", "0.89428, 26.2095, -3.92294, 1.69", "0.774922, 27.2417, -4.34799, 1.77", "0.618144, 28.5267, -4.95701, 1.69", "0.411429, 30.3949, -5.94521, 1.92", "0.277596, 31.8544, -6.81193, 2.14", "0.207422, 33.1364, -7.59838, 2.43" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500003629291099
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.853302, 12.8862, -2.3154, 0.892373", "-1.70079, 27.8622, -2.3154, 0.892373", "-2.54828, 42.8383, -2.3154, 0.892373" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-23.5886, 27.0739, 21.4049, 0.66", "-25.2919, 28.1252, 23.3338, 0.66", "-26.1161, 28.7173, 24.1149, 0.59", "-27.1613, 29.5122, 24.9731, 0.59", "-27.9393, 30.0705, 25.532, 0.52", "-28.8813, 30.6794, 26.1382, 0.66", "-29.5433, 31.0804, 26.5275, 0.52", "-30.1983, 31.5015, 26.8671, 0.52", "-31.0475, 31.9973, 27.4, 0.44", "-31.698, 32.3054, 27.8966, 0.66", "-32.4411, 32.5621, 28.5758, 0.52", "-33.1048, 32.7499, 29.2436, 0.74", "-34.8549, 33.1784, 31.1721, 1.03", "-35.8499, 33.3977, 32.3882, 0.66", "-36.6966, 33.5833, 33.5517, 0.59", "-37.2969, 33.7411, 34.4914, 0.74", "-45.9603, 37.8031, 41.245, 0.74" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-23.5886, 27.0739, 21.4049, 0.88", "-24.1148, 30.7544, 22.0901, 0.88", "-24.3657, 32.0243, 22.2635, 0.88", "-24.7466, 33.6091, 22.4869, 0.88", "-25.2326, 35.4222, 22.7507, 0.88", "-25.6891, 37.1489, 23.0294, 0.81", "-26.1022, 38.782, 23.337, 0.81", "-26.4241, 39.8887, 23.4953, 1.03", "-26.8507, 41.1687, 23.7021, 0.81", "-27.3935, 42.5672, 23.9502, 0.96", "-27.8756, 43.7011, 24.16, 0.88", "-28.4408, 45.0482, 24.4013, 0.74", "-28.8177, 45.969, 24.569, 0.66", "-29.2263, 47.0495, 24.7578, 0.74", "-29.6456, 48.3273, 24.9383, 0.81", "-29.9241, 49.3255, 25.0697, 0.81", "-30.1835, 50.4837, 25.2302, 0.88", "-30.3704, 51.7303, 25.4158, 1.03", "-30.4779, 53.1823, 25.6639, 0.96", "-30.5088, 54.998, 25.9769, 1.03", "-30.515, 56.2917, 26.1802, 1.03", "-30.5494, 58.185, 26.467, 1.11", "-30.6351, 59.3854, 26.5926, 0.96", "-30.8411, 60.8787, 26.6763, 0.88", "-31.2124, 62.5405, 26.7499, 0.74", "-31.6491, 63.9413, 26.8215, 0.81", "-32.0292, 64.8942, 26.9119, 0.96", "-32.9142, 66.6833, 27.1673, 1.11", "-33.3999, 67.5157, 27.3471, 1.11", "-34.1898, 68.7127, 27.6808, 0.96", "-34.9395, 69.8031, 28.0386, 0.74", "-35.7579, 71.0516, 28.4734, 0.74", "-36.208, 71.7631, 28.7143, 0.66", "-36.6806, 72.5274, 28.9662, 0.59", "-37.4689, 73.7726, 29.2674, 0.81", "-37.8718, 74.406, 29.3792, 0.96", "-38.3694, 75.2156, 29.471, 0.96", "-39.0519, 76.4542, 29.537, 0.59", "-39.8071, 78.1244, 29.5611, 0.59", "-40.2674, 79.4464, 29.5324, 0.66", "-40.5773, 80.8314, 29.464, 0.96", "-40.6919, 81.9037, 29.3827, 1.03", "-40.6987, 83.0812, 29.3204, 0.81", "-40.5775, 84.5736, 29.278, 0.52", "-40.433, 85.6741, 29.3203, 0.37", "-40.3362, 86.7179, 29.482, 0.37", "-40.3862, 87.4485, 29.7014, 0.44", "-40.767, 88.9841, 30.4327, 0.44", "-41.1251, 89.873, 30.8921, 0.66", "-41.6498, 90.9903, 31.4141, 1.03", "-42.018, 91.8299, 31.7232, 1.18", "-42.3524, 92.8388, 31.9884, 1.25", "-42.5073, 93.9416, 32.1533, 1.4", "-42.4116, 95.6984, 32.2264, 1.25", "-42.1667, 96.8291, 32.1927, 1.18", "-41.6479, 98.3607, 31.9918, 0.66", "-41.0244, 99.7814, 31.7098, 0.66", "-40.1529, 101.425, 31.318, 0.66", "-39.6166, 102.293, 31.05, 0.81", "-38.9055, 103.327, 30.7048, 0.96", "-38.1142, 104.501, 30.3158, 0.81", "-37.4513, 105.561, 29.9616, 0.88", "-36.957, 106.547, 29.6647, 0.88", "-36.3392, 108.251, 29.2967, 0.74", "-36.0801, 109.183, 29.184, 0.74", "-35.7763, 110.496, 29.1778, 0.59", "-35.6348, 111.259, 29.2235, 0.59", "-35.4575, 112.545, 29.3087, 0.59", "-35.286, 114.459, 29.4089, 0.74", "-35.2616, 115.605, 29.4469, 0.81", "-35.2956, 116.953, 29.422, 0.81", "-35.3948, 118.784, 29.3183, 0.74", "-35.4528, 120.03, 29.1879, 0.74", "-35.4946, 121.257, 28.9936, 0.74", "-35.5413, 123.291, 28.593, 0.88", "-35.5422, 125.354, 28.1117, 1.03", "-35.5262, 126.683, 27.7622, 1.03", "-35.4799, 127.678, 27.5255, 1.69", "-35.348, 129.546, 27.1229, 1.4", "-35.2397, 130.959, 26.8541, 0.74", "-35.117, 132.507, 26.6178, 0.74", "-35.0895, 133.188, 26.5205, 0.88", "-35.1144, 134.692, 26.3102, 1.03", "-35.1575, 135.518, 26.203, 1.11", "-35.2272, 137.164, 25.9879, 0.66", "-35.2307, 138.244, 25.8142, 0.66", "-35.0839, 139.743, 25.5083, 0.81", "-34.8317, 141.079, 25.088, 1.03", "-34.5473, 142.311, 24.5864, 0.88", "-34.3134, 143.256, 24.1644, 0.66", "-34.0414, 144.529, 23.545, 0.66", "-33.9202, 145.698, 22.9602, 0.88", "-34.0502, 147.065, 22.3621, 0.74", "-34.4109, 148.108, 21.9518, 0.66", "-34.7272, 148.833, 21.7144, 0.66", "-35.2587, 150.1, 21.3431, 0.52", "-35.5196, 150.991, 21.0925, 0.44", "-35.5324, 152.12, 20.7764, 0.44", "-35.2506, 152.985, 20.5499, 0.44", "-34.2749, 155.033, 19.9113, 0.52", "-33.5553, 156.359, 19.476, 0.66", "-32.6454, 157.854, 18.9571, 0.59", "-32.1116, 158.707, 18.6557, 0.66", "-31.4014, 159.922, 18.2365, 0.74", "-30.6807, 161.477, 17.7075, 0.81", "-30.4115, 162.29, 17.4183, 0.88", "-30.0351, 163.806, 16.8799, 0.74", "-29.8359, 164.809, 16.4919, 0.74", "-29.6238, 166.145, 15.8825, 0.81", "-29.4378, 167.709, 15.0755, 0.74", "-29.3765, 168.877, 14.4658, 0.88", "-29.3945, 169.487, 14.149, 0.88", "-29.5866, 171.282, 13.2083, 0.96", "-29.7416, 172.477, 12.591, 1.25", "-29.8741, 173.563, 12.0843, 0.74", "-30.0152, 174.742, 11.6317, 0.74", "-30.1486, 175.855, 11.3001, 1.03", "-30.2768, 177.079, 11.0222, 1.25", "-30.3647, 178.22, 10.838, 1.03", "-30.3898, 179.63, 10.6603, 0.88", "-30.2865, 181.427, 10.4548, 0.88", "-30.0648, 183.2, 10.2687, 0.88", "-29.7325, 185.09, 10.0492, 0.96", "-29.3999, 186.727, 9.8611, 1.03", "-29.0802, 188.278, 9.66597, 1.03", "-28.7028, 190.212, 9.46952, 0.88", "-28.4396, 191.649, 9.36479, 0.88", "-28.2399, 193.103, 9.28102, 0.88", "-28.2304, 194.156, 9.26468, 0.66", "-28.5341, 195.331, 9.40297, 0.66", "-29.4506, 196.95, 9.82245, 0.74", "-29.9407, 197.572, 10.043, 0.74", "-30.5696, 198.253, 10.3137, 0.74", "-31.5242, 199.26, 10.6668, 0.59", "-32.4621, 200.386, 10.8238, 0.88", "-32.7171, 200.819, 10.7843, 1.03", "-32.9624, 201.649, 10.521, 0.81", "-33.0145, 202.608, 10.1412, 0.66", "-32.9125, 204.095, 9.53339, 0.59", "-32.6544, 206.12, 8.68953, 0.59", "-32.4766, 207.441, 8.16739, 0.66", "-32.2757, 209.122, 7.59515, 0.81", "-32.0975, 210.57, 7.18043, 0.66", "-31.7763, 212.764, 6.67886, 0.81", "-31.5343, 214.287, 6.39207, 0.88", "-31.2782, 215.95, 6.11015, 0.96", "-31.1066, 217.401, 5.83456, 0.96", "-31.0276, 218.793, 5.52771, 0.96", "-31.0542, 220.696, 5.01028, 0.74", "-31.1726, 222.072, 4.57252, 0.74", "-31.3213, 223.058, 4.24738, 0.74", "-31.5369, 224.232, 3.86169, 0.74", "-31.9047, 226.128, 3.25063, 0.74", "-32.1888, 227.497, 2.91255, 0.88", "-32.5782, 229.429, 2.57515, 0.88", "-32.9305, 231.42, 2.32573, 0.88", "-33.1756, 233.052, 2.15948, 0.88", "-33.3499, 234.557, 2.00877, 0.81", "-33.5286, 236.347, 1.83073, 0.66", "-33.7333, 237.721, 1.6491, 0.59", "-33.9868, 238.667, 1.48864, 0.74", "-34.332, 239.504, 1.3091, 0.74", "-34.8189, 240.577, 1.01713, 0.74", "-35.1608, 241.43, 0.774572, 0.66", "-35.5325, 242.599, 0.434586, 0.66", "-35.8824, 243.993, 0.10946, 0.52", "-36.1379, 245.336, -0.162078, 0.52", "-36.3532, 246.785, -0.470776, 0.59", "-36.6553, 248.761, -0.950562, 1.11", "-36.8688, 249.861, -1.26418, 1.33", "-37.1067, 250.79, -1.55267, 1.33", "-37.6315, 252.307, -2.03471, 0.74", "-38.2944, 253.835, -2.49877, 0.59", "-38.9826, 255.178, -2.88398, 0.66", "-39.6397, 256.436, -3.21958, 0.66", "-40.3008, 257.757, -3.60068, 0.74", "-41.0367, 259.18, -4.05937, 0.81", "-41.6216, 260.213, -4.39418, 0.81", "-42.2609, 261.247, -4.73194, 0.66", "-43.4437, 263.038, -5.36852, 0.66", "-44.5812, 264.559, -5.99538, 0.52", "-45.5598, 265.704, -6.53795, 0.44", "-46.1582, 266.344, -6.86934, 0.59", "-46.7668, 266.923, -7.17024, 0.59", "-47.5664, 267.61, -7.5249, 0.59", "-48.5291, 268.417, -7.90709, 0.66", "-49.0998, 268.974, -8.10456, 0.66", "-49.8455, 269.85, -8.41432, 0.66", "-50.5705, 270.783, -8.76351, 0.59", "-51.2406, 271.695, -9.13893, 0.44", "-51.8645, 272.551, -9.54371, 0.44", "-52.4893, 273.37, -9.99592, 0.88", "-52.9982, 273.984, -10.3743, 1.03" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "1.46972, -19.2919, 2.30081, 1.47", "2.56443, -19.9792, 1.6099, 1.47", "3.43471, -20.6481, 1.01582, 1.03", "4.40525, -21.4113, 0.3217, 0.44", "4.82695, -21.726, 0.0394002, 0.66", "5.49359, -22.1917, -0.365526, 0.81", "6.11421, -22.5941, -0.710174, 0.74", "6.92778, -23.1049, -1.11638, 0.81", "8.09784, -23.7366, -1.55496, 0.44", "8.88657, -24.1001, -1.79589, 0.81", "9.58265, -24.3842, -1.94782, 1.11", "10.3206, -24.6473, -2.04112, 1.11", "11.174, -24.898, -2.07645, 0.74", "12.0591, -25.1045, -2.04727, 0.52", "13.5659, -25.3917, -1.89681, 0.52", "14.7326, -25.5649, -1.74885, 0.52", "15.3645, -25.6238, -1.64902, 0.44", "16.4017, -25.6548, -1.44822, 0.66", "17.0581, -25.6221, -1.30605, 1.18", "17.7512, -25.5313, -1.14281, 1.47", "18.5334, -25.3637, -0.941065, 1.03", "19.2753, -25.1773, -0.782637, 0.81", "19.9724, -25.0088, -0.666835, 0.59", "20.8924, -24.8012, -0.590071, 0.81", "21.5998, -24.6456, -0.580044, 0.81", "22.5377, -24.434, -0.68958, 0.52", "23.0689, -24.3179, -0.809537, 0.52", "23.9369, -24.1463, -1.06803, 0.74", "24.8949, -23.9606, -1.374, 0.66", "25.7251, -23.8002, -1.65971, 0.66", "27.1072, -23.5146, -2.15113, 0.52", "27.9479, -23.3076, -2.46856, 0.44", "28.8231, -23.0812, -2.77449, 0.44", "29.681, -22.8702, -2.99413, 0.74", "30.2618, -22.7405, -3.07518, 0.88", "30.9391, -22.6102, -3.10213, 0.74", "32.2184, -22.3833, -3.0536, 0.37", "32.892, -22.2776, -3.07394, 0.37", "33.9538, -22.1809, -3.14613, 0.66", "34.7473, -22.1521, -3.20925, 0.66", "35.4762, -22.1379, -3.25156, 0.81", "35.9844, -22.1313, -3.27109, 0.81", "37.9648, -22.0823, -3.31496, 0.66", "39.2075, -22.0062, -3.37199, 0.66", "40.0081, -21.9454, -3.44449, 0.81", "40.8935, -21.849, -3.58523, 0.81", "41.7387, -21.7211, -3.78457, 0.66", "42.2638, -21.6035, -3.94253, 0.59", "42.8492, -21.3869, -4.19954, 0.59", "43.8088, -20.9194, -4.79709, 0.59", "44.9595, -20.3135, -5.61801, 0.96", "45.5629, -20.0149, -6.06183, 1.11", "46.0537, -19.7803, -6.40059, 1.18", "46.9292, -19.367, -6.87898, 0.81", "47.9772, -18.8706, -7.24642, 0.52", "48.6491, -18.5604, -7.33613, 0.66", "49.4877, -18.2045, -7.28993, 0.66", "50.2002, -17.897, -7.18248, 0.44", "51.2623, -17.4205, -6.95999, 0.44", "51.9628, -17.0512, -6.75684, 0.52", "52.5752, -16.642, -6.55542, 0.66", "53.1285, -16.1901, -6.35089, 1.11", "53.4864, -15.8468, -6.20122, 1.25", "53.7953, -15.5334, -6.06523, 1.25", "54.3226, -14.9796, -5.8353, 1.25", "54.8688, -14.4196, -5.58761, 0.74", "55.6806, -13.653, -5.24902, 0.88", "56.0227, -13.3393, -5.12067, 0.88", "56.3771, -13.0087, -4.98063, 0.88", "56.9962, -12.4107, -4.78608, 0.59", "57.7631, -11.6289, -4.62209, 0.52", "58.2893, -11.0715, -4.5869, 0.52", "59.0535, -10.3176, -4.59754, 0.81", "59.6468, -9.75436, -4.62473, 0.81", "60.7228, -8.79009, -4.70083, 0.96", "61.2623, -8.33978, -4.75081, 1.11", "61.993, -7.78182, -4.8691, 1.4", "63.3272, -6.81809, -5.1316, 0.81", "64.24, -6.18348, -5.34423, 0.81", "64.976, -5.63876, -5.53681, 0.81", "65.3536, -5.32, -5.62974, 0.81", "66.304, -4.37939, -5.89754, 0.52", "67.1006, -3.37896, -6.17941, 0.66", "67.5438, -2.65116, -6.39874, 0.59", "67.9597, -1.84592, -6.60232, 0.37", "68.3772, -0.920081, -6.77631, 1.03", "68.5721, -0.467056, -6.83223, 1.25", "68.805, 0.0516889, -6.85799, 1.25", "69.2613, 0.896187, -6.86992, 1.03", "69.698, 1.5705, -6.86045, 1.18", "70.2933, 2.41028, -6.83004, 1.03", "70.8595, 3.21547, -6.78258, 1.18", "71.262, 3.80324, -6.73312, 1.18", "71.7476, 4.50635, -6.65695, 0.74", "72.1321, 5.03093, -6.58847, 0.52", "72.5867, 5.5829, -6.5089, 0.52", "73.4235, 6.41869, -6.36986, 0.81", "74.0214, 6.94396, -6.27416, 0.88", "74.5122, 7.3357, -6.19784, 0.81", "75.3706, 7.91052, -6.068, 0.37", "75.9715, 8.23197, -5.99533, 0.29", "76.9908, 8.68183, -5.94157, 0.59", "77.3711, 8.83593, -5.94926, 0.66", "78.2107, 9.18555, -6.01066, 0.37", "79.2183, 9.64417, -6.13161, 0.59", "80.1316, 10.1229, -6.2477, 0.81", "81.3854, 10.8344, -6.38714, 1.99", "82.0294, 11.1975, -6.44756, 2.65", "82.4916, 11.4438, -6.4779, 2.65", "83.5443, 11.9872, -6.51617, 1.18", "84.6718, 12.5555, -6.50442, 0.44", "85.6281, 12.9973, -6.41801, 0.74", "86.2819, 13.2729, -6.30205, 0.74", "86.9206, 13.5429, -6.16615, 0.81", "87.3421, 13.7205, -6.06919, 0.81", "87.9975, 13.9888, -5.90102, 0.59", "88.7319, 14.2597, -5.68365, 0.44", "89.4323, 14.5069, -5.43127, 0.37", "90.0633, 14.7143, -5.1775, 0.37", "90.9979, 14.9921, -4.81862, 0.74", "91.5553, 15.133, -4.62983, 0.88", "92.4307, 15.3007, -4.40457, 0.66", "93.0008, 15.3925, -4.32047, 0.52", "93.6997, 15.4911, -4.25274, 0.52", "94.6745, 15.6479, -4.178, 0.88", "95.4034, 15.8049, -4.1533, 0.88", "96.3493, 16.0695, -4.14781, 0.66", "97.4822, 16.4524, -4.15104, 0.44", "98.2501, 16.7576, -4.1352, 0.44", "99.0475, 17.0989, -4.08581, 0.66", "99.8624, 17.4501, -3.99898, 0.52", "100.487, 17.7198, -3.91568, 0.52", "101.301, 18.0675, -3.7884, 0.74", "102.078, 18.3892, -3.62116, 0.44", "103.087, 18.8132, -3.38166, 0.44", "104.017, 19.2191, -3.13077, 0.88", "104.65, 19.5185, -2.93771, 1.03", "105.506, 19.9643, -2.64741, 0.74", "106.649, 20.6527, -2.22036, 0.52", "107.139, 20.9763, -2.02363, 0.96", "107.577, 21.2981, -1.84125, 0.96", "108.184, 21.7499, -1.59457, 0.81", "109.081, 22.3598, -1.26688, 0.52", "109.698, 22.7158, -1.07443, 0.52", "110.753, 23.2065, -0.797272, 0.59", "111.351, 23.4328, -0.669868, 0.81", "112.038, 23.6437, -0.553934, 0.81", "112.783, 23.823, -0.459212, 0.66", "113.396, 23.9394, -0.406645, 0.59", "114.354, 24.1177, -0.345462, 0.59", "115.681, 24.4419, -0.279958, 0.44", "116.447, 24.657, -0.286662, 0.74", "117.057, 24.8497, -0.314854, 0.74", "117.344, 24.9483, -0.334005, 0.74", "118.25, 25.273, -0.432188, 0.44", "119.251, 25.6363, -0.567459, 0.44", "120.684, 26.2051, -0.736907, 0.74", "121.334, 26.4911, -0.841777, 0.74", "121.958, 26.8001, -0.963168, 0.74", "122.739, 27.231, -1.13286, 0.52", "123.42, 27.6486, -1.28844, 0.37", "124.07, 28.1013, -1.41942, 0.66", "124.575, 28.5153, -1.48452, 1.03", "125.005, 28.8762, -1.52331, 1.18", "125.318, 29.1343, -1.55849, 1.18", "126.058, 29.7095, -1.64991, 0.59", "126.663, 30.1421, -1.74371, 0.44", "127.13, 30.4532, -1.8201, 0.44", "127.889, 30.9522, -1.93361, 0.81", "129.156, 31.7416, -2.13275, 1.11", "129.688, 32.0469, -2.215, 1.11", "130.198, 32.3178, -2.29191, 0.96", "130.703, 32.5778, -2.36944, 0.66", "131.457, 32.9663, -2.48077, 0.37", "132.333, 33.4103, -2.59807, 0.52", "133.217, 33.8374, -2.67634, 0.59", "133.865, 34.1467, -2.72678, 0.44", "134.655, 34.5231, -2.79922, 0.37", "135.681, 35.025, -2.9039, 0.66", "136.315, 35.3508, -2.96593, 0.44", "136.943, 35.68, -3.02566, 0.44", "137.905, 36.1707, -3.07675, 0.88", "138.535, 36.4731, -3.06346, 1.03", "139.099, 36.7268, -2.99897, 1.03", "139.925, 37.0972, -2.81169, 0.29", "140.645, 37.4292, -2.58638, 0.29", "141.448, 37.812, -2.28044, 0.29", "142.136, 38.142, -1.97988, 0.44", "143.015, 38.5276, -1.55686, 1.11", "143.733, 38.8126, -1.21163, 1.4", "143.872, 38.8674, -1.14636, 1.55", "144.505, 39.1426, -0.863192, 0.88", "145.359, 39.5151, -0.551467, 0.29", "146.304, 39.8967, -0.257527, 0.29", "147.026, 40.169, -0.0678269, 0.52", "147.448, 40.3248, 0.0244548, 0.66", "147.926, 40.5128, 0.127191, 0.44", "148.661, 40.8327, 0.295516, 0.29", "149.228, 41.1129, 0.429157, 0.29", "150.133, 41.583, 0.638546, 0.66", "150.625, 41.8095, 0.755403, 1.11", "151.08, 41.9925, 0.841041, 0.81", "152.174, 42.4338, 0.982703, 0.52", "152.595, 42.6172, 0.997635, 0.74", "153.341, 42.9761, 0.968439, 0.74", "154.337, 43.5073, 0.847742, 0.81", "155.364, 44.0788, 0.625975, 0.44", "156.221, 44.5386, 0.351013, 0.81", "157.172, 45.0371, -0.0694835, 1.33", "157.711, 45.3134, -0.357877, 1.33", "158.273, 45.5886, -0.689327, 1.11", "159.53, 46.1434, -1.4545, 0.52", "160.627, 46.5146, -2.11206, 1.18", "161.481, 46.7279, -2.5999, 1.33", "162.325, 46.8931, -3.05236, 1.03", "163.424, 47.0751, -3.59936, 0.22", "164.183, 47.1816, -3.93188, 0.22", "166.131, 47.4332, -4.67115, 0.88", "166.837, 47.5198, -4.88266, 1.03", "167.447, 47.5774, -5.01972, 1.18", "168.251, 47.6206, -5.16, 0.96", "168.899, 47.6175, -5.27652, 0.66", "169.916, 47.5352, -5.44483, 0.44", "170.972, 47.3863, -5.58135, 0.66", "171.852, 47.2263, -5.67832, 0.74", "172.484, 47.0972, -5.73218, 0.74", "173.866, 46.7959, -5.80743, 0.37", "174.685, 46.6231, -5.81539, 0.52", "175.694, 46.4218, -5.76067, 0.29", "176.807, 46.2388, -5.659, 0.81", "177.294, 46.1677, -5.60015, 1.47", "177.762, 46.0855, -5.54048, 1.62", "178.317, 45.9529, -5.47102, 1.62", "179.882, 45.4817, -5.39583, 0.37", "180.874, 45.1128, -5.43521, 0.29", "181.927, 44.627, -5.5563, 0.29", "182.826, 44.1429, -5.68704, 0.29", "183.84, 43.5569, -5.8521, 1.47", "184.59, 43.1073, -6.00616, 1.69", "184.988, 42.8669, -6.1223, 1.84", "186.228, 42.1832, -6.57799, 0.52", "187.077, 41.83, -6.89535, 0.44", "187.727, 41.6513, -7.11944, 0.81", "188.415, 41.5311, -7.33865, 0.81", "189.363, 41.4306, -7.58783, 0.81", "190.78, 41.3908, -7.94275, 0.29", "191.935, 41.4587, -8.24548, 0.29", "192.489, 41.5153, -8.37602, 0.52", "193.365, 41.6114, -8.55502, 0.66", "194.404, 41.7107, -8.7297, 0.81", "195.26, 41.7891, -8.84742, 0.96", "195.993, 41.8662, -8.94446, 0.74", "197.093, 41.9938, -9.09739, 0.22", "198.123, 42.1383, -9.219, 0.22", "199.233, 42.3349, -9.31951, 0.22", "199.694, 42.4324, -9.33943, 0.44", "200.42, 42.5971, -9.33193, 0.44", "201.767, 42.9533, -9.25915, 0.29", "202.9, 43.2924, -9.16017, 1.03", "203.522, 43.5017, -9.07823, 1.25", "204.582, 43.8995, -8.93889, 0.22", "204.936, 44.0331, -8.89964, 0.37", "205.943, 44.423, -8.80657, 0.22", "206.313, 44.5788, -8.79528, 0.52", "206.959, 44.865, -8.80407, 0.59", "208.385, 45.4994, -8.8901, 0.22", "209.037, 45.7784, -8.96344, 0.59", "209.613, 46.0183, -9.06215, 0.59", "210.967, 46.5638, -9.38856, 0.29", "211.948, 46.9619, -9.68269, 0.22", "212.503, 47.1785, -9.90933, 0.22", "213.737, 47.569, -10.5603, 0.81", "214.575, 47.7864, -11.0628, 1.18", "215.401, 47.9521, -11.5799, 0.74", "216.206, 48.0528, -12.1164, 0.44", "217.524, 48.2663, -13.0756, 0.74", "218.55, 48.5226, -13.8942, 0.52", "219.122, 48.719, -14.3888, 0.52", "219.696, 48.965, -14.9003, 0.37", "220.865, 49.5644, -15.9735, 0.37", "222.019, 50.2452, -17.0754, 2.5", "223.859, 51.4913, -18.8369, 0.29", "224.283, 51.811, -19.2745, 0.29", "224.978, 52.371, -20.0832, 0.74", "225.476, 52.7839, -20.7108, 1.18", "226.092, 53.2831, -21.5164, 1.4", "226.496, 53.574, -22.054, 1.4", "227.829, 54.4918, -23.8032, 0.29", "228.767, 55.0768, -24.9981, 0.44", "229.826, 55.7105, -26.3275, 0.22", "230.48, 56.0944, -27.1511, 0.22", "231.101, 56.4747, -27.9811, 0.74", "231.465, 56.7169, -28.488, 0.88", "233.31, 58.0628, -31.0624, 0.29", "233.993, 58.6423, -32.0289, 0.52", "234.867, 59.5289, -33.3277, 0.81", "236.132, 60.9272, -35.2764, 0.81", "236.566, 61.4569, -35.9906, 0.29", "236.889, 61.9211, -36.5855, 0.37", "237.277, 62.7678, -37.4382, 0.22", "237.441, 63.2268, -37.8261, 0.81" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "1.46972, -19.2919, 2.30081, 3.68", "1.10996, -20.8235, 2.40977, 3.68", "0.680787, -22.5945, 2.51894, 3.32", "0.171892, -24.4855, 2.62796, 3.17", "-0.456007, -26.655, 2.76243, 3.09", "-0.968998, -28.3444, 2.86517, 2.8", "-1.42907, -29.8303, 2.97592, 2.73", "-1.87069, -31.1828, 3.09069, 2.65", "-2.27124, -32.3542, 3.20777, 2.65", "-2.67548, -33.5289, 3.33297, 2.65", "-3.11448, -34.7611, 3.49551, 2.65", "-3.67464, -36.304, 3.7397, 2.5", "-3.9014, -36.9462, 3.85879, 2.58", "-4.18152, -37.8088, 4.03902, 2.58", "-4.37696, -38.5614, 4.20715, 2.65" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "0.207422, 33.1364, -7.59838, 1.4", "0.574128, 34.2465, -7.76659, 1.4", "1.08389, 36.1021, -7.97475, 1.11", "1.47767, 37.7412, -8.12404, 0.88", "1.93222, 39.6282, -8.1567, 0.96", "2.38885, 41.3724, -8.32142, 1.11", "2.88365, 43.0154, -8.56525, 0.88", "3.39449, 44.6476, -8.92769, 0.88", "3.70703, 45.4525, -9.28361, 1.11", "4.6196, 47.0996, -10.5044, 1.11", "6.53854, 49.6777, -13.2487, 1.4", "7.08309, 50.3352, -14.0743, 1.62", "7.70547, 51.0894, -15.0515, 1.11", "9.10498, 52.8139, -17.1554, 0.88", "9.8553, 53.8113, -18.1881, 1.47", "10.3815, 54.5776, -18.8164, 1.47", "11.2674, 55.9496, -19.5079, 1.18", "12.0991, 57.2601, -20.0153, 1.33", "12.8156, 58.3862, -20.3351, 1.33", "13.5872, 59.6523, -20.6245, 1.18", "14.5859, 61.4057, -21.0205, 1.03", "15.2201, 62.6928, -21.3516, 0.88", "15.7744, 64.0421, -21.7909, 0.88", "16.1642, 65.464, -22.3718, 1.03", "16.4864, 67.7423, -23.5016, 1.18", "16.5649, 69.1422, -24.2886, 1.11", "16.5954, 71.0877, -25.4536, 1.25", "16.6227, 72.3881, -26.2624, 1.11", "16.7486, 73.9447, -27.2622, 0.96", "17.0214, 75.2209, -28.0559, 0.88", "17.6835, 76.7206, -28.8709, 0.88", "18.4405, 77.8862, -29.3771, 0.96", "19.1665, 78.7842, -29.639, 1.03", "20.0036, 79.7552, -29.8311, 1.03", "21.0038, 80.9427, -29.9805, 0.88", "21.5539, 81.7404, -30.055, 0.74", "22.2476, 83.3746, -30.2561, 1.69", "22.443, 84.315, -30.4044, 2.28", "22.5274, 85.2813, -30.5737, 2.28", "22.5645, 86.5211, -30.793, 2.06", "22.5922, 87.8433, -31.0267, 1.62", "22.6983, 89.4787, -31.3463, 1.18", "22.8252, 90.4685, -31.5653, 1.4", "23.0411, 91.5506, -31.8354, 1.4", "23.3715, 92.8808, -32.2571, 1.18", "23.683, 94.0559, -32.6862, 1.03", "24.2399, 96.0333, -33.5242, 0.81", "24.6077, 97.2341, -34.0765, 0.81", "24.9259, 98.2165, -34.537, 0.81", "25.3551, 99.4986, -35.1192, 0.96", "25.7149, 100.537, -35.5475, 1.33", "26.218, 101.941, -36.0242, 1.11", "26.7893, 103.468, -36.4133, 0.96", "27.1776, 104.398, -36.5973, 1.18", "27.6852, 105.53, -36.7794, 1.18", "28.2151, 106.677, -36.9251, 1.33", "28.6245, 107.598, -37.0568, 1.18", "28.9131, 108.298, -37.1606, 1.18", "29.3414, 109.339, -37.3568, 0.88", "29.789, 110.351, -37.5867, 0.74", "30.2923, 111.418, -37.8548, 0.74", "31.0527, 112.897, -38.2893, 0.88", "31.715, 114.056, -38.6417, 1.11", "32.3422, 115.115, -38.9979, 1.11", "32.8984, 116.036, -39.3007, 0.96", "33.662, 117.278, -39.6557, 1.18", "34.4767, 118.612, -39.9244, 0.96", "35.1025, 119.705, -40.0269, 0.81", "36.0826, 121.502, -40.006, 0.88", "36.7592, 122.707, -39.8545, 0.88", "37.3845, 123.809, -39.5957, 1.03", "37.9583, 124.82, -39.2889, 1.11", "38.5097, 125.837, -38.9476, 0.88", "39.1241, 126.986, -38.5765, 0.66", "39.6124, 127.879, -38.2832, 0.66", "40.2258, 129.047, -38.0136, 0.66", "41.2557, 131.147, -37.6956, 0.96", "41.8068, 132.47, -37.6054, 1.4", "42.1685, 133.505, -37.5914, 1.55", "42.394, 134.301, -37.5845, 1.84", "42.7148, 135.502, -37.5461, 1.92", "43.0185, 136.505, -37.4686, 1.77", "43.5597, 138.046, -37.2423, 1.25", "44.1123, 139.37, -36.9416, 1.18", "44.7134, 140.599, -36.595, 1.11", "45.3775, 141.788, -36.1878, 1.25", "46.151, 143.018, -35.6981, 1.33", "46.5984, 143.666, -35.4374, 1.33", "47.3798, 144.72, -35.0232, 1.25", "48.0811, 145.69, -34.7309, 0.74", "48.8711, 146.865, -34.5327, 0.52", "49.4236, 147.79, -34.4962, 0.52", "50.0227, 148.876, -34.517, 0.81", "50.8076, 150.403, -34.6448, 1.4", "51.4411, 151.721, -34.8702, 1.69", "51.8703, 152.669, -35.0947, 1.84", "52.2288, 153.466, -35.3905, 1.99" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "0.207422, 33.1364, -7.59838, 1.4", "-0.813538, 33.8034, -7.24053, 1.4", "-1.59791, 34.2765, -6.92806, 0.96", "-2.29439, 34.7187, -6.65737, 1.25", "-2.88245, 35.1314, -6.44223, 1.4", "-3.33461, 35.4807, -6.28661, 1.47", "-4.66062, 36.6003, -5.86055, 1.03", "-5.32042, 37.194, -5.643, 1.11", "-6.05441, 37.978, -5.41261, 1.11", "-6.72253, 38.8265, -5.22804, 1.03", "-7.22355, 39.521, -5.13186, 1.03", "-7.86709, 40.4495, -5.09272, 1.03", "-8.30915, 41.0591, -5.13706, 1.18", "-9.05001, 41.9244, -5.26054, 1.18", "-10.0848, 42.8142, -5.50852, 0.81", "-10.7909, 43.2183, -5.71226, 0.88", "-11.6047, 43.5235, -5.97206, 1.11", "-12.6087, 43.789, -6.30321, 0.96", "-13.2744, 43.9334, -6.51987, 0.96", "-14.2281, 44.1313, -6.81644, 0.88", "-15.0735, 44.3535, -7.05539, 0.81", "-16.1757, 44.7705, -7.29601, 1.11", "-16.6847, 45.0172, -7.38447, 1.25", "-17.1825, 45.3096, -7.46575, 1.25", "-17.9001, 45.7796, -7.56714, 0.88", "-18.5599, 46.2469, -7.64311, 0.88", "-19.1782, 46.7061, -7.68903, 0.96", "-19.9025, 47.2594, -7.70435, 0.96", "-20.4779, 47.6976, -7.69912, 1.03", "-21.0999, 48.1651, -7.67501, 1.25", "-21.7494, 48.6451, -7.62042, 1.25", "-22.1728, 48.9565, -7.57257, 1.11", "-22.6923, 49.3329, -7.49177, 1.25", "-23.1921, 49.6956, -7.37987, 1.4", "-23.6853, 50.0577, -7.24889, 1.4", "-24.296, 50.5116, -7.0705, 1.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.54828, 42.8383, -2.3154, 0.725043", "-3.39577, 57.8143, -2.3154, 0.725043", "-4.24326, 72.7904, -2.3154, 0.725043" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-45.9603, 37.8031, 41.245, 0.88", "-50.3859, 36.416, 53.6624, 0.88", "-56.0659, 33.703, 65.3339, 0.88", "-60.5596, 32.3035, 77.7254, 0.88", "-65.6998, 29.9865, 89.7248, 0.88", "-71.9272, 27.8877, 101.24, 0.88", "-80.3109, 25.5989, 111.257, 0.88", "-87.5253, 21.9218, 121.772, 0.88", "-92.4442, 18.8476, 133.699, 0.88", "-99.0678, 16.6174, 144.966, 0.88", "-103.892, 14.6916, 157.163, 0.88" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-45.9603, 37.8031, 41.245, 0.22", "-53.9458, 43.9929, 41.9335, 0.88", "-62.9722, 48.4882, 41.6665, 0.88", "-71.3905, 53.8814, 43.1675, 0.88", "-78.7415, 60.6182, 45.0521, 0.88", "-85.9094, 67.4613, 47.2577, 0.88", "-94.5139, 72.753, 47.4771, 0.88", "-103.536, 77.2181, 46.849, 0.88", "-111.878, 82.9351, 46.7908, 0.88", "-119.506, 89.6136, 46.8827, 0.88", "-126.2, 97.2605, 47.3054, 0.88", "-133.014, 104.609, 49.0164, 0.88", "-140.635, 110.876, 51.3322, 0.88", "-147.461, 117.006, 55.6545, 0.88", "-155.132, 121.069, 60.8055, 0.88", "-163.147, 123.177, 66.5231, 0.88" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-52.9982, 273.984, -10.3743, 0.66", "-54.3734, 275.425, -11.6857, 0.66", "-54.8055, 275.844, -12.0877, 0.66", "-55.2165, 276.225, -12.4526, 0.74", "-55.6065, 276.576, -12.7817, 0.88", "-55.92, 276.851, -13.0253, 0.88", "-56.3888, 277.264, -13.359, 0.74", "-56.8047, 277.627, -13.575, 0.52", "-57.161, 277.953, -13.7749, 0.96", "-57.4864, 278.259, -13.9585, 0.96", "-58.0275, 278.765, -14.2467, 0.37", "-58.4919, 279.192, -14.4741, 0.37", "-59.015, 279.655, -14.6957, 0.66", "-59.4042, 279.989, -14.8442, 0.81", "-59.8724, 280.382, -15.0115, 0.81", "-60.2679, 280.714, -15.1407, 0.66", "-60.6687, 281.032, -15.2719, 0.66", "-60.985, 281.265, -15.3725, 0.66", "-61.3493, 281.52, -15.4764, 0.37", "-61.6588, 281.757, -15.5675, 0.37", "-62.1916, 282.22, -15.7426, 0.74", "-62.494, 282.517, -15.8291, 0.74", "-62.959, 283.009, -15.9444, 0.29", "-63.3281, 283.412, -16.0314, 0.29", "-63.7499, 283.887, -16.1396, 0.66", "-63.9048, 284.065, -16.1854, 0.66", "-64.2995, 284.553, -16.3194, 0.52", "-64.4995, 284.818, -16.3919, 0.37", "-64.6885, 285.064, -16.4709, 0.37", "-64.9838, 285.401, -16.5998, 0.59", "-65.2811, 285.71, -16.7363, 1.11", "-65.6341, 286.092, -16.9011, 1.18", "-65.9048, 286.406, -17.0352, 0.96", "-66.3608, 286.968, -17.2366, 0.74", "-66.7242, 287.434, -17.3712, 0.66", "-67.044, 287.851, -17.4636, 0.37", "-67.4112, 288.35, -17.5478, 0.37", "-67.6555, 288.72, -17.5892, 0.52", "-67.9051, 289.149, -17.6456, 0.52", "-68.2509, 289.831, -17.7221, 0.66", "-68.4852, 290.332, -17.7606, 0.81", "-68.7327, 290.856, -17.7746, 0.81", "-69.1655, 291.701, -17.7594, 0.59", "-69.4708, 292.276, -17.717, 0.52", "-69.7023, 292.726, -17.656, 0.52", "-70.0088, 293.379, -17.5265, 0.44", "-70.2076, 293.836, -17.4262, 0.44", "-70.385, 294.262, -17.3267, 0.44", "-70.5373, 294.597, -17.2611, 0.44", "-70.6934, 294.899, -17.233, 0.44", "-70.9023, 295.261, -17.2801, 0.44", "-71.1141, 295.626, -17.4119, 0.59", "-71.3261, 296.024, -17.6399, 0.66", "-71.5409, 296.494, -17.94, 0.52", "-71.7655, 297.076, -18.3124, 0.52", "-71.9269, 297.572, -18.6182, 0.52", "-72.0857, 298.222, -19.0084, 0.59", "-72.2202, 298.957, -19.424, 0.59", "-72.3035, 299.559, -19.7529, 0.52", "-72.3737, 300.149, -20.0542, 0.52", "-72.4225, 300.512, -20.2383, 0.52", "-72.5687, 301.096, -20.5115, 0.44", "-72.724, 301.455, -20.6326, 0.44", "-72.9205, 301.792, -20.7191, 0.44", "-73.3125, 302.33, -20.8559, 0.44", "-73.7136, 302.811, -20.9661, 0.44", "-74.1451, 303.319, -21.0604, 0.44", "-74.5489, 303.838, -21.1272, 0.52", "-74.828, 304.285, -21.1718, 0.66", "-75.0525, 304.749, -21.2223, 0.37", "-75.2186, 305.235, -21.2763, 0.29", "-75.3613, 305.875, -21.3494, 0.44", "-75.4315, 306.498, -21.4196, 0.74", "-75.4397, 307.079, -21.4777, 1.03", "-75.3882, 307.526, -21.532, 1.03", "-75.294, 308.005, -21.6406, 0.88", "-75.1473, 308.673, -21.8588, 0.52", "-75.0516, 309.211, -22.0952, 0.52", "-75.0155, 309.49, -22.2769, 0.37", "-74.9304, 310.259, -22.8814, 0.37", "-74.8144, 311.058, -23.6124, 0.37", "-74.7356, 311.413, -23.9721, 0.37", "-74.6464, 311.796, -24.3713, 0.37", "-74.4899, 312.638, -25.2049, 0.37", "-74.447, 313.023, -25.5501, 0.29", "-74.4274, 313.595, -26.0012, 0.29", "-74.4148, 314.16, -26.4151, 0.29", "-74.4318, 314.733, -26.8218, 0.37", "-74.472, 315.15, -27.1261, 0.37", "-74.5747, 315.676, -27.5335, 0.37", "-74.6903, 316.257, -28.0466, 0.44", "-74.742, 316.573, -28.3503, 0.59", "-74.767, 316.961, -28.7776, 0.59", "-74.7461, 317.68, -29.6298, 0.74", "-74.7127, 318.218, -30.2676, 0.88", "-74.6736, 318.868, -31.0385, 0.81", "-74.6601, 319.431, -31.7097, 1.03", "-74.6887, 320.613, -33.1473, 0.74", "-74.7661, 321.241, -33.8968, 0.66", "-74.8366, 321.555, -34.306, 0.74", "-74.9783, 321.967, -34.8903, 0.74", "-75.1418, 322.283, -35.4185, 0.59", "-75.3607, 322.583, -36.0323, 0.44", "-75.7698, 322.931, -37.0574, 0.29", "-76.4862, 323.364, -38.8611, 0.74", "-76.6501, 323.442, -39.2941, 1.25", "-77.0258, 323.6, -40.3113, 1.77", "-77.3238, 323.719, -41.1078, 1.92", "-77.7212, 323.855, -42.1341, 0.74", "-77.9809, 323.927, -42.7581, 0.52", "-78.4154, 324.03, -43.6136, 0.52", "-78.7415, 324.083, -44.2249, 0.66", "-79.1627, 324.135, -44.9165, 0.52", "-79.7432, 324.212, -45.7549, 0.52", "-80.2818, 324.303, -46.4637, 0.52", "-80.8785, 324.417, -47.2367, 0.66", "-81.3052, 324.52, -47.7625, 0.66", "-81.6443, 324.645, -48.2332, 0.81", "-81.9486, 324.81, -48.7119, 0.59", "-82.1506, 324.952, -49.192, 0.59", "-82.5498, 325.284, -50.597, 0.81", "-82.7156, 325.424, -51.4923, 0.74", "-82.8731, 325.53, -53.2687, 0.88", "-82.8621, 325.445, -54.5362, 1.11", "-82.5935, 324.906, -57.4107, 0.74", "-82.4684, 324.701, -57.987, 0.88", "-82.1293, 324.172, -58.6996, 0.96", "-81.7273, 323.552, -59.098, 0.74", "-81.0049, 322.389, -59.3037, 0.66", "-79.8123, 320.472, -59.2549, 0.29", "-79.3377, 319.673, -59.0191, 0.29", "-78.795, 318.753, -58.6554, 0.29", "-78.4672, 318.181, -58.3562, 0.66", "-78.2741, 317.823, -58.1195, 0.74" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-52.9982, 273.984, -10.3743, 0.29", "-53.3975, 274.503, -10.237, 0.29", "-53.6089, 274.789, -10.1686, 0.37", "-53.8509, 275.111, -10.0844, 0.52", "-54.0134, 275.318, -10.0327, 0.66", "-54.3072, 275.66, -9.95554, 0.81", "-54.6196, 276.0, -9.89065, 1.03", "-54.8994, 276.286, -9.84152, 0.74", "-55.4068, 276.78, -9.79151, 0.29", "-55.6305, 276.987, -9.78762, 0.29", "-55.9182, 277.251, -9.78908, 0.37", "-56.2165, 277.535, -9.79874, 0.37", "-56.5915, 277.924, -9.80468, 0.44", "-56.7587, 278.136, -9.8044, 0.66", "-56.9563, 278.459, -9.80456, 0.81", "-57.1398, 278.809, -9.79994, 0.81", "-57.3014, 279.118, -9.79956, 0.52", "-57.4968, 279.494, -9.80505, 0.52", "-57.7151, 279.951, -9.81523, 0.52", "-57.9234, 280.441, -9.82814, 0.44", "-58.1001, 280.926, -9.85295, 0.37", "-58.3035, 281.539, -9.89923, 0.29", "-58.4549, 282.017, -9.93858, 0.44", "-58.6049, 282.533, -9.98692, 0.52", "-58.7105, 282.942, -10.0295, 0.37", "-58.8034, 283.355, -10.073, 0.37", "-58.8788, 283.695, -10.1092, 0.59", "-58.9421, 284.026, -10.1407, 0.59", "-59.0236, 284.4, -10.1793, 0.59", "-59.1468, 284.889, -10.2371, 0.37", "-59.305, 285.481, -10.3099, 0.29", "-59.4238, 286.016, -10.3606, 0.29", "-59.5105, 286.559, -10.4011, 0.29", "-59.5336, 286.83, -10.4182, 0.29", "-59.5429, 287.234, -10.4407, 0.44", "-59.5329, 287.523, -10.4579, 0.44", "-59.4977, 288.068, -10.5056, 0.59", "-59.4778, 288.366, -10.547, 0.74", "-59.4592, 288.694, -10.6067, 0.74", "-59.4294, 288.996, -10.6638, 0.59", "-59.3497, 289.531, -10.7574, 0.88", "-59.2808, 289.957, -10.8259, 1.18", "-59.208, 290.52, -10.9191, 0.37", "-59.1895, 290.74, -10.9578, 0.37", "-59.161, 291.231, -11.0462, 0.37", "-59.1149, 291.772, -11.1391, 0.29", "-59.0451, 292.27, -11.2208, 0.37", "-58.9476, 292.76, -11.2897, 0.29", "-58.8086, 293.262, -11.3712, 0.29", "-58.7434, 293.433, -11.4106, 0.29", "-58.4956, 293.886, -11.5479, 0.59", "-58.2592, 294.199, -11.6476, 0.74", "-58.0606, 294.413, -11.7161, 0.74", "-57.7092, 294.749, -11.8185, 0.66", "-57.2862, 295.116, -11.9326, 0.44", "-57.0115, 295.353, -12.001, 0.44", "-56.5923, 295.695, -12.0906, 0.88", "-56.4043, 295.827, -12.1183, 1.33", "-56.1663, 295.972, -12.157, 1.69", "-55.7524, 296.207, -12.2226, 1.84", "-55.0845, 296.602, -12.336, 0.29", "-54.6944, 296.875, -12.4161, 0.29", "-54.3131, 297.207, -12.5115, 0.29", "-53.7343, 297.826, -12.6605, 0.59", "-53.5097, 298.124, -12.7284, 0.59", "-53.2009, 298.659, -12.8498, 0.44", "-52.9351, 299.308, -13.006, 0.59", "-52.8166, 299.712, -13.0939, 0.44", "-52.7399, 300.055, -13.1506, 0.29", "-52.6446, 300.5, -13.2022, 0.29", "-52.5862, 300.749, -13.2473, 0.29", "-52.4914, 301.169, -13.3299, 0.52", "-52.4273, 301.438, -13.3884, 0.52", "-52.3501, 301.782, -13.4598, 0.37", "-52.233, 302.326, -13.5654, 0.44", "-52.0997, 302.849, -13.6546, 0.44", "-51.9468, 303.301, -13.7246, 0.74", "-51.745, 303.814, -13.7935, 0.81", "-51.4636, 304.566, -13.8767, 0.29", "-51.3948, 304.787, -13.8974, 0.29", "-51.3158, 305.088, -13.9243, 0.29", "-51.2106, 305.466, -13.9566, 0.29", "-51.0638, 305.93, -14.0131, 0.37", "-50.9082, 306.362, -14.0527, 0.44", "-50.6896, 306.793, -14.0941, 0.44", "-50.4172, 307.233, -14.1509, 0.44", "-50.1917, 307.6, -14.1853, 0.44", "-50.0535, 307.829, -14.2001, 0.66", "-49.896, 308.073, -14.2127, 0.66", "-49.642, 308.442, -14.2475, 0.44", "-49.3438, 308.817, -14.4157, 0.29", "-49.072, 309.148, -14.7683, 0.29", "-48.9035, 309.389, -15.0862, 0.44", "-48.764, 309.623, -15.4279, 0.59", "-48.611, 309.895, -15.8264, 0.74", "-48.1905, 310.637, -16.9087, 0.74", "-47.7752, 311.266, -17.8534, 0.37", "-47.5598, 311.558, -18.322, 0.29", "-47.3289, 311.844, -18.8022, 0.59", "-47.0895, 312.138, -19.2894, 0.52", "-46.9326, 312.359, -19.6075, 0.52", "-46.6967, 312.8, -20.0307, 0.59" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-4.37696, -38.5614, 4.20715, 0.52", "-6.27377, -39.5334, 5.45089, 0.52", "-6.6618, -39.7958, 5.72324, 0.44", "-6.99477, -40.0718, 5.97503, 0.66", "-7.43413, -40.5005, 6.32452, 0.74", "-8.14111, -41.3149, 6.89813, 0.66", "-8.42356, -41.7017, 7.13708, 0.81", "-8.81718, -42.5555, 7.46141, 0.74", "-8.93544, -42.9759, 7.57333, 0.88", "-9.04813, -43.8079, 7.85925, 0.66", "-9.08866, -44.5411, 8.18104, 0.66", "-9.10143, -45.1258, 8.50879, 0.81", "-9.17117, -45.8351, 9.01492, 0.81", "-9.33653, -46.6024, 9.66821, 0.88", "-9.9324, -48.6076, 11.5061, 0.96", "-10.1444, -49.207, 12.0734, 0.74", "-10.3271, -49.669, 12.4931, 0.59", "-10.6683, -50.5009, 13.1424, 0.59", "-10.9658, -51.2373, 13.617, 0.59", "-11.2836, -52.1112, 14.0046, 0.96", "-11.5107, -52.8164, 14.1519, 1.11", "-11.7764, -53.684, 14.3092, 0.88", "-12.0529, -54.5703, 14.486, 0.66", "-12.164, -54.8568, 14.5576, 0.74", "-12.665, -55.6731, 14.889, 0.66", "-13.0692, -56.1541, 15.1809, 0.74", "-13.5449, -56.6471, 15.5977, 0.81", "-13.9516, -57.037, 16.026, 0.88", "-14.4261, -57.5689, 16.6631, 0.66", "-14.7046, -57.9845, 17.1103, 0.66", "-15.011, -58.5743, 17.6526, 0.59", "-15.2784, -59.2618, 18.1655, 0.66", "-15.4164, -59.6382, 18.3887, 0.81", "-15.7574, -60.5163, 18.8125, 0.59", "-16.0402, -61.2584, 19.1375, 0.74", "-16.313, -61.9484, 19.4202, 0.88", "-16.4786, -62.357, 19.5711, 0.88", "-16.7576, -63.1495, 19.9151, 0.66", "-16.9298, -63.7668, 20.2785, 0.52", "-17.0982, -64.6334, 21.0511, 0.59", "-17.1456, -65.0388, 21.5274, 0.59", "-17.1758, -65.4347, 22.047, 0.66", "-17.2452, -66.5624, 23.5889, 0.66", "-17.2706, -67.1131, 24.3449, 0.96", "-17.3722, -67.8691, 25.3732, 1.03", "-17.537, -68.4237, 26.0825, 0.88", "-17.7184, -68.8487, 26.557, 0.59", "-17.908, -69.1897, 26.8588, 0.74", "-18.268, -69.7237, 27.1391, 0.59", "-18.7001, -70.2878, 27.3197, 0.74", "-19.2114, -70.8911, 27.4099, 0.88", "-19.6942, -71.4296, 27.4433, 0.88", "-20.2159, -71.9844, 27.4761, 0.59", "-20.7196, -72.5017, 27.5244, 0.37", "-20.9192, -72.6974, 27.5559, 0.37", "-21.3187, -73.0955, 27.6875, 0.44", "-21.745, -73.5205, 27.8851, 0.59", "-22.1465, -73.9166, 28.1309, 0.59", "-22.6257, -74.3939, 28.4664, 0.74", "-23.0782, -74.8179, 28.7944, 0.66", "-23.9381, -75.5807, 29.3862, 0.66", "-24.456, -76.0254, 29.7203, 0.59", "-25.2159, -76.7051, 30.1811, 0.81", "-25.6508, -77.1168, 30.4319, 0.96", "-26.2111, -77.6572, 30.7354, 0.74", "-26.8286, -78.2522, 31.0385, 0.52", "-27.8906, -79.3107, 31.5198, 0.59", "-28.46, -79.9201, 31.7705, 0.66", "-28.8312, -80.3468, 31.9175, 0.66", "-29.3693, -80.9978, 32.1145, 0.44", "-29.7571, -81.4932, 32.2555, 0.44", "-30.2727, -82.1514, 32.4429, 0.37", "-30.892, -82.9454, 32.6349, 0.29", "-31.16, -83.2971, 32.7102, 0.29", "-31.7263, -84.1789, 32.8443, 0.29", "-35.1116, -90.7868, 38.9347, 0.29", "-37.9269, -97.5595, 45.1416, 0.29", "-41.9794, -104.258, 50.7083, 0.29", "-45.3376, -111.786, 55.6985, 0.29", "-50.4269, -118.901, 59.7032, 0.29", "-56.4744, -125.22, 63.6468, 0.29" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-4.37696, -38.5614, 4.20715, 2.21", "-4.07629, -39.846, 4.4131, 2.21", "-3.89446, -40.6576, 4.5274, 2.21", "-3.61424, -41.9084, 4.70357, 2.21", "-3.38414, -42.9355, 4.84821, 2.28", "-3.20121, -43.752, 4.96321, 2.28", "-2.93768, -44.9283, 5.12888, 2.5", "-2.71479, -45.7322, 5.18868, 2.58" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "52.2288, 153.466, -35.3905, 1.25", "52.8793, 154.006, -35.7644, 1.25", "54.2376, 154.909, -36.4173, 0.81", "55.074, 155.391, -36.7772, 0.96", "55.8882, 155.779, -37.013, 0.74", "57.248, 156.358, -37.3058, 0.59", "58.5018, 156.864, -37.5263, 0.52", "59.0488, 157.042, -37.5875, 0.66", "59.8622, 157.27, -37.6395, 0.44", "61.6339, 157.751, -37.754, 0.66", "62.4394, 157.998, -37.8369, 0.52", "63.1851, 158.292, -37.9774, 0.52", "64.1994, 158.772, -38.2328, 0.88", "65.0651, 159.243, -38.5293, 1.25", "65.4064, 159.458, -38.6794, 1.62", "66.4102, 160.164, -39.2317, 1.62", "67.2338, 160.757, -39.7013, 1.33", "68.226, 161.44, -40.2423, 0.88", "68.9756, 161.966, -40.649, 0.74", "69.5447, 162.357, -40.9437, 0.59", "69.9872, 162.65, -41.1611, 0.59", "71.007, 163.259, -41.5916, 1.18", "71.9186, 163.765, -41.9766, 1.77" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "52.2288, 153.466, -35.3905, 0.37", "54.624, 154.509, -30.8988, 0.37", "55.1626, 154.919, -29.6554, 0.37", "55.3313, 155.178, -29.066, 0.37", "55.4542, 155.586, -28.3292, 0.66", "55.5139, 155.984, -27.7403, 0.66", "55.5932, 156.599, -26.9484, 0.66", "55.4948, 157.333, -26.4181, 0.52", "55.434, 158.194, -25.8544, 0.52", "55.455, 158.743, -25.5117, 0.52", "55.7211, 159.664, -24.9508, 0.66", "56.0672, 160.246, -24.6098, 1.18", "56.4011, 160.629, -24.3688, 1.18", "57.0074, 161.228, -23.9812, 0.66", "57.5518, 161.769, -23.6437, 0.52", "58.3446, 162.63, -23.1361, 0.52", "58.8315, 163.242, -22.7903, 1.11", "59.4338, 164.193, -22.2738, 0.96", "59.7739, 164.898, -21.903, 0.88", "60.1169, 165.889, -21.4025, 0.37", "60.4364, 167.249, -20.7544, 0.29", "60.5475, 167.97, -20.4177, 0.29", "60.6274, 168.943, -19.9424, 0.59", "60.6457, 169.97, -19.4413, 0.74", "60.6038, 170.841, -19.0065, 0.88", "60.5326, 171.557, -18.6403, 1.03", "60.3941, 172.509, -18.1556, 1.11", "60.2527, 173.337, -17.7667, 0.88", "60.12, 174.048, -17.4651, 0.52", "59.9218, 175.057, -17.0601, 0.88", "59.8264, 175.524, -16.8767, 0.74", "59.6459, 176.4, -16.5476, 0.52", "59.4552, 177.333, -16.1804, 0.52", "59.2855, 178.223, -15.7866, 0.74", "59.1274, 179.024, -15.3981, 0.88", "58.9756, 179.715, -15.062, 0.88", "58.7931, 180.411, -14.7392, 1.03", "58.5299, 181.242, -14.4068, 0.81", "58.2, 182.145, -14.0681, 0.59", "57.9768, 182.688, -13.8663, 0.52", "57.6209, 183.548, -13.5263, 0.52", "57.4364, 184.056, -13.307, 0.52", "57.1942, 184.915, -12.9242, 0.52", "56.9496, 186.128, -12.4117, 0.52", "56.82, 187.1, -11.989, 0.88", "56.7364, 188.132, -11.5089, 0.88", "56.6927, 189.132, -11.0077, 0.74", "56.6421, 189.857, -10.6429, 0.37", "56.5562, 190.64, -10.2582, 0.37", "56.3777, 191.415, -9.91511, 0.52", "56.1638, 191.951, -9.67624, 0.52", "55.9758, 192.282, -9.51179, 0.37", "55.3835, 193.157, -8.99279, 0.52", "55.1347, 193.512, -8.7692, 0.74", "54.6379, 194.295, -8.29479, 0.74", "54.2803, 195.002, -7.92401, 0.59", "54.0044, 195.71, -7.61303, 0.74", "53.7481, 196.566, -7.27242, 0.88", "53.5583, 197.301, -6.98577, 0.88", "53.3078, 198.168, -6.6546, 0.88", "52.9473, 199.167, -6.26166, 0.66", "52.6576, 199.725, -5.99962, 0.66", "52.1822, 200.389, -5.62024, 0.52", "51.5254, 201.047, -5.11259, 0.37", "51.0283, 201.411, -4.63609, 0.29", "50.422, 201.784, -3.92435, 0.29", "49.8689, 202.109, -3.19412, 0.66", "49.6383, 202.259, -2.86445, 1.03", "49.1782, 202.631, -2.14631, 1.18", "48.2169, 203.668, -0.372719, 0.59", "47.7956, 204.315, 0.550964, 0.44", "47.549, 204.872, 1.203, 0.52", "47.4037, 205.397, 1.74882, 0.52", "47.2775, 206.065, 2.39004, 0.52", "47.1897, 206.792, 3.01724, 0.59", "47.1468, 207.599, 3.62916, 0.37", "47.14, 208.276, 4.14842, 0.37", "47.1712, 209.495, 5.07851, 0.66", "47.1807, 210.074, 5.50061, 0.74", "47.1346, 210.715, 5.93294, 0.59", "46.9961, 211.415, 6.35078, 0.52", "46.7401, 212.16, 6.76498, 0.44", "46.2983, 213.107, 7.21148, 0.44", "45.9316, 213.809, 7.47426, 0.59", "45.3657, 214.89, 7.83183, 0.59", "44.9998, 215.613, 8.07169, 0.74", "44.6684, 216.298, 8.33684, 0.74", "44.4466, 216.878, 8.65627, 0.74", "44.2223, 217.804, 9.43795, 0.52", "44.167, 218.292, 9.95085, 0.66", "44.1624, 218.801, 10.6157, 0.81", "44.1563, 219.51, 11.7003, 1.03", "44.0598, 220.292, 13.1102, 0.74", "43.9021, 220.956, 14.3787, 0.44", "43.7695, 221.3, 15.0069, 0.29", "43.4253, 221.944, 16.1571, 0.59", "43.2008, 222.269, 16.755, 0.96", "42.5491, 223.141, 18.3127, 0.29", "42.2251, 223.582, 19.0947, 0.29", "41.8274, 224.179, 20.0632, 0.96", "41.4379, 224.781, 20.9843, 1.18", "40.8093, 225.854, 22.454, 0.96", "40.5643, 226.282, 23.1336, 0.59", "40.3562, 226.63, 23.7637, 0.29", "40.1046, 227.018, 24.6082, 0.29", "39.9941, 227.213, 25.0693, 0.29", "39.7924, 227.784, 26.2753, 0.44", "39.5948, 228.961, 28.51, 0.44", "39.5987, 229.276, 29.0868, 0.59", "39.7391, 229.751, 29.9439, 0.59", "40.0139, 230.173, 30.6843, 0.52", "40.5616, 230.673, 31.4172, 0.29", "41.3071, 231.106, 31.8617, 0.29", "42.151, 231.487, 32.1831, 0.29", "43.2532, 231.902, 32.5321, 0.44", "44.2185, 232.238, 32.8623, 0.44", "44.9923, 232.482, 33.204, 0.29", "45.8593, 232.757, 33.6675, 0.29", "47.2385, 233.292, 34.5457, 0.59", "48.1382, 233.742, 35.1865, 0.74", "49.4819, 234.629, 36.1838, 0.52", "50.9061, 235.79, 37.3033, 0.22", "51.1723, 236.048, 37.5161, 0.29", "51.8955, 236.942, 38.0713, 0.29", "52.4022, 237.737, 38.4009, 0.29", "52.9866, 238.796, 38.6927, 0.37", "53.4579, 239.694, 38.6431, 0.37", "53.8002, 240.299, 38.4753, 0.22", "54.7293, 241.487, 37.8155, 0.22", "55.2712, 242.023, 37.3932, 0.37", "55.9192, 242.568, 36.8733, 0.15", "58.2253, 244.381, 34.9063, 0.15", "58.9572, 244.899, 34.2556, 0.15", "61.1485, 246.246, 32.2967, 0.15", "62.2217, 246.794, 31.3354, 0.15", "63.2553, 247.27, 30.4084, 0.22", "63.4636, 256.094, 38.2514, 0.22", "64.296, 265.025, 45.9389, 0.22", "67.4691, 272.79, 54.2061, 0.22", "71.7907, 279.265, 62.9934, 0.22", "75.2744, 285.797, 72.1052, 0.22", "80.8499, 293.091, 79.4635, 0.22", "86.5824, 301.532, 85.3965, 0.22" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-24.296, 50.5116, -7.0705, 0.52", "-25.1012, 51.2714, -6.19903, 0.52", "-25.6286, 51.7216, -5.66874, 0.52", "-26.1515, 52.101, -5.22612, 0.74", "-26.8214, 52.5652, -4.71431, 0.96", "-27.5, 53.0869, -4.21595, 1.18", "-28.047, 53.5633, -3.82684, 1.18", "-28.5797, 54.0733, -3.47593, 0.88", "-29.3744, 55.0994, -2.91802, 0.37", "-29.5976, 55.5235, -2.75278, 0.37", "-29.9848, 56.596, -2.43659, 0.52", "-30.1867, 57.3553, -2.21975, 0.81", "-30.3685, 58.2037, -1.94346, 0.96", "-30.5582, 59.143, -1.54269, 0.52", "-30.7303, 59.8509, -1.11417, 0.59", "-30.9168, 60.2624, -0.736521, 0.74", "-31.4336, 60.8916, 0.0923828, 1.11", "-31.8517, 61.2453, 0.678578, 1.18", "-32.4622, 61.6537, 1.45177, 1.18", "-33.0915, 62.0167, 2.17052, 0.74", "-33.7964, 62.4062, 2.88673, 0.59", "-34.5015, 62.8075, 3.52039, 0.52", "-35.0017, 63.1027, 3.88611, 0.52", "-35.5653, 63.4377, 4.1919, 0.52", "-36.2152, 63.8281, 4.42573, 0.74", "-36.9115, 64.2776, 4.66274, 0.74", "-37.2609, 64.5162, 4.77104, 0.81", "-37.7237, 64.8665, 4.94574, 0.81", "-38.627, 65.6583, 5.39603, 0.66", "-39.0405, 66.1413, 5.70788, 0.52", "-39.87, 67.534, 6.7036, 0.74", "-40.12, 68.1127, 7.11959, 0.66", "-40.43, 69.0125, 7.75459, 0.59", "-40.6152, 69.5836, 8.15242, 0.66", "-40.9508, 70.5966, 8.82974, 0.52", "-41.1806, 71.1043, 9.116, 0.66", "-41.5155, 71.6562, 9.39263, 0.88", "-41.9889, 72.2842, 9.73118, 0.88", "-42.4602, 72.832, 10.1072, 0.66", "-42.781, 73.2172, 10.4716, 0.59", "-43.1355, 73.7366, 11.0596, 0.74", "-43.418, 74.2996, 11.7306, 0.52", "-43.6319, 74.8707, 12.4341, 0.52", "-44.0312, 76.2794, 14.1553, 0.66", "-44.2733, 77.333, 15.417, 0.74", "-44.4013, 77.9131, 16.1288, 0.44", "-44.5251, 78.373, 16.7085, 0.44", "-44.6757, 78.7125, 17.1367, 0.59", "-44.9049, 79.0242, 17.5408, 0.66", "-45.3401, 79.4283, 18.0257, 0.66", "-46.0082, 80.0005, 18.7391, 0.52", "-46.4441, 80.4139, 19.3087, 0.52", "-46.7822, 80.8417, 19.8764, 0.44", "-47.2782, 81.7344, 20.977, 0.59", "-47.4863, 82.1676, 21.4651, 0.74", "-47.7096, 82.6813, 22.0045, 0.88", "-48.0012, 83.3383, 22.6764, 0.88", "-48.2748, 83.8993, 23.3503, 0.44", "-48.5381, 84.3524, 23.969, 0.44", "-48.9883, 84.9382, 24.9181, 0.59", "-49.3466, 85.3379, 25.5874, 0.52", "-49.9524, 85.951, 26.6409, 0.66", "-50.5078, 86.4898, 27.57, 0.74", "-50.9543, 86.9448, 28.3389, 0.74", "-51.2187, 87.2583, 28.8057, 0.74", "-51.6248, 87.8345, 29.5417, 0.52", "-51.7832, 88.0799, 29.7773, 0.52", "-52.0193, 88.4863, 30.057, 0.66", "-52.3284, 89.0704, 30.3953, 0.66", "-52.6546, 89.681, 30.7389, 0.81", "-53.0164, 90.3488, 31.1066, 0.81", "-53.3421, 90.9218, 31.4437, 0.59", "-53.7067, 91.5274, 31.8021, 0.52", "-54.2372, 92.3503, 32.307, 0.59", "-54.6087, 92.8867, 32.6734, 0.66", "-54.9285, 93.2897, 32.9904, 0.66", "-55.5144, 93.8866, 33.5713, 0.59", "-55.8932, 94.2155, 33.976, 0.59", "-56.2733, 94.5042, 34.3938, 0.59", "-56.8463, 94.9092, 34.9991, 0.52", "-57.3123, 95.2594, 35.4927, 0.66", "-57.7398, 95.6085, 35.9115, 0.66", "-58.3207, 96.1164, 36.3933, 0.52", "-58.7616, 96.5285, 36.6909, 0.66", "-59.454, 97.2275, 37.0611, 0.81", "-60.0354, 97.8702, 37.322, 0.81", "-60.8695, 98.919, 37.6705, 0.52", "-61.3767, 99.6456, 37.8863, 0.59", "-61.7367, 100.201, 38.0428, 0.59", "-62.1669, 100.913, 38.2548, 0.37", "-62.7555, 101.932, 38.6129, 0.52", "-63.2098, 102.699, 38.9437, 0.59", "-63.7631, 103.578, 39.4084, 0.22", "-64.0164, 103.928, 39.6437, 0.37", "-64.3815, 104.344, 39.9506, 0.37", "-64.8953, 104.813, 40.3059, 0.37", "-65.5323, 105.322, 40.678, 0.66", "-65.9993, 105.727, 41.0113, 0.88", "-66.3472, 106.081, 41.3426, 0.59", "-67.0699, 106.994, 42.2769, 0.29", "-67.4846, 107.76, 43.0589, 0.29", "-67.7312, 108.454, 43.7247, 0.29", "-68.0362, 110.11, 45.2613, 0.88", "-68.0734, 110.993, 46.1716, 0.88", "-68.0319, 111.53, 46.7515, 0.66", "-67.8303, 112.306, 47.6867, 0.52", "-67.6633, 112.712, 48.192, 0.29", "-67.5094, 113.028, 48.6039, 0.29", "-67.0921, 114.612, 50.1596, 0.74", "-71.2938, 121.922, 58.3997, 0.74", "-75.1772, 128.379, 67.4391, 0.74", "-78.414, 134.964, 76.642, 0.74" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-24.296, 50.5116, -7.0705, 0.74", "-24.9968, 50.8124, -7.31723, 0.74", "-25.5287, 51.1086, -7.49378, 0.74", "-26.3471, 51.6421, -7.72873, 0.74", "-26.906, 51.9925, -7.9505, 0.88", "-27.4817, 52.3042, -8.22813, 1.03", "-28.0548, 52.5347, -8.53972, 1.03", "-28.6363, 52.6881, -8.90155, 0.96", "-29.2737, 52.7709, -9.29428, 0.74", "-30.7645, 52.7977, -10.1164, 0.66", "-31.7259, 52.7412, -10.5427, 0.66", "-32.9548, 52.6121, -10.9709, 0.66", "-33.693, 52.517, -11.1688, 0.59", "-34.6671, 52.3786, -11.3446, 0.66", "-35.3994, 52.2818, -11.4018, 0.66", "-36.861, 52.1462, -11.3592, 0.81", "-37.7071, 52.1266, -11.3001, 0.96", "-38.3418, 52.1699, -11.2462, 1.18", "-38.9961, 52.264, -11.2014, 1.18", "-39.8979, 52.4573, -11.166, 0.66", "-40.5878, 52.631, -11.1645, 0.66", "-41.1475, 52.7785, -11.1884, 0.59", "-41.7867, 52.9078, -11.2782, 0.74", "-42.574, 52.9818, -11.4398, 0.74", "-42.9178, 52.9366, -11.5736, 0.88", "-43.5544, 52.6223, -12.0076, 0.88", "-44.0022, 52.3289, -12.4227, 0.66", "-44.9441, 51.6979, -13.3499, 0.66", "-45.3998, 51.3997, -13.8048, 1.25", "-46.4351, 50.7627, -14.8124, 1.47", "-47.531, 50.1649, -15.8105, 1.62", "-48.826, 49.61, -16.8859, 1.55", "-49.442, 49.4478, -17.3049, 0.81", "-50.1268, 49.3938, -17.6387, 0.59", "-50.9552, 49.4474, -17.9532, 0.44", "-51.5831, 49.5556, -18.1314, 0.44", "-52.2674, 49.717, -18.3065, 0.59", "-52.7377, 49.8281, -18.4372, 0.59", "-53.3937, 49.9617, -18.7035, 0.29", "-54.5271, 50.2067, -19.2848, 1.03", "-55.4057, 50.4416, -19.7841, 1.47", "-56.0652, 50.6515, -20.1741, 1.69", "-56.473, 50.8006, -20.4135, 2.06", "-57.2914, 51.1625, -20.8733, 1.03", "-58.1013, 51.5979, -21.3053, 0.52", "-58.7902, 52.0633, -21.6755, 0.81", "-59.1597, 52.3692, -21.8904, 0.96", "-59.6273, 52.8288, -22.2125, 0.74", "-60.1304, 53.3798, -22.6256, 1.03", "-60.4593, 53.7673, -22.9324, 0.88", "-60.9191, 54.3081, -23.3997, 1.25", "-61.2868, 54.7062, -23.7875, 1.62", "-61.6254, 55.0327, -24.1326, 1.77", "-62.1231, 55.4821, -24.6476, 1.99", "-62.5429, 55.8505, -25.0687, 1.18", "-62.8693, 56.1432, -25.3905, 0.29", "-63.328, 56.5698, -25.8615, 0.29", "-63.9015, 57.1406, -26.5171, 0.66", "-64.3421, 57.6461, -27.0882, 0.66", "-64.6637, 58.0907, -27.5583, 0.22", "-64.9687, 58.594, -28.0705, 0.81", "-65.2805, 59.1636, -28.6498, 1.18", "-65.6282, 59.8511, -29.3139, 0.96", "-65.8239, 60.2302, -29.6537, 0.37", "-66.048, 60.5864, -29.9451, 0.29", "-66.2698, 60.8658, -30.1585, 0.29", "-66.5697, 61.1879, -30.3594, 0.29", "-66.901, 61.547, -30.5257, 0.59", "-67.2827, 62.0059, -30.6986, 0.59", "-67.6395, 62.5187, -30.9269, 0.59", "-67.9571, 63.0609, -31.2099, 0.59", "-68.217, 63.5781, -31.489, 0.59", "-68.43, 64.0554, -31.7537, 0.29", "-68.6017, 64.4596, -31.987, 0.37", "-68.9505, 65.1541, -32.4328, 0.37", "-69.3338, 65.7264, -32.878, 0.74", "-69.558, 65.9827, -33.0926, 1.25", "-69.9087, 66.3218, -33.3757, 1.69", "-70.2432, 66.6027, -33.6228, 1.47", "-70.9078, 67.0911, -34.0895, 0.96", "-71.6222, 67.5629, -34.563, 0.59", "-72.1704, 67.8965, -34.9415, 0.52", "-72.6507, 68.1524, -35.2854, 0.66", "-73.2847, 68.4371, -35.7221, 0.52", "-73.8759, 68.6484, -36.1269, 0.81", "-74.4928, 68.7979, -36.4997, 0.96", "-75.081, 68.8947, -36.7956, 1.55", "-75.831, 68.9897, -37.1347, 1.77", "-76.4517, 69.0685, -37.3691, 2.21", "-77.4063, 69.2068, -37.661, 2.36", "-78.408, 69.3591, -37.9179, 0.59", "-79.2472, 69.4635, -38.1133, 0.37", "-79.7433, 69.5101, -38.2133, 0.37", "-80.4158, 69.5496, -38.3374, 0.37", "-80.992, 69.5688, -38.4434, 0.37", "-81.5161, 69.5769, -38.5208, 0.37", "-82.1474, 69.5826, -38.6369, 0.29", "-82.5252, 69.5709, -38.7035, 0.29", "-82.9507, 69.5676, -38.8, 0.44", "-83.6817, 69.6448, -39.0129, 0.81", "-84.12, 69.7532, -39.1871, 1.18", "-84.5427, 69.8975, -39.4, 1.18", "-85.0482, 70.08, -39.7408, 0.74", "-85.8693, 70.3653, -40.384, 0.37", "-86.3615, 70.5344, -40.8025, 0.81", "-87.1753, 70.7939, -41.5547, 1.18", "-87.8038, 70.9834, -42.1652, 1.18", "-89.062, 71.3314, -43.4331, 0.52", "-89.6774, 71.5076, -44.0173, 0.37", "-90.6082, 71.7603, -44.7855, 1.33", "-91.3455, 71.9445, -45.3215, 2.14", "-91.7962, 72.0698, -45.6104, 2.58", "-92.8148, 72.4121, -46.1844, 2.8", "-94.1087, 72.962, -46.8295, 0.37", "-94.8829, 73.3794, -47.2226, 0.37", "-95.1862, 73.5916, -47.3814, 0.37", "-95.6686, 74.0775, -47.6426, 0.59", "-95.9921, 74.5446, -47.8618, 0.74", "-96.2623, 75.0902, -48.1076, 0.74", "-96.4958, 75.598, -48.4482, 0.74", "-96.6707, 75.8878, -48.6957, 0.44", "-97.0394, 76.2457, -49.0793, 0.29", "-97.4174, 76.4924, -49.4271, 0.29", "-97.8619, 76.7047, -49.8139, 0.81", "-98.9572, 77.0911, -50.6645, 1.03", "-99.427, 77.226, -50.9952, 0.96", "-100.294, 77.4662, -51.5732, 0.22", "-101.129, 77.7065, -52.1434, 0.59", "-101.665, 77.8922, -52.5152, 0.59", "-102.202, 78.1187, -52.8998, 0.44", "-102.718, 78.3707, -53.2596, 0.37", "-103.701, 78.8281, -53.9545, 1.03", "-104.462, 79.1437, -54.4579, 1.69", "-104.855, 79.3075, -54.6894, 1.92", "-105.366, 79.5412, -54.979, 1.92", "-105.682, 79.6946, -55.1649, 1.92", "-106.904, 80.3095, -55.8677, 0.44", "-107.282, 80.5223, -56.0628, 0.37", "-107.737, 80.8276, -56.3164, 0.52", "-107.988, 81.0276, -56.4911, 0.88", "-108.487, 81.4929, -56.9088, 1.03", "-108.791, 81.7924, -57.1858, 1.18", "-109.259, 82.2815, -57.6456, 0.96", "-109.837, 82.8868, -58.208, 0.74", "-110.19, 83.2696, -58.5346, 0.74", "-110.511, 83.6327, -58.8168, 0.59", "-111.073, 84.2803, -59.2456, 0.52", "-111.437, 84.6996, -59.4906, 0.52", "-112.002, 85.3494, -59.7972, 0.74", "-112.584, 86.015, -60.0222, 1.18", "-113.079, 86.5777, -60.1693, 1.4", "-113.439, 86.9764, -60.2546, 1.47", "-113.796, 87.3437, -60.3189, 1.69", "-114.351, 87.8158, -60.3983, 1.4", "-115.088, 88.31, -60.5001, 0.52", "-115.81, 88.681, -60.5964, 0.52", "-116.578, 88.9958, -60.6907, 0.74", "-117.263, 89.2287, -60.802, 0.96", "-118.193, 89.5005, -61.005, 0.96", "-118.884, 89.6877, -61.2066, 0.74", "-119.569, 89.9008, -61.4627, 0.44", "-120.009, 90.0939, -61.6687, 0.44", "-120.546, 90.4051, -61.9661, 0.74", "-121.018, 90.7179, -62.2305, 0.88", "-121.355, 90.9427, -62.4371, 0.88", "-121.948, 91.3507, -62.8373, 0.29", "-122.51, 91.7387, -63.2527, 0.29", "-123.131, 92.1485, -63.7117, 0.37", "-123.723, 92.5205, -64.1322, 0.44", "-124.673, 93.1026, -64.8103, 0.59", "-125.103, 93.3834, -65.1373, 1.18", "-125.719, 93.8393, -65.6324, 1.03", "-126.198, 94.2542, -66.0177, 1.69", "-126.446, 94.4988, -66.2049, 1.69", "-126.989, 95.0588, -66.5866, 1.18", "-127.691, 95.7774, -67.0033, 0.37", "-128.114, 96.1841, -67.25, 0.37", "-128.776, 96.7898, -67.6318, 0.37", "-129.383, 97.3074, -67.9824, 0.59", "-129.913, 97.7231, -68.2699, 1.11", "-130.365, 98.0427, -68.493, 1.62", "-130.923, 98.3727, -68.7573, 1.69", "-131.469, 98.6721, -69.046, 1.92" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-103.892, 14.6916, 157.163, 0.88", "-108.424, 12.8674, 166.714, 0.88", "-113.601, 12.6762, 176.103, 0.88", "-117.559, 13.6402, 186.026, 0.88", "-121.472, 14.6692, 195.961, 0.88", "-123.866, 17.2343, 206.113, 0.88", "-125.758, 20.0739, 216.3, 0.88", "-129.541, 23.717, 225.69, 0.88", "-133.152, 28.5364, 234.633, 0.88", "-137.224, 34.26, 242.843, 0.88", "-141.683, 40.3797, 250.568, 0.88" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-103.892, 14.6916, 157.163, 0.22", "-108.675, 12.7496, 166.596, 0.88", "-112.398, 11.1976, 176.563, 0.88", "-117.877, 11.2231, 185.815, 0.88", "-123.221, 11.8, 195.131, 0.88", "-129.239, 11.4746, 204.035, 0.88", "-136.034, 10.7608, 212.337, 0.88", "-141.991, 9.00998, 221.119, 0.88", "-148.421, 7.64194, 229.629, 0.88", "-153.864, 4.41822, 238.338, 0.88", "-157.717, 0.945032, 247.767, 0.88" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-163.147, 123.177, 66.5231, 0.88", "-172.877, 129.26, 68.771, 0.88", "-182.785, 135.029, 71.0347, 0.88", "-192.988, 140.503, 72.5663, 0.88", "-203.722, 144.525, 74.6753, 0.88" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-163.147, 123.177, 66.5231, 0.22", "-170.364, 129.056, 68.1232, 0.88", "-177.895, 134.504, 69.7333, 0.88", "-186.453, 138.361, 70.1877, 0.88", "-194.247, 143.624, 69.6919, 0.88", "-202.557, 148.021, 69.9868, 0.88" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-56.4744, -125.22, 63.6468, 0.88", "-60.6735, -132.384, 68.7689, 0.88", "-63.9913, -139.535, 74.5227, 0.88", "-67.3218, -146.224, 80.7775, 0.88", "-69.3303, -154.003, 86.3639, 0.88", "-69.85, -160.561, 93.558, 0.88", "-71.9539, -166.951, 100.599, 0.88", "-72.6378, -171.603, 109.076, 0.88", "-72.0739, -176.358, 117.51, 0.88", "-69.9683, -179.598, 126.37, 0.88", "-67.3485, -184.233, 134.476, 0.88" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-56.4744, -125.22, 63.6468, 0.22", "-62.0028, -133.725, 69.4448, 0.88", "-67.6902, -141.361, 76.164, 0.88", "-73.2897, -150.429, 81.0139, 0.88", "-79.471, -159.247, 85.5988, 0.88", "-86.0891, -168.135, 89.3927, 0.88", "-94.5685, -175.875, 91.5918, 0.88", "-102.682, -183.8, 94.4287, 0.88", "-111.36, -190.657, 98.1056, 0.88", "-121.202, -196.164, 100.923, 0.88" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-2.71479, -45.7322, 5.18868, 1.25", "-1.86649, -47.2112, 4.76343, 1.25", "-1.28029, -48.2225, 4.60055, 1.03", "-0.418971, -49.6073, 4.579, 0.88", "0.238975, -50.7318, 4.70941, 0.66", "0.654917, -51.5608, 4.88977, 0.66", "1.18466, -52.8308, 5.22513, 0.74", "1.51369, -54.0499, 5.6275, 0.66", "1.70538, -54.986, 6.00737, 0.81", "1.86339, -55.9285, 6.41785, 0.81", "2.08893, -57.1445, 6.91551, 0.74", "2.36783, -58.3671, 7.33828, 0.96", "2.74548, -59.7963, 7.73857, 1.03", "3.13728, -61.1425, 8.09467, 1.11", "3.54056, -62.467, 8.43183, 1.25", "4.13457, -64.1624, 8.85763, 0.96", "4.80011, -65.8608, 9.31072, 0.96", "5.45748, -67.3839, 9.74798, 1.11", "6.05434, -68.6463, 10.1306, 1.47" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-2.71479, -45.7322, 5.18868, 2.06", "-3.15192, -46.5551, 4.77847, 2.06", "-3.531, -47.5326, 4.25816, 2.06", "-3.77914, -48.4291, 3.76946, 2.06", "-3.94756, -49.2608, 3.28103, 2.06", "-4.10446, -50.1856, 2.68257, 1.99", "-4.28939, -51.4027, 1.86975, 1.77", "-4.36252, -52.487, 1.09645, 1.47", "-4.36955, -53.5876, 0.272765, 1.11", "-4.34128, -54.6208, -0.559329, 1.11", "-4.32706, -55.3521, -1.18005, 1.25", "-4.34074, -55.9119, -1.67409, 1.25", "-4.50044, -57.0708, -2.7442, 1.18", "-4.68842, -57.6861, -3.35401, 1.25", "-5.12554, -58.5578, -4.27532, 1.18", "-5.55291, -59.1363, -4.88969, 1.18", "-5.93371, -59.5093, -5.28668, 1.18", "-6.65714, -60.0223, -5.86964, 1.18", "-7.46357, -60.4581, -6.39415, 1.25", "-7.92315, -60.6597, -6.65235, 1.25", "-8.62101, -60.9144, -6.97296, 1.25", "-9.67763, -61.2889, -7.42742, 1.77", "-10.4148, -61.5451, -7.73189, 2.14" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "71.9186, 163.765, -41.9766, 0.74", "72.1821, 163.868, -42.9518, 0.74", "72.8103, 164.231, -44.8806, 1.03", "73.1461, 164.518, -45.8593, 0.52", "73.4109, 164.815, -46.6004, 0.52", "73.6965, 165.213, -47.3552, 0.74", "73.9995, 165.683, -48.0834, 0.52", "74.3847, 166.322, -48.7762, 0.59", "74.9476, 167.264, -49.5402, 0.44", "75.3604, 167.941, -50.0255, 0.52", "75.9194, 168.844, -50.6236, 0.44", "76.3632, 169.517, -51.0346, 0.29", "76.9254, 170.279, -51.5072, 0.29", "77.099, 170.475, -51.6542, 0.59", "77.5686, 170.925, -52.049, 0.59", "78.1492, 171.389, -52.5572, 0.44", "78.6015, 171.704, -52.978, 0.59", "79.4124, 172.285, -53.7633, 0.37", "80.0126, 172.771, -54.3541, 0.37", "80.5206, 173.206, -54.828, 0.37", "81.1038, 173.714, -55.3269, 0.37", "81.9958, 174.441, -56.0167, 0.96", "82.5979, 174.916, -56.4468, 1.03", "83.4064, 175.547, -56.9814, 0.81", "83.972, 176.009, -57.3456, 0.66", "84.7513, 176.696, -57.8607, 0.88", "85.1517, 177.073, -58.1256, 1.25", "85.7738, 177.606, -58.5082, 0.88", "86.3831, 178.069, -58.9434, 0.29", "86.7406, 178.322, -59.2337, 0.44", "87.2316, 178.677, -59.6688, 0.37", "87.9869, 179.182, -60.3615, 0.52", "88.7905, 179.658, -61.1057, 0.59", "90.2139, 180.345, -62.3474, 0.66", "91.0455, 180.681, -63.0282, 0.52", "91.3934, 180.806, -63.32, 0.59", "92.0663, 181.038, -63.8826, 0.44", "92.7852, 181.317, -64.4733, 0.37", "93.7552, 181.747, -65.2004, 0.37", "94.3452, 182.016, -65.558, 0.96", "95.1205, 182.413, -65.981, 0.88", "95.9361, 182.886, -66.4023, 0.44", "96.467, 183.237, -66.6818, 0.29", "97.0892, 183.698, -67.0559, 0.44", "97.8608, 184.352, -67.5764, 0.44", "98.6619, 185.124, -68.2022, 0.52", "99.1688, 185.685, -68.6633, 0.66", "99.9348, 186.68, -69.588, 0.66", "100.535, 187.6, -70.5115, 0.44", "100.823, 188.123, -71.0686, 0.37", "101.108, 188.756, -71.777, 0.37", "101.276, 189.121, -72.2276, 0.52", "101.63, 189.736, -73.0685, 0.59", "101.868, 189.991, -73.4708, 0.66", "102.379, 190.265, -74.0588, 0.52", "103.078, 190.444, -74.7263, 0.88", "103.609, 190.519, -75.1667, 0.88", "104.219, 190.616, -75.6931, 0.74", "104.698, 190.697, -76.2011, 0.59", "105.032, 190.743, -76.6199, 0.29", "105.621, 190.774, -77.4363, 0.29", "106.015, 190.768, -78.0168, 0.29", "106.748, 190.803, -79.2149, 0.88", "107.468, 190.938, -80.4702, 0.96", "107.807, 191.05, -81.0722, 0.88", "108.283, 191.231, -81.9348, 0.29", "108.514, 191.298, -82.307, 0.29", "108.926, 191.328, -82.885, 0.37", "109.372, 191.282, -83.4407, 0.37", "109.707, 191.245, -83.9163, 0.37", "110.507, 191.131, -85.1873, 0.44", "110.975, 191.034, -85.9801, 0.59", "111.279, 190.928, -86.499, 0.81", "111.727, 190.752, -87.2775, 0.59", "112.443, 190.516, -88.5365, 1.11", "112.795, 190.439, -89.17, 1.47", "113.072, 190.4, -89.6338, 1.47", "113.621, 190.317, -90.5124, 1.03", "114.358, 190.208, -91.5692, 0.59", "115.048, 190.081, -92.4509, 0.96", "115.802, 189.9, -93.3318, 0.96", "116.561, 189.705, -94.2043, 0.37", "117.267, 189.53, -94.9526, 0.37", "117.807, 189.389, -95.4798, 0.37", "118.665, 189.123, -96.2766, 0.37", "119.519, 188.859, -97.0428, 0.81", "120.263, 188.667, -97.6877, 1.03", "121.286, 188.499, -98.5925, 1.25", "121.582, 188.466, -98.8496, 1.47", "122.854, 188.33, -99.9099, 0.29", "123.272, 188.294, -100.22, 0.29", "123.769, 188.259, -100.546, 0.44", "124.37, 188.236, -100.892, 0.22", "125.051, 188.236, -101.248, 0.59", "125.661, 188.271, -101.534, 0.59", "126.654, 188.381, -101.957, 0.22", "127.701, 188.516, -102.4, 0.22", "129.006, 188.679, -102.938, 0.22", "129.763, 188.778, -103.24, 0.44", "131.089, 188.997, -103.763, 0.22", "131.889, 189.14, -104.08, 0.22", "132.508, 189.248, -104.332, 0.37", "134.235, 189.522, -105.045, 0.22", "135.404, 189.686, -105.541, 0.22", "137.498, 189.973, -106.437, 0.22", "138.681, 190.11, -106.966, 0.22", "139.269, 190.166, -107.232, 0.96", "140.091, 190.239, -107.607, 0.96", "140.833, 190.302, -107.948, 0.88", "141.532, 190.342, -108.263, 0.88", "143.288, 190.438, -109.017, 0.22", "145.505, 190.538, -109.923, 0.22", "146.626, 190.58, -110.365, 0.44", "147.251, 190.581, -110.611, 0.52", "148.68, 190.533, -111.142, 0.22", "150.755, 190.392, -111.871, 0.22", "152.38, 190.24, -112.39, 0.22", "153.939, 190.038, -112.866, 0.22", "156.031, 189.692, -113.486, 0.22", "157.261, 189.442, -113.842, 0.22", "158.208, 189.192, -114.112, 1.33", "158.851, 188.959, -114.295, 1.47", "160.166, 188.447, -114.657, 0.66", "161.124, 188.026, -114.916, 0.29", "162.416, 187.418, -115.28, 0.29", "163.382, 186.921, -115.608, 0.29", "164.328, 186.364, -115.949, 0.29" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "71.9186, 163.765, -41.9766, 0.37", "73.0058, 164.633, -42.0178, 0.37", "74.0881, 165.541, -42.0114, 0.37", "74.5774, 165.96, -41.9894, 0.37", "75.403, 166.675, -41.9924, 0.37", "75.9867, 167.212, -42.0059, 0.37", "77.2399, 168.404, -42.0223, 0.66", "77.8789, 169.027, -41.9439, 1.25", "78.3254, 169.488, -41.8431, 1.25", "79.242, 170.554, -41.5479, 0.59", "80.0143, 171.516, -41.2148, 0.37", "80.9296, 172.63, -40.7721, 0.37", "82.2346, 174.138, -40.1391, 0.52", "82.7355, 174.715, -39.8742, 0.37", "83.4241, 175.523, -39.5129, 0.52", "83.9594, 176.155, -39.1814, 0.66", "84.3979, 176.676, -38.9154, 0.66", "84.9377, 177.338, -38.6128, 0.44", "85.8093, 178.491, -38.1935, 0.66", "86.2582, 179.116, -37.9568, 0.81", "87.2146, 180.513, -37.4213, 1.03", "87.892, 181.518, -37.0268, 1.18", "88.2615, 182.04, -36.758, 1.18", "89.0979, 183.125, -36.0876, 0.44", "89.8181, 184.02, -35.4644, 0.37", "90.22, 184.538, -35.0865, 0.37", "90.8155, 185.361, -34.5179, 0.66", "92.0853, 187.083, -33.3009, 0.96", "92.3106, 187.388, -33.0999, 0.66", "92.8027, 188.013, -32.7022, 0.29", "93.3368, 188.671, -32.3537, 0.29", "93.7357, 189.139, -32.1801, 0.29", "94.6578, 190.123, -31.9712, 0.29", "95.5178, 190.96, -31.9058, 0.44", "96.4445, 191.806, -31.8609, 0.59", "97.4956, 192.726, -31.834, 0.59", "98.6691, 193.758, -31.8186, 0.66", "99.339, 194.376, -31.7938, 0.44", "100.005, 195.054, -31.7478, 0.37", "100.577, 195.681, -31.6721, 0.52", "101.134, 196.312, -31.5648, 0.66", "101.607, 196.858, -31.44, 0.66", "102.623, 198.049, -31.1169, 0.59", "103.319, 198.89, -30.8859, 0.74", "104.176, 199.954, -30.5588, 0.66", "105.222, 201.331, -30.1201, 0.52", "105.982, 202.389, -29.7706, 0.59", "106.493, 203.115, -29.5171, 0.59", "107.024, 203.855, -29.2576, 0.59", "107.896, 205.007, -28.8152, 0.44", "108.584, 205.906, -28.45, 0.29", "109.191, 206.731, -28.0591, 0.44", "109.908, 207.647, -27.5515, 0.59", "110.723, 208.537, -27.0142, 0.74", "111.512, 209.289, -26.5655, 0.59", "112.398, 210.084, -26.1523, 0.96", "113.022, 210.654, -25.856, 1.11", "114.113, 211.787, -25.3222, 0.59", "115.005, 212.889, -24.8809, 0.52", "115.719, 213.823, -24.5616, 0.52", "116.43, 214.741, -24.3019, 0.66", "117.57, 216.223, -23.9701, 0.74", "118.261, 217.192, -23.791, 0.74", "119.037, 218.349, -23.5947, 0.29", "119.855, 219.577, -23.3952, 0.29", "120.171, 219.992, -23.3349, 0.29", "121.05, 221.033, -23.2348, 0.29", "121.93, 221.935, -23.2211, 0.52", "122.524, 222.457, -23.2128, 0.37", "123.307, 223.06, -23.1979, 0.37", "124.116, 223.625, -23.1893, 0.29", "125.415, 224.431, -23.1641, 0.29", "126.388, 224.964, -23.1542, 0.37", "127.211, 225.391, -23.1501, 0.52", "127.85, 225.72, -23.1298, 0.52", "128.663, 226.134, -23.0885, 0.44", "129.928, 226.778, -23.0258, 0.44", "130.745, 227.208, -22.9992, 0.59", "131.593, 227.707, -22.9906, 0.74", "132.431, 228.225, -22.9113, 0.74", "133.407, 228.858, -22.7668, 0.52", "134.238, 229.424, -22.6314, 0.37", "135.393, 230.214, -22.4555, 0.29", "136.287, 230.821, -22.3104, 0.29", "138.387, 232.223, -21.9857, 0.66", "139.394, 232.888, -21.8213, 0.44", "140.42, 233.542, -21.631, 0.52", "141.04, 233.925, -21.5101, 0.52", "141.734, 234.358, -21.3648, 0.37", "142.323, 234.77, -21.2415, 0.37", "142.935, 235.24, -21.1589, 0.44", "143.819, 235.978, -21.0034, 0.74", "144.375, 236.484, -20.8955, 0.88", "145.22, 237.339, -20.7118, 0.74", "145.847, 238.004, -20.5675, 0.52", "146.641, 238.852, -20.3834, 0.37", "147.365, 239.595, -20.2307, 0.22", "147.869, 240.077, -20.1421, 0.22", "148.682, 240.791, -20.0176, 0.59", "149.339, 241.299, -19.9015, 0.74", "150.109, 241.786, -19.7306, 0.59", "150.472, 241.976, -19.6319, 0.59", "152.104, 242.741, -19.1563, 0.37", "152.746, 243.039, -18.9717, 0.37", "153.792, 243.504, -18.7214, 0.52", "154.784, 243.923, -18.5594, 0.52", "155.554, 244.21, -18.5004, 0.52", "156.694, 244.568, -18.4129, 0.81", "157.361, 244.75, -18.3599, 0.88", "158.23, 244.964, -18.3045, 0.88", "159.635, 245.267, -18.2514, 0.44", "160.949, 245.509, -18.1992, 0.37", "163.147, 245.858, -18.1027, 0.59", "163.987, 245.962, -18.0604, 0.59", "165.231, 246.101, -17.9367, 0.37", "166.138, 246.207, -17.8099, 0.29", "167.123, 246.318, -17.6537, 0.29", "168.318, 246.409, -17.5372, 0.29", "169.54, 246.458, -17.514, 0.29", "171.529, 246.484, -17.474, 0.59", "172.435, 246.496, -17.4461, 0.59", "173.284, 246.506, -17.4195, 0.59", "174.994, 246.487, -17.4013, 0.29", "175.892, 246.465, -17.4217, 0.29", "177.339, 246.441, -17.5094, 0.66", "178.339, 246.425, -17.6139, 0.74", "179.23, 246.41, -17.7127, 0.74", "180.993, 246.427, -17.9656, 0.22", "182.57, 246.508, -18.2281, 0.22", "183.469, 246.581, -18.4249, 0.29", "184.071, 246.658, -18.5924, 0.29", "185.181, 246.875, -18.9309, 0.22", "186.558, 247.305, -19.3747, 0.37", "187.274, 247.627, -19.6153, 0.52", "187.819, 247.916, -19.7967, 0.52", "188.621, 248.365, -20.0487, 0.59", "189.551, 248.858, -20.3154, 0.59", "190.529, 249.277, -20.5305, 0.52", "191.297, 249.522, -20.6514, 0.59", "192.258, 249.751, -20.7893, 0.44", "193.062, 249.899, -20.9019, 0.29", "193.953, 250.039, -20.9757, 0.29", "195.591, 250.359, -21.036, 0.29", "196.179, 250.49, -21.0396, 0.29", "197.355, 250.8, -21.0269, 0.29", "197.971, 250.992, -21.0145, 0.29", "199.839, 251.653, -21.0136, 0.29", "200.797, 252.039, -21.0916, 0.29", "202.013, 252.564, -21.2969, 0.22", "202.603, 252.81, -21.433, 0.44", "203.188, 253.034, -21.6013, 0.44", "204.157, 253.352, -21.9313, 0.29", "205.766, 253.726, -22.5864, 0.22", "206.463, 253.838, -22.8669, 0.22", "207.141, 253.933, -23.1323, 0.44", "207.789, 253.991, -23.3989, 0.44", "208.586, 254.024, -23.7581, 0.37", "209.61, 254.055, -24.2426, 0.29", "210.745, 254.099, -24.8087, 0.29", "211.463, 254.159, -25.2073, 0.29", "212.623, 254.324, -25.915, 0.29", "213.327, 254.481, -26.3742, 0.29", "214.186, 254.745, -26.9965, 0.44", "214.958, 255.005, -27.6482, 0.37", "215.669, 255.181, -28.3376, 0.52", "216.219, 255.286, -28.891, 0.52", "216.648, 255.352, -29.2999, 0.66", "217.856, 255.499, -30.413, 0.96", "218.949, 255.63, -31.3798, 0.81", "220.44, 255.878, -32.6518, 0.29", "221.357, 256.053, -33.5327, 0.29", "222.159, 256.262, -34.3395, 0.29", "222.712, 256.456, -34.8383, 0.29", "223.891, 256.873, -35.6476, 0.29", "224.634, 257.104, -36.0651, 0.66", "227.436, 257.74, -37.4724, 0.29", "228.054, 257.801, -37.775, 0.22", "230.426, 257.883, -38.9492, 0.22", "232.755, 257.795, -40.0825, 0.22", "233.783, 257.682, -40.5631, 0.37", "234.826, 257.524, -40.953, 0.44", "235.291, 257.454, -41.0407, 0.22", "245.54, 264.0, -42.1405, 0.22", "256.062, 269.371, -45.1169, 0.22" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-78.414, 134.964, 76.642, 0.88", "-82.8908, 144.677, 85.2969, 0.88", "-89.6476, 154.903, 91.6551, 0.88", "-98.6298, 164.819, 95.2121, 0.88", "-107.391, 172.438, 102.57, 0.88", "-117.063, 177.645, 110.755, 0.88", "-126.15, 183.045, 119.465, 0.88", "-136.784, 188.51, 126.185, 0.88", "-145.499, 194.468, 134.923, 0.88", "-153.007, 202.427, 143.232, 0.88", "-158.237, 212.17, 151.433, 0.88", "-160.61, 223.338, 159.165, 0.88" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-78.414, 134.964, 76.642, 0.22", "-81.0275, 141.224, 82.0579, 0.88", "-82.6975, 147.773, 87.5058, 0.88", "-82.5785, 154.479, 93.004, 0.88", "-81.6371, 161.786, 97.6113, 0.88", "-78.6842, 168.274, 102.523, 0.88", "-75.1777, 174.51, 107.384, 0.88", "-70.621, 180.282, 111.917, 0.88", "-66.5974, 185.455, 117.531, 0.88", "-62.3878, 189.525, 123.855, 0.88", "-59.1397, 193.44, 130.812, 0.88", "-54.8275, 198.055, 136.681, 0.88", "-49.6488, 202.329, 142.087, 0.88" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-131.469, 98.6721, -69.046, 0.29", "-131.736, 100.13, -70.0729, 0.29", "-132.083, 101.06, -70.7451, 0.29", "-132.449, 101.765, -71.2507, 0.37", "-132.65, 102.134, -71.501, 0.37", "-132.908, 102.655, -71.8737, 0.81", "-133.23, 103.303, -72.3434, 0.81", "-133.594, 103.88, -72.7635, 0.44", "-133.87, 104.263, -73.0451, 0.22", "-134.202, 104.682, -73.417, 0.22", "-134.907, 105.605, -74.36, 0.37", "-135.094, 105.864, -74.6545, 0.22", "-135.465, 106.385, -75.2449, 0.22", "-135.771, 106.803, -75.7054, 0.59", "-136.285, 107.417, -76.4403, 0.74", "-136.96, 108.063, -77.3975, 0.37", "-137.55, 108.477, -78.264, 0.37", "-137.978, 108.758, -78.9851, 0.37", "-138.402, 109.034, -79.7377, 1.03", "-139.137, 109.495, -81.0325, 1.62", "-140.173, 110.088, -82.81, 1.84", "-141.566, 110.837, -85.2165, 1.33", "-142.519, 111.357, -86.9142, 0.44", "-142.946, 111.614, -87.7112, 0.44", "-143.356, 111.897, -88.4784, 0.44", "-143.694, 112.175, -89.0707, 0.59", "-144.681, 113.081, -90.6076, 0.74", "-144.99, 113.349, -91.042, 0.74", "-145.43, 113.611, -91.6037, 0.88", "-146.111, 113.877, -92.4443, 0.96", "-146.718, 114.019, -93.1692, 0.52", "-147.15, 114.086, -93.6336, 0.37", "-148.298, 114.203, -94.7718, 0.29", "-149.194, 114.286, -95.7157, 0.29", "-149.91, 114.365, -96.4904, 0.29", "-151.19, 114.584, -97.8758, 0.29", "-151.715, 114.768, -98.4671, 0.29", "-152.147, 115.043, -98.997, 0.29", "-152.675, 115.606, -99.6922, 0.29", "-153.01, 116.118, -100.234, 0.52", "-153.236, 116.564, -100.683, 0.66", "-153.573, 117.268, -101.335, 0.66", "-153.992, 118.03, -102.121, 0.44", "-154.288, 118.449, -102.624, 0.59", "-154.957, 119.309, -103.755, 0.29", "-155.44, 119.944, -104.633, 0.29", "-155.875, 120.523, -105.412, 0.81", "-156.401, 121.262, -106.342, 1.25", "-157.494, 122.915, -108.222, 0.44", "-158.298, 124.261, -109.595, 0.74", "-158.891, 125.362, -110.593, 0.29", "-159.228, 126.015, -111.168, 0.29", "-159.609, 126.842, -111.859, 0.29", "-160.168, 128.316, -112.861, 0.22", "-160.442, 129.349, -113.355, 0.22", "-160.521, 129.699, -113.475, 0.29" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-131.469, 98.6721, -69.046, 0.44", "-133.176, 99.5326, -68.8101, 0.44", "-134.048, 99.9421, -68.6834, 0.52", "-134.735, 100.24, -68.5818, 0.59", "-135.478, 100.532, -68.4988, 0.59", "-136.379, 100.856, -68.4244, 0.37", "-137.203, 101.149, -68.3836, 0.37", "-137.893, 101.384, -68.3639, 0.96", "-138.774, 101.681, -68.4019, 1.4", "-139.511, 101.944, -68.4707, 1.62", "-140.547, 102.38, -68.6127, 0.59", "-141.38, 102.809, -68.8002, 0.81", "-142.04, 103.187, -68.9844, 0.96", "-142.378, 103.397, -69.0902, 1.18", "-142.974, 103.799, -69.2775, 0.29", "-143.726, 104.329, -69.4919, 0.22", "-144.741, 105.011, -69.7783, 0.96", "-145.258, 105.32, -69.9236, 0.96", "-146.022, 105.73, -70.1664, 0.66", "-146.884, 106.121, -70.4911, 0.44", "-147.81, 106.456, -70.9145, 0.44", "-148.744, 106.753, -71.3871, 0.81", "-149.585, 107.02, -71.8314, 0.96", "-150.553, 107.35, -72.3793, 0.74", "-151.937, 107.831, -73.2255, 0.29", "-152.774, 108.126, -73.7782, 0.29", "-153.345, 108.336, -74.1771, 0.44", "-153.785, 108.498, -74.5032, 0.66", "-154.277, 108.67, -74.8825, 0.52", "-154.855, 108.839, -75.3451, 0.52", "-155.548, 108.973, -75.9117, 0.66", "-156.284, 109.009, -76.4867, 0.37", "-156.96, 108.942, -76.9972, 0.29", "-157.499, 108.844, -77.3628, 0.29", "-157.918, 108.756, -77.6315, 0.29", "-158.68, 108.565, -78.0604, 0.29", "-159.222, 108.409, -78.3966, 0.52", "-159.74, 108.247, -78.7554, 0.74", "-160.411, 107.977, -79.2706, 0.74", "-161.334, 107.438, -80.1573, 0.52", "-161.765, 107.026, -80.7395, 1.47", "-162.424, 106.18, -81.8272, 1.92", "-162.74, 105.723, -82.413, 1.84", "-163.193, 105.048, -83.3132, 0.88", "-163.674, 104.424, -84.2919, 0.66", "-164.394, 103.748, -85.5795, 0.37", "-164.868, 103.511, -86.2752, 0.29", "-165.439, 103.418, -86.9253, 0.29", "-166.143, 103.459, -87.5676, 0.44", "-167.446, 103.648, -88.5625, 0.59", "-168.593, 103.913, -89.3987, 0.66", "-169.27, 104.109, -89.8816, 0.66", "-169.694, 104.225, -90.2109, 0.44", "-170.557, 104.41, -90.9041, 0.37", "-171.78, 104.629, -91.9545, 0.37", "-173.054, 104.821, -93.0141, 0.37", "-173.481, 104.885, -93.3688, 0.52", "-174.351, 104.985, -94.0838, 0.66", "-175.354, 105.076, -94.8695, 0.37", "-176.518, 105.088, -95.8959, 0.37", "-177.478, 104.998, -96.7731, 0.74", "-177.984, 104.901, -97.2236, 0.74", "-179.013, 104.671, -98.1583, 0.52", "-180.002, 104.442, -99.0663, 0.52", "-182.296, 103.817, -101.337, 0.52", "-183.074, 103.509, -102.209, 0.44", "-183.573, 103.246, -102.873, 0.29", "-184.044, 102.945, -103.554, 0.29", "-184.909, 102.318, -104.844, 0.29", "-185.574, 101.859, -105.823, 0.29", "-186.795, 101.199, -107.318, 0.52", "-187.526, 100.795, -108.328, 0.66", "-188.008, 100.481, -109.1, 0.66", "-188.314, 100.194, -109.72, 0.52", "-188.676, 99.7603, -110.563, 0.52", "-188.969, 99.4451, -111.196, 0.22", "-190.141, 98.4512, -113.367, 1.18", "-190.552, 98.0834, -114.159, 1.4", "-191.26, 97.3106, -115.615, 0.52", "-191.513, 96.9951, -116.122, 0.29", "-191.931, 96.427, -116.851, 0.29", "-192.484, 95.7101, -117.624, 0.29", "-193.685, 94.2108, -118.807, 0.44", "-194.519, 93.2353, -119.425, 0.44", "-195.175, 92.4752, -119.846, 0.29", "-196.465, 90.9274, -120.619, 0.52", "-197.066, 90.1691, -120.935, 0.52", "-197.906, 89.095, -121.302, 0.37", "-198.824, 87.9894, -121.579, 0.29", "-200.143, 86.5651, -121.912, 0.44", "-200.745, 85.989, -122.044, 0.44", "-201.78, 85.1598, -122.241, 0.22", "-202.659, 84.5652, -122.412, 0.22", "-203.538, 84.0823, -122.601, 0.52", "-203.873, 83.9278, -122.679, 0.52", "-205.239, 83.3929, -123.002, 0.29", "-206.934, 82.8171, -123.45, 0.29", "-208.249, 82.4433, -123.827, 0.22", "-209.97, 81.9848, -124.342, 0.22", "-210.931, 81.7294, -124.64, 0.59", "-211.921, 81.4556, -124.941, 0.44", "-212.88, 81.1874, -125.209, 0.22", "-213.465, 81.0229, -125.338, 0.22", "-214.242, 80.8058, -125.461, 0.37", "-214.921, 80.6201, -125.52, 0.37", "-215.664, 80.4251, -125.548, 0.22", "-216.652, 80.1854, -125.571, 0.22", "-217.468, 80.0144, -125.59, 0.37", "-218.158, 79.895, -125.599, 0.37", "-219.001, 79.7542, -125.588, 0.37", "-219.831, 79.6071, -125.566, 0.29", "-220.617, 79.4729, -125.552, 0.37", "-222.608, 79.1585, -125.526, 0.22", "-223.968, 78.948, -125.504, 0.22", "-225.852, 78.6611, -125.456, 0.22", "-226.63, 78.5433, -125.427, 0.22", "-227.444, 78.4172, -125.384, 0.44", "-227.866, 78.3456, -125.349, 0.44" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-141.683, 40.3797, 250.568, 0.88", "-144.964, 42.566, 258.614, 0.88", "-148.021, 44.2974, 266.851, 0.88", "-152.222, 46.2661, 274.514, 0.88", "-156.647, 48.2205, 282.053, 0.88", "-160.791, 49.7282, 289.845, 0.88" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-141.683, 40.3797, 250.568, 0.22", "-146.011, 43.3775, 261.203, 0.88", "-152.034, 46.8222, 270.841, 0.88" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-157.717, 0.945032, 247.767, 0.88", "-166.596, -0.494927, 254.605, 0.88", "-174.45, -2.71595, 262.412, 0.88" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-157.717, 0.945032, 247.767, 0.22", "-159.332, 0.925101, 256.987, 0.88", "-159.476, 0.290475, 266.323, 0.88" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-203.722, 144.525, 74.6753, 0.88", "-215.415, 144.611, 77.7431, 0.88", "-227.404, 145.386, 79.0795, 0.88", "-239.176, 147.516, 80.8424, 0.88" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-203.722, 144.525, 74.6753, 0.22", "-208.354, 151.947, 74.7637, 0.88", "-212.848, 159.366, 73.6015, 0.88", "-216.658, 167.133, 72.1733, 0.88", "-219.751, 175.085, 70.1042, 0.88" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-67.3485, -184.233, 134.476, 0.88", "-67.9749, -191.05, 141.776, 0.88", "-69.2686, -198.039, 148.834, 0.88" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-67.3485, -184.233, 134.476, 0.22", "-68.363, -193.118, 144.535, 0.88" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-121.202, -196.164, 100.923, 0.88", "-127.814, -205.125, 103.494, 0.88", "-134.534, -214.253, 104.971, 0.88" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-121.202, -196.164, 100.923, 0.22", "-128.019, -202.519, 105.437, 0.88", "-134.256, -210.15, 108.744, 0.88" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "6.05434, -68.6463, 10.1306, 0.66", "6.18744, -70.4301, 11.1201, 0.66", "6.3666, -71.6707, 11.7641, 0.52", "6.60941, -73.1897, 12.4761, 1.18", "6.70561, -74.0299, 12.8161, 1.62", "6.76, -74.9204, 13.1033, 1.33", "6.77112, -76.0835, 13.3826, 0.74", "6.83756, -77.4408, 13.5992, 0.44", "6.85601, -78.2916, 13.7193, 0.44", "6.81232, -79.4951, 13.8535, 0.44", "6.76171, -80.7204, 14.0196, 0.52", "6.74012, -81.9371, 14.2586, 0.66", "6.8272, -83.1304, 14.6671, 0.44", "7.01626, -84.0707, 15.302, 0.66", "7.12188, -84.536, 15.7417, 0.88", "7.29997, -85.2034, 16.4818, 0.88", "7.40901, -85.5686, 16.9137, 0.96", "7.54678, -86.0108, 17.4388, 0.66", "7.88334, -87.0708, 18.5852, 0.44", "8.29837, -88.2437, 19.6907, 0.52", "8.50699, -88.816, 20.2061, 0.52", "8.86017, -89.7423, 21.0613, 0.74", "9.12732, -90.3555, 21.6543, 0.96", "9.45632, -90.9673, 22.2921, 0.96", "10.0416, -91.7743, 23.2391, 0.59", "10.6615, -92.4548, 24.2619, 0.59", "11.3125, -93.1649, 25.4668, 0.88", "11.5207, -93.4107, 25.8879, 0.88", "11.7944, -93.7797, 26.4633, 0.88", "12.1354, -94.3116, 27.1989, 0.74", "12.681, -95.2197, 28.2941, 0.74", "13.223, -96.1255, 29.2122, 0.74", "13.809, -97.1528, 30.1138, 0.81", "14.2262, -97.9428, 30.7524, 0.96", "14.5321, -98.5532, 31.1975, 0.96", "14.8989, -99.3074, 31.6883, 0.88", "15.3506, -100.252, 32.223, 0.88", "15.5052, -100.57, 32.4021, 1.11", "16.0157, -101.535, 32.9097, 0.74", "16.4377, -102.267, 33.2818, 0.74", "16.8662, -102.999, 33.6645, 0.66", "17.5354, -104.219, 34.2793, 0.44", "17.9686, -105.099, 34.7095, 1.03", "18.5243, -106.379, 35.3183, 0.81", "18.9681, -107.472, 35.82, 0.59", "19.4572, -108.786, 36.4126, 0.74", "19.8006, -109.762, 36.8312, 0.59", "20.0454, -110.633, 37.2023, 0.59", "20.3153, -111.983, 37.7514, 0.44", "20.4368, -113.011, 38.144, 0.37", "20.5462, -114.317, 38.579, 0.74", "20.6257, -115.308, 38.8712, 0.88", "20.761, -117.066, 39.404, 0.88", "20.8025, -117.79, 39.6468, 0.74", "20.8514, -119.167, 40.1605, 0.66", "20.8753, -120.169, 40.5813, 0.74", "20.9258, -121.396, 41.172, 0.74", "20.9909, -122.214, 41.6066, 0.74", "21.1921, -123.7, 42.419, 0.52", "21.3046, -124.368, 42.7828, 0.52", "21.4188, -125.401, 43.3531, 0.29", "21.4727, -126.262, 43.8321, 0.59", "21.5019, -126.903, 44.1942, 0.74", "21.5317, -127.798, 44.6968, 0.44", "21.5615, -128.91, 45.3156, 0.37", "21.5494, -130.886, 46.4431, 0.37", "21.5005, -131.74, 46.9423, 0.52", "21.3871, -132.563, 47.4458, 0.59", "21.1883, -133.463, 48.0058, 0.74", "20.9975, -134.104, 48.3992, 1.18", "20.8459, -134.557, 48.6571, 1.18", "20.4178, -135.878, 49.3012, 0.74", "19.8452, -137.444, 49.9656, 0.52", "19.3674, -138.689, 50.412, 0.44", "18.7915, -140.22, 50.861, 0.59", "18.3392, -141.479, 51.1426, 0.44", "18.0804, -142.315, 51.2719, 0.44", "17.7994, -143.509, 51.3692, 0.59", "17.677, -144.358, 51.3946, 0.59", "17.6313, -145.064, 51.393, 0.59", "17.6405, -146.435, 51.3312, 0.66", "17.6917, -147.416, 51.2776, 0.59", "17.7883, -148.501, 51.2319, 0.52", "17.8768, -149.227, 51.2099, 0.66", "18.0272, -150.365, 51.1938, 0.66", "18.1975, -151.756, 51.2038, 0.52", "18.3177, -152.827, 51.2205, 0.74", "18.3951, -153.74, 51.2341, 0.88", "18.4708, -155.105, 51.25, 0.96", "18.5221, -156.673, 51.2764, 0.88", "18.5373, -157.766, 51.3108, 0.88", "18.5619, -158.636, 51.3077, 0.81", "18.5925, -159.739, 51.2421, 0.66", "18.5882, -160.586, 51.1726, 0.66", "18.5486, -161.41, 51.1163, 0.44", "18.4495, -162.498, 51.0851, 0.44", "18.2001, -164.113, 51.1507, 0.44", "17.9281, -165.354, 51.3362, 0.44", "17.5174, -166.639, 51.7327, 0.66", "17.2145, -167.39, 52.1031, 0.81", "16.7929, -168.281, 52.6906, 0.96", "16.234, -169.387, 53.5741, 0.66", "15.6708, -170.461, 54.5095, 0.59", "15.0659, -171.669, 55.5586, 0.96", "14.6543, -172.582, 56.2853, 0.96", "14.3331, -173.385, 56.846, 0.96", "14.0599, -174.196, 57.2962, 0.66", "13.8092, -175.173, 57.6709, 0.44", "13.6205, -176.106, 57.8603, 0.37", "13.5294, -176.824, 57.9085, 0.37", "13.4443, -177.924, 57.9158, 0.29", "13.3882, -179.139, 57.883, 0.29", "13.3574, -180.402, 57.8385, 0.37", "13.3559, -181.57, 57.8087, 0.29", "13.3552, -182.841, 57.8034, 0.29", "13.3388, -184.122, 57.808, 0.29", "13.3107, -185.456, 57.8246, 0.29", "13.3039, -186.015, 57.8464, 0.44", "13.3027, -186.925, 57.904, 0.52", "13.3068, -188.273, 58.0119, 0.37", "13.2965, -189.597, 58.1216, 1.03", "13.3084, -190.26, 58.1777, 1.03", "13.3652, -191.056, 58.2683, 0.74", "13.4727, -192.045, 58.4065, 0.59", "13.5457, -192.616, 58.5051, 0.81", "13.6312, -193.333, 58.6278, 0.81", "13.7139, -194.693, 58.8981, 0.37", "13.6909, -195.694, 59.0879, 0.37", "13.5756, -196.477, 59.2129, 0.37", "13.1973, -197.641, 59.3215, 0.29", "12.8249, -198.388, 59.3134, 0.44", "12.2632, -199.241, 59.1996, 0.59", "11.7795, -199.897, 59.0616, 0.74", "11.4513, -200.394, 58.9441, 0.74", "10.8785, -201.429, 58.7059, 0.22", "10.5514, -202.325, 58.567, 0.22", "10.4447, -203.029, 58.552, 0.66", "10.4842, -204.014, 58.6486, 0.29", "10.6737, -205.21, 58.9043, 0.59", "10.7756, -205.632, 59.0242, 0.44", "11.0728, -206.49, 59.3574, 0.29", "11.2806, -206.974, 59.5951, 0.22", "11.7421, -207.909, 60.1306, 0.22", "12.0076, -208.414, 60.4439, 0.22", "14.6643, -219.158, 65.9493, 0.22", "17.3145, -229.2, 72.6033, 0.22", "17.0481, -239.85, 78.8505, 0.22" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "6.05434, -68.6463, 10.1306, 1.03", "6.7814, -69.2071, 10.0499, 1.03", "8.13153, -70.1039, 9.97798, 0.66", "8.76998, -70.4812, 9.9838, 0.66", "9.62749, -70.9421, 10.0119, 0.66", "10.8071, -71.5952, 10.1237, 1.11", "11.3345, -71.9019, 10.2037, 1.18", "11.9269, -72.2507, 10.3627, 0.96", "12.6614, -72.6874, 10.6939, 0.81", "13.8598, -73.3719, 11.3883, 0.81", "14.6748, -73.8275, 11.9918, 0.74", "15.2218, -74.1389, 12.5133, 0.96", "15.886, -74.4847, 13.2224, 0.96", "16.1418, -74.5867, 13.5038, 0.96", "16.517, -74.6639, 13.9155, 0.81", "16.9754, -74.6779, 14.3979, 0.81", "17.7479, -74.6348, 15.1127, 0.74", "18.3549, -74.5835, 15.6131, 0.96", "19.098, -74.5438, 16.193, 0.96", "19.7578, -74.5548, 16.7137, 0.74", "20.456, -74.6289, 17.3077, 0.88", "20.9932, -74.7382, 17.8128, 1.03", "21.5321, -74.9264, 18.4031, 1.03", "21.9622, -75.1929, 19.0368, 0.88", "22.229, -75.4594, 19.5478, 0.66", "22.5812, -75.8785, 20.2219, 1.03", "22.8122, -76.1622, 20.6324, 1.03", "23.0679, -76.4386, 20.9951, 0.81", "23.6617, -77.063, 21.7811, 0.59", "24.0891, -77.4656, 22.2634, 0.74", "24.751, -78.0553, 22.977, 0.74", "25.138, -78.3916, 23.3906, 0.88", "25.7585, -78.9382, 24.0974, 0.66", "26.2927, -79.4181, 24.7414, 0.96", "26.624, -79.7328, 25.1842, 1.11", "26.9046, -80.0268, 25.6323, 1.11", "27.3161, -80.4818, 26.3977, 0.81", "27.7155, -80.9012, 27.1938, 0.74", "28.1192, -81.2782, 28.0089, 0.66", "28.621, -81.6733, 28.9087, 0.88", "28.9519, -81.9319, 29.4524, 1.03", "29.3135, -82.2334, 29.9748, 1.03", "29.7812, -82.6748, 30.574, 0.81", "30.1205, -83.0503, 30.9381, 0.81", "30.6012, -83.6371, 31.3462, 0.81", "31.1845, -84.3956, 31.7292, 0.88", "31.6824, -85.0793, 32.044, 1.03", "32.0552, -85.6156, 32.2794, 0.88", "32.5626, -86.3157, 32.6056, 0.66", "32.8997, -86.7544, 32.8781, 0.66", "33.2497, -87.1342, 33.2506, 0.59", "33.7114, -87.5019, 33.862, 0.88", "33.8988, -87.6195, 34.1376, 0.88", "34.324, -87.8586, 34.7512, 0.59", "34.6355, -88.0497, 35.2013, 0.74", "34.9308, -88.2498, 35.5784, 0.81", "35.3863, -88.569, 36.0412, 0.74", "35.8804, -88.924, 36.4528, 0.59", "36.6251, -89.4738, 36.9973, 0.59", "37.0445, -89.793, 37.2772, 0.88", "37.4886, -90.1365, 37.5454, 1.03", "38.2497, -90.7543, 37.9751, 0.66", "38.7539, -91.1801, 38.2415, 0.59", "39.3923, -91.7144, 38.5643, 2.06", "39.8256, -92.0686, 38.7895, 2.73" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-10.4148, -61.5451, -7.73189, 1.25", "-11.4454, -61.4828, -8.13604, 1.25", "-12.5782, -61.5488, -8.59104, 0.66", "-13.0912, -61.6206, -8.79754, 0.66", "-13.7954, -61.7555, -9.09563, 0.81", "-14.4923, -61.9009, -9.41124, 0.81", "-15.3908, -62.0697, -9.8187, 0.44", "-15.9426, -62.2026, -10.0972, 0.44", "-16.4252, -62.2853, -10.3447, 0.59", "-16.7923, -62.2927, -10.5476, 0.74", "-17.3031, -62.2223, -10.84, 0.74", "-17.8352, -62.1216, -11.1888, 0.66", "-18.2019, -62.0607, -11.4364, 0.52", "-18.9248, -61.992, -11.9394, 0.52", "-19.5889, -61.9854, -12.3972, 0.52", "-20.363, -62.0308, -12.8887, 0.66", "-21.2632, -62.1271, -13.3957, 0.88", "-22.1086, -62.2363, -13.8314, 1.03", "-22.7137, -62.3099, -14.1225, 1.03", "-23.4125, -62.3675, -14.4475, 0.96", "-24.0595, -62.3766, -14.7323, 0.74", "-24.952, -62.3232, -15.1298, 0.59", "-25.474, -62.2786, -15.3596, 0.59", "-26.3469, -62.2301, -15.7452, 0.74", "-27.0964, -62.2139, -16.0878, 0.74", "-27.8678, -62.2364, -16.477, 0.52", "-28.5104, -62.3072, -16.8245, 0.59", "-29.3277, -62.4996, -17.2774, 0.59", "-30.0715, -62.7405, -17.6632, 0.74", "-30.8483, -63.0304, -18.0293, 0.74", "-31.4972, -63.2759, -18.3127, 0.74", "-32.4238, -63.5883, -18.702, 0.74", "-33.344, -63.8536, -19.0692, 0.74", "-34.3553, -64.1125, -19.4486, 0.88", "-34.899, -64.2382, -19.6543, 0.88", "-35.7841, -64.4336, -20.0442, 0.96", "-36.7735, -64.6249, -20.5365, 0.96", "-37.6727, -64.7808, -21.0263, 0.66", "-38.2712, -64.9104, -21.3674, 0.59", "-39.2049, -65.2081, -21.9142, 0.59", "-40.5786, -65.7769, -22.7132, 0.81", "-41.3221, -66.1503, -23.1526, 0.96", "-42.3171, -66.7008, -23.7315, 0.96", "-43.6387, -67.4508, -24.4608, 0.96", "-44.6475, -68.0096, -24.9673, 0.96", "-45.4336, -68.4217, -25.3113, 0.96", "-46.1683, -68.7593, -25.5935, 0.81", "-46.9341, -69.0458, -25.9072, 0.88", "-47.7158, -69.2391, -26.2488, 0.88", "-48.438, -69.3328, -26.5824, 0.66", "-48.9863, -69.3861, -26.8451, 0.66", "-49.5403, -69.4701, -27.1148, 0.59", "-50.1032, -69.6284, -27.3799, 0.59", "-50.8255, -69.961, -27.7201, 0.81", "-51.4058, -70.2827, -27.9791, 0.81", "-52.2359, -70.7465, -28.3447, 0.52", "-53.0268, -71.141, -28.6898, 0.66", "-53.7759, -71.4481, -29.0157, 0.66", "-54.7553, -71.7263, -29.4265, 0.66", "-55.6322, -71.8641, -29.7903, 0.88", "-56.5744, -71.9213, -30.1736, 0.88", "-57.3759, -71.9239, -30.4934, 0.81", "-58.2238, -71.9303, -30.892, 0.88", "-59.1071, -71.973, -31.4057, 1.03", "-59.7644, -72.0486, -31.8561, 1.03", "-60.4253, -72.1965, -32.41, 0.81", "-60.9793, -72.3929, -32.942, 0.81", "-62.1028, -73.041, -34.253, 0.44", "-62.7096, -73.5442, -35.1099, 0.66", "-63.113, -73.9709, -35.7518, 0.81", "-63.6208, -74.5956, -36.6389, 1.03", "-63.8408, -74.8823, -37.0296, 1.11", "-64.5039, -75.6364, -38.0697, 0.37", "-65.016, -76.0627, -38.6902, 0.37", "-65.4199, -76.3381, -39.109, 1.69", "-65.9906, -76.6655, -39.626, 2.06", "-66.3967, -76.862, -39.9305, 2.06", "-67.6232, -77.3973, -40.7332, 0.59", "-68.7158, -77.8119, -41.3475, 0.44", "-69.8925, -78.2112, -41.9532, 0.52", "-70.5313, -78.4019, -42.2586, 0.74", "-71.3758, -78.6318, -42.6354, 0.88", "-72.2548, -78.8626, -43.0101, 0.66", "-72.5559, -78.9377, -43.1157, 0.44", "-73.2624, -79.0869, -43.3256, 0.37", "-74.0717, -79.1913, -43.52, 0.96", "-75.0667, -79.2759, -43.6844, 1.62", "-75.9485, -79.3563, -43.7648, 1.77", "-76.9657, -79.4727, -43.8135, 1.77", "-77.9041, -79.6146, -43.8387, 1.11", "-78.7737, -79.766, -43.8507, 0.66", "-79.7722, -79.9302, -43.8746, 0.52", "-80.9722, -80.0872, -43.871, 0.44", "-81.8424, -80.1743, -43.8869, 0.44", "-82.4846, -80.2302, -43.9242, 0.59", "-83.0478, -80.2832, -43.9698, 0.59", "-83.8014, -80.3717, -44.0595, 0.44", "-85.4018, -80.596, -44.2799, 0.74", "-86.1781, -80.7104, -44.3833, 0.81", "-87.0236, -80.8487, -44.5087, 0.81", "-87.9096, -81.0057, -44.6766, 0.96", "-88.7531, -81.1769, -44.9146, 1.11", "-89.4504, -81.3266, -45.1766, 1.11", "-90.0713, -81.4532, -45.4997, 0.81", "-91.0165, -81.6244, -46.0586, 0.59", "-91.7543, -81.7211, -46.5333, 1.18", "-92.7728, -81.8134, -47.2195, 1.47", "-93.2988, -81.8538, -47.5746, 1.62", "-93.6224, -81.8679, -47.8093, 1.62", "-94.1633, -81.8645, -48.206, 1.11", "-94.8087, -81.8212, -48.6214, 0.66", "-95.4946, -81.7106, -48.992, 0.44", "-96.3396, -81.5012, -49.3766, 0.37", "-97.2795, -81.2081, -49.7824, 0.37", "-97.8848, -80.9894, -50.0185, 0.37", "-98.7433, -80.6432, -50.3174, 0.44", "-99.8951, -80.1743, -50.7203, 0.74", "-100.443, -79.9571, -50.9257, 1.18", "-100.919, -79.7783, -51.1179, 1.33", "-101.493, -79.5806, -51.355, 1.33", "-102.188, -79.3195, -51.676, 0.81", "-103.108, -78.9315, -52.1217, 0.29", "-103.751, -78.6436, -52.4275, 0.29", "-104.75, -78.176, -52.8872, 0.37", "-105.404, -77.8552, -53.1679, 0.44", "-106.317, -77.4266, -53.6579, 0.44", "-107.399, -76.9554, -54.3013, 1.4", "-108.022, -76.6935, -54.6879, 1.92", "-108.289, -76.5871, -54.8618, 2.28", "-108.867, -76.3815, -55.2703, 2.28", "-111.183, -75.6045, -57.0171, 0.29", "-111.577, -75.4716, -57.3366, 0.52", "-112.064, -75.2997, -57.7551, 0.52", "-112.611, -75.1066, -58.2054, 0.74", "-113.076, -74.9393, -58.5848, 0.74", "-113.689, -74.7265, -59.0957, 0.44", "-114.375, -74.4924, -59.627, 0.37", "-114.954, -74.3091, -60.1337, 0.81", "-115.354, -74.1927, -60.5168, 0.96", "-115.933, -74.0255, -61.1335, 0.96", "-116.614, -73.8423, -61.9274, 0.66", "-117.17, -73.7186, -62.6206, 0.29", "-117.796, -73.5952, -63.3798, 0.66", "-118.2, -73.5152, -63.8407, 0.66", "-119.074, -73.3517, -64.7393, 0.52", "-119.673, -73.23, -65.2643, 0.74", "-120.966, -72.954, -66.2867, 0.88", "-121.584, -72.8079, -66.7751, 1.11", "-122.024, -72.6967, -67.1216, 1.33", "-122.78, -72.4666, -67.7, 0.44", "-123.589, -72.1512, -68.2786, 0.44", "-124.322, -71.7889, -68.7964, 0.29", "-125.394, -71.1426, -69.6525, 0.96", "-125.847, -70.8494, -70.081, 1.18", "-126.394, -70.4798, -70.649, 2.21", "-126.706, -70.267, -70.9907, 2.43", "-127.307, -69.8659, -71.6948, 2.43", "-128.162, -69.3632, -72.678, 2.21", "-129.261, -68.8477, -73.8756, 0.29", "-129.865, -68.6251, -74.4988, 0.44", "-130.267, -68.504, -74.8729, 0.52", "-131.722, -68.1152, -76.1234, 0.29", "-132.48, -67.9343, -76.7159, 0.29", "-133.13, -67.7965, -77.1602, 0.29", "-133.908, -67.6569, -77.6681, 0.29", "-135.036, -67.468, -78.3763, 0.96", "-135.55, -67.3754, -78.677, 1.47", "-136.042, -67.2745, -78.9319, 1.47", "-137.189, -66.9401, -79.529, 0.29", "-137.647, -66.7735, -79.7704, 0.29", "-138.413, -66.437, -80.207, 0.74", "-138.809, -66.242, -80.4409, 0.81", "-139.068, -66.1002, -80.5886, 0.81", "-139.5, -65.8296, -80.8363, 0.29", "-139.863, -65.5654, -81.0591, 0.22", "-140.669, -64.9384, -81.6058, 0.22", "-141.563, -64.2499, -82.251, 0.22", "-142.19, -63.7945, -82.6919, 0.88", "-142.719, -63.4255, -83.0473, 1.11", "-142.947, -63.2725, -83.1913, 1.4", "-143.457, -62.9445, -83.4793, 1.4", "-143.988, -62.622, -83.7286, 0.96", "-145.099, -62.0117, -84.1993, 0.29", "-145.587, -61.7656, -84.3854, 0.59", "-145.918, -61.6012, -84.4984, 0.59", "-146.389, -61.3681, -84.6454, 0.37", "-147.767, -60.6831, -85.0389, 0.22", "-148.615, -60.2558, -85.2818, 0.22", "-149.19, -59.9626, -85.4475, 0.22", "-150.34, -59.3499, -85.7806, 1.25", "-150.909, -59.0231, -85.9468, 1.69", "-151.325, -58.764, -86.0693, 1.92", "-151.873, -58.3905, -86.2308, 1.62", "-152.809, -57.746, -86.506, 0.81", "-153.405, -57.3346, -86.6813, 0.81", "-154.459, -56.6382, -86.9497, 0.37", "-155.19, -56.1722, -87.116, 0.37", "-155.626, -55.9125, -87.2065, 0.37", "-156.538, -55.4102, -87.3806, 0.29", "-157.454, -54.9275, -87.5409, 0.29", "-158.613, -54.3316, -87.698, 0.29", "-159.187, -54.0407, -87.7497, 0.44", "-159.6, -53.8277, -87.7745, 0.44", "-160.145, -53.5407, -87.8, 0.29", "-161.324, -52.927, -87.8484, 1.4", "-162.144, -52.5534, -87.8932, 1.77", "-162.498, -52.4104, -87.9236, 1.77", "-163.431, -52.0622, -88.0201, 0.66", "-164.128, -51.8076, -88.1078, 0.66", "-164.792, -51.5783, -88.2013, 0.81", "-165.561, -51.3246, -88.3608, 0.81", "-166.542, -50.9727, -88.6462, 0.37", "-167.765, -50.4746, -89.0656, 0.29", "-168.45, -50.1709, -89.331, 0.29", "-169.185, -49.8207, -89.6417, 1.11", "-170.145, -49.3132, -90.0851, 1.77", "-170.877, -48.8902, -90.4612, 0.88", "-171.79, -48.3444, -90.9593, 0.29", "-173.171, -47.5323, -91.7286, 0.29", "-173.898, -47.119, -92.1283, 0.66", "-174.45, -46.8266, -92.4196, 0.88", "-175.592, -46.2391, -92.995, 0.29", "-176.342, -45.8631, -93.3759, 0.29", "-176.99, -45.5554, -93.7146, 0.66", "-177.525, -45.3004, -94.0279, 0.66", "-178.266, -44.9536, -94.4928, 0.29", "-178.919, -44.6614, -94.9154, 0.88", "-179.346, -44.4634, -95.1991, 0.88", "-180.182, -44.029, -95.7653, 0.29", "-181.157, -43.4267, -96.3361, 0.59", "-181.459, -43.19, -96.4797, 0.59", "-181.893, -42.799, -96.6344, 0.59", "-182.585, -42.1566, -96.7984, 0.37", "-183.342, -41.4107, -96.9122, 0.29", "-184.409, -40.3114, -96.9913, 0.29", "-185.402, -39.2525, -97.0048, 1.25", "-186.005, -38.5641, -97.0171, 1.4", "-186.385, -38.1023, -97.0345, 1.4", "-186.868, -37.4896, -97.077, 1.03", "-187.444, -36.741, -97.1647, 0.29", "-188.158, -35.7707, -97.3369, 0.29", "-188.762, -34.8911, -97.4993, 0.29", "-189.505, -33.6923, -97.7229, 1.11", "-189.772, -33.247, -97.8091, 1.55", "-190.247, -32.437, -97.9668, 0.66", "-191.001, -31.1317, -98.2124, 0.29", "-192.008, -29.4324, -98.5355, 0.29", "-192.631, -28.3905, -98.731, 0.29", "-193.379, -27.131, -98.9611, 0.44", "-193.794, -26.4274, -99.0855, 0.44", "-194.245, -25.6605, -99.2212, 0.59", "-194.855, -24.6216, -99.4048, 0.29", "-195.308, -23.8105, -99.5374, 0.29", "-195.696, -23.0282, -99.6528, 0.44", "-196.034, -22.2177, -99.7645, 0.29", "-196.372, -21.3973, -99.8851, 0.59", "-196.786, -20.4484, -100.04, 1.03", "-197.022, -19.9486, -100.131, 1.03", "-197.673, -18.7659, -100.387, 0.22", "-198.366, -17.7276, -100.66, 0.22", "-199.012, -16.8594, -100.917, 0.22", "-199.54, -16.2544, -101.128, 0.29", "-199.887, -15.9443, -101.264, 0.29", "-200.337, -15.6599, -101.43, 0.52", "-200.625, -15.585, -101.524, 0.52" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-10.4148, -61.5451, -7.73189, 0.88", "-10.6903, -62.3603, -8.02884, 0.88", "-10.8898, -63.0302, -8.26494, 0.88", "-11.0535, -63.6775, -8.50248, 0.88", "-11.1866, -64.2661, -8.71577, 1.03", "-11.3049, -64.853, -8.923, 1.03", "-11.4132, -65.4112, -9.11635, 0.96", "-11.5165, -66.0515, -9.36333, 0.96", "-11.5907, -66.5404, -9.54929, 1.11", "-11.6637, -66.9558, -9.70502, 1.11", "-11.7762, -67.4423, -9.89095, 1.18", "-11.977, -68.1024, -10.1598, 1.18", "-12.1976, -68.7658, -10.4418, 1.11", "-12.3445, -69.1499, -10.6177, 1.25", "-12.5871, -69.7033, -10.8767, 1.25", "-12.8289, -70.1988, -11.1317, 1.47", "-13.0786, -70.6433, -11.3819, 1.69" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "164.328, 186.364, -115.949, 0.88", "164.597, 185.725, -116.05, 0.88", "164.734, 185.411, -116.109, 1.11", "164.87, 185.157, -116.179, 1.25", "165.125, 184.696, -116.32, 1.03", "165.47, 184.084, -116.512, 0.15", "165.666, 183.743, -116.62, 0.37", "165.759, 183.578, -116.679, 0.37", "166.323, 182.59, -117.017, 0.15", "166.506, 182.262, -117.125, 0.29", "166.714, 181.883, -117.239, 0.15", "166.907, 181.499, -117.335, 0.15", "167.068, 181.146, -117.405, 0.15", "167.199, 180.838, -117.438, 0.22", "167.32, 180.539, -117.446, 0.22", "167.477, 180.177, -117.45, 0.29", "167.673, 179.733, -117.458, 0.29", "168.03, 178.954, -117.459, 0.15", "168.469, 177.965, -117.461, 0.59", "168.587, 177.69, -117.463, 0.88", "168.724, 177.366, -117.469, 0.88", "169.115, 176.402, -117.504, 0.22", "169.411, 175.643, -117.518, 0.22", "169.782, 174.676, -117.499, 0.22", "169.959, 174.208, -117.479, 0.59", "170.07, 173.913, -117.459, 0.74", "170.186, 173.592, -117.43, 0.52", "170.506, 172.723, -117.363, 0.22", "170.813, 171.891, -117.333, 1.33", "170.915, 171.606, -117.33, 1.4", "171.201, 170.704, -117.355, 0.22", "171.362, 170.189, -117.39, 0.15", "171.655, 169.233, -117.448, 0.15", "171.821, 168.6, -117.492, 0.29", "171.938, 168.062, -117.521, 0.29", "172.115, 167.148, -117.549, 0.15", "172.252, 166.38, -117.554, 0.15", "172.493, 164.878, -117.542, 0.15", "172.67, 163.511, -117.516, 0.15", "172.864, 161.835, -117.491, 0.15", "172.926, 161.158, -117.487, 0.22", "172.941, 160.88, -117.489, 0.96", "172.941, 160.451, -117.502, 1.18", "172.911, 159.415, -117.589, 0.15", "172.907, 158.916, -117.637, 0.29", "172.902, 158.184, -117.736, 0.15", "172.904, 157.75, -117.811, 0.29", "172.908, 157.431, -117.869, 0.29", "172.931, 156.363, -118.072, 0.15", "172.968, 155.467, -118.262, 0.15", "173.009, 154.806, -118.414, 0.52", "173.037, 154.571, -118.479, 0.66" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "164.328, 186.364, -115.949, 0.22", "165.423, 186.362, -116.308, 0.22", "166.104, 186.348, -116.478, 0.52", "166.242, 186.344, -116.509, 0.52", "167.419, 186.312, -116.762, 0.22", "167.807, 186.308, -116.847, 0.59", "168.152, 186.306, -116.924, 0.59", "169.603, 186.261, -117.246, 0.22", "169.838, 186.255, -117.299, 0.44", "169.985, 186.254, -117.332, 0.44", "171.112, 186.251, -117.601, 0.15", "171.31, 186.246, -117.653, 0.37", "171.531, 186.235, -117.715, 0.37", "172.341, 186.163, -117.969, 0.15", "172.79, 186.111, -118.102, 0.15", "173.032, 186.072, -118.171, 0.29", "173.265, 186.019, -118.232, 0.29", "173.828, 185.833, -118.368, 0.22", "173.973, 185.774, -118.402, 0.44", "174.594, 185.469, -118.553, 0.22", "174.806, 185.356, -118.607, 0.44", "175.025, 185.236, -118.665, 0.44", "176.214, 184.548, -118.992, 0.22", "176.957, 184.082, -119.217, 0.22", "177.342, 183.828, -119.332, 0.37", "177.543, 183.686, -119.39, 0.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-49.6488, 202.329, 142.087, 0.88", "-47.642, 207.215, 147.777, 0.88", "-45.9504, 212.715, 153.009, 0.88" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-49.6488, 202.329, 142.087, 0.22", "-46.5587, 209.507, 148.555, 0.88", "-42.0228, 215.369, 155.445, 0.88", "-36.2605, 219.622, 162.577, 0.88", "-30.0292, 222.525, 169.99, 0.88", "-23.2272, 226.317, 176.433, 0.88", "-16.0618, 231.17, 181.661, 0.88", "-9.75941, 236.455, 187.547, 0.88" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "39.8256, -92.0686, 38.7895, 1.11", "41.4526, -91.8585, 39.6091, 1.11", "42.4461, -91.7888, 40.1297, 0.96", "43.4844, -91.7802, 40.6942, 0.81", "44.1411, -91.8439, 41.068, 0.81", "45.2515, -92.0478, 41.7308, 0.81", "45.9466, -92.1867, 42.1584, 1.03", "46.582, -92.3631, 42.5843, 1.03", "47.0846, -92.5013, 42.8913, 1.03", "48.1549, -92.7152, 43.4357, 0.59", "48.9216, -92.7166, 43.6764, 0.59", "49.7388, -92.6089, 43.8148, 0.81", "50.5534, -92.4787, 43.849, 0.81", "51.552, -92.3519, 43.8333, 0.66", "52.5559, -92.2926, 43.7923, 0.66", "53.8948, -92.4319, 43.7279, 0.74", "54.9919, -92.8568, 43.7719, 0.88", "55.8141, -93.4049, 43.9074, 0.88", "56.4873, -93.9843, 44.0975, 0.81", "57.0941, -94.5592, 44.3112, 0.81", "58.2233, -95.6678, 44.7886, 0.59", "59.31, -96.7035, 45.2905, 0.52", "60.1576, -97.4131, 45.6662, 0.66", "60.7807, -97.8665, 45.9332, 0.66", "61.6386, -98.4141, 46.2785, 0.81", "62.206, -98.7457, 46.481, 0.81", "63.2223, -99.2977, 46.7988, 0.66", "63.9519, -99.7138, 46.9713, 0.81", "64.7763, -100.242, 47.1839, 0.81", "65.6242, -100.831, 47.43, 0.88", "66.3973, -101.401, 47.6828, 0.88", "67.1224, -101.933, 47.9395, 0.52", "68.186, -102.704, 48.2769, 0.88", "68.9537, -103.284, 48.4663, 0.88", "69.5709, -103.793, 48.5747, 1.03", "70.2702, -104.457, 48.6437, 0.81", "70.796, -105.023, 48.679, 0.59", "71.9516, -106.426, 48.7678, 0.59", "72.5624, -107.262, 48.8466, 0.59", "73.0281, -107.917, 48.9164, 0.66", "73.6321, -108.764, 49.1093, 0.37", "74.04, -109.276, 49.2994, 0.37", "74.7855, -109.997, 49.5858, 0.66", "75.2416, -110.362, 49.7672, 0.81", "75.8526, -110.776, 49.9308, 0.81", "76.742, -111.284, 50.0495, 0.44", "78.1538, -112.047, 49.9233, 1.33", "79.9491, -113.034, 49.5772, 1.92", "80.4661, -113.313, 49.4511, 1.84", "81.9302, -114.055, 49.0714, 0.81", "82.902, -114.494, 48.8264, 0.88", "85.8301, -115.578, 48.1301, 0.52", "86.5393, -115.774, 48.0054, 0.52", "87.3435, -115.923, 47.93, 0.52", "88.2163, -116.007, 47.9296, 0.52", "89.1094, -116.006, 48.0476, 1.18", "90.0365, -115.934, 48.3025, 1.69", "90.5802, -115.831, 48.528, 1.92", "91.0589, -115.738, 48.7077, 1.69", "92.1928, -115.561, 49.1426, 0.81", "93.3965, -115.401, 49.6228, 0.52", "94.0809, -115.316, 49.9107, 0.81", "94.5542, -115.257, 50.1167, 0.81", "96.0744, -115.064, 50.7516, 0.37", "97.3937, -114.874, 51.3014, 0.29", "98.4016, -114.694, 51.6732, 0.52", "99.2368, -114.501, 51.9702, 0.88", "99.654, -114.377, 52.0942, 1.18", "100.035, -114.235, 52.1717, 1.4", "100.918, -113.815, 52.2678, 0.88", "102.4, -113.003, 52.3121, 0.44", "103.034, -112.639, 52.3149, 0.44", "103.867, -112.157, 52.3208, 1.18", "104.949, -111.543, 52.3998, 1.4", "105.572, -111.213, 52.4845, 1.4", "106.17, -110.924, 52.6026, 1.18", "106.494, -110.777, 52.6983, 1.18", "107.81, -110.234, 53.1512, 0.29", "108.841, -109.811, 53.5879, 0.29", "109.705, -109.432, 54.0016, 0.29", "110.359, -109.122, 54.3207, 0.44", "110.947, -108.806, 54.612, 0.37", "111.309, -108.589, 54.8014, 0.37", "112.262, -107.939, 55.3537, 1.33", "112.695, -107.59, 55.6073, 1.77", "113.224, -107.117, 55.936, 1.55", "113.773, -106.604, 56.293, 0.74", "114.321, -106.093, 56.6551, 0.52", "114.898, -105.581, 57.0161, 0.29", "115.365, -105.178, 57.3038, 0.29", "115.785, -104.825, 57.5661, 0.66", "116.295, -104.403, 57.8748, 0.66", "117.006, -103.856, 58.2717, 0.29", "117.895, -103.218, 58.7425, 0.29", "118.582, -102.747, 59.098, 0.29", "119.068, -102.428, 59.3533, 0.44", "119.795, -101.942, 59.7048, 1.33", "120.718, -101.308, 60.1293, 2.36", "121.008, -101.108, 60.2602, 2.36", "121.573, -100.702, 60.5307, 2.06", "122.372, -100.148, 60.9238, 0.66", "123.174, -99.5837, 61.3325, 0.29", "123.733, -99.1678, 61.6373, 0.29", "124.481, -98.5609, 62.0875, 0.52", "124.951, -98.166, 62.3843, 0.66", "125.455, -97.7261, 62.7325, 0.29", "125.687, -97.5019, 62.9124, 0.29", "126.201, -96.9293, 63.3911, 0.88", "126.505, -96.551, 63.6912, 1.03", "126.952, -95.9479, 64.1493, 1.03", "127.27, -95.5387, 64.4666, 0.74", "127.533, -95.2271, 64.7328, 0.44", "127.941, -94.8133, 65.1455, 0.37", "128.392, -94.451, 65.5597, 0.37", "128.861, -94.1291, 65.9292, 0.59", "129.402, -93.7715, 66.3008, 0.81", "129.729, -93.5396, 66.4966, 0.81", "130.019, -93.2999, 66.6511, 0.81", "130.829, -92.5088, 67.0338, 0.37", "131.515, -91.707, 67.3421, 0.37", "131.989, -91.0531, 67.5511, 0.74", "132.494, -90.2856, 67.7756, 1.11", "133.017, -89.4433, 68.0236, 0.66", "133.365, -88.8599, 68.2068, 0.66", "133.754, -88.1956, 68.4447, 0.81", "134.119, -87.5994, 68.7, 1.03", "134.522, -86.9785, 68.9986, 0.88", "134.963, -86.2999, 69.3416, 0.66", "135.332, -85.696, 69.6373, 0.29", "135.728, -84.9877, 69.978, 0.22", "136.064, -84.3448, 70.2886, 0.37", "136.285, -83.8699, 70.5169, 0.37", "136.591, -83.1686, 70.8529, 0.37", "136.862, -82.5774, 71.1507, 0.81", "137.132, -81.9999, 71.4371, 0.81", "137.493, -81.2476, 71.7962, 0.88", "137.961, -80.3167, 72.2238, 0.29", "138.295, -79.6661, 72.5185, 0.29", "138.612, -79.0988, 72.7602, 0.37", "139.203, -78.0858, 73.1634, 0.52", "139.624, -77.3662, 73.4173, 0.66", "139.937, -76.8287, 73.5917, 0.59", "140.355, -76.1311, 73.8037, 1.62", "140.947, -75.0978, 74.0947, 1.99", "141.505, -74.1312, 74.3544, 1.69", "141.912, -73.5287, 74.5446, 1.77" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "39.8256, -92.0686, 38.7895, 0.74", "39.9787, -93.0793, 39.1501, 0.74", "40.086, -93.6724, 39.3758, 0.74", "40.2154, -94.2655, 39.6157, 0.74", "40.3576, -94.8232, 39.8544, 0.74", "40.5342, -95.4448, 40.1452, 0.74", "40.6443, -95.8062, 40.3222, 0.88", "40.7777, -96.1508, 40.5138, 0.88", "40.9876, -96.6537, 40.8102, 0.59", "41.1512, -97.0444, 41.0354, 0.37", "41.3467, -97.5145, 41.2921, 0.37", "41.5059, -97.8949, 41.4874, 0.59", "41.6641, -98.2944, 41.6808, 0.66", "41.8273, -98.761, 41.8777, 0.66", "41.9718, -99.2392, 42.0466, 0.81", "42.0547, -99.5534, 42.1382, 0.81", "42.1303, -99.8808, 42.2145, 0.52", "42.1939, -100.173, 42.2728, 0.52", "42.3462, -100.927, 42.4026, 0.74", "42.4426, -101.474, 42.4965, 0.96", "42.5123, -101.946, 42.5831, 0.96", "42.5585, -102.329, 42.6581, 0.96", "42.5979, -102.804, 42.7491, 0.66", "42.606, -103.098, 42.7996, 0.66", "42.5808, -103.558, 42.8605, 1.11", "42.5385, -103.862, 42.8798, 1.11", "42.4346, -104.336, 42.8719, 0.81", "42.2803, -104.901, 42.8215, 0.44", "42.1154, -105.43, 42.7398, 0.44", "42.0019, -105.803, 42.6637, 0.44", "41.8752, -106.253, 42.5537, 0.66", "41.7779, -106.63, 42.4591, 0.44", "41.6562, -107.118, 42.3372, 0.81", "41.5787, -107.455, 42.2626, 0.96", "41.5078, -107.815, 42.198, 0.52", "41.4503, -108.19, 42.1403, 0.44", "41.3881, -108.75, 42.0521, 0.37", "41.3527, -109.19, 41.9798, 0.37", "41.3169, -109.672, 41.8987, 0.52", "41.2798, -110.272, 41.8019, 0.59", "41.2516, -110.849, 41.713, 0.59", "41.2399, -111.385, 41.6424, 0.66", "41.2505, -111.965, 41.5875, 0.74", "41.2698, -112.358, 41.5715, 0.59", "41.2924, -112.766, 41.5741, 0.44", "41.2947, -112.92, 41.5843, 0.74", "41.2877, -113.188, 41.6231, 0.74", "41.2776, -113.51, 41.6921, 0.44", "41.2782, -113.99, 41.8124, 0.29", "41.2975, -114.346, 41.9141, 0.37", "41.3253, -114.669, 42.0146, 0.59", "41.3739, -115.107, 42.1546, 0.59", "41.4487, -115.553, 42.279, 0.74", "41.4917, -115.793, 42.3449, 0.81", "41.5844, -116.242, 42.4539, 0.66", "41.6455, -116.529, 42.5131, 0.66", "41.6944, -116.76, 42.5524, 0.66", "41.8088, -117.386, 42.6391, 0.59", "41.9065, -118.039, 42.7067, 0.66", "41.9633, -118.517, 42.7423, 0.74", "42.0011, -118.965, 42.763, 0.74", "42.022, -119.239, 42.7785, 0.74" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-13.0786, -70.6433, -11.3819, 0.81", "-11.7389, -71.9379, -12.1894, 0.81", "-11.2314, -72.6416, -12.5091, 0.74", "-10.7661, -73.4778, -12.749, 0.59", "-10.4772, -74.0579, -12.8411, 0.59", "-10.0418, -75.0246, -12.926, 0.74", "-9.56537, -76.2281, -13.015, 0.66", "-9.23352, -77.423, -13.0318, 0.66", "-8.93454, -78.52, -13.0725, 0.74", "-8.58527, -79.709, -13.0974, 0.74", "-8.31387, -80.5012, -13.1276, 0.81", "-7.68538, -82.0771, -13.203, 0.96", "-7.3715, -82.8004, -13.2653, 1.18", "-6.58954, -84.6405, -13.4871, 0.52", "-6.08278, -85.83, -13.6959, 0.74", "-5.57142, -86.8887, -13.9578, 0.88", "-5.02954, -87.7897, -14.2708, 0.59", "-4.45912, -88.6085, -14.6099, 0.59", "-3.8915, -89.3914, -14.9713, 1.18", "-3.28087, -90.2891, -15.3902, 1.18", "-2.1212, -92.0853, -16.2267, 0.59", "-1.26575, -93.4874, -16.8284, 0.74", "-0.79964, -94.2793, -17.2091, 0.88", "-0.21306, -95.3907, -17.7793, 0.66", "0.238436, -96.5148, -18.3656, 0.88", "0.395446, -97.2559, -18.7321, 1.03", "0.406096, -98.1236, -19.1604, 0.74", "0.259076, -99.9892, -20.1793, 0.44", "0.228573, -100.621, -20.587, 0.44", "0.239812, -101.327, -21.0721, 0.81", "0.376925, -102.225, -21.6484, 1.18", "0.623899, -102.998, -22.0431, 1.18", "1.14929, -104.011, -22.3986, 0.81", "2.1556, -105.508, -22.6713, 0.52", "2.78569, -106.304, -22.7459, 0.88", "3.80637, -107.439, -22.7865, 1.03", "4.58602, -108.246, -22.7612, 1.03", "5.33888, -109.025, -22.6912, 1.25", "5.78162, -109.512, -22.632, 1.92", "6.32437, -110.178, -22.5678, 1.55", "7.36064, -111.725, -22.4727, 0.52", "7.69562, -112.371, -22.4815, 0.44", "8.14813, -113.382, -22.5681, 0.37", "8.35856, -113.896, -22.6385, 0.52", "8.59924, -114.478, -22.7453, 0.52", "9.13536, -115.754, -23.0171, 0.44", "9.71756, -117.143, -23.3071, 0.96", "10.2915, -118.543, -23.5428, 1.69", "10.7157, -119.557, -23.7037, 1.92", "11.1713, -120.665, -23.8529, 1.92", "11.6008, -121.804, -23.9983, 1.92", "11.9726, -122.903, -24.1375, 1.62", "12.4112, -124.589, -24.2656, 0.37", "12.8193, -126.739, -24.363, 0.29", "12.909, -127.329, -24.3865, 0.29", "13.0105, -128.087, -24.4154, 0.29", "13.0766, -128.507, -24.4273, 0.29", "13.314, -129.648, -24.5279, 0.88", "13.4751, -130.307, -24.6321, 1.11", "13.5924, -130.781, -24.7108, 1.11", "13.847, -131.789, -24.9255, 0.29", "14.0619, -132.733, -25.1439, 0.29", "14.3088, -134.156, -25.5131, 0.44", "14.4129, -134.975, -25.7641, 0.66", "14.4643, -135.586, -25.9644, 0.66", "14.4976, -136.624, -26.3244, 0.37", "14.4718, -137.975, -26.8001, 0.37", "14.4394, -139.251, -27.1975, 0.59", "14.4368, -140.379, -27.4749, 1.03", "14.4551, -140.938, -27.5942, 1.03", "14.5177, -141.995, -27.7864, 0.74", "14.6322, -143.064, -27.9732, 0.29", "14.8163, -144.208, -28.1725, 0.29", "15.058, -145.443, -28.3584, 1.25", "15.2351, -146.26, -28.4576, 2.06", "15.3673, -146.833, -28.521, 2.06", "15.6452, -148.073, -28.6519, 1.4", "15.8861, -149.406, -28.8058, 0.81", "15.9975, -150.4, -28.9426, 0.44", "16.0646, -151.229, -29.0488, 0.59", "16.127, -151.993, -29.1307, 0.59", "16.2283, -152.97, -29.1944, 0.59", "16.3866, -154.082, -29.1897, 0.44", "16.5739, -155.004, -29.1386, 0.29", "16.773, -155.78, -29.1015, 0.74", "17.012, -156.591, -29.0783, 0.74", "17.3435, -157.544, -29.0809, 0.52", "17.6427, -158.264, -29.0947, 0.52", "17.953, -158.949, -29.1113, 0.44", "18.3945, -159.965, -29.1427, 0.44", "18.6955, -160.802, -29.195, 0.37", "18.9639, -161.691, -29.2872, 0.37", "19.1254, -162.27, -29.353, 0.59", "19.4464, -163.363, -29.4576, 0.59", "19.6724, -163.993, -29.5086, 0.59", "20.0762, -164.948, -29.5494, 0.37", "20.6126, -166.09, -29.5749, 0.29", "20.9561, -166.781, -29.5827, 1.18", "21.2963, -167.376, -29.638, 1.4", "21.7491, -168.118, -29.7527, 1.4", "22.0727, -168.632, -29.8438, 1.4", "22.488, -169.251, -29.9544, 0.88", "22.9126, -169.866, -30.0392, 0.66", "24.0248, -171.488, -30.2145, 0.37", "24.6828, -172.479, -30.2759, 0.29", "25.0501, -173.053, -30.2756, 0.29", "25.35, -173.517, -30.2533, 0.29", "25.9943, -174.518, -30.138, 1.03", "26.3925, -175.109, -30.0018, 1.47", "26.7445, -175.599, -29.8216, 1.62", "27.1485, -176.143, -29.6126, 1.33", "27.5587, -176.728, -29.3975, 0.81", "27.9663, -177.376, -29.1829, 0.44", "28.5928, -178.479, -28.861, 0.29", "29.0226, -179.319, -28.6453, 0.88", "29.4507, -180.281, -28.4351, 0.96", "29.7257, -180.975, -28.3139, 1.25", "29.9358, -181.605, -28.2289, 1.4", "30.0938, -182.203, -28.172, 1.4", "30.2663, -183.117, -28.1215, 1.03", "30.4276, -184.28, -28.1046, 0.29", "30.5616, -185.803, -28.1369, 0.29", "30.5897, -186.831, -28.1903, 0.29", "30.5731, -187.495, -28.2394, 0.44", "30.4908, -188.383, -28.3292, 0.44", "30.3509, -189.285, -28.4728, 0.52", "30.1452, -190.249, -28.6811, 0.44", "29.9583, -191.047, -28.8912, 0.29", "29.848, -191.534, -29.0381, 0.44", "29.6616, -192.443, -29.3195, 0.44", "29.4427, -193.803, -29.7793, 1.55", "29.3348, -194.85, -30.1309, 2.43", "29.3081, -195.482, -30.3419, 2.73", "29.3132, -195.979, -30.4976, 2.43", "29.3654, -197.1, -30.8131, 1.69", "29.4891, -198.923, -31.2644, 0.52", "29.5257, -199.505, -31.382, 0.52", "29.5462, -200.005, -31.4712, 0.88", "29.5561, -200.914, -31.6578, 0.59", "29.5682, -201.668, -31.8209, 0.59", "29.5732, -202.741, -32.0713, 0.66", "29.5733, -203.285, -32.1961, 0.66", "29.5936, -203.931, -32.3556, 0.52", "29.7033, -205.273, -32.7173, 0.29", "29.8276, -206.186, -32.9624, 0.29", "29.8686, -206.409, -33.0165, 0.59", "30.0236, -207.137, -33.1633, 0.59", "30.1679, -207.866, -33.2846, 0.29", "30.3571, -209.036, -33.4671, 0.29", "30.4782, -209.888, -33.5533, 0.74", "30.5392, -210.431, -33.6504, 0.74", "30.5886, -211.091, -33.8, 0.74", "30.5969, -211.773, -33.9845, 0.59", "30.575, -212.878, -34.304, 0.29", "30.5405, -214.357, -34.7254, 0.29", "30.504, -215.839, -35.1499, 0.37", "30.4891, -216.371, -35.2952, 0.37", "30.4644, -217.247, -35.5091, 0.29", "30.4403, -218.236, -35.7173, 0.44", "30.4284, -218.682, -35.7824, 0.59", "30.4213, -219.294, -35.8354, 0.44", "30.4775, -219.935, -35.8287, 0.37", "30.5942, -220.68, -35.8116, 0.37", "30.73, -221.331, -35.7908, 0.52", "30.8833, -221.977, -35.7879, 0.74", "31.1378, -222.902, -35.8385, 0.29", "31.5192, -224.156, -35.9603, 1.11", "31.6692, -224.633, -36.021, 1.33", "31.816, -225.115, -36.0957, 1.33", "32.021, -225.906, -36.2441, 1.03", "32.2423, -227.057, -36.5219, 0.59", "32.2974, -227.707, -36.7179, 0.37", "32.2627, -228.41, -36.9586, 0.59", "32.2264, -228.743, -37.0835, 0.59", "32.1027, -229.435, -37.3518, 0.29", "31.9366, -230.07, -37.5857, 0.29", "31.7871, -230.602, -37.7558, 0.29", "31.7218, -231.109, -37.9575, 0.29", "31.6712, -232.018, -38.3912, 0.88", "31.6694, -232.294, -38.5256, 1.18", "31.6828, -232.594, -38.6747, 1.18", "31.7287, -233.337, -39.051, 0.74", "31.8446, -234.854, -39.8355, 0.29", "31.8882, -235.557, -40.1913, 0.29", "31.9134, -236.44, -40.6185, 0.29", "31.9241, -237.461, -41.1053, 0.96", "31.9148, -238.01, -41.3561, 1.11", "31.874, -238.944, -41.7372, 0.74", "31.8477, -239.753, -41.9998, 0.59", "31.8496, -240.163, -42.1121, 0.81", "31.852, -241.051, -42.331, 0.81", "31.8355, -241.812, -42.4954, 0.44", "31.7964, -242.855, -42.7297, 0.29", "31.7363, -243.939, -43.0121, 0.29", "31.6656, -245.268, -43.3987, 1.62", "31.6515, -245.849, -43.5628, 1.84", "31.669, -246.374, -43.6897, 1.99", "31.7453, -247.285, -43.947, 1.77", "31.8275, -248.154, -44.2278, 1.11", "31.9144, -249.132, -44.5595, 0.44", "32.0136, -250.057, -44.8751, 0.44", "32.158, -251.242, -45.2338, 0.37", "32.3773, -252.829, -45.6109, 0.29", "32.4538, -253.366, -45.7222, 0.29", "32.6083, -254.486, -45.9354, 0.66", "32.6988, -255.204, -46.0925, 0.81", "32.8087, -256.1, -46.3081, 0.37", "32.9836, -257.416, -46.5716, 0.29", "33.2939, -259.219, -46.8017, 1.4", "33.4148, -259.82, -46.8525, 1.99", "33.561, -260.533, -46.8795, 2.21", "33.7275, -261.446, -46.8634, 1.47", "33.977, -263.002, -46.6932, 0.29", "34.1038, -263.787, -46.5101, 0.29", "34.3251, -264.905, -46.0466, 0.52", "34.4661, -265.482, -45.7461, 0.66", "34.7005, -266.275, -45.2415, 0.44", "35.0777, -267.4, -44.4557, 0.37", "35.3929, -268.167, -43.9059, 0.37", "35.902, -269.297, -42.9574, 1.25", "36.0879, -269.672, -42.6161, 1.84", "36.4216, -270.355, -41.9435, 1.92", "36.8342, -271.165, -41.0821, 1.33", "37.1976, -271.878, -40.3158, 1.11", "38.0509, -273.646, -38.5008, 0.29", "38.4067, -274.42, -37.7093, 0.29", "38.9143, -275.487, -36.5559, 0.29", "39.2115, -276.094, -35.8731, 0.29", "39.5868, -276.815, -35.0557, 0.52", "39.851, -277.307, -34.5335, 0.66", "40.5497, -278.532, -33.3486, 0.29", "41.0354, -279.36, -32.5336, 1.11", "41.407, -279.987, -31.9279, 1.11", "42.187, -281.446, -30.4964, 0.22", "42.4281, -281.914, -30.018, 0.44" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-13.0786, -70.6433, -11.3819, 0.96", "-14.1341, -71.9919, -11.8644, 0.96", "-15.0088, -73.0652, -12.2828, 0.96", "-15.7625, -73.9177, -12.6358, 1.18", "-16.4358, -74.6364, -12.9956, 1.18", "-17.4264, -75.6319, -13.6032, 0.74", "-18.1543, -76.3068, -14.1064, 0.74", "-18.6578, -76.7537, -14.5436, 0.74", "-19.0874, -77.1052, -14.9979, 0.74", "-19.8726, -77.7683, -15.908, 0.66", "-20.2028, -78.1344, -16.3239, 0.66", "-20.6042, -78.7332, -16.8269, 0.66", "-20.9346, -79.3213, -17.2131, 0.81", "-21.2907, -79.9637, -17.5834, 0.96", "-21.8408, -80.9143, -18.0874, 1.11", "-22.4412, -81.8564, -18.5431, 1.11", "-22.9288, -82.6239, -18.8986, 1.33", "-23.3526, -83.2767, -19.2101, 1.47", "-23.975, -84.1271, -19.6774, 1.47", "-24.547, -84.7953, -20.1148, 1.4", "-25.2054, -85.3967, -20.6103, 1.25" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "141.912, -73.5287, 74.5446, 0.52", "142.875, -72.4381, 75.0436, 0.52", "143.425, -71.7288, 75.3085, 0.29", "143.995, -70.878, 75.6296, 0.22", "144.622, -69.961, 75.9053, 0.22", "145.216, -69.1254, 76.1161, 0.22", "145.845, -68.2107, 76.31, 0.22", "146.465, -67.2173, 76.4744, 0.88", "146.937, -66.3862, 76.5717, 1.18", "147.757, -64.8175, 76.716, 1.47", "148.035, -64.2506, 76.7643, 1.55", "148.994, -62.2939, 76.932, 0.22", "149.551, -61.252, 77.0399, 0.22", "150.254, -60.0081, 77.2436, 0.88", "150.752, -59.156, 77.4119, 1.4", "151.04, -58.6508, 77.5409, 1.25", "151.506, -57.8643, 77.7566, 0.81", "152.332, -56.5551, 78.1373, 0.22", "153.533, -54.7467, 78.693, 0.22", "154.275, -53.7031, 79.0448, 0.66", "154.749, -53.0529, 79.2732, 0.81", "155.044, -52.6303, 79.4184, 0.66", "155.316, -52.2043, 79.5625, 0.52" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "141.912, -73.5287, 74.5446, 0.29", "141.546, -71.8064, 74.8947, 0.29", "141.299, -70.5893, 75.1521, 0.29", "141.105, -69.685, 75.3386, 0.52", "140.984, -69.1706, 75.4428, 0.66", "140.75, -68.1984, 75.6445, 0.22", "140.593, -67.5594, 75.7761, 0.59", "140.417, -66.9017, 75.9135, 0.74", "140.263, -66.3586, 76.0331, 0.81", "140.029, -65.538, 76.2332, 0.52", "139.753, -64.5597, 76.497, 0.22", "139.568, -63.8891, 76.6932, 0.29", "139.435, -63.3406, 76.8724, 0.29", "139.327, -62.8018, 77.0685, 0.15", "139.225, -62.0907, 77.3557, 0.29", "139.173, -61.5953, 77.5652, 0.37", "139.122, -61.0126, 77.8105, 0.22", "139.062, -60.2243, 78.1308, 0.22", "139.009, -59.5352, 78.3877, 0.74", "138.964, -59.0234, 78.5659, 0.88", "138.904, -58.3993, 78.7732, 0.52", "138.8, -57.3655, 79.1035, 0.22", "138.724, -56.7281, 79.2932, 0.44", "138.665, -56.3442, 79.3907, 0.44" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "42.022, -119.239, 42.7785, 0.37", "42.5519, -120.2, 43.2497, 0.37", "42.9416, -120.899, 43.6348, 0.52", "43.2634, -121.471, 43.9763, 0.59", "43.7542, -122.355, 44.5178, 0.22", "44.0538, -122.895, 44.86, 0.22", "44.3216, -123.379, 45.1727, 0.44", "44.6262, -123.949, 45.5845, 0.44", "44.9063, -124.435, 45.9751, 0.37", "45.23, -124.943, 46.4424, 0.29", "45.5577, -125.397, 46.9192, 0.52", "45.7851, -125.691, 47.2479, 0.74", "46.1362, -126.141, 47.7429, 0.74", "46.5258, -126.649, 48.2822, 0.44", "46.7648, -126.958, 48.6106, 0.44", "47.2017, -127.515, 49.2119, 0.29", "47.5371, -127.941, 49.6585, 0.29", "47.7385, -128.199, 49.9198, 0.66", "47.9725, -128.517, 50.2217, 0.81", "48.1268, -128.726, 50.4253, 0.81", "48.6337, -129.382, 51.1285, 0.29", "48.9846, -129.791, 51.6483, 0.29", "49.2549, -130.08, 52.0614, 0.44", "49.6789, -130.51, 52.7232, 0.29", "50.0138, -130.842, 53.2734, 0.37", "50.5274, -131.32, 54.1391, 0.37", "50.9453, -131.683, 54.8645, 0.37", "51.1842, -131.869, 55.2925, 0.59", "51.3506, -131.978, 55.5923, 0.59", "51.7906, -132.228, 56.4093, 0.29", "52.2105, -132.455, 57.2174, 1.25", "52.414, -132.56, 57.6195, 1.55", "52.6986, -132.702, 58.203, 1.55", "53.3497, -133.026, 59.5961, 0.29", "53.7594, -133.255, 60.4853, 0.52", "54.025, -133.413, 61.0673, 0.59", "54.2759, -133.604, 61.6785, 0.37", "54.4723, -133.779, 62.1814, 0.22", "54.7817, -134.103, 62.9967, 0.22", "55.131, -134.509, 63.9524, 0.22", "55.3646, -134.79, 64.5909, 0.22", "55.7747, -135.31, 65.7376, 0.59", "56.0153, -135.633, 66.4292, 0.59", "56.2308, -135.934, 67.0421, 0.37" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "42.022, -119.239, 42.7785, 0.59", "42.2269, -119.943, 42.8275, 0.59", "42.3126, -120.847, 43.0062, 0.44", "42.3743, -121.893, 43.2459, 0.29", "42.4804, -123.312, 43.5427, 0.59", "42.5439, -124.023, 43.6811, 0.66", "42.6865, -125.366, 43.936, 0.44", "43.141, -128.492, 44.54, 0.29", "43.3259, -129.465, 44.7239, 0.29", "43.6306, -130.687, 44.9702, 0.59", "43.8772, -131.455, 45.1434, 0.74", "44.0747, -131.98, 45.2673, 0.74", "44.5383, -133.1, 45.5181, 0.44", "45.0743, -134.233, 45.6982, 0.29", "45.4554, -135.218, 45.842, 0.29", "45.8344, -136.319, 45.9843, 0.59", "46.1472, -137.263, 46.0923, 0.44", "46.3966, -138.053, 46.1828, 0.44", "46.6347, -138.866, 46.2853, 0.44", "46.9612, -139.886, 46.4397, 0.37", "47.3817, -141.089, 46.6616, 0.37", "47.615, -141.672, 46.8183, 0.66", "47.9037, -142.256, 47.0811, 0.66", "48.1112, -142.607, 47.3092, 0.52", "48.5199, -143.265, 47.8028, 0.74", "48.6974, -143.553, 48.0314, 0.74", "49.1354, -144.341, 48.6136, 0.29", "49.575, -145.18, 49.1837, 0.29", "49.9109, -145.821, 49.6145, 0.29", "50.4149, -146.782, 50.2542, 0.22", "50.7729, -147.464, 50.7085, 0.22", "51.2761, -148.42, 51.3482, 0.44", "51.6675, -149.161, 51.8465, 0.59", "51.9361, -149.715, 52.1738, 0.59", "57.4455, -160.196, 55.6786, 0.59" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-25.2054, -85.3967, -20.6103, 0.88", "-25.5489, -85.6151, -20.7523, 0.88", "-26.4875, -86.2623, -21.1376, 0.74", "-27.3989, -86.9103, -21.5058, 0.88", "-28.1221, -87.4541, -21.8446, 0.52", "-29.0829, -88.1563, -22.2583, 0.66", "-29.9861, -88.7928, -22.6285, 0.74", "-30.8837, -89.3824, -22.9863, 0.88", "-31.7144, -89.8762, -23.3091, 1.03", "-32.9516, -90.5505, -23.7603, 1.33", "-34.1529, -91.1626, -24.1841, 1.4", "-35.2998, -91.6973, -24.5884, 0.66", "-36.0458, -92.0257, -24.8376, 0.66", "-36.792, -92.3774, -25.0535, 0.59", "-37.6603, -92.8692, -25.2658, 0.37", "-38.2261, -93.2563, -25.3839, 0.88", "-38.9915, -93.9075, -25.5861, 0.96", "-39.5186, -94.4139, -25.7125, 0.96", "-40.2875, -95.2087, -25.8675, 0.66", "-40.8604, -95.8289, -25.9786, 0.66", "-41.6467, -96.6826, -26.1535, 0.66", "-42.3076, -97.4034, -26.3054, 0.74", "-42.7378, -97.8748, -26.4028, 0.96", "-43.4997, -98.7153, -26.5863, 0.74", "-44.1695, -99.5059, -26.7417, 0.74", "-44.9485, -100.546, -26.8772, 0.96", "-45.4544, -101.322, -26.9289, 1.03", "-45.9253, -102.066, -26.9484, 0.81", "-46.4535, -102.842, -26.9491, 0.44", "-47.3163, -104.039, -26.908, 0.44", "-47.9488, -104.886, -26.8212, 0.44", "-48.5644, -105.703, -26.688, 0.44", "-49.5454, -107.058, -26.4169, 0.44", "-50.3881, -108.33, -26.1379, 0.81", "-50.7521, -108.939, -25.9944, 0.81", "-51.173, -109.746, -25.8221, 0.88", "-51.3773, -110.194, -25.7433, 0.66", "-51.7875, -111.24, -25.611, 0.37", "-52.1618, -112.228, -25.5149, 0.29", "-52.5161, -112.925, -25.4926, 0.44", "-53.2159, -113.718, -25.5441, 0.29", "-53.83, -114.188, -25.617, 0.29", "-54.5594, -114.628, -25.6881, 0.37", "-55.7713, -115.202, -25.7683, 0.37", "-56.6636, -115.601, -25.7724, 0.37", "-57.7082, -116.105, -25.7345, 0.81", "-58.3923, -116.473, -25.7003, 1.03", "-58.999, -116.901, -25.6253, 1.03", "-59.467, -117.321, -25.5295, 0.96", "-60.5173, -118.497, -25.2265, 0.52", "-61.0462, -119.158, -25.0256, 0.52", "-61.7236, -120.04, -24.733, 1.77", "-62.7834, -121.44, -24.2866, 0.66", "-63.3671, -122.163, -24.0996, 0.66", "-64.1832, -123.08, -23.889, 0.59", "-64.8814, -123.813, -23.7399, 0.74", "-65.524, -124.461, -23.5908, 0.74", "-66.1324, -125.044, -23.4636, 0.74", "-67.2414, -126.016, -23.3238, 0.37", "-68.6556, -127.262, -23.1888, 0.37", "-69.3515, -127.903, -23.1336, 0.44", "-70.0504, -128.624, -23.0531, 0.44", "-70.8167, -129.48, -22.9513, 0.44", "-71.347, -130.1, -22.886, 0.66", "-71.7683, -130.633, -22.8463, 0.74", "-72.1775, -131.195, -22.8428, 0.74", "-72.9979, -132.341, -22.8639, 0.81", "-73.8279, -133.542, -22.9183, 0.44", "-74.6318, -134.759, -22.977, 0.44", "-75.3368, -135.91, -23.0387, 0.37", "-76.0714, -137.168, -23.0847, 0.37", "-76.5034, -137.94, -23.1123, 1.18", "-76.8565, -138.6, -23.1511, 1.62", "-77.3983, -139.643, -23.1895, 1.84", "-77.9254, -140.639, -23.2058, 1.03", "-78.5938, -141.87, -23.2194, 0.74", "-78.8834, -142.432, -23.2138, 0.74", "-79.4181, -143.592, -23.1739, 0.44", "-79.9574, -144.893, -23.1006, 0.59", "-80.2808, -145.768, -23.0383, 0.59", "-80.6524, -146.863, -22.9642, 0.37", "-81.0818, -148.201, -22.8888, 0.37", "-81.4961, -149.445, -22.8226, 0.37", "-81.7918, -150.299, -22.7951, 0.81", "-82.089, -151.044, -22.8116, 0.96", "-82.4904, -151.902, -22.8881, 1.18", "-83.2166, -153.233, -23.0638, 0.44", "-83.8311, -154.228, -23.2065, 0.44", "-84.7222, -155.514, -23.3304, 0.44", "-85.4562, -156.471, -23.3858, 0.44", "-86.2937, -157.505, -23.4183, 0.59", "-86.8945, -158.224, -23.4041, 0.74", "-87.672, -159.143, -23.3511, 0.96", "-88.8081, -160.436, -23.2506, 0.59", "-89.5002, -161.219, -23.1868, 0.44", "-90.2537, -162.117, -23.1003, 0.37", "-90.831, -162.858, -23.0152, 0.52", "-91.3238, -163.562, -22.9576, 0.52", "-92.2307, -164.974, -22.8788, 0.37", "-92.8476, -165.982, -22.8301, 0.59", "-93.3037, -166.699, -22.7605, 0.74", "-93.9371, -167.637, -22.6554, 0.96", "-94.2966, -168.182, -22.5938, 0.88", "-94.7044, -168.826, -22.5109, 0.81", "-95.3432, -169.781, -22.3673, 0.88", "-96.185, -170.931, -22.227, 0.37", "-97.0204, -172.013, -22.1255, 0.37", "-97.7882, -172.975, -22.0624, 0.37", "-98.4999, -173.833, -22.0116, 0.66", "-99.5058, -174.992, -21.9566, 0.52", "-100.225, -175.742, -21.943, 0.37", "-101.01, -176.447, -21.9848, 0.59", "-101.814, -177.049, -22.0281, 0.59", "-102.883, -177.728, -22.0562, 0.29", "-103.568, -178.139, -22.0324, 0.29", "-104.292, -178.603, -21.9788, 0.29", "-105.504, -179.432, -21.835, 0.37", "-106.949, -180.488, -21.6337, 0.52", "-108.219, -181.488, -21.427, 0.74", "-109.424, -182.499, -21.2278, 0.59", "-110.228, -183.212, -21.1126, 0.44", "-110.722, -183.673, -21.066, 0.44", "-111.391, -184.34, -21.0372, 0.37", "-112.07, -185.126, -21.0677, 0.52", "-112.746, -186.013, -21.1123, 0.74", "-113.546, -187.151, -21.1423, 0.44", "-114.065, -187.984, -21.1044, 0.37", "-114.519, -188.85, -20.9759, 0.37", "-115.028, -190.01, -20.7299, 0.59", "-115.262, -190.686, -20.5594, 0.59", "-115.498, -191.633, -20.2785, 0.59", "-115.685, -192.717, -19.8984, 0.66", "-115.891, -194.24, -19.3468, 0.66", "-116.034, -195.449, -18.9383, 0.37", "-116.102, -196.215, -18.699, 0.37", "-116.121, -197.164, -18.4042, 0.37", "-116.083, -197.819, -18.1788, 0.37", "-115.954, -199.047, -17.7463, 0.59", "-115.851, -199.645, -17.5469, 0.74", "-115.692, -200.458, -17.2529, 0.74", "-115.511, -201.724, -16.8177, 0.44", "-115.461, -202.385, -16.6173, 0.44", "-122.783, -211.318, -19.1481, 0.44" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-25.2054, -85.3967, -20.6103, 0.81", "-26.0705, -88.1929, -23.4154, 0.81", "-26.3978, -89.1575, -24.5406, 0.74", "-26.5825, -89.6365, -25.2288, 0.81", "-26.7911, -90.1202, -26.09, 0.59", "-27.104, -90.702, -27.2674, 0.44", "-27.2406, -90.9026, -27.7118, 0.44", "-27.9915, -91.3166, -29.1089, 0.52", "-28.3342, -91.419, -29.867, 0.74", "-28.7033, -91.5256, -30.743, 0.59", "-29.0642, -91.644, -31.5778, 0.59", "-29.3724, -91.7779, -32.2392, 1.03", "-29.7734, -91.9822, -32.914, 1.18", "-30.2436, -92.2278, -33.5224, 1.18", "-30.8587, -92.5526, -34.2819, 0.52", "-31.3319, -92.7914, -34.8912, 0.37", "-31.698, -92.9627, -35.4025, 0.29", "-32.055, -93.1238, -35.9431, 0.29", "-32.4357, -93.2798, -36.5371, 0.88", "-32.9046, -93.4294, -37.2824, 1.11", "-33.259, -93.4972, -37.9836, 1.4", "-33.486, -93.5779, -38.5925, 1.55", "-33.6166, -93.6878, -39.1263, 1.55", "-33.7945, -93.9465, -40.0816, 0.59", "-33.8903, -94.1223, -40.6208, 0.59", "-34.182, -94.6589, -42.019, 0.44", "-34.5218, -95.3139, -43.5982, 0.29", "-34.7747, -95.9558, -45.0619, 0.52", "-34.814, -96.2588, -45.7507, 0.66", "-34.8118, -96.6281, -46.5714, 0.66", "-34.8001, -96.8951, -47.1293, 0.44", "-34.7598, -97.5472, -48.5001, 0.37", "-34.6426, -98.8775, -51.5258, 2.8", "-34.3399, -100.511, -55.453, 0.74", "-34.1269, -101.209, -57.2462, 0.74", "-33.8674, -101.74, -58.7888, 0.52", "-33.4979, -102.274, -60.6106, 1.11", "-33.329, -102.451, -61.3812, 1.25", "-32.5169, -102.857, -64.7281, 0.37", "-31.9669, -102.877, -66.8999, 1.03", "-31.3219, -102.68, -69.2106, 1.25", "-30.8979, -102.456, -70.6123, 0.37", "-30.5787, -102.238, -71.655, 1.84", "-30.0439, -101.768, -73.5343, 0.52", "-29.9409, -101.616, -73.9862, 0.37", "-29.7654, -101.253, -75.0082, 0.74", "-29.5951, -100.745, -76.6196, 0.44", "-29.5439, -100.417, -77.9403, 0.44", "-29.5794, -100.247, -78.8281, 0.44", "-29.6896, -100.121, -79.6752, 1.11", "-29.8207, -100.023, -80.4069, 1.55", "-30.004, -99.9257, -81.1914, 1.69", "-30.675, -99.6853, -83.3703, 0.29", "-31.0249, -99.5948, -84.3913, 0.44", "-31.2861, -99.5408, -85.1791, 0.44", "-31.4986, -99.5028, -85.8515, 1.33", "-31.7123, -99.4585, -86.4992, 1.55", "-32.1939, -99.3506, -87.9547, 0.29", "-32.4194, -99.3027, -88.6202, 0.52", "-32.7975, -99.2447, -89.726, 0.29", "-33.0017, -99.1905, -90.3843, 1.03", "-33.1686, -99.1288, -90.9651, 1.18", "-33.3228, -99.0508, -91.5118, 1.18", "-33.6737, -98.8253, -92.8866, 0.29", "-33.9122, -98.6853, -93.8533, 0.29", "-34.3415, -98.4812, -95.3963, 0.88", "-34.5543, -98.3893, -96.1571, 0.66", "-34.6974, -98.33, -96.675, 0.66", "-34.875, -98.2455, -97.282, 0.44", "-35.1041, -98.1348, -98.0717, 0.29", "-35.3589, -98.0228, -98.866, 0.74", "-35.4768, -97.9815, -99.2004, 0.88", "-36.0119, -97.7565, -100.683, 0.29", "-36.3882, -97.5862, -101.663, 1.47", "-36.7057, -97.4346, -102.435, 1.92", "-37.0124, -97.2899, -103.135, 1.92", "-37.7276, -96.9683, -104.674, 0.22", "-38.2667, -96.7464, -105.721, 0.22", "-38.654, -96.6007, -106.375, 0.59", "-38.8758, -96.5236, -106.712, 0.59", "-39.5385, -96.2769, -107.61, 0.22", "-40.0337, -96.0757, -108.217, 0.81", "-40.2579, -95.9729, -108.481, 1.03", "-40.5197, -95.8395, -108.792, 1.03", "-41.2185, -95.4334, -109.666, 0.22", "-41.5863, -95.2066, -110.125, 0.44", "-42.785, -94.3959, -111.642, 0.22", "-43.1571, -94.129, -112.133, 0.22", "-43.6572, -93.7596, -112.804, 1.03", "-44.0031, -93.4964, -113.271, 1.25" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "56.2308, -135.934, 67.0421, 0.22", "56.7818, -136.447, 67.653, 0.22", "57.0207, -136.67, 67.9179, 0.22", "57.1968, -136.834, 68.1132, 0.44", "57.3208, -136.95, 68.2507, 0.44", "60.6471, -140.19, 72.9857, 0.44" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "56.2308, -135.934, 67.0421, 0.59", "56.7989, -135.548, 67.8723, 0.59", "57.1099, -135.336, 68.3266, 0.66", "57.2398, -135.248, 68.5165, 0.66", "62.1726, -131.649, 77.7755, 0.66", "66.6688, -128.256, 87.3279, 0.66", "69.2936, -124.95, 97.5832, 0.66" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_46", "dend_17", "dend_0", "dend_50", "dend_47", "dend_45", "dend_18", "dend_10", "dend_1", "dend_56", "dend_51", "dend_49", "dend_48", "dend_38", "dend_19", "dend_12", "dend_11", "dend_5", "dend_2", "dend_60", "dend_57", "dend_53", "dend_52", "dend_42", "dend_39", "dend_27", "dend_20", "dend_14", "dend_13", "dend_9", "dend_6", "dend_4", "dend_3", "dend_62", "dend_61", "dend_59", "dend_58", "dend_55", "dend_54", "dend_44", "dend_43", "dend_41", "dend_40", "dend_37", "dend_28", "dend_26", "dend_21", "dend_16", "dend_15", "dend_8", "dend_7", "dend_34", "dend_29", "dend_25", "dend_22", "dend_36", "dend_35", "dend_31", "dend_30", "dend_24", "dend_23", "dend_33", "dend_32" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_46", "dend_17", "dend_0", "dend_50", "dend_47", "dend_45", "dend_18", "dend_10", "dend_1", "dend_56", "dend_51", "dend_49", "dend_48", "dend_38", "dend_19", "dend_12", "dend_11", "dend_5", "dend_2", "dend_60", "dend_57", "dend_53", "dend_52", "dend_42", "dend_39", "dend_27", "dend_20", "dend_14", "dend_13", "dend_9", "dend_6", "dend_4", "dend_3", "dend_62", "dend_61", "dend_59", "dend_58", "dend_55", "dend_54", "dend_44", "dend_43", "dend_41", "dend_40", "dend_37", "dend_28", "dend_26", "dend_21", "dend_16", "dend_15", "dend_8", "dend_7", "dend_34", "dend_29", "dend_25", "dend_22", "dend_36", "dend_35", "dend_31", "dend_30", "dend_24", "dend_23", "dend_33", "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_17", "dend_17", "dend_17", "dend_17", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_59", "dend_59", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_44", "dend_44", "dend_43", "dend_41", "dend_41", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L23_BTC_fcf6c1f59c_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_46, id: dend_46, parent: soma_0
create dend_46
public dend_46
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_50, id: dend_50, parent: dend_46
create dend_50
public dend_50
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_45, id: dend_45, parent: dend_17
create dend_45
public dend_45
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_10, id: dend_10, parent: dend_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_56, id: dend_56, parent: dend_50
create dend_56
public dend_56
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_38, id: dend_38, parent: dend_18
create dend_38
public dend_38
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_42, id: dend_42, parent: dend_38
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_27, id: dend_27, parent: dend_19
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_27
create dend_37
public dend_37
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_20
create dend_26
public dend_26
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_25, id: dend_25, parent: dend_21
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_46, dend_17, dend_0, dend_50, dend_47, dend_45, dend_18, dend_10, dend_1, dend_56, dend_51, dend_49, dend_48, dend_38, dend_19, dend_12, dend_11, dend_5, dend_2, dend_60, dend_57, dend_53, dend_52, dend_42, dend_39, dend_27, dend_20, dend_14, dend_13, dend_9, dend_6, dend_4, dend_3, dend_62, dend_61, dend_59, dend_58, dend_55, dend_54, dend_44, dend_43, dend_41, dend_40, dend_37, dend_28, dend_26, dend_21, dend_16, dend_15, dend_8, dend_7, dend_34, dend_29, dend_25, dend_22, dend_36, dend_35, dend_31, dend_30, dend_24, dend_23, dend_33, dend_32]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_46, dend_17, dend_0, dend_50, dend_47, dend_45, dend_18, dend_10, dend_1, dend_56, dend_51, dend_49, dend_48, dend_38, dend_19, dend_12, dend_11, dend_5, dend_2, dend_60, dend_57, dend_53, dend_52, dend_42, dend_39, dend_27, dend_20, dend_14, dend_13, dend_9, dend_6, dend_4, dend_3, dend_62, dend_61, dend_59, dend_58, dend_55, dend_54, dend_44, dend_43, dend_41, dend_40, dend_37, dend_28, dend_26, dend_21, dend_16, dend_15, dend_8, dend_7, dend_34, dend_29, dend_25, dend_22, dend_36, dend_35, dend_31, dend_30, dend_24, dend_23, dend_33, dend_32]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_51
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_59, dend_59, dend_58, dend_58, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_44, dend_44, dend_43, dend_41, dend_41, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_46(0), soma_0(0.4500003629291099)
    connect dend_17(0), soma_0(0.4500003629291099)
    connect dend_0(0), soma_0(0.4500003629291099)
    connect axon_0(0), soma_0(1.0)
    connect dend_50(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_45(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_10(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_56(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_38(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_42(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_27(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_37(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_25(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.701782, -14.5938, 2.84454, 2.73269 ) }
    soma_0 { pt3dadd( 0.624028, -13.2198, 2.58654, 4.41229 ) }
    soma_0 { pt3dadd( 0.546274, -11.8458, 2.32855, 5.84991 ) }
    soma_0 { pt3dadd( 0.46852, -10.4718, 2.07055, 7.31637 ) }
    soma_0 { pt3dadd( 0.390766, -9.09779, 1.81255, 8.68275 ) }
    soma_0 { pt3dadd( 0.313011, -7.72379, 1.55455, 10.1324 ) }
    soma_0 { pt3dadd( 0.235257, -6.34979, 1.29656, 11.1056 ) }
    soma_0 { pt3dadd( 0.157503, -4.97579, 1.03856, 11.7054 ) }
    soma_0 { pt3dadd( 0.0797487, -3.60179, 0.780562, 12.0256 ) }
    soma_0 { pt3dadd( 0.00199453, -2.22779, 0.522565, 12.4948 ) }
    soma_0 { pt3dadd( -0.0757597, -0.853785, 0.264567, 12.7838 ) }
    soma_0 { pt3dadd( -0.153514, 0.520216, 0.00657008, 12.9275 ) }
    soma_0 { pt3dadd( -0.231268, 1.89422, -0.251427, 12.8186 ) }
    soma_0 { pt3dadd( -0.309022, 3.26822, -0.509424, 12.3668 ) }
    soma_0 { pt3dadd( -0.386777, 4.64222, -0.767422, 11.8063 ) }
    soma_0 { pt3dadd( -0.464531, 6.01622, -1.02542, 10.8607 ) }
    soma_0 { pt3dadd( -0.542285, 7.39022, -1.28342, 9.60756 ) }
    soma_0 { pt3dadd( -0.620039, 8.76422, -1.54141, 8.32491 ) }
    soma_0 { pt3dadd( -0.697793, 10.1382, -1.79941, 6.57632 ) }
    soma_0 { pt3dadd( -0.775548, 11.5122, -2.05741, 4.5422 ) }
    soma_0 { pt3dadd( -0.853302, 12.8862, -2.3154, 2.90642 ) }
    // Section: dend_46, id: dend_46, parent: soma_0 (entry count 21/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -3.99768, 4.28759, 12.0608, 1.77 ) }
    dend_46 { pt3dadd( -4.2091, 5.21556, 12.3693, 1.77 ) }
    dend_46 { pt3dadd( -4.59059, 6.65388, 13.0412, 1.55 ) }
    dend_46 { pt3dadd( -4.89421, 7.61559, 13.6079, 1.55 ) }
    dend_46 { pt3dadd( -5.34115, 8.70645, 14.4356, 1.4 ) }
    dend_46 { pt3dadd( -6.15286, 10.1991, 15.7697, 1.4 ) }
    dend_46 { pt3dadd( -6.82206, 11.1714, 16.7369, 1.4 ) }
    dend_46 { pt3dadd( -7.5835, 11.9321, 17.678, 1.69 ) }
    dend_46 { pt3dadd( -8.24619, 12.4008, 18.3622, 1.69 ) }
    dend_46 { pt3dadd( -9.51861, 13.0914, 19.419, 1.4 ) }
    dend_46 { pt3dadd( -10.6485, 13.5944, 20.1983, 1.33 ) }
    dend_46 { pt3dadd( -11.667, 14.0145, 20.644, 1.18 ) }
    dend_46 { pt3dadd( -13.2832, 14.7361, 20.9657, 1.18 ) }
    dend_46 { pt3dadd( -14.4122, 15.3211, 20.9982, 1.18 ) }
    dend_46 { pt3dadd( -15.5398, 16.005, 20.9732, 1.33 ) }
    dend_46 { pt3dadd( -17.0101, 17.0992, 20.8624, 1.4 ) }
    dend_46 { pt3dadd( -19.5173, 19.4688, 20.6296, 1.62 ) }
    dend_46 { pt3dadd( -20.44, 20.5843, 20.5585, 1.69 ) }
    dend_46 { pt3dadd( -21.3723, 21.92, 20.4872, 1.33 ) }
    dend_46 { pt3dadd( -22.5272, 23.881, 20.4523, 1.62 ) }
    dend_46 { pt3dadd( -23.0635, 25.0694, 20.5382, 1.62 ) }
    dend_46 { pt3dadd( -23.4508, 26.3718, 20.9208, 1.84 ) }
    dend_46 { pt3dadd( -23.5886, 27.0739, 21.4049, 1.84 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 44/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 1.09232, -14.5417, 2.30081, 3.98 ) }
    dend_17 { pt3dadd( 1.09232, -14.5417, 2.30081, 3.98 ) }
    dend_17 { pt3dadd( 1.19829, -15.8754, 2.30081, 3.98 ) }
    dend_17 { pt3dadd( 1.33426, -17.5869, 2.30081, 3.76 ) }
    dend_17 { pt3dadd( 1.46972, -19.2919, 2.30081, 3.83 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.877678, 13.0001, -4.94919, 2.58 ) }
    dend_0 { pt3dadd( -0.877678, 13.0001, -4.94919, 2.58 ) }
    dend_0 { pt3dadd( -0.337241, 14.7325, -4.59086, 2.14 ) }
    dend_0 { pt3dadd( -0.038973, 15.7245, -4.37463, 2.14 ) }
    dend_0 { pt3dadd( 0.254149, 16.7826, -4.14823, 1.92 ) }
    dend_0 { pt3dadd( 0.652897, 18.4093, -3.79556, 1.69 ) }
    dend_0 { pt3dadd( 0.872409, 19.4407, -3.5873, 1.69 ) }
    dend_0 { pt3dadd( 1.03206, 20.4325, -3.41282, 1.69 ) }
    dend_0 { pt3dadd( 1.16827, 21.9006, -3.2136, 1.92 ) }
    dend_0 { pt3dadd( 1.18304, 22.7905, -3.16484, 2.06 ) }
    dend_0 { pt3dadd( 1.10901, 24.1052, -3.27877, 1.99 ) }
    dend_0 { pt3dadd( 1.0198, 24.968, -3.48912, 1.84 ) }
    dend_0 { pt3dadd( 0.89428, 26.2095, -3.92294, 1.69 ) }
    dend_0 { pt3dadd( 0.774922, 27.2417, -4.34799, 1.77 ) }
    dend_0 { pt3dadd( 0.618144, 28.5267, -4.95701, 1.69 ) }
    dend_0 { pt3dadd( 0.411429, 30.3949, -5.94521, 1.92 ) }
    dend_0 { pt3dadd( 0.277596, 31.8544, -6.81193, 2.14 ) }
    dend_0 { pt3dadd( 0.207422, 33.1364, -7.59838, 2.43 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 67/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.853302, 12.8862, -2.3154, 0.892373 ) }
    axon_0 { pt3dadd( -1.70079, 27.8622, -2.3154, 0.892373 ) }
    axon_0 { pt3dadd( -2.54828, 42.8383, -2.3154, 0.892373 ) }
    // Section: dend_50, id: dend_50, parent: dend_46 (entry count 70/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -23.5886, 27.0739, 21.4049, 0.66 ) }
    dend_50 { pt3dadd( -25.2919, 28.1252, 23.3338, 0.66 ) }
    dend_50 { pt3dadd( -26.1161, 28.7173, 24.1149, 0.59 ) }
    dend_50 { pt3dadd( -27.1613, 29.5122, 24.9731, 0.59 ) }
    dend_50 { pt3dadd( -27.9393, 30.0705, 25.532, 0.52 ) }
    dend_50 { pt3dadd( -28.8813, 30.6794, 26.1382, 0.66 ) }
    dend_50 { pt3dadd( -29.5433, 31.0804, 26.5275, 0.52 ) }
    dend_50 { pt3dadd( -30.1983, 31.5015, 26.8671, 0.52 ) }
    dend_50 { pt3dadd( -31.0475, 31.9973, 27.4, 0.44 ) }
    dend_50 { pt3dadd( -31.698, 32.3054, 27.8966, 0.66 ) }
    dend_50 { pt3dadd( -32.4411, 32.5621, 28.5758, 0.52 ) }
    dend_50 { pt3dadd( -33.1048, 32.7499, 29.2436, 0.74 ) }
    dend_50 { pt3dadd( -34.8549, 33.1784, 31.1721, 1.03 ) }
    dend_50 { pt3dadd( -35.8499, 33.3977, 32.3882, 0.66 ) }
    dend_50 { pt3dadd( -36.6966, 33.5833, 33.5517, 0.59 ) }
    dend_50 { pt3dadd( -37.2969, 33.7411, 34.4914, 0.74 ) }
    dend_50 { pt3dadd( -45.9603, 37.8031, 41.245, 0.74 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 87/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -23.5886, 27.0739, 21.4049, 0.88 ) }
    dend_47 { pt3dadd( -24.1148, 30.7544, 22.0901, 0.88 ) }
    dend_47 { pt3dadd( -24.3657, 32.0243, 22.2635, 0.88 ) }
    dend_47 { pt3dadd( -24.7466, 33.6091, 22.4869, 0.88 ) }
    dend_47 { pt3dadd( -25.2326, 35.4222, 22.7507, 0.88 ) }
    dend_47 { pt3dadd( -25.6891, 37.1489, 23.0294, 0.81 ) }
    dend_47 { pt3dadd( -26.1022, 38.782, 23.337, 0.81 ) }
    dend_47 { pt3dadd( -26.4241, 39.8887, 23.4953, 1.03 ) }
    dend_47 { pt3dadd( -26.8507, 41.1687, 23.7021, 0.81 ) }
    dend_47 { pt3dadd( -27.3935, 42.5672, 23.9502, 0.96 ) }
    dend_47 { pt3dadd( -27.8756, 43.7011, 24.16, 0.88 ) }
    dend_47 { pt3dadd( -28.4408, 45.0482, 24.4013, 0.74 ) }
    dend_47 { pt3dadd( -28.8177, 45.969, 24.569, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_47 { pt3dadd( -29.2263, 47.0495, 24.7578, 0.74 ) }
    dend_47 { pt3dadd( -29.6456, 48.3273, 24.9383, 0.81 ) }
    dend_47 { pt3dadd( -29.9241, 49.3255, 25.0697, 0.81 ) }
    dend_47 { pt3dadd( -30.1835, 50.4837, 25.2302, 0.88 ) }
    dend_47 { pt3dadd( -30.3704, 51.7303, 25.4158, 1.03 ) }
    dend_47 { pt3dadd( -30.4779, 53.1823, 25.6639, 0.96 ) }
    dend_47 { pt3dadd( -30.5088, 54.998, 25.9769, 1.03 ) }
    dend_47 { pt3dadd( -30.515, 56.2917, 26.1802, 1.03 ) }
    dend_47 { pt3dadd( -30.5494, 58.185, 26.467, 1.11 ) }
    dend_47 { pt3dadd( -30.6351, 59.3854, 26.5926, 0.96 ) }
    dend_47 { pt3dadd( -30.8411, 60.8787, 26.6763, 0.88 ) }
    dend_47 { pt3dadd( -31.2124, 62.5405, 26.7499, 0.74 ) }
    dend_47 { pt3dadd( -31.6491, 63.9413, 26.8215, 0.81 ) }
    dend_47 { pt3dadd( -32.0292, 64.8942, 26.9119, 0.96 ) }
    dend_47 { pt3dadd( -32.9142, 66.6833, 27.1673, 1.11 ) }
    dend_47 { pt3dadd( -33.3999, 67.5157, 27.3471, 1.11 ) }
    dend_47 { pt3dadd( -34.1898, 68.7127, 27.6808, 0.96 ) }
    dend_47 { pt3dadd( -34.9395, 69.8031, 28.0386, 0.74 ) }
    dend_47 { pt3dadd( -35.7579, 71.0516, 28.4734, 0.74 ) }
    dend_47 { pt3dadd( -36.208, 71.7631, 28.7143, 0.66 ) }
    dend_47 { pt3dadd( -36.6806, 72.5274, 28.9662, 0.59 ) }
    dend_47 { pt3dadd( -37.4689, 73.7726, 29.2674, 0.81 ) }
    dend_47 { pt3dadd( -37.8718, 74.406, 29.3792, 0.96 ) }
    dend_47 { pt3dadd( -38.3694, 75.2156, 29.471, 0.96 ) }
    dend_47 { pt3dadd( -39.0519, 76.4542, 29.537, 0.59 ) }
    dend_47 { pt3dadd( -39.8071, 78.1244, 29.5611, 0.59 ) }
    dend_47 { pt3dadd( -40.2674, 79.4464, 29.5324, 0.66 ) }
    dend_47 { pt3dadd( -40.5773, 80.8314, 29.464, 0.96 ) }
    dend_47 { pt3dadd( -40.6919, 81.9037, 29.3827, 1.03 ) }
    dend_47 { pt3dadd( -40.6987, 83.0812, 29.3204, 0.81 ) }
    dend_47 { pt3dadd( -40.5775, 84.5736, 29.278, 0.52 ) }
    dend_47 { pt3dadd( -40.433, 85.6741, 29.3203, 0.37 ) }
    dend_47 { pt3dadd( -40.3362, 86.7179, 29.482, 0.37 ) }
    dend_47 { pt3dadd( -40.3862, 87.4485, 29.7014, 0.44 ) }
    dend_47 { pt3dadd( -40.767, 88.9841, 30.4327, 0.44 ) }
    dend_47 { pt3dadd( -41.1251, 89.873, 30.8921, 0.66 ) }
    dend_47 { pt3dadd( -41.6498, 90.9903, 31.4141, 1.03 ) }
    dend_47 { pt3dadd( -42.018, 91.8299, 31.7232, 1.18 ) }
    dend_47 { pt3dadd( -42.3524, 92.8388, 31.9884, 1.25 ) }
    dend_47 { pt3dadd( -42.5073, 93.9416, 32.1533, 1.4 ) }
    dend_47 { pt3dadd( -42.4116, 95.6984, 32.2264, 1.25 ) }
    dend_47 { pt3dadd( -42.1667, 96.8291, 32.1927, 1.18 ) }
    dend_47 { pt3dadd( -41.6479, 98.3607, 31.9918, 0.66 ) }
    dend_47 { pt3dadd( -41.0244, 99.7814, 31.7098, 0.66 ) }
    dend_47 { pt3dadd( -40.1529, 101.425, 31.318, 0.66 ) }
    dend_47 { pt3dadd( -39.6166, 102.293, 31.05, 0.81 ) }
    dend_47 { pt3dadd( -38.9055, 103.327, 30.7048, 0.96 ) }
    dend_47 { pt3dadd( -38.1142, 104.501, 30.3158, 0.81 ) }
    dend_47 { pt3dadd( -37.4513, 105.561, 29.9616, 0.88 ) }
    dend_47 { pt3dadd( -36.957, 106.547, 29.6647, 0.88 ) }
    dend_47 { pt3dadd( -36.3392, 108.251, 29.2967, 0.74 ) }
    dend_47 { pt3dadd( -36.0801, 109.183, 29.184, 0.74 ) }
    dend_47 { pt3dadd( -35.7763, 110.496, 29.1778, 0.59 ) }
    dend_47 { pt3dadd( -35.6348, 111.259, 29.2235, 0.59 ) }
    dend_47 { pt3dadd( -35.4575, 112.545, 29.3087, 0.59 ) }
    dend_47 { pt3dadd( -35.286, 114.459, 29.4089, 0.74 ) }
    dend_47 { pt3dadd( -35.2616, 115.605, 29.4469, 0.81 ) }
    dend_47 { pt3dadd( -35.2956, 116.953, 29.422, 0.81 ) }
    dend_47 { pt3dadd( -35.3948, 118.784, 29.3183, 0.74 ) }
    dend_47 { pt3dadd( -35.4528, 120.03, 29.1879, 0.74 ) }
    dend_47 { pt3dadd( -35.4946, 121.257, 28.9936, 0.74 ) }
    dend_47 { pt3dadd( -35.5413, 123.291, 28.593, 0.88 ) }
    dend_47 { pt3dadd( -35.5422, 125.354, 28.1117, 1.03 ) }
    dend_47 { pt3dadd( -35.5262, 126.683, 27.7622, 1.03 ) }
    dend_47 { pt3dadd( -35.4799, 127.678, 27.5255, 1.69 ) }
    dend_47 { pt3dadd( -35.348, 129.546, 27.1229, 1.4 ) }
    dend_47 { pt3dadd( -35.2397, 130.959, 26.8541, 0.74 ) }
    dend_47 { pt3dadd( -35.117, 132.507, 26.6178, 0.74 ) }
    dend_47 { pt3dadd( -35.0895, 133.188, 26.5205, 0.88 ) }
    dend_47 { pt3dadd( -35.1144, 134.692, 26.3102, 1.03 ) }
    dend_47 { pt3dadd( -35.1575, 135.518, 26.203, 1.11 ) }
    dend_47 { pt3dadd( -35.2272, 137.164, 25.9879, 0.66 ) }
    dend_47 { pt3dadd( -35.2307, 138.244, 25.8142, 0.66 ) }
    dend_47 { pt3dadd( -35.0839, 139.743, 25.5083, 0.81 ) }
    dend_47 { pt3dadd( -34.8317, 141.079, 25.088, 1.03 ) }
    dend_47 { pt3dadd( -34.5473, 142.311, 24.5864, 0.88 ) }
    dend_47 { pt3dadd( -34.3134, 143.256, 24.1644, 0.66 ) }
    dend_47 { pt3dadd( -34.0414, 144.529, 23.545, 0.66 ) }
    dend_47 { pt3dadd( -33.9202, 145.698, 22.9602, 0.88 ) }
    dend_47 { pt3dadd( -34.0502, 147.065, 22.3621, 0.74 ) }
    dend_47 { pt3dadd( -34.4109, 148.108, 21.9518, 0.66 ) }
    dend_47 { pt3dadd( -34.7272, 148.833, 21.7144, 0.66 ) }
    dend_47 { pt3dadd( -35.2587, 150.1, 21.3431, 0.52 ) }
    dend_47 { pt3dadd( -35.5196, 150.991, 21.0925, 0.44 ) }
    dend_47 { pt3dadd( -35.5324, 152.12, 20.7764, 0.44 ) }
    dend_47 { pt3dadd( -35.2506, 152.985, 20.5499, 0.44 ) }
    dend_47 { pt3dadd( -34.2749, 155.033, 19.9113, 0.52 ) }
    dend_47 { pt3dadd( -33.5553, 156.359, 19.476, 0.66 ) }
    dend_47 { pt3dadd( -32.6454, 157.854, 18.9571, 0.59 ) }
    dend_47 { pt3dadd( -32.1116, 158.707, 18.6557, 0.66 ) }
    dend_47 { pt3dadd( -31.4014, 159.922, 18.2365, 0.74 ) }
    dend_47 { pt3dadd( -30.6807, 161.477, 17.7075, 0.81 ) }
    dend_47 { pt3dadd( -30.4115, 162.29, 17.4183, 0.88 ) }
    dend_47 { pt3dadd( -30.0351, 163.806, 16.8799, 0.74 ) }
    dend_47 { pt3dadd( -29.8359, 164.809, 16.4919, 0.74 ) }
    dend_47 { pt3dadd( -29.6238, 166.145, 15.8825, 0.81 ) }
    dend_47 { pt3dadd( -29.4378, 167.709, 15.0755, 0.74 ) }
    dend_47 { pt3dadd( -29.3765, 168.877, 14.4658, 0.88 ) }
    dend_47 { pt3dadd( -29.3945, 169.487, 14.149, 0.88 ) }
    dend_47 { pt3dadd( -29.5866, 171.282, 13.2083, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_47 { pt3dadd( -29.7416, 172.477, 12.591, 1.25 ) }
    dend_47 { pt3dadd( -29.8741, 173.563, 12.0843, 0.74 ) }
    dend_47 { pt3dadd( -30.0152, 174.742, 11.6317, 0.74 ) }
    dend_47 { pt3dadd( -30.1486, 175.855, 11.3001, 1.03 ) }
    dend_47 { pt3dadd( -30.2768, 177.079, 11.0222, 1.25 ) }
    dend_47 { pt3dadd( -30.3647, 178.22, 10.838, 1.03 ) }
    dend_47 { pt3dadd( -30.3898, 179.63, 10.6603, 0.88 ) }
    dend_47 { pt3dadd( -30.2865, 181.427, 10.4548, 0.88 ) }
    dend_47 { pt3dadd( -30.0648, 183.2, 10.2687, 0.88 ) }
    dend_47 { pt3dadd( -29.7325, 185.09, 10.0492, 0.96 ) }
    dend_47 { pt3dadd( -29.3999, 186.727, 9.8611, 1.03 ) }
    dend_47 { pt3dadd( -29.0802, 188.278, 9.66597, 1.03 ) }
    dend_47 { pt3dadd( -28.7028, 190.212, 9.46952, 0.88 ) }
    dend_47 { pt3dadd( -28.4396, 191.649, 9.36479, 0.88 ) }
    dend_47 { pt3dadd( -28.2399, 193.103, 9.28102, 0.88 ) }
    dend_47 { pt3dadd( -28.2304, 194.156, 9.26468, 0.66 ) }
    dend_47 { pt3dadd( -28.5341, 195.331, 9.40297, 0.66 ) }
    dend_47 { pt3dadd( -29.4506, 196.95, 9.82245, 0.74 ) }
    dend_47 { pt3dadd( -29.9407, 197.572, 10.043, 0.74 ) }
    dend_47 { pt3dadd( -30.5696, 198.253, 10.3137, 0.74 ) }
    dend_47 { pt3dadd( -31.5242, 199.26, 10.6668, 0.59 ) }
    dend_47 { pt3dadd( -32.4621, 200.386, 10.8238, 0.88 ) }
    dend_47 { pt3dadd( -32.7171, 200.819, 10.7843, 1.03 ) }
    dend_47 { pt3dadd( -32.9624, 201.649, 10.521, 0.81 ) }
    dend_47 { pt3dadd( -33.0145, 202.608, 10.1412, 0.66 ) }
    dend_47 { pt3dadd( -32.9125, 204.095, 9.53339, 0.59 ) }
    dend_47 { pt3dadd( -32.6544, 206.12, 8.68953, 0.59 ) }
    dend_47 { pt3dadd( -32.4766, 207.441, 8.16739, 0.66 ) }
    dend_47 { pt3dadd( -32.2757, 209.122, 7.59515, 0.81 ) }
    dend_47 { pt3dadd( -32.0975, 210.57, 7.18043, 0.66 ) }
    dend_47 { pt3dadd( -31.7763, 212.764, 6.67886, 0.81 ) }
    dend_47 { pt3dadd( -31.5343, 214.287, 6.39207, 0.88 ) }
    dend_47 { pt3dadd( -31.2782, 215.95, 6.11015, 0.96 ) }
    dend_47 { pt3dadd( -31.1066, 217.401, 5.83456, 0.96 ) }
    dend_47 { pt3dadd( -31.0276, 218.793, 5.52771, 0.96 ) }
    dend_47 { pt3dadd( -31.0542, 220.696, 5.01028, 0.74 ) }
    dend_47 { pt3dadd( -31.1726, 222.072, 4.57252, 0.74 ) }
    dend_47 { pt3dadd( -31.3213, 223.058, 4.24738, 0.74 ) }
    dend_47 { pt3dadd( -31.5369, 224.232, 3.86169, 0.74 ) }
    dend_47 { pt3dadd( -31.9047, 226.128, 3.25063, 0.74 ) }
    dend_47 { pt3dadd( -32.1888, 227.497, 2.91255, 0.88 ) }
    dend_47 { pt3dadd( -32.5782, 229.429, 2.57515, 0.88 ) }
    dend_47 { pt3dadd( -32.9305, 231.42, 2.32573, 0.88 ) }
    dend_47 { pt3dadd( -33.1756, 233.052, 2.15948, 0.88 ) }
    dend_47 { pt3dadd( -33.3499, 234.557, 2.00877, 0.81 ) }
    dend_47 { pt3dadd( -33.5286, 236.347, 1.83073, 0.66 ) }
    dend_47 { pt3dadd( -33.7333, 237.721, 1.6491, 0.59 ) }
    dend_47 { pt3dadd( -33.9868, 238.667, 1.48864, 0.74 ) }
    dend_47 { pt3dadd( -34.332, 239.504, 1.3091, 0.74 ) }
    dend_47 { pt3dadd( -34.8189, 240.577, 1.01713, 0.74 ) }
    dend_47 { pt3dadd( -35.1608, 241.43, 0.774572, 0.66 ) }
    dend_47 { pt3dadd( -35.5325, 242.599, 0.434586, 0.66 ) }
    dend_47 { pt3dadd( -35.8824, 243.993, 0.10946, 0.52 ) }
    dend_47 { pt3dadd( -36.1379, 245.336, -0.162078, 0.52 ) }
    dend_47 { pt3dadd( -36.3532, 246.785, -0.470776, 0.59 ) }
    dend_47 { pt3dadd( -36.6553, 248.761, -0.950562, 1.11 ) }
    dend_47 { pt3dadd( -36.8688, 249.861, -1.26418, 1.33 ) }
    dend_47 { pt3dadd( -37.1067, 250.79, -1.55267, 1.33 ) }
    dend_47 { pt3dadd( -37.6315, 252.307, -2.03471, 0.74 ) }
    dend_47 { pt3dadd( -38.2944, 253.835, -2.49877, 0.59 ) }
    dend_47 { pt3dadd( -38.9826, 255.178, -2.88398, 0.66 ) }
    dend_47 { pt3dadd( -39.6397, 256.436, -3.21958, 0.66 ) }
    dend_47 { pt3dadd( -40.3008, 257.757, -3.60068, 0.74 ) }
    dend_47 { pt3dadd( -41.0367, 259.18, -4.05937, 0.81 ) }
    dend_47 { pt3dadd( -41.6216, 260.213, -4.39418, 0.81 ) }
    dend_47 { pt3dadd( -42.2609, 261.247, -4.73194, 0.66 ) }
    dend_47 { pt3dadd( -43.4437, 263.038, -5.36852, 0.66 ) }
    dend_47 { pt3dadd( -44.5812, 264.559, -5.99538, 0.52 ) }
    dend_47 { pt3dadd( -45.5598, 265.704, -6.53795, 0.44 ) }
    dend_47 { pt3dadd( -46.1582, 266.344, -6.86934, 0.59 ) }
    dend_47 { pt3dadd( -46.7668, 266.923, -7.17024, 0.59 ) }
    dend_47 { pt3dadd( -47.5664, 267.61, -7.5249, 0.59 ) }
    dend_47 { pt3dadd( -48.5291, 268.417, -7.90709, 0.66 ) }
    dend_47 { pt3dadd( -49.0998, 268.974, -8.10456, 0.66 ) }
    dend_47 { pt3dadd( -49.8455, 269.85, -8.41432, 0.66 ) }
    dend_47 { pt3dadd( -50.5705, 270.783, -8.76351, 0.59 ) }
    dend_47 { pt3dadd( -51.2406, 271.695, -9.13893, 0.44 ) }
    dend_47 { pt3dadd( -51.8645, 272.551, -9.54371, 0.44 ) }
    dend_47 { pt3dadd( -52.4893, 273.37, -9.99592, 0.88 ) }
    dend_47 { pt3dadd( -52.9982, 273.984, -10.3743, 1.03 ) }
    // Section: dend_45, id: dend_45, parent: dend_17 (entry count 80/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 1.46972, -19.2919, 2.30081, 1.47 ) }
    dend_45 { pt3dadd( 2.56443, -19.9792, 1.6099, 1.47 ) }
    dend_45 { pt3dadd( 3.43471, -20.6481, 1.01582, 1.03 ) }
    dend_45 { pt3dadd( 4.40525, -21.4113, 0.3217, 0.44 ) }
    dend_45 { pt3dadd( 4.82695, -21.726, 0.0394002, 0.66 ) }
    dend_45 { pt3dadd( 5.49359, -22.1917, -0.365526, 0.81 ) }
    dend_45 { pt3dadd( 6.11421, -22.5941, -0.710174, 0.74 ) }
    dend_45 { pt3dadd( 6.92778, -23.1049, -1.11638, 0.81 ) }
    dend_45 { pt3dadd( 8.09784, -23.7366, -1.55496, 0.44 ) }
    dend_45 { pt3dadd( 8.88657, -24.1001, -1.79589, 0.81 ) }
    dend_45 { pt3dadd( 9.58265, -24.3842, -1.94782, 1.11 ) }
    dend_45 { pt3dadd( 10.3206, -24.6473, -2.04112, 1.11 ) }
    dend_45 { pt3dadd( 11.174, -24.898, -2.07645, 0.74 ) }
    dend_45 { pt3dadd( 12.0591, -25.1045, -2.04727, 0.52 ) }
    dend_45 { pt3dadd( 13.5659, -25.3917, -1.89681, 0.52 ) }
    dend_45 { pt3dadd( 14.7326, -25.5649, -1.74885, 0.52 ) }
    dend_45 { pt3dadd( 15.3645, -25.6238, -1.64902, 0.44 ) }
    dend_45 { pt3dadd( 16.4017, -25.6548, -1.44822, 0.66 ) }
    dend_45 { pt3dadd( 17.0581, -25.6221, -1.30605, 1.18 ) }
    dend_45 { pt3dadd( 17.7512, -25.5313, -1.14281, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( 18.5334, -25.3637, -0.941065, 1.03 ) }
    dend_45 { pt3dadd( 19.2753, -25.1773, -0.782637, 0.81 ) }
    dend_45 { pt3dadd( 19.9724, -25.0088, -0.666835, 0.59 ) }
    dend_45 { pt3dadd( 20.8924, -24.8012, -0.590071, 0.81 ) }
    dend_45 { pt3dadd( 21.5998, -24.6456, -0.580044, 0.81 ) }
    dend_45 { pt3dadd( 22.5377, -24.434, -0.68958, 0.52 ) }
    dend_45 { pt3dadd( 23.0689, -24.3179, -0.809537, 0.52 ) }
    dend_45 { pt3dadd( 23.9369, -24.1463, -1.06803, 0.74 ) }
    dend_45 { pt3dadd( 24.8949, -23.9606, -1.374, 0.66 ) }
    dend_45 { pt3dadd( 25.7251, -23.8002, -1.65971, 0.66 ) }
    dend_45 { pt3dadd( 27.1072, -23.5146, -2.15113, 0.52 ) }
    dend_45 { pt3dadd( 27.9479, -23.3076, -2.46856, 0.44 ) }
    dend_45 { pt3dadd( 28.8231, -23.0812, -2.77449, 0.44 ) }
    dend_45 { pt3dadd( 29.681, -22.8702, -2.99413, 0.74 ) }
    dend_45 { pt3dadd( 30.2618, -22.7405, -3.07518, 0.88 ) }
    dend_45 { pt3dadd( 30.9391, -22.6102, -3.10213, 0.74 ) }
    dend_45 { pt3dadd( 32.2184, -22.3833, -3.0536, 0.37 ) }
    dend_45 { pt3dadd( 32.892, -22.2776, -3.07394, 0.37 ) }
    dend_45 { pt3dadd( 33.9538, -22.1809, -3.14613, 0.66 ) }
    dend_45 { pt3dadd( 34.7473, -22.1521, -3.20925, 0.66 ) }
    dend_45 { pt3dadd( 35.4762, -22.1379, -3.25156, 0.81 ) }
    dend_45 { pt3dadd( 35.9844, -22.1313, -3.27109, 0.81 ) }
    dend_45 { pt3dadd( 37.9648, -22.0823, -3.31496, 0.66 ) }
    dend_45 { pt3dadd( 39.2075, -22.0062, -3.37199, 0.66 ) }
    dend_45 { pt3dadd( 40.0081, -21.9454, -3.44449, 0.81 ) }
    dend_45 { pt3dadd( 40.8935, -21.849, -3.58523, 0.81 ) }
    dend_45 { pt3dadd( 41.7387, -21.7211, -3.78457, 0.66 ) }
    dend_45 { pt3dadd( 42.2638, -21.6035, -3.94253, 0.59 ) }
    dend_45 { pt3dadd( 42.8492, -21.3869, -4.19954, 0.59 ) }
    dend_45 { pt3dadd( 43.8088, -20.9194, -4.79709, 0.59 ) }
    dend_45 { pt3dadd( 44.9595, -20.3135, -5.61801, 0.96 ) }
    dend_45 { pt3dadd( 45.5629, -20.0149, -6.06183, 1.11 ) }
    dend_45 { pt3dadd( 46.0537, -19.7803, -6.40059, 1.18 ) }
    dend_45 { pt3dadd( 46.9292, -19.367, -6.87898, 0.81 ) }
    dend_45 { pt3dadd( 47.9772, -18.8706, -7.24642, 0.52 ) }
    dend_45 { pt3dadd( 48.6491, -18.5604, -7.33613, 0.66 ) }
    dend_45 { pt3dadd( 49.4877, -18.2045, -7.28993, 0.66 ) }
    dend_45 { pt3dadd( 50.2002, -17.897, -7.18248, 0.44 ) }
    dend_45 { pt3dadd( 51.2623, -17.4205, -6.95999, 0.44 ) }
    dend_45 { pt3dadd( 51.9628, -17.0512, -6.75684, 0.52 ) }
    dend_45 { pt3dadd( 52.5752, -16.642, -6.55542, 0.66 ) }
    dend_45 { pt3dadd( 53.1285, -16.1901, -6.35089, 1.11 ) }
    dend_45 { pt3dadd( 53.4864, -15.8468, -6.20122, 1.25 ) }
    dend_45 { pt3dadd( 53.7953, -15.5334, -6.06523, 1.25 ) }
    dend_45 { pt3dadd( 54.3226, -14.9796, -5.8353, 1.25 ) }
    dend_45 { pt3dadd( 54.8688, -14.4196, -5.58761, 0.74 ) }
    dend_45 { pt3dadd( 55.6806, -13.653, -5.24902, 0.88 ) }
    dend_45 { pt3dadd( 56.0227, -13.3393, -5.12067, 0.88 ) }
    dend_45 { pt3dadd( 56.3771, -13.0087, -4.98063, 0.88 ) }
    dend_45 { pt3dadd( 56.9962, -12.4107, -4.78608, 0.59 ) }
    dend_45 { pt3dadd( 57.7631, -11.6289, -4.62209, 0.52 ) }
    dend_45 { pt3dadd( 58.2893, -11.0715, -4.5869, 0.52 ) }
    dend_45 { pt3dadd( 59.0535, -10.3176, -4.59754, 0.81 ) }
    dend_45 { pt3dadd( 59.6468, -9.75436, -4.62473, 0.81 ) }
    dend_45 { pt3dadd( 60.7228, -8.79009, -4.70083, 0.96 ) }
    dend_45 { pt3dadd( 61.2623, -8.33978, -4.75081, 1.11 ) }
    dend_45 { pt3dadd( 61.993, -7.78182, -4.8691, 1.4 ) }
    dend_45 { pt3dadd( 63.3272, -6.81809, -5.1316, 0.81 ) }
    dend_45 { pt3dadd( 64.24, -6.18348, -5.34423, 0.81 ) }
    dend_45 { pt3dadd( 64.976, -5.63876, -5.53681, 0.81 ) }
    dend_45 { pt3dadd( 65.3536, -5.32, -5.62974, 0.81 ) }
    dend_45 { pt3dadd( 66.304, -4.37939, -5.89754, 0.52 ) }
    dend_45 { pt3dadd( 67.1006, -3.37896, -6.17941, 0.66 ) }
    dend_45 { pt3dadd( 67.5438, -2.65116, -6.39874, 0.59 ) }
    dend_45 { pt3dadd( 67.9597, -1.84592, -6.60232, 0.37 ) }
    dend_45 { pt3dadd( 68.3772, -0.920081, -6.77631, 1.03 ) }
    dend_45 { pt3dadd( 68.5721, -0.467056, -6.83223, 1.25 ) }
    dend_45 { pt3dadd( 68.805, 0.0516889, -6.85799, 1.25 ) }
    dend_45 { pt3dadd( 69.2613, 0.896187, -6.86992, 1.03 ) }
    dend_45 { pt3dadd( 69.698, 1.5705, -6.86045, 1.18 ) }
    dend_45 { pt3dadd( 70.2933, 2.41028, -6.83004, 1.03 ) }
    dend_45 { pt3dadd( 70.8595, 3.21547, -6.78258, 1.18 ) }
    dend_45 { pt3dadd( 71.262, 3.80324, -6.73312, 1.18 ) }
    dend_45 { pt3dadd( 71.7476, 4.50635, -6.65695, 0.74 ) }
    dend_45 { pt3dadd( 72.1321, 5.03093, -6.58847, 0.52 ) }
    dend_45 { pt3dadd( 72.5867, 5.5829, -6.5089, 0.52 ) }
    dend_45 { pt3dadd( 73.4235, 6.41869, -6.36986, 0.81 ) }
    dend_45 { pt3dadd( 74.0214, 6.94396, -6.27416, 0.88 ) }
    dend_45 { pt3dadd( 74.5122, 7.3357, -6.19784, 0.81 ) }
    dend_45 { pt3dadd( 75.3706, 7.91052, -6.068, 0.37 ) }
    dend_45 { pt3dadd( 75.9715, 8.23197, -5.99533, 0.29 ) }
    dend_45 { pt3dadd( 76.9908, 8.68183, -5.94157, 0.59 ) }
    dend_45 { pt3dadd( 77.3711, 8.83593, -5.94926, 0.66 ) }
    dend_45 { pt3dadd( 78.2107, 9.18555, -6.01066, 0.37 ) }
    dend_45 { pt3dadd( 79.2183, 9.64417, -6.13161, 0.59 ) }
    dend_45 { pt3dadd( 80.1316, 10.1229, -6.2477, 0.81 ) }
    dend_45 { pt3dadd( 81.3854, 10.8344, -6.38714, 1.99 ) }
    dend_45 { pt3dadd( 82.0294, 11.1975, -6.44756, 2.65 ) }
    dend_45 { pt3dadd( 82.4916, 11.4438, -6.4779, 2.65 ) }
    dend_45 { pt3dadd( 83.5443, 11.9872, -6.51617, 1.18 ) }
    dend_45 { pt3dadd( 84.6718, 12.5555, -6.50442, 0.44 ) }
    dend_45 { pt3dadd( 85.6281, 12.9973, -6.41801, 0.74 ) }
    dend_45 { pt3dadd( 86.2819, 13.2729, -6.30205, 0.74 ) }
    dend_45 { pt3dadd( 86.9206, 13.5429, -6.16615, 0.81 ) }
    dend_45 { pt3dadd( 87.3421, 13.7205, -6.06919, 0.81 ) }
    dend_45 { pt3dadd( 87.9975, 13.9888, -5.90102, 0.59 ) }
    dend_45 { pt3dadd( 88.7319, 14.2597, -5.68365, 0.44 ) }
    dend_45 { pt3dadd( 89.4323, 14.5069, -5.43127, 0.37 ) }
    dend_45 { pt3dadd( 90.0633, 14.7143, -5.1775, 0.37 ) }
    dend_45 { pt3dadd( 90.9979, 14.9921, -4.81862, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_45 { pt3dadd( 91.5553, 15.133, -4.62983, 0.88 ) }
    dend_45 { pt3dadd( 92.4307, 15.3007, -4.40457, 0.66 ) }
    dend_45 { pt3dadd( 93.0008, 15.3925, -4.32047, 0.52 ) }
    dend_45 { pt3dadd( 93.6997, 15.4911, -4.25274, 0.52 ) }
    dend_45 { pt3dadd( 94.6745, 15.6479, -4.178, 0.88 ) }
    dend_45 { pt3dadd( 95.4034, 15.8049, -4.1533, 0.88 ) }
    dend_45 { pt3dadd( 96.3493, 16.0695, -4.14781, 0.66 ) }
    dend_45 { pt3dadd( 97.4822, 16.4524, -4.15104, 0.44 ) }
    dend_45 { pt3dadd( 98.2501, 16.7576, -4.1352, 0.44 ) }
    dend_45 { pt3dadd( 99.0475, 17.0989, -4.08581, 0.66 ) }
    dend_45 { pt3dadd( 99.8624, 17.4501, -3.99898, 0.52 ) }
    dend_45 { pt3dadd( 100.487, 17.7198, -3.91568, 0.52 ) }
    dend_45 { pt3dadd( 101.301, 18.0675, -3.7884, 0.74 ) }
    dend_45 { pt3dadd( 102.078, 18.3892, -3.62116, 0.44 ) }
    dend_45 { pt3dadd( 103.087, 18.8132, -3.38166, 0.44 ) }
    dend_45 { pt3dadd( 104.017, 19.2191, -3.13077, 0.88 ) }
    dend_45 { pt3dadd( 104.65, 19.5185, -2.93771, 1.03 ) }
    dend_45 { pt3dadd( 105.506, 19.9643, -2.64741, 0.74 ) }
    dend_45 { pt3dadd( 106.649, 20.6527, -2.22036, 0.52 ) }
    dend_45 { pt3dadd( 107.139, 20.9763, -2.02363, 0.96 ) }
    dend_45 { pt3dadd( 107.577, 21.2981, -1.84125, 0.96 ) }
    dend_45 { pt3dadd( 108.184, 21.7499, -1.59457, 0.81 ) }
    dend_45 { pt3dadd( 109.081, 22.3598, -1.26688, 0.52 ) }
    dend_45 { pt3dadd( 109.698, 22.7158, -1.07443, 0.52 ) }
    dend_45 { pt3dadd( 110.753, 23.2065, -0.797272, 0.59 ) }
    dend_45 { pt3dadd( 111.351, 23.4328, -0.669868, 0.81 ) }
    dend_45 { pt3dadd( 112.038, 23.6437, -0.553934, 0.81 ) }
    dend_45 { pt3dadd( 112.783, 23.823, -0.459212, 0.66 ) }
    dend_45 { pt3dadd( 113.396, 23.9394, -0.406645, 0.59 ) }
    dend_45 { pt3dadd( 114.354, 24.1177, -0.345462, 0.59 ) }
    dend_45 { pt3dadd( 115.681, 24.4419, -0.279958, 0.44 ) }
    dend_45 { pt3dadd( 116.447, 24.657, -0.286662, 0.74 ) }
    dend_45 { pt3dadd( 117.057, 24.8497, -0.314854, 0.74 ) }
    dend_45 { pt3dadd( 117.344, 24.9483, -0.334005, 0.74 ) }
    dend_45 { pt3dadd( 118.25, 25.273, -0.432188, 0.44 ) }
    dend_45 { pt3dadd( 119.251, 25.6363, -0.567459, 0.44 ) }
    dend_45 { pt3dadd( 120.684, 26.2051, -0.736907, 0.74 ) }
    dend_45 { pt3dadd( 121.334, 26.4911, -0.841777, 0.74 ) }
    dend_45 { pt3dadd( 121.958, 26.8001, -0.963168, 0.74 ) }
    dend_45 { pt3dadd( 122.739, 27.231, -1.13286, 0.52 ) }
    dend_45 { pt3dadd( 123.42, 27.6486, -1.28844, 0.37 ) }
    dend_45 { pt3dadd( 124.07, 28.1013, -1.41942, 0.66 ) }
    dend_45 { pt3dadd( 124.575, 28.5153, -1.48452, 1.03 ) }
    dend_45 { pt3dadd( 125.005, 28.8762, -1.52331, 1.18 ) }
    dend_45 { pt3dadd( 125.318, 29.1343, -1.55849, 1.18 ) }
    dend_45 { pt3dadd( 126.058, 29.7095, -1.64991, 0.59 ) }
    dend_45 { pt3dadd( 126.663, 30.1421, -1.74371, 0.44 ) }
    dend_45 { pt3dadd( 127.13, 30.4532, -1.8201, 0.44 ) }
    dend_45 { pt3dadd( 127.889, 30.9522, -1.93361, 0.81 ) }
    dend_45 { pt3dadd( 129.156, 31.7416, -2.13275, 1.11 ) }
    dend_45 { pt3dadd( 129.688, 32.0469, -2.215, 1.11 ) }
    dend_45 { pt3dadd( 130.198, 32.3178, -2.29191, 0.96 ) }
    dend_45 { pt3dadd( 130.703, 32.5778, -2.36944, 0.66 ) }
    dend_45 { pt3dadd( 131.457, 32.9663, -2.48077, 0.37 ) }
    dend_45 { pt3dadd( 132.333, 33.4103, -2.59807, 0.52 ) }
    dend_45 { pt3dadd( 133.217, 33.8374, -2.67634, 0.59 ) }
    dend_45 { pt3dadd( 133.865, 34.1467, -2.72678, 0.44 ) }
    dend_45 { pt3dadd( 134.655, 34.5231, -2.79922, 0.37 ) }
    dend_45 { pt3dadd( 135.681, 35.025, -2.9039, 0.66 ) }
    dend_45 { pt3dadd( 136.315, 35.3508, -2.96593, 0.44 ) }
    dend_45 { pt3dadd( 136.943, 35.68, -3.02566, 0.44 ) }
    dend_45 { pt3dadd( 137.905, 36.1707, -3.07675, 0.88 ) }
    dend_45 { pt3dadd( 138.535, 36.4731, -3.06346, 1.03 ) }
    dend_45 { pt3dadd( 139.099, 36.7268, -2.99897, 1.03 ) }
    dend_45 { pt3dadd( 139.925, 37.0972, -2.81169, 0.29 ) }
    dend_45 { pt3dadd( 140.645, 37.4292, -2.58638, 0.29 ) }
    dend_45 { pt3dadd( 141.448, 37.812, -2.28044, 0.29 ) }
    dend_45 { pt3dadd( 142.136, 38.142, -1.97988, 0.44 ) }
    dend_45 { pt3dadd( 143.015, 38.5276, -1.55686, 1.11 ) }
    dend_45 { pt3dadd( 143.733, 38.8126, -1.21163, 1.4 ) }
    dend_45 { pt3dadd( 143.872, 38.8674, -1.14636, 1.55 ) }
    dend_45 { pt3dadd( 144.505, 39.1426, -0.863192, 0.88 ) }
    dend_45 { pt3dadd( 145.359, 39.5151, -0.551467, 0.29 ) }
    dend_45 { pt3dadd( 146.304, 39.8967, -0.257527, 0.29 ) }
    dend_45 { pt3dadd( 147.026, 40.169, -0.0678269, 0.52 ) }
    dend_45 { pt3dadd( 147.448, 40.3248, 0.0244548, 0.66 ) }
    dend_45 { pt3dadd( 147.926, 40.5128, 0.127191, 0.44 ) }
    dend_45 { pt3dadd( 148.661, 40.8327, 0.295516, 0.29 ) }
    dend_45 { pt3dadd( 149.228, 41.1129, 0.429157, 0.29 ) }
    dend_45 { pt3dadd( 150.133, 41.583, 0.638546, 0.66 ) }
    dend_45 { pt3dadd( 150.625, 41.8095, 0.755403, 1.11 ) }
    dend_45 { pt3dadd( 151.08, 41.9925, 0.841041, 0.81 ) }
    dend_45 { pt3dadd( 152.174, 42.4338, 0.982703, 0.52 ) }
    dend_45 { pt3dadd( 152.595, 42.6172, 0.997635, 0.74 ) }
    dend_45 { pt3dadd( 153.341, 42.9761, 0.968439, 0.74 ) }
    dend_45 { pt3dadd( 154.337, 43.5073, 0.847742, 0.81 ) }
    dend_45 { pt3dadd( 155.364, 44.0788, 0.625975, 0.44 ) }
    dend_45 { pt3dadd( 156.221, 44.5386, 0.351013, 0.81 ) }
    dend_45 { pt3dadd( 157.172, 45.0371, -0.0694835, 1.33 ) }
    dend_45 { pt3dadd( 157.711, 45.3134, -0.357877, 1.33 ) }
    dend_45 { pt3dadd( 158.273, 45.5886, -0.689327, 1.11 ) }
    dend_45 { pt3dadd( 159.53, 46.1434, -1.4545, 0.52 ) }
    dend_45 { pt3dadd( 160.627, 46.5146, -2.11206, 1.18 ) }
    dend_45 { pt3dadd( 161.481, 46.7279, -2.5999, 1.33 ) }
    dend_45 { pt3dadd( 162.325, 46.8931, -3.05236, 1.03 ) }
    dend_45 { pt3dadd( 163.424, 47.0751, -3.59936, 0.22 ) }
    dend_45 { pt3dadd( 164.183, 47.1816, -3.93188, 0.22 ) }
    dend_45 { pt3dadd( 166.131, 47.4332, -4.67115, 0.88 ) }
    dend_45 { pt3dadd( 166.837, 47.5198, -4.88266, 1.03 ) }
    dend_45 { pt3dadd( 167.447, 47.5774, -5.01972, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_45 { pt3dadd( 168.251, 47.6206, -5.16, 0.96 ) }
    dend_45 { pt3dadd( 168.899, 47.6175, -5.27652, 0.66 ) }
    dend_45 { pt3dadd( 169.916, 47.5352, -5.44483, 0.44 ) }
    dend_45 { pt3dadd( 170.972, 47.3863, -5.58135, 0.66 ) }
    dend_45 { pt3dadd( 171.852, 47.2263, -5.67832, 0.74 ) }
    dend_45 { pt3dadd( 172.484, 47.0972, -5.73218, 0.74 ) }
    dend_45 { pt3dadd( 173.866, 46.7959, -5.80743, 0.37 ) }
    dend_45 { pt3dadd( 174.685, 46.6231, -5.81539, 0.52 ) }
    dend_45 { pt3dadd( 175.694, 46.4218, -5.76067, 0.29 ) }
    dend_45 { pt3dadd( 176.807, 46.2388, -5.659, 0.81 ) }
    dend_45 { pt3dadd( 177.294, 46.1677, -5.60015, 1.47 ) }
    dend_45 { pt3dadd( 177.762, 46.0855, -5.54048, 1.62 ) }
    dend_45 { pt3dadd( 178.317, 45.9529, -5.47102, 1.62 ) }
    dend_45 { pt3dadd( 179.882, 45.4817, -5.39583, 0.37 ) }
    dend_45 { pt3dadd( 180.874, 45.1128, -5.43521, 0.29 ) }
    dend_45 { pt3dadd( 181.927, 44.627, -5.5563, 0.29 ) }
    dend_45 { pt3dadd( 182.826, 44.1429, -5.68704, 0.29 ) }
    dend_45 { pt3dadd( 183.84, 43.5569, -5.8521, 1.47 ) }
    dend_45 { pt3dadd( 184.59, 43.1073, -6.00616, 1.69 ) }
    dend_45 { pt3dadd( 184.988, 42.8669, -6.1223, 1.84 ) }
    dend_45 { pt3dadd( 186.228, 42.1832, -6.57799, 0.52 ) }
    dend_45 { pt3dadd( 187.077, 41.83, -6.89535, 0.44 ) }
    dend_45 { pt3dadd( 187.727, 41.6513, -7.11944, 0.81 ) }
    dend_45 { pt3dadd( 188.415, 41.5311, -7.33865, 0.81 ) }
    dend_45 { pt3dadd( 189.363, 41.4306, -7.58783, 0.81 ) }
    dend_45 { pt3dadd( 190.78, 41.3908, -7.94275, 0.29 ) }
    dend_45 { pt3dadd( 191.935, 41.4587, -8.24548, 0.29 ) }
    dend_45 { pt3dadd( 192.489, 41.5153, -8.37602, 0.52 ) }
    dend_45 { pt3dadd( 193.365, 41.6114, -8.55502, 0.66 ) }
    dend_45 { pt3dadd( 194.404, 41.7107, -8.7297, 0.81 ) }
    dend_45 { pt3dadd( 195.26, 41.7891, -8.84742, 0.96 ) }
    dend_45 { pt3dadd( 195.993, 41.8662, -8.94446, 0.74 ) }
    dend_45 { pt3dadd( 197.093, 41.9938, -9.09739, 0.22 ) }
    dend_45 { pt3dadd( 198.123, 42.1383, -9.219, 0.22 ) }
    dend_45 { pt3dadd( 199.233, 42.3349, -9.31951, 0.22 ) }
    dend_45 { pt3dadd( 199.694, 42.4324, -9.33943, 0.44 ) }
    dend_45 { pt3dadd( 200.42, 42.5971, -9.33193, 0.44 ) }
    dend_45 { pt3dadd( 201.767, 42.9533, -9.25915, 0.29 ) }
    dend_45 { pt3dadd( 202.9, 43.2924, -9.16017, 1.03 ) }
    dend_45 { pt3dadd( 203.522, 43.5017, -9.07823, 1.25 ) }
    dend_45 { pt3dadd( 204.582, 43.8995, -8.93889, 0.22 ) }
    dend_45 { pt3dadd( 204.936, 44.0331, -8.89964, 0.37 ) }
    dend_45 { pt3dadd( 205.943, 44.423, -8.80657, 0.22 ) }
    dend_45 { pt3dadd( 206.313, 44.5788, -8.79528, 0.52 ) }
    dend_45 { pt3dadd( 206.959, 44.865, -8.80407, 0.59 ) }
    dend_45 { pt3dadd( 208.385, 45.4994, -8.8901, 0.22 ) }
    dend_45 { pt3dadd( 209.037, 45.7784, -8.96344, 0.59 ) }
    dend_45 { pt3dadd( 209.613, 46.0183, -9.06215, 0.59 ) }
    dend_45 { pt3dadd( 210.967, 46.5638, -9.38856, 0.29 ) }
    dend_45 { pt3dadd( 211.948, 46.9619, -9.68269, 0.22 ) }
    dend_45 { pt3dadd( 212.503, 47.1785, -9.90933, 0.22 ) }
    dend_45 { pt3dadd( 213.737, 47.569, -10.5603, 0.81 ) }
    dend_45 { pt3dadd( 214.575, 47.7864, -11.0628, 1.18 ) }
    dend_45 { pt3dadd( 215.401, 47.9521, -11.5799, 0.74 ) }
    dend_45 { pt3dadd( 216.206, 48.0528, -12.1164, 0.44 ) }
    dend_45 { pt3dadd( 217.524, 48.2663, -13.0756, 0.74 ) }
    dend_45 { pt3dadd( 218.55, 48.5226, -13.8942, 0.52 ) }
    dend_45 { pt3dadd( 219.122, 48.719, -14.3888, 0.52 ) }
    dend_45 { pt3dadd( 219.696, 48.965, -14.9003, 0.37 ) }
    dend_45 { pt3dadd( 220.865, 49.5644, -15.9735, 0.37 ) }
    dend_45 { pt3dadd( 222.019, 50.2452, -17.0754, 2.5 ) }
    dend_45 { pt3dadd( 223.859, 51.4913, -18.8369, 0.29 ) }
    dend_45 { pt3dadd( 224.283, 51.811, -19.2745, 0.29 ) }
    dend_45 { pt3dadd( 224.978, 52.371, -20.0832, 0.74 ) }
    dend_45 { pt3dadd( 225.476, 52.7839, -20.7108, 1.18 ) }
    dend_45 { pt3dadd( 226.092, 53.2831, -21.5164, 1.4 ) }
    dend_45 { pt3dadd( 226.496, 53.574, -22.054, 1.4 ) }
    dend_45 { pt3dadd( 227.829, 54.4918, -23.8032, 0.29 ) }
    dend_45 { pt3dadd( 228.767, 55.0768, -24.9981, 0.44 ) }
    dend_45 { pt3dadd( 229.826, 55.7105, -26.3275, 0.22 ) }
    dend_45 { pt3dadd( 230.48, 56.0944, -27.1511, 0.22 ) }
    dend_45 { pt3dadd( 231.101, 56.4747, -27.9811, 0.74 ) }
    dend_45 { pt3dadd( 231.465, 56.7169, -28.488, 0.88 ) }
    dend_45 { pt3dadd( 233.31, 58.0628, -31.0624, 0.29 ) }
    dend_45 { pt3dadd( 233.993, 58.6423, -32.0289, 0.52 ) }
    dend_45 { pt3dadd( 234.867, 59.5289, -33.3277, 0.81 ) }
    dend_45 { pt3dadd( 236.132, 60.9272, -35.2764, 0.81 ) }
    dend_45 { pt3dadd( 236.566, 61.4569, -35.9906, 0.29 ) }
    dend_45 { pt3dadd( 236.889, 61.9211, -36.5855, 0.37 ) }
    dend_45 { pt3dadd( 237.277, 62.7678, -37.4382, 0.22 ) }
    dend_45 { pt3dadd( 237.441, 63.2268, -37.8261, 0.81 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 81/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 1.46972, -19.2919, 2.30081, 3.68 ) }
    dend_18 { pt3dadd( 1.10996, -20.8235, 2.40977, 3.68 ) }
    dend_18 { pt3dadd( 0.680787, -22.5945, 2.51894, 3.32 ) }
    dend_18 { pt3dadd( 0.171892, -24.4855, 2.62796, 3.17 ) }
    dend_18 { pt3dadd( -0.456007, -26.655, 2.76243, 3.09 ) }
    dend_18 { pt3dadd( -0.968998, -28.3444, 2.86517, 2.8 ) }
    dend_18 { pt3dadd( -1.42907, -29.8303, 2.97592, 2.73 ) }
    dend_18 { pt3dadd( -1.87069, -31.1828, 3.09069, 2.65 ) }
    dend_18 { pt3dadd( -2.27124, -32.3542, 3.20777, 2.65 ) }
    dend_18 { pt3dadd( -2.67548, -33.5289, 3.33297, 2.65 ) }
    dend_18 { pt3dadd( -3.11448, -34.7611, 3.49551, 2.65 ) }
    dend_18 { pt3dadd( -3.67464, -36.304, 3.7397, 2.5 ) }
    dend_18 { pt3dadd( -3.9014, -36.9462, 3.85879, 2.58 ) }
    dend_18 { pt3dadd( -4.18152, -37.8088, 4.03902, 2.58 ) }
    dend_18 { pt3dadd( -4.37696, -38.5614, 4.20715, 2.65 ) }
    // Section: dend_10, id: dend_10, parent: dend_0 (entry count 96/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 0.207422, 33.1364, -7.59838, 1.4 ) }
    dend_10 { pt3dadd( 0.574128, 34.2465, -7.76659, 1.4 ) }
    dend_10 { pt3dadd( 1.08389, 36.1021, -7.97475, 1.11 ) }
    dend_10 { pt3dadd( 1.47767, 37.7412, -8.12404, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_10 { pt3dadd( 1.93222, 39.6282, -8.1567, 0.96 ) }
    dend_10 { pt3dadd( 2.38885, 41.3724, -8.32142, 1.11 ) }
    dend_10 { pt3dadd( 2.88365, 43.0154, -8.56525, 0.88 ) }
    dend_10 { pt3dadd( 3.39449, 44.6476, -8.92769, 0.88 ) }
    dend_10 { pt3dadd( 3.70703, 45.4525, -9.28361, 1.11 ) }
    dend_10 { pt3dadd( 4.6196, 47.0996, -10.5044, 1.11 ) }
    dend_10 { pt3dadd( 6.53854, 49.6777, -13.2487, 1.4 ) }
    dend_10 { pt3dadd( 7.08309, 50.3352, -14.0743, 1.62 ) }
    dend_10 { pt3dadd( 7.70547, 51.0894, -15.0515, 1.11 ) }
    dend_10 { pt3dadd( 9.10498, 52.8139, -17.1554, 0.88 ) }
    dend_10 { pt3dadd( 9.8553, 53.8113, -18.1881, 1.47 ) }
    dend_10 { pt3dadd( 10.3815, 54.5776, -18.8164, 1.47 ) }
    dend_10 { pt3dadd( 11.2674, 55.9496, -19.5079, 1.18 ) }
    dend_10 { pt3dadd( 12.0991, 57.2601, -20.0153, 1.33 ) }
    dend_10 { pt3dadd( 12.8156, 58.3862, -20.3351, 1.33 ) }
    dend_10 { pt3dadd( 13.5872, 59.6523, -20.6245, 1.18 ) }
    dend_10 { pt3dadd( 14.5859, 61.4057, -21.0205, 1.03 ) }
    dend_10 { pt3dadd( 15.2201, 62.6928, -21.3516, 0.88 ) }
    dend_10 { pt3dadd( 15.7744, 64.0421, -21.7909, 0.88 ) }
    dend_10 { pt3dadd( 16.1642, 65.464, -22.3718, 1.03 ) }
    dend_10 { pt3dadd( 16.4864, 67.7423, -23.5016, 1.18 ) }
    dend_10 { pt3dadd( 16.5649, 69.1422, -24.2886, 1.11 ) }
    dend_10 { pt3dadd( 16.5954, 71.0877, -25.4536, 1.25 ) }
    dend_10 { pt3dadd( 16.6227, 72.3881, -26.2624, 1.11 ) }
    dend_10 { pt3dadd( 16.7486, 73.9447, -27.2622, 0.96 ) }
    dend_10 { pt3dadd( 17.0214, 75.2209, -28.0559, 0.88 ) }
    dend_10 { pt3dadd( 17.6835, 76.7206, -28.8709, 0.88 ) }
    dend_10 { pt3dadd( 18.4405, 77.8862, -29.3771, 0.96 ) }
    dend_10 { pt3dadd( 19.1665, 78.7842, -29.639, 1.03 ) }
    dend_10 { pt3dadd( 20.0036, 79.7552, -29.8311, 1.03 ) }
    dend_10 { pt3dadd( 21.0038, 80.9427, -29.9805, 0.88 ) }
    dend_10 { pt3dadd( 21.5539, 81.7404, -30.055, 0.74 ) }
    dend_10 { pt3dadd( 22.2476, 83.3746, -30.2561, 1.69 ) }
    dend_10 { pt3dadd( 22.443, 84.315, -30.4044, 2.28 ) }
    dend_10 { pt3dadd( 22.5274, 85.2813, -30.5737, 2.28 ) }
    dend_10 { pt3dadd( 22.5645, 86.5211, -30.793, 2.06 ) }
    dend_10 { pt3dadd( 22.5922, 87.8433, -31.0267, 1.62 ) }
    dend_10 { pt3dadd( 22.6983, 89.4787, -31.3463, 1.18 ) }
    dend_10 { pt3dadd( 22.8252, 90.4685, -31.5653, 1.4 ) }
    dend_10 { pt3dadd( 23.0411, 91.5506, -31.8354, 1.4 ) }
    dend_10 { pt3dadd( 23.3715, 92.8808, -32.2571, 1.18 ) }
    dend_10 { pt3dadd( 23.683, 94.0559, -32.6862, 1.03 ) }
    dend_10 { pt3dadd( 24.2399, 96.0333, -33.5242, 0.81 ) }
    dend_10 { pt3dadd( 24.6077, 97.2341, -34.0765, 0.81 ) }
    dend_10 { pt3dadd( 24.9259, 98.2165, -34.537, 0.81 ) }
    dend_10 { pt3dadd( 25.3551, 99.4986, -35.1192, 0.96 ) }
    dend_10 { pt3dadd( 25.7149, 100.537, -35.5475, 1.33 ) }
    dend_10 { pt3dadd( 26.218, 101.941, -36.0242, 1.11 ) }
    dend_10 { pt3dadd( 26.7893, 103.468, -36.4133, 0.96 ) }
    dend_10 { pt3dadd( 27.1776, 104.398, -36.5973, 1.18 ) }
    dend_10 { pt3dadd( 27.6852, 105.53, -36.7794, 1.18 ) }
    dend_10 { pt3dadd( 28.2151, 106.677, -36.9251, 1.33 ) }
    dend_10 { pt3dadd( 28.6245, 107.598, -37.0568, 1.18 ) }
    dend_10 { pt3dadd( 28.9131, 108.298, -37.1606, 1.18 ) }
    dend_10 { pt3dadd( 29.3414, 109.339, -37.3568, 0.88 ) }
    dend_10 { pt3dadd( 29.789, 110.351, -37.5867, 0.74 ) }
    dend_10 { pt3dadd( 30.2923, 111.418, -37.8548, 0.74 ) }
    dend_10 { pt3dadd( 31.0527, 112.897, -38.2893, 0.88 ) }
    dend_10 { pt3dadd( 31.715, 114.056, -38.6417, 1.11 ) }
    dend_10 { pt3dadd( 32.3422, 115.115, -38.9979, 1.11 ) }
    dend_10 { pt3dadd( 32.8984, 116.036, -39.3007, 0.96 ) }
    dend_10 { pt3dadd( 33.662, 117.278, -39.6557, 1.18 ) }
    dend_10 { pt3dadd( 34.4767, 118.612, -39.9244, 0.96 ) }
    dend_10 { pt3dadd( 35.1025, 119.705, -40.0269, 0.81 ) }
    dend_10 { pt3dadd( 36.0826, 121.502, -40.006, 0.88 ) }
    dend_10 { pt3dadd( 36.7592, 122.707, -39.8545, 0.88 ) }
    dend_10 { pt3dadd( 37.3845, 123.809, -39.5957, 1.03 ) }
    dend_10 { pt3dadd( 37.9583, 124.82, -39.2889, 1.11 ) }
    dend_10 { pt3dadd( 38.5097, 125.837, -38.9476, 0.88 ) }
    dend_10 { pt3dadd( 39.1241, 126.986, -38.5765, 0.66 ) }
    dend_10 { pt3dadd( 39.6124, 127.879, -38.2832, 0.66 ) }
    dend_10 { pt3dadd( 40.2258, 129.047, -38.0136, 0.66 ) }
    dend_10 { pt3dadd( 41.2557, 131.147, -37.6956, 0.96 ) }
    dend_10 { pt3dadd( 41.8068, 132.47, -37.6054, 1.4 ) }
    dend_10 { pt3dadd( 42.1685, 133.505, -37.5914, 1.55 ) }
    dend_10 { pt3dadd( 42.394, 134.301, -37.5845, 1.84 ) }
    dend_10 { pt3dadd( 42.7148, 135.502, -37.5461, 1.92 ) }
    dend_10 { pt3dadd( 43.0185, 136.505, -37.4686, 1.77 ) }
    dend_10 { pt3dadd( 43.5597, 138.046, -37.2423, 1.25 ) }
    dend_10 { pt3dadd( 44.1123, 139.37, -36.9416, 1.18 ) }
    dend_10 { pt3dadd( 44.7134, 140.599, -36.595, 1.11 ) }
    dend_10 { pt3dadd( 45.3775, 141.788, -36.1878, 1.25 ) }
    dend_10 { pt3dadd( 46.151, 143.018, -35.6981, 1.33 ) }
    dend_10 { pt3dadd( 46.5984, 143.666, -35.4374, 1.33 ) }
    dend_10 { pt3dadd( 47.3798, 144.72, -35.0232, 1.25 ) }
    dend_10 { pt3dadd( 48.0811, 145.69, -34.7309, 0.74 ) }
    dend_10 { pt3dadd( 48.8711, 146.865, -34.5327, 0.52 ) }
    dend_10 { pt3dadd( 49.4236, 147.79, -34.4962, 0.52 ) }
    dend_10 { pt3dadd( 50.0227, 148.876, -34.517, 0.81 ) }
    dend_10 { pt3dadd( 50.8076, 150.403, -34.6448, 1.4 ) }
    dend_10 { pt3dadd( 51.4411, 151.721, -34.8702, 1.69 ) }
    dend_10 { pt3dadd( 51.8703, 152.669, -35.0947, 1.84 ) }
    dend_10 { pt3dadd( 52.2288, 153.466, -35.3905, 1.99 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 93/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 0.207422, 33.1364, -7.59838, 1.4 ) }
    dend_1 { pt3dadd( -0.813538, 33.8034, -7.24053, 1.4 ) }
    dend_1 { pt3dadd( -1.59791, 34.2765, -6.92806, 0.96 ) }
    dend_1 { pt3dadd( -2.29439, 34.7187, -6.65737, 1.25 ) }
    dend_1 { pt3dadd( -2.88245, 35.1314, -6.44223, 1.4 ) }
    dend_1 { pt3dadd( -3.33461, 35.4807, -6.28661, 1.47 ) }
    dend_1 { pt3dadd( -4.66062, 36.6003, -5.86055, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_1 { pt3dadd( -5.32042, 37.194, -5.643, 1.11 ) }
    dend_1 { pt3dadd( -6.05441, 37.978, -5.41261, 1.11 ) }
    dend_1 { pt3dadd( -6.72253, 38.8265, -5.22804, 1.03 ) }
    dend_1 { pt3dadd( -7.22355, 39.521, -5.13186, 1.03 ) }
    dend_1 { pt3dadd( -7.86709, 40.4495, -5.09272, 1.03 ) }
    dend_1 { pt3dadd( -8.30915, 41.0591, -5.13706, 1.18 ) }
    dend_1 { pt3dadd( -9.05001, 41.9244, -5.26054, 1.18 ) }
    dend_1 { pt3dadd( -10.0848, 42.8142, -5.50852, 0.81 ) }
    dend_1 { pt3dadd( -10.7909, 43.2183, -5.71226, 0.88 ) }
    dend_1 { pt3dadd( -11.6047, 43.5235, -5.97206, 1.11 ) }
    dend_1 { pt3dadd( -12.6087, 43.789, -6.30321, 0.96 ) }
    dend_1 { pt3dadd( -13.2744, 43.9334, -6.51987, 0.96 ) }
    dend_1 { pt3dadd( -14.2281, 44.1313, -6.81644, 0.88 ) }
    dend_1 { pt3dadd( -15.0735, 44.3535, -7.05539, 0.81 ) }
    dend_1 { pt3dadd( -16.1757, 44.7705, -7.29601, 1.11 ) }
    dend_1 { pt3dadd( -16.6847, 45.0172, -7.38447, 1.25 ) }
    dend_1 { pt3dadd( -17.1825, 45.3096, -7.46575, 1.25 ) }
    dend_1 { pt3dadd( -17.9001, 45.7796, -7.56714, 0.88 ) }
    dend_1 { pt3dadd( -18.5599, 46.2469, -7.64311, 0.88 ) }
    dend_1 { pt3dadd( -19.1782, 46.7061, -7.68903, 0.96 ) }
    dend_1 { pt3dadd( -19.9025, 47.2594, -7.70435, 0.96 ) }
    dend_1 { pt3dadd( -20.4779, 47.6976, -7.69912, 1.03 ) }
    dend_1 { pt3dadd( -21.0999, 48.1651, -7.67501, 1.25 ) }
    dend_1 { pt3dadd( -21.7494, 48.6451, -7.62042, 1.25 ) }
    dend_1 { pt3dadd( -22.1728, 48.9565, -7.57257, 1.11 ) }
    dend_1 { pt3dadd( -22.6923, 49.3329, -7.49177, 1.25 ) }
    dend_1 { pt3dadd( -23.1921, 49.6956, -7.37987, 1.4 ) }
    dend_1 { pt3dadd( -23.6853, 50.0577, -7.24889, 1.4 ) }
    dend_1 { pt3dadd( -24.296, 50.5116, -7.0705, 1.33 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 29/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.54828, 42.8383, -2.3154, 0.725043 ) }
    axon_1 { pt3dadd( -3.39577, 57.8143, -2.3154, 0.725043 ) }
    axon_1 { pt3dadd( -4.24326, 72.7904, -2.3154, 0.725043 ) }
    // Section: dend_56, id: dend_56, parent: dend_50 (entry count 32/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -45.9603, 37.8031, 41.245, 0.88 ) }
    dend_56 { pt3dadd( -50.3859, 36.416, 53.6624, 0.88 ) }
    dend_56 { pt3dadd( -56.0659, 33.703, 65.3339, 0.88 ) }
    dend_56 { pt3dadd( -60.5596, 32.3035, 77.7254, 0.88 ) }
    dend_56 { pt3dadd( -65.6998, 29.9865, 89.7248, 0.88 ) }
    dend_56 { pt3dadd( -71.9272, 27.8877, 101.24, 0.88 ) }
    dend_56 { pt3dadd( -80.3109, 25.5989, 111.257, 0.88 ) }
    dend_56 { pt3dadd( -87.5253, 21.9218, 121.772, 0.88 ) }
    dend_56 { pt3dadd( -92.4442, 18.8476, 133.699, 0.88 ) }
    dend_56 { pt3dadd( -99.0678, 16.6174, 144.966, 0.88 ) }
    dend_56 { pt3dadd( -103.892, 14.6916, 157.163, 0.88 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 43/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -45.9603, 37.8031, 41.245, 0.22 ) }
    dend_51 { pt3dadd( -53.9458, 43.9929, 41.9335, 0.88 ) }
    dend_51 { pt3dadd( -62.9722, 48.4882, 41.6665, 0.88 ) }
    dend_51 { pt3dadd( -71.3905, 53.8814, 43.1675, 0.88 ) }
    dend_51 { pt3dadd( -78.7415, 60.6182, 45.0521, 0.88 ) }
    dend_51 { pt3dadd( -85.9094, 67.4613, 47.2577, 0.88 ) }
    dend_51 { pt3dadd( -94.5139, 72.753, 47.4771, 0.88 ) }
    dend_51 { pt3dadd( -103.536, 77.2181, 46.849, 0.88 ) }
    dend_51 { pt3dadd( -111.878, 82.9351, 46.7908, 0.88 ) }
    dend_51 { pt3dadd( -119.506, 89.6136, 46.8827, 0.88 ) }
    dend_51 { pt3dadd( -126.2, 97.2605, 47.3054, 0.88 ) }
    dend_51 { pt3dadd( -133.014, 104.609, 49.0164, 0.88 ) }
    dend_51 { pt3dadd( -140.635, 110.876, 51.3322, 0.88 ) }
    dend_51 { pt3dadd( -147.461, 117.006, 55.6545, 0.88 ) }
    dend_51 { pt3dadd( -155.132, 121.069, 60.8055, 0.88 ) }
    dend_51 { pt3dadd( -163.147, 123.177, 66.5231, 0.88 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 59/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -52.9982, 273.984, -10.3743, 0.66 ) }
    dend_49 { pt3dadd( -54.3734, 275.425, -11.6857, 0.66 ) }
    dend_49 { pt3dadd( -54.8055, 275.844, -12.0877, 0.66 ) }
    dend_49 { pt3dadd( -55.2165, 276.225, -12.4526, 0.74 ) }
    dend_49 { pt3dadd( -55.6065, 276.576, -12.7817, 0.88 ) }
    dend_49 { pt3dadd( -55.92, 276.851, -13.0253, 0.88 ) }
    dend_49 { pt3dadd( -56.3888, 277.264, -13.359, 0.74 ) }
    dend_49 { pt3dadd( -56.8047, 277.627, -13.575, 0.52 ) }
    dend_49 { pt3dadd( -57.161, 277.953, -13.7749, 0.96 ) }
    dend_49 { pt3dadd( -57.4864, 278.259, -13.9585, 0.96 ) }
    dend_49 { pt3dadd( -58.0275, 278.765, -14.2467, 0.37 ) }
    dend_49 { pt3dadd( -58.4919, 279.192, -14.4741, 0.37 ) }
    dend_49 { pt3dadd( -59.015, 279.655, -14.6957, 0.66 ) }
    dend_49 { pt3dadd( -59.4042, 279.989, -14.8442, 0.81 ) }
    dend_49 { pt3dadd( -59.8724, 280.382, -15.0115, 0.81 ) }
    dend_49 { pt3dadd( -60.2679, 280.714, -15.1407, 0.66 ) }
    dend_49 { pt3dadd( -60.6687, 281.032, -15.2719, 0.66 ) }
    dend_49 { pt3dadd( -60.985, 281.265, -15.3725, 0.66 ) }
    dend_49 { pt3dadd( -61.3493, 281.52, -15.4764, 0.37 ) }
    dend_49 { pt3dadd( -61.6588, 281.757, -15.5675, 0.37 ) }
    dend_49 { pt3dadd( -62.1916, 282.22, -15.7426, 0.74 ) }
    dend_49 { pt3dadd( -62.494, 282.517, -15.8291, 0.74 ) }
    dend_49 { pt3dadd( -62.959, 283.009, -15.9444, 0.29 ) }
    dend_49 { pt3dadd( -63.3281, 283.412, -16.0314, 0.29 ) }
    dend_49 { pt3dadd( -63.7499, 283.887, -16.1396, 0.66 ) }
    dend_49 { pt3dadd( -63.9048, 284.065, -16.1854, 0.66 ) }
    dend_49 { pt3dadd( -64.2995, 284.553, -16.3194, 0.52 ) }
    dend_49 { pt3dadd( -64.4995, 284.818, -16.3919, 0.37 ) }
    dend_49 { pt3dadd( -64.6885, 285.064, -16.4709, 0.37 ) }
    dend_49 { pt3dadd( -64.9838, 285.401, -16.5998, 0.59 ) }
    dend_49 { pt3dadd( -65.2811, 285.71, -16.7363, 1.11 ) }
    dend_49 { pt3dadd( -65.6341, 286.092, -16.9011, 1.18 ) }
    dend_49 { pt3dadd( -65.9048, 286.406, -17.0352, 0.96 ) }
    dend_49 { pt3dadd( -66.3608, 286.968, -17.2366, 0.74 ) }
    dend_49 { pt3dadd( -66.7242, 287.434, -17.3712, 0.66 ) }
    dend_49 { pt3dadd( -67.044, 287.851, -17.4636, 0.37 ) }
    dend_49 { pt3dadd( -67.4112, 288.35, -17.5478, 0.37 ) }
    dend_49 { pt3dadd( -67.6555, 288.72, -17.5892, 0.52 ) }
    dend_49 { pt3dadd( -67.9051, 289.149, -17.6456, 0.52 ) }
    dend_49 { pt3dadd( -68.2509, 289.831, -17.7221, 0.66 ) }
    dend_49 { pt3dadd( -68.4852, 290.332, -17.7606, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_49 { pt3dadd( -68.7327, 290.856, -17.7746, 0.81 ) }
    dend_49 { pt3dadd( -69.1655, 291.701, -17.7594, 0.59 ) }
    dend_49 { pt3dadd( -69.4708, 292.276, -17.717, 0.52 ) }
    dend_49 { pt3dadd( -69.7023, 292.726, -17.656, 0.52 ) }
    dend_49 { pt3dadd( -70.0088, 293.379, -17.5265, 0.44 ) }
    dend_49 { pt3dadd( -70.2076, 293.836, -17.4262, 0.44 ) }
    dend_49 { pt3dadd( -70.385, 294.262, -17.3267, 0.44 ) }
    dend_49 { pt3dadd( -70.5373, 294.597, -17.2611, 0.44 ) }
    dend_49 { pt3dadd( -70.6934, 294.899, -17.233, 0.44 ) }
    dend_49 { pt3dadd( -70.9023, 295.261, -17.2801, 0.44 ) }
    dend_49 { pt3dadd( -71.1141, 295.626, -17.4119, 0.59 ) }
    dend_49 { pt3dadd( -71.3261, 296.024, -17.6399, 0.66 ) }
    dend_49 { pt3dadd( -71.5409, 296.494, -17.94, 0.52 ) }
    dend_49 { pt3dadd( -71.7655, 297.076, -18.3124, 0.52 ) }
    dend_49 { pt3dadd( -71.9269, 297.572, -18.6182, 0.52 ) }
    dend_49 { pt3dadd( -72.0857, 298.222, -19.0084, 0.59 ) }
    dend_49 { pt3dadd( -72.2202, 298.957, -19.424, 0.59 ) }
    dend_49 { pt3dadd( -72.3035, 299.559, -19.7529, 0.52 ) }
    dend_49 { pt3dadd( -72.3737, 300.149, -20.0542, 0.52 ) }
    dend_49 { pt3dadd( -72.4225, 300.512, -20.2383, 0.52 ) }
    dend_49 { pt3dadd( -72.5687, 301.096, -20.5115, 0.44 ) }
    dend_49 { pt3dadd( -72.724, 301.455, -20.6326, 0.44 ) }
    dend_49 { pt3dadd( -72.9205, 301.792, -20.7191, 0.44 ) }
    dend_49 { pt3dadd( -73.3125, 302.33, -20.8559, 0.44 ) }
    dend_49 { pt3dadd( -73.7136, 302.811, -20.9661, 0.44 ) }
    dend_49 { pt3dadd( -74.1451, 303.319, -21.0604, 0.44 ) }
    dend_49 { pt3dadd( -74.5489, 303.838, -21.1272, 0.52 ) }
    dend_49 { pt3dadd( -74.828, 304.285, -21.1718, 0.66 ) }
    dend_49 { pt3dadd( -75.0525, 304.749, -21.2223, 0.37 ) }
    dend_49 { pt3dadd( -75.2186, 305.235, -21.2763, 0.29 ) }
    dend_49 { pt3dadd( -75.3613, 305.875, -21.3494, 0.44 ) }
    dend_49 { pt3dadd( -75.4315, 306.498, -21.4196, 0.74 ) }
    dend_49 { pt3dadd( -75.4397, 307.079, -21.4777, 1.03 ) }
    dend_49 { pt3dadd( -75.3882, 307.526, -21.532, 1.03 ) }
    dend_49 { pt3dadd( -75.294, 308.005, -21.6406, 0.88 ) }
    dend_49 { pt3dadd( -75.1473, 308.673, -21.8588, 0.52 ) }
    dend_49 { pt3dadd( -75.0516, 309.211, -22.0952, 0.52 ) }
    dend_49 { pt3dadd( -75.0155, 309.49, -22.2769, 0.37 ) }
    dend_49 { pt3dadd( -74.9304, 310.259, -22.8814, 0.37 ) }
    dend_49 { pt3dadd( -74.8144, 311.058, -23.6124, 0.37 ) }
    dend_49 { pt3dadd( -74.7356, 311.413, -23.9721, 0.37 ) }
    dend_49 { pt3dadd( -74.6464, 311.796, -24.3713, 0.37 ) }
    dend_49 { pt3dadd( -74.4899, 312.638, -25.2049, 0.37 ) }
    dend_49 { pt3dadd( -74.447, 313.023, -25.5501, 0.29 ) }
    dend_49 { pt3dadd( -74.4274, 313.595, -26.0012, 0.29 ) }
    dend_49 { pt3dadd( -74.4148, 314.16, -26.4151, 0.29 ) }
    dend_49 { pt3dadd( -74.4318, 314.733, -26.8218, 0.37 ) }
    dend_49 { pt3dadd( -74.472, 315.15, -27.1261, 0.37 ) }
    dend_49 { pt3dadd( -74.5747, 315.676, -27.5335, 0.37 ) }
    dend_49 { pt3dadd( -74.6903, 316.257, -28.0466, 0.44 ) }
    dend_49 { pt3dadd( -74.742, 316.573, -28.3503, 0.59 ) }
    dend_49 { pt3dadd( -74.767, 316.961, -28.7776, 0.59 ) }
    dend_49 { pt3dadd( -74.7461, 317.68, -29.6298, 0.74 ) }
    dend_49 { pt3dadd( -74.7127, 318.218, -30.2676, 0.88 ) }
    dend_49 { pt3dadd( -74.6736, 318.868, -31.0385, 0.81 ) }
    dend_49 { pt3dadd( -74.6601, 319.431, -31.7097, 1.03 ) }
    dend_49 { pt3dadd( -74.6887, 320.613, -33.1473, 0.74 ) }
    dend_49 { pt3dadd( -74.7661, 321.241, -33.8968, 0.66 ) }
    dend_49 { pt3dadd( -74.8366, 321.555, -34.306, 0.74 ) }
    dend_49 { pt3dadd( -74.9783, 321.967, -34.8903, 0.74 ) }
    dend_49 { pt3dadd( -75.1418, 322.283, -35.4185, 0.59 ) }
    dend_49 { pt3dadd( -75.3607, 322.583, -36.0323, 0.44 ) }
    dend_49 { pt3dadd( -75.7698, 322.931, -37.0574, 0.29 ) }
    dend_49 { pt3dadd( -76.4862, 323.364, -38.8611, 0.74 ) }
    dend_49 { pt3dadd( -76.6501, 323.442, -39.2941, 1.25 ) }
    dend_49 { pt3dadd( -77.0258, 323.6, -40.3113, 1.77 ) }
    dend_49 { pt3dadd( -77.3238, 323.719, -41.1078, 1.92 ) }
    dend_49 { pt3dadd( -77.7212, 323.855, -42.1341, 0.74 ) }
    dend_49 { pt3dadd( -77.9809, 323.927, -42.7581, 0.52 ) }
    dend_49 { pt3dadd( -78.4154, 324.03, -43.6136, 0.52 ) }
    dend_49 { pt3dadd( -78.7415, 324.083, -44.2249, 0.66 ) }
    dend_49 { pt3dadd( -79.1627, 324.135, -44.9165, 0.52 ) }
    dend_49 { pt3dadd( -79.7432, 324.212, -45.7549, 0.52 ) }
    dend_49 { pt3dadd( -80.2818, 324.303, -46.4637, 0.52 ) }
    dend_49 { pt3dadd( -80.8785, 324.417, -47.2367, 0.66 ) }
    dend_49 { pt3dadd( -81.3052, 324.52, -47.7625, 0.66 ) }
    dend_49 { pt3dadd( -81.6443, 324.645, -48.2332, 0.81 ) }
    dend_49 { pt3dadd( -81.9486, 324.81, -48.7119, 0.59 ) }
    dend_49 { pt3dadd( -82.1506, 324.952, -49.192, 0.59 ) }
    dend_49 { pt3dadd( -82.5498, 325.284, -50.597, 0.81 ) }
    dend_49 { pt3dadd( -82.7156, 325.424, -51.4923, 0.74 ) }
    dend_49 { pt3dadd( -82.8731, 325.53, -53.2687, 0.88 ) }
    dend_49 { pt3dadd( -82.8621, 325.445, -54.5362, 1.11 ) }
    dend_49 { pt3dadd( -82.5935, 324.906, -57.4107, 0.74 ) }
    dend_49 { pt3dadd( -82.4684, 324.701, -57.987, 0.88 ) }
    dend_49 { pt3dadd( -82.1293, 324.172, -58.6996, 0.96 ) }
    dend_49 { pt3dadd( -81.7273, 323.552, -59.098, 0.74 ) }
    dend_49 { pt3dadd( -81.0049, 322.389, -59.3037, 0.66 ) }
    dend_49 { pt3dadd( -79.8123, 320.472, -59.2549, 0.29 ) }
    dend_49 { pt3dadd( -79.3377, 319.673, -59.0191, 0.29 ) }
    dend_49 { pt3dadd( -78.795, 318.753, -58.6554, 0.29 ) }
    dend_49 { pt3dadd( -78.4672, 318.181, -58.3562, 0.66 ) }
    dend_49 { pt3dadd( -78.2741, 317.823, -58.1195, 0.74 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 93/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -52.9982, 273.984, -10.3743, 0.29 ) }
    dend_48 { pt3dadd( -53.3975, 274.503, -10.237, 0.29 ) }
    dend_48 { pt3dadd( -53.6089, 274.789, -10.1686, 0.37 ) }
    dend_48 { pt3dadd( -53.8509, 275.111, -10.0844, 0.52 ) }
    dend_48 { pt3dadd( -54.0134, 275.318, -10.0327, 0.66 ) }
    dend_48 { pt3dadd( -54.3072, 275.66, -9.95554, 0.81 ) }
    dend_48 { pt3dadd( -54.6196, 276.0, -9.89065, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_48 { pt3dadd( -54.8994, 276.286, -9.84152, 0.74 ) }
    dend_48 { pt3dadd( -55.4068, 276.78, -9.79151, 0.29 ) }
    dend_48 { pt3dadd( -55.6305, 276.987, -9.78762, 0.29 ) }
    dend_48 { pt3dadd( -55.9182, 277.251, -9.78908, 0.37 ) }
    dend_48 { pt3dadd( -56.2165, 277.535, -9.79874, 0.37 ) }
    dend_48 { pt3dadd( -56.5915, 277.924, -9.80468, 0.44 ) }
    dend_48 { pt3dadd( -56.7587, 278.136, -9.8044, 0.66 ) }
    dend_48 { pt3dadd( -56.9563, 278.459, -9.80456, 0.81 ) }
    dend_48 { pt3dadd( -57.1398, 278.809, -9.79994, 0.81 ) }
    dend_48 { pt3dadd( -57.3014, 279.118, -9.79956, 0.52 ) }
    dend_48 { pt3dadd( -57.4968, 279.494, -9.80505, 0.52 ) }
    dend_48 { pt3dadd( -57.7151, 279.951, -9.81523, 0.52 ) }
    dend_48 { pt3dadd( -57.9234, 280.441, -9.82814, 0.44 ) }
    dend_48 { pt3dadd( -58.1001, 280.926, -9.85295, 0.37 ) }
    dend_48 { pt3dadd( -58.3035, 281.539, -9.89923, 0.29 ) }
    dend_48 { pt3dadd( -58.4549, 282.017, -9.93858, 0.44 ) }
    dend_48 { pt3dadd( -58.6049, 282.533, -9.98692, 0.52 ) }
    dend_48 { pt3dadd( -58.7105, 282.942, -10.0295, 0.37 ) }
    dend_48 { pt3dadd( -58.8034, 283.355, -10.073, 0.37 ) }
    dend_48 { pt3dadd( -58.8788, 283.695, -10.1092, 0.59 ) }
    dend_48 { pt3dadd( -58.9421, 284.026, -10.1407, 0.59 ) }
    dend_48 { pt3dadd( -59.0236, 284.4, -10.1793, 0.59 ) }
    dend_48 { pt3dadd( -59.1468, 284.889, -10.2371, 0.37 ) }
    dend_48 { pt3dadd( -59.305, 285.481, -10.3099, 0.29 ) }
    dend_48 { pt3dadd( -59.4238, 286.016, -10.3606, 0.29 ) }
    dend_48 { pt3dadd( -59.5105, 286.559, -10.4011, 0.29 ) }
    dend_48 { pt3dadd( -59.5336, 286.83, -10.4182, 0.29 ) }
    dend_48 { pt3dadd( -59.5429, 287.234, -10.4407, 0.44 ) }
    dend_48 { pt3dadd( -59.5329, 287.523, -10.4579, 0.44 ) }
    dend_48 { pt3dadd( -59.4977, 288.068, -10.5056, 0.59 ) }
    dend_48 { pt3dadd( -59.4778, 288.366, -10.547, 0.74 ) }
    dend_48 { pt3dadd( -59.4592, 288.694, -10.6067, 0.74 ) }
    dend_48 { pt3dadd( -59.4294, 288.996, -10.6638, 0.59 ) }
    dend_48 { pt3dadd( -59.3497, 289.531, -10.7574, 0.88 ) }
    dend_48 { pt3dadd( -59.2808, 289.957, -10.8259, 1.18 ) }
    dend_48 { pt3dadd( -59.208, 290.52, -10.9191, 0.37 ) }
    dend_48 { pt3dadd( -59.1895, 290.74, -10.9578, 0.37 ) }
    dend_48 { pt3dadd( -59.161, 291.231, -11.0462, 0.37 ) }
    dend_48 { pt3dadd( -59.1149, 291.772, -11.1391, 0.29 ) }
    dend_48 { pt3dadd( -59.0451, 292.27, -11.2208, 0.37 ) }
    dend_48 { pt3dadd( -58.9476, 292.76, -11.2897, 0.29 ) }
    dend_48 { pt3dadd( -58.8086, 293.262, -11.3712, 0.29 ) }
    dend_48 { pt3dadd( -58.7434, 293.433, -11.4106, 0.29 ) }
    dend_48 { pt3dadd( -58.4956, 293.886, -11.5479, 0.59 ) }
    dend_48 { pt3dadd( -58.2592, 294.199, -11.6476, 0.74 ) }
    dend_48 { pt3dadd( -58.0606, 294.413, -11.7161, 0.74 ) }
    dend_48 { pt3dadd( -57.7092, 294.749, -11.8185, 0.66 ) }
    dend_48 { pt3dadd( -57.2862, 295.116, -11.9326, 0.44 ) }
    dend_48 { pt3dadd( -57.0115, 295.353, -12.001, 0.44 ) }
    dend_48 { pt3dadd( -56.5923, 295.695, -12.0906, 0.88 ) }
    dend_48 { pt3dadd( -56.4043, 295.827, -12.1183, 1.33 ) }
    dend_48 { pt3dadd( -56.1663, 295.972, -12.157, 1.69 ) }
    dend_48 { pt3dadd( -55.7524, 296.207, -12.2226, 1.84 ) }
    dend_48 { pt3dadd( -55.0845, 296.602, -12.336, 0.29 ) }
    dend_48 { pt3dadd( -54.6944, 296.875, -12.4161, 0.29 ) }
    dend_48 { pt3dadd( -54.3131, 297.207, -12.5115, 0.29 ) }
    dend_48 { pt3dadd( -53.7343, 297.826, -12.6605, 0.59 ) }
    dend_48 { pt3dadd( -53.5097, 298.124, -12.7284, 0.59 ) }
    dend_48 { pt3dadd( -53.2009, 298.659, -12.8498, 0.44 ) }
    dend_48 { pt3dadd( -52.9351, 299.308, -13.006, 0.59 ) }
    dend_48 { pt3dadd( -52.8166, 299.712, -13.0939, 0.44 ) }
    dend_48 { pt3dadd( -52.7399, 300.055, -13.1506, 0.29 ) }
    dend_48 { pt3dadd( -52.6446, 300.5, -13.2022, 0.29 ) }
    dend_48 { pt3dadd( -52.5862, 300.749, -13.2473, 0.29 ) }
    dend_48 { pt3dadd( -52.4914, 301.169, -13.3299, 0.52 ) }
    dend_48 { pt3dadd( -52.4273, 301.438, -13.3884, 0.52 ) }
    dend_48 { pt3dadd( -52.3501, 301.782, -13.4598, 0.37 ) }
    dend_48 { pt3dadd( -52.233, 302.326, -13.5654, 0.44 ) }
    dend_48 { pt3dadd( -52.0997, 302.849, -13.6546, 0.44 ) }
    dend_48 { pt3dadd( -51.9468, 303.301, -13.7246, 0.74 ) }
    dend_48 { pt3dadd( -51.745, 303.814, -13.7935, 0.81 ) }
    dend_48 { pt3dadd( -51.4636, 304.566, -13.8767, 0.29 ) }
    dend_48 { pt3dadd( -51.3948, 304.787, -13.8974, 0.29 ) }
    dend_48 { pt3dadd( -51.3158, 305.088, -13.9243, 0.29 ) }
    dend_48 { pt3dadd( -51.2106, 305.466, -13.9566, 0.29 ) }
    dend_48 { pt3dadd( -51.0638, 305.93, -14.0131, 0.37 ) }
    dend_48 { pt3dadd( -50.9082, 306.362, -14.0527, 0.44 ) }
    dend_48 { pt3dadd( -50.6896, 306.793, -14.0941, 0.44 ) }
    dend_48 { pt3dadd( -50.4172, 307.233, -14.1509, 0.44 ) }
    dend_48 { pt3dadd( -50.1917, 307.6, -14.1853, 0.44 ) }
    dend_48 { pt3dadd( -50.0535, 307.829, -14.2001, 0.66 ) }
    dend_48 { pt3dadd( -49.896, 308.073, -14.2127, 0.66 ) }
    dend_48 { pt3dadd( -49.642, 308.442, -14.2475, 0.44 ) }
    dend_48 { pt3dadd( -49.3438, 308.817, -14.4157, 0.29 ) }
    dend_48 { pt3dadd( -49.072, 309.148, -14.7683, 0.29 ) }
    dend_48 { pt3dadd( -48.9035, 309.389, -15.0862, 0.44 ) }
    dend_48 { pt3dadd( -48.764, 309.623, -15.4279, 0.59 ) }
    dend_48 { pt3dadd( -48.611, 309.895, -15.8264, 0.74 ) }
    dend_48 { pt3dadd( -48.1905, 310.637, -16.9087, 0.74 ) }
    dend_48 { pt3dadd( -47.7752, 311.266, -17.8534, 0.37 ) }
    dend_48 { pt3dadd( -47.5598, 311.558, -18.322, 0.29 ) }
    dend_48 { pt3dadd( -47.3289, 311.844, -18.8022, 0.59 ) }
    dend_48 { pt3dadd( -47.0895, 312.138, -19.2894, 0.52 ) }
    dend_48 { pt3dadd( -46.9326, 312.359, -19.6075, 0.52 ) }
    dend_48 { pt3dadd( -46.6967, 312.8, -20.0307, 0.59 ) }
    // Section: dend_38, id: dend_38, parent: dend_18 (entry count 95/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -4.37696, -38.5614, 4.20715, 0.52 ) }
    dend_38 { pt3dadd( -6.27377, -39.5334, 5.45089, 0.52 ) }
    dend_38 { pt3dadd( -6.6618, -39.7958, 5.72324, 0.44 ) }
    dend_38 { pt3dadd( -6.99477, -40.0718, 5.97503, 0.66 ) }
    dend_38 { pt3dadd( -7.43413, -40.5005, 6.32452, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_38 { pt3dadd( -8.14111, -41.3149, 6.89813, 0.66 ) }
    dend_38 { pt3dadd( -8.42356, -41.7017, 7.13708, 0.81 ) }
    dend_38 { pt3dadd( -8.81718, -42.5555, 7.46141, 0.74 ) }
    dend_38 { pt3dadd( -8.93544, -42.9759, 7.57333, 0.88 ) }
    dend_38 { pt3dadd( -9.04813, -43.8079, 7.85925, 0.66 ) }
    dend_38 { pt3dadd( -9.08866, -44.5411, 8.18104, 0.66 ) }
    dend_38 { pt3dadd( -9.10143, -45.1258, 8.50879, 0.81 ) }
    dend_38 { pt3dadd( -9.17117, -45.8351, 9.01492, 0.81 ) }
    dend_38 { pt3dadd( -9.33653, -46.6024, 9.66821, 0.88 ) }
    dend_38 { pt3dadd( -9.9324, -48.6076, 11.5061, 0.96 ) }
    dend_38 { pt3dadd( -10.1444, -49.207, 12.0734, 0.74 ) }
    dend_38 { pt3dadd( -10.3271, -49.669, 12.4931, 0.59 ) }
    dend_38 { pt3dadd( -10.6683, -50.5009, 13.1424, 0.59 ) }
    dend_38 { pt3dadd( -10.9658, -51.2373, 13.617, 0.59 ) }
    dend_38 { pt3dadd( -11.2836, -52.1112, 14.0046, 0.96 ) }
    dend_38 { pt3dadd( -11.5107, -52.8164, 14.1519, 1.11 ) }
    dend_38 { pt3dadd( -11.7764, -53.684, 14.3092, 0.88 ) }
    dend_38 { pt3dadd( -12.0529, -54.5703, 14.486, 0.66 ) }
    dend_38 { pt3dadd( -12.164, -54.8568, 14.5576, 0.74 ) }
    dend_38 { pt3dadd( -12.665, -55.6731, 14.889, 0.66 ) }
    dend_38 { pt3dadd( -13.0692, -56.1541, 15.1809, 0.74 ) }
    dend_38 { pt3dadd( -13.5449, -56.6471, 15.5977, 0.81 ) }
    dend_38 { pt3dadd( -13.9516, -57.037, 16.026, 0.88 ) }
    dend_38 { pt3dadd( -14.4261, -57.5689, 16.6631, 0.66 ) }
    dend_38 { pt3dadd( -14.7046, -57.9845, 17.1103, 0.66 ) }
    dend_38 { pt3dadd( -15.011, -58.5743, 17.6526, 0.59 ) }
    dend_38 { pt3dadd( -15.2784, -59.2618, 18.1655, 0.66 ) }
    dend_38 { pt3dadd( -15.4164, -59.6382, 18.3887, 0.81 ) }
    dend_38 { pt3dadd( -15.7574, -60.5163, 18.8125, 0.59 ) }
    dend_38 { pt3dadd( -16.0402, -61.2584, 19.1375, 0.74 ) }
    dend_38 { pt3dadd( -16.313, -61.9484, 19.4202, 0.88 ) }
    dend_38 { pt3dadd( -16.4786, -62.357, 19.5711, 0.88 ) }
    dend_38 { pt3dadd( -16.7576, -63.1495, 19.9151, 0.66 ) }
    dend_38 { pt3dadd( -16.9298, -63.7668, 20.2785, 0.52 ) }
    dend_38 { pt3dadd( -17.0982, -64.6334, 21.0511, 0.59 ) }
    dend_38 { pt3dadd( -17.1456, -65.0388, 21.5274, 0.59 ) }
    dend_38 { pt3dadd( -17.1758, -65.4347, 22.047, 0.66 ) }
    dend_38 { pt3dadd( -17.2452, -66.5624, 23.5889, 0.66 ) }
    dend_38 { pt3dadd( -17.2706, -67.1131, 24.3449, 0.96 ) }
    dend_38 { pt3dadd( -17.3722, -67.8691, 25.3732, 1.03 ) }
    dend_38 { pt3dadd( -17.537, -68.4237, 26.0825, 0.88 ) }
    dend_38 { pt3dadd( -17.7184, -68.8487, 26.557, 0.59 ) }
    dend_38 { pt3dadd( -17.908, -69.1897, 26.8588, 0.74 ) }
    dend_38 { pt3dadd( -18.268, -69.7237, 27.1391, 0.59 ) }
    dend_38 { pt3dadd( -18.7001, -70.2878, 27.3197, 0.74 ) }
    dend_38 { pt3dadd( -19.2114, -70.8911, 27.4099, 0.88 ) }
    dend_38 { pt3dadd( -19.6942, -71.4296, 27.4433, 0.88 ) }
    dend_38 { pt3dadd( -20.2159, -71.9844, 27.4761, 0.59 ) }
    dend_38 { pt3dadd( -20.7196, -72.5017, 27.5244, 0.37 ) }
    dend_38 { pt3dadd( -20.9192, -72.6974, 27.5559, 0.37 ) }
    dend_38 { pt3dadd( -21.3187, -73.0955, 27.6875, 0.44 ) }
    dend_38 { pt3dadd( -21.745, -73.5205, 27.8851, 0.59 ) }
    dend_38 { pt3dadd( -22.1465, -73.9166, 28.1309, 0.59 ) }
    dend_38 { pt3dadd( -22.6257, -74.3939, 28.4664, 0.74 ) }
    dend_38 { pt3dadd( -23.0782, -74.8179, 28.7944, 0.66 ) }
    dend_38 { pt3dadd( -23.9381, -75.5807, 29.3862, 0.66 ) }
    dend_38 { pt3dadd( -24.456, -76.0254, 29.7203, 0.59 ) }
    dend_38 { pt3dadd( -25.2159, -76.7051, 30.1811, 0.81 ) }
    dend_38 { pt3dadd( -25.6508, -77.1168, 30.4319, 0.96 ) }
    dend_38 { pt3dadd( -26.2111, -77.6572, 30.7354, 0.74 ) }
    dend_38 { pt3dadd( -26.8286, -78.2522, 31.0385, 0.52 ) }
    dend_38 { pt3dadd( -27.8906, -79.3107, 31.5198, 0.59 ) }
    dend_38 { pt3dadd( -28.46, -79.9201, 31.7705, 0.66 ) }
    dend_38 { pt3dadd( -28.8312, -80.3468, 31.9175, 0.66 ) }
    dend_38 { pt3dadd( -29.3693, -80.9978, 32.1145, 0.44 ) }
    dend_38 { pt3dadd( -29.7571, -81.4932, 32.2555, 0.44 ) }
    dend_38 { pt3dadd( -30.2727, -82.1514, 32.4429, 0.37 ) }
    dend_38 { pt3dadd( -30.892, -82.9454, 32.6349, 0.29 ) }
    dend_38 { pt3dadd( -31.16, -83.2971, 32.7102, 0.29 ) }
    dend_38 { pt3dadd( -31.7263, -84.1789, 32.8443, 0.29 ) }
    dend_38 { pt3dadd( -35.1116, -90.7868, 38.9347, 0.29 ) }
    dend_38 { pt3dadd( -37.9269, -97.5595, 45.1416, 0.29 ) }
    dend_38 { pt3dadd( -41.9794, -104.258, 50.7083, 0.29 ) }
    dend_38 { pt3dadd( -45.3376, -111.786, 55.6985, 0.29 ) }
    dend_38 { pt3dadd( -50.4269, -118.901, 59.7032, 0.29 ) }
    dend_38 { pt3dadd( -56.4744, -125.22, 63.6468, 0.29 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 76/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -4.37696, -38.5614, 4.20715, 2.21 ) }
    dend_19 { pt3dadd( -4.07629, -39.846, 4.4131, 2.21 ) }
    dend_19 { pt3dadd( -3.89446, -40.6576, 4.5274, 2.21 ) }
    dend_19 { pt3dadd( -3.61424, -41.9084, 4.70357, 2.21 ) }
    dend_19 { pt3dadd( -3.38414, -42.9355, 4.84821, 2.28 ) }
    dend_19 { pt3dadd( -3.20121, -43.752, 4.96321, 2.28 ) }
    dend_19 { pt3dadd( -2.93768, -44.9283, 5.12888, 2.5 ) }
    dend_19 { pt3dadd( -2.71479, -45.7322, 5.18868, 2.58 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 84/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 52.2288, 153.466, -35.3905, 1.25 ) }
    dend_12 { pt3dadd( 52.8793, 154.006, -35.7644, 1.25 ) }
    dend_12 { pt3dadd( 54.2376, 154.909, -36.4173, 0.81 ) }
    dend_12 { pt3dadd( 55.074, 155.391, -36.7772, 0.96 ) }
    dend_12 { pt3dadd( 55.8882, 155.779, -37.013, 0.74 ) }
    dend_12 { pt3dadd( 57.248, 156.358, -37.3058, 0.59 ) }
    dend_12 { pt3dadd( 58.5018, 156.864, -37.5263, 0.52 ) }
    dend_12 { pt3dadd( 59.0488, 157.042, -37.5875, 0.66 ) }
    dend_12 { pt3dadd( 59.8622, 157.27, -37.6395, 0.44 ) }
    dend_12 { pt3dadd( 61.6339, 157.751, -37.754, 0.66 ) }
    dend_12 { pt3dadd( 62.4394, 157.998, -37.8369, 0.52 ) }
    dend_12 { pt3dadd( 63.1851, 158.292, -37.9774, 0.52 ) }
    dend_12 { pt3dadd( 64.1994, 158.772, -38.2328, 0.88 ) }
    dend_12 { pt3dadd( 65.0651, 159.243, -38.5293, 1.25 ) }
    dend_12 { pt3dadd( 65.4064, 159.458, -38.6794, 1.62 ) }
    dend_12 { pt3dadd( 66.4102, 160.164, -39.2317, 1.62 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_12 { pt3dadd( 67.2338, 160.757, -39.7013, 1.33 ) }
    dend_12 { pt3dadd( 68.226, 161.44, -40.2423, 0.88 ) }
    dend_12 { pt3dadd( 68.9756, 161.966, -40.649, 0.74 ) }
    dend_12 { pt3dadd( 69.5447, 162.357, -40.9437, 0.59 ) }
    dend_12 { pt3dadd( 69.9872, 162.65, -41.1611, 0.59 ) }
    dend_12 { pt3dadd( 71.007, 163.259, -41.5916, 1.18 ) }
    dend_12 { pt3dadd( 71.9186, 163.765, -41.9766, 1.77 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 7/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 52.2288, 153.466, -35.3905, 0.37 ) }
    dend_11 { pt3dadd( 54.624, 154.509, -30.8988, 0.37 ) }
    dend_11 { pt3dadd( 55.1626, 154.919, -29.6554, 0.37 ) }
    dend_11 { pt3dadd( 55.3313, 155.178, -29.066, 0.37 ) }
    dend_11 { pt3dadd( 55.4542, 155.586, -28.3292, 0.66 ) }
    dend_11 { pt3dadd( 55.5139, 155.984, -27.7403, 0.66 ) }
    dend_11 { pt3dadd( 55.5932, 156.599, -26.9484, 0.66 ) }
    dend_11 { pt3dadd( 55.4948, 157.333, -26.4181, 0.52 ) }
    dend_11 { pt3dadd( 55.434, 158.194, -25.8544, 0.52 ) }
    dend_11 { pt3dadd( 55.455, 158.743, -25.5117, 0.52 ) }
    dend_11 { pt3dadd( 55.7211, 159.664, -24.9508, 0.66 ) }
    dend_11 { pt3dadd( 56.0672, 160.246, -24.6098, 1.18 ) }
    dend_11 { pt3dadd( 56.4011, 160.629, -24.3688, 1.18 ) }
    dend_11 { pt3dadd( 57.0074, 161.228, -23.9812, 0.66 ) }
    dend_11 { pt3dadd( 57.5518, 161.769, -23.6437, 0.52 ) }
    dend_11 { pt3dadd( 58.3446, 162.63, -23.1361, 0.52 ) }
    dend_11 { pt3dadd( 58.8315, 163.242, -22.7903, 1.11 ) }
    dend_11 { pt3dadd( 59.4338, 164.193, -22.2738, 0.96 ) }
    dend_11 { pt3dadd( 59.7739, 164.898, -21.903, 0.88 ) }
    dend_11 { pt3dadd( 60.1169, 165.889, -21.4025, 0.37 ) }
    dend_11 { pt3dadd( 60.4364, 167.249, -20.7544, 0.29 ) }
    dend_11 { pt3dadd( 60.5475, 167.97, -20.4177, 0.29 ) }
    dend_11 { pt3dadd( 60.6274, 168.943, -19.9424, 0.59 ) }
    dend_11 { pt3dadd( 60.6457, 169.97, -19.4413, 0.74 ) }
    dend_11 { pt3dadd( 60.6038, 170.841, -19.0065, 0.88 ) }
    dend_11 { pt3dadd( 60.5326, 171.557, -18.6403, 1.03 ) }
    dend_11 { pt3dadd( 60.3941, 172.509, -18.1556, 1.11 ) }
    dend_11 { pt3dadd( 60.2527, 173.337, -17.7667, 0.88 ) }
    dend_11 { pt3dadd( 60.12, 174.048, -17.4651, 0.52 ) }
    dend_11 { pt3dadd( 59.9218, 175.057, -17.0601, 0.88 ) }
    dend_11 { pt3dadd( 59.8264, 175.524, -16.8767, 0.74 ) }
    dend_11 { pt3dadd( 59.6459, 176.4, -16.5476, 0.52 ) }
    dend_11 { pt3dadd( 59.4552, 177.333, -16.1804, 0.52 ) }
    dend_11 { pt3dadd( 59.2855, 178.223, -15.7866, 0.74 ) }
    dend_11 { pt3dadd( 59.1274, 179.024, -15.3981, 0.88 ) }
    dend_11 { pt3dadd( 58.9756, 179.715, -15.062, 0.88 ) }
    dend_11 { pt3dadd( 58.7931, 180.411, -14.7392, 1.03 ) }
    dend_11 { pt3dadd( 58.5299, 181.242, -14.4068, 0.81 ) }
    dend_11 { pt3dadd( 58.2, 182.145, -14.0681, 0.59 ) }
    dend_11 { pt3dadd( 57.9768, 182.688, -13.8663, 0.52 ) }
    dend_11 { pt3dadd( 57.6209, 183.548, -13.5263, 0.52 ) }
    dend_11 { pt3dadd( 57.4364, 184.056, -13.307, 0.52 ) }
    dend_11 { pt3dadd( 57.1942, 184.915, -12.9242, 0.52 ) }
    dend_11 { pt3dadd( 56.9496, 186.128, -12.4117, 0.52 ) }
    dend_11 { pt3dadd( 56.82, 187.1, -11.989, 0.88 ) }
    dend_11 { pt3dadd( 56.7364, 188.132, -11.5089, 0.88 ) }
    dend_11 { pt3dadd( 56.6927, 189.132, -11.0077, 0.74 ) }
    dend_11 { pt3dadd( 56.6421, 189.857, -10.6429, 0.37 ) }
    dend_11 { pt3dadd( 56.5562, 190.64, -10.2582, 0.37 ) }
    dend_11 { pt3dadd( 56.3777, 191.415, -9.91511, 0.52 ) }
    dend_11 { pt3dadd( 56.1638, 191.951, -9.67624, 0.52 ) }
    dend_11 { pt3dadd( 55.9758, 192.282, -9.51179, 0.37 ) }
    dend_11 { pt3dadd( 55.3835, 193.157, -8.99279, 0.52 ) }
    dend_11 { pt3dadd( 55.1347, 193.512, -8.7692, 0.74 ) }
    dend_11 { pt3dadd( 54.6379, 194.295, -8.29479, 0.74 ) }
    dend_11 { pt3dadd( 54.2803, 195.002, -7.92401, 0.59 ) }
    dend_11 { pt3dadd( 54.0044, 195.71, -7.61303, 0.74 ) }
    dend_11 { pt3dadd( 53.7481, 196.566, -7.27242, 0.88 ) }
    dend_11 { pt3dadd( 53.5583, 197.301, -6.98577, 0.88 ) }
    dend_11 { pt3dadd( 53.3078, 198.168, -6.6546, 0.88 ) }
    dend_11 { pt3dadd( 52.9473, 199.167, -6.26166, 0.66 ) }
    dend_11 { pt3dadd( 52.6576, 199.725, -5.99962, 0.66 ) }
    dend_11 { pt3dadd( 52.1822, 200.389, -5.62024, 0.52 ) }
    dend_11 { pt3dadd( 51.5254, 201.047, -5.11259, 0.37 ) }
    dend_11 { pt3dadd( 51.0283, 201.411, -4.63609, 0.29 ) }
    dend_11 { pt3dadd( 50.422, 201.784, -3.92435, 0.29 ) }
    dend_11 { pt3dadd( 49.8689, 202.109, -3.19412, 0.66 ) }
    dend_11 { pt3dadd( 49.6383, 202.259, -2.86445, 1.03 ) }
    dend_11 { pt3dadd( 49.1782, 202.631, -2.14631, 1.18 ) }
    dend_11 { pt3dadd( 48.2169, 203.668, -0.372719, 0.59 ) }
    dend_11 { pt3dadd( 47.7956, 204.315, 0.550964, 0.44 ) }
    dend_11 { pt3dadd( 47.549, 204.872, 1.203, 0.52 ) }
    dend_11 { pt3dadd( 47.4037, 205.397, 1.74882, 0.52 ) }
    dend_11 { pt3dadd( 47.2775, 206.065, 2.39004, 0.52 ) }
    dend_11 { pt3dadd( 47.1897, 206.792, 3.01724, 0.59 ) }
    dend_11 { pt3dadd( 47.1468, 207.599, 3.62916, 0.37 ) }
    dend_11 { pt3dadd( 47.14, 208.276, 4.14842, 0.37 ) }
    dend_11 { pt3dadd( 47.1712, 209.495, 5.07851, 0.66 ) }
    dend_11 { pt3dadd( 47.1807, 210.074, 5.50061, 0.74 ) }
    dend_11 { pt3dadd( 47.1346, 210.715, 5.93294, 0.59 ) }
    dend_11 { pt3dadd( 46.9961, 211.415, 6.35078, 0.52 ) }
    dend_11 { pt3dadd( 46.7401, 212.16, 6.76498, 0.44 ) }
    dend_11 { pt3dadd( 46.2983, 213.107, 7.21148, 0.44 ) }
    dend_11 { pt3dadd( 45.9316, 213.809, 7.47426, 0.59 ) }
    dend_11 { pt3dadd( 45.3657, 214.89, 7.83183, 0.59 ) }
    dend_11 { pt3dadd( 44.9998, 215.613, 8.07169, 0.74 ) }
    dend_11 { pt3dadd( 44.6684, 216.298, 8.33684, 0.74 ) }
    dend_11 { pt3dadd( 44.4466, 216.878, 8.65627, 0.74 ) }
    dend_11 { pt3dadd( 44.2223, 217.804, 9.43795, 0.52 ) }
    dend_11 { pt3dadd( 44.167, 218.292, 9.95085, 0.66 ) }
    dend_11 { pt3dadd( 44.1624, 218.801, 10.6157, 0.81 ) }
    dend_11 { pt3dadd( 44.1563, 219.51, 11.7003, 1.03 ) }
    dend_11 { pt3dadd( 44.0598, 220.292, 13.1102, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_11 { pt3dadd( 43.9021, 220.956, 14.3787, 0.44 ) }
    dend_11 { pt3dadd( 43.7695, 221.3, 15.0069, 0.29 ) }
    dend_11 { pt3dadd( 43.4253, 221.944, 16.1571, 0.59 ) }
    dend_11 { pt3dadd( 43.2008, 222.269, 16.755, 0.96 ) }
    dend_11 { pt3dadd( 42.5491, 223.141, 18.3127, 0.29 ) }
    dend_11 { pt3dadd( 42.2251, 223.582, 19.0947, 0.29 ) }
    dend_11 { pt3dadd( 41.8274, 224.179, 20.0632, 0.96 ) }
    dend_11 { pt3dadd( 41.4379, 224.781, 20.9843, 1.18 ) }
    dend_11 { pt3dadd( 40.8093, 225.854, 22.454, 0.96 ) }
    dend_11 { pt3dadd( 40.5643, 226.282, 23.1336, 0.59 ) }
    dend_11 { pt3dadd( 40.3562, 226.63, 23.7637, 0.29 ) }
    dend_11 { pt3dadd( 40.1046, 227.018, 24.6082, 0.29 ) }
    dend_11 { pt3dadd( 39.9941, 227.213, 25.0693, 0.29 ) }
    dend_11 { pt3dadd( 39.7924, 227.784, 26.2753, 0.44 ) }
    dend_11 { pt3dadd( 39.5948, 228.961, 28.51, 0.44 ) }
    dend_11 { pt3dadd( 39.5987, 229.276, 29.0868, 0.59 ) }
    dend_11 { pt3dadd( 39.7391, 229.751, 29.9439, 0.59 ) }
    dend_11 { pt3dadd( 40.0139, 230.173, 30.6843, 0.52 ) }
    dend_11 { pt3dadd( 40.5616, 230.673, 31.4172, 0.29 ) }
    dend_11 { pt3dadd( 41.3071, 231.106, 31.8617, 0.29 ) }
    dend_11 { pt3dadd( 42.151, 231.487, 32.1831, 0.29 ) }
    dend_11 { pt3dadd( 43.2532, 231.902, 32.5321, 0.44 ) }
    dend_11 { pt3dadd( 44.2185, 232.238, 32.8623, 0.44 ) }
    dend_11 { pt3dadd( 44.9923, 232.482, 33.204, 0.29 ) }
    dend_11 { pt3dadd( 45.8593, 232.757, 33.6675, 0.29 ) }
    dend_11 { pt3dadd( 47.2385, 233.292, 34.5457, 0.59 ) }
    dend_11 { pt3dadd( 48.1382, 233.742, 35.1865, 0.74 ) }
    dend_11 { pt3dadd( 49.4819, 234.629, 36.1838, 0.52 ) }
    dend_11 { pt3dadd( 50.9061, 235.79, 37.3033, 0.22 ) }
    dend_11 { pt3dadd( 51.1723, 236.048, 37.5161, 0.29 ) }
    dend_11 { pt3dadd( 51.8955, 236.942, 38.0713, 0.29 ) }
    dend_11 { pt3dadd( 52.4022, 237.737, 38.4009, 0.29 ) }
    dend_11 { pt3dadd( 52.9866, 238.796, 38.6927, 0.37 ) }
    dend_11 { pt3dadd( 53.4579, 239.694, 38.6431, 0.37 ) }
    dend_11 { pt3dadd( 53.8002, 240.299, 38.4753, 0.22 ) }
    dend_11 { pt3dadd( 54.7293, 241.487, 37.8155, 0.22 ) }
    dend_11 { pt3dadd( 55.2712, 242.023, 37.3932, 0.37 ) }
    dend_11 { pt3dadd( 55.9192, 242.568, 36.8733, 0.15 ) }
    dend_11 { pt3dadd( 58.2253, 244.381, 34.9063, 0.15 ) }
    dend_11 { pt3dadd( 58.9572, 244.899, 34.2556, 0.15 ) }
    dend_11 { pt3dadd( 61.1485, 246.246, 32.2967, 0.15 ) }
    dend_11 { pt3dadd( 62.2217, 246.794, 31.3354, 0.15 ) }
    dend_11 { pt3dadd( 63.2553, 247.27, 30.4084, 0.22 ) }
    dend_11 { pt3dadd( 63.4636, 256.094, 38.2514, 0.22 ) }
    dend_11 { pt3dadd( 64.296, 265.025, 45.9389, 0.22 ) }
    dend_11 { pt3dadd( 67.4691, 272.79, 54.2061, 0.22 ) }
    dend_11 { pt3dadd( 71.7907, 279.265, 62.9934, 0.22 ) }
    dend_11 { pt3dadd( 75.2744, 285.797, 72.1052, 0.22 ) }
    dend_11 { pt3dadd( 80.8499, 293.091, 79.4635, 0.22 ) }
    dend_11 { pt3dadd( 86.5824, 301.532, 85.3965, 0.22 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 50/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -24.296, 50.5116, -7.0705, 0.52 ) }
    dend_5 { pt3dadd( -25.1012, 51.2714, -6.19903, 0.52 ) }
    dend_5 { pt3dadd( -25.6286, 51.7216, -5.66874, 0.52 ) }
    dend_5 { pt3dadd( -26.1515, 52.101, -5.22612, 0.74 ) }
    dend_5 { pt3dadd( -26.8214, 52.5652, -4.71431, 0.96 ) }
    dend_5 { pt3dadd( -27.5, 53.0869, -4.21595, 1.18 ) }
    dend_5 { pt3dadd( -28.047, 53.5633, -3.82684, 1.18 ) }
    dend_5 { pt3dadd( -28.5797, 54.0733, -3.47593, 0.88 ) }
    dend_5 { pt3dadd( -29.3744, 55.0994, -2.91802, 0.37 ) }
    dend_5 { pt3dadd( -29.5976, 55.5235, -2.75278, 0.37 ) }
    dend_5 { pt3dadd( -29.9848, 56.596, -2.43659, 0.52 ) }
    dend_5 { pt3dadd( -30.1867, 57.3553, -2.21975, 0.81 ) }
    dend_5 { pt3dadd( -30.3685, 58.2037, -1.94346, 0.96 ) }
    dend_5 { pt3dadd( -30.5582, 59.143, -1.54269, 0.52 ) }
    dend_5 { pt3dadd( -30.7303, 59.8509, -1.11417, 0.59 ) }
    dend_5 { pt3dadd( -30.9168, 60.2624, -0.736521, 0.74 ) }
    dend_5 { pt3dadd( -31.4336, 60.8916, 0.0923828, 1.11 ) }
    dend_5 { pt3dadd( -31.8517, 61.2453, 0.678578, 1.18 ) }
    dend_5 { pt3dadd( -32.4622, 61.6537, 1.45177, 1.18 ) }
    dend_5 { pt3dadd( -33.0915, 62.0167, 2.17052, 0.74 ) }
    dend_5 { pt3dadd( -33.7964, 62.4062, 2.88673, 0.59 ) }
    dend_5 { pt3dadd( -34.5015, 62.8075, 3.52039, 0.52 ) }
    dend_5 { pt3dadd( -35.0017, 63.1027, 3.88611, 0.52 ) }
    dend_5 { pt3dadd( -35.5653, 63.4377, 4.1919, 0.52 ) }
    dend_5 { pt3dadd( -36.2152, 63.8281, 4.42573, 0.74 ) }
    dend_5 { pt3dadd( -36.9115, 64.2776, 4.66274, 0.74 ) }
    dend_5 { pt3dadd( -37.2609, 64.5162, 4.77104, 0.81 ) }
    dend_5 { pt3dadd( -37.7237, 64.8665, 4.94574, 0.81 ) }
    dend_5 { pt3dadd( -38.627, 65.6583, 5.39603, 0.66 ) }
    dend_5 { pt3dadd( -39.0405, 66.1413, 5.70788, 0.52 ) }
    dend_5 { pt3dadd( -39.87, 67.534, 6.7036, 0.74 ) }
    dend_5 { pt3dadd( -40.12, 68.1127, 7.11959, 0.66 ) }
    dend_5 { pt3dadd( -40.43, 69.0125, 7.75459, 0.59 ) }
    dend_5 { pt3dadd( -40.6152, 69.5836, 8.15242, 0.66 ) }
    dend_5 { pt3dadd( -40.9508, 70.5966, 8.82974, 0.52 ) }
    dend_5 { pt3dadd( -41.1806, 71.1043, 9.116, 0.66 ) }
    dend_5 { pt3dadd( -41.5155, 71.6562, 9.39263, 0.88 ) }
    dend_5 { pt3dadd( -41.9889, 72.2842, 9.73118, 0.88 ) }
    dend_5 { pt3dadd( -42.4602, 72.832, 10.1072, 0.66 ) }
    dend_5 { pt3dadd( -42.781, 73.2172, 10.4716, 0.59 ) }
    dend_5 { pt3dadd( -43.1355, 73.7366, 11.0596, 0.74 ) }
    dend_5 { pt3dadd( -43.418, 74.2996, 11.7306, 0.52 ) }
    dend_5 { pt3dadd( -43.6319, 74.8707, 12.4341, 0.52 ) }
    dend_5 { pt3dadd( -44.0312, 76.2794, 14.1553, 0.66 ) }
    dend_5 { pt3dadd( -44.2733, 77.333, 15.417, 0.74 ) }
    dend_5 { pt3dadd( -44.4013, 77.9131, 16.1288, 0.44 ) }
    dend_5 { pt3dadd( -44.5251, 78.373, 16.7085, 0.44 ) }
    dend_5 { pt3dadd( -44.6757, 78.7125, 17.1367, 0.59 ) }
    dend_5 { pt3dadd( -44.9049, 79.0242, 17.5408, 0.66 ) }
    dend_5 { pt3dadd( -45.3401, 79.4283, 18.0257, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_5 { pt3dadd( -46.0082, 80.0005, 18.7391, 0.52 ) }
    dend_5 { pt3dadd( -46.4441, 80.4139, 19.3087, 0.52 ) }
    dend_5 { pt3dadd( -46.7822, 80.8417, 19.8764, 0.44 ) }
    dend_5 { pt3dadd( -47.2782, 81.7344, 20.977, 0.59 ) }
    dend_5 { pt3dadd( -47.4863, 82.1676, 21.4651, 0.74 ) }
    dend_5 { pt3dadd( -47.7096, 82.6813, 22.0045, 0.88 ) }
    dend_5 { pt3dadd( -48.0012, 83.3383, 22.6764, 0.88 ) }
    dend_5 { pt3dadd( -48.2748, 83.8993, 23.3503, 0.44 ) }
    dend_5 { pt3dadd( -48.5381, 84.3524, 23.969, 0.44 ) }
    dend_5 { pt3dadd( -48.9883, 84.9382, 24.9181, 0.59 ) }
    dend_5 { pt3dadd( -49.3466, 85.3379, 25.5874, 0.52 ) }
    dend_5 { pt3dadd( -49.9524, 85.951, 26.6409, 0.66 ) }
    dend_5 { pt3dadd( -50.5078, 86.4898, 27.57, 0.74 ) }
    dend_5 { pt3dadd( -50.9543, 86.9448, 28.3389, 0.74 ) }
    dend_5 { pt3dadd( -51.2187, 87.2583, 28.8057, 0.74 ) }
    dend_5 { pt3dadd( -51.6248, 87.8345, 29.5417, 0.52 ) }
    dend_5 { pt3dadd( -51.7832, 88.0799, 29.7773, 0.52 ) }
    dend_5 { pt3dadd( -52.0193, 88.4863, 30.057, 0.66 ) }
    dend_5 { pt3dadd( -52.3284, 89.0704, 30.3953, 0.66 ) }
    dend_5 { pt3dadd( -52.6546, 89.681, 30.7389, 0.81 ) }
    dend_5 { pt3dadd( -53.0164, 90.3488, 31.1066, 0.81 ) }
    dend_5 { pt3dadd( -53.3421, 90.9218, 31.4437, 0.59 ) }
    dend_5 { pt3dadd( -53.7067, 91.5274, 31.8021, 0.52 ) }
    dend_5 { pt3dadd( -54.2372, 92.3503, 32.307, 0.59 ) }
    dend_5 { pt3dadd( -54.6087, 92.8867, 32.6734, 0.66 ) }
    dend_5 { pt3dadd( -54.9285, 93.2897, 32.9904, 0.66 ) }
    dend_5 { pt3dadd( -55.5144, 93.8866, 33.5713, 0.59 ) }
    dend_5 { pt3dadd( -55.8932, 94.2155, 33.976, 0.59 ) }
    dend_5 { pt3dadd( -56.2733, 94.5042, 34.3938, 0.59 ) }
    dend_5 { pt3dadd( -56.8463, 94.9092, 34.9991, 0.52 ) }
    dend_5 { pt3dadd( -57.3123, 95.2594, 35.4927, 0.66 ) }
    dend_5 { pt3dadd( -57.7398, 95.6085, 35.9115, 0.66 ) }
    dend_5 { pt3dadd( -58.3207, 96.1164, 36.3933, 0.52 ) }
    dend_5 { pt3dadd( -58.7616, 96.5285, 36.6909, 0.66 ) }
    dend_5 { pt3dadd( -59.454, 97.2275, 37.0611, 0.81 ) }
    dend_5 { pt3dadd( -60.0354, 97.8702, 37.322, 0.81 ) }
    dend_5 { pt3dadd( -60.8695, 98.919, 37.6705, 0.52 ) }
    dend_5 { pt3dadd( -61.3767, 99.6456, 37.8863, 0.59 ) }
    dend_5 { pt3dadd( -61.7367, 100.201, 38.0428, 0.59 ) }
    dend_5 { pt3dadd( -62.1669, 100.913, 38.2548, 0.37 ) }
    dend_5 { pt3dadd( -62.7555, 101.932, 38.6129, 0.52 ) }
    dend_5 { pt3dadd( -63.2098, 102.699, 38.9437, 0.59 ) }
    dend_5 { pt3dadd( -63.7631, 103.578, 39.4084, 0.22 ) }
    dend_5 { pt3dadd( -64.0164, 103.928, 39.6437, 0.37 ) }
    dend_5 { pt3dadd( -64.3815, 104.344, 39.9506, 0.37 ) }
    dend_5 { pt3dadd( -64.8953, 104.813, 40.3059, 0.37 ) }
    dend_5 { pt3dadd( -65.5323, 105.322, 40.678, 0.66 ) }
    dend_5 { pt3dadd( -65.9993, 105.727, 41.0113, 0.88 ) }
    dend_5 { pt3dadd( -66.3472, 106.081, 41.3426, 0.59 ) }
    dend_5 { pt3dadd( -67.0699, 106.994, 42.2769, 0.29 ) }
    dend_5 { pt3dadd( -67.4846, 107.76, 43.0589, 0.29 ) }
    dend_5 { pt3dadd( -67.7312, 108.454, 43.7247, 0.29 ) }
    dend_5 { pt3dadd( -68.0362, 110.11, 45.2613, 0.88 ) }
    dend_5 { pt3dadd( -68.0734, 110.993, 46.1716, 0.88 ) }
    dend_5 { pt3dadd( -68.0319, 111.53, 46.7515, 0.66 ) }
    dend_5 { pt3dadd( -67.8303, 112.306, 47.6867, 0.52 ) }
    dend_5 { pt3dadd( -67.6633, 112.712, 48.192, 0.29 ) }
    dend_5 { pt3dadd( -67.5094, 113.028, 48.6039, 0.29 ) }
    dend_5 { pt3dadd( -67.0921, 114.612, 50.1596, 0.74 ) }
    dend_5 { pt3dadd( -71.2938, 121.922, 58.3997, 0.74 ) }
    dend_5 { pt3dadd( -75.1772, 128.379, 67.4391, 0.74 ) }
    dend_5 { pt3dadd( -78.414, 134.964, 76.642, 0.74 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 62/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -24.296, 50.5116, -7.0705, 0.74 ) }
    dend_2 { pt3dadd( -24.9968, 50.8124, -7.31723, 0.74 ) }
    dend_2 { pt3dadd( -25.5287, 51.1086, -7.49378, 0.74 ) }
    dend_2 { pt3dadd( -26.3471, 51.6421, -7.72873, 0.74 ) }
    dend_2 { pt3dadd( -26.906, 51.9925, -7.9505, 0.88 ) }
    dend_2 { pt3dadd( -27.4817, 52.3042, -8.22813, 1.03 ) }
    dend_2 { pt3dadd( -28.0548, 52.5347, -8.53972, 1.03 ) }
    dend_2 { pt3dadd( -28.6363, 52.6881, -8.90155, 0.96 ) }
    dend_2 { pt3dadd( -29.2737, 52.7709, -9.29428, 0.74 ) }
    dend_2 { pt3dadd( -30.7645, 52.7977, -10.1164, 0.66 ) }
    dend_2 { pt3dadd( -31.7259, 52.7412, -10.5427, 0.66 ) }
    dend_2 { pt3dadd( -32.9548, 52.6121, -10.9709, 0.66 ) }
    dend_2 { pt3dadd( -33.693, 52.517, -11.1688, 0.59 ) }
    dend_2 { pt3dadd( -34.6671, 52.3786, -11.3446, 0.66 ) }
    dend_2 { pt3dadd( -35.3994, 52.2818, -11.4018, 0.66 ) }
    dend_2 { pt3dadd( -36.861, 52.1462, -11.3592, 0.81 ) }
    dend_2 { pt3dadd( -37.7071, 52.1266, -11.3001, 0.96 ) }
    dend_2 { pt3dadd( -38.3418, 52.1699, -11.2462, 1.18 ) }
    dend_2 { pt3dadd( -38.9961, 52.264, -11.2014, 1.18 ) }
    dend_2 { pt3dadd( -39.8979, 52.4573, -11.166, 0.66 ) }
    dend_2 { pt3dadd( -40.5878, 52.631, -11.1645, 0.66 ) }
    dend_2 { pt3dadd( -41.1475, 52.7785, -11.1884, 0.59 ) }
    dend_2 { pt3dadd( -41.7867, 52.9078, -11.2782, 0.74 ) }
    dend_2 { pt3dadd( -42.574, 52.9818, -11.4398, 0.74 ) }
    dend_2 { pt3dadd( -42.9178, 52.9366, -11.5736, 0.88 ) }
    dend_2 { pt3dadd( -43.5544, 52.6223, -12.0076, 0.88 ) }
    dend_2 { pt3dadd( -44.0022, 52.3289, -12.4227, 0.66 ) }
    dend_2 { pt3dadd( -44.9441, 51.6979, -13.3499, 0.66 ) }
    dend_2 { pt3dadd( -45.3998, 51.3997, -13.8048, 1.25 ) }
    dend_2 { pt3dadd( -46.4351, 50.7627, -14.8124, 1.47 ) }
    dend_2 { pt3dadd( -47.531, 50.1649, -15.8105, 1.62 ) }
    dend_2 { pt3dadd( -48.826, 49.61, -16.8859, 1.55 ) }
    dend_2 { pt3dadd( -49.442, 49.4478, -17.3049, 0.81 ) }
    dend_2 { pt3dadd( -50.1268, 49.3938, -17.6387, 0.59 ) }
    dend_2 { pt3dadd( -50.9552, 49.4474, -17.9532, 0.44 ) }
    dend_2 { pt3dadd( -51.5831, 49.5556, -18.1314, 0.44 ) }
    dend_2 { pt3dadd( -52.2674, 49.717, -18.3065, 0.59 ) }
    dend_2 { pt3dadd( -52.7377, 49.8281, -18.4372, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_2 { pt3dadd( -53.3937, 49.9617, -18.7035, 0.29 ) }
    dend_2 { pt3dadd( -54.5271, 50.2067, -19.2848, 1.03 ) }
    dend_2 { pt3dadd( -55.4057, 50.4416, -19.7841, 1.47 ) }
    dend_2 { pt3dadd( -56.0652, 50.6515, -20.1741, 1.69 ) }
    dend_2 { pt3dadd( -56.473, 50.8006, -20.4135, 2.06 ) }
    dend_2 { pt3dadd( -57.2914, 51.1625, -20.8733, 1.03 ) }
    dend_2 { pt3dadd( -58.1013, 51.5979, -21.3053, 0.52 ) }
    dend_2 { pt3dadd( -58.7902, 52.0633, -21.6755, 0.81 ) }
    dend_2 { pt3dadd( -59.1597, 52.3692, -21.8904, 0.96 ) }
    dend_2 { pt3dadd( -59.6273, 52.8288, -22.2125, 0.74 ) }
    dend_2 { pt3dadd( -60.1304, 53.3798, -22.6256, 1.03 ) }
    dend_2 { pt3dadd( -60.4593, 53.7673, -22.9324, 0.88 ) }
    dend_2 { pt3dadd( -60.9191, 54.3081, -23.3997, 1.25 ) }
    dend_2 { pt3dadd( -61.2868, 54.7062, -23.7875, 1.62 ) }
    dend_2 { pt3dadd( -61.6254, 55.0327, -24.1326, 1.77 ) }
    dend_2 { pt3dadd( -62.1231, 55.4821, -24.6476, 1.99 ) }
    dend_2 { pt3dadd( -62.5429, 55.8505, -25.0687, 1.18 ) }
    dend_2 { pt3dadd( -62.8693, 56.1432, -25.3905, 0.29 ) }
    dend_2 { pt3dadd( -63.328, 56.5698, -25.8615, 0.29 ) }
    dend_2 { pt3dadd( -63.9015, 57.1406, -26.5171, 0.66 ) }
    dend_2 { pt3dadd( -64.3421, 57.6461, -27.0882, 0.66 ) }
    dend_2 { pt3dadd( -64.6637, 58.0907, -27.5583, 0.22 ) }
    dend_2 { pt3dadd( -64.9687, 58.594, -28.0705, 0.81 ) }
    dend_2 { pt3dadd( -65.2805, 59.1636, -28.6498, 1.18 ) }
    dend_2 { pt3dadd( -65.6282, 59.8511, -29.3139, 0.96 ) }
    dend_2 { pt3dadd( -65.8239, 60.2302, -29.6537, 0.37 ) }
    dend_2 { pt3dadd( -66.048, 60.5864, -29.9451, 0.29 ) }
    dend_2 { pt3dadd( -66.2698, 60.8658, -30.1585, 0.29 ) }
    dend_2 { pt3dadd( -66.5697, 61.1879, -30.3594, 0.29 ) }
    dend_2 { pt3dadd( -66.901, 61.547, -30.5257, 0.59 ) }
    dend_2 { pt3dadd( -67.2827, 62.0059, -30.6986, 0.59 ) }
    dend_2 { pt3dadd( -67.6395, 62.5187, -30.9269, 0.59 ) }
    dend_2 { pt3dadd( -67.9571, 63.0609, -31.2099, 0.59 ) }
    dend_2 { pt3dadd( -68.217, 63.5781, -31.489, 0.59 ) }
    dend_2 { pt3dadd( -68.43, 64.0554, -31.7537, 0.29 ) }
    dend_2 { pt3dadd( -68.6017, 64.4596, -31.987, 0.37 ) }
    dend_2 { pt3dadd( -68.9505, 65.1541, -32.4328, 0.37 ) }
    dend_2 { pt3dadd( -69.3338, 65.7264, -32.878, 0.74 ) }
    dend_2 { pt3dadd( -69.558, 65.9827, -33.0926, 1.25 ) }
    dend_2 { pt3dadd( -69.9087, 66.3218, -33.3757, 1.69 ) }
    dend_2 { pt3dadd( -70.2432, 66.6027, -33.6228, 1.47 ) }
    dend_2 { pt3dadd( -70.9078, 67.0911, -34.0895, 0.96 ) }
    dend_2 { pt3dadd( -71.6222, 67.5629, -34.563, 0.59 ) }
    dend_2 { pt3dadd( -72.1704, 67.8965, -34.9415, 0.52 ) }
    dend_2 { pt3dadd( -72.6507, 68.1524, -35.2854, 0.66 ) }
    dend_2 { pt3dadd( -73.2847, 68.4371, -35.7221, 0.52 ) }
    dend_2 { pt3dadd( -73.8759, 68.6484, -36.1269, 0.81 ) }
    dend_2 { pt3dadd( -74.4928, 68.7979, -36.4997, 0.96 ) }
    dend_2 { pt3dadd( -75.081, 68.8947, -36.7956, 1.55 ) }
    dend_2 { pt3dadd( -75.831, 68.9897, -37.1347, 1.77 ) }
    dend_2 { pt3dadd( -76.4517, 69.0685, -37.3691, 2.21 ) }
    dend_2 { pt3dadd( -77.4063, 69.2068, -37.661, 2.36 ) }
    dend_2 { pt3dadd( -78.408, 69.3591, -37.9179, 0.59 ) }
    dend_2 { pt3dadd( -79.2472, 69.4635, -38.1133, 0.37 ) }
    dend_2 { pt3dadd( -79.7433, 69.5101, -38.2133, 0.37 ) }
    dend_2 { pt3dadd( -80.4158, 69.5496, -38.3374, 0.37 ) }
    dend_2 { pt3dadd( -80.992, 69.5688, -38.4434, 0.37 ) }
    dend_2 { pt3dadd( -81.5161, 69.5769, -38.5208, 0.37 ) }
    dend_2 { pt3dadd( -82.1474, 69.5826, -38.6369, 0.29 ) }
    dend_2 { pt3dadd( -82.5252, 69.5709, -38.7035, 0.29 ) }
    dend_2 { pt3dadd( -82.9507, 69.5676, -38.8, 0.44 ) }
    dend_2 { pt3dadd( -83.6817, 69.6448, -39.0129, 0.81 ) }
    dend_2 { pt3dadd( -84.12, 69.7532, -39.1871, 1.18 ) }
    dend_2 { pt3dadd( -84.5427, 69.8975, -39.4, 1.18 ) }
    dend_2 { pt3dadd( -85.0482, 70.08, -39.7408, 0.74 ) }
    dend_2 { pt3dadd( -85.8693, 70.3653, -40.384, 0.37 ) }
    dend_2 { pt3dadd( -86.3615, 70.5344, -40.8025, 0.81 ) }
    dend_2 { pt3dadd( -87.1753, 70.7939, -41.5547, 1.18 ) }
    dend_2 { pt3dadd( -87.8038, 70.9834, -42.1652, 1.18 ) }
    dend_2 { pt3dadd( -89.062, 71.3314, -43.4331, 0.52 ) }
    dend_2 { pt3dadd( -89.6774, 71.5076, -44.0173, 0.37 ) }
    dend_2 { pt3dadd( -90.6082, 71.7603, -44.7855, 1.33 ) }
    dend_2 { pt3dadd( -91.3455, 71.9445, -45.3215, 2.14 ) }
    dend_2 { pt3dadd( -91.7962, 72.0698, -45.6104, 2.58 ) }
    dend_2 { pt3dadd( -92.8148, 72.4121, -46.1844, 2.8 ) }
    dend_2 { pt3dadd( -94.1087, 72.962, -46.8295, 0.37 ) }
    dend_2 { pt3dadd( -94.8829, 73.3794, -47.2226, 0.37 ) }
    dend_2 { pt3dadd( -95.1862, 73.5916, -47.3814, 0.37 ) }
    dend_2 { pt3dadd( -95.6686, 74.0775, -47.6426, 0.59 ) }
    dend_2 { pt3dadd( -95.9921, 74.5446, -47.8618, 0.74 ) }
    dend_2 { pt3dadd( -96.2623, 75.0902, -48.1076, 0.74 ) }
    dend_2 { pt3dadd( -96.4958, 75.598, -48.4482, 0.74 ) }
    dend_2 { pt3dadd( -96.6707, 75.8878, -48.6957, 0.44 ) }
    dend_2 { pt3dadd( -97.0394, 76.2457, -49.0793, 0.29 ) }
    dend_2 { pt3dadd( -97.4174, 76.4924, -49.4271, 0.29 ) }
    dend_2 { pt3dadd( -97.8619, 76.7047, -49.8139, 0.81 ) }
    dend_2 { pt3dadd( -98.9572, 77.0911, -50.6645, 1.03 ) }
    dend_2 { pt3dadd( -99.427, 77.226, -50.9952, 0.96 ) }
    dend_2 { pt3dadd( -100.294, 77.4662, -51.5732, 0.22 ) }
    dend_2 { pt3dadd( -101.129, 77.7065, -52.1434, 0.59 ) }
    dend_2 { pt3dadd( -101.665, 77.8922, -52.5152, 0.59 ) }
    dend_2 { pt3dadd( -102.202, 78.1187, -52.8998, 0.44 ) }
    dend_2 { pt3dadd( -102.718, 78.3707, -53.2596, 0.37 ) }
    dend_2 { pt3dadd( -103.701, 78.8281, -53.9545, 1.03 ) }
    dend_2 { pt3dadd( -104.462, 79.1437, -54.4579, 1.69 ) }
    dend_2 { pt3dadd( -104.855, 79.3075, -54.6894, 1.92 ) }
    dend_2 { pt3dadd( -105.366, 79.5412, -54.979, 1.92 ) }
    dend_2 { pt3dadd( -105.682, 79.6946, -55.1649, 1.92 ) }
    dend_2 { pt3dadd( -106.904, 80.3095, -55.8677, 0.44 ) }
    dend_2 { pt3dadd( -107.282, 80.5223, -56.0628, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_2 { pt3dadd( -107.737, 80.8276, -56.3164, 0.52 ) }
    dend_2 { pt3dadd( -107.988, 81.0276, -56.4911, 0.88 ) }
    dend_2 { pt3dadd( -108.487, 81.4929, -56.9088, 1.03 ) }
    dend_2 { pt3dadd( -108.791, 81.7924, -57.1858, 1.18 ) }
    dend_2 { pt3dadd( -109.259, 82.2815, -57.6456, 0.96 ) }
    dend_2 { pt3dadd( -109.837, 82.8868, -58.208, 0.74 ) }
    dend_2 { pt3dadd( -110.19, 83.2696, -58.5346, 0.74 ) }
    dend_2 { pt3dadd( -110.511, 83.6327, -58.8168, 0.59 ) }
    dend_2 { pt3dadd( -111.073, 84.2803, -59.2456, 0.52 ) }
    dend_2 { pt3dadd( -111.437, 84.6996, -59.4906, 0.52 ) }
    dend_2 { pt3dadd( -112.002, 85.3494, -59.7972, 0.74 ) }
    dend_2 { pt3dadd( -112.584, 86.015, -60.0222, 1.18 ) }
    dend_2 { pt3dadd( -113.079, 86.5777, -60.1693, 1.4 ) }
    dend_2 { pt3dadd( -113.439, 86.9764, -60.2546, 1.47 ) }
    dend_2 { pt3dadd( -113.796, 87.3437, -60.3189, 1.69 ) }
    dend_2 { pt3dadd( -114.351, 87.8158, -60.3983, 1.4 ) }
    dend_2 { pt3dadd( -115.088, 88.31, -60.5001, 0.52 ) }
    dend_2 { pt3dadd( -115.81, 88.681, -60.5964, 0.52 ) }
    dend_2 { pt3dadd( -116.578, 88.9958, -60.6907, 0.74 ) }
    dend_2 { pt3dadd( -117.263, 89.2287, -60.802, 0.96 ) }
    dend_2 { pt3dadd( -118.193, 89.5005, -61.005, 0.96 ) }
    dend_2 { pt3dadd( -118.884, 89.6877, -61.2066, 0.74 ) }
    dend_2 { pt3dadd( -119.569, 89.9008, -61.4627, 0.44 ) }
    dend_2 { pt3dadd( -120.009, 90.0939, -61.6687, 0.44 ) }
    dend_2 { pt3dadd( -120.546, 90.4051, -61.9661, 0.74 ) }
    dend_2 { pt3dadd( -121.018, 90.7179, -62.2305, 0.88 ) }
    dend_2 { pt3dadd( -121.355, 90.9427, -62.4371, 0.88 ) }
    dend_2 { pt3dadd( -121.948, 91.3507, -62.8373, 0.29 ) }
    dend_2 { pt3dadd( -122.51, 91.7387, -63.2527, 0.29 ) }
    dend_2 { pt3dadd( -123.131, 92.1485, -63.7117, 0.37 ) }
    dend_2 { pt3dadd( -123.723, 92.5205, -64.1322, 0.44 ) }
    dend_2 { pt3dadd( -124.673, 93.1026, -64.8103, 0.59 ) }
    dend_2 { pt3dadd( -125.103, 93.3834, -65.1373, 1.18 ) }
    dend_2 { pt3dadd( -125.719, 93.8393, -65.6324, 1.03 ) }
    dend_2 { pt3dadd( -126.198, 94.2542, -66.0177, 1.69 ) }
    dend_2 { pt3dadd( -126.446, 94.4988, -66.2049, 1.69 ) }
    dend_2 { pt3dadd( -126.989, 95.0588, -66.5866, 1.18 ) }
    dend_2 { pt3dadd( -127.691, 95.7774, -67.0033, 0.37 ) }
    dend_2 { pt3dadd( -128.114, 96.1841, -67.25, 0.37 ) }
    dend_2 { pt3dadd( -128.776, 96.7898, -67.6318, 0.37 ) }
    dend_2 { pt3dadd( -129.383, 97.3074, -67.9824, 0.59 ) }
    dend_2 { pt3dadd( -129.913, 97.7231, -68.2699, 1.11 ) }
    dend_2 { pt3dadd( -130.365, 98.0427, -68.493, 1.62 ) }
    dend_2 { pt3dadd( -130.923, 98.3727, -68.7573, 1.69 ) }
    dend_2 { pt3dadd( -131.469, 98.6721, -69.046, 1.92 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 45/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -103.892, 14.6916, 157.163, 0.88 ) }
    dend_60 { pt3dadd( -108.424, 12.8674, 166.714, 0.88 ) }
    dend_60 { pt3dadd( -113.601, 12.6762, 176.103, 0.88 ) }
    dend_60 { pt3dadd( -117.559, 13.6402, 186.026, 0.88 ) }
    dend_60 { pt3dadd( -121.472, 14.6692, 195.961, 0.88 ) }
    dend_60 { pt3dadd( -123.866, 17.2343, 206.113, 0.88 ) }
    dend_60 { pt3dadd( -125.758, 20.0739, 216.3, 0.88 ) }
    dend_60 { pt3dadd( -129.541, 23.717, 225.69, 0.88 ) }
    dend_60 { pt3dadd( -133.152, 28.5364, 234.633, 0.88 ) }
    dend_60 { pt3dadd( -137.224, 34.26, 242.843, 0.88 ) }
    dend_60 { pt3dadd( -141.683, 40.3797, 250.568, 0.88 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 56/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -103.892, 14.6916, 157.163, 0.22 ) }
    dend_57 { pt3dadd( -108.675, 12.7496, 166.596, 0.88 ) }
    dend_57 { pt3dadd( -112.398, 11.1976, 176.563, 0.88 ) }
    dend_57 { pt3dadd( -117.877, 11.2231, 185.815, 0.88 ) }
    dend_57 { pt3dadd( -123.221, 11.8, 195.131, 0.88 ) }
    dend_57 { pt3dadd( -129.239, 11.4746, 204.035, 0.88 ) }
    dend_57 { pt3dadd( -136.034, 10.7608, 212.337, 0.88 ) }
    dend_57 { pt3dadd( -141.991, 9.00998, 221.119, 0.88 ) }
    dend_57 { pt3dadd( -148.421, 7.64194, 229.629, 0.88 ) }
    dend_57 { pt3dadd( -153.864, 4.41822, 238.338, 0.88 ) }
    dend_57 { pt3dadd( -157.717, 0.945032, 247.767, 0.88 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 67/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -163.147, 123.177, 66.5231, 0.88 ) }
    dend_53 { pt3dadd( -172.877, 129.26, 68.771, 0.88 ) }
    dend_53 { pt3dadd( -182.785, 135.029, 71.0347, 0.88 ) }
    dend_53 { pt3dadd( -192.988, 140.503, 72.5663, 0.88 ) }
    dend_53 { pt3dadd( -203.722, 144.525, 74.6753, 0.88 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 72/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -163.147, 123.177, 66.5231, 0.22 ) }
    dend_52 { pt3dadd( -170.364, 129.056, 68.1232, 0.88 ) }
    dend_52 { pt3dadd( -177.895, 134.504, 69.7333, 0.88 ) }
    dend_52 { pt3dadd( -186.453, 138.361, 70.1877, 0.88 ) }
    dend_52 { pt3dadd( -194.247, 143.624, 69.6919, 0.88 ) }
    dend_52 { pt3dadd( -202.557, 148.021, 69.9868, 0.88 ) }
    // Section: dend_42, id: dend_42, parent: dend_38 (entry count 78/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -56.4744, -125.22, 63.6468, 0.88 ) }
    dend_42 { pt3dadd( -60.6735, -132.384, 68.7689, 0.88 ) }
    dend_42 { pt3dadd( -63.9913, -139.535, 74.5227, 0.88 ) }
    dend_42 { pt3dadd( -67.3218, -146.224, 80.7775, 0.88 ) }
    dend_42 { pt3dadd( -69.3303, -154.003, 86.3639, 0.88 ) }
    dend_42 { pt3dadd( -69.85, -160.561, 93.558, 0.88 ) }
    dend_42 { pt3dadd( -71.9539, -166.951, 100.599, 0.88 ) }
    dend_42 { pt3dadd( -72.6378, -171.603, 109.076, 0.88 ) }
    dend_42 { pt3dadd( -72.0739, -176.358, 117.51, 0.88 ) }
    dend_42 { pt3dadd( -69.9683, -179.598, 126.37, 0.88 ) }
    dend_42 { pt3dadd( -67.3485, -184.233, 134.476, 0.88 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 89/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -56.4744, -125.22, 63.6468, 0.22 ) }
    dend_39 { pt3dadd( -62.0028, -133.725, 69.4448, 0.88 ) }
    dend_39 { pt3dadd( -67.6902, -141.361, 76.164, 0.88 ) }
    dend_39 { pt3dadd( -73.2897, -150.429, 81.0139, 0.88 ) }
    dend_39 { pt3dadd( -79.471, -159.247, 85.5988, 0.88 ) }
    dend_39 { pt3dadd( -86.0891, -168.135, 89.3927, 0.88 ) }
    dend_39 { pt3dadd( -94.5685, -175.875, 91.5918, 0.88 ) }
    dend_39 { pt3dadd( -102.682, -183.8, 94.4287, 0.88 ) }
    dend_39 { pt3dadd( -111.36, -190.657, 98.1056, 0.88 ) }
    dend_39 { pt3dadd( -121.202, -196.164, 100.923, 0.88 ) }
    // Section: dend_27, id: dend_27, parent: dend_19 (entry count 99/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -2.71479, -45.7322, 5.18868, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_27 { pt3dadd( -1.86649, -47.2112, 4.76343, 1.25 ) }
    dend_27 { pt3dadd( -1.28029, -48.2225, 4.60055, 1.03 ) }
    dend_27 { pt3dadd( -0.418971, -49.6073, 4.579, 0.88 ) }
    dend_27 { pt3dadd( 0.238975, -50.7318, 4.70941, 0.66 ) }
    dend_27 { pt3dadd( 0.654917, -51.5608, 4.88977, 0.66 ) }
    dend_27 { pt3dadd( 1.18466, -52.8308, 5.22513, 0.74 ) }
    dend_27 { pt3dadd( 1.51369, -54.0499, 5.6275, 0.66 ) }
    dend_27 { pt3dadd( 1.70538, -54.986, 6.00737, 0.81 ) }
    dend_27 { pt3dadd( 1.86339, -55.9285, 6.41785, 0.81 ) }
    dend_27 { pt3dadd( 2.08893, -57.1445, 6.91551, 0.74 ) }
    dend_27 { pt3dadd( 2.36783, -58.3671, 7.33828, 0.96 ) }
    dend_27 { pt3dadd( 2.74548, -59.7963, 7.73857, 1.03 ) }
    dend_27 { pt3dadd( 3.13728, -61.1425, 8.09467, 1.11 ) }
    dend_27 { pt3dadd( 3.54056, -62.467, 8.43183, 1.25 ) }
    dend_27 { pt3dadd( 4.13457, -64.1624, 8.85763, 0.96 ) }
    dend_27 { pt3dadd( 4.80011, -65.8608, 9.31072, 0.96 ) }
    dend_27 { pt3dadd( 5.45748, -67.3839, 9.74798, 1.11 ) }
    dend_27 { pt3dadd( 6.05434, -68.6463, 10.1306, 1.47 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 18/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -2.71479, -45.7322, 5.18868, 2.06 ) }
    dend_20 { pt3dadd( -3.15192, -46.5551, 4.77847, 2.06 ) }
    dend_20 { pt3dadd( -3.531, -47.5326, 4.25816, 2.06 ) }
    dend_20 { pt3dadd( -3.77914, -48.4291, 3.76946, 2.06 ) }
    dend_20 { pt3dadd( -3.94756, -49.2608, 3.28103, 2.06 ) }
    dend_20 { pt3dadd( -4.10446, -50.1856, 2.68257, 1.99 ) }
    dend_20 { pt3dadd( -4.28939, -51.4027, 1.86975, 1.77 ) }
    dend_20 { pt3dadd( -4.36252, -52.487, 1.09645, 1.47 ) }
    dend_20 { pt3dadd( -4.36955, -53.5876, 0.272765, 1.11 ) }
    dend_20 { pt3dadd( -4.34128, -54.6208, -0.559329, 1.11 ) }
    dend_20 { pt3dadd( -4.32706, -55.3521, -1.18005, 1.25 ) }
    dend_20 { pt3dadd( -4.34074, -55.9119, -1.67409, 1.25 ) }
    dend_20 { pt3dadd( -4.50044, -57.0708, -2.7442, 1.18 ) }
    dend_20 { pt3dadd( -4.68842, -57.6861, -3.35401, 1.25 ) }
    dend_20 { pt3dadd( -5.12554, -58.5578, -4.27532, 1.18 ) }
    dend_20 { pt3dadd( -5.55291, -59.1363, -4.88969, 1.18 ) }
    dend_20 { pt3dadd( -5.93371, -59.5093, -5.28668, 1.18 ) }
    dend_20 { pt3dadd( -6.65714, -60.0223, -5.86964, 1.18 ) }
    dend_20 { pt3dadd( -7.46357, -60.4581, -6.39415, 1.25 ) }
    dend_20 { pt3dadd( -7.92315, -60.6597, -6.65235, 1.25 ) }
    dend_20 { pt3dadd( -8.62101, -60.9144, -6.97296, 1.25 ) }
    dend_20 { pt3dadd( -9.67763, -61.2889, -7.42742, 1.77 ) }
    dend_20 { pt3dadd( -10.4148, -61.5451, -7.73189, 2.14 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 41/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 71.9186, 163.765, -41.9766, 0.74 ) }
    dend_14 { pt3dadd( 72.1821, 163.868, -42.9518, 0.74 ) }
    dend_14 { pt3dadd( 72.8103, 164.231, -44.8806, 1.03 ) }
    dend_14 { pt3dadd( 73.1461, 164.518, -45.8593, 0.52 ) }
    dend_14 { pt3dadd( 73.4109, 164.815, -46.6004, 0.52 ) }
    dend_14 { pt3dadd( 73.6965, 165.213, -47.3552, 0.74 ) }
    dend_14 { pt3dadd( 73.9995, 165.683, -48.0834, 0.52 ) }
    dend_14 { pt3dadd( 74.3847, 166.322, -48.7762, 0.59 ) }
    dend_14 { pt3dadd( 74.9476, 167.264, -49.5402, 0.44 ) }
    dend_14 { pt3dadd( 75.3604, 167.941, -50.0255, 0.52 ) }
    dend_14 { pt3dadd( 75.9194, 168.844, -50.6236, 0.44 ) }
    dend_14 { pt3dadd( 76.3632, 169.517, -51.0346, 0.29 ) }
    dend_14 { pt3dadd( 76.9254, 170.279, -51.5072, 0.29 ) }
    dend_14 { pt3dadd( 77.099, 170.475, -51.6542, 0.59 ) }
    dend_14 { pt3dadd( 77.5686, 170.925, -52.049, 0.59 ) }
    dend_14 { pt3dadd( 78.1492, 171.389, -52.5572, 0.44 ) }
    dend_14 { pt3dadd( 78.6015, 171.704, -52.978, 0.59 ) }
    dend_14 { pt3dadd( 79.4124, 172.285, -53.7633, 0.37 ) }
    dend_14 { pt3dadd( 80.0126, 172.771, -54.3541, 0.37 ) }
    dend_14 { pt3dadd( 80.5206, 173.206, -54.828, 0.37 ) }
    dend_14 { pt3dadd( 81.1038, 173.714, -55.3269, 0.37 ) }
    dend_14 { pt3dadd( 81.9958, 174.441, -56.0167, 0.96 ) }
    dend_14 { pt3dadd( 82.5979, 174.916, -56.4468, 1.03 ) }
    dend_14 { pt3dadd( 83.4064, 175.547, -56.9814, 0.81 ) }
    dend_14 { pt3dadd( 83.972, 176.009, -57.3456, 0.66 ) }
    dend_14 { pt3dadd( 84.7513, 176.696, -57.8607, 0.88 ) }
    dend_14 { pt3dadd( 85.1517, 177.073, -58.1256, 1.25 ) }
    dend_14 { pt3dadd( 85.7738, 177.606, -58.5082, 0.88 ) }
    dend_14 { pt3dadd( 86.3831, 178.069, -58.9434, 0.29 ) }
    dend_14 { pt3dadd( 86.7406, 178.322, -59.2337, 0.44 ) }
    dend_14 { pt3dadd( 87.2316, 178.677, -59.6688, 0.37 ) }
    dend_14 { pt3dadd( 87.9869, 179.182, -60.3615, 0.52 ) }
    dend_14 { pt3dadd( 88.7905, 179.658, -61.1057, 0.59 ) }
    dend_14 { pt3dadd( 90.2139, 180.345, -62.3474, 0.66 ) }
    dend_14 { pt3dadd( 91.0455, 180.681, -63.0282, 0.52 ) }
    dend_14 { pt3dadd( 91.3934, 180.806, -63.32, 0.59 ) }
    dend_14 { pt3dadd( 92.0663, 181.038, -63.8826, 0.44 ) }
    dend_14 { pt3dadd( 92.7852, 181.317, -64.4733, 0.37 ) }
    dend_14 { pt3dadd( 93.7552, 181.747, -65.2004, 0.37 ) }
    dend_14 { pt3dadd( 94.3452, 182.016, -65.558, 0.96 ) }
    dend_14 { pt3dadd( 95.1205, 182.413, -65.981, 0.88 ) }
    dend_14 { pt3dadd( 95.9361, 182.886, -66.4023, 0.44 ) }
    dend_14 { pt3dadd( 96.467, 183.237, -66.6818, 0.29 ) }
    dend_14 { pt3dadd( 97.0892, 183.698, -67.0559, 0.44 ) }
    dend_14 { pt3dadd( 97.8608, 184.352, -67.5764, 0.44 ) }
    dend_14 { pt3dadd( 98.6619, 185.124, -68.2022, 0.52 ) }
    dend_14 { pt3dadd( 99.1688, 185.685, -68.6633, 0.66 ) }
    dend_14 { pt3dadd( 99.9348, 186.68, -69.588, 0.66 ) }
    dend_14 { pt3dadd( 100.535, 187.6, -70.5115, 0.44 ) }
    dend_14 { pt3dadd( 100.823, 188.123, -71.0686, 0.37 ) }
    dend_14 { pt3dadd( 101.108, 188.756, -71.777, 0.37 ) }
    dend_14 { pt3dadd( 101.276, 189.121, -72.2276, 0.52 ) }
    dend_14 { pt3dadd( 101.63, 189.736, -73.0685, 0.59 ) }
    dend_14 { pt3dadd( 101.868, 189.991, -73.4708, 0.66 ) }
    dend_14 { pt3dadd( 102.379, 190.265, -74.0588, 0.52 ) }
    dend_14 { pt3dadd( 103.078, 190.444, -74.7263, 0.88 ) }
    dend_14 { pt3dadd( 103.609, 190.519, -75.1667, 0.88 ) }
    dend_14 { pt3dadd( 104.219, 190.616, -75.6931, 0.74 ) }
    dend_14 { pt3dadd( 104.698, 190.697, -76.2011, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_14 { pt3dadd( 105.032, 190.743, -76.6199, 0.29 ) }
    dend_14 { pt3dadd( 105.621, 190.774, -77.4363, 0.29 ) }
    dend_14 { pt3dadd( 106.015, 190.768, -78.0168, 0.29 ) }
    dend_14 { pt3dadd( 106.748, 190.803, -79.2149, 0.88 ) }
    dend_14 { pt3dadd( 107.468, 190.938, -80.4702, 0.96 ) }
    dend_14 { pt3dadd( 107.807, 191.05, -81.0722, 0.88 ) }
    dend_14 { pt3dadd( 108.283, 191.231, -81.9348, 0.29 ) }
    dend_14 { pt3dadd( 108.514, 191.298, -82.307, 0.29 ) }
    dend_14 { pt3dadd( 108.926, 191.328, -82.885, 0.37 ) }
    dend_14 { pt3dadd( 109.372, 191.282, -83.4407, 0.37 ) }
    dend_14 { pt3dadd( 109.707, 191.245, -83.9163, 0.37 ) }
    dend_14 { pt3dadd( 110.507, 191.131, -85.1873, 0.44 ) }
    dend_14 { pt3dadd( 110.975, 191.034, -85.9801, 0.59 ) }
    dend_14 { pt3dadd( 111.279, 190.928, -86.499, 0.81 ) }
    dend_14 { pt3dadd( 111.727, 190.752, -87.2775, 0.59 ) }
    dend_14 { pt3dadd( 112.443, 190.516, -88.5365, 1.11 ) }
    dend_14 { pt3dadd( 112.795, 190.439, -89.17, 1.47 ) }
    dend_14 { pt3dadd( 113.072, 190.4, -89.6338, 1.47 ) }
    dend_14 { pt3dadd( 113.621, 190.317, -90.5124, 1.03 ) }
    dend_14 { pt3dadd( 114.358, 190.208, -91.5692, 0.59 ) }
    dend_14 { pt3dadd( 115.048, 190.081, -92.4509, 0.96 ) }
    dend_14 { pt3dadd( 115.802, 189.9, -93.3318, 0.96 ) }
    dend_14 { pt3dadd( 116.561, 189.705, -94.2043, 0.37 ) }
    dend_14 { pt3dadd( 117.267, 189.53, -94.9526, 0.37 ) }
    dend_14 { pt3dadd( 117.807, 189.389, -95.4798, 0.37 ) }
    dend_14 { pt3dadd( 118.665, 189.123, -96.2766, 0.37 ) }
    dend_14 { pt3dadd( 119.519, 188.859, -97.0428, 0.81 ) }
    dend_14 { pt3dadd( 120.263, 188.667, -97.6877, 1.03 ) }
    dend_14 { pt3dadd( 121.286, 188.499, -98.5925, 1.25 ) }
    dend_14 { pt3dadd( 121.582, 188.466, -98.8496, 1.47 ) }
    dend_14 { pt3dadd( 122.854, 188.33, -99.9099, 0.29 ) }
    dend_14 { pt3dadd( 123.272, 188.294, -100.22, 0.29 ) }
    dend_14 { pt3dadd( 123.769, 188.259, -100.546, 0.44 ) }
    dend_14 { pt3dadd( 124.37, 188.236, -100.892, 0.22 ) }
    dend_14 { pt3dadd( 125.051, 188.236, -101.248, 0.59 ) }
    dend_14 { pt3dadd( 125.661, 188.271, -101.534, 0.59 ) }
    dend_14 { pt3dadd( 126.654, 188.381, -101.957, 0.22 ) }
    dend_14 { pt3dadd( 127.701, 188.516, -102.4, 0.22 ) }
    dend_14 { pt3dadd( 129.006, 188.679, -102.938, 0.22 ) }
    dend_14 { pt3dadd( 129.763, 188.778, -103.24, 0.44 ) }
    dend_14 { pt3dadd( 131.089, 188.997, -103.763, 0.22 ) }
    dend_14 { pt3dadd( 131.889, 189.14, -104.08, 0.22 ) }
    dend_14 { pt3dadd( 132.508, 189.248, -104.332, 0.37 ) }
    dend_14 { pt3dadd( 134.235, 189.522, -105.045, 0.22 ) }
    dend_14 { pt3dadd( 135.404, 189.686, -105.541, 0.22 ) }
    dend_14 { pt3dadd( 137.498, 189.973, -106.437, 0.22 ) }
    dend_14 { pt3dadd( 138.681, 190.11, -106.966, 0.22 ) }
    dend_14 { pt3dadd( 139.269, 190.166, -107.232, 0.96 ) }
    dend_14 { pt3dadd( 140.091, 190.239, -107.607, 0.96 ) }
    dend_14 { pt3dadd( 140.833, 190.302, -107.948, 0.88 ) }
    dend_14 { pt3dadd( 141.532, 190.342, -108.263, 0.88 ) }
    dend_14 { pt3dadd( 143.288, 190.438, -109.017, 0.22 ) }
    dend_14 { pt3dadd( 145.505, 190.538, -109.923, 0.22 ) }
    dend_14 { pt3dadd( 146.626, 190.58, -110.365, 0.44 ) }
    dend_14 { pt3dadd( 147.251, 190.581, -110.611, 0.52 ) }
    dend_14 { pt3dadd( 148.68, 190.533, -111.142, 0.22 ) }
    dend_14 { pt3dadd( 150.755, 190.392, -111.871, 0.22 ) }
    dend_14 { pt3dadd( 152.38, 190.24, -112.39, 0.22 ) }
    dend_14 { pt3dadd( 153.939, 190.038, -112.866, 0.22 ) }
    dend_14 { pt3dadd( 156.031, 189.692, -113.486, 0.22 ) }
    dend_14 { pt3dadd( 157.261, 189.442, -113.842, 0.22 ) }
    dend_14 { pt3dadd( 158.208, 189.192, -114.112, 1.33 ) }
    dend_14 { pt3dadd( 158.851, 188.959, -114.295, 1.47 ) }
    dend_14 { pt3dadd( 160.166, 188.447, -114.657, 0.66 ) }
    dend_14 { pt3dadd( 161.124, 188.026, -114.916, 0.29 ) }
    dend_14 { pt3dadd( 162.416, 187.418, -115.28, 0.29 ) }
    dend_14 { pt3dadd( 163.382, 186.921, -115.608, 0.29 ) }
    dend_14 { pt3dadd( 164.328, 186.364, -115.949, 0.29 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 68/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 71.9186, 163.765, -41.9766, 0.37 ) }
    dend_13 { pt3dadd( 73.0058, 164.633, -42.0178, 0.37 ) }
    dend_13 { pt3dadd( 74.0881, 165.541, -42.0114, 0.37 ) }
    dend_13 { pt3dadd( 74.5774, 165.96, -41.9894, 0.37 ) }
    dend_13 { pt3dadd( 75.403, 166.675, -41.9924, 0.37 ) }
    dend_13 { pt3dadd( 75.9867, 167.212, -42.0059, 0.37 ) }
    dend_13 { pt3dadd( 77.2399, 168.404, -42.0223, 0.66 ) }
    dend_13 { pt3dadd( 77.8789, 169.027, -41.9439, 1.25 ) }
    dend_13 { pt3dadd( 78.3254, 169.488, -41.8431, 1.25 ) }
    dend_13 { pt3dadd( 79.242, 170.554, -41.5479, 0.59 ) }
    dend_13 { pt3dadd( 80.0143, 171.516, -41.2148, 0.37 ) }
    dend_13 { pt3dadd( 80.9296, 172.63, -40.7721, 0.37 ) }
    dend_13 { pt3dadd( 82.2346, 174.138, -40.1391, 0.52 ) }
    dend_13 { pt3dadd( 82.7355, 174.715, -39.8742, 0.37 ) }
    dend_13 { pt3dadd( 83.4241, 175.523, -39.5129, 0.52 ) }
    dend_13 { pt3dadd( 83.9594, 176.155, -39.1814, 0.66 ) }
    dend_13 { pt3dadd( 84.3979, 176.676, -38.9154, 0.66 ) }
    dend_13 { pt3dadd( 84.9377, 177.338, -38.6128, 0.44 ) }
    dend_13 { pt3dadd( 85.8093, 178.491, -38.1935, 0.66 ) }
    dend_13 { pt3dadd( 86.2582, 179.116, -37.9568, 0.81 ) }
    dend_13 { pt3dadd( 87.2146, 180.513, -37.4213, 1.03 ) }
    dend_13 { pt3dadd( 87.892, 181.518, -37.0268, 1.18 ) }
    dend_13 { pt3dadd( 88.2615, 182.04, -36.758, 1.18 ) }
    dend_13 { pt3dadd( 89.0979, 183.125, -36.0876, 0.44 ) }
    dend_13 { pt3dadd( 89.8181, 184.02, -35.4644, 0.37 ) }
    dend_13 { pt3dadd( 90.22, 184.538, -35.0865, 0.37 ) }
    dend_13 { pt3dadd( 90.8155, 185.361, -34.5179, 0.66 ) }
    dend_13 { pt3dadd( 92.0853, 187.083, -33.3009, 0.96 ) }
    dend_13 { pt3dadd( 92.3106, 187.388, -33.0999, 0.66 ) }
    dend_13 { pt3dadd( 92.8027, 188.013, -32.7022, 0.29 ) }
    dend_13 { pt3dadd( 93.3368, 188.671, -32.3537, 0.29 ) }
    dend_13 { pt3dadd( 93.7357, 189.139, -32.1801, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_13 { pt3dadd( 94.6578, 190.123, -31.9712, 0.29 ) }
    dend_13 { pt3dadd( 95.5178, 190.96, -31.9058, 0.44 ) }
    dend_13 { pt3dadd( 96.4445, 191.806, -31.8609, 0.59 ) }
    dend_13 { pt3dadd( 97.4956, 192.726, -31.834, 0.59 ) }
    dend_13 { pt3dadd( 98.6691, 193.758, -31.8186, 0.66 ) }
    dend_13 { pt3dadd( 99.339, 194.376, -31.7938, 0.44 ) }
    dend_13 { pt3dadd( 100.005, 195.054, -31.7478, 0.37 ) }
    dend_13 { pt3dadd( 100.577, 195.681, -31.6721, 0.52 ) }
    dend_13 { pt3dadd( 101.134, 196.312, -31.5648, 0.66 ) }
    dend_13 { pt3dadd( 101.607, 196.858, -31.44, 0.66 ) }
    dend_13 { pt3dadd( 102.623, 198.049, -31.1169, 0.59 ) }
    dend_13 { pt3dadd( 103.319, 198.89, -30.8859, 0.74 ) }
    dend_13 { pt3dadd( 104.176, 199.954, -30.5588, 0.66 ) }
    dend_13 { pt3dadd( 105.222, 201.331, -30.1201, 0.52 ) }
    dend_13 { pt3dadd( 105.982, 202.389, -29.7706, 0.59 ) }
    dend_13 { pt3dadd( 106.493, 203.115, -29.5171, 0.59 ) }
    dend_13 { pt3dadd( 107.024, 203.855, -29.2576, 0.59 ) }
    dend_13 { pt3dadd( 107.896, 205.007, -28.8152, 0.44 ) }
    dend_13 { pt3dadd( 108.584, 205.906, -28.45, 0.29 ) }
    dend_13 { pt3dadd( 109.191, 206.731, -28.0591, 0.44 ) }
    dend_13 { pt3dadd( 109.908, 207.647, -27.5515, 0.59 ) }
    dend_13 { pt3dadd( 110.723, 208.537, -27.0142, 0.74 ) }
    dend_13 { pt3dadd( 111.512, 209.289, -26.5655, 0.59 ) }
    dend_13 { pt3dadd( 112.398, 210.084, -26.1523, 0.96 ) }
    dend_13 { pt3dadd( 113.022, 210.654, -25.856, 1.11 ) }
    dend_13 { pt3dadd( 114.113, 211.787, -25.3222, 0.59 ) }
    dend_13 { pt3dadd( 115.005, 212.889, -24.8809, 0.52 ) }
    dend_13 { pt3dadd( 115.719, 213.823, -24.5616, 0.52 ) }
    dend_13 { pt3dadd( 116.43, 214.741, -24.3019, 0.66 ) }
    dend_13 { pt3dadd( 117.57, 216.223, -23.9701, 0.74 ) }
    dend_13 { pt3dadd( 118.261, 217.192, -23.791, 0.74 ) }
    dend_13 { pt3dadd( 119.037, 218.349, -23.5947, 0.29 ) }
    dend_13 { pt3dadd( 119.855, 219.577, -23.3952, 0.29 ) }
    dend_13 { pt3dadd( 120.171, 219.992, -23.3349, 0.29 ) }
    dend_13 { pt3dadd( 121.05, 221.033, -23.2348, 0.29 ) }
    dend_13 { pt3dadd( 121.93, 221.935, -23.2211, 0.52 ) }
    dend_13 { pt3dadd( 122.524, 222.457, -23.2128, 0.37 ) }
    dend_13 { pt3dadd( 123.307, 223.06, -23.1979, 0.37 ) }
    dend_13 { pt3dadd( 124.116, 223.625, -23.1893, 0.29 ) }
    dend_13 { pt3dadd( 125.415, 224.431, -23.1641, 0.29 ) }
    dend_13 { pt3dadd( 126.388, 224.964, -23.1542, 0.37 ) }
    dend_13 { pt3dadd( 127.211, 225.391, -23.1501, 0.52 ) }
    dend_13 { pt3dadd( 127.85, 225.72, -23.1298, 0.52 ) }
    dend_13 { pt3dadd( 128.663, 226.134, -23.0885, 0.44 ) }
    dend_13 { pt3dadd( 129.928, 226.778, -23.0258, 0.44 ) }
    dend_13 { pt3dadd( 130.745, 227.208, -22.9992, 0.59 ) }
    dend_13 { pt3dadd( 131.593, 227.707, -22.9906, 0.74 ) }
    dend_13 { pt3dadd( 132.431, 228.225, -22.9113, 0.74 ) }
    dend_13 { pt3dadd( 133.407, 228.858, -22.7668, 0.52 ) }
    dend_13 { pt3dadd( 134.238, 229.424, -22.6314, 0.37 ) }
    dend_13 { pt3dadd( 135.393, 230.214, -22.4555, 0.29 ) }
    dend_13 { pt3dadd( 136.287, 230.821, -22.3104, 0.29 ) }
    dend_13 { pt3dadd( 138.387, 232.223, -21.9857, 0.66 ) }
    dend_13 { pt3dadd( 139.394, 232.888, -21.8213, 0.44 ) }
    dend_13 { pt3dadd( 140.42, 233.542, -21.631, 0.52 ) }
    dend_13 { pt3dadd( 141.04, 233.925, -21.5101, 0.52 ) }
    dend_13 { pt3dadd( 141.734, 234.358, -21.3648, 0.37 ) }
    dend_13 { pt3dadd( 142.323, 234.77, -21.2415, 0.37 ) }
    dend_13 { pt3dadd( 142.935, 235.24, -21.1589, 0.44 ) }
    dend_13 { pt3dadd( 143.819, 235.978, -21.0034, 0.74 ) }
    dend_13 { pt3dadd( 144.375, 236.484, -20.8955, 0.88 ) }
    dend_13 { pt3dadd( 145.22, 237.339, -20.7118, 0.74 ) }
    dend_13 { pt3dadd( 145.847, 238.004, -20.5675, 0.52 ) }
    dend_13 { pt3dadd( 146.641, 238.852, -20.3834, 0.37 ) }
    dend_13 { pt3dadd( 147.365, 239.595, -20.2307, 0.22 ) }
    dend_13 { pt3dadd( 147.869, 240.077, -20.1421, 0.22 ) }
    dend_13 { pt3dadd( 148.682, 240.791, -20.0176, 0.59 ) }
    dend_13 { pt3dadd( 149.339, 241.299, -19.9015, 0.74 ) }
    dend_13 { pt3dadd( 150.109, 241.786, -19.7306, 0.59 ) }
    dend_13 { pt3dadd( 150.472, 241.976, -19.6319, 0.59 ) }
    dend_13 { pt3dadd( 152.104, 242.741, -19.1563, 0.37 ) }
    dend_13 { pt3dadd( 152.746, 243.039, -18.9717, 0.37 ) }
    dend_13 { pt3dadd( 153.792, 243.504, -18.7214, 0.52 ) }
    dend_13 { pt3dadd( 154.784, 243.923, -18.5594, 0.52 ) }
    dend_13 { pt3dadd( 155.554, 244.21, -18.5004, 0.52 ) }
    dend_13 { pt3dadd( 156.694, 244.568, -18.4129, 0.81 ) }
    dend_13 { pt3dadd( 157.361, 244.75, -18.3599, 0.88 ) }
    dend_13 { pt3dadd( 158.23, 244.964, -18.3045, 0.88 ) }
    dend_13 { pt3dadd( 159.635, 245.267, -18.2514, 0.44 ) }
    dend_13 { pt3dadd( 160.949, 245.509, -18.1992, 0.37 ) }
    dend_13 { pt3dadd( 163.147, 245.858, -18.1027, 0.59 ) }
    dend_13 { pt3dadd( 163.987, 245.962, -18.0604, 0.59 ) }
    dend_13 { pt3dadd( 165.231, 246.101, -17.9367, 0.37 ) }
    dend_13 { pt3dadd( 166.138, 246.207, -17.8099, 0.29 ) }
    dend_13 { pt3dadd( 167.123, 246.318, -17.6537, 0.29 ) }
    dend_13 { pt3dadd( 168.318, 246.409, -17.5372, 0.29 ) }
    dend_13 { pt3dadd( 169.54, 246.458, -17.514, 0.29 ) }
    dend_13 { pt3dadd( 171.529, 246.484, -17.474, 0.59 ) }
    dend_13 { pt3dadd( 172.435, 246.496, -17.4461, 0.59 ) }
    dend_13 { pt3dadd( 173.284, 246.506, -17.4195, 0.59 ) }
    dend_13 { pt3dadd( 174.994, 246.487, -17.4013, 0.29 ) }
    dend_13 { pt3dadd( 175.892, 246.465, -17.4217, 0.29 ) }
    dend_13 { pt3dadd( 177.339, 246.441, -17.5094, 0.66 ) }
    dend_13 { pt3dadd( 178.339, 246.425, -17.6139, 0.74 ) }
    dend_13 { pt3dadd( 179.23, 246.41, -17.7127, 0.74 ) }
    dend_13 { pt3dadd( 180.993, 246.427, -17.9656, 0.22 ) }
    dend_13 { pt3dadd( 182.57, 246.508, -18.2281, 0.22 ) }
    dend_13 { pt3dadd( 183.469, 246.581, -18.4249, 0.29 ) }
    dend_13 { pt3dadd( 184.071, 246.658, -18.5924, 0.29 ) }
    dend_13 { pt3dadd( 185.181, 246.875, -18.9309, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_13 { pt3dadd( 186.558, 247.305, -19.3747, 0.37 ) }
    dend_13 { pt3dadd( 187.274, 247.627, -19.6153, 0.52 ) }
    dend_13 { pt3dadd( 187.819, 247.916, -19.7967, 0.52 ) }
    dend_13 { pt3dadd( 188.621, 248.365, -20.0487, 0.59 ) }
    dend_13 { pt3dadd( 189.551, 248.858, -20.3154, 0.59 ) }
    dend_13 { pt3dadd( 190.529, 249.277, -20.5305, 0.52 ) }
    dend_13 { pt3dadd( 191.297, 249.522, -20.6514, 0.59 ) }
    dend_13 { pt3dadd( 192.258, 249.751, -20.7893, 0.44 ) }
    dend_13 { pt3dadd( 193.062, 249.899, -20.9019, 0.29 ) }
    dend_13 { pt3dadd( 193.953, 250.039, -20.9757, 0.29 ) }
    dend_13 { pt3dadd( 195.591, 250.359, -21.036, 0.29 ) }
    dend_13 { pt3dadd( 196.179, 250.49, -21.0396, 0.29 ) }
    dend_13 { pt3dadd( 197.355, 250.8, -21.0269, 0.29 ) }
    dend_13 { pt3dadd( 197.971, 250.992, -21.0145, 0.29 ) }
    dend_13 { pt3dadd( 199.839, 251.653, -21.0136, 0.29 ) }
    dend_13 { pt3dadd( 200.797, 252.039, -21.0916, 0.29 ) }
    dend_13 { pt3dadd( 202.013, 252.564, -21.2969, 0.22 ) }
    dend_13 { pt3dadd( 202.603, 252.81, -21.433, 0.44 ) }
    dend_13 { pt3dadd( 203.188, 253.034, -21.6013, 0.44 ) }
    dend_13 { pt3dadd( 204.157, 253.352, -21.9313, 0.29 ) }
    dend_13 { pt3dadd( 205.766, 253.726, -22.5864, 0.22 ) }
    dend_13 { pt3dadd( 206.463, 253.838, -22.8669, 0.22 ) }
    dend_13 { pt3dadd( 207.141, 253.933, -23.1323, 0.44 ) }
    dend_13 { pt3dadd( 207.789, 253.991, -23.3989, 0.44 ) }
    dend_13 { pt3dadd( 208.586, 254.024, -23.7581, 0.37 ) }
    dend_13 { pt3dadd( 209.61, 254.055, -24.2426, 0.29 ) }
    dend_13 { pt3dadd( 210.745, 254.099, -24.8087, 0.29 ) }
    dend_13 { pt3dadd( 211.463, 254.159, -25.2073, 0.29 ) }
    dend_13 { pt3dadd( 212.623, 254.324, -25.915, 0.29 ) }
    dend_13 { pt3dadd( 213.327, 254.481, -26.3742, 0.29 ) }
    dend_13 { pt3dadd( 214.186, 254.745, -26.9965, 0.44 ) }
    dend_13 { pt3dadd( 214.958, 255.005, -27.6482, 0.37 ) }
    dend_13 { pt3dadd( 215.669, 255.181, -28.3376, 0.52 ) }
    dend_13 { pt3dadd( 216.219, 255.286, -28.891, 0.52 ) }
    dend_13 { pt3dadd( 216.648, 255.352, -29.2999, 0.66 ) }
    dend_13 { pt3dadd( 217.856, 255.499, -30.413, 0.96 ) }
    dend_13 { pt3dadd( 218.949, 255.63, -31.3798, 0.81 ) }
    dend_13 { pt3dadd( 220.44, 255.878, -32.6518, 0.29 ) }
    dend_13 { pt3dadd( 221.357, 256.053, -33.5327, 0.29 ) }
    dend_13 { pt3dadd( 222.159, 256.262, -34.3395, 0.29 ) }
    dend_13 { pt3dadd( 222.712, 256.456, -34.8383, 0.29 ) }
    dend_13 { pt3dadd( 223.891, 256.873, -35.6476, 0.29 ) }
    dend_13 { pt3dadd( 224.634, 257.104, -36.0651, 0.66 ) }
    dend_13 { pt3dadd( 227.436, 257.74, -37.4724, 0.29 ) }
    dend_13 { pt3dadd( 228.054, 257.801, -37.775, 0.22 ) }
    dend_13 { pt3dadd( 230.426, 257.883, -38.9492, 0.22 ) }
    dend_13 { pt3dadd( 232.755, 257.795, -40.0825, 0.22 ) }
    dend_13 { pt3dadd( 233.783, 257.682, -40.5631, 0.37 ) }
    dend_13 { pt3dadd( 234.826, 257.524, -40.953, 0.44 ) }
    dend_13 { pt3dadd( 235.291, 257.454, -41.0407, 0.22 ) }
    dend_13 { pt3dadd( 245.54, 264.0, -42.1405, 0.22 ) }
    dend_13 { pt3dadd( 256.062, 269.371, -45.1169, 0.22 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 52/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -78.414, 134.964, 76.642, 0.88 ) }
    dend_9 { pt3dadd( -82.8908, 144.677, 85.2969, 0.88 ) }
    dend_9 { pt3dadd( -89.6476, 154.903, 91.6551, 0.88 ) }
    dend_9 { pt3dadd( -98.6298, 164.819, 95.2121, 0.88 ) }
    dend_9 { pt3dadd( -107.391, 172.438, 102.57, 0.88 ) }
    dend_9 { pt3dadd( -117.063, 177.645, 110.755, 0.88 ) }
    dend_9 { pt3dadd( -126.15, 183.045, 119.465, 0.88 ) }
    dend_9 { pt3dadd( -136.784, 188.51, 126.185, 0.88 ) }
    dend_9 { pt3dadd( -145.499, 194.468, 134.923, 0.88 ) }
    dend_9 { pt3dadd( -153.007, 202.427, 143.232, 0.88 ) }
    dend_9 { pt3dadd( -158.237, 212.17, 151.433, 0.88 ) }
    dend_9 { pt3dadd( -160.61, 223.338, 159.165, 0.88 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 64/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -78.414, 134.964, 76.642, 0.22 ) }
    dend_6 { pt3dadd( -81.0275, 141.224, 82.0579, 0.88 ) }
    dend_6 { pt3dadd( -82.6975, 147.773, 87.5058, 0.88 ) }
    dend_6 { pt3dadd( -82.5785, 154.479, 93.004, 0.88 ) }
    dend_6 { pt3dadd( -81.6371, 161.786, 97.6113, 0.88 ) }
    dend_6 { pt3dadd( -78.6842, 168.274, 102.523, 0.88 ) }
    dend_6 { pt3dadd( -75.1777, 174.51, 107.384, 0.88 ) }
    dend_6 { pt3dadd( -70.621, 180.282, 111.917, 0.88 ) }
    dend_6 { pt3dadd( -66.5974, 185.455, 117.531, 0.88 ) }
    dend_6 { pt3dadd( -62.3878, 189.525, 123.855, 0.88 ) }
    dend_6 { pt3dadd( -59.1397, 193.44, 130.812, 0.88 ) }
    dend_6 { pt3dadd( -54.8275, 198.055, 136.681, 0.88 ) }
    dend_6 { pt3dadd( -49.6488, 202.329, 142.087, 0.88 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 77/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -131.469, 98.6721, -69.046, 0.29 ) }
    dend_4 { pt3dadd( -131.736, 100.13, -70.0729, 0.29 ) }
    dend_4 { pt3dadd( -132.083, 101.06, -70.7451, 0.29 ) }
    dend_4 { pt3dadd( -132.449, 101.765, -71.2507, 0.37 ) }
    dend_4 { pt3dadd( -132.65, 102.134, -71.501, 0.37 ) }
    dend_4 { pt3dadd( -132.908, 102.655, -71.8737, 0.81 ) }
    dend_4 { pt3dadd( -133.23, 103.303, -72.3434, 0.81 ) }
    dend_4 { pt3dadd( -133.594, 103.88, -72.7635, 0.44 ) }
    dend_4 { pt3dadd( -133.87, 104.263, -73.0451, 0.22 ) }
    dend_4 { pt3dadd( -134.202, 104.682, -73.417, 0.22 ) }
    dend_4 { pt3dadd( -134.907, 105.605, -74.36, 0.37 ) }
    dend_4 { pt3dadd( -135.094, 105.864, -74.6545, 0.22 ) }
    dend_4 { pt3dadd( -135.465, 106.385, -75.2449, 0.22 ) }
    dend_4 { pt3dadd( -135.771, 106.803, -75.7054, 0.59 ) }
    dend_4 { pt3dadd( -136.285, 107.417, -76.4403, 0.74 ) }
    dend_4 { pt3dadd( -136.96, 108.063, -77.3975, 0.37 ) }
    dend_4 { pt3dadd( -137.55, 108.477, -78.264, 0.37 ) }
    dend_4 { pt3dadd( -137.978, 108.758, -78.9851, 0.37 ) }
    dend_4 { pt3dadd( -138.402, 109.034, -79.7377, 1.03 ) }
    dend_4 { pt3dadd( -139.137, 109.495, -81.0325, 1.62 ) }
    dend_4 { pt3dadd( -140.173, 110.088, -82.81, 1.84 ) }
    dend_4 { pt3dadd( -141.566, 110.837, -85.2165, 1.33 ) }
    dend_4 { pt3dadd( -142.519, 111.357, -86.9142, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_4 { pt3dadd( -142.946, 111.614, -87.7112, 0.44 ) }
    dend_4 { pt3dadd( -143.356, 111.897, -88.4784, 0.44 ) }
    dend_4 { pt3dadd( -143.694, 112.175, -89.0707, 0.59 ) }
    dend_4 { pt3dadd( -144.681, 113.081, -90.6076, 0.74 ) }
    dend_4 { pt3dadd( -144.99, 113.349, -91.042, 0.74 ) }
    dend_4 { pt3dadd( -145.43, 113.611, -91.6037, 0.88 ) }
    dend_4 { pt3dadd( -146.111, 113.877, -92.4443, 0.96 ) }
    dend_4 { pt3dadd( -146.718, 114.019, -93.1692, 0.52 ) }
    dend_4 { pt3dadd( -147.15, 114.086, -93.6336, 0.37 ) }
    dend_4 { pt3dadd( -148.298, 114.203, -94.7718, 0.29 ) }
    dend_4 { pt3dadd( -149.194, 114.286, -95.7157, 0.29 ) }
    dend_4 { pt3dadd( -149.91, 114.365, -96.4904, 0.29 ) }
    dend_4 { pt3dadd( -151.19, 114.584, -97.8758, 0.29 ) }
    dend_4 { pt3dadd( -151.715, 114.768, -98.4671, 0.29 ) }
    dend_4 { pt3dadd( -152.147, 115.043, -98.997, 0.29 ) }
    dend_4 { pt3dadd( -152.675, 115.606, -99.6922, 0.29 ) }
    dend_4 { pt3dadd( -153.01, 116.118, -100.234, 0.52 ) }
    dend_4 { pt3dadd( -153.236, 116.564, -100.683, 0.66 ) }
    dend_4 { pt3dadd( -153.573, 117.268, -101.335, 0.66 ) }
    dend_4 { pt3dadd( -153.992, 118.03, -102.121, 0.44 ) }
    dend_4 { pt3dadd( -154.288, 118.449, -102.624, 0.59 ) }
    dend_4 { pt3dadd( -154.957, 119.309, -103.755, 0.29 ) }
    dend_4 { pt3dadd( -155.44, 119.944, -104.633, 0.29 ) }
    dend_4 { pt3dadd( -155.875, 120.523, -105.412, 0.81 ) }
    dend_4 { pt3dadd( -156.401, 121.262, -106.342, 1.25 ) }
    dend_4 { pt3dadd( -157.494, 122.915, -108.222, 0.44 ) }
    dend_4 { pt3dadd( -158.298, 124.261, -109.595, 0.74 ) }
    dend_4 { pt3dadd( -158.891, 125.362, -110.593, 0.29 ) }
    dend_4 { pt3dadd( -159.228, 126.015, -111.168, 0.29 ) }
    dend_4 { pt3dadd( -159.609, 126.842, -111.859, 0.29 ) }
    dend_4 { pt3dadd( -160.168, 128.316, -112.861, 0.22 ) }
    dend_4 { pt3dadd( -160.442, 129.349, -113.355, 0.22 ) }
    dend_4 { pt3dadd( -160.521, 129.699, -113.475, 0.29 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 33/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -131.469, 98.6721, -69.046, 0.44 ) }
    dend_3 { pt3dadd( -133.176, 99.5326, -68.8101, 0.44 ) }
    dend_3 { pt3dadd( -134.048, 99.9421, -68.6834, 0.52 ) }
    dend_3 { pt3dadd( -134.735, 100.24, -68.5818, 0.59 ) }
    dend_3 { pt3dadd( -135.478, 100.532, -68.4988, 0.59 ) }
    dend_3 { pt3dadd( -136.379, 100.856, -68.4244, 0.37 ) }
    dend_3 { pt3dadd( -137.203, 101.149, -68.3836, 0.37 ) }
    dend_3 { pt3dadd( -137.893, 101.384, -68.3639, 0.96 ) }
    dend_3 { pt3dadd( -138.774, 101.681, -68.4019, 1.4 ) }
    dend_3 { pt3dadd( -139.511, 101.944, -68.4707, 1.62 ) }
    dend_3 { pt3dadd( -140.547, 102.38, -68.6127, 0.59 ) }
    dend_3 { pt3dadd( -141.38, 102.809, -68.8002, 0.81 ) }
    dend_3 { pt3dadd( -142.04, 103.187, -68.9844, 0.96 ) }
    dend_3 { pt3dadd( -142.378, 103.397, -69.0902, 1.18 ) }
    dend_3 { pt3dadd( -142.974, 103.799, -69.2775, 0.29 ) }
    dend_3 { pt3dadd( -143.726, 104.329, -69.4919, 0.22 ) }
    dend_3 { pt3dadd( -144.741, 105.011, -69.7783, 0.96 ) }
    dend_3 { pt3dadd( -145.258, 105.32, -69.9236, 0.96 ) }
    dend_3 { pt3dadd( -146.022, 105.73, -70.1664, 0.66 ) }
    dend_3 { pt3dadd( -146.884, 106.121, -70.4911, 0.44 ) }
    dend_3 { pt3dadd( -147.81, 106.456, -70.9145, 0.44 ) }
    dend_3 { pt3dadd( -148.744, 106.753, -71.3871, 0.81 ) }
    dend_3 { pt3dadd( -149.585, 107.02, -71.8314, 0.96 ) }
    dend_3 { pt3dadd( -150.553, 107.35, -72.3793, 0.74 ) }
    dend_3 { pt3dadd( -151.937, 107.831, -73.2255, 0.29 ) }
    dend_3 { pt3dadd( -152.774, 108.126, -73.7782, 0.29 ) }
    dend_3 { pt3dadd( -153.345, 108.336, -74.1771, 0.44 ) }
    dend_3 { pt3dadd( -153.785, 108.498, -74.5032, 0.66 ) }
    dend_3 { pt3dadd( -154.277, 108.67, -74.8825, 0.52 ) }
    dend_3 { pt3dadd( -154.855, 108.839, -75.3451, 0.52 ) }
    dend_3 { pt3dadd( -155.548, 108.973, -75.9117, 0.66 ) }
    dend_3 { pt3dadd( -156.284, 109.009, -76.4867, 0.37 ) }
    dend_3 { pt3dadd( -156.96, 108.942, -76.9972, 0.29 ) }
    dend_3 { pt3dadd( -157.499, 108.844, -77.3628, 0.29 ) }
    dend_3 { pt3dadd( -157.918, 108.756, -77.6315, 0.29 ) }
    dend_3 { pt3dadd( -158.68, 108.565, -78.0604, 0.29 ) }
    dend_3 { pt3dadd( -159.222, 108.409, -78.3966, 0.52 ) }
    dend_3 { pt3dadd( -159.74, 108.247, -78.7554, 0.74 ) }
    dend_3 { pt3dadd( -160.411, 107.977, -79.2706, 0.74 ) }
    dend_3 { pt3dadd( -161.334, 107.438, -80.1573, 0.52 ) }
    dend_3 { pt3dadd( -161.765, 107.026, -80.7395, 1.47 ) }
    dend_3 { pt3dadd( -162.424, 106.18, -81.8272, 1.92 ) }
    dend_3 { pt3dadd( -162.74, 105.723, -82.413, 1.84 ) }
    dend_3 { pt3dadd( -163.193, 105.048, -83.3132, 0.88 ) }
    dend_3 { pt3dadd( -163.674, 104.424, -84.2919, 0.66 ) }
    dend_3 { pt3dadd( -164.394, 103.748, -85.5795, 0.37 ) }
    dend_3 { pt3dadd( -164.868, 103.511, -86.2752, 0.29 ) }
    dend_3 { pt3dadd( -165.439, 103.418, -86.9253, 0.29 ) }
    dend_3 { pt3dadd( -166.143, 103.459, -87.5676, 0.44 ) }
    dend_3 { pt3dadd( -167.446, 103.648, -88.5625, 0.59 ) }
    dend_3 { pt3dadd( -168.593, 103.913, -89.3987, 0.66 ) }
    dend_3 { pt3dadd( -169.27, 104.109, -89.8816, 0.66 ) }
    dend_3 { pt3dadd( -169.694, 104.225, -90.2109, 0.44 ) }
    dend_3 { pt3dadd( -170.557, 104.41, -90.9041, 0.37 ) }
    dend_3 { pt3dadd( -171.78, 104.629, -91.9545, 0.37 ) }
    dend_3 { pt3dadd( -173.054, 104.821, -93.0141, 0.37 ) }
    dend_3 { pt3dadd( -173.481, 104.885, -93.3688, 0.52 ) }
    dend_3 { pt3dadd( -174.351, 104.985, -94.0838, 0.66 ) }
    dend_3 { pt3dadd( -175.354, 105.076, -94.8695, 0.37 ) }
    dend_3 { pt3dadd( -176.518, 105.088, -95.8959, 0.37 ) }
    dend_3 { pt3dadd( -177.478, 104.998, -96.7731, 0.74 ) }
    dend_3 { pt3dadd( -177.984, 104.901, -97.2236, 0.74 ) }
    dend_3 { pt3dadd( -179.013, 104.671, -98.1583, 0.52 ) }
    dend_3 { pt3dadd( -180.002, 104.442, -99.0663, 0.52 ) }
    dend_3 { pt3dadd( -182.296, 103.817, -101.337, 0.52 ) }
    dend_3 { pt3dadd( -183.074, 103.509, -102.209, 0.44 ) }
    dend_3 { pt3dadd( -183.573, 103.246, -102.873, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_3 { pt3dadd( -184.044, 102.945, -103.554, 0.29 ) }
    dend_3 { pt3dadd( -184.909, 102.318, -104.844, 0.29 ) }
    dend_3 { pt3dadd( -185.574, 101.859, -105.823, 0.29 ) }
    dend_3 { pt3dadd( -186.795, 101.199, -107.318, 0.52 ) }
    dend_3 { pt3dadd( -187.526, 100.795, -108.328, 0.66 ) }
    dend_3 { pt3dadd( -188.008, 100.481, -109.1, 0.66 ) }
    dend_3 { pt3dadd( -188.314, 100.194, -109.72, 0.52 ) }
    dend_3 { pt3dadd( -188.676, 99.7603, -110.563, 0.52 ) }
    dend_3 { pt3dadd( -188.969, 99.4451, -111.196, 0.22 ) }
    dend_3 { pt3dadd( -190.141, 98.4512, -113.367, 1.18 ) }
    dend_3 { pt3dadd( -190.552, 98.0834, -114.159, 1.4 ) }
    dend_3 { pt3dadd( -191.26, 97.3106, -115.615, 0.52 ) }
    dend_3 { pt3dadd( -191.513, 96.9951, -116.122, 0.29 ) }
    dend_3 { pt3dadd( -191.931, 96.427, -116.851, 0.29 ) }
    dend_3 { pt3dadd( -192.484, 95.7101, -117.624, 0.29 ) }
    dend_3 { pt3dadd( -193.685, 94.2108, -118.807, 0.44 ) }
    dend_3 { pt3dadd( -194.519, 93.2353, -119.425, 0.44 ) }
    dend_3 { pt3dadd( -195.175, 92.4752, -119.846, 0.29 ) }
    dend_3 { pt3dadd( -196.465, 90.9274, -120.619, 0.52 ) }
    dend_3 { pt3dadd( -197.066, 90.1691, -120.935, 0.52 ) }
    dend_3 { pt3dadd( -197.906, 89.095, -121.302, 0.37 ) }
    dend_3 { pt3dadd( -198.824, 87.9894, -121.579, 0.29 ) }
    dend_3 { pt3dadd( -200.143, 86.5651, -121.912, 0.44 ) }
    dend_3 { pt3dadd( -200.745, 85.989, -122.044, 0.44 ) }
    dend_3 { pt3dadd( -201.78, 85.1598, -122.241, 0.22 ) }
    dend_3 { pt3dadd( -202.659, 84.5652, -122.412, 0.22 ) }
    dend_3 { pt3dadd( -203.538, 84.0823, -122.601, 0.52 ) }
    dend_3 { pt3dadd( -203.873, 83.9278, -122.679, 0.52 ) }
    dend_3 { pt3dadd( -205.239, 83.3929, -123.002, 0.29 ) }
    dend_3 { pt3dadd( -206.934, 82.8171, -123.45, 0.29 ) }
    dend_3 { pt3dadd( -208.249, 82.4433, -123.827, 0.22 ) }
    dend_3 { pt3dadd( -209.97, 81.9848, -124.342, 0.22 ) }
    dend_3 { pt3dadd( -210.931, 81.7294, -124.64, 0.59 ) }
    dend_3 { pt3dadd( -211.921, 81.4556, -124.941, 0.44 ) }
    dend_3 { pt3dadd( -212.88, 81.1874, -125.209, 0.22 ) }
    dend_3 { pt3dadd( -213.465, 81.0229, -125.338, 0.22 ) }
    dend_3 { pt3dadd( -214.242, 80.8058, -125.461, 0.37 ) }
    dend_3 { pt3dadd( -214.921, 80.6201, -125.52, 0.37 ) }
    dend_3 { pt3dadd( -215.664, 80.4251, -125.548, 0.22 ) }
    dend_3 { pt3dadd( -216.652, 80.1854, -125.571, 0.22 ) }
    dend_3 { pt3dadd( -217.468, 80.0144, -125.59, 0.37 ) }
    dend_3 { pt3dadd( -218.158, 79.895, -125.599, 0.37 ) }
    dend_3 { pt3dadd( -219.001, 79.7542, -125.588, 0.37 ) }
    dend_3 { pt3dadd( -219.831, 79.6071, -125.566, 0.29 ) }
    dend_3 { pt3dadd( -220.617, 79.4729, -125.552, 0.37 ) }
    dend_3 { pt3dadd( -222.608, 79.1585, -125.526, 0.22 ) }
    dend_3 { pt3dadd( -223.968, 78.948, -125.504, 0.22 ) }
    dend_3 { pt3dadd( -225.852, 78.6611, -125.456, 0.22 ) }
    dend_3 { pt3dadd( -226.63, 78.5433, -125.427, 0.22 ) }
    dend_3 { pt3dadd( -227.444, 78.4172, -125.384, 0.44 ) }
    dend_3 { pt3dadd( -227.866, 78.3456, -125.349, 0.44 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 51/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -141.683, 40.3797, 250.568, 0.88 ) }
    dend_62 { pt3dadd( -144.964, 42.566, 258.614, 0.88 ) }
    dend_62 { pt3dadd( -148.021, 44.2974, 266.851, 0.88 ) }
    dend_62 { pt3dadd( -152.222, 46.2661, 274.514, 0.88 ) }
    dend_62 { pt3dadd( -156.647, 48.2205, 282.053, 0.88 ) }
    dend_62 { pt3dadd( -160.791, 49.7282, 289.845, 0.88 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 57/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -141.683, 40.3797, 250.568, 0.22 ) }
    dend_61 { pt3dadd( -146.011, 43.3775, 261.203, 0.88 ) }
    dend_61 { pt3dadd( -152.034, 46.8222, 270.841, 0.88 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 60/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -157.717, 0.945032, 247.767, 0.88 ) }
    dend_59 { pt3dadd( -166.596, -0.494927, 254.605, 0.88 ) }
    dend_59 { pt3dadd( -174.45, -2.71595, 262.412, 0.88 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 63/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -157.717, 0.945032, 247.767, 0.22 ) }
    dend_58 { pt3dadd( -159.332, 0.925101, 256.987, 0.88 ) }
    dend_58 { pt3dadd( -159.476, 0.290475, 266.323, 0.88 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 66/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -203.722, 144.525, 74.6753, 0.88 ) }
    dend_55 { pt3dadd( -215.415, 144.611, 77.7431, 0.88 ) }
    dend_55 { pt3dadd( -227.404, 145.386, 79.0795, 0.88 ) }
    dend_55 { pt3dadd( -239.176, 147.516, 80.8424, 0.88 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 70/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -203.722, 144.525, 74.6753, 0.22 ) }
    dend_54 { pt3dadd( -208.354, 151.947, 74.7637, 0.88 ) }
    dend_54 { pt3dadd( -212.848, 159.366, 73.6015, 0.88 ) }
    dend_54 { pt3dadd( -216.658, 167.133, 72.1733, 0.88 ) }
    dend_54 { pt3dadd( -219.751, 175.085, 70.1042, 0.88 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 75/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -67.3485, -184.233, 134.476, 0.88 ) }
    dend_44 { pt3dadd( -67.9749, -191.05, 141.776, 0.88 ) }
    dend_44 { pt3dadd( -69.2686, -198.039, 148.834, 0.88 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 78/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -67.3485, -184.233, 134.476, 0.22 ) }
    dend_43 { pt3dadd( -68.363, -193.118, 144.535, 0.88 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 80/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -121.202, -196.164, 100.923, 0.88 ) }
    dend_41 { pt3dadd( -127.814, -205.125, 103.494, 0.88 ) }
    dend_41 { pt3dadd( -134.534, -214.253, 104.971, 0.88 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 83/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -121.202, -196.164, 100.923, 0.22 ) }
    dend_40 { pt3dadd( -128.019, -202.519, 105.437, 0.88 ) }
    dend_40 { pt3dadd( -134.256, -210.15, 108.744, 0.88 ) }
    // Section: dend_37, id: dend_37, parent: dend_27 (entry count 86/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 6.05434, -68.6463, 10.1306, 0.66 ) }
    dend_37 { pt3dadd( 6.18744, -70.4301, 11.1201, 0.66 ) }
    dend_37 { pt3dadd( 6.3666, -71.6707, 11.7641, 0.52 ) }
    dend_37 { pt3dadd( 6.60941, -73.1897, 12.4761, 1.18 ) }
    dend_37 { pt3dadd( 6.70561, -74.0299, 12.8161, 1.62 ) }
    dend_37 { pt3dadd( 6.76, -74.9204, 13.1033, 1.33 ) }
    dend_37 { pt3dadd( 6.77112, -76.0835, 13.3826, 0.74 ) }
    dend_37 { pt3dadd( 6.83756, -77.4408, 13.5992, 0.44 ) }
    dend_37 { pt3dadd( 6.85601, -78.2916, 13.7193, 0.44 ) }
    dend_37 { pt3dadd( 6.81232, -79.4951, 13.8535, 0.44 ) }
    dend_37 { pt3dadd( 6.76171, -80.7204, 14.0196, 0.52 ) }
    dend_37 { pt3dadd( 6.74012, -81.9371, 14.2586, 0.66 ) }
    dend_37 { pt3dadd( 6.8272, -83.1304, 14.6671, 0.44 ) }
    dend_37 { pt3dadd( 7.01626, -84.0707, 15.302, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_37 { pt3dadd( 7.12188, -84.536, 15.7417, 0.88 ) }
    dend_37 { pt3dadd( 7.29997, -85.2034, 16.4818, 0.88 ) }
    dend_37 { pt3dadd( 7.40901, -85.5686, 16.9137, 0.96 ) }
    dend_37 { pt3dadd( 7.54678, -86.0108, 17.4388, 0.66 ) }
    dend_37 { pt3dadd( 7.88334, -87.0708, 18.5852, 0.44 ) }
    dend_37 { pt3dadd( 8.29837, -88.2437, 19.6907, 0.52 ) }
    dend_37 { pt3dadd( 8.50699, -88.816, 20.2061, 0.52 ) }
    dend_37 { pt3dadd( 8.86017, -89.7423, 21.0613, 0.74 ) }
    dend_37 { pt3dadd( 9.12732, -90.3555, 21.6543, 0.96 ) }
    dend_37 { pt3dadd( 9.45632, -90.9673, 22.2921, 0.96 ) }
    dend_37 { pt3dadd( 10.0416, -91.7743, 23.2391, 0.59 ) }
    dend_37 { pt3dadd( 10.6615, -92.4548, 24.2619, 0.59 ) }
    dend_37 { pt3dadd( 11.3125, -93.1649, 25.4668, 0.88 ) }
    dend_37 { pt3dadd( 11.5207, -93.4107, 25.8879, 0.88 ) }
    dend_37 { pt3dadd( 11.7944, -93.7797, 26.4633, 0.88 ) }
    dend_37 { pt3dadd( 12.1354, -94.3116, 27.1989, 0.74 ) }
    dend_37 { pt3dadd( 12.681, -95.2197, 28.2941, 0.74 ) }
    dend_37 { pt3dadd( 13.223, -96.1255, 29.2122, 0.74 ) }
    dend_37 { pt3dadd( 13.809, -97.1528, 30.1138, 0.81 ) }
    dend_37 { pt3dadd( 14.2262, -97.9428, 30.7524, 0.96 ) }
    dend_37 { pt3dadd( 14.5321, -98.5532, 31.1975, 0.96 ) }
    dend_37 { pt3dadd( 14.8989, -99.3074, 31.6883, 0.88 ) }
    dend_37 { pt3dadd( 15.3506, -100.252, 32.223, 0.88 ) }
    dend_37 { pt3dadd( 15.5052, -100.57, 32.4021, 1.11 ) }
    dend_37 { pt3dadd( 16.0157, -101.535, 32.9097, 0.74 ) }
    dend_37 { pt3dadd( 16.4377, -102.267, 33.2818, 0.74 ) }
    dend_37 { pt3dadd( 16.8662, -102.999, 33.6645, 0.66 ) }
    dend_37 { pt3dadd( 17.5354, -104.219, 34.2793, 0.44 ) }
    dend_37 { pt3dadd( 17.9686, -105.099, 34.7095, 1.03 ) }
    dend_37 { pt3dadd( 18.5243, -106.379, 35.3183, 0.81 ) }
    dend_37 { pt3dadd( 18.9681, -107.472, 35.82, 0.59 ) }
    dend_37 { pt3dadd( 19.4572, -108.786, 36.4126, 0.74 ) }
    dend_37 { pt3dadd( 19.8006, -109.762, 36.8312, 0.59 ) }
    dend_37 { pt3dadd( 20.0454, -110.633, 37.2023, 0.59 ) }
    dend_37 { pt3dadd( 20.3153, -111.983, 37.7514, 0.44 ) }
    dend_37 { pt3dadd( 20.4368, -113.011, 38.144, 0.37 ) }
    dend_37 { pt3dadd( 20.5462, -114.317, 38.579, 0.74 ) }
    dend_37 { pt3dadd( 20.6257, -115.308, 38.8712, 0.88 ) }
    dend_37 { pt3dadd( 20.761, -117.066, 39.404, 0.88 ) }
    dend_37 { pt3dadd( 20.8025, -117.79, 39.6468, 0.74 ) }
    dend_37 { pt3dadd( 20.8514, -119.167, 40.1605, 0.66 ) }
    dend_37 { pt3dadd( 20.8753, -120.169, 40.5813, 0.74 ) }
    dend_37 { pt3dadd( 20.9258, -121.396, 41.172, 0.74 ) }
    dend_37 { pt3dadd( 20.9909, -122.214, 41.6066, 0.74 ) }
    dend_37 { pt3dadd( 21.1921, -123.7, 42.419, 0.52 ) }
    dend_37 { pt3dadd( 21.3046, -124.368, 42.7828, 0.52 ) }
    dend_37 { pt3dadd( 21.4188, -125.401, 43.3531, 0.29 ) }
    dend_37 { pt3dadd( 21.4727, -126.262, 43.8321, 0.59 ) }
    dend_37 { pt3dadd( 21.5019, -126.903, 44.1942, 0.74 ) }
    dend_37 { pt3dadd( 21.5317, -127.798, 44.6968, 0.44 ) }
    dend_37 { pt3dadd( 21.5615, -128.91, 45.3156, 0.37 ) }
    dend_37 { pt3dadd( 21.5494, -130.886, 46.4431, 0.37 ) }
    dend_37 { pt3dadd( 21.5005, -131.74, 46.9423, 0.52 ) }
    dend_37 { pt3dadd( 21.3871, -132.563, 47.4458, 0.59 ) }
    dend_37 { pt3dadd( 21.1883, -133.463, 48.0058, 0.74 ) }
    dend_37 { pt3dadd( 20.9975, -134.104, 48.3992, 1.18 ) }
    dend_37 { pt3dadd( 20.8459, -134.557, 48.6571, 1.18 ) }
    dend_37 { pt3dadd( 20.4178, -135.878, 49.3012, 0.74 ) }
    dend_37 { pt3dadd( 19.8452, -137.444, 49.9656, 0.52 ) }
    dend_37 { pt3dadd( 19.3674, -138.689, 50.412, 0.44 ) }
    dend_37 { pt3dadd( 18.7915, -140.22, 50.861, 0.59 ) }
    dend_37 { pt3dadd( 18.3392, -141.479, 51.1426, 0.44 ) }
    dend_37 { pt3dadd( 18.0804, -142.315, 51.2719, 0.44 ) }
    dend_37 { pt3dadd( 17.7994, -143.509, 51.3692, 0.59 ) }
    dend_37 { pt3dadd( 17.677, -144.358, 51.3946, 0.59 ) }
    dend_37 { pt3dadd( 17.6313, -145.064, 51.393, 0.59 ) }
    dend_37 { pt3dadd( 17.6405, -146.435, 51.3312, 0.66 ) }
    dend_37 { pt3dadd( 17.6917, -147.416, 51.2776, 0.59 ) }
    dend_37 { pt3dadd( 17.7883, -148.501, 51.2319, 0.52 ) }
    dend_37 { pt3dadd( 17.8768, -149.227, 51.2099, 0.66 ) }
    dend_37 { pt3dadd( 18.0272, -150.365, 51.1938, 0.66 ) }
    dend_37 { pt3dadd( 18.1975, -151.756, 51.2038, 0.52 ) }
    dend_37 { pt3dadd( 18.3177, -152.827, 51.2205, 0.74 ) }
    dend_37 { pt3dadd( 18.3951, -153.74, 51.2341, 0.88 ) }
    dend_37 { pt3dadd( 18.4708, -155.105, 51.25, 0.96 ) }
    dend_37 { pt3dadd( 18.5221, -156.673, 51.2764, 0.88 ) }
    dend_37 { pt3dadd( 18.5373, -157.766, 51.3108, 0.88 ) }
    dend_37 { pt3dadd( 18.5619, -158.636, 51.3077, 0.81 ) }
    dend_37 { pt3dadd( 18.5925, -159.739, 51.2421, 0.66 ) }
    dend_37 { pt3dadd( 18.5882, -160.586, 51.1726, 0.66 ) }
    dend_37 { pt3dadd( 18.5486, -161.41, 51.1163, 0.44 ) }
    dend_37 { pt3dadd( 18.4495, -162.498, 51.0851, 0.44 ) }
    dend_37 { pt3dadd( 18.2001, -164.113, 51.1507, 0.44 ) }
    dend_37 { pt3dadd( 17.9281, -165.354, 51.3362, 0.44 ) }
    dend_37 { pt3dadd( 17.5174, -166.639, 51.7327, 0.66 ) }
    dend_37 { pt3dadd( 17.2145, -167.39, 52.1031, 0.81 ) }
    dend_37 { pt3dadd( 16.7929, -168.281, 52.6906, 0.96 ) }
    dend_37 { pt3dadd( 16.234, -169.387, 53.5741, 0.66 ) }
    dend_37 { pt3dadd( 15.6708, -170.461, 54.5095, 0.59 ) }
    dend_37 { pt3dadd( 15.0659, -171.669, 55.5586, 0.96 ) }
    dend_37 { pt3dadd( 14.6543, -172.582, 56.2853, 0.96 ) }
    dend_37 { pt3dadd( 14.3331, -173.385, 56.846, 0.96 ) }
    dend_37 { pt3dadd( 14.0599, -174.196, 57.2962, 0.66 ) }
    dend_37 { pt3dadd( 13.8092, -175.173, 57.6709, 0.44 ) }
    dend_37 { pt3dadd( 13.6205, -176.106, 57.8603, 0.37 ) }
    dend_37 { pt3dadd( 13.5294, -176.824, 57.9085, 0.37 ) }
    dend_37 { pt3dadd( 13.4443, -177.924, 57.9158, 0.29 ) }
    dend_37 { pt3dadd( 13.3882, -179.139, 57.883, 0.29 ) }
    dend_37 { pt3dadd( 13.3574, -180.402, 57.8385, 0.37 ) }
    dend_37 { pt3dadd( 13.3559, -181.57, 57.8087, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_37 { pt3dadd( 13.3552, -182.841, 57.8034, 0.29 ) }
    dend_37 { pt3dadd( 13.3388, -184.122, 57.808, 0.29 ) }
    dend_37 { pt3dadd( 13.3107, -185.456, 57.8246, 0.29 ) }
    dend_37 { pt3dadd( 13.3039, -186.015, 57.8464, 0.44 ) }
    dend_37 { pt3dadd( 13.3027, -186.925, 57.904, 0.52 ) }
    dend_37 { pt3dadd( 13.3068, -188.273, 58.0119, 0.37 ) }
    dend_37 { pt3dadd( 13.2965, -189.597, 58.1216, 1.03 ) }
    dend_37 { pt3dadd( 13.3084, -190.26, 58.1777, 1.03 ) }
    dend_37 { pt3dadd( 13.3652, -191.056, 58.2683, 0.74 ) }
    dend_37 { pt3dadd( 13.4727, -192.045, 58.4065, 0.59 ) }
    dend_37 { pt3dadd( 13.5457, -192.616, 58.5051, 0.81 ) }
    dend_37 { pt3dadd( 13.6312, -193.333, 58.6278, 0.81 ) }
    dend_37 { pt3dadd( 13.7139, -194.693, 58.8981, 0.37 ) }
    dend_37 { pt3dadd( 13.6909, -195.694, 59.0879, 0.37 ) }
    dend_37 { pt3dadd( 13.5756, -196.477, 59.2129, 0.37 ) }
    dend_37 { pt3dadd( 13.1973, -197.641, 59.3215, 0.29 ) }
    dend_37 { pt3dadd( 12.8249, -198.388, 59.3134, 0.44 ) }
    dend_37 { pt3dadd( 12.2632, -199.241, 59.1996, 0.59 ) }
    dend_37 { pt3dadd( 11.7795, -199.897, 59.0616, 0.74 ) }
    dend_37 { pt3dadd( 11.4513, -200.394, 58.9441, 0.74 ) }
    dend_37 { pt3dadd( 10.8785, -201.429, 58.7059, 0.22 ) }
    dend_37 { pt3dadd( 10.5514, -202.325, 58.567, 0.22 ) }
    dend_37 { pt3dadd( 10.4447, -203.029, 58.552, 0.66 ) }
    dend_37 { pt3dadd( 10.4842, -204.014, 58.6486, 0.29 ) }
    dend_37 { pt3dadd( 10.6737, -205.21, 58.9043, 0.59 ) }
    dend_37 { pt3dadd( 10.7756, -205.632, 59.0242, 0.44 ) }
    dend_37 { pt3dadd( 11.0728, -206.49, 59.3574, 0.29 ) }
    dend_37 { pt3dadd( 11.2806, -206.974, 59.5951, 0.22 ) }
    dend_37 { pt3dadd( 11.7421, -207.909, 60.1306, 0.22 ) }
    dend_37 { pt3dadd( 12.0076, -208.414, 60.4439, 0.22 ) }
    dend_37 { pt3dadd( 14.6643, -219.158, 65.9493, 0.22 ) }
    dend_37 { pt3dadd( 17.3145, -229.2, 72.6033, 0.22 ) }
    dend_37 { pt3dadd( 17.0481, -239.85, 78.8505, 0.22 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 33/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 6.05434, -68.6463, 10.1306, 1.03 ) }
    dend_28 { pt3dadd( 6.7814, -69.2071, 10.0499, 1.03 ) }
    dend_28 { pt3dadd( 8.13153, -70.1039, 9.97798, 0.66 ) }
    dend_28 { pt3dadd( 8.76998, -70.4812, 9.9838, 0.66 ) }
    dend_28 { pt3dadd( 9.62749, -70.9421, 10.0119, 0.66 ) }
    dend_28 { pt3dadd( 10.8071, -71.5952, 10.1237, 1.11 ) }
    dend_28 { pt3dadd( 11.3345, -71.9019, 10.2037, 1.18 ) }
    dend_28 { pt3dadd( 11.9269, -72.2507, 10.3627, 0.96 ) }
    dend_28 { pt3dadd( 12.6614, -72.6874, 10.6939, 0.81 ) }
    dend_28 { pt3dadd( 13.8598, -73.3719, 11.3883, 0.81 ) }
    dend_28 { pt3dadd( 14.6748, -73.8275, 11.9918, 0.74 ) }
    dend_28 { pt3dadd( 15.2218, -74.1389, 12.5133, 0.96 ) }
    dend_28 { pt3dadd( 15.886, -74.4847, 13.2224, 0.96 ) }
    dend_28 { pt3dadd( 16.1418, -74.5867, 13.5038, 0.96 ) }
    dend_28 { pt3dadd( 16.517, -74.6639, 13.9155, 0.81 ) }
    dend_28 { pt3dadd( 16.9754, -74.6779, 14.3979, 0.81 ) }
    dend_28 { pt3dadd( 17.7479, -74.6348, 15.1127, 0.74 ) }
    dend_28 { pt3dadd( 18.3549, -74.5835, 15.6131, 0.96 ) }
    dend_28 { pt3dadd( 19.098, -74.5438, 16.193, 0.96 ) }
    dend_28 { pt3dadd( 19.7578, -74.5548, 16.7137, 0.74 ) }
    dend_28 { pt3dadd( 20.456, -74.6289, 17.3077, 0.88 ) }
    dend_28 { pt3dadd( 20.9932, -74.7382, 17.8128, 1.03 ) }
    dend_28 { pt3dadd( 21.5321, -74.9264, 18.4031, 1.03 ) }
    dend_28 { pt3dadd( 21.9622, -75.1929, 19.0368, 0.88 ) }
    dend_28 { pt3dadd( 22.229, -75.4594, 19.5478, 0.66 ) }
    dend_28 { pt3dadd( 22.5812, -75.8785, 20.2219, 1.03 ) }
    dend_28 { pt3dadd( 22.8122, -76.1622, 20.6324, 1.03 ) }
    dend_28 { pt3dadd( 23.0679, -76.4386, 20.9951, 0.81 ) }
    dend_28 { pt3dadd( 23.6617, -77.063, 21.7811, 0.59 ) }
    dend_28 { pt3dadd( 24.0891, -77.4656, 22.2634, 0.74 ) }
    dend_28 { pt3dadd( 24.751, -78.0553, 22.977, 0.74 ) }
    dend_28 { pt3dadd( 25.138, -78.3916, 23.3906, 0.88 ) }
    dend_28 { pt3dadd( 25.7585, -78.9382, 24.0974, 0.66 ) }
    dend_28 { pt3dadd( 26.2927, -79.4181, 24.7414, 0.96 ) }
    dend_28 { pt3dadd( 26.624, -79.7328, 25.1842, 1.11 ) }
    dend_28 { pt3dadd( 26.9046, -80.0268, 25.6323, 1.11 ) }
    dend_28 { pt3dadd( 27.3161, -80.4818, 26.3977, 0.81 ) }
    dend_28 { pt3dadd( 27.7155, -80.9012, 27.1938, 0.74 ) }
    dend_28 { pt3dadd( 28.1192, -81.2782, 28.0089, 0.66 ) }
    dend_28 { pt3dadd( 28.621, -81.6733, 28.9087, 0.88 ) }
    dend_28 { pt3dadd( 28.9519, -81.9319, 29.4524, 1.03 ) }
    dend_28 { pt3dadd( 29.3135, -82.2334, 29.9748, 1.03 ) }
    dend_28 { pt3dadd( 29.7812, -82.6748, 30.574, 0.81 ) }
    dend_28 { pt3dadd( 30.1205, -83.0503, 30.9381, 0.81 ) }
    dend_28 { pt3dadd( 30.6012, -83.6371, 31.3462, 0.81 ) }
    dend_28 { pt3dadd( 31.1845, -84.3956, 31.7292, 0.88 ) }
    dend_28 { pt3dadd( 31.6824, -85.0793, 32.044, 1.03 ) }
    dend_28 { pt3dadd( 32.0552, -85.6156, 32.2794, 0.88 ) }
    dend_28 { pt3dadd( 32.5626, -86.3157, 32.6056, 0.66 ) }
    dend_28 { pt3dadd( 32.8997, -86.7544, 32.8781, 0.66 ) }
    dend_28 { pt3dadd( 33.2497, -87.1342, 33.2506, 0.59 ) }
    dend_28 { pt3dadd( 33.7114, -87.5019, 33.862, 0.88 ) }
    dend_28 { pt3dadd( 33.8988, -87.6195, 34.1376, 0.88 ) }
    dend_28 { pt3dadd( 34.324, -87.8586, 34.7512, 0.59 ) }
    dend_28 { pt3dadd( 34.6355, -88.0497, 35.2013, 0.74 ) }
    dend_28 { pt3dadd( 34.9308, -88.2498, 35.5784, 0.81 ) }
    dend_28 { pt3dadd( 35.3863, -88.569, 36.0412, 0.74 ) }
    dend_28 { pt3dadd( 35.8804, -88.924, 36.4528, 0.59 ) }
    dend_28 { pt3dadd( 36.6251, -89.4738, 36.9973, 0.59 ) }
    dend_28 { pt3dadd( 37.0445, -89.793, 37.2772, 0.88 ) }
    dend_28 { pt3dadd( 37.4886, -90.1365, 37.5454, 1.03 ) }
    dend_28 { pt3dadd( 38.2497, -90.7543, 37.9751, 0.66 ) }
    dend_28 { pt3dadd( 38.7539, -91.1801, 38.2415, 0.59 ) }
    dend_28 { pt3dadd( 39.3923, -91.7144, 38.5643, 2.06 ) }
    dend_28 { pt3dadd( 39.8256, -92.0686, 38.7895, 2.73 ) }
    // Section: dend_26, id: dend_26, parent: dend_20 (entry count 98/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -10.4148, -61.5451, -7.73189, 1.25 ) }
    dend_26 { pt3dadd( -11.4454, -61.4828, -8.13604, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_26 { pt3dadd( -12.5782, -61.5488, -8.59104, 0.66 ) }
    dend_26 { pt3dadd( -13.0912, -61.6206, -8.79754, 0.66 ) }
    dend_26 { pt3dadd( -13.7954, -61.7555, -9.09563, 0.81 ) }
    dend_26 { pt3dadd( -14.4923, -61.9009, -9.41124, 0.81 ) }
    dend_26 { pt3dadd( -15.3908, -62.0697, -9.8187, 0.44 ) }
    dend_26 { pt3dadd( -15.9426, -62.2026, -10.0972, 0.44 ) }
    dend_26 { pt3dadd( -16.4252, -62.2853, -10.3447, 0.59 ) }
    dend_26 { pt3dadd( -16.7923, -62.2927, -10.5476, 0.74 ) }
    dend_26 { pt3dadd( -17.3031, -62.2223, -10.84, 0.74 ) }
    dend_26 { pt3dadd( -17.8352, -62.1216, -11.1888, 0.66 ) }
    dend_26 { pt3dadd( -18.2019, -62.0607, -11.4364, 0.52 ) }
    dend_26 { pt3dadd( -18.9248, -61.992, -11.9394, 0.52 ) }
    dend_26 { pt3dadd( -19.5889, -61.9854, -12.3972, 0.52 ) }
    dend_26 { pt3dadd( -20.363, -62.0308, -12.8887, 0.66 ) }
    dend_26 { pt3dadd( -21.2632, -62.1271, -13.3957, 0.88 ) }
    dend_26 { pt3dadd( -22.1086, -62.2363, -13.8314, 1.03 ) }
    dend_26 { pt3dadd( -22.7137, -62.3099, -14.1225, 1.03 ) }
    dend_26 { pt3dadd( -23.4125, -62.3675, -14.4475, 0.96 ) }
    dend_26 { pt3dadd( -24.0595, -62.3766, -14.7323, 0.74 ) }
    dend_26 { pt3dadd( -24.952, -62.3232, -15.1298, 0.59 ) }
    dend_26 { pt3dadd( -25.474, -62.2786, -15.3596, 0.59 ) }
    dend_26 { pt3dadd( -26.3469, -62.2301, -15.7452, 0.74 ) }
    dend_26 { pt3dadd( -27.0964, -62.2139, -16.0878, 0.74 ) }
    dend_26 { pt3dadd( -27.8678, -62.2364, -16.477, 0.52 ) }
    dend_26 { pt3dadd( -28.5104, -62.3072, -16.8245, 0.59 ) }
    dend_26 { pt3dadd( -29.3277, -62.4996, -17.2774, 0.59 ) }
    dend_26 { pt3dadd( -30.0715, -62.7405, -17.6632, 0.74 ) }
    dend_26 { pt3dadd( -30.8483, -63.0304, -18.0293, 0.74 ) }
    dend_26 { pt3dadd( -31.4972, -63.2759, -18.3127, 0.74 ) }
    dend_26 { pt3dadd( -32.4238, -63.5883, -18.702, 0.74 ) }
    dend_26 { pt3dadd( -33.344, -63.8536, -19.0692, 0.74 ) }
    dend_26 { pt3dadd( -34.3553, -64.1125, -19.4486, 0.88 ) }
    dend_26 { pt3dadd( -34.899, -64.2382, -19.6543, 0.88 ) }
    dend_26 { pt3dadd( -35.7841, -64.4336, -20.0442, 0.96 ) }
    dend_26 { pt3dadd( -36.7735, -64.6249, -20.5365, 0.96 ) }
    dend_26 { pt3dadd( -37.6727, -64.7808, -21.0263, 0.66 ) }
    dend_26 { pt3dadd( -38.2712, -64.9104, -21.3674, 0.59 ) }
    dend_26 { pt3dadd( -39.2049, -65.2081, -21.9142, 0.59 ) }
    dend_26 { pt3dadd( -40.5786, -65.7769, -22.7132, 0.81 ) }
    dend_26 { pt3dadd( -41.3221, -66.1503, -23.1526, 0.96 ) }
    dend_26 { pt3dadd( -42.3171, -66.7008, -23.7315, 0.96 ) }
    dend_26 { pt3dadd( -43.6387, -67.4508, -24.4608, 0.96 ) }
    dend_26 { pt3dadd( -44.6475, -68.0096, -24.9673, 0.96 ) }
    dend_26 { pt3dadd( -45.4336, -68.4217, -25.3113, 0.96 ) }
    dend_26 { pt3dadd( -46.1683, -68.7593, -25.5935, 0.81 ) }
    dend_26 { pt3dadd( -46.9341, -69.0458, -25.9072, 0.88 ) }
    dend_26 { pt3dadd( -47.7158, -69.2391, -26.2488, 0.88 ) }
    dend_26 { pt3dadd( -48.438, -69.3328, -26.5824, 0.66 ) }
    dend_26 { pt3dadd( -48.9863, -69.3861, -26.8451, 0.66 ) }
    dend_26 { pt3dadd( -49.5403, -69.4701, -27.1148, 0.59 ) }
    dend_26 { pt3dadd( -50.1032, -69.6284, -27.3799, 0.59 ) }
    dend_26 { pt3dadd( -50.8255, -69.961, -27.7201, 0.81 ) }
    dend_26 { pt3dadd( -51.4058, -70.2827, -27.9791, 0.81 ) }
    dend_26 { pt3dadd( -52.2359, -70.7465, -28.3447, 0.52 ) }
    dend_26 { pt3dadd( -53.0268, -71.141, -28.6898, 0.66 ) }
    dend_26 { pt3dadd( -53.7759, -71.4481, -29.0157, 0.66 ) }
    dend_26 { pt3dadd( -54.7553, -71.7263, -29.4265, 0.66 ) }
    dend_26 { pt3dadd( -55.6322, -71.8641, -29.7903, 0.88 ) }
    dend_26 { pt3dadd( -56.5744, -71.9213, -30.1736, 0.88 ) }
    dend_26 { pt3dadd( -57.3759, -71.9239, -30.4934, 0.81 ) }
    dend_26 { pt3dadd( -58.2238, -71.9303, -30.892, 0.88 ) }
    dend_26 { pt3dadd( -59.1071, -71.973, -31.4057, 1.03 ) }
    dend_26 { pt3dadd( -59.7644, -72.0486, -31.8561, 1.03 ) }
    dend_26 { pt3dadd( -60.4253, -72.1965, -32.41, 0.81 ) }
    dend_26 { pt3dadd( -60.9793, -72.3929, -32.942, 0.81 ) }
    dend_26 { pt3dadd( -62.1028, -73.041, -34.253, 0.44 ) }
    dend_26 { pt3dadd( -62.7096, -73.5442, -35.1099, 0.66 ) }
    dend_26 { pt3dadd( -63.113, -73.9709, -35.7518, 0.81 ) }
    dend_26 { pt3dadd( -63.6208, -74.5956, -36.6389, 1.03 ) }
    dend_26 { pt3dadd( -63.8408, -74.8823, -37.0296, 1.11 ) }
    dend_26 { pt3dadd( -64.5039, -75.6364, -38.0697, 0.37 ) }
    dend_26 { pt3dadd( -65.016, -76.0627, -38.6902, 0.37 ) }
    dend_26 { pt3dadd( -65.4199, -76.3381, -39.109, 1.69 ) }
    dend_26 { pt3dadd( -65.9906, -76.6655, -39.626, 2.06 ) }
    dend_26 { pt3dadd( -66.3967, -76.862, -39.9305, 2.06 ) }
    dend_26 { pt3dadd( -67.6232, -77.3973, -40.7332, 0.59 ) }
    dend_26 { pt3dadd( -68.7158, -77.8119, -41.3475, 0.44 ) }
    dend_26 { pt3dadd( -69.8925, -78.2112, -41.9532, 0.52 ) }
    dend_26 { pt3dadd( -70.5313, -78.4019, -42.2586, 0.74 ) }
    dend_26 { pt3dadd( -71.3758, -78.6318, -42.6354, 0.88 ) }
    dend_26 { pt3dadd( -72.2548, -78.8626, -43.0101, 0.66 ) }
    dend_26 { pt3dadd( -72.5559, -78.9377, -43.1157, 0.44 ) }
    dend_26 { pt3dadd( -73.2624, -79.0869, -43.3256, 0.37 ) }
    dend_26 { pt3dadd( -74.0717, -79.1913, -43.52, 0.96 ) }
    dend_26 { pt3dadd( -75.0667, -79.2759, -43.6844, 1.62 ) }
    dend_26 { pt3dadd( -75.9485, -79.3563, -43.7648, 1.77 ) }
    dend_26 { pt3dadd( -76.9657, -79.4727, -43.8135, 1.77 ) }
    dend_26 { pt3dadd( -77.9041, -79.6146, -43.8387, 1.11 ) }
    dend_26 { pt3dadd( -78.7737, -79.766, -43.8507, 0.66 ) }
    dend_26 { pt3dadd( -79.7722, -79.9302, -43.8746, 0.52 ) }
    dend_26 { pt3dadd( -80.9722, -80.0872, -43.871, 0.44 ) }
    dend_26 { pt3dadd( -81.8424, -80.1743, -43.8869, 0.44 ) }
    dend_26 { pt3dadd( -82.4846, -80.2302, -43.9242, 0.59 ) }
    dend_26 { pt3dadd( -83.0478, -80.2832, -43.9698, 0.59 ) }
    dend_26 { pt3dadd( -83.8014, -80.3717, -44.0595, 0.44 ) }
    dend_26 { pt3dadd( -85.4018, -80.596, -44.2799, 0.74 ) }
    dend_26 { pt3dadd( -86.1781, -80.7104, -44.3833, 0.81 ) }
    dend_26 { pt3dadd( -87.0236, -80.8487, -44.5087, 0.81 ) }
    dend_26 { pt3dadd( -87.9096, -81.0057, -44.6766, 0.96 ) }
    dend_26 { pt3dadd( -88.7531, -81.1769, -44.9146, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_26 { pt3dadd( -89.4504, -81.3266, -45.1766, 1.11 ) }
    dend_26 { pt3dadd( -90.0713, -81.4532, -45.4997, 0.81 ) }
    dend_26 { pt3dadd( -91.0165, -81.6244, -46.0586, 0.59 ) }
    dend_26 { pt3dadd( -91.7543, -81.7211, -46.5333, 1.18 ) }
    dend_26 { pt3dadd( -92.7728, -81.8134, -47.2195, 1.47 ) }
    dend_26 { pt3dadd( -93.2988, -81.8538, -47.5746, 1.62 ) }
    dend_26 { pt3dadd( -93.6224, -81.8679, -47.8093, 1.62 ) }
    dend_26 { pt3dadd( -94.1633, -81.8645, -48.206, 1.11 ) }
    dend_26 { pt3dadd( -94.8087, -81.8212, -48.6214, 0.66 ) }
    dend_26 { pt3dadd( -95.4946, -81.7106, -48.992, 0.44 ) }
    dend_26 { pt3dadd( -96.3396, -81.5012, -49.3766, 0.37 ) }
    dend_26 { pt3dadd( -97.2795, -81.2081, -49.7824, 0.37 ) }
    dend_26 { pt3dadd( -97.8848, -80.9894, -50.0185, 0.37 ) }
    dend_26 { pt3dadd( -98.7433, -80.6432, -50.3174, 0.44 ) }
    dend_26 { pt3dadd( -99.8951, -80.1743, -50.7203, 0.74 ) }
    dend_26 { pt3dadd( -100.443, -79.9571, -50.9257, 1.18 ) }
    dend_26 { pt3dadd( -100.919, -79.7783, -51.1179, 1.33 ) }
    dend_26 { pt3dadd( -101.493, -79.5806, -51.355, 1.33 ) }
    dend_26 { pt3dadd( -102.188, -79.3195, -51.676, 0.81 ) }
    dend_26 { pt3dadd( -103.108, -78.9315, -52.1217, 0.29 ) }
    dend_26 { pt3dadd( -103.751, -78.6436, -52.4275, 0.29 ) }
    dend_26 { pt3dadd( -104.75, -78.176, -52.8872, 0.37 ) }
    dend_26 { pt3dadd( -105.404, -77.8552, -53.1679, 0.44 ) }
    dend_26 { pt3dadd( -106.317, -77.4266, -53.6579, 0.44 ) }
    dend_26 { pt3dadd( -107.399, -76.9554, -54.3013, 1.4 ) }
    dend_26 { pt3dadd( -108.022, -76.6935, -54.6879, 1.92 ) }
    dend_26 { pt3dadd( -108.289, -76.5871, -54.8618, 2.28 ) }
    dend_26 { pt3dadd( -108.867, -76.3815, -55.2703, 2.28 ) }
    dend_26 { pt3dadd( -111.183, -75.6045, -57.0171, 0.29 ) }
    dend_26 { pt3dadd( -111.577, -75.4716, -57.3366, 0.52 ) }
    dend_26 { pt3dadd( -112.064, -75.2997, -57.7551, 0.52 ) }
    dend_26 { pt3dadd( -112.611, -75.1066, -58.2054, 0.74 ) }
    dend_26 { pt3dadd( -113.076, -74.9393, -58.5848, 0.74 ) }
    dend_26 { pt3dadd( -113.689, -74.7265, -59.0957, 0.44 ) }
    dend_26 { pt3dadd( -114.375, -74.4924, -59.627, 0.37 ) }
    dend_26 { pt3dadd( -114.954, -74.3091, -60.1337, 0.81 ) }
    dend_26 { pt3dadd( -115.354, -74.1927, -60.5168, 0.96 ) }
    dend_26 { pt3dadd( -115.933, -74.0255, -61.1335, 0.96 ) }
    dend_26 { pt3dadd( -116.614, -73.8423, -61.9274, 0.66 ) }
    dend_26 { pt3dadd( -117.17, -73.7186, -62.6206, 0.29 ) }
    dend_26 { pt3dadd( -117.796, -73.5952, -63.3798, 0.66 ) }
    dend_26 { pt3dadd( -118.2, -73.5152, -63.8407, 0.66 ) }
    dend_26 { pt3dadd( -119.074, -73.3517, -64.7393, 0.52 ) }
    dend_26 { pt3dadd( -119.673, -73.23, -65.2643, 0.74 ) }
    dend_26 { pt3dadd( -120.966, -72.954, -66.2867, 0.88 ) }
    dend_26 { pt3dadd( -121.584, -72.8079, -66.7751, 1.11 ) }
    dend_26 { pt3dadd( -122.024, -72.6967, -67.1216, 1.33 ) }
    dend_26 { pt3dadd( -122.78, -72.4666, -67.7, 0.44 ) }
    dend_26 { pt3dadd( -123.589, -72.1512, -68.2786, 0.44 ) }
    dend_26 { pt3dadd( -124.322, -71.7889, -68.7964, 0.29 ) }
    dend_26 { pt3dadd( -125.394, -71.1426, -69.6525, 0.96 ) }
    dend_26 { pt3dadd( -125.847, -70.8494, -70.081, 1.18 ) }
    dend_26 { pt3dadd( -126.394, -70.4798, -70.649, 2.21 ) }
    dend_26 { pt3dadd( -126.706, -70.267, -70.9907, 2.43 ) }
    dend_26 { pt3dadd( -127.307, -69.8659, -71.6948, 2.43 ) }
    dend_26 { pt3dadd( -128.162, -69.3632, -72.678, 2.21 ) }
    dend_26 { pt3dadd( -129.261, -68.8477, -73.8756, 0.29 ) }
    dend_26 { pt3dadd( -129.865, -68.6251, -74.4988, 0.44 ) }
    dend_26 { pt3dadd( -130.267, -68.504, -74.8729, 0.52 ) }
    dend_26 { pt3dadd( -131.722, -68.1152, -76.1234, 0.29 ) }
    dend_26 { pt3dadd( -132.48, -67.9343, -76.7159, 0.29 ) }
    dend_26 { pt3dadd( -133.13, -67.7965, -77.1602, 0.29 ) }
    dend_26 { pt3dadd( -133.908, -67.6569, -77.6681, 0.29 ) }
    dend_26 { pt3dadd( -135.036, -67.468, -78.3763, 0.96 ) }
    dend_26 { pt3dadd( -135.55, -67.3754, -78.677, 1.47 ) }
    dend_26 { pt3dadd( -136.042, -67.2745, -78.9319, 1.47 ) }
    dend_26 { pt3dadd( -137.189, -66.9401, -79.529, 0.29 ) }
    dend_26 { pt3dadd( -137.647, -66.7735, -79.7704, 0.29 ) }
    dend_26 { pt3dadd( -138.413, -66.437, -80.207, 0.74 ) }
    dend_26 { pt3dadd( -138.809, -66.242, -80.4409, 0.81 ) }
    dend_26 { pt3dadd( -139.068, -66.1002, -80.5886, 0.81 ) }
    dend_26 { pt3dadd( -139.5, -65.8296, -80.8363, 0.29 ) }
    dend_26 { pt3dadd( -139.863, -65.5654, -81.0591, 0.22 ) }
    dend_26 { pt3dadd( -140.669, -64.9384, -81.6058, 0.22 ) }
    dend_26 { pt3dadd( -141.563, -64.2499, -82.251, 0.22 ) }
    dend_26 { pt3dadd( -142.19, -63.7945, -82.6919, 0.88 ) }
    dend_26 { pt3dadd( -142.719, -63.4255, -83.0473, 1.11 ) }
    dend_26 { pt3dadd( -142.947, -63.2725, -83.1913, 1.4 ) }
    dend_26 { pt3dadd( -143.457, -62.9445, -83.4793, 1.4 ) }
    dend_26 { pt3dadd( -143.988, -62.622, -83.7286, 0.96 ) }
    dend_26 { pt3dadd( -145.099, -62.0117, -84.1993, 0.29 ) }
    dend_26 { pt3dadd( -145.587, -61.7656, -84.3854, 0.59 ) }
    dend_26 { pt3dadd( -145.918, -61.6012, -84.4984, 0.59 ) }
    dend_26 { pt3dadd( -146.389, -61.3681, -84.6454, 0.37 ) }
    dend_26 { pt3dadd( -147.767, -60.6831, -85.0389, 0.22 ) }
    dend_26 { pt3dadd( -148.615, -60.2558, -85.2818, 0.22 ) }
    dend_26 { pt3dadd( -149.19, -59.9626, -85.4475, 0.22 ) }
    dend_26 { pt3dadd( -150.34, -59.3499, -85.7806, 1.25 ) }
    dend_26 { pt3dadd( -150.909, -59.0231, -85.9468, 1.69 ) }
    dend_26 { pt3dadd( -151.325, -58.764, -86.0693, 1.92 ) }
    dend_26 { pt3dadd( -151.873, -58.3905, -86.2308, 1.62 ) }
    dend_26 { pt3dadd( -152.809, -57.746, -86.506, 0.81 ) }
    dend_26 { pt3dadd( -153.405, -57.3346, -86.6813, 0.81 ) }
    dend_26 { pt3dadd( -154.459, -56.6382, -86.9497, 0.37 ) }
    dend_26 { pt3dadd( -155.19, -56.1722, -87.116, 0.37 ) }
    dend_26 { pt3dadd( -155.626, -55.9125, -87.2065, 0.37 ) }
    dend_26 { pt3dadd( -156.538, -55.4102, -87.3806, 0.29 ) }
    dend_26 { pt3dadd( -157.454, -54.9275, -87.5409, 0.29 ) }
    dend_26 { pt3dadd( -158.613, -54.3316, -87.698, 0.29 ) }
    dend_26 { pt3dadd( -159.187, -54.0407, -87.7497, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_26 { pt3dadd( -159.6, -53.8277, -87.7745, 0.44 ) }
    dend_26 { pt3dadd( -160.145, -53.5407, -87.8, 0.29 ) }
    dend_26 { pt3dadd( -161.324, -52.927, -87.8484, 1.4 ) }
    dend_26 { pt3dadd( -162.144, -52.5534, -87.8932, 1.77 ) }
    dend_26 { pt3dadd( -162.498, -52.4104, -87.9236, 1.77 ) }
    dend_26 { pt3dadd( -163.431, -52.0622, -88.0201, 0.66 ) }
    dend_26 { pt3dadd( -164.128, -51.8076, -88.1078, 0.66 ) }
    dend_26 { pt3dadd( -164.792, -51.5783, -88.2013, 0.81 ) }
    dend_26 { pt3dadd( -165.561, -51.3246, -88.3608, 0.81 ) }
    dend_26 { pt3dadd( -166.542, -50.9727, -88.6462, 0.37 ) }
    dend_26 { pt3dadd( -167.765, -50.4746, -89.0656, 0.29 ) }
    dend_26 { pt3dadd( -168.45, -50.1709, -89.331, 0.29 ) }
    dend_26 { pt3dadd( -169.185, -49.8207, -89.6417, 1.11 ) }
    dend_26 { pt3dadd( -170.145, -49.3132, -90.0851, 1.77 ) }
    dend_26 { pt3dadd( -170.877, -48.8902, -90.4612, 0.88 ) }
    dend_26 { pt3dadd( -171.79, -48.3444, -90.9593, 0.29 ) }
    dend_26 { pt3dadd( -173.171, -47.5323, -91.7286, 0.29 ) }
    dend_26 { pt3dadd( -173.898, -47.119, -92.1283, 0.66 ) }
    dend_26 { pt3dadd( -174.45, -46.8266, -92.4196, 0.88 ) }
    dend_26 { pt3dadd( -175.592, -46.2391, -92.995, 0.29 ) }
    dend_26 { pt3dadd( -176.342, -45.8631, -93.3759, 0.29 ) }
    dend_26 { pt3dadd( -176.99, -45.5554, -93.7146, 0.66 ) }
    dend_26 { pt3dadd( -177.525, -45.3004, -94.0279, 0.66 ) }
    dend_26 { pt3dadd( -178.266, -44.9536, -94.4928, 0.29 ) }
    dend_26 { pt3dadd( -178.919, -44.6614, -94.9154, 0.88 ) }
    dend_26 { pt3dadd( -179.346, -44.4634, -95.1991, 0.88 ) }
    dend_26 { pt3dadd( -180.182, -44.029, -95.7653, 0.29 ) }
    dend_26 { pt3dadd( -181.157, -43.4267, -96.3361, 0.59 ) }
    dend_26 { pt3dadd( -181.459, -43.19, -96.4797, 0.59 ) }
    dend_26 { pt3dadd( -181.893, -42.799, -96.6344, 0.59 ) }
    dend_26 { pt3dadd( -182.585, -42.1566, -96.7984, 0.37 ) }
    dend_26 { pt3dadd( -183.342, -41.4107, -96.9122, 0.29 ) }
    dend_26 { pt3dadd( -184.409, -40.3114, -96.9913, 0.29 ) }
    dend_26 { pt3dadd( -185.402, -39.2525, -97.0048, 1.25 ) }
    dend_26 { pt3dadd( -186.005, -38.5641, -97.0171, 1.4 ) }
    dend_26 { pt3dadd( -186.385, -38.1023, -97.0345, 1.4 ) }
    dend_26 { pt3dadd( -186.868, -37.4896, -97.077, 1.03 ) }
    dend_26 { pt3dadd( -187.444, -36.741, -97.1647, 0.29 ) }
    dend_26 { pt3dadd( -188.158, -35.7707, -97.3369, 0.29 ) }
    dend_26 { pt3dadd( -188.762, -34.8911, -97.4993, 0.29 ) }
    dend_26 { pt3dadd( -189.505, -33.6923, -97.7229, 1.11 ) }
    dend_26 { pt3dadd( -189.772, -33.247, -97.8091, 1.55 ) }
    dend_26 { pt3dadd( -190.247, -32.437, -97.9668, 0.66 ) }
    dend_26 { pt3dadd( -191.001, -31.1317, -98.2124, 0.29 ) }
    dend_26 { pt3dadd( -192.008, -29.4324, -98.5355, 0.29 ) }
    dend_26 { pt3dadd( -192.631, -28.3905, -98.731, 0.29 ) }
    dend_26 { pt3dadd( -193.379, -27.131, -98.9611, 0.44 ) }
    dend_26 { pt3dadd( -193.794, -26.4274, -99.0855, 0.44 ) }
    dend_26 { pt3dadd( -194.245, -25.6605, -99.2212, 0.59 ) }
    dend_26 { pt3dadd( -194.855, -24.6216, -99.4048, 0.29 ) }
    dend_26 { pt3dadd( -195.308, -23.8105, -99.5374, 0.29 ) }
    dend_26 { pt3dadd( -195.696, -23.0282, -99.6528, 0.44 ) }
    dend_26 { pt3dadd( -196.034, -22.2177, -99.7645, 0.29 ) }
    dend_26 { pt3dadd( -196.372, -21.3973, -99.8851, 0.59 ) }
    dend_26 { pt3dadd( -196.786, -20.4484, -100.04, 1.03 ) }
    dend_26 { pt3dadd( -197.022, -19.9486, -100.131, 1.03 ) }
    dend_26 { pt3dadd( -197.673, -18.7659, -100.387, 0.22 ) }
    dend_26 { pt3dadd( -198.366, -17.7276, -100.66, 0.22 ) }
    dend_26 { pt3dadd( -199.012, -16.8594, -100.917, 0.22 ) }
    dend_26 { pt3dadd( -199.54, -16.2544, -101.128, 0.29 ) }
    dend_26 { pt3dadd( -199.887, -15.9443, -101.264, 0.29 ) }
    dend_26 { pt3dadd( -200.337, -15.6599, -101.43, 0.52 ) }
    dend_26 { pt3dadd( -200.625, -15.585, -101.524, 0.52 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 63/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -10.4148, -61.5451, -7.73189, 0.88 ) }
    dend_21 { pt3dadd( -10.6903, -62.3603, -8.02884, 0.88 ) }
    dend_21 { pt3dadd( -10.8898, -63.0302, -8.26494, 0.88 ) }
    dend_21 { pt3dadd( -11.0535, -63.6775, -8.50248, 0.88 ) }
    dend_21 { pt3dadd( -11.1866, -64.2661, -8.71577, 1.03 ) }
    dend_21 { pt3dadd( -11.3049, -64.853, -8.923, 1.03 ) }
    dend_21 { pt3dadd( -11.4132, -65.4112, -9.11635, 0.96 ) }
    dend_21 { pt3dadd( -11.5165, -66.0515, -9.36333, 0.96 ) }
    dend_21 { pt3dadd( -11.5907, -66.5404, -9.54929, 1.11 ) }
    dend_21 { pt3dadd( -11.6637, -66.9558, -9.70502, 1.11 ) }
    dend_21 { pt3dadd( -11.7762, -67.4423, -9.89095, 1.18 ) }
    dend_21 { pt3dadd( -11.977, -68.1024, -10.1598, 1.18 ) }
    dend_21 { pt3dadd( -12.1976, -68.7658, -10.4418, 1.11 ) }
    dend_21 { pt3dadd( -12.3445, -69.1499, -10.6177, 1.25 ) }
    dend_21 { pt3dadd( -12.5871, -69.7033, -10.8767, 1.25 ) }
    dend_21 { pt3dadd( -12.8289, -70.1988, -11.1317, 1.47 ) }
    dend_21 { pt3dadd( -13.0786, -70.6433, -11.3819, 1.69 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 80/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 164.328, 186.364, -115.949, 0.88 ) }
    dend_16 { pt3dadd( 164.597, 185.725, -116.05, 0.88 ) }
    dend_16 { pt3dadd( 164.734, 185.411, -116.109, 1.11 ) }
    dend_16 { pt3dadd( 164.87, 185.157, -116.179, 1.25 ) }
    dend_16 { pt3dadd( 165.125, 184.696, -116.32, 1.03 ) }
    dend_16 { pt3dadd( 165.47, 184.084, -116.512, 0.15 ) }
    dend_16 { pt3dadd( 165.666, 183.743, -116.62, 0.37 ) }
    dend_16 { pt3dadd( 165.759, 183.578, -116.679, 0.37 ) }
    dend_16 { pt3dadd( 166.323, 182.59, -117.017, 0.15 ) }
    dend_16 { pt3dadd( 166.506, 182.262, -117.125, 0.29 ) }
    dend_16 { pt3dadd( 166.714, 181.883, -117.239, 0.15 ) }
    dend_16 { pt3dadd( 166.907, 181.499, -117.335, 0.15 ) }
    dend_16 { pt3dadd( 167.068, 181.146, -117.405, 0.15 ) }
    dend_16 { pt3dadd( 167.199, 180.838, -117.438, 0.22 ) }
    dend_16 { pt3dadd( 167.32, 180.539, -117.446, 0.22 ) }
    dend_16 { pt3dadd( 167.477, 180.177, -117.45, 0.29 ) }
    dend_16 { pt3dadd( 167.673, 179.733, -117.458, 0.29 ) }
    dend_16 { pt3dadd( 168.03, 178.954, -117.459, 0.15 ) }
    dend_16 { pt3dadd( 168.469, 177.965, -117.461, 0.59 ) }
    dend_16 { pt3dadd( 168.587, 177.69, -117.463, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_16 { pt3dadd( 168.724, 177.366, -117.469, 0.88 ) }
    dend_16 { pt3dadd( 169.115, 176.402, -117.504, 0.22 ) }
    dend_16 { pt3dadd( 169.411, 175.643, -117.518, 0.22 ) }
    dend_16 { pt3dadd( 169.782, 174.676, -117.499, 0.22 ) }
    dend_16 { pt3dadd( 169.959, 174.208, -117.479, 0.59 ) }
    dend_16 { pt3dadd( 170.07, 173.913, -117.459, 0.74 ) }
    dend_16 { pt3dadd( 170.186, 173.592, -117.43, 0.52 ) }
    dend_16 { pt3dadd( 170.506, 172.723, -117.363, 0.22 ) }
    dend_16 { pt3dadd( 170.813, 171.891, -117.333, 1.33 ) }
    dend_16 { pt3dadd( 170.915, 171.606, -117.33, 1.4 ) }
    dend_16 { pt3dadd( 171.201, 170.704, -117.355, 0.22 ) }
    dend_16 { pt3dadd( 171.362, 170.189, -117.39, 0.15 ) }
    dend_16 { pt3dadd( 171.655, 169.233, -117.448, 0.15 ) }
    dend_16 { pt3dadd( 171.821, 168.6, -117.492, 0.29 ) }
    dend_16 { pt3dadd( 171.938, 168.062, -117.521, 0.29 ) }
    dend_16 { pt3dadd( 172.115, 167.148, -117.549, 0.15 ) }
    dend_16 { pt3dadd( 172.252, 166.38, -117.554, 0.15 ) }
    dend_16 { pt3dadd( 172.493, 164.878, -117.542, 0.15 ) }
    dend_16 { pt3dadd( 172.67, 163.511, -117.516, 0.15 ) }
    dend_16 { pt3dadd( 172.864, 161.835, -117.491, 0.15 ) }
    dend_16 { pt3dadd( 172.926, 161.158, -117.487, 0.22 ) }
    dend_16 { pt3dadd( 172.941, 160.88, -117.489, 0.96 ) }
    dend_16 { pt3dadd( 172.941, 160.451, -117.502, 1.18 ) }
    dend_16 { pt3dadd( 172.911, 159.415, -117.589, 0.15 ) }
    dend_16 { pt3dadd( 172.907, 158.916, -117.637, 0.29 ) }
    dend_16 { pt3dadd( 172.902, 158.184, -117.736, 0.15 ) }
    dend_16 { pt3dadd( 172.904, 157.75, -117.811, 0.29 ) }
    dend_16 { pt3dadd( 172.908, 157.431, -117.869, 0.29 ) }
    dend_16 { pt3dadd( 172.931, 156.363, -118.072, 0.15 ) }
    dend_16 { pt3dadd( 172.968, 155.467, -118.262, 0.15 ) }
    dend_16 { pt3dadd( 173.009, 154.806, -118.414, 0.52 ) }
    dend_16 { pt3dadd( 173.037, 154.571, -118.479, 0.66 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 32/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 164.328, 186.364, -115.949, 0.22 ) }
    dend_15 { pt3dadd( 165.423, 186.362, -116.308, 0.22 ) }
    dend_15 { pt3dadd( 166.104, 186.348, -116.478, 0.52 ) }
    dend_15 { pt3dadd( 166.242, 186.344, -116.509, 0.52 ) }
    dend_15 { pt3dadd( 167.419, 186.312, -116.762, 0.22 ) }
    dend_15 { pt3dadd( 167.807, 186.308, -116.847, 0.59 ) }
    dend_15 { pt3dadd( 168.152, 186.306, -116.924, 0.59 ) }
    dend_15 { pt3dadd( 169.603, 186.261, -117.246, 0.22 ) }
    dend_15 { pt3dadd( 169.838, 186.255, -117.299, 0.44 ) }
    dend_15 { pt3dadd( 169.985, 186.254, -117.332, 0.44 ) }
    dend_15 { pt3dadd( 171.112, 186.251, -117.601, 0.15 ) }
    dend_15 { pt3dadd( 171.31, 186.246, -117.653, 0.37 ) }
    dend_15 { pt3dadd( 171.531, 186.235, -117.715, 0.37 ) }
    dend_15 { pt3dadd( 172.341, 186.163, -117.969, 0.15 ) }
    dend_15 { pt3dadd( 172.79, 186.111, -118.102, 0.15 ) }
    dend_15 { pt3dadd( 173.032, 186.072, -118.171, 0.29 ) }
    dend_15 { pt3dadd( 173.265, 186.019, -118.232, 0.29 ) }
    dend_15 { pt3dadd( 173.828, 185.833, -118.368, 0.22 ) }
    dend_15 { pt3dadd( 173.973, 185.774, -118.402, 0.44 ) }
    dend_15 { pt3dadd( 174.594, 185.469, -118.553, 0.22 ) }
    dend_15 { pt3dadd( 174.806, 185.356, -118.607, 0.44 ) }
    dend_15 { pt3dadd( 175.025, 185.236, -118.665, 0.44 ) }
    dend_15 { pt3dadd( 176.214, 184.548, -118.992, 0.22 ) }
    dend_15 { pt3dadd( 176.957, 184.082, -119.217, 0.22 ) }
    dend_15 { pt3dadd( 177.342, 183.828, -119.332, 0.37 ) }
    dend_15 { pt3dadd( 177.543, 183.686, -119.39, 0.37 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -49.6488, 202.329, 142.087, 0.88 ) }
    dend_8 { pt3dadd( -47.642, 207.215, 147.777, 0.88 ) }
    dend_8 { pt3dadd( -45.9504, 212.715, 153.009, 0.88 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 61/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -49.6488, 202.329, 142.087, 0.22 ) }
    dend_7 { pt3dadd( -46.5587, 209.507, 148.555, 0.88 ) }
    dend_7 { pt3dadd( -42.0228, 215.369, 155.445, 0.88 ) }
    dend_7 { pt3dadd( -36.2605, 219.622, 162.577, 0.88 ) }
    dend_7 { pt3dadd( -30.0292, 222.525, 169.99, 0.88 ) }
    dend_7 { pt3dadd( -23.2272, 226.317, 176.433, 0.88 ) }
    dend_7 { pt3dadd( -16.0618, 231.17, 181.661, 0.88 ) }
    dend_7 { pt3dadd( -9.75941, 236.455, 187.547, 0.88 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 69/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 39.8256, -92.0686, 38.7895, 1.11 ) }
    dend_34 { pt3dadd( 41.4526, -91.8585, 39.6091, 1.11 ) }
    dend_34 { pt3dadd( 42.4461, -91.7888, 40.1297, 0.96 ) }
    dend_34 { pt3dadd( 43.4844, -91.7802, 40.6942, 0.81 ) }
    dend_34 { pt3dadd( 44.1411, -91.8439, 41.068, 0.81 ) }
    dend_34 { pt3dadd( 45.2515, -92.0478, 41.7308, 0.81 ) }
    dend_34 { pt3dadd( 45.9466, -92.1867, 42.1584, 1.03 ) }
    dend_34 { pt3dadd( 46.582, -92.3631, 42.5843, 1.03 ) }
    dend_34 { pt3dadd( 47.0846, -92.5013, 42.8913, 1.03 ) }
    dend_34 { pt3dadd( 48.1549, -92.7152, 43.4357, 0.59 ) }
    dend_34 { pt3dadd( 48.9216, -92.7166, 43.6764, 0.59 ) }
    dend_34 { pt3dadd( 49.7388, -92.6089, 43.8148, 0.81 ) }
    dend_34 { pt3dadd( 50.5534, -92.4787, 43.849, 0.81 ) }
    dend_34 { pt3dadd( 51.552, -92.3519, 43.8333, 0.66 ) }
    dend_34 { pt3dadd( 52.5559, -92.2926, 43.7923, 0.66 ) }
    dend_34 { pt3dadd( 53.8948, -92.4319, 43.7279, 0.74 ) }
    dend_34 { pt3dadd( 54.9919, -92.8568, 43.7719, 0.88 ) }
    dend_34 { pt3dadd( 55.8141, -93.4049, 43.9074, 0.88 ) }
    dend_34 { pt3dadd( 56.4873, -93.9843, 44.0975, 0.81 ) }
    dend_34 { pt3dadd( 57.0941, -94.5592, 44.3112, 0.81 ) }
    dend_34 { pt3dadd( 58.2233, -95.6678, 44.7886, 0.59 ) }
    dend_34 { pt3dadd( 59.31, -96.7035, 45.2905, 0.52 ) }
    dend_34 { pt3dadd( 60.1576, -97.4131, 45.6662, 0.66 ) }
    dend_34 { pt3dadd( 60.7807, -97.8665, 45.9332, 0.66 ) }
    dend_34 { pt3dadd( 61.6386, -98.4141, 46.2785, 0.81 ) }
    dend_34 { pt3dadd( 62.206, -98.7457, 46.481, 0.81 ) }
    dend_34 { pt3dadd( 63.2223, -99.2977, 46.7988, 0.66 ) }
    dend_34 { pt3dadd( 63.9519, -99.7138, 46.9713, 0.81 ) }
    dend_34 { pt3dadd( 64.7763, -100.242, 47.1839, 0.81 ) }
    dend_34 { pt3dadd( 65.6242, -100.831, 47.43, 0.88 ) }
    dend_34 { pt3dadd( 66.3973, -101.401, 47.6828, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_34 { pt3dadd( 67.1224, -101.933, 47.9395, 0.52 ) }
    dend_34 { pt3dadd( 68.186, -102.704, 48.2769, 0.88 ) }
    dend_34 { pt3dadd( 68.9537, -103.284, 48.4663, 0.88 ) }
    dend_34 { pt3dadd( 69.5709, -103.793, 48.5747, 1.03 ) }
    dend_34 { pt3dadd( 70.2702, -104.457, 48.6437, 0.81 ) }
    dend_34 { pt3dadd( 70.796, -105.023, 48.679, 0.59 ) }
    dend_34 { pt3dadd( 71.9516, -106.426, 48.7678, 0.59 ) }
    dend_34 { pt3dadd( 72.5624, -107.262, 48.8466, 0.59 ) }
    dend_34 { pt3dadd( 73.0281, -107.917, 48.9164, 0.66 ) }
    dend_34 { pt3dadd( 73.6321, -108.764, 49.1093, 0.37 ) }
    dend_34 { pt3dadd( 74.04, -109.276, 49.2994, 0.37 ) }
    dend_34 { pt3dadd( 74.7855, -109.997, 49.5858, 0.66 ) }
    dend_34 { pt3dadd( 75.2416, -110.362, 49.7672, 0.81 ) }
    dend_34 { pt3dadd( 75.8526, -110.776, 49.9308, 0.81 ) }
    dend_34 { pt3dadd( 76.742, -111.284, 50.0495, 0.44 ) }
    dend_34 { pt3dadd( 78.1538, -112.047, 49.9233, 1.33 ) }
    dend_34 { pt3dadd( 79.9491, -113.034, 49.5772, 1.92 ) }
    dend_34 { pt3dadd( 80.4661, -113.313, 49.4511, 1.84 ) }
    dend_34 { pt3dadd( 81.9302, -114.055, 49.0714, 0.81 ) }
    dend_34 { pt3dadd( 82.902, -114.494, 48.8264, 0.88 ) }
    dend_34 { pt3dadd( 85.8301, -115.578, 48.1301, 0.52 ) }
    dend_34 { pt3dadd( 86.5393, -115.774, 48.0054, 0.52 ) }
    dend_34 { pt3dadd( 87.3435, -115.923, 47.93, 0.52 ) }
    dend_34 { pt3dadd( 88.2163, -116.007, 47.9296, 0.52 ) }
    dend_34 { pt3dadd( 89.1094, -116.006, 48.0476, 1.18 ) }
    dend_34 { pt3dadd( 90.0365, -115.934, 48.3025, 1.69 ) }
    dend_34 { pt3dadd( 90.5802, -115.831, 48.528, 1.92 ) }
    dend_34 { pt3dadd( 91.0589, -115.738, 48.7077, 1.69 ) }
    dend_34 { pt3dadd( 92.1928, -115.561, 49.1426, 0.81 ) }
    dend_34 { pt3dadd( 93.3965, -115.401, 49.6228, 0.52 ) }
    dend_34 { pt3dadd( 94.0809, -115.316, 49.9107, 0.81 ) }
    dend_34 { pt3dadd( 94.5542, -115.257, 50.1167, 0.81 ) }
    dend_34 { pt3dadd( 96.0744, -115.064, 50.7516, 0.37 ) }
    dend_34 { pt3dadd( 97.3937, -114.874, 51.3014, 0.29 ) }
    dend_34 { pt3dadd( 98.4016, -114.694, 51.6732, 0.52 ) }
    dend_34 { pt3dadd( 99.2368, -114.501, 51.9702, 0.88 ) }
    dend_34 { pt3dadd( 99.654, -114.377, 52.0942, 1.18 ) }
    dend_34 { pt3dadd( 100.035, -114.235, 52.1717, 1.4 ) }
    dend_34 { pt3dadd( 100.918, -113.815, 52.2678, 0.88 ) }
    dend_34 { pt3dadd( 102.4, -113.003, 52.3121, 0.44 ) }
    dend_34 { pt3dadd( 103.034, -112.639, 52.3149, 0.44 ) }
    dend_34 { pt3dadd( 103.867, -112.157, 52.3208, 1.18 ) }
    dend_34 { pt3dadd( 104.949, -111.543, 52.3998, 1.4 ) }
    dend_34 { pt3dadd( 105.572, -111.213, 52.4845, 1.4 ) }
    dend_34 { pt3dadd( 106.17, -110.924, 52.6026, 1.18 ) }
    dend_34 { pt3dadd( 106.494, -110.777, 52.6983, 1.18 ) }
    dend_34 { pt3dadd( 107.81, -110.234, 53.1512, 0.29 ) }
    dend_34 { pt3dadd( 108.841, -109.811, 53.5879, 0.29 ) }
    dend_34 { pt3dadd( 109.705, -109.432, 54.0016, 0.29 ) }
    dend_34 { pt3dadd( 110.359, -109.122, 54.3207, 0.44 ) }
    dend_34 { pt3dadd( 110.947, -108.806, 54.612, 0.37 ) }
    dend_34 { pt3dadd( 111.309, -108.589, 54.8014, 0.37 ) }
    dend_34 { pt3dadd( 112.262, -107.939, 55.3537, 1.33 ) }
    dend_34 { pt3dadd( 112.695, -107.59, 55.6073, 1.77 ) }
    dend_34 { pt3dadd( 113.224, -107.117, 55.936, 1.55 ) }
    dend_34 { pt3dadd( 113.773, -106.604, 56.293, 0.74 ) }
    dend_34 { pt3dadd( 114.321, -106.093, 56.6551, 0.52 ) }
    dend_34 { pt3dadd( 114.898, -105.581, 57.0161, 0.29 ) }
    dend_34 { pt3dadd( 115.365, -105.178, 57.3038, 0.29 ) }
    dend_34 { pt3dadd( 115.785, -104.825, 57.5661, 0.66 ) }
    dend_34 { pt3dadd( 116.295, -104.403, 57.8748, 0.66 ) }
    dend_34 { pt3dadd( 117.006, -103.856, 58.2717, 0.29 ) }
    dend_34 { pt3dadd( 117.895, -103.218, 58.7425, 0.29 ) }
    dend_34 { pt3dadd( 118.582, -102.747, 59.098, 0.29 ) }
    dend_34 { pt3dadd( 119.068, -102.428, 59.3533, 0.44 ) }
    dend_34 { pt3dadd( 119.795, -101.942, 59.7048, 1.33 ) }
    dend_34 { pt3dadd( 120.718, -101.308, 60.1293, 2.36 ) }
    dend_34 { pt3dadd( 121.008, -101.108, 60.2602, 2.36 ) }
    dend_34 { pt3dadd( 121.573, -100.702, 60.5307, 2.06 ) }
    dend_34 { pt3dadd( 122.372, -100.148, 60.9238, 0.66 ) }
    dend_34 { pt3dadd( 123.174, -99.5837, 61.3325, 0.29 ) }
    dend_34 { pt3dadd( 123.733, -99.1678, 61.6373, 0.29 ) }
    dend_34 { pt3dadd( 124.481, -98.5609, 62.0875, 0.52 ) }
    dend_34 { pt3dadd( 124.951, -98.166, 62.3843, 0.66 ) }
    dend_34 { pt3dadd( 125.455, -97.7261, 62.7325, 0.29 ) }
    dend_34 { pt3dadd( 125.687, -97.5019, 62.9124, 0.29 ) }
    dend_34 { pt3dadd( 126.201, -96.9293, 63.3911, 0.88 ) }
    dend_34 { pt3dadd( 126.505, -96.551, 63.6912, 1.03 ) }
    dend_34 { pt3dadd( 126.952, -95.9479, 64.1493, 1.03 ) }
    dend_34 { pt3dadd( 127.27, -95.5387, 64.4666, 0.74 ) }
    dend_34 { pt3dadd( 127.533, -95.2271, 64.7328, 0.44 ) }
    dend_34 { pt3dadd( 127.941, -94.8133, 65.1455, 0.37 ) }
    dend_34 { pt3dadd( 128.392, -94.451, 65.5597, 0.37 ) }
    dend_34 { pt3dadd( 128.861, -94.1291, 65.9292, 0.59 ) }
    dend_34 { pt3dadd( 129.402, -93.7715, 66.3008, 0.81 ) }
    dend_34 { pt3dadd( 129.729, -93.5396, 66.4966, 0.81 ) }
    dend_34 { pt3dadd( 130.019, -93.2999, 66.6511, 0.81 ) }
    dend_34 { pt3dadd( 130.829, -92.5088, 67.0338, 0.37 ) }
    dend_34 { pt3dadd( 131.515, -91.707, 67.3421, 0.37 ) }
    dend_34 { pt3dadd( 131.989, -91.0531, 67.5511, 0.74 ) }
    dend_34 { pt3dadd( 132.494, -90.2856, 67.7756, 1.11 ) }
    dend_34 { pt3dadd( 133.017, -89.4433, 68.0236, 0.66 ) }
    dend_34 { pt3dadd( 133.365, -88.8599, 68.2068, 0.66 ) }
    dend_34 { pt3dadd( 133.754, -88.1956, 68.4447, 0.81 ) }
    dend_34 { pt3dadd( 134.119, -87.5994, 68.7, 1.03 ) }
    dend_34 { pt3dadd( 134.522, -86.9785, 68.9986, 0.88 ) }
    dend_34 { pt3dadd( 134.963, -86.2999, 69.3416, 0.66 ) }
    dend_34 { pt3dadd( 135.332, -85.696, 69.6373, 0.29 ) }
    dend_34 { pt3dadd( 135.728, -84.9877, 69.978, 0.22 ) }
    dend_34 { pt3dadd( 136.064, -84.3448, 70.2886, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_34 { pt3dadd( 136.285, -83.8699, 70.5169, 0.37 ) }
    dend_34 { pt3dadd( 136.591, -83.1686, 70.8529, 0.37 ) }
    dend_34 { pt3dadd( 136.862, -82.5774, 71.1507, 0.81 ) }
    dend_34 { pt3dadd( 137.132, -81.9999, 71.4371, 0.81 ) }
    dend_34 { pt3dadd( 137.493, -81.2476, 71.7962, 0.88 ) }
    dend_34 { pt3dadd( 137.961, -80.3167, 72.2238, 0.29 ) }
    dend_34 { pt3dadd( 138.295, -79.6661, 72.5185, 0.29 ) }
    dend_34 { pt3dadd( 138.612, -79.0988, 72.7602, 0.37 ) }
    dend_34 { pt3dadd( 139.203, -78.0858, 73.1634, 0.52 ) }
    dend_34 { pt3dadd( 139.624, -77.3662, 73.4173, 0.66 ) }
    dend_34 { pt3dadd( 139.937, -76.8287, 73.5917, 0.59 ) }
    dend_34 { pt3dadd( 140.355, -76.1311, 73.8037, 1.62 ) }
    dend_34 { pt3dadd( 140.947, -75.0978, 74.0947, 1.99 ) }
    dend_34 { pt3dadd( 141.505, -74.1312, 74.3544, 1.69 ) }
    dend_34 { pt3dadd( 141.912, -73.5287, 74.5446, 1.77 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 15/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 39.8256, -92.0686, 38.7895, 0.74 ) }
    dend_29 { pt3dadd( 39.9787, -93.0793, 39.1501, 0.74 ) }
    dend_29 { pt3dadd( 40.086, -93.6724, 39.3758, 0.74 ) }
    dend_29 { pt3dadd( 40.2154, -94.2655, 39.6157, 0.74 ) }
    dend_29 { pt3dadd( 40.3576, -94.8232, 39.8544, 0.74 ) }
    dend_29 { pt3dadd( 40.5342, -95.4448, 40.1452, 0.74 ) }
    dend_29 { pt3dadd( 40.6443, -95.8062, 40.3222, 0.88 ) }
    dend_29 { pt3dadd( 40.7777, -96.1508, 40.5138, 0.88 ) }
    dend_29 { pt3dadd( 40.9876, -96.6537, 40.8102, 0.59 ) }
    dend_29 { pt3dadd( 41.1512, -97.0444, 41.0354, 0.37 ) }
    dend_29 { pt3dadd( 41.3467, -97.5145, 41.2921, 0.37 ) }
    dend_29 { pt3dadd( 41.5059, -97.8949, 41.4874, 0.59 ) }
    dend_29 { pt3dadd( 41.6641, -98.2944, 41.6808, 0.66 ) }
    dend_29 { pt3dadd( 41.8273, -98.761, 41.8777, 0.66 ) }
    dend_29 { pt3dadd( 41.9718, -99.2392, 42.0466, 0.81 ) }
    dend_29 { pt3dadd( 42.0547, -99.5534, 42.1382, 0.81 ) }
    dend_29 { pt3dadd( 42.1303, -99.8808, 42.2145, 0.52 ) }
    dend_29 { pt3dadd( 42.1939, -100.173, 42.2728, 0.52 ) }
    dend_29 { pt3dadd( 42.3462, -100.927, 42.4026, 0.74 ) }
    dend_29 { pt3dadd( 42.4426, -101.474, 42.4965, 0.96 ) }
    dend_29 { pt3dadd( 42.5123, -101.946, 42.5831, 0.96 ) }
    dend_29 { pt3dadd( 42.5585, -102.329, 42.6581, 0.96 ) }
    dend_29 { pt3dadd( 42.5979, -102.804, 42.7491, 0.66 ) }
    dend_29 { pt3dadd( 42.606, -103.098, 42.7996, 0.66 ) }
    dend_29 { pt3dadd( 42.5808, -103.558, 42.8605, 1.11 ) }
    dend_29 { pt3dadd( 42.5385, -103.862, 42.8798, 1.11 ) }
    dend_29 { pt3dadd( 42.4346, -104.336, 42.8719, 0.81 ) }
    dend_29 { pt3dadd( 42.2803, -104.901, 42.8215, 0.44 ) }
    dend_29 { pt3dadd( 42.1154, -105.43, 42.7398, 0.44 ) }
    dend_29 { pt3dadd( 42.0019, -105.803, 42.6637, 0.44 ) }
    dend_29 { pt3dadd( 41.8752, -106.253, 42.5537, 0.66 ) }
    dend_29 { pt3dadd( 41.7779, -106.63, 42.4591, 0.44 ) }
    dend_29 { pt3dadd( 41.6562, -107.118, 42.3372, 0.81 ) }
    dend_29 { pt3dadd( 41.5787, -107.455, 42.2626, 0.96 ) }
    dend_29 { pt3dadd( 41.5078, -107.815, 42.198, 0.52 ) }
    dend_29 { pt3dadd( 41.4503, -108.19, 42.1403, 0.44 ) }
    dend_29 { pt3dadd( 41.3881, -108.75, 42.0521, 0.37 ) }
    dend_29 { pt3dadd( 41.3527, -109.19, 41.9798, 0.37 ) }
    dend_29 { pt3dadd( 41.3169, -109.672, 41.8987, 0.52 ) }
    dend_29 { pt3dadd( 41.2798, -110.272, 41.8019, 0.59 ) }
    dend_29 { pt3dadd( 41.2516, -110.849, 41.713, 0.59 ) }
    dend_29 { pt3dadd( 41.2399, -111.385, 41.6424, 0.66 ) }
    dend_29 { pt3dadd( 41.2505, -111.965, 41.5875, 0.74 ) }
    dend_29 { pt3dadd( 41.2698, -112.358, 41.5715, 0.59 ) }
    dend_29 { pt3dadd( 41.2924, -112.766, 41.5741, 0.44 ) }
    dend_29 { pt3dadd( 41.2947, -112.92, 41.5843, 0.74 ) }
    dend_29 { pt3dadd( 41.2877, -113.188, 41.6231, 0.74 ) }
    dend_29 { pt3dadd( 41.2776, -113.51, 41.6921, 0.44 ) }
    dend_29 { pt3dadd( 41.2782, -113.99, 41.8124, 0.29 ) }
    dend_29 { pt3dadd( 41.2975, -114.346, 41.9141, 0.37 ) }
    dend_29 { pt3dadd( 41.3253, -114.669, 42.0146, 0.59 ) }
    dend_29 { pt3dadd( 41.3739, -115.107, 42.1546, 0.59 ) }
    dend_29 { pt3dadd( 41.4487, -115.553, 42.279, 0.74 ) }
    dend_29 { pt3dadd( 41.4917, -115.793, 42.3449, 0.81 ) }
    dend_29 { pt3dadd( 41.5844, -116.242, 42.4539, 0.66 ) }
    dend_29 { pt3dadd( 41.6455, -116.529, 42.5131, 0.66 ) }
    dend_29 { pt3dadd( 41.6944, -116.76, 42.5524, 0.66 ) }
    dend_29 { pt3dadd( 41.8088, -117.386, 42.6391, 0.59 ) }
    dend_29 { pt3dadd( 41.9065, -118.039, 42.7067, 0.66 ) }
    dend_29 { pt3dadd( 41.9633, -118.517, 42.7423, 0.74 ) }
    dend_29 { pt3dadd( 42.0011, -118.965, 42.763, 0.74 ) }
    dend_29 { pt3dadd( 42.022, -119.239, 42.7785, 0.74 ) }
    // Section: dend_25, id: dend_25, parent: dend_21 (entry count 77/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -13.0786, -70.6433, -11.3819, 0.81 ) }
    dend_25 { pt3dadd( -11.7389, -71.9379, -12.1894, 0.81 ) }
    dend_25 { pt3dadd( -11.2314, -72.6416, -12.5091, 0.74 ) }
    dend_25 { pt3dadd( -10.7661, -73.4778, -12.749, 0.59 ) }
    dend_25 { pt3dadd( -10.4772, -74.0579, -12.8411, 0.59 ) }
    dend_25 { pt3dadd( -10.0418, -75.0246, -12.926, 0.74 ) }
    dend_25 { pt3dadd( -9.56537, -76.2281, -13.015, 0.66 ) }
    dend_25 { pt3dadd( -9.23352, -77.423, -13.0318, 0.66 ) }
    dend_25 { pt3dadd( -8.93454, -78.52, -13.0725, 0.74 ) }
    dend_25 { pt3dadd( -8.58527, -79.709, -13.0974, 0.74 ) }
    dend_25 { pt3dadd( -8.31387, -80.5012, -13.1276, 0.81 ) }
    dend_25 { pt3dadd( -7.68538, -82.0771, -13.203, 0.96 ) }
    dend_25 { pt3dadd( -7.3715, -82.8004, -13.2653, 1.18 ) }
    dend_25 { pt3dadd( -6.58954, -84.6405, -13.4871, 0.52 ) }
    dend_25 { pt3dadd( -6.08278, -85.83, -13.6959, 0.74 ) }
    dend_25 { pt3dadd( -5.57142, -86.8887, -13.9578, 0.88 ) }
    dend_25 { pt3dadd( -5.02954, -87.7897, -14.2708, 0.59 ) }
    dend_25 { pt3dadd( -4.45912, -88.6085, -14.6099, 0.59 ) }
    dend_25 { pt3dadd( -3.8915, -89.3914, -14.9713, 1.18 ) }
    dend_25 { pt3dadd( -3.28087, -90.2891, -15.3902, 1.18 ) }
    dend_25 { pt3dadd( -2.1212, -92.0853, -16.2267, 0.59 ) }
    dend_25 { pt3dadd( -1.26575, -93.4874, -16.8284, 0.74 ) }
    dend_25 { pt3dadd( -0.79964, -94.2793, -17.2091, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_25 { pt3dadd( -0.21306, -95.3907, -17.7793, 0.66 ) }
    dend_25 { pt3dadd( 0.238436, -96.5148, -18.3656, 0.88 ) }
    dend_25 { pt3dadd( 0.395446, -97.2559, -18.7321, 1.03 ) }
    dend_25 { pt3dadd( 0.406096, -98.1236, -19.1604, 0.74 ) }
    dend_25 { pt3dadd( 0.259076, -99.9892, -20.1793, 0.44 ) }
    dend_25 { pt3dadd( 0.228573, -100.621, -20.587, 0.44 ) }
    dend_25 { pt3dadd( 0.239812, -101.327, -21.0721, 0.81 ) }
    dend_25 { pt3dadd( 0.376925, -102.225, -21.6484, 1.18 ) }
    dend_25 { pt3dadd( 0.623899, -102.998, -22.0431, 1.18 ) }
    dend_25 { pt3dadd( 1.14929, -104.011, -22.3986, 0.81 ) }
    dend_25 { pt3dadd( 2.1556, -105.508, -22.6713, 0.52 ) }
    dend_25 { pt3dadd( 2.78569, -106.304, -22.7459, 0.88 ) }
    dend_25 { pt3dadd( 3.80637, -107.439, -22.7865, 1.03 ) }
    dend_25 { pt3dadd( 4.58602, -108.246, -22.7612, 1.03 ) }
    dend_25 { pt3dadd( 5.33888, -109.025, -22.6912, 1.25 ) }
    dend_25 { pt3dadd( 5.78162, -109.512, -22.632, 1.92 ) }
    dend_25 { pt3dadd( 6.32437, -110.178, -22.5678, 1.55 ) }
    dend_25 { pt3dadd( 7.36064, -111.725, -22.4727, 0.52 ) }
    dend_25 { pt3dadd( 7.69562, -112.371, -22.4815, 0.44 ) }
    dend_25 { pt3dadd( 8.14813, -113.382, -22.5681, 0.37 ) }
    dend_25 { pt3dadd( 8.35856, -113.896, -22.6385, 0.52 ) }
    dend_25 { pt3dadd( 8.59924, -114.478, -22.7453, 0.52 ) }
    dend_25 { pt3dadd( 9.13536, -115.754, -23.0171, 0.44 ) }
    dend_25 { pt3dadd( 9.71756, -117.143, -23.3071, 0.96 ) }
    dend_25 { pt3dadd( 10.2915, -118.543, -23.5428, 1.69 ) }
    dend_25 { pt3dadd( 10.7157, -119.557, -23.7037, 1.92 ) }
    dend_25 { pt3dadd( 11.1713, -120.665, -23.8529, 1.92 ) }
    dend_25 { pt3dadd( 11.6008, -121.804, -23.9983, 1.92 ) }
    dend_25 { pt3dadd( 11.9726, -122.903, -24.1375, 1.62 ) }
    dend_25 { pt3dadd( 12.4112, -124.589, -24.2656, 0.37 ) }
    dend_25 { pt3dadd( 12.8193, -126.739, -24.363, 0.29 ) }
    dend_25 { pt3dadd( 12.909, -127.329, -24.3865, 0.29 ) }
    dend_25 { pt3dadd( 13.0105, -128.087, -24.4154, 0.29 ) }
    dend_25 { pt3dadd( 13.0766, -128.507, -24.4273, 0.29 ) }
    dend_25 { pt3dadd( 13.314, -129.648, -24.5279, 0.88 ) }
    dend_25 { pt3dadd( 13.4751, -130.307, -24.6321, 1.11 ) }
    dend_25 { pt3dadd( 13.5924, -130.781, -24.7108, 1.11 ) }
    dend_25 { pt3dadd( 13.847, -131.789, -24.9255, 0.29 ) }
    dend_25 { pt3dadd( 14.0619, -132.733, -25.1439, 0.29 ) }
    dend_25 { pt3dadd( 14.3088, -134.156, -25.5131, 0.44 ) }
    dend_25 { pt3dadd( 14.4129, -134.975, -25.7641, 0.66 ) }
    dend_25 { pt3dadd( 14.4643, -135.586, -25.9644, 0.66 ) }
    dend_25 { pt3dadd( 14.4976, -136.624, -26.3244, 0.37 ) }
    dend_25 { pt3dadd( 14.4718, -137.975, -26.8001, 0.37 ) }
    dend_25 { pt3dadd( 14.4394, -139.251, -27.1975, 0.59 ) }
    dend_25 { pt3dadd( 14.4368, -140.379, -27.4749, 1.03 ) }
    dend_25 { pt3dadd( 14.4551, -140.938, -27.5942, 1.03 ) }
    dend_25 { pt3dadd( 14.5177, -141.995, -27.7864, 0.74 ) }
    dend_25 { pt3dadd( 14.6322, -143.064, -27.9732, 0.29 ) }
    dend_25 { pt3dadd( 14.8163, -144.208, -28.1725, 0.29 ) }
    dend_25 { pt3dadd( 15.058, -145.443, -28.3584, 1.25 ) }
    dend_25 { pt3dadd( 15.2351, -146.26, -28.4576, 2.06 ) }
    dend_25 { pt3dadd( 15.3673, -146.833, -28.521, 2.06 ) }
    dend_25 { pt3dadd( 15.6452, -148.073, -28.6519, 1.4 ) }
    dend_25 { pt3dadd( 15.8861, -149.406, -28.8058, 0.81 ) }
    dend_25 { pt3dadd( 15.9975, -150.4, -28.9426, 0.44 ) }
    dend_25 { pt3dadd( 16.0646, -151.229, -29.0488, 0.59 ) }
    dend_25 { pt3dadd( 16.127, -151.993, -29.1307, 0.59 ) }
    dend_25 { pt3dadd( 16.2283, -152.97, -29.1944, 0.59 ) }
    dend_25 { pt3dadd( 16.3866, -154.082, -29.1897, 0.44 ) }
    dend_25 { pt3dadd( 16.5739, -155.004, -29.1386, 0.29 ) }
    dend_25 { pt3dadd( 16.773, -155.78, -29.1015, 0.74 ) }
    dend_25 { pt3dadd( 17.012, -156.591, -29.0783, 0.74 ) }
    dend_25 { pt3dadd( 17.3435, -157.544, -29.0809, 0.52 ) }
    dend_25 { pt3dadd( 17.6427, -158.264, -29.0947, 0.52 ) }
    dend_25 { pt3dadd( 17.953, -158.949, -29.1113, 0.44 ) }
    dend_25 { pt3dadd( 18.3945, -159.965, -29.1427, 0.44 ) }
    dend_25 { pt3dadd( 18.6955, -160.802, -29.195, 0.37 ) }
    dend_25 { pt3dadd( 18.9639, -161.691, -29.2872, 0.37 ) }
    dend_25 { pt3dadd( 19.1254, -162.27, -29.353, 0.59 ) }
    dend_25 { pt3dadd( 19.4464, -163.363, -29.4576, 0.59 ) }
    dend_25 { pt3dadd( 19.6724, -163.993, -29.5086, 0.59 ) }
    dend_25 { pt3dadd( 20.0762, -164.948, -29.5494, 0.37 ) }
    dend_25 { pt3dadd( 20.6126, -166.09, -29.5749, 0.29 ) }
    dend_25 { pt3dadd( 20.9561, -166.781, -29.5827, 1.18 ) }
    dend_25 { pt3dadd( 21.2963, -167.376, -29.638, 1.4 ) }
    dend_25 { pt3dadd( 21.7491, -168.118, -29.7527, 1.4 ) }
    dend_25 { pt3dadd( 22.0727, -168.632, -29.8438, 1.4 ) }
    dend_25 { pt3dadd( 22.488, -169.251, -29.9544, 0.88 ) }
    dend_25 { pt3dadd( 22.9126, -169.866, -30.0392, 0.66 ) }
    dend_25 { pt3dadd( 24.0248, -171.488, -30.2145, 0.37 ) }
    dend_25 { pt3dadd( 24.6828, -172.479, -30.2759, 0.29 ) }
    dend_25 { pt3dadd( 25.0501, -173.053, -30.2756, 0.29 ) }
    dend_25 { pt3dadd( 25.35, -173.517, -30.2533, 0.29 ) }
    dend_25 { pt3dadd( 25.9943, -174.518, -30.138, 1.03 ) }
    dend_25 { pt3dadd( 26.3925, -175.109, -30.0018, 1.47 ) }
    dend_25 { pt3dadd( 26.7445, -175.599, -29.8216, 1.62 ) }
    dend_25 { pt3dadd( 27.1485, -176.143, -29.6126, 1.33 ) }
    dend_25 { pt3dadd( 27.5587, -176.728, -29.3975, 0.81 ) }
    dend_25 { pt3dadd( 27.9663, -177.376, -29.1829, 0.44 ) }
    dend_25 { pt3dadd( 28.5928, -178.479, -28.861, 0.29 ) }
    dend_25 { pt3dadd( 29.0226, -179.319, -28.6453, 0.88 ) }
    dend_25 { pt3dadd( 29.4507, -180.281, -28.4351, 0.96 ) }
    dend_25 { pt3dadd( 29.7257, -180.975, -28.3139, 1.25 ) }
    dend_25 { pt3dadd( 29.9358, -181.605, -28.2289, 1.4 ) }
    dend_25 { pt3dadd( 30.0938, -182.203, -28.172, 1.4 ) }
    dend_25 { pt3dadd( 30.2663, -183.117, -28.1215, 1.03 ) }
    dend_25 { pt3dadd( 30.4276, -184.28, -28.1046, 0.29 ) }
    dend_25 { pt3dadd( 30.5616, -185.803, -28.1369, 0.29 ) }
    dend_25 { pt3dadd( 30.5897, -186.831, -28.1903, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_25 { pt3dadd( 30.5731, -187.495, -28.2394, 0.44 ) }
    dend_25 { pt3dadd( 30.4908, -188.383, -28.3292, 0.44 ) }
    dend_25 { pt3dadd( 30.3509, -189.285, -28.4728, 0.52 ) }
    dend_25 { pt3dadd( 30.1452, -190.249, -28.6811, 0.44 ) }
    dend_25 { pt3dadd( 29.9583, -191.047, -28.8912, 0.29 ) }
    dend_25 { pt3dadd( 29.848, -191.534, -29.0381, 0.44 ) }
    dend_25 { pt3dadd( 29.6616, -192.443, -29.3195, 0.44 ) }
    dend_25 { pt3dadd( 29.4427, -193.803, -29.7793, 1.55 ) }
    dend_25 { pt3dadd( 29.3348, -194.85, -30.1309, 2.43 ) }
    dend_25 { pt3dadd( 29.3081, -195.482, -30.3419, 2.73 ) }
    dend_25 { pt3dadd( 29.3132, -195.979, -30.4976, 2.43 ) }
    dend_25 { pt3dadd( 29.3654, -197.1, -30.8131, 1.69 ) }
    dend_25 { pt3dadd( 29.4891, -198.923, -31.2644, 0.52 ) }
    dend_25 { pt3dadd( 29.5257, -199.505, -31.382, 0.52 ) }
    dend_25 { pt3dadd( 29.5462, -200.005, -31.4712, 0.88 ) }
    dend_25 { pt3dadd( 29.5561, -200.914, -31.6578, 0.59 ) }
    dend_25 { pt3dadd( 29.5682, -201.668, -31.8209, 0.59 ) }
    dend_25 { pt3dadd( 29.5732, -202.741, -32.0713, 0.66 ) }
    dend_25 { pt3dadd( 29.5733, -203.285, -32.1961, 0.66 ) }
    dend_25 { pt3dadd( 29.5936, -203.931, -32.3556, 0.52 ) }
    dend_25 { pt3dadd( 29.7033, -205.273, -32.7173, 0.29 ) }
    dend_25 { pt3dadd( 29.8276, -206.186, -32.9624, 0.29 ) }
    dend_25 { pt3dadd( 29.8686, -206.409, -33.0165, 0.59 ) }
    dend_25 { pt3dadd( 30.0236, -207.137, -33.1633, 0.59 ) }
    dend_25 { pt3dadd( 30.1679, -207.866, -33.2846, 0.29 ) }
    dend_25 { pt3dadd( 30.3571, -209.036, -33.4671, 0.29 ) }
    dend_25 { pt3dadd( 30.4782, -209.888, -33.5533, 0.74 ) }
    dend_25 { pt3dadd( 30.5392, -210.431, -33.6504, 0.74 ) }
    dend_25 { pt3dadd( 30.5886, -211.091, -33.8, 0.74 ) }
    dend_25 { pt3dadd( 30.5969, -211.773, -33.9845, 0.59 ) }
    dend_25 { pt3dadd( 30.575, -212.878, -34.304, 0.29 ) }
    dend_25 { pt3dadd( 30.5405, -214.357, -34.7254, 0.29 ) }
    dend_25 { pt3dadd( 30.504, -215.839, -35.1499, 0.37 ) }
    dend_25 { pt3dadd( 30.4891, -216.371, -35.2952, 0.37 ) }
    dend_25 { pt3dadd( 30.4644, -217.247, -35.5091, 0.29 ) }
    dend_25 { pt3dadd( 30.4403, -218.236, -35.7173, 0.44 ) }
    dend_25 { pt3dadd( 30.4284, -218.682, -35.7824, 0.59 ) }
    dend_25 { pt3dadd( 30.4213, -219.294, -35.8354, 0.44 ) }
    dend_25 { pt3dadd( 30.4775, -219.935, -35.8287, 0.37 ) }
    dend_25 { pt3dadd( 30.5942, -220.68, -35.8116, 0.37 ) }
    dend_25 { pt3dadd( 30.73, -221.331, -35.7908, 0.52 ) }
    dend_25 { pt3dadd( 30.8833, -221.977, -35.7879, 0.74 ) }
    dend_25 { pt3dadd( 31.1378, -222.902, -35.8385, 0.29 ) }
    dend_25 { pt3dadd( 31.5192, -224.156, -35.9603, 1.11 ) }
    dend_25 { pt3dadd( 31.6692, -224.633, -36.021, 1.33 ) }
    dend_25 { pt3dadd( 31.816, -225.115, -36.0957, 1.33 ) }
    dend_25 { pt3dadd( 32.021, -225.906, -36.2441, 1.03 ) }
    dend_25 { pt3dadd( 32.2423, -227.057, -36.5219, 0.59 ) }
    dend_25 { pt3dadd( 32.2974, -227.707, -36.7179, 0.37 ) }
    dend_25 { pt3dadd( 32.2627, -228.41, -36.9586, 0.59 ) }
    dend_25 { pt3dadd( 32.2264, -228.743, -37.0835, 0.59 ) }
    dend_25 { pt3dadd( 32.1027, -229.435, -37.3518, 0.29 ) }
    dend_25 { pt3dadd( 31.9366, -230.07, -37.5857, 0.29 ) }
    dend_25 { pt3dadd( 31.7871, -230.602, -37.7558, 0.29 ) }
    dend_25 { pt3dadd( 31.7218, -231.109, -37.9575, 0.29 ) }
    dend_25 { pt3dadd( 31.6712, -232.018, -38.3912, 0.88 ) }
    dend_25 { pt3dadd( 31.6694, -232.294, -38.5256, 1.18 ) }
    dend_25 { pt3dadd( 31.6828, -232.594, -38.6747, 1.18 ) }
    dend_25 { pt3dadd( 31.7287, -233.337, -39.051, 0.74 ) }
    dend_25 { pt3dadd( 31.8446, -234.854, -39.8355, 0.29 ) }
    dend_25 { pt3dadd( 31.8882, -235.557, -40.1913, 0.29 ) }
    dend_25 { pt3dadd( 31.9134, -236.44, -40.6185, 0.29 ) }
    dend_25 { pt3dadd( 31.9241, -237.461, -41.1053, 0.96 ) }
    dend_25 { pt3dadd( 31.9148, -238.01, -41.3561, 1.11 ) }
    dend_25 { pt3dadd( 31.874, -238.944, -41.7372, 0.74 ) }
    dend_25 { pt3dadd( 31.8477, -239.753, -41.9998, 0.59 ) }
    dend_25 { pt3dadd( 31.8496, -240.163, -42.1121, 0.81 ) }
    dend_25 { pt3dadd( 31.852, -241.051, -42.331, 0.81 ) }
    dend_25 { pt3dadd( 31.8355, -241.812, -42.4954, 0.44 ) }
    dend_25 { pt3dadd( 31.7964, -242.855, -42.7297, 0.29 ) }
    dend_25 { pt3dadd( 31.7363, -243.939, -43.0121, 0.29 ) }
    dend_25 { pt3dadd( 31.6656, -245.268, -43.3987, 1.62 ) }
    dend_25 { pt3dadd( 31.6515, -245.849, -43.5628, 1.84 ) }
    dend_25 { pt3dadd( 31.669, -246.374, -43.6897, 1.99 ) }
    dend_25 { pt3dadd( 31.7453, -247.285, -43.947, 1.77 ) }
    dend_25 { pt3dadd( 31.8275, -248.154, -44.2278, 1.11 ) }
    dend_25 { pt3dadd( 31.9144, -249.132, -44.5595, 0.44 ) }
    dend_25 { pt3dadd( 32.0136, -250.057, -44.8751, 0.44 ) }
    dend_25 { pt3dadd( 32.158, -251.242, -45.2338, 0.37 ) }
    dend_25 { pt3dadd( 32.3773, -252.829, -45.6109, 0.29 ) }
    dend_25 { pt3dadd( 32.4538, -253.366, -45.7222, 0.29 ) }
    dend_25 { pt3dadd( 32.6083, -254.486, -45.9354, 0.66 ) }
    dend_25 { pt3dadd( 32.6988, -255.204, -46.0925, 0.81 ) }
    dend_25 { pt3dadd( 32.8087, -256.1, -46.3081, 0.37 ) }
    dend_25 { pt3dadd( 32.9836, -257.416, -46.5716, 0.29 ) }
    dend_25 { pt3dadd( 33.2939, -259.219, -46.8017, 1.4 ) }
    dend_25 { pt3dadd( 33.4148, -259.82, -46.8525, 1.99 ) }
    dend_25 { pt3dadd( 33.561, -260.533, -46.8795, 2.21 ) }
    dend_25 { pt3dadd( 33.7275, -261.446, -46.8634, 1.47 ) }
    dend_25 { pt3dadd( 33.977, -263.002, -46.6932, 0.29 ) }
    dend_25 { pt3dadd( 34.1038, -263.787, -46.5101, 0.29 ) }
    dend_25 { pt3dadd( 34.3251, -264.905, -46.0466, 0.52 ) }
    dend_25 { pt3dadd( 34.4661, -265.482, -45.7461, 0.66 ) }
    dend_25 { pt3dadd( 34.7005, -266.275, -45.2415, 0.44 ) }
    dend_25 { pt3dadd( 35.0777, -267.4, -44.4557, 0.37 ) }
    dend_25 { pt3dadd( 35.3929, -268.167, -43.9059, 0.37 ) }
    dend_25 { pt3dadd( 35.902, -269.297, -42.9574, 1.25 ) }
    dend_25 { pt3dadd( 36.0879, -269.672, -42.6161, 1.84 ) }
    dend_25 { pt3dadd( 36.4216, -270.355, -41.9435, 1.92 ) }
    dend_25 { pt3dadd( 36.8342, -271.165, -41.0821, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_25 { pt3dadd( 37.1976, -271.878, -40.3158, 1.11 ) }
    dend_25 { pt3dadd( 38.0509, -273.646, -38.5008, 0.29 ) }
    dend_25 { pt3dadd( 38.4067, -274.42, -37.7093, 0.29 ) }
    dend_25 { pt3dadd( 38.9143, -275.487, -36.5559, 0.29 ) }
    dend_25 { pt3dadd( 39.2115, -276.094, -35.8731, 0.29 ) }
    dend_25 { pt3dadd( 39.5868, -276.815, -35.0557, 0.52 ) }
    dend_25 { pt3dadd( 39.851, -277.307, -34.5335, 0.66 ) }
    dend_25 { pt3dadd( 40.5497, -278.532, -33.3486, 0.29 ) }
    dend_25 { pt3dadd( 41.0354, -279.36, -32.5336, 1.11 ) }
    dend_25 { pt3dadd( 41.407, -279.987, -31.9279, 1.11 ) }
    dend_25 { pt3dadd( 42.187, -281.446, -30.4964, 0.22 ) }
    dend_25 { pt3dadd( 42.4281, -281.914, -30.018, 0.44 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 12/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -13.0786, -70.6433, -11.3819, 0.96 ) }
    dend_22 { pt3dadd( -14.1341, -71.9919, -11.8644, 0.96 ) }
    dend_22 { pt3dadd( -15.0088, -73.0652, -12.2828, 0.96 ) }
    dend_22 { pt3dadd( -15.7625, -73.9177, -12.6358, 1.18 ) }
    dend_22 { pt3dadd( -16.4358, -74.6364, -12.9956, 1.18 ) }
    dend_22 { pt3dadd( -17.4264, -75.6319, -13.6032, 0.74 ) }
    dend_22 { pt3dadd( -18.1543, -76.3068, -14.1064, 0.74 ) }
    dend_22 { pt3dadd( -18.6578, -76.7537, -14.5436, 0.74 ) }
    dend_22 { pt3dadd( -19.0874, -77.1052, -14.9979, 0.74 ) }
    dend_22 { pt3dadd( -19.8726, -77.7683, -15.908, 0.66 ) }
    dend_22 { pt3dadd( -20.2028, -78.1344, -16.3239, 0.66 ) }
    dend_22 { pt3dadd( -20.6042, -78.7332, -16.8269, 0.66 ) }
    dend_22 { pt3dadd( -20.9346, -79.3213, -17.2131, 0.81 ) }
    dend_22 { pt3dadd( -21.2907, -79.9637, -17.5834, 0.96 ) }
    dend_22 { pt3dadd( -21.8408, -80.9143, -18.0874, 1.11 ) }
    dend_22 { pt3dadd( -22.4412, -81.8564, -18.5431, 1.11 ) }
    dend_22 { pt3dadd( -22.9288, -82.6239, -18.8986, 1.33 ) }
    dend_22 { pt3dadd( -23.3526, -83.2767, -19.2101, 1.47 ) }
    dend_22 { pt3dadd( -23.975, -84.1271, -19.6774, 1.47 ) }
    dend_22 { pt3dadd( -24.547, -84.7953, -20.1148, 1.4 ) }
    dend_22 { pt3dadd( -25.2054, -85.3967, -20.6103, 1.25 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 33/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 141.912, -73.5287, 74.5446, 0.52 ) }
    dend_36 { pt3dadd( 142.875, -72.4381, 75.0436, 0.52 ) }
    dend_36 { pt3dadd( 143.425, -71.7288, 75.3085, 0.29 ) }
    dend_36 { pt3dadd( 143.995, -70.878, 75.6296, 0.22 ) }
    dend_36 { pt3dadd( 144.622, -69.961, 75.9053, 0.22 ) }
    dend_36 { pt3dadd( 145.216, -69.1254, 76.1161, 0.22 ) }
    dend_36 { pt3dadd( 145.845, -68.2107, 76.31, 0.22 ) }
    dend_36 { pt3dadd( 146.465, -67.2173, 76.4744, 0.88 ) }
    dend_36 { pt3dadd( 146.937, -66.3862, 76.5717, 1.18 ) }
    dend_36 { pt3dadd( 147.757, -64.8175, 76.716, 1.47 ) }
    dend_36 { pt3dadd( 148.035, -64.2506, 76.7643, 1.55 ) }
    dend_36 { pt3dadd( 148.994, -62.2939, 76.932, 0.22 ) }
    dend_36 { pt3dadd( 149.551, -61.252, 77.0399, 0.22 ) }
    dend_36 { pt3dadd( 150.254, -60.0081, 77.2436, 0.88 ) }
    dend_36 { pt3dadd( 150.752, -59.156, 77.4119, 1.4 ) }
    dend_36 { pt3dadd( 151.04, -58.6508, 77.5409, 1.25 ) }
    dend_36 { pt3dadd( 151.506, -57.8643, 77.7566, 0.81 ) }
    dend_36 { pt3dadd( 152.332, -56.5551, 78.1373, 0.22 ) }
    dend_36 { pt3dadd( 153.533, -54.7467, 78.693, 0.22 ) }
    dend_36 { pt3dadd( 154.275, -53.7031, 79.0448, 0.66 ) }
    dend_36 { pt3dadd( 154.749, -53.0529, 79.2732, 0.81 ) }
    dend_36 { pt3dadd( 155.044, -52.6303, 79.4184, 0.66 ) }
    dend_36 { pt3dadd( 155.316, -52.2043, 79.5625, 0.52 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 56/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 141.912, -73.5287, 74.5446, 0.29 ) }
    dend_35 { pt3dadd( 141.546, -71.8064, 74.8947, 0.29 ) }
    dend_35 { pt3dadd( 141.299, -70.5893, 75.1521, 0.29 ) }
    dend_35 { pt3dadd( 141.105, -69.685, 75.3386, 0.52 ) }
    dend_35 { pt3dadd( 140.984, -69.1706, 75.4428, 0.66 ) }
    dend_35 { pt3dadd( 140.75, -68.1984, 75.6445, 0.22 ) }
    dend_35 { pt3dadd( 140.593, -67.5594, 75.7761, 0.59 ) }
    dend_35 { pt3dadd( 140.417, -66.9017, 75.9135, 0.74 ) }
    dend_35 { pt3dadd( 140.263, -66.3586, 76.0331, 0.81 ) }
    dend_35 { pt3dadd( 140.029, -65.538, 76.2332, 0.52 ) }
    dend_35 { pt3dadd( 139.753, -64.5597, 76.497, 0.22 ) }
    dend_35 { pt3dadd( 139.568, -63.8891, 76.6932, 0.29 ) }
    dend_35 { pt3dadd( 139.435, -63.3406, 76.8724, 0.29 ) }
    dend_35 { pt3dadd( 139.327, -62.8018, 77.0685, 0.15 ) }
    dend_35 { pt3dadd( 139.225, -62.0907, 77.3557, 0.29 ) }
    dend_35 { pt3dadd( 139.173, -61.5953, 77.5652, 0.37 ) }
    dend_35 { pt3dadd( 139.122, -61.0126, 77.8105, 0.22 ) }
    dend_35 { pt3dadd( 139.062, -60.2243, 78.1308, 0.22 ) }
    dend_35 { pt3dadd( 139.009, -59.5352, 78.3877, 0.74 ) }
    dend_35 { pt3dadd( 138.964, -59.0234, 78.5659, 0.88 ) }
    dend_35 { pt3dadd( 138.904, -58.3993, 78.7732, 0.52 ) }
    dend_35 { pt3dadd( 138.8, -57.3655, 79.1035, 0.22 ) }
    dend_35 { pt3dadd( 138.724, -56.7281, 79.2932, 0.44 ) }
    dend_35 { pt3dadd( 138.665, -56.3442, 79.3907, 0.44 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 80/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 42.022, -119.239, 42.7785, 0.37 ) }
    dend_31 { pt3dadd( 42.5519, -120.2, 43.2497, 0.37 ) }
    dend_31 { pt3dadd( 42.9416, -120.899, 43.6348, 0.52 ) }
    dend_31 { pt3dadd( 43.2634, -121.471, 43.9763, 0.59 ) }
    dend_31 { pt3dadd( 43.7542, -122.355, 44.5178, 0.22 ) }
    dend_31 { pt3dadd( 44.0538, -122.895, 44.86, 0.22 ) }
    dend_31 { pt3dadd( 44.3216, -123.379, 45.1727, 0.44 ) }
    dend_31 { pt3dadd( 44.6262, -123.949, 45.5845, 0.44 ) }
    dend_31 { pt3dadd( 44.9063, -124.435, 45.9751, 0.37 ) }
    dend_31 { pt3dadd( 45.23, -124.943, 46.4424, 0.29 ) }
    dend_31 { pt3dadd( 45.5577, -125.397, 46.9192, 0.52 ) }
    dend_31 { pt3dadd( 45.7851, -125.691, 47.2479, 0.74 ) }
    dend_31 { pt3dadd( 46.1362, -126.141, 47.7429, 0.74 ) }
    dend_31 { pt3dadd( 46.5258, -126.649, 48.2822, 0.44 ) }
    dend_31 { pt3dadd( 46.7648, -126.958, 48.6106, 0.44 ) }
    dend_31 { pt3dadd( 47.2017, -127.515, 49.2119, 0.29 ) }
    dend_31 { pt3dadd( 47.5371, -127.941, 49.6585, 0.29 ) }
    dend_31 { pt3dadd( 47.7385, -128.199, 49.9198, 0.66 ) }
    dend_31 { pt3dadd( 47.9725, -128.517, 50.2217, 0.81 ) }
    dend_31 { pt3dadd( 48.1268, -128.726, 50.4253, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_31 { pt3dadd( 48.6337, -129.382, 51.1285, 0.29 ) }
    dend_31 { pt3dadd( 48.9846, -129.791, 51.6483, 0.29 ) }
    dend_31 { pt3dadd( 49.2549, -130.08, 52.0614, 0.44 ) }
    dend_31 { pt3dadd( 49.6789, -130.51, 52.7232, 0.29 ) }
    dend_31 { pt3dadd( 50.0138, -130.842, 53.2734, 0.37 ) }
    dend_31 { pt3dadd( 50.5274, -131.32, 54.1391, 0.37 ) }
    dend_31 { pt3dadd( 50.9453, -131.683, 54.8645, 0.37 ) }
    dend_31 { pt3dadd( 51.1842, -131.869, 55.2925, 0.59 ) }
    dend_31 { pt3dadd( 51.3506, -131.978, 55.5923, 0.59 ) }
    dend_31 { pt3dadd( 51.7906, -132.228, 56.4093, 0.29 ) }
    dend_31 { pt3dadd( 52.2105, -132.455, 57.2174, 1.25 ) }
    dend_31 { pt3dadd( 52.414, -132.56, 57.6195, 1.55 ) }
    dend_31 { pt3dadd( 52.6986, -132.702, 58.203, 1.55 ) }
    dend_31 { pt3dadd( 53.3497, -133.026, 59.5961, 0.29 ) }
    dend_31 { pt3dadd( 53.7594, -133.255, 60.4853, 0.52 ) }
    dend_31 { pt3dadd( 54.025, -133.413, 61.0673, 0.59 ) }
    dend_31 { pt3dadd( 54.2759, -133.604, 61.6785, 0.37 ) }
    dend_31 { pt3dadd( 54.4723, -133.779, 62.1814, 0.22 ) }
    dend_31 { pt3dadd( 54.7817, -134.103, 62.9967, 0.22 ) }
    dend_31 { pt3dadd( 55.131, -134.509, 63.9524, 0.22 ) }
    dend_31 { pt3dadd( 55.3646, -134.79, 64.5909, 0.22 ) }
    dend_31 { pt3dadd( 55.7747, -135.31, 65.7376, 0.59 ) }
    dend_31 { pt3dadd( 56.0153, -135.633, 66.4292, 0.59 ) }
    dend_31 { pt3dadd( 56.2308, -135.934, 67.0421, 0.37 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 24/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 42.022, -119.239, 42.7785, 0.59 ) }
    dend_30 { pt3dadd( 42.2269, -119.943, 42.8275, 0.59 ) }
    dend_30 { pt3dadd( 42.3126, -120.847, 43.0062, 0.44 ) }
    dend_30 { pt3dadd( 42.3743, -121.893, 43.2459, 0.29 ) }
    dend_30 { pt3dadd( 42.4804, -123.312, 43.5427, 0.59 ) }
    dend_30 { pt3dadd( 42.5439, -124.023, 43.6811, 0.66 ) }
    dend_30 { pt3dadd( 42.6865, -125.366, 43.936, 0.44 ) }
    dend_30 { pt3dadd( 43.141, -128.492, 44.54, 0.29 ) }
    dend_30 { pt3dadd( 43.3259, -129.465, 44.7239, 0.29 ) }
    dend_30 { pt3dadd( 43.6306, -130.687, 44.9702, 0.59 ) }
    dend_30 { pt3dadd( 43.8772, -131.455, 45.1434, 0.74 ) }
    dend_30 { pt3dadd( 44.0747, -131.98, 45.2673, 0.74 ) }
    dend_30 { pt3dadd( 44.5383, -133.1, 45.5181, 0.44 ) }
    dend_30 { pt3dadd( 45.0743, -134.233, 45.6982, 0.29 ) }
    dend_30 { pt3dadd( 45.4554, -135.218, 45.842, 0.29 ) }
    dend_30 { pt3dadd( 45.8344, -136.319, 45.9843, 0.59 ) }
    dend_30 { pt3dadd( 46.1472, -137.263, 46.0923, 0.44 ) }
    dend_30 { pt3dadd( 46.3966, -138.053, 46.1828, 0.44 ) }
    dend_30 { pt3dadd( 46.6347, -138.866, 46.2853, 0.44 ) }
    dend_30 { pt3dadd( 46.9612, -139.886, 46.4397, 0.37 ) }
    dend_30 { pt3dadd( 47.3817, -141.089, 46.6616, 0.37 ) }
    dend_30 { pt3dadd( 47.615, -141.672, 46.8183, 0.66 ) }
    dend_30 { pt3dadd( 47.9037, -142.256, 47.0811, 0.66 ) }
    dend_30 { pt3dadd( 48.1112, -142.607, 47.3092, 0.52 ) }
    dend_30 { pt3dadd( 48.5199, -143.265, 47.8028, 0.74 ) }
    dend_30 { pt3dadd( 48.6974, -143.553, 48.0314, 0.74 ) }
    dend_30 { pt3dadd( 49.1354, -144.341, 48.6136, 0.29 ) }
    dend_30 { pt3dadd( 49.575, -145.18, 49.1837, 0.29 ) }
    dend_30 { pt3dadd( 49.9109, -145.821, 49.6145, 0.29 ) }
    dend_30 { pt3dadd( 50.4149, -146.782, 50.2542, 0.22 ) }
    dend_30 { pt3dadd( 50.7729, -147.464, 50.7085, 0.22 ) }
    dend_30 { pt3dadd( 51.2761, -148.42, 51.3482, 0.44 ) }
    dend_30 { pt3dadd( 51.6675, -149.161, 51.8465, 0.59 ) }
    dend_30 { pt3dadd( 51.9361, -149.715, 52.1738, 0.59 ) }
    dend_30 { pt3dadd( 57.4455, -160.196, 55.6786, 0.59 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 59/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -25.2054, -85.3967, -20.6103, 0.88 ) }
    dend_24 { pt3dadd( -25.5489, -85.6151, -20.7523, 0.88 ) }
    dend_24 { pt3dadd( -26.4875, -86.2623, -21.1376, 0.74 ) }
    dend_24 { pt3dadd( -27.3989, -86.9103, -21.5058, 0.88 ) }
    dend_24 { pt3dadd( -28.1221, -87.4541, -21.8446, 0.52 ) }
    dend_24 { pt3dadd( -29.0829, -88.1563, -22.2583, 0.66 ) }
    dend_24 { pt3dadd( -29.9861, -88.7928, -22.6285, 0.74 ) }
    dend_24 { pt3dadd( -30.8837, -89.3824, -22.9863, 0.88 ) }
    dend_24 { pt3dadd( -31.7144, -89.8762, -23.3091, 1.03 ) }
    dend_24 { pt3dadd( -32.9516, -90.5505, -23.7603, 1.33 ) }
    dend_24 { pt3dadd( -34.1529, -91.1626, -24.1841, 1.4 ) }
    dend_24 { pt3dadd( -35.2998, -91.6973, -24.5884, 0.66 ) }
    dend_24 { pt3dadd( -36.0458, -92.0257, -24.8376, 0.66 ) }
    dend_24 { pt3dadd( -36.792, -92.3774, -25.0535, 0.59 ) }
    dend_24 { pt3dadd( -37.6603, -92.8692, -25.2658, 0.37 ) }
    dend_24 { pt3dadd( -38.2261, -93.2563, -25.3839, 0.88 ) }
    dend_24 { pt3dadd( -38.9915, -93.9075, -25.5861, 0.96 ) }
    dend_24 { pt3dadd( -39.5186, -94.4139, -25.7125, 0.96 ) }
    dend_24 { pt3dadd( -40.2875, -95.2087, -25.8675, 0.66 ) }
    dend_24 { pt3dadd( -40.8604, -95.8289, -25.9786, 0.66 ) }
    dend_24 { pt3dadd( -41.6467, -96.6826, -26.1535, 0.66 ) }
    dend_24 { pt3dadd( -42.3076, -97.4034, -26.3054, 0.74 ) }
    dend_24 { pt3dadd( -42.7378, -97.8748, -26.4028, 0.96 ) }
    dend_24 { pt3dadd( -43.4997, -98.7153, -26.5863, 0.74 ) }
    dend_24 { pt3dadd( -44.1695, -99.5059, -26.7417, 0.74 ) }
    dend_24 { pt3dadd( -44.9485, -100.546, -26.8772, 0.96 ) }
    dend_24 { pt3dadd( -45.4544, -101.322, -26.9289, 1.03 ) }
    dend_24 { pt3dadd( -45.9253, -102.066, -26.9484, 0.81 ) }
    dend_24 { pt3dadd( -46.4535, -102.842, -26.9491, 0.44 ) }
    dend_24 { pt3dadd( -47.3163, -104.039, -26.908, 0.44 ) }
    dend_24 { pt3dadd( -47.9488, -104.886, -26.8212, 0.44 ) }
    dend_24 { pt3dadd( -48.5644, -105.703, -26.688, 0.44 ) }
    dend_24 { pt3dadd( -49.5454, -107.058, -26.4169, 0.44 ) }
    dend_24 { pt3dadd( -50.3881, -108.33, -26.1379, 0.81 ) }
    dend_24 { pt3dadd( -50.7521, -108.939, -25.9944, 0.81 ) }
    dend_24 { pt3dadd( -51.173, -109.746, -25.8221, 0.88 ) }
    dend_24 { pt3dadd( -51.3773, -110.194, -25.7433, 0.66 ) }
    dend_24 { pt3dadd( -51.7875, -111.24, -25.611, 0.37 ) }
    dend_24 { pt3dadd( -52.1618, -112.228, -25.5149, 0.29 ) }
    dend_24 { pt3dadd( -52.5161, -112.925, -25.4926, 0.44 ) }
    dend_24 { pt3dadd( -53.2159, -113.718, -25.5441, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_24 { pt3dadd( -53.83, -114.188, -25.617, 0.29 ) }
    dend_24 { pt3dadd( -54.5594, -114.628, -25.6881, 0.37 ) }
    dend_24 { pt3dadd( -55.7713, -115.202, -25.7683, 0.37 ) }
    dend_24 { pt3dadd( -56.6636, -115.601, -25.7724, 0.37 ) }
    dend_24 { pt3dadd( -57.7082, -116.105, -25.7345, 0.81 ) }
    dend_24 { pt3dadd( -58.3923, -116.473, -25.7003, 1.03 ) }
    dend_24 { pt3dadd( -58.999, -116.901, -25.6253, 1.03 ) }
    dend_24 { pt3dadd( -59.467, -117.321, -25.5295, 0.96 ) }
    dend_24 { pt3dadd( -60.5173, -118.497, -25.2265, 0.52 ) }
    dend_24 { pt3dadd( -61.0462, -119.158, -25.0256, 0.52 ) }
    dend_24 { pt3dadd( -61.7236, -120.04, -24.733, 1.77 ) }
    dend_24 { pt3dadd( -62.7834, -121.44, -24.2866, 0.66 ) }
    dend_24 { pt3dadd( -63.3671, -122.163, -24.0996, 0.66 ) }
    dend_24 { pt3dadd( -64.1832, -123.08, -23.889, 0.59 ) }
    dend_24 { pt3dadd( -64.8814, -123.813, -23.7399, 0.74 ) }
    dend_24 { pt3dadd( -65.524, -124.461, -23.5908, 0.74 ) }
    dend_24 { pt3dadd( -66.1324, -125.044, -23.4636, 0.74 ) }
    dend_24 { pt3dadd( -67.2414, -126.016, -23.3238, 0.37 ) }
    dend_24 { pt3dadd( -68.6556, -127.262, -23.1888, 0.37 ) }
    dend_24 { pt3dadd( -69.3515, -127.903, -23.1336, 0.44 ) }
    dend_24 { pt3dadd( -70.0504, -128.624, -23.0531, 0.44 ) }
    dend_24 { pt3dadd( -70.8167, -129.48, -22.9513, 0.44 ) }
    dend_24 { pt3dadd( -71.347, -130.1, -22.886, 0.66 ) }
    dend_24 { pt3dadd( -71.7683, -130.633, -22.8463, 0.74 ) }
    dend_24 { pt3dadd( -72.1775, -131.195, -22.8428, 0.74 ) }
    dend_24 { pt3dadd( -72.9979, -132.341, -22.8639, 0.81 ) }
    dend_24 { pt3dadd( -73.8279, -133.542, -22.9183, 0.44 ) }
    dend_24 { pt3dadd( -74.6318, -134.759, -22.977, 0.44 ) }
    dend_24 { pt3dadd( -75.3368, -135.91, -23.0387, 0.37 ) }
    dend_24 { pt3dadd( -76.0714, -137.168, -23.0847, 0.37 ) }
    dend_24 { pt3dadd( -76.5034, -137.94, -23.1123, 1.18 ) }
    dend_24 { pt3dadd( -76.8565, -138.6, -23.1511, 1.62 ) }
    dend_24 { pt3dadd( -77.3983, -139.643, -23.1895, 1.84 ) }
    dend_24 { pt3dadd( -77.9254, -140.639, -23.2058, 1.03 ) }
    dend_24 { pt3dadd( -78.5938, -141.87, -23.2194, 0.74 ) }
    dend_24 { pt3dadd( -78.8834, -142.432, -23.2138, 0.74 ) }
    dend_24 { pt3dadd( -79.4181, -143.592, -23.1739, 0.44 ) }
    dend_24 { pt3dadd( -79.9574, -144.893, -23.1006, 0.59 ) }
    dend_24 { pt3dadd( -80.2808, -145.768, -23.0383, 0.59 ) }
    dend_24 { pt3dadd( -80.6524, -146.863, -22.9642, 0.37 ) }
    dend_24 { pt3dadd( -81.0818, -148.201, -22.8888, 0.37 ) }
    dend_24 { pt3dadd( -81.4961, -149.445, -22.8226, 0.37 ) }
    dend_24 { pt3dadd( -81.7918, -150.299, -22.7951, 0.81 ) }
    dend_24 { pt3dadd( -82.089, -151.044, -22.8116, 0.96 ) }
    dend_24 { pt3dadd( -82.4904, -151.902, -22.8881, 1.18 ) }
    dend_24 { pt3dadd( -83.2166, -153.233, -23.0638, 0.44 ) }
    dend_24 { pt3dadd( -83.8311, -154.228, -23.2065, 0.44 ) }
    dend_24 { pt3dadd( -84.7222, -155.514, -23.3304, 0.44 ) }
    dend_24 { pt3dadd( -85.4562, -156.471, -23.3858, 0.44 ) }
    dend_24 { pt3dadd( -86.2937, -157.505, -23.4183, 0.59 ) }
    dend_24 { pt3dadd( -86.8945, -158.224, -23.4041, 0.74 ) }
    dend_24 { pt3dadd( -87.672, -159.143, -23.3511, 0.96 ) }
    dend_24 { pt3dadd( -88.8081, -160.436, -23.2506, 0.59 ) }
    dend_24 { pt3dadd( -89.5002, -161.219, -23.1868, 0.44 ) }
    dend_24 { pt3dadd( -90.2537, -162.117, -23.1003, 0.37 ) }
    dend_24 { pt3dadd( -90.831, -162.858, -23.0152, 0.52 ) }
    dend_24 { pt3dadd( -91.3238, -163.562, -22.9576, 0.52 ) }
    dend_24 { pt3dadd( -92.2307, -164.974, -22.8788, 0.37 ) }
    dend_24 { pt3dadd( -92.8476, -165.982, -22.8301, 0.59 ) }
    dend_24 { pt3dadd( -93.3037, -166.699, -22.7605, 0.74 ) }
    dend_24 { pt3dadd( -93.9371, -167.637, -22.6554, 0.96 ) }
    dend_24 { pt3dadd( -94.2966, -168.182, -22.5938, 0.88 ) }
    dend_24 { pt3dadd( -94.7044, -168.826, -22.5109, 0.81 ) }
    dend_24 { pt3dadd( -95.3432, -169.781, -22.3673, 0.88 ) }
    dend_24 { pt3dadd( -96.185, -170.931, -22.227, 0.37 ) }
    dend_24 { pt3dadd( -97.0204, -172.013, -22.1255, 0.37 ) }
    dend_24 { pt3dadd( -97.7882, -172.975, -22.0624, 0.37 ) }
    dend_24 { pt3dadd( -98.4999, -173.833, -22.0116, 0.66 ) }
    dend_24 { pt3dadd( -99.5058, -174.992, -21.9566, 0.52 ) }
    dend_24 { pt3dadd( -100.225, -175.742, -21.943, 0.37 ) }
    dend_24 { pt3dadd( -101.01, -176.447, -21.9848, 0.59 ) }
    dend_24 { pt3dadd( -101.814, -177.049, -22.0281, 0.59 ) }
    dend_24 { pt3dadd( -102.883, -177.728, -22.0562, 0.29 ) }
    dend_24 { pt3dadd( -103.568, -178.139, -22.0324, 0.29 ) }
    dend_24 { pt3dadd( -104.292, -178.603, -21.9788, 0.29 ) }
    dend_24 { pt3dadd( -105.504, -179.432, -21.835, 0.37 ) }
    dend_24 { pt3dadd( -106.949, -180.488, -21.6337, 0.52 ) }
    dend_24 { pt3dadd( -108.219, -181.488, -21.427, 0.74 ) }
    dend_24 { pt3dadd( -109.424, -182.499, -21.2278, 0.59 ) }
    dend_24 { pt3dadd( -110.228, -183.212, -21.1126, 0.44 ) }
    dend_24 { pt3dadd( -110.722, -183.673, -21.066, 0.44 ) }
    dend_24 { pt3dadd( -111.391, -184.34, -21.0372, 0.37 ) }
    dend_24 { pt3dadd( -112.07, -185.126, -21.0677, 0.52 ) }
    dend_24 { pt3dadd( -112.746, -186.013, -21.1123, 0.74 ) }
    dend_24 { pt3dadd( -113.546, -187.151, -21.1423, 0.44 ) }
    dend_24 { pt3dadd( -114.065, -187.984, -21.1044, 0.37 ) }
    dend_24 { pt3dadd( -114.519, -188.85, -20.9759, 0.37 ) }
    dend_24 { pt3dadd( -115.028, -190.01, -20.7299, 0.59 ) }
    dend_24 { pt3dadd( -115.262, -190.686, -20.5594, 0.59 ) }
    dend_24 { pt3dadd( -115.498, -191.633, -20.2785, 0.59 ) }
    dend_24 { pt3dadd( -115.685, -192.717, -19.8984, 0.66 ) }
    dend_24 { pt3dadd( -115.891, -194.24, -19.3468, 0.66 ) }
    dend_24 { pt3dadd( -116.034, -195.449, -18.9383, 0.37 ) }
    dend_24 { pt3dadd( -116.102, -196.215, -18.699, 0.37 ) }
    dend_24 { pt3dadd( -116.121, -197.164, -18.4042, 0.37 ) }
    dend_24 { pt3dadd( -116.083, -197.819, -18.1788, 0.37 ) }
    dend_24 { pt3dadd( -115.954, -199.047, -17.7463, 0.59 ) }
    dend_24 { pt3dadd( -115.851, -199.645, -17.5469, 0.74 ) }
    dend_24 { pt3dadd( -115.692, -200.458, -17.2529, 0.74 ) }
    dend_24 { pt3dadd( -115.511, -201.724, -16.8177, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_24 { pt3dadd( -115.461, -202.385, -16.6173, 0.44 ) }
    dend_24 { pt3dadd( -122.783, -211.318, -19.1481, 0.44 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 2/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -25.2054, -85.3967, -20.6103, 0.81 ) }
    dend_23 { pt3dadd( -26.0705, -88.1929, -23.4154, 0.81 ) }
    dend_23 { pt3dadd( -26.3978, -89.1575, -24.5406, 0.74 ) }
    dend_23 { pt3dadd( -26.5825, -89.6365, -25.2288, 0.81 ) }
    dend_23 { pt3dadd( -26.7911, -90.1202, -26.09, 0.59 ) }
    dend_23 { pt3dadd( -27.104, -90.702, -27.2674, 0.44 ) }
    dend_23 { pt3dadd( -27.2406, -90.9026, -27.7118, 0.44 ) }
    dend_23 { pt3dadd( -27.9915, -91.3166, -29.1089, 0.52 ) }
    dend_23 { pt3dadd( -28.3342, -91.419, -29.867, 0.74 ) }
    dend_23 { pt3dadd( -28.7033, -91.5256, -30.743, 0.59 ) }
    dend_23 { pt3dadd( -29.0642, -91.644, -31.5778, 0.59 ) }
    dend_23 { pt3dadd( -29.3724, -91.7779, -32.2392, 1.03 ) }
    dend_23 { pt3dadd( -29.7734, -91.9822, -32.914, 1.18 ) }
    dend_23 { pt3dadd( -30.2436, -92.2278, -33.5224, 1.18 ) }
    dend_23 { pt3dadd( -30.8587, -92.5526, -34.2819, 0.52 ) }
    dend_23 { pt3dadd( -31.3319, -92.7914, -34.8912, 0.37 ) }
    dend_23 { pt3dadd( -31.698, -92.9627, -35.4025, 0.29 ) }
    dend_23 { pt3dadd( -32.055, -93.1238, -35.9431, 0.29 ) }
    dend_23 { pt3dadd( -32.4357, -93.2798, -36.5371, 0.88 ) }
    dend_23 { pt3dadd( -32.9046, -93.4294, -37.2824, 1.11 ) }
    dend_23 { pt3dadd( -33.259, -93.4972, -37.9836, 1.4 ) }
    dend_23 { pt3dadd( -33.486, -93.5779, -38.5925, 1.55 ) }
    dend_23 { pt3dadd( -33.6166, -93.6878, -39.1263, 1.55 ) }
    dend_23 { pt3dadd( -33.7945, -93.9465, -40.0816, 0.59 ) }
    dend_23 { pt3dadd( -33.8903, -94.1223, -40.6208, 0.59 ) }
    dend_23 { pt3dadd( -34.182, -94.6589, -42.019, 0.44 ) }
    dend_23 { pt3dadd( -34.5218, -95.3139, -43.5982, 0.29 ) }
    dend_23 { pt3dadd( -34.7747, -95.9558, -45.0619, 0.52 ) }
    dend_23 { pt3dadd( -34.814, -96.2588, -45.7507, 0.66 ) }
    dend_23 { pt3dadd( -34.8118, -96.6281, -46.5714, 0.66 ) }
    dend_23 { pt3dadd( -34.8001, -96.8951, -47.1293, 0.44 ) }
    dend_23 { pt3dadd( -34.7598, -97.5472, -48.5001, 0.37 ) }
    dend_23 { pt3dadd( -34.6426, -98.8775, -51.5258, 2.8 ) }
    dend_23 { pt3dadd( -34.3399, -100.511, -55.453, 0.74 ) }
    dend_23 { pt3dadd( -34.1269, -101.209, -57.2462, 0.74 ) }
    dend_23 { pt3dadd( -33.8674, -101.74, -58.7888, 0.52 ) }
    dend_23 { pt3dadd( -33.4979, -102.274, -60.6106, 1.11 ) }
    dend_23 { pt3dadd( -33.329, -102.451, -61.3812, 1.25 ) }
    dend_23 { pt3dadd( -32.5169, -102.857, -64.7281, 0.37 ) }
    dend_23 { pt3dadd( -31.9669, -102.877, -66.8999, 1.03 ) }
    dend_23 { pt3dadd( -31.3219, -102.68, -69.2106, 1.25 ) }
    dend_23 { pt3dadd( -30.8979, -102.456, -70.6123, 0.37 ) }
    dend_23 { pt3dadd( -30.5787, -102.238, -71.655, 1.84 ) }
    dend_23 { pt3dadd( -30.0439, -101.768, -73.5343, 0.52 ) }
    dend_23 { pt3dadd( -29.9409, -101.616, -73.9862, 0.37 ) }
    dend_23 { pt3dadd( -29.7654, -101.253, -75.0082, 0.74 ) }
    dend_23 { pt3dadd( -29.5951, -100.745, -76.6196, 0.44 ) }
    dend_23 { pt3dadd( -29.5439, -100.417, -77.9403, 0.44 ) }
    dend_23 { pt3dadd( -29.5794, -100.247, -78.8281, 0.44 ) }
    dend_23 { pt3dadd( -29.6896, -100.121, -79.6752, 1.11 ) }
    dend_23 { pt3dadd( -29.8207, -100.023, -80.4069, 1.55 ) }
    dend_23 { pt3dadd( -30.004, -99.9257, -81.1914, 1.69 ) }
    dend_23 { pt3dadd( -30.675, -99.6853, -83.3703, 0.29 ) }
    dend_23 { pt3dadd( -31.0249, -99.5948, -84.3913, 0.44 ) }
    dend_23 { pt3dadd( -31.2861, -99.5408, -85.1791, 0.44 ) }
    dend_23 { pt3dadd( -31.4986, -99.5028, -85.8515, 1.33 ) }
    dend_23 { pt3dadd( -31.7123, -99.4585, -86.4992, 1.55 ) }
    dend_23 { pt3dadd( -32.1939, -99.3506, -87.9547, 0.29 ) }
    dend_23 { pt3dadd( -32.4194, -99.3027, -88.6202, 0.52 ) }
    dend_23 { pt3dadd( -32.7975, -99.2447, -89.726, 0.29 ) }
    dend_23 { pt3dadd( -33.0017, -99.1905, -90.3843, 1.03 ) }
    dend_23 { pt3dadd( -33.1686, -99.1288, -90.9651, 1.18 ) }
    dend_23 { pt3dadd( -33.3228, -99.0508, -91.5118, 1.18 ) }
    dend_23 { pt3dadd( -33.6737, -98.8253, -92.8866, 0.29 ) }
    dend_23 { pt3dadd( -33.9122, -98.6853, -93.8533, 0.29 ) }
    dend_23 { pt3dadd( -34.3415, -98.4812, -95.3963, 0.88 ) }
    dend_23 { pt3dadd( -34.5543, -98.3893, -96.1571, 0.66 ) }
    dend_23 { pt3dadd( -34.6974, -98.33, -96.675, 0.66 ) }
    dend_23 { pt3dadd( -34.875, -98.2455, -97.282, 0.44 ) }
    dend_23 { pt3dadd( -35.1041, -98.1348, -98.0717, 0.29 ) }
    dend_23 { pt3dadd( -35.3589, -98.0228, -98.866, 0.74 ) }
    dend_23 { pt3dadd( -35.4768, -97.9815, -99.2004, 0.88 ) }
    dend_23 { pt3dadd( -36.0119, -97.7565, -100.683, 0.29 ) }
    dend_23 { pt3dadd( -36.3882, -97.5862, -101.663, 1.47 ) }
    dend_23 { pt3dadd( -36.7057, -97.4346, -102.435, 1.92 ) }
    dend_23 { pt3dadd( -37.0124, -97.2899, -103.135, 1.92 ) }
    dend_23 { pt3dadd( -37.7276, -96.9683, -104.674, 0.22 ) }
    dend_23 { pt3dadd( -38.2667, -96.7464, -105.721, 0.22 ) }
    dend_23 { pt3dadd( -38.654, -96.6007, -106.375, 0.59 ) }
    dend_23 { pt3dadd( -38.8758, -96.5236, -106.712, 0.59 ) }
    dend_23 { pt3dadd( -39.5385, -96.2769, -107.61, 0.22 ) }
    dend_23 { pt3dadd( -40.0337, -96.0757, -108.217, 0.81 ) }
    dend_23 { pt3dadd( -40.2579, -95.9729, -108.481, 1.03 ) }
    dend_23 { pt3dadd( -40.5197, -95.8395, -108.792, 1.03 ) }
    dend_23 { pt3dadd( -41.2185, -95.4334, -109.666, 0.22 ) }
    dend_23 { pt3dadd( -41.5863, -95.2066, -110.125, 0.44 ) }
    dend_23 { pt3dadd( -42.785, -94.3959, -111.642, 0.22 ) }
    dend_23 { pt3dadd( -43.1571, -94.129, -112.133, 0.22 ) }
    dend_23 { pt3dadd( -43.6572, -93.7596, -112.804, 1.03 ) }
    dend_23 { pt3dadd( -44.0031, -93.4964, -113.271, 1.25 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 92/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 56.2308, -135.934, 67.0421, 0.22 ) }
    dend_33 { pt3dadd( 56.7818, -136.447, 67.653, 0.22 ) }
    dend_33 { pt3dadd( 57.0207, -136.67, 67.9179, 0.22 ) }
    dend_33 { pt3dadd( 57.1968, -136.834, 68.1132, 0.44 ) }
    dend_33 { pt3dadd( 57.3208, -136.95, 68.2507, 0.44 ) }
    dend_33 { pt3dadd( 60.6471, -140.19, 72.9857, 0.44 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 98/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 56.2308, -135.934, 67.0421, 0.59 ) }
    dend_32 { pt3dadd( 56.7989, -135.548, 67.8723, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_32 { pt3dadd( 57.1099, -135.336, 68.3266, 0.66 ) }
    dend_32 { pt3dadd( 57.2398, -135.248, 68.5165, 0.66 ) }
    dend_32 { pt3dadd( 62.1726, -131.649, 77.7755, 0.66 ) }
    dend_32 { pt3dadd( 66.6688, -128.256, 87.3279, 0.66 ) }
    dend_32 { pt3dadd( 69.2936, -124.95, 97.5832, 0.66 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_46, dend_17, dend_0, dend_50, dend_47, dend_45, dend_18, dend_10, dend_1, dend_56, dend_51, dend_49, dend_48, dend_38, dend_19, dend_12, dend_11, dend_5, dend_2, dend_60, dend_57, dend_53, dend_52, dend_42, dend_39, dend_27, dend_20, dend_14, dend_13, dend_9, dend_6, dend_4, dend_3, dend_62, dend_61, dend_59, dend_58, dend_55, dend_54, dend_44, dend_43, dend_41, dend_40, dend_37, dend_28, dend_26, dend_21, dend_16, dend_15, dend_8, dend_7, dend_34, dend_29, dend_25, dend_22, dend_36, dend_35, dend_31, dend_30, dend_24, dend_23, dend_33, dend_32]}
    ModelViewParmSubset_2 = new SectionList()
    dend_46 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_46, dend_17, dend_0, dend_50, dend_47, dend_45, dend_18, dend_10, dend_1, dend_56, dend_51, dend_49, dend_48, dend_38, dend_19, dend_12, dend_11, dend_5, dend_2, dend_60, dend_57, dend_53, dend_52, dend_42, dend_39, dend_27, dend_20, dend_14, dend_13, dend_9, dend_6, dend_4, dend_3, dend_62, dend_61, dend_59, dend_58, dend_55, dend_54, dend_44, dend_43, dend_41, dend_40, dend_37, dend_28, dend_26, dend_21, dend_16, dend_15, dend_8, dend_7, dend_34, dend_29, dend_25, dend_22, dend_36, dend_35, dend_31, dend_30, dend_24, dend_23, dend_33, dend_32]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_47 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_45 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_10 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_56 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_51 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_49 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_38 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_11 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_5 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_2 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_60 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_57 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_53 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_52 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_42 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_39 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_14 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_13 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_9 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_6 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_4 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_3 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_62 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_37 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_28 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_26 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_7 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_34 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_25 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_30 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_24 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_23 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_17 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_18 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_19 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_46 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_20 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_27 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_21 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_50 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_22 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_29 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_31 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_33 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_12 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_32 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_43 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_44 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_35 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_40 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_36 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_41 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_55 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_8 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_58 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_59 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_61 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_15 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_16 OneSecGrp_SectionRef_51.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_59, dend_59, dend_58, dend_58, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_44, dend_44, dend_43, dend_41, dend_41, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_32 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_47 nseg = 13
    dend_45 nseg = 15
    dend_10 nseg = 7
    dend_56 nseg = 7
    dend_51 nseg = 7
    dend_49 nseg = 5
    dend_48 nseg = 3
    dend_38 nseg = 7
    dend_11 nseg = 11
    dend_5 nseg = 7
    dend_2 nseg = 7
    dend_60 nseg = 5
    dend_57 nseg = 5
    dend_53 nseg = 3
    dend_52 nseg = 3
    dend_42 nseg = 5
    dend_39 nseg = 5
    dend_14 nseg = 7
    dend_13 nseg = 11
    dend_9 nseg = 7
    dend_6 nseg = 5
    dend_4 nseg = 3
    dend_3 nseg = 7
    dend_62 nseg = 3
    dend_37 nseg = 9
    dend_28 nseg = 3
    dend_26 nseg = 13
    dend_7 nseg = 3
    dend_34 nseg = 7
    dend_25 nseg = 11
    dend_30 nseg = 3
    dend_24 nseg = 9
    dend_23 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L23_BTC_fcf6c1f59c_0_0


