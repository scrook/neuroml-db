// Cell: dSTUT214_L4_LBC_aecec7aee9_0_0
/*
{
  "id" : "dSTUT214_L4_LBC_aecec7aee9_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-4.53252, -6.163, 0.0, 2.09808", "-4.07436, -5.56219, 0.0, 3.44591", "-3.6162, -4.96138, 0.0, 4.74751", "-3.15805, -4.36057, 0.0, 6.03519", "-2.69989, -3.75975, 0.0, 7.18506", "-2.24173, -3.15894, 0.0, 8.9595", "-1.78358, -2.55813, 0.0, 10.0505", "-1.32542, -1.95732, 0.0, 10.6762", "-0.867263, -1.35651, 0.0, 11.0674", "-0.409106, -0.7557, 0.0, 11.2738", "0.0490503, -0.154889, 0.0, 11.4538", "0.507207, 0.445922, 0.0, 11.4611", "0.965364, 1.04673, 0.0, 11.064", "1.42352, 1.64754, 0.0, 10.6669", "1.88168, 2.24835, 0.0, 10.1594", "2.33983, 2.84917, 0.0, 9.31974", "2.79799, 3.44998, 0.0, 8.13613", "3.25615, 4.05079, 0.0, 6.95253", "3.7143, 4.6516, 0.0, 6.00786", "4.17246, 5.25241, 0.0, 5.12226", "4.63062, 5.85322, 0.0, 2.96305" ]
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "3.75305, 6.81067, -4.12, 2.75", "4.27889, 7.47319, -4.35418, 2.29", "6.49292, 10.2627, -5.34019, 1.83", "7.58378, 11.6371, -5.82599, 1.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000009274692127
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-5.32694, -1.39933, -0.75, 1.38", "-5.4522, -1.31641, -1.1014, 1.38", "-6.51025, -0.655801, -3.66199, 1.38", "-7.58769, -0.0488821, -6.0112, 1.38", "-9.35492, 0.902073, -9.69104, 0.92", "-10.2958, 1.31831, -11.6063, 0.92", "-10.3229, 1.33163, -11.6669, 0.92", "-11.2719, 1.80244, -14.0003, 0.92", "-12.1768, 2.2357, -16.2761, 0.92", "-12.1858, 2.24047, -16.2993, 0.92", "-12.9815, 2.77175, -18.3188, 0.92", "-14.2027, 3.72156, -21.6695, 0.92", "-15.4408, 4.91644, -25.0113, 0.92", "-16.3721, 6.06605, -27.4529, 0.92", "-17.5848, 7.75806, -30.3865, 0.92", "-18.7257, 9.37327, -32.7111, 0.92", "-18.7361, 9.38835, -32.7287, 0.92", "-20.2606, 11.5265, -34.7109, 0.92", "-21.5849, 13.575, -36.1481, 0.46", "-21.5934, 13.5874, -36.1557, 0.46", "-23.1343, 15.528, -37.2344, 0.46", "-23.1446, 15.5392, -37.2418, 0.46", "-24.5335, 16.9664, -38.4206, 0.46", "-24.5436, 16.976, -38.4301, 0.46", "-26.0326, 18.3543, -40.0163, 0.46", "-27.7738, 19.9368, -42.0424, 0.46", "-29.5646, 21.4645, -44.3275, 0.46", "-31.3837, 22.9597, -46.8002, 0.46", "-31.3969, 22.9702, -46.8191, 0.46", "-32.3411, 23.6705, -48.2381, 0.46", "-34.0445, 24.8872, -51.0094, 0.46", "-35.7824, 26.0761, -53.9671, 0.46", "-37.5611, 27.2971, -57.0419, 0.46", "-37.5731, 27.3056, -57.0626, 0.46", "-39.5153, 28.695, -60.4387, 0.46", "-41.7796, 30.339, -64.3983, 0.46", "-43.4252, 31.6105, -67.4033, 0.46", "-43.4326, 31.6167, -67.4171, 0.46", "-44.4957, 32.4955, -69.3658, 0.46" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000009274692127,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-0.836948, 6.60067, 4.0, 1.83", "-0.836948, 6.60067, 4.0, 1.83", "-0.831711, 10.0737, 5.60146, 1.83", "-0.826339, 13.6359, 7.244, 1.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000009274692127
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "3.66305, -5.30934, 2.72, 2.29", "3.75398, -5.77746, 2.81484, 2.29", "3.75398, -5.77746, 2.81484, 2.29", "3.81706, -6.1416, 2.89024, 2.29", "4.35755, -9.69514, 3.59314, 1.83", "4.73106, -12.6341, 4.16244, 1.83", "4.95524, -14.5267, 4.50565, 1.83", "5.20269, -16.6703, 4.88868, 1.83", "5.48382, -19.2059, 5.33553, 1.38", "5.62997, -20.6363, 5.58094, 1.38", "5.74089, -22.6331, 5.89844, 1.38", "5.84537, -25.0696, 6.25547, 1.38" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000009274692127
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-5.97695, -5.97934, 1.18, 1.83", "-6.27713, -6.2469, 1.2592, 1.83", "-6.27713, -6.2469, 1.2592, 1.83", "-8.43627, -8.126, 1.68655, 1.83", "-10.1147, -9.58669, 2.01874, 1.83", "-11.9501, -11.1841, 2.38203, 1.83", "-13.9724, -12.9442, 2.7823, 1.38", "-15.9514, -14.6336, 3.16872, 1.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000009274692127
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "4.63062, 5.85322, 0.0, 1.08335", "13.7262, 17.7809, 0.0, 1.08335", "22.8219, 29.7086, 0.0, 1.08335" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "7.58378, 11.6371, -5.82599, 0.92", "7.90649, 13.7193, -8.03256, 0.92", "8.01212, 15.1803, -9.59659, 0.92", "8.00087, 17.1685, -11.7714, 0.92", "7.93952, 18.5322, -13.2802, 0.92", "7.87038, 20.5841, -15.5735, 0.92", "7.87053, 20.5986, -15.5899, 0.92", "7.86239, 22.7709, -18.2338, 0.92", "7.85014, 23.9035, -19.6439, 0.92", "7.84893, 23.9239, -19.6697, 0.92", "7.62873, 25.5719, -21.6288, 0.92", "7.46564, 26.5697, -22.7571, 0.92" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "7.58378, 11.6371, -5.82599, 1.38", "10.3152, 12.8858, -5.66526, 1.38" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-0.826339, 13.6359, 7.244, 0.92", "0.185514, 13.8937, 9.22507, 0.92", "1.11537, 14.1417, 11.0274, 0.92", "2.39631, 14.3845, 13.5703, 0.92", "3.5606, 14.518, 15.9599, 0.92", "5.53761, 14.7244, 20.1698, 0.92", "6.65886, 14.7498, 22.5183, 0.46", "7.17159, 14.7285, 23.68, 0.46", "7.99439, 14.5655, 25.4032, 0.46", "8.55982, 14.3184, 26.3291, 0.46", "10.2215, 13.1604, 28.1408, 0.46", "12.3348, 11.4271, 29.909, 0.46", "12.3481, 11.4152, 29.9189, 0.46", "14.6484, 9.44561, 31.439, 0.46", "16.8245, 7.72149, 32.6169, 0.46", "18.9499, 5.93749, 33.4765, 0.46", "24.7628, 3.79241, 41.5717, 0.46" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-0.826339, 13.6359, 7.244, 1.38", "-2.09134, 17.5059, 8.21757, 1.38", "-3.32661, 21.2849, 9.16826, 1.38", "-4.74591, 25.6269, 10.2606, 1.38", "-6.04706, 29.6074, 11.262, 1.38", "-7.08394, 32.7795, 12.06, 1.38", "-8.34099, 36.6251, 13.0274, 1.38" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "5.84537, -25.0696, 6.25547, 0.92", "7.11686, -26.2742, 5.39433, 0.92", "8.01485, -27.2258, 4.81754, 0.92", "9.50893, -28.8838, 3.91333, 0.92", "10.9403, -30.4311, 3.09051, 0.92", "12.6219, -32.2003, 2.17022, 0.92", "14.0201, -33.7529, 1.41283, 0.92", "15.6996, -35.7474, 0.52665, 0.92", "17.2098, -37.5876, -0.265065, 0.92", "18.9217, -39.6896, -1.17336, 0.92", "20.5167, -41.7776, -2.05013, 0.92", "22.008, -43.8414, -2.90252, 0.92", "23.0189, -45.2498, -3.51448, 0.92", "23.9042, -46.3919, -4.07377, 0.92", "23.926, -46.4195, -4.08809, 0.92", "25.4087, -48.3741, -5.13978, 0.92", "25.431, -48.4008, -5.15509, 0.92", "27.1491, -50.3685, -6.28368, 0.46", "28.6227, -52.0252, -7.21984, 0.46", "30.0535, -53.6242, -8.11588, 0.46", "31.3174, -55.0554, -8.87764, 0.46", "33.3928, -57.3511, -10.0838, 0.46", "35.235, -59.3892, -11.1241, 0.46", "37.0496, -61.4294, -12.1509, 0.46", "37.0637, -61.4453, -12.1591, 0.46", "39.7009, -64.4322, -13.807, 0.46", "41.4557, -66.4117, -14.9644, 0.46", "41.4688, -66.4275, -14.9745, 0.46", "42.6122, -67.7863, -15.9207, 0.46", "43.3497, -68.6898, -16.5491, 0.46", "44.3101, -69.8234, -17.2145, 0.46", "44.3195, -69.8342, -17.2196, 0.46", "45.6366, -71.3939, -17.7532, 0.46", "47.8077, -73.9561, -18.406, 0.46", "49.5414, -76.0716, -18.7707, 0.46", "52.1322, -79.4156, -19.1647, 0.46", "53.7724, -81.7073, -19.3485, 0.46", "55.1128, -83.7613, -19.4645, 0.46", "56.7966, -86.6782, -19.6505, 0.46", "58.5056, -90.0618, -19.9137, 0.46", "59.8655, -93.0188, -20.2283, 0.46", "61.608, -97.2586, -20.8258, 0.46", "62.4245, -99.4044, -21.1584, 0.46", "63.6328, -102.884, -21.7473, 0.46", "64.2995, -105.073, -22.1255, 0.46", "64.9281, -107.437, -22.5452, 0.46", "65.3341, -109.171, -22.8523, 0.46", "65.3391, -109.193, -22.8547, 0.46", "66.0268, -112.24, -22.9303, 0.46", "66.6256, -114.831, -22.7426, 0.46", "67.2719, -117.447, -22.4704, 0.46", "67.2793, -117.476, -22.4674, 0.46", "68.2519, -120.986, -22.2603, 0.46", "68.2627, -121.022, -22.258, 0.46", "68.6333, -122.059, -22.1777, 0.46", "69.5184, -124.134, -22.0565, 0.46", "70.0973, -125.326, -22.0722, 0.46", "70.8621, -127.168, -22.443, 0.46" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "5.84537, -25.0696, 6.25547, 0.92", "5.61269, -28.3271, 6.52109, 0.92", "5.39595, -31.536, 6.9324, 0.92", "5.04683, -34.7568, 7.4284, 0.92", "4.57101, -38.4589, 8.01409, 0.92", "4.09745, -42.4157, 8.60884, 0.92", "3.78457, -45.8128, 9.11418, 0.92", "3.51078, -48.3493, 9.51009, 0.92", "3.19035, -51.4045, 9.99575, 0.92", "2.76804, -55.7148, 10.7374, 0.92", "2.33817, -60.0231, 11.518, 0.92", "2.08705, -64.5084, 12.2865, 0.92" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-15.9514, -14.6336, 3.16872, 0.92", "-17.9824, -14.8583, 6.43627, 0.92", "-19.7741, -15.327, 9.87822, 0.92", "-21.1263, -16.0017, 12.8162, 0.92", "-22.3105, -17.078, 15.8061, 0.46", "-22.5215, -17.3172, 16.3795, 0.46", "-22.5279, -17.3258, 16.3986, 0.46", "-23.5028, -19.2644, 19.8124, 0.46", "-24.0238, -20.7235, 21.9862, 0.46", "-24.6571, -23.56, 25.9204, 0.46", "-24.6604, -23.5792, 25.9468, 0.46", "-24.8487, -24.5377, 27.2848, 0.46", "-25.2299, -26.1556, 29.5152, 0.46", "-29.7387, -31.4094, 37.9709, 0.46", "-32.7077, -36.5411, 47.1513, 0.46", "-36.2957, -42.8204, 55.3443, 0.46", "-40.2513, -49.3518, 63.1624, 0.46", "-42.6522, -56.3547, 71.2013, 0.46", "-43.0303, -64.3397, 78.653, 0.46", "-44.6199, -71.1056, 87.0866, 0.46", "-44.231, -76.9691, 96.3006, 0.46", "-45.5445, -83.7591, 104.762, 0.46", "-47.9003, -89.8895, 113.497, 0.46", "-49.0587, -98.011, 120.717, 0.46", "-52.0167, -105.95, 127.621, 0.46" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-15.9514, -14.6336, 3.16872, 0.92", "-17.1952, -18.2048, 3.81025, 0.92", "-18.1207, -20.8437, 4.36982, 0.92", "-19.5864, -25.207, 5.43787, 0.92", "-20.2674, -27.3764, 6.03692, 0.92", "-21.2418, -30.2579, 6.95549, 0.92", "-21.9466, -32.0755, 7.60994, 0.92", "-22.8549, -34.1699, 8.47981, 0.92", "-23.6361, -35.6835, 9.19062, 0.92", "-24.4386, -37.1741, 9.95274, 0.92", "-25.8426, -39.7117, 11.227, 0.92", "-27.3742, -42.3089, 12.5438, 0.92", "-28.7802, -44.5782, 13.6651, 0.92", "-31.0588, -47.9848, 15.2952, 0.92", "-33.3656, -51.268, 16.7588, 0.92", "-33.3851, -51.2961, 16.7701, 0.92" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-15.9514, -14.6336, 3.16872, 1.38", "-17.7921, -12.5477, 1.70431, 1.38", "-19.1964, -11.0376, 0.641657, 1.38", "-20.4242, -9.70415, -0.319795, 1.38", "-21.5823, -8.49232, -1.25394, 1.38", "-22.8785, -7.24538, -2.31421, 1.38", "-24.0597, -6.21563, -3.26783, 1.38", "-25.0738, -5.42574, -4.07469, 1.38", "-26.8694, -4.34972, -5.45285, 1.38", "-28.7099, -3.56098, -6.81394, 1.38", "-30.9918, -2.88688, -8.48192, 1.38", "-32.2211, -2.64855, -9.36715, 1.38", "-33.7855, -2.47971, -10.5034, 1.38", "-36.0055, -2.42724, -12.1565, 1.38", "-37.4731, -2.4859, -13.2664, 1.38", "-38.7489, -2.5668, -14.3026, 1.38", "-38.764, -2.56769, -14.3159, 1.38", "-40.2619, -2.54116, -15.7792, 1.38", "-41.6273, -2.3912, -17.224, 1.38", "-42.9309, -2.12602, -18.6951, 0.92", "-44.084, -1.76399, -20.047, 0.92", "-45.5358, -1.21575, -21.778, 0.92", "-46.9184, -0.57334, -23.4901, 0.92", "-48.1875, 0.158947, -25.1434, 0.92", "-49.0303, 0.788419, -26.3659, 0.92", "-50.1925, 1.81115, -28.2212, 0.92", "-51.1987, 2.88438, -30.0057, 0.92", "-52.3359, 4.3913, -32.3751, 0.92", "-52.9108, 5.25393, -33.7537, 0.92", "-53.6413, 6.50663, -35.721, 0.92", "-54.5307, 8.19196, -38.3316, 0.92", "-55.0978, 9.2749, -40.0234, 0.92", "-55.5754, 10.2678, -41.4806, 0.92", "-56.1152, 11.3674, -43.0243, 0.92", "-57.1894, 13.3807, -45.688, 0.92", "-57.1965, 13.3928, -45.7025, 0.92", "-58.113, 14.8381, -47.2443, 0.92", "-59.1383, 16.3088, -48.7784, 0.92", "-60.5708, 18.1277, -50.6752, 0.92", "-61.811, 19.6485, -52.2292, 0.92", "-63.4873, 21.5481, -54.253, 0.92", "-64.8277, 22.9791, -55.8586, 0.92", "-65.9268, 24.0197, -57.159, 0.92", "-66.7857, 24.7386, -58.214, 0.92", "-68.1314, 25.7164, -59.9695, 0.92", "-68.9374, 26.2373, -61.1146, 0.92", "-70.1123, 26.9051, -62.9713, 0.92", "-70.9826, 27.3432, -64.3933, 0.92", "-72.0143, 27.8338, -66.0475, 0.46", "-72.6491, 28.1525, -67.1575, 0.46", "-72.6556, 28.1553, -67.1688, 0.46", "-73.5829, 28.5676, -68.8045, 0.46", "-74.5684, 29.0472, -70.5106, 0.46", "-74.5748, 29.0513, -70.5217, 0.46", "-75.3972, 29.6367, -71.857, 0.46", "-76.6774, 30.7225, -73.9634, 0.46", "-76.6837, 30.7282, -73.9737, 0.46", "-77.8267, 31.8969, -75.8768, 0.46", "-78.7356, 32.9683, -77.4538, 0.46", "-79.5345, 33.9872, -78.8795, 0.46", "-80.1742, 34.8535, -80.0408, 0.46", "-81.1611, 36.2647, -81.8785, 0.46", "-81.9844, 37.4066, -83.4024, 0.46", "-83.1947, 39.0359, -85.6107, 0.46", "-84.4715, 40.6457, -87.8578, 0.46", "-86.0066, 42.529, -90.5835, 0.46", "-87.6455, 44.4047, -93.4803, 0.46", "-89.4126, 46.3161, -96.5978, 0.46", "-90.8834, 47.7986, -99.1673, 0.46", "-92.5662, 49.3295, -102.073, 0.46", "-93.5272, 50.0775, -103.723, 0.46", "-94.5679, 50.7585, -105.531, 0.46", "-95.5389, 51.3096, -107.252, 0.46", "-95.5452, 51.3125, -107.263, 0.46", "-96.5164, 51.5677, -109.1, 0.46", "-97.4291, 51.5731, -110.894, 0.46", "-97.439, 51.571, -110.911, 0.46" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "22.8219, 29.7086, 0.0, 0.46", "31.9175, 41.6363, 0.0, 0.46", "41.0131, 53.564, 0.0, 0.46" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "7.46564, 26.5697, -22.7571, 0.92", "6.96569, 27.5896, -25.8507, 0.92", "6.96378, 27.5957, -25.8751, 0.92", "6.78323, 28.2879, -28.8129, 0.92", "6.78101, 28.2921, -28.8377, 0.92", "6.23482, 28.9286, -33.2733, 0.92", "5.36415, 29.6575, -37.9553, 0.92", "3.88564, 30.6015, -42.8137, 0.92", "3.84208, 30.6256, -42.9298, 0.92", "2.13279, 31.4421, -46.79, 0.92", "0.550103, 32.0765, -49.9599, 0.92", "-1.63755, 32.7867, -53.9575, 0.92", "-6.01065, 34.0363, -61.6545, 0.92", "-8.55476, 34.6691, -65.9086, 0.92", "-11.1992, 35.2224, -70.2932, 0.92", "-13.9048, 35.6905, -74.8589, 0.92", "-16.6341, 35.9809, -79.6642, 0.92", "-18.8798, 36.0448, -83.8542, 0.92", "-20.8877, 35.9598, -87.8564, 0.92", "-22.7955, 35.8115, -91.8825, 0.92", "-23.7489, 35.794, -94.0201, 0.92", "-25.9132, 35.9369, -99.1615, 0.92", "-25.9236, 35.9381, -99.1846, 0.92", "-28.3348, 36.2816, -103.939, 0.92", "-29.4319, 36.4557, -105.942, 0.92", "-32.0448, 36.7674, -110.573, 0.92", "-32.078, 36.7711, -110.626, 0.92", "-34.1202, 36.9269, -113.721, 0.92", "-36.4677, 37.0308, -117.194, 0.92", "-36.4825, 37.0302, -117.214, 0.92", "-39.6017, 36.5972, -121.683, 0.92" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "7.46564, 26.5697, -22.7571, 0.92", "7.16783, 27.8925, -24.0079, 0.92", "6.98822, 29.2139, -25.1187, 0.92", "6.86785, 30.3477, -26.0367, 0.92", "6.76969, 32.0139, -27.3026, 0.92", "6.7472, 33.1976, -28.1887, 0.92", "6.72675, 34.6985, -29.3081, 0.92", "6.68892, 36.3966, -30.5391, 0.92", "6.72041, 37.4844, -31.3228, 0.92", "6.88478, 39.3733, -32.6975, 0.92", "7.05655, 40.5008, -33.5435, 0.92", "7.32462, 41.945, -34.6663, 0.92", "7.57213, 43.4125, -35.8709, 0.92", "7.76085, 44.6515, -36.9339, 0.92", "7.76348, 44.6663, -36.947, 0.92" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "10.3152, 12.8858, -5.66526, 0.92", "12.3889, 15.5069, -7.95787, 0.92", "13.7548, 17.0019, -9.35472, 0.92", "14.71, 17.9183, -10.1863, 0.92", "15.8252, 18.9904, -11.0284, 0.46", "17.6243, 20.6288, -12.215, 0.46", "17.6345, 20.638, -12.2212, 0.46", "19.2615, 22.0322, -13.0263, 0.46", "21.0428, 23.5698, -13.7658, 0.46", "23.1874, 25.5624, -14.4907, 0.46", "25.0301, 27.3779, -15.021, 0.46", "26.5973, 28.9874, -15.4353, 0.46", "27.8698, 30.3467, -15.7805, 0.46", "29.3945, 32.0534, -16.2145, 0.46", "30.9308, 33.7162, -16.7045, 0.46", "33.0553, 35.8898, -17.4157, 0.46", "33.0662, 35.8998, -17.4189, 0.46", "34.4517, 37.0186, -17.7957, 0.46", "36.2627, 38.3163, -18.3064, 0.46", "38.8111, 40.0049, -19.0276, 0.46", "38.8856, 40.0525, -19.0487, 0.46", "41.661, 41.8822, -19.7967, 0.46", "44.2164, 43.6474, -20.4681, 0.46", "45.6051, 44.7192, -20.8353, 0.46", "45.6219, 44.7337, -20.8403, 0.46", "48.1897, 47.3134, -21.7432, 0.46", "50.1289, 49.5252, -22.5173, 0.46", "50.1423, 49.5425, -22.5235, 0.46", "51.9126, 51.9793, -23.2888, 0.46", "52.4605, 52.7522, -23.5197, 0.46", "54.0543, 55.0651, -24.1864, 0.46", "55.5015, 57.1709, -24.7619, 0.46", "57.3973, 59.8773, -25.4364, 0.46", "59.0329, 62.1544, -25.9331, 0.46", "60.0736, 63.5652, -26.2014, 0.46", "61.3611, 65.4506, -26.4793, 0.46", "62.7451, 67.7935, -26.7407, 0.46", "64.5289, 71.2258, -27.0426, 0.46", "65.7036, 73.9666, -27.2629, 0.46", "65.7089, 73.9808, -27.2641, 0.46", "66.7196, 77.4925, -27.6498, 0.46", "67.6342, 81.4081, -28.2592, 0.46", "67.6428, 81.4596, -28.269, 0.46", "68.1054, 85.3293, -29.076, 0.46", "68.1071, 85.3439, -29.0795, 0.46", "68.5329, 88.5835, -29.9124, 0.46", "69.0595, 91.6532, -30.8557, 0.46", "69.6433, 95.0516, -31.9777, 0.46", "69.8611, 96.3356, -32.3864, 0.46" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "10.3152, 12.8858, -5.66526, 0.92", "14.6253, 14.0332, -6.78586, 0.92", "18.1982, 15.0101, -7.72891, 0.92", "19.3804, 15.3011, -8.06802, 0.92", "22.9981, 16.1427, -9.14919, 0.92", "26.8488, 17.0058, -10.4097, 0.92", "31.2263, 17.9354, -12.0478, 0.92", "31.2503, 17.9401, -12.0593, 0.92", "34.2583, 18.5708, -13.9494, 0.92", "34.2911, 18.5781, -13.9721, 0.92", "37.6487, 19.3791, -16.669, 0.92", "40.2815, 19.9287, -19.1359, 0.92", "43.2209, 20.5226, -22.3028, 0.92", "45.2333, 20.9955, -24.5808, 0.92" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "24.7628, 3.79241, 41.5717, 0.46", "29.7114, 1.89999, 48.2904, 0.46", "35.0559, 0.01484, 54.7008, 0.46", "40.4301, -2.6754, 60.7911, 0.46", "45.4763, -4.6909, 67.4004, 0.46", "49.837, -7.63865, 74.1462, 0.46", "54.2955, -10.7297, 80.7626, 0.46", "59.5562, -12.8724, 87.1615, 0.46", "64.9603, -16.4679, 92.7363, 0.46", "70.7809, -21.3509, 96.6718, 0.46", "76.6721, -25.7635, 101.034, 0.46", "82.9208, -30.5222, 104.428, 0.46", "88.8256, -35.549, 108.044, 0.46" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "24.7628, 3.79241, 41.5717, 0.46", "31.2642, 0.580712, 52.6563, 0.46", "37.2923, -3.62521, 63.6756, 0.46", "44.1489, -8.90896, 73.7015, 0.46", "49.363, -13.9109, 84.8031, 0.46", "53.5524, -18.6681, 96.4337, 0.46", "55.0348, -23.2815, 108.761, 0.46" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-8.34099, 36.6251, 13.0274, 0.46", "-12.7416, 37.4421, 13.3712, 0.46", "-15.6842, 38.0634, 13.7411, 0.46", "-22.0824, 39.2843, 14.8868, 0.46", "-26.2158, 40.1838, 15.8303, 0.46", "-29.1492, 40.9208, 16.6274, 0.46", "-32.9822, 42.0098, 17.8185, 0.46", "-35.4263, 42.8541, 18.8166, 0.46", "-38.5555, 44.0399, 20.3033, 0.46", "-41.8172, 45.5186, 22.2029, 0.46", "-44.3424, 46.8285, 23.8673, 0.46", "-47.4864, 48.5191, 26.0536, 0.46", "-49.8967, 50.0037, 27.8389, 0.46", "-59.7731, 52.3356, 33.8208, 0.46", "-69.0046, 53.6625, 41.0168, 0.46", "-79.0992, 53.7006, 47.0882, 0.46", "-89.7917, 53.3599, 52.0196, 0.46" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-8.34099, 36.6251, 13.0274, 1.38", "-9.30091, 38.8294, 13.0105, 1.38", "-10.2265, 41.0002, 13.0237, 0.92", "-11.172, 43.2209, 13.1042, 0.92", "-11.1768, 43.2314, 13.1049, 0.92", "-12.037, 45.0807, 13.2547, 0.92", "-12.8371, 46.7376, 13.416, 0.92", "-12.8423, 46.7479, 13.4174, 0.92", "-13.9447, 48.6512, 13.7227, 0.92", "-15.2651, 50.6733, 14.1256, 0.92", "-15.2715, 50.6827, 14.1275, 0.92", "-16.6146, 52.5208, 14.5316, 0.92", "-18.1614, 54.5527, 14.9635, 0.92", "-19.9615, 56.8594, 15.4549, 0.92", "-21.3987, 58.5998, 15.826, 0.92" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "2.08705, -64.5084, 12.2865, 0.92", "1.97927, -67.625, 13.0969, 0.92", "1.79647, -70.2934, 13.8038, 0.92", "1.66264, -73.3206, 14.6814, 0.92", "1.6354, -75.7195, 15.397, 0.92", "1.62302, -78.1686, 16.0876, 0.92", "1.59232, -80.3073, 16.6735, 0.92", "1.49936, -82.857, 17.3725, 0.92", "1.33629, -84.9257, 17.9092, 0.92", "1.02882, -87.807, 18.6403, 0.92", "0.544845, -91.2639, 19.5175, 0.92", "0.176673, -93.7677, 20.147, 0.92", "-0.190077, -96.2807, 20.7654, 0.92", "-0.582854, -98.6594, 21.3163, 0.92", "-1.07195, -101.47, 21.9395, 0.92", "-1.64022, -104.606, 22.6275, 0.92", "-2.05858, -107.055, 23.1649, 0.92", "-2.29623, -108.831, 23.5347, 0.92", "-2.46742, -110.636, 23.9139, 0.92", "-2.63084, -112.945, 24.4454, 0.92", "-2.65355, -115.813, 25.1932, 0.92", "-2.39089, -118.263, 25.9232, 0.92", "-1.82937, -120.647, 26.7521, 0.92", "-0.97126, -122.866, 27.6825, 0.92", "0.288025, -124.444, 28.4935, 0.46", "2.54217, -125.823, 29.447, 0.46", "4.8026, -126.607, 30.108, 0.46", "7.63289, -127.147, 30.68, 0.46", "7.65272, -127.148, 30.6822, 0.46", "11.5754, -127.09, 30.7878, 0.46", "11.6053, -127.089, 30.7864, 0.46", "13.392, -127.217, 30.5661, 0.46", "13.4209, -127.223, 30.5602, 0.46", "16.036, -128.064, 29.9425, 0.46", "17.0642, -128.435, 29.7165, 0.46", "17.0909, -128.447, 29.7117, 0.46", "19.5634, -129.542, 29.2517, 0.46", "20.0418, -129.719, 29.1519, 0.46", "21.2986, -139.611, 29.8353, 0.46", "23.4316, -149.373, 30.0305, 0.46", "24.1551, -159.303, 29.1535, 0.46" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "2.08705, -64.5084, 12.2865, 0.92", "3.5991, -66.3513, 10.9577, 0.92", "3.60933, -66.3645, 10.9489, 0.92", "4.95662, -67.8982, 9.95659, 0.92", "6.43172, -69.57, 9.01591, 0.92", "6.44854, -69.5905, 9.00603, 0.92", "8.26977, -71.9405, 8.00905, 0.92", "9.55866, -73.655, 7.37158, 0.92", "11.1736, -75.9329, 6.63932, 0.92", "13.2279, -78.9568, 5.8208, 0.92", "15.0808, -81.7846, 5.1593, 0.92", "16.2992, -83.7581, 4.74463, 0.92", "16.3475, -83.8379, 4.73044, 0.92", "17.4945, -85.874, 4.41696, 0.92", "18.2966, -87.3704, 4.21296, 0.92", "19.6729, -89.9747, 3.881, 0.92", "21.0247, -92.4049, 3.57132, 0.92", "21.9865, -94.2122, 3.35244, 0.92", "24.1611, -98.3847, 2.8808, 0.92", "25.3265, -100.643, 2.69368, 0.92", "26.8507, -103.59, 2.48065, 0.92", "28.1513, -106.012, 2.25615, 0.92", "29.7591, -108.881, 1.91126, 0.92", "31.3049, -111.716, 1.4826, 0.92", "33.174, -115.096, 0.870724, 0.92", "34.2918, -117.212, 0.410555, 0.92", "35.6677, -119.88, -0.259804, 0.92", "37.2546, -123.373, -1.23737, 0.92", "38.3374, -125.854, -2.0399, 0.92", "38.3524, -125.896, -2.05469, 0.92", "38.9449, -128.297, -2.84988, 0.92", "38.9523, -128.333, -2.85918, 0.92", "39.6495, -131.538, -3.55034, 0.46", "39.7545, -131.943, -3.63191, 0.46", "40.8846, -135.211, -4.24714, 0.46", "42.5625, -139.232, -4.93078, 0.46", "43.7871, -141.75, -5.30046, 0.46", "44.9747, -143.878, -5.64435, 0.46", "46.8978, -146.8, -6.19405, 0.46", "47.9288, -148.212, -6.49499, 0.46", "49.8639, -150.475, -7.10777, 0.46", "51.4329, -152.116, -7.71096, 0.46", "52.9873, -153.945, -8.47408, 0.46", "54.0101, -155.452, -9.11781, 0.46", "54.019, -155.467, -9.12452, 0.46", "55.1189, -157.797, -10.0586, 0.46", "55.9925, -159.95, -10.859, 0.46", "56.8115, -162.069, -11.5542, 0.46", "57.7181, -164.56, -12.2517, 0.46", "58.3547, -166.205, -12.7136, 0.46", "59.199, -168.198, -13.2869, 0.46", "60.2865, -170.375, -13.974, 0.46", "61.6419, -172.764, -14.8927, 0.46", "61.6556, -172.787, -14.9034, 0.46", "63.0033, -175.076, -16.2258, 0.46", "63.011, -175.091, -16.2351, 0.46", "64.0613, -177.229, -17.6888, 0.46", "65.1272, -179.659, -19.3919, 0.46", "65.7427, -181.36, -20.5622, 0.46", "66.187, -182.747, -21.4791, 0.46", "66.1912, -182.762, -21.4886, 0.46", "66.6627, -184.752, -22.5764, 0.46", "66.6725, -184.802, -22.5996, 0.46", "66.9949, -186.355, -23.2144, 0.46", "67.0035, -186.399, -23.2292, 0.46", "67.57, -189.242, -24.1077, 0.46", "67.6345, -189.754, -24.2636, 0.46", "67.7877, -191.982, -24.9382, 0.46", "67.7897, -192.155, -24.9842, 0.46", "67.7144, -194.386, -25.5288, 0.46", "67.714, -194.414, -25.5342, 0.46", "67.6588, -197.503, -26.0234, 0.46", "67.6605, -197.55, -26.0278, 0.46", "67.9493, -201.402, -26.0713, 0.46", "67.9561, -201.467, -26.0679, 0.46", "68.6068, -206.523, -25.5949, 0.46", "68.6219, -206.634, -25.581, 0.46", "69.3697, -211.626, -24.797, 0.46", "69.8098, -215.57, -24.103, 0.46", "69.9796, -218.416, -23.5447, 0.46", "69.9798, -218.435, -23.5409, 0.46", "69.672, -222.237, -22.7399, 0.46", "69.6684, -222.265, -22.7345, 0.46", "68.9695, -225.685, -22.1328, 0.46", "68.1816, -228.965, -21.6207, 0.46", "68.1624, -229.037, -21.61, 0.46", "66.9648, -233.413, -20.9356, 0.46", "66.9548, -233.449, -20.9302, 0.46", "66.2569, -236.183, -20.5841, 0.46", "66.2465, -236.229, -20.5793, 0.46", "65.6447, -238.732, -20.3844, 0.46", "65.6069, -238.838, -20.375, 0.46", "63.0068, -243.206, -19.7987, 0.46", "61.6858, -244.46, -19.4788, 0.46", "61.6637, -244.477, -19.4738, 0.46", "58.7272, -246.339, -18.7894, 0.46", "54.0417, -248.343, -17.6567, 0.46", "50.472, -249.284, -16.7431, 0.46", "46.3021, -249.455, -15.5762, 0.46" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-52.0167, -105.95, 127.621, 0.46", "-53.615, -110.714, 133.405, 0.46", "-53.8485, -114.456, 140.087, 0.46", "-52.5053, -117.458, 147.008, 0.46", "-49.6775, -120.152, 153.6, 0.46", "-45.2161, -121.973, 159.557, 0.46" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-52.0167, -105.95, 127.621, 0.46", "-54.8758, -112.355, 136.985, 0.46", "-60.1385, -116.724, 146.478, 0.46", "-65.8288, -120.704, 155.895, 0.46", "-71.9357, -124.279, 165.213, 0.46", "-76.9139, -129.414, 174.473, 0.46", "-83.0201, -132.241, 184.045, 0.46", "-87.6338, -133.952, 194.66, 0.46" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-33.3851, -51.2961, 16.7701, 0.92", "-33.0026, -54.4392, 16.8428, 0.92" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-33.3851, -51.2961, 16.7701, 0.92", "-35.2856, -51.4426, 18.1253, 0.92", "-35.2984, -51.4442, 18.1333, 0.92", "-36.6681, -51.6356, 18.8001, 0.46", "-38.4587, -51.8935, 19.5671, 0.46", "-40.2915, -52.1481, 20.2503, 0.46", "-43.0173, -52.5512, 21.0933, 0.46", "-44.8999, -52.8722, 21.5331, 0.46", "-47.7649, -53.337, 21.9748, 0.46", "-48.0654, -53.3829, 21.9933, 0.46", "-49.8276, -53.6803, 21.9193, 0.46", "-51.885, -54.0066, 21.6176, 0.46", "-51.8996, -54.0086, 21.6141, 0.46", "-53.3336, -54.1948, 21.2205, 0.46", "-53.3553, -54.1978, 21.2142, 0.46", "-55.8763, -54.5335, 20.4087, 0.46", "-57.5032, -54.6875, 19.8713, 0.46", "-58.8036, -54.8314, 19.4095, 0.46", "-61.1493, -55.2244, 18.5351, 0.46", "-61.1631, -55.2277, 18.5293, 0.46", "-62.9581, -55.7482, 17.687, 0.46", "-64.3526, -56.223, 16.9361, 0.46", "-66.62, -57.0883, 15.6462, 0.46", "-68.7688, -57.9458, 14.3292, 0.46", "-70.4333, -58.6031, 13.2524, 0.46", "-70.4454, -58.6081, 13.2445, 0.46", "-73.0057, -59.725, 11.5707, 0.46", "-75.1145, -60.6539, 10.1227, 0.46", "-77.8789, -61.6382, 8.26766, 0.46", "-77.9701, -61.6667, 8.20518, 0.46" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "7.76348, 44.6663, -36.947, 0.92", "8.63299, 46.2565, -38.5428, 0.92", "9.56894, 47.9263, -40.3186, 0.92", "10.4665, 49.5132, -42.0437, 0.92", "10.4743, 49.5272, -42.0593, 0.92", "11.3186, 51.0993, -43.8053, 0.92", "12.1126, 52.6377, -45.5962, 0.92", "12.8579, 54.313, -47.6195, 0.92", "12.8619, 54.3222, -47.6305, 0.92", "13.4579, 55.8657, -49.5419, 0.92", "13.9024, 57.1267, -51.0699, 0.92", "14.3404, 58.3355, -52.4749, 0.92", "15.0622, 60.109, -54.3733, 0.92", "15.0688, 60.1244, -54.388, 0.92", "16.1526, 62.5666, -56.6118, 0.92", "17.1025, 64.6759, -58.3967, 0.92", "18.3015, 67.2914, -60.5025, 0.92", "19.471, 69.9359, -62.5385, 0.92", "20.2669, 71.7803, -63.9406, 0.92", "21.3699, 74.6792, -66.2303, 0.92", "22.3377, 77.579, -68.5798, 0.92", "22.3408, 77.5903, -68.5889, 0.92", "22.9386, 80.6466, -71.0601, 0.92", "22.9404, 80.6582, -71.0692, 0.92", "23.5642, 85.2023, -74.4944, 0.92", "23.5665, 85.2202, -74.5074, 0.92", "23.9625, 88.188, -76.5131, 0.92", "23.9739, 88.2631, -76.5599, 0.92", "24.4135, 90.8545, -78.062, 0.92", "25.1915, 95.0771, -80.3602, 0.92", "25.1987, 95.1101, -80.3757, 0.92", "25.9168, 98.4389, -82.0082, 0.92", "25.9966, 98.811, -82.2131, 0.92" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "7.76348, 44.6663, -36.947, 0.92", "7.31153, 46.8737, -37.4557, 0.92", "6.87964, 49.1521, -38.0168, 0.92", "6.42845, 51.7468, -38.7283, 0.92", "5.80068, 54.6614, -39.6338, 0.92", "5.79423, 54.6876, -39.643, 0.92", "5.4142, 56.1537, -40.2129, 0.92", "4.58027, 58.7518, -41.3742, 0.92", "3.7361, 61.0438, -42.5339, 0.92", "2.71728, 63.5983, -43.9564, 0.92", "2.01233, 65.1893, -44.8716, 0.92", "0.890263, 67.5781, -46.2567, 0.92", "-0.3663, 70.0665, -47.6823, 0.92", "-1.46145, 72.1967, -48.8161, 0.92", "-2.45893, 74.2867, -49.7458, 0.92", "-3.79342, 77.3966, -50.9021, 0.92", "-3.8036, 77.4221, -50.9099, 0.92", "-4.96, 80.5889, -51.7501, 0.92", "-6.24918, 84.4437, -52.7659, 0.92", "-7.54134, 88.095, -53.7963, 0.92", "-7.71127, 88.5922, -53.934, 0.92", "-8.67473, 91.4835, -54.758, 0.92", "-9.55431, 94.1139, -55.5585, 0.92", "-10.722, 97.5708, -56.7805, 0.92", "-11.8863, 100.635, -58.2126, 0.92" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "69.8611, 96.3356, -32.3864, 0.46", "73.0232, 98.5022, -32.1151, 0.46", "75.7278, 100.355, -31.8831, 0.46", "78.7895, 102.453, -31.6204, 0.46" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "69.8611, 96.3356, -32.3864, 0.46", "69.2788, 101.209, -34.7042, 0.46", "68.8839, 104.585, -36.344, 0.46", "68.4849, 108.431, -38.2515, 0.46", "68.0322, 113.324, -40.7247, 0.46", "67.7674, 116.751, -42.4813, 0.46", "67.5823, 120.202, -44.2872, 0.46", "67.5819, 120.218, -44.2963, 0.46", "67.6035, 123.052, -46.028, 0.46", "67.7813, 126.201, -48.1436, 0.46", "68.0641, 129.254, -50.4497, 0.46", "68.2235, 132.062, -52.6538, 0.46", "68.3877, 134.715, -54.7816, 0.46", "68.3885, 134.729, -54.7934, 0.46", "68.4774, 136.831, -56.644, 0.46", "68.5538, 139.872, -59.5545, 0.46", "68.444, 142.452, -62.2218, 0.46" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "45.2333, 20.9955, -24.5808, 0.92", "48.2649, 23.0519, -26.2242, 0.92", "51.0418, 24.9698, -27.6708, 0.92", "55.379, 27.9768, -29.7259, 0.92", "59.7923, 31.0424, -31.708, 0.46", "63.6555, 33.6958, -33.3313, 0.46", "67.6658, 36.3803, -34.8823, 0.46", "67.6858, 36.3932, -34.8891, 0.46", "70.3651, 38.0654, -35.6154, 0.46", "70.3859, 38.0778, -35.6201, 0.46", "72.4258, 39.1803, -36.1137, 0.46", "75.0247, 40.3106, -36.7738, 0.46", "79.367, 42.0708, -38.0103, 0.46", "82.685, 43.3418, -39.1472, 0.46", "82.7176, 43.3537, -39.1599, 0.46", "85.311, 44.3728, -40.4121, 0.46", "87.7225, 45.319, -41.7604, 0.46", "92.3522, 46.9207, -44.6575, 0.46", "96.1049, 48.094, -47.1017, 0.46", "96.1546, 48.1089, -47.1349, 0.46", "104.21, 50.5265, -52.7119, 0.46", "109.254, 52.0273, -56.3303, 0.46", "115.751, 54.1087, -61.3668, 0.46", "120.586, 55.6753, -65.3091, 0.46", "120.604, 55.6819, -65.3243, 0.46", "124.988, 57.3962, -69.0331, 0.46", "125.041, 57.4203, -69.0794, 0.46", "129.453, 60.1489, -73.3663, 0.46", "129.508, 60.1904, -73.4187, 0.46", "133.238, 63.2235, -76.7585, 0.46", "133.254, 63.2367, -76.7719, 0.46", "137.102, 66.4265, -79.8138, 0.46", "140.165, 68.9557, -82.1589, 0.46", "144.976, 72.8404, -85.6443, 0.46", "148.422, 75.5831, -88.1457, 0.46", "148.574, 75.6997, -88.2584, 0.46", "152.602, 78.7581, -91.3086, 0.46", "152.628, 78.7764, -91.3279, 0.46", "157.234, 81.888, -94.8097, 0.46", "157.276, 81.9169, -94.8434, 0.46", "162.413, 85.2665, -98.817, 0.46", "162.483, 85.3169, -98.8657, 0.46", "167.555, 89.3043, -102.043, 0.46", "167.613, 89.3575, -102.079, 0.46", "170.621, 92.5995, -103.843, 0.46", "170.635, 92.6176, -103.852, 0.46", "173.834, 97.7115, -106.102, 0.46", "173.846, 97.7309, -106.112, 0.46", "176.286, 102.058, -108.447, 0.46", "176.298, 102.076, -108.458, 0.46", "179.467, 105.704, -110.771, 0.46", "179.568, 105.795, -110.83, 0.46", "184.899, 109.896, -113.542, 0.46", "184.927, 109.916, -113.555, 0.46", "190.563, 113.739, -116.043, 0.46", "198.176, 118.768, -119.195, 0.46", "205.042, 123.107, -121.741, 0.46", "210.787, 126.738, -123.8, 0.46", "214.778, 129.258, -125.138, 0.46" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "45.2333, 20.9955, -24.5808, 0.46", "45.5352, 20.1558, -26.3485, 0.46", "45.9288, 19.1349, -28.686, 0.46", "45.932, 19.1257, -28.7055, 0.46", "46.5933, 17.619, -31.6599, 0.46", "47.2978, 16.0734, -34.5635, 0.46", "48.09, 14.2974, -37.5542, 0.46", "48.0971, 14.2803, -37.581, 0.46", "48.6551, 12.9347, -39.4759, 0.46", "49.3653, 11.4207, -41.4618, 0.46", "49.544, 11.122, -41.8231, 0.46", "50.7673, 9.26235, -43.9513, 0.46", "51.8891, 7.57044, -45.7297, 0.46", "51.9119, 7.53701, -45.766, 0.46", "53.0613, 5.96906, -47.5497, 0.46", "54.3945, 4.17457, -49.696, 0.46", "55.6724, 2.55539, -51.6951, 0.46", "55.6822, 2.54361, -51.7105, 0.46", "56.9731, 0.957126, -53.7736, 0.46", "58.0704, -0.455617, -55.659, 0.46", "59.3143, -2.08772, -57.8468, 0.46", "59.3268, -2.10543, -57.8711, 0.46", "60.3963, -3.62976, -60.0698, 0.46", "61.55, -5.25684, -62.4576, 0.46", "62.6721, -6.79748, -64.824, 0.46" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "88.8256, -35.549, 108.044, 0.46", "95.3243, -41.094, 108.568, 0.46" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "88.8256, -35.549, 108.044, 0.46", "94.5917, -38.3221, 119.303, 0.46" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-21.3987, 58.5998, 15.826, 0.46", "-22.5451, 60.1599, 16.1468, 0.46", "-23.7096, 61.9419, 16.3747, 0.46", "-24.7086, 63.662, 16.5318, 0.46", "-25.6687, 65.506, 16.6707, 0.46", "-26.8964, 68.0269, 16.8413, 0.46", "-28.1965, 70.9387, 17.0502, 0.46", "-29.1796, 73.7461, 17.2269, 0.46", "-29.8286, 76.1845, 17.3709, 0.46", "-30.3049, 78.6635, 17.5264, 0.46", "-30.4592, 80.2995, 17.6595, 0.46", "-30.4589, 81.7227, 17.8136, 0.46", "-30.2212, 83.4591, 18.1004, 0.46", "-29.92, 84.432, 18.3628, 0.46", "-29.8937, 84.476, 18.38, 0.46", "-29.4788, 84.8362, 18.5954, 0.46", "-30.4778, 89.9932, 19.8632, 0.46" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-21.3987, 58.5998, 15.826, 0.92", "-21.44, 64.1415, 15.768, 0.92", "-21.4229, 68.3107, 15.6123, 0.92", "-21.3863, 72.4724, 15.409, 0.92", "-21.3742, 78.224, 15.0647, 0.92", "-21.4618, 84.4456, 14.6628, 0.92", "-21.593, 90.0814, 14.301, 0.92", "-21.7815, 95.1539, 13.9056, 0.92", "-21.7843, 95.2129, 13.9003, 0.92", "-22.0578, 100.079, 13.407, 0.92", "-22.2961, 103.669, 12.991, 0.92", "-22.6225, 109.158, 12.3018, 0.92", "-22.9688, 114.726, 11.6409, 0.92", "-22.9715, 114.761, 11.637, 0.92", "-23.2202, 118.274, 11.3094, 0.92", "-23.4287, 121.966, 11.0287, 0.92", "-23.773, 128.939, 10.6162, 0.92", "-23.9889, 132.924, 10.4557, 0.46", "-24.2954, 138.002, 10.3132, 0.46", "-24.608, 143.017, 10.2108, 0.46", "-24.968, 147.86, 10.1653, 0.46", "-25.4681, 153.355, 10.12, 0.46", "-25.9316, 157.467, 10.0765, 0.46", "-26.4808, 161.069, 9.93808, 0.46", "-27.3856, 165.828, 9.59909, 0.46", "-28.3594, 169.964, 9.18986, 0.46", "-29.5134, 174.026, 8.69651, 0.46", "-30.2503, 176.176, 8.37262, 0.46", "-31.7321, 179.753, 7.73359, 0.46", "-31.8773, 180.033, 7.67725, 0.46", "-34.4929, 191.598, 8.06411, 0.46", "-37.0654, 203.175, 7.79535, 0.46", "-37.4704, 215.022, 8.2806, 0.46" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "24.1551, -159.303, 29.1535, 0.46", "26.4593, -168.487, 29.5487, 0.46", "27.8335, -177.756, 28.1325, 0.46", "27.6593, -187.213, 28.7083, 0.46", "28.7057, -196.612, 29.3279, 0.46", "30.7332, -205.792, 30.5161, 0.46", "31.0869, -214.834, 33.3306, 0.46" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "24.1551, -159.303, 29.1535, 0.46", "25.5057, -169.081, 33.8305, 0.46", "27.4538, -178.737, 38.5491, 0.46", "28.5825, -188.231, 43.8312, 0.46", "29.498, -197.686, 49.2245, 0.46", "32.4712, -207.007, 54.0806, 0.46", "35.4626, -217.074, 57.0822, 0.46" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-33.0026, -54.4392, 16.8428, 0.46", "-31.7174, -55.3714, 15.2642, 0.46", "-30.9093, -56.0511, 14.2152, 0.46", "-30.2181, -56.7018, 13.1871, 0.46", "-29.3235, -57.6434, 11.5226, 0.46", "-29.3184, -57.6496, 11.5109, 0.46", "-28.6115, -58.6009, 9.65618, 0.46", "-28.6087, -58.6062, 9.64338, 0.46", "-28.4748, -59.0926, 8.32675, 0.46", "-28.4822, -59.5182, 6.98952, 0.46", "-28.6426, -60.0555, 5.22856, 0.46", "-28.6465, -60.0694, 5.18119, 0.46", "-28.7943, -60.5764, 3.21406, 0.46", "-28.7951, -60.58, 3.20042, 0.46", "-28.8208, -61.1479, 1.26649, 0.46", "-28.8192, -61.1605, 1.22602, 0.46", "-28.621, -61.6668, -0.506571, 0.46", "-28.6184, -61.6708, -0.519893, 0.46", "-28.2348, -62.066, -1.7732, 0.46", "-27.6598, -62.5175, -3.34605, 0.46", "-27.6475, -62.5254, -3.37822, 0.46", "-27.1506, -62.8664, -5.00995, 0.46", "-27.148, -62.8682, -5.02372, 0.46", "-26.8905, -63.0839, -6.9527, 0.46", "-26.8898, -63.0853, -6.96676, 0.46", "-26.9231, -63.265, -9.13593, 0.46", "-27.03, -63.4963, -11.5344, 0.46", "-27.2591, -63.7852, -14.3605, 0.46", "-27.26, -63.7868, -14.3745, 0.46", "-27.3267, -64.1175, -16.7132, 0.46", "-27.3248, -64.1353, -16.8178, 0.46", "-27.1698, -64.6211, -19.0564, 0.46", "-27.1682, -64.6248, -19.0699, 0.46", "-26.8199, -65.3764, -21.2927, 0.46", "-26.44, -66.1657, -23.5363, 0.46", "-26.4375, -66.1705, -23.5493, 0.46", "-26.2178, -66.7881, -25.2263, 0.46", "-26.2172, -66.7955, -25.2462, 0.46", "-26.347, -67.5018, -27.1441, 0.46", "-26.3492, -67.5065, -27.1573, 0.46", "-26.9064, -68.376, -29.7464, 0.46", "-27.4342, -69.112, -32.2897, 0.46", "-27.9228, -69.7198, -34.7133, 0.46", "-28.3596, -70.2122, -36.8986, 0.46", "-28.9136, -70.7104, -39.7321, 0.46", "-28.9162, -70.7124, -39.7459, 0.46", "-29.4943, -71.0505, -42.888, 0.46", "-29.9526, -71.2852, -46.0192, 0.46", "-29.9548, -71.2865, -46.0403, 0.46", "-30.1367, -71.4185, -48.2707, 0.46", "-30.1377, -71.4194, -48.2847, 0.46", "-30.3425, -71.6081, -50.6532, 0.46", "-30.3471, -71.6127, -50.688, 0.46", "-30.6038, -71.8874, -52.6617, 0.46", "-30.6225, -71.9131, -52.7995, 0.46" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-33.0026, -54.4392, 16.8428, 0.46", "-34.1085, -56.3489, 17.2429, 0.46", "-35.2673, -58.4921, 17.7122, 0.46", "-36.3416, -60.6798, 18.2231, 0.46", "-36.4889, -61.0285, 18.2955, 0.46", "-37.1835, -63.1506, 18.6455, 0.46", "-37.2738, -63.5208, 18.7026, 0.46", "-37.5127, -65.0887, 18.8994, 0.46", "-37.6783, -66.6919, 19.101, 0.46", "-37.7831, -69.6899, 19.4668, 0.46", "-37.79, -72.6148, 19.7902, 0.46", "-37.7486, -74.2395, 19.9534, 0.46", "-37.7483, -74.2644, 19.9559, 0.46", "-37.7738, -76.7734, 20.1661, 0.46", "-37.7918, -78.7899, 20.3113, 0.46", "-37.7925, -78.8065, 20.3126, 0.46", "-37.976, -81.3417, 20.4942, 0.46", "-38.1779, -84.2913, 20.6447, 0.46", "-38.3116, -87.2254, 20.7724, 0.46", "-38.334, -88.2715, 20.8073, 0.46", "-38.4206, -91.4535, 20.9256, 0.46", "-38.4212, -91.4869, 20.9262, 0.46", "-38.511, -94.0265, 20.9128, 0.46", "-38.6741, -96.5333, 20.8809, 0.46", "-38.6765, -96.5583, 20.8806, 0.46", "-39.0456, -99.1129, 20.8891, 0.46", "-39.5485, -102.087, 20.9143, 0.46", "-40.1511, -105.328, 21.0107, 0.46", "-40.5796, -107.399, 21.1278, 0.46", "-41.4062, -111.29, 21.4255, 0.46", "-42.2958, -115.619, 21.913, 0.46", "-42.2992, -115.635, 21.9152, 0.46", "-43.137, -119.556, 22.6407, 0.46", "-43.2815, -120.343, 22.8162, 0.46", "-43.4513, -121.375, 23.0824, 0.46", "-43.6678, -122.997, 23.6373, 0.46", "-44.1249, -131.22, 25.0675, 0.46", "-45.2227, -139.491, 25.5892, 0.46", "-45.0413, -147.848, 25.6499, 0.46", "-43.6352, -156.069, 26.2138, 0.46", "-41.8227, -164.038, 27.9723, 0.46", "-38.9185, -171.481, 30.4333, 0.46", "-34.8425, -178.659, 31.7509, 0.46" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "62.6721, -6.79748, -64.824, 0.46", "62.4628, -8.0388, -69.1724, 0.46", "62.2572, -9.3371, -74.0614, 0.46", "62.2603, -9.35205, -74.1439, 0.46", "62.5736, -10.0353, -78.7628, 0.46", "62.5841, -10.0463, -78.8311, 0.46", "63.8162, -11.0793, -85.0059, 0.46", "63.8457, -11.0912, -85.0985, 0.46", "66.632, -11.985, -91.3608, 0.46", "66.6532, -11.9908, -91.3966, 0.46", "70.7247, -12.8532, -95.604, 0.46", "70.8599, -12.8817, -95.6261, 0.46", "75.3575, -13.8394, -93.9903, 0.46", "75.5439, -13.8826, -93.8743, 0.46", "79.5579, -14.8824, -90.2865, 0.46", "79.6048, -14.8927, -90.2357, 0.46", "82.8794, -15.4122, -85.4274, 0.46" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "62.6721, -6.79748, -64.824, 0.46", "64.4111, -7.91181, -65.7594, 0.46", "67.2553, -9.59731, -67.1429, 0.46", "69.4095, -10.8351, -68.1513, 0.46", "72.2399, -12.3969, -69.4775, 0.46", "75.5062, -14.1589, -71.0961, 0.46", "78.3001, -15.666, -72.4806, 0.46", "81.4791, -17.3409, -74.0312, 0.46", "81.5126, -17.3585, -74.0472, 0.46", "84.2726, -18.7093, -75.3512, 0.46", "86.0702, -19.4907, -76.2195, 0.46" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_29", "dend_28", "dend_17", "dend_10", "dend_0", "dend_39", "dend_30", "dend_23", "dend_18", "dend_16", "dend_11", "dend_7", "dend_2", "dend_1", "dend_43", "dend_40", "dend_36", "dend_31", "dend_25", "dend_24", "dend_22", "dend_19", "dend_13", "dend_12", "dend_9", "dend_8", "dend_4", "dend_3", "dend_42", "dend_41", "dend_38", "dend_37", "dend_35", "dend_32", "dend_27", "dend_26", "dend_21", "dend_20", "dend_15", "dend_14", "dend_6", "dend_5", "dend_34", "dend_33" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_29", "dend_28", "dend_17", "dend_10", "dend_0", "dend_39", "dend_30", "dend_23", "dend_18", "dend_16", "dend_11", "dend_7", "dend_2", "dend_1", "dend_43", "dend_40", "dend_36", "dend_31", "dend_25", "dend_24", "dend_22", "dend_19", "dend_13", "dend_12", "dend_9", "dend_8", "dend_4", "dend_3", "dend_42", "dend_41", "dend_38", "dend_37", "dend_35", "dend_32", "dend_27", "dend_26", "dend_21", "dend_20", "dend_15", "dend_14", "dend_6", "dend_5", "dend_34", "dend_33" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_17", "dend_17", "dend_17", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_30", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_27", "dend_26", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.936579E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dSTUT214_L4_LBC_aecec7aee9_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_10, id: dend_10, parent: soma_0
create dend_10
public dend_10
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_39, id: dend_39, parent: dend_29
create dend_39
public dend_39
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_10
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_7, id: dend_7, parent: dend_0
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_36, id: dend_36, parent: dend_30
create dend_36
public dend_36
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_18
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_35, id: dend_35, parent: dend_31
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_29, dend_28, dend_17, dend_10, dend_0, dend_39, dend_30, dend_23, dend_18, dend_16, dend_11, dend_7, dend_2, dend_1, dend_43, dend_40, dend_36, dend_31, dend_25, dend_24, dend_22, dend_19, dend_13, dend_12, dend_9, dend_8, dend_4, dend_3, dend_42, dend_41, dend_38, dend_37, dend_35, dend_32, dend_27, dend_26, dend_21, dend_20, dend_15, dend_14, dend_6, dend_5, dend_34, dend_33]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_29, dend_28, dend_17, dend_10, dend_0, dend_39, dend_30, dend_23, dend_18, dend_16, dend_11, dend_7, dend_2, dend_1, dend_43, dend_40, dend_36, dend_31, dend_25, dend_24, dend_22, dend_19, dend_13, dend_12, dend_9, dend_8, dend_4, dend_3, dend_42, dend_41, dend_38, dend_37, dend_35, dend_32, dend_27, dend_26, dend_21, dend_20, dend_15, dend_14, dend_6, dend_5, dend_34, dend_33]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_28
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_17, dend_17, dend_17, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_29(0), soma_0(0.45000009274692127)
    connect dend_28(0), soma_0(0.45000009274692127)
    connect dend_17(0), soma_0(0.45000009274692127)
    connect dend_10(0), soma_0(0.45000009274692127)
    connect dend_0(0), soma_0(0.45000009274692127)
    connect axon_0(0), soma_0(1.0)
    connect dend_39(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_7(0), dend_0(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_36(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_35(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -4.53252, -6.163, 0.0, 2.09808 ) }
    soma_0 { pt3dadd( -4.07436, -5.56219, 0.0, 3.44591 ) }
    soma_0 { pt3dadd( -3.6162, -4.96138, 0.0, 4.74751 ) }
    soma_0 { pt3dadd( -3.15805, -4.36057, 0.0, 6.03519 ) }
    soma_0 { pt3dadd( -2.69989, -3.75975, 0.0, 7.18506 ) }
    soma_0 { pt3dadd( -2.24173, -3.15894, 0.0, 8.9595 ) }
    soma_0 { pt3dadd( -1.78358, -2.55813, 0.0, 10.0505 ) }
    soma_0 { pt3dadd( -1.32542, -1.95732, 0.0, 10.6762 ) }
    soma_0 { pt3dadd( -0.867263, -1.35651, 0.0, 11.0674 ) }
    soma_0 { pt3dadd( -0.409106, -0.7557, 0.0, 11.2738 ) }
    soma_0 { pt3dadd( 0.0490503, -0.154889, 0.0, 11.4538 ) }
    soma_0 { pt3dadd( 0.507207, 0.445922, 0.0, 11.4611 ) }
    soma_0 { pt3dadd( 0.965364, 1.04673, 0.0, 11.064 ) }
    soma_0 { pt3dadd( 1.42352, 1.64754, 0.0, 10.6669 ) }
    soma_0 { pt3dadd( 1.88168, 2.24835, 0.0, 10.1594 ) }
    soma_0 { pt3dadd( 2.33983, 2.84917, 0.0, 9.31974 ) }
    soma_0 { pt3dadd( 2.79799, 3.44998, 0.0, 8.13613 ) }
    soma_0 { pt3dadd( 3.25615, 4.05079, 0.0, 6.95253 ) }
    soma_0 { pt3dadd( 3.7143, 4.6516, 0.0, 6.00786 ) }
    soma_0 { pt3dadd( 4.17246, 5.25241, 0.0, 5.12226 ) }
    soma_0 { pt3dadd( 4.63062, 5.85322, 0.0, 2.96305 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 21/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 3.75305, 6.81067, -4.12, 2.75 ) }
    dend_29 { pt3dadd( 4.27889, 7.47319, -4.35418, 2.29 ) }
    dend_29 { pt3dadd( 6.49292, 10.2627, -5.34019, 1.83 ) }
    dend_29 { pt3dadd( 7.58378, 11.6371, -5.82599, 1.83 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 25/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -5.32694, -1.39933, -0.75, 1.38 ) }
    dend_28 { pt3dadd( -5.4522, -1.31641, -1.1014, 1.38 ) }
    dend_28 { pt3dadd( -6.51025, -0.655801, -3.66199, 1.38 ) }
    dend_28 { pt3dadd( -7.58769, -0.0488821, -6.0112, 1.38 ) }
    dend_28 { pt3dadd( -9.35492, 0.902073, -9.69104, 0.92 ) }
    dend_28 { pt3dadd( -10.2958, 1.31831, -11.6063, 0.92 ) }
    dend_28 { pt3dadd( -10.3229, 1.33163, -11.6669, 0.92 ) }
    dend_28 { pt3dadd( -11.2719, 1.80244, -14.0003, 0.92 ) }
    dend_28 { pt3dadd( -12.1768, 2.2357, -16.2761, 0.92 ) }
    dend_28 { pt3dadd( -12.1858, 2.24047, -16.2993, 0.92 ) }
    dend_28 { pt3dadd( -12.9815, 2.77175, -18.3188, 0.92 ) }
    dend_28 { pt3dadd( -14.2027, 3.72156, -21.6695, 0.92 ) }
    dend_28 { pt3dadd( -15.4408, 4.91644, -25.0113, 0.92 ) }
    dend_28 { pt3dadd( -16.3721, 6.06605, -27.4529, 0.92 ) }
    dend_28 { pt3dadd( -17.5848, 7.75806, -30.3865, 0.92 ) }
    dend_28 { pt3dadd( -18.7257, 9.37327, -32.7111, 0.92 ) }
    dend_28 { pt3dadd( -18.7361, 9.38835, -32.7287, 0.92 ) }
    dend_28 { pt3dadd( -20.2606, 11.5265, -34.7109, 0.92 ) }
    dend_28 { pt3dadd( -21.5849, 13.575, -36.1481, 0.46 ) }
    dend_28 { pt3dadd( -21.5934, 13.5874, -36.1557, 0.46 ) }
    dend_28 { pt3dadd( -23.1343, 15.528, -37.2344, 0.46 ) }
    dend_28 { pt3dadd( -23.1446, 15.5392, -37.2418, 0.46 ) }
    dend_28 { pt3dadd( -24.5335, 16.9664, -38.4206, 0.46 ) }
    dend_28 { pt3dadd( -24.5436, 16.976, -38.4301, 0.46 ) }
    dend_28 { pt3dadd( -26.0326, 18.3543, -40.0163, 0.46 ) }
    dend_28 { pt3dadd( -27.7738, 19.9368, -42.0424, 0.46 ) }
    dend_28 { pt3dadd( -29.5646, 21.4645, -44.3275, 0.46 ) }
    dend_28 { pt3dadd( -31.3837, 22.9597, -46.8002, 0.46 ) }
    dend_28 { pt3dadd( -31.3969, 22.9702, -46.8191, 0.46 ) }
    dend_28 { pt3dadd( -32.3411, 23.6705, -48.2381, 0.46 ) }
    dend_28 { pt3dadd( -34.0445, 24.8872, -51.0094, 0.46 ) }
    dend_28 { pt3dadd( -35.7824, 26.0761, -53.9671, 0.46 ) }
    dend_28 { pt3dadd( -37.5611, 27.2971, -57.0419, 0.46 ) }
    dend_28 { pt3dadd( -37.5731, 27.3056, -57.0626, 0.46 ) }
    dend_28 { pt3dadd( -39.5153, 28.695, -60.4387, 0.46 ) }
    dend_28 { pt3dadd( -41.7796, 30.339, -64.3983, 0.46 ) }
    dend_28 { pt3dadd( -43.4252, 31.6105, -67.4033, 0.46 ) }
    dend_28 { pt3dadd( -43.4326, 31.6167, -67.4171, 0.46 ) }
    dend_28 { pt3dadd( -44.4957, 32.4955, -69.3658, 0.46 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 64/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -0.836948, 6.60067, 4.0, 1.83 ) }
    dend_17 { pt3dadd( -0.836948, 6.60067, 4.0, 1.83 ) }
    dend_17 { pt3dadd( -0.831711, 10.0737, 5.60146, 1.83 ) }
    dend_17 { pt3dadd( -0.826339, 13.6359, 7.244, 1.83 ) }
    // Section: dend_10, id: dend_10, parent: soma_0 (entry count 68/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 3.66305, -5.30934, 2.72, 2.29 ) }
    dend_10 { pt3dadd( 3.75398, -5.77746, 2.81484, 2.29 ) }
    dend_10 { pt3dadd( 3.75398, -5.77746, 2.81484, 2.29 ) }
    dend_10 { pt3dadd( 3.81706, -6.1416, 2.89024, 2.29 ) }
    dend_10 { pt3dadd( 4.35755, -9.69514, 3.59314, 1.83 ) }
    dend_10 { pt3dadd( 4.73106, -12.6341, 4.16244, 1.83 ) }
    dend_10 { pt3dadd( 4.95524, -14.5267, 4.50565, 1.83 ) }
    dend_10 { pt3dadd( 5.20269, -16.6703, 4.88868, 1.83 ) }
    dend_10 { pt3dadd( 5.48382, -19.2059, 5.33553, 1.38 ) }
    dend_10 { pt3dadd( 5.62997, -20.6363, 5.58094, 1.38 ) }
    dend_10 { pt3dadd( 5.74089, -22.6331, 5.89844, 1.38 ) }
    dend_10 { pt3dadd( 5.84537, -25.0696, 6.25547, 1.38 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 80/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -5.97695, -5.97934, 1.18, 1.83 ) }
    dend_0 { pt3dadd( -6.27713, -6.2469, 1.2592, 1.83 ) }
    dend_0 { pt3dadd( -6.27713, -6.2469, 1.2592, 1.83 ) }
    dend_0 { pt3dadd( -8.43627, -8.126, 1.68655, 1.83 ) }
    dend_0 { pt3dadd( -10.1147, -9.58669, 2.01874, 1.83 ) }
    dend_0 { pt3dadd( -11.9501, -11.1841, 2.38203, 1.83 ) }
    dend_0 { pt3dadd( -13.9724, -12.9442, 2.7823, 1.38 ) }
    dend_0 { pt3dadd( -15.9514, -14.6336, 3.16872, 1.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 88/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 4.63062, 5.85322, 0.0, 1.08335 ) }
    axon_0 { pt3dadd( 13.7262, 17.7809, 0.0, 1.08335 ) }
    axon_0 { pt3dadd( 22.8219, 29.7086, 0.0, 1.08335 ) }
    // Section: dend_39, id: dend_39, parent: dend_29 (entry count 91/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 7.58378, 11.6371, -5.82599, 0.92 ) }
    dend_39 { pt3dadd( 7.90649, 13.7193, -8.03256, 0.92 ) }
    dend_39 { pt3dadd( 8.01212, 15.1803, -9.59659, 0.92 ) }
    dend_39 { pt3dadd( 8.00087, 17.1685, -11.7714, 0.92 ) }
    dend_39 { pt3dadd( 7.93952, 18.5322, -13.2802, 0.92 ) }
    dend_39 { pt3dadd( 7.87038, 20.5841, -15.5735, 0.92 ) }
    dend_39 { pt3dadd( 7.87053, 20.5986, -15.5899, 0.92 ) }
    dend_39 { pt3dadd( 7.86239, 22.7709, -18.2338, 0.92 ) }
    dend_39 { pt3dadd( 7.85014, 23.9035, -19.6439, 0.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_39 { pt3dadd( 7.84893, 23.9239, -19.6697, 0.92 ) }
    dend_39 { pt3dadd( 7.62873, 25.5719, -21.6288, 0.92 ) }
    dend_39 { pt3dadd( 7.46564, 26.5697, -22.7571, 0.92 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 3/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 7.58378, 11.6371, -5.82599, 1.38 ) }
    dend_30 { pt3dadd( 10.3152, 12.8858, -5.66526, 1.38 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 5/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -0.826339, 13.6359, 7.244, 0.92 ) }
    dend_23 { pt3dadd( 0.185514, 13.8937, 9.22507, 0.92 ) }
    dend_23 { pt3dadd( 1.11537, 14.1417, 11.0274, 0.92 ) }
    dend_23 { pt3dadd( 2.39631, 14.3845, 13.5703, 0.92 ) }
    dend_23 { pt3dadd( 3.5606, 14.518, 15.9599, 0.92 ) }
    dend_23 { pt3dadd( 5.53761, 14.7244, 20.1698, 0.92 ) }
    dend_23 { pt3dadd( 6.65886, 14.7498, 22.5183, 0.46 ) }
    dend_23 { pt3dadd( 7.17159, 14.7285, 23.68, 0.46 ) }
    dend_23 { pt3dadd( 7.99439, 14.5655, 25.4032, 0.46 ) }
    dend_23 { pt3dadd( 8.55982, 14.3184, 26.3291, 0.46 ) }
    dend_23 { pt3dadd( 10.2215, 13.1604, 28.1408, 0.46 ) }
    dend_23 { pt3dadd( 12.3348, 11.4271, 29.909, 0.46 ) }
    dend_23 { pt3dadd( 12.3481, 11.4152, 29.9189, 0.46 ) }
    dend_23 { pt3dadd( 14.6484, 9.44561, 31.439, 0.46 ) }
    dend_23 { pt3dadd( 16.8245, 7.72149, 32.6169, 0.46 ) }
    dend_23 { pt3dadd( 18.9499, 5.93749, 33.4765, 0.46 ) }
    dend_23 { pt3dadd( 24.7628, 3.79241, 41.5717, 0.46 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 22/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -0.826339, 13.6359, 7.244, 1.38 ) }
    dend_18 { pt3dadd( -2.09134, 17.5059, 8.21757, 1.38 ) }
    dend_18 { pt3dadd( -3.32661, 21.2849, 9.16826, 1.38 ) }
    dend_18 { pt3dadd( -4.74591, 25.6269, 10.2606, 1.38 ) }
    dend_18 { pt3dadd( -6.04706, 29.6074, 11.262, 1.38 ) }
    dend_18 { pt3dadd( -7.08394, 32.7795, 12.06, 1.38 ) }
    dend_18 { pt3dadd( -8.34099, 36.6251, 13.0274, 1.38 ) }
    // Section: dend_16, id: dend_16, parent: dend_10 (entry count 29/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 5.84537, -25.0696, 6.25547, 0.92 ) }
    dend_16 { pt3dadd( 7.11686, -26.2742, 5.39433, 0.92 ) }
    dend_16 { pt3dadd( 8.01485, -27.2258, 4.81754, 0.92 ) }
    dend_16 { pt3dadd( 9.50893, -28.8838, 3.91333, 0.92 ) }
    dend_16 { pt3dadd( 10.9403, -30.4311, 3.09051, 0.92 ) }
    dend_16 { pt3dadd( 12.6219, -32.2003, 2.17022, 0.92 ) }
    dend_16 { pt3dadd( 14.0201, -33.7529, 1.41283, 0.92 ) }
    dend_16 { pt3dadd( 15.6996, -35.7474, 0.52665, 0.92 ) }
    dend_16 { pt3dadd( 17.2098, -37.5876, -0.265065, 0.92 ) }
    dend_16 { pt3dadd( 18.9217, -39.6896, -1.17336, 0.92 ) }
    dend_16 { pt3dadd( 20.5167, -41.7776, -2.05013, 0.92 ) }
    dend_16 { pt3dadd( 22.008, -43.8414, -2.90252, 0.92 ) }
    dend_16 { pt3dadd( 23.0189, -45.2498, -3.51448, 0.92 ) }
    dend_16 { pt3dadd( 23.9042, -46.3919, -4.07377, 0.92 ) }
    dend_16 { pt3dadd( 23.926, -46.4195, -4.08809, 0.92 ) }
    dend_16 { pt3dadd( 25.4087, -48.3741, -5.13978, 0.92 ) }
    dend_16 { pt3dadd( 25.431, -48.4008, -5.15509, 0.92 ) }
    dend_16 { pt3dadd( 27.1491, -50.3685, -6.28368, 0.46 ) }
    dend_16 { pt3dadd( 28.6227, -52.0252, -7.21984, 0.46 ) }
    dend_16 { pt3dadd( 30.0535, -53.6242, -8.11588, 0.46 ) }
    dend_16 { pt3dadd( 31.3174, -55.0554, -8.87764, 0.46 ) }
    dend_16 { pt3dadd( 33.3928, -57.3511, -10.0838, 0.46 ) }
    dend_16 { pt3dadd( 35.235, -59.3892, -11.1241, 0.46 ) }
    dend_16 { pt3dadd( 37.0496, -61.4294, -12.1509, 0.46 ) }
    dend_16 { pt3dadd( 37.0637, -61.4453, -12.1591, 0.46 ) }
    dend_16 { pt3dadd( 39.7009, -64.4322, -13.807, 0.46 ) }
    dend_16 { pt3dadd( 41.4557, -66.4117, -14.9644, 0.46 ) }
    dend_16 { pt3dadd( 41.4688, -66.4275, -14.9745, 0.46 ) }
    dend_16 { pt3dadd( 42.6122, -67.7863, -15.9207, 0.46 ) }
    dend_16 { pt3dadd( 43.3497, -68.6898, -16.5491, 0.46 ) }
    dend_16 { pt3dadd( 44.3101, -69.8234, -17.2145, 0.46 ) }
    dend_16 { pt3dadd( 44.3195, -69.8342, -17.2196, 0.46 ) }
    dend_16 { pt3dadd( 45.6366, -71.3939, -17.7532, 0.46 ) }
    dend_16 { pt3dadd( 47.8077, -73.9561, -18.406, 0.46 ) }
    dend_16 { pt3dadd( 49.5414, -76.0716, -18.7707, 0.46 ) }
    dend_16 { pt3dadd( 52.1322, -79.4156, -19.1647, 0.46 ) }
    dend_16 { pt3dadd( 53.7724, -81.7073, -19.3485, 0.46 ) }
    dend_16 { pt3dadd( 55.1128, -83.7613, -19.4645, 0.46 ) }
    dend_16 { pt3dadd( 56.7966, -86.6782, -19.6505, 0.46 ) }
    dend_16 { pt3dadd( 58.5056, -90.0618, -19.9137, 0.46 ) }
    dend_16 { pt3dadd( 59.8655, -93.0188, -20.2283, 0.46 ) }
    dend_16 { pt3dadd( 61.608, -97.2586, -20.8258, 0.46 ) }
    dend_16 { pt3dadd( 62.4245, -99.4044, -21.1584, 0.46 ) }
    dend_16 { pt3dadd( 63.6328, -102.884, -21.7473, 0.46 ) }
    dend_16 { pt3dadd( 64.2995, -105.073, -22.1255, 0.46 ) }
    dend_16 { pt3dadd( 64.9281, -107.437, -22.5452, 0.46 ) }
    dend_16 { pt3dadd( 65.3341, -109.171, -22.8523, 0.46 ) }
    dend_16 { pt3dadd( 65.3391, -109.193, -22.8547, 0.46 ) }
    dend_16 { pt3dadd( 66.0268, -112.24, -22.9303, 0.46 ) }
    dend_16 { pt3dadd( 66.6256, -114.831, -22.7426, 0.46 ) }
    dend_16 { pt3dadd( 67.2719, -117.447, -22.4704, 0.46 ) }
    dend_16 { pt3dadd( 67.2793, -117.476, -22.4674, 0.46 ) }
    dend_16 { pt3dadd( 68.2519, -120.986, -22.2603, 0.46 ) }
    dend_16 { pt3dadd( 68.2627, -121.022, -22.258, 0.46 ) }
    dend_16 { pt3dadd( 68.6333, -122.059, -22.1777, 0.46 ) }
    dend_16 { pt3dadd( 69.5184, -124.134, -22.0565, 0.46 ) }
    dend_16 { pt3dadd( 70.0973, -125.326, -22.0722, 0.46 ) }
    dend_16 { pt3dadd( 70.8621, -127.168, -22.443, 0.46 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 87/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 5.84537, -25.0696, 6.25547, 0.92 ) }
    dend_11 { pt3dadd( 5.61269, -28.3271, 6.52109, 0.92 ) }
    dend_11 { pt3dadd( 5.39595, -31.536, 6.9324, 0.92 ) }
    dend_11 { pt3dadd( 5.04683, -34.7568, 7.4284, 0.92 ) }
    dend_11 { pt3dadd( 4.57101, -38.4589, 8.01409, 0.92 ) }
    dend_11 { pt3dadd( 4.09745, -42.4157, 8.60884, 0.92 ) }
    dend_11 { pt3dadd( 3.78457, -45.8128, 9.11418, 0.92 ) }
    dend_11 { pt3dadd( 3.51078, -48.3493, 9.51009, 0.92 ) }
    dend_11 { pt3dadd( 3.19035, -51.4045, 9.99575, 0.92 ) }
    dend_11 { pt3dadd( 2.76804, -55.7148, 10.7374, 0.92 ) }
    dend_11 { pt3dadd( 2.33817, -60.0231, 11.518, 0.92 ) }
    dend_11 { pt3dadd( 2.08705, -64.5084, 12.2865, 0.92 ) }
    // Section: dend_7, id: dend_7, parent: dend_0 (entry count 99/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -15.9514, -14.6336, 3.16872, 0.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_7 { pt3dadd( -17.9824, -14.8583, 6.43627, 0.92 ) }
    dend_7 { pt3dadd( -19.7741, -15.327, 9.87822, 0.92 ) }
    dend_7 { pt3dadd( -21.1263, -16.0017, 12.8162, 0.92 ) }
    dend_7 { pt3dadd( -22.3105, -17.078, 15.8061, 0.46 ) }
    dend_7 { pt3dadd( -22.5215, -17.3172, 16.3795, 0.46 ) }
    dend_7 { pt3dadd( -22.5279, -17.3258, 16.3986, 0.46 ) }
    dend_7 { pt3dadd( -23.5028, -19.2644, 19.8124, 0.46 ) }
    dend_7 { pt3dadd( -24.0238, -20.7235, 21.9862, 0.46 ) }
    dend_7 { pt3dadd( -24.6571, -23.56, 25.9204, 0.46 ) }
    dend_7 { pt3dadd( -24.6604, -23.5792, 25.9468, 0.46 ) }
    dend_7 { pt3dadd( -24.8487, -24.5377, 27.2848, 0.46 ) }
    dend_7 { pt3dadd( -25.2299, -26.1556, 29.5152, 0.46 ) }
    dend_7 { pt3dadd( -29.7387, -31.4094, 37.9709, 0.46 ) }
    dend_7 { pt3dadd( -32.7077, -36.5411, 47.1513, 0.46 ) }
    dend_7 { pt3dadd( -36.2957, -42.8204, 55.3443, 0.46 ) }
    dend_7 { pt3dadd( -40.2513, -49.3518, 63.1624, 0.46 ) }
    dend_7 { pt3dadd( -42.6522, -56.3547, 71.2013, 0.46 ) }
    dend_7 { pt3dadd( -43.0303, -64.3397, 78.653, 0.46 ) }
    dend_7 { pt3dadd( -44.6199, -71.1056, 87.0866, 0.46 ) }
    dend_7 { pt3dadd( -44.231, -76.9691, 96.3006, 0.46 ) }
    dend_7 { pt3dadd( -45.5445, -83.7591, 104.762, 0.46 ) }
    dend_7 { pt3dadd( -47.9003, -89.8895, 113.497, 0.46 ) }
    dend_7 { pt3dadd( -49.0587, -98.011, 120.717, 0.46 ) }
    dend_7 { pt3dadd( -52.0167, -105.95, 127.621, 0.46 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 24/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -15.9514, -14.6336, 3.16872, 0.92 ) }
    dend_2 { pt3dadd( -17.1952, -18.2048, 3.81025, 0.92 ) }
    dend_2 { pt3dadd( -18.1207, -20.8437, 4.36982, 0.92 ) }
    dend_2 { pt3dadd( -19.5864, -25.207, 5.43787, 0.92 ) }
    dend_2 { pt3dadd( -20.2674, -27.3764, 6.03692, 0.92 ) }
    dend_2 { pt3dadd( -21.2418, -30.2579, 6.95549, 0.92 ) }
    dend_2 { pt3dadd( -21.9466, -32.0755, 7.60994, 0.92 ) }
    dend_2 { pt3dadd( -22.8549, -34.1699, 8.47981, 0.92 ) }
    dend_2 { pt3dadd( -23.6361, -35.6835, 9.19062, 0.92 ) }
    dend_2 { pt3dadd( -24.4386, -37.1741, 9.95274, 0.92 ) }
    dend_2 { pt3dadd( -25.8426, -39.7117, 11.227, 0.92 ) }
    dend_2 { pt3dadd( -27.3742, -42.3089, 12.5438, 0.92 ) }
    dend_2 { pt3dadd( -28.7802, -44.5782, 13.6651, 0.92 ) }
    dend_2 { pt3dadd( -31.0588, -47.9848, 15.2952, 0.92 ) }
    dend_2 { pt3dadd( -33.3656, -51.268, 16.7588, 0.92 ) }
    dend_2 { pt3dadd( -33.3851, -51.2961, 16.7701, 0.92 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 40/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -15.9514, -14.6336, 3.16872, 1.38 ) }
    dend_1 { pt3dadd( -17.7921, -12.5477, 1.70431, 1.38 ) }
    dend_1 { pt3dadd( -19.1964, -11.0376, 0.641657, 1.38 ) }
    dend_1 { pt3dadd( -20.4242, -9.70415, -0.319795, 1.38 ) }
    dend_1 { pt3dadd( -21.5823, -8.49232, -1.25394, 1.38 ) }
    dend_1 { pt3dadd( -22.8785, -7.24538, -2.31421, 1.38 ) }
    dend_1 { pt3dadd( -24.0597, -6.21563, -3.26783, 1.38 ) }
    dend_1 { pt3dadd( -25.0738, -5.42574, -4.07469, 1.38 ) }
    dend_1 { pt3dadd( -26.8694, -4.34972, -5.45285, 1.38 ) }
    dend_1 { pt3dadd( -28.7099, -3.56098, -6.81394, 1.38 ) }
    dend_1 { pt3dadd( -30.9918, -2.88688, -8.48192, 1.38 ) }
    dend_1 { pt3dadd( -32.2211, -2.64855, -9.36715, 1.38 ) }
    dend_1 { pt3dadd( -33.7855, -2.47971, -10.5034, 1.38 ) }
    dend_1 { pt3dadd( -36.0055, -2.42724, -12.1565, 1.38 ) }
    dend_1 { pt3dadd( -37.4731, -2.4859, -13.2664, 1.38 ) }
    dend_1 { pt3dadd( -38.7489, -2.5668, -14.3026, 1.38 ) }
    dend_1 { pt3dadd( -38.764, -2.56769, -14.3159, 1.38 ) }
    dend_1 { pt3dadd( -40.2619, -2.54116, -15.7792, 1.38 ) }
    dend_1 { pt3dadd( -41.6273, -2.3912, -17.224, 1.38 ) }
    dend_1 { pt3dadd( -42.9309, -2.12602, -18.6951, 0.92 ) }
    dend_1 { pt3dadd( -44.084, -1.76399, -20.047, 0.92 ) }
    dend_1 { pt3dadd( -45.5358, -1.21575, -21.778, 0.92 ) }
    dend_1 { pt3dadd( -46.9184, -0.57334, -23.4901, 0.92 ) }
    dend_1 { pt3dadd( -48.1875, 0.158947, -25.1434, 0.92 ) }
    dend_1 { pt3dadd( -49.0303, 0.788419, -26.3659, 0.92 ) }
    dend_1 { pt3dadd( -50.1925, 1.81115, -28.2212, 0.92 ) }
    dend_1 { pt3dadd( -51.1987, 2.88438, -30.0057, 0.92 ) }
    dend_1 { pt3dadd( -52.3359, 4.3913, -32.3751, 0.92 ) }
    dend_1 { pt3dadd( -52.9108, 5.25393, -33.7537, 0.92 ) }
    dend_1 { pt3dadd( -53.6413, 6.50663, -35.721, 0.92 ) }
    dend_1 { pt3dadd( -54.5307, 8.19196, -38.3316, 0.92 ) }
    dend_1 { pt3dadd( -55.0978, 9.2749, -40.0234, 0.92 ) }
    dend_1 { pt3dadd( -55.5754, 10.2678, -41.4806, 0.92 ) }
    dend_1 { pt3dadd( -56.1152, 11.3674, -43.0243, 0.92 ) }
    dend_1 { pt3dadd( -57.1894, 13.3807, -45.688, 0.92 ) }
    dend_1 { pt3dadd( -57.1965, 13.3928, -45.7025, 0.92 ) }
    dend_1 { pt3dadd( -58.113, 14.8381, -47.2443, 0.92 ) }
    dend_1 { pt3dadd( -59.1383, 16.3088, -48.7784, 0.92 ) }
    dend_1 { pt3dadd( -60.5708, 18.1277, -50.6752, 0.92 ) }
    dend_1 { pt3dadd( -61.811, 19.6485, -52.2292, 0.92 ) }
    dend_1 { pt3dadd( -63.4873, 21.5481, -54.253, 0.92 ) }
    dend_1 { pt3dadd( -64.8277, 22.9791, -55.8586, 0.92 ) }
    dend_1 { pt3dadd( -65.9268, 24.0197, -57.159, 0.92 ) }
    dend_1 { pt3dadd( -66.7857, 24.7386, -58.214, 0.92 ) }
    dend_1 { pt3dadd( -68.1314, 25.7164, -59.9695, 0.92 ) }
    dend_1 { pt3dadd( -68.9374, 26.2373, -61.1146, 0.92 ) }
    dend_1 { pt3dadd( -70.1123, 26.9051, -62.9713, 0.92 ) }
    dend_1 { pt3dadd( -70.9826, 27.3432, -64.3933, 0.92 ) }
    dend_1 { pt3dadd( -72.0143, 27.8338, -66.0475, 0.46 ) }
    dend_1 { pt3dadd( -72.6491, 28.1525, -67.1575, 0.46 ) }
    dend_1 { pt3dadd( -72.6556, 28.1553, -67.1688, 0.46 ) }
    dend_1 { pt3dadd( -73.5829, 28.5676, -68.8045, 0.46 ) }
    dend_1 { pt3dadd( -74.5684, 29.0472, -70.5106, 0.46 ) }
    dend_1 { pt3dadd( -74.5748, 29.0513, -70.5217, 0.46 ) }
    dend_1 { pt3dadd( -75.3972, 29.6367, -71.857, 0.46 ) }
    dend_1 { pt3dadd( -76.6774, 30.7225, -73.9634, 0.46 ) }
    dend_1 { pt3dadd( -76.6837, 30.7282, -73.9737, 0.46 ) }
    dend_1 { pt3dadd( -77.8267, 31.8969, -75.8768, 0.46 ) }
    dend_1 { pt3dadd( -78.7356, 32.9683, -77.4538, 0.46 ) }
    dend_1 { pt3dadd( -79.5345, 33.9872, -78.8795, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_1 { pt3dadd( -80.1742, 34.8535, -80.0408, 0.46 ) }
    dend_1 { pt3dadd( -81.1611, 36.2647, -81.8785, 0.46 ) }
    dend_1 { pt3dadd( -81.9844, 37.4066, -83.4024, 0.46 ) }
    dend_1 { pt3dadd( -83.1947, 39.0359, -85.6107, 0.46 ) }
    dend_1 { pt3dadd( -84.4715, 40.6457, -87.8578, 0.46 ) }
    dend_1 { pt3dadd( -86.0066, 42.529, -90.5835, 0.46 ) }
    dend_1 { pt3dadd( -87.6455, 44.4047, -93.4803, 0.46 ) }
    dend_1 { pt3dadd( -89.4126, 46.3161, -96.5978, 0.46 ) }
    dend_1 { pt3dadd( -90.8834, 47.7986, -99.1673, 0.46 ) }
    dend_1 { pt3dadd( -92.5662, 49.3295, -102.073, 0.46 ) }
    dend_1 { pt3dadd( -93.5272, 50.0775, -103.723, 0.46 ) }
    dend_1 { pt3dadd( -94.5679, 50.7585, -105.531, 0.46 ) }
    dend_1 { pt3dadd( -95.5389, 51.3096, -107.252, 0.46 ) }
    dend_1 { pt3dadd( -95.5452, 51.3125, -107.263, 0.46 ) }
    dend_1 { pt3dadd( -96.5164, 51.5677, -109.1, 0.46 ) }
    dend_1 { pt3dadd( -97.4291, 51.5731, -110.894, 0.46 ) }
    dend_1 { pt3dadd( -97.439, 51.571, -110.911, 0.46 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 17/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 22.8219, 29.7086, 0.0, 0.46 ) }
    axon_1 { pt3dadd( 31.9175, 41.6363, 0.0, 0.46 ) }
    axon_1 { pt3dadd( 41.0131, 53.564, 0.0, 0.46 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 20/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 7.46564, 26.5697, -22.7571, 0.92 ) }
    dend_43 { pt3dadd( 6.96569, 27.5896, -25.8507, 0.92 ) }
    dend_43 { pt3dadd( 6.96378, 27.5957, -25.8751, 0.92 ) }
    dend_43 { pt3dadd( 6.78323, 28.2879, -28.8129, 0.92 ) }
    dend_43 { pt3dadd( 6.78101, 28.2921, -28.8377, 0.92 ) }
    dend_43 { pt3dadd( 6.23482, 28.9286, -33.2733, 0.92 ) }
    dend_43 { pt3dadd( 5.36415, 29.6575, -37.9553, 0.92 ) }
    dend_43 { pt3dadd( 3.88564, 30.6015, -42.8137, 0.92 ) }
    dend_43 { pt3dadd( 3.84208, 30.6256, -42.9298, 0.92 ) }
    dend_43 { pt3dadd( 2.13279, 31.4421, -46.79, 0.92 ) }
    dend_43 { pt3dadd( 0.550103, 32.0765, -49.9599, 0.92 ) }
    dend_43 { pt3dadd( -1.63755, 32.7867, -53.9575, 0.92 ) }
    dend_43 { pt3dadd( -6.01065, 34.0363, -61.6545, 0.92 ) }
    dend_43 { pt3dadd( -8.55476, 34.6691, -65.9086, 0.92 ) }
    dend_43 { pt3dadd( -11.1992, 35.2224, -70.2932, 0.92 ) }
    dend_43 { pt3dadd( -13.9048, 35.6905, -74.8589, 0.92 ) }
    dend_43 { pt3dadd( -16.6341, 35.9809, -79.6642, 0.92 ) }
    dend_43 { pt3dadd( -18.8798, 36.0448, -83.8542, 0.92 ) }
    dend_43 { pt3dadd( -20.8877, 35.9598, -87.8564, 0.92 ) }
    dend_43 { pt3dadd( -22.7955, 35.8115, -91.8825, 0.92 ) }
    dend_43 { pt3dadd( -23.7489, 35.794, -94.0201, 0.92 ) }
    dend_43 { pt3dadd( -25.9132, 35.9369, -99.1615, 0.92 ) }
    dend_43 { pt3dadd( -25.9236, 35.9381, -99.1846, 0.92 ) }
    dend_43 { pt3dadd( -28.3348, 36.2816, -103.939, 0.92 ) }
    dend_43 { pt3dadd( -29.4319, 36.4557, -105.942, 0.92 ) }
    dend_43 { pt3dadd( -32.0448, 36.7674, -110.573, 0.92 ) }
    dend_43 { pt3dadd( -32.078, 36.7711, -110.626, 0.92 ) }
    dend_43 { pt3dadd( -34.1202, 36.9269, -113.721, 0.92 ) }
    dend_43 { pt3dadd( -36.4677, 37.0308, -117.194, 0.92 ) }
    dend_43 { pt3dadd( -36.4825, 37.0302, -117.214, 0.92 ) }
    dend_43 { pt3dadd( -39.6017, 36.5972, -121.683, 0.92 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 51/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 7.46564, 26.5697, -22.7571, 0.92 ) }
    dend_40 { pt3dadd( 7.16783, 27.8925, -24.0079, 0.92 ) }
    dend_40 { pt3dadd( 6.98822, 29.2139, -25.1187, 0.92 ) }
    dend_40 { pt3dadd( 6.86785, 30.3477, -26.0367, 0.92 ) }
    dend_40 { pt3dadd( 6.76969, 32.0139, -27.3026, 0.92 ) }
    dend_40 { pt3dadd( 6.7472, 33.1976, -28.1887, 0.92 ) }
    dend_40 { pt3dadd( 6.72675, 34.6985, -29.3081, 0.92 ) }
    dend_40 { pt3dadd( 6.68892, 36.3966, -30.5391, 0.92 ) }
    dend_40 { pt3dadd( 6.72041, 37.4844, -31.3228, 0.92 ) }
    dend_40 { pt3dadd( 6.88478, 39.3733, -32.6975, 0.92 ) }
    dend_40 { pt3dadd( 7.05655, 40.5008, -33.5435, 0.92 ) }
    dend_40 { pt3dadd( 7.32462, 41.945, -34.6663, 0.92 ) }
    dend_40 { pt3dadd( 7.57213, 43.4125, -35.8709, 0.92 ) }
    dend_40 { pt3dadd( 7.76085, 44.6515, -36.9339, 0.92 ) }
    dend_40 { pt3dadd( 7.76348, 44.6663, -36.947, 0.92 ) }
    // Section: dend_36, id: dend_36, parent: dend_30 (entry count 66/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 10.3152, 12.8858, -5.66526, 0.92 ) }
    dend_36 { pt3dadd( 12.3889, 15.5069, -7.95787, 0.92 ) }
    dend_36 { pt3dadd( 13.7548, 17.0019, -9.35472, 0.92 ) }
    dend_36 { pt3dadd( 14.71, 17.9183, -10.1863, 0.92 ) }
    dend_36 { pt3dadd( 15.8252, 18.9904, -11.0284, 0.46 ) }
    dend_36 { pt3dadd( 17.6243, 20.6288, -12.215, 0.46 ) }
    dend_36 { pt3dadd( 17.6345, 20.638, -12.2212, 0.46 ) }
    dend_36 { pt3dadd( 19.2615, 22.0322, -13.0263, 0.46 ) }
    dend_36 { pt3dadd( 21.0428, 23.5698, -13.7658, 0.46 ) }
    dend_36 { pt3dadd( 23.1874, 25.5624, -14.4907, 0.46 ) }
    dend_36 { pt3dadd( 25.0301, 27.3779, -15.021, 0.46 ) }
    dend_36 { pt3dadd( 26.5973, 28.9874, -15.4353, 0.46 ) }
    dend_36 { pt3dadd( 27.8698, 30.3467, -15.7805, 0.46 ) }
    dend_36 { pt3dadd( 29.3945, 32.0534, -16.2145, 0.46 ) }
    dend_36 { pt3dadd( 30.9308, 33.7162, -16.7045, 0.46 ) }
    dend_36 { pt3dadd( 33.0553, 35.8898, -17.4157, 0.46 ) }
    dend_36 { pt3dadd( 33.0662, 35.8998, -17.4189, 0.46 ) }
    dend_36 { pt3dadd( 34.4517, 37.0186, -17.7957, 0.46 ) }
    dend_36 { pt3dadd( 36.2627, 38.3163, -18.3064, 0.46 ) }
    dend_36 { pt3dadd( 38.8111, 40.0049, -19.0276, 0.46 ) }
    dend_36 { pt3dadd( 38.8856, 40.0525, -19.0487, 0.46 ) }
    dend_36 { pt3dadd( 41.661, 41.8822, -19.7967, 0.46 ) }
    dend_36 { pt3dadd( 44.2164, 43.6474, -20.4681, 0.46 ) }
    dend_36 { pt3dadd( 45.6051, 44.7192, -20.8353, 0.46 ) }
    dend_36 { pt3dadd( 45.6219, 44.7337, -20.8403, 0.46 ) }
    dend_36 { pt3dadd( 48.1897, 47.3134, -21.7432, 0.46 ) }
    dend_36 { pt3dadd( 50.1289, 49.5252, -22.5173, 0.46 ) }
    dend_36 { pt3dadd( 50.1423, 49.5425, -22.5235, 0.46 ) }
    dend_36 { pt3dadd( 51.9126, 51.9793, -23.2888, 0.46 ) }
    dend_36 { pt3dadd( 52.4605, 52.7522, -23.5197, 0.46 ) }
    dend_36 { pt3dadd( 54.0543, 55.0651, -24.1864, 0.46 ) }
    dend_36 { pt3dadd( 55.5015, 57.1709, -24.7619, 0.46 ) }
    dend_36 { pt3dadd( 57.3973, 59.8773, -25.4364, 0.46 ) }
    dend_36 { pt3dadd( 59.0329, 62.1544, -25.9331, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_36 { pt3dadd( 60.0736, 63.5652, -26.2014, 0.46 ) }
    dend_36 { pt3dadd( 61.3611, 65.4506, -26.4793, 0.46 ) }
    dend_36 { pt3dadd( 62.7451, 67.7935, -26.7407, 0.46 ) }
    dend_36 { pt3dadd( 64.5289, 71.2258, -27.0426, 0.46 ) }
    dend_36 { pt3dadd( 65.7036, 73.9666, -27.2629, 0.46 ) }
    dend_36 { pt3dadd( 65.7089, 73.9808, -27.2641, 0.46 ) }
    dend_36 { pt3dadd( 66.7196, 77.4925, -27.6498, 0.46 ) }
    dend_36 { pt3dadd( 67.6342, 81.4081, -28.2592, 0.46 ) }
    dend_36 { pt3dadd( 67.6428, 81.4596, -28.269, 0.46 ) }
    dend_36 { pt3dadd( 68.1054, 85.3293, -29.076, 0.46 ) }
    dend_36 { pt3dadd( 68.1071, 85.3439, -29.0795, 0.46 ) }
    dend_36 { pt3dadd( 68.5329, 88.5835, -29.9124, 0.46 ) }
    dend_36 { pt3dadd( 69.0595, 91.6532, -30.8557, 0.46 ) }
    dend_36 { pt3dadd( 69.6433, 95.0516, -31.9777, 0.46 ) }
    dend_36 { pt3dadd( 69.8611, 96.3356, -32.3864, 0.46 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 15/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 10.3152, 12.8858, -5.66526, 0.92 ) }
    dend_31 { pt3dadd( 14.6253, 14.0332, -6.78586, 0.92 ) }
    dend_31 { pt3dadd( 18.1982, 15.0101, -7.72891, 0.92 ) }
    dend_31 { pt3dadd( 19.3804, 15.3011, -8.06802, 0.92 ) }
    dend_31 { pt3dadd( 22.9981, 16.1427, -9.14919, 0.92 ) }
    dend_31 { pt3dadd( 26.8488, 17.0058, -10.4097, 0.92 ) }
    dend_31 { pt3dadd( 31.2263, 17.9354, -12.0478, 0.92 ) }
    dend_31 { pt3dadd( 31.2503, 17.9401, -12.0593, 0.92 ) }
    dend_31 { pt3dadd( 34.2583, 18.5708, -13.9494, 0.92 ) }
    dend_31 { pt3dadd( 34.2911, 18.5781, -13.9721, 0.92 ) }
    dend_31 { pt3dadd( 37.6487, 19.3791, -16.669, 0.92 ) }
    dend_31 { pt3dadd( 40.2815, 19.9287, -19.1359, 0.92 ) }
    dend_31 { pt3dadd( 43.2209, 20.5226, -22.3028, 0.92 ) }
    dend_31 { pt3dadd( 45.2333, 20.9955, -24.5808, 0.92 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 29/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 24.7628, 3.79241, 41.5717, 0.46 ) }
    dend_25 { pt3dadd( 29.7114, 1.89999, 48.2904, 0.46 ) }
    dend_25 { pt3dadd( 35.0559, 0.01484, 54.7008, 0.46 ) }
    dend_25 { pt3dadd( 40.4301, -2.6754, 60.7911, 0.46 ) }
    dend_25 { pt3dadd( 45.4763, -4.6909, 67.4004, 0.46 ) }
    dend_25 { pt3dadd( 49.837, -7.63865, 74.1462, 0.46 ) }
    dend_25 { pt3dadd( 54.2955, -10.7297, 80.7626, 0.46 ) }
    dend_25 { pt3dadd( 59.5562, -12.8724, 87.1615, 0.46 ) }
    dend_25 { pt3dadd( 64.9603, -16.4679, 92.7363, 0.46 ) }
    dend_25 { pt3dadd( 70.7809, -21.3509, 96.6718, 0.46 ) }
    dend_25 { pt3dadd( 76.6721, -25.7635, 101.034, 0.46 ) }
    dend_25 { pt3dadd( 82.9208, -30.5222, 104.428, 0.46 ) }
    dend_25 { pt3dadd( 88.8256, -35.549, 108.044, 0.46 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 42/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 24.7628, 3.79241, 41.5717, 0.46 ) }
    dend_24 { pt3dadd( 31.2642, 0.580712, 52.6563, 0.46 ) }
    dend_24 { pt3dadd( 37.2923, -3.62521, 63.6756, 0.46 ) }
    dend_24 { pt3dadd( 44.1489, -8.90896, 73.7015, 0.46 ) }
    dend_24 { pt3dadd( 49.363, -13.9109, 84.8031, 0.46 ) }
    dend_24 { pt3dadd( 53.5524, -18.6681, 96.4337, 0.46 ) }
    dend_24 { pt3dadd( 55.0348, -23.2815, 108.761, 0.46 ) }
    // Section: dend_22, id: dend_22, parent: dend_18 (entry count 49/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -8.34099, 36.6251, 13.0274, 0.46 ) }
    dend_22 { pt3dadd( -12.7416, 37.4421, 13.3712, 0.46 ) }
    dend_22 { pt3dadd( -15.6842, 38.0634, 13.7411, 0.46 ) }
    dend_22 { pt3dadd( -22.0824, 39.2843, 14.8868, 0.46 ) }
    dend_22 { pt3dadd( -26.2158, 40.1838, 15.8303, 0.46 ) }
    dend_22 { pt3dadd( -29.1492, 40.9208, 16.6274, 0.46 ) }
    dend_22 { pt3dadd( -32.9822, 42.0098, 17.8185, 0.46 ) }
    dend_22 { pt3dadd( -35.4263, 42.8541, 18.8166, 0.46 ) }
    dend_22 { pt3dadd( -38.5555, 44.0399, 20.3033, 0.46 ) }
    dend_22 { pt3dadd( -41.8172, 45.5186, 22.2029, 0.46 ) }
    dend_22 { pt3dadd( -44.3424, 46.8285, 23.8673, 0.46 ) }
    dend_22 { pt3dadd( -47.4864, 48.5191, 26.0536, 0.46 ) }
    dend_22 { pt3dadd( -49.8967, 50.0037, 27.8389, 0.46 ) }
    dend_22 { pt3dadd( -59.7731, 52.3356, 33.8208, 0.46 ) }
    dend_22 { pt3dadd( -69.0046, 53.6625, 41.0168, 0.46 ) }
    dend_22 { pt3dadd( -79.0992, 53.7006, 47.0882, 0.46 ) }
    dend_22 { pt3dadd( -89.7917, 53.3599, 52.0196, 0.46 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 66/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -8.34099, 36.6251, 13.0274, 1.38 ) }
    dend_19 { pt3dadd( -9.30091, 38.8294, 13.0105, 1.38 ) }
    dend_19 { pt3dadd( -10.2265, 41.0002, 13.0237, 0.92 ) }
    dend_19 { pt3dadd( -11.172, 43.2209, 13.1042, 0.92 ) }
    dend_19 { pt3dadd( -11.1768, 43.2314, 13.1049, 0.92 ) }
    dend_19 { pt3dadd( -12.037, 45.0807, 13.2547, 0.92 ) }
    dend_19 { pt3dadd( -12.8371, 46.7376, 13.416, 0.92 ) }
    dend_19 { pt3dadd( -12.8423, 46.7479, 13.4174, 0.92 ) }
    dend_19 { pt3dadd( -13.9447, 48.6512, 13.7227, 0.92 ) }
    dend_19 { pt3dadd( -15.2651, 50.6733, 14.1256, 0.92 ) }
    dend_19 { pt3dadd( -15.2715, 50.6827, 14.1275, 0.92 ) }
    dend_19 { pt3dadd( -16.6146, 52.5208, 14.5316, 0.92 ) }
    dend_19 { pt3dadd( -18.1614, 54.5527, 14.9635, 0.92 ) }
    dend_19 { pt3dadd( -19.9615, 56.8594, 15.4549, 0.92 ) }
    dend_19 { pt3dadd( -21.3987, 58.5998, 15.826, 0.92 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 81/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 2.08705, -64.5084, 12.2865, 0.92 ) }
    dend_13 { pt3dadd( 1.97927, -67.625, 13.0969, 0.92 ) }
    dend_13 { pt3dadd( 1.79647, -70.2934, 13.8038, 0.92 ) }
    dend_13 { pt3dadd( 1.66264, -73.3206, 14.6814, 0.92 ) }
    dend_13 { pt3dadd( 1.6354, -75.7195, 15.397, 0.92 ) }
    dend_13 { pt3dadd( 1.62302, -78.1686, 16.0876, 0.92 ) }
    dend_13 { pt3dadd( 1.59232, -80.3073, 16.6735, 0.92 ) }
    dend_13 { pt3dadd( 1.49936, -82.857, 17.3725, 0.92 ) }
    dend_13 { pt3dadd( 1.33629, -84.9257, 17.9092, 0.92 ) }
    dend_13 { pt3dadd( 1.02882, -87.807, 18.6403, 0.92 ) }
    dend_13 { pt3dadd( 0.544845, -91.2639, 19.5175, 0.92 ) }
    dend_13 { pt3dadd( 0.176673, -93.7677, 20.147, 0.92 ) }
    dend_13 { pt3dadd( -0.190077, -96.2807, 20.7654, 0.92 ) }
    dend_13 { pt3dadd( -0.582854, -98.6594, 21.3163, 0.92 ) }
    dend_13 { pt3dadd( -1.07195, -101.47, 21.9395, 0.92 ) }
    dend_13 { pt3dadd( -1.64022, -104.606, 22.6275, 0.92 ) }
    dend_13 { pt3dadd( -2.05858, -107.055, 23.1649, 0.92 ) }
    dend_13 { pt3dadd( -2.29623, -108.831, 23.5347, 0.92 ) }
    dend_13 { pt3dadd( -2.46742, -110.636, 23.9139, 0.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_13 { pt3dadd( -2.63084, -112.945, 24.4454, 0.92 ) }
    dend_13 { pt3dadd( -2.65355, -115.813, 25.1932, 0.92 ) }
    dend_13 { pt3dadd( -2.39089, -118.263, 25.9232, 0.92 ) }
    dend_13 { pt3dadd( -1.82937, -120.647, 26.7521, 0.92 ) }
    dend_13 { pt3dadd( -0.97126, -122.866, 27.6825, 0.92 ) }
    dend_13 { pt3dadd( 0.288025, -124.444, 28.4935, 0.46 ) }
    dend_13 { pt3dadd( 2.54217, -125.823, 29.447, 0.46 ) }
    dend_13 { pt3dadd( 4.8026, -126.607, 30.108, 0.46 ) }
    dend_13 { pt3dadd( 7.63289, -127.147, 30.68, 0.46 ) }
    dend_13 { pt3dadd( 7.65272, -127.148, 30.6822, 0.46 ) }
    dend_13 { pt3dadd( 11.5754, -127.09, 30.7878, 0.46 ) }
    dend_13 { pt3dadd( 11.6053, -127.089, 30.7864, 0.46 ) }
    dend_13 { pt3dadd( 13.392, -127.217, 30.5661, 0.46 ) }
    dend_13 { pt3dadd( 13.4209, -127.223, 30.5602, 0.46 ) }
    dend_13 { pt3dadd( 16.036, -128.064, 29.9425, 0.46 ) }
    dend_13 { pt3dadd( 17.0642, -128.435, 29.7165, 0.46 ) }
    dend_13 { pt3dadd( 17.0909, -128.447, 29.7117, 0.46 ) }
    dend_13 { pt3dadd( 19.5634, -129.542, 29.2517, 0.46 ) }
    dend_13 { pt3dadd( 20.0418, -129.719, 29.1519, 0.46 ) }
    dend_13 { pt3dadd( 21.2986, -139.611, 29.8353, 0.46 ) }
    dend_13 { pt3dadd( 23.4316, -149.373, 30.0305, 0.46 ) }
    dend_13 { pt3dadd( 24.1551, -159.303, 29.1535, 0.46 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 22/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 2.08705, -64.5084, 12.2865, 0.92 ) }
    dend_12 { pt3dadd( 3.5991, -66.3513, 10.9577, 0.92 ) }
    dend_12 { pt3dadd( 3.60933, -66.3645, 10.9489, 0.92 ) }
    dend_12 { pt3dadd( 4.95662, -67.8982, 9.95659, 0.92 ) }
    dend_12 { pt3dadd( 6.43172, -69.57, 9.01591, 0.92 ) }
    dend_12 { pt3dadd( 6.44854, -69.5905, 9.00603, 0.92 ) }
    dend_12 { pt3dadd( 8.26977, -71.9405, 8.00905, 0.92 ) }
    dend_12 { pt3dadd( 9.55866, -73.655, 7.37158, 0.92 ) }
    dend_12 { pt3dadd( 11.1736, -75.9329, 6.63932, 0.92 ) }
    dend_12 { pt3dadd( 13.2279, -78.9568, 5.8208, 0.92 ) }
    dend_12 { pt3dadd( 15.0808, -81.7846, 5.1593, 0.92 ) }
    dend_12 { pt3dadd( 16.2992, -83.7581, 4.74463, 0.92 ) }
    dend_12 { pt3dadd( 16.3475, -83.8379, 4.73044, 0.92 ) }
    dend_12 { pt3dadd( 17.4945, -85.874, 4.41696, 0.92 ) }
    dend_12 { pt3dadd( 18.2966, -87.3704, 4.21296, 0.92 ) }
    dend_12 { pt3dadd( 19.6729, -89.9747, 3.881, 0.92 ) }
    dend_12 { pt3dadd( 21.0247, -92.4049, 3.57132, 0.92 ) }
    dend_12 { pt3dadd( 21.9865, -94.2122, 3.35244, 0.92 ) }
    dend_12 { pt3dadd( 24.1611, -98.3847, 2.8808, 0.92 ) }
    dend_12 { pt3dadd( 25.3265, -100.643, 2.69368, 0.92 ) }
    dend_12 { pt3dadd( 26.8507, -103.59, 2.48065, 0.92 ) }
    dend_12 { pt3dadd( 28.1513, -106.012, 2.25615, 0.92 ) }
    dend_12 { pt3dadd( 29.7591, -108.881, 1.91126, 0.92 ) }
    dend_12 { pt3dadd( 31.3049, -111.716, 1.4826, 0.92 ) }
    dend_12 { pt3dadd( 33.174, -115.096, 0.870724, 0.92 ) }
    dend_12 { pt3dadd( 34.2918, -117.212, 0.410555, 0.92 ) }
    dend_12 { pt3dadd( 35.6677, -119.88, -0.259804, 0.92 ) }
    dend_12 { pt3dadd( 37.2546, -123.373, -1.23737, 0.92 ) }
    dend_12 { pt3dadd( 38.3374, -125.854, -2.0399, 0.92 ) }
    dend_12 { pt3dadd( 38.3524, -125.896, -2.05469, 0.92 ) }
    dend_12 { pt3dadd( 38.9449, -128.297, -2.84988, 0.92 ) }
    dend_12 { pt3dadd( 38.9523, -128.333, -2.85918, 0.92 ) }
    dend_12 { pt3dadd( 39.6495, -131.538, -3.55034, 0.46 ) }
    dend_12 { pt3dadd( 39.7545, -131.943, -3.63191, 0.46 ) }
    dend_12 { pt3dadd( 40.8846, -135.211, -4.24714, 0.46 ) }
    dend_12 { pt3dadd( 42.5625, -139.232, -4.93078, 0.46 ) }
    dend_12 { pt3dadd( 43.7871, -141.75, -5.30046, 0.46 ) }
    dend_12 { pt3dadd( 44.9747, -143.878, -5.64435, 0.46 ) }
    dend_12 { pt3dadd( 46.8978, -146.8, -6.19405, 0.46 ) }
    dend_12 { pt3dadd( 47.9288, -148.212, -6.49499, 0.46 ) }
    dend_12 { pt3dadd( 49.8639, -150.475, -7.10777, 0.46 ) }
    dend_12 { pt3dadd( 51.4329, -152.116, -7.71096, 0.46 ) }
    dend_12 { pt3dadd( 52.9873, -153.945, -8.47408, 0.46 ) }
    dend_12 { pt3dadd( 54.0101, -155.452, -9.11781, 0.46 ) }
    dend_12 { pt3dadd( 54.019, -155.467, -9.12452, 0.46 ) }
    dend_12 { pt3dadd( 55.1189, -157.797, -10.0586, 0.46 ) }
    dend_12 { pt3dadd( 55.9925, -159.95, -10.859, 0.46 ) }
    dend_12 { pt3dadd( 56.8115, -162.069, -11.5542, 0.46 ) }
    dend_12 { pt3dadd( 57.7181, -164.56, -12.2517, 0.46 ) }
    dend_12 { pt3dadd( 58.3547, -166.205, -12.7136, 0.46 ) }
    dend_12 { pt3dadd( 59.199, -168.198, -13.2869, 0.46 ) }
    dend_12 { pt3dadd( 60.2865, -170.375, -13.974, 0.46 ) }
    dend_12 { pt3dadd( 61.6419, -172.764, -14.8927, 0.46 ) }
    dend_12 { pt3dadd( 61.6556, -172.787, -14.9034, 0.46 ) }
    dend_12 { pt3dadd( 63.0033, -175.076, -16.2258, 0.46 ) }
    dend_12 { pt3dadd( 63.011, -175.091, -16.2351, 0.46 ) }
    dend_12 { pt3dadd( 64.0613, -177.229, -17.6888, 0.46 ) }
    dend_12 { pt3dadd( 65.1272, -179.659, -19.3919, 0.46 ) }
    dend_12 { pt3dadd( 65.7427, -181.36, -20.5622, 0.46 ) }
    dend_12 { pt3dadd( 66.187, -182.747, -21.4791, 0.46 ) }
    dend_12 { pt3dadd( 66.1912, -182.762, -21.4886, 0.46 ) }
    dend_12 { pt3dadd( 66.6627, -184.752, -22.5764, 0.46 ) }
    dend_12 { pt3dadd( 66.6725, -184.802, -22.5996, 0.46 ) }
    dend_12 { pt3dadd( 66.9949, -186.355, -23.2144, 0.46 ) }
    dend_12 { pt3dadd( 67.0035, -186.399, -23.2292, 0.46 ) }
    dend_12 { pt3dadd( 67.57, -189.242, -24.1077, 0.46 ) }
    dend_12 { pt3dadd( 67.6345, -189.754, -24.2636, 0.46 ) }
    dend_12 { pt3dadd( 67.7877, -191.982, -24.9382, 0.46 ) }
    dend_12 { pt3dadd( 67.7897, -192.155, -24.9842, 0.46 ) }
    dend_12 { pt3dadd( 67.7144, -194.386, -25.5288, 0.46 ) }
    dend_12 { pt3dadd( 67.714, -194.414, -25.5342, 0.46 ) }
    dend_12 { pt3dadd( 67.6588, -197.503, -26.0234, 0.46 ) }
    dend_12 { pt3dadd( 67.6605, -197.55, -26.0278, 0.46 ) }
    dend_12 { pt3dadd( 67.9493, -201.402, -26.0713, 0.46 ) }
    dend_12 { pt3dadd( 67.9561, -201.467, -26.0679, 0.46 ) }
    dend_12 { pt3dadd( 68.6068, -206.523, -25.5949, 0.46 ) }
    dend_12 { pt3dadd( 68.6219, -206.634, -25.581, 0.46 ) }
    dend_12 { pt3dadd( 69.3697, -211.626, -24.797, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_12 { pt3dadd( 69.8098, -215.57, -24.103, 0.46 ) }
    dend_12 { pt3dadd( 69.9796, -218.416, -23.5447, 0.46 ) }
    dend_12 { pt3dadd( 69.9798, -218.435, -23.5409, 0.46 ) }
    dend_12 { pt3dadd( 69.672, -222.237, -22.7399, 0.46 ) }
    dend_12 { pt3dadd( 69.6684, -222.265, -22.7345, 0.46 ) }
    dend_12 { pt3dadd( 68.9695, -225.685, -22.1328, 0.46 ) }
    dend_12 { pt3dadd( 68.1816, -228.965, -21.6207, 0.46 ) }
    dend_12 { pt3dadd( 68.1624, -229.037, -21.61, 0.46 ) }
    dend_12 { pt3dadd( 66.9648, -233.413, -20.9356, 0.46 ) }
    dend_12 { pt3dadd( 66.9548, -233.449, -20.9302, 0.46 ) }
    dend_12 { pt3dadd( 66.2569, -236.183, -20.5841, 0.46 ) }
    dend_12 { pt3dadd( 66.2465, -236.229, -20.5793, 0.46 ) }
    dend_12 { pt3dadd( 65.6447, -238.732, -20.3844, 0.46 ) }
    dend_12 { pt3dadd( 65.6069, -238.838, -20.375, 0.46 ) }
    dend_12 { pt3dadd( 63.0068, -243.206, -19.7987, 0.46 ) }
    dend_12 { pt3dadd( 61.6858, -244.46, -19.4788, 0.46 ) }
    dend_12 { pt3dadd( 61.6637, -244.477, -19.4738, 0.46 ) }
    dend_12 { pt3dadd( 58.7272, -246.339, -18.7894, 0.46 ) }
    dend_12 { pt3dadd( 54.0417, -248.343, -17.6567, 0.46 ) }
    dend_12 { pt3dadd( 50.472, -249.284, -16.7431, 0.46 ) }
    dend_12 { pt3dadd( 46.3021, -249.455, -15.5762, 0.46 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 21/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -52.0167, -105.95, 127.621, 0.46 ) }
    dend_9 { pt3dadd( -53.615, -110.714, 133.405, 0.46 ) }
    dend_9 { pt3dadd( -53.8485, -114.456, 140.087, 0.46 ) }
    dend_9 { pt3dadd( -52.5053, -117.458, 147.008, 0.46 ) }
    dend_9 { pt3dadd( -49.6775, -120.152, 153.6, 0.46 ) }
    dend_9 { pt3dadd( -45.2161, -121.973, 159.557, 0.46 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 27/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -52.0167, -105.95, 127.621, 0.46 ) }
    dend_8 { pt3dadd( -54.8758, -112.355, 136.985, 0.46 ) }
    dend_8 { pt3dadd( -60.1385, -116.724, 146.478, 0.46 ) }
    dend_8 { pt3dadd( -65.8288, -120.704, 155.895, 0.46 ) }
    dend_8 { pt3dadd( -71.9357, -124.279, 165.213, 0.46 ) }
    dend_8 { pt3dadd( -76.9139, -129.414, 174.473, 0.46 ) }
    dend_8 { pt3dadd( -83.0201, -132.241, 184.045, 0.46 ) }
    dend_8 { pt3dadd( -87.6338, -133.952, 194.66, 0.46 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 35/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -33.3851, -51.2961, 16.7701, 0.92 ) }
    dend_4 { pt3dadd( -33.0026, -54.4392, 16.8428, 0.92 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 37/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -33.3851, -51.2961, 16.7701, 0.92 ) }
    dend_3 { pt3dadd( -35.2856, -51.4426, 18.1253, 0.92 ) }
    dend_3 { pt3dadd( -35.2984, -51.4442, 18.1333, 0.92 ) }
    dend_3 { pt3dadd( -36.6681, -51.6356, 18.8001, 0.46 ) }
    dend_3 { pt3dadd( -38.4587, -51.8935, 19.5671, 0.46 ) }
    dend_3 { pt3dadd( -40.2915, -52.1481, 20.2503, 0.46 ) }
    dend_3 { pt3dadd( -43.0173, -52.5512, 21.0933, 0.46 ) }
    dend_3 { pt3dadd( -44.8999, -52.8722, 21.5331, 0.46 ) }
    dend_3 { pt3dadd( -47.7649, -53.337, 21.9748, 0.46 ) }
    dend_3 { pt3dadd( -48.0654, -53.3829, 21.9933, 0.46 ) }
    dend_3 { pt3dadd( -49.8276, -53.6803, 21.9193, 0.46 ) }
    dend_3 { pt3dadd( -51.885, -54.0066, 21.6176, 0.46 ) }
    dend_3 { pt3dadd( -51.8996, -54.0086, 21.6141, 0.46 ) }
    dend_3 { pt3dadd( -53.3336, -54.1948, 21.2205, 0.46 ) }
    dend_3 { pt3dadd( -53.3553, -54.1978, 21.2142, 0.46 ) }
    dend_3 { pt3dadd( -55.8763, -54.5335, 20.4087, 0.46 ) }
    dend_3 { pt3dadd( -57.5032, -54.6875, 19.8713, 0.46 ) }
    dend_3 { pt3dadd( -58.8036, -54.8314, 19.4095, 0.46 ) }
    dend_3 { pt3dadd( -61.1493, -55.2244, 18.5351, 0.46 ) }
    dend_3 { pt3dadd( -61.1631, -55.2277, 18.5293, 0.46 ) }
    dend_3 { pt3dadd( -62.9581, -55.7482, 17.687, 0.46 ) }
    dend_3 { pt3dadd( -64.3526, -56.223, 16.9361, 0.46 ) }
    dend_3 { pt3dadd( -66.62, -57.0883, 15.6462, 0.46 ) }
    dend_3 { pt3dadd( -68.7688, -57.9458, 14.3292, 0.46 ) }
    dend_3 { pt3dadd( -70.4333, -58.6031, 13.2524, 0.46 ) }
    dend_3 { pt3dadd( -70.4454, -58.6081, 13.2445, 0.46 ) }
    dend_3 { pt3dadd( -73.0057, -59.725, 11.5707, 0.46 ) }
    dend_3 { pt3dadd( -75.1145, -60.6539, 10.1227, 0.46 ) }
    dend_3 { pt3dadd( -77.8789, -61.6382, 8.26766, 0.46 ) }
    dend_3 { pt3dadd( -77.9701, -61.6667, 8.20518, 0.46 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 67/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 7.76348, 44.6663, -36.947, 0.92 ) }
    dend_42 { pt3dadd( 8.63299, 46.2565, -38.5428, 0.92 ) }
    dend_42 { pt3dadd( 9.56894, 47.9263, -40.3186, 0.92 ) }
    dend_42 { pt3dadd( 10.4665, 49.5132, -42.0437, 0.92 ) }
    dend_42 { pt3dadd( 10.4743, 49.5272, -42.0593, 0.92 ) }
    dend_42 { pt3dadd( 11.3186, 51.0993, -43.8053, 0.92 ) }
    dend_42 { pt3dadd( 12.1126, 52.6377, -45.5962, 0.92 ) }
    dend_42 { pt3dadd( 12.8579, 54.313, -47.6195, 0.92 ) }
    dend_42 { pt3dadd( 12.8619, 54.3222, -47.6305, 0.92 ) }
    dend_42 { pt3dadd( 13.4579, 55.8657, -49.5419, 0.92 ) }
    dend_42 { pt3dadd( 13.9024, 57.1267, -51.0699, 0.92 ) }
    dend_42 { pt3dadd( 14.3404, 58.3355, -52.4749, 0.92 ) }
    dend_42 { pt3dadd( 15.0622, 60.109, -54.3733, 0.92 ) }
    dend_42 { pt3dadd( 15.0688, 60.1244, -54.388, 0.92 ) }
    dend_42 { pt3dadd( 16.1526, 62.5666, -56.6118, 0.92 ) }
    dend_42 { pt3dadd( 17.1025, 64.6759, -58.3967, 0.92 ) }
    dend_42 { pt3dadd( 18.3015, 67.2914, -60.5025, 0.92 ) }
    dend_42 { pt3dadd( 19.471, 69.9359, -62.5385, 0.92 ) }
    dend_42 { pt3dadd( 20.2669, 71.7803, -63.9406, 0.92 ) }
    dend_42 { pt3dadd( 21.3699, 74.6792, -66.2303, 0.92 ) }
    dend_42 { pt3dadd( 22.3377, 77.579, -68.5798, 0.92 ) }
    dend_42 { pt3dadd( 22.3408, 77.5903, -68.5889, 0.92 ) }
    dend_42 { pt3dadd( 22.9386, 80.6466, -71.0601, 0.92 ) }
    dend_42 { pt3dadd( 22.9404, 80.6582, -71.0692, 0.92 ) }
    dend_42 { pt3dadd( 23.5642, 85.2023, -74.4944, 0.92 ) }
    dend_42 { pt3dadd( 23.5665, 85.2202, -74.5074, 0.92 ) }
    dend_42 { pt3dadd( 23.9625, 88.188, -76.5131, 0.92 ) }
    dend_42 { pt3dadd( 23.9739, 88.2631, -76.5599, 0.92 ) }
    dend_42 { pt3dadd( 24.4135, 90.8545, -78.062, 0.92 ) }
    dend_42 { pt3dadd( 25.1915, 95.0771, -80.3602, 0.92 ) }
    dend_42 { pt3dadd( 25.1987, 95.1101, -80.3757, 0.92 ) }
    dend_42 { pt3dadd( 25.9168, 98.4389, -82.0082, 0.92 ) }
    dend_42 { pt3dadd( 25.9966, 98.811, -82.2131, 0.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 0/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 7.76348, 44.6663, -36.947, 0.92 ) }
    dend_41 { pt3dadd( 7.31153, 46.8737, -37.4557, 0.92 ) }
    dend_41 { pt3dadd( 6.87964, 49.1521, -38.0168, 0.92 ) }
    dend_41 { pt3dadd( 6.42845, 51.7468, -38.7283, 0.92 ) }
    dend_41 { pt3dadd( 5.80068, 54.6614, -39.6338, 0.92 ) }
    dend_41 { pt3dadd( 5.79423, 54.6876, -39.643, 0.92 ) }
    dend_41 { pt3dadd( 5.4142, 56.1537, -40.2129, 0.92 ) }
    dend_41 { pt3dadd( 4.58027, 58.7518, -41.3742, 0.92 ) }
    dend_41 { pt3dadd( 3.7361, 61.0438, -42.5339, 0.92 ) }
    dend_41 { pt3dadd( 2.71728, 63.5983, -43.9564, 0.92 ) }
    dend_41 { pt3dadd( 2.01233, 65.1893, -44.8716, 0.92 ) }
    dend_41 { pt3dadd( 0.890263, 67.5781, -46.2567, 0.92 ) }
    dend_41 { pt3dadd( -0.3663, 70.0665, -47.6823, 0.92 ) }
    dend_41 { pt3dadd( -1.46145, 72.1967, -48.8161, 0.92 ) }
    dend_41 { pt3dadd( -2.45893, 74.2867, -49.7458, 0.92 ) }
    dend_41 { pt3dadd( -3.79342, 77.3966, -50.9021, 0.92 ) }
    dend_41 { pt3dadd( -3.8036, 77.4221, -50.9099, 0.92 ) }
    dend_41 { pt3dadd( -4.96, 80.5889, -51.7501, 0.92 ) }
    dend_41 { pt3dadd( -6.24918, 84.4437, -52.7659, 0.92 ) }
    dend_41 { pt3dadd( -7.54134, 88.095, -53.7963, 0.92 ) }
    dend_41 { pt3dadd( -7.71127, 88.5922, -53.934, 0.92 ) }
    dend_41 { pt3dadd( -8.67473, 91.4835, -54.758, 0.92 ) }
    dend_41 { pt3dadd( -9.55431, 94.1139, -55.5585, 0.92 ) }
    dend_41 { pt3dadd( -10.722, 97.5708, -56.7805, 0.92 ) }
    dend_41 { pt3dadd( -11.8863, 100.635, -58.2126, 0.92 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 25/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 69.8611, 96.3356, -32.3864, 0.46 ) }
    dend_38 { pt3dadd( 73.0232, 98.5022, -32.1151, 0.46 ) }
    dend_38 { pt3dadd( 75.7278, 100.355, -31.8831, 0.46 ) }
    dend_38 { pt3dadd( 78.7895, 102.453, -31.6204, 0.46 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 29/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 69.8611, 96.3356, -32.3864, 0.46 ) }
    dend_37 { pt3dadd( 69.2788, 101.209, -34.7042, 0.46 ) }
    dend_37 { pt3dadd( 68.8839, 104.585, -36.344, 0.46 ) }
    dend_37 { pt3dadd( 68.4849, 108.431, -38.2515, 0.46 ) }
    dend_37 { pt3dadd( 68.0322, 113.324, -40.7247, 0.46 ) }
    dend_37 { pt3dadd( 67.7674, 116.751, -42.4813, 0.46 ) }
    dend_37 { pt3dadd( 67.5823, 120.202, -44.2872, 0.46 ) }
    dend_37 { pt3dadd( 67.5819, 120.218, -44.2963, 0.46 ) }
    dend_37 { pt3dadd( 67.6035, 123.052, -46.028, 0.46 ) }
    dend_37 { pt3dadd( 67.7813, 126.201, -48.1436, 0.46 ) }
    dend_37 { pt3dadd( 68.0641, 129.254, -50.4497, 0.46 ) }
    dend_37 { pt3dadd( 68.2235, 132.062, -52.6538, 0.46 ) }
    dend_37 { pt3dadd( 68.3877, 134.715, -54.7816, 0.46 ) }
    dend_37 { pt3dadd( 68.3885, 134.729, -54.7934, 0.46 ) }
    dend_37 { pt3dadd( 68.4774, 136.831, -56.644, 0.46 ) }
    dend_37 { pt3dadd( 68.5538, 139.872, -59.5545, 0.46 ) }
    dend_37 { pt3dadd( 68.444, 142.452, -62.2218, 0.46 ) }
    // Section: dend_35, id: dend_35, parent: dend_31 (entry count 46/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 45.2333, 20.9955, -24.5808, 0.92 ) }
    dend_35 { pt3dadd( 48.2649, 23.0519, -26.2242, 0.92 ) }
    dend_35 { pt3dadd( 51.0418, 24.9698, -27.6708, 0.92 ) }
    dend_35 { pt3dadd( 55.379, 27.9768, -29.7259, 0.92 ) }
    dend_35 { pt3dadd( 59.7923, 31.0424, -31.708, 0.46 ) }
    dend_35 { pt3dadd( 63.6555, 33.6958, -33.3313, 0.46 ) }
    dend_35 { pt3dadd( 67.6658, 36.3803, -34.8823, 0.46 ) }
    dend_35 { pt3dadd( 67.6858, 36.3932, -34.8891, 0.46 ) }
    dend_35 { pt3dadd( 70.3651, 38.0654, -35.6154, 0.46 ) }
    dend_35 { pt3dadd( 70.3859, 38.0778, -35.6201, 0.46 ) }
    dend_35 { pt3dadd( 72.4258, 39.1803, -36.1137, 0.46 ) }
    dend_35 { pt3dadd( 75.0247, 40.3106, -36.7738, 0.46 ) }
    dend_35 { pt3dadd( 79.367, 42.0708, -38.0103, 0.46 ) }
    dend_35 { pt3dadd( 82.685, 43.3418, -39.1472, 0.46 ) }
    dend_35 { pt3dadd( 82.7176, 43.3537, -39.1599, 0.46 ) }
    dend_35 { pt3dadd( 85.311, 44.3728, -40.4121, 0.46 ) }
    dend_35 { pt3dadd( 87.7225, 45.319, -41.7604, 0.46 ) }
    dend_35 { pt3dadd( 92.3522, 46.9207, -44.6575, 0.46 ) }
    dend_35 { pt3dadd( 96.1049, 48.094, -47.1017, 0.46 ) }
    dend_35 { pt3dadd( 96.1546, 48.1089, -47.1349, 0.46 ) }
    dend_35 { pt3dadd( 104.21, 50.5265, -52.7119, 0.46 ) }
    dend_35 { pt3dadd( 109.254, 52.0273, -56.3303, 0.46 ) }
    dend_35 { pt3dadd( 115.751, 54.1087, -61.3668, 0.46 ) }
    dend_35 { pt3dadd( 120.586, 55.6753, -65.3091, 0.46 ) }
    dend_35 { pt3dadd( 120.604, 55.6819, -65.3243, 0.46 ) }
    dend_35 { pt3dadd( 124.988, 57.3962, -69.0331, 0.46 ) }
    dend_35 { pt3dadd( 125.041, 57.4203, -69.0794, 0.46 ) }
    dend_35 { pt3dadd( 129.453, 60.1489, -73.3663, 0.46 ) }
    dend_35 { pt3dadd( 129.508, 60.1904, -73.4187, 0.46 ) }
    dend_35 { pt3dadd( 133.238, 63.2235, -76.7585, 0.46 ) }
    dend_35 { pt3dadd( 133.254, 63.2367, -76.7719, 0.46 ) }
    dend_35 { pt3dadd( 137.102, 66.4265, -79.8138, 0.46 ) }
    dend_35 { pt3dadd( 140.165, 68.9557, -82.1589, 0.46 ) }
    dend_35 { pt3dadd( 144.976, 72.8404, -85.6443, 0.46 ) }
    dend_35 { pt3dadd( 148.422, 75.5831, -88.1457, 0.46 ) }
    dend_35 { pt3dadd( 148.574, 75.6997, -88.2584, 0.46 ) }
    dend_35 { pt3dadd( 152.602, 78.7581, -91.3086, 0.46 ) }
    dend_35 { pt3dadd( 152.628, 78.7764, -91.3279, 0.46 ) }
    dend_35 { pt3dadd( 157.234, 81.888, -94.8097, 0.46 ) }
    dend_35 { pt3dadd( 157.276, 81.9169, -94.8434, 0.46 ) }
    dend_35 { pt3dadd( 162.413, 85.2665, -98.817, 0.46 ) }
    dend_35 { pt3dadd( 162.483, 85.3169, -98.8657, 0.46 ) }
    dend_35 { pt3dadd( 167.555, 89.3043, -102.043, 0.46 ) }
    dend_35 { pt3dadd( 167.613, 89.3575, -102.079, 0.46 ) }
    dend_35 { pt3dadd( 170.621, 92.5995, -103.843, 0.46 ) }
    dend_35 { pt3dadd( 170.635, 92.6176, -103.852, 0.46 ) }
    dend_35 { pt3dadd( 173.834, 97.7115, -106.102, 0.46 ) }
    dend_35 { pt3dadd( 173.846, 97.7309, -106.112, 0.46 ) }
    dend_35 { pt3dadd( 176.286, 102.058, -108.447, 0.46 ) }
    dend_35 { pt3dadd( 176.298, 102.076, -108.458, 0.46 ) }
    dend_35 { pt3dadd( 179.467, 105.704, -110.771, 0.46 ) }
    dend_35 { pt3dadd( 179.568, 105.795, -110.83, 0.46 ) }
    dend_35 { pt3dadd( 184.899, 109.896, -113.542, 0.46 ) }
    dend_35 { pt3dadd( 184.927, 109.916, -113.555, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_35 { pt3dadd( 190.563, 113.739, -116.043, 0.46 ) }
    dend_35 { pt3dadd( 198.176, 118.768, -119.195, 0.46 ) }
    dend_35 { pt3dadd( 205.042, 123.107, -121.741, 0.46 ) }
    dend_35 { pt3dadd( 210.787, 126.738, -123.8, 0.46 ) }
    dend_35 { pt3dadd( 214.778, 129.258, -125.138, 0.46 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 5/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 45.2333, 20.9955, -24.5808, 0.46 ) }
    dend_32 { pt3dadd( 45.5352, 20.1558, -26.3485, 0.46 ) }
    dend_32 { pt3dadd( 45.9288, 19.1349, -28.686, 0.46 ) }
    dend_32 { pt3dadd( 45.932, 19.1257, -28.7055, 0.46 ) }
    dend_32 { pt3dadd( 46.5933, 17.619, -31.6599, 0.46 ) }
    dend_32 { pt3dadd( 47.2978, 16.0734, -34.5635, 0.46 ) }
    dend_32 { pt3dadd( 48.09, 14.2974, -37.5542, 0.46 ) }
    dend_32 { pt3dadd( 48.0971, 14.2803, -37.581, 0.46 ) }
    dend_32 { pt3dadd( 48.6551, 12.9347, -39.4759, 0.46 ) }
    dend_32 { pt3dadd( 49.3653, 11.4207, -41.4618, 0.46 ) }
    dend_32 { pt3dadd( 49.544, 11.122, -41.8231, 0.46 ) }
    dend_32 { pt3dadd( 50.7673, 9.26235, -43.9513, 0.46 ) }
    dend_32 { pt3dadd( 51.8891, 7.57044, -45.7297, 0.46 ) }
    dend_32 { pt3dadd( 51.9119, 7.53701, -45.766, 0.46 ) }
    dend_32 { pt3dadd( 53.0613, 5.96906, -47.5497, 0.46 ) }
    dend_32 { pt3dadd( 54.3945, 4.17457, -49.696, 0.46 ) }
    dend_32 { pt3dadd( 55.6724, 2.55539, -51.6951, 0.46 ) }
    dend_32 { pt3dadd( 55.6822, 2.54361, -51.7105, 0.46 ) }
    dend_32 { pt3dadd( 56.9731, 0.957126, -53.7736, 0.46 ) }
    dend_32 { pt3dadd( 58.0704, -0.455617, -55.659, 0.46 ) }
    dend_32 { pt3dadd( 59.3143, -2.08772, -57.8468, 0.46 ) }
    dend_32 { pt3dadd( 59.3268, -2.10543, -57.8711, 0.46 ) }
    dend_32 { pt3dadd( 60.3963, -3.62976, -60.0698, 0.46 ) }
    dend_32 { pt3dadd( 61.55, -5.25684, -62.4576, 0.46 ) }
    dend_32 { pt3dadd( 62.6721, -6.79748, -64.824, 0.46 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 30/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 88.8256, -35.549, 108.044, 0.46 ) }
    dend_27 { pt3dadd( 95.3243, -41.094, 108.568, 0.46 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 32/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 88.8256, -35.549, 108.044, 0.46 ) }
    dend_26 { pt3dadd( 94.5917, -38.3221, 119.303, 0.46 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 34/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -21.3987, 58.5998, 15.826, 0.46 ) }
    dend_21 { pt3dadd( -22.5451, 60.1599, 16.1468, 0.46 ) }
    dend_21 { pt3dadd( -23.7096, 61.9419, 16.3747, 0.46 ) }
    dend_21 { pt3dadd( -24.7086, 63.662, 16.5318, 0.46 ) }
    dend_21 { pt3dadd( -25.6687, 65.506, 16.6707, 0.46 ) }
    dend_21 { pt3dadd( -26.8964, 68.0269, 16.8413, 0.46 ) }
    dend_21 { pt3dadd( -28.1965, 70.9387, 17.0502, 0.46 ) }
    dend_21 { pt3dadd( -29.1796, 73.7461, 17.2269, 0.46 ) }
    dend_21 { pt3dadd( -29.8286, 76.1845, 17.3709, 0.46 ) }
    dend_21 { pt3dadd( -30.3049, 78.6635, 17.5264, 0.46 ) }
    dend_21 { pt3dadd( -30.4592, 80.2995, 17.6595, 0.46 ) }
    dend_21 { pt3dadd( -30.4589, 81.7227, 17.8136, 0.46 ) }
    dend_21 { pt3dadd( -30.2212, 83.4591, 18.1004, 0.46 ) }
    dend_21 { pt3dadd( -29.92, 84.432, 18.3628, 0.46 ) }
    dend_21 { pt3dadd( -29.8937, 84.476, 18.38, 0.46 ) }
    dend_21 { pt3dadd( -29.4788, 84.8362, 18.5954, 0.46 ) }
    dend_21 { pt3dadd( -30.4778, 89.9932, 19.8632, 0.46 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 51/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -21.3987, 58.5998, 15.826, 0.92 ) }
    dend_20 { pt3dadd( -21.44, 64.1415, 15.768, 0.92 ) }
    dend_20 { pt3dadd( -21.4229, 68.3107, 15.6123, 0.92 ) }
    dend_20 { pt3dadd( -21.3863, 72.4724, 15.409, 0.92 ) }
    dend_20 { pt3dadd( -21.3742, 78.224, 15.0647, 0.92 ) }
    dend_20 { pt3dadd( -21.4618, 84.4456, 14.6628, 0.92 ) }
    dend_20 { pt3dadd( -21.593, 90.0814, 14.301, 0.92 ) }
    dend_20 { pt3dadd( -21.7815, 95.1539, 13.9056, 0.92 ) }
    dend_20 { pt3dadd( -21.7843, 95.2129, 13.9003, 0.92 ) }
    dend_20 { pt3dadd( -22.0578, 100.079, 13.407, 0.92 ) }
    dend_20 { pt3dadd( -22.2961, 103.669, 12.991, 0.92 ) }
    dend_20 { pt3dadd( -22.6225, 109.158, 12.3018, 0.92 ) }
    dend_20 { pt3dadd( -22.9688, 114.726, 11.6409, 0.92 ) }
    dend_20 { pt3dadd( -22.9715, 114.761, 11.637, 0.92 ) }
    dend_20 { pt3dadd( -23.2202, 118.274, 11.3094, 0.92 ) }
    dend_20 { pt3dadd( -23.4287, 121.966, 11.0287, 0.92 ) }
    dend_20 { pt3dadd( -23.773, 128.939, 10.6162, 0.92 ) }
    dend_20 { pt3dadd( -23.9889, 132.924, 10.4557, 0.46 ) }
    dend_20 { pt3dadd( -24.2954, 138.002, 10.3132, 0.46 ) }
    dend_20 { pt3dadd( -24.608, 143.017, 10.2108, 0.46 ) }
    dend_20 { pt3dadd( -24.968, 147.86, 10.1653, 0.46 ) }
    dend_20 { pt3dadd( -25.4681, 153.355, 10.12, 0.46 ) }
    dend_20 { pt3dadd( -25.9316, 157.467, 10.0765, 0.46 ) }
    dend_20 { pt3dadd( -26.4808, 161.069, 9.93808, 0.46 ) }
    dend_20 { pt3dadd( -27.3856, 165.828, 9.59909, 0.46 ) }
    dend_20 { pt3dadd( -28.3594, 169.964, 9.18986, 0.46 ) }
    dend_20 { pt3dadd( -29.5134, 174.026, 8.69651, 0.46 ) }
    dend_20 { pt3dadd( -30.2503, 176.176, 8.37262, 0.46 ) }
    dend_20 { pt3dadd( -31.7321, 179.753, 7.73359, 0.46 ) }
    dend_20 { pt3dadd( -31.8773, 180.033, 7.67725, 0.46 ) }
    dend_20 { pt3dadd( -34.4929, 191.598, 8.06411, 0.46 ) }
    dend_20 { pt3dadd( -37.0654, 203.175, 7.79535, 0.46 ) }
    dend_20 { pt3dadd( -37.4704, 215.022, 8.2806, 0.46 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 84/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 24.1551, -159.303, 29.1535, 0.46 ) }
    dend_15 { pt3dadd( 26.4593, -168.487, 29.5487, 0.46 ) }
    dend_15 { pt3dadd( 27.8335, -177.756, 28.1325, 0.46 ) }
    dend_15 { pt3dadd( 27.6593, -187.213, 28.7083, 0.46 ) }
    dend_15 { pt3dadd( 28.7057, -196.612, 29.3279, 0.46 ) }
    dend_15 { pt3dadd( 30.7332, -205.792, 30.5161, 0.46 ) }
    dend_15 { pt3dadd( 31.0869, -214.834, 33.3306, 0.46 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 91/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 24.1551, -159.303, 29.1535, 0.46 ) }
    dend_14 { pt3dadd( 25.5057, -169.081, 33.8305, 0.46 ) }
    dend_14 { pt3dadd( 27.4538, -178.737, 38.5491, 0.46 ) }
    dend_14 { pt3dadd( 28.5825, -188.231, 43.8312, 0.46 ) }
    dend_14 { pt3dadd( 29.498, -197.686, 49.2245, 0.46 ) }
    dend_14 { pt3dadd( 32.4712, -207.007, 54.0806, 0.46 ) }
    dend_14 { pt3dadd( 35.4626, -217.074, 57.0822, 0.46 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 98/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -33.0026, -54.4392, 16.8428, 0.46 ) }
    dend_6 { pt3dadd( -31.7174, -55.3714, 15.2642, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_6 { pt3dadd( -30.9093, -56.0511, 14.2152, 0.46 ) }
    dend_6 { pt3dadd( -30.2181, -56.7018, 13.1871, 0.46 ) }
    dend_6 { pt3dadd( -29.3235, -57.6434, 11.5226, 0.46 ) }
    dend_6 { pt3dadd( -29.3184, -57.6496, 11.5109, 0.46 ) }
    dend_6 { pt3dadd( -28.6115, -58.6009, 9.65618, 0.46 ) }
    dend_6 { pt3dadd( -28.6087, -58.6062, 9.64338, 0.46 ) }
    dend_6 { pt3dadd( -28.4748, -59.0926, 8.32675, 0.46 ) }
    dend_6 { pt3dadd( -28.4822, -59.5182, 6.98952, 0.46 ) }
    dend_6 { pt3dadd( -28.6426, -60.0555, 5.22856, 0.46 ) }
    dend_6 { pt3dadd( -28.6465, -60.0694, 5.18119, 0.46 ) }
    dend_6 { pt3dadd( -28.7943, -60.5764, 3.21406, 0.46 ) }
    dend_6 { pt3dadd( -28.7951, -60.58, 3.20042, 0.46 ) }
    dend_6 { pt3dadd( -28.8208, -61.1479, 1.26649, 0.46 ) }
    dend_6 { pt3dadd( -28.8192, -61.1605, 1.22602, 0.46 ) }
    dend_6 { pt3dadd( -28.621, -61.6668, -0.506571, 0.46 ) }
    dend_6 { pt3dadd( -28.6184, -61.6708, -0.519893, 0.46 ) }
    dend_6 { pt3dadd( -28.2348, -62.066, -1.7732, 0.46 ) }
    dend_6 { pt3dadd( -27.6598, -62.5175, -3.34605, 0.46 ) }
    dend_6 { pt3dadd( -27.6475, -62.5254, -3.37822, 0.46 ) }
    dend_6 { pt3dadd( -27.1506, -62.8664, -5.00995, 0.46 ) }
    dend_6 { pt3dadd( -27.148, -62.8682, -5.02372, 0.46 ) }
    dend_6 { pt3dadd( -26.8905, -63.0839, -6.9527, 0.46 ) }
    dend_6 { pt3dadd( -26.8898, -63.0853, -6.96676, 0.46 ) }
    dend_6 { pt3dadd( -26.9231, -63.265, -9.13593, 0.46 ) }
    dend_6 { pt3dadd( -27.03, -63.4963, -11.5344, 0.46 ) }
    dend_6 { pt3dadd( -27.2591, -63.7852, -14.3605, 0.46 ) }
    dend_6 { pt3dadd( -27.26, -63.7868, -14.3745, 0.46 ) }
    dend_6 { pt3dadd( -27.3267, -64.1175, -16.7132, 0.46 ) }
    dend_6 { pt3dadd( -27.3248, -64.1353, -16.8178, 0.46 ) }
    dend_6 { pt3dadd( -27.1698, -64.6211, -19.0564, 0.46 ) }
    dend_6 { pt3dadd( -27.1682, -64.6248, -19.0699, 0.46 ) }
    dend_6 { pt3dadd( -26.8199, -65.3764, -21.2927, 0.46 ) }
    dend_6 { pt3dadd( -26.44, -66.1657, -23.5363, 0.46 ) }
    dend_6 { pt3dadd( -26.4375, -66.1705, -23.5493, 0.46 ) }
    dend_6 { pt3dadd( -26.2178, -66.7881, -25.2263, 0.46 ) }
    dend_6 { pt3dadd( -26.2172, -66.7955, -25.2462, 0.46 ) }
    dend_6 { pt3dadd( -26.347, -67.5018, -27.1441, 0.46 ) }
    dend_6 { pt3dadd( -26.3492, -67.5065, -27.1573, 0.46 ) }
    dend_6 { pt3dadd( -26.9064, -68.376, -29.7464, 0.46 ) }
    dend_6 { pt3dadd( -27.4342, -69.112, -32.2897, 0.46 ) }
    dend_6 { pt3dadd( -27.9228, -69.7198, -34.7133, 0.46 ) }
    dend_6 { pt3dadd( -28.3596, -70.2122, -36.8986, 0.46 ) }
    dend_6 { pt3dadd( -28.9136, -70.7104, -39.7321, 0.46 ) }
    dend_6 { pt3dadd( -28.9162, -70.7124, -39.7459, 0.46 ) }
    dend_6 { pt3dadd( -29.4943, -71.0505, -42.888, 0.46 ) }
    dend_6 { pt3dadd( -29.9526, -71.2852, -46.0192, 0.46 ) }
    dend_6 { pt3dadd( -29.9548, -71.2865, -46.0403, 0.46 ) }
    dend_6 { pt3dadd( -30.1367, -71.4185, -48.2707, 0.46 ) }
    dend_6 { pt3dadd( -30.1377, -71.4194, -48.2847, 0.46 ) }
    dend_6 { pt3dadd( -30.3425, -71.6081, -50.6532, 0.46 ) }
    dend_6 { pt3dadd( -30.3471, -71.6127, -50.688, 0.46 ) }
    dend_6 { pt3dadd( -30.6038, -71.8874, -52.6617, 0.46 ) }
    dend_6 { pt3dadd( -30.6225, -71.9131, -52.7995, 0.46 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 53/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -33.0026, -54.4392, 16.8428, 0.46 ) }
    dend_5 { pt3dadd( -34.1085, -56.3489, 17.2429, 0.46 ) }
    dend_5 { pt3dadd( -35.2673, -58.4921, 17.7122, 0.46 ) }
    dend_5 { pt3dadd( -36.3416, -60.6798, 18.2231, 0.46 ) }
    dend_5 { pt3dadd( -36.4889, -61.0285, 18.2955, 0.46 ) }
    dend_5 { pt3dadd( -37.1835, -63.1506, 18.6455, 0.46 ) }
    dend_5 { pt3dadd( -37.2738, -63.5208, 18.7026, 0.46 ) }
    dend_5 { pt3dadd( -37.5127, -65.0887, 18.8994, 0.46 ) }
    dend_5 { pt3dadd( -37.6783, -66.6919, 19.101, 0.46 ) }
    dend_5 { pt3dadd( -37.7831, -69.6899, 19.4668, 0.46 ) }
    dend_5 { pt3dadd( -37.79, -72.6148, 19.7902, 0.46 ) }
    dend_5 { pt3dadd( -37.7486, -74.2395, 19.9534, 0.46 ) }
    dend_5 { pt3dadd( -37.7483, -74.2644, 19.9559, 0.46 ) }
    dend_5 { pt3dadd( -37.7738, -76.7734, 20.1661, 0.46 ) }
    dend_5 { pt3dadd( -37.7918, -78.7899, 20.3113, 0.46 ) }
    dend_5 { pt3dadd( -37.7925, -78.8065, 20.3126, 0.46 ) }
    dend_5 { pt3dadd( -37.976, -81.3417, 20.4942, 0.46 ) }
    dend_5 { pt3dadd( -38.1779, -84.2913, 20.6447, 0.46 ) }
    dend_5 { pt3dadd( -38.3116, -87.2254, 20.7724, 0.46 ) }
    dend_5 { pt3dadd( -38.334, -88.2715, 20.8073, 0.46 ) }
    dend_5 { pt3dadd( -38.4206, -91.4535, 20.9256, 0.46 ) }
    dend_5 { pt3dadd( -38.4212, -91.4869, 20.9262, 0.46 ) }
    dend_5 { pt3dadd( -38.511, -94.0265, 20.9128, 0.46 ) }
    dend_5 { pt3dadd( -38.6741, -96.5333, 20.8809, 0.46 ) }
    dend_5 { pt3dadd( -38.6765, -96.5583, 20.8806, 0.46 ) }
    dend_5 { pt3dadd( -39.0456, -99.1129, 20.8891, 0.46 ) }
    dend_5 { pt3dadd( -39.5485, -102.087, 20.9143, 0.46 ) }
    dend_5 { pt3dadd( -40.1511, -105.328, 21.0107, 0.46 ) }
    dend_5 { pt3dadd( -40.5796, -107.399, 21.1278, 0.46 ) }
    dend_5 { pt3dadd( -41.4062, -111.29, 21.4255, 0.46 ) }
    dend_5 { pt3dadd( -42.2958, -115.619, 21.913, 0.46 ) }
    dend_5 { pt3dadd( -42.2992, -115.635, 21.9152, 0.46 ) }
    dend_5 { pt3dadd( -43.137, -119.556, 22.6407, 0.46 ) }
    dend_5 { pt3dadd( -43.2815, -120.343, 22.8162, 0.46 ) }
    dend_5 { pt3dadd( -43.4513, -121.375, 23.0824, 0.46 ) }
    dend_5 { pt3dadd( -43.6678, -122.997, 23.6373, 0.46 ) }
    dend_5 { pt3dadd( -44.1249, -131.22, 25.0675, 0.46 ) }
    dend_5 { pt3dadd( -45.2227, -139.491, 25.5892, 0.46 ) }
    dend_5 { pt3dadd( -45.0413, -147.848, 25.6499, 0.46 ) }
    dend_5 { pt3dadd( -43.6352, -156.069, 26.2138, 0.46 ) }
    dend_5 { pt3dadd( -41.8227, -164.038, 27.9723, 0.46 ) }
    dend_5 { pt3dadd( -38.9185, -171.481, 30.4333, 0.46 ) }
    dend_5 { pt3dadd( -34.8425, -178.659, 31.7509, 0.46 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 96/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 62.6721, -6.79748, -64.824, 0.46 ) }
    dend_34 { pt3dadd( 62.4628, -8.0388, -69.1724, 0.46 ) }
    dend_34 { pt3dadd( 62.2572, -9.3371, -74.0614, 0.46 ) }
    dend_34 { pt3dadd( 62.2603, -9.35205, -74.1439, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_34 { pt3dadd( 62.5736, -10.0353, -78.7628, 0.46 ) }
    dend_34 { pt3dadd( 62.5841, -10.0463, -78.8311, 0.46 ) }
    dend_34 { pt3dadd( 63.8162, -11.0793, -85.0059, 0.46 ) }
    dend_34 { pt3dadd( 63.8457, -11.0912, -85.0985, 0.46 ) }
    dend_34 { pt3dadd( 66.632, -11.985, -91.3608, 0.46 ) }
    dend_34 { pt3dadd( 66.6532, -11.9908, -91.3966, 0.46 ) }
    dend_34 { pt3dadd( 70.7247, -12.8532, -95.604, 0.46 ) }
    dend_34 { pt3dadd( 70.8599, -12.8817, -95.6261, 0.46 ) }
    dend_34 { pt3dadd( 75.3575, -13.8394, -93.9903, 0.46 ) }
    dend_34 { pt3dadd( 75.5439, -13.8826, -93.8743, 0.46 ) }
    dend_34 { pt3dadd( 79.5579, -14.8824, -90.2865, 0.46 ) }
    dend_34 { pt3dadd( 79.6048, -14.8927, -90.2357, 0.46 ) }
    dend_34 { pt3dadd( 82.8794, -15.4122, -85.4274, 0.46 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 13/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 62.6721, -6.79748, -64.824, 0.46 ) }
    dend_33 { pt3dadd( 64.4111, -7.91181, -65.7594, 0.46 ) }
    dend_33 { pt3dadd( 67.2553, -9.59731, -67.1429, 0.46 ) }
    dend_33 { pt3dadd( 69.4095, -10.8351, -68.1513, 0.46 ) }
    dend_33 { pt3dadd( 72.2399, -12.3969, -69.4775, 0.46 ) }
    dend_33 { pt3dadd( 75.5062, -14.1589, -71.0961, 0.46 ) }
    dend_33 { pt3dadd( 78.3001, -15.666, -72.4806, 0.46 ) }
    dend_33 { pt3dadd( 81.4791, -17.3409, -74.0312, 0.46 ) }
    dend_33 { pt3dadd( 81.5126, -17.3585, -74.0472, 0.46 ) }
    dend_33 { pt3dadd( 84.2726, -18.7093, -75.3512, 0.46 ) }
    dend_33 { pt3dadd( 86.0702, -19.4907, -76.2195, 0.46 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_29, dend_28, dend_17, dend_10, dend_0, dend_39, dend_30, dend_23, dend_18, dend_16, dend_11, dend_7, dend_2, dend_1, dend_43, dend_40, dend_36, dend_31, dend_25, dend_24, dend_22, dend_19, dend_13, dend_12, dend_9, dend_8, dend_4, dend_3, dend_42, dend_41, dend_38, dend_37, dend_35, dend_32, dend_27, dend_26, dend_21, dend_20, dend_15, dend_14, dend_6, dend_5, dend_34, dend_33]}
    ModelViewParmSubset_2 = new SectionList()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_29, dend_28, dend_17, dend_10, dend_0, dend_39, dend_30, dend_23, dend_18, dend_16, dend_11, dend_7, dend_2, dend_1, dend_43, dend_40, dend_36, dend_31, dend_25, dend_24, dend_22, dend_19, dend_13, dend_12, dend_9, dend_8, dend_4, dend_3, dend_42, dend_41, dend_38, dend_37, dend_35, dend_32, dend_27, dend_26, dend_21, dend_20, dend_15, dend_14, dend_6, dend_5, dend_34, dend_33]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_23 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_16 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_11 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_7 OneSecGrp_SectionRef_14.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_2 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_1 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_43 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_36 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_31 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_25 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_24 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_22 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_13 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_12 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_8 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_3 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_42 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_41 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_37 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_35 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_32 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_20 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_15 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_14 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_6 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_5 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_34 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_29 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_17 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_30 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_10 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_39 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_18 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_40 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_19 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_4 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_21 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_38 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_33 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_27 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_26 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_9 OneSecGrp_SectionRef_28.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_17, dend_17, dend_17, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_30 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 8.936579E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_28 nseg = 5
    dend_23 nseg = 3
    dend_16 nseg = 7
    dend_11 nseg = 3
    dend_7 nseg = 9
    dend_2 nseg = 3
    dend_1 nseg = 9
    dend_43 nseg = 5
    dend_36 nseg = 5
    dend_31 nseg = 3
    dend_25 nseg = 5
    dend_24 nseg = 3
    dend_22 nseg = 5
    dend_13 nseg = 5
    dend_12 nseg = 11
    dend_8 nseg = 5
    dend_3 nseg = 3
    dend_42 nseg = 3
    dend_41 nseg = 3
    dend_37 nseg = 3
    dend_35 nseg = 11
    dend_32 nseg = 3
    dend_20 nseg = 7
    dend_15 nseg = 3
    dend_14 nseg = 3
    dend_6 nseg = 3
    dend_5 nseg = 7
    dend_34 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dSTUT214_L4_LBC_aecec7aee9_0_0


