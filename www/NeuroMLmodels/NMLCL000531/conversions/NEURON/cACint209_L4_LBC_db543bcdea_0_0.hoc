// Cell: cACint209_L4_LBC_db543bcdea_0_0
/*
{
  "id" : "cACint209_L4_LBC_db543bcdea_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.962373, -11.5703, -0.0721056, 4.19097", "-0.880095, -10.4367, -0.0644606, 4.93029", "-0.797817, -9.30301, -0.0568155, 5.93294", "-0.71554, -8.16936, -0.0491704, 6.09828", "-0.633262, -7.0357, -0.0415253, 6.15277", "-0.550984, -5.90205, -0.0338803, 6.20727", "-0.468706, -4.7684, -0.0262352, 6.35712", "-0.386429, -3.63474, -0.0185901, 6.90128", "-0.304151, -2.50109, -0.010945, 7.43527", "-0.221873, -1.36744, -0.00329998, 7.86212", "-0.139595, -0.233784, 0.0043451, 8.28482", "-0.0573177, 0.899869, 0.0119902, 8.67067", "0.02496, 2.03352, 0.0196352, 9.05218", "0.107238, 3.16718, 0.0272803, 9.3293", "0.189516, 4.30083, 0.0349254, 9.48916", "0.271793, 5.43448, 0.0425705, 9.54333", "0.354071, 6.56813, 0.0502155, 9.56479", "0.436349, 7.70179, 0.0578606, 9.72248", "0.518627, 8.83544, 0.0655057, 9.81837", "0.600904, 9.96909, 0.0731507, 5.41989", "0.683182, 11.1027, 0.0807958, 3.18974" ]
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "1.08965, 9.14129, 3.5126, 0.83", "1.30645, 10.6517, 2.92281, 0.83", "1.4749, 13.4033, 1.78178, 0.83", "1.56611, 16.4433, 0.814236, 1.11", "1.63397, 20.8982, -0.216866, 0.83", "1.66306, 22.8534, -0.429307, 0.83", "1.78233, 26.6644, -0.443035, 0.83", "1.83231, 29.2157, -0.210466, 0.55", "1.67851, 33.135, 0.60373, 0.83", "1.4985, 35.4638, 1.31882, 0.55", "1.24438, 39.3154, 2.84625, 0.55", "1.18676, 42.887, 4.40385, 0.55", "1.26153, 45.4151, 5.4924, 0.55", "1.28996, 48.0853, 6.3567, 0.55", "1.28207, 49.6087, 6.59184, 0.55", "1.24446, 51.2277, 6.5685, 0.55", "1.19916, 53.0641, 6.33533, 0.55", "1.1407, 57.6341, 5.52629, 0.55", "1.19416, 61.3035, 4.78644, 0.55", "1.3094, 65.3072, 3.83603, 0.55", "1.35116, 68.6443, 3.00414, 0.83", "1.29415, 71.3138, 2.30236, 0.83", "1.22345, 72.8369, 1.87787, 0.55", "1.21725, 72.9646, 1.84812, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000043951554164,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "2.43965, 6.31029, 16.3526, 1.11", "3.27334, 7.64393, 16.5116, 0.83", "5.65913, 11.4123, 16.4431, 1.38", "7.59922, 14.5009, 16.5875, 1.11", "9.02137, 16.7341, 17.6833, 1.11", "10.0803, 18.5235, 18.9354, 1.11", "12.0315, 21.8209, 21.2425, 1.11", "13.0006, 23.5281, 22.6734, 0.83", "14.923, 27.0071, 26.5183, 1.66", "19.0058, 34.0026, 36.4681, 0.83", "19.6982, 35.2274, 38.7386, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000043951554164,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-2.07035, 8.59979, -2.0074, 0.83", "-2.79482, 9.87569, -3.00785, 0.83", "-4.06061, 12.1692, -4.55448, 0.55", "-6.02803, 15.9643, -6.93736, 0.83", "-7.20265, 18.1104, -8.31413, 0.55", "-8.19715, 19.8255, -9.79011, 0.55", "-9.52642, 22.1157, -12.0428, 0.83", "-10.6336, 23.9893, -14.0461, 0.55", "-11.5433, 25.5356, -15.6366, 0.83", "-12.8323, 27.922, -17.7849, 0.83", "-15.9906, 33.4093, -22.6056, 0.83", "-17.3595, 35.6222, -24.534, 0.55", "-18.2406, 37.0938, -25.6763, 0.83", "-19.9158, 39.7604, -27.7535, 0.55", "-21.0271, 41.4454, -28.9166, 0.55", "-22.5084, 43.7665, -30.2278, 0.55", "-24.1482, 46.5642, -31.4981, 0.55", "-25.4734, 49.0144, -32.7629, 0.55", "-26.6574, 51.3214, -34.0872, 0.83", "-27.7733, 53.9519, -36.0136, 0.55", "-28.4271, 55.8653, -37.5216, 0.55", "-29.3526, 59.2442, -40.2429, 0.55", "-30.0778, 62.0937, -42.5412, 0.83", "-30.5719, 63.9546, -44.2755, 0.83", "-31.9497, 69.1702, -49.435, 0.55", "-32.2296, 70.1808, -50.6091, 0.55", "-32.3607, 70.5451, -51.0981, 0.55", "-32.9218, 71.7935, -53.0285, 1.11", "-34.3904, 74.8803, -57.864, 0.55", "-34.6987, 75.4674, -58.7733, 0.55", "-36.3382, 78.006, -62.4845, 0.83", "-36.6581, 78.5061, -63.2684, 0.83", "-37.6522, 80.5457, -66.4821, 0.83", "-38.106, 81.7761, -68.3944, 0.28", "-38.1819, 82.1231, -68.9092, 0.55", "-38.4707, 84.3606, -72.1503, 0.28", "-38.6096, 86.1355, -74.4345, 0.83", "-38.7343, 90.6917, -79.6615, 0.28", "-38.7286, 91.1528, -80.1512, 0.83", "-38.5217, 96.1214, -85.1636, 0.28", "-38.4648, 97.1297, -86.1046, 0.83", "-38.3211, 100.037, -88.3988, 0.55", "-38.2541, 102.663, -90.1702, 0.83", "-38.2774, 106.291, -92.3351, 0.28", "-38.2906, 106.853, -92.6609, 1.11", "-38.5604, 112.085, -95.6464, 0.28", "-38.721, 113.952, -96.9179, 0.55", "-38.7997, 114.735, -97.4815, 0.55", "-39.2123, 118.101, -100.287, 0.28", "-39.2721, 118.653, -100.729, 0.55", "-39.4473, 120.535, -102.234, 0.28", "-39.5675, 122.364, -103.638, 0.83", "-39.6586, 124.704, -105.514, 0.28", "-39.87, 129.69, -109.595, 1.11", "-39.9297, 131.718, -111.153, 0.28", "-39.9365, 132.615, -111.783, 0.55", "-39.9246, 134.284, -112.8, 0.28", "-39.9342, 134.875, -113.132, 0.55", "-40.064, 137.775, -114.606, 0.28", "-40.2612, 139.315, -115.369, 1.38", "-40.9145, 142.984, -117.532, 0.28", "-41.1382, 144.019, -118.198, 0.55", "-41.7601, 146.553, -119.872, 0.28", "-42.2255, 148.322, -121.036, 1.38", "-44.5371, 156.95, -126.675, 0.28", "-44.9235, 158.388, -127.635, 0.55", "-45.933, 162.525, -130.188, 0.28", "-46.1124, 163.344, -130.656, 0.55", "-46.4235, 165.002, -131.351, 0.55", "-47.2714, 169.903, -133.12, 0.28", "-47.4371, 170.989, -133.425, 0.83", "-48.3948, 177.345, -135.192, 0.28", "-48.8245, 180.176, -135.925, 1.11", "-50.2264, 188.766, -138.241, 0.28", "-51.0026, 192.887, -139.589, 0.55", "-51.5719, 195.49, -140.561, 0.28", "-51.984, 197.145, -141.167, 1.38", "-52.9184, 200.334, -142.335, 0.28", "-53.5339, 202.102, -142.896, 0.55", "-55.8672, 207.501, -144.436, 0.28", "-56.6429, 209.255, -144.736, 0.83", "-59.4292, 215.137, -145.422, 0.28", "-59.862, 215.991, -145.477, 0.55", "-61.6503, 219.238, -145.478, 0.28", "-62.0971, 220.018, -145.304, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000043951554164,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-3.58035, 6.55729, 10.8326, 0.55", "-4.72305, 8.83597, 11.9536, 0.55", "-5.66369, 10.4364, 12.7149, 0.83", "-7.26642, 12.6323, 13.7312, 0.55", "-7.76052, 13.3075, 14.1368, 0.55", "-8.46869, 14.2576, 14.8374, 0.55", "-9.40105, 15.4272, 15.807, 0.55", "-9.82914, 15.8897, 16.2876, 0.55", "-10.7587, 16.7277, 17.2927, 0.55", "-13.0301, 18.7218, 19.6734, 0.55", "-13.9832, 19.618, 20.7846, 0.55", "-14.4501, 20.0859, 21.3639, 0.55", "-15.1307, 20.7089, 22.2875, 0.83", "-15.7545, 21.1963, 23.1147, 0.55", "-16.1849, 21.5324, 23.835, 0.55", "-16.4418, 21.6907, 24.2333, 0.55", "-17.1991, 22.1655, 25.3752, 0.55", "-18.5312, 23.0889, 27.3882, 0.55", "-19.2571, 23.5415, 28.4389, 0.83", "-21.9987, 25.1508, 32.1709, 0.55", "-22.7433, 25.5921, 33.1113, 0.55", "-23.7253, 26.2382, 34.6096, 0.55", "-24.2527, 26.6308, 35.4494, 0.55", "-24.914, 27.1327, 36.4126, 0.55", "-25.2133, 27.3373, 36.9342, 0.55", "-25.6493, 27.5582, 37.9387, 0.55", "-27.7932, 28.6965, 44.2451, 0.83", "-28.2658, 28.9433, 45.8204, 0.55", "-28.5156, 29.0579, 46.6743, 0.55", "-29.7396, 29.4784, 50.8136, 0.83", "-31.0274, 29.8219, 55.2938, 0.55", "-31.2728, 29.8614, 56.1574, 0.55", "-31.5931, 29.8867, 57.2302, 0.28", "-31.8301, 29.8975, 58.1556, 0.83", "-32.8604, 29.9949, 62.1459, 0.55", "-35.7697, 31.5454, 67.5962, 0.55", "-38.1596, 32.4503, 73.4477, 0.55", "-41.7149, 34.3272, 78.3723, 0.55", "-45.8384, 36.8165, 82.4784, 0.55", "-49.0427, 39.1607, 87.422, 0.55", "-52.7313, 40.5544, 92.427, 0.55", "-56.1669, 41.7889, 97.655, 0.55", "-59.1859, 42.1412, 103.277, 0.55", "-61.8047, 41.8163, 109.1, 0.55", "-64.5971, 40.7898, 114.75, 0.55", "-67.1141, 39.0213, 120.326, 0.55", "-70.0173, 36.8595, 125.553, 0.55", "-73.3794, 35.1206, 130.679, 0.55", "-76.3253, 34.1506, 136.262, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000043951554164,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "4.78965, 6.77579, -4.2574, 1.11", "5.74867, 7.84976, -4.51763, 1.11", "7.84841, 10.2012, -5.08741, 2.49", "9.34321, 11.8752, -5.49303, 1.38", "10.9067, 13.6261, -5.9173, 2.22", "11.9843, 14.8329, -6.20972, 2.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000043951554164
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.629658, -11.4547, -1.6674, 3.88", "2.46292, -17.3191, -3.11056, 3.6", "4.47897, -23.7683, -4.69762, 4.16", "6.79618, -31.1807, -6.52174, 3.32" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000043951554164
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.683182, 11.1027, 0.0807958, 0.584322", "1.76899, 26.0633, 0.0807958, 0.584322", "2.8548, 41.024, 0.0807958, 0.584322" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "1.21725, 72.9646, 1.84812, 0.83", "2.37522, 74.0812, 0.978046, 0.83", "3.12732, 75.1746, 0.259327, 0.83", "3.80228, 76.597, -0.446183, 1.11", "4.15743, 77.536, -0.79817, 1.11", "5.02758, 80.2118, -2.068, 0.83", "5.37354, 81.2758, -2.71242, 0.83", "5.79643, 82.7258, -3.72583, 1.38", "6.25888, 84.6234, -5.10247, 0.55", "6.75652, 86.9993, -7.0627, 1.38", "7.42548, 90.1791, -10.0047, 0.55", "7.8171, 92.1641, -12.0815, 0.28", "7.89047, 92.5665, -12.5356, 0.83", "7.96701, 93.1209, -13.2153, 0.83", "8.14859, 95.4428, -16.1808, 0.28", "8.15355, 96.2166, -17.1815, 1.38", "8.14775, 98.9542, -20.3959, 0.28", "8.15993, 100.67, -22.3496, 0.83", "8.22381, 102.439, -24.3468, 0.28", "8.23597, 102.827, -24.9081, 0.83", "8.30764, 104.469, -27.6687, 0.28", "8.31853, 105.187, -29.1027, 0.55", "8.30228, 105.87, -30.6881, 0.28", "8.25185, 106.434, -32.1333, 1.66", "7.63476, 110.148, -41.8801, 0.28", "7.58732, 110.298, -42.2888, 0.55", "7.18718, 111.118, -44.5703, 0.28", "6.92974, 111.45, -45.5418, 0.83", "6.11063, 112.229, -47.7838, 0.28", "5.50305, 112.649, -48.9315, 0.83", "4.37734, 113.254, -49.8908, 0.28", "4.04522, 113.426, -50.1127, 0.55", "2.40296, 114.345, -50.8908, 0.28", "1.40594, 114.981, -51.2403, 0.28", "0.287359, 115.73, -51.4909, 0.55", "-0.627124, 116.436, -51.6324, 0.28", "-1.59458, 117.372, -51.7497, 0.83", "-2.93273, 118.932, -51.9053, 0.28", "-3.28378, 119.501, -51.933, 0.55" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "1.21725, 72.9646, 1.84812, 0.55", "1.21308, 74.2383, 1.1814, 0.55", "1.13483, 76.9808, -0.10684, 0.55", "0.988025, 80.7089, -1.8087, 0.55", "0.78889, 87.6207, -4.69061, 0.55", "0.753707, 90.0516, -5.48187, 0.83", "0.750006, 92.2751, -6.0293, 0.55", "0.840274, 95.1534, -6.5572, 0.55", "0.933565, 97.1591, -6.72409, 0.83", "1.00748, 99.1372, -6.65561, 0.55", "1.22614, 103.473, -5.67052, 0.55", "1.33593, 105.518, -5.22162, 0.83", "1.43036, 107.622, -4.7696, 0.55", "1.47105, 108.396, -4.6444, 0.83", "1.51152, 110.5, -4.44633, 0.55", "1.44639, 112.35, -4.46667, 0.83", "1.34958, 113.871, -5.22115, 0.55", "1.24964, 114.941, -6.05537, 0.83", "1.0352, 116.924, -7.8415, 0.55", "0.808953, 119.038, -9.90383, 0.55", "0.608341, 121.399, -12.3499, 0.83", "-0.0227914, 131.38, -22.871, 0.83", "-0.0695938, 132.55, -24.0997, 0.55", "-0.103176, 134.448, -26.012, 0.83", "-0.0949445, 135.827, -27.3058, 0.55", "-0.00909298, 137.373, -28.4325, 0.55", "0.148343, 139.323, -29.2337, 0.83", "0.301593, 140.894, -29.3661, 1.11", "0.539293, 143.784, -29.6089, 0.83", "0.636172, 145.695, -29.7648, 0.83", "0.719709, 149.383, -30.0408, 0.55", "0.68566, 151.965, -30.212, 0.55", "0.64285, 153.253, -30.2862, 0.55", "0.397054, 157.549, -30.4814, 0.83", "0.17342, 159.946, -30.6334, 0.55", "-0.063439, 162.301, -30.7744, 0.83", "-0.306925, 164.265, -30.853, 0.55", "-0.462957, 165.593, -30.8712, 0.55", "-0.769792, 167.475, -30.9246, 1.11", "-1.21911, 169.932, -31.1284, 0.55" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "19.6982, 35.2274, 38.7386, 0.55", "21.1926, 36.7436, 38.8149, 0.55", "23.3607, 38.7897, 38.9318, 0.55", "25.4828, 40.8063, 39.0539, 0.55", "27.211, 42.357, 39.1738, 0.55", "28.8681, 43.7797, 39.3053, 0.55", "30.7809, 45.4705, 39.4521, 0.28", "31.2468, 45.8503, 39.4851, 0.55", "32.771, 47.085, 39.822, 0.28", "33.9688, 48.1498, 40.3021, 0.28", "34.9289, 49.1999, 40.8833, 0.55", "36.0099, 50.5678, 41.7057, 0.28", "36.4825, 51.1765, 42.1467, 0.55", "39.3919, 54.7524, 44.9761, 0.28", "39.8079, 55.2604, 45.3829, 0.55", "41.0661, 56.9824, 46.6949, 0.55", "41.9526, 58.2208, 47.5344, 0.55", "42.9428, 59.6709, 48.4077, 0.28", "43.5038, 60.5351, 48.8484, 0.55", "44.4378, 62.1524, 49.4571, 0.55", "45.4904, 64.1251, 50.204, 0.28", "46.7644, 66.7091, 51.0535, 0.55", "47.7305, 68.936, 51.6445, 0.28", "47.9489, 69.5256, 51.7514, 0.55", "48.4823, 71.162, 51.9668, 0.28", "48.7333, 71.9763, 52.0173, 0.55", "49.5559, 74.5312, 51.9469, 0.28", "49.7154, 75.1287, 51.9027, 0.55", "50.0893, 76.5032, 51.7859, 0.28", "50.3371, 77.4266, 51.7374, 0.55", "50.7814, 79.2561, 51.7508, 0.55", "51.044, 80.3697, 51.8362, 0.55", "51.6378, 82.7416, 52.1669, 0.55", "51.9334, 83.9071, 52.3243, 0.28", "52.293, 85.2054, 52.4965, 0.55", "52.8113, 87.064, 52.5421, 0.55", "53.5609, 89.3741, 52.3485, 0.55", "54.1501, 90.9257, 52.049, 0.28", "54.6679, 91.8591, 51.7775, 0.55", "55.6174, 93.4476, 51.1963, 0.55", "57.7919, 96.6251, 49.7652, 0.55", "58.7999, 97.8441, 49.0598, 0.55", "59.8495, 98.9342, 48.2723, 0.55", "62.1438, 101.025, 46.5393, 0.55", "67.2049, 108.94, 48.9128, 0.55", "71.3642, 116.975, 52.3886, 0.55", "76.1315, 124.719, 55.7967, 0.55", "81.8401, 131.471, 60.0006, 0.55", "86.8572, 138.524, 64.5377, 0.55", "91.5816, 145.162, 70.0029, 0.55", "96.7961, 150.789, 76.2279, 0.55" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "19.6982, 35.2274, 38.7386, 0.83", "21.1546, 38.3915, 40.177, 0.83", "22.3363, 41.0606, 41.2531, 0.83", "23.4516, 43.9422, 42.2915, 0.83", "25.0449, 48.5622, 44.2679, 0.55", "25.675, 50.3859, 45.0605, 0.55", "26.4377, 52.7112, 46.0561, 0.55", "27.3111, 55.3777, 47.1572, 0.55", "27.8921, 57.4375, 48.1464, 0.55", "28.6304, 61.6466, 50.2962, 0.55", "29.0756, 65.0277, 52.2211, 0.55", "29.3319, 66.6789, 53.3979, 0.55", "29.5231, 67.8946, 54.3653, 0.55", "30.014, 71.2508, 57.3808, 0.83", "30.2362, 72.9397, 58.9555, 0.83", "30.5759, 76.2965, 61.9695, 0.83", "30.7847, 80.0658, 65.3109, 0.55", "30.879, 82.6221, 67.3691, 0.83", "30.8601, 86.2883, 69.9926, 0.83", "30.7323, 88.1649, 71.1079, 0.83", "30.4643, 90.4712, 72.3007, 0.83", "30.0607, 92.9832, 73.2215, 0.55", "29.6736, 95.9762, 73.9262, 0.55", "29.5563, 97.8664, 74.2073, 0.55", "29.6393, 99.6602, 74.295, 0.55", "29.7655, 100.284, 74.3151, 0.55", "30.5919, 102.987, 74.3708, 0.55", "31.3369, 105.085, 74.4004, 0.55", "32.1513, 107.311, 74.4259, 0.55", "33.4296, 110.825, 74.4611, 0.55", "34.3919, 113.947, 74.5095, 0.55", "35.1045, 116.726, 74.5671, 0.55", "35.5016, 118.859, 74.674, 0.55", "35.6899, 120.296, 74.78, 0.55", "35.8668, 121.939, 74.9291, 0.55", "36.1287, 125.034, 75.4334, 0.55", "36.3205, 127.661, 76.0047, 0.55", "36.6573, 130.974, 76.8403, 0.55", "36.9918, 133.835, 77.6079, 0.55", "37.1629, 135.583, 78.0926, 0.55", "37.4018, 139.743, 79.2737, 0.55", "37.4671, 141.219, 79.6795, 0.55", "37.5231, 143.563, 80.3254, 0.55", "37.5499, 146.337, 81.027, 0.55", "37.4582, 148.437, 81.5393, 0.55", "37.299, 150.061, 81.8563, 0.55", "36.8961, 153.084, 82.0363, 0.55", "38.5303, 162.352, 86.3522, 0.55", "39.6222, 171.572, 90.9305, 0.55", "39.161, 181.023, 95.0362, 0.55" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "11.9843, 14.8329, -6.20972, 1.11", "18.351, 16.3432, -7.23523, 1.11", "24.5384, 17.8108, -8.23186, 1.11" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "11.9843, 14.8329, -6.20972, 0.83", "11.1177, 18.5585, -9.03353, 0.83", "9.61127, 25.0344, -13.942, 0.83", "9.30392, 26.3556, -14.9434, 0.83" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "6.79618, -31.1807, -6.52174, 0.55", "7.53216, -31.4906, -7.76251, 0.55", "8.10284, -31.8149, -8.64819, 0.55", "8.7254, -32.212, -9.54343, 1.11", "12.4216, -34.4105, -14.7625, 0.83", "13.0633, -34.7816, -15.6276, 0.83", "14.3936, -35.5432, -17.3584, 0.83", "15.5789, -36.1329, -18.9462, 0.55", "15.9473, -36.3004, -19.3992, 0.55", "17.8179, -37.113, -21.5599, 0.55", "18.6489, -37.5413, -22.4496, 0.55", "19.4097, -37.9857, -23.4478, 0.83", "21.1095, -39.0496, -26.1546, 0.83", "21.917, -39.6268, -27.6213, 1.11", "23.4858, -41.14, -31.2203, 0.83", "23.8209, -41.6089, -32.2227, 0.83", "24.4855, -42.7165, -34.7818, 0.83", "24.836, -43.4076, -36.5183, 0.83", "24.9934, -43.8177, -37.5219, 0.55", "25.4546, -44.7719, -40.3872, 0.83", "25.7388, -45.2214, -41.8664, 0.83", "26.2941, -45.8127, -44.0726, 0.83", "27.0811, -46.4255, -46.7727, 0.55", "27.4996, -46.7015, -48.1003, 0.83", "29.4009, -47.7617, -54.0105, 0.55", "29.666, -47.9034, -54.8048, 0.55", "29.9403, -48.0453, -55.614, 0.55", "31.4119, -48.9123, -60.0054, 0.55", "31.6322, -49.039, -60.6267, 0.28", "32.5319, -49.5816, -63.2013, 0.83", "32.8771, -49.8554, -64.1896, 0.55", "33.1778, -50.1265, -65.1029, 0.55", "33.6698, -50.6281, -66.5612, 0.28", "34.0342, -50.9668, -67.3831, 0.55", "34.9209, -51.6246, -69.2115, 0.28", "35.0668, -51.7217, -69.4757, 0.28", "35.4167, -51.9486, -70.1285, 0.55", "35.6831, -52.1419, -70.6647, 0.55", "36.5715, -52.8425, -72.5843, 0.55", "37.4626, -53.7184, -75.201, 0.55", "37.745, -54.0195, -76.1141, 0.55", "38.099, -54.4131, -77.404, 1.11", "38.3142, -54.6454, -78.2053, 0.55", "39.0249, -55.2715, -80.8042, 0.55", "40.0826, -56.2703, -84.9479, 0.55", "40.3187, -56.4836, -85.8878, 1.11", "41.1146, -57.097, -88.9674, 0.28", "41.3606, -57.2495, -89.8157, 0.28", "42.2954, -57.693, -92.8928, 1.66" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "6.79618, -31.1807, -6.52174, 2.77", "7.43028, -37.7104, -0.784535, 2.77", "7.71835, -40.6767, 1.8218, 2.49" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "2.8548, 41.024, 0.0807958, 0.55", "3.94061, 55.9846, 0.0807958, 0.55", "5.02642, 70.9453, 0.0807958, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-1.21911, 169.932, -31.1284, 0.55", "-0.327678, 171.372, -33.335, 0.55", "0.360102, 172.941, -35.0371, 0.55", "1.91457, 177.496, -39.0774, 0.55", "2.15533, 178.512, -39.9778, 0.83", "2.6495, 180.851, -41.9711, 0.28", "3.04564, 182.89, -43.6954, 0.55", "3.54124, 187.208, -47.0761, 0.28", "3.60189, 188.591, -48.2724, 0.83", "3.74207, 192.399, -51.7766, 0.28", "3.74571, 193.945, -53.459, 0.55", "3.7258, 195.848, -55.6896, 0.28", "3.72829, 196.142, -56.0844, 0.55", "3.91896, 201.009, -62.9334, 0.28", "3.96368, 201.45, -63.5661, 0.55", "4.53203, 205.089, -68.6592, 0.28", "4.84292, 206.653, -71.0137, 1.11", "5.99279, 210.99, -77.5235, 0.28", "6.21605, 211.596, -78.4944, 0.83", "6.60208, 212.391, -79.8323, 0.28", "6.88621, 212.911, -80.774, 0.55", "8.69198, 215.562, -85.9027, 0.28", "9.21136, 216.333, -87.4341, 0.55", "11.3681, 219.615, -93.6112, 0.28", "11.7224, 220.244, -94.7607, 0.83", "12.4752, 221.782, -97.3717, 0.28", "13.0693, 223.15, -99.3784, 0.55", "14.4417, 226.807, -103.863, 0.28", "14.7885, 227.972, -105.246, 0.55", "15.2491, 229.985, -107.33, 0.28", "15.3856, 231.207, -108.74, 0.83", "15.4296, 232.954, -110.895, 0.28", "15.4355, 234.072, -112.23, 0.55", "15.3699, 237.427, -115.888, 0.28", "15.3813, 238.493, -116.985, 0.83", "15.6847, 244.75, -122.893, 0.28", "15.7715, 246.12, -124.096, 0.28", "15.9509, 248.68, -126.249, 1.11", "16.3863, 253.078, -129.48, 0.28", "16.7952, 255.93, -131.214, 0.83", "17.2293, 258.384, -132.526, 0.28", "17.4453, 259.281, -132.936, 0.55", "18.2713, 262.726, -134.666, 0.28", "18.6844, 264.643, -135.834, 0.83", "19.3784, 267.558, -137.673, 0.28", "19.4605, 267.964, -137.958, 0.55", "20.1272, 271.156, -140.422, 0.28", "20.2414, 271.673, -140.82, 0.83", "21.2941, 276.043, -143.951, 0.28", "21.6129, 277.995, -145.583, 0.55" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-1.21911, 169.932, -31.1284, 0.28", "-1.43284, 172.014, -30.7167, 0.28", "-1.49573, 172.785, -30.5621, 0.55", "-1.68581, 174.421, -30.2221, 0.55", "-1.92401, 176.762, -29.7616, 0.55", "-2.23312, 179.657, -29.3019, 0.55", "-2.37575, 181.104, -29.1051, 0.55", "-2.67426, 183.942, -28.7318, 0.83", "-2.91319, 186.04, -28.4585, 0.55", "-3.30194, 188.597, -28.1203, 0.55", "-3.57065, 190.187, -27.9078, 0.83", "-3.85003, 192.183, -27.7431, 0.55", "-4.03959, 193.365, -27.6832, 0.55", "-4.48962, 195.961, -27.6236, 0.55", "-4.74994, 197.631, -27.6389, 0.55", "-4.98855, 199.084, -27.6601, 0.83", "-5.36818, 201.944, -27.6743, 0.55", "-5.46868, 202.803, -27.6539, 0.55", "-5.62732, 204.501, -27.5517, 0.83", "-5.76441, 205.716, -27.3384, 0.55", "-5.90951, 206.838, -26.9745, 0.55", "-6.00372, 207.503, -26.705, 0.55", "-6.33337, 210.016, -25.4213, 0.28", "-6.44185, 211.177, -24.792, 0.55", "-6.52521, 213.913, -23.2473, 0.55", "-6.51903, 215.215, -22.5795, 0.28", "-6.40683, 216.811, -21.9215, 0.55", "-6.22425, 218.406, -21.4475, 0.28", "-6.00858, 219.746, -21.2282, 0.55", "-5.63146, 221.716, -21.0171, 0.55", "-5.20224, 223.748, -20.9666, 0.28", "-4.85618, 225.637, -20.8599, 0.55", "-4.57442, 227.447, -20.7651, 0.28", "-4.36784, 229.166, -20.6542, 0.55", "-4.17465, 231.322, -20.4374, 0.28", "-4.10554, 232.526, -20.256, 0.83", "-3.94439, 234.382, -19.9393, 0.28", "-3.79728, 236.001, -19.6518, 0.55", "-3.51716, 238.194, -19.2721, 0.28", "-3.42138, 239.071, -19.1041, 0.55", "-3.34936, 240.223, -18.8728, 0.28", "-3.25032, 242.167, -18.4635, 0.55", "-3.20416, 245.157, -17.9245, 0.28", "-3.26239, 246.878, -17.7115, 0.83", "-3.40908, 249.433, -17.5881, 0.28", "-3.52403, 251.024, -17.5608, 0.28", "-3.65633, 252.538, -17.6677, 0.28", "-4.03771, 255.814, -18.1021, 0.83", "-4.40174, 258.563, -18.7267, 0.28", "-4.58064, 259.852, -19.1099, 0.28", "-4.653, 260.448, -19.3513, 0.55", "-4.97486, 263.391, -20.7801, 0.28", "-5.20999, 265.306, -21.8775, 0.83" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "96.7961, 150.789, 76.2279, 0.55", "102.561, 159.228, 78.9297, 0.55", "108.901, 167.643, 79.8455, 0.55", "115.694, 175.381, 82.4794, 0.55", "123.36, 182.334, 85.1381, 0.55", "129.782, 190.368, 87.7228, 0.55", "137.202, 197.868, 89.159, 0.55", "144.572, 205.535, 88.8561, 0.55", "151.287, 213.699, 89.6005, 0.55", "157.073, 222.482, 88.7913, 0.55", "162.787, 231.285, 89.8001, 0.55" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "96.7961, 150.789, 76.2279, 0.55", "101.227, 157.902, 78.4296, 0.55", "105.345, 165.442, 79.053, 0.55", "110.548, 172.315, 78.3922, 0.55", "115.233, 179.539, 77.9215, 0.55", "119.185, 187.043, 76.5063, 0.55", "122.148, 194.466, 73.3197, 0.55", "126.352, 200.966, 69.4268, 0.55", "131.312, 207.704, 67.2437, 0.55", "135.022, 214.93, 64.375, 0.55" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "39.161, 181.023, 95.0362, 0.55", "40.2372, 189.539, 98.3235, 0.55", "41.5222, 197.239, 103.275, 0.55", "41.9908, 203.679, 109.98, 0.55", "42.0443, 209.102, 117.617, 0.55", "40.4403, 213.99, 125.453, 0.55", "39.3236, 219.312, 133.065, 0.55", "38.2954, 224.761, 140.59, 0.55", "36.2094, 229.667, 148.292, 0.55" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "39.161, 181.023, 95.0362, 0.55", "39.6257, 188.692, 98.692, 0.55", "39.7525, 195.336, 104.08, 0.55", "39.5974, 201.425, 110.124, 0.55", "38.5647, 207.239, 116.35, 0.55", "36.5632, 212.705, 122.659, 0.55", "33.9245, 217.76, 129.098, 0.55", "31.2332, 223.816, 134.479, 0.55", "26.5301, 229.362, 138.976, 0.55" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "24.5384, 17.8108, -8.23186, 1.11", "24.6297, 18.0109, -9.61753, 1.11", "25.357, 19.4108, -17.7127, 0.55", "25.5164, 19.6894, -19.4174, 0.83", "25.8388, 20.2529, -22.8652, 0.55", "26.2891, 21.0399, -27.6807, 0.55", "26.4158, 21.2613, -29.0352, 0.55", "26.6895, 21.7906, -31.8121, 0.55", "27.3826, 22.9271, -37.8115, 2.22" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "24.5384, 17.8108, -8.23186, 0.83", "27.2539, 16.7195, -8.07852, 0.83", "28.8964, 16.3011, -7.69287, 0.83", "32.8939, 15.2829, -6.75425, 0.83", "37.6698, 14.0664, -5.63286, 0.83", "40.2106, 13.4192, -5.03627, 0.83", "44.6303, 12.2934, -3.9985, 0.83", "47.1593, 11.7731, -2.99835, 0.83" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "9.30392, 26.3556, -14.9434, 0.55", "9.19962, 26.6574, -15.5683, 0.55", "8.71406, 28.0805, -18.333, 0.55", "8.38937, 29.1114, -20.1325, 0.55", "6.93209, 34.4287, -28.7231, 0.83", "6.76774, 35.0526, -29.9074, 0.83", "6.24849, 37.3893, -35.0619, 0.55", "5.99774, 38.6191, -38.1851, 0.83", "5.88441, 39.2559, -40.0024, 0.55", "5.85964, 39.5981, -41.0871, 0.83", "6.61769, 43.9208, -56.3562, 0.55", "7.19857, 45.5671, -62.9066, 1.11", "7.81674, 46.6731, -67.6645, 0.55", "8.05159, 47.0155, -69.2172, 0.83", "9.12669, 48.3613, -75.7822, 0.28", "9.58569, 48.8363, -78.1426, 1.38", "12.3167, 50.9993, -88.0944, 0.55", "13.3094, 51.7915, -91.3051, 0.83", "14.1371, 52.4542, -93.794, 0.28", "15.9888, 53.9598, -98.7971, 0.83", "16.7671, 54.6306, -100.604, 0.28", "17.7418, 55.5271, -102.859, 0.83", "19.2452, 56.527, -104.913, 0.28", "19.2452, 56.527, -104.913, 0.55", "21.6693, 58.3027, -106.797, 0.28", "27.0515, 62.4061, -108.765, 0.83" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "9.30392, 26.3556, -14.9434, 1.11", "9.66197, 26.9515, -14.7607, 1.11", "11.6625, 30.4255, -13.9374, 1.11", "13.2617, 34.1873, -13.5526, 0.83", "14.3493, 37.4013, -13.3937, 0.83", "14.7417, 38.78, -13.3796, 0.83", "15.6076, 42.0112, -13.4244, 0.83", "16.1266, 44.5635, -13.551, 0.83", "16.7465, 49.3895, -13.9337, 0.83", "17.0231, 51.7875, -14.1235, 0.83", "17.5103, 55.0668, -14.3144, 0.83", "18.1241, 58.6652, -14.5102, 0.83", "18.6643, 61.8334, -14.6333, 0.83", "19.0662, 64.0129, -14.6966, 0.83", "19.7043, 66.9229, -14.6112, 0.83", "20.0849, 68.9452, -14.487, 1.11", "20.43, 70.9376, -14.2863, 1.11", "20.8546, 73.3653, -13.9784, 0.55", "21.0814, 74.4218, -13.8535, 0.55", "21.7562, 77.1068, -13.528, 0.55", "22.7711, 80.5054, -13.1493, 0.83", "23.7111, 82.7566, -12.8185, 0.83", "25.2854, 85.3458, -12.4351, 1.11", "26.6186, 86.9303, -12.1546, 0.83", "28.0109, 88.3346, -11.8809, 0.55", "29.8256, 89.8977, -11.5562, 0.83", "32.7017, 92.1696, -10.974, 0.55", "34.5487, 93.7898, -10.4806, 0.55", "36.3404, 95.5776, -9.9677, 0.28", "37.3906, 96.8643, -9.61334, 0.55", "38.1706, 98.0697, -9.34103, 0.55", "39.2852, 100.309, -8.9427, 0.55", "40.2747, 102.897, -8.64146, 0.55", "40.8798, 104.998, -8.3416, 0.28", "41.0706, 105.951, -8.26488, 0.55", "41.4564, 108.015, -8.21589, 0.55", "41.7967, 110.116, -8.21244, 0.55", "42.1197, 111.882, -8.22492, 0.83", "42.7003, 114.581, -8.23243, 0.55", "43.5316, 118.248, -8.17264, 0.55", "44.1391, 120.853, -8.1257, 0.55", "44.6611, 123.264, -8.1076, 0.83", "45.3471, 126.198, -8.13559, 0.83", "45.8859, 128.259, -8.19585, 0.55", "46.1921, 129.307, -8.21906, 0.83", "47.1455, 132.145, -8.22702, 0.83", "47.6504, 133.739, -8.27554, 0.28", "47.9237, 134.595, -8.35742, 0.55", "48.3708, 136.018, -8.58214, 0.28", "49.0168, 137.752, -8.98833, 0.83", "50.2988, 140.753, -9.84287, 0.83", "50.9886, 142.161, -10.3246, 0.28", "51.356, 142.902, -10.5471, 0.28", "51.7163, 143.689, -10.78, 0.83", "52.4424, 145.464, -11.2593, 0.28", "52.8985, 146.694, -11.6312, 0.83", "53.4879, 148.385, -12.0863, 0.55", "54.5534, 151.337, -13.0263, 0.55", "54.9948, 152.568, -13.431, 0.28", "55.5756, 154.282, -13.9612, 0.83", "56.3643, 156.834, -14.7042, 0.28", "57.152, 159.365, -15.4906, 1.11", "58.0573, 162.191, -16.4109, 0.28", "58.2912, 162.908, -16.6747, 0.55", "58.6456, 163.935, -17.0296, 0.28", "58.9061, 164.703, -17.3047, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "42.2954, -57.693, -92.8928, 0.28", "44.5942, -62.475, -93.3471, 0.28", "44.8762, -63.3741, -93.432, 0.55", "45.7185, -67.7641, -94.3225, 0.28", "45.9185, -69.0973, -94.6452, 0.83", "46.4498, -73.4907, -95.8571, 0.28", "46.6239, -75.0897, -96.3215, 0.83", "46.8007, -78.2739, -97.5175, 0.28", "46.8402, -82.2476, -98.9474, 0.55", "46.817, -83.3868, -99.3343, 0.55", "46.8625, -85.4647, -100.106, 0.28", "46.9258, -86.1603, -100.38, 0.55", "47.1266, -87.1228, -100.753, 0.28", "47.5569, -88.3471, -101.227, 0.55", "48.5178, -90.5384, -101.893, 0.28", "48.8278, -91.1857, -102.067, 0.55", "50.0658, -93.3924, -102.632, 0.28", "50.2404, -93.6751, -102.712, 0.55", "51.4201, -95.4218, -103.21, 0.28", "52.0966, -96.3088, -103.452, 0.55", "53.9839, -98.4885, -103.993, 0.28", "54.99, -99.4655, -104.219, 0.55", "57.1764, -101.15, -104.411, 0.28", "58.4189, -101.92, -104.398, 0.55", "59.7214, -102.415, -104.391, 0.55", "61.2053, -102.641, -104.417, 0.28", "62.9532, -102.655, -104.427, 0.55", "65.8549, -102.379, -104.302, 0.28", "67.3099, -102.007, -104.203, 0.55", "71.976, -100.241, -104.053, 0.28", "73.1207, -99.6541, -104.099, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "42.2954, -57.693, -92.8928, 0.28", "48.6703, -55.814, -103.17, 0.28", "49.9307, -55.5101, -105.284, 0.83", "52.862, -54.9246, -110.154, 0.55", "53.5325, -54.8247, -111.24, 0.55", "55.881, -54.6314, -115.079, 0.83", "60.4651, -54.479, -122.719, 0.28", "63.6196, -54.8656, -128.692, 0.83", "64.6223, -55.0747, -130.802, 0.28", "65.4619, -55.315, -132.855, 0.83", "67.9968, -56.2184, -139.694, 0.28", "69.0629, -56.7058, -142.98, 1.11", "73.7114, -59.2254, -158.868, 0.28", "74.2618, -59.5524, -160.838, 0.55", "76.7645, -61.0317, -170.144, 0.28", "76.9317, -61.123, -170.773, 0.55", "79.1692, -62.2605, -178.926, 0.28", "79.543, -62.4307, -180.125, 0.55", "80.5245, -62.8166, -182.666, 0.28", "80.8789, -62.9627, -183.492, 0.55", "81.8158, -63.339, -185.39, 0.28", "82.1034, -63.4508, -185.957, 0.55", "87.2678, -65.4695, -195.69, 0.28", "88.6246, -66.0225, -198.389, 0.83", "91.3456, -67.242, -204.216, 0.28", "92.6333, -67.8899, -207.007, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "7.71835, -40.6767, 1.8218, 0.55", "9.6151, -42.8033, 2.58251, 0.55", "10.7916, -44.0567, 3.09935, 1.11", "12.4228, -45.9438, 3.85527, 0.83", "14.0694, -48.0021, 4.55368, 0.83", "16.1747, -50.7182, 5.60245, 0.83", "17.3633, -52.2358, 6.23821, 0.83", "17.9487, -53.0465, 6.58798, 0.83", "18.9437, -54.5447, 7.25795, 0.83", "20.2147, -56.4595, 8.08157, 0.83", "22.3121, -59.6035, 9.64082, 0.83", "23.6761, -61.7268, 10.7184, 0.83", "25.0594, -63.9618, 11.7433, 0.83", "26.2908, -66.2015, 13.0801, 0.83", "27.639, -68.7637, 14.8644, 0.83", "29.2252, -72.5655, 18.0534, 0.83", "29.6628, -73.9416, 19.3488, 0.83", "30.0729, -76.4261, 22.1767, 0.83", "30.6091, -81.8259, 29.3814, 0.83", "30.7614, -83.5385, 31.8177, 0.83", "30.992, -86.3929, 36.0818, 0.83", "31.2513, -88.59, 39.3041, 0.83", "31.9026, -91.7081, 43.993, 0.83", "32.4115, -93.2776, 46.4385, 0.83", "33.4235, -95.2641, 49.234, 0.83", "34.6175, -97.1853, 52.247, 0.83", "35.3356, -98.0928, 53.6636, 0.83", "36.5387, -99.4682, 55.9537, 0.83", "37.9228, -101.019, 58.4555, 0.55", "38.5793, -101.879, 59.8295, 0.83", "39.987, -104.144, 63.4687, 0.55", "40.5844, -105.396, 65.2654, 0.83", "41.4542, -107.591, 67.9634, 0.55", "41.9217, -108.6, 69.0155, 0.55", "42.6634, -110.322, 70.5347, 0.55", "43.3494, -112.139, 71.9304, 0.55", "44.3598, -114.754, 73.4523, 0.55", "45.5365, -117.454, 74.8617, 0.55", "46.8441, -120.372, 75.9844, 0.55", "50.4515, -127.051, 81.1132, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "7.71835, -40.6767, 1.8218, 2.22", "6.64122, -44.0208, 3.96519, 2.22", "6.02924, -45.9207, 5.18296, 2.22" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "27.3826, 22.9271, -37.8115, 0.55", "27.9008, 24.5376, -41.6279, 0.55", "29.1226, 27.9977, -50.687, 0.28", "29.2615, 28.4054, -51.7514, 1.11", "30.1634, 30.9757, -58.4085, 0.28", "30.4713, 31.9923, -60.9659, 1.11", "30.8001, 33.1645, -63.7615, 0.28", "31.0881, 35.414, -68.9913, 0.83", "31.0905, 35.8901, -70.0891, 0.28", "31.0527, 36.142, -70.6759, 0.55", "30.6603, 37.4543, -73.5431, 0.28", "30.2437, 38.5782, -75.9308, 0.55", "28.621, 42.1422, -83.4212, 0.28", "26.654, 46.1264, -91.6308, 0.55", "26.3789, 46.6512, -92.7852, 0.28", "26.131, 47.0949, -93.8153, 0.83" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "27.3826, 22.9271, -37.8115, 0.55", "25.78, 22.7453, -42.7409, 0.55", "23.8633, 22.5279, -48.6363, 0.55", "23.0111, 22.4313, -51.2577, 0.55", "19.5212, 22.0355, -61.9921, 0.28", "18.3685, 21.9048, -65.5374, 0.55" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "47.1593, 11.7731, -2.99835, 0.55", "48.0859, 10.8032, -6.90362, 0.55", "48.5738, 10.3657, -9.16254, 0.83", "50.7119, 8.64524, -17.7942, 0.55", "51.1371, 8.35564, -19.6013, 0.55", "51.5604, 8.08402, -21.3479, 0.28", "52.1373, 7.74157, -23.493, 0.55", "54.1367, 6.92275, -31.0062, 0.28", "54.6431, 6.73199, -32.7956, 0.83", "56.8837, 5.83759, -39.9254, 0.55", "57.2717, 5.65897, -41.2124, 0.28", "58.1334, 5.30246, -43.7303, 0.28", "60.2176, 4.50062, -49.0364, 0.55", "61.6682, 3.89534, -52.2258, 0.55", "63.0264, 3.4229, -55.0095, 0.55", "65.1473, 2.81691, -59.1817, 0.55", "66.2148, 2.52807, -61.3589, 0.55", "67.9986, 2.06794, -65.0679, 0.28", "68.8573, 1.87864, -66.6069, 0.55", "70.3624, 1.73198, -69.0764, 0.28", "74.2985, 1.70773, -75.3436, 0.83" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "47.1593, 11.7731, -2.99835, 0.55", "49.6595, 12.4578, -1.81713, 0.55", "51.6669, 13.0797, -0.923383, 0.55", "56.1595, 14.2808, 1.06921, 0.55", "58.4335, 14.7658, 2.08968, 0.55", "61.1443, 15.1792, 3.29025, 0.55", "62.8016, 15.439, 4.17596, 0.55", "64.7365, 15.7123, 5.38665, 0.55", "66.5876, 15.8528, 6.66903, 0.55", "67.8258, 15.9089, 7.50106, 0.55", "70.4029, 15.9678, 9.36556, 0.55", "75.0345, 16.1279, 12.8704, 0.55", "76.7059, 16.2221, 14.1556, 0.55", "78.3851, 16.3473, 15.4117, 0.55", "80.3174, 16.5913, 16.8602, 0.55", "83.0058, 17.0851, 18.8394, 0.28", "83.3899, 17.1646, 19.1088, 0.55", "84.5894, 17.4311, 19.852, 0.28", "85.3478, 17.6625, 20.3467, 0.55", "87.8466, 18.361, 22.0028, 0.55", "89.7831, 18.8817, 23.3272, 0.28", "90.5988, 19.1018, 23.832, 0.55", "92.5159, 19.6723, 25.0584, 0.28", "93.4932, 20.0051, 25.7024, 0.55", "96.1428, 20.9284, 27.3269, 0.55", "103.734, 22.9771, 30.5087, 0.55", "111.636, 25.4091, 32.3351, 0.55", "119.241, 27.3127, 35.5834, 0.55", "126.789, 29.7582, 38.5597, 0.55", "133.744, 33.0373, 42.0793, 0.55", "140.294, 37.2069, 45.3413, 0.55", "147.227, 41.2096, 47.9576, 0.55", "154.375, 45.5519, 48.5064, 0.55", "161.143, 50.4041, 48.0873, 0.55", "167.974, 55.0311, 46.8765, 0.55", "175.377, 58.9457, 46.3763, 0.55", "183.35, 61.7182, 46.2678, 0.55", "191.12, 64.972, 46.4673, 0.55" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "58.9061, 164.703, -17.3047, 0.28", "60.5819, 166.849, -16.5465, 0.28", "61.2374, 167.817, -16.301, 0.83", "62.0156, 169.048, -16.1437, 0.83", "62.7602, 170.341, -16.0422, 0.28", "62.8753, 170.539, -16.0364, 0.55", "63.799, 172.249, -15.96, 0.55", "64.2117, 173.117, -16.0107, 1.11", "64.9383, 174.589, -16.1052, 0.55", "65.4986, 175.643, -16.1343, 0.55", "66.6125, 177.694, -16.1078, 0.55", "67.9703, 180.234, -16.0763, 0.55", "69.2674, 182.668, -16.0299, 0.55", "70.6257, 185.3, -16.0289, 1.11", "71.5364, 187.142, -16.0382, 0.28", "71.8386, 187.774, -16.0629, 0.55", "72.5412, 189.486, -16.2335, 0.28", "72.771, 190.161, -16.4621, 0.55", "73.0527, 191.252, -17.0557, 0.28", "73.2144, 192.003, -17.6238, 0.55", "73.4256, 192.715, -18.2817, 0.28", "73.9294, 193.815, -19.2406, 1.11", "76.2622, 196.353, -20.5843, 0.55", "77.148, 196.98, -20.671, 0.55", "77.5592, 197.235, -20.6882, 1.11", "79.9222, 198.601, -20.7619, 0.28", "87.5673, 203.47, -21.9142, 0.83", "89.7969, 205.025, -22.3831, 0.28", "90.672, 205.815, -22.5903, 0.83", "92.6601, 208.114, -23.2935, 0.28", "93.6557, 209.451, -23.6725, 1.11", "95.7139, 212.731, -24.6413, 0.28", "96.3189, 213.775, -25.0852, 1.38", "98.8135, 217.484, -26.4068, 0.28", "99.2, 217.993, -26.5564, 0.55", "100.898, 219.806, -26.9149, 0.28", "101.835, 220.545, -27.0698, 1.11", "104.723, 222.116, -27.4156, 0.28", "105.224, 222.298, -27.5231, 0.55", "106.169, 222.49, -27.8195, 0.28", "107.322, 222.678, -28.2258, 0.83", "109.999, 223.022, -29.2711, 0.28", "110.838, 223.101, -29.5444, 0.55", "112.178, 223.203, -29.8621, 0.28", "112.409, 223.227, -29.9165, 0.55", "113.591, 223.374, -30.2059, 0.28", "113.831, 223.396, -30.264, 0.55", "115.018, 223.355, -30.6113, 0.28", "115.975, 223.272, -30.9197, 0.83" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "58.9061, 164.703, -17.3047, 0.28", "58.8555, 165.632, -19.29, 0.28", "58.7666, 166.085, -20.1932, 0.83", "58.2553, 167.91, -23.6333, 0.28", "57.4198, 170.0, -27.3716, 1.11", "56.1324, 172.608, -31.9115, 0.28", "55.1032, 174.333, -34.7403, 0.83", "53.766, 176.118, -37.5567, 0.28", "53.4164, 176.518, -38.1114, 0.55", "51.865, 178.097, -39.5037, 0.28", "51.2754, 178.702, -39.705, 0.83", "49.2822, 180.606, -39.7573, 0.28", "48.8352, 181.058, -39.7089, 0.55", "47.7988, 182.528, -39.6456, 0.28", "46.2411, 185.378, -39.3952, 0.55", "45.819, 186.845, -39.1906, 0.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "6.02924, -45.9207, 5.18296, 0.55", "5.19754, -47.4704, 4.82774, 0.55", "4.19541, -49.1352, 4.51096, 0.55", "3.11412, -51.1638, 3.97064, 0.55", "2.67889, -52.1187, 3.68123, 0.83", "2.34928, -52.9178, 3.415, 0.28", "2.07646, -53.6668, 3.12906, 1.11", "1.52094, -55.1916, 2.44351, 0.55", "1.01201, -57.1603, 1.51299, 0.55", "0.84567, -58.0764, 1.15564, 0.55", "0.667965, -59.3476, 0.7317, 0.55", "0.462801, -61.5242, 0.194903, 0.55", "0.374253, -62.9349, 0.0315165, 0.55", "0.27058, -64.2611, 0.144756, 0.55", "-0.179226, -66.8181, 0.968199, 0.55", "-0.368857, -67.7829, 1.37799, 0.55", "-0.674483, -69.2766, 2.22908, 0.55", "-0.927186, -70.3411, 3.02983, 0.55", "-1.47911, -72.3021, 4.76395, 0.83", "-1.98264, -73.6183, 6.07334, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "6.02924, -45.9207, 5.18296, 1.11", "7.47061, -48.3854, 5.28485, 1.11", "8.64474, -50.3932, 5.36784, 1.11", "10.7513, -53.9954, 5.51674, 1.38", "13.5992, -58.8653, 5.71805, 1.66", "15.4259, -61.9889, 5.84717, 1.94", "17.649, -65.7903, 6.0043, 1.38" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "26.131, 47.0949, -93.8153, 0.28", "24.9072, 47.7504, -94.3178, 0.28", "23.9671, 48.2539, -94.7038, 0.83" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "26.131, 47.0949, -93.8153, 0.28", "26.6473, 46.9514, -94.958, 0.28", "27.0387, 46.8285, -95.6797, 0.83", "29.7186, 45.9479, -100.015, 0.28", "29.8717, 45.8996, -100.403, 0.55", "30.3595, 45.7422, -101.733, 0.28", "30.3833, 45.7333, -101.814, 0.55", "30.6956, 45.5921, -103.054, 0.28", "30.7462, 45.5695, -103.252, 0.83", "32.8291, 44.6839, -111.161, 0.28", "33.0268, 44.6113, -111.913, 0.83", "34.5307, 44.1605, -117.849, 0.28", "34.6397, 44.1298, -118.292, 0.83", "34.9988, 44.0411, -119.828, 0.28", "35.1053, 44.0146, -120.246, 0.55", "35.8741, 43.843, -122.168, 0.28", "36.2781, 43.7939, -123.147, 0.55" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "74.2985, 1.70773, -75.3436, 0.28", "74.0667, -1.65912, -73.9439, 0.28", "73.9322, -3.6127, -73.1317, 0.28", "73.8653, -4.58448, -72.7277, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "74.2985, 1.70773, -75.3436, 0.28", "75.36, 2.81078, -77.9528, 0.28", "75.6246, 3.17063, -79.8271, 0.55", "75.7995, 3.47391, -82.0556, 0.28", "75.8466, 3.5743, -82.8142, 0.55", "76.042, 3.95327, -85.6219, 0.28", "76.3997, 4.59997, -90.1567, 0.55", "77.515, 6.55229, -104.399, 0.28", "78.2124, 7.83427, -114.29, 0.55", "79.0476, 9.34199, -126.761, 0.28", "79.1685, 9.54449, -128.52, 0.55", "79.884, 10.4987, -137.462, 0.28", "80.1105, 10.7777, -139.931, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-1.98264, -73.6183, 6.07334, 0.55", "-2.63667, -75.5463, 8.11476, 0.55", "-3.71321, -78.3954, 11.1282, 0.83", "-4.64849, -80.7895, 13.664, 0.55", "-4.82629, -81.2671, 14.1301, 0.83", "-6.18245, -84.5331, 17.0679, 0.55", "-7.69648, -88.1978, 19.9992, 0.55", "-8.39968, -90.0534, 21.3222, 0.55", "-9.6064, -93.6947, 23.5384, 0.55", "-10.8574, -97.6812, 25.5108, 0.55", "-12.3177, -101.845, 27.1017, 0.55", "-13.4616, -104.984, 27.7048, 0.55", "-14.285, -107.39, 27.8492, 0.55", "-15.1015, -109.709, 27.8215, 0.55", "-16.0513, -112.2, 27.5432, 0.55", "-17.3504, -115.748, 26.7858, 0.55", "-18.6085, -119.441, 25.8241, 0.55", "-19.8365, -122.945, 24.8897, 0.55", "-20.8696, -125.971, 24.0639, 0.55", "-22.2176, -130.548, 22.8352, 0.55", "-23.1452, -134.882, 21.8107, 0.55", "-23.6279, -138.221, 21.151, 0.55", "-23.8297, -139.709, 20.9409, 0.28", "-23.9885, -140.916, 20.7567, 0.83", "-24.1479, -142.69, 20.5591, 0.55", "-24.515, -145.496, 20.3633, 0.55", "-24.8681, -147.171, 20.3867, 0.28", "-25.6105, -150.149, 20.3959, 0.55", "-26.4047, -152.851, 20.3626, 0.83", "-27.0884, -154.937, 20.32, 0.55", "-27.8194, -156.928, 20.25, 0.55", "-28.7678, -159.207, 20.0804, 0.83", "-29.5537, -160.954, 19.9052, 0.55", "-30.2597, -162.647, 19.8086, 0.83" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-1.98264, -73.6183, 6.07334, 0.83", "1.11871, -77.198, -1.92652, 0.83", "1.74467, -78.0425, -3.43085, 0.28", "2.42995, -79.1151, -4.94176, 0.55", "2.9927, -80.0689, -5.88245, 0.55", "3.82419, -82.1616, -7.29966, 0.55", "4.49014, -86.4767, -8.58502, 0.55", "4.468, -88.1145, -8.62183, 0.55", "4.21951, -90.0894, -8.44978, 0.55", "3.58689, -94.5629, -7.97237, 0.55", "1.9409, -103.416, -6.95713, 0.55", "1.2079, -106.346, -6.52031, 0.55", "-0.302825, -111.706, -5.31437, 0.55", "-1.59747, -116.72, -4.58918, 0.28", "-2.41078, -121.666, -4.59682, 0.55", "-2.19127, -122.999, -5.11158, 0.28", "-1.79034, -123.875, -5.6814, 0.55", "-1.31481, -124.825, -6.30849, 0.55", "-0.335673, -127.273, -7.45558, 0.28", "-0.0650134, -127.921, -7.77654, 0.55", "0.627728, -130.288, -8.71355, 0.55", "1.54858, -133.452, -10.0721, 0.28", "1.61891, -133.755, -10.215, 0.55", "1.97498, -136.025, -11.3074, 0.28", "1.97498, -136.025, -11.3074, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "17.649, -65.7903, 6.0043, 0.83", "18.9201, -67.9705, 7.41065, 0.83", "21.4479, -71.2989, 9.79652, 0.83", "22.2501, -72.1302, 10.5128, 0.83", "24.4915, -74.2356, 12.4249, 1.11", "25.8731, -75.5644, 13.5014, 0.83", "26.5475, -76.2228, 14.0054, 0.83", "28.6201, -78.2052, 15.5839, 0.83", "30.2592, -79.6631, 16.7581, 0.83", "31.1986, -80.502, 17.4441, 0.83", "32.7536, -81.9819, 18.7149, 0.83", "34.2006, -83.7302, 20.2577, 0.83", "35.7587, -86.1666, 22.3457, 0.83", "36.5616, -87.7296, 23.6001, 0.83", "37.4031, -89.8332, 25.5359, 0.83", "37.9475, -91.5728, 27.285, 0.83", "38.7211, -94.4066, 30.2604, 0.83", "39.2554, -96.5203, 32.363, 0.83", "39.568, -97.4681, 33.3886, 0.83", "41.1127, -100.907, 37.4606, 0.83", "41.6246, -101.878, 38.6087, 0.83", "43.276, -104.11, 41.3606, 0.83", "44.4884, -105.451, 43.1063, 0.83", "47.0196, -108.208, 46.7061, 0.83", "48.3252, -109.542, 48.4052, 0.83", "50.1149, -111.244, 50.2482, 0.83", "53.6173, -114.818, 53.6895, 0.83", "55.3309, -116.895, 55.2504, 0.83", "56.515, -118.718, 56.2193, 0.83", "57.4646, -120.389, 56.7485, 0.83", "59.1741, -123.311, 57.2284, 0.83", "60.1258, -124.908, 57.2508, 0.55", "61.3214, -127.026, 56.9126, 0.83", "62.2417, -128.892, 56.7068, 0.83", "63.5875, -131.883, 56.6497, 0.55", "64.6189, -134.83, 56.8004, 0.55", "65.3821, -137.303, 57.0857, 0.55", "66.1466, -140.068, 57.4669, 0.55", "67.6599, -145.655, 58.3715, 0.55", "68.5264, -148.969, 58.9839, 0.55", "69.3041, -152.523, 59.7011, 0.55", "69.6692, -154.309, 60.0911, 0.55", "70.3421, -157.036, 60.6062, 0.55", "71.0401, -159.278, 61.0022, 0.55", "71.5087, -160.46, 61.2561, 0.83", "72.4484, -162.481, 62.0412, 0.83", "73.4285, -164.12, 62.9454, 0.83", "75.2032, -166.723, 64.6794, 0.55", "76.6899, -168.542, 66.0848, 0.83", "79.289, -171.631, 68.4607, 0.55", "80.9276, -173.54, 69.8345, 0.83", "82.1609, -175.031, 70.7548, 0.55", "82.9055, -176.035, 71.2494, 0.55", "83.9448, -177.784, 71.7933, 0.55", "85.0762, -179.829, 72.0933, 0.83", "86.5415, -182.608, 72.254, 0.55", "87.8142, -185.369, 72.4219, 0.83", "88.0289, -185.906, 72.4706, 0.55", "88.5125, -187.334, 72.6362, 0.55", "89.1135, -189.546, 73.1288, 0.55", "89.7178, -192.167, 73.8609, 0.55", "90.0688, -193.925, 74.3729, 0.55", "90.3073, -195.686, 74.8387, 0.83", "90.4575, -197.123, 75.2455, 0.83", "90.7274, -200.919, 76.2391, 1.11", "90.8067, -203.608, 76.8566, 0.55", "90.8645, -205.59, 77.2636, 0.55", "90.9257, -207.629, 77.7028, 0.55", "91.1554, -210.833, 78.4229, 0.55", "91.3808, -212.625, 78.808, 0.55", "91.5735, -213.739, 78.9702, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "17.649, -65.7903, 6.0043, 2.22", "15.9063, -70.1376, 5.98834, 2.22", "14.5265, -74.3151, 5.73097, 1.94", "13.355, -77.8623, 5.51242, 1.94", "11.9891, -81.9978, 5.25763, 1.94", "10.9658, -85.0961, 5.06674, 1.94", "9.00954, -91.0191, 4.70182, 1.66", "6.9604, -96.8433, 4.4313, 1.66" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "23.9671, 48.2539, -94.7038, 0.28", "22.882, 48.735, -92.3754, 0.28", "22.0346, 49.1108, -90.5569, 0.83", "18.9141, 50.4946, -83.8605, 0.28", "17.3688, 51.1798, -80.5444, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "23.9671, 48.2539, -94.7038, 0.28", "23.9572, 51.2774, -108.454, 0.28", "23.9629, 51.3452, -108.736, 0.55", "24.0456, 52.254, -112.493, 0.28", "24.069, 52.5242, -113.564, 0.55", "24.2782, 54.964, -122.605, 0.28", "24.3902, 56.2598, -127.161, 1.11", "24.876, 59.3544, -136.611, 0.83", "25.3082, 61.7913, -143.76, 0.28", "25.4294, 62.4781, -145.793, 0.55", "25.572, 63.3903, -148.465, 0.28", "25.5994, 63.8545, -149.619, 0.83", "25.5729, 64.3332, -150.898, 0.28", "25.6446, 64.8235, -151.818, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-30.2597, -162.647, 19.8086, 0.28", "-32.1556, -163.156, 18.9105, 0.28", "-32.385, -163.185, 18.8053, 0.55", "-33.1642, -163.283, 18.4478, 0.28", "-34.2908, -163.425, 17.931, 0.55", "-35.8273, -163.618, 17.2262, 0.55", "-38.319, -163.932, 16.0832, 0.55", "-39.9296, -164.043, 15.5566, 0.55", "-45.2133, -163.958, 13.2411, 0.55", "-50.04, -162.915, 10.2733, 0.55", "-54.598, -161.408, 7.10607, 0.55", "-59.5335, -160.31, 4.34681, 0.55", "-64.1559, -159.788, 0.936392, 0.55", "-68.7384, -159.173, -2.51106, 0.55", "-72.8041, -157.772, -6.33638, 0.55", "-77.4287, -155.835, -9.12651, 0.55", "-81.5438, -153.228, -12.1087, 0.55", "-85.2719, -150.642, -15.582, 0.55", "-88.8216, -148.166, -19.3228, 0.55", "-92.0271, -145.631, -23.3235, 0.55", "-95.3696, -143.402, -27.4112, 0.55", "-98.3146, -141.693, -32.0444, 0.55", "-102.145, -140.679, -36.2302, 0.55", "-105.909, -138.652, -40.0571, 0.55", "-109.031, -137.299, -44.7022, 0.55", "-112.152, -137.012, -49.5463, 0.55", "-115.272, -136.551, -54.3769, 0.55", "-119.574, -137.016, -58.1873, 0.55", "-124.164, -138.513, -61.3013, 0.55", "-127.631, -140.793, -65.2267, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-30.2597, -162.647, 19.8086, 0.55", "-30.4786, -164.332, 20.2272, 0.55", "-30.784, -166.684, 20.811, 0.55", "-30.9556, -168.005, 21.1391, 0.55", "-31.3794, -171.268, 21.9493, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "91.5735, -213.739, 78.9702, 0.55", "92.9832, -214.712, 79.3796, 0.55", "94.5625, -215.803, 79.8383, 0.55", "95.6959, -216.585, 80.1675, 0.55", "102.811, -221.282, 82.3624, 0.55", "110.767, -224.596, 84.4737, 0.55", "118.696, -228.482, 84.7796, 0.55", "127.036, -230.74, 86.969, 0.55", "135.471, -233.065, 88.6413, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "91.5735, -213.739, 78.9702, 0.55", "88.7612, -214.69, 80.6293, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "6.9604, -96.8433, 4.4313, 1.38", "5.5283, -98.2076, 5.53001, 1.38", "3.35358, -100.299, 7.21874, 1.38", "-1.62592, -105.215, 10.9561, 1.38", "-5.1614, -108.7, 13.2566, 1.38", "-8.23218, -111.613, 14.9459, 1.11", "-11.9278, -115.013, 16.6895, 1.11", "-13.1295, -116.053, 17.1885, 0.83", "-14.6022, -117.264, 17.657, 1.11", "-17.4892, -119.92, 17.966, 0.83", "-19.1138, -121.609, 18.1098, 0.83", "-20.8992, -123.751, 18.5007, 0.83", "-21.8001, -124.983, 18.7975, 0.83", "-22.5932, -126.355, 19.1657, 0.83", "-24.6381, -131.203, 20.2819, 0.83", "-26.5337, -136.027, 21.6328, 1.11", "-28.347, -140.963, 22.5459, 0.83", "-29.2004, -143.687, 22.7515, 0.83", "-30.409, -148.417, 22.4047, 0.83", "-30.8692, -153.37, 20.2087, 0.83", "-30.3192, -160.172, 13.9319, 0.83", "-29.4981, -165.278, 7.77085, 0.83", "-28.8548, -168.314, 3.56849, 0.83", "-28.1666, -171.586, -1.32972, 0.83", "-26.5345, -179.865, -14.3333, 0.83", "-26.1559, -181.462, -17.0397, 0.83", "-25.4519, -183.901, -21.1345, 0.83", "-25.3564, -186.122, -23.7013, 0.83", "-26.4456, -188.759, -24.7292, 0.83", "-29.1044, -193.091, -24.9238, 0.83", "-30.3389, -194.958, -24.8003, 0.83", "-32.9123, -198.798, -24.7877, 0.83", "-34.976, -201.921, -25.2705, 0.83", "-36.271, -203.936, -25.7617, 0.83", "-37.9817, -207.03, -26.7545, 0.83", "-39.8756, -210.976, -28.21, 0.83", "-40.8701, -213.514, -29.0278, 0.83", "-42.2198, -217.387, -30.0962, 0.83", "-43.233, -220.851, -30.9071, 0.83", "-44.3116, -224.988, -31.6946, 0.83", "-44.8778, -227.515, -32.0656, 0.83", "-45.7296, -231.764, -32.5377, 0.83", "-46.3976, -235.737, -32.8036, 0.83", "-46.8219, -238.231, -32.7472, 0.83", "-47.3269, -240.88, -32.6599, 0.83", "-47.6571, -242.493, -32.5365, 0.83", "-48.1435, -245.019, -32.3978, 0.83", "-48.7937, -248.051, -32.286, 0.83", "-49.7877, -253.812, -32.2755, 0.83", "-50.3186, -256.38, -32.2305, 0.83", "-51.0892, -259.83, -32.1497, 0.83", "-51.9899, -263.756, -32.0868, 0.83", "-53.4604, -270.003, -32.1092, 0.83", "-54.28, -273.15, -32.2564, 0.83", "-55.9149, -278.832, -32.6596, 0.83", "-56.5016, -280.807, -32.7176, 0.83", "-57.3257, -283.367, -32.6523, 0.83", "-58.0908, -285.533, -32.4854, 0.83", "-59.0193, -288.246, -32.5427, 0.83", "-60.4623, -292.055, -32.9555, 0.83", "-61.1576, -293.891, -33.3976, 0.83", "-62.3468, -297.113, -34.6345, 0.83", "-62.9616, -299.048, -35.7058, 0.83", "-64.3472, -304.465, -39.4234, 0.83", "-64.8779, -306.685, -40.9726, 0.83", "-65.5727, -309.645, -43.081, 0.83", "-66.6594, -314.214, -46.192, 0.83", "-67.5674, -318.693, -49.2503, 0.83", "-67.9168, -320.859, -50.5099, 0.83", "-68.6193, -325.435, -52.3055, 1.11", "-68.8568, -327.166, -52.9233, 0.28", "-68.8989, -327.559, -53.0103, 0.55", "-69.0498, -331.514, -52.9576, 0.28", "-68.8513, -332.381, -52.7991, 0.83", "-67.6769, -334.595, -51.922, 0.55", "-65.7116, -336.895, -50.6005, 0.55", "-64.4201, -338.168, -49.6169, 0.55", "-62.0506, -340.525, -47.2094, 0.55", "-60.4166, -342.217, -45.1356, 0.55", "-58.2049, -344.486, -42.1349, 0.55", "-56.7507, -345.91, -40.0043, 0.55", "-55.6192, -346.835, -38.2132, 0.55", "-53.7181, -348.667, -34.095, 0.55", "-53.7546, -349.741, -31.5709, 0.55", "-54.4595, -350.159, -30.8797, 0.55", "-56.9805, -350.866, -29.8895, 0.55", "-58.1622, -360.729, -32.3186, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "6.9604, -96.8433, 4.4313, 1.66", "7.70284, -100.57, 3.81013, 1.66", "7.28376, -104.075, 4.39233, 1.66", "6.73947, -107.07, 5.07081, 1.66", "6.21216, -109.398, 5.77087, 1.66", "5.2138, -114.596, 7.35287, 1.66", "4.67539, -118.178, 8.3978, 1.66", "4.11693, -120.964, 9.33416, 1.94", "3.75045, -122.715, 9.90185, 1.94", "3.06545, -126.376, 10.7368, 1.66", "2.85542, -128.793, 10.9263, 1.38", "3.0703, -131.633, 10.5659, 1.38", "3.36729, -133.252, 10.1138, 1.38", "4.10794, -136.539, 8.75505, 1.38", "4.84029, -139.635, 7.21962, 1.38", "5.31677, -142.314, 5.85457, 1.38", "5.57176, -144.644, 4.7581, 1.38", "5.80401, -148.027, 3.62876, 1.38", "5.85894, -150.998, 3.06476, 1.38", "5.70395, -154.164, 2.84017, 1.38", "5.31121, -158.872, 2.87879, 1.38", "4.9336, -161.531, 3.02174, 1.38", "3.95912, -167.037, 3.60514, 1.38", "3.4129, -169.75, 4.13309, 1.38", "3.04966, -171.777, 4.68766, 1.38", "2.43067, -175.727, 5.8702, 1.38" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-31.3794, -171.268, 21.9493, 0.83", "-28.9376, -175.31, 20.9204, 0.83", "-26.9369, -178.621, 20.0773, 0.55", "-25.792, -180.516, 19.5948, 0.55", "-24.4999, -182.655, 19.0503, 0.55", "-23.156, -184.879, 18.484, 0.55", "-22.4179, -186.1, 18.173, 0.83", "-16.4911, -195.558, 16.995, 0.83", "-10.7033, -204.793, 14.3179, 0.83", "-3.036, -212.488, 11.0363, 0.83", "5.19642, -220.04, 8.91556, 0.83", "14.4886, -226.619, 7.7519, 0.83", "24.6449, -231.84, 6.2844, 0.83" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-31.3794, -171.268, 21.9493, 0.55", "-33.0334, -169.864, 20.9591, 0.55", "-33.8374, -169.181, 20.4778, 0.55", "-40.5669, -162.802, 16.6205, 0.55", "-47.1341, -155.481, 15.042, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "88.7612, -214.69, 80.6293, 0.55", "89.5738, -217.755, 79.4907, 0.55", "92.0891, -227.31, 77.6464, 0.55", "93.1534, -237.2, 76.0891, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "88.7612, -214.69, 80.6293, 0.55", "87.893, -213.327, 76.7161, 0.55", "87.3724, -212.51, 74.3691, 0.55", "85.6916, -210.251, 66.2205, 0.55", "84.2796, -206.736, 58.5106, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "2.43067, -175.727, 5.8702, 0.83", "4.5344, -177.508, 5.30961, 0.83", "5.91843, -178.807, 5.11955, 1.11", "7.68173, -180.713, 5.16106, 0.55", "8.76709, -182.095, 5.29372, 0.83", "11.0544, -185.135, 5.5639, 0.83", "13.1586, -188.536, 6.31363, 0.83", "14.547, -191.649, 7.31352, 0.83", "15.6287, -194.636, 8.43636, 0.83", "16.1645, -196.618, 9.37082, 0.83", "16.5962, -198.809, 10.6715, 0.83", "16.9553, -204.813, 15.2158, 0.83", "16.8626, -205.595, 15.891, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "2.43067, -175.727, 5.8702, 1.38", "2.83971, -179.048, 5.7355, 1.38", "2.8405, -180.999, 5.87351, 1.38", "2.68756, -182.817, 6.10796, 1.38", "2.17653, -186.741, 6.7331, 1.38", "1.32363, -190.865, 7.45164, 1.38", "1.18797, -191.547, 7.54023, 1.38", "0.147688, -196.694, 7.96844, 1.38", "-0.208432, -198.212, 7.95852, 1.38", "-0.935202, -201.007, 7.65819, 1.38", "-1.81646, -205.055, 6.891, 1.38", "-2.50957, -209.606, 5.56979, 1.11", "-2.65241, -211.62, 4.86799, 1.11", "-2.65654, -216.3, 3.16974, 1.11", "-2.64567, -218.195, 2.6813, 1.11", "-2.55594, -221.56, 2.05572, 1.11", "-2.49664, -224.461, 1.76157, 1.11", "-2.67437, -227.424, 1.78294, 1.11", "-2.97036, -231.536, 2.17819, 1.11", "-3.34929, -235.705, 3.02927, 1.11", "-3.74, -238.043, 3.58725, 0.83", "-4.41026, -240.408, 4.15452, 0.83", "-5.12476, -242.576, 4.71013, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "16.8626, -205.595, 15.891, 0.83", "17.4555, -206.3, 13.7557, 0.83", "18.9786, -208.128, 8.67803, 0.83", "20.4032, -209.825, 4.26193, 1.11", "21.7497, -211.368, 0.258564, 0.83", "22.8699, -212.613, -2.86263, 0.55", "24.5993, -214.583, -7.76483, 0.28", "25.1754, -215.186, -9.25455, 0.83", "25.4877, -215.526, -10.0425, 0.83", "26.9378, -217.085, -13.643, 0.83", "27.4764, -217.711, -15.005, 0.28", "28.1608, -218.597, -16.9979, 0.55", "28.4635, -218.982, -17.9025, 0.83", "29.8333, -220.626, -22.397, 0.28", "30.2482, -221.155, -23.9014, 0.28", "30.6453, -221.696, -25.3612, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "16.8626, -205.595, 15.891, 0.55", "19.4654, -208.31, 16.1023, 0.55", "21.3656, -210.339, 16.5, 0.55", "23.493, -212.88, 17.1436, 0.55", "24.5585, -214.251, 17.5884, 0.55", "25.8669, -216.226, 18.2188, 0.55", "26.8962, -217.855, 18.7328, 0.55", "28.5601, -220.497, 19.5065, 0.55", "29.8279, -222.676, 20.1442, 0.55", "30.7198, -224.52, 20.6921, 0.55", "32.056, -227.682, 21.5497, 0.55", "32.7419, -229.465, 22.0867, 0.55", "33.146, -230.457, 22.4118, 0.55", "33.9117, -232.367, 22.964, 0.55", "34.8382, -234.364, 23.184, 0.55", "36.278, -236.938, 22.3606, 0.55", "37.716, -239.065, 20.5439, 0.55", "38.2245, -239.746, 19.821, 0.55", "39.1977, -240.95, 18.4527, 0.55", "44.3877, -246.485, 11.4663, 0.55", "45.8729, -247.938, 9.55427, 0.55", "47.0226, -249.031, 8.12657, 0.55", "48.7309, -250.713, 6.22768, 0.55", "50.219, -252.161, 5.21445, 0.55", "51.0583, -253.017, 5.06285, 0.55", "52.2687, -254.468, 5.36286, 0.55", "53.194, -255.691, 5.73064, 0.55", "54.1506, -257.137, 6.15725, 0.28", "55.4016, -259.43, 6.75779, 0.55", "56.1911, -260.97, 7.19266, 0.55", "57.156, -263.065, 7.8003, 0.55", "58.2329, -265.698, 8.60006, 0.55", "58.7822, -267.32, 9.08743, 0.55", "59.0635, -268.441, 9.39403, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-5.12476, -242.576, 4.71013, 0.83", "-5.22906, -244.435, 3.91871, 0.83", "-5.57605, -246.741, 3.03455, 0.83", "-5.91445, -248.998, 2.32018, 0.83", "-6.68052, -254.692, 0.749786, 0.83", "-7.13448, -258.848, -0.269533, 0.83", "-7.44194, -262.034, -1.02084, 0.83", "-7.78354, -266.142, -1.93215, 0.83", "-7.92071, -269.16, -2.53641, 1.11", "-7.95745, -270.823, -2.83642, 0.83", "-7.88887, -272.619, -3.09389, 0.83", "-7.20103, -277.351, -3.95291, 0.83", "-6.50562, -280.651, -4.60006, 0.83", "-5.92179, -283.133, -5.14231, 0.83", "-5.40987, -285.403, -5.79604, 0.83", "-4.71445, -288.842, -6.91838, 0.83", "-3.85384, -293.084, -8.42078, 0.83", "-3.61155, -294.234, -8.83681, 0.83", "-3.08636, -297.493, -10.0606, 0.83", "-2.82384, -301.484, -10.7689, 0.83", "-2.96499, -304.965, -10.9334, 0.83", "-3.17756, -307.038, -11.0226, 0.83", "-3.66801, -310.132, -11.0185, 0.83", "-4.02927, -312.476, -10.8554, 0.83", "-5.69924, -323.928, -8.77829, 0.83", "-6.7002, -328.388, -7.30859, 0.83", "-8.22891, -333.851, -4.81175, 0.83" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-5.12476, -242.576, 4.71013, 0.83", "-6.7372, -245.281, 6.75614, 0.83", "-7.70511, -246.904, 7.9843, 0.83", "-8.61994, -248.439, 9.1451, 0.83", "-11.8914, -253.926, 13.2961, 0.83", "-12.6711, -255.234, 14.2856, 0.83", "-13.8512, -257.213, 15.783, 0.83" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "59.0635, -268.441, 9.39403, 0.55", "60.8722, -266.702, 11.0908, 0.55", "62.2252, -265.156, 12.5367, 0.55", "64.3416, -262.152, 15.2932, 0.55", "65.0821, -261.101, 16.2577, 0.55", "66.1292, -259.615, 17.6215, 0.55", "66.6394, -258.891, 18.286, 0.83", "67.2903, -257.661, 19.2221, 0.55", "67.6679, -256.398, 20.2668, 0.55", "70.5569, -250.447, 24.7384, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "59.0635, -268.441, 9.39403, 0.55", "59.9547, -270.837, 10.0783, 0.55", "60.3327, -271.854, 10.3685, 0.55", "60.9806, -273.596, 10.8659, 0.55", "61.1967, -274.177, 11.0318, 0.28", "61.4251, -274.791, 11.2071, 0.55", "64.8499, -282.13, 12.2432, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-8.22891, -333.851, -4.81175, 0.83", "-7.26113, -336.586, -4.52419, 0.83", "-6.27173, -339.381, -4.23021, 0.83", "-4.74742, -343.687, -3.77729, 0.83" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-8.22891, -333.851, -4.81175, 0.55", "-6.81247, -335.093, -4.07917, 0.55", "-5.91851, -335.876, -3.61681, 0.55", "-3.7923, -337.739, -2.51715, 0.55", "2.33979, -344.157, 2.74907, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-13.8512, -257.213, 15.783, 0.55", "-14.3877, -258.851, 16.9311, 0.55", "-14.7976, -259.719, 17.6491, 0.55", "-15.5967, -261.295, 18.6878, 0.55", "-16.333, -262.748, 19.6449, 0.55", "-17.344, -264.742, 20.959, 0.55", "-18.4484, -266.92, 22.3944, 0.55", "-19.9499, -269.888, 24.5419, 0.55", "-21.5311, -272.62, 26.8381, 0.55", "-22.6598, -277.717, 30.5045, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-13.8512, -257.213, 15.783, 0.83", "-14.0545, -264.521, 18.3905, 0.83", "-14.3196, -267.824, 19.503, 0.83", "-14.9784, -271.593, 21.3719, 0.83", "-15.5748, -275.407, 23.6888, 0.83", "-15.9789, -279.066, 25.8581, 0.83", "-16.3358, -283.176, 28.1983, 0.55", "-16.5416, -285.109, 29.143, 0.83", "-17.7043, -293.123, 32.6438, 0.83", "-18.1646, -297.513, 34.311, 0.55", "-18.2226, -301.833, 35.6508, 0.83", "-18.1491, -303.554, 36.1641, 0.83", "-17.9913, -306.987, 36.8963, 0.83", "-17.956, -312.361, 37.8044, 0.55", "-17.9503, -315.76, 38.0455, 0.55", "-18.1503, -318.639, 38.321, 0.55", "-18.9766, -326.431, 39.8863, 0.55", "-19.2025, -328.878, 40.557, 0.55", "-19.4053, -331.415, 41.6027, 0.55", "-22.1339, -343.613, 43.668, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-4.74742, -343.687, -3.77729, 0.83", "-3.86937, -349.805, -1.22871, 0.83", "-3.55674, -352.541, -0.304663, 0.83", "-2.63143, -359.109, 1.34458, 0.83", "-2.35197, -361.494, 1.85529, 0.83", "-2.08811, -364.153, 2.32816, 0.55", "-1.75812, -366.789, 2.77563, 0.83", "-1.50003, -368.746, 2.94038, 0.83", "-0.923638, -372.751, 3.14221, 0.83", "-0.479712, -375.778, 2.93621, 1.11", "0.0287783, -378.706, 2.68779, 1.11", "1.20608, -383.866, 2.28213, 0.55", "1.67082, -385.55, 2.11586, 0.55", "2.33585, -387.908, 1.82719, 1.11", "3.59111, -392.397, 0.983438, 0.83", "4.69456, -395.972, 0.0690472, 0.83", "5.3137, -398.393, -0.70277, 0.55", "5.98627, -401.579, -2.0104, 0.83", "6.60268, -404.313, -3.2277, 0.83", "7.26988, -407.441, -4.64839, 0.55", "7.79693, -410.062, -5.90314, 0.83", "8.44689, -414.116, -8.07803, 1.11", "8.9905, -417.394, -10.0342, 0.83", "9.34091, -419.222, -11.1611, 1.11", "9.86884, -421.278, -12.4513, 0.83", "10.5278, -423.931, -13.9992, 1.38" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-4.74742, -343.687, -3.77729, 0.55", "-2.43554, -345.228, -2.60582, 0.55", "3.54086, -349.495, 0.488894, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "10.5278, -423.931, -13.9992, 0.55", "9.64958, -424.577, -14.2637, 0.55", "9.13401, -424.956, -14.419, 0.55", "8.69534, -425.278, -14.5511, 0.83", "5.14981, -429.17, -16.3093, 0.83" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "10.5278, -423.931, -13.9992, 0.28", "10.8284, -425.504, -14.1187, 0.28", "10.9524, -426.454, -14.3565, 0.55", "11.2151, -428.231, -14.8279, 0.28", "11.2885, -428.724, -14.9782, 0.83", "11.676, -430.733, -15.4345, 0.28", "11.7948, -431.333, -15.5467, 0.83", "12.1997, -433.901, -15.5385, 0.55", "12.4063, -435.174, -15.3851, 0.55", "12.7226, -437.119, -14.9665, 2.49", "13.0509, -439.806, -14.0962, 0.55", "13.1548, -440.601, -13.7733, 0.55", "13.6214, -444.525, -12.002, 1.94", "13.8369, -445.976, -11.3096, 1.11", "14.1746, -448.048, -10.3912, 1.11", "14.6625, -451.027, -9.03238, 0.55", "15.0085, -453.197, -8.1614, 0.55", "15.3485, -454.93, -7.57126, 0.55", "15.9018, -457.175, -7.14355, 0.55", "16.1204, -458.062, -6.96698, 0.55", "18.0752, -464.931, -4.7895, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_67", "dend_60", "dend_59", "dend_58", "dend_39", "dend_0", "dend_71", "dend_68", "dend_64", "dend_61", "dend_45", "dend_40", "dend_36", "dend_1", "dend_70", "dend_69", "dend_66", "dend_65", "dend_63", "dend_62", "dend_51", "dend_46", "dend_44", "dend_41", "dend_38", "dend_37", "dend_35", "dend_2", "dend_53", "dend_52", "dend_48", "dend_47", "dend_43", "dend_42", "dend_28", "dend_3", "dend_55", "dend_54", "dend_50", "dend_49", "dend_30", "dend_29", "dend_23", "dend_4", "dend_57", "dend_56", "dend_34", "dend_31", "dend_27", "dend_24", "dend_22", "dend_5", "dend_33", "dend_32", "dend_26", "dend_25", "dend_17", "dend_6", "dend_21", "dend_18", "dend_10", "dend_7", "dend_20", "dend_19", "dend_12", "dend_11", "dend_9", "dend_8", "dend_14", "dend_13", "dend_16", "dend_15" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_67", "dend_60", "dend_59", "dend_58", "dend_39", "dend_0", "dend_71", "dend_68", "dend_64", "dend_61", "dend_45", "dend_40", "dend_36", "dend_1", "dend_70", "dend_69", "dend_66", "dend_65", "dend_63", "dend_62", "dend_51", "dend_46", "dend_44", "dend_41", "dend_38", "dend_37", "dend_35", "dend_2", "dend_53", "dend_52", "dend_48", "dend_47", "dend_43", "dend_42", "dend_28", "dend_3", "dend_55", "dend_54", "dend_50", "dend_49", "dend_30", "dend_29", "dend_23", "dend_4", "dend_57", "dend_56", "dend_34", "dend_31", "dend_27", "dend_24", "dend_22", "dend_5", "dend_33", "dend_32", "dend_26", "dend_25", "dend_17", "dend_6", "dend_21", "dend_18", "dend_10", "dend_7", "dend_20", "dend_19", "dend_12", "dend_11", "dend_9", "dend_8", "dend_14", "dend_13", "dend_16", "dend_15" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_67", "dend_60", "dend_59", "dend_58", "dend_39", "dend_0", "axon_0", "dend_71", "dend_68", "dend_64", "dend_61", "dend_45", "dend_40", "dend_36", "dend_1", "axon_1", "dend_70", "dend_69", "dend_66", "dend_65", "dend_63", "dend_62", "dend_51", "dend_46", "dend_44", "dend_41", "dend_38", "dend_37", "dend_35", "dend_2", "dend_53", "dend_52", "dend_48", "dend_47", "dend_43", "dend_42", "dend_28", "dend_3", "dend_55", "dend_54", "dend_50", "dend_49", "dend_30", "dend_29", "dend_23", "dend_4", "dend_57", "dend_56", "dend_34", "dend_31", "dend_27", "dend_24", "dend_22", "dend_5", "dend_33", "dend_32", "dend_26", "dend_25", "dend_17", "dend_6", "dend_21", "dend_18", "dend_10", "dend_7", "dend_20", "dend_19", "dend_12", "dend_11", "dend_9", "dend_8", "dend_14", "dend_13", "dend_16", "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_45", "dend_45", "dend_40", "dend_40", "dend_40", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_1", "dend_1", "axon_1", "axon_1", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_2", "dend_2", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L4_LBC_db543bcdea_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_67, id: dend_67, parent: soma_0
create dend_67
public dend_67
// Section: dend_60, id: dend_60, parent: soma_0
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: soma_0
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: soma_0
create dend_58
public dend_58
// Section: dend_39, id: dend_39, parent: soma_0
create dend_39
public dend_39
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_71, id: dend_71, parent: dend_67
create dend_71
public dend_71
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_64, id: dend_64, parent: dend_60
create dend_64
public dend_64
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_45, id: dend_45, parent: dend_39
create dend_45
public dend_45
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_36, id: dend_36, parent: dend_0
create dend_36
public dend_36
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_70, id: dend_70, parent: dend_68
create dend_70
public dend_70
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_63, id: dend_63, parent: dend_61
create dend_63
public dend_63
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_51, id: dend_51, parent: dend_45
create dend_51
public dend_51
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_44, id: dend_44, parent: dend_40
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_35, id: dend_35, parent: dend_1
create dend_35
public dend_35
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_28, id: dend_28, parent: dend_2
create dend_28
public dend_28
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_23, id: dend_23, parent: dend_3
create dend_23
public dend_23
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_27, id: dend_27, parent: dend_23
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_4
create dend_22
public dend_22
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_17, id: dend_17, parent: dend_5
create dend_17
public dend_17
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_67, dend_60, dend_59, dend_58, dend_39, dend_0, dend_71, dend_68, dend_64, dend_61, dend_45, dend_40, dend_36, dend_1, dend_70, dend_69, dend_66, dend_65, dend_63, dend_62, dend_51, dend_46, dend_44, dend_41, dend_38, dend_37, dend_35, dend_2, dend_53, dend_52, dend_48, dend_47, dend_43, dend_42, dend_28, dend_3, dend_55, dend_54, dend_50, dend_49, dend_30, dend_29, dend_23, dend_4, dend_57, dend_56, dend_34, dend_31, dend_27, dend_24, dend_22, dend_5, dend_33, dend_32, dend_26, dend_25, dend_17, dend_6, dend_21, dend_18, dend_10, dend_7, dend_20, dend_19, dend_12, dend_11, dend_9, dend_8, dend_14, dend_13, dend_16, dend_15]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_67, dend_60, dend_59, dend_58, dend_39, dend_0, dend_71, dend_68, dend_64, dend_61, dend_45, dend_40, dend_36, dend_1, dend_70, dend_69, dend_66, dend_65, dend_63, dend_62, dend_51, dend_46, dend_44, dend_41, dend_38, dend_37, dend_35, dend_2, dend_53, dend_52, dend_48, dend_47, dend_43, dend_42, dend_28, dend_3, dend_55, dend_54, dend_50, dend_49, dend_30, dend_29, dend_23, dend_4, dend_57, dend_56, dend_34, dend_31, dend_27, dend_24, dend_22, dend_5, dend_33, dend_32, dend_26, dend_25, dend_17, dend_6, dend_21, dend_18, dend_10, dend_7, dend_20, dend_19, dend_12, dend_11, dend_9, dend_8, dend_14, dend_13, dend_16, dend_15]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_67, dend_60, dend_59, dend_58, dend_39, dend_0, axon_0, dend_71, dend_68, dend_64, dend_61, dend_45, dend_40, dend_36, dend_1, axon_1, dend_70, dend_69, dend_66, dend_65, dend_63, dend_62, dend_51, dend_46, dend_44, dend_41, dend_38, dend_37, dend_35, dend_2, dend_53, dend_52, dend_48, dend_47, dend_43, dend_42, dend_28, dend_3, dend_55, dend_54, dend_50, dend_49, dend_30, dend_29, dend_23, dend_4, dend_57, dend_56, dend_34, dend_31, dend_27, dend_24, dend_22, dend_5, dend_33, dend_32, dend_26, dend_25, dend_17, dend_6, dend_21, dend_18, dend_10, dend_7, dend_20, dend_19, dend_12, dend_11, dend_9, dend_8, dend_14, dend_13, dend_16, dend_15]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_74
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_39, dend_39, dend_39, dend_39, dend_39, dend_0, dend_0, dend_0, axon_0, axon_0, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_45, dend_45, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_1, dend_1, axon_1, axon_1, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_2, dend_2, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_67(0), soma_0(0.45000043951554164)
    connect dend_60(0), soma_0(0.45000043951554164)
    connect dend_59(0), soma_0(0.45000043951554164)
    connect dend_58(0), soma_0(0.45000043951554164)
    connect dend_39(0), soma_0(0.45000043951554164)
    connect dend_0(0), soma_0(0.45000043951554164)
    connect axon_0(0), soma_0(1.0)
    connect dend_71(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_64(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_45(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_36(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_70(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_63(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_51(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_44(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_35(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_28(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_23(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_27(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_17(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.962373, -11.5703, -0.0721056, 4.19097 ) }
    soma_0 { pt3dadd( -0.880095, -10.4367, -0.0644606, 4.93029 ) }
    soma_0 { pt3dadd( -0.797817, -9.30301, -0.0568155, 5.93294 ) }
    soma_0 { pt3dadd( -0.71554, -8.16936, -0.0491704, 6.09828 ) }
    soma_0 { pt3dadd( -0.633262, -7.0357, -0.0415253, 6.15277 ) }
    soma_0 { pt3dadd( -0.550984, -5.90205, -0.0338803, 6.20727 ) }
    soma_0 { pt3dadd( -0.468706, -4.7684, -0.0262352, 6.35712 ) }
    soma_0 { pt3dadd( -0.386429, -3.63474, -0.0185901, 6.90128 ) }
    soma_0 { pt3dadd( -0.304151, -2.50109, -0.010945, 7.43527 ) }
    soma_0 { pt3dadd( -0.221873, -1.36744, -0.00329998, 7.86212 ) }
    soma_0 { pt3dadd( -0.139595, -0.233784, 0.0043451, 8.28482 ) }
    soma_0 { pt3dadd( -0.0573177, 0.899869, 0.0119902, 8.67067 ) }
    soma_0 { pt3dadd( 0.02496, 2.03352, 0.0196352, 9.05218 ) }
    soma_0 { pt3dadd( 0.107238, 3.16718, 0.0272803, 9.3293 ) }
    soma_0 { pt3dadd( 0.189516, 4.30083, 0.0349254, 9.48916 ) }
    soma_0 { pt3dadd( 0.271793, 5.43448, 0.0425705, 9.54333 ) }
    soma_0 { pt3dadd( 0.354071, 6.56813, 0.0502155, 9.56479 ) }
    soma_0 { pt3dadd( 0.436349, 7.70179, 0.0578606, 9.72248 ) }
    soma_0 { pt3dadd( 0.518627, 8.83544, 0.0655057, 9.81837 ) }
    soma_0 { pt3dadd( 0.600904, 9.96909, 0.0731507, 5.41989 ) }
    soma_0 { pt3dadd( 0.683182, 11.1027, 0.0807958, 3.18974 ) }
    // Section: dend_67, id: dend_67, parent: soma_0 (entry count 21/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 1.08965, 9.14129, 3.5126, 0.83 ) }
    dend_67 { pt3dadd( 1.30645, 10.6517, 2.92281, 0.83 ) }
    dend_67 { pt3dadd( 1.4749, 13.4033, 1.78178, 0.83 ) }
    dend_67 { pt3dadd( 1.56611, 16.4433, 0.814236, 1.11 ) }
    dend_67 { pt3dadd( 1.63397, 20.8982, -0.216866, 0.83 ) }
    dend_67 { pt3dadd( 1.66306, 22.8534, -0.429307, 0.83 ) }
    dend_67 { pt3dadd( 1.78233, 26.6644, -0.443035, 0.83 ) }
    dend_67 { pt3dadd( 1.83231, 29.2157, -0.210466, 0.55 ) }
    dend_67 { pt3dadd( 1.67851, 33.135, 0.60373, 0.83 ) }
    dend_67 { pt3dadd( 1.4985, 35.4638, 1.31882, 0.55 ) }
    dend_67 { pt3dadd( 1.24438, 39.3154, 2.84625, 0.55 ) }
    dend_67 { pt3dadd( 1.18676, 42.887, 4.40385, 0.55 ) }
    dend_67 { pt3dadd( 1.26153, 45.4151, 5.4924, 0.55 ) }
    dend_67 { pt3dadd( 1.28996, 48.0853, 6.3567, 0.55 ) }
    dend_67 { pt3dadd( 1.28207, 49.6087, 6.59184, 0.55 ) }
    dend_67 { pt3dadd( 1.24446, 51.2277, 6.5685, 0.55 ) }
    dend_67 { pt3dadd( 1.19916, 53.0641, 6.33533, 0.55 ) }
    dend_67 { pt3dadd( 1.1407, 57.6341, 5.52629, 0.55 ) }
    dend_67 { pt3dadd( 1.19416, 61.3035, 4.78644, 0.55 ) }
    dend_67 { pt3dadd( 1.3094, 65.3072, 3.83603, 0.55 ) }
    dend_67 { pt3dadd( 1.35116, 68.6443, 3.00414, 0.83 ) }
    dend_67 { pt3dadd( 1.29415, 71.3138, 2.30236, 0.83 ) }
    dend_67 { pt3dadd( 1.22345, 72.8369, 1.87787, 0.55 ) }
    dend_67 { pt3dadd( 1.21725, 72.9646, 1.84812, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: soma_0 (entry count 45/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 2.43965, 6.31029, 16.3526, 1.11 ) }
    dend_60 { pt3dadd( 3.27334, 7.64393, 16.5116, 0.83 ) }
    dend_60 { pt3dadd( 5.65913, 11.4123, 16.4431, 1.38 ) }
    dend_60 { pt3dadd( 7.59922, 14.5009, 16.5875, 1.11 ) }
    dend_60 { pt3dadd( 9.02137, 16.7341, 17.6833, 1.11 ) }
    dend_60 { pt3dadd( 10.0803, 18.5235, 18.9354, 1.11 ) }
    dend_60 { pt3dadd( 12.0315, 21.8209, 21.2425, 1.11 ) }
    dend_60 { pt3dadd( 13.0006, 23.5281, 22.6734, 0.83 ) }
    dend_60 { pt3dadd( 14.923, 27.0071, 26.5183, 1.66 ) }
    dend_60 { pt3dadd( 19.0058, 34.0026, 36.4681, 0.83 ) }
    dend_60 { pt3dadd( 19.6982, 35.2274, 38.7386, 0.83 ) }
    // Section: dend_59, id: dend_59, parent: soma_0 (entry count 56/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -2.07035, 8.59979, -2.0074, 0.83 ) }
    dend_59 { pt3dadd( -2.79482, 9.87569, -3.00785, 0.83 ) }
    dend_59 { pt3dadd( -4.06061, 12.1692, -4.55448, 0.55 ) }
    dend_59 { pt3dadd( -6.02803, 15.9643, -6.93736, 0.83 ) }
    dend_59 { pt3dadd( -7.20265, 18.1104, -8.31413, 0.55 ) }
    dend_59 { pt3dadd( -8.19715, 19.8255, -9.79011, 0.55 ) }
    dend_59 { pt3dadd( -9.52642, 22.1157, -12.0428, 0.83 ) }
    dend_59 { pt3dadd( -10.6336, 23.9893, -14.0461, 0.55 ) }
    dend_59 { pt3dadd( -11.5433, 25.5356, -15.6366, 0.83 ) }
    dend_59 { pt3dadd( -12.8323, 27.922, -17.7849, 0.83 ) }
    dend_59 { pt3dadd( -15.9906, 33.4093, -22.6056, 0.83 ) }
    dend_59 { pt3dadd( -17.3595, 35.6222, -24.534, 0.55 ) }
    dend_59 { pt3dadd( -18.2406, 37.0938, -25.6763, 0.83 ) }
    dend_59 { pt3dadd( -19.9158, 39.7604, -27.7535, 0.55 ) }
    dend_59 { pt3dadd( -21.0271, 41.4454, -28.9166, 0.55 ) }
    dend_59 { pt3dadd( -22.5084, 43.7665, -30.2278, 0.55 ) }
    dend_59 { pt3dadd( -24.1482, 46.5642, -31.4981, 0.55 ) }
    dend_59 { pt3dadd( -25.4734, 49.0144, -32.7629, 0.55 ) }
    dend_59 { pt3dadd( -26.6574, 51.3214, -34.0872, 0.83 ) }
    dend_59 { pt3dadd( -27.7733, 53.9519, -36.0136, 0.55 ) }
    dend_59 { pt3dadd( -28.4271, 55.8653, -37.5216, 0.55 ) }
    dend_59 { pt3dadd( -29.3526, 59.2442, -40.2429, 0.55 ) }
    dend_59 { pt3dadd( -30.0778, 62.0937, -42.5412, 0.83 ) }
    dend_59 { pt3dadd( -30.5719, 63.9546, -44.2755, 0.83 ) }
    dend_59 { pt3dadd( -31.9497, 69.1702, -49.435, 0.55 ) }
    dend_59 { pt3dadd( -32.2296, 70.1808, -50.6091, 0.55 ) }
    dend_59 { pt3dadd( -32.3607, 70.5451, -51.0981, 0.55 ) }
    dend_59 { pt3dadd( -32.9218, 71.7935, -53.0285, 1.11 ) }
    dend_59 { pt3dadd( -34.3904, 74.8803, -57.864, 0.55 ) }
    dend_59 { pt3dadd( -34.6987, 75.4674, -58.7733, 0.55 ) }
    dend_59 { pt3dadd( -36.3382, 78.006, -62.4845, 0.83 ) }
    dend_59 { pt3dadd( -36.6581, 78.5061, -63.2684, 0.83 ) }
    dend_59 { pt3dadd( -37.6522, 80.5457, -66.4821, 0.83 ) }
    dend_59 { pt3dadd( -38.106, 81.7761, -68.3944, 0.28 ) }
    dend_59 { pt3dadd( -38.1819, 82.1231, -68.9092, 0.55 ) }
    dend_59 { pt3dadd( -38.4707, 84.3606, -72.1503, 0.28 ) }
    dend_59 { pt3dadd( -38.6096, 86.1355, -74.4345, 0.83 ) }
    dend_59 { pt3dadd( -38.7343, 90.6917, -79.6615, 0.28 ) }
    dend_59 { pt3dadd( -38.7286, 91.1528, -80.1512, 0.83 ) }
    dend_59 { pt3dadd( -38.5217, 96.1214, -85.1636, 0.28 ) }
    dend_59 { pt3dadd( -38.4648, 97.1297, -86.1046, 0.83 ) }
    dend_59 { pt3dadd( -38.3211, 100.037, -88.3988, 0.55 ) }
    dend_59 { pt3dadd( -38.2541, 102.663, -90.1702, 0.83 ) }
    dend_59 { pt3dadd( -38.2774, 106.291, -92.3351, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_59 { pt3dadd( -38.2906, 106.853, -92.6609, 1.11 ) }
    dend_59 { pt3dadd( -38.5604, 112.085, -95.6464, 0.28 ) }
    dend_59 { pt3dadd( -38.721, 113.952, -96.9179, 0.55 ) }
    dend_59 { pt3dadd( -38.7997, 114.735, -97.4815, 0.55 ) }
    dend_59 { pt3dadd( -39.2123, 118.101, -100.287, 0.28 ) }
    dend_59 { pt3dadd( -39.2721, 118.653, -100.729, 0.55 ) }
    dend_59 { pt3dadd( -39.4473, 120.535, -102.234, 0.28 ) }
    dend_59 { pt3dadd( -39.5675, 122.364, -103.638, 0.83 ) }
    dend_59 { pt3dadd( -39.6586, 124.704, -105.514, 0.28 ) }
    dend_59 { pt3dadd( -39.87, 129.69, -109.595, 1.11 ) }
    dend_59 { pt3dadd( -39.9297, 131.718, -111.153, 0.28 ) }
    dend_59 { pt3dadd( -39.9365, 132.615, -111.783, 0.55 ) }
    dend_59 { pt3dadd( -39.9246, 134.284, -112.8, 0.28 ) }
    dend_59 { pt3dadd( -39.9342, 134.875, -113.132, 0.55 ) }
    dend_59 { pt3dadd( -40.064, 137.775, -114.606, 0.28 ) }
    dend_59 { pt3dadd( -40.2612, 139.315, -115.369, 1.38 ) }
    dend_59 { pt3dadd( -40.9145, 142.984, -117.532, 0.28 ) }
    dend_59 { pt3dadd( -41.1382, 144.019, -118.198, 0.55 ) }
    dend_59 { pt3dadd( -41.7601, 146.553, -119.872, 0.28 ) }
    dend_59 { pt3dadd( -42.2255, 148.322, -121.036, 1.38 ) }
    dend_59 { pt3dadd( -44.5371, 156.95, -126.675, 0.28 ) }
    dend_59 { pt3dadd( -44.9235, 158.388, -127.635, 0.55 ) }
    dend_59 { pt3dadd( -45.933, 162.525, -130.188, 0.28 ) }
    dend_59 { pt3dadd( -46.1124, 163.344, -130.656, 0.55 ) }
    dend_59 { pt3dadd( -46.4235, 165.002, -131.351, 0.55 ) }
    dend_59 { pt3dadd( -47.2714, 169.903, -133.12, 0.28 ) }
    dend_59 { pt3dadd( -47.4371, 170.989, -133.425, 0.83 ) }
    dend_59 { pt3dadd( -48.3948, 177.345, -135.192, 0.28 ) }
    dend_59 { pt3dadd( -48.8245, 180.176, -135.925, 1.11 ) }
    dend_59 { pt3dadd( -50.2264, 188.766, -138.241, 0.28 ) }
    dend_59 { pt3dadd( -51.0026, 192.887, -139.589, 0.55 ) }
    dend_59 { pt3dadd( -51.5719, 195.49, -140.561, 0.28 ) }
    dend_59 { pt3dadd( -51.984, 197.145, -141.167, 1.38 ) }
    dend_59 { pt3dadd( -52.9184, 200.334, -142.335, 0.28 ) }
    dend_59 { pt3dadd( -53.5339, 202.102, -142.896, 0.55 ) }
    dend_59 { pt3dadd( -55.8672, 207.501, -144.436, 0.28 ) }
    dend_59 { pt3dadd( -56.6429, 209.255, -144.736, 0.83 ) }
    dend_59 { pt3dadd( -59.4292, 215.137, -145.422, 0.28 ) }
    dend_59 { pt3dadd( -59.862, 215.991, -145.477, 0.55 ) }
    dend_59 { pt3dadd( -61.6503, 219.238, -145.478, 0.28 ) }
    dend_59 { pt3dadd( -62.0971, 220.018, -145.304, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: soma_0 (entry count 41/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -3.58035, 6.55729, 10.8326, 0.55 ) }
    dend_58 { pt3dadd( -4.72305, 8.83597, 11.9536, 0.55 ) }
    dend_58 { pt3dadd( -5.66369, 10.4364, 12.7149, 0.83 ) }
    dend_58 { pt3dadd( -7.26642, 12.6323, 13.7312, 0.55 ) }
    dend_58 { pt3dadd( -7.76052, 13.3075, 14.1368, 0.55 ) }
    dend_58 { pt3dadd( -8.46869, 14.2576, 14.8374, 0.55 ) }
    dend_58 { pt3dadd( -9.40105, 15.4272, 15.807, 0.55 ) }
    dend_58 { pt3dadd( -9.82914, 15.8897, 16.2876, 0.55 ) }
    dend_58 { pt3dadd( -10.7587, 16.7277, 17.2927, 0.55 ) }
    dend_58 { pt3dadd( -13.0301, 18.7218, 19.6734, 0.55 ) }
    dend_58 { pt3dadd( -13.9832, 19.618, 20.7846, 0.55 ) }
    dend_58 { pt3dadd( -14.4501, 20.0859, 21.3639, 0.55 ) }
    dend_58 { pt3dadd( -15.1307, 20.7089, 22.2875, 0.83 ) }
    dend_58 { pt3dadd( -15.7545, 21.1963, 23.1147, 0.55 ) }
    dend_58 { pt3dadd( -16.1849, 21.5324, 23.835, 0.55 ) }
    dend_58 { pt3dadd( -16.4418, 21.6907, 24.2333, 0.55 ) }
    dend_58 { pt3dadd( -17.1991, 22.1655, 25.3752, 0.55 ) }
    dend_58 { pt3dadd( -18.5312, 23.0889, 27.3882, 0.55 ) }
    dend_58 { pt3dadd( -19.2571, 23.5415, 28.4389, 0.83 ) }
    dend_58 { pt3dadd( -21.9987, 25.1508, 32.1709, 0.55 ) }
    dend_58 { pt3dadd( -22.7433, 25.5921, 33.1113, 0.55 ) }
    dend_58 { pt3dadd( -23.7253, 26.2382, 34.6096, 0.55 ) }
    dend_58 { pt3dadd( -24.2527, 26.6308, 35.4494, 0.55 ) }
    dend_58 { pt3dadd( -24.914, 27.1327, 36.4126, 0.55 ) }
    dend_58 { pt3dadd( -25.2133, 27.3373, 36.9342, 0.55 ) }
    dend_58 { pt3dadd( -25.6493, 27.5582, 37.9387, 0.55 ) }
    dend_58 { pt3dadd( -27.7932, 28.6965, 44.2451, 0.83 ) }
    dend_58 { pt3dadd( -28.2658, 28.9433, 45.8204, 0.55 ) }
    dend_58 { pt3dadd( -28.5156, 29.0579, 46.6743, 0.55 ) }
    dend_58 { pt3dadd( -29.7396, 29.4784, 50.8136, 0.83 ) }
    dend_58 { pt3dadd( -31.0274, 29.8219, 55.2938, 0.55 ) }
    dend_58 { pt3dadd( -31.2728, 29.8614, 56.1574, 0.55 ) }
    dend_58 { pt3dadd( -31.5931, 29.8867, 57.2302, 0.28 ) }
    dend_58 { pt3dadd( -31.8301, 29.8975, 58.1556, 0.83 ) }
    dend_58 { pt3dadd( -32.8604, 29.9949, 62.1459, 0.55 ) }
    dend_58 { pt3dadd( -35.7697, 31.5454, 67.5962, 0.55 ) }
    dend_58 { pt3dadd( -38.1596, 32.4503, 73.4477, 0.55 ) }
    dend_58 { pt3dadd( -41.7149, 34.3272, 78.3723, 0.55 ) }
    dend_58 { pt3dadd( -45.8384, 36.8165, 82.4784, 0.55 ) }
    dend_58 { pt3dadd( -49.0427, 39.1607, 87.422, 0.55 ) }
    dend_58 { pt3dadd( -52.7313, 40.5544, 92.427, 0.55 ) }
    dend_58 { pt3dadd( -56.1669, 41.7889, 97.655, 0.55 ) }
    dend_58 { pt3dadd( -59.1859, 42.1412, 103.277, 0.55 ) }
    dend_58 { pt3dadd( -61.8047, 41.8163, 109.1, 0.55 ) }
    dend_58 { pt3dadd( -64.5971, 40.7898, 114.75, 0.55 ) }
    dend_58 { pt3dadd( -67.1141, 39.0213, 120.326, 0.55 ) }
    dend_58 { pt3dadd( -70.0173, 36.8595, 125.553, 0.55 ) }
    dend_58 { pt3dadd( -73.3794, 35.1206, 130.679, 0.55 ) }
    dend_58 { pt3dadd( -76.3253, 34.1506, 136.262, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: soma_0 (entry count 90/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 4.78965, 6.77579, -4.2574, 1.11 ) }
    dend_39 { pt3dadd( 5.74867, 7.84976, -4.51763, 1.11 ) }
    dend_39 { pt3dadd( 7.84841, 10.2012, -5.08741, 2.49 ) }
    dend_39 { pt3dadd( 9.34321, 11.8752, -5.49303, 1.38 ) }
    dend_39 { pt3dadd( 10.9067, 13.6261, -5.9173, 2.22 ) }
    dend_39 { pt3dadd( 11.9843, 14.8329, -6.20972, 2.22 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 96/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.629658, -11.4547, -1.6674, 3.88 ) }
    dend_0 { pt3dadd( 2.46292, -17.3191, -3.11056, 3.6 ) }
    dend_0 { pt3dadd( 4.47897, -23.7683, -4.69762, 4.16 ) }
    dend_0 { pt3dadd( 6.79618, -31.1807, -6.52174, 3.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 0/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.683182, 11.1027, 0.0807958, 0.584322 ) }
    axon_0 { pt3dadd( 1.76899, 26.0633, 0.0807958, 0.584322 ) }
    axon_0 { pt3dadd( 2.8548, 41.024, 0.0807958, 0.584322 ) }
    // Section: dend_71, id: dend_71, parent: dend_67 (entry count 3/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 1.21725, 72.9646, 1.84812, 0.83 ) }
    dend_71 { pt3dadd( 2.37522, 74.0812, 0.978046, 0.83 ) }
    dend_71 { pt3dadd( 3.12732, 75.1746, 0.259327, 0.83 ) }
    dend_71 { pt3dadd( 3.80228, 76.597, -0.446183, 1.11 ) }
    dend_71 { pt3dadd( 4.15743, 77.536, -0.79817, 1.11 ) }
    dend_71 { pt3dadd( 5.02758, 80.2118, -2.068, 0.83 ) }
    dend_71 { pt3dadd( 5.37354, 81.2758, -2.71242, 0.83 ) }
    dend_71 { pt3dadd( 5.79643, 82.7258, -3.72583, 1.38 ) }
    dend_71 { pt3dadd( 6.25888, 84.6234, -5.10247, 0.55 ) }
    dend_71 { pt3dadd( 6.75652, 86.9993, -7.0627, 1.38 ) }
    dend_71 { pt3dadd( 7.42548, 90.1791, -10.0047, 0.55 ) }
    dend_71 { pt3dadd( 7.8171, 92.1641, -12.0815, 0.28 ) }
    dend_71 { pt3dadd( 7.89047, 92.5665, -12.5356, 0.83 ) }
    dend_71 { pt3dadd( 7.96701, 93.1209, -13.2153, 0.83 ) }
    dend_71 { pt3dadd( 8.14859, 95.4428, -16.1808, 0.28 ) }
    dend_71 { pt3dadd( 8.15355, 96.2166, -17.1815, 1.38 ) }
    dend_71 { pt3dadd( 8.14775, 98.9542, -20.3959, 0.28 ) }
    dend_71 { pt3dadd( 8.15993, 100.67, -22.3496, 0.83 ) }
    dend_71 { pt3dadd( 8.22381, 102.439, -24.3468, 0.28 ) }
    dend_71 { pt3dadd( 8.23597, 102.827, -24.9081, 0.83 ) }
    dend_71 { pt3dadd( 8.30764, 104.469, -27.6687, 0.28 ) }
    dend_71 { pt3dadd( 8.31853, 105.187, -29.1027, 0.55 ) }
    dend_71 { pt3dadd( 8.30228, 105.87, -30.6881, 0.28 ) }
    dend_71 { pt3dadd( 8.25185, 106.434, -32.1333, 1.66 ) }
    dend_71 { pt3dadd( 7.63476, 110.148, -41.8801, 0.28 ) }
    dend_71 { pt3dadd( 7.58732, 110.298, -42.2888, 0.55 ) }
    dend_71 { pt3dadd( 7.18718, 111.118, -44.5703, 0.28 ) }
    dend_71 { pt3dadd( 6.92974, 111.45, -45.5418, 0.83 ) }
    dend_71 { pt3dadd( 6.11063, 112.229, -47.7838, 0.28 ) }
    dend_71 { pt3dadd( 5.50305, 112.649, -48.9315, 0.83 ) }
    dend_71 { pt3dadd( 4.37734, 113.254, -49.8908, 0.28 ) }
    dend_71 { pt3dadd( 4.04522, 113.426, -50.1127, 0.55 ) }
    dend_71 { pt3dadd( 2.40296, 114.345, -50.8908, 0.28 ) }
    dend_71 { pt3dadd( 1.40594, 114.981, -51.2403, 0.28 ) }
    dend_71 { pt3dadd( 0.287359, 115.73, -51.4909, 0.55 ) }
    dend_71 { pt3dadd( -0.627124, 116.436, -51.6324, 0.28 ) }
    dend_71 { pt3dadd( -1.59458, 117.372, -51.7497, 0.83 ) }
    dend_71 { pt3dadd( -2.93273, 118.932, -51.9053, 0.28 ) }
    dend_71 { pt3dadd( -3.28378, 119.501, -51.933, 0.55 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 42/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 1.21725, 72.9646, 1.84812, 0.55 ) }
    dend_68 { pt3dadd( 1.21308, 74.2383, 1.1814, 0.55 ) }
    dend_68 { pt3dadd( 1.13483, 76.9808, -0.10684, 0.55 ) }
    dend_68 { pt3dadd( 0.988025, 80.7089, -1.8087, 0.55 ) }
    dend_68 { pt3dadd( 0.78889, 87.6207, -4.69061, 0.55 ) }
    dend_68 { pt3dadd( 0.753707, 90.0516, -5.48187, 0.83 ) }
    dend_68 { pt3dadd( 0.750006, 92.2751, -6.0293, 0.55 ) }
    dend_68 { pt3dadd( 0.840274, 95.1534, -6.5572, 0.55 ) }
    dend_68 { pt3dadd( 0.933565, 97.1591, -6.72409, 0.83 ) }
    dend_68 { pt3dadd( 1.00748, 99.1372, -6.65561, 0.55 ) }
    dend_68 { pt3dadd( 1.22614, 103.473, -5.67052, 0.55 ) }
    dend_68 { pt3dadd( 1.33593, 105.518, -5.22162, 0.83 ) }
    dend_68 { pt3dadd( 1.43036, 107.622, -4.7696, 0.55 ) }
    dend_68 { pt3dadd( 1.47105, 108.396, -4.6444, 0.83 ) }
    dend_68 { pt3dadd( 1.51152, 110.5, -4.44633, 0.55 ) }
    dend_68 { pt3dadd( 1.44639, 112.35, -4.46667, 0.83 ) }
    dend_68 { pt3dadd( 1.34958, 113.871, -5.22115, 0.55 ) }
    dend_68 { pt3dadd( 1.24964, 114.941, -6.05537, 0.83 ) }
    dend_68 { pt3dadd( 1.0352, 116.924, -7.8415, 0.55 ) }
    dend_68 { pt3dadd( 0.808953, 119.038, -9.90383, 0.55 ) }
    dend_68 { pt3dadd( 0.608341, 121.399, -12.3499, 0.83 ) }
    dend_68 { pt3dadd( -0.0227914, 131.38, -22.871, 0.83 ) }
    dend_68 { pt3dadd( -0.0695938, 132.55, -24.0997, 0.55 ) }
    dend_68 { pt3dadd( -0.103176, 134.448, -26.012, 0.83 ) }
    dend_68 { pt3dadd( -0.0949445, 135.827, -27.3058, 0.55 ) }
    dend_68 { pt3dadd( -0.00909298, 137.373, -28.4325, 0.55 ) }
    dend_68 { pt3dadd( 0.148343, 139.323, -29.2337, 0.83 ) }
    dend_68 { pt3dadd( 0.301593, 140.894, -29.3661, 1.11 ) }
    dend_68 { pt3dadd( 0.539293, 143.784, -29.6089, 0.83 ) }
    dend_68 { pt3dadd( 0.636172, 145.695, -29.7648, 0.83 ) }
    dend_68 { pt3dadd( 0.719709, 149.383, -30.0408, 0.55 ) }
    dend_68 { pt3dadd( 0.68566, 151.965, -30.212, 0.55 ) }
    dend_68 { pt3dadd( 0.64285, 153.253, -30.2862, 0.55 ) }
    dend_68 { pt3dadd( 0.397054, 157.549, -30.4814, 0.83 ) }
    dend_68 { pt3dadd( 0.17342, 159.946, -30.6334, 0.55 ) }
    dend_68 { pt3dadd( -0.063439, 162.301, -30.7744, 0.83 ) }
    dend_68 { pt3dadd( -0.306925, 164.265, -30.853, 0.55 ) }
    dend_68 { pt3dadd( -0.462957, 165.593, -30.8712, 0.55 ) }
    dend_68 { pt3dadd( -0.769792, 167.475, -30.9246, 1.11 ) }
    dend_68 { pt3dadd( -1.21911, 169.932, -31.1284, 0.55 ) }
    // Section: dend_64, id: dend_64, parent: dend_60 (entry count 82/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 19.6982, 35.2274, 38.7386, 0.55 ) }
    dend_64 { pt3dadd( 21.1926, 36.7436, 38.8149, 0.55 ) }
    dend_64 { pt3dadd( 23.3607, 38.7897, 38.9318, 0.55 ) }
    dend_64 { pt3dadd( 25.4828, 40.8063, 39.0539, 0.55 ) }
    dend_64 { pt3dadd( 27.211, 42.357, 39.1738, 0.55 ) }
    dend_64 { pt3dadd( 28.8681, 43.7797, 39.3053, 0.55 ) }
    dend_64 { pt3dadd( 30.7809, 45.4705, 39.4521, 0.28 ) }
    dend_64 { pt3dadd( 31.2468, 45.8503, 39.4851, 0.55 ) }
    dend_64 { pt3dadd( 32.771, 47.085, 39.822, 0.28 ) }
    dend_64 { pt3dadd( 33.9688, 48.1498, 40.3021, 0.28 ) }
    dend_64 { pt3dadd( 34.9289, 49.1999, 40.8833, 0.55 ) }
    dend_64 { pt3dadd( 36.0099, 50.5678, 41.7057, 0.28 ) }
    dend_64 { pt3dadd( 36.4825, 51.1765, 42.1467, 0.55 ) }
    dend_64 { pt3dadd( 39.3919, 54.7524, 44.9761, 0.28 ) }
    dend_64 { pt3dadd( 39.8079, 55.2604, 45.3829, 0.55 ) }
    dend_64 { pt3dadd( 41.0661, 56.9824, 46.6949, 0.55 ) }
    dend_64 { pt3dadd( 41.9526, 58.2208, 47.5344, 0.55 ) }
    dend_64 { pt3dadd( 42.9428, 59.6709, 48.4077, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_64 { pt3dadd( 43.5038, 60.5351, 48.8484, 0.55 ) }
    dend_64 { pt3dadd( 44.4378, 62.1524, 49.4571, 0.55 ) }
    dend_64 { pt3dadd( 45.4904, 64.1251, 50.204, 0.28 ) }
    dend_64 { pt3dadd( 46.7644, 66.7091, 51.0535, 0.55 ) }
    dend_64 { pt3dadd( 47.7305, 68.936, 51.6445, 0.28 ) }
    dend_64 { pt3dadd( 47.9489, 69.5256, 51.7514, 0.55 ) }
    dend_64 { pt3dadd( 48.4823, 71.162, 51.9668, 0.28 ) }
    dend_64 { pt3dadd( 48.7333, 71.9763, 52.0173, 0.55 ) }
    dend_64 { pt3dadd( 49.5559, 74.5312, 51.9469, 0.28 ) }
    dend_64 { pt3dadd( 49.7154, 75.1287, 51.9027, 0.55 ) }
    dend_64 { pt3dadd( 50.0893, 76.5032, 51.7859, 0.28 ) }
    dend_64 { pt3dadd( 50.3371, 77.4266, 51.7374, 0.55 ) }
    dend_64 { pt3dadd( 50.7814, 79.2561, 51.7508, 0.55 ) }
    dend_64 { pt3dadd( 51.044, 80.3697, 51.8362, 0.55 ) }
    dend_64 { pt3dadd( 51.6378, 82.7416, 52.1669, 0.55 ) }
    dend_64 { pt3dadd( 51.9334, 83.9071, 52.3243, 0.28 ) }
    dend_64 { pt3dadd( 52.293, 85.2054, 52.4965, 0.55 ) }
    dend_64 { pt3dadd( 52.8113, 87.064, 52.5421, 0.55 ) }
    dend_64 { pt3dadd( 53.5609, 89.3741, 52.3485, 0.55 ) }
    dend_64 { pt3dadd( 54.1501, 90.9257, 52.049, 0.28 ) }
    dend_64 { pt3dadd( 54.6679, 91.8591, 51.7775, 0.55 ) }
    dend_64 { pt3dadd( 55.6174, 93.4476, 51.1963, 0.55 ) }
    dend_64 { pt3dadd( 57.7919, 96.6251, 49.7652, 0.55 ) }
    dend_64 { pt3dadd( 58.7999, 97.8441, 49.0598, 0.55 ) }
    dend_64 { pt3dadd( 59.8495, 98.9342, 48.2723, 0.55 ) }
    dend_64 { pt3dadd( 62.1438, 101.025, 46.5393, 0.55 ) }
    dend_64 { pt3dadd( 67.2049, 108.94, 48.9128, 0.55 ) }
    dend_64 { pt3dadd( 71.3642, 116.975, 52.3886, 0.55 ) }
    dend_64 { pt3dadd( 76.1315, 124.719, 55.7967, 0.55 ) }
    dend_64 { pt3dadd( 81.8401, 131.471, 60.0006, 0.55 ) }
    dend_64 { pt3dadd( 86.8572, 138.524, 64.5377, 0.55 ) }
    dend_64 { pt3dadd( 91.5816, 145.162, 70.0029, 0.55 ) }
    dend_64 { pt3dadd( 96.7961, 150.789, 76.2279, 0.55 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 33/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 19.6982, 35.2274, 38.7386, 0.83 ) }
    dend_61 { pt3dadd( 21.1546, 38.3915, 40.177, 0.83 ) }
    dend_61 { pt3dadd( 22.3363, 41.0606, 41.2531, 0.83 ) }
    dend_61 { pt3dadd( 23.4516, 43.9422, 42.2915, 0.83 ) }
    dend_61 { pt3dadd( 25.0449, 48.5622, 44.2679, 0.55 ) }
    dend_61 { pt3dadd( 25.675, 50.3859, 45.0605, 0.55 ) }
    dend_61 { pt3dadd( 26.4377, 52.7112, 46.0561, 0.55 ) }
    dend_61 { pt3dadd( 27.3111, 55.3777, 47.1572, 0.55 ) }
    dend_61 { pt3dadd( 27.8921, 57.4375, 48.1464, 0.55 ) }
    dend_61 { pt3dadd( 28.6304, 61.6466, 50.2962, 0.55 ) }
    dend_61 { pt3dadd( 29.0756, 65.0277, 52.2211, 0.55 ) }
    dend_61 { pt3dadd( 29.3319, 66.6789, 53.3979, 0.55 ) }
    dend_61 { pt3dadd( 29.5231, 67.8946, 54.3653, 0.55 ) }
    dend_61 { pt3dadd( 30.014, 71.2508, 57.3808, 0.83 ) }
    dend_61 { pt3dadd( 30.2362, 72.9397, 58.9555, 0.83 ) }
    dend_61 { pt3dadd( 30.5759, 76.2965, 61.9695, 0.83 ) }
    dend_61 { pt3dadd( 30.7847, 80.0658, 65.3109, 0.55 ) }
    dend_61 { pt3dadd( 30.879, 82.6221, 67.3691, 0.83 ) }
    dend_61 { pt3dadd( 30.8601, 86.2883, 69.9926, 0.83 ) }
    dend_61 { pt3dadd( 30.7323, 88.1649, 71.1079, 0.83 ) }
    dend_61 { pt3dadd( 30.4643, 90.4712, 72.3007, 0.83 ) }
    dend_61 { pt3dadd( 30.0607, 92.9832, 73.2215, 0.55 ) }
    dend_61 { pt3dadd( 29.6736, 95.9762, 73.9262, 0.55 ) }
    dend_61 { pt3dadd( 29.5563, 97.8664, 74.2073, 0.55 ) }
    dend_61 { pt3dadd( 29.6393, 99.6602, 74.295, 0.55 ) }
    dend_61 { pt3dadd( 29.7655, 100.284, 74.3151, 0.55 ) }
    dend_61 { pt3dadd( 30.5919, 102.987, 74.3708, 0.55 ) }
    dend_61 { pt3dadd( 31.3369, 105.085, 74.4004, 0.55 ) }
    dend_61 { pt3dadd( 32.1513, 107.311, 74.4259, 0.55 ) }
    dend_61 { pt3dadd( 33.4296, 110.825, 74.4611, 0.55 ) }
    dend_61 { pt3dadd( 34.3919, 113.947, 74.5095, 0.55 ) }
    dend_61 { pt3dadd( 35.1045, 116.726, 74.5671, 0.55 ) }
    dend_61 { pt3dadd( 35.5016, 118.859, 74.674, 0.55 ) }
    dend_61 { pt3dadd( 35.6899, 120.296, 74.78, 0.55 ) }
    dend_61 { pt3dadd( 35.8668, 121.939, 74.9291, 0.55 ) }
    dend_61 { pt3dadd( 36.1287, 125.034, 75.4334, 0.55 ) }
    dend_61 { pt3dadd( 36.3205, 127.661, 76.0047, 0.55 ) }
    dend_61 { pt3dadd( 36.6573, 130.974, 76.8403, 0.55 ) }
    dend_61 { pt3dadd( 36.9918, 133.835, 77.6079, 0.55 ) }
    dend_61 { pt3dadd( 37.1629, 135.583, 78.0926, 0.55 ) }
    dend_61 { pt3dadd( 37.4018, 139.743, 79.2737, 0.55 ) }
    dend_61 { pt3dadd( 37.4671, 141.219, 79.6795, 0.55 ) }
    dend_61 { pt3dadd( 37.5231, 143.563, 80.3254, 0.55 ) }
    dend_61 { pt3dadd( 37.5499, 146.337, 81.027, 0.55 ) }
    dend_61 { pt3dadd( 37.4582, 148.437, 81.5393, 0.55 ) }
    dend_61 { pt3dadd( 37.299, 150.061, 81.8563, 0.55 ) }
    dend_61 { pt3dadd( 36.8961, 153.084, 82.0363, 0.55 ) }
    dend_61 { pt3dadd( 38.5303, 162.352, 86.3522, 0.55 ) }
    dend_61 { pt3dadd( 39.6222, 171.572, 90.9305, 0.55 ) }
    dend_61 { pt3dadd( 39.161, 181.023, 95.0362, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_39 (entry count 83/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 11.9843, 14.8329, -6.20972, 1.11 ) }
    dend_45 { pt3dadd( 18.351, 16.3432, -7.23523, 1.11 ) }
    dend_45 { pt3dadd( 24.5384, 17.8108, -8.23186, 1.11 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 86/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 11.9843, 14.8329, -6.20972, 0.83 ) }
    dend_40 { pt3dadd( 11.1177, 18.5585, -9.03353, 0.83 ) }
    dend_40 { pt3dadd( 9.61127, 25.0344, -13.942, 0.83 ) }
    dend_40 { pt3dadd( 9.30392, 26.3556, -14.9434, 0.83 ) }
    // Section: dend_36, id: dend_36, parent: dend_0 (entry count 90/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 6.79618, -31.1807, -6.52174, 0.55 ) }
    dend_36 { pt3dadd( 7.53216, -31.4906, -7.76251, 0.55 ) }
    dend_36 { pt3dadd( 8.10284, -31.8149, -8.64819, 0.55 ) }
    dend_36 { pt3dadd( 8.7254, -32.212, -9.54343, 1.11 ) }
    dend_36 { pt3dadd( 12.4216, -34.4105, -14.7625, 0.83 ) }
    dend_36 { pt3dadd( 13.0633, -34.7816, -15.6276, 0.83 ) }
    dend_36 { pt3dadd( 14.3936, -35.5432, -17.3584, 0.83 ) }
    dend_36 { pt3dadd( 15.5789, -36.1329, -18.9462, 0.55 ) }
    dend_36 { pt3dadd( 15.9473, -36.3004, -19.3992, 0.55 ) }
    dend_36 { pt3dadd( 17.8179, -37.113, -21.5599, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_36 { pt3dadd( 18.6489, -37.5413, -22.4496, 0.55 ) }
    dend_36 { pt3dadd( 19.4097, -37.9857, -23.4478, 0.83 ) }
    dend_36 { pt3dadd( 21.1095, -39.0496, -26.1546, 0.83 ) }
    dend_36 { pt3dadd( 21.917, -39.6268, -27.6213, 1.11 ) }
    dend_36 { pt3dadd( 23.4858, -41.14, -31.2203, 0.83 ) }
    dend_36 { pt3dadd( 23.8209, -41.6089, -32.2227, 0.83 ) }
    dend_36 { pt3dadd( 24.4855, -42.7165, -34.7818, 0.83 ) }
    dend_36 { pt3dadd( 24.836, -43.4076, -36.5183, 0.83 ) }
    dend_36 { pt3dadd( 24.9934, -43.8177, -37.5219, 0.55 ) }
    dend_36 { pt3dadd( 25.4546, -44.7719, -40.3872, 0.83 ) }
    dend_36 { pt3dadd( 25.7388, -45.2214, -41.8664, 0.83 ) }
    dend_36 { pt3dadd( 26.2941, -45.8127, -44.0726, 0.83 ) }
    dend_36 { pt3dadd( 27.0811, -46.4255, -46.7727, 0.55 ) }
    dend_36 { pt3dadd( 27.4996, -46.7015, -48.1003, 0.83 ) }
    dend_36 { pt3dadd( 29.4009, -47.7617, -54.0105, 0.55 ) }
    dend_36 { pt3dadd( 29.666, -47.9034, -54.8048, 0.55 ) }
    dend_36 { pt3dadd( 29.9403, -48.0453, -55.614, 0.55 ) }
    dend_36 { pt3dadd( 31.4119, -48.9123, -60.0054, 0.55 ) }
    dend_36 { pt3dadd( 31.6322, -49.039, -60.6267, 0.28 ) }
    dend_36 { pt3dadd( 32.5319, -49.5816, -63.2013, 0.83 ) }
    dend_36 { pt3dadd( 32.8771, -49.8554, -64.1896, 0.55 ) }
    dend_36 { pt3dadd( 33.1778, -50.1265, -65.1029, 0.55 ) }
    dend_36 { pt3dadd( 33.6698, -50.6281, -66.5612, 0.28 ) }
    dend_36 { pt3dadd( 34.0342, -50.9668, -67.3831, 0.55 ) }
    dend_36 { pt3dadd( 34.9209, -51.6246, -69.2115, 0.28 ) }
    dend_36 { pt3dadd( 35.0668, -51.7217, -69.4757, 0.28 ) }
    dend_36 { pt3dadd( 35.4167, -51.9486, -70.1285, 0.55 ) }
    dend_36 { pt3dadd( 35.6831, -52.1419, -70.6647, 0.55 ) }
    dend_36 { pt3dadd( 36.5715, -52.8425, -72.5843, 0.55 ) }
    dend_36 { pt3dadd( 37.4626, -53.7184, -75.201, 0.55 ) }
    dend_36 { pt3dadd( 37.745, -54.0195, -76.1141, 0.55 ) }
    dend_36 { pt3dadd( 38.099, -54.4131, -77.404, 1.11 ) }
    dend_36 { pt3dadd( 38.3142, -54.6454, -78.2053, 0.55 ) }
    dend_36 { pt3dadd( 39.0249, -55.2715, -80.8042, 0.55 ) }
    dend_36 { pt3dadd( 40.0826, -56.2703, -84.9479, 0.55 ) }
    dend_36 { pt3dadd( 40.3187, -56.4836, -85.8878, 1.11 ) }
    dend_36 { pt3dadd( 41.1146, -57.097, -88.9674, 0.28 ) }
    dend_36 { pt3dadd( 41.3606, -57.2495, -89.8157, 0.28 ) }
    dend_36 { pt3dadd( 42.2954, -57.693, -92.8928, 1.66 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 39/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 6.79618, -31.1807, -6.52174, 2.77 ) }
    dend_1 { pt3dadd( 7.43028, -37.7104, -0.784535, 2.77 ) }
    dend_1 { pt3dadd( 7.71835, -40.6767, 1.8218, 2.49 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 42/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 2.8548, 41.024, 0.0807958, 0.55 ) }
    axon_1 { pt3dadd( 3.94061, 55.9846, 0.0807958, 0.55 ) }
    axon_1 { pt3dadd( 5.02642, 70.9453, 0.0807958, 0.55 ) }
    // Section: dend_70, id: dend_70, parent: dend_68 (entry count 45/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -1.21911, 169.932, -31.1284, 0.55 ) }
    dend_70 { pt3dadd( -0.327678, 171.372, -33.335, 0.55 ) }
    dend_70 { pt3dadd( 0.360102, 172.941, -35.0371, 0.55 ) }
    dend_70 { pt3dadd( 1.91457, 177.496, -39.0774, 0.55 ) }
    dend_70 { pt3dadd( 2.15533, 178.512, -39.9778, 0.83 ) }
    dend_70 { pt3dadd( 2.6495, 180.851, -41.9711, 0.28 ) }
    dend_70 { pt3dadd( 3.04564, 182.89, -43.6954, 0.55 ) }
    dend_70 { pt3dadd( 3.54124, 187.208, -47.0761, 0.28 ) }
    dend_70 { pt3dadd( 3.60189, 188.591, -48.2724, 0.83 ) }
    dend_70 { pt3dadd( 3.74207, 192.399, -51.7766, 0.28 ) }
    dend_70 { pt3dadd( 3.74571, 193.945, -53.459, 0.55 ) }
    dend_70 { pt3dadd( 3.7258, 195.848, -55.6896, 0.28 ) }
    dend_70 { pt3dadd( 3.72829, 196.142, -56.0844, 0.55 ) }
    dend_70 { pt3dadd( 3.91896, 201.009, -62.9334, 0.28 ) }
    dend_70 { pt3dadd( 3.96368, 201.45, -63.5661, 0.55 ) }
    dend_70 { pt3dadd( 4.53203, 205.089, -68.6592, 0.28 ) }
    dend_70 { pt3dadd( 4.84292, 206.653, -71.0137, 1.11 ) }
    dend_70 { pt3dadd( 5.99279, 210.99, -77.5235, 0.28 ) }
    dend_70 { pt3dadd( 6.21605, 211.596, -78.4944, 0.83 ) }
    dend_70 { pt3dadd( 6.60208, 212.391, -79.8323, 0.28 ) }
    dend_70 { pt3dadd( 6.88621, 212.911, -80.774, 0.55 ) }
    dend_70 { pt3dadd( 8.69198, 215.562, -85.9027, 0.28 ) }
    dend_70 { pt3dadd( 9.21136, 216.333, -87.4341, 0.55 ) }
    dend_70 { pt3dadd( 11.3681, 219.615, -93.6112, 0.28 ) }
    dend_70 { pt3dadd( 11.7224, 220.244, -94.7607, 0.83 ) }
    dend_70 { pt3dadd( 12.4752, 221.782, -97.3717, 0.28 ) }
    dend_70 { pt3dadd( 13.0693, 223.15, -99.3784, 0.55 ) }
    dend_70 { pt3dadd( 14.4417, 226.807, -103.863, 0.28 ) }
    dend_70 { pt3dadd( 14.7885, 227.972, -105.246, 0.55 ) }
    dend_70 { pt3dadd( 15.2491, 229.985, -107.33, 0.28 ) }
    dend_70 { pt3dadd( 15.3856, 231.207, -108.74, 0.83 ) }
    dend_70 { pt3dadd( 15.4296, 232.954, -110.895, 0.28 ) }
    dend_70 { pt3dadd( 15.4355, 234.072, -112.23, 0.55 ) }
    dend_70 { pt3dadd( 15.3699, 237.427, -115.888, 0.28 ) }
    dend_70 { pt3dadd( 15.3813, 238.493, -116.985, 0.83 ) }
    dend_70 { pt3dadd( 15.6847, 244.75, -122.893, 0.28 ) }
    dend_70 { pt3dadd( 15.7715, 246.12, -124.096, 0.28 ) }
    dend_70 { pt3dadd( 15.9509, 248.68, -126.249, 1.11 ) }
    dend_70 { pt3dadd( 16.3863, 253.078, -129.48, 0.28 ) }
    dend_70 { pt3dadd( 16.7952, 255.93, -131.214, 0.83 ) }
    dend_70 { pt3dadd( 17.2293, 258.384, -132.526, 0.28 ) }
    dend_70 { pt3dadd( 17.4453, 259.281, -132.936, 0.55 ) }
    dend_70 { pt3dadd( 18.2713, 262.726, -134.666, 0.28 ) }
    dend_70 { pt3dadd( 18.6844, 264.643, -135.834, 0.83 ) }
    dend_70 { pt3dadd( 19.3784, 267.558, -137.673, 0.28 ) }
    dend_70 { pt3dadd( 19.4605, 267.964, -137.958, 0.55 ) }
    dend_70 { pt3dadd( 20.1272, 271.156, -140.422, 0.28 ) }
    dend_70 { pt3dadd( 20.2414, 271.673, -140.82, 0.83 ) }
    dend_70 { pt3dadd( 21.2941, 276.043, -143.951, 0.28 ) }
    dend_70 { pt3dadd( 21.6129, 277.995, -145.583, 0.55 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 95/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -1.21911, 169.932, -31.1284, 0.28 ) }
    dend_69 { pt3dadd( -1.43284, 172.014, -30.7167, 0.28 ) }
    dend_69 { pt3dadd( -1.49573, 172.785, -30.5621, 0.55 ) }
    dend_69 { pt3dadd( -1.68581, 174.421, -30.2221, 0.55 ) }
    dend_69 { pt3dadd( -1.92401, 176.762, -29.7616, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_69 { pt3dadd( -2.23312, 179.657, -29.3019, 0.55 ) }
    dend_69 { pt3dadd( -2.37575, 181.104, -29.1051, 0.55 ) }
    dend_69 { pt3dadd( -2.67426, 183.942, -28.7318, 0.83 ) }
    dend_69 { pt3dadd( -2.91319, 186.04, -28.4585, 0.55 ) }
    dend_69 { pt3dadd( -3.30194, 188.597, -28.1203, 0.55 ) }
    dend_69 { pt3dadd( -3.57065, 190.187, -27.9078, 0.83 ) }
    dend_69 { pt3dadd( -3.85003, 192.183, -27.7431, 0.55 ) }
    dend_69 { pt3dadd( -4.03959, 193.365, -27.6832, 0.55 ) }
    dend_69 { pt3dadd( -4.48962, 195.961, -27.6236, 0.55 ) }
    dend_69 { pt3dadd( -4.74994, 197.631, -27.6389, 0.55 ) }
    dend_69 { pt3dadd( -4.98855, 199.084, -27.6601, 0.83 ) }
    dend_69 { pt3dadd( -5.36818, 201.944, -27.6743, 0.55 ) }
    dend_69 { pt3dadd( -5.46868, 202.803, -27.6539, 0.55 ) }
    dend_69 { pt3dadd( -5.62732, 204.501, -27.5517, 0.83 ) }
    dend_69 { pt3dadd( -5.76441, 205.716, -27.3384, 0.55 ) }
    dend_69 { pt3dadd( -5.90951, 206.838, -26.9745, 0.55 ) }
    dend_69 { pt3dadd( -6.00372, 207.503, -26.705, 0.55 ) }
    dend_69 { pt3dadd( -6.33337, 210.016, -25.4213, 0.28 ) }
    dend_69 { pt3dadd( -6.44185, 211.177, -24.792, 0.55 ) }
    dend_69 { pt3dadd( -6.52521, 213.913, -23.2473, 0.55 ) }
    dend_69 { pt3dadd( -6.51903, 215.215, -22.5795, 0.28 ) }
    dend_69 { pt3dadd( -6.40683, 216.811, -21.9215, 0.55 ) }
    dend_69 { pt3dadd( -6.22425, 218.406, -21.4475, 0.28 ) }
    dend_69 { pt3dadd( -6.00858, 219.746, -21.2282, 0.55 ) }
    dend_69 { pt3dadd( -5.63146, 221.716, -21.0171, 0.55 ) }
    dend_69 { pt3dadd( -5.20224, 223.748, -20.9666, 0.28 ) }
    dend_69 { pt3dadd( -4.85618, 225.637, -20.8599, 0.55 ) }
    dend_69 { pt3dadd( -4.57442, 227.447, -20.7651, 0.28 ) }
    dend_69 { pt3dadd( -4.36784, 229.166, -20.6542, 0.55 ) }
    dend_69 { pt3dadd( -4.17465, 231.322, -20.4374, 0.28 ) }
    dend_69 { pt3dadd( -4.10554, 232.526, -20.256, 0.83 ) }
    dend_69 { pt3dadd( -3.94439, 234.382, -19.9393, 0.28 ) }
    dend_69 { pt3dadd( -3.79728, 236.001, -19.6518, 0.55 ) }
    dend_69 { pt3dadd( -3.51716, 238.194, -19.2721, 0.28 ) }
    dend_69 { pt3dadd( -3.42138, 239.071, -19.1041, 0.55 ) }
    dend_69 { pt3dadd( -3.34936, 240.223, -18.8728, 0.28 ) }
    dend_69 { pt3dadd( -3.25032, 242.167, -18.4635, 0.55 ) }
    dend_69 { pt3dadd( -3.20416, 245.157, -17.9245, 0.28 ) }
    dend_69 { pt3dadd( -3.26239, 246.878, -17.7115, 0.83 ) }
    dend_69 { pt3dadd( -3.40908, 249.433, -17.5881, 0.28 ) }
    dend_69 { pt3dadd( -3.52403, 251.024, -17.5608, 0.28 ) }
    dend_69 { pt3dadd( -3.65633, 252.538, -17.6677, 0.28 ) }
    dend_69 { pt3dadd( -4.03771, 255.814, -18.1021, 0.83 ) }
    dend_69 { pt3dadd( -4.40174, 258.563, -18.7267, 0.28 ) }
    dend_69 { pt3dadd( -4.58064, 259.852, -19.1099, 0.28 ) }
    dend_69 { pt3dadd( -4.653, 260.448, -19.3513, 0.55 ) }
    dend_69 { pt3dadd( -4.97486, 263.391, -20.7801, 0.28 ) }
    dend_69 { pt3dadd( -5.20999, 265.306, -21.8775, 0.83 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 48/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 96.7961, 150.789, 76.2279, 0.55 ) }
    dend_66 { pt3dadd( 102.561, 159.228, 78.9297, 0.55 ) }
    dend_66 { pt3dadd( 108.901, 167.643, 79.8455, 0.55 ) }
    dend_66 { pt3dadd( 115.694, 175.381, 82.4794, 0.55 ) }
    dend_66 { pt3dadd( 123.36, 182.334, 85.1381, 0.55 ) }
    dend_66 { pt3dadd( 129.782, 190.368, 87.7228, 0.55 ) }
    dend_66 { pt3dadd( 137.202, 197.868, 89.159, 0.55 ) }
    dend_66 { pt3dadd( 144.572, 205.535, 88.8561, 0.55 ) }
    dend_66 { pt3dadd( 151.287, 213.699, 89.6005, 0.55 ) }
    dend_66 { pt3dadd( 157.073, 222.482, 88.7913, 0.55 ) }
    dend_66 { pt3dadd( 162.787, 231.285, 89.8001, 0.55 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 59/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 96.7961, 150.789, 76.2279, 0.55 ) }
    dend_65 { pt3dadd( 101.227, 157.902, 78.4296, 0.55 ) }
    dend_65 { pt3dadd( 105.345, 165.442, 79.053, 0.55 ) }
    dend_65 { pt3dadd( 110.548, 172.315, 78.3922, 0.55 ) }
    dend_65 { pt3dadd( 115.233, 179.539, 77.9215, 0.55 ) }
    dend_65 { pt3dadd( 119.185, 187.043, 76.5063, 0.55 ) }
    dend_65 { pt3dadd( 122.148, 194.466, 73.3197, 0.55 ) }
    dend_65 { pt3dadd( 126.352, 200.966, 69.4268, 0.55 ) }
    dend_65 { pt3dadd( 131.312, 207.704, 67.2437, 0.55 ) }
    dend_65 { pt3dadd( 135.022, 214.93, 64.375, 0.55 ) }
    // Section: dend_63, id: dend_63, parent: dend_61 (entry count 69/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 39.161, 181.023, 95.0362, 0.55 ) }
    dend_63 { pt3dadd( 40.2372, 189.539, 98.3235, 0.55 ) }
    dend_63 { pt3dadd( 41.5222, 197.239, 103.275, 0.55 ) }
    dend_63 { pt3dadd( 41.9908, 203.679, 109.98, 0.55 ) }
    dend_63 { pt3dadd( 42.0443, 209.102, 117.617, 0.55 ) }
    dend_63 { pt3dadd( 40.4403, 213.99, 125.453, 0.55 ) }
    dend_63 { pt3dadd( 39.3236, 219.312, 133.065, 0.55 ) }
    dend_63 { pt3dadd( 38.2954, 224.761, 140.59, 0.55 ) }
    dend_63 { pt3dadd( 36.2094, 229.667, 148.292, 0.55 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 78/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 39.161, 181.023, 95.0362, 0.55 ) }
    dend_62 { pt3dadd( 39.6257, 188.692, 98.692, 0.55 ) }
    dend_62 { pt3dadd( 39.7525, 195.336, 104.08, 0.55 ) }
    dend_62 { pt3dadd( 39.5974, 201.425, 110.124, 0.55 ) }
    dend_62 { pt3dadd( 38.5647, 207.239, 116.35, 0.55 ) }
    dend_62 { pt3dadd( 36.5632, 212.705, 122.659, 0.55 ) }
    dend_62 { pt3dadd( 33.9245, 217.76, 129.098, 0.55 ) }
    dend_62 { pt3dadd( 31.2332, 223.816, 134.479, 0.55 ) }
    dend_62 { pt3dadd( 26.5301, 229.362, 138.976, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_45 (entry count 87/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 24.5384, 17.8108, -8.23186, 1.11 ) }
    dend_51 { pt3dadd( 24.6297, 18.0109, -9.61753, 1.11 ) }
    dend_51 { pt3dadd( 25.357, 19.4108, -17.7127, 0.55 ) }
    dend_51 { pt3dadd( 25.5164, 19.6894, -19.4174, 0.83 ) }
    dend_51 { pt3dadd( 25.8388, 20.2529, -22.8652, 0.55 ) }
    dend_51 { pt3dadd( 26.2891, 21.0399, -27.6807, 0.55 ) }
    dend_51 { pt3dadd( 26.4158, 21.2613, -29.0352, 0.55 ) }
    dend_51 { pt3dadd( 26.6895, 21.7906, -31.8121, 0.55 ) }
    dend_51 { pt3dadd( 27.3826, 22.9271, -37.8115, 2.22 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 96/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 24.5384, 17.8108, -8.23186, 0.83 ) }
    dend_46 { pt3dadd( 27.2539, 16.7195, -8.07852, 0.83 ) }
    dend_46 { pt3dadd( 28.8964, 16.3011, -7.69287, 0.83 ) }
    dend_46 { pt3dadd( 32.8939, 15.2829, -6.75425, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_46 { pt3dadd( 37.6698, 14.0664, -5.63286, 0.83 ) }
    dend_46 { pt3dadd( 40.2106, 13.4192, -5.03627, 0.83 ) }
    dend_46 { pt3dadd( 44.6303, 12.2934, -3.9985, 0.83 ) }
    dend_46 { pt3dadd( 47.1593, 11.7731, -2.99835, 0.83 ) }
    // Section: dend_44, id: dend_44, parent: dend_40 (entry count 4/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 9.30392, 26.3556, -14.9434, 0.55 ) }
    dend_44 { pt3dadd( 9.19962, 26.6574, -15.5683, 0.55 ) }
    dend_44 { pt3dadd( 8.71406, 28.0805, -18.333, 0.55 ) }
    dend_44 { pt3dadd( 8.38937, 29.1114, -20.1325, 0.55 ) }
    dend_44 { pt3dadd( 6.93209, 34.4287, -28.7231, 0.83 ) }
    dend_44 { pt3dadd( 6.76774, 35.0526, -29.9074, 0.83 ) }
    dend_44 { pt3dadd( 6.24849, 37.3893, -35.0619, 0.55 ) }
    dend_44 { pt3dadd( 5.99774, 38.6191, -38.1851, 0.83 ) }
    dend_44 { pt3dadd( 5.88441, 39.2559, -40.0024, 0.55 ) }
    dend_44 { pt3dadd( 5.85964, 39.5981, -41.0871, 0.83 ) }
    dend_44 { pt3dadd( 6.61769, 43.9208, -56.3562, 0.55 ) }
    dend_44 { pt3dadd( 7.19857, 45.5671, -62.9066, 1.11 ) }
    dend_44 { pt3dadd( 7.81674, 46.6731, -67.6645, 0.55 ) }
    dend_44 { pt3dadd( 8.05159, 47.0155, -69.2172, 0.83 ) }
    dend_44 { pt3dadd( 9.12669, 48.3613, -75.7822, 0.28 ) }
    dend_44 { pt3dadd( 9.58569, 48.8363, -78.1426, 1.38 ) }
    dend_44 { pt3dadd( 12.3167, 50.9993, -88.0944, 0.55 ) }
    dend_44 { pt3dadd( 13.3094, 51.7915, -91.3051, 0.83 ) }
    dend_44 { pt3dadd( 14.1371, 52.4542, -93.794, 0.28 ) }
    dend_44 { pt3dadd( 15.9888, 53.9598, -98.7971, 0.83 ) }
    dend_44 { pt3dadd( 16.7671, 54.6306, -100.604, 0.28 ) }
    dend_44 { pt3dadd( 17.7418, 55.5271, -102.859, 0.83 ) }
    dend_44 { pt3dadd( 19.2452, 56.527, -104.913, 0.28 ) }
    dend_44 { pt3dadd( 19.2452, 56.527, -104.913, 0.55 ) }
    dend_44 { pt3dadd( 21.6693, 58.3027, -106.797, 0.28 ) }
    dend_44 { pt3dadd( 27.0515, 62.4061, -108.765, 0.83 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 9.30392, 26.3556, -14.9434, 1.11 ) }
    dend_41 { pt3dadd( 9.66197, 26.9515, -14.7607, 1.11 ) }
    dend_41 { pt3dadd( 11.6625, 30.4255, -13.9374, 1.11 ) }
    dend_41 { pt3dadd( 13.2617, 34.1873, -13.5526, 0.83 ) }
    dend_41 { pt3dadd( 14.3493, 37.4013, -13.3937, 0.83 ) }
    dend_41 { pt3dadd( 14.7417, 38.78, -13.3796, 0.83 ) }
    dend_41 { pt3dadd( 15.6076, 42.0112, -13.4244, 0.83 ) }
    dend_41 { pt3dadd( 16.1266, 44.5635, -13.551, 0.83 ) }
    dend_41 { pt3dadd( 16.7465, 49.3895, -13.9337, 0.83 ) }
    dend_41 { pt3dadd( 17.0231, 51.7875, -14.1235, 0.83 ) }
    dend_41 { pt3dadd( 17.5103, 55.0668, -14.3144, 0.83 ) }
    dend_41 { pt3dadd( 18.1241, 58.6652, -14.5102, 0.83 ) }
    dend_41 { pt3dadd( 18.6643, 61.8334, -14.6333, 0.83 ) }
    dend_41 { pt3dadd( 19.0662, 64.0129, -14.6966, 0.83 ) }
    dend_41 { pt3dadd( 19.7043, 66.9229, -14.6112, 0.83 ) }
    dend_41 { pt3dadd( 20.0849, 68.9452, -14.487, 1.11 ) }
    dend_41 { pt3dadd( 20.43, 70.9376, -14.2863, 1.11 ) }
    dend_41 { pt3dadd( 20.8546, 73.3653, -13.9784, 0.55 ) }
    dend_41 { pt3dadd( 21.0814, 74.4218, -13.8535, 0.55 ) }
    dend_41 { pt3dadd( 21.7562, 77.1068, -13.528, 0.55 ) }
    dend_41 { pt3dadd( 22.7711, 80.5054, -13.1493, 0.83 ) }
    dend_41 { pt3dadd( 23.7111, 82.7566, -12.8185, 0.83 ) }
    dend_41 { pt3dadd( 25.2854, 85.3458, -12.4351, 1.11 ) }
    dend_41 { pt3dadd( 26.6186, 86.9303, -12.1546, 0.83 ) }
    dend_41 { pt3dadd( 28.0109, 88.3346, -11.8809, 0.55 ) }
    dend_41 { pt3dadd( 29.8256, 89.8977, -11.5562, 0.83 ) }
    dend_41 { pt3dadd( 32.7017, 92.1696, -10.974, 0.55 ) }
    dend_41 { pt3dadd( 34.5487, 93.7898, -10.4806, 0.55 ) }
    dend_41 { pt3dadd( 36.3404, 95.5776, -9.9677, 0.28 ) }
    dend_41 { pt3dadd( 37.3906, 96.8643, -9.61334, 0.55 ) }
    dend_41 { pt3dadd( 38.1706, 98.0697, -9.34103, 0.55 ) }
    dend_41 { pt3dadd( 39.2852, 100.309, -8.9427, 0.55 ) }
    dend_41 { pt3dadd( 40.2747, 102.897, -8.64146, 0.55 ) }
    dend_41 { pt3dadd( 40.8798, 104.998, -8.3416, 0.28 ) }
    dend_41 { pt3dadd( 41.0706, 105.951, -8.26488, 0.55 ) }
    dend_41 { pt3dadd( 41.4564, 108.015, -8.21589, 0.55 ) }
    dend_41 { pt3dadd( 41.7967, 110.116, -8.21244, 0.55 ) }
    dend_41 { pt3dadd( 42.1197, 111.882, -8.22492, 0.83 ) }
    dend_41 { pt3dadd( 42.7003, 114.581, -8.23243, 0.55 ) }
    dend_41 { pt3dadd( 43.5316, 118.248, -8.17264, 0.55 ) }
    dend_41 { pt3dadd( 44.1391, 120.853, -8.1257, 0.55 ) }
    dend_41 { pt3dadd( 44.6611, 123.264, -8.1076, 0.83 ) }
    dend_41 { pt3dadd( 45.3471, 126.198, -8.13559, 0.83 ) }
    dend_41 { pt3dadd( 45.8859, 128.259, -8.19585, 0.55 ) }
    dend_41 { pt3dadd( 46.1921, 129.307, -8.21906, 0.83 ) }
    dend_41 { pt3dadd( 47.1455, 132.145, -8.22702, 0.83 ) }
    dend_41 { pt3dadd( 47.6504, 133.739, -8.27554, 0.28 ) }
    dend_41 { pt3dadd( 47.9237, 134.595, -8.35742, 0.55 ) }
    dend_41 { pt3dadd( 48.3708, 136.018, -8.58214, 0.28 ) }
    dend_41 { pt3dadd( 49.0168, 137.752, -8.98833, 0.83 ) }
    dend_41 { pt3dadd( 50.2988, 140.753, -9.84287, 0.83 ) }
    dend_41 { pt3dadd( 50.9886, 142.161, -10.3246, 0.28 ) }
    dend_41 { pt3dadd( 51.356, 142.902, -10.5471, 0.28 ) }
    dend_41 { pt3dadd( 51.7163, 143.689, -10.78, 0.83 ) }
    dend_41 { pt3dadd( 52.4424, 145.464, -11.2593, 0.28 ) }
    dend_41 { pt3dadd( 52.8985, 146.694, -11.6312, 0.83 ) }
    dend_41 { pt3dadd( 53.4879, 148.385, -12.0863, 0.55 ) }
    dend_41 { pt3dadd( 54.5534, 151.337, -13.0263, 0.55 ) }
    dend_41 { pt3dadd( 54.9948, 152.568, -13.431, 0.28 ) }
    dend_41 { pt3dadd( 55.5756, 154.282, -13.9612, 0.83 ) }
    dend_41 { pt3dadd( 56.3643, 156.834, -14.7042, 0.28 ) }
    dend_41 { pt3dadd( 57.152, 159.365, -15.4906, 1.11 ) }
    dend_41 { pt3dadd( 58.0573, 162.191, -16.4109, 0.28 ) }
    dend_41 { pt3dadd( 58.2912, 162.908, -16.6747, 0.55 ) }
    dend_41 { pt3dadd( 58.6456, 163.935, -17.0296, 0.28 ) }
    dend_41 { pt3dadd( 58.9061, 164.703, -17.3047, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 96/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 42.2954, -57.693, -92.8928, 0.28 ) }
    dend_38 { pt3dadd( 44.5942, -62.475, -93.3471, 0.28 ) }
    dend_38 { pt3dadd( 44.8762, -63.3741, -93.432, 0.55 ) }
    dend_38 { pt3dadd( 45.7185, -67.7641, -94.3225, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_38 { pt3dadd( 45.9185, -69.0973, -94.6452, 0.83 ) }
    dend_38 { pt3dadd( 46.4498, -73.4907, -95.8571, 0.28 ) }
    dend_38 { pt3dadd( 46.6239, -75.0897, -96.3215, 0.83 ) }
    dend_38 { pt3dadd( 46.8007, -78.2739, -97.5175, 0.28 ) }
    dend_38 { pt3dadd( 46.8402, -82.2476, -98.9474, 0.55 ) }
    dend_38 { pt3dadd( 46.817, -83.3868, -99.3343, 0.55 ) }
    dend_38 { pt3dadd( 46.8625, -85.4647, -100.106, 0.28 ) }
    dend_38 { pt3dadd( 46.9258, -86.1603, -100.38, 0.55 ) }
    dend_38 { pt3dadd( 47.1266, -87.1228, -100.753, 0.28 ) }
    dend_38 { pt3dadd( 47.5569, -88.3471, -101.227, 0.55 ) }
    dend_38 { pt3dadd( 48.5178, -90.5384, -101.893, 0.28 ) }
    dend_38 { pt3dadd( 48.8278, -91.1857, -102.067, 0.55 ) }
    dend_38 { pt3dadd( 50.0658, -93.3924, -102.632, 0.28 ) }
    dend_38 { pt3dadd( 50.2404, -93.6751, -102.712, 0.55 ) }
    dend_38 { pt3dadd( 51.4201, -95.4218, -103.21, 0.28 ) }
    dend_38 { pt3dadd( 52.0966, -96.3088, -103.452, 0.55 ) }
    dend_38 { pt3dadd( 53.9839, -98.4885, -103.993, 0.28 ) }
    dend_38 { pt3dadd( 54.99, -99.4655, -104.219, 0.55 ) }
    dend_38 { pt3dadd( 57.1764, -101.15, -104.411, 0.28 ) }
    dend_38 { pt3dadd( 58.4189, -101.92, -104.398, 0.55 ) }
    dend_38 { pt3dadd( 59.7214, -102.415, -104.391, 0.55 ) }
    dend_38 { pt3dadd( 61.2053, -102.641, -104.417, 0.28 ) }
    dend_38 { pt3dadd( 62.9532, -102.655, -104.427, 0.55 ) }
    dend_38 { pt3dadd( 65.8549, -102.379, -104.302, 0.28 ) }
    dend_38 { pt3dadd( 67.3099, -102.007, -104.203, 0.55 ) }
    dend_38 { pt3dadd( 71.976, -100.241, -104.053, 0.28 ) }
    dend_38 { pt3dadd( 73.1207, -99.6541, -104.099, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 27/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 42.2954, -57.693, -92.8928, 0.28 ) }
    dend_37 { pt3dadd( 48.6703, -55.814, -103.17, 0.28 ) }
    dend_37 { pt3dadd( 49.9307, -55.5101, -105.284, 0.83 ) }
    dend_37 { pt3dadd( 52.862, -54.9246, -110.154, 0.55 ) }
    dend_37 { pt3dadd( 53.5325, -54.8247, -111.24, 0.55 ) }
    dend_37 { pt3dadd( 55.881, -54.6314, -115.079, 0.83 ) }
    dend_37 { pt3dadd( 60.4651, -54.479, -122.719, 0.28 ) }
    dend_37 { pt3dadd( 63.6196, -54.8656, -128.692, 0.83 ) }
    dend_37 { pt3dadd( 64.6223, -55.0747, -130.802, 0.28 ) }
    dend_37 { pt3dadd( 65.4619, -55.315, -132.855, 0.83 ) }
    dend_37 { pt3dadd( 67.9968, -56.2184, -139.694, 0.28 ) }
    dend_37 { pt3dadd( 69.0629, -56.7058, -142.98, 1.11 ) }
    dend_37 { pt3dadd( 73.7114, -59.2254, -158.868, 0.28 ) }
    dend_37 { pt3dadd( 74.2618, -59.5524, -160.838, 0.55 ) }
    dend_37 { pt3dadd( 76.7645, -61.0317, -170.144, 0.28 ) }
    dend_37 { pt3dadd( 76.9317, -61.123, -170.773, 0.55 ) }
    dend_37 { pt3dadd( 79.1692, -62.2605, -178.926, 0.28 ) }
    dend_37 { pt3dadd( 79.543, -62.4307, -180.125, 0.55 ) }
    dend_37 { pt3dadd( 80.5245, -62.8166, -182.666, 0.28 ) }
    dend_37 { pt3dadd( 80.8789, -62.9627, -183.492, 0.55 ) }
    dend_37 { pt3dadd( 81.8158, -63.339, -185.39, 0.28 ) }
    dend_37 { pt3dadd( 82.1034, -63.4508, -185.957, 0.55 ) }
    dend_37 { pt3dadd( 87.2678, -65.4695, -195.69, 0.28 ) }
    dend_37 { pt3dadd( 88.6246, -66.0225, -198.389, 0.83 ) }
    dend_37 { pt3dadd( 91.3456, -67.242, -204.216, 0.28 ) }
    dend_37 { pt3dadd( 92.6333, -67.8899, -207.007, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_1 (entry count 53/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 7.71835, -40.6767, 1.8218, 0.55 ) }
    dend_35 { pt3dadd( 9.6151, -42.8033, 2.58251, 0.55 ) }
    dend_35 { pt3dadd( 10.7916, -44.0567, 3.09935, 1.11 ) }
    dend_35 { pt3dadd( 12.4228, -45.9438, 3.85527, 0.83 ) }
    dend_35 { pt3dadd( 14.0694, -48.0021, 4.55368, 0.83 ) }
    dend_35 { pt3dadd( 16.1747, -50.7182, 5.60245, 0.83 ) }
    dend_35 { pt3dadd( 17.3633, -52.2358, 6.23821, 0.83 ) }
    dend_35 { pt3dadd( 17.9487, -53.0465, 6.58798, 0.83 ) }
    dend_35 { pt3dadd( 18.9437, -54.5447, 7.25795, 0.83 ) }
    dend_35 { pt3dadd( 20.2147, -56.4595, 8.08157, 0.83 ) }
    dend_35 { pt3dadd( 22.3121, -59.6035, 9.64082, 0.83 ) }
    dend_35 { pt3dadd( 23.6761, -61.7268, 10.7184, 0.83 ) }
    dend_35 { pt3dadd( 25.0594, -63.9618, 11.7433, 0.83 ) }
    dend_35 { pt3dadd( 26.2908, -66.2015, 13.0801, 0.83 ) }
    dend_35 { pt3dadd( 27.639, -68.7637, 14.8644, 0.83 ) }
    dend_35 { pt3dadd( 29.2252, -72.5655, 18.0534, 0.83 ) }
    dend_35 { pt3dadd( 29.6628, -73.9416, 19.3488, 0.83 ) }
    dend_35 { pt3dadd( 30.0729, -76.4261, 22.1767, 0.83 ) }
    dend_35 { pt3dadd( 30.6091, -81.8259, 29.3814, 0.83 ) }
    dend_35 { pt3dadd( 30.7614, -83.5385, 31.8177, 0.83 ) }
    dend_35 { pt3dadd( 30.992, -86.3929, 36.0818, 0.83 ) }
    dend_35 { pt3dadd( 31.2513, -88.59, 39.3041, 0.83 ) }
    dend_35 { pt3dadd( 31.9026, -91.7081, 43.993, 0.83 ) }
    dend_35 { pt3dadd( 32.4115, -93.2776, 46.4385, 0.83 ) }
    dend_35 { pt3dadd( 33.4235, -95.2641, 49.234, 0.83 ) }
    dend_35 { pt3dadd( 34.6175, -97.1853, 52.247, 0.83 ) }
    dend_35 { pt3dadd( 35.3356, -98.0928, 53.6636, 0.83 ) }
    dend_35 { pt3dadd( 36.5387, -99.4682, 55.9537, 0.83 ) }
    dend_35 { pt3dadd( 37.9228, -101.019, 58.4555, 0.55 ) }
    dend_35 { pt3dadd( 38.5793, -101.879, 59.8295, 0.83 ) }
    dend_35 { pt3dadd( 39.987, -104.144, 63.4687, 0.55 ) }
    dend_35 { pt3dadd( 40.5844, -105.396, 65.2654, 0.83 ) }
    dend_35 { pt3dadd( 41.4542, -107.591, 67.9634, 0.55 ) }
    dend_35 { pt3dadd( 41.9217, -108.6, 69.0155, 0.55 ) }
    dend_35 { pt3dadd( 42.6634, -110.322, 70.5347, 0.55 ) }
    dend_35 { pt3dadd( 43.3494, -112.139, 71.9304, 0.55 ) }
    dend_35 { pt3dadd( 44.3598, -114.754, 73.4523, 0.55 ) }
    dend_35 { pt3dadd( 45.5365, -117.454, 74.8617, 0.55 ) }
    dend_35 { pt3dadd( 46.8441, -120.372, 75.9844, 0.55 ) }
    dend_35 { pt3dadd( 50.4515, -127.051, 81.1132, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 93/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 7.71835, -40.6767, 1.8218, 2.22 ) }
    dend_2 { pt3dadd( 6.64122, -44.0208, 3.96519, 2.22 ) }
    dend_2 { pt3dadd( 6.02924, -45.9207, 5.18296, 2.22 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 96/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 27.3826, 22.9271, -37.8115, 0.55 ) }
    dend_53 { pt3dadd( 27.9008, 24.5376, -41.6279, 0.55 ) }
    dend_53 { pt3dadd( 29.1226, 27.9977, -50.687, 0.28 ) }
    dend_53 { pt3dadd( 29.2615, 28.4054, -51.7514, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_53 { pt3dadd( 30.1634, 30.9757, -58.4085, 0.28 ) }
    dend_53 { pt3dadd( 30.4713, 31.9923, -60.9659, 1.11 ) }
    dend_53 { pt3dadd( 30.8001, 33.1645, -63.7615, 0.28 ) }
    dend_53 { pt3dadd( 31.0881, 35.414, -68.9913, 0.83 ) }
    dend_53 { pt3dadd( 31.0905, 35.8901, -70.0891, 0.28 ) }
    dend_53 { pt3dadd( 31.0527, 36.142, -70.6759, 0.55 ) }
    dend_53 { pt3dadd( 30.6603, 37.4543, -73.5431, 0.28 ) }
    dend_53 { pt3dadd( 30.2437, 38.5782, -75.9308, 0.55 ) }
    dend_53 { pt3dadd( 28.621, 42.1422, -83.4212, 0.28 ) }
    dend_53 { pt3dadd( 26.654, 46.1264, -91.6308, 0.55 ) }
    dend_53 { pt3dadd( 26.3789, 46.6512, -92.7852, 0.28 ) }
    dend_53 { pt3dadd( 26.131, 47.0949, -93.8153, 0.83 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 12/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 27.3826, 22.9271, -37.8115, 0.55 ) }
    dend_52 { pt3dadd( 25.78, 22.7453, -42.7409, 0.55 ) }
    dend_52 { pt3dadd( 23.8633, 22.5279, -48.6363, 0.55 ) }
    dend_52 { pt3dadd( 23.0111, 22.4313, -51.2577, 0.55 ) }
    dend_52 { pt3dadd( 19.5212, 22.0355, -61.9921, 0.28 ) }
    dend_52 { pt3dadd( 18.3685, 21.9048, -65.5374, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 18/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 47.1593, 11.7731, -2.99835, 0.55 ) }
    dend_48 { pt3dadd( 48.0859, 10.8032, -6.90362, 0.55 ) }
    dend_48 { pt3dadd( 48.5738, 10.3657, -9.16254, 0.83 ) }
    dend_48 { pt3dadd( 50.7119, 8.64524, -17.7942, 0.55 ) }
    dend_48 { pt3dadd( 51.1371, 8.35564, -19.6013, 0.55 ) }
    dend_48 { pt3dadd( 51.5604, 8.08402, -21.3479, 0.28 ) }
    dend_48 { pt3dadd( 52.1373, 7.74157, -23.493, 0.55 ) }
    dend_48 { pt3dadd( 54.1367, 6.92275, -31.0062, 0.28 ) }
    dend_48 { pt3dadd( 54.6431, 6.73199, -32.7956, 0.83 ) }
    dend_48 { pt3dadd( 56.8837, 5.83759, -39.9254, 0.55 ) }
    dend_48 { pt3dadd( 57.2717, 5.65897, -41.2124, 0.28 ) }
    dend_48 { pt3dadd( 58.1334, 5.30246, -43.7303, 0.28 ) }
    dend_48 { pt3dadd( 60.2176, 4.50062, -49.0364, 0.55 ) }
    dend_48 { pt3dadd( 61.6682, 3.89534, -52.2258, 0.55 ) }
    dend_48 { pt3dadd( 63.0264, 3.4229, -55.0095, 0.55 ) }
    dend_48 { pt3dadd( 65.1473, 2.81691, -59.1817, 0.55 ) }
    dend_48 { pt3dadd( 66.2148, 2.52807, -61.3589, 0.55 ) }
    dend_48 { pt3dadd( 67.9986, 2.06794, -65.0679, 0.28 ) }
    dend_48 { pt3dadd( 68.8573, 1.87864, -66.6069, 0.55 ) }
    dend_48 { pt3dadd( 70.3624, 1.73198, -69.0764, 0.28 ) }
    dend_48 { pt3dadd( 74.2985, 1.70773, -75.3436, 0.83 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 39/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 47.1593, 11.7731, -2.99835, 0.55 ) }
    dend_47 { pt3dadd( 49.6595, 12.4578, -1.81713, 0.55 ) }
    dend_47 { pt3dadd( 51.6669, 13.0797, -0.923383, 0.55 ) }
    dend_47 { pt3dadd( 56.1595, 14.2808, 1.06921, 0.55 ) }
    dend_47 { pt3dadd( 58.4335, 14.7658, 2.08968, 0.55 ) }
    dend_47 { pt3dadd( 61.1443, 15.1792, 3.29025, 0.55 ) }
    dend_47 { pt3dadd( 62.8016, 15.439, 4.17596, 0.55 ) }
    dend_47 { pt3dadd( 64.7365, 15.7123, 5.38665, 0.55 ) }
    dend_47 { pt3dadd( 66.5876, 15.8528, 6.66903, 0.55 ) }
    dend_47 { pt3dadd( 67.8258, 15.9089, 7.50106, 0.55 ) }
    dend_47 { pt3dadd( 70.4029, 15.9678, 9.36556, 0.55 ) }
    dend_47 { pt3dadd( 75.0345, 16.1279, 12.8704, 0.55 ) }
    dend_47 { pt3dadd( 76.7059, 16.2221, 14.1556, 0.55 ) }
    dend_47 { pt3dadd( 78.3851, 16.3473, 15.4117, 0.55 ) }
    dend_47 { pt3dadd( 80.3174, 16.5913, 16.8602, 0.55 ) }
    dend_47 { pt3dadd( 83.0058, 17.0851, 18.8394, 0.28 ) }
    dend_47 { pt3dadd( 83.3899, 17.1646, 19.1088, 0.55 ) }
    dend_47 { pt3dadd( 84.5894, 17.4311, 19.852, 0.28 ) }
    dend_47 { pt3dadd( 85.3478, 17.6625, 20.3467, 0.55 ) }
    dend_47 { pt3dadd( 87.8466, 18.361, 22.0028, 0.55 ) }
    dend_47 { pt3dadd( 89.7831, 18.8817, 23.3272, 0.28 ) }
    dend_47 { pt3dadd( 90.5988, 19.1018, 23.832, 0.55 ) }
    dend_47 { pt3dadd( 92.5159, 19.6723, 25.0584, 0.28 ) }
    dend_47 { pt3dadd( 93.4932, 20.0051, 25.7024, 0.55 ) }
    dend_47 { pt3dadd( 96.1428, 20.9284, 27.3269, 0.55 ) }
    dend_47 { pt3dadd( 103.734, 22.9771, 30.5087, 0.55 ) }
    dend_47 { pt3dadd( 111.636, 25.4091, 32.3351, 0.55 ) }
    dend_47 { pt3dadd( 119.241, 27.3127, 35.5834, 0.55 ) }
    dend_47 { pt3dadd( 126.789, 29.7582, 38.5597, 0.55 ) }
    dend_47 { pt3dadd( 133.744, 33.0373, 42.0793, 0.55 ) }
    dend_47 { pt3dadd( 140.294, 37.2069, 45.3413, 0.55 ) }
    dend_47 { pt3dadd( 147.227, 41.2096, 47.9576, 0.55 ) }
    dend_47 { pt3dadd( 154.375, 45.5519, 48.5064, 0.55 ) }
    dend_47 { pt3dadd( 161.143, 50.4041, 48.0873, 0.55 ) }
    dend_47 { pt3dadd( 167.974, 55.0311, 46.8765, 0.55 ) }
    dend_47 { pt3dadd( 175.377, 58.9457, 46.3763, 0.55 ) }
    dend_47 { pt3dadd( 183.35, 61.7182, 46.2678, 0.55 ) }
    dend_47 { pt3dadd( 191.12, 64.972, 46.4673, 0.55 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 77/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 58.9061, 164.703, -17.3047, 0.28 ) }
    dend_43 { pt3dadd( 60.5819, 166.849, -16.5465, 0.28 ) }
    dend_43 { pt3dadd( 61.2374, 167.817, -16.301, 0.83 ) }
    dend_43 { pt3dadd( 62.0156, 169.048, -16.1437, 0.83 ) }
    dend_43 { pt3dadd( 62.7602, 170.341, -16.0422, 0.28 ) }
    dend_43 { pt3dadd( 62.8753, 170.539, -16.0364, 0.55 ) }
    dend_43 { pt3dadd( 63.799, 172.249, -15.96, 0.55 ) }
    dend_43 { pt3dadd( 64.2117, 173.117, -16.0107, 1.11 ) }
    dend_43 { pt3dadd( 64.9383, 174.589, -16.1052, 0.55 ) }
    dend_43 { pt3dadd( 65.4986, 175.643, -16.1343, 0.55 ) }
    dend_43 { pt3dadd( 66.6125, 177.694, -16.1078, 0.55 ) }
    dend_43 { pt3dadd( 67.9703, 180.234, -16.0763, 0.55 ) }
    dend_43 { pt3dadd( 69.2674, 182.668, -16.0299, 0.55 ) }
    dend_43 { pt3dadd( 70.6257, 185.3, -16.0289, 1.11 ) }
    dend_43 { pt3dadd( 71.5364, 187.142, -16.0382, 0.28 ) }
    dend_43 { pt3dadd( 71.8386, 187.774, -16.0629, 0.55 ) }
    dend_43 { pt3dadd( 72.5412, 189.486, -16.2335, 0.28 ) }
    dend_43 { pt3dadd( 72.771, 190.161, -16.4621, 0.55 ) }
    dend_43 { pt3dadd( 73.0527, 191.252, -17.0557, 0.28 ) }
    dend_43 { pt3dadd( 73.2144, 192.003, -17.6238, 0.55 ) }
    dend_43 { pt3dadd( 73.4256, 192.715, -18.2817, 0.28 ) }
    dend_43 { pt3dadd( 73.9294, 193.815, -19.2406, 1.11 ) }
    dend_43 { pt3dadd( 76.2622, 196.353, -20.5843, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_43 { pt3dadd( 77.148, 196.98, -20.671, 0.55 ) }
    dend_43 { pt3dadd( 77.5592, 197.235, -20.6882, 1.11 ) }
    dend_43 { pt3dadd( 79.9222, 198.601, -20.7619, 0.28 ) }
    dend_43 { pt3dadd( 87.5673, 203.47, -21.9142, 0.83 ) }
    dend_43 { pt3dadd( 89.7969, 205.025, -22.3831, 0.28 ) }
    dend_43 { pt3dadd( 90.672, 205.815, -22.5903, 0.83 ) }
    dend_43 { pt3dadd( 92.6601, 208.114, -23.2935, 0.28 ) }
    dend_43 { pt3dadd( 93.6557, 209.451, -23.6725, 1.11 ) }
    dend_43 { pt3dadd( 95.7139, 212.731, -24.6413, 0.28 ) }
    dend_43 { pt3dadd( 96.3189, 213.775, -25.0852, 1.38 ) }
    dend_43 { pt3dadd( 98.8135, 217.484, -26.4068, 0.28 ) }
    dend_43 { pt3dadd( 99.2, 217.993, -26.5564, 0.55 ) }
    dend_43 { pt3dadd( 100.898, 219.806, -26.9149, 0.28 ) }
    dend_43 { pt3dadd( 101.835, 220.545, -27.0698, 1.11 ) }
    dend_43 { pt3dadd( 104.723, 222.116, -27.4156, 0.28 ) }
    dend_43 { pt3dadd( 105.224, 222.298, -27.5231, 0.55 ) }
    dend_43 { pt3dadd( 106.169, 222.49, -27.8195, 0.28 ) }
    dend_43 { pt3dadd( 107.322, 222.678, -28.2258, 0.83 ) }
    dend_43 { pt3dadd( 109.999, 223.022, -29.2711, 0.28 ) }
    dend_43 { pt3dadd( 110.838, 223.101, -29.5444, 0.55 ) }
    dend_43 { pt3dadd( 112.178, 223.203, -29.8621, 0.28 ) }
    dend_43 { pt3dadd( 112.409, 223.227, -29.9165, 0.55 ) }
    dend_43 { pt3dadd( 113.591, 223.374, -30.2059, 0.28 ) }
    dend_43 { pt3dadd( 113.831, 223.396, -30.264, 0.55 ) }
    dend_43 { pt3dadd( 115.018, 223.355, -30.6113, 0.28 ) }
    dend_43 { pt3dadd( 115.975, 223.272, -30.9197, 0.83 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 26/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 58.9061, 164.703, -17.3047, 0.28 ) }
    dend_42 { pt3dadd( 58.8555, 165.632, -19.29, 0.28 ) }
    dend_42 { pt3dadd( 58.7666, 166.085, -20.1932, 0.83 ) }
    dend_42 { pt3dadd( 58.2553, 167.91, -23.6333, 0.28 ) }
    dend_42 { pt3dadd( 57.4198, 170.0, -27.3716, 1.11 ) }
    dend_42 { pt3dadd( 56.1324, 172.608, -31.9115, 0.28 ) }
    dend_42 { pt3dadd( 55.1032, 174.333, -34.7403, 0.83 ) }
    dend_42 { pt3dadd( 53.766, 176.118, -37.5567, 0.28 ) }
    dend_42 { pt3dadd( 53.4164, 176.518, -38.1114, 0.55 ) }
    dend_42 { pt3dadd( 51.865, 178.097, -39.5037, 0.28 ) }
    dend_42 { pt3dadd( 51.2754, 178.702, -39.705, 0.83 ) }
    dend_42 { pt3dadd( 49.2822, 180.606, -39.7573, 0.28 ) }
    dend_42 { pt3dadd( 48.8352, 181.058, -39.7089, 0.55 ) }
    dend_42 { pt3dadd( 47.7988, 182.528, -39.6456, 0.28 ) }
    dend_42 { pt3dadd( 46.2411, 185.378, -39.3952, 0.55 ) }
    dend_42 { pt3dadd( 45.819, 186.845, -39.1906, 0.55 ) }
    // Section: dend_28, id: dend_28, parent: dend_2 (entry count 42/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 6.02924, -45.9207, 5.18296, 0.55 ) }
    dend_28 { pt3dadd( 5.19754, -47.4704, 4.82774, 0.55 ) }
    dend_28 { pt3dadd( 4.19541, -49.1352, 4.51096, 0.55 ) }
    dend_28 { pt3dadd( 3.11412, -51.1638, 3.97064, 0.55 ) }
    dend_28 { pt3dadd( 2.67889, -52.1187, 3.68123, 0.83 ) }
    dend_28 { pt3dadd( 2.34928, -52.9178, 3.415, 0.28 ) }
    dend_28 { pt3dadd( 2.07646, -53.6668, 3.12906, 1.11 ) }
    dend_28 { pt3dadd( 1.52094, -55.1916, 2.44351, 0.55 ) }
    dend_28 { pt3dadd( 1.01201, -57.1603, 1.51299, 0.55 ) }
    dend_28 { pt3dadd( 0.84567, -58.0764, 1.15564, 0.55 ) }
    dend_28 { pt3dadd( 0.667965, -59.3476, 0.7317, 0.55 ) }
    dend_28 { pt3dadd( 0.462801, -61.5242, 0.194903, 0.55 ) }
    dend_28 { pt3dadd( 0.374253, -62.9349, 0.0315165, 0.55 ) }
    dend_28 { pt3dadd( 0.27058, -64.2611, 0.144756, 0.55 ) }
    dend_28 { pt3dadd( -0.179226, -66.8181, 0.968199, 0.55 ) }
    dend_28 { pt3dadd( -0.368857, -67.7829, 1.37799, 0.55 ) }
    dend_28 { pt3dadd( -0.674483, -69.2766, 2.22908, 0.55 ) }
    dend_28 { pt3dadd( -0.927186, -70.3411, 3.02983, 0.55 ) }
    dend_28 { pt3dadd( -1.47911, -72.3021, 4.76395, 0.83 ) }
    dend_28 { pt3dadd( -1.98264, -73.6183, 6.07334, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 62/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 6.02924, -45.9207, 5.18296, 1.11 ) }
    dend_3 { pt3dadd( 7.47061, -48.3854, 5.28485, 1.11 ) }
    dend_3 { pt3dadd( 8.64474, -50.3932, 5.36784, 1.11 ) }
    dend_3 { pt3dadd( 10.7513, -53.9954, 5.51674, 1.38 ) }
    dend_3 { pt3dadd( 13.5992, -58.8653, 5.71805, 1.66 ) }
    dend_3 { pt3dadd( 15.4259, -61.9889, 5.84717, 1.94 ) }
    dend_3 { pt3dadd( 17.649, -65.7903, 6.0043, 1.38 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 69/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 26.131, 47.0949, -93.8153, 0.28 ) }
    dend_55 { pt3dadd( 24.9072, 47.7504, -94.3178, 0.28 ) }
    dend_55 { pt3dadd( 23.9671, 48.2539, -94.7038, 0.83 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 72/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 26.131, 47.0949, -93.8153, 0.28 ) }
    dend_54 { pt3dadd( 26.6473, 46.9514, -94.958, 0.28 ) }
    dend_54 { pt3dadd( 27.0387, 46.8285, -95.6797, 0.83 ) }
    dend_54 { pt3dadd( 29.7186, 45.9479, -100.015, 0.28 ) }
    dend_54 { pt3dadd( 29.8717, 45.8996, -100.403, 0.55 ) }
    dend_54 { pt3dadd( 30.3595, 45.7422, -101.733, 0.28 ) }
    dend_54 { pt3dadd( 30.3833, 45.7333, -101.814, 0.55 ) }
    dend_54 { pt3dadd( 30.6956, 45.5921, -103.054, 0.28 ) }
    dend_54 { pt3dadd( 30.7462, 45.5695, -103.252, 0.83 ) }
    dend_54 { pt3dadd( 32.8291, 44.6839, -111.161, 0.28 ) }
    dend_54 { pt3dadd( 33.0268, 44.6113, -111.913, 0.83 ) }
    dend_54 { pt3dadd( 34.5307, 44.1605, -117.849, 0.28 ) }
    dend_54 { pt3dadd( 34.6397, 44.1298, -118.292, 0.83 ) }
    dend_54 { pt3dadd( 34.9988, 44.0411, -119.828, 0.28 ) }
    dend_54 { pt3dadd( 35.1053, 44.0146, -120.246, 0.55 ) }
    dend_54 { pt3dadd( 35.8741, 43.843, -122.168, 0.28 ) }
    dend_54 { pt3dadd( 36.2781, 43.7939, -123.147, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 89/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 74.2985, 1.70773, -75.3436, 0.28 ) }
    dend_50 { pt3dadd( 74.0667, -1.65912, -73.9439, 0.28 ) }
    dend_50 { pt3dadd( 73.9322, -3.6127, -73.1317, 0.28 ) }
    dend_50 { pt3dadd( 73.8653, -4.58448, -72.7277, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 93/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 74.2985, 1.70773, -75.3436, 0.28 ) }
    dend_49 { pt3dadd( 75.36, 2.81078, -77.9528, 0.28 ) }
    dend_49 { pt3dadd( 75.6246, 3.17063, -79.8271, 0.55 ) }
    dend_49 { pt3dadd( 75.7995, 3.47391, -82.0556, 0.28 ) }
    dend_49 { pt3dadd( 75.8466, 3.5743, -82.8142, 0.55 ) }
    dend_49 { pt3dadd( 76.042, 3.95327, -85.6219, 0.28 ) }
    dend_49 { pt3dadd( 76.3997, 4.59997, -90.1567, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_49 { pt3dadd( 77.515, 6.55229, -104.399, 0.28 ) }
    dend_49 { pt3dadd( 78.2124, 7.83427, -114.29, 0.55 ) }
    dend_49 { pt3dadd( 79.0476, 9.34199, -126.761, 0.28 ) }
    dend_49 { pt3dadd( 79.1685, 9.54449, -128.52, 0.55 ) }
    dend_49 { pt3dadd( 79.884, 10.4987, -137.462, 0.28 ) }
    dend_49 { pt3dadd( 80.1105, 10.7777, -139.931, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 6/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -1.98264, -73.6183, 6.07334, 0.55 ) }
    dend_30 { pt3dadd( -2.63667, -75.5463, 8.11476, 0.55 ) }
    dend_30 { pt3dadd( -3.71321, -78.3954, 11.1282, 0.83 ) }
    dend_30 { pt3dadd( -4.64849, -80.7895, 13.664, 0.55 ) }
    dend_30 { pt3dadd( -4.82629, -81.2671, 14.1301, 0.83 ) }
    dend_30 { pt3dadd( -6.18245, -84.5331, 17.0679, 0.55 ) }
    dend_30 { pt3dadd( -7.69648, -88.1978, 19.9992, 0.55 ) }
    dend_30 { pt3dadd( -8.39968, -90.0534, 21.3222, 0.55 ) }
    dend_30 { pt3dadd( -9.6064, -93.6947, 23.5384, 0.55 ) }
    dend_30 { pt3dadd( -10.8574, -97.6812, 25.5108, 0.55 ) }
    dend_30 { pt3dadd( -12.3177, -101.845, 27.1017, 0.55 ) }
    dend_30 { pt3dadd( -13.4616, -104.984, 27.7048, 0.55 ) }
    dend_30 { pt3dadd( -14.285, -107.39, 27.8492, 0.55 ) }
    dend_30 { pt3dadd( -15.1015, -109.709, 27.8215, 0.55 ) }
    dend_30 { pt3dadd( -16.0513, -112.2, 27.5432, 0.55 ) }
    dend_30 { pt3dadd( -17.3504, -115.748, 26.7858, 0.55 ) }
    dend_30 { pt3dadd( -18.6085, -119.441, 25.8241, 0.55 ) }
    dend_30 { pt3dadd( -19.8365, -122.945, 24.8897, 0.55 ) }
    dend_30 { pt3dadd( -20.8696, -125.971, 24.0639, 0.55 ) }
    dend_30 { pt3dadd( -22.2176, -130.548, 22.8352, 0.55 ) }
    dend_30 { pt3dadd( -23.1452, -134.882, 21.8107, 0.55 ) }
    dend_30 { pt3dadd( -23.6279, -138.221, 21.151, 0.55 ) }
    dend_30 { pt3dadd( -23.8297, -139.709, 20.9409, 0.28 ) }
    dend_30 { pt3dadd( -23.9885, -140.916, 20.7567, 0.83 ) }
    dend_30 { pt3dadd( -24.1479, -142.69, 20.5591, 0.55 ) }
    dend_30 { pt3dadd( -24.515, -145.496, 20.3633, 0.55 ) }
    dend_30 { pt3dadd( -24.8681, -147.171, 20.3867, 0.28 ) }
    dend_30 { pt3dadd( -25.6105, -150.149, 20.3959, 0.55 ) }
    dend_30 { pt3dadd( -26.4047, -152.851, 20.3626, 0.83 ) }
    dend_30 { pt3dadd( -27.0884, -154.937, 20.32, 0.55 ) }
    dend_30 { pt3dadd( -27.8194, -156.928, 20.25, 0.55 ) }
    dend_30 { pt3dadd( -28.7678, -159.207, 20.0804, 0.83 ) }
    dend_30 { pt3dadd( -29.5537, -160.954, 19.9052, 0.55 ) }
    dend_30 { pt3dadd( -30.2597, -162.647, 19.8086, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 40/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -1.98264, -73.6183, 6.07334, 0.83 ) }
    dend_29 { pt3dadd( 1.11871, -77.198, -1.92652, 0.83 ) }
    dend_29 { pt3dadd( 1.74467, -78.0425, -3.43085, 0.28 ) }
    dend_29 { pt3dadd( 2.42995, -79.1151, -4.94176, 0.55 ) }
    dend_29 { pt3dadd( 2.9927, -80.0689, -5.88245, 0.55 ) }
    dend_29 { pt3dadd( 3.82419, -82.1616, -7.29966, 0.55 ) }
    dend_29 { pt3dadd( 4.49014, -86.4767, -8.58502, 0.55 ) }
    dend_29 { pt3dadd( 4.468, -88.1145, -8.62183, 0.55 ) }
    dend_29 { pt3dadd( 4.21951, -90.0894, -8.44978, 0.55 ) }
    dend_29 { pt3dadd( 3.58689, -94.5629, -7.97237, 0.55 ) }
    dend_29 { pt3dadd( 1.9409, -103.416, -6.95713, 0.55 ) }
    dend_29 { pt3dadd( 1.2079, -106.346, -6.52031, 0.55 ) }
    dend_29 { pt3dadd( -0.302825, -111.706, -5.31437, 0.55 ) }
    dend_29 { pt3dadd( -1.59747, -116.72, -4.58918, 0.28 ) }
    dend_29 { pt3dadd( -2.41078, -121.666, -4.59682, 0.55 ) }
    dend_29 { pt3dadd( -2.19127, -122.999, -5.11158, 0.28 ) }
    dend_29 { pt3dadd( -1.79034, -123.875, -5.6814, 0.55 ) }
    dend_29 { pt3dadd( -1.31481, -124.825, -6.30849, 0.55 ) }
    dend_29 { pt3dadd( -0.335673, -127.273, -7.45558, 0.28 ) }
    dend_29 { pt3dadd( -0.0650134, -127.921, -7.77654, 0.55 ) }
    dend_29 { pt3dadd( 0.627728, -130.288, -8.71355, 0.55 ) }
    dend_29 { pt3dadd( 1.54858, -133.452, -10.0721, 0.28 ) }
    dend_29 { pt3dadd( 1.61891, -133.755, -10.215, 0.55 ) }
    dend_29 { pt3dadd( 1.97498, -136.025, -11.3074, 0.28 ) }
    dend_29 { pt3dadd( 1.97498, -136.025, -11.3074, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_3 (entry count 65/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 17.649, -65.7903, 6.0043, 0.83 ) }
    dend_23 { pt3dadd( 18.9201, -67.9705, 7.41065, 0.83 ) }
    dend_23 { pt3dadd( 21.4479, -71.2989, 9.79652, 0.83 ) }
    dend_23 { pt3dadd( 22.2501, -72.1302, 10.5128, 0.83 ) }
    dend_23 { pt3dadd( 24.4915, -74.2356, 12.4249, 1.11 ) }
    dend_23 { pt3dadd( 25.8731, -75.5644, 13.5014, 0.83 ) }
    dend_23 { pt3dadd( 26.5475, -76.2228, 14.0054, 0.83 ) }
    dend_23 { pt3dadd( 28.6201, -78.2052, 15.5839, 0.83 ) }
    dend_23 { pt3dadd( 30.2592, -79.6631, 16.7581, 0.83 ) }
    dend_23 { pt3dadd( 31.1986, -80.502, 17.4441, 0.83 ) }
    dend_23 { pt3dadd( 32.7536, -81.9819, 18.7149, 0.83 ) }
    dend_23 { pt3dadd( 34.2006, -83.7302, 20.2577, 0.83 ) }
    dend_23 { pt3dadd( 35.7587, -86.1666, 22.3457, 0.83 ) }
    dend_23 { pt3dadd( 36.5616, -87.7296, 23.6001, 0.83 ) }
    dend_23 { pt3dadd( 37.4031, -89.8332, 25.5359, 0.83 ) }
    dend_23 { pt3dadd( 37.9475, -91.5728, 27.285, 0.83 ) }
    dend_23 { pt3dadd( 38.7211, -94.4066, 30.2604, 0.83 ) }
    dend_23 { pt3dadd( 39.2554, -96.5203, 32.363, 0.83 ) }
    dend_23 { pt3dadd( 39.568, -97.4681, 33.3886, 0.83 ) }
    dend_23 { pt3dadd( 41.1127, -100.907, 37.4606, 0.83 ) }
    dend_23 { pt3dadd( 41.6246, -101.878, 38.6087, 0.83 ) }
    dend_23 { pt3dadd( 43.276, -104.11, 41.3606, 0.83 ) }
    dend_23 { pt3dadd( 44.4884, -105.451, 43.1063, 0.83 ) }
    dend_23 { pt3dadd( 47.0196, -108.208, 46.7061, 0.83 ) }
    dend_23 { pt3dadd( 48.3252, -109.542, 48.4052, 0.83 ) }
    dend_23 { pt3dadd( 50.1149, -111.244, 50.2482, 0.83 ) }
    dend_23 { pt3dadd( 53.6173, -114.818, 53.6895, 0.83 ) }
    dend_23 { pt3dadd( 55.3309, -116.895, 55.2504, 0.83 ) }
    dend_23 { pt3dadd( 56.515, -118.718, 56.2193, 0.83 ) }
    dend_23 { pt3dadd( 57.4646, -120.389, 56.7485, 0.83 ) }
    dend_23 { pt3dadd( 59.1741, -123.311, 57.2284, 0.83 ) }
    dend_23 { pt3dadd( 60.1258, -124.908, 57.2508, 0.55 ) }
    dend_23 { pt3dadd( 61.3214, -127.026, 56.9126, 0.83 ) }
    dend_23 { pt3dadd( 62.2417, -128.892, 56.7068, 0.83 ) }
    dend_23 { pt3dadd( 63.5875, -131.883, 56.6497, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_23 { pt3dadd( 64.6189, -134.83, 56.8004, 0.55 ) }
    dend_23 { pt3dadd( 65.3821, -137.303, 57.0857, 0.55 ) }
    dend_23 { pt3dadd( 66.1466, -140.068, 57.4669, 0.55 ) }
    dend_23 { pt3dadd( 67.6599, -145.655, 58.3715, 0.55 ) }
    dend_23 { pt3dadd( 68.5264, -148.969, 58.9839, 0.55 ) }
    dend_23 { pt3dadd( 69.3041, -152.523, 59.7011, 0.55 ) }
    dend_23 { pt3dadd( 69.6692, -154.309, 60.0911, 0.55 ) }
    dend_23 { pt3dadd( 70.3421, -157.036, 60.6062, 0.55 ) }
    dend_23 { pt3dadd( 71.0401, -159.278, 61.0022, 0.55 ) }
    dend_23 { pt3dadd( 71.5087, -160.46, 61.2561, 0.83 ) }
    dend_23 { pt3dadd( 72.4484, -162.481, 62.0412, 0.83 ) }
    dend_23 { pt3dadd( 73.4285, -164.12, 62.9454, 0.83 ) }
    dend_23 { pt3dadd( 75.2032, -166.723, 64.6794, 0.55 ) }
    dend_23 { pt3dadd( 76.6899, -168.542, 66.0848, 0.83 ) }
    dend_23 { pt3dadd( 79.289, -171.631, 68.4607, 0.55 ) }
    dend_23 { pt3dadd( 80.9276, -173.54, 69.8345, 0.83 ) }
    dend_23 { pt3dadd( 82.1609, -175.031, 70.7548, 0.55 ) }
    dend_23 { pt3dadd( 82.9055, -176.035, 71.2494, 0.55 ) }
    dend_23 { pt3dadd( 83.9448, -177.784, 71.7933, 0.55 ) }
    dend_23 { pt3dadd( 85.0762, -179.829, 72.0933, 0.83 ) }
    dend_23 { pt3dadd( 86.5415, -182.608, 72.254, 0.55 ) }
    dend_23 { pt3dadd( 87.8142, -185.369, 72.4219, 0.83 ) }
    dend_23 { pt3dadd( 88.0289, -185.906, 72.4706, 0.55 ) }
    dend_23 { pt3dadd( 88.5125, -187.334, 72.6362, 0.55 ) }
    dend_23 { pt3dadd( 89.1135, -189.546, 73.1288, 0.55 ) }
    dend_23 { pt3dadd( 89.7178, -192.167, 73.8609, 0.55 ) }
    dend_23 { pt3dadd( 90.0688, -193.925, 74.3729, 0.55 ) }
    dend_23 { pt3dadd( 90.3073, -195.686, 74.8387, 0.83 ) }
    dend_23 { pt3dadd( 90.4575, -197.123, 75.2455, 0.83 ) }
    dend_23 { pt3dadd( 90.7274, -200.919, 76.2391, 1.11 ) }
    dend_23 { pt3dadd( 90.8067, -203.608, 76.8566, 0.55 ) }
    dend_23 { pt3dadd( 90.8645, -205.59, 77.2636, 0.55 ) }
    dend_23 { pt3dadd( 90.9257, -207.629, 77.7028, 0.55 ) }
    dend_23 { pt3dadd( 91.1554, -210.833, 78.4229, 0.55 ) }
    dend_23 { pt3dadd( 91.3808, -212.625, 78.808, 0.55 ) }
    dend_23 { pt3dadd( 91.5735, -213.739, 78.9702, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 36/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 17.649, -65.7903, 6.0043, 2.22 ) }
    dend_4 { pt3dadd( 15.9063, -70.1376, 5.98834, 2.22 ) }
    dend_4 { pt3dadd( 14.5265, -74.3151, 5.73097, 1.94 ) }
    dend_4 { pt3dadd( 13.355, -77.8623, 5.51242, 1.94 ) }
    dend_4 { pt3dadd( 11.9891, -81.9978, 5.25763, 1.94 ) }
    dend_4 { pt3dadd( 10.9658, -85.0961, 5.06674, 1.94 ) }
    dend_4 { pt3dadd( 9.00954, -91.0191, 4.70182, 1.66 ) }
    dend_4 { pt3dadd( 6.9604, -96.8433, 4.4313, 1.66 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 44/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 23.9671, 48.2539, -94.7038, 0.28 ) }
    dend_57 { pt3dadd( 22.882, 48.735, -92.3754, 0.28 ) }
    dend_57 { pt3dadd( 22.0346, 49.1108, -90.5569, 0.83 ) }
    dend_57 { pt3dadd( 18.9141, 50.4946, -83.8605, 0.28 ) }
    dend_57 { pt3dadd( 17.3688, 51.1798, -80.5444, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 49/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 23.9671, 48.2539, -94.7038, 0.28 ) }
    dend_56 { pt3dadd( 23.9572, 51.2774, -108.454, 0.28 ) }
    dend_56 { pt3dadd( 23.9629, 51.3452, -108.736, 0.55 ) }
    dend_56 { pt3dadd( 24.0456, 52.254, -112.493, 0.28 ) }
    dend_56 { pt3dadd( 24.069, 52.5242, -113.564, 0.55 ) }
    dend_56 { pt3dadd( 24.2782, 54.964, -122.605, 0.28 ) }
    dend_56 { pt3dadd( 24.3902, 56.2598, -127.161, 1.11 ) }
    dend_56 { pt3dadd( 24.876, 59.3544, -136.611, 0.83 ) }
    dend_56 { pt3dadd( 25.3082, 61.7913, -143.76, 0.28 ) }
    dend_56 { pt3dadd( 25.4294, 62.4781, -145.793, 0.55 ) }
    dend_56 { pt3dadd( 25.572, 63.3903, -148.465, 0.28 ) }
    dend_56 { pt3dadd( 25.5994, 63.8545, -149.619, 0.83 ) }
    dend_56 { pt3dadd( 25.5729, 64.3332, -150.898, 0.28 ) }
    dend_56 { pt3dadd( 25.6446, 64.8235, -151.818, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 63/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -30.2597, -162.647, 19.8086, 0.28 ) }
    dend_34 { pt3dadd( -32.1556, -163.156, 18.9105, 0.28 ) }
    dend_34 { pt3dadd( -32.385, -163.185, 18.8053, 0.55 ) }
    dend_34 { pt3dadd( -33.1642, -163.283, 18.4478, 0.28 ) }
    dend_34 { pt3dadd( -34.2908, -163.425, 17.931, 0.55 ) }
    dend_34 { pt3dadd( -35.8273, -163.618, 17.2262, 0.55 ) }
    dend_34 { pt3dadd( -38.319, -163.932, 16.0832, 0.55 ) }
    dend_34 { pt3dadd( -39.9296, -164.043, 15.5566, 0.55 ) }
    dend_34 { pt3dadd( -45.2133, -163.958, 13.2411, 0.55 ) }
    dend_34 { pt3dadd( -50.04, -162.915, 10.2733, 0.55 ) }
    dend_34 { pt3dadd( -54.598, -161.408, 7.10607, 0.55 ) }
    dend_34 { pt3dadd( -59.5335, -160.31, 4.34681, 0.55 ) }
    dend_34 { pt3dadd( -64.1559, -159.788, 0.936392, 0.55 ) }
    dend_34 { pt3dadd( -68.7384, -159.173, -2.51106, 0.55 ) }
    dend_34 { pt3dadd( -72.8041, -157.772, -6.33638, 0.55 ) }
    dend_34 { pt3dadd( -77.4287, -155.835, -9.12651, 0.55 ) }
    dend_34 { pt3dadd( -81.5438, -153.228, -12.1087, 0.55 ) }
    dend_34 { pt3dadd( -85.2719, -150.642, -15.582, 0.55 ) }
    dend_34 { pt3dadd( -88.8216, -148.166, -19.3228, 0.55 ) }
    dend_34 { pt3dadd( -92.0271, -145.631, -23.3235, 0.55 ) }
    dend_34 { pt3dadd( -95.3696, -143.402, -27.4112, 0.55 ) }
    dend_34 { pt3dadd( -98.3146, -141.693, -32.0444, 0.55 ) }
    dend_34 { pt3dadd( -102.145, -140.679, -36.2302, 0.55 ) }
    dend_34 { pt3dadd( -105.909, -138.652, -40.0571, 0.55 ) }
    dend_34 { pt3dadd( -109.031, -137.299, -44.7022, 0.55 ) }
    dend_34 { pt3dadd( -112.152, -137.012, -49.5463, 0.55 ) }
    dend_34 { pt3dadd( -115.272, -136.551, -54.3769, 0.55 ) }
    dend_34 { pt3dadd( -119.574, -137.016, -58.1873, 0.55 ) }
    dend_34 { pt3dadd( -124.164, -138.513, -61.3013, 0.55 ) }
    dend_34 { pt3dadd( -127.631, -140.793, -65.2267, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 93/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -30.2597, -162.647, 19.8086, 0.55 ) }
    dend_31 { pt3dadd( -30.4786, -164.332, 20.2272, 0.55 ) }
    dend_31 { pt3dadd( -30.784, -166.684, 20.811, 0.55 ) }
    dend_31 { pt3dadd( -30.9556, -168.005, 21.1391, 0.55 ) }
    dend_31 { pt3dadd( -31.3794, -171.268, 21.9493, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_23 (entry count 98/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 91.5735, -213.739, 78.9702, 0.55 ) }
    dend_27 { pt3dadd( 92.9832, -214.712, 79.3796, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_27 { pt3dadd( 94.5625, -215.803, 79.8383, 0.55 ) }
    dend_27 { pt3dadd( 95.6959, -216.585, 80.1675, 0.55 ) }
    dend_27 { pt3dadd( 102.811, -221.282, 82.3624, 0.55 ) }
    dend_27 { pt3dadd( 110.767, -224.596, 84.4737, 0.55 ) }
    dend_27 { pt3dadd( 118.696, -228.482, 84.7796, 0.55 ) }
    dend_27 { pt3dadd( 127.036, -230.74, 86.969, 0.55 ) }
    dend_27 { pt3dadd( 135.471, -233.065, 88.6413, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 7/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 91.5735, -213.739, 78.9702, 0.55 ) }
    dend_24 { pt3dadd( 88.7612, -214.69, 80.6293, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_4 (entry count 9/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 6.9604, -96.8433, 4.4313, 1.38 ) }
    dend_22 { pt3dadd( 5.5283, -98.2076, 5.53001, 1.38 ) }
    dend_22 { pt3dadd( 3.35358, -100.299, 7.21874, 1.38 ) }
    dend_22 { pt3dadd( -1.62592, -105.215, 10.9561, 1.38 ) }
    dend_22 { pt3dadd( -5.1614, -108.7, 13.2566, 1.38 ) }
    dend_22 { pt3dadd( -8.23218, -111.613, 14.9459, 1.11 ) }
    dend_22 { pt3dadd( -11.9278, -115.013, 16.6895, 1.11 ) }
    dend_22 { pt3dadd( -13.1295, -116.053, 17.1885, 0.83 ) }
    dend_22 { pt3dadd( -14.6022, -117.264, 17.657, 1.11 ) }
    dend_22 { pt3dadd( -17.4892, -119.92, 17.966, 0.83 ) }
    dend_22 { pt3dadd( -19.1138, -121.609, 18.1098, 0.83 ) }
    dend_22 { pt3dadd( -20.8992, -123.751, 18.5007, 0.83 ) }
    dend_22 { pt3dadd( -21.8001, -124.983, 18.7975, 0.83 ) }
    dend_22 { pt3dadd( -22.5932, -126.355, 19.1657, 0.83 ) }
    dend_22 { pt3dadd( -24.6381, -131.203, 20.2819, 0.83 ) }
    dend_22 { pt3dadd( -26.5337, -136.027, 21.6328, 1.11 ) }
    dend_22 { pt3dadd( -28.347, -140.963, 22.5459, 0.83 ) }
    dend_22 { pt3dadd( -29.2004, -143.687, 22.7515, 0.83 ) }
    dend_22 { pt3dadd( -30.409, -148.417, 22.4047, 0.83 ) }
    dend_22 { pt3dadd( -30.8692, -153.37, 20.2087, 0.83 ) }
    dend_22 { pt3dadd( -30.3192, -160.172, 13.9319, 0.83 ) }
    dend_22 { pt3dadd( -29.4981, -165.278, 7.77085, 0.83 ) }
    dend_22 { pt3dadd( -28.8548, -168.314, 3.56849, 0.83 ) }
    dend_22 { pt3dadd( -28.1666, -171.586, -1.32972, 0.83 ) }
    dend_22 { pt3dadd( -26.5345, -179.865, -14.3333, 0.83 ) }
    dend_22 { pt3dadd( -26.1559, -181.462, -17.0397, 0.83 ) }
    dend_22 { pt3dadd( -25.4519, -183.901, -21.1345, 0.83 ) }
    dend_22 { pt3dadd( -25.3564, -186.122, -23.7013, 0.83 ) }
    dend_22 { pt3dadd( -26.4456, -188.759, -24.7292, 0.83 ) }
    dend_22 { pt3dadd( -29.1044, -193.091, -24.9238, 0.83 ) }
    dend_22 { pt3dadd( -30.3389, -194.958, -24.8003, 0.83 ) }
    dend_22 { pt3dadd( -32.9123, -198.798, -24.7877, 0.83 ) }
    dend_22 { pt3dadd( -34.976, -201.921, -25.2705, 0.83 ) }
    dend_22 { pt3dadd( -36.271, -203.936, -25.7617, 0.83 ) }
    dend_22 { pt3dadd( -37.9817, -207.03, -26.7545, 0.83 ) }
    dend_22 { pt3dadd( -39.8756, -210.976, -28.21, 0.83 ) }
    dend_22 { pt3dadd( -40.8701, -213.514, -29.0278, 0.83 ) }
    dend_22 { pt3dadd( -42.2198, -217.387, -30.0962, 0.83 ) }
    dend_22 { pt3dadd( -43.233, -220.851, -30.9071, 0.83 ) }
    dend_22 { pt3dadd( -44.3116, -224.988, -31.6946, 0.83 ) }
    dend_22 { pt3dadd( -44.8778, -227.515, -32.0656, 0.83 ) }
    dend_22 { pt3dadd( -45.7296, -231.764, -32.5377, 0.83 ) }
    dend_22 { pt3dadd( -46.3976, -235.737, -32.8036, 0.83 ) }
    dend_22 { pt3dadd( -46.8219, -238.231, -32.7472, 0.83 ) }
    dend_22 { pt3dadd( -47.3269, -240.88, -32.6599, 0.83 ) }
    dend_22 { pt3dadd( -47.6571, -242.493, -32.5365, 0.83 ) }
    dend_22 { pt3dadd( -48.1435, -245.019, -32.3978, 0.83 ) }
    dend_22 { pt3dadd( -48.7937, -248.051, -32.286, 0.83 ) }
    dend_22 { pt3dadd( -49.7877, -253.812, -32.2755, 0.83 ) }
    dend_22 { pt3dadd( -50.3186, -256.38, -32.2305, 0.83 ) }
    dend_22 { pt3dadd( -51.0892, -259.83, -32.1497, 0.83 ) }
    dend_22 { pt3dadd( -51.9899, -263.756, -32.0868, 0.83 ) }
    dend_22 { pt3dadd( -53.4604, -270.003, -32.1092, 0.83 ) }
    dend_22 { pt3dadd( -54.28, -273.15, -32.2564, 0.83 ) }
    dend_22 { pt3dadd( -55.9149, -278.832, -32.6596, 0.83 ) }
    dend_22 { pt3dadd( -56.5016, -280.807, -32.7176, 0.83 ) }
    dend_22 { pt3dadd( -57.3257, -283.367, -32.6523, 0.83 ) }
    dend_22 { pt3dadd( -58.0908, -285.533, -32.4854, 0.83 ) }
    dend_22 { pt3dadd( -59.0193, -288.246, -32.5427, 0.83 ) }
    dend_22 { pt3dadd( -60.4623, -292.055, -32.9555, 0.83 ) }
    dend_22 { pt3dadd( -61.1576, -293.891, -33.3976, 0.83 ) }
    dend_22 { pt3dadd( -62.3468, -297.113, -34.6345, 0.83 ) }
    dend_22 { pt3dadd( -62.9616, -299.048, -35.7058, 0.83 ) }
    dend_22 { pt3dadd( -64.3472, -304.465, -39.4234, 0.83 ) }
    dend_22 { pt3dadd( -64.8779, -306.685, -40.9726, 0.83 ) }
    dend_22 { pt3dadd( -65.5727, -309.645, -43.081, 0.83 ) }
    dend_22 { pt3dadd( -66.6594, -314.214, -46.192, 0.83 ) }
    dend_22 { pt3dadd( -67.5674, -318.693, -49.2503, 0.83 ) }
    dend_22 { pt3dadd( -67.9168, -320.859, -50.5099, 0.83 ) }
    dend_22 { pt3dadd( -68.6193, -325.435, -52.3055, 1.11 ) }
    dend_22 { pt3dadd( -68.8568, -327.166, -52.9233, 0.28 ) }
    dend_22 { pt3dadd( -68.8989, -327.559, -53.0103, 0.55 ) }
    dend_22 { pt3dadd( -69.0498, -331.514, -52.9576, 0.28 ) }
    dend_22 { pt3dadd( -68.8513, -332.381, -52.7991, 0.83 ) }
    dend_22 { pt3dadd( -67.6769, -334.595, -51.922, 0.55 ) }
    dend_22 { pt3dadd( -65.7116, -336.895, -50.6005, 0.55 ) }
    dend_22 { pt3dadd( -64.4201, -338.168, -49.6169, 0.55 ) }
    dend_22 { pt3dadd( -62.0506, -340.525, -47.2094, 0.55 ) }
    dend_22 { pt3dadd( -60.4166, -342.217, -45.1356, 0.55 ) }
    dend_22 { pt3dadd( -58.2049, -344.486, -42.1349, 0.55 ) }
    dend_22 { pt3dadd( -56.7507, -345.91, -40.0043, 0.55 ) }
    dend_22 { pt3dadd( -55.6192, -346.835, -38.2132, 0.55 ) }
    dend_22 { pt3dadd( -53.7181, -348.667, -34.095, 0.55 ) }
    dend_22 { pt3dadd( -53.7546, -349.741, -31.5709, 0.55 ) }
    dend_22 { pt3dadd( -54.4595, -350.159, -30.8797, 0.55 ) }
    dend_22 { pt3dadd( -56.9805, -350.866, -29.8895, 0.55 ) }
    dend_22 { pt3dadd( -58.1622, -360.729, -32.3186, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 96/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 6.9604, -96.8433, 4.4313, 1.66 ) }
    dend_5 { pt3dadd( 7.70284, -100.57, 3.81013, 1.66 ) }
    dend_5 { pt3dadd( 7.28376, -104.075, 4.39233, 1.66 ) }
    dend_5 { pt3dadd( 6.73947, -107.07, 5.07081, 1.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_5 { pt3dadd( 6.21216, -109.398, 5.77087, 1.66 ) }
    dend_5 { pt3dadd( 5.2138, -114.596, 7.35287, 1.66 ) }
    dend_5 { pt3dadd( 4.67539, -118.178, 8.3978, 1.66 ) }
    dend_5 { pt3dadd( 4.11693, -120.964, 9.33416, 1.94 ) }
    dend_5 { pt3dadd( 3.75045, -122.715, 9.90185, 1.94 ) }
    dend_5 { pt3dadd( 3.06545, -126.376, 10.7368, 1.66 ) }
    dend_5 { pt3dadd( 2.85542, -128.793, 10.9263, 1.38 ) }
    dend_5 { pt3dadd( 3.0703, -131.633, 10.5659, 1.38 ) }
    dend_5 { pt3dadd( 3.36729, -133.252, 10.1138, 1.38 ) }
    dend_5 { pt3dadd( 4.10794, -136.539, 8.75505, 1.38 ) }
    dend_5 { pt3dadd( 4.84029, -139.635, 7.21962, 1.38 ) }
    dend_5 { pt3dadd( 5.31677, -142.314, 5.85457, 1.38 ) }
    dend_5 { pt3dadd( 5.57176, -144.644, 4.7581, 1.38 ) }
    dend_5 { pt3dadd( 5.80401, -148.027, 3.62876, 1.38 ) }
    dend_5 { pt3dadd( 5.85894, -150.998, 3.06476, 1.38 ) }
    dend_5 { pt3dadd( 5.70395, -154.164, 2.84017, 1.38 ) }
    dend_5 { pt3dadd( 5.31121, -158.872, 2.87879, 1.38 ) }
    dend_5 { pt3dadd( 4.9336, -161.531, 3.02174, 1.38 ) }
    dend_5 { pt3dadd( 3.95912, -167.037, 3.60514, 1.38 ) }
    dend_5 { pt3dadd( 3.4129, -169.75, 4.13309, 1.38 ) }
    dend_5 { pt3dadd( 3.04966, -171.777, 4.68766, 1.38 ) }
    dend_5 { pt3dadd( 2.43067, -175.727, 5.8702, 1.38 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 22/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -31.3794, -171.268, 21.9493, 0.83 ) }
    dend_33 { pt3dadd( -28.9376, -175.31, 20.9204, 0.83 ) }
    dend_33 { pt3dadd( -26.9369, -178.621, 20.0773, 0.55 ) }
    dend_33 { pt3dadd( -25.792, -180.516, 19.5948, 0.55 ) }
    dend_33 { pt3dadd( -24.4999, -182.655, 19.0503, 0.55 ) }
    dend_33 { pt3dadd( -23.156, -184.879, 18.484, 0.55 ) }
    dend_33 { pt3dadd( -22.4179, -186.1, 18.173, 0.83 ) }
    dend_33 { pt3dadd( -16.4911, -195.558, 16.995, 0.83 ) }
    dend_33 { pt3dadd( -10.7033, -204.793, 14.3179, 0.83 ) }
    dend_33 { pt3dadd( -3.036, -212.488, 11.0363, 0.83 ) }
    dend_33 { pt3dadd( 5.19642, -220.04, 8.91556, 0.83 ) }
    dend_33 { pt3dadd( 14.4886, -226.619, 7.7519, 0.83 ) }
    dend_33 { pt3dadd( 24.6449, -231.84, 6.2844, 0.83 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 35/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -31.3794, -171.268, 21.9493, 0.55 ) }
    dend_32 { pt3dadd( -33.0334, -169.864, 20.9591, 0.55 ) }
    dend_32 { pt3dadd( -33.8374, -169.181, 20.4778, 0.55 ) }
    dend_32 { pt3dadd( -40.5669, -162.802, 16.6205, 0.55 ) }
    dend_32 { pt3dadd( -47.1341, -155.481, 15.042, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 40/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 88.7612, -214.69, 80.6293, 0.55 ) }
    dend_26 { pt3dadd( 89.5738, -217.755, 79.4907, 0.55 ) }
    dend_26 { pt3dadd( 92.0891, -227.31, 77.6464, 0.55 ) }
    dend_26 { pt3dadd( 93.1534, -237.2, 76.0891, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 44/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 88.7612, -214.69, 80.6293, 0.55 ) }
    dend_25 { pt3dadd( 87.893, -213.327, 76.7161, 0.55 ) }
    dend_25 { pt3dadd( 87.3724, -212.51, 74.3691, 0.55 ) }
    dend_25 { pt3dadd( 85.6916, -210.251, 66.2205, 0.55 ) }
    dend_25 { pt3dadd( 84.2796, -206.736, 58.5106, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_5 (entry count 49/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 2.43067, -175.727, 5.8702, 0.83 ) }
    dend_17 { pt3dadd( 4.5344, -177.508, 5.30961, 0.83 ) }
    dend_17 { pt3dadd( 5.91843, -178.807, 5.11955, 1.11 ) }
    dend_17 { pt3dadd( 7.68173, -180.713, 5.16106, 0.55 ) }
    dend_17 { pt3dadd( 8.76709, -182.095, 5.29372, 0.83 ) }
    dend_17 { pt3dadd( 11.0544, -185.135, 5.5639, 0.83 ) }
    dend_17 { pt3dadd( 13.1586, -188.536, 6.31363, 0.83 ) }
    dend_17 { pt3dadd( 14.547, -191.649, 7.31352, 0.83 ) }
    dend_17 { pt3dadd( 15.6287, -194.636, 8.43636, 0.83 ) }
    dend_17 { pt3dadd( 16.1645, -196.618, 9.37082, 0.83 ) }
    dend_17 { pt3dadd( 16.5962, -198.809, 10.6715, 0.83 ) }
    dend_17 { pt3dadd( 16.9553, -204.813, 15.2158, 0.83 ) }
    dend_17 { pt3dadd( 16.8626, -205.595, 15.891, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 2.43067, -175.727, 5.8702, 1.38 ) }
    dend_6 { pt3dadd( 2.83971, -179.048, 5.7355, 1.38 ) }
    dend_6 { pt3dadd( 2.8405, -180.999, 5.87351, 1.38 ) }
    dend_6 { pt3dadd( 2.68756, -182.817, 6.10796, 1.38 ) }
    dend_6 { pt3dadd( 2.17653, -186.741, 6.7331, 1.38 ) }
    dend_6 { pt3dadd( 1.32363, -190.865, 7.45164, 1.38 ) }
    dend_6 { pt3dadd( 1.18797, -191.547, 7.54023, 1.38 ) }
    dend_6 { pt3dadd( 0.147688, -196.694, 7.96844, 1.38 ) }
    dend_6 { pt3dadd( -0.208432, -198.212, 7.95852, 1.38 ) }
    dend_6 { pt3dadd( -0.935202, -201.007, 7.65819, 1.38 ) }
    dend_6 { pt3dadd( -1.81646, -205.055, 6.891, 1.38 ) }
    dend_6 { pt3dadd( -2.50957, -209.606, 5.56979, 1.11 ) }
    dend_6 { pt3dadd( -2.65241, -211.62, 4.86799, 1.11 ) }
    dend_6 { pt3dadd( -2.65654, -216.3, 3.16974, 1.11 ) }
    dend_6 { pt3dadd( -2.64567, -218.195, 2.6813, 1.11 ) }
    dend_6 { pt3dadd( -2.55594, -221.56, 2.05572, 1.11 ) }
    dend_6 { pt3dadd( -2.49664, -224.461, 1.76157, 1.11 ) }
    dend_6 { pt3dadd( -2.67437, -227.424, 1.78294, 1.11 ) }
    dend_6 { pt3dadd( -2.97036, -231.536, 2.17819, 1.11 ) }
    dend_6 { pt3dadd( -3.34929, -235.705, 3.02927, 1.11 ) }
    dend_6 { pt3dadd( -3.74, -238.043, 3.58725, 0.83 ) }
    dend_6 { pt3dadd( -4.41026, -240.408, 4.15452, 0.83 ) }
    dend_6 { pt3dadd( -5.12476, -242.576, 4.71013, 0.83 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 85/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 16.8626, -205.595, 15.891, 0.83 ) }
    dend_21 { pt3dadd( 17.4555, -206.3, 13.7557, 0.83 ) }
    dend_21 { pt3dadd( 18.9786, -208.128, 8.67803, 0.83 ) }
    dend_21 { pt3dadd( 20.4032, -209.825, 4.26193, 1.11 ) }
    dend_21 { pt3dadd( 21.7497, -211.368, 0.258564, 0.83 ) }
    dend_21 { pt3dadd( 22.8699, -212.613, -2.86263, 0.55 ) }
    dend_21 { pt3dadd( 24.5993, -214.583, -7.76483, 0.28 ) }
    dend_21 { pt3dadd( 25.1754, -215.186, -9.25455, 0.83 ) }
    dend_21 { pt3dadd( 25.4877, -215.526, -10.0425, 0.83 ) }
    dend_21 { pt3dadd( 26.9378, -217.085, -13.643, 0.83 ) }
    dend_21 { pt3dadd( 27.4764, -217.711, -15.005, 0.28 ) }
    dend_21 { pt3dadd( 28.1608, -218.597, -16.9979, 0.55 ) }
    dend_21 { pt3dadd( 28.4635, -218.982, -17.9025, 0.83 ) }
    dend_21 { pt3dadd( 29.8333, -220.626, -22.397, 0.28 ) }
    dend_21 { pt3dadd( 30.2482, -221.155, -23.9014, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_21 { pt3dadd( 30.6453, -221.696, -25.3612, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 1/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 16.8626, -205.595, 15.891, 0.55 ) }
    dend_18 { pt3dadd( 19.4654, -208.31, 16.1023, 0.55 ) }
    dend_18 { pt3dadd( 21.3656, -210.339, 16.5, 0.55 ) }
    dend_18 { pt3dadd( 23.493, -212.88, 17.1436, 0.55 ) }
    dend_18 { pt3dadd( 24.5585, -214.251, 17.5884, 0.55 ) }
    dend_18 { pt3dadd( 25.8669, -216.226, 18.2188, 0.55 ) }
    dend_18 { pt3dadd( 26.8962, -217.855, 18.7328, 0.55 ) }
    dend_18 { pt3dadd( 28.5601, -220.497, 19.5065, 0.55 ) }
    dend_18 { pt3dadd( 29.8279, -222.676, 20.1442, 0.55 ) }
    dend_18 { pt3dadd( 30.7198, -224.52, 20.6921, 0.55 ) }
    dend_18 { pt3dadd( 32.056, -227.682, 21.5497, 0.55 ) }
    dend_18 { pt3dadd( 32.7419, -229.465, 22.0867, 0.55 ) }
    dend_18 { pt3dadd( 33.146, -230.457, 22.4118, 0.55 ) }
    dend_18 { pt3dadd( 33.9117, -232.367, 22.964, 0.55 ) }
    dend_18 { pt3dadd( 34.8382, -234.364, 23.184, 0.55 ) }
    dend_18 { pt3dadd( 36.278, -236.938, 22.3606, 0.55 ) }
    dend_18 { pt3dadd( 37.716, -239.065, 20.5439, 0.55 ) }
    dend_18 { pt3dadd( 38.2245, -239.746, 19.821, 0.55 ) }
    dend_18 { pt3dadd( 39.1977, -240.95, 18.4527, 0.55 ) }
    dend_18 { pt3dadd( 44.3877, -246.485, 11.4663, 0.55 ) }
    dend_18 { pt3dadd( 45.8729, -247.938, 9.55427, 0.55 ) }
    dend_18 { pt3dadd( 47.0226, -249.031, 8.12657, 0.55 ) }
    dend_18 { pt3dadd( 48.7309, -250.713, 6.22768, 0.55 ) }
    dend_18 { pt3dadd( 50.219, -252.161, 5.21445, 0.55 ) }
    dend_18 { pt3dadd( 51.0583, -253.017, 5.06285, 0.55 ) }
    dend_18 { pt3dadd( 52.2687, -254.468, 5.36286, 0.55 ) }
    dend_18 { pt3dadd( 53.194, -255.691, 5.73064, 0.55 ) }
    dend_18 { pt3dadd( 54.1506, -257.137, 6.15725, 0.28 ) }
    dend_18 { pt3dadd( 55.4016, -259.43, 6.75779, 0.55 ) }
    dend_18 { pt3dadd( 56.1911, -260.97, 7.19266, 0.55 ) }
    dend_18 { pt3dadd( 57.156, -263.065, 7.8003, 0.55 ) }
    dend_18 { pt3dadd( 58.2329, -265.698, 8.60006, 0.55 ) }
    dend_18 { pt3dadd( 58.7822, -267.32, 9.08743, 0.55 ) }
    dend_18 { pt3dadd( 59.0635, -268.441, 9.39403, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 35/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -5.12476, -242.576, 4.71013, 0.83 ) }
    dend_10 { pt3dadd( -5.22906, -244.435, 3.91871, 0.83 ) }
    dend_10 { pt3dadd( -5.57605, -246.741, 3.03455, 0.83 ) }
    dend_10 { pt3dadd( -5.91445, -248.998, 2.32018, 0.83 ) }
    dend_10 { pt3dadd( -6.68052, -254.692, 0.749786, 0.83 ) }
    dend_10 { pt3dadd( -7.13448, -258.848, -0.269533, 0.83 ) }
    dend_10 { pt3dadd( -7.44194, -262.034, -1.02084, 0.83 ) }
    dend_10 { pt3dadd( -7.78354, -266.142, -1.93215, 0.83 ) }
    dend_10 { pt3dadd( -7.92071, -269.16, -2.53641, 1.11 ) }
    dend_10 { pt3dadd( -7.95745, -270.823, -2.83642, 0.83 ) }
    dend_10 { pt3dadd( -7.88887, -272.619, -3.09389, 0.83 ) }
    dend_10 { pt3dadd( -7.20103, -277.351, -3.95291, 0.83 ) }
    dend_10 { pt3dadd( -6.50562, -280.651, -4.60006, 0.83 ) }
    dend_10 { pt3dadd( -5.92179, -283.133, -5.14231, 0.83 ) }
    dend_10 { pt3dadd( -5.40987, -285.403, -5.79604, 0.83 ) }
    dend_10 { pt3dadd( -4.71445, -288.842, -6.91838, 0.83 ) }
    dend_10 { pt3dadd( -3.85384, -293.084, -8.42078, 0.83 ) }
    dend_10 { pt3dadd( -3.61155, -294.234, -8.83681, 0.83 ) }
    dend_10 { pt3dadd( -3.08636, -297.493, -10.0606, 0.83 ) }
    dend_10 { pt3dadd( -2.82384, -301.484, -10.7689, 0.83 ) }
    dend_10 { pt3dadd( -2.96499, -304.965, -10.9334, 0.83 ) }
    dend_10 { pt3dadd( -3.17756, -307.038, -11.0226, 0.83 ) }
    dend_10 { pt3dadd( -3.66801, -310.132, -11.0185, 0.83 ) }
    dend_10 { pt3dadd( -4.02927, -312.476, -10.8554, 0.83 ) }
    dend_10 { pt3dadd( -5.69924, -323.928, -8.77829, 0.83 ) }
    dend_10 { pt3dadd( -6.7002, -328.388, -7.30859, 0.83 ) }
    dend_10 { pt3dadd( -8.22891, -333.851, -4.81175, 0.83 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 62/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -5.12476, -242.576, 4.71013, 0.83 ) }
    dend_7 { pt3dadd( -6.7372, -245.281, 6.75614, 0.83 ) }
    dend_7 { pt3dadd( -7.70511, -246.904, 7.9843, 0.83 ) }
    dend_7 { pt3dadd( -8.61994, -248.439, 9.1451, 0.83 ) }
    dend_7 { pt3dadd( -11.8914, -253.926, 13.2961, 0.83 ) }
    dend_7 { pt3dadd( -12.6711, -255.234, 14.2856, 0.83 ) }
    dend_7 { pt3dadd( -13.8512, -257.213, 15.783, 0.83 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 69/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 59.0635, -268.441, 9.39403, 0.55 ) }
    dend_20 { pt3dadd( 60.8722, -266.702, 11.0908, 0.55 ) }
    dend_20 { pt3dadd( 62.2252, -265.156, 12.5367, 0.55 ) }
    dend_20 { pt3dadd( 64.3416, -262.152, 15.2932, 0.55 ) }
    dend_20 { pt3dadd( 65.0821, -261.101, 16.2577, 0.55 ) }
    dend_20 { pt3dadd( 66.1292, -259.615, 17.6215, 0.55 ) }
    dend_20 { pt3dadd( 66.6394, -258.891, 18.286, 0.83 ) }
    dend_20 { pt3dadd( 67.2903, -257.661, 19.2221, 0.55 ) }
    dend_20 { pt3dadd( 67.6679, -256.398, 20.2668, 0.55 ) }
    dend_20 { pt3dadd( 70.5569, -250.447, 24.7384, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 79/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 59.0635, -268.441, 9.39403, 0.55 ) }
    dend_19 { pt3dadd( 59.9547, -270.837, 10.0783, 0.55 ) }
    dend_19 { pt3dadd( 60.3327, -271.854, 10.3685, 0.55 ) }
    dend_19 { pt3dadd( 60.9806, -273.596, 10.8659, 0.55 ) }
    dend_19 { pt3dadd( 61.1967, -274.177, 11.0318, 0.28 ) }
    dend_19 { pt3dadd( 61.4251, -274.791, 11.2071, 0.55 ) }
    dend_19 { pt3dadd( 64.8499, -282.13, 12.2432, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 86/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -8.22891, -333.851, -4.81175, 0.83 ) }
    dend_12 { pt3dadd( -7.26113, -336.586, -4.52419, 0.83 ) }
    dend_12 { pt3dadd( -6.27173, -339.381, -4.23021, 0.83 ) }
    dend_12 { pt3dadd( -4.74742, -343.687, -3.77729, 0.83 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 90/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -8.22891, -333.851, -4.81175, 0.55 ) }
    dend_11 { pt3dadd( -6.81247, -335.093, -4.07917, 0.55 ) }
    dend_11 { pt3dadd( -5.91851, -335.876, -3.61681, 0.55 ) }
    dend_11 { pt3dadd( -3.7923, -337.739, -2.51715, 0.55 ) }
    dend_11 { pt3dadd( 2.33979, -344.157, 2.74907, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 95/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -13.8512, -257.213, 15.783, 0.55 ) }
    dend_9 { pt3dadd( -14.3877, -258.851, 16.9311, 0.55 ) }
    dend_9 { pt3dadd( -14.7976, -259.719, 17.6491, 0.55 ) }
    dend_9 { pt3dadd( -15.5967, -261.295, 18.6878, 0.55 ) }
    dend_9 { pt3dadd( -16.333, -262.748, 19.6449, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_9 { pt3dadd( -17.344, -264.742, 20.959, 0.55 ) }
    dend_9 { pt3dadd( -18.4484, -266.92, 22.3944, 0.55 ) }
    dend_9 { pt3dadd( -19.9499, -269.888, 24.5419, 0.55 ) }
    dend_9 { pt3dadd( -21.5311, -272.62, 26.8381, 0.55 ) }
    dend_9 { pt3dadd( -22.6598, -277.717, 30.5045, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 5/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -13.8512, -257.213, 15.783, 0.83 ) }
    dend_8 { pt3dadd( -14.0545, -264.521, 18.3905, 0.83 ) }
    dend_8 { pt3dadd( -14.3196, -267.824, 19.503, 0.83 ) }
    dend_8 { pt3dadd( -14.9784, -271.593, 21.3719, 0.83 ) }
    dend_8 { pt3dadd( -15.5748, -275.407, 23.6888, 0.83 ) }
    dend_8 { pt3dadd( -15.9789, -279.066, 25.8581, 0.83 ) }
    dend_8 { pt3dadd( -16.3358, -283.176, 28.1983, 0.55 ) }
    dend_8 { pt3dadd( -16.5416, -285.109, 29.143, 0.83 ) }
    dend_8 { pt3dadd( -17.7043, -293.123, 32.6438, 0.83 ) }
    dend_8 { pt3dadd( -18.1646, -297.513, 34.311, 0.55 ) }
    dend_8 { pt3dadd( -18.2226, -301.833, 35.6508, 0.83 ) }
    dend_8 { pt3dadd( -18.1491, -303.554, 36.1641, 0.83 ) }
    dend_8 { pt3dadd( -17.9913, -306.987, 36.8963, 0.83 ) }
    dend_8 { pt3dadd( -17.956, -312.361, 37.8044, 0.55 ) }
    dend_8 { pt3dadd( -17.9503, -315.76, 38.0455, 0.55 ) }
    dend_8 { pt3dadd( -18.1503, -318.639, 38.321, 0.55 ) }
    dend_8 { pt3dadd( -18.9766, -326.431, 39.8863, 0.55 ) }
    dend_8 { pt3dadd( -19.2025, -328.878, 40.557, 0.55 ) }
    dend_8 { pt3dadd( -19.4053, -331.415, 41.6027, 0.55 ) }
    dend_8 { pt3dadd( -22.1339, -343.613, 43.668, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 25/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -4.74742, -343.687, -3.77729, 0.83 ) }
    dend_14 { pt3dadd( -3.86937, -349.805, -1.22871, 0.83 ) }
    dend_14 { pt3dadd( -3.55674, -352.541, -0.304663, 0.83 ) }
    dend_14 { pt3dadd( -2.63143, -359.109, 1.34458, 0.83 ) }
    dend_14 { pt3dadd( -2.35197, -361.494, 1.85529, 0.83 ) }
    dend_14 { pt3dadd( -2.08811, -364.153, 2.32816, 0.55 ) }
    dend_14 { pt3dadd( -1.75812, -366.789, 2.77563, 0.83 ) }
    dend_14 { pt3dadd( -1.50003, -368.746, 2.94038, 0.83 ) }
    dend_14 { pt3dadd( -0.923638, -372.751, 3.14221, 0.83 ) }
    dend_14 { pt3dadd( -0.479712, -375.778, 2.93621, 1.11 ) }
    dend_14 { pt3dadd( 0.0287783, -378.706, 2.68779, 1.11 ) }
    dend_14 { pt3dadd( 1.20608, -383.866, 2.28213, 0.55 ) }
    dend_14 { pt3dadd( 1.67082, -385.55, 2.11586, 0.55 ) }
    dend_14 { pt3dadd( 2.33585, -387.908, 1.82719, 1.11 ) }
    dend_14 { pt3dadd( 3.59111, -392.397, 0.983438, 0.83 ) }
    dend_14 { pt3dadd( 4.69456, -395.972, 0.0690472, 0.83 ) }
    dend_14 { pt3dadd( 5.3137, -398.393, -0.70277, 0.55 ) }
    dend_14 { pt3dadd( 5.98627, -401.579, -2.0104, 0.83 ) }
    dend_14 { pt3dadd( 6.60268, -404.313, -3.2277, 0.83 ) }
    dend_14 { pt3dadd( 7.26988, -407.441, -4.64839, 0.55 ) }
    dend_14 { pt3dadd( 7.79693, -410.062, -5.90314, 0.83 ) }
    dend_14 { pt3dadd( 8.44689, -414.116, -8.07803, 1.11 ) }
    dend_14 { pt3dadd( 8.9905, -417.394, -10.0342, 0.83 ) }
    dend_14 { pt3dadd( 9.34091, -419.222, -11.1611, 1.11 ) }
    dend_14 { pt3dadd( 9.86884, -421.278, -12.4513, 0.83 ) }
    dend_14 { pt3dadd( 10.5278, -423.931, -13.9992, 1.38 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 51/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -4.74742, -343.687, -3.77729, 0.55 ) }
    dend_13 { pt3dadd( -2.43554, -345.228, -2.60582, 0.55 ) }
    dend_13 { pt3dadd( 3.54086, -349.495, 0.488894, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 54/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 10.5278, -423.931, -13.9992, 0.55 ) }
    dend_16 { pt3dadd( 9.64958, -424.577, -14.2637, 0.55 ) }
    dend_16 { pt3dadd( 9.13401, -424.956, -14.419, 0.55 ) }
    dend_16 { pt3dadd( 8.69534, -425.278, -14.5511, 0.83 ) }
    dend_16 { pt3dadd( 5.14981, -429.17, -16.3093, 0.83 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 59/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 10.5278, -423.931, -13.9992, 0.28 ) }
    dend_15 { pt3dadd( 10.8284, -425.504, -14.1187, 0.28 ) }
    dend_15 { pt3dadd( 10.9524, -426.454, -14.3565, 0.55 ) }
    dend_15 { pt3dadd( 11.2151, -428.231, -14.8279, 0.28 ) }
    dend_15 { pt3dadd( 11.2885, -428.724, -14.9782, 0.83 ) }
    dend_15 { pt3dadd( 11.676, -430.733, -15.4345, 0.28 ) }
    dend_15 { pt3dadd( 11.7948, -431.333, -15.5467, 0.83 ) }
    dend_15 { pt3dadd( 12.1997, -433.901, -15.5385, 0.55 ) }
    dend_15 { pt3dadd( 12.4063, -435.174, -15.3851, 0.55 ) }
    dend_15 { pt3dadd( 12.7226, -437.119, -14.9665, 2.49 ) }
    dend_15 { pt3dadd( 13.0509, -439.806, -14.0962, 0.55 ) }
    dend_15 { pt3dadd( 13.1548, -440.601, -13.7733, 0.55 ) }
    dend_15 { pt3dadd( 13.6214, -444.525, -12.002, 1.94 ) }
    dend_15 { pt3dadd( 13.8369, -445.976, -11.3096, 1.11 ) }
    dend_15 { pt3dadd( 14.1746, -448.048, -10.3912, 1.11 ) }
    dend_15 { pt3dadd( 14.6625, -451.027, -9.03238, 0.55 ) }
    dend_15 { pt3dadd( 15.0085, -453.197, -8.1614, 0.55 ) }
    dend_15 { pt3dadd( 15.3485, -454.93, -7.57126, 0.55 ) }
    dend_15 { pt3dadd( 15.9018, -457.175, -7.14355, 0.55 ) }
    dend_15 { pt3dadd( 16.1204, -458.062, -6.96698, 0.55 ) }
    dend_15 { pt3dadd( 18.0752, -464.931, -4.7895, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_67, dend_60, dend_59, dend_58, dend_39, dend_0, dend_71, dend_68, dend_64, dend_61, dend_45, dend_40, dend_36, dend_1, dend_70, dend_69, dend_66, dend_65, dend_63, dend_62, dend_51, dend_46, dend_44, dend_41, dend_38, dend_37, dend_35, dend_2, dend_53, dend_52, dend_48, dend_47, dend_43, dend_42, dend_28, dend_3, dend_55, dend_54, dend_50, dend_49, dend_30, dend_29, dend_23, dend_4, dend_57, dend_56, dend_34, dend_31, dend_27, dend_24, dend_22, dend_5, dend_33, dend_32, dend_26, dend_25, dend_17, dend_6, dend_21, dend_18, dend_10, dend_7, dend_20, dend_19, dend_12, dend_11, dend_9, dend_8, dend_14, dend_13, dend_16, dend_15]}
    ModelViewParmSubset_2 = new SectionList()
    dend_67 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_67, dend_60, dend_59, dend_58, dend_39, dend_0, dend_71, dend_68, dend_64, dend_61, dend_45, dend_40, dend_36, dend_1, dend_70, dend_69, dend_66, dend_65, dend_63, dend_62, dend_51, dend_46, dend_44, dend_41, dend_38, dend_37, dend_35, dend_2, dend_53, dend_52, dend_48, dend_47, dend_43, dend_42, dend_28, dend_3, dend_55, dend_54, dend_50, dend_49, dend_30, dend_29, dend_23, dend_4, dend_57, dend_56, dend_34, dend_31, dend_27, dend_24, dend_22, dend_5, dend_33, dend_32, dend_26, dend_25, dend_17, dend_6, dend_21, dend_18, dend_10, dend_7, dend_20, dend_19, dend_12, dend_11, dend_9, dend_8, dend_14, dend_13, dend_16, dend_15]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_67, dend_60, dend_59, dend_58, dend_39, dend_0, axon_0, dend_71, dend_68, dend_64, dend_61, dend_45, dend_40, dend_36, dend_1, axon_1, dend_70, dend_69, dend_66, dend_65, dend_63, dend_62, dend_51, dend_46, dend_44, dend_41, dend_38, dend_37, dend_35, dend_2, dend_53, dend_52, dend_48, dend_47, dend_43, dend_42, dend_28, dend_3, dend_55, dend_54, dend_50, dend_49, dend_30, dend_29, dend_23, dend_4, dend_57, dend_56, dend_34, dend_31, dend_27, dend_24, dend_22, dend_5, dend_33, dend_32, dend_26, dend_25, dend_17, dend_6, dend_21, dend_18, dend_10, dend_7, dend_20, dend_19, dend_12, dend_11, dend_9, dend_8, dend_14, dend_13, dend_16, dend_15]}
    ModelViewParmSubset_5 = new SectionList()
    dend_67 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_71 ModelViewParmSubset_5.append()
    dend_68 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_70 ModelViewParmSubset_5.append()
    dend_69 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_27 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_67 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_60 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_59 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_58 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_71 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_68 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_64 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_61 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_36 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_70 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_69 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_66 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_65 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_63 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_62 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_44 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_41 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_38 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_37 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_35 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_53 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_48 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_47 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_43 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_49 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_30 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_29 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_23 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_56 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_34 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_27 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_22 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_5 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_33 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_6 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_21 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_18 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_10 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_8 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_14 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_15 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_39 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_45 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_40 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_1 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_2 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_46 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_51 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_3 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_28 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_52 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_4 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_55 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_50 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_57 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_54 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_31 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_32 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_42 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_17 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_24 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_7 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_26 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_25 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_9 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_19 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_20 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_12 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_11 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_13 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_16 OneSecGrp_SectionRef_74.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_39, dend_39, dend_39, dend_39, dend_39, dend_0, dend_0, dend_0, axon_0, axon_0, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_45, dend_45, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_1, dend_1, axon_1, axon_1, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_2, dend_2, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_69 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_3 all.append()
    dend_3 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_67 nseg = 3
    dend_60 nseg = 3
    dend_59 nseg = 13
    dend_58 nseg = 7
    dend_71 nseg = 5
    dend_68 nseg = 5
    dend_64 nseg = 7
    dend_61 nseg = 9
    dend_36 nseg = 5
    dend_70 nseg = 9
    dend_69 nseg = 5
    dend_66 nseg = 5
    dend_65 nseg = 3
    dend_63 nseg = 3
    dend_62 nseg = 3
    dend_44 nseg = 5
    dend_41 nseg = 7
    dend_38 nseg = 3
    dend_37 nseg = 7
    dend_35 nseg = 7
    dend_53 nseg = 3
    dend_48 nseg = 3
    dend_47 nseg = 9
    dend_43 nseg = 5
    dend_49 nseg = 3
    dend_30 nseg = 5
    dend_29 nseg = 3
    dend_23 nseg = 9
    dend_56 nseg = 3
    dend_34 nseg = 7
    dend_27 nseg = 3
    dend_22 nseg = 17
    dend_5 nseg = 5
    dend_33 nseg = 5
    dend_6 nseg = 3
    dend_21 nseg = 3
    dend_18 nseg = 5
    dend_10 nseg = 5
    dend_8 nseg = 5
    dend_14 nseg = 5
    dend_15 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L4_LBC_db543bcdea_0_0


