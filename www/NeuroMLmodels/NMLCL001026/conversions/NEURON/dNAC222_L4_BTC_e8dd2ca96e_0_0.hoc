// Cell: dNAC222_L4_BTC_e8dd2ca96e_0_0
/*
{
  "id" : "dNAC222_L4_BTC_e8dd2ca96e_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.41353, 11.9919, 1.31418, 2.57576", "-2.15404, 10.8832, 1.19952, 4.64379", "-1.89456, 9.77439, 1.08486, 7.1282", "-1.63508, 8.66563, 0.970208, 9.55084", "-1.37559, 7.55686, 0.855552, 11.3429", "-1.11611, 6.44809, 0.740896, 12.5314", "-0.856626, 5.33932, 0.626239, 13.4739", "-0.597143, 4.23056, 0.511583, 13.1445", "-0.337659, 3.12179, 0.396927, 12.6062", "-0.0781762, 2.01302, 0.282271, 12.0679", "0.181307, 0.904256, 0.167615, 11.529", "0.44079, -0.204511, 0.0529586, 10.9839", "0.700273, -1.31328, -0.0616975, 10.4042", "0.959757, -2.42205, -0.176354, 9.22811", "1.21924, -3.53081, -0.29101, 7.93477", "1.47872, -4.63958, -0.405666, 7.09354", "1.73821, -5.74835, -0.520322, 6.0452", "1.99769, -6.85711, -0.634978, 4.95117", "2.25717, -7.96588, -0.749635, 4.10786", "2.51666, -9.07465, -0.864291, 3.50414", "2.77614, -10.1834, -0.978947, 3.28095" ]
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "1.75135, -9.5025, 1.8584, 2.77", "2.16671, -14.6841, 1.8584, 3.05" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999977243497945
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-5.09865, 10.2775, -3.7416, 1.38", "-6.35223, 12.341, -3.97105, 1.38", "-8.31504, 15.572, -4.33032, 1.66", "-9.99095, 18.3307, -4.63707, 1.38", "-11.3311, 20.5368, -4.88238, 1.11", "-12.3896, 22.2791, -5.07611, 1.11", "-14.8365, 26.307, -5.52399, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999977243497945
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "6.01135, 6.4475, 6.4384, 1.38", "6.01661, 11.0022, 7.66093, 1.38", "6.16479, 13.8175, 8.41922, 1.38", "6.60407, 18.7399, 9.90632, 1.38", "7.2045, 23.99, 11.5678, 1.38", "7.65642, 27.9416, 12.8183, 1.38", "8.05967, 31.4677, 13.9342, 0.83", "8.32303, 34.8956, 15.0954, 1.38", "8.70872, 38.9634, 16.5339, 1.38", "9.58995, 43.8144, 18.2197, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999977243497945
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.77614, -10.1834, -0.978947, 0.695432", "6.19422, -24.7888, -0.978947, 0.695432", "9.61231, -39.3941, -0.978947, 0.695432" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "2.16671, -14.6841, 1.8584, 2.22", "5.18223, -20.5819, 1.12062, 2.22", "6.75093, -23.65, 0.73682, 1.66" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "2.16671, -14.6841, 1.8584, 0.83", "-0.601314, -16.909, 3.45097, 0.83", "-2.4701, -18.4464, 4.82034, 1.11", "-5.04839, -20.5674, 6.70961, 0.83", "-7.02876, -22.1966, 8.16074, 0.83", "-10.3864, -24.9588, 10.6211, 1.38", "-13.5958, -27.599, 12.9728, 1.38", "-16.3776, -29.6574, 15.289, 0.83" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-14.8365, 26.307, -5.52399, 0.55", "-17.414, 27.1893, -3.92927, 0.55", "-18.5959, 27.4658, -2.92687, 0.55", "-19.421, 27.6153, -2.13251, 0.55", "-20.7694, 27.8, -0.775423, 1.11", "-23.1332, 28.031, 1.61401, 0.83", "-25.5094, 28.1506, 4.07264, 0.83", "-27.969, 28.0647, 6.83125, 0.55", "-29.304, 27.9245, 8.35665, 1.38", "-30.2735, 27.7541, 9.48327, 0.28", "-31.1571, 27.5315, 10.5252, 0.83", "-32.2155, 27.2657, 11.8138, 0.28", "-32.9412, 27.0751, 12.7419, 0.55", "-33.8714, 26.8924, 13.8562, 0.55", "-35.3493, 26.6651, 15.6077, 0.55", "-36.6281, 26.4779, 17.1079, 0.55", "-38.7962, 26.2379, 19.6841, 0.55", "-39.7188, 26.1602, 20.7419, 0.55", "-41.5014, 26.0337, 22.7064, 0.83", "-42.7645, 25.9745, 24.0439, 0.83", "-43.787, 25.9362, 25.0509, 0.83", "-45.9768, 25.9, 27.1396, 0.83", "-46.7986, 25.8693, 27.8874, 0.83", "-48.7615, 25.7759, 29.7694, 0.83", "-51.4319, 25.5766, 32.3981, 0.83", "-52.1034, 25.545, 33.0513, 0.83", "-53.5772, 25.5091, 34.4345, 0.28", "-54.4203, 25.4529, 35.1516, 0.83", "-56.4634, 25.2872, 36.81, 0.28", "-57.9286, 25.143, 37.8678, 0.83", "-59.6698, 24.9582, 39.0031, 0.28", "-60.049, 24.9158, 39.243, 0.55", "-62.2451, 24.728, 40.5017, 0.55", "-63.8404, 24.6401, 41.3461, 0.28", "-65.7088, 24.5256, 42.1198, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-14.8365, 26.307, -5.52399, 1.11", "-15.7709, 29.7601, -7.66248, 1.11", "-16.3115, 31.6439, -8.65538, 1.11", "-16.9635, 33.916, -9.8529, 1.11", "-17.5116, 35.8259, -10.8596, 1.11", "-18.157, 38.0749, -12.045, 0.83", "-18.818, 40.3782, -13.259, 0.83", "-19.3043, 42.1929, -13.9576, 1.11" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "9.58995, 43.8144, 18.2197, 0.83", "8.39629, 47.7717, 20.1194, 0.83", "7.50351, 50.7315, 21.5403, 0.83", "6.812, 53.024, 22.6409, 0.83", "5.73288, 56.6016, 24.3583, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "9.58995, 43.8144, 18.2197, 0.83", "15.6281, 49.0265, 18.3209, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "9.61231, -39.3941, -0.978947, 0.695432", "13.0304, -53.9995, -0.978947, 0.695432", "16.4485, -68.6049, -0.978947, 0.695432" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "6.75093, -23.65, 0.73682, 0.83", "7.30969, -24.577, -0.94268, 0.83", "7.6302, -24.9938, -1.9396, 0.83", "8.02239, -25.4276, -3.19207, 0.83", "9.5757, -27.1027, -8.35172, 0.83", "10.439, -28.023, -11.2114, 0.83", "11.7326, -29.4023, -15.4972, 0.55", "12.2702, -30.0042, -17.6058, 0.83", "12.8424, -30.6274, -20.058, 0.83", "13.3775, -31.1378, -22.3823, 1.11", "13.5064, -31.2149, -22.7768, 1.11" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "6.75093, -23.65, 0.73682, 1.66", "7.88545, -26.6835, 0.808162, 1.66", "9.5307, -30.3436, 0.902591, 1.11", "10.7763, -32.7719, 0.985041, 1.11", "13.0683, -36.5726, 1.52653, 1.11", "15.0251, -39.8173, 1.98881, 1.11", "16.3938, -42.0869, 2.31216, 1.38", "18.025, -44.5147, 2.70747, 1.11", "19.0517, -45.8696, 3.00997, 1.11", "23.4225, -50.5901, 4.56585, 1.66" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-16.3776, -29.6574, 15.289, 0.28", "-16.215, -31.6834, 18.991, 0.28", "-16.2207, -32.5121, 20.6613, 1.11", "-16.236, -35.2272, 26.5287, 0.55", "-16.2142, -36.0686, 28.3001, 0.83", "-16.1657, -37.9312, 32.2214, 0.83", "-16.1099, -40.078, 36.7409, 0.55", "-16.0955, -41.2812, 39.41, 1.11", "-16.022, -43.3467, 44.2297, 0.55", "-16.0537, -44.0852, 45.9222, 1.11" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-16.3776, -29.6574, 15.289, 0.83", "-18.595, -29.8371, 16.2106, 0.83", "-20.2596, -29.9626, 16.8759, 1.11", "-21.9108, -30.0427, 17.486, 0.83", "-23.7725, -30.1039, 18.1149, 0.83", "-26.0683, -30.1794, 18.8906, 0.83", "-28.2599, -30.2515, 19.631, 0.83", "-30.6668, -30.3335, 20.4065, 1.11", "-33.2094, -30.394, 21.1348, 1.11", "-35.4686, -30.4257, 21.7275, 1.11" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-65.7088, 24.5256, 42.1198, 0.28", "-64.9199, 23.2802, 43.5463, 0.28", "-64.6398, 22.838, 44.0527, 0.83", "-63.226, 20.6061, 46.6093, 0.28" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-65.7088, 24.5256, 42.1198, 0.28", "-67.8821, 25.1786, 43.2151, 0.28", "-68.6903, 25.4162, 43.329, 0.55", "-70.5329, 25.8994, 43.3072, 0.28", "-72.2052, 26.2978, 43.1897, 0.83", "-74.197, 26.7723, 43.0497, 0.28", "-76.1078, 27.2274, 42.9153, 0.28", "-79.4534, 27.9598, 42.1488, 0.28", "-80.1472, 28.1085, 41.9155, 0.83", "-81.2412, 28.3542, 41.3814, 0.83" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-19.3043, 42.1929, -13.9576, 0.55", "-19.9895, 42.4358, -14.8072, 0.55", "-21.1977, 42.8639, -16.3052, 0.55", "-22.3641, 43.2773, -17.7513, 0.83", "-24.4685, 44.023, -20.3605, 0.55", "-25.7875, 44.4905, -21.9959, 1.11" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-19.3043, 42.1929, -13.9576, 0.55", "-18.0121, 46.0652, -14.5986, 0.55", "-17.465, 47.9834, -14.7988, 0.55", "-17.0597, 49.6278, -14.827, 0.83", "-16.5542, 51.7919, -14.7593, 0.55", "-16.2409, 53.1822, -14.7053, 0.83", "-15.77, 55.2533, -14.5951, 0.55", "-15.4482, 56.8276, -14.4197, 0.83", "-14.9079, 59.0933, -14.2182, 0.28", "-14.5524, 60.3622, -14.1395, 0.83", "-13.8836, 62.4546, -14.0523, 0.55", "-13.3279, 64.0973, -14.0119, 0.83", "-12.4195, 66.6175, -14.0059, 0.55", "-11.3195, 69.4411, -14.0783, 0.83", "-10.2444, 72.0616, -14.2416, 0.83", "-8.78774, 75.5502, -14.4509, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "5.73288, 56.6016, 24.3583, 0.83", "6.5889, 59.5968, 25.1759, 0.83", "7.37272, 62.896, 26.0542, 0.83", "7.78053, 64.9384, 26.6673, 0.83", "8.28151, 67.776, 27.5866, 0.83", "8.80767, 70.9717, 28.6351, 0.83", "9.3243, 74.5144, 29.7956, 0.83", "9.73452, 77.8889, 30.9494, 0.83", "10.09, 81.238, 32.1686, 0.83", "10.2505, 83.2541, 32.8754, 0.55", "10.3713, 85.4543, 33.5562, 0.55", "10.481, 87.2997, 34.0018, 0.83", "10.6075, 88.952, 34.2671, 0.83", "10.7673, 90.4768, 34.4244, 0.55", "11.0004, 92.4067, 34.4453, 0.83", "11.1993, 93.9734, 34.4156, 0.55", "11.358, 95.3196, 34.3799, 0.83", "11.5703, 97.4091, 34.3313, 0.55", "11.7341, 99.5106, 34.2539, 0.83", "11.8428, 101.425, 34.0098, 0.55", "11.8722, 102.467, 33.8263, 0.55", "11.8764, 104.08, 33.5248, 0.83", "11.8273, 106.389, 33.0694, 0.83", "11.7694, 108.301, 32.6943, 0.55", "11.5516, 112.634, 31.8177, 0.83", "11.3988, 115.147, 31.3092, 0.83", "11.222, 118.213, 30.7353, 0.83", "11.1282, 120.075, 30.4696, 0.83", "11.0278, 121.566, 30.3486, 0.83", "10.9059, 123.035, 30.3463, 0.55", "10.7368, 124.706, 30.4603, 0.55", "10.4771, 126.612, 30.5794, 0.83", "9.87556, 130.15, 30.7771, 0.83", "9.3886, 132.948, 30.9098, 1.11", "8.99442, 135.074, 30.9927, 0.55", "8.50313, 137.405, 31.081, 1.11", "7.69155, 140.675, 31.2166, 0.83", "6.96066, 143.388, 31.2887, 0.83", "6.44286, 145.193, 31.2709, 0.83", "5.958, 146.996, 31.1935, 0.55", "5.32141, 149.53, 31.0282, 0.55", "5.1897, 150.129, 30.9752, 0.55", "4.78607, 152.353, 30.7946, 0.55", "4.53471, 153.98, 30.6176, 0.28", "4.21467, 156.596, 30.2193, 0.55", "3.97577, 159.582, 29.6476, 0.55", "3.89335, 161.269, 29.2812, 0.55", "3.77607, 164.21, 28.6312, 0.83", "3.68286, 167.32, 27.9334, 0.83", "3.59726, 169.531, 27.3418, 0.83", "3.51696, 170.809, 26.9335, 0.55", "3.43641, 171.943, 26.5383, 0.83", "3.23535, 173.763, 25.9376, 0.83", "2.86741, 176.064, 25.2232, 0.83", "2.32274, 178.955, 24.5385, 0.83", "1.94288, 180.78, 24.1689, 0.83", "1.55766, 182.471, 23.7823, 0.83", "0.988642, 184.863, 23.1748, 0.55", "0.336104, 187.358, 22.5272, 0.55", "-0.135679, 189.173, 22.0863, 0.55", "-0.630923, 191.19, 21.6107, 0.83", "-1.34869, 194.266, 20.8372, 1.11", "-1.99492, 197.488, 20.0935, 0.55", "-2.26098, 199.368, 19.746, 0.55", "-2.49393, 201.554, 19.4296, 0.55", "-2.6288, 203.727, 19.1835, 0.83", "-2.6265, 206.354, 18.973, 0.83", "-2.42926, 209.976, 18.7703, 0.83", "-1.96623, 214.312, 18.4686, 0.83", "-1.60345, 216.83, 18.2271, 0.55", "-1.18824, 219.325, 17.9246, 0.55", "-0.598884, 222.45, 17.4866, 0.83", "-0.347036, 223.915, 17.2388, 0.83", "-0.0781879, 226.23, 16.8101, 0.83", "0.0404671, 228.965, 16.3573, 0.83", "-0.0588599, 231.226, 16.104, 0.28", "-0.211837, 232.396, 16.0245, 0.83", "-0.848048, 235.735, 15.8878, 0.83", "-1.47232, 238.391, 15.8603, 0.83", "-2.23771, 240.968, 15.9506, 0.83", "-3.14314, 243.615, 16.1528, 0.83", "-3.80428, 245.372, 16.3356, 0.83" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "5.73288, 56.6016, 24.3583, 0.83", "4.76839, 57.6157, 26.2925, 0.83", "4.09136, 58.556, 27.8157, 0.55", "2.99863, 60.0837, 30.266, 0.55", "1.97331, 61.5139, 32.5522, 0.55", "0.813324, 62.95, 35.0553, 0.55", "-0.0445159, 63.8639, 36.8951, 0.55", "-1.48397, 65.0997, 40.0652, 0.55", "-2.52688, 65.7309, 42.2464, 0.55", "-4.03178, 66.1883, 45.004, 0.55", "-6.51029, 66.0985, 48.9615, 0.55", "-8.03477, 65.6651, 51.0666, 0.55", "-9.71243, 64.7257, 53.1522, 0.55", "-10.7361, 63.9037, 54.2391, 0.55", "-11.5712, 63.0401, 55.0067, 0.55", "-13.1456, 61.0566, 56.2053, 0.28", "-13.9133, 59.9166, 56.707, 0.83", "-14.9329, 58.2609, 57.3521, 0.55", "-15.5865, 57.0488, 57.691, 0.55", "-16.3785, 55.2128, 57.9827, 0.55", "-17.0839, 53.2938, 58.1389, 0.83", "-17.6736, 51.5882, 58.1926, 0.55", "-18.1866, 50.1403, 58.1738, 0.55", "-19.3986, 46.7453, 58.023, 0.55", "-20.6554, 43.5068, 57.8556, 0.83", "-21.7008, 41.1043, 57.7006, 0.83", "-22.9152, 38.6875, 57.3978, 0.83", "-24.4333, 35.985, 57.0351, 0.55", "-25.1669, 34.7532, 56.9214, 0.28", "-26.0991, 33.2879, 56.8797, 0.55", "-27.2399, 31.6999, 56.8862, 0.28", "-29.6863, 28.4446, 57.0626, 0.55", "-31.2005, 26.5056, 57.267, 0.55", "-32.648, 24.6539, 57.5815, 0.28", "-33.9331, 22.9924, 57.9337, 0.55", "-36.0879, 20.0182, 58.605, 0.55", "-36.807, 18.947, 58.8779, 0.83", "-38.0207, 16.9507, 59.4094, 0.55", "-39.6614, 13.9869, 60.0117, 0.55", "-40.7007, 11.6937, 60.3113, 0.83", "-41.6248, 8.93163, 60.5366, 0.55", "-42.0896, 6.80083, 60.5928, 0.55", "-42.4083, 4.65812, 60.5658, 0.55", "-42.4926, 3.52135, 60.5058, 0.83", "-42.5617, 0.5991, 60.2414, 0.55", "-42.5138, -2.81716, 59.8523, 0.28", "-42.3622, -7.75667, 59.2582, 0.28", "-42.3216, -9.83427, 58.9409, 0.83", "-42.2484, -13.9126, 58.2636, 0.28", "-42.2249, -15.3433, 58.0376, 0.83", "-42.2137, -16.2362, 57.9079, 0.28", "-42.1667, -17.6358, 57.6644, 0.83", "-42.0849, -20.4276, 57.1841, 0.28", "-42.0855, -21.5019, 57.0465, 0.55", "-42.1919, -23.9405, 56.8473, 0.28", "-42.284, -25.3535, 56.7576, 0.83" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "15.6281, 49.0265, 18.3209, 0.83", "15.8934, 50.7259, 15.9181, 0.83", "16.2691, 52.8728, 13.2177, 0.83", "16.5495, 54.2382, 11.6768, 0.83", "18.645, 62.4472, 3.32682, 0.55", "19.3703, 64.7073, 1.32959, 0.55", "19.8419, 65.9289, 0.399646, 0.55", "20.5361, 67.4894, -0.651017, 0.55", "21.3383, 69.0356, -1.39845, 1.11", "22.3884, 70.8459, -1.81334, 0.55", "24.3594, 73.8923, -1.77851, 0.55", "26.0506, 76.6265, -1.63348, 0.55", "27.1452, 78.4034, -1.47501, 0.55", "28.5032, 80.6337, -1.09051, 0.83", "30.0398, 83.3382, -0.451261, 0.55", "31.1156, 85.4893, 0.14951, 1.11", "32.1597, 87.7252, 0.869717, 0.55", "33.1502, 89.9201, 1.61793, 0.83", "34.8077, 93.7418, 2.8878, 0.55", "35.6595, 95.7491, 3.51623, 0.55", "36.7863, 98.531, 4.31115, 0.55", "37.6704, 100.725, 4.79646, 0.55", "38.2014, 102.09, 5.03215, 0.28", "39.2527, 104.812, 5.35854, 0.55", "40.0275, 106.868, 5.48635, 0.28", "40.7598, 108.739, 5.55761, 0.55", "42.1529, 112.259, 5.63118, 0.55", "42.8912, 114.244, 5.65596, 0.55", "43.9118, 117.007, 5.65289, 0.28", "44.735, 119.886, 4.8971, 0.83", "45.3493, 122.42, 3.83512, 0.28", "45.4789, 122.979, 3.51837, 0.55", "45.7624, 124.239, 2.52834, 0.28", "45.9365, 125.007, 1.80267, 0.83", "48.075, 134.179, -7.90777, 0.55", "48.9962, 137.568, -11.6496, 0.55", "49.3045, 138.594, -12.7538, 0.83", "50.1833, 140.988, -14.9541, 0.55", "50.7015, 142.161, -15.7789, 0.55", "51.4036, 143.549, -16.0952, 0.83", "52.3459, 145.272, -15.6188, 0.28", "52.7155, 146.208, -15.4585, 0.55", "53.5637, 148.842, -14.7704, 0.28", "54.0559, 150.561, -14.0706, 0.55", "54.4583, 152.05, -13.4791, 0.28", "54.6823, 153.541, -13.0277, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "15.6281, 49.0265, 18.3209, 0.55", "17.0127, 48.5688, 18.8678, 0.55", "19.0905, 47.882, 19.6884, 0.28", "20.1806, 47.5216, 20.1189, 0.55", "22.1831, 46.8597, 20.9098, 0.55", "24.8013, 45.9942, 21.9439, 0.55", "26.2327, 45.521, 22.5092, 0.28" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "13.5064, -31.2149, -22.7768, 0.55", "9.87896, -28.1387, -25.2963, 0.55", "8.9001, -27.2711, -26.4662, 0.83", "6.70223, -25.3057, -29.4043, 0.55", "5.78755, -24.533, -30.5988, 0.55", "1.83484, -21.6061, -36.9117, 0.28", "1.02038, -21.0829, -38.2652, 0.83", "-2.09234, -19.4402, -44.3956, 0.55", "-2.42235, -19.3011, -45.074, 0.55", "-3.29963, -19.0225, -46.9392, 0.83", "-7.26551, -18.0209, -55.1272, 0.55", "-8.0514, -17.8735, -56.6708, 0.55", "-8.92534, -17.7179, -58.4428, 0.83", "-10.7623, -17.3099, -62.4946, 0.55", "-11.1246, -17.1731, -63.3758, 0.55", "-11.7263, -16.8084, -65.0863, 0.55", "-14.0002, -14.8274, -72.0564, 0.28", "-14.566, -14.2277, -74.0191, 0.83", "-16.3818, -11.9619, -80.6882, 0.55", "-16.8168, -11.2911, -82.4088, 0.83", "-18.93, -7.40155, -91.0551, 0.55", "-19.4308, -6.11624, -93.5062, 0.28", "-19.6808, -5.25771, -94.9405, 0.83", "-20.0207, -3.64162, -97.3969, 0.55", "-20.1936, -2.32344, -99.1059, 0.83", "-20.3181, 0.87902, -102.889, 0.55", "-20.0185, 5.7369, -107.666, 0.28", "-19.9352, 6.47593, -108.372, 0.55", "-19.6487, 8.43665, -110.207, 0.28", "-19.5124, 9.23031, -110.945, 0.55", "-19.0185, 11.9156, -113.385, 0.28", "-18.8168, 12.8588, -114.202, 0.55", "-18.2124, 15.8166, -116.742, 0.28", "-17.9974, 16.9107, -117.741, 0.55", "-17.6083, 19.3338, -119.977, 0.28", "-17.5501, 19.8806, -120.486, 0.55", "-17.3798, 22.0737, -122.395, 0.28", "-17.3285, 22.8339, -123.048, 0.55", "-17.2699, 25.1995, -124.986, 0.28", "-17.3161, 26.382, -126.089, 0.55", "-17.6448, 29.8372, -129.336, 0.28", "-17.851, 31.249, -130.71, 0.55", "-18.5401, 35.1418, -134.979, 0.28", "-18.7468, 36.3199, -136.378, 0.55", "-19.3302, 40.1099, -141.491, 0.28", "-19.5343, 41.3721, -143.352, 0.28", "-19.7826, 42.8447, -145.648, 0.55", "-20.3126, 45.3888, -149.62, 0.28", "-20.4115, 45.8652, -150.304, 0.55", "-20.8362, 47.9028, -153.488, 0.28", "-21.0523, 48.8794, -155.002, 0.83", "-21.571, 50.8684, -158.077, 0.55", "-21.8944, 52.159, -160.073, 0.55", "-22.4282, 54.4712, -163.501, 0.55", "-23.5687, 60.2116, -172.386, 0.83", "-23.8891, 62.1895, -175.597, 0.28", "-24.006, 63.2325, -177.381, 0.55", "-24.1914, 67.0855, -184.468, 0.55", "-24.1391, 68.0959, -186.373, 0.55", "-23.7864, 71.3423, -192.853, 0.83", "-23.5058, 73.4144, -197.25, 0.28", "-23.4087, 74.4913, -200.233, 0.55", "-23.323, 75.3625, -203.936, 0.28", "-23.3017, 75.5784, -205.551, 0.83", "-23.3629, 76.1201, -214.707, 0.55", "-23.4498, 76.0826, -218.236, 0.55", "-23.8892, 75.6581, -226.299, 0.55", "-25.1278, 74.916, -238.248, 0.55", "-25.5132, 74.7322, -241.019, 0.55", "-26.6407, 74.3039, -247.967, 0.55", "-27.9877, 73.9581, -255.219, 0.55", "-29.1723, 73.7959, -260.846, 0.55", "-31.3028, 73.6578, -269.272, 0.55", "-33.764, 73.7053, -277.788, 0.55", "-34.3258, 73.7447, -279.693, 0.55", "-36.792, 73.8665, -288.046, 0.55", "-37.3953, 73.8906, -290.056, 0.28", "-37.5361, 73.8884, -290.543, 0.55", "-43.0373, 73.3443, -309.512, 0.28", "-43.5611, 73.2784, -311.22, 0.83", "-46.692, 72.7167, -321.286, 0.28", "-46.8976, 72.6767, -321.93, 0.55", "-48.4137, 72.4289, -326.626, 0.28", "-49.0494, 72.3205, -328.528, 0.55", "-50.5243, 71.9599, -332.104, 0.28", "-51.0222, 71.8251, -333.341, 0.55" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "13.5064, -31.2149, -22.7768, 0.55", "15.8095, -31.5812, -25.5776, 0.55", "17.7624, -31.8609, -27.7054, 0.55", "22.1058, -32.4524, -32.6878, 0.83", "23.2602, -32.6615, -34.0308, 0.83", "24.6064, -32.9445, -35.5869, 0.83", "25.7439, -33.1793, -36.8635, 0.83", "27.7633, -33.5846, -39.0533, 0.83", "31.1303, -34.3733, -42.7342, 0.83", "33.2227, -34.8013, -44.875, 0.83", "35.5, -35.1838, -47.3067, 0.83", "38.0403, -35.5321, -50.0027, 0.83", "40.3552, -35.8018, -52.4503, 0.83", "44.1297, -36.2104, -56.2972, 0.83", "46.4839, -36.3888, -58.5647, 0.83", "49.4906, -36.4637, -61.4641, 0.83", "51.4179, -36.4509, -63.3448, 0.83" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "23.4225, -50.5901, 4.56585, 0.55", "25.6931, -50.3944, 5.57111, 0.55", "27.5756, -50.3302, 6.46176, 0.28", "28.7618, -50.3694, 7.06238, 0.55", "30.7677, -50.5, 8.10954, 1.11", "34.3797, -50.861, 10.1876, 0.55", "35.7549, -51.0309, 11.0392, 0.55", "37.2626, -51.2884, 12.0749, 0.83", "38.8512, -51.586, 13.2301, 0.28", "38.8512, -51.586, 13.2301, 0.83", "41.4934, -52.4907, 15.4617, 0.28", "42.1996, -52.7795, 16.0792, 1.11" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "23.4225, -50.5901, 4.56585, 0.83", "25.4715, -53.9895, 4.02274, 0.83", "27.3254, -56.5602, 3.18704, 0.55", "28.5654, -58.0365, 2.39709, 0.83", "29.5772, -59.2411, 1.75255, 0.83", "30.9795, -60.9107, 0.859235, 0.83", "32.2111, -62.3769, 0.0746843, 0.83", "34.785, -64.8346, -1.89339, 0.83", "36.6901, -66.4565, -3.65333, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-35.4686, -30.4257, 21.7275, 0.55", "-36.5102, -28.1293, 20.8951, 0.55", "-37.8067, -24.9677, 19.7467, 0.83", "-39.6041, -20.5532, 18.0404, 0.55", "-40.3902, -18.415, 17.2588, 0.55", "-41.4502, -15.2931, 16.1635, 1.11", "-42.3562, -12.5147, 15.2368, 0.83", "-43.2459, -9.58877, 14.2856, 0.55", "-43.5793, -8.3933, 13.9204, 0.55", "-44.4462, -5.47082, 13.2661, 0.55", "-44.6272, -4.87763, 13.1356, 1.11", "-45.0846, -3.42936, 13.099, 0.55", "-45.6006, -1.97468, 13.5018, 0.83", "-46.1552, -0.62798, 14.1949, 0.55", "-46.8719, 0.93705, 15.1467, 0.55", "-47.4559, 2.04509, 15.8302, 0.83", "-50.3324, 7.37164, 18.3786, 0.55", "-51.1133, 8.86514, 18.9343, 0.83", "-52.158, 10.8164, 19.4452, 0.55", "-53.3546, 12.8596, 19.8022, 0.55", "-54.5492, 14.7689, 19.8498, 1.11", "-56.7977, 18.3851, 19.4732, 0.55", "-57.5166, 19.5688, 19.2349, 0.55", "-59.3108, 22.7063, 18.5658, 0.55", "-60.4332, 24.7622, 18.1056, 0.55", "-61.8537, 27.4179, 17.5773, 1.11", "-63.4423, 30.3783, 17.1006, 0.55", "-64.4161, 32.1806, 16.9474, 1.11", "-65.6508, 34.4171, 16.7915, 0.28", "-66.0806, 35.1957, 16.779, 0.55", "-66.8005, 36.4494, 16.8421, 0.28", "-67.8155, 38.0594, 17.1153, 0.83", "-69.4855, 40.4242, 17.6861, 0.28", "-70.1097, 41.2987, 17.9649, 0.55", "-72.6913, 44.8606, 19.3628, 0.28", "-73.6572, 46.231, 19.9329, 0.83", "-75.0155, 48.224, 20.7559, 0.55", "-76.3756, 50.2703, 21.5871, 0.55", "-77.7488, 52.3628, 22.3796, 0.55", "-78.7702, 54.0029, 22.9669, 0.83", "-79.9354, 55.9794, 23.5934, 0.28", "-81.0051, 57.9291, 24.1466, 0.55", "-82.2227, 60.5092, 24.6599, 0.55", "-82.4227, 61.038, 24.7324, 0.83", "-83.2036, 63.4541, 24.7057, 0.28", "-83.5159, 64.8354, 24.5465, 0.55", "-83.7195, 65.9785, 24.2231, 0.28", "-84.1299, 68.2867, 23.1603, 0.55", "-84.5211, 70.6996, 21.7618, 0.55", "-85.1062, 74.119, 19.5903, 0.28", "-85.5099, 76.3713, 17.7405, 0.83", "-86.0724, 79.5851, 14.7521, 0.55", "-86.4517, 81.8918, 12.4296, 0.55", "-86.6267, 82.8564, 11.4174, 0.55", "-86.9472, 84.3136, 9.74947, 0.83", "-87.9538, 88.331, 5.23797, 0.28", "-88.2104, 89.1528, 4.29369, 0.83", "-88.613, 90.2984, 3.09586, 0.28", "-89.0868, 91.4801, 2.03114, 0.55", "-90.6931, 94.3568, -0.213211, 0.83", "-91.335, 95.2897, -0.508331, 0.83", "-92.4521, 96.8039, -0.207728, 0.28", "-92.9865, 97.5302, 0.115635, 0.55", "-94.1912, 99.2456, 1.19132, 0.28", "-94.9859, 100.577, 2.11903, 0.55", "-96.8074, 104.316, 5.75745, 0.28", "-97.1292, 105.069, 6.57357, 0.55", "-97.554, 106.31, 7.92405, 0.28", "-97.8335, 107.316, 9.03575, 0.83", "-98.2251, 108.989, 10.9022, 0.83", "-99.1174, 113.906, 16.0672, 0.28", "-99.2213, 114.652, 16.7753, 0.55", "-99.5177, 117.291, 19.1665, 0.28", "-99.6568, 118.81, 20.4661, 0.83", "-99.7773, 120.477, 21.7897, 0.28", "-99.8746, 121.871, 22.7408, 0.83", "-100.092, 124.92, 24.225, 0.28", "-100.179, 126.319, 24.7957, 0.83", "-100.34, 128.958, 25.5984, 0.28", "-100.473, 130.574, 25.8235, 0.55", "-100.634, 132.262, 25.7972, 0.28", "-100.878, 134.234, 25.3548, 0.55", "-101.245, 136.643, 24.4362, 0.28", "-101.409, 137.648, 23.9458, 0.83", "-101.837, 140.116, 22.5719, 0.28", "-102.232, 141.947, 21.2851, 0.83", "-102.964, 145.206, 18.8479, 0.28", "-103.22, 146.257, 17.9028, 0.83", "-103.692, 148.115, 15.9927, 0.28", "-103.886, 148.844, 15.1048, 0.83", "-105.0, 153.069, 9.53792, 0.28", "-105.477, 154.685, 7.14042, 0.83", "-106.562, 158.339, 1.38971, 0.28", "-106.933, 159.64, -0.827253, 0.83", "-107.629, 161.967, -5.02414, 0.28", "-107.856, 162.685, -6.38158, 0.55", "-108.571, 164.849, -10.26, 0.28", "-108.838, 165.561, -11.4849, 0.28", "-109.558, 167.375, -14.0925, 0.55", "-111.077, 170.105, -17.8653, 0.28", "-112.307, 171.989, -20.369, 0.83", "-113.521, 173.681, -22.8409, 0.28", "-114.149, 174.515, -24.0596, 0.55", "-115.197, 175.86, -25.8254, 0.28", "-120.215, 182.236, -33.0887, 0.28", "-120.794, 182.995, -33.8663, 0.83", "-124.542, 188.029, -38.6918, 0.28", "-124.948, 188.583, -39.2471, 0.83", "-129.376, 195.13, -45.071, 0.28", "-129.72, 195.798, -45.4135, 0.55", "-130.594, 198.91, -44.7308, 0.28", "-130.886, 199.865, -44.61, 0.55", "-131.365, 201.29, -44.3282, 0.28", "-131.868, 202.563, -44.8432, 0.55", "-132.74, 204.59, -46.2976, 0.28", "-133.156, 205.547, -46.9956, 1.11", "-134.254, 207.719, -48.4589, 0.28", "-134.738, 208.599, -49.121, 0.83" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-35.4686, -30.4257, 21.7275, 0.55", "-37.3429, -31.2678, 22.1379, 0.55", "-38.1703, -31.594, 22.3424, 0.55", "-39.4337, -32.0559, 22.7064, 0.83", "-40.7224, -32.5328, 23.0961, 0.55", "-41.7879, -32.9949, 23.4775, 0.55", "-42.2818, -33.2414, 23.6696, 0.83", "-42.9777, -33.6671, 24.0079, 0.55", "-44.1216, -34.4986, 24.7931, 0.55", "-44.6628, -34.977, 25.2707, 0.55", "-45.5919, -35.9611, 26.2353, 0.55", "-45.9753, -36.4421, 26.7191, 0.28", "-46.7937, -37.6071, 27.8829, 0.83", "-47.6901, -39.0, 29.3629, 0.55", "-47.8439, -39.2455, 29.6416, 0.55", "-48.3426, -39.9805, 30.5208, 0.83", "-48.9706, -40.7638, 31.5129, 0.55", "-49.4469, -41.2995, 32.2199, 0.83", "-50.8228, -42.6551, 33.9346, 0.55", "-51.4937, -43.2377, 34.5887, 0.83", "-52.369, -43.9045, 35.319, 0.28", "-53.0915, -44.3651, 35.8079, 0.55", "-53.9307, -44.8117, 36.2241, 0.55", "-55.2096, -45.4054, 36.6992, 0.28", "-55.7892, -45.6398, 36.8285, 0.28", "-56.2944, -45.8271, 36.9291, 0.55", "-57.6579, -46.395, 37.2027, 0.28", "-58.1566, -46.6583, 37.3519, 0.55", "-58.3989, -46.805, 37.4306, 0.28", "-59.0289, -47.2414, 37.6948, 0.28", "-59.4473, -47.5354, 37.8736, 0.55", "-60.2793, -48.1669, 38.2257, 0.28", "-61.1242, -48.8785, 38.5547, 0.55", "-62.159, -49.7548, 38.9868, 0.28", "-62.9337, -50.439, 39.3231, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-63.226, 20.6061, 46.6093, 0.28", "-65.3545, 21.5985, 46.4388, 0.28", "-65.9445, 21.9101, 46.3597, 0.55", "-67.218, 22.6109, 46.1845, 0.28", "-67.5049, 22.787, 46.1373, 0.55", "-70.2255, 24.6033, 45.6335, 0.28", "-72.3285, 26.1015, 45.2779, 0.28", "-73.5847, 27.1228, 45.028, 0.28", "-74.4848, 27.9257, 44.8331, 0.55", "-76.5422, 29.8174, 44.2824, 0.28", "-77.3007, 30.5449, 44.0852, 0.55", "-78.4625, 31.7553, 43.8007, 0.28", "-79.0779, 32.4581, 43.631, 0.55", "-80.0526, 33.637, 43.3472, 0.28", "-81.3173, 35.2586, 42.8906, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-63.226, 20.6061, 46.6093, 0.28", "-60.4982, 19.1793, 44.1596, 0.28", "-59.7717, 18.783, 43.3767, 0.83", "-56.2053, 17.2203, 39.8081, 0.28", "-55.8288, 17.0675, 39.4482, 0.83", "-52.406, 15.8764, 36.5696, 0.28", "-51.3733, 15.5394, 35.773, 0.83", "-44.5056, 13.5924, 30.7969, 0.28", "-40.5698, 12.5758, 28.1555, 0.28", "-39.6856, 12.383, 27.6296, 1.11", "-34.9752, 11.4558, 25.1343, 0.28", "-33.5875, 11.1661, 24.4089, 0.55", "-28.5261, 10.0167, 21.6922, 0.28", "-26.1612, 9.43131, 20.4683, 0.28", "-24.7121, 9.00486, 19.6346, 0.55", "-22.5597, 8.33525, 18.3003, 0.28", "-16.3956, 5.99741, 13.9292, 0.28", "-13.1913, 4.70205, 11.581, 0.28", "-12.4994, 4.35664, 11.076, 0.83", "-11.0017, 3.50861, 9.99503, 0.28", "-11.0017, 3.50861, 9.99503, 0.83", "-7.68891, 1.52632, 7.84855, 0.28", "-6.78748, 0.96623, 7.46053, 0.83", "-4.20675, -1.14558, 6.16007, 0.28", "-2.6663, -2.51489, 5.33423, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-25.7875, 44.4905, -21.9959, 0.28", "-26.5943, 43.1602, -23.037, 0.28", "-27.1993, 42.1266, -23.9555, 0.83", "-27.8595, 40.9949, -24.9415, 0.55", "-28.5091, 39.8421, -26.1085, 1.11", "-30.1858, 36.5658, -29.6738, 0.28", "-30.2968, 36.3432, -29.9522, 0.83", "-30.7521, 35.3508, -31.4037, 0.83", "-31.0124, 34.7344, -32.3803, 0.83", "-31.9221, 32.4988, -36.1586, 0.28", "-32.1626, 31.9328, -37.1159, 0.83", "-33.0234, 30.0784, -40.7811, 0.28", "-33.1708, 29.7562, -41.4744, 0.55", "-33.4174, 29.2171, -42.6989, 0.55", "-33.661, 28.6716, -44.008, 0.55", "-33.9916, 27.9803, -45.6783, 1.11", "-35.2212, 25.2747, -52.9717, 0.55", "-35.3649, 24.8896, -54.0887, 0.28", "-35.4051, 24.7899, -54.4273, 0.55", "-35.6784, 24.2052, -56.6829, 0.28", "-35.7711, 23.9594, -57.6843, 0.83", "-36.2352, 22.5425, -63.7052, 0.28", "-36.2598, 22.4786, -63.9636, 0.55", "-36.8239, 21.0644, -69.7222, 0.28", "-36.9158, 20.7913, -70.762, 0.55", "-37.2152, 19.9475, -73.6636, 0.28", "-37.2684, 19.7873, -74.1643, 0.83", "-37.5562, 18.9481, -76.452, 0.28", "-37.7012, 18.521, -77.5853, 0.83", "-38.3946, 16.2389, -83.0342, 0.28", "-38.5989, 15.677, -84.2803, 0.83", "-39.5264, 13.4884, -88.8121, 0.55", "-39.6463, 13.2005, -89.3756, 0.83", "-40.3132, 11.5493, -92.4003, 0.28", "-40.5325, 11.0149, -93.2911, 0.55", "-41.4725, 8.73279, -96.6897, 0.28", "-41.8032, 7.89132, -97.9086, 0.83", "-43.5007, 3.64559, -103.525, 0.28", "-43.5856, 3.4289, -103.808, 0.83", "-44.0956, 2.04883, -105.525, 0.28", "-44.2209, 1.70518, -105.979, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-25.7875, 44.4905, -21.9959, 0.55", "-26.6531, 46.1626, -22.2535, 0.55", "-27.2866, 47.4367, -22.4766, 0.55", "-27.9106, 48.7983, -22.7861, 0.28", "-28.3114, 49.7044, -23.011, 1.38", "-28.8875, 51.0362, -23.3961, 0.55", "-29.5293, 52.5263, -23.8495, 0.55", "-29.8159, 53.1569, -24.0383, 0.83", "-30.3094, 54.2899, -24.4104, 0.28", "-30.5652, 54.9439, -24.6245, 0.55", "-30.9954, 56.0936, -24.9614, 0.28", "-31.3179, 56.9165, -25.1513, 0.83", "-31.9981, 58.5765, -25.3713, 0.28", "-32.3352, 59.4737, -25.4821, 0.55", "-32.7025, 60.5509, -25.5855, 0.28", "-32.9496, 61.4799, -25.6965, 0.83", "-33.2976, 63.2406, -25.9016, 0.28", "-33.5182, 64.8268, -26.1502, 0.83", "-33.7344, 67.535, -26.6303, 0.28", "-33.7589, 68.4852, -26.8071, 0.83", "-33.7006, 71.1322, -27.4541, 0.28", "-33.6171, 72.3751, -27.8053, 0.83", "-33.4629, 73.9187, -28.28, 0.28", "-33.3256, 75.1447, -28.6928, 0.55", "-33.1903, 76.3689, -29.1, 0.83", "-32.9706, 79.0624, -30.0263, 0.28", "-32.9375, 80.1027, -30.3787, 0.83", "-32.9494, 81.4976, -30.8583, 0.83", "-33.0345, 82.8726, -31.319, 0.28", "-33.1912, 83.9193, -31.7308, 0.83", "-33.4398, 84.9483, -32.1386, 0.28", "-33.675, 85.6653, -32.3964, 0.55", "-33.889, 86.1794, -32.6031, 0.28", "-34.438, 87.2106, -33.0101, 0.55", "-35.6138, 89.0725, -33.6321, 0.28", "-36.1018, 89.7198, -33.8615, 0.55", "-36.6861, 90.4032, -34.1022, 0.28", "-37.3647, 91.123, -34.351, 0.83", "-38.3009, 92.0235, -34.6304, 0.28", "-39.2562, 92.8825, -34.8486, 0.83", "-40.722, 94.1362, -35.0722, 0.28", "-41.2921, 94.6406, -35.18, 0.83", "-41.9445, 95.2451, -35.3106, 0.28", "-42.7815, 96.097, -35.4906, 0.28", "-43.1337, 96.5265, -35.6062, 0.55", "-43.8785, 97.667, -35.946, 0.28", "-44.382, 98.7261, -36.3694, 0.55", "-44.621, 99.3576, -36.6723, 0.55", "-44.9273, 100.321, -37.175, 0.83", "-45.439, 102.12, -38.2685, 0.28", "-45.7814, 103.445, -39.1444, 0.83", "-46.2069, 105.319, -40.5413, 0.28", "-46.3617, 106.009, -41.1013, 0.28", "-46.5533, 106.978, -41.8983, 0.83", "-46.8759, 108.82, -43.4542, 0.28", "-47.0031, 109.498, -44.0101, 0.83", "-47.4601, 111.988, -45.9559, 0.28", "-47.6899, 113.196, -46.8845, 1.11", "-48.1139, 115.581, -48.7313, 0.28", "-48.26, 116.593, -49.5094, 0.55", "-48.3849, 117.534, -50.1634, 0.28", "-48.4945, 118.297, -50.6522, 0.55", "-48.76, 120.298, -51.7976, 0.28", "-48.8574, 121.106, -52.3105, 0.55", "-49.0117, 122.343, -53.1359, 0.28", "-49.0807, 123.16, -53.7232, 0.55", "-49.121, 124.154, -54.4655, 0.28", "-49.1428, 125.633, -55.5777, 0.55", "-49.1713, 128.35, -57.4855, 0.28", "-49.16, 129.479, -58.3056, 0.55", "-49.12, 131.096, -59.4767, 0.28", "-49.0593, 132.004, -60.153, 0.83", "-48.9359, 133.243, -61.0364, 0.28", "-48.8188, 134.137, -61.6805, 0.83", "-48.5917, 135.68, -62.7643, 0.28", "-48.4754, 136.385, -63.311, 0.55", "-48.285, 137.382, -64.1087, 0.28", "-48.0887, 138.231, -64.8168, 0.55", "-47.5662, 140.679, -66.7822, 0.28", "-47.4134, 141.519, -67.4317, 0.28", "-47.2464, 143.329, -68.6908, 0.55", "-47.1899, 144.813, -69.6259, 0.28", "-47.222, 145.598, -70.0616, 0.55", "-47.5087, 147.626, -71.0284, 0.28", "-47.8611, 148.732, -71.4391, 0.83", "-48.5947, 150.268, -71.9424, 0.28", "-48.9132, 150.715, -72.0824, 0.55", "-49.5096, 151.353, -72.3106, 0.28", "-50.1397, 151.927, -72.5739, 0.55", "-51.6009, 153.043, -73.1951, 0.28", "-51.945, 153.28, -73.3271, 0.55", "-54.1037, 154.772, -74.2153, 0.28", "-54.6385, 155.192, -74.4441, 0.55", "-55.3627, 155.856, -74.7382, 0.28", "-56.0781, 156.566, -75.0314, 0.55", "-57.2018, 157.842, -75.4767, 0.28", "-57.8792, 158.671, -75.7174, 0.55", "-59.2682, 160.621, -75.9433, 0.28", "-59.7701, 161.423, -76.0088, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-8.78774, 75.5502, -14.4509, 0.55", "-6.30337, 77.8366, -15.3012, 0.55", "-2.7261, 81.5804, -18.5059, 0.55", "-1.30326, 83.1808, -20.3063, 0.83", "-0.147652, 84.5045, -21.9267, 0.83", "3.04514, 88.2621, -26.7278, 0.28", "4.22202, 89.6727, -28.499, 0.83", "8.17428, 94.9473, -36.525, 0.55", "8.92424, 96.1251, -38.6302, 0.28", "9.22587, 96.6726, -39.7188, 0.28", "9.62565, 97.5757, -41.6597, 0.55", "9.98994, 98.648, -43.9587, 0.55", "11.0233, 102.387, -51.5208, 0.28", "11.4772, 104.162, -54.7726, 0.83", "12.4763, 108.058, -61.5424, 0.83", "13.3784, 111.498, -67.3002, 0.83", "14.5985, 115.912, -74.5037, 0.28", "15.053, 117.455, -76.92, 0.28", "15.3441, 118.309, -78.084, 0.55", "16.9231, 122.133, -82.7084, 0.28", "17.2017, 122.71, -83.3173, 0.55", "19.4021, 126.471, -87.068, 0.28", "20.3189, 127.762, -88.6873, 0.55", "21.2609, 128.921, -90.3879, 0.28", "21.6404, 129.356, -91.0711, 0.55", "24.4391, 132.171, -95.8591, 0.28", "25.3299, 132.989, -97.271, 0.55", "30.3284, 137.046, -104.701, 0.28", "31.7815, 138.195, -106.785, 0.28", "33.3074, 139.389, -108.846, 0.55", "36.554, 141.924, -113.265, 0.28", "37.5937, 142.719, -114.588, 0.55", "41.8666, 145.921, -119.876, 0.28", "44.0382, 147.491, -122.399, 0.28", "45.9627, 148.867, -124.676, 0.83", "52.8207, 153.543, -132.406, 0.28", "54.6385, 154.729, -134.342, 0.28", "57.1959, 156.336, -136.887, 0.55", "59.4268, 157.7, -138.888, 0.28", "61.0373, 158.592, -140.337, 0.55", "62.6114, 159.423, -141.63, 0.28", "63.5723, 159.931, -142.094, 0.55", "65.8316, 161.214, -143.2, 0.28", "68.9848, 163.322, -144.32, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-8.78774, 75.5502, -14.4509, 0.55", "-9.4563, 79.4663, -13.0854, 0.55", "-9.69452, 82.0844, -12.0422, 0.55", "-9.79026, 83.1964, -11.5909, 0.55", "-9.92675, 84.9734, -10.8853, 0.55", "-10.0481, 86.4724, -10.3587, 0.55", "-10.3192, 90.0762, -9.10237, 0.28", "-10.3947, 91.3466, -8.64974, 0.55", "-10.4108, 93.1256, -7.89506, 0.55", "-10.4378, 93.9842, -7.46329, 0.83", "-10.5918, 95.9269, -6.37885, 0.28", "-10.7524, 97.56, -5.47198, 0.83", "-11.1239, 100.532, -3.80403, 0.28", "-11.1577, 100.874, -3.57169, 0.83", "-11.262, 103.479, -1.57257, 0.55", "-11.2633, 104.662, -0.577689, 0.55", "-11.2115, 106.4, 0.931531, 0.83", "-11.0361, 109.566, 3.72916, 0.55", "-10.8367, 111.996, 5.89156, 0.83", "-10.7006, 113.227, 7.00955, 0.28", "-10.5506, 114.312, 7.92939, 0.83", "-10.3377, 115.924, 9.2839, 0.83", "-10.0687, 118.757, 11.5764, 0.83", "-9.95775, 121.135, 13.1354, 0.28", "-9.96285, 121.949, 13.6178, 0.83", "-10.0274, 124.409, 15.1238, 0.83", "-10.1097, 126.564, 16.4732, 0.28", "-10.1522, 127.686, 17.2148, 0.55", "-10.2806, 129.915, 18.6027, 0.28", "-10.521, 132.215, 20.131, 0.55", "-10.9051, 135.221, 22.2838, 0.28", "-11.0087, 135.896, 22.8113, 0.83", "-11.2262, 137.26, 23.8585, 0.28", "-11.4836, 138.894, 25.1765, 0.55", "-11.7778, 141.275, 27.3007, 0.28", "-11.8223, 141.733, 27.6859, 0.55", "-11.8959, 142.722, 28.554, 0.28", "-11.909, 143.755, 29.5671, 0.83", "-11.8085, 145.112, 30.9572, 0.28", "-11.5485, 146.796, 32.7716, 0.55", "-11.3166, 147.936, 34.1439, 0.28", "-11.1801, 148.646, 34.9606, 0.83", "-10.8658, 150.155, 36.5947, 0.83", "-10.5506, 151.681, 38.1227, 0.55", "-10.3635, 152.519, 38.8637, 0.83", "-9.35226, 157.228, 42.5814, 0.55", "-8.98992, 159.012, 43.8033, 0.83", "-7.83104, 164.899, 47.1277, 0.28", "-7.63269, 166.16, 47.5663, 0.55", "-7.27019, 168.676, 47.9749, 0.28", "-7.05246, 170.186, 48.0483, 0.83", "-6.65443, 173.295, 47.6264, 0.28", "-6.47276, 175.171, 47.1691, 0.55", "-6.22615, 180.406, 44.7214, 0.28", "-6.17966, 182.707, 43.5506, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-3.80428, 245.372, 16.3356, 0.55", "-3.72205, 247.218, 16.3075, 0.55", "-3.7231, 249.418, 16.2587, 0.55", "-3.74518, 251.532, 16.2122, 0.83", "-3.77282, 252.993, 16.1926, 0.55", "-3.80698, 254.808, 16.1926, 1.11", "-3.82139, 257.592, 16.2202, 0.55", "-3.80144, 259.565, 16.2645, 1.11", "-3.74092, 261.058, 16.2666, 0.83", "-3.5821, 262.466, 16.2499, 0.55", "-3.18481, 264.311, 16.2132, 0.55", "-2.64746, 265.904, 16.1503, 0.83", "-1.81293, 267.567, 15.9911, 0.55", "-0.757554, 269.207, 15.7278, 0.83", "0.191071, 270.449, 15.4703, 0.83", "1.08902, 271.468, 15.2095, 0.83", "1.87497, 272.28, 14.9883, 1.11", "3.56447, 273.98, 14.4614, 0.83", "4.2866, 274.716, 14.2328, 0.55", "5.43809, 275.902, 13.9118, 0.83", "7.10618, 277.737, 13.4394, 0.55", "8.16236, 278.882, 13.1522, 1.11", "9.75388, 280.621, 12.7588, 0.55", "10.3021, 281.238, 12.6537, 0.55", "11.0451, 282.105, 12.5171, 0.55", "12.6864, 284.199, 12.27, 0.55", "13.3045, 285.075, 12.2227, 0.28", "13.6757, 285.675, 12.2195, 0.55", "14.312, 286.834, 12.2839, 0.28", "14.8154, 287.86, 12.3345, 0.83", "15.6705, 289.799, 12.4247, 0.55", "15.9432, 290.449, 12.4688, 0.83", "16.4958, 291.847, 12.5432, 0.55", "16.8507, 292.754, 12.5718, 0.83", "17.9216, 295.512, 12.6141, 0.28", "18.6365, 297.337, 12.603, 0.83", "19.3813, 299.224, 12.562, 0.28", "20.0287, 300.888, 12.5098, 0.55", "20.6877, 302.644, 12.4421, 0.55", "21.2224, 304.239, 12.3333, 0.55", "21.4725, 305.125, 12.2474, 0.28", "21.6756, 305.981, 12.1499, 0.55", "21.974, 307.639, 11.9554, 0.28", "22.1091, 308.618, 11.7909, 0.55", "22.292, 310.401, 11.4021, 0.28", "22.3939, 311.614, 11.1101, 0.28", "22.5218, 313.309, 10.6819, 0.83", "22.6192, 314.83, 10.273, 0.83", "22.8033, 317.732, 9.49292, 0.55", "22.9332, 319.361, 9.088, 0.55", "23.0572, 320.416, 8.87453, 0.55", "23.1604, 321.017, 8.74727, 0.28", "23.3396, 321.864, 8.57409, 0.55", "23.5257, 322.584, 8.45905, 0.28", "23.6992, 323.259, 8.34488, 1.11", "24.1482, 325.299, 7.80869, 0.55", "24.3844, 326.786, 7.34618, 0.55", "24.5289, 328.092, 6.86011, 0.28", "24.5756, 328.831, 6.52375, 0.83", "24.6678, 330.958, 5.39596, 0.55", "24.7194, 332.334, 4.60997, 0.83", "24.767, 333.852, 3.66574, 0.83", "24.8662, 335.389, 2.64581, 0.55", "24.9942, 336.6, 1.7911, 0.28", "25.1576, 337.782, 0.9509, 0.55", "25.3283, 338.868, 0.186693, 0.55", "25.5735, 340.294, -0.858639, 1.11", "25.9083, 342.171, -2.20271, 0.55", "26.0473, 342.985, -2.74491, 0.55", "26.1796, 343.864, -3.34397, 0.55", "26.3959, 345.941, -4.792, 0.55", "26.5015, 346.989, -5.54516, 0.83", "26.7017, 349.21, -7.03962, 0.28", "26.75, 349.876, -7.46422, 0.55", "26.9007, 351.775, -8.60783, 0.28", "26.9921, 352.704, -9.13408, 0.55", "27.1669, 354.162, -9.86512, 0.28", "27.3034, 355.62, -10.5177, 0.55", "27.3686, 356.377, -10.8175, 0.28", "27.479, 357.621, -11.2447, 0.55", "27.7062, 359.693, -11.7734, 0.55", "27.8413, 360.764, -12.0586, 0.28", "27.9115, 361.708, -12.3286, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-3.80428, 245.372, 16.3356, 0.55", "-5.31528, 246.754, 15.842, 0.55", "-7.09631, 248.477, 15.3589, 1.11", "-9.07514, 250.274, 14.9324, 0.55", "-9.72141, 250.87, 14.758, 0.83", "-11.2599, 252.325, 14.3138, 0.55", "-12.5371, 253.48, 13.9531, 0.55", "-13.5316, 254.363, 13.671, 0.83", "-16.4831, 256.912, 12.8403, 0.55", "-18.6848, 258.762, 12.3124, 0.55", "-19.461, 259.411, 12.1023, 0.83", "-21.5855, 261.149, 11.5048, 0.55", "-21.9287, 261.425, 11.4015, 0.83", "-23.0569, 262.364, 11.1022, 0.28", "-23.2384, 262.529, 11.0759, 0.55", "-24.3445, 263.52, 11.1014, 0.28", "-25.0316, 264.179, 11.1622, 0.55", "-25.8166, 264.903, 11.2156, 0.55", "-27.9582, 266.771, 11.3154, 0.55", "-29.4214, 268.048, 11.3526, 0.55", "-30.5535, 269.08, 11.2829, 0.83", "-32.0926, 270.541, 11.1004, 0.83", "-34.0397, 272.541, 10.6017, 0.55", "-35.4409, 274.064, 10.0856, 0.55", "-36.9258, 275.781, 9.37321, 1.11", "-38.5206, 277.905, 8.45425, 0.55", "-38.9339, 278.526, 8.17497, 0.83", "-40.1644, 280.663, 7.31108, 0.28", "-40.7318, 281.832, 6.66011, 0.55", "-41.0896, 282.625, 6.1101, 0.28", "-41.4081, 283.405, 5.52547, 0.83", "-42.0061, 285.086, 4.21826, 0.28", "-42.5057, 286.615, 2.99507, 0.83", "-44.1984, 292.583, -1.77044, 0.55", "-44.4898, 293.737, -2.7007, 0.55", "-44.7212, 294.786, -3.53715, 0.83", "-44.9851, 296.13, -4.54901, 0.28", "-45.0832, 296.789, -4.97346, 0.55", "-45.2148, 297.778, -5.47213, 0.28", "-45.3593, 299.121, -5.75692, 0.55", "-45.604, 301.014, -6.18828, 0.55", "-45.7562, 302.093, -6.43053, 0.55", "-45.9244, 303.298, -6.67872, 0.83", "-46.1676, 305.225, -7.08146, 0.28", "-46.3634, 306.844, -7.40136, 0.83", "-46.5345, 308.843, -7.75145, 0.55", "-46.5976, 309.64, -7.86648, 0.55", "-46.6838, 311.157, -8.01922, 0.83", "-46.7355, 311.954, -8.05613, 0.55", "-46.8308, 313.451, -7.98623, 0.83", "-47.0119, 314.824, -7.89272, 0.28", "-47.1255, 315.39, -7.90128, 0.28", "-47.5437, 316.91, -8.05794, 0.28", "-47.7472, 317.566, -8.18534, 0.83", "-48.278, 319.095, -8.65221, 0.55", "-48.928, 320.786, -9.52309, 0.83", "-49.9577, 323.082, -11.0487, 0.28", "-50.3309, 323.791, -11.6525, 0.55", "-50.787, 324.486, -12.4188, 0.28", "-51.176, 324.979, -13.0013, 0.83", "-52.704, 326.779, -15.1828, 0.83", "-53.2155, 327.355, -15.8656, 0.83", "-54.8587, 329.138, -17.8202, 0.83", "-56.7898, 331.19, -19.9835, 0.55", "-57.9727, 332.399, -21.2471, 0.55", "-59.0368, 333.494, -22.3432, 0.55", "-60.195, 334.702, -23.467, 0.55", "-61.8457, 336.592, -25.1006, 0.55", "-63.1301, 338.166, -26.2615, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "51.4179, -36.4509, -63.3448, 0.55", "52.1133, -35.9838, -64.0869, 0.55", "52.8132, -35.4678, -64.8411, 0.83", "54.236, -34.3775, -66.3756, 0.28", "54.9569, -33.805, -67.1344, 0.83", "56.6996, -32.4006, -68.8986, 0.28", "57.2969, -31.9164, -69.4767, 0.55", "58.6244, -30.7811, -70.8196, 0.55", "60.0037, -29.5272, -72.1477, 0.55", "61.18, -28.4469, -73.212, 0.28", "61.6617, -28.0006, -73.6255, 0.28", "62.1469, -27.5506, -74.0201, 0.55", "63.1933, -26.618, -74.8263, 0.28", "64.6192, -25.3716, -75.7694, 0.55", "66.2944, -23.826, -76.9639, 0.28", "66.7294, -23.4256, -77.2867, 0.55", "68.4877, -21.7183, -78.6281, 0.28", "69.6257, -20.5767, -79.52, 0.28", "70.925, -19.2488, -80.5925, 0.83", "72.9492, -17.068, -82.4146, 0.55", "73.4377, -16.5335, -82.8747, 0.55", "74.423, -15.4616, -83.8986, 0.55", "75.4221, -14.423, -84.9902, 0.83", "76.9108, -12.9643, -86.6223, 0.28", "77.3719, -12.5576, -87.0846, 0.55", "78.6102, -11.6047, -88.0541, 0.28", "78.8394, -11.4416, -88.2221, 0.55", "79.922, -10.7948, -88.9027, 0.55", "81.5376, -9.91332, -89.7121, 0.28", "82.1313, -9.60282, -89.9505, 0.55", "83.5721, -8.89838, -90.4825, 0.28", "84.1635, -8.62091, -90.6719, 0.55", "85.4362, -8.09078, -91.0693, 0.28", "86.2415, -7.8357, -91.331, 0.55", "86.6859, -7.73081, -91.4595, 0.55", "87.9312, -7.42439, -91.7599, 0.28", "88.7598, -7.20371, -91.9086, 0.28", "89.5782, -6.93018, -92.0539, 0.55", "91.5665, -6.12988, -92.3806, 0.28", "92.9541, -5.44262, -92.5899, 0.55", "94.2516, -4.68251, -92.7407, 0.55", "95.4389, -3.85009, -92.8316, 0.83", "97.1848, -2.42523, -92.8809, 0.28", "97.8219, -1.81402, -92.87, 0.28", "98.9144, -0.55394, -92.7665, 0.55", "99.9745, 0.82459, -92.6032, 0.28", "100.427, 1.45613, -92.5047, 0.55", "101.12, 2.48544, -92.2844, 0.55", "102.114, 4.01822, -91.8648, 0.28", "102.706, 4.95274, -91.6049, 0.55", "103.594, 6.41042, -91.2029, 0.28", "104.572, 8.07609, -90.7746, 0.55", "105.566, 9.80611, -90.3512, 0.55", "105.997, 10.5875, -90.1688, 0.55", "106.829, 12.1734, -89.8474, 0.55", "107.597, 13.6504, -89.6161, 0.55", "108.355, 15.1836, -89.4302, 0.55", "109.062, 16.6481, -89.2751, 0.28", "109.435, 17.4189, -89.2276, 0.55", "110.617, 19.8474, -89.112, 0.28", "111.381, 21.487, -89.0955, 0.28", "111.747, 22.3175, -89.1087, 0.55", "112.397, 23.7895, -89.1564, 0.28", "112.977, 25.1178, -89.2119, 0.55", "113.413, 26.1358, -89.2476, 0.55", "114.578, 29.0153, -89.3179, 0.28", "115.252, 30.8121, -89.3522, 0.28", "115.51, 31.547, -89.3595, 0.55", "116.003, 33.0341, -89.3555, 0.55", "116.65, 35.047, -89.2755, 0.28", "117.142, 36.6043, -89.187, 0.55", "117.584, 38.0397, -89.0533, 0.28", "117.918, 39.2812, -88.9274, 0.55", "118.107, 40.0287, -88.8346, 0.28", "118.237, 40.5321, -88.7239, 0.55", "118.605, 41.9827, -88.2887, 0.28", "118.799, 42.6859, -88.0206, 0.55", "119.495, 44.9926, -87.0269, 0.28", "120.007, 46.5677, -86.3075, 0.55", "120.711, 48.6434, -85.3023, 0.28", "121.111, 49.7561, -84.746, 0.55", "121.592, 51.0197, -84.0838, 0.28", "122.036, 52.1433, -83.4668, 0.55", "122.465, 53.1975, -82.877, 0.28", "122.784, 54.0145, -82.43, 0.55", "123.532, 56.0631, -81.3766, 0.28", "123.907, 57.105, -80.811, 0.55", "124.409, 58.6037, -79.9723, 0.28", "124.588, 59.16, -79.6402, 0.55", "125.003, 60.5782, -78.7717, 0.28", "125.398, 62.0816, -77.8608, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "51.4179, -36.4509, -63.3448, 0.28", "53.9736, -37.2424, -64.1628, 0.28", "54.7425, -37.4663, -64.4491, 0.55", "55.816, -37.6982, -64.8825, 0.55", "57.4691, -38.0074, -65.5445, 0.28", "58.4478, -38.1933, -65.9173, 0.55", "61.8687, -38.8143, -67.1189, 0.28", "62.798, -38.9311, -67.396, 0.55", "65.0173, -39.1232, -67.965, 0.28", "65.9702, -39.1692, -68.1637, 0.28", "67.5307, -39.2078, -68.3911, 0.55", "68.9698, -39.2565, -68.5251, 0.55", "72.4131, -39.4622, -68.5737, 0.28", "73.6833, -39.6067, -68.5822, 0.55", "75.1008, -39.87, -68.5928, 0.55", "77.6712, -40.4926, -68.6598, 0.28", "79.3309, -41.019, -68.736, 0.55", "81.3519, -41.9021, -68.8357, 0.28", "82.3967, -42.516, -68.8915, 0.55", "84.2635, -43.8371, -69.0005, 0.28", "85.0242, -44.5089, -69.0378, 0.55", "85.8174, -45.375, -69.057, 0.55", "86.7726, -46.6938, -68.9911, 0.28", "87.2746, -47.556, -68.9164, 0.28", "87.7444, -48.6546, -68.8004, 0.55", "88.2292, -50.2849, -68.6174, 0.28", "88.2812, -50.5318, -68.5892, 0.55", "88.6219, -52.8538, -68.4073, 0.28", "88.6483, -53.1166, -68.4157, 0.83", "88.9449, -56.6267, -68.8023, 0.28", "89.0202, -57.275, -68.9972, 0.55", "89.2245, -58.8353, -69.7073, 0.28", "89.3618, -59.7866, -70.248, 0.55", "89.7386, -61.9008, -71.7698, 0.28", "89.7865, -62.165, -71.976, 0.55", "90.3976, -65.193, -74.6219, 0.28", "90.4689, -65.6084, -74.9772, 0.55", "90.5193, -65.8631, -75.1939, 0.55", "90.6918, -66.8244, -75.8764, 0.28", "90.8246, -67.6465, -76.3579, 0.55", "91.0609, -69.0991, -77.061, 0.28", "91.1602, -69.7025, -77.3186, 0.55", "91.8844, -73.3177, -78.9427, 0.28", "92.0497, -74.0568, -79.2801, 0.55", "92.2599, -74.892, -79.7077, 0.28", "93.0, -77.5683, -81.1681, 0.28", "93.2164, -78.4362, -81.6235, 0.55", "93.7787, -80.9428, -82.8671, 0.28", "93.81, -81.1561, -82.9586, 0.55", "94.0851, -83.9259, -84.1236, 0.28", "94.1252, -85.3, -84.5981, 0.55", "94.0728, -87.0896, -85.0434, 0.28", "94.0372, -87.8562, -85.148, 0.55", "93.9507, -89.4574, -85.2379, 0.28", "93.9247, -90.1676, -85.2562, 0.55", "93.9368, -92.9099, -85.4597, 0.28", "94.037, -95.1375, -85.7533, 0.28", "94.1423, -96.0926, -85.9514, 0.55", "94.4922, -98.4124, -86.5225, 0.28", "94.6337, -99.1188, -86.7109, 0.55", "95.6478, -103.769, -88.0147, 0.28", "96.0974, -105.516, -88.5562, 0.55", "96.8663, -108.087, -89.3671, 0.28", "97.0276, -108.592, -89.5283, 0.55", "97.8848, -110.991, -90.2754, 0.28", "98.0148, -111.319, -90.3649, 0.55", "98.6288, -112.455, -90.4835, 0.28", "99.0925, -113.161, -90.5808, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "42.1996, -52.7795, 16.0792, 0.55", "43.2659, -52.4704, 16.9924, 0.55", "45.41, -51.7716, 18.8342, 0.55", "49.3246, -50.4834, 22.1248, 0.55", "52.3285, -49.5152, 24.6106, 0.55", "55.042, -48.7032, 26.8362, 0.28", "56.5437, -48.2779, 28.047, 0.83", "58.422, -47.7781, 29.5952, 0.55", "59.833, -47.4809, 30.7365, 0.28", "60.5236, -47.3802, 31.2084, 0.55", "61.9865, -47.2056, 32.1189, 0.28", "62.476, -47.1608, 32.4236, 0.55", "64.5744, -47.1528, 33.5862, 0.28", "65.903, -47.3423, 34.2699, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "42.1996, -52.7795, 16.0792, 0.28", "48.7, -57.9053, 9.88651, 0.28", "49.635, -58.5151, 9.10557, 0.83", "52.9324, -60.3851, 6.55926, 0.28", "53.917, -60.7887, 5.8704, 0.83", "56.2449, -61.508, 4.3167, 0.28", "57.2407, -61.7301, 3.67813, 0.83", "60.3386, -61.5953, 2.28577, 0.28", "61.0107, -61.4147, 1.93433, 0.83", "64.3889, -59.8285, -0.0403634, 0.28", "65.2068, -59.4141, -0.540432, 0.28", "66.3629, -58.7918, -1.27242, 0.55", "68.6114, -57.5511, -2.20352, 0.28", "72.1635, -55.5765, -3.12385, 0.28", "73.0889, -55.0685, -3.16872, 0.83", "79.8727, -51.443, -2.43987, 0.28", "81.052, -50.8615, -2.18583, 0.55", "89.7249, -46.7593, 0.802726, 0.28", "90.6629, -46.3205, 1.22983, 0.83", "96.3678, -43.4882, 4.46148, 0.28", "97.134, -43.0563, 4.95525, 0.55", "99.4393, -41.5904, 6.65882, 0.28", "101.602, -40.1815, 8.22395, 0.55", "104.277, -38.4237, 9.84968, 0.28", "105.349, -37.6922, 10.4338, 0.55", "108.657, -35.1379, 11.6655, 0.28", "109.861, -34.0814, 12.1177, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "36.6901, -66.4565, -3.65333, 0.55", "37.8818, -67.2874, -4.97127, 0.55", "39.7836, -68.6412, -7.08429, 0.55", "41.15, -69.6545, -8.62805, 0.28", "42.1285, -70.3692, -9.72192, 0.55", "43.6846, -71.4556, -11.3911, 0.55", "44.3703, -71.9435, -12.0689, 0.28", "44.8335, -72.2937, -12.5512, 0.55", "45.3624, -72.7431, -13.0623, 0.28", "46.1471, -73.4891, -13.7932, 0.55", "47.3509, -74.6361, -14.7705, 0.55", "49.1026, -76.2964, -16.1183, 0.55", "51.2383, -78.4922, -18.238, 1.38", "52.5033, -79.8476, -19.7108, 0.83", "53.5307, -80.9398, -21.0395, 0.55", "54.7659, -82.2493, -22.8039, 0.28", "56.2178, -83.7654, -25.0678, 0.83", "58.7402, -86.3756, -29.7002, 0.28", "59.0443, -86.7196, -30.3299, 0.28", "59.7169, -87.6421, -32.0287, 0.55", "60.1343, -88.2695, -33.2072, 0.55", "60.4727, -88.8786, -34.3191, 0.55", "61.4528, -90.7286, -37.2925, 0.55", "62.4557, -92.6932, -40.0522, 0.28", "63.0362, -93.9768, -41.762, 0.83", "63.3762, -94.7961, -42.8204, 0.83", "64.2908, -96.9584, -45.586, 0.55", "64.6909, -97.8339, -46.6625, 0.83", "65.3634, -99.0021, -47.9735, 0.28", "65.92, -99.7679, -48.8157, 0.55", "66.2955, -100.252, -49.265, 0.28", "66.494, -100.504, -49.4542, 0.55", "67.5363, -101.656, -50.2245, 0.28", "68.6297, -102.968, -51.1587, 0.28", "69.4752, -103.993, -51.8673, 0.83", "70.1761, -104.953, -52.4758, 0.55", "71.9124, -107.5, -53.9934, 0.28", "72.3954, -108.313, -54.4711, 0.83", "73.8681, -111.076, -56.0383, 0.28", "74.3913, -112.245, -56.6303, 0.83", "75.3015, -114.343, -57.5854, 0.28", "75.5542, -114.945, -57.8623, 0.83", "76.586, -117.529, -58.9859, 0.28", "77.2142, -119.114, -59.6457, 0.28", "77.8342, -120.448, -60.1509, 0.55", "78.5444, -121.918, -60.7948, 0.55", "79.7532, -124.167, -61.8772, 0.55", "80.4173, -125.313, -62.4538, 0.28", "80.7744, -125.904, -62.7718, 0.55", "81.8916, -127.836, -63.9548, 0.28", "82.7366, -129.205, -64.8726, 0.55", "83.6026, -130.681, -65.8566, 0.28", "83.8748, -131.118, -66.1283, 0.83", "85.0128, -132.979, -67.3598, 0.28", "85.2773, -133.39, -67.6547, 0.55", "85.9541, -134.376, -68.4553, 0.55", "87.2034, -135.958, -69.6394, 0.28", "87.2527, -136.019, -69.6878, 0.55", "88.3114, -137.309, -70.8872, 0.28", "88.7298, -137.787, -71.3737, 0.55", "89.787, -139.114, -72.7912, 0.28", "90.451, -139.976, -73.7817, 0.55", "91.616, -141.461, -75.647, 0.55", "92.5952, -142.766, -77.3191, 0.28", "93.1805, -143.595, -78.3565, 0.83", "94.1774, -145.065, -80.144, 0.28", "94.4124, -145.353, -80.5024, 0.55", "95.3447, -146.301, -81.7765, 0.28", "95.7146, -146.563, -82.1278, 0.55", "97.6171, -147.601, -83.6326, 0.28", "98.2464, -147.88, -84.0897, 0.83", "100.853, -148.696, -85.6436, 0.28", "101.352, -148.821, -85.9144, 0.55", "103.481, -149.099, -86.8847, 0.28", "105.323, -149.159, -87.7045, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "36.6901, -66.4565, -3.65333, 0.55", "37.0823, -67.807, -5.75031, 0.55", "37.7414, -70.7249, -10.1576, 0.55", "38.3589, -73.227, -13.8875, 0.28", "38.843, -75.0043, -16.6187, 0.83", "39.7877, -77.8089, -21.0516, 0.28", "40.0125, -78.4381, -22.125, 0.55", "40.185, -78.9544, -23.1011, 0.55", "40.6178, -79.8592, -25.1316, 0.55", "41.3815, -81.1552, -28.2469, 0.55", "41.8223, -81.8327, -29.9641, 0.55", "43.3467, -83.5354, -34.583, 0.83", "44.3138, -84.5264, -37.4386, 0.28", "44.6793, -84.9014, -38.6207, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-44.2209, 1.70518, -105.979, 0.28", "-45.3834, 0.92928, -106.097, 0.28", "-46.8935, -0.0788637, -106.251, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-44.2209, 1.70518, -105.979, 0.28", "-44.1924, 0.37484, -107.835, 0.28", "-44.184, -0.0141137, -108.377, 0.55", "-44.1579, -1.23102, -110.074, 0.28", "-44.1463, -1.76965, -110.825, 0.83", "-44.0957, -4.12685, -114.113, 0.28", "-44.0873, -4.51425, -114.653, 0.83" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-63.1301, 338.166, -26.2615, 0.55", "-64.4229, 339.145, -27.5061, 0.55", "-65.782, 340.317, -28.771, 0.28", "-67.1373, 341.486, -30.0323, 0.55", "-71.0564, 344.865, -33.6795, 0.28", "-71.5069, 345.254, -34.0988, 0.55", "-74.4128, 347.76, -36.8032, 0.28", "-75.8799, 348.827, -38.3464, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-63.1301, 338.166, -26.2615, 0.28", "-64.8577, 337.514, -25.8866, 0.28", "-65.8194, 337.152, -25.6779, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "125.398, 62.0816, -77.8608, 0.28", "121.497, 65.4147, -76.4489, 0.28", "120.174, 66.5444, -75.9703, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "125.398, 62.0816, -77.8608, 0.28", "126.339, 63.6088, -76.7888, 0.28", "128.078, 66.4728, -74.7169, 0.28", "128.524, 67.2294, -74.1117, 0.55", "130.062, 69.9321, -71.7072, 0.28", "130.945, 71.4851, -70.3254, 0.55", "132.086, 73.4914, -68.5404, 0.28", "132.657, 74.5218, -67.5181, 0.55", "133.506, 76.103, -65.724, 0.28", "134.139, 77.3855, -64.2306, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "44.6793, -84.9014, -38.6207, 0.55", "42.5633, -87.3358, -39.6156, 0.55", "41.591, -88.5208, -40.1142, 0.28", "40.9235, -89.2808, -40.4481, 0.83", "36.8026, -93.7337, -42.2794, 0.28", "35.6539, -95.0143, -42.7759, 0.83", "30.7648, -100.612, -44.763, 0.28", "30.0861, -101.384, -45.0321, 0.83", "25.859, -105.866, -46.5275, 0.28", "24.629, -107.116, -46.8689, 0.55", "19.2661, -112.21, -47.9776, 0.28", "18.1621, -113.21, -48.2041, 0.28", "15.7565, -115.274, -48.7005, 0.83", "8.59348, -121.217, -50.2481, 0.28", "6.6011, -122.838, -50.7322, 0.55", "2.65512, -125.973, -51.7693, 0.55", "-0.298587, -128.213, -52.5383, 0.55", "-5.37729, -132.125, -53.8862, 0.28", "-6.77359, -133.284, -54.2616, 0.83", "-11.3643, -137.35, -55.3829, 0.28", "-12.2264, -138.174, -55.5637, 0.55", "-15.8221, -141.915, -55.888, 0.28", "-16.87, -142.984, -55.8671, 0.55", "-20.7251, -147.074, -55.4233, 0.28", "-21.0743, -147.425, -55.3813, 0.83", "-23.0983, -149.373, -54.9547, 0.28", "-24.7045, -150.883, -54.4996, 0.55", "-29.6014, -155.284, -52.9989, 0.28", "-31.0369, -156.598, -52.4732, 0.83", "-37.0555, -162.21, -49.8064, 0.28", "-39.6068, -164.647, -48.6018, 0.55", "-42.939, -167.955, -47.0175, 0.55", "-46.5485, -171.763, -45.1326, 0.28", "-49.4272, -175.059, -43.3419, 0.55", "-51.5233, -177.516, -42.1544, 0.28", "-51.8265, -177.898, -41.9843, 0.55", "-53.7659, -180.201, -41.0795, 0.28", "-55.3341, -181.89, -40.4282, 0.55", "-57.134, -183.621, -39.7734, 0.55", "-60.4375, -186.336, -38.8835, 0.28", "-61.8739, -187.397, -38.4928, 0.55", "-63.9443, -188.869, -37.9246, 0.28", "-65.2616, -189.743, -37.5287, 0.55", "-68.858, -192.035, -36.4799, 0.28", "-70.0957, -192.792, -36.1779, 0.55", "-73.1868, -194.74, -35.4151, 0.28", "-75.2343, -196.13, -35.1256, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "44.6793, -84.9014, -38.6207, 0.28", "48.313, -85.4338, -39.3945, 0.28", "48.8321, -85.5293, -39.5559, 0.83", "51.2026, -86.0906, -40.3225, 0.28", "52.0317, -86.2651, -40.5965, 0.28", "53.0471, -86.5267, -40.9742, 0.55", "54.7988, -87.027, -41.8783, 0.28", "56.6217, -87.6483, -43.1167, 0.55", "57.6827, -88.0889, -43.8801, 0.55", "58.9627, -88.7205, -44.9884, 0.55", "61.1486, -89.8611, -47.1204, 0.83", "63.7073, -91.2627, -49.9047, 0.28", "64.5751, -91.7582, -50.9173, 0.28", "65.0052, -92.0492, -51.4968, 0.83", "67.8212, -94.0581, -55.5159, 0.28", "68.5923, -94.6891, -56.7315, 0.83", "69.22, -95.2753, -57.8162, 0.83", "70.3098, -96.4279, -59.7155, 0.83", "72.1257, -98.498, -62.9994, 0.55", "73.6438, -100.519, -65.8588, 0.55", "75.4321, -103.414, -69.3294, 0.55", "76.2068, -105.01, -71.0443, 0.55", "76.7921, -106.583, -72.5432, 0.28", "76.8486, -106.793, -72.7085, 0.55", "77.4005, -110.034, -74.7078, 0.28", "77.5135, -111.276, -75.3189, 0.55", "77.8009, -114.968, -76.843, 0.28", "78.0009, -117.065, -77.5953, 0.55", "78.2834, -119.33, -78.3228, 0.28", "78.5807, -121.033, -78.7575, 0.55", "79.448, -125.016, -79.4998, 0.28", "79.7059, -125.974, -79.6132, 1.11", "81.3956, -130.795, -79.8168, 0.28", "82.4046, -133.145, -79.7616, 0.55", "83.5618, -135.355, -79.3488, 0.28", "84.0083, -136.052, -79.0833, 0.55", "85.2975, -137.793, -78.0628, 0.28", "86.2081, -138.907, -77.2275, 0.28", "88.0706, -140.873, -75.2779, 0.55", "90.8257, -143.795, -72.2095, 0.55", "91.8992, -144.937, -70.9868, 0.28", "92.1277, -145.156, -70.7463, 0.55", "93.8535, -146.619, -69.1334, 0.28", "94.1582, -146.863, -68.8728, 0.55", "95.6366, -147.856, -67.8931, 0.28", "96.3335, -148.238, -67.5662, 0.55", "99.2016, -149.408, -66.1431, 0.28", "100.129, -149.661, -65.5793, 0.55", "101.641, -149.863, -64.6796, 0.28", "102.139, -149.86, -64.3006, 0.55", "103.591, -149.674, -63.0338, 0.28", "104.847, -149.456, -61.8474, 0.55", "107.114, -148.892, -59.277, 0.28", "108.832, -148.369, -57.1686, 0.55", "112.461, -146.971, -52.4611, 0.28", "112.983, -146.754, -51.7453, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_26", "dend_11", "dend_0", "dend_32", "dend_27", "dend_21", "dend_12", "dend_4", "dend_1", "dend_42", "dend_33", "dend_31", "dend_28", "dend_23", "dend_22", "dend_16", "dend_13", "dend_6", "dend_5", "dend_3", "dend_2", "dend_48", "dend_43", "dend_39", "dend_34", "dend_30", "dend_29", "dend_25", "dend_24", "dend_18", "dend_17", "dend_15", "dend_14", "dend_10", "dend_7", "dend_45", "dend_44", "dend_41", "dend_40", "dend_38", "dend_35", "dend_20", "dend_19", "dend_9", "dend_8", "dend_47", "dend_46", "dend_37", "dend_36" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_26", "dend_11", "dend_0", "dend_32", "dend_27", "dend_21", "dend_12", "dend_4", "dend_1", "dend_42", "dend_33", "dend_31", "dend_28", "dend_23", "dend_22", "dend_16", "dend_13", "dend_6", "dend_5", "dend_3", "dend_2", "dend_48", "dend_43", "dend_39", "dend_34", "dend_30", "dend_29", "dend_25", "dend_24", "dend_18", "dend_17", "dend_15", "dend_14", "dend_10", "dend_7", "dend_45", "dend_44", "dend_41", "dend_40", "dend_38", "dend_35", "dend_20", "dend_19", "dend_9", "dend_8", "dend_47", "dend_46", "dend_37", "dend_36" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_26", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_32", "dend_32", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "axon_1", "axon_1", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L4_BTC_e8dd2ca96e_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_32, id: dend_32, parent: dend_26
create dend_32
public dend_32
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_21, id: dend_21, parent: dend_11
create dend_21
public dend_21
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_42, id: dend_42, parent: dend_32
create dend_42
public dend_42
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_48, id: dend_48, parent: dend_42
create dend_48
public dend_48
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_39, id: dend_39, parent: dend_33
create dend_39
public dend_39
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_34
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_26, dend_11, dend_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_26, dend_11, dend_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_47
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_26, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_4, dend_4, dend_4, dend_4, dend_1, axon_1, axon_1, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_26(0), soma_0(0.49999977243497945)
    connect dend_11(0), soma_0(0.49999977243497945)
    connect dend_0(0), soma_0(0.49999977243497945)
    connect axon_0(0), soma_0(1.0)
    connect dend_32(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_21(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_42(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_48(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_39(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.41353, 11.9919, 1.31418, 2.57576 ) }
    soma_0 { pt3dadd( -2.15404, 10.8832, 1.19952, 4.64379 ) }
    soma_0 { pt3dadd( -1.89456, 9.77439, 1.08486, 7.1282 ) }
    soma_0 { pt3dadd( -1.63508, 8.66563, 0.970208, 9.55084 ) }
    soma_0 { pt3dadd( -1.37559, 7.55686, 0.855552, 11.3429 ) }
    soma_0 { pt3dadd( -1.11611, 6.44809, 0.740896, 12.5314 ) }
    soma_0 { pt3dadd( -0.856626, 5.33932, 0.626239, 13.4739 ) }
    soma_0 { pt3dadd( -0.597143, 4.23056, 0.511583, 13.1445 ) }
    soma_0 { pt3dadd( -0.337659, 3.12179, 0.396927, 12.6062 ) }
    soma_0 { pt3dadd( -0.0781762, 2.01302, 0.282271, 12.0679 ) }
    soma_0 { pt3dadd( 0.181307, 0.904256, 0.167615, 11.529 ) }
    soma_0 { pt3dadd( 0.44079, -0.204511, 0.0529586, 10.9839 ) }
    soma_0 { pt3dadd( 0.700273, -1.31328, -0.0616975, 10.4042 ) }
    soma_0 { pt3dadd( 0.959757, -2.42205, -0.176354, 9.22811 ) }
    soma_0 { pt3dadd( 1.21924, -3.53081, -0.29101, 7.93477 ) }
    soma_0 { pt3dadd( 1.47872, -4.63958, -0.405666, 7.09354 ) }
    soma_0 { pt3dadd( 1.73821, -5.74835, -0.520322, 6.0452 ) }
    soma_0 { pt3dadd( 1.99769, -6.85711, -0.634978, 4.95117 ) }
    soma_0 { pt3dadd( 2.25717, -7.96588, -0.749635, 4.10786 ) }
    soma_0 { pt3dadd( 2.51666, -9.07465, -0.864291, 3.50414 ) }
    soma_0 { pt3dadd( 2.77614, -10.1834, -0.978947, 3.28095 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 21/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 1.75135, -9.5025, 1.8584, 2.77 ) }
    dend_26 { pt3dadd( 2.16671, -14.6841, 1.8584, 3.05 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 23/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -5.09865, 10.2775, -3.7416, 1.38 ) }
    dend_11 { pt3dadd( -6.35223, 12.341, -3.97105, 1.38 ) }
    dend_11 { pt3dadd( -8.31504, 15.572, -4.33032, 1.66 ) }
    dend_11 { pt3dadd( -9.99095, 18.3307, -4.63707, 1.38 ) }
    dend_11 { pt3dadd( -11.3311, 20.5368, -4.88238, 1.11 ) }
    dend_11 { pt3dadd( -12.3896, 22.2791, -5.07611, 1.11 ) }
    dend_11 { pt3dadd( -14.8365, 26.307, -5.52399, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 30/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 6.01135, 6.4475, 6.4384, 1.38 ) }
    dend_0 { pt3dadd( 6.01661, 11.0022, 7.66093, 1.38 ) }
    dend_0 { pt3dadd( 6.16479, 13.8175, 8.41922, 1.38 ) }
    dend_0 { pt3dadd( 6.60407, 18.7399, 9.90632, 1.38 ) }
    dend_0 { pt3dadd( 7.2045, 23.99, 11.5678, 1.38 ) }
    dend_0 { pt3dadd( 7.65642, 27.9416, 12.8183, 1.38 ) }
    dend_0 { pt3dadd( 8.05967, 31.4677, 13.9342, 0.83 ) }
    dend_0 { pt3dadd( 8.32303, 34.8956, 15.0954, 1.38 ) }
    dend_0 { pt3dadd( 8.70872, 38.9634, 16.5339, 1.38 ) }
    dend_0 { pt3dadd( 9.58995, 43.8144, 18.2197, 1.11 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 40/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.77614, -10.1834, -0.978947, 0.695432 ) }
    axon_0 { pt3dadd( 6.19422, -24.7888, -0.978947, 0.695432 ) }
    axon_0 { pt3dadd( 9.61231, -39.3941, -0.978947, 0.695432 ) }
    // Section: dend_32, id: dend_32, parent: dend_26 (entry count 43/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 2.16671, -14.6841, 1.8584, 2.22 ) }
    dend_32 { pt3dadd( 5.18223, -20.5819, 1.12062, 2.22 ) }
    dend_32 { pt3dadd( 6.75093, -23.65, 0.73682, 1.66 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 46/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 2.16671, -14.6841, 1.8584, 0.83 ) }
    dend_27 { pt3dadd( -0.601314, -16.909, 3.45097, 0.83 ) }
    dend_27 { pt3dadd( -2.4701, -18.4464, 4.82034, 1.11 ) }
    dend_27 { pt3dadd( -5.04839, -20.5674, 6.70961, 0.83 ) }
    dend_27 { pt3dadd( -7.02876, -22.1966, 8.16074, 0.83 ) }
    dend_27 { pt3dadd( -10.3864, -24.9588, 10.6211, 1.38 ) }
    dend_27 { pt3dadd( -13.5958, -27.599, 12.9728, 1.38 ) }
    dend_27 { pt3dadd( -16.3776, -29.6574, 15.289, 0.83 ) }
    // Section: dend_21, id: dend_21, parent: dend_11 (entry count 54/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -14.8365, 26.307, -5.52399, 0.55 ) }
    dend_21 { pt3dadd( -17.414, 27.1893, -3.92927, 0.55 ) }
    dend_21 { pt3dadd( -18.5959, 27.4658, -2.92687, 0.55 ) }
    dend_21 { pt3dadd( -19.421, 27.6153, -2.13251, 0.55 ) }
    dend_21 { pt3dadd( -20.7694, 27.8, -0.775423, 1.11 ) }
    dend_21 { pt3dadd( -23.1332, 28.031, 1.61401, 0.83 ) }
    dend_21 { pt3dadd( -25.5094, 28.1506, 4.07264, 0.83 ) }
    dend_21 { pt3dadd( -27.969, 28.0647, 6.83125, 0.55 ) }
    dend_21 { pt3dadd( -29.304, 27.9245, 8.35665, 1.38 ) }
    dend_21 { pt3dadd( -30.2735, 27.7541, 9.48327, 0.28 ) }
    dend_21 { pt3dadd( -31.1571, 27.5315, 10.5252, 0.83 ) }
    dend_21 { pt3dadd( -32.2155, 27.2657, 11.8138, 0.28 ) }
    dend_21 { pt3dadd( -32.9412, 27.0751, 12.7419, 0.55 ) }
    dend_21 { pt3dadd( -33.8714, 26.8924, 13.8562, 0.55 ) }
    dend_21 { pt3dadd( -35.3493, 26.6651, 15.6077, 0.55 ) }
    dend_21 { pt3dadd( -36.6281, 26.4779, 17.1079, 0.55 ) }
    dend_21 { pt3dadd( -38.7962, 26.2379, 19.6841, 0.55 ) }
    dend_21 { pt3dadd( -39.7188, 26.1602, 20.7419, 0.55 ) }
    dend_21 { pt3dadd( -41.5014, 26.0337, 22.7064, 0.83 ) }
    dend_21 { pt3dadd( -42.7645, 25.9745, 24.0439, 0.83 ) }
    dend_21 { pt3dadd( -43.787, 25.9362, 25.0509, 0.83 ) }
    dend_21 { pt3dadd( -45.9768, 25.9, 27.1396, 0.83 ) }
    dend_21 { pt3dadd( -46.7986, 25.8693, 27.8874, 0.83 ) }
    dend_21 { pt3dadd( -48.7615, 25.7759, 29.7694, 0.83 ) }
    dend_21 { pt3dadd( -51.4319, 25.5766, 32.3981, 0.83 ) }
    dend_21 { pt3dadd( -52.1034, 25.545, 33.0513, 0.83 ) }
    dend_21 { pt3dadd( -53.5772, 25.5091, 34.4345, 0.28 ) }
    dend_21 { pt3dadd( -54.4203, 25.4529, 35.1516, 0.83 ) }
    dend_21 { pt3dadd( -56.4634, 25.2872, 36.81, 0.28 ) }
    dend_21 { pt3dadd( -57.9286, 25.143, 37.8678, 0.83 ) }
    dend_21 { pt3dadd( -59.6698, 24.9582, 39.0031, 0.28 ) }
    dend_21 { pt3dadd( -60.049, 24.9158, 39.243, 0.55 ) }
    dend_21 { pt3dadd( -62.2451, 24.728, 40.5017, 0.55 ) }
    dend_21 { pt3dadd( -63.8404, 24.6401, 41.3461, 0.28 ) }
    dend_21 { pt3dadd( -65.7088, 24.5256, 42.1198, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 89/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -14.8365, 26.307, -5.52399, 1.11 ) }
    dend_12 { pt3dadd( -15.7709, 29.7601, -7.66248, 1.11 ) }
    dend_12 { pt3dadd( -16.3115, 31.6439, -8.65538, 1.11 ) }
    dend_12 { pt3dadd( -16.9635, 33.916, -9.8529, 1.11 ) }
    dend_12 { pt3dadd( -17.5116, 35.8259, -10.8596, 1.11 ) }
    dend_12 { pt3dadd( -18.157, 38.0749, -12.045, 0.83 ) }
    dend_12 { pt3dadd( -18.818, 40.3782, -13.259, 0.83 ) }
    dend_12 { pt3dadd( -19.3043, 42.1929, -13.9576, 1.11 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 97/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 9.58995, 43.8144, 18.2197, 0.83 ) }
    dend_4 { pt3dadd( 8.39629, 47.7717, 20.1194, 0.83 ) }
    dend_4 { pt3dadd( 7.50351, 50.7315, 21.5403, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_4 { pt3dadd( 6.812, 53.024, 22.6409, 0.83 ) }
    dend_4 { pt3dadd( 5.73288, 56.6016, 24.3583, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 2/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 9.58995, 43.8144, 18.2197, 0.83 ) }
    dend_1 { pt3dadd( 15.6281, 49.0265, 18.3209, 0.83 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 4/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 9.61231, -39.3941, -0.978947, 0.695432 ) }
    axon_1 { pt3dadd( 13.0304, -53.9995, -0.978947, 0.695432 ) }
    axon_1 { pt3dadd( 16.4485, -68.6049, -0.978947, 0.695432 ) }
    // Section: dend_42, id: dend_42, parent: dend_32 (entry count 7/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 6.75093, -23.65, 0.73682, 0.83 ) }
    dend_42 { pt3dadd( 7.30969, -24.577, -0.94268, 0.83 ) }
    dend_42 { pt3dadd( 7.6302, -24.9938, -1.9396, 0.83 ) }
    dend_42 { pt3dadd( 8.02239, -25.4276, -3.19207, 0.83 ) }
    dend_42 { pt3dadd( 9.5757, -27.1027, -8.35172, 0.83 ) }
    dend_42 { pt3dadd( 10.439, -28.023, -11.2114, 0.83 ) }
    dend_42 { pt3dadd( 11.7326, -29.4023, -15.4972, 0.55 ) }
    dend_42 { pt3dadd( 12.2702, -30.0042, -17.6058, 0.83 ) }
    dend_42 { pt3dadd( 12.8424, -30.6274, -20.058, 0.83 ) }
    dend_42 { pt3dadd( 13.3775, -31.1378, -22.3823, 1.11 ) }
    dend_42 { pt3dadd( 13.5064, -31.2149, -22.7768, 1.11 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 18/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 6.75093, -23.65, 0.73682, 1.66 ) }
    dend_33 { pt3dadd( 7.88545, -26.6835, 0.808162, 1.66 ) }
    dend_33 { pt3dadd( 9.5307, -30.3436, 0.902591, 1.11 ) }
    dend_33 { pt3dadd( 10.7763, -32.7719, 0.985041, 1.11 ) }
    dend_33 { pt3dadd( 13.0683, -36.5726, 1.52653, 1.11 ) }
    dend_33 { pt3dadd( 15.0251, -39.8173, 1.98881, 1.11 ) }
    dend_33 { pt3dadd( 16.3938, -42.0869, 2.31216, 1.38 ) }
    dend_33 { pt3dadd( 18.025, -44.5147, 2.70747, 1.11 ) }
    dend_33 { pt3dadd( 19.0517, -45.8696, 3.00997, 1.11 ) }
    dend_33 { pt3dadd( 23.4225, -50.5901, 4.56585, 1.66 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 28/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -16.3776, -29.6574, 15.289, 0.28 ) }
    dend_31 { pt3dadd( -16.215, -31.6834, 18.991, 0.28 ) }
    dend_31 { pt3dadd( -16.2207, -32.5121, 20.6613, 1.11 ) }
    dend_31 { pt3dadd( -16.236, -35.2272, 26.5287, 0.55 ) }
    dend_31 { pt3dadd( -16.2142, -36.0686, 28.3001, 0.83 ) }
    dend_31 { pt3dadd( -16.1657, -37.9312, 32.2214, 0.83 ) }
    dend_31 { pt3dadd( -16.1099, -40.078, 36.7409, 0.55 ) }
    dend_31 { pt3dadd( -16.0955, -41.2812, 39.41, 1.11 ) }
    dend_31 { pt3dadd( -16.022, -43.3467, 44.2297, 0.55 ) }
    dend_31 { pt3dadd( -16.0537, -44.0852, 45.9222, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 38/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -16.3776, -29.6574, 15.289, 0.83 ) }
    dend_28 { pt3dadd( -18.595, -29.8371, 16.2106, 0.83 ) }
    dend_28 { pt3dadd( -20.2596, -29.9626, 16.8759, 1.11 ) }
    dend_28 { pt3dadd( -21.9108, -30.0427, 17.486, 0.83 ) }
    dend_28 { pt3dadd( -23.7725, -30.1039, 18.1149, 0.83 ) }
    dend_28 { pt3dadd( -26.0683, -30.1794, 18.8906, 0.83 ) }
    dend_28 { pt3dadd( -28.2599, -30.2515, 19.631, 0.83 ) }
    dend_28 { pt3dadd( -30.6668, -30.3335, 20.4065, 1.11 ) }
    dend_28 { pt3dadd( -33.2094, -30.394, 21.1348, 1.11 ) }
    dend_28 { pt3dadd( -35.4686, -30.4257, 21.7275, 1.11 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 48/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -65.7088, 24.5256, 42.1198, 0.28 ) }
    dend_23 { pt3dadd( -64.9199, 23.2802, 43.5463, 0.28 ) }
    dend_23 { pt3dadd( -64.6398, 22.838, 44.0527, 0.83 ) }
    dend_23 { pt3dadd( -63.226, 20.6061, 46.6093, 0.28 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 52/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -65.7088, 24.5256, 42.1198, 0.28 ) }
    dend_22 { pt3dadd( -67.8821, 25.1786, 43.2151, 0.28 ) }
    dend_22 { pt3dadd( -68.6903, 25.4162, 43.329, 0.55 ) }
    dend_22 { pt3dadd( -70.5329, 25.8994, 43.3072, 0.28 ) }
    dend_22 { pt3dadd( -72.2052, 26.2978, 43.1897, 0.83 ) }
    dend_22 { pt3dadd( -74.197, 26.7723, 43.0497, 0.28 ) }
    dend_22 { pt3dadd( -76.1078, 27.2274, 42.9153, 0.28 ) }
    dend_22 { pt3dadd( -79.4534, 27.9598, 42.1488, 0.28 ) }
    dend_22 { pt3dadd( -80.1472, 28.1085, 41.9155, 0.83 ) }
    dend_22 { pt3dadd( -81.2412, 28.3542, 41.3814, 0.83 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 62/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -19.3043, 42.1929, -13.9576, 0.55 ) }
    dend_16 { pt3dadd( -19.9895, 42.4358, -14.8072, 0.55 ) }
    dend_16 { pt3dadd( -21.1977, 42.8639, -16.3052, 0.55 ) }
    dend_16 { pt3dadd( -22.3641, 43.2773, -17.7513, 0.83 ) }
    dend_16 { pt3dadd( -24.4685, 44.023, -20.3605, 0.55 ) }
    dend_16 { pt3dadd( -25.7875, 44.4905, -21.9959, 1.11 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 68/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -19.3043, 42.1929, -13.9576, 0.55 ) }
    dend_13 { pt3dadd( -18.0121, 46.0652, -14.5986, 0.55 ) }
    dend_13 { pt3dadd( -17.465, 47.9834, -14.7988, 0.55 ) }
    dend_13 { pt3dadd( -17.0597, 49.6278, -14.827, 0.83 ) }
    dend_13 { pt3dadd( -16.5542, 51.7919, -14.7593, 0.55 ) }
    dend_13 { pt3dadd( -16.2409, 53.1822, -14.7053, 0.83 ) }
    dend_13 { pt3dadd( -15.77, 55.2533, -14.5951, 0.55 ) }
    dend_13 { pt3dadd( -15.4482, 56.8276, -14.4197, 0.83 ) }
    dend_13 { pt3dadd( -14.9079, 59.0933, -14.2182, 0.28 ) }
    dend_13 { pt3dadd( -14.5524, 60.3622, -14.1395, 0.83 ) }
    dend_13 { pt3dadd( -13.8836, 62.4546, -14.0523, 0.55 ) }
    dend_13 { pt3dadd( -13.3279, 64.0973, -14.0119, 0.83 ) }
    dend_13 { pt3dadd( -12.4195, 66.6175, -14.0059, 0.55 ) }
    dend_13 { pt3dadd( -11.3195, 69.4411, -14.0783, 0.83 ) }
    dend_13 { pt3dadd( -10.2444, 72.0616, -14.2416, 0.83 ) }
    dend_13 { pt3dadd( -8.78774, 75.5502, -14.4509, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 84/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 5.73288, 56.6016, 24.3583, 0.83 ) }
    dend_6 { pt3dadd( 6.5889, 59.5968, 25.1759, 0.83 ) }
    dend_6 { pt3dadd( 7.37272, 62.896, 26.0542, 0.83 ) }
    dend_6 { pt3dadd( 7.78053, 64.9384, 26.6673, 0.83 ) }
    dend_6 { pt3dadd( 8.28151, 67.776, 27.5866, 0.83 ) }
    dend_6 { pt3dadd( 8.80767, 70.9717, 28.6351, 0.83 ) }
    dend_6 { pt3dadd( 9.3243, 74.5144, 29.7956, 0.83 ) }
    dend_6 { pt3dadd( 9.73452, 77.8889, 30.9494, 0.83 ) }
    dend_6 { pt3dadd( 10.09, 81.238, 32.1686, 0.83 ) }
    dend_6 { pt3dadd( 10.2505, 83.2541, 32.8754, 0.55 ) }
    dend_6 { pt3dadd( 10.3713, 85.4543, 33.5562, 0.55 ) }
    dend_6 { pt3dadd( 10.481, 87.2997, 34.0018, 0.83 ) }
    dend_6 { pt3dadd( 10.6075, 88.952, 34.2671, 0.83 ) }
    dend_6 { pt3dadd( 10.7673, 90.4768, 34.4244, 0.55 ) }
    dend_6 { pt3dadd( 11.0004, 92.4067, 34.4453, 0.83 ) }
    dend_6 { pt3dadd( 11.1993, 93.9734, 34.4156, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_6 { pt3dadd( 11.358, 95.3196, 34.3799, 0.83 ) }
    dend_6 { pt3dadd( 11.5703, 97.4091, 34.3313, 0.55 ) }
    dend_6 { pt3dadd( 11.7341, 99.5106, 34.2539, 0.83 ) }
    dend_6 { pt3dadd( 11.8428, 101.425, 34.0098, 0.55 ) }
    dend_6 { pt3dadd( 11.8722, 102.467, 33.8263, 0.55 ) }
    dend_6 { pt3dadd( 11.8764, 104.08, 33.5248, 0.83 ) }
    dend_6 { pt3dadd( 11.8273, 106.389, 33.0694, 0.83 ) }
    dend_6 { pt3dadd( 11.7694, 108.301, 32.6943, 0.55 ) }
    dend_6 { pt3dadd( 11.5516, 112.634, 31.8177, 0.83 ) }
    dend_6 { pt3dadd( 11.3988, 115.147, 31.3092, 0.83 ) }
    dend_6 { pt3dadd( 11.222, 118.213, 30.7353, 0.83 ) }
    dend_6 { pt3dadd( 11.1282, 120.075, 30.4696, 0.83 ) }
    dend_6 { pt3dadd( 11.0278, 121.566, 30.3486, 0.83 ) }
    dend_6 { pt3dadd( 10.9059, 123.035, 30.3463, 0.55 ) }
    dend_6 { pt3dadd( 10.7368, 124.706, 30.4603, 0.55 ) }
    dend_6 { pt3dadd( 10.4771, 126.612, 30.5794, 0.83 ) }
    dend_6 { pt3dadd( 9.87556, 130.15, 30.7771, 0.83 ) }
    dend_6 { pt3dadd( 9.3886, 132.948, 30.9098, 1.11 ) }
    dend_6 { pt3dadd( 8.99442, 135.074, 30.9927, 0.55 ) }
    dend_6 { pt3dadd( 8.50313, 137.405, 31.081, 1.11 ) }
    dend_6 { pt3dadd( 7.69155, 140.675, 31.2166, 0.83 ) }
    dend_6 { pt3dadd( 6.96066, 143.388, 31.2887, 0.83 ) }
    dend_6 { pt3dadd( 6.44286, 145.193, 31.2709, 0.83 ) }
    dend_6 { pt3dadd( 5.958, 146.996, 31.1935, 0.55 ) }
    dend_6 { pt3dadd( 5.32141, 149.53, 31.0282, 0.55 ) }
    dend_6 { pt3dadd( 5.1897, 150.129, 30.9752, 0.55 ) }
    dend_6 { pt3dadd( 4.78607, 152.353, 30.7946, 0.55 ) }
    dend_6 { pt3dadd( 4.53471, 153.98, 30.6176, 0.28 ) }
    dend_6 { pt3dadd( 4.21467, 156.596, 30.2193, 0.55 ) }
    dend_6 { pt3dadd( 3.97577, 159.582, 29.6476, 0.55 ) }
    dend_6 { pt3dadd( 3.89335, 161.269, 29.2812, 0.55 ) }
    dend_6 { pt3dadd( 3.77607, 164.21, 28.6312, 0.83 ) }
    dend_6 { pt3dadd( 3.68286, 167.32, 27.9334, 0.83 ) }
    dend_6 { pt3dadd( 3.59726, 169.531, 27.3418, 0.83 ) }
    dend_6 { pt3dadd( 3.51696, 170.809, 26.9335, 0.55 ) }
    dend_6 { pt3dadd( 3.43641, 171.943, 26.5383, 0.83 ) }
    dend_6 { pt3dadd( 3.23535, 173.763, 25.9376, 0.83 ) }
    dend_6 { pt3dadd( 2.86741, 176.064, 25.2232, 0.83 ) }
    dend_6 { pt3dadd( 2.32274, 178.955, 24.5385, 0.83 ) }
    dend_6 { pt3dadd( 1.94288, 180.78, 24.1689, 0.83 ) }
    dend_6 { pt3dadd( 1.55766, 182.471, 23.7823, 0.83 ) }
    dend_6 { pt3dadd( 0.988642, 184.863, 23.1748, 0.55 ) }
    dend_6 { pt3dadd( 0.336104, 187.358, 22.5272, 0.55 ) }
    dend_6 { pt3dadd( -0.135679, 189.173, 22.0863, 0.55 ) }
    dend_6 { pt3dadd( -0.630923, 191.19, 21.6107, 0.83 ) }
    dend_6 { pt3dadd( -1.34869, 194.266, 20.8372, 1.11 ) }
    dend_6 { pt3dadd( -1.99492, 197.488, 20.0935, 0.55 ) }
    dend_6 { pt3dadd( -2.26098, 199.368, 19.746, 0.55 ) }
    dend_6 { pt3dadd( -2.49393, 201.554, 19.4296, 0.55 ) }
    dend_6 { pt3dadd( -2.6288, 203.727, 19.1835, 0.83 ) }
    dend_6 { pt3dadd( -2.6265, 206.354, 18.973, 0.83 ) }
    dend_6 { pt3dadd( -2.42926, 209.976, 18.7703, 0.83 ) }
    dend_6 { pt3dadd( -1.96623, 214.312, 18.4686, 0.83 ) }
    dend_6 { pt3dadd( -1.60345, 216.83, 18.2271, 0.55 ) }
    dend_6 { pt3dadd( -1.18824, 219.325, 17.9246, 0.55 ) }
    dend_6 { pt3dadd( -0.598884, 222.45, 17.4866, 0.83 ) }
    dend_6 { pt3dadd( -0.347036, 223.915, 17.2388, 0.83 ) }
    dend_6 { pt3dadd( -0.0781879, 226.23, 16.8101, 0.83 ) }
    dend_6 { pt3dadd( 0.0404671, 228.965, 16.3573, 0.83 ) }
    dend_6 { pt3dadd( -0.0588599, 231.226, 16.104, 0.28 ) }
    dend_6 { pt3dadd( -0.211837, 232.396, 16.0245, 0.83 ) }
    dend_6 { pt3dadd( -0.848048, 235.735, 15.8878, 0.83 ) }
    dend_6 { pt3dadd( -1.47232, 238.391, 15.8603, 0.83 ) }
    dend_6 { pt3dadd( -2.23771, 240.968, 15.9506, 0.83 ) }
    dend_6 { pt3dadd( -3.14314, 243.615, 16.1528, 0.83 ) }
    dend_6 { pt3dadd( -3.80428, 245.372, 16.3356, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 66/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 5.73288, 56.6016, 24.3583, 0.83 ) }
    dend_5 { pt3dadd( 4.76839, 57.6157, 26.2925, 0.83 ) }
    dend_5 { pt3dadd( 4.09136, 58.556, 27.8157, 0.55 ) }
    dend_5 { pt3dadd( 2.99863, 60.0837, 30.266, 0.55 ) }
    dend_5 { pt3dadd( 1.97331, 61.5139, 32.5522, 0.55 ) }
    dend_5 { pt3dadd( 0.813324, 62.95, 35.0553, 0.55 ) }
    dend_5 { pt3dadd( -0.0445159, 63.8639, 36.8951, 0.55 ) }
    dend_5 { pt3dadd( -1.48397, 65.0997, 40.0652, 0.55 ) }
    dend_5 { pt3dadd( -2.52688, 65.7309, 42.2464, 0.55 ) }
    dend_5 { pt3dadd( -4.03178, 66.1883, 45.004, 0.55 ) }
    dend_5 { pt3dadd( -6.51029, 66.0985, 48.9615, 0.55 ) }
    dend_5 { pt3dadd( -8.03477, 65.6651, 51.0666, 0.55 ) }
    dend_5 { pt3dadd( -9.71243, 64.7257, 53.1522, 0.55 ) }
    dend_5 { pt3dadd( -10.7361, 63.9037, 54.2391, 0.55 ) }
    dend_5 { pt3dadd( -11.5712, 63.0401, 55.0067, 0.55 ) }
    dend_5 { pt3dadd( -13.1456, 61.0566, 56.2053, 0.28 ) }
    dend_5 { pt3dadd( -13.9133, 59.9166, 56.707, 0.83 ) }
    dend_5 { pt3dadd( -14.9329, 58.2609, 57.3521, 0.55 ) }
    dend_5 { pt3dadd( -15.5865, 57.0488, 57.691, 0.55 ) }
    dend_5 { pt3dadd( -16.3785, 55.2128, 57.9827, 0.55 ) }
    dend_5 { pt3dadd( -17.0839, 53.2938, 58.1389, 0.83 ) }
    dend_5 { pt3dadd( -17.6736, 51.5882, 58.1926, 0.55 ) }
    dend_5 { pt3dadd( -18.1866, 50.1403, 58.1738, 0.55 ) }
    dend_5 { pt3dadd( -19.3986, 46.7453, 58.023, 0.55 ) }
    dend_5 { pt3dadd( -20.6554, 43.5068, 57.8556, 0.83 ) }
    dend_5 { pt3dadd( -21.7008, 41.1043, 57.7006, 0.83 ) }
    dend_5 { pt3dadd( -22.9152, 38.6875, 57.3978, 0.83 ) }
    dend_5 { pt3dadd( -24.4333, 35.985, 57.0351, 0.55 ) }
    dend_5 { pt3dadd( -25.1669, 34.7532, 56.9214, 0.28 ) }
    dend_5 { pt3dadd( -26.0991, 33.2879, 56.8797, 0.55 ) }
    dend_5 { pt3dadd( -27.2399, 31.6999, 56.8862, 0.28 ) }
    dend_5 { pt3dadd( -29.6863, 28.4446, 57.0626, 0.55 ) }
    dend_5 { pt3dadd( -31.2005, 26.5056, 57.267, 0.55 ) }
    dend_5 { pt3dadd( -32.648, 24.6539, 57.5815, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_5 { pt3dadd( -33.9331, 22.9924, 57.9337, 0.55 ) }
    dend_5 { pt3dadd( -36.0879, 20.0182, 58.605, 0.55 ) }
    dend_5 { pt3dadd( -36.807, 18.947, 58.8779, 0.83 ) }
    dend_5 { pt3dadd( -38.0207, 16.9507, 59.4094, 0.55 ) }
    dend_5 { pt3dadd( -39.6614, 13.9869, 60.0117, 0.55 ) }
    dend_5 { pt3dadd( -40.7007, 11.6937, 60.3113, 0.83 ) }
    dend_5 { pt3dadd( -41.6248, 8.93163, 60.5366, 0.55 ) }
    dend_5 { pt3dadd( -42.0896, 6.80083, 60.5928, 0.55 ) }
    dend_5 { pt3dadd( -42.4083, 4.65812, 60.5658, 0.55 ) }
    dend_5 { pt3dadd( -42.4926, 3.52135, 60.5058, 0.83 ) }
    dend_5 { pt3dadd( -42.5617, 0.5991, 60.2414, 0.55 ) }
    dend_5 { pt3dadd( -42.5138, -2.81716, 59.8523, 0.28 ) }
    dend_5 { pt3dadd( -42.3622, -7.75667, 59.2582, 0.28 ) }
    dend_5 { pt3dadd( -42.3216, -9.83427, 58.9409, 0.83 ) }
    dend_5 { pt3dadd( -42.2484, -13.9126, 58.2636, 0.28 ) }
    dend_5 { pt3dadd( -42.2249, -15.3433, 58.0376, 0.83 ) }
    dend_5 { pt3dadd( -42.2137, -16.2362, 57.9079, 0.28 ) }
    dend_5 { pt3dadd( -42.1667, -17.6358, 57.6644, 0.83 ) }
    dend_5 { pt3dadd( -42.0849, -20.4276, 57.1841, 0.28 ) }
    dend_5 { pt3dadd( -42.0855, -21.5019, 57.0465, 0.55 ) }
    dend_5 { pt3dadd( -42.1919, -23.9405, 56.8473, 0.28 ) }
    dend_5 { pt3dadd( -42.284, -25.3535, 56.7576, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 22/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 15.6281, 49.0265, 18.3209, 0.83 ) }
    dend_3 { pt3dadd( 15.8934, 50.7259, 15.9181, 0.83 ) }
    dend_3 { pt3dadd( 16.2691, 52.8728, 13.2177, 0.83 ) }
    dend_3 { pt3dadd( 16.5495, 54.2382, 11.6768, 0.83 ) }
    dend_3 { pt3dadd( 18.645, 62.4472, 3.32682, 0.55 ) }
    dend_3 { pt3dadd( 19.3703, 64.7073, 1.32959, 0.55 ) }
    dend_3 { pt3dadd( 19.8419, 65.9289, 0.399646, 0.55 ) }
    dend_3 { pt3dadd( 20.5361, 67.4894, -0.651017, 0.55 ) }
    dend_3 { pt3dadd( 21.3383, 69.0356, -1.39845, 1.11 ) }
    dend_3 { pt3dadd( 22.3884, 70.8459, -1.81334, 0.55 ) }
    dend_3 { pt3dadd( 24.3594, 73.8923, -1.77851, 0.55 ) }
    dend_3 { pt3dadd( 26.0506, 76.6265, -1.63348, 0.55 ) }
    dend_3 { pt3dadd( 27.1452, 78.4034, -1.47501, 0.55 ) }
    dend_3 { pt3dadd( 28.5032, 80.6337, -1.09051, 0.83 ) }
    dend_3 { pt3dadd( 30.0398, 83.3382, -0.451261, 0.55 ) }
    dend_3 { pt3dadd( 31.1156, 85.4893, 0.14951, 1.11 ) }
    dend_3 { pt3dadd( 32.1597, 87.7252, 0.869717, 0.55 ) }
    dend_3 { pt3dadd( 33.1502, 89.9201, 1.61793, 0.83 ) }
    dend_3 { pt3dadd( 34.8077, 93.7418, 2.8878, 0.55 ) }
    dend_3 { pt3dadd( 35.6595, 95.7491, 3.51623, 0.55 ) }
    dend_3 { pt3dadd( 36.7863, 98.531, 4.31115, 0.55 ) }
    dend_3 { pt3dadd( 37.6704, 100.725, 4.79646, 0.55 ) }
    dend_3 { pt3dadd( 38.2014, 102.09, 5.03215, 0.28 ) }
    dend_3 { pt3dadd( 39.2527, 104.812, 5.35854, 0.55 ) }
    dend_3 { pt3dadd( 40.0275, 106.868, 5.48635, 0.28 ) }
    dend_3 { pt3dadd( 40.7598, 108.739, 5.55761, 0.55 ) }
    dend_3 { pt3dadd( 42.1529, 112.259, 5.63118, 0.55 ) }
    dend_3 { pt3dadd( 42.8912, 114.244, 5.65596, 0.55 ) }
    dend_3 { pt3dadd( 43.9118, 117.007, 5.65289, 0.28 ) }
    dend_3 { pt3dadd( 44.735, 119.886, 4.8971, 0.83 ) }
    dend_3 { pt3dadd( 45.3493, 122.42, 3.83512, 0.28 ) }
    dend_3 { pt3dadd( 45.4789, 122.979, 3.51837, 0.55 ) }
    dend_3 { pt3dadd( 45.7624, 124.239, 2.52834, 0.28 ) }
    dend_3 { pt3dadd( 45.9365, 125.007, 1.80267, 0.83 ) }
    dend_3 { pt3dadd( 48.075, 134.179, -7.90777, 0.55 ) }
    dend_3 { pt3dadd( 48.9962, 137.568, -11.6496, 0.55 ) }
    dend_3 { pt3dadd( 49.3045, 138.594, -12.7538, 0.83 ) }
    dend_3 { pt3dadd( 50.1833, 140.988, -14.9541, 0.55 ) }
    dend_3 { pt3dadd( 50.7015, 142.161, -15.7789, 0.55 ) }
    dend_3 { pt3dadd( 51.4036, 143.549, -16.0952, 0.83 ) }
    dend_3 { pt3dadd( 52.3459, 145.272, -15.6188, 0.28 ) }
    dend_3 { pt3dadd( 52.7155, 146.208, -15.4585, 0.55 ) }
    dend_3 { pt3dadd( 53.5637, 148.842, -14.7704, 0.28 ) }
    dend_3 { pt3dadd( 54.0559, 150.561, -14.0706, 0.55 ) }
    dend_3 { pt3dadd( 54.4583, 152.05, -13.4791, 0.28 ) }
    dend_3 { pt3dadd( 54.6823, 153.541, -13.0277, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 68/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 15.6281, 49.0265, 18.3209, 0.55 ) }
    dend_2 { pt3dadd( 17.0127, 48.5688, 18.8678, 0.55 ) }
    dend_2 { pt3dadd( 19.0905, 47.882, 19.6884, 0.28 ) }
    dend_2 { pt3dadd( 20.1806, 47.5216, 20.1189, 0.55 ) }
    dend_2 { pt3dadd( 22.1831, 46.8597, 20.9098, 0.55 ) }
    dend_2 { pt3dadd( 24.8013, 45.9942, 21.9439, 0.55 ) }
    dend_2 { pt3dadd( 26.2327, 45.521, 22.5092, 0.28 ) }
    // Section: dend_48, id: dend_48, parent: dend_42 (entry count 75/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 13.5064, -31.2149, -22.7768, 0.55 ) }
    dend_48 { pt3dadd( 9.87896, -28.1387, -25.2963, 0.55 ) }
    dend_48 { pt3dadd( 8.9001, -27.2711, -26.4662, 0.83 ) }
    dend_48 { pt3dadd( 6.70223, -25.3057, -29.4043, 0.55 ) }
    dend_48 { pt3dadd( 5.78755, -24.533, -30.5988, 0.55 ) }
    dend_48 { pt3dadd( 1.83484, -21.6061, -36.9117, 0.28 ) }
    dend_48 { pt3dadd( 1.02038, -21.0829, -38.2652, 0.83 ) }
    dend_48 { pt3dadd( -2.09234, -19.4402, -44.3956, 0.55 ) }
    dend_48 { pt3dadd( -2.42235, -19.3011, -45.074, 0.55 ) }
    dend_48 { pt3dadd( -3.29963, -19.0225, -46.9392, 0.83 ) }
    dend_48 { pt3dadd( -7.26551, -18.0209, -55.1272, 0.55 ) }
    dend_48 { pt3dadd( -8.0514, -17.8735, -56.6708, 0.55 ) }
    dend_48 { pt3dadd( -8.92534, -17.7179, -58.4428, 0.83 ) }
    dend_48 { pt3dadd( -10.7623, -17.3099, -62.4946, 0.55 ) }
    dend_48 { pt3dadd( -11.1246, -17.1731, -63.3758, 0.55 ) }
    dend_48 { pt3dadd( -11.7263, -16.8084, -65.0863, 0.55 ) }
    dend_48 { pt3dadd( -14.0002, -14.8274, -72.0564, 0.28 ) }
    dend_48 { pt3dadd( -14.566, -14.2277, -74.0191, 0.83 ) }
    dend_48 { pt3dadd( -16.3818, -11.9619, -80.6882, 0.55 ) }
    dend_48 { pt3dadd( -16.8168, -11.2911, -82.4088, 0.83 ) }
    dend_48 { pt3dadd( -18.93, -7.40155, -91.0551, 0.55 ) }
    dend_48 { pt3dadd( -19.4308, -6.11624, -93.5062, 0.28 ) }
    dend_48 { pt3dadd( -19.6808, -5.25771, -94.9405, 0.83 ) }
    dend_48 { pt3dadd( -20.0207, -3.64162, -97.3969, 0.55 ) }
    dend_48 { pt3dadd( -20.1936, -2.32344, -99.1059, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_48 { pt3dadd( -20.3181, 0.87902, -102.889, 0.55 ) }
    dend_48 { pt3dadd( -20.0185, 5.7369, -107.666, 0.28 ) }
    dend_48 { pt3dadd( -19.9352, 6.47593, -108.372, 0.55 ) }
    dend_48 { pt3dadd( -19.6487, 8.43665, -110.207, 0.28 ) }
    dend_48 { pt3dadd( -19.5124, 9.23031, -110.945, 0.55 ) }
    dend_48 { pt3dadd( -19.0185, 11.9156, -113.385, 0.28 ) }
    dend_48 { pt3dadd( -18.8168, 12.8588, -114.202, 0.55 ) }
    dend_48 { pt3dadd( -18.2124, 15.8166, -116.742, 0.28 ) }
    dend_48 { pt3dadd( -17.9974, 16.9107, -117.741, 0.55 ) }
    dend_48 { pt3dadd( -17.6083, 19.3338, -119.977, 0.28 ) }
    dend_48 { pt3dadd( -17.5501, 19.8806, -120.486, 0.55 ) }
    dend_48 { pt3dadd( -17.3798, 22.0737, -122.395, 0.28 ) }
    dend_48 { pt3dadd( -17.3285, 22.8339, -123.048, 0.55 ) }
    dend_48 { pt3dadd( -17.2699, 25.1995, -124.986, 0.28 ) }
    dend_48 { pt3dadd( -17.3161, 26.382, -126.089, 0.55 ) }
    dend_48 { pt3dadd( -17.6448, 29.8372, -129.336, 0.28 ) }
    dend_48 { pt3dadd( -17.851, 31.249, -130.71, 0.55 ) }
    dend_48 { pt3dadd( -18.5401, 35.1418, -134.979, 0.28 ) }
    dend_48 { pt3dadd( -18.7468, 36.3199, -136.378, 0.55 ) }
    dend_48 { pt3dadd( -19.3302, 40.1099, -141.491, 0.28 ) }
    dend_48 { pt3dadd( -19.5343, 41.3721, -143.352, 0.28 ) }
    dend_48 { pt3dadd( -19.7826, 42.8447, -145.648, 0.55 ) }
    dend_48 { pt3dadd( -20.3126, 45.3888, -149.62, 0.28 ) }
    dend_48 { pt3dadd( -20.4115, 45.8652, -150.304, 0.55 ) }
    dend_48 { pt3dadd( -20.8362, 47.9028, -153.488, 0.28 ) }
    dend_48 { pt3dadd( -21.0523, 48.8794, -155.002, 0.83 ) }
    dend_48 { pt3dadd( -21.571, 50.8684, -158.077, 0.55 ) }
    dend_48 { pt3dadd( -21.8944, 52.159, -160.073, 0.55 ) }
    dend_48 { pt3dadd( -22.4282, 54.4712, -163.501, 0.55 ) }
    dend_48 { pt3dadd( -23.5687, 60.2116, -172.386, 0.83 ) }
    dend_48 { pt3dadd( -23.8891, 62.1895, -175.597, 0.28 ) }
    dend_48 { pt3dadd( -24.006, 63.2325, -177.381, 0.55 ) }
    dend_48 { pt3dadd( -24.1914, 67.0855, -184.468, 0.55 ) }
    dend_48 { pt3dadd( -24.1391, 68.0959, -186.373, 0.55 ) }
    dend_48 { pt3dadd( -23.7864, 71.3423, -192.853, 0.83 ) }
    dend_48 { pt3dadd( -23.5058, 73.4144, -197.25, 0.28 ) }
    dend_48 { pt3dadd( -23.4087, 74.4913, -200.233, 0.55 ) }
    dend_48 { pt3dadd( -23.323, 75.3625, -203.936, 0.28 ) }
    dend_48 { pt3dadd( -23.3017, 75.5784, -205.551, 0.83 ) }
    dend_48 { pt3dadd( -23.3629, 76.1201, -214.707, 0.55 ) }
    dend_48 { pt3dadd( -23.4498, 76.0826, -218.236, 0.55 ) }
    dend_48 { pt3dadd( -23.8892, 75.6581, -226.299, 0.55 ) }
    dend_48 { pt3dadd( -25.1278, 74.916, -238.248, 0.55 ) }
    dend_48 { pt3dadd( -25.5132, 74.7322, -241.019, 0.55 ) }
    dend_48 { pt3dadd( -26.6407, 74.3039, -247.967, 0.55 ) }
    dend_48 { pt3dadd( -27.9877, 73.9581, -255.219, 0.55 ) }
    dend_48 { pt3dadd( -29.1723, 73.7959, -260.846, 0.55 ) }
    dend_48 { pt3dadd( -31.3028, 73.6578, -269.272, 0.55 ) }
    dend_48 { pt3dadd( -33.764, 73.7053, -277.788, 0.55 ) }
    dend_48 { pt3dadd( -34.3258, 73.7447, -279.693, 0.55 ) }
    dend_48 { pt3dadd( -36.792, 73.8665, -288.046, 0.55 ) }
    dend_48 { pt3dadd( -37.3953, 73.8906, -290.056, 0.28 ) }
    dend_48 { pt3dadd( -37.5361, 73.8884, -290.543, 0.55 ) }
    dend_48 { pt3dadd( -43.0373, 73.3443, -309.512, 0.28 ) }
    dend_48 { pt3dadd( -43.5611, 73.2784, -311.22, 0.83 ) }
    dend_48 { pt3dadd( -46.692, 72.7167, -321.286, 0.28 ) }
    dend_48 { pt3dadd( -46.8976, 72.6767, -321.93, 0.55 ) }
    dend_48 { pt3dadd( -48.4137, 72.4289, -326.626, 0.28 ) }
    dend_48 { pt3dadd( -49.0494, 72.3205, -328.528, 0.55 ) }
    dend_48 { pt3dadd( -50.5243, 71.9599, -332.104, 0.28 ) }
    dend_48 { pt3dadd( -51.0222, 71.8251, -333.341, 0.55 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 61/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 13.5064, -31.2149, -22.7768, 0.55 ) }
    dend_43 { pt3dadd( 15.8095, -31.5812, -25.5776, 0.55 ) }
    dend_43 { pt3dadd( 17.7624, -31.8609, -27.7054, 0.55 ) }
    dend_43 { pt3dadd( 22.1058, -32.4524, -32.6878, 0.83 ) }
    dend_43 { pt3dadd( 23.2602, -32.6615, -34.0308, 0.83 ) }
    dend_43 { pt3dadd( 24.6064, -32.9445, -35.5869, 0.83 ) }
    dend_43 { pt3dadd( 25.7439, -33.1793, -36.8635, 0.83 ) }
    dend_43 { pt3dadd( 27.7633, -33.5846, -39.0533, 0.83 ) }
    dend_43 { pt3dadd( 31.1303, -34.3733, -42.7342, 0.83 ) }
    dend_43 { pt3dadd( 33.2227, -34.8013, -44.875, 0.83 ) }
    dend_43 { pt3dadd( 35.5, -35.1838, -47.3067, 0.83 ) }
    dend_43 { pt3dadd( 38.0403, -35.5321, -50.0027, 0.83 ) }
    dend_43 { pt3dadd( 40.3552, -35.8018, -52.4503, 0.83 ) }
    dend_43 { pt3dadd( 44.1297, -36.2104, -56.2972, 0.83 ) }
    dend_43 { pt3dadd( 46.4839, -36.3888, -58.5647, 0.83 ) }
    dend_43 { pt3dadd( 49.4906, -36.4637, -61.4641, 0.83 ) }
    dend_43 { pt3dadd( 51.4179, -36.4509, -63.3448, 0.83 ) }
    // Section: dend_39, id: dend_39, parent: dend_33 (entry count 78/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 23.4225, -50.5901, 4.56585, 0.55 ) }
    dend_39 { pt3dadd( 25.6931, -50.3944, 5.57111, 0.55 ) }
    dend_39 { pt3dadd( 27.5756, -50.3302, 6.46176, 0.28 ) }
    dend_39 { pt3dadd( 28.7618, -50.3694, 7.06238, 0.55 ) }
    dend_39 { pt3dadd( 30.7677, -50.5, 8.10954, 1.11 ) }
    dend_39 { pt3dadd( 34.3797, -50.861, 10.1876, 0.55 ) }
    dend_39 { pt3dadd( 35.7549, -51.0309, 11.0392, 0.55 ) }
    dend_39 { pt3dadd( 37.2626, -51.2884, 12.0749, 0.83 ) }
    dend_39 { pt3dadd( 38.8512, -51.586, 13.2301, 0.28 ) }
    dend_39 { pt3dadd( 38.8512, -51.586, 13.2301, 0.83 ) }
    dend_39 { pt3dadd( 41.4934, -52.4907, 15.4617, 0.28 ) }
    dend_39 { pt3dadd( 42.1996, -52.7795, 16.0792, 1.11 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 90/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 23.4225, -50.5901, 4.56585, 0.83 ) }
    dend_34 { pt3dadd( 25.4715, -53.9895, 4.02274, 0.83 ) }
    dend_34 { pt3dadd( 27.3254, -56.5602, 3.18704, 0.55 ) }
    dend_34 { pt3dadd( 28.5654, -58.0365, 2.39709, 0.83 ) }
    dend_34 { pt3dadd( 29.5772, -59.2411, 1.75255, 0.83 ) }
    dend_34 { pt3dadd( 30.9795, -60.9107, 0.859235, 0.83 ) }
    dend_34 { pt3dadd( 32.2111, -62.3769, 0.0746843, 0.83 ) }
    dend_34 { pt3dadd( 34.785, -64.8346, -1.89339, 0.83 ) }
    dend_34 { pt3dadd( 36.6901, -66.4565, -3.65333, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 99/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -35.4686, -30.4257, 21.7275, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_30 { pt3dadd( -36.5102, -28.1293, 20.8951, 0.55 ) }
    dend_30 { pt3dadd( -37.8067, -24.9677, 19.7467, 0.83 ) }
    dend_30 { pt3dadd( -39.6041, -20.5532, 18.0404, 0.55 ) }
    dend_30 { pt3dadd( -40.3902, -18.415, 17.2588, 0.55 ) }
    dend_30 { pt3dadd( -41.4502, -15.2931, 16.1635, 1.11 ) }
    dend_30 { pt3dadd( -42.3562, -12.5147, 15.2368, 0.83 ) }
    dend_30 { pt3dadd( -43.2459, -9.58877, 14.2856, 0.55 ) }
    dend_30 { pt3dadd( -43.5793, -8.3933, 13.9204, 0.55 ) }
    dend_30 { pt3dadd( -44.4462, -5.47082, 13.2661, 0.55 ) }
    dend_30 { pt3dadd( -44.6272, -4.87763, 13.1356, 1.11 ) }
    dend_30 { pt3dadd( -45.0846, -3.42936, 13.099, 0.55 ) }
    dend_30 { pt3dadd( -45.6006, -1.97468, 13.5018, 0.83 ) }
    dend_30 { pt3dadd( -46.1552, -0.62798, 14.1949, 0.55 ) }
    dend_30 { pt3dadd( -46.8719, 0.93705, 15.1467, 0.55 ) }
    dend_30 { pt3dadd( -47.4559, 2.04509, 15.8302, 0.83 ) }
    dend_30 { pt3dadd( -50.3324, 7.37164, 18.3786, 0.55 ) }
    dend_30 { pt3dadd( -51.1133, 8.86514, 18.9343, 0.83 ) }
    dend_30 { pt3dadd( -52.158, 10.8164, 19.4452, 0.55 ) }
    dend_30 { pt3dadd( -53.3546, 12.8596, 19.8022, 0.55 ) }
    dend_30 { pt3dadd( -54.5492, 14.7689, 19.8498, 1.11 ) }
    dend_30 { pt3dadd( -56.7977, 18.3851, 19.4732, 0.55 ) }
    dend_30 { pt3dadd( -57.5166, 19.5688, 19.2349, 0.55 ) }
    dend_30 { pt3dadd( -59.3108, 22.7063, 18.5658, 0.55 ) }
    dend_30 { pt3dadd( -60.4332, 24.7622, 18.1056, 0.55 ) }
    dend_30 { pt3dadd( -61.8537, 27.4179, 17.5773, 1.11 ) }
    dend_30 { pt3dadd( -63.4423, 30.3783, 17.1006, 0.55 ) }
    dend_30 { pt3dadd( -64.4161, 32.1806, 16.9474, 1.11 ) }
    dend_30 { pt3dadd( -65.6508, 34.4171, 16.7915, 0.28 ) }
    dend_30 { pt3dadd( -66.0806, 35.1957, 16.779, 0.55 ) }
    dend_30 { pt3dadd( -66.8005, 36.4494, 16.8421, 0.28 ) }
    dend_30 { pt3dadd( -67.8155, 38.0594, 17.1153, 0.83 ) }
    dend_30 { pt3dadd( -69.4855, 40.4242, 17.6861, 0.28 ) }
    dend_30 { pt3dadd( -70.1097, 41.2987, 17.9649, 0.55 ) }
    dend_30 { pt3dadd( -72.6913, 44.8606, 19.3628, 0.28 ) }
    dend_30 { pt3dadd( -73.6572, 46.231, 19.9329, 0.83 ) }
    dend_30 { pt3dadd( -75.0155, 48.224, 20.7559, 0.55 ) }
    dend_30 { pt3dadd( -76.3756, 50.2703, 21.5871, 0.55 ) }
    dend_30 { pt3dadd( -77.7488, 52.3628, 22.3796, 0.55 ) }
    dend_30 { pt3dadd( -78.7702, 54.0029, 22.9669, 0.83 ) }
    dend_30 { pt3dadd( -79.9354, 55.9794, 23.5934, 0.28 ) }
    dend_30 { pt3dadd( -81.0051, 57.9291, 24.1466, 0.55 ) }
    dend_30 { pt3dadd( -82.2227, 60.5092, 24.6599, 0.55 ) }
    dend_30 { pt3dadd( -82.4227, 61.038, 24.7324, 0.83 ) }
    dend_30 { pt3dadd( -83.2036, 63.4541, 24.7057, 0.28 ) }
    dend_30 { pt3dadd( -83.5159, 64.8354, 24.5465, 0.55 ) }
    dend_30 { pt3dadd( -83.7195, 65.9785, 24.2231, 0.28 ) }
    dend_30 { pt3dadd( -84.1299, 68.2867, 23.1603, 0.55 ) }
    dend_30 { pt3dadd( -84.5211, 70.6996, 21.7618, 0.55 ) }
    dend_30 { pt3dadd( -85.1062, 74.119, 19.5903, 0.28 ) }
    dend_30 { pt3dadd( -85.5099, 76.3713, 17.7405, 0.83 ) }
    dend_30 { pt3dadd( -86.0724, 79.5851, 14.7521, 0.55 ) }
    dend_30 { pt3dadd( -86.4517, 81.8918, 12.4296, 0.55 ) }
    dend_30 { pt3dadd( -86.6267, 82.8564, 11.4174, 0.55 ) }
    dend_30 { pt3dadd( -86.9472, 84.3136, 9.74947, 0.83 ) }
    dend_30 { pt3dadd( -87.9538, 88.331, 5.23797, 0.28 ) }
    dend_30 { pt3dadd( -88.2104, 89.1528, 4.29369, 0.83 ) }
    dend_30 { pt3dadd( -88.613, 90.2984, 3.09586, 0.28 ) }
    dend_30 { pt3dadd( -89.0868, 91.4801, 2.03114, 0.55 ) }
    dend_30 { pt3dadd( -90.6931, 94.3568, -0.213211, 0.83 ) }
    dend_30 { pt3dadd( -91.335, 95.2897, -0.508331, 0.83 ) }
    dend_30 { pt3dadd( -92.4521, 96.8039, -0.207728, 0.28 ) }
    dend_30 { pt3dadd( -92.9865, 97.5302, 0.115635, 0.55 ) }
    dend_30 { pt3dadd( -94.1912, 99.2456, 1.19132, 0.28 ) }
    dend_30 { pt3dadd( -94.9859, 100.577, 2.11903, 0.55 ) }
    dend_30 { pt3dadd( -96.8074, 104.316, 5.75745, 0.28 ) }
    dend_30 { pt3dadd( -97.1292, 105.069, 6.57357, 0.55 ) }
    dend_30 { pt3dadd( -97.554, 106.31, 7.92405, 0.28 ) }
    dend_30 { pt3dadd( -97.8335, 107.316, 9.03575, 0.83 ) }
    dend_30 { pt3dadd( -98.2251, 108.989, 10.9022, 0.83 ) }
    dend_30 { pt3dadd( -99.1174, 113.906, 16.0672, 0.28 ) }
    dend_30 { pt3dadd( -99.2213, 114.652, 16.7753, 0.55 ) }
    dend_30 { pt3dadd( -99.5177, 117.291, 19.1665, 0.28 ) }
    dend_30 { pt3dadd( -99.6568, 118.81, 20.4661, 0.83 ) }
    dend_30 { pt3dadd( -99.7773, 120.477, 21.7897, 0.28 ) }
    dend_30 { pt3dadd( -99.8746, 121.871, 22.7408, 0.83 ) }
    dend_30 { pt3dadd( -100.092, 124.92, 24.225, 0.28 ) }
    dend_30 { pt3dadd( -100.179, 126.319, 24.7957, 0.83 ) }
    dend_30 { pt3dadd( -100.34, 128.958, 25.5984, 0.28 ) }
    dend_30 { pt3dadd( -100.473, 130.574, 25.8235, 0.55 ) }
    dend_30 { pt3dadd( -100.634, 132.262, 25.7972, 0.28 ) }
    dend_30 { pt3dadd( -100.878, 134.234, 25.3548, 0.55 ) }
    dend_30 { pt3dadd( -101.245, 136.643, 24.4362, 0.28 ) }
    dend_30 { pt3dadd( -101.409, 137.648, 23.9458, 0.83 ) }
    dend_30 { pt3dadd( -101.837, 140.116, 22.5719, 0.28 ) }
    dend_30 { pt3dadd( -102.232, 141.947, 21.2851, 0.83 ) }
    dend_30 { pt3dadd( -102.964, 145.206, 18.8479, 0.28 ) }
    dend_30 { pt3dadd( -103.22, 146.257, 17.9028, 0.83 ) }
    dend_30 { pt3dadd( -103.692, 148.115, 15.9927, 0.28 ) }
    dend_30 { pt3dadd( -103.886, 148.844, 15.1048, 0.83 ) }
    dend_30 { pt3dadd( -105.0, 153.069, 9.53792, 0.28 ) }
    dend_30 { pt3dadd( -105.477, 154.685, 7.14042, 0.83 ) }
    dend_30 { pt3dadd( -106.562, 158.339, 1.38971, 0.28 ) }
    dend_30 { pt3dadd( -106.933, 159.64, -0.827253, 0.83 ) }
    dend_30 { pt3dadd( -107.629, 161.967, -5.02414, 0.28 ) }
    dend_30 { pt3dadd( -107.856, 162.685, -6.38158, 0.55 ) }
    dend_30 { pt3dadd( -108.571, 164.849, -10.26, 0.28 ) }
    dend_30 { pt3dadd( -108.838, 165.561, -11.4849, 0.28 ) }
    dend_30 { pt3dadd( -109.558, 167.375, -14.0925, 0.55 ) }
    dend_30 { pt3dadd( -111.077, 170.105, -17.8653, 0.28 ) }
    dend_30 { pt3dadd( -112.307, 171.989, -20.369, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_30 { pt3dadd( -113.521, 173.681, -22.8409, 0.28 ) }
    dend_30 { pt3dadd( -114.149, 174.515, -24.0596, 0.55 ) }
    dend_30 { pt3dadd( -115.197, 175.86, -25.8254, 0.28 ) }
    dend_30 { pt3dadd( -120.215, 182.236, -33.0887, 0.28 ) }
    dend_30 { pt3dadd( -120.794, 182.995, -33.8663, 0.83 ) }
    dend_30 { pt3dadd( -124.542, 188.029, -38.6918, 0.28 ) }
    dend_30 { pt3dadd( -124.948, 188.583, -39.2471, 0.83 ) }
    dend_30 { pt3dadd( -129.376, 195.13, -45.071, 0.28 ) }
    dend_30 { pt3dadd( -129.72, 195.798, -45.4135, 0.55 ) }
    dend_30 { pt3dadd( -130.594, 198.91, -44.7308, 0.28 ) }
    dend_30 { pt3dadd( -130.886, 199.865, -44.61, 0.55 ) }
    dend_30 { pt3dadd( -131.365, 201.29, -44.3282, 0.28 ) }
    dend_30 { pt3dadd( -131.868, 202.563, -44.8432, 0.55 ) }
    dend_30 { pt3dadd( -132.74, 204.59, -46.2976, 0.28 ) }
    dend_30 { pt3dadd( -133.156, 205.547, -46.9956, 1.11 ) }
    dend_30 { pt3dadd( -134.254, 207.719, -48.4589, 0.28 ) }
    dend_30 { pt3dadd( -134.738, 208.599, -49.121, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 17/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -35.4686, -30.4257, 21.7275, 0.55 ) }
    dend_29 { pt3dadd( -37.3429, -31.2678, 22.1379, 0.55 ) }
    dend_29 { pt3dadd( -38.1703, -31.594, 22.3424, 0.55 ) }
    dend_29 { pt3dadd( -39.4337, -32.0559, 22.7064, 0.83 ) }
    dend_29 { pt3dadd( -40.7224, -32.5328, 23.0961, 0.55 ) }
    dend_29 { pt3dadd( -41.7879, -32.9949, 23.4775, 0.55 ) }
    dend_29 { pt3dadd( -42.2818, -33.2414, 23.6696, 0.83 ) }
    dend_29 { pt3dadd( -42.9777, -33.6671, 24.0079, 0.55 ) }
    dend_29 { pt3dadd( -44.1216, -34.4986, 24.7931, 0.55 ) }
    dend_29 { pt3dadd( -44.6628, -34.977, 25.2707, 0.55 ) }
    dend_29 { pt3dadd( -45.5919, -35.9611, 26.2353, 0.55 ) }
    dend_29 { pt3dadd( -45.9753, -36.4421, 26.7191, 0.28 ) }
    dend_29 { pt3dadd( -46.7937, -37.6071, 27.8829, 0.83 ) }
    dend_29 { pt3dadd( -47.6901, -39.0, 29.3629, 0.55 ) }
    dend_29 { pt3dadd( -47.8439, -39.2455, 29.6416, 0.55 ) }
    dend_29 { pt3dadd( -48.3426, -39.9805, 30.5208, 0.83 ) }
    dend_29 { pt3dadd( -48.9706, -40.7638, 31.5129, 0.55 ) }
    dend_29 { pt3dadd( -49.4469, -41.2995, 32.2199, 0.83 ) }
    dend_29 { pt3dadd( -50.8228, -42.6551, 33.9346, 0.55 ) }
    dend_29 { pt3dadd( -51.4937, -43.2377, 34.5887, 0.83 ) }
    dend_29 { pt3dadd( -52.369, -43.9045, 35.319, 0.28 ) }
    dend_29 { pt3dadd( -53.0915, -44.3651, 35.8079, 0.55 ) }
    dend_29 { pt3dadd( -53.9307, -44.8117, 36.2241, 0.55 ) }
    dend_29 { pt3dadd( -55.2096, -45.4054, 36.6992, 0.28 ) }
    dend_29 { pt3dadd( -55.7892, -45.6398, 36.8285, 0.28 ) }
    dend_29 { pt3dadd( -56.2944, -45.8271, 36.9291, 0.55 ) }
    dend_29 { pt3dadd( -57.6579, -46.395, 37.2027, 0.28 ) }
    dend_29 { pt3dadd( -58.1566, -46.6583, 37.3519, 0.55 ) }
    dend_29 { pt3dadd( -58.3989, -46.805, 37.4306, 0.28 ) }
    dend_29 { pt3dadd( -59.0289, -47.2414, 37.6948, 0.28 ) }
    dend_29 { pt3dadd( -59.4473, -47.5354, 37.8736, 0.55 ) }
    dend_29 { pt3dadd( -60.2793, -48.1669, 38.2257, 0.28 ) }
    dend_29 { pt3dadd( -61.1242, -48.8785, 38.5547, 0.55 ) }
    dend_29 { pt3dadd( -62.159, -49.7548, 38.9868, 0.28 ) }
    dend_29 { pt3dadd( -62.9337, -50.439, 39.3231, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 52/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -63.226, 20.6061, 46.6093, 0.28 ) }
    dend_25 { pt3dadd( -65.3545, 21.5985, 46.4388, 0.28 ) }
    dend_25 { pt3dadd( -65.9445, 21.9101, 46.3597, 0.55 ) }
    dend_25 { pt3dadd( -67.218, 22.6109, 46.1845, 0.28 ) }
    dend_25 { pt3dadd( -67.5049, 22.787, 46.1373, 0.55 ) }
    dend_25 { pt3dadd( -70.2255, 24.6033, 45.6335, 0.28 ) }
    dend_25 { pt3dadd( -72.3285, 26.1015, 45.2779, 0.28 ) }
    dend_25 { pt3dadd( -73.5847, 27.1228, 45.028, 0.28 ) }
    dend_25 { pt3dadd( -74.4848, 27.9257, 44.8331, 0.55 ) }
    dend_25 { pt3dadd( -76.5422, 29.8174, 44.2824, 0.28 ) }
    dend_25 { pt3dadd( -77.3007, 30.5449, 44.0852, 0.55 ) }
    dend_25 { pt3dadd( -78.4625, 31.7553, 43.8007, 0.28 ) }
    dend_25 { pt3dadd( -79.0779, 32.4581, 43.631, 0.55 ) }
    dend_25 { pt3dadd( -80.0526, 33.637, 43.3472, 0.28 ) }
    dend_25 { pt3dadd( -81.3173, 35.2586, 42.8906, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 67/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -63.226, 20.6061, 46.6093, 0.28 ) }
    dend_24 { pt3dadd( -60.4982, 19.1793, 44.1596, 0.28 ) }
    dend_24 { pt3dadd( -59.7717, 18.783, 43.3767, 0.83 ) }
    dend_24 { pt3dadd( -56.2053, 17.2203, 39.8081, 0.28 ) }
    dend_24 { pt3dadd( -55.8288, 17.0675, 39.4482, 0.83 ) }
    dend_24 { pt3dadd( -52.406, 15.8764, 36.5696, 0.28 ) }
    dend_24 { pt3dadd( -51.3733, 15.5394, 35.773, 0.83 ) }
    dend_24 { pt3dadd( -44.5056, 13.5924, 30.7969, 0.28 ) }
    dend_24 { pt3dadd( -40.5698, 12.5758, 28.1555, 0.28 ) }
    dend_24 { pt3dadd( -39.6856, 12.383, 27.6296, 1.11 ) }
    dend_24 { pt3dadd( -34.9752, 11.4558, 25.1343, 0.28 ) }
    dend_24 { pt3dadd( -33.5875, 11.1661, 24.4089, 0.55 ) }
    dend_24 { pt3dadd( -28.5261, 10.0167, 21.6922, 0.28 ) }
    dend_24 { pt3dadd( -26.1612, 9.43131, 20.4683, 0.28 ) }
    dend_24 { pt3dadd( -24.7121, 9.00486, 19.6346, 0.55 ) }
    dend_24 { pt3dadd( -22.5597, 8.33525, 18.3003, 0.28 ) }
    dend_24 { pt3dadd( -16.3956, 5.99741, 13.9292, 0.28 ) }
    dend_24 { pt3dadd( -13.1913, 4.70205, 11.581, 0.28 ) }
    dend_24 { pt3dadd( -12.4994, 4.35664, 11.076, 0.83 ) }
    dend_24 { pt3dadd( -11.0017, 3.50861, 9.99503, 0.28 ) }
    dend_24 { pt3dadd( -11.0017, 3.50861, 9.99503, 0.83 ) }
    dend_24 { pt3dadd( -7.68891, 1.52632, 7.84855, 0.28 ) }
    dend_24 { pt3dadd( -6.78748, 0.96623, 7.46053, 0.83 ) }
    dend_24 { pt3dadd( -4.20675, -1.14558, 6.16007, 0.28 ) }
    dend_24 { pt3dadd( -2.6663, -2.51489, 5.33423, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 92/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -25.7875, 44.4905, -21.9959, 0.28 ) }
    dend_18 { pt3dadd( -26.5943, 43.1602, -23.037, 0.28 ) }
    dend_18 { pt3dadd( -27.1993, 42.1266, -23.9555, 0.83 ) }
    dend_18 { pt3dadd( -27.8595, 40.9949, -24.9415, 0.55 ) }
    dend_18 { pt3dadd( -28.5091, 39.8421, -26.1085, 1.11 ) }
    dend_18 { pt3dadd( -30.1858, 36.5658, -29.6738, 0.28 ) }
    dend_18 { pt3dadd( -30.2968, 36.3432, -29.9522, 0.83 ) }
    dend_18 { pt3dadd( -30.7521, 35.3508, -31.4037, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_18 { pt3dadd( -31.0124, 34.7344, -32.3803, 0.83 ) }
    dend_18 { pt3dadd( -31.9221, 32.4988, -36.1586, 0.28 ) }
    dend_18 { pt3dadd( -32.1626, 31.9328, -37.1159, 0.83 ) }
    dend_18 { pt3dadd( -33.0234, 30.0784, -40.7811, 0.28 ) }
    dend_18 { pt3dadd( -33.1708, 29.7562, -41.4744, 0.55 ) }
    dend_18 { pt3dadd( -33.4174, 29.2171, -42.6989, 0.55 ) }
    dend_18 { pt3dadd( -33.661, 28.6716, -44.008, 0.55 ) }
    dend_18 { pt3dadd( -33.9916, 27.9803, -45.6783, 1.11 ) }
    dend_18 { pt3dadd( -35.2212, 25.2747, -52.9717, 0.55 ) }
    dend_18 { pt3dadd( -35.3649, 24.8896, -54.0887, 0.28 ) }
    dend_18 { pt3dadd( -35.4051, 24.7899, -54.4273, 0.55 ) }
    dend_18 { pt3dadd( -35.6784, 24.2052, -56.6829, 0.28 ) }
    dend_18 { pt3dadd( -35.7711, 23.9594, -57.6843, 0.83 ) }
    dend_18 { pt3dadd( -36.2352, 22.5425, -63.7052, 0.28 ) }
    dend_18 { pt3dadd( -36.2598, 22.4786, -63.9636, 0.55 ) }
    dend_18 { pt3dadd( -36.8239, 21.0644, -69.7222, 0.28 ) }
    dend_18 { pt3dadd( -36.9158, 20.7913, -70.762, 0.55 ) }
    dend_18 { pt3dadd( -37.2152, 19.9475, -73.6636, 0.28 ) }
    dend_18 { pt3dadd( -37.2684, 19.7873, -74.1643, 0.83 ) }
    dend_18 { pt3dadd( -37.5562, 18.9481, -76.452, 0.28 ) }
    dend_18 { pt3dadd( -37.7012, 18.521, -77.5853, 0.83 ) }
    dend_18 { pt3dadd( -38.3946, 16.2389, -83.0342, 0.28 ) }
    dend_18 { pt3dadd( -38.5989, 15.677, -84.2803, 0.83 ) }
    dend_18 { pt3dadd( -39.5264, 13.4884, -88.8121, 0.55 ) }
    dend_18 { pt3dadd( -39.6463, 13.2005, -89.3756, 0.83 ) }
    dend_18 { pt3dadd( -40.3132, 11.5493, -92.4003, 0.28 ) }
    dend_18 { pt3dadd( -40.5325, 11.0149, -93.2911, 0.55 ) }
    dend_18 { pt3dadd( -41.4725, 8.73279, -96.6897, 0.28 ) }
    dend_18 { pt3dadd( -41.8032, 7.89132, -97.9086, 0.83 ) }
    dend_18 { pt3dadd( -43.5007, 3.64559, -103.525, 0.28 ) }
    dend_18 { pt3dadd( -43.5856, 3.4289, -103.808, 0.83 ) }
    dend_18 { pt3dadd( -44.0956, 2.04883, -105.525, 0.28 ) }
    dend_18 { pt3dadd( -44.2209, 1.70518, -105.979, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 33/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -25.7875, 44.4905, -21.9959, 0.55 ) }
    dend_17 { pt3dadd( -26.6531, 46.1626, -22.2535, 0.55 ) }
    dend_17 { pt3dadd( -27.2866, 47.4367, -22.4766, 0.55 ) }
    dend_17 { pt3dadd( -27.9106, 48.7983, -22.7861, 0.28 ) }
    dend_17 { pt3dadd( -28.3114, 49.7044, -23.011, 1.38 ) }
    dend_17 { pt3dadd( -28.8875, 51.0362, -23.3961, 0.55 ) }
    dend_17 { pt3dadd( -29.5293, 52.5263, -23.8495, 0.55 ) }
    dend_17 { pt3dadd( -29.8159, 53.1569, -24.0383, 0.83 ) }
    dend_17 { pt3dadd( -30.3094, 54.2899, -24.4104, 0.28 ) }
    dend_17 { pt3dadd( -30.5652, 54.9439, -24.6245, 0.55 ) }
    dend_17 { pt3dadd( -30.9954, 56.0936, -24.9614, 0.28 ) }
    dend_17 { pt3dadd( -31.3179, 56.9165, -25.1513, 0.83 ) }
    dend_17 { pt3dadd( -31.9981, 58.5765, -25.3713, 0.28 ) }
    dend_17 { pt3dadd( -32.3352, 59.4737, -25.4821, 0.55 ) }
    dend_17 { pt3dadd( -32.7025, 60.5509, -25.5855, 0.28 ) }
    dend_17 { pt3dadd( -32.9496, 61.4799, -25.6965, 0.83 ) }
    dend_17 { pt3dadd( -33.2976, 63.2406, -25.9016, 0.28 ) }
    dend_17 { pt3dadd( -33.5182, 64.8268, -26.1502, 0.83 ) }
    dend_17 { pt3dadd( -33.7344, 67.535, -26.6303, 0.28 ) }
    dend_17 { pt3dadd( -33.7589, 68.4852, -26.8071, 0.83 ) }
    dend_17 { pt3dadd( -33.7006, 71.1322, -27.4541, 0.28 ) }
    dend_17 { pt3dadd( -33.6171, 72.3751, -27.8053, 0.83 ) }
    dend_17 { pt3dadd( -33.4629, 73.9187, -28.28, 0.28 ) }
    dend_17 { pt3dadd( -33.3256, 75.1447, -28.6928, 0.55 ) }
    dend_17 { pt3dadd( -33.1903, 76.3689, -29.1, 0.83 ) }
    dend_17 { pt3dadd( -32.9706, 79.0624, -30.0263, 0.28 ) }
    dend_17 { pt3dadd( -32.9375, 80.1027, -30.3787, 0.83 ) }
    dend_17 { pt3dadd( -32.9494, 81.4976, -30.8583, 0.83 ) }
    dend_17 { pt3dadd( -33.0345, 82.8726, -31.319, 0.28 ) }
    dend_17 { pt3dadd( -33.1912, 83.9193, -31.7308, 0.83 ) }
    dend_17 { pt3dadd( -33.4398, 84.9483, -32.1386, 0.28 ) }
    dend_17 { pt3dadd( -33.675, 85.6653, -32.3964, 0.55 ) }
    dend_17 { pt3dadd( -33.889, 86.1794, -32.6031, 0.28 ) }
    dend_17 { pt3dadd( -34.438, 87.2106, -33.0101, 0.55 ) }
    dend_17 { pt3dadd( -35.6138, 89.0725, -33.6321, 0.28 ) }
    dend_17 { pt3dadd( -36.1018, 89.7198, -33.8615, 0.55 ) }
    dend_17 { pt3dadd( -36.6861, 90.4032, -34.1022, 0.28 ) }
    dend_17 { pt3dadd( -37.3647, 91.123, -34.351, 0.83 ) }
    dend_17 { pt3dadd( -38.3009, 92.0235, -34.6304, 0.28 ) }
    dend_17 { pt3dadd( -39.2562, 92.8825, -34.8486, 0.83 ) }
    dend_17 { pt3dadd( -40.722, 94.1362, -35.0722, 0.28 ) }
    dend_17 { pt3dadd( -41.2921, 94.6406, -35.18, 0.83 ) }
    dend_17 { pt3dadd( -41.9445, 95.2451, -35.3106, 0.28 ) }
    dend_17 { pt3dadd( -42.7815, 96.097, -35.4906, 0.28 ) }
    dend_17 { pt3dadd( -43.1337, 96.5265, -35.6062, 0.55 ) }
    dend_17 { pt3dadd( -43.8785, 97.667, -35.946, 0.28 ) }
    dend_17 { pt3dadd( -44.382, 98.7261, -36.3694, 0.55 ) }
    dend_17 { pt3dadd( -44.621, 99.3576, -36.6723, 0.55 ) }
    dend_17 { pt3dadd( -44.9273, 100.321, -37.175, 0.83 ) }
    dend_17 { pt3dadd( -45.439, 102.12, -38.2685, 0.28 ) }
    dend_17 { pt3dadd( -45.7814, 103.445, -39.1444, 0.83 ) }
    dend_17 { pt3dadd( -46.2069, 105.319, -40.5413, 0.28 ) }
    dend_17 { pt3dadd( -46.3617, 106.009, -41.1013, 0.28 ) }
    dend_17 { pt3dadd( -46.5533, 106.978, -41.8983, 0.83 ) }
    dend_17 { pt3dadd( -46.8759, 108.82, -43.4542, 0.28 ) }
    dend_17 { pt3dadd( -47.0031, 109.498, -44.0101, 0.83 ) }
    dend_17 { pt3dadd( -47.4601, 111.988, -45.9559, 0.28 ) }
    dend_17 { pt3dadd( -47.6899, 113.196, -46.8845, 1.11 ) }
    dend_17 { pt3dadd( -48.1139, 115.581, -48.7313, 0.28 ) }
    dend_17 { pt3dadd( -48.26, 116.593, -49.5094, 0.55 ) }
    dend_17 { pt3dadd( -48.3849, 117.534, -50.1634, 0.28 ) }
    dend_17 { pt3dadd( -48.4945, 118.297, -50.6522, 0.55 ) }
    dend_17 { pt3dadd( -48.76, 120.298, -51.7976, 0.28 ) }
    dend_17 { pt3dadd( -48.8574, 121.106, -52.3105, 0.55 ) }
    dend_17 { pt3dadd( -49.0117, 122.343, -53.1359, 0.28 ) }
    dend_17 { pt3dadd( -49.0807, 123.16, -53.7232, 0.55 ) }
    dend_17 { pt3dadd( -49.121, 124.154, -54.4655, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_17 { pt3dadd( -49.1428, 125.633, -55.5777, 0.55 ) }
    dend_17 { pt3dadd( -49.1713, 128.35, -57.4855, 0.28 ) }
    dend_17 { pt3dadd( -49.16, 129.479, -58.3056, 0.55 ) }
    dend_17 { pt3dadd( -49.12, 131.096, -59.4767, 0.28 ) }
    dend_17 { pt3dadd( -49.0593, 132.004, -60.153, 0.83 ) }
    dend_17 { pt3dadd( -48.9359, 133.243, -61.0364, 0.28 ) }
    dend_17 { pt3dadd( -48.8188, 134.137, -61.6805, 0.83 ) }
    dend_17 { pt3dadd( -48.5917, 135.68, -62.7643, 0.28 ) }
    dend_17 { pt3dadd( -48.4754, 136.385, -63.311, 0.55 ) }
    dend_17 { pt3dadd( -48.285, 137.382, -64.1087, 0.28 ) }
    dend_17 { pt3dadd( -48.0887, 138.231, -64.8168, 0.55 ) }
    dend_17 { pt3dadd( -47.5662, 140.679, -66.7822, 0.28 ) }
    dend_17 { pt3dadd( -47.4134, 141.519, -67.4317, 0.28 ) }
    dend_17 { pt3dadd( -47.2464, 143.329, -68.6908, 0.55 ) }
    dend_17 { pt3dadd( -47.1899, 144.813, -69.6259, 0.28 ) }
    dend_17 { pt3dadd( -47.222, 145.598, -70.0616, 0.55 ) }
    dend_17 { pt3dadd( -47.5087, 147.626, -71.0284, 0.28 ) }
    dend_17 { pt3dadd( -47.8611, 148.732, -71.4391, 0.83 ) }
    dend_17 { pt3dadd( -48.5947, 150.268, -71.9424, 0.28 ) }
    dend_17 { pt3dadd( -48.9132, 150.715, -72.0824, 0.55 ) }
    dend_17 { pt3dadd( -49.5096, 151.353, -72.3106, 0.28 ) }
    dend_17 { pt3dadd( -50.1397, 151.927, -72.5739, 0.55 ) }
    dend_17 { pt3dadd( -51.6009, 153.043, -73.1951, 0.28 ) }
    dend_17 { pt3dadd( -51.945, 153.28, -73.3271, 0.55 ) }
    dend_17 { pt3dadd( -54.1037, 154.772, -74.2153, 0.28 ) }
    dend_17 { pt3dadd( -54.6385, 155.192, -74.4441, 0.55 ) }
    dend_17 { pt3dadd( -55.3627, 155.856, -74.7382, 0.28 ) }
    dend_17 { pt3dadd( -56.0781, 156.566, -75.0314, 0.55 ) }
    dend_17 { pt3dadd( -57.2018, 157.842, -75.4767, 0.28 ) }
    dend_17 { pt3dadd( -57.8792, 158.671, -75.7174, 0.55 ) }
    dend_17 { pt3dadd( -59.2682, 160.621, -75.9433, 0.28 ) }
    dend_17 { pt3dadd( -59.7701, 161.423, -76.0088, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 32/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -8.78774, 75.5502, -14.4509, 0.55 ) }
    dend_15 { pt3dadd( -6.30337, 77.8366, -15.3012, 0.55 ) }
    dend_15 { pt3dadd( -2.7261, 81.5804, -18.5059, 0.55 ) }
    dend_15 { pt3dadd( -1.30326, 83.1808, -20.3063, 0.83 ) }
    dend_15 { pt3dadd( -0.147652, 84.5045, -21.9267, 0.83 ) }
    dend_15 { pt3dadd( 3.04514, 88.2621, -26.7278, 0.28 ) }
    dend_15 { pt3dadd( 4.22202, 89.6727, -28.499, 0.83 ) }
    dend_15 { pt3dadd( 8.17428, 94.9473, -36.525, 0.55 ) }
    dend_15 { pt3dadd( 8.92424, 96.1251, -38.6302, 0.28 ) }
    dend_15 { pt3dadd( 9.22587, 96.6726, -39.7188, 0.28 ) }
    dend_15 { pt3dadd( 9.62565, 97.5757, -41.6597, 0.55 ) }
    dend_15 { pt3dadd( 9.98994, 98.648, -43.9587, 0.55 ) }
    dend_15 { pt3dadd( 11.0233, 102.387, -51.5208, 0.28 ) }
    dend_15 { pt3dadd( 11.4772, 104.162, -54.7726, 0.83 ) }
    dend_15 { pt3dadd( 12.4763, 108.058, -61.5424, 0.83 ) }
    dend_15 { pt3dadd( 13.3784, 111.498, -67.3002, 0.83 ) }
    dend_15 { pt3dadd( 14.5985, 115.912, -74.5037, 0.28 ) }
    dend_15 { pt3dadd( 15.053, 117.455, -76.92, 0.28 ) }
    dend_15 { pt3dadd( 15.3441, 118.309, -78.084, 0.55 ) }
    dend_15 { pt3dadd( 16.9231, 122.133, -82.7084, 0.28 ) }
    dend_15 { pt3dadd( 17.2017, 122.71, -83.3173, 0.55 ) }
    dend_15 { pt3dadd( 19.4021, 126.471, -87.068, 0.28 ) }
    dend_15 { pt3dadd( 20.3189, 127.762, -88.6873, 0.55 ) }
    dend_15 { pt3dadd( 21.2609, 128.921, -90.3879, 0.28 ) }
    dend_15 { pt3dadd( 21.6404, 129.356, -91.0711, 0.55 ) }
    dend_15 { pt3dadd( 24.4391, 132.171, -95.8591, 0.28 ) }
    dend_15 { pt3dadd( 25.3299, 132.989, -97.271, 0.55 ) }
    dend_15 { pt3dadd( 30.3284, 137.046, -104.701, 0.28 ) }
    dend_15 { pt3dadd( 31.7815, 138.195, -106.785, 0.28 ) }
    dend_15 { pt3dadd( 33.3074, 139.389, -108.846, 0.55 ) }
    dend_15 { pt3dadd( 36.554, 141.924, -113.265, 0.28 ) }
    dend_15 { pt3dadd( 37.5937, 142.719, -114.588, 0.55 ) }
    dend_15 { pt3dadd( 41.8666, 145.921, -119.876, 0.28 ) }
    dend_15 { pt3dadd( 44.0382, 147.491, -122.399, 0.28 ) }
    dend_15 { pt3dadd( 45.9627, 148.867, -124.676, 0.83 ) }
    dend_15 { pt3dadd( 52.8207, 153.543, -132.406, 0.28 ) }
    dend_15 { pt3dadd( 54.6385, 154.729, -134.342, 0.28 ) }
    dend_15 { pt3dadd( 57.1959, 156.336, -136.887, 0.55 ) }
    dend_15 { pt3dadd( 59.4268, 157.7, -138.888, 0.28 ) }
    dend_15 { pt3dadd( 61.0373, 158.592, -140.337, 0.55 ) }
    dend_15 { pt3dadd( 62.6114, 159.423, -141.63, 0.28 ) }
    dend_15 { pt3dadd( 63.5723, 159.931, -142.094, 0.55 ) }
    dend_15 { pt3dadd( 65.8316, 161.214, -143.2, 0.28 ) }
    dend_15 { pt3dadd( 68.9848, 163.322, -144.32, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 76/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -8.78774, 75.5502, -14.4509, 0.55 ) }
    dend_14 { pt3dadd( -9.4563, 79.4663, -13.0854, 0.55 ) }
    dend_14 { pt3dadd( -9.69452, 82.0844, -12.0422, 0.55 ) }
    dend_14 { pt3dadd( -9.79026, 83.1964, -11.5909, 0.55 ) }
    dend_14 { pt3dadd( -9.92675, 84.9734, -10.8853, 0.55 ) }
    dend_14 { pt3dadd( -10.0481, 86.4724, -10.3587, 0.55 ) }
    dend_14 { pt3dadd( -10.3192, 90.0762, -9.10237, 0.28 ) }
    dend_14 { pt3dadd( -10.3947, 91.3466, -8.64974, 0.55 ) }
    dend_14 { pt3dadd( -10.4108, 93.1256, -7.89506, 0.55 ) }
    dend_14 { pt3dadd( -10.4378, 93.9842, -7.46329, 0.83 ) }
    dend_14 { pt3dadd( -10.5918, 95.9269, -6.37885, 0.28 ) }
    dend_14 { pt3dadd( -10.7524, 97.56, -5.47198, 0.83 ) }
    dend_14 { pt3dadd( -11.1239, 100.532, -3.80403, 0.28 ) }
    dend_14 { pt3dadd( -11.1577, 100.874, -3.57169, 0.83 ) }
    dend_14 { pt3dadd( -11.262, 103.479, -1.57257, 0.55 ) }
    dend_14 { pt3dadd( -11.2633, 104.662, -0.577689, 0.55 ) }
    dend_14 { pt3dadd( -11.2115, 106.4, 0.931531, 0.83 ) }
    dend_14 { pt3dadd( -11.0361, 109.566, 3.72916, 0.55 ) }
    dend_14 { pt3dadd( -10.8367, 111.996, 5.89156, 0.83 ) }
    dend_14 { pt3dadd( -10.7006, 113.227, 7.00955, 0.28 ) }
    dend_14 { pt3dadd( -10.5506, 114.312, 7.92939, 0.83 ) }
    dend_14 { pt3dadd( -10.3377, 115.924, 9.2839, 0.83 ) }
    dend_14 { pt3dadd( -10.0687, 118.757, 11.5764, 0.83 ) }
    dend_14 { pt3dadd( -9.95775, 121.135, 13.1354, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_14 { pt3dadd( -9.96285, 121.949, 13.6178, 0.83 ) }
    dend_14 { pt3dadd( -10.0274, 124.409, 15.1238, 0.83 ) }
    dend_14 { pt3dadd( -10.1097, 126.564, 16.4732, 0.28 ) }
    dend_14 { pt3dadd( -10.1522, 127.686, 17.2148, 0.55 ) }
    dend_14 { pt3dadd( -10.2806, 129.915, 18.6027, 0.28 ) }
    dend_14 { pt3dadd( -10.521, 132.215, 20.131, 0.55 ) }
    dend_14 { pt3dadd( -10.9051, 135.221, 22.2838, 0.28 ) }
    dend_14 { pt3dadd( -11.0087, 135.896, 22.8113, 0.83 ) }
    dend_14 { pt3dadd( -11.2262, 137.26, 23.8585, 0.28 ) }
    dend_14 { pt3dadd( -11.4836, 138.894, 25.1765, 0.55 ) }
    dend_14 { pt3dadd( -11.7778, 141.275, 27.3007, 0.28 ) }
    dend_14 { pt3dadd( -11.8223, 141.733, 27.6859, 0.55 ) }
    dend_14 { pt3dadd( -11.8959, 142.722, 28.554, 0.28 ) }
    dend_14 { pt3dadd( -11.909, 143.755, 29.5671, 0.83 ) }
    dend_14 { pt3dadd( -11.8085, 145.112, 30.9572, 0.28 ) }
    dend_14 { pt3dadd( -11.5485, 146.796, 32.7716, 0.55 ) }
    dend_14 { pt3dadd( -11.3166, 147.936, 34.1439, 0.28 ) }
    dend_14 { pt3dadd( -11.1801, 148.646, 34.9606, 0.83 ) }
    dend_14 { pt3dadd( -10.8658, 150.155, 36.5947, 0.83 ) }
    dend_14 { pt3dadd( -10.5506, 151.681, 38.1227, 0.55 ) }
    dend_14 { pt3dadd( -10.3635, 152.519, 38.8637, 0.83 ) }
    dend_14 { pt3dadd( -9.35226, 157.228, 42.5814, 0.55 ) }
    dend_14 { pt3dadd( -8.98992, 159.012, 43.8033, 0.83 ) }
    dend_14 { pt3dadd( -7.83104, 164.899, 47.1277, 0.28 ) }
    dend_14 { pt3dadd( -7.63269, 166.16, 47.5663, 0.55 ) }
    dend_14 { pt3dadd( -7.27019, 168.676, 47.9749, 0.28 ) }
    dend_14 { pt3dadd( -7.05246, 170.186, 48.0483, 0.83 ) }
    dend_14 { pt3dadd( -6.65443, 173.295, 47.6264, 0.28 ) }
    dend_14 { pt3dadd( -6.47276, 175.171, 47.1691, 0.55 ) }
    dend_14 { pt3dadd( -6.22615, 180.406, 44.7214, 0.28 ) }
    dend_14 { pt3dadd( -6.17966, 182.707, 43.5506, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 31/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -3.80428, 245.372, 16.3356, 0.55 ) }
    dend_10 { pt3dadd( -3.72205, 247.218, 16.3075, 0.55 ) }
    dend_10 { pt3dadd( -3.7231, 249.418, 16.2587, 0.55 ) }
    dend_10 { pt3dadd( -3.74518, 251.532, 16.2122, 0.83 ) }
    dend_10 { pt3dadd( -3.77282, 252.993, 16.1926, 0.55 ) }
    dend_10 { pt3dadd( -3.80698, 254.808, 16.1926, 1.11 ) }
    dend_10 { pt3dadd( -3.82139, 257.592, 16.2202, 0.55 ) }
    dend_10 { pt3dadd( -3.80144, 259.565, 16.2645, 1.11 ) }
    dend_10 { pt3dadd( -3.74092, 261.058, 16.2666, 0.83 ) }
    dend_10 { pt3dadd( -3.5821, 262.466, 16.2499, 0.55 ) }
    dend_10 { pt3dadd( -3.18481, 264.311, 16.2132, 0.55 ) }
    dend_10 { pt3dadd( -2.64746, 265.904, 16.1503, 0.83 ) }
    dend_10 { pt3dadd( -1.81293, 267.567, 15.9911, 0.55 ) }
    dend_10 { pt3dadd( -0.757554, 269.207, 15.7278, 0.83 ) }
    dend_10 { pt3dadd( 0.191071, 270.449, 15.4703, 0.83 ) }
    dend_10 { pt3dadd( 1.08902, 271.468, 15.2095, 0.83 ) }
    dend_10 { pt3dadd( 1.87497, 272.28, 14.9883, 1.11 ) }
    dend_10 { pt3dadd( 3.56447, 273.98, 14.4614, 0.83 ) }
    dend_10 { pt3dadd( 4.2866, 274.716, 14.2328, 0.55 ) }
    dend_10 { pt3dadd( 5.43809, 275.902, 13.9118, 0.83 ) }
    dend_10 { pt3dadd( 7.10618, 277.737, 13.4394, 0.55 ) }
    dend_10 { pt3dadd( 8.16236, 278.882, 13.1522, 1.11 ) }
    dend_10 { pt3dadd( 9.75388, 280.621, 12.7588, 0.55 ) }
    dend_10 { pt3dadd( 10.3021, 281.238, 12.6537, 0.55 ) }
    dend_10 { pt3dadd( 11.0451, 282.105, 12.5171, 0.55 ) }
    dend_10 { pt3dadd( 12.6864, 284.199, 12.27, 0.55 ) }
    dend_10 { pt3dadd( 13.3045, 285.075, 12.2227, 0.28 ) }
    dend_10 { pt3dadd( 13.6757, 285.675, 12.2195, 0.55 ) }
    dend_10 { pt3dadd( 14.312, 286.834, 12.2839, 0.28 ) }
    dend_10 { pt3dadd( 14.8154, 287.86, 12.3345, 0.83 ) }
    dend_10 { pt3dadd( 15.6705, 289.799, 12.4247, 0.55 ) }
    dend_10 { pt3dadd( 15.9432, 290.449, 12.4688, 0.83 ) }
    dend_10 { pt3dadd( 16.4958, 291.847, 12.5432, 0.55 ) }
    dend_10 { pt3dadd( 16.8507, 292.754, 12.5718, 0.83 ) }
    dend_10 { pt3dadd( 17.9216, 295.512, 12.6141, 0.28 ) }
    dend_10 { pt3dadd( 18.6365, 297.337, 12.603, 0.83 ) }
    dend_10 { pt3dadd( 19.3813, 299.224, 12.562, 0.28 ) }
    dend_10 { pt3dadd( 20.0287, 300.888, 12.5098, 0.55 ) }
    dend_10 { pt3dadd( 20.6877, 302.644, 12.4421, 0.55 ) }
    dend_10 { pt3dadd( 21.2224, 304.239, 12.3333, 0.55 ) }
    dend_10 { pt3dadd( 21.4725, 305.125, 12.2474, 0.28 ) }
    dend_10 { pt3dadd( 21.6756, 305.981, 12.1499, 0.55 ) }
    dend_10 { pt3dadd( 21.974, 307.639, 11.9554, 0.28 ) }
    dend_10 { pt3dadd( 22.1091, 308.618, 11.7909, 0.55 ) }
    dend_10 { pt3dadd( 22.292, 310.401, 11.4021, 0.28 ) }
    dend_10 { pt3dadd( 22.3939, 311.614, 11.1101, 0.28 ) }
    dend_10 { pt3dadd( 22.5218, 313.309, 10.6819, 0.83 ) }
    dend_10 { pt3dadd( 22.6192, 314.83, 10.273, 0.83 ) }
    dend_10 { pt3dadd( 22.8033, 317.732, 9.49292, 0.55 ) }
    dend_10 { pt3dadd( 22.9332, 319.361, 9.088, 0.55 ) }
    dend_10 { pt3dadd( 23.0572, 320.416, 8.87453, 0.55 ) }
    dend_10 { pt3dadd( 23.1604, 321.017, 8.74727, 0.28 ) }
    dend_10 { pt3dadd( 23.3396, 321.864, 8.57409, 0.55 ) }
    dend_10 { pt3dadd( 23.5257, 322.584, 8.45905, 0.28 ) }
    dend_10 { pt3dadd( 23.6992, 323.259, 8.34488, 1.11 ) }
    dend_10 { pt3dadd( 24.1482, 325.299, 7.80869, 0.55 ) }
    dend_10 { pt3dadd( 24.3844, 326.786, 7.34618, 0.55 ) }
    dend_10 { pt3dadd( 24.5289, 328.092, 6.86011, 0.28 ) }
    dend_10 { pt3dadd( 24.5756, 328.831, 6.52375, 0.83 ) }
    dend_10 { pt3dadd( 24.6678, 330.958, 5.39596, 0.55 ) }
    dend_10 { pt3dadd( 24.7194, 332.334, 4.60997, 0.83 ) }
    dend_10 { pt3dadd( 24.767, 333.852, 3.66574, 0.83 ) }
    dend_10 { pt3dadd( 24.8662, 335.389, 2.64581, 0.55 ) }
    dend_10 { pt3dadd( 24.9942, 336.6, 1.7911, 0.28 ) }
    dend_10 { pt3dadd( 25.1576, 337.782, 0.9509, 0.55 ) }
    dend_10 { pt3dadd( 25.3283, 338.868, 0.186693, 0.55 ) }
    dend_10 { pt3dadd( 25.5735, 340.294, -0.858639, 1.11 ) }
    dend_10 { pt3dadd( 25.9083, 342.171, -2.20271, 0.55 ) }
    dend_10 { pt3dadd( 26.0473, 342.985, -2.74491, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_10 { pt3dadd( 26.1796, 343.864, -3.34397, 0.55 ) }
    dend_10 { pt3dadd( 26.3959, 345.941, -4.792, 0.55 ) }
    dend_10 { pt3dadd( 26.5015, 346.989, -5.54516, 0.83 ) }
    dend_10 { pt3dadd( 26.7017, 349.21, -7.03962, 0.28 ) }
    dend_10 { pt3dadd( 26.75, 349.876, -7.46422, 0.55 ) }
    dend_10 { pt3dadd( 26.9007, 351.775, -8.60783, 0.28 ) }
    dend_10 { pt3dadd( 26.9921, 352.704, -9.13408, 0.55 ) }
    dend_10 { pt3dadd( 27.1669, 354.162, -9.86512, 0.28 ) }
    dend_10 { pt3dadd( 27.3034, 355.62, -10.5177, 0.55 ) }
    dend_10 { pt3dadd( 27.3686, 356.377, -10.8175, 0.28 ) }
    dend_10 { pt3dadd( 27.479, 357.621, -11.2447, 0.55 ) }
    dend_10 { pt3dadd( 27.7062, 359.693, -11.7734, 0.55 ) }
    dend_10 { pt3dadd( 27.8413, 360.764, -12.0586, 0.28 ) }
    dend_10 { pt3dadd( 27.9115, 361.708, -12.3286, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 14/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -3.80428, 245.372, 16.3356, 0.55 ) }
    dend_7 { pt3dadd( -5.31528, 246.754, 15.842, 0.55 ) }
    dend_7 { pt3dadd( -7.09631, 248.477, 15.3589, 1.11 ) }
    dend_7 { pt3dadd( -9.07514, 250.274, 14.9324, 0.55 ) }
    dend_7 { pt3dadd( -9.72141, 250.87, 14.758, 0.83 ) }
    dend_7 { pt3dadd( -11.2599, 252.325, 14.3138, 0.55 ) }
    dend_7 { pt3dadd( -12.5371, 253.48, 13.9531, 0.55 ) }
    dend_7 { pt3dadd( -13.5316, 254.363, 13.671, 0.83 ) }
    dend_7 { pt3dadd( -16.4831, 256.912, 12.8403, 0.55 ) }
    dend_7 { pt3dadd( -18.6848, 258.762, 12.3124, 0.55 ) }
    dend_7 { pt3dadd( -19.461, 259.411, 12.1023, 0.83 ) }
    dend_7 { pt3dadd( -21.5855, 261.149, 11.5048, 0.55 ) }
    dend_7 { pt3dadd( -21.9287, 261.425, 11.4015, 0.83 ) }
    dend_7 { pt3dadd( -23.0569, 262.364, 11.1022, 0.28 ) }
    dend_7 { pt3dadd( -23.2384, 262.529, 11.0759, 0.55 ) }
    dend_7 { pt3dadd( -24.3445, 263.52, 11.1014, 0.28 ) }
    dend_7 { pt3dadd( -25.0316, 264.179, 11.1622, 0.55 ) }
    dend_7 { pt3dadd( -25.8166, 264.903, 11.2156, 0.55 ) }
    dend_7 { pt3dadd( -27.9582, 266.771, 11.3154, 0.55 ) }
    dend_7 { pt3dadd( -29.4214, 268.048, 11.3526, 0.55 ) }
    dend_7 { pt3dadd( -30.5535, 269.08, 11.2829, 0.83 ) }
    dend_7 { pt3dadd( -32.0926, 270.541, 11.1004, 0.83 ) }
    dend_7 { pt3dadd( -34.0397, 272.541, 10.6017, 0.55 ) }
    dend_7 { pt3dadd( -35.4409, 274.064, 10.0856, 0.55 ) }
    dend_7 { pt3dadd( -36.9258, 275.781, 9.37321, 1.11 ) }
    dend_7 { pt3dadd( -38.5206, 277.905, 8.45425, 0.55 ) }
    dend_7 { pt3dadd( -38.9339, 278.526, 8.17497, 0.83 ) }
    dend_7 { pt3dadd( -40.1644, 280.663, 7.31108, 0.28 ) }
    dend_7 { pt3dadd( -40.7318, 281.832, 6.66011, 0.55 ) }
    dend_7 { pt3dadd( -41.0896, 282.625, 6.1101, 0.28 ) }
    dend_7 { pt3dadd( -41.4081, 283.405, 5.52547, 0.83 ) }
    dend_7 { pt3dadd( -42.0061, 285.086, 4.21826, 0.28 ) }
    dend_7 { pt3dadd( -42.5057, 286.615, 2.99507, 0.83 ) }
    dend_7 { pt3dadd( -44.1984, 292.583, -1.77044, 0.55 ) }
    dend_7 { pt3dadd( -44.4898, 293.737, -2.7007, 0.55 ) }
    dend_7 { pt3dadd( -44.7212, 294.786, -3.53715, 0.83 ) }
    dend_7 { pt3dadd( -44.9851, 296.13, -4.54901, 0.28 ) }
    dend_7 { pt3dadd( -45.0832, 296.789, -4.97346, 0.55 ) }
    dend_7 { pt3dadd( -45.2148, 297.778, -5.47213, 0.28 ) }
    dend_7 { pt3dadd( -45.3593, 299.121, -5.75692, 0.55 ) }
    dend_7 { pt3dadd( -45.604, 301.014, -6.18828, 0.55 ) }
    dend_7 { pt3dadd( -45.7562, 302.093, -6.43053, 0.55 ) }
    dend_7 { pt3dadd( -45.9244, 303.298, -6.67872, 0.83 ) }
    dend_7 { pt3dadd( -46.1676, 305.225, -7.08146, 0.28 ) }
    dend_7 { pt3dadd( -46.3634, 306.844, -7.40136, 0.83 ) }
    dend_7 { pt3dadd( -46.5345, 308.843, -7.75145, 0.55 ) }
    dend_7 { pt3dadd( -46.5976, 309.64, -7.86648, 0.55 ) }
    dend_7 { pt3dadd( -46.6838, 311.157, -8.01922, 0.83 ) }
    dend_7 { pt3dadd( -46.7355, 311.954, -8.05613, 0.55 ) }
    dend_7 { pt3dadd( -46.8308, 313.451, -7.98623, 0.83 ) }
    dend_7 { pt3dadd( -47.0119, 314.824, -7.89272, 0.28 ) }
    dend_7 { pt3dadd( -47.1255, 315.39, -7.90128, 0.28 ) }
    dend_7 { pt3dadd( -47.5437, 316.91, -8.05794, 0.28 ) }
    dend_7 { pt3dadd( -47.7472, 317.566, -8.18534, 0.83 ) }
    dend_7 { pt3dadd( -48.278, 319.095, -8.65221, 0.55 ) }
    dend_7 { pt3dadd( -48.928, 320.786, -9.52309, 0.83 ) }
    dend_7 { pt3dadd( -49.9577, 323.082, -11.0487, 0.28 ) }
    dend_7 { pt3dadd( -50.3309, 323.791, -11.6525, 0.55 ) }
    dend_7 { pt3dadd( -50.787, 324.486, -12.4188, 0.28 ) }
    dend_7 { pt3dadd( -51.176, 324.979, -13.0013, 0.83 ) }
    dend_7 { pt3dadd( -52.704, 326.779, -15.1828, 0.83 ) }
    dend_7 { pt3dadd( -53.2155, 327.355, -15.8656, 0.83 ) }
    dend_7 { pt3dadd( -54.8587, 329.138, -17.8202, 0.83 ) }
    dend_7 { pt3dadd( -56.7898, 331.19, -19.9835, 0.55 ) }
    dend_7 { pt3dadd( -57.9727, 332.399, -21.2471, 0.55 ) }
    dend_7 { pt3dadd( -59.0368, 333.494, -22.3432, 0.55 ) }
    dend_7 { pt3dadd( -60.195, 334.702, -23.467, 0.55 ) }
    dend_7 { pt3dadd( -61.8457, 336.592, -25.1006, 0.55 ) }
    dend_7 { pt3dadd( -63.1301, 338.166, -26.2615, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 83/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 51.4179, -36.4509, -63.3448, 0.55 ) }
    dend_45 { pt3dadd( 52.1133, -35.9838, -64.0869, 0.55 ) }
    dend_45 { pt3dadd( 52.8132, -35.4678, -64.8411, 0.83 ) }
    dend_45 { pt3dadd( 54.236, -34.3775, -66.3756, 0.28 ) }
    dend_45 { pt3dadd( 54.9569, -33.805, -67.1344, 0.83 ) }
    dend_45 { pt3dadd( 56.6996, -32.4006, -68.8986, 0.28 ) }
    dend_45 { pt3dadd( 57.2969, -31.9164, -69.4767, 0.55 ) }
    dend_45 { pt3dadd( 58.6244, -30.7811, -70.8196, 0.55 ) }
    dend_45 { pt3dadd( 60.0037, -29.5272, -72.1477, 0.55 ) }
    dend_45 { pt3dadd( 61.18, -28.4469, -73.212, 0.28 ) }
    dend_45 { pt3dadd( 61.6617, -28.0006, -73.6255, 0.28 ) }
    dend_45 { pt3dadd( 62.1469, -27.5506, -74.0201, 0.55 ) }
    dend_45 { pt3dadd( 63.1933, -26.618, -74.8263, 0.28 ) }
    dend_45 { pt3dadd( 64.6192, -25.3716, -75.7694, 0.55 ) }
    dend_45 { pt3dadd( 66.2944, -23.826, -76.9639, 0.28 ) }
    dend_45 { pt3dadd( 66.7294, -23.4256, -77.2867, 0.55 ) }
    dend_45 { pt3dadd( 68.4877, -21.7183, -78.6281, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_45 { pt3dadd( 69.6257, -20.5767, -79.52, 0.28 ) }
    dend_45 { pt3dadd( 70.925, -19.2488, -80.5925, 0.83 ) }
    dend_45 { pt3dadd( 72.9492, -17.068, -82.4146, 0.55 ) }
    dend_45 { pt3dadd( 73.4377, -16.5335, -82.8747, 0.55 ) }
    dend_45 { pt3dadd( 74.423, -15.4616, -83.8986, 0.55 ) }
    dend_45 { pt3dadd( 75.4221, -14.423, -84.9902, 0.83 ) }
    dend_45 { pt3dadd( 76.9108, -12.9643, -86.6223, 0.28 ) }
    dend_45 { pt3dadd( 77.3719, -12.5576, -87.0846, 0.55 ) }
    dend_45 { pt3dadd( 78.6102, -11.6047, -88.0541, 0.28 ) }
    dend_45 { pt3dadd( 78.8394, -11.4416, -88.2221, 0.55 ) }
    dend_45 { pt3dadd( 79.922, -10.7948, -88.9027, 0.55 ) }
    dend_45 { pt3dadd( 81.5376, -9.91332, -89.7121, 0.28 ) }
    dend_45 { pt3dadd( 82.1313, -9.60282, -89.9505, 0.55 ) }
    dend_45 { pt3dadd( 83.5721, -8.89838, -90.4825, 0.28 ) }
    dend_45 { pt3dadd( 84.1635, -8.62091, -90.6719, 0.55 ) }
    dend_45 { pt3dadd( 85.4362, -8.09078, -91.0693, 0.28 ) }
    dend_45 { pt3dadd( 86.2415, -7.8357, -91.331, 0.55 ) }
    dend_45 { pt3dadd( 86.6859, -7.73081, -91.4595, 0.55 ) }
    dend_45 { pt3dadd( 87.9312, -7.42439, -91.7599, 0.28 ) }
    dend_45 { pt3dadd( 88.7598, -7.20371, -91.9086, 0.28 ) }
    dend_45 { pt3dadd( 89.5782, -6.93018, -92.0539, 0.55 ) }
    dend_45 { pt3dadd( 91.5665, -6.12988, -92.3806, 0.28 ) }
    dend_45 { pt3dadd( 92.9541, -5.44262, -92.5899, 0.55 ) }
    dend_45 { pt3dadd( 94.2516, -4.68251, -92.7407, 0.55 ) }
    dend_45 { pt3dadd( 95.4389, -3.85009, -92.8316, 0.83 ) }
    dend_45 { pt3dadd( 97.1848, -2.42523, -92.8809, 0.28 ) }
    dend_45 { pt3dadd( 97.8219, -1.81402, -92.87, 0.28 ) }
    dend_45 { pt3dadd( 98.9144, -0.55394, -92.7665, 0.55 ) }
    dend_45 { pt3dadd( 99.9745, 0.82459, -92.6032, 0.28 ) }
    dend_45 { pt3dadd( 100.427, 1.45613, -92.5047, 0.55 ) }
    dend_45 { pt3dadd( 101.12, 2.48544, -92.2844, 0.55 ) }
    dend_45 { pt3dadd( 102.114, 4.01822, -91.8648, 0.28 ) }
    dend_45 { pt3dadd( 102.706, 4.95274, -91.6049, 0.55 ) }
    dend_45 { pt3dadd( 103.594, 6.41042, -91.2029, 0.28 ) }
    dend_45 { pt3dadd( 104.572, 8.07609, -90.7746, 0.55 ) }
    dend_45 { pt3dadd( 105.566, 9.80611, -90.3512, 0.55 ) }
    dend_45 { pt3dadd( 105.997, 10.5875, -90.1688, 0.55 ) }
    dend_45 { pt3dadd( 106.829, 12.1734, -89.8474, 0.55 ) }
    dend_45 { pt3dadd( 107.597, 13.6504, -89.6161, 0.55 ) }
    dend_45 { pt3dadd( 108.355, 15.1836, -89.4302, 0.55 ) }
    dend_45 { pt3dadd( 109.062, 16.6481, -89.2751, 0.28 ) }
    dend_45 { pt3dadd( 109.435, 17.4189, -89.2276, 0.55 ) }
    dend_45 { pt3dadd( 110.617, 19.8474, -89.112, 0.28 ) }
    dend_45 { pt3dadd( 111.381, 21.487, -89.0955, 0.28 ) }
    dend_45 { pt3dadd( 111.747, 22.3175, -89.1087, 0.55 ) }
    dend_45 { pt3dadd( 112.397, 23.7895, -89.1564, 0.28 ) }
    dend_45 { pt3dadd( 112.977, 25.1178, -89.2119, 0.55 ) }
    dend_45 { pt3dadd( 113.413, 26.1358, -89.2476, 0.55 ) }
    dend_45 { pt3dadd( 114.578, 29.0153, -89.3179, 0.28 ) }
    dend_45 { pt3dadd( 115.252, 30.8121, -89.3522, 0.28 ) }
    dend_45 { pt3dadd( 115.51, 31.547, -89.3595, 0.55 ) }
    dend_45 { pt3dadd( 116.003, 33.0341, -89.3555, 0.55 ) }
    dend_45 { pt3dadd( 116.65, 35.047, -89.2755, 0.28 ) }
    dend_45 { pt3dadd( 117.142, 36.6043, -89.187, 0.55 ) }
    dend_45 { pt3dadd( 117.584, 38.0397, -89.0533, 0.28 ) }
    dend_45 { pt3dadd( 117.918, 39.2812, -88.9274, 0.55 ) }
    dend_45 { pt3dadd( 118.107, 40.0287, -88.8346, 0.28 ) }
    dend_45 { pt3dadd( 118.237, 40.5321, -88.7239, 0.55 ) }
    dend_45 { pt3dadd( 118.605, 41.9827, -88.2887, 0.28 ) }
    dend_45 { pt3dadd( 118.799, 42.6859, -88.0206, 0.55 ) }
    dend_45 { pt3dadd( 119.495, 44.9926, -87.0269, 0.28 ) }
    dend_45 { pt3dadd( 120.007, 46.5677, -86.3075, 0.55 ) }
    dend_45 { pt3dadd( 120.711, 48.6434, -85.3023, 0.28 ) }
    dend_45 { pt3dadd( 121.111, 49.7561, -84.746, 0.55 ) }
    dend_45 { pt3dadd( 121.592, 51.0197, -84.0838, 0.28 ) }
    dend_45 { pt3dadd( 122.036, 52.1433, -83.4668, 0.55 ) }
    dend_45 { pt3dadd( 122.465, 53.1975, -82.877, 0.28 ) }
    dend_45 { pt3dadd( 122.784, 54.0145, -82.43, 0.55 ) }
    dend_45 { pt3dadd( 123.532, 56.0631, -81.3766, 0.28 ) }
    dend_45 { pt3dadd( 123.907, 57.105, -80.811, 0.55 ) }
    dend_45 { pt3dadd( 124.409, 58.6037, -79.9723, 0.28 ) }
    dend_45 { pt3dadd( 124.588, 59.16, -79.6402, 0.55 ) }
    dend_45 { pt3dadd( 125.003, 60.5782, -78.7717, 0.28 ) }
    dend_45 { pt3dadd( 125.398, 62.0816, -77.8608, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 74/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 51.4179, -36.4509, -63.3448, 0.28 ) }
    dend_44 { pt3dadd( 53.9736, -37.2424, -64.1628, 0.28 ) }
    dend_44 { pt3dadd( 54.7425, -37.4663, -64.4491, 0.55 ) }
    dend_44 { pt3dadd( 55.816, -37.6982, -64.8825, 0.55 ) }
    dend_44 { pt3dadd( 57.4691, -38.0074, -65.5445, 0.28 ) }
    dend_44 { pt3dadd( 58.4478, -38.1933, -65.9173, 0.55 ) }
    dend_44 { pt3dadd( 61.8687, -38.8143, -67.1189, 0.28 ) }
    dend_44 { pt3dadd( 62.798, -38.9311, -67.396, 0.55 ) }
    dend_44 { pt3dadd( 65.0173, -39.1232, -67.965, 0.28 ) }
    dend_44 { pt3dadd( 65.9702, -39.1692, -68.1637, 0.28 ) }
    dend_44 { pt3dadd( 67.5307, -39.2078, -68.3911, 0.55 ) }
    dend_44 { pt3dadd( 68.9698, -39.2565, -68.5251, 0.55 ) }
    dend_44 { pt3dadd( 72.4131, -39.4622, -68.5737, 0.28 ) }
    dend_44 { pt3dadd( 73.6833, -39.6067, -68.5822, 0.55 ) }
    dend_44 { pt3dadd( 75.1008, -39.87, -68.5928, 0.55 ) }
    dend_44 { pt3dadd( 77.6712, -40.4926, -68.6598, 0.28 ) }
    dend_44 { pt3dadd( 79.3309, -41.019, -68.736, 0.55 ) }
    dend_44 { pt3dadd( 81.3519, -41.9021, -68.8357, 0.28 ) }
    dend_44 { pt3dadd( 82.3967, -42.516, -68.8915, 0.55 ) }
    dend_44 { pt3dadd( 84.2635, -43.8371, -69.0005, 0.28 ) }
    dend_44 { pt3dadd( 85.0242, -44.5089, -69.0378, 0.55 ) }
    dend_44 { pt3dadd( 85.8174, -45.375, -69.057, 0.55 ) }
    dend_44 { pt3dadd( 86.7726, -46.6938, -68.9911, 0.28 ) }
    dend_44 { pt3dadd( 87.2746, -47.556, -68.9164, 0.28 ) }
    dend_44 { pt3dadd( 87.7444, -48.6546, -68.8004, 0.55 ) }
    dend_44 { pt3dadd( 88.2292, -50.2849, -68.6174, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_44 { pt3dadd( 88.2812, -50.5318, -68.5892, 0.55 ) }
    dend_44 { pt3dadd( 88.6219, -52.8538, -68.4073, 0.28 ) }
    dend_44 { pt3dadd( 88.6483, -53.1166, -68.4157, 0.83 ) }
    dend_44 { pt3dadd( 88.9449, -56.6267, -68.8023, 0.28 ) }
    dend_44 { pt3dadd( 89.0202, -57.275, -68.9972, 0.55 ) }
    dend_44 { pt3dadd( 89.2245, -58.8353, -69.7073, 0.28 ) }
    dend_44 { pt3dadd( 89.3618, -59.7866, -70.248, 0.55 ) }
    dend_44 { pt3dadd( 89.7386, -61.9008, -71.7698, 0.28 ) }
    dend_44 { pt3dadd( 89.7865, -62.165, -71.976, 0.55 ) }
    dend_44 { pt3dadd( 90.3976, -65.193, -74.6219, 0.28 ) }
    dend_44 { pt3dadd( 90.4689, -65.6084, -74.9772, 0.55 ) }
    dend_44 { pt3dadd( 90.5193, -65.8631, -75.1939, 0.55 ) }
    dend_44 { pt3dadd( 90.6918, -66.8244, -75.8764, 0.28 ) }
    dend_44 { pt3dadd( 90.8246, -67.6465, -76.3579, 0.55 ) }
    dend_44 { pt3dadd( 91.0609, -69.0991, -77.061, 0.28 ) }
    dend_44 { pt3dadd( 91.1602, -69.7025, -77.3186, 0.55 ) }
    dend_44 { pt3dadd( 91.8844, -73.3177, -78.9427, 0.28 ) }
    dend_44 { pt3dadd( 92.0497, -74.0568, -79.2801, 0.55 ) }
    dend_44 { pt3dadd( 92.2599, -74.892, -79.7077, 0.28 ) }
    dend_44 { pt3dadd( 93.0, -77.5683, -81.1681, 0.28 ) }
    dend_44 { pt3dadd( 93.2164, -78.4362, -81.6235, 0.55 ) }
    dend_44 { pt3dadd( 93.7787, -80.9428, -82.8671, 0.28 ) }
    dend_44 { pt3dadd( 93.81, -81.1561, -82.9586, 0.55 ) }
    dend_44 { pt3dadd( 94.0851, -83.9259, -84.1236, 0.28 ) }
    dend_44 { pt3dadd( 94.1252, -85.3, -84.5981, 0.55 ) }
    dend_44 { pt3dadd( 94.0728, -87.0896, -85.0434, 0.28 ) }
    dend_44 { pt3dadd( 94.0372, -87.8562, -85.148, 0.55 ) }
    dend_44 { pt3dadd( 93.9507, -89.4574, -85.2379, 0.28 ) }
    dend_44 { pt3dadd( 93.9247, -90.1676, -85.2562, 0.55 ) }
    dend_44 { pt3dadd( 93.9368, -92.9099, -85.4597, 0.28 ) }
    dend_44 { pt3dadd( 94.037, -95.1375, -85.7533, 0.28 ) }
    dend_44 { pt3dadd( 94.1423, -96.0926, -85.9514, 0.55 ) }
    dend_44 { pt3dadd( 94.4922, -98.4124, -86.5225, 0.28 ) }
    dend_44 { pt3dadd( 94.6337, -99.1188, -86.7109, 0.55 ) }
    dend_44 { pt3dadd( 95.6478, -103.769, -88.0147, 0.28 ) }
    dend_44 { pt3dadd( 96.0974, -105.516, -88.5562, 0.55 ) }
    dend_44 { pt3dadd( 96.8663, -108.087, -89.3671, 0.28 ) }
    dend_44 { pt3dadd( 97.0276, -108.592, -89.5283, 0.55 ) }
    dend_44 { pt3dadd( 97.8848, -110.991, -90.2754, 0.28 ) }
    dend_44 { pt3dadd( 98.0148, -111.319, -90.3649, 0.55 ) }
    dend_44 { pt3dadd( 98.6288, -112.455, -90.4835, 0.28 ) }
    dend_44 { pt3dadd( 99.0925, -113.161, -90.5808, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 42/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 42.1996, -52.7795, 16.0792, 0.55 ) }
    dend_41 { pt3dadd( 43.2659, -52.4704, 16.9924, 0.55 ) }
    dend_41 { pt3dadd( 45.41, -51.7716, 18.8342, 0.55 ) }
    dend_41 { pt3dadd( 49.3246, -50.4834, 22.1248, 0.55 ) }
    dend_41 { pt3dadd( 52.3285, -49.5152, 24.6106, 0.55 ) }
    dend_41 { pt3dadd( 55.042, -48.7032, 26.8362, 0.28 ) }
    dend_41 { pt3dadd( 56.5437, -48.2779, 28.047, 0.83 ) }
    dend_41 { pt3dadd( 58.422, -47.7781, 29.5952, 0.55 ) }
    dend_41 { pt3dadd( 59.833, -47.4809, 30.7365, 0.28 ) }
    dend_41 { pt3dadd( 60.5236, -47.3802, 31.2084, 0.55 ) }
    dend_41 { pt3dadd( 61.9865, -47.2056, 32.1189, 0.28 ) }
    dend_41 { pt3dadd( 62.476, -47.1608, 32.4236, 0.55 ) }
    dend_41 { pt3dadd( 64.5744, -47.1528, 33.5862, 0.28 ) }
    dend_41 { pt3dadd( 65.903, -47.3423, 34.2699, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 56/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 42.1996, -52.7795, 16.0792, 0.28 ) }
    dend_40 { pt3dadd( 48.7, -57.9053, 9.88651, 0.28 ) }
    dend_40 { pt3dadd( 49.635, -58.5151, 9.10557, 0.83 ) }
    dend_40 { pt3dadd( 52.9324, -60.3851, 6.55926, 0.28 ) }
    dend_40 { pt3dadd( 53.917, -60.7887, 5.8704, 0.83 ) }
    dend_40 { pt3dadd( 56.2449, -61.508, 4.3167, 0.28 ) }
    dend_40 { pt3dadd( 57.2407, -61.7301, 3.67813, 0.83 ) }
    dend_40 { pt3dadd( 60.3386, -61.5953, 2.28577, 0.28 ) }
    dend_40 { pt3dadd( 61.0107, -61.4147, 1.93433, 0.83 ) }
    dend_40 { pt3dadd( 64.3889, -59.8285, -0.0403634, 0.28 ) }
    dend_40 { pt3dadd( 65.2068, -59.4141, -0.540432, 0.28 ) }
    dend_40 { pt3dadd( 66.3629, -58.7918, -1.27242, 0.55 ) }
    dend_40 { pt3dadd( 68.6114, -57.5511, -2.20352, 0.28 ) }
    dend_40 { pt3dadd( 72.1635, -55.5765, -3.12385, 0.28 ) }
    dend_40 { pt3dadd( 73.0889, -55.0685, -3.16872, 0.83 ) }
    dend_40 { pt3dadd( 79.8727, -51.443, -2.43987, 0.28 ) }
    dend_40 { pt3dadd( 81.052, -50.8615, -2.18583, 0.55 ) }
    dend_40 { pt3dadd( 89.7249, -46.7593, 0.802726, 0.28 ) }
    dend_40 { pt3dadd( 90.6629, -46.3205, 1.22983, 0.83 ) }
    dend_40 { pt3dadd( 96.3678, -43.4882, 4.46148, 0.28 ) }
    dend_40 { pt3dadd( 97.134, -43.0563, 4.95525, 0.55 ) }
    dend_40 { pt3dadd( 99.4393, -41.5904, 6.65882, 0.28 ) }
    dend_40 { pt3dadd( 101.602, -40.1815, 8.22395, 0.55 ) }
    dend_40 { pt3dadd( 104.277, -38.4237, 9.84968, 0.28 ) }
    dend_40 { pt3dadd( 105.349, -37.6922, 10.4338, 0.55 ) }
    dend_40 { pt3dadd( 108.657, -35.1379, 11.6655, 0.28 ) }
    dend_40 { pt3dadd( 109.861, -34.0814, 12.1177, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_34 (entry count 83/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 36.6901, -66.4565, -3.65333, 0.55 ) }
    dend_38 { pt3dadd( 37.8818, -67.2874, -4.97127, 0.55 ) }
    dend_38 { pt3dadd( 39.7836, -68.6412, -7.08429, 0.55 ) }
    dend_38 { pt3dadd( 41.15, -69.6545, -8.62805, 0.28 ) }
    dend_38 { pt3dadd( 42.1285, -70.3692, -9.72192, 0.55 ) }
    dend_38 { pt3dadd( 43.6846, -71.4556, -11.3911, 0.55 ) }
    dend_38 { pt3dadd( 44.3703, -71.9435, -12.0689, 0.28 ) }
    dend_38 { pt3dadd( 44.8335, -72.2937, -12.5512, 0.55 ) }
    dend_38 { pt3dadd( 45.3624, -72.7431, -13.0623, 0.28 ) }
    dend_38 { pt3dadd( 46.1471, -73.4891, -13.7932, 0.55 ) }
    dend_38 { pt3dadd( 47.3509, -74.6361, -14.7705, 0.55 ) }
    dend_38 { pt3dadd( 49.1026, -76.2964, -16.1183, 0.55 ) }
    dend_38 { pt3dadd( 51.2383, -78.4922, -18.238, 1.38 ) }
    dend_38 { pt3dadd( 52.5033, -79.8476, -19.7108, 0.83 ) }
    dend_38 { pt3dadd( 53.5307, -80.9398, -21.0395, 0.55 ) }
    dend_38 { pt3dadd( 54.7659, -82.2493, -22.8039, 0.28 ) }
    dend_38 { pt3dadd( 56.2178, -83.7654, -25.0678, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_38 { pt3dadd( 58.7402, -86.3756, -29.7002, 0.28 ) }
    dend_38 { pt3dadd( 59.0443, -86.7196, -30.3299, 0.28 ) }
    dend_38 { pt3dadd( 59.7169, -87.6421, -32.0287, 0.55 ) }
    dend_38 { pt3dadd( 60.1343, -88.2695, -33.2072, 0.55 ) }
    dend_38 { pt3dadd( 60.4727, -88.8786, -34.3191, 0.55 ) }
    dend_38 { pt3dadd( 61.4528, -90.7286, -37.2925, 0.55 ) }
    dend_38 { pt3dadd( 62.4557, -92.6932, -40.0522, 0.28 ) }
    dend_38 { pt3dadd( 63.0362, -93.9768, -41.762, 0.83 ) }
    dend_38 { pt3dadd( 63.3762, -94.7961, -42.8204, 0.83 ) }
    dend_38 { pt3dadd( 64.2908, -96.9584, -45.586, 0.55 ) }
    dend_38 { pt3dadd( 64.6909, -97.8339, -46.6625, 0.83 ) }
    dend_38 { pt3dadd( 65.3634, -99.0021, -47.9735, 0.28 ) }
    dend_38 { pt3dadd( 65.92, -99.7679, -48.8157, 0.55 ) }
    dend_38 { pt3dadd( 66.2955, -100.252, -49.265, 0.28 ) }
    dend_38 { pt3dadd( 66.494, -100.504, -49.4542, 0.55 ) }
    dend_38 { pt3dadd( 67.5363, -101.656, -50.2245, 0.28 ) }
    dend_38 { pt3dadd( 68.6297, -102.968, -51.1587, 0.28 ) }
    dend_38 { pt3dadd( 69.4752, -103.993, -51.8673, 0.83 ) }
    dend_38 { pt3dadd( 70.1761, -104.953, -52.4758, 0.55 ) }
    dend_38 { pt3dadd( 71.9124, -107.5, -53.9934, 0.28 ) }
    dend_38 { pt3dadd( 72.3954, -108.313, -54.4711, 0.83 ) }
    dend_38 { pt3dadd( 73.8681, -111.076, -56.0383, 0.28 ) }
    dend_38 { pt3dadd( 74.3913, -112.245, -56.6303, 0.83 ) }
    dend_38 { pt3dadd( 75.3015, -114.343, -57.5854, 0.28 ) }
    dend_38 { pt3dadd( 75.5542, -114.945, -57.8623, 0.83 ) }
    dend_38 { pt3dadd( 76.586, -117.529, -58.9859, 0.28 ) }
    dend_38 { pt3dadd( 77.2142, -119.114, -59.6457, 0.28 ) }
    dend_38 { pt3dadd( 77.8342, -120.448, -60.1509, 0.55 ) }
    dend_38 { pt3dadd( 78.5444, -121.918, -60.7948, 0.55 ) }
    dend_38 { pt3dadd( 79.7532, -124.167, -61.8772, 0.55 ) }
    dend_38 { pt3dadd( 80.4173, -125.313, -62.4538, 0.28 ) }
    dend_38 { pt3dadd( 80.7744, -125.904, -62.7718, 0.55 ) }
    dend_38 { pt3dadd( 81.8916, -127.836, -63.9548, 0.28 ) }
    dend_38 { pt3dadd( 82.7366, -129.205, -64.8726, 0.55 ) }
    dend_38 { pt3dadd( 83.6026, -130.681, -65.8566, 0.28 ) }
    dend_38 { pt3dadd( 83.8748, -131.118, -66.1283, 0.83 ) }
    dend_38 { pt3dadd( 85.0128, -132.979, -67.3598, 0.28 ) }
    dend_38 { pt3dadd( 85.2773, -133.39, -67.6547, 0.55 ) }
    dend_38 { pt3dadd( 85.9541, -134.376, -68.4553, 0.55 ) }
    dend_38 { pt3dadd( 87.2034, -135.958, -69.6394, 0.28 ) }
    dend_38 { pt3dadd( 87.2527, -136.019, -69.6878, 0.55 ) }
    dend_38 { pt3dadd( 88.3114, -137.309, -70.8872, 0.28 ) }
    dend_38 { pt3dadd( 88.7298, -137.787, -71.3737, 0.55 ) }
    dend_38 { pt3dadd( 89.787, -139.114, -72.7912, 0.28 ) }
    dend_38 { pt3dadd( 90.451, -139.976, -73.7817, 0.55 ) }
    dend_38 { pt3dadd( 91.616, -141.461, -75.647, 0.55 ) }
    dend_38 { pt3dadd( 92.5952, -142.766, -77.3191, 0.28 ) }
    dend_38 { pt3dadd( 93.1805, -143.595, -78.3565, 0.83 ) }
    dend_38 { pt3dadd( 94.1774, -145.065, -80.144, 0.28 ) }
    dend_38 { pt3dadd( 94.4124, -145.353, -80.5024, 0.55 ) }
    dend_38 { pt3dadd( 95.3447, -146.301, -81.7765, 0.28 ) }
    dend_38 { pt3dadd( 95.7146, -146.563, -82.1278, 0.55 ) }
    dend_38 { pt3dadd( 97.6171, -147.601, -83.6326, 0.28 ) }
    dend_38 { pt3dadd( 98.2464, -147.88, -84.0897, 0.83 ) }
    dend_38 { pt3dadd( 100.853, -148.696, -85.6436, 0.28 ) }
    dend_38 { pt3dadd( 101.352, -148.821, -85.9144, 0.55 ) }
    dend_38 { pt3dadd( 103.481, -149.099, -86.8847, 0.28 ) }
    dend_38 { pt3dadd( 105.323, -149.159, -87.7045, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 58/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 36.6901, -66.4565, -3.65333, 0.55 ) }
    dend_35 { pt3dadd( 37.0823, -67.807, -5.75031, 0.55 ) }
    dend_35 { pt3dadd( 37.7414, -70.7249, -10.1576, 0.55 ) }
    dend_35 { pt3dadd( 38.3589, -73.227, -13.8875, 0.28 ) }
    dend_35 { pt3dadd( 38.843, -75.0043, -16.6187, 0.83 ) }
    dend_35 { pt3dadd( 39.7877, -77.8089, -21.0516, 0.28 ) }
    dend_35 { pt3dadd( 40.0125, -78.4381, -22.125, 0.55 ) }
    dend_35 { pt3dadd( 40.185, -78.9544, -23.1011, 0.55 ) }
    dend_35 { pt3dadd( 40.6178, -79.8592, -25.1316, 0.55 ) }
    dend_35 { pt3dadd( 41.3815, -81.1552, -28.2469, 0.55 ) }
    dend_35 { pt3dadd( 41.8223, -81.8327, -29.9641, 0.55 ) }
    dend_35 { pt3dadd( 43.3467, -83.5354, -34.583, 0.83 ) }
    dend_35 { pt3dadd( 44.3138, -84.5264, -37.4386, 0.28 ) }
    dend_35 { pt3dadd( 44.6793, -84.9014, -38.6207, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 72/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -44.2209, 1.70518, -105.979, 0.28 ) }
    dend_20 { pt3dadd( -45.3834, 0.92928, -106.097, 0.28 ) }
    dend_20 { pt3dadd( -46.8935, -0.0788637, -106.251, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 75/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -44.2209, 1.70518, -105.979, 0.28 ) }
    dend_19 { pt3dadd( -44.1924, 0.37484, -107.835, 0.28 ) }
    dend_19 { pt3dadd( -44.184, -0.0141137, -108.377, 0.55 ) }
    dend_19 { pt3dadd( -44.1579, -1.23102, -110.074, 0.28 ) }
    dend_19 { pt3dadd( -44.1463, -1.76965, -110.825, 0.83 ) }
    dend_19 { pt3dadd( -44.0957, -4.12685, -114.113, 0.28 ) }
    dend_19 { pt3dadd( -44.0873, -4.51425, -114.653, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 82/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -63.1301, 338.166, -26.2615, 0.55 ) }
    dend_9 { pt3dadd( -64.4229, 339.145, -27.5061, 0.55 ) }
    dend_9 { pt3dadd( -65.782, 340.317, -28.771, 0.28 ) }
    dend_9 { pt3dadd( -67.1373, 341.486, -30.0323, 0.55 ) }
    dend_9 { pt3dadd( -71.0564, 344.865, -33.6795, 0.28 ) }
    dend_9 { pt3dadd( -71.5069, 345.254, -34.0988, 0.55 ) }
    dend_9 { pt3dadd( -74.4128, 347.76, -36.8032, 0.28 ) }
    dend_9 { pt3dadd( -75.8799, 348.827, -38.3464, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 90/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -63.1301, 338.166, -26.2615, 0.28 ) }
    dend_8 { pt3dadd( -64.8577, 337.514, -25.8866, 0.28 ) }
    dend_8 { pt3dadd( -65.8194, 337.152, -25.6779, 0.83 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 93/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 125.398, 62.0816, -77.8608, 0.28 ) }
    dend_47 { pt3dadd( 121.497, 65.4147, -76.4489, 0.28 ) }
    dend_47 { pt3dadd( 120.174, 66.5444, -75.9703, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 96/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 125.398, 62.0816, -77.8608, 0.28 ) }
    dend_46 { pt3dadd( 126.339, 63.6088, -76.7888, 0.28 ) }
    dend_46 { pt3dadd( 128.078, 66.4728, -74.7169, 0.28 ) }
    dend_46 { pt3dadd( 128.524, 67.2294, -74.1117, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_46 { pt3dadd( 130.062, 69.9321, -71.7072, 0.28 ) }
    dend_46 { pt3dadd( 130.945, 71.4851, -70.3254, 0.55 ) }
    dend_46 { pt3dadd( 132.086, 73.4914, -68.5404, 0.28 ) }
    dend_46 { pt3dadd( 132.657, 74.5218, -67.5181, 0.55 ) }
    dend_46 { pt3dadd( 133.506, 76.103, -65.724, 0.28 ) }
    dend_46 { pt3dadd( 134.139, 77.3855, -64.2306, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 6/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 44.6793, -84.9014, -38.6207, 0.55 ) }
    dend_37 { pt3dadd( 42.5633, -87.3358, -39.6156, 0.55 ) }
    dend_37 { pt3dadd( 41.591, -88.5208, -40.1142, 0.28 ) }
    dend_37 { pt3dadd( 40.9235, -89.2808, -40.4481, 0.83 ) }
    dend_37 { pt3dadd( 36.8026, -93.7337, -42.2794, 0.28 ) }
    dend_37 { pt3dadd( 35.6539, -95.0143, -42.7759, 0.83 ) }
    dend_37 { pt3dadd( 30.7648, -100.612, -44.763, 0.28 ) }
    dend_37 { pt3dadd( 30.0861, -101.384, -45.0321, 0.83 ) }
    dend_37 { pt3dadd( 25.859, -105.866, -46.5275, 0.28 ) }
    dend_37 { pt3dadd( 24.629, -107.116, -46.8689, 0.55 ) }
    dend_37 { pt3dadd( 19.2661, -112.21, -47.9776, 0.28 ) }
    dend_37 { pt3dadd( 18.1621, -113.21, -48.2041, 0.28 ) }
    dend_37 { pt3dadd( 15.7565, -115.274, -48.7005, 0.83 ) }
    dend_37 { pt3dadd( 8.59348, -121.217, -50.2481, 0.28 ) }
    dend_37 { pt3dadd( 6.6011, -122.838, -50.7322, 0.55 ) }
    dend_37 { pt3dadd( 2.65512, -125.973, -51.7693, 0.55 ) }
    dend_37 { pt3dadd( -0.298587, -128.213, -52.5383, 0.55 ) }
    dend_37 { pt3dadd( -5.37729, -132.125, -53.8862, 0.28 ) }
    dend_37 { pt3dadd( -6.77359, -133.284, -54.2616, 0.83 ) }
    dend_37 { pt3dadd( -11.3643, -137.35, -55.3829, 0.28 ) }
    dend_37 { pt3dadd( -12.2264, -138.174, -55.5637, 0.55 ) }
    dend_37 { pt3dadd( -15.8221, -141.915, -55.888, 0.28 ) }
    dend_37 { pt3dadd( -16.87, -142.984, -55.8671, 0.55 ) }
    dend_37 { pt3dadd( -20.7251, -147.074, -55.4233, 0.28 ) }
    dend_37 { pt3dadd( -21.0743, -147.425, -55.3813, 0.83 ) }
    dend_37 { pt3dadd( -23.0983, -149.373, -54.9547, 0.28 ) }
    dend_37 { pt3dadd( -24.7045, -150.883, -54.4996, 0.55 ) }
    dend_37 { pt3dadd( -29.6014, -155.284, -52.9989, 0.28 ) }
    dend_37 { pt3dadd( -31.0369, -156.598, -52.4732, 0.83 ) }
    dend_37 { pt3dadd( -37.0555, -162.21, -49.8064, 0.28 ) }
    dend_37 { pt3dadd( -39.6068, -164.647, -48.6018, 0.55 ) }
    dend_37 { pt3dadd( -42.939, -167.955, -47.0175, 0.55 ) }
    dend_37 { pt3dadd( -46.5485, -171.763, -45.1326, 0.28 ) }
    dend_37 { pt3dadd( -49.4272, -175.059, -43.3419, 0.55 ) }
    dend_37 { pt3dadd( -51.5233, -177.516, -42.1544, 0.28 ) }
    dend_37 { pt3dadd( -51.8265, -177.898, -41.9843, 0.55 ) }
    dend_37 { pt3dadd( -53.7659, -180.201, -41.0795, 0.28 ) }
    dend_37 { pt3dadd( -55.3341, -181.89, -40.4282, 0.55 ) }
    dend_37 { pt3dadd( -57.134, -183.621, -39.7734, 0.55 ) }
    dend_37 { pt3dadd( -60.4375, -186.336, -38.8835, 0.28 ) }
    dend_37 { pt3dadd( -61.8739, -187.397, -38.4928, 0.55 ) }
    dend_37 { pt3dadd( -63.9443, -188.869, -37.9246, 0.28 ) }
    dend_37 { pt3dadd( -65.2616, -189.743, -37.5287, 0.55 ) }
    dend_37 { pt3dadd( -68.858, -192.035, -36.4799, 0.28 ) }
    dend_37 { pt3dadd( -70.0957, -192.792, -36.1779, 0.55 ) }
    dend_37 { pt3dadd( -73.1868, -194.74, -35.4151, 0.28 ) }
    dend_37 { pt3dadd( -75.2343, -196.13, -35.1256, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 53/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 44.6793, -84.9014, -38.6207, 0.28 ) }
    dend_36 { pt3dadd( 48.313, -85.4338, -39.3945, 0.28 ) }
    dend_36 { pt3dadd( 48.8321, -85.5293, -39.5559, 0.83 ) }
    dend_36 { pt3dadd( 51.2026, -86.0906, -40.3225, 0.28 ) }
    dend_36 { pt3dadd( 52.0317, -86.2651, -40.5965, 0.28 ) }
    dend_36 { pt3dadd( 53.0471, -86.5267, -40.9742, 0.55 ) }
    dend_36 { pt3dadd( 54.7988, -87.027, -41.8783, 0.28 ) }
    dend_36 { pt3dadd( 56.6217, -87.6483, -43.1167, 0.55 ) }
    dend_36 { pt3dadd( 57.6827, -88.0889, -43.8801, 0.55 ) }
    dend_36 { pt3dadd( 58.9627, -88.7205, -44.9884, 0.55 ) }
    dend_36 { pt3dadd( 61.1486, -89.8611, -47.1204, 0.83 ) }
    dend_36 { pt3dadd( 63.7073, -91.2627, -49.9047, 0.28 ) }
    dend_36 { pt3dadd( 64.5751, -91.7582, -50.9173, 0.28 ) }
    dend_36 { pt3dadd( 65.0052, -92.0492, -51.4968, 0.83 ) }
    dend_36 { pt3dadd( 67.8212, -94.0581, -55.5159, 0.28 ) }
    dend_36 { pt3dadd( 68.5923, -94.6891, -56.7315, 0.83 ) }
    dend_36 { pt3dadd( 69.22, -95.2753, -57.8162, 0.83 ) }
    dend_36 { pt3dadd( 70.3098, -96.4279, -59.7155, 0.83 ) }
    dend_36 { pt3dadd( 72.1257, -98.498, -62.9994, 0.55 ) }
    dend_36 { pt3dadd( 73.6438, -100.519, -65.8588, 0.55 ) }
    dend_36 { pt3dadd( 75.4321, -103.414, -69.3294, 0.55 ) }
    dend_36 { pt3dadd( 76.2068, -105.01, -71.0443, 0.55 ) }
    dend_36 { pt3dadd( 76.7921, -106.583, -72.5432, 0.28 ) }
    dend_36 { pt3dadd( 76.8486, -106.793, -72.7085, 0.55 ) }
    dend_36 { pt3dadd( 77.4005, -110.034, -74.7078, 0.28 ) }
    dend_36 { pt3dadd( 77.5135, -111.276, -75.3189, 0.55 ) }
    dend_36 { pt3dadd( 77.8009, -114.968, -76.843, 0.28 ) }
    dend_36 { pt3dadd( 78.0009, -117.065, -77.5953, 0.55 ) }
    dend_36 { pt3dadd( 78.2834, -119.33, -78.3228, 0.28 ) }
    dend_36 { pt3dadd( 78.5807, -121.033, -78.7575, 0.55 ) }
    dend_36 { pt3dadd( 79.448, -125.016, -79.4998, 0.28 ) }
    dend_36 { pt3dadd( 79.7059, -125.974, -79.6132, 1.11 ) }
    dend_36 { pt3dadd( 81.3956, -130.795, -79.8168, 0.28 ) }
    dend_36 { pt3dadd( 82.4046, -133.145, -79.7616, 0.55 ) }
    dend_36 { pt3dadd( 83.5618, -135.355, -79.3488, 0.28 ) }
    dend_36 { pt3dadd( 84.0083, -136.052, -79.0833, 0.55 ) }
    dend_36 { pt3dadd( 85.2975, -137.793, -78.0628, 0.28 ) }
    dend_36 { pt3dadd( 86.2081, -138.907, -77.2275, 0.28 ) }
    dend_36 { pt3dadd( 88.0706, -140.873, -75.2779, 0.55 ) }
    dend_36 { pt3dadd( 90.8257, -143.795, -72.2095, 0.55 ) }
    dend_36 { pt3dadd( 91.8992, -144.937, -70.9868, 0.28 ) }
    dend_36 { pt3dadd( 92.1277, -145.156, -70.7463, 0.55 ) }
    dend_36 { pt3dadd( 93.8535, -146.619, -69.1334, 0.28 ) }
    dend_36 { pt3dadd( 94.1582, -146.863, -68.8728, 0.55 ) }
    dend_36 { pt3dadd( 95.6366, -147.856, -67.8931, 0.28 ) }
    dend_36 { pt3dadd( 96.3335, -148.238, -67.5662, 0.55 ) }
    dend_36 { pt3dadd( 99.2016, -149.408, -66.1431, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_36 { pt3dadd( 100.129, -149.661, -65.5793, 0.55 ) }
    dend_36 { pt3dadd( 101.641, -149.863, -64.6796, 0.28 ) }
    dend_36 { pt3dadd( 102.139, -149.86, -64.3006, 0.55 ) }
    dend_36 { pt3dadd( 103.591, -149.674, -63.0338, 0.28 ) }
    dend_36 { pt3dadd( 104.847, -149.456, -61.8474, 0.55 ) }
    dend_36 { pt3dadd( 107.114, -148.892, -59.277, 0.28 ) }
    dend_36 { pt3dadd( 108.832, -148.369, -57.1686, 0.55 ) }
    dend_36 { pt3dadd( 112.461, -146.971, -52.4611, 0.28 ) }
    dend_36 { pt3dadd( 112.983, -146.754, -51.7453, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_26, dend_11, dend_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
    ModelViewParmSubset_2 = new SectionList()
    dend_26 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_26, dend_11, dend_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_37 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_21 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_6 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_5 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_3 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_48 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_43 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_30 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_24 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_18 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_17 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_15 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_14 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_10 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_45 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_44 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_40 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_38 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_35 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_37 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_36 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_26 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_32 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_11 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_27 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_12 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_42 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_33 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_16 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_28 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_4 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_2 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_31 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_39 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_34 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_13 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_29 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_23 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_41 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_22 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_25 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_20 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_19 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_47 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_46 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_8 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_9 OneSecGrp_SectionRef_47.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_26, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_4, dend_4, dend_4, dend_4, dend_1, axon_1, axon_1, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_26 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    axon_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    axon_1 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_21 nseg = 3
    dend_6 nseg = 9
    dend_5 nseg = 7
    dend_3 nseg = 7
    dend_48 nseg = 17
    dend_43 nseg = 3
    dend_30 nseg = 15
    dend_24 nseg = 3
    dend_18 nseg = 5
    dend_17 nseg = 7
    dend_15 nseg = 9
    dend_14 nseg = 7
    dend_10 nseg = 7
    dend_7 nseg = 7
    dend_45 nseg = 7
    dend_44 nseg = 5
    dend_40 nseg = 5
    dend_38 nseg = 7
    dend_35 nseg = 3
    dend_37 nseg = 9
    dend_36 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L4_BTC_e8dd2ca96e_0_0


