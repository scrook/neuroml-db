// Cell: bNAC219_L6_SBC_d20c9b88b4_0_0
/*
{
  "id" : "bNAC219_L6_SBC_d20c9b88b4_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.488402, 10.6886, -0.10439, 2.1741", "0.446743, 9.60874, -0.0969525, 3.70718", "0.405084, 8.52883, -0.0895152, 5.34259", "0.363425, 7.44892, -0.0820778, 6.31081", "0.321766, 6.36901, -0.0746405, 7.2239", "0.280106, 5.2891, -0.0672032, 7.79497", "0.238447, 4.20919, -0.0597659, 8.16787", "0.196788, 3.12928, -0.0523285, 8.65603", "0.155129, 2.04937, -0.0448912, 9.27596", "0.11347, 0.969459, -0.0374539, 9.68183", "0.0718107, -0.110451, -0.0300165, 9.60108", "0.0301515, -1.19036, -0.0225792, 9.40911", "-0.0115077, -2.27027, -0.0151419, 8.85229", "-0.0531668, -3.35018, -0.00770454, 8.34531", "-0.094826, -4.43009, -2.67214E-4, 7.89073", "-0.136485, -5.51, 0.00717012, 7.34681", "-0.178144, -6.58991, 0.0146074, 6.74183", "-0.219803, -7.66982, 0.0220448, 6.06339", "-0.261463, -8.74973, 0.0294821, 5.33412", "-0.303122, -9.82964, 0.0369194, 3.6506", "-0.344781, -10.9096, 0.0443568, 2.18196" ]
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "1.87458, 3.14782, 11.4844, 0.81", "1.40242, 4.09022, 11.4844, 0.81", "0.879858, 5.13323, 11.4844, 0.81", "0.10843, 6.67296, 11.4844, 0.81", "-0.495774, 7.87892, 11.4844, 0.81", "-1.2242, 9.33282, 11.4844, 1.4", "-1.41052, 9.70471, 11.4844, 1.4" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999773444601353
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-1.37542, -9.94143, 0.224411, 4.05", "-1.37542, -9.94143, 0.224411, 4.05", "-1.83175, -11.5114, 0.233574, 3.61", "-2.46432, -13.8079, 0.184341, 2.87", "-2.99934, -15.9431, 0.0269322, 2.36", "-3.46792, -18.0208, -0.134421, 2.36", "-3.91424, -20.2045, -0.282834, 2.65", "-4.27757, -22.0697, -0.420814, 2.65", "-4.57885, -23.7749, -0.566362, 2.8", "-4.97899, -26.4261, -0.826366, 2.43", "-5.28217, -28.7793, -1.08845, 2.28", "-5.54998, -31.3044, -1.39941, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999773444601353
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.565422, 10.6201, -2.89559, 3.17", "-0.565422, 10.6201, -2.89559, 3.17", "-1.80867, 11.9215, -2.98351, 2.8", "-3.02043, 13.1307, -3.06436, 2.8", "-4.11493, 14.2, -3.13269, 2.8", "-5.51243, 15.5804, -3.20629, 2.8", "-6.5778, 16.6936, -3.25557, 2.58", "-7.32178, 17.5116, -3.28444, 2.58", "-7.95028, 18.2542, -3.30299, 2.36", "-8.51536, 19.046, -3.31128, 1.92", "-9.21909, 20.4253, -3.31305, 1.92", "-9.60982, 21.8129, -3.30199, 1.92", "-9.75278, 23.0429, -3.29451, 1.92", "-9.73077, 24.0988, -3.29191, 2.21", "-9.57425, 25.2215, -3.35248, 2.21", "-9.35103, 26.155, -3.45051, 1.84", "-8.92175, 27.5087, -3.65563, 1.84", "-8.61777, 28.3811, -3.81417, 1.84", "-8.27053, 29.3596, -4.03564, 1.84", "-7.64077, 31.2547, -4.54791, 1.69", "-7.41896, 32.0334, -4.78677, 1.69", "-7.14153, 33.2026, -5.23745, 1.69", "-6.9527, 34.2835, -5.73413, 1.84", "-6.83736, 35.2054, -6.2015, 1.99", "-6.78001, 36.1027, -6.67944, 1.99", "-6.74477, 37.1154, -7.22516, 1.99", "-6.7306, 38.6221, -8.13063, 2.14", "-6.74481, 39.4168, -8.67394, 2.14", "-6.77673, 40.1263, -9.20755, 2.14", "-6.82539, 40.8328, -9.73947, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999773444601353
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.344781, -10.9096, 0.0443568, 0.594742", "-0.922998, -25.8985, 0.0443568, 0.594742", "-1.50121, -40.8873, 0.0443568, 0.594742" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-1.41052, 9.70471, 11.4844, 0.81", "-2.47499, 12.0859, 10.0584, 0.81", "-3.0003, 13.2704, 9.43458, 0.81", "-3.42832, 14.1797, 9.00787, 1.03", "-3.85205, 15.0146, 8.65296, 1.03", "-4.41367, 16.0374, 8.25426, 0.59", "-5.00701, 17.038, 7.9008, 0.37", "-5.59159, 17.9451, 7.72351, 0.37", "-6.14193, 18.7386, 7.57577, 0.59", "-6.59805, 19.3845, 7.45075, 0.59", "-7.03815, 19.9728, 7.33137, 0.66", "-7.65592, 20.7757, 7.10649, 0.59", "-8.27752, 21.556, 6.77679, 0.44", "-9.03183, 22.5411, 6.16481, 0.44", "-9.37589, 23.0309, 5.80465, 0.96", "-9.82777, 23.7253, 5.26741, 1.33", "-10.2091, 24.3714, 4.76939, 1.55", "-10.8235, 25.5296, 3.90278, 1.03", "-11.6072, 27.2354, 2.76684, 0.52", "-11.7774, 27.7066, 2.50498, 0.88", "-12.0434, 28.6766, 2.05509, 0.52", "-12.1941, 29.5251, 1.75139, 0.52", "-12.272, 30.2613, 1.55825, 0.52", "-12.3533, 31.5698, 1.28562, 0.88", "-12.4306, 32.9305, 1.01954, 0.74", "-12.5139, 33.7185, 0.845814, 0.59", "-12.8232, 35.3659, 0.424986, 0.59", "-13.1531, 36.3807, 0.137752, 1.25", "-13.6738, 37.4081, -0.193429, 1.4", "-14.2182, 38.1104, -0.440758, 1.18", "-14.9161, 38.7934, -0.672915, 0.88", "-15.8236, 39.5573, -0.925731, 0.66", "-16.5113, 40.0686, -1.07917, 0.66", "-17.0231, 40.4592, -1.17065, 0.66", "-17.7753, 41.1647, -1.25005, 0.59", "-18.2457, 41.8231, -1.26261, 0.59", "-18.5826, 42.6577, -1.21345, 0.74", "-18.6796, 43.0581, -1.16389, 0.88", "-18.7823, 43.6033, -1.06665, 0.88", "-18.9065, 44.2875, -0.913094, 1.03", "-19.0917, 45.0946, -0.704183, 0.66", "-19.454, 46.3211, -0.349364, 0.44", "-19.7702, 47.2762, -0.0521948, 0.44", "-20.0626, 48.1892, 0.156276, 0.59", "-20.2042, 48.6891, 0.215738, 0.96", "-20.437, 49.8381, 0.233491, 1.18", "-20.485, 50.4506, 0.181495, 1.18", "-20.436, 51.4491, 0.0096615, 0.74", "-20.1502, 53.4228, -0.37612, 0.37", "-19.9712, 54.4093, -0.573926, 0.29", "-19.7804, 55.4263, -0.763136, 0.29", "-19.5874, 56.4936, -0.947236, 0.37", "-19.4982, 57.2948, -1.05803, 0.37", "-19.5075, 58.4958, -1.13895, 0.29", "-19.6419, 59.3545, -1.09244, 0.37", "-19.8232, 60.0173, -1.02179, 0.74", "-19.9871, 60.469, -0.964443, 0.74", "-20.2294, 61.0722, -0.905676, 0.44", "-20.5613, 62.0455, -0.854976, 0.66", "-20.8186, 63.0005, -0.888681, 1.25", "-20.9523, 63.5834, -0.936692, 1.47", "-21.101, 64.2324, -1.01195, 1.47", "-21.3821, 65.3832, -1.17787, 1.11", "-21.7634, 66.8786, -1.4319, 0.29", "-22.0547, 67.9616, -1.63491, 0.66", "-22.229, 68.5667, -1.76272, 0.52", "-22.5405, 69.5322, -2.0076, 0.52", "-22.9723, 70.6876, -2.31394, 0.66", "-23.5242, 72.0119, -2.64441, 0.88", "-23.8267, 72.6497, -2.80141, 1.47", "-24.2084, 73.4568, -2.97322, 1.47", "-24.6456, 74.4063, -3.16085, 0.74", "-25.0853, 75.3007, -3.34715, 0.74", "-25.5174, 76.0634, -3.50048, 0.74", "-26.0433, 76.8645, -3.64598, 0.37", "-26.6888, 77.7865, -3.78255, 0.37", "-27.2138, 78.5218, -3.869, 0.29", "-27.6959, 79.2235, -3.94863, 0.29", "-28.2679, 80.1022, -4.08273, 0.29", "-28.5873, 80.6409, -4.18033, 0.29", "-28.9973, 81.5287, -4.41362, 0.88", "-29.197, 82.1315, -4.60759, 1.47", "-29.3168, 82.749, -4.82203, 1.47", "-29.3672, 83.2892, -4.99942, 1.47", "-29.3739, 84.0759, -5.25087, 1.18", "-29.3092, 85.5936, -5.69791, 0.37", "-29.2506, 86.4215, -5.89927, 0.37", "-29.2223, 87.2499, -6.03333, 0.37", "-29.2383, 87.8384, -6.08752, 0.96", "-29.3029, 88.5727, -6.10806, 1.03", "-29.3675, 88.9861, -6.082, 1.03", "-29.6013, 90.1032, -5.95191, 0.37", "-29.8632, 91.2007, -5.88209, 0.37", "-30.0164, 91.8267, -5.87522, 0.29", "-30.1807, 92.5352, -5.99154, 0.29", "-30.405, 93.5895, -6.28526, 0.29", "-30.5255, 94.3547, -6.57392, 0.29", "-30.6556, 95.4023, -7.04358, 1.18", "-30.6938, 95.9309, -7.29462, 1.47", "-30.7463, 98.2224, -8.47917, 0.22", "-30.7432, 98.4691, -8.61814, 0.44", "-30.6889, 99.4263, -9.183, 0.66", "-30.612, 100.278, -9.66125, 0.22", "-30.5196, 101.104, -10.0983, 0.22", "-30.3503, 102.568, -10.8446, 0.88", "-30.2575, 103.343, -11.2061, 0.88", "-30.1883, 104.082, -11.5708, 0.88", "-30.1151, 105.348, -12.2574, 0.37", "-30.1067, 106.239, -12.8031, 0.37", "-30.1418, 106.62, -13.0567, 0.88", "-30.2432, 107.139, -13.3975, 0.88", "-30.4616, 107.939, -13.9679, 0.52", "-30.701, 108.62, -14.4976, 0.29", "-30.9975, 109.368, -15.1139, 0.29", "-31.3459, 110.219, -15.7926, 1.11", "-31.534, 110.784, -16.2368, 1.33", "-31.7213, 111.453, -16.7689, 1.55", "-31.8813, 112.112, -17.2999, 1.55", "-32.0907, 113.076, -18.0898, 0.52", "-32.2891, 113.982, -18.8302, 0.44", "-32.6558, 115.454, -19.9988, 1.47", "-32.8443, 116.165, -20.5226, 1.47", "-33.2992, 117.812, -21.6069, 0.44", "-33.5507, 118.701, -22.1598, 0.44", "-33.8617, 119.828, -22.8323, 0.44", "-34.1548, 120.933, -23.4611, 0.37", "-34.4394, 121.982, -23.9928, 0.37", "-34.821, 123.702, -24.7134, 1.47", "-34.9173, 124.374, -24.9172, 1.77", "-35.0613, 126.105, -25.2928, 0.29", "-35.0899, 126.941, -25.4192, 1.03", "-35.0911, 127.43, -25.4568, 1.03", "-35.0826, 129.154, -25.4447, 0.66", "-35.0809, 131.255, -25.2306, 0.29", "-35.1013, 132.314, -25.0389, 1.03", "-35.1219, 132.753, -24.9238, 1.25", "-35.2192, 133.892, -24.6004, 0.22", "-35.2933, 134.435, -24.4529, 0.44", "-35.4948, 135.444, -24.2029, 0.22", "-35.6931, 136.23, -23.9797, 0.52", "-35.8479, 136.811, -23.81, 0.52", "-36.2054, 138.28, -23.3771, 0.22", "-36.3711, 139.076, -23.1433, 0.29", "-36.5154, 139.889, -22.9075, 0.29", "-36.7762, 141.524, -22.449, 1.11", "-36.848, 142.073, -22.3156, 1.33", "-36.9393, 143.093, -22.0874, 0.29", "-36.9806, 144.108, -21.8724, 0.29", "-36.98, 144.513, -21.7958, 0.44", "-36.9487, 145.64, -21.6247, 0.22", "-36.9095, 146.797, -21.4957, 0.66", "-36.91, 147.155, -21.4589, 1.18", "-36.9414, 147.667, -21.4136, 1.18", "-36.9696, 148.075, -21.3788, 0.74", "-37.0621, 149.596, -21.2517, 0.22", "-37.0909, 150.192, -21.207, 0.66", "-37.1862, 151.218, -21.1133, 0.22", "-37.2563, 151.721, -21.0631, 0.52" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-1.41052, 9.70471, 11.4844, 0.44", "-0.516006, 10.8748, 10.8241, 0.44", "-0.0530794, 11.5355, 10.4606, 0.44", "0.497356, 12.3403, 10.0351, 0.96", "0.87286, 12.8607, 9.76806, 0.96", "1.87527, 14.2982, 9.15953, 0.52", "2.21434, 14.834, 8.99364, 0.52", "2.49092, 15.3413, 8.85613, 0.66", "2.76178, 16.0689, 8.77851, 0.37", "2.90049, 16.6316, 8.87384, 0.37", "3.19268, 17.7594, 9.23919, 0.37", "3.50165, 18.7997, 9.65808, 0.59", "3.70395, 19.3932, 9.87939, 0.81", "3.9158, 19.9754, 10.083, 0.81", "4.4529, 21.5046, 10.6288, 0.29", "4.85842, 22.6389, 10.9727, 0.29", "5.21304, 23.5367, 11.2088, 0.29", "5.54678, 24.2646, 11.3806, 0.29", "5.87266, 24.9212, 11.5343, 0.88", "6.29347, 25.7613, 11.7084, 0.88", "6.5396, 26.4749, 11.834, 0.52", "6.64375, 27.2673, 12.0586, 0.37" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-5.54998, -31.3044, -1.39941, 1.77", "-5.20217, -32.952, -1.24214, 1.77", "-5.01431, -33.771, -1.10521, 1.77", "-4.68719, -34.675, -1.1439, 1.77", "-4.17164, -35.6603, -1.34948, 1.77", "-3.57659, -36.7975, -1.58676, 1.92", "-3.12103, -37.6681, -1.76842, 2.14", "-2.42009, -38.7729, -2.03996, 2.36", "-0.185841, -41.7815, -3.20009, 1.77", "0.723259, -42.7783, -3.82106, 1.55" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-5.54998, -31.3044, -1.39941, 0.81", "-5.00352, -32.137, -0.899303, 0.81", "-4.04601, -33.2822, -0.24059, 0.66", "-3.6227, -33.6739, -0.0145083, 0.88", "-2.90064, -34.2322, 0.290097, 0.59", "-2.14311, -34.7433, 0.519786, 0.88", "-1.29263, -35.2577, 0.685671, 1.18", "-0.56238, -35.6191, 0.676216, 0.81", "0.323793, -35.9621, 0.556847, 0.66", "0.9414, -36.1757, 0.448312, 0.59", "1.79885, -36.4561, 0.272868, 0.88", "2.56769, -36.7118, 0.0959431, 0.74", "3.37242, -37.0165, -0.107078, 0.59", "4.20388, -37.3689, -0.326974, 0.74", "4.93791, -37.7145, -0.512331, 0.74", "5.38059, -37.9434, -0.610918, 0.88", "5.86438, -38.2277, -0.699382, 0.88", "6.47627, -38.6406, -0.80113, 0.66", "7.07958, -39.1374, -0.917174, 0.66", "7.42649, -39.5198, -1.01154, 0.52", "7.7868, -40.0653, -1.13566, 0.52", "7.96765, -40.4812, -1.19741, 0.96", "8.06045, -40.7772, -1.21383, 1.18", "8.23665, -41.4336, -1.20571, 1.03", "8.33836, -41.7851, -1.15538, 1.18", "8.51998, -42.2571, -1.02016, 1.03", "8.89505, -42.9701, -0.703374, 0.37", "9.27943, -43.5421, -0.356088, 0.74", "9.51366, -43.8511, -0.116292, 0.88", "10.0467, -44.5195, 0.487722, 0.59", "10.3204, -44.8709, 0.818417, 0.59", "10.6342, -45.3039, 1.21946, 0.88", "10.9996, -45.8729, 1.7091, 0.74", "11.3028, -46.4299, 2.14104, 1.25", "11.4956, -46.802, 2.38878, 1.25", "11.7334, -47.255, 2.62745, 0.81", "11.9751, -47.7264, 2.83529, 0.59", "12.2661, -48.2803, 3.03553, 0.59", "12.5337, -48.7399, 3.15188, 0.59", "13.0218, -49.4523, 3.2934, 0.44", "13.3659, -49.8735, 3.38399, 0.52", "13.7396, -50.2604, 3.47493, 0.44", "14.1998, -50.6882, 3.58067, 0.44", "14.569, -51.0265, 3.66543, 0.52", "15.0223, -51.4729, 3.78338, 0.66", "15.4281, -51.9065, 3.88357, 0.66", "15.9409, -52.524, 4.02149, 0.52", "16.17, -52.8245, 4.10922, 0.81", "16.4275, -53.221, 4.24733, 0.81", "16.6907, -53.6972, 4.42706, 0.66", "17.0631, -54.4785, 4.71582, 0.52", "17.3829, -55.2414, 4.99676, 0.52", "17.6533, -55.9511, 5.2724, 1.18", "17.7889, -56.3056, 5.4186, 1.4", "18.0234, -56.875, 5.67319, 1.25", "18.3081, -57.526, 6.01098, 1.03", "18.4087, -57.7407, 6.14699, 1.03" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-6.82539, 40.8328, -9.73947, 1.33", "-7.75966, 42.3796, -9.92988, 1.33", "-8.69481, 44.1037, -10.0806, 1.33", "-9.56701, 45.8333, -10.1123, 1.33", "-10.497, 47.8435, -10.016, 1.33", "-11.4442, 50.1035, -9.80482, 1.47", "-12.0617, 51.7687, -9.59065, 1.69", "-12.4512, 53.1802, -9.32735, 1.77", "-12.7903, 54.8023, -8.9359, 1.99", "-13.0535, 56.4333, -8.51445, 2.14", "-13.326, 58.3967, -8.00128, 1.84", "-13.6669, 60.7093, -7.43691, 1.84", "-14.0292, 62.7182, -7.03545, 1.84", "-14.3262, 64.084, -6.85669, 1.92", "-14.7572, 65.788, -6.74537, 1.92", "-15.2129, 67.4245, -6.68887, 1.92", "-15.7337, 69.0856, -6.67376, 1.62", "-16.4631, 71.1, -6.72845, 1.62", "-17.2218, 72.9721, -6.83817, 1.77", "-17.9184, 74.6033, -6.98068, 2.14" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-6.82539, 40.8328, -9.73947, 0.66", "-5.91965, 42.5407, -9.85876, 0.66", "-5.34969, 43.4572, -9.8398, 0.66", "-5.12163, 43.7884, -9.8, 0.96", "-4.6781, 44.4093, -9.66349, 0.96", "-4.34703, 44.9094, -9.47186, 0.74", "-4.11175, 45.3092, -9.29482, 0.66", "-3.736, 45.9395, -8.91118, 0.66", "-3.41216, 46.4698, -8.58829, 0.66", "-3.08878, 46.9714, -8.30686, 0.66", "-2.17679, 48.2284, -7.7239, 0.88", "-1.51277, 49.0304, -7.44433, 0.29", "-0.929859, 49.622, -7.34003, 0.29", "-0.0675878, 50.2411, -7.45824, 1.18", "0.358844, 50.4657, -7.60891, 1.62", "1.44751, 50.9272, -8.11676, 0.81", "2.10193, 51.1591, -8.47057, 0.81", "2.7401, 51.3425, -8.8368, 1.03", "3.71795, 51.6052, -9.43994, 0.44", "4.54796, 51.8317, -9.98308, 0.44", "5.07768, 52.0024, -10.3222, 1.18", "5.48883, 52.1763, -10.5533, 1.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-1.50121, -40.8873, 0.0443568, 0.15", "-2.07943, -55.8762, 0.0443568, 0.15", "-2.65765, -70.865, 0.0443568, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "0.723259, -42.7783, -3.82106, 1.03", "0.698942, -44.6775, -6.72985, 1.03", "0.282915, -46.1282, -8.85928, 0.81", "-0.0286457, -46.76, -9.78794, 0.81", "-0.476524, -47.3899, -10.7953, 0.81", "-0.896908, -47.8535, -11.6258, 1.11", "-1.4016, -48.2699, -12.4822, 1.11", "-2.25409, -48.5707, -13.3665, 1.4", "-2.87665, -48.6723, -13.9125, 1.4", "-3.90463, -48.6941, -14.9197, 1.11", "-4.41922, -48.5758, -15.5084, 1.33", "-5.28912, -48.0922, -16.6713, 1.03", "-5.69121, -47.66, -17.6071, 0.81", "-5.89593, -47.3679, -18.2783, 0.81", "-6.30995, -46.7908, -19.929, 0.81", "-6.69278, -46.3452, -21.7288, 1.03", "-6.97586, -46.1441, -23.1365, 1.33", "-7.87937, -46.1011, -27.8142, 1.03", "-8.22777, -46.326, -29.3328, 1.03", "-8.7754, -46.8983, -31.0821, 1.33", "-9.30437, -47.5452, -32.2869, 1.33", "-9.81384, -48.2045, -33.162, 1.47", "-10.7922, -49.3501, -34.3168, 1.11", "-11.7183, -50.2405, -35.006, 0.88", "-12.4219, -50.7847, -35.4807, 1.55", "-13.1885, -51.2111, -35.9837, 1.84", "-14.0171, -51.4868, -36.5435, 1.99", "-15.4567, -51.6062, -37.5202, 1.18", "-16.4243, -51.4269, -38.1654, 0.88", "-17.4002, -50.993, -38.8309, 1.25", "-18.1382, -50.4233, -39.3616, 1.47", "-18.9261, -49.5295, -40.1104, 1.18", "-19.5345, -48.6392, -41.3643, 0.96", "-19.621, -48.4531, -41.9888, 1.18", "-19.6599, -48.3676, -42.649, 1.18", "-19.7591, -48.2955, -44.0459, 0.74", "-20.0323, -48.3231, -46.7711, 0.74", "-20.4612, -48.5908, -51.7597, 1.47", "-20.6916, -48.8532, -54.7501, 1.99", "-20.893, -49.1663, -57.3792, 1.47", "-21.013, -49.402, -58.9057, 1.62", "-21.1923, -49.8371, -61.1072, 1.33" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "0.723259, -42.7783, -3.82106, 0.88", "1.88865, -43.4878, -3.84579, 0.88", "2.79812, -44.1334, -3.97317, 1.03", "3.65438, -44.9007, -4.1983, 1.03", "4.3671, -45.7507, -4.51755, 0.88", "5.02369, -46.767, -4.93827, 0.81", "5.6711, -48.01, -5.53757, 1.03", "5.86363, -48.7128, -5.97541, 1.33", "5.95984, -49.7277, -6.84115, 0.88", "5.90536, -50.7685, -7.96016, 0.66", "5.87011, -51.2917, -8.65575, 0.96", "5.94642, -51.8775, -9.61514, 0.66", "6.17988, -52.339, -10.4897, 0.74", "7.14359, -53.2228, -12.3275, 0.88", "7.6618, -53.5081, -12.9157, 1.11", "9.32553, -54.2677, -14.3328, 0.88", "11.2079, -55.1435, -15.8262, 0.74", "12.5809, -55.8609, -16.8389, 0.74", "13.6391, -56.4859, -17.6042, 0.74", "14.571, -57.1228, -18.2754, 0.66", "16.2048, -58.4225, -19.5017, 0.96", "17.2883, -59.4782, -20.3324, 1.25", "18.2642, -60.5799, -21.0854, 0.81", "19.3793, -61.9145, -21.9393, 0.74", "20.0853, -62.7351, -22.3994, 0.88", "21.0557, -63.7738, -22.7653, 0.59", "22.1445, -64.7615, -22.773, 0.59", "23.1235, -65.5307, -22.5566, 1.18", "23.5727, -65.8517, -22.3381, 1.62", "24.0205, -66.1545, -22.0158, 1.84", "25.1893, -66.8791, -21.023, 1.18", "26.1181, -67.3766, -20.2963, 0.81", "26.5299, -67.5728, -20.0315, 0.96", "27.7243, -68.1003, -19.5452, 0.59", "28.1821, -68.3034, -19.4504, 0.66", "29.0816, -68.7264, -19.3963, 0.52", "31.0533, -69.769, -19.634, 1.18", "31.831, -70.2538, -19.817, 1.25", "33.3334, -71.2165, -20.4296, 0.88", "33.9961, -71.6351, -20.756, 0.88", "34.9025, -72.1893, -21.2123, 0.66", "36.6336, -73.1198, -22.094, 1.47", "37.4329, -73.4814, -22.4933, 1.69", "41.2013, -74.9006, -24.337, 0.81", "42.0262, -75.1653, -24.7166, 0.81", "43.0426, -75.4491, -25.1419, 0.66", "45.3744, -75.9979, -25.962, 1.03", "46.1327, -76.1468, -26.1422, 1.03", "47.0957, -76.363, -26.2436, 1.33", "48.5113, -76.8428, -26.0354, 0.88", "49.5022, -77.3265, -25.7732, 0.88", "50.2183, -77.8239, -25.4515, 0.74", "50.4805, -78.0548, -25.2787, 0.88", "51.2353, -78.7729, -24.707, 0.44", "51.8569, -79.3694, -24.183, 1.77", "52.1848, -79.7003, -23.8742, 2.06", "52.5398, -80.161, -23.4829, 2.06" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-17.9184, 74.6033, -6.98068, 1.25", "-17.3401, 75.9294, -8.06194, 1.25", "-17.084, 76.4887, -8.43528, 1.4", "-16.6806, 77.4988, -8.98209, 1.11", "-16.2356, 78.8167, -9.57447, 1.33", "-15.9727, 79.7523, -9.93556, 1.25", "-15.6543, 81.0501, -10.3901, 1.25", "-15.3146, 82.5178, -10.8066, 1.47", "-15.0014, 83.9251, -11.1494, 1.69", "-14.7635, 85.1739, -11.364, 1.84", "-14.6216, 86.2581, -11.4762, 2.14", "-14.5769, 87.328, -11.5629, 2.14" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-17.9184, 74.6033, -6.98068, 0.96", "-18.6387, 75.5603, -6.7591, 0.96", "-19.134, 76.1955, -6.71535, 0.81", "-20.0667, 77.3023, -6.80903, 0.66", "-20.5861, 77.8534, -6.9525, 0.59", "-21.2197, 78.4571, -7.20061, 0.59", "-22.0265, 79.1495, -7.60137, 0.74", "-22.6846, 79.6033, -8.06674, 0.74", "-23.2128, 79.9147, -8.52754, 1.11", "-23.8433, 80.2453, -9.14556, 0.74", "-24.2868, 80.4789, -9.58754, 1.25", "-24.9451, 80.875, -10.2397, 0.96", "-25.6712, 81.4217, -10.8778, 0.44", "-25.9314, 81.7006, -11.0962, 0.44", "-26.1773, 82.0986, -11.2979, 0.74", "-26.4246, 82.7007, -11.4795, 0.74", "-26.6709, 83.3985, -11.543, 0.74", "-26.9706, 84.2255, -11.4099, 0.59", "-27.2114, 84.8268, -11.1717, 0.59", "-27.4732, 85.4237, -10.8043, 0.88", "-27.7045, 85.9611, -10.4136, 0.66", "-28.3244, 87.2079, -9.28665, 0.66", "-28.8189, 88.0833, -8.398, 0.96", "-29.0982, 88.5337, -7.91764, 0.66", "-29.4844, 89.093, -7.30458, 0.52", "-29.9774, 89.7466, -6.60586, 0.88", "-30.6886, 90.6788, -5.74688, 0.59", "-31.0484, 91.172, -5.42039, 0.59", "-31.3909, 91.6189, -5.19538, 0.59", "-32.0304, 92.3703, -4.87957, 0.59", "-32.6384, 93.0191, -4.6412, 1.11", "-33.451, 93.8372, -4.3695, 0.59", "-33.9489, 94.3473, -4.25503, 0.59", "-34.5467, 94.9339, -4.1321, 0.81", "-35.1415, 95.5162, -4.02974, 0.81", "-35.7543, 96.1272, -3.97123, 0.96", "-36.2996, 96.6568, -3.94488, 1.03", "-36.8376, 97.1295, -3.9415, 1.33", "-37.4069, 97.5859, -3.92778, 1.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "5.48883, 52.1763, -10.5533, 0.88", "6.25131, 52.4074, -10.6222, 0.88", "6.87064, 52.5388, -10.6802, 0.66", "7.33568, 52.6088, -10.7253, 1.03", "7.86973, 52.6887, -10.7951, 1.18", "8.33461, 52.7786, -10.8804, 1.18", "8.69081, 52.868, -10.9652, 0.81", "9.13744, 53.0043, -11.113, 0.44", "9.63238, 53.2172, -11.3249, 0.44", "10.1753, 53.5751, -11.6116, 0.44", "10.6667, 54.0224, -11.9023, 0.59", "10.998, 54.3769, -12.1003, 0.81", "11.2557, 54.6602, -12.2446, 0.81", "11.5768, 55.0099, -12.4053, 0.66", "11.982, 55.4008, -12.5686, 0.66", "12.4903, 55.7827, -12.7075, 0.66", "12.9481, 56.0225, -12.7894, 0.88", "13.4501, 56.2026, -12.857, 0.52", "13.8211, 56.2849, -12.9008, 0.96", "14.2873, 56.3166, -12.9549, 0.96", "14.6534, 56.2811, -12.9966, 1.11", "15.1261, 56.1453, -13.0633, 1.18", "15.4705, 55.9848, -13.1195, 1.18", "15.8795, 55.7145, -13.2117, 0.66", "16.4391, 55.2322, -13.3876, 0.96", "16.9655, 54.6498, -13.6107, 0.44", "17.5463, 53.8866, -13.9501, 0.37", "17.8532, 53.4515, -14.1731, 1.18", "18.1873, 52.9722, -14.4531, 1.33", "18.441, 52.609, -14.6947, 1.33", "18.8619, 51.9931, -15.1885, 0.59", "19.24, 51.4089, -15.7428, 0.37", "19.4781, 51.0071, -16.166, 0.37", "19.6389, 50.6905, -16.539, 0.37", "19.787, 50.3568, -16.9533, 0.37", "19.9818, 49.815, -17.6592, 0.52", "20.1114, 49.3665, -18.2611, 0.52", "20.2085, 48.9423, -18.7962, 0.52", "20.3987, 48.0355, -19.7864, 0.96", "20.5437, 47.4372, -20.3547, 1.47", "20.7076, 46.9403, -20.7737, 1.69", "20.8608, 46.601, -21.0254, 1.92", "21.1004, 46.1822, -21.3077, 1.92", "21.7429, 45.2477, -21.8649, 0.74", "22.2883, 44.5561, -22.1968, 0.37", "22.6757, 44.1294, -22.384, 0.88", "22.9536, 43.8772, -22.491, 1.11", "23.2092, 43.6793, -22.581, 1.11", "23.5634, 43.436, -22.698, 1.33", "23.7785, 43.2963, -22.7648, 1.33", "24.1441, 42.9978, -22.8595, 0.81", "24.4366, 42.6002, -22.9527, 0.44", "24.6837, 42.1129, -23.0824, 0.37", "24.9438, 41.5047, -23.2803, 0.37", "25.0957, 41.1273, -23.4264, 1.18", "25.2644, 40.7057, -23.6131, 1.4", "25.6313, 39.8268, -24.0826, 0.29", "26.0281, 39.0527, -24.6167, 0.66", "26.4051, 38.4875, -25.1167, 1.11", "26.6825, 38.1289, -25.4903, 1.62", "26.8104, 37.9651, -25.6699, 1.84", "27.1393, 37.5483, -26.1322, 1.84", "27.5891, 36.9379, -26.8109, 0.81", "27.9375, 36.4146, -27.351, 0.44", "28.1702, 36.0347, -27.7066, 0.44", "28.5355, 35.4451, -28.2022, 0.44", "28.7894, 35.0516, -28.497, 0.59", "29.3996, 34.1942, -29.0479, 0.52", "29.7445, 33.7764, -29.2829, 0.37", "30.0747, 33.466, -29.4849, 0.96", "30.5575, 33.0857, -29.7811, 1.62", "30.7825, 32.9215, -29.9165, 1.99", "31.2154, 32.5888, -30.1818, 1.99", "31.4877, 32.3679, -30.338, 1.47", "32.4714, 31.4765, -30.9296, 0.52", "33.0661, 30.9301, -31.2862, 0.52", "33.5271, 30.511, -31.5549, 0.88", "34.0024, 30.1008, -31.8136, 0.59", "34.4133, 29.7616, -32.0136, 0.37", "34.7543, 29.4958, -32.1368, 0.37", "35.2351, 29.1566, -32.21, 0.74", "35.5348, 28.9526, -32.2564, 0.74", "35.7968, 28.7579, -32.3254, 0.37", "35.9699, 28.6013, -32.398, 0.37", "36.3452, 28.1867, -32.6223, 0.81", "36.487, 27.9845, -32.7398, 1.03", "36.9875, 27.1252, -33.2338, 0.37", "37.3091, 26.5183, -33.5854, 1.18", "37.5471, 26.0384, -33.8643, 1.47", "37.8429, 25.4631, -34.2035, 0.66", "38.2419, 24.784, -34.6391, 0.29", "38.4322, 24.5097, -34.8163, 1.25", "38.6564, 24.2362, -35.0038, 1.55", "38.902, 23.9874, -35.1959, 1.55", "39.5976, 23.4174, -35.6923, 0.44", "40.4267, 22.8819, -36.2437, 1.18", "41.0728, 22.5352, -36.6461, 1.84", "41.8449, 22.1631, -37.1152, 2.06", "42.7629, 21.7683, -37.6787, 0.29", "43.3181, 21.554, -38.0272, 0.29", "43.936, 21.3136, -38.4182, 1.18", "44.4431, 21.0831, -38.7295, 0.88", "44.772, 20.9234, -38.9238, 0.52", "45.471, 20.5659, -39.2943, 0.52", "45.8855, 20.3317, -39.5155, 0.52", "46.493, 19.9536, -39.8306, 0.29", "46.9868, 19.6276, -40.0589, 0.29", "47.4569, 19.3211, -40.2628, 0.66", "47.885, 19.0279, -40.4321, 0.81", "48.0564, 18.9028, -40.489, 0.81", "48.7175, 18.4151, -40.7175, 0.29", "49.2135, 18.0652, -40.8997, 0.96", "49.6666, 17.756, -41.0875, 1.03", "50.1877, 17.3892, -41.3151, 0.29", "50.4989, 17.1732, -41.4506, 0.29", "50.9914, 16.8539, -41.6564, 0.96", "51.4932, 16.5584, -41.8453, 0.96", "52.1727, 16.2065, -42.0786, 0.37", "52.8543, 15.8988, -42.2736, 0.66", "53.1475, 15.7693, -42.3507, 0.96", "53.8583, 15.4371, -42.5192, 0.29", "54.593, 15.0774, -42.6671, 1.03", "54.8565, 14.9503, -42.7183, 1.33", "55.5415, 14.6459, -42.8366, 0.37", "56.196, 14.4153, -42.9599, 0.37", "56.7631, 14.2546, -43.0918, 0.37", "57.1182, 14.1782, -43.1883, 0.74", "57.6889, 14.071, -43.3585, 0.74", "58.1093, 13.9901, -43.491, 0.37", "58.651, 13.8999, -43.6682, 0.29", "59.2142, 13.8399, -43.8478, 0.29", "59.6688, 13.8096, -43.9884, 0.88", "60.1564, 13.7847, -44.1314, 1.25", "60.7287, 13.7601, -44.2956, 1.18", "61.4858, 13.7379, -44.5124, 0.29", "62.0328, 13.7438, -44.6715, 0.74", "62.4923, 13.7619, -44.8033, 0.74", "63.0278, 13.7909, -44.9807, 0.37", "63.6868, 13.8263, -45.2336, 0.96", "64.0713, 13.8363, -45.3915, 1.33", "64.4555, 13.8143, -45.5641, 1.33", "65.0774, 13.7139, -45.8482, 0.37", "65.7363, 13.5473, -46.1496, 0.44", "66.1913, 13.4046, -46.3531, 0.44", "66.6974, 13.2356, -46.5602, 0.44", "67.427, 12.9889, -46.8346, 0.96", "67.8966, 12.8179, -46.9913, 1.03", "68.2285, 12.6876, -47.0856, 0.81", "68.668, 12.4958, -47.1893, 0.52", "69.1887, 12.2487, -47.299, 0.29", "69.4668, 12.1159, -47.3625, 0.29", "69.96, 11.8966, -47.4346, 0.88", "70.4273, 11.694, -47.4759, 1.25", "70.6173, 11.6037, -47.484, 1.25", "71.2622, 11.238, -47.4952, 0.29", "71.7177, 10.9243, -47.5004, 0.29", "72.4867, 10.3409, -47.5078, 0.29", "72.7546, 10.1348, -47.5149, 0.29", "73.3209, 9.71024, -47.551, 0.96", "73.758, 9.41426, -47.5994, 0.96", "74.2478, 9.12044, -47.6867, 0.44", "74.5748, 8.95016, -47.767, 0.37", "74.9643, 8.78651, -47.9085, 0.81", "75.5468, 8.61479, -48.1581, 0.29", "76.0164, 8.49744, -48.3878, 0.29", "76.4379, 8.38317, -48.6069, 0.74", "76.9284, 8.21918, -48.883, 0.96", "77.4355, 8.00314, -49.1863, 0.96", "78.1159, 7.655, -49.5961, 0.44", "78.6664, 7.32201, -49.9503, 0.29", "79.1186, 7.00072, -50.2547, 0.29", "79.5357, 6.6687, -50.5291, 0.96", "79.7631, 6.47739, -50.6714, 1.11", "80.1585, 6.15455, -50.8897, 1.18", "80.821, 5.63415, -51.2578, 0.37", "81.1968, 5.3758, -51.4766, 0.37", "81.7513, 5.02751, -51.8225, 0.29", "82.2853, 4.72205, -52.1667, 0.29", "82.7997, 4.45129, -52.5065, 0.96", "83.6014, 4.07489, -53.0308, 0.44", "83.9855, 3.92157, -53.2626, 1.03", "84.2912, 3.81483, -53.4351, 1.03", "84.9601, 3.62292, -53.7981, 0.29", "85.304, 3.54848, -53.9627, 0.29", "85.7141, 3.49255, -54.1427, 0.96", "86.2379, 3.45037, -54.3505, 0.96", "86.5621, 3.42491, -54.4811, 0.37", "87.1015, 3.37466, -54.7069, 0.22", "87.7013, 3.29599, -54.9748, 1.11", "88.3621, 3.21557, -55.2833, 1.11", "89.2616, 3.11517, -55.7297, 0.44", "89.6854, 3.06976, -55.9544, 1.03", "89.9725, 3.02841, -56.1136, 1.03", "90.5694, 2.87575, -56.4546, 0.74" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "5.48883, 52.1763, -10.5533, 0.29", "5.79659, 53.3457, -10.7627, 0.29", "5.95493, 53.8953, -10.8763, 0.29", "6.25254, 54.9498, -11.094, 0.29", "6.45924, 55.6783, -11.2473, 0.81", "6.584, 56.1058, -11.343, 0.81", "6.83335, 56.9903, -11.5461, 0.29", "7.08731, 57.8124, -11.7476, 0.29", "7.32607, 58.5943, -11.9497, 0.88", "7.39385, 58.8345, -12.0136, 0.88", "7.58418, 59.5186, -12.2103, 0.22", "7.81913, 60.3622, -12.4521, 0.74" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-21.1923, -49.8371, -61.1072, 0.88", "-21.4381, -49.0453, -71.2508, 0.88", "-21.5366, -48.9775, -72.5838, 0.52", "-21.6055, -48.9591, -73.1754, 0.52", "-21.8334, -48.9414, -74.563, 0.52", "-22.1454, -48.965, -75.9313, 0.52", "-22.4718, -49.0232, -76.9815, 1.03", "-22.9019, -49.2032, -77.2227, 1.62", "-23.123, -49.3018, -77.3301, 1.99", "-23.6767, -49.5152, -77.5707, 2.14", "-24.6302, -49.7356, -77.9974, 1.55", "-25.4627, -49.7967, -78.5333, 0.74", "-26.1838, -49.7636, -79.2298, 0.37", "-26.8113, -49.7063, -79.9905, 0.37", "-27.2003, -49.7094, -80.6199, 0.37", "-28.0153, -49.7984, -82.2503, 0.74", "-28.7877, -49.9514, -83.9679, 1.4", "-29.1919, -50.0659, -84.8792, 1.92", "-29.392, -50.1388, -85.3224, 2.21", "-30.4946, -50.5851, -87.8826, 0.52", "-30.8246, -50.7279, -88.6934, 0.52", "-31.229, -50.9108, -89.7287, 0.52", "-31.5186, -50.9948, -90.5217, 0.59", "-31.7179, -51.0022, -91.1453, 0.59", "-32.3682, -50.7938, -93.3194, 1.69", "-32.9434, -50.3384, -95.2785, 2.06", "-33.4379, -49.8382, -96.9251, 1.03", "-33.6727, -49.5553, -97.7229, 0.29", "-33.937, -49.2619, -98.5399, 0.29", "-34.3311, -48.9294, -99.4861, 1.25", "-34.6214, -48.7804, -99.9965, 1.62", "-35.0557, -48.6326, -100.661, 1.92", "-36.3455, -48.4353, -102.597, 0.81", "-36.9899, -48.4983, -103.546, 1.11", "-37.2969, -48.5774, -104.047, 1.11", "-37.9461, -48.7996, -105.276, 0.37", "-38.3339, -48.9396, -106.096, 0.29", "-38.7607, -49.116, -107.022, 0.29", "-39.237, -49.3099, -107.961, 0.29", "-40.1418, -49.6082, -109.85, 1.33", "-40.476, -49.6855, -110.624, 1.55", "-40.7687, -49.7122, -111.398, 1.77" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-21.1923, -49.8371, -61.1072, 1.18", "-22.427, -50.5156, -62.3006, 1.18", "-23.9507, -51.396, -63.6195, 0.52", "-24.8496, -51.8993, -64.3585, 0.52", "-27.0282, -53.0338, -65.8427, 0.88", "-28.435, -53.7307, -66.6522, 1.18", "-29.4932, -54.2711, -67.1947, 1.18", "-30.8104, -55.0038, -67.74, 1.25", "-32.0086, -55.7262, -68.1578, 1.11", "-34.0856, -57.0187, -68.6163, 0.88", "-35.4095, -57.8347, -68.7544, 0.59", "-36.5191, -58.5094, -68.8387, 0.44", "-37.3406, -58.9892, -68.8868, 0.29", "-38.2532, -59.4909, -68.9288, 0.29", "-39.2991, -60.037, -69.0099, 0.88", "-40.2284, -60.4531, -69.1975, 1.25", "-40.7702, -60.6591, -69.3481, 1.47", "-41.6282, -60.9475, -69.6243, 1.47", "-42.3372, -61.2002, -69.8851, 1.33", "-43.3899, -61.632, -70.3144, 0.59", "-44.4483, -62.1409, -70.7979, 0.44", "-45.7629, -62.8354, -71.4346, 0.37", "-46.5614, -63.2668, -71.8314, 0.96", "-47.5823, -63.8126, -72.3456, 0.59", "-48.9926, -64.5341, -73.0556, 0.52", "-49.7975, -64.902, -73.4609, 0.52", "-50.6422, -65.2146, -73.892, 1.11", "-51.3987, -65.4103, -74.2776, 1.99", "-52.2187, -65.5371, -74.6956, 2.28", "-53.083, -65.5805, -75.1459, 1.99", "-54.1342, -65.5399, -75.7085, 1.69", "-55.1044, -65.4561, -76.2615, 1.4", "-55.869, -65.3952, -76.7282, 0.66", "-56.7673, -65.3686, -77.306, 0.52", "-57.6547, -65.4254, -77.9004, 0.52", "-58.3345, -65.5972, -78.3665, 0.29", "-59.0001, -66.0346, -78.8125, 0.29", "-59.7858, -66.8775, -79.259, 0.81", "-60.2296, -67.4345, -79.4417, 1.11", "-60.8762, -68.272, -79.5898, 0.96", "-61.7352, -69.2572, -79.5953, 0.74", "-62.5699, -69.9947, -79.5261, 0.37", "-63.7981, -70.6826, -79.3194, 1.11", "-64.6173, -71.0217, -79.1609, 1.84", "-65.5404, -71.281, -78.9675, 2.36", "-67.1104, -71.4992, -78.6133, 2.58", "-68.7474, -71.5094, -78.2244, 0.59", "-70.1471, -71.3636, -77.865, 0.81" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "52.5398, -80.161, -23.4829, 0.74", "53.5531, -81.3051, -23.0676, 0.74", "54.3868, -82.1147, -22.8384, 0.66", "54.9319, -82.5979, -22.7278, 1.11", "55.4078, -82.9789, -22.6571, 1.11", "56.4403, -83.7142, -22.5322, 0.88", "57.2208, -84.2172, -22.4549, 0.59", "58.0707, -84.6996, -22.4392, 1.11", "58.3537, -84.8395, -22.4506, 1.47", "58.9452, -85.0906, -22.4775, 1.69", "59.7505, -85.3873, -22.4974, 1.69", "60.7314, -85.6758, -22.4557, 1.77", "61.2991, -85.8271, -22.4241, 1.77" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "52.5398, -80.161, -23.4829, 0.37", "53.1904, -80.8491, -24.4304, 0.37", "53.7549, -81.4865, -25.4054, 1.03", "54.3941, -82.2834, -26.6706, 1.25", "55.1134, -83.1963, -28.3947, 0.66", "55.3308, -83.4668, -28.9924, 0.81", "56.0717, -84.2948, -31.1375, 1.11", "56.3235, -84.5456, -32.0133, 1.4", "56.5367, -84.7622, -32.9805, 0.88", "56.8943, -85.1018, -35.1969, 0.22", "57.1581, -85.3318, -37.2676, 0.37", "57.4413, -85.5597, -39.5769, 1.03", "57.599, -85.6743, -40.7859, 1.69", "57.7888, -85.7944, -41.62, 1.69", "58.7847, -86.5362, -45.4657, 0.15", "59.0401, -86.7326, -46.162, 0.15", "59.3115, -86.9389, -46.748, 1.18", "59.7779, -87.3022, -47.6024, 1.47", "61.5832, -88.75, -50.5399, 0.88", "62.5318, -89.5393, -51.94, 1.55", "64.4863, -91.2166, -54.5192, 0.81", "65.2099, -91.8439, -55.4902, 0.37", "65.5739, -92.1837, -56.0151, 0.52", "65.9539, -92.6175, -56.6387, 0.52", "66.1562, -93.0191, -57.062, 0.37", "66.3173, -93.6803, -57.5823, 0.37", "66.1844, -94.3229, -57.9722, 0.81", "66.0222, -94.8909, -58.2891, 1.11", "65.7929, -95.793, -58.6927, 1.25", "65.5466, -97.0341, -59.184, 0.29", "65.4167, -97.7412, -59.4428, 0.29", "65.1494, -98.982, -59.8919, 1.55", "64.9772, -99.6483, -60.1486, 1.77", "64.5069, -101.195, -60.8088, 0.29", "64.0453, -102.378, -61.4028, 0.22", "63.3678, -103.623, -62.202, 0.22", "62.703, -104.557, -62.9218, 0.66", "62.2154, -105.075, -63.4262, 1.4", "62.1105, -105.162, -63.5293, 1.92", "61.5063, -105.562, -64.0866, 1.62", "60.7931, -105.998, -64.6964, 0.52", "60.1558, -106.395, -65.2519, 0.29", "59.4468, -106.882, -65.8901, 0.52", "59.1381, -107.101, -66.1693, 0.52", "58.4906, -107.582, -66.757, 0.37", "58.2106, -107.79, -67.0082, 0.88", "57.7929, -108.095, -67.4023, 0.88", "57.3234, -108.429, -67.8668, 0.44", "56.8279, -108.806, -68.3774, 0.22", "56.4576, -109.126, -68.7845, 0.96", "56.0051, -109.592, -69.3547, 0.96", "55.2781, -110.512, -70.3778, 0.29", "54.9863, -110.968, -70.8454, 1.25", "54.7283, -111.397, -71.2839, 1.25", "54.4302, -111.939, -71.8352, 0.96", "54.1025, -112.647, -72.5413, 0.96", "53.7317, -113.779, -73.6023, 0.29", "53.5375, -114.635, -74.3513, 0.29", "53.4265, -115.369, -74.9685, 0.66", "53.3751, -116.023, -75.5161, 0.37", "53.3753, -116.889, -76.3185, 0.96", "53.4714, -117.604, -77.061, 1.18", "53.5702, -117.957, -77.4716, 0.81", "53.8583, -118.767, -78.4854, 0.52", "54.1256, -119.583, -79.5025, 0.44", "54.4668, -120.746, -81.0103, 0.96", "54.8657, -122.224, -83.0743, 0.37", "55.0535, -122.978, -84.1617, 0.37", "55.3327, -124.011, -85.6465, 0.37", "55.5862, -124.988, -86.962, 1.18", "55.7328, -125.584, -87.6763, 1.47", "55.8635, -126.131, -88.2546, 1.47", "56.2979, -127.864, -89.8789, 0.74", "56.612, -128.96, -90.7832, 0.29", "56.9239, -129.935, -91.4853, 0.29", "57.4316, -131.425, -92.4418, 0.96", "57.608, -131.99, -92.7463, 1.11", "57.9175, -133.032, -93.1949, 0.29", "58.2099, -133.972, -93.4863, 0.29", "58.5112, -134.862, -93.6743, 0.44", "58.7628, -135.503, -93.7558, 0.29", "58.9953, -136.171, -93.7857, 1.03", "59.1913, -136.816, -93.8075, 1.03", "59.5686, -138.14, -93.8574, 0.29", "59.8848, -139.168, -93.8473, 1.11", "60.0279, -139.621, -93.8297, 1.25", "60.3979, -140.91, -93.7566, 0.22", "60.4744, -141.269, -93.7347, 0.74", "60.5279, -141.617, -93.7181, 0.74", "60.6134, -142.553, -93.6736, 0.22", "60.6569, -143.192, -93.6519, 0.66", "60.7033, -143.754, -93.6285, 0.66", "60.7784, -144.528, -93.5884, 0.22", "60.8195, -145.074, -93.5715, 0.81", "60.8582, -145.936, -93.564, 0.22", "60.8692, -147.053, -93.581, 0.52", "60.86, -147.756, -93.6016, 0.66", "60.8491, -148.156, -93.6152, 0.66", "60.8209, -149.122, -93.642, 0.29", "60.7619, -150.535, -93.6835, 0.29", "60.7308, -151.277, -93.7044, 0.81", "60.7179, -151.557, -93.7118, 0.81", "60.6674, -152.673, -93.7397, 0.29", "60.6286, -153.64, -93.7568, 0.66" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-14.5769, 87.328, -11.5629, 1.25", "-13.9959, 89.6009, -10.2359, 1.25", "-13.8285, 90.3456, -10.1021, 1.25", "-13.6681, 91.4454, -10.2113, 1.03", "-13.6089, 92.0149, -10.3412, 1.11", "-13.5223, 93.034, -10.6324, 1.11", "-13.4497, 94.1006, -10.9574, 1.03", "-13.3843, 95.5694, -11.5839, 0.96", "-13.3731, 96.8581, -12.1764, 1.18", "-13.4073, 97.951, -12.6983, 1.18", "-13.4704, 98.9765, -13.1803, 1.4", "-13.5752, 100.145, -13.6835, 1.55", "-13.7268, 101.537, -14.2233, 1.18", "-13.8433, 102.573, -14.5806, 0.96", "-13.9792, 103.853, -15.0002, 1.25", "-14.0996, 104.84, -15.3053, 1.25", "-14.2161, 105.732, -15.5613, 1.03", "-14.3928, 107.019, -15.8812, 1.03", "-14.5288, 107.885, -16.0507, 1.03", "-14.7484, 109.249, -16.2591, 1.03", "-14.986, 110.818, -16.4244, 1.03", "-15.0886, 111.523, -16.4751, 1.33", "-15.3089, 113.112, -16.5531, 1.62", "-15.4797, 114.397, -16.5858, 1.11", "-15.6414, 115.646, -16.5108, 1.4", "-15.7553, 116.619, -16.3894, 1.25", "-15.8494, 117.793, -16.1987, 1.55", "-15.8608, 118.032, -16.1555, 1.47", "-15.8831, 119.557, -15.8652, 1.62", "-15.883, 121.6, -15.4759, 1.47", "-15.9025, 122.445, -15.3314, 1.55", "-15.9404, 123.233, -15.2327, 1.11", "-16.0235, 124.686, -15.1133, 0.88", "-16.0759, 125.67, -15.0817, 0.88", "-16.1043, 126.598, -15.1129, 0.88", "-16.0831, 127.914, -15.2502, 0.88", "-15.9975, 128.915, -15.3619, 1.18", "-15.8121, 130.07, -15.5214, 1.18", "-15.607, 130.914, -15.6549, 1.33", "-15.3127, 131.891, -15.7834, 1.33", "-14.7935, 133.424, -15.9077, 1.11", "-14.2467, 134.962, -15.9442, 0.88", "-13.8859, 136.02, -15.8991, 0.88", "-13.5164, 137.245, -15.7809, 1.03", "-13.2325, 138.467, -15.6129, 1.33", "-13.0619, 139.615, -15.4202, 1.33", "-13.0078, 140.578, -15.2542, 1.47", "-13.0327, 141.484, -15.0737, 1.4", "-13.1029, 142.322, -14.8929, 1.4", "-13.2182, 143.26, -14.7076, 1.18", "-13.3655, 144.353, -14.5309, 1.18", "-13.4624, 145.113, -14.4141, 1.03", "-13.5743, 146.258, -14.2475, 1.03", "-13.6125, 147.312, -14.1194, 0.88", "-13.5757, 148.442, -14.0898, 1.03", "-13.496, 149.477, -14.1271, 0.96", "-13.4093, 150.269, -14.2227, 0.96", "-13.2762, 151.343, -14.4342, 0.96", "-13.0944, 152.743, -14.8784, 0.96", "-12.828, 154.829, -15.8623, 0.81", "-12.7154, 156.1, -16.6288, 1.03", "-12.6878, 156.873, -17.1573, 1.03", "-12.6882, 157.981, -17.9164, 0.88", "-12.7239, 159.579, -18.977, 1.03", "-12.7935, 161.322, -20.0373, 1.03", "-12.8296, 162.341, -20.5408, 1.25", "-12.8977, 163.691, -21.0944, 1.25", "-13.0411, 165.611, -21.6763, 1.03", "-13.132, 166.613, -21.8846, 1.03", "-13.244, 167.981, -22.0899, 1.03", "-13.3312, 169.749, -22.2938, 1.03", "-13.3234, 171.627, -22.509, 0.88", "-13.2228, 173.267, -22.7148, 0.88", "-13.0751, 174.698, -22.9017, 0.88", "-12.7232, 177.343, -23.2358, 0.74", "-12.4432, 179.066, -23.4364, 0.74", "-12.112, 180.855, -23.6019, 0.74", "-11.8269, 182.324, -23.7451, 0.74", "-11.6123, 183.864, -23.9758, 0.74", "-11.5861, 185.461, -24.3903, 0.74", "-11.6843, 186.214, -24.661, 0.88", "-11.8766, 187.083, -25.074, 1.03", "-12.2283, 188.61, -25.8605, 0.74", "-12.656, 190.76, -26.9588, 0.74", "-12.92, 192.594, -27.8799, 0.59", "-12.9906, 193.426, -28.2638, 0.88", "-13.0469, 194.849, -28.848, 1.11", "-13.0161, 196.908, -29.5522, 1.55", "-12.9145, 198.58, -29.9546, 1.33", "-12.7776, 200.017, -30.1945, 1.11", "-12.5754, 201.836, -30.4434, 1.11", "-12.3931, 203.286, -30.6307, 1.11", "-12.1629, 204.752, -30.7918, 1.03", "-11.8239, 206.425, -30.9508, 0.88", "-11.5832, 207.329, -31.0246, 1.18", "-11.4013, 207.898, -31.0522, 1.4", "-11.1193, 208.72, -31.0647, 1.25", "-10.8096, 209.676, -31.0736, 1.25", "-10.6525, 210.272, -31.1007, 1.11", "-10.5197, 210.955, -31.1561, 0.96", "-10.4469, 211.825, -31.2329, 0.96", "-10.4434, 212.433, -31.2931, 0.88", "-10.4825, 213.632, -31.411, 0.66", "-10.5063, 214.414, -31.4493, 0.81", "-10.5052, 215.244, -31.4425, 0.81", "-10.4524, 216.214, -31.3645, 0.74", "-10.2289, 218.119, -31.095, 0.88", "-10.1421, 218.635, -30.9861, 1.18", "-9.82442, 219.972, -30.6213, 1.18", "-9.59816, 220.729, -30.3775, 1.18", "-9.31273, 221.529, -30.1082, 1.11", "-8.94288, 222.446, -29.8061, 0.96", "-8.6855, 223.076, -29.6028, 0.96", "-8.39216, 223.844, -29.4148, 0.81", "-8.11139, 224.637, -29.2919, 1.11", "-7.96038, 225.088, -29.2714, 1.47", "-7.65358, 226.064, -29.3507, 1.03", "-7.41603, 226.878, -29.4936, 1.03", "-7.16942, 227.767, -29.7321, 1.25", "-7.0257, 228.385, -29.9071, 1.25", "-6.74232, 229.888, -30.2902, 0.88", "-6.6336, 230.681, -30.4335, 0.88", "-6.55012, 231.696, -30.543, 1.18", "-6.50186, 232.808, -30.5762, 0.96", "-6.46805, 234.053, -30.4857, 0.81", "-6.43751, 235.148, -30.3016, 1.25", "-6.40169, 236.025, -30.072, 0.66", "-6.34792, 236.911, -29.8003, 0.96", "-6.28004, 237.721, -29.5595, 1.25", "-6.19424, 238.513, -29.3474, 0.96", "-6.08013, 239.278, -29.2085, 0.96", "-5.92173, 240.149, -29.0849, 1.25", "-5.77858, 240.821, -28.9953, 1.55", "-5.58434, 241.626, -28.8854, 1.55", "-5.42784, 242.211, -28.8125, 1.25", "-5.20907, 243.064, -28.7482, 0.96" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-14.5769, 87.328, -11.5629, 0.59", "-14.4364, 89.8963, -12.7348, 0.59", "-14.4069, 90.8503, -13.1372, 0.88", "-14.3941, 91.9855, -13.5576, 1.18", "-14.3688, 93.4145, -14.0135, 1.18", "-14.315, 94.4136, -14.3332, 0.96", "-14.2411, 95.5298, -14.6851, 0.59", "-14.2021, 96.2491, -14.8566, 0.96", "-14.1372, 97.4229, -15.1368, 0.96", "-14.0777, 98.8143, -15.4992, 0.96", "-14.0607, 100.119, -15.866, 0.52", "-14.0974, 101.069, -16.1476, 0.37", "-14.1849, 101.683, -16.3536, 0.37", "-14.3694, 102.3, -16.5727, 0.81", "-14.6318, 102.815, -16.8007, 1.18", "-14.8348, 103.17, -16.9696, 1.18", "-15.1594, 103.805, -17.2426, 0.66", "-15.379, 104.374, -17.481, 0.66", "-15.6306, 105.322, -17.8401, 0.59", "-15.8125, 106.492, -18.2372, 0.88", "-15.9452, 108.17, -18.7556, 1.11", "-15.9662, 109.103, -19.0164, 1.11", "-15.9511, 109.905, -19.1987, 1.11", "-15.9185, 110.871, -19.3424, 0.37", "-15.9019, 111.917, -19.3895, 0.37", "-15.9322, 112.615, -19.333, 0.74", "-15.9582, 112.839, -19.3002, 0.88", "-16.1021, 113.84, -19.1157, 0.88", "-16.2038, 114.602, -18.9354, 0.66", "-16.3045, 115.644, -18.6481, 0.52", "-16.316, 116.13, -18.5324, 0.52", "-16.2599, 117.053, -18.3812, 0.96", "-16.1677, 117.677, -18.3391, 0.96", "-16.0546, 118.191, -18.3519, 1.18", "-15.9535, 118.615, -18.3914, 1.18", "-15.7134, 119.728, -18.5386, 0.66", "-15.6313, 120.35, -18.6303, 0.88", "-15.6097, 121.176, -18.7495, 0.88", "-15.6373, 121.824, -18.8658, 0.44", "-15.6912, 122.533, -18.9948, 0.74", "-15.7287, 122.969, -19.0657, 0.74", "-15.77, 123.551, -19.1348, 0.52", "-15.7834, 124.278, -19.2143, 0.37", "-15.7596, 124.889, -19.272, 0.37", "-15.6786, 125.636, -19.3255, 0.74", "-15.5994, 126.111, -19.3493, 0.74", "-15.4789, 126.748, -19.3738, 0.66", "-15.2758, 127.78, -19.401, 0.74", "-15.2122, 128.091, -19.4055, 1.4", "-15.0505, 128.745, -19.4029, 1.4", "-14.8714, 129.352, -19.4242, 1.33", "-14.4879, 130.431, -19.5032, 0.44", "-14.0956, 131.36, -19.6024, 0.44", "-13.8239, 131.975, -19.691, 0.37", "-13.3546, 133.087, -19.8899, 0.37", "-12.989, 134.019, -20.0821, 0.59", "-12.7968, 134.601, -20.2183, 0.59", "-12.6701, 135.137, -20.3581, 0.29", "-12.616, 136.454, -20.6943, 0.88", "-12.7025, 137.084, -20.8323, 1.77", "-12.8404, 137.658, -20.9272, 2.06", "-12.9789, 138.162, -20.9817, 1.69", "-13.1843, 138.887, -21.0632, 1.18", "-13.4944, 139.996, -21.2087, 0.44", "-13.7712, 140.986, -21.3474, 0.37", "-14.08, 142.106, -21.5136, 0.74", "-14.2116, 142.561, -21.5892, 0.74", "-14.4968, 143.549, -21.7796, 0.52", "-14.7108, 144.268, -21.8959, 0.44", "-14.8478, 144.722, -21.9438, 0.66", "-15.0, 145.166, -21.9574, 0.66", "-15.2317, 145.759, -21.9524, 0.37", "-15.4139, 146.211, -21.9188, 0.37", "-15.9438, 147.542, -21.6619, 0.59", "-16.2672, 148.482, -21.4015, 1.03", "-16.415, 149.012, -21.2322, 1.4" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-37.4069, 97.5859, -3.92778, 0.29", "-37.792, 99.8386, -3.64466, 0.29", "-38.0655, 100.9, -3.50489, 0.44", "-38.4034, 101.675, -3.33869, 0.66", "-38.9701, 102.492, -3.00651, 0.29", "-39.6341, 103.224, -2.61496, 0.29", "-40.0067, 103.602, -2.39794, 0.74", "-40.5313, 103.996, -2.0812, 0.88", "-41.7383, 104.816, -1.41028, 0.44", "-42.9137, 105.624, -0.814494, 0.52", "-43.2471, 105.888, -0.651074, 0.81", "-43.7828, 106.474, -0.357562, 0.44", "-44.2377, 107.154, -0.0288553, 0.88", "-44.6681, 108.007, 0.403685, 0.59", "-44.9737, 108.895, 0.759593, 0.29", "-45.1626, 109.666, 1.01507, 0.29", "-45.4396, 111.012, 1.42305, 0.96", "-45.671, 112.221, 1.77578, 1.18", "-45.8873, 113.473, 2.14154, 0.81", "-46.1702, 115.198, 2.57765, 0.52", "-46.3248, 116.101, 2.77834, 0.52", "-46.5882, 117.448, 2.97858, 0.44", "-46.8159, 118.505, 3.08612, 0.66", "-47.0766, 119.688, 3.22982, 0.88", "-47.2434, 120.395, 3.33353, 0.52", "-47.4484, 121.269, 3.51451, 0.29", "-47.7404, 122.492, 3.76715, 0.29", "-48.1249, 124.121, 4.09626, 0.52", "-48.4803, 125.368, 4.32763, 0.81", "-48.8282, 126.497, 4.47488, 0.22", "-49.078, 127.348, 4.56301, 0.22", "-49.5047, 128.752, 4.67569, 0.37", "-49.7477, 129.474, 4.71666, 0.37", "-50.3196, 130.983, 4.77351, 0.37", "-50.9139, 132.425, 4.82316, 0.29", "-51.5002, 133.926, 4.90211, 0.52", "-51.7802, 134.721, 4.94554, 0.88", "-52.2332, 136.354, 5.03458, 0.59", "-52.416, 137.215, 5.07245, 0.44", "-52.5583, 138.281, 5.12165, 0.22", "-52.7707, 140.416, 5.21914, 0.22", "-52.8188, 141.374, 5.23861, 0.81", "-52.8143, 142.172, 5.21175, 1.33", "-52.7936, 142.95, 5.14046, 1.33", "-52.7269, 144.366, 4.95919, 0.59", "-52.6452, 145.296, 4.80133, 0.81", "-52.5311, 146.156, 4.62258, 0.81", "-52.3124, 147.483, 4.27106, 0.52", "-52.0035, 149.158, 3.73783, 0.22", "-51.7371, 150.476, 3.26682, 0.22", "-51.3787, 152.061, 2.64913, 0.59", "-51.1228, 153.053, 2.26015, 0.81", "-50.7579, 154.455, 1.70587, 0.29", "-50.4982, 155.474, 1.34224, 0.22", "-50.3832, 156.0, 1.16096, 0.59", "-50.3553, 156.403, 1.03169, 0.59", "-50.5355, 157.435, 0.714913, 0.22", "-50.8752, 158.342, 0.389571, 0.29", "-51.1837, 158.944, 0.129435, 0.81", "-51.4174, 159.347, -0.0999539, 1.11", "-51.5921, 159.658, -0.296535, 1.11", "-52.3478, 161.175, -1.28702, 0.37", "-52.6246, 161.889, -1.71151, 0.96", "-52.9268, 162.905, -2.24377, 0.88", "-53.1532, 163.718, -2.64325, 0.88", "-53.4834, 164.815, -3.13313, 0.52", "-53.744, 165.632, -3.4607, 0.74", "-54.2364, 167.1, -3.97244, 0.29", "-54.7409, 168.449, -4.46441, 0.59", "-55.1269, 169.365, -4.81937, 0.59", "-55.5941, 170.509, -5.40003, 0.29", "-55.9548, 171.42, -6.01764, 1.18", "-56.0982, 171.838, -6.35286, 1.47", "-56.3628, 172.83, -7.24849, 1.18", "-56.5637, 173.799, -8.11992, 0.44", "-56.8169, 175.48, -9.57489, 0.22", "-56.8751, 176.138, -10.1602, 0.22", "-56.9364, 177.473, -11.2685, 1.18", "-56.937, 177.816, -11.5303, 1.4", "-56.8429, 179.401, -12.5752, 0.44", "-56.7371, 180.32, -13.1221, 0.66", "-56.6474, 181.204, -13.5678, 0.66", "-56.4477, 182.462, -14.2071, 0.22", "-56.3162, 183.002, -14.5032, 0.59", "-56.0661, 183.825, -14.9759, 0.52", "-55.7232, 184.772, -15.5185, 0.96", "-55.4415, 185.645, -16.063, 0.59", "-55.1967, 186.477, -16.6107, 0.37", "-54.9397, 187.317, -17.1982, 0.59", "-54.7471, 187.895, -17.5759, 0.81", "-54.3046, 189.269, -18.4528, 0.22", "-53.9401, 190.452, -19.1424, 0.59", "-53.7236, 191.202, -19.5545, 0.52", "-53.519, 192.094, -20.0212, 0.22", "-53.251, 193.472, -20.7144, 0.22", "-52.9943, 194.997, -21.4728, 0.88", "-52.8772, 195.873, -21.8941, 1.69", "-52.8344, 196.363, -22.1014, 1.92", "-52.8213, 197.291, -22.5094, 1.25" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-37.4069, 97.5859, -3.92778, 0.52", "-38.7437, 97.8482, -3.98811, 0.52", "-39.6072, 98.0018, -4.02263, 0.59", "-40.5424, 98.1604, -4.05433, 0.44", "-41.1847, 98.2883, -4.07233, 0.59", "-41.9109, 98.4733, -4.08273, 0.59", "-42.7912, 98.7506, -4.08581, 0.52", "-43.354, 98.96, -4.07646, 0.74", "-44.0775, 99.2837, -4.05289, 0.37", "-44.6206, 99.5558, -4.01847, 0.37", "-45.3177, 99.9189, -3.96209, 0.37", "-45.9296, 100.217, -3.8974, 0.52", "-46.7031, 100.487, -3.82119, 0.52", "-47.3056, 100.564, -3.78045, 0.29", "-48.125, 100.532, -3.78098, 0.81", "-48.6197, 100.473, -3.80509, 1.11", "-49.3038, 100.377, -3.86298, 1.25", "-50.3645, 100.239, -3.97605, 0.66", "-51.2802, 100.146, -4.10017, 0.37", "-52.5879, 100.097, -4.35486, 0.37", "-53.4488, 100.132, -4.58804, 0.29", "-54.5735, 100.257, -4.96121, 0.66", "-55.0046, 100.339, -5.13797, 0.88", "-55.6118, 100.502, -5.46719, 0.59", "-56.539, 100.765, -6.09388, 0.37", "-57.1644, 100.921, -6.59229, 0.37", "-57.6277, 101.005, -7.00551, 0.96", "-58.3513, 101.074, -7.73257, 1.18", "-59.5768, 101.098, -8.99433, 0.59", "-60.033, 101.079, -9.46279, 0.44", "-60.5494, 101.021, -9.95892, 0.29", "-61.1623, 100.919, -10.4971, 0.15", "-62.1683, 100.7, -11.3129, 0.88", "-62.6473, 100.592, -11.6423, 1.18", "-63.335, 100.471, -12.0453, 0.44", "-63.9928, 100.407, -12.389, 0.37", "-64.6026, 100.394, -12.6554, 0.96", "-65.6225, 100.458, -12.9815, 1.25", "-66.7244, 100.631, -13.1959, 0.44", "-67.439, 100.798, -13.2618, 0.44", "-68.3604, 101.066, -13.2672, 1.03", "-69.1203, 101.333, -13.1945, 0.88", "-70.1155, 101.721, -13.0459, 0.74", "-71.6345, 102.377, -12.7002, 0.37", "-72.6534, 102.831, -12.4009, 0.88", "-72.9808, 102.977, -12.2828, 1.18", "-73.8258, 103.391, -11.9304, 1.18" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "90.5694, 2.87575, -56.4546, 0.29", "91.4191, 5.35821, -59.7793, 0.29", "91.634, 6.07938, -60.6005, 0.52", "91.6912, 6.32322, -60.8311, 0.52", "91.8358, 7.20822, -61.5208, 0.29", "91.9246, 8.04261, -62.0736, 0.96", "91.9529, 8.30935, -62.2337, 1.33", "91.9733, 8.68095, -62.3214, 1.33", "92.0314, 9.43009, -62.5006, 0.59", "92.1472, 10.1159, -62.723, 0.37", "92.3789, 10.7364, -63.054, 0.22", "92.9305, 11.375, -63.6271, 0.22", "93.2194, 11.5392, -63.8805, 0.59", "93.7471, 11.6904, -64.3063, 0.59", "94.2136, 11.7405, -64.6537, 0.37", "94.8077, 11.7404, -65.0686, 0.96", "95.3919, 11.7051, -65.4491, 0.96", "96.1565, 11.629, -65.9426, 0.44", "96.5425, 11.5875, -66.1932, 0.52", "97.0397, 11.5217, -66.5262, 0.22", "97.3808, 11.4831, -66.7661, 0.74", "98.1215, 11.4265, -67.2958, 0.29", "98.4637, 11.4235, -67.5447, 0.29", "98.9983, 11.47, -67.9462, 0.88", "99.6349, 11.5718, -68.4312, 0.37", "100.714, 11.8346, -69.2564, 0.96", "101.194, 12.0013, -69.6233, 1.4", "101.633, 12.2169, -69.9557, 0.59", "102.333, 12.6812, -70.4722, 0.22", "102.957, 13.2206, -70.9106, 0.22", "103.469, 13.8083, -71.2478, 1.11", "103.839, 14.395, -71.4759, 1.33", "104.181, 15.0764, -71.6874, 1.33", "104.413, 15.6192, -71.8173, 1.33", "104.603, 16.1408, -71.9028, 0.59", "104.908, 17.0445, -72.0202, 0.22", "105.297, 18.0528, -72.1307, 1.4", "105.525, 18.5205, -72.1887, 1.69", "106.047, 19.4121, -72.3318, 0.29", "106.31, 19.7723, -72.4412, 0.66", "106.742, 20.2299, -72.703, 0.66", "107.433, 20.6816, -73.3372, 0.22", "107.943, 20.8112, -74.094, 1.03", "108.124, 20.7879, -74.5619, 1.03", "108.436, 20.5359, -76.2572, 0.74", "108.571, 20.3446, -77.2564, 1.03", "108.688, 19.9905, -78.7526, 1.11", "108.703, 19.5793, -80.2595, 1.11", "108.624, 19.1037, -81.8211, 0.74", "108.469, 18.6433, -83.2822, 0.96" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "90.5694, 2.87575, -56.4546, 0.37", "93.2692, 1.17968, -56.6567, 0.37", "94.2556, 0.727434, -56.4993, 0.44", "94.8623, 0.544743, -56.2038, 0.44", "96.7748, 0.179047, -54.9435, 0.74", "97.0538, 0.160819, -54.7447, 0.88", "98.0353, 0.180662, -54.057, 0.37", "99.2954, 0.33464, -53.0607, 0.37", "101.237, 0.649583, -51.4751, 0.88", "101.914, 0.781339, -50.9125, 1.03", "102.947, 1.0018, -50.0631, 0.29", "103.93, 1.24486, -49.2196, 0.29", "104.712, 1.47546, -48.5125, 0.29", "106.234, 1.96557, -47.3124, 0.81" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-40.7687, -49.7122, -111.398, 0.74", "-41.4975, -49.5427, -111.962, 0.74", "-42.0643, -49.4352, -112.39, 1.03", "-42.9677, -49.2985, -113.128, 0.37", "-43.42, -49.2512, -113.54, 0.22", "-43.9489, -49.2213, -114.076, 1.4", "-44.312, -49.2129, -114.467, 1.55", "-44.7698, -49.242, -115.02, 1.55", "-45.516, -49.3437, -116.015, 0.81", "-46.038, -49.4567, -116.754, 0.52", "-46.472, -49.5856, -117.385, 0.88", "-46.9571, -49.7471, -118.113, 0.22", "-47.329, -49.8622, -118.676, 0.74", "-47.6626, -49.9333, -119.169, 0.74", "-47.9182, -49.9428, -119.588, 0.74", "-48.3327, -49.8997, -120.352, 0.44", "-48.6587, -49.8468, -121.012, 0.22", "-48.8172, -49.8169, -121.401, 0.81", "-49.0415, -49.7757, -121.977, 0.81", "-49.8688, -49.6198, -124.105, 0.52", "-50.1989, -49.5692, -124.926, 1.03", "-50.4814, -49.5576, -125.573, 1.4", "-50.9694, -49.5864, -126.591, 1.18", "-51.2666, -49.625, -127.161, 0.66", "-51.7372, -49.6973, -127.985, 1.18", "-52.0274, -49.7402, -128.435, 1.55", "-52.706, -49.8243, -129.507, 0.52", "-52.9786, -49.8547, -129.971, 1.18", "-53.3487, -49.9006, -130.649, 1.18", "-53.972, -49.9718, -131.941, 0.29", "-54.194, -49.9963, -132.476, 0.29", "-54.4431, -50.0176, -133.137, 0.29", "-54.7153, -50.0248, -133.897, 0.59", "-54.9595, -50.0253, -134.592, 0.59", "-55.1474, -50.0154, -135.095, 0.44", "-55.6152, -49.9654, -136.251, 1.03", "-55.8471, -49.9173, -136.839, 1.33", "-56.397, -49.776, -138.177, 0.29", "-56.6498, -49.7028, -138.742, 0.29", "-56.8916, -49.6289, -139.233, 0.96", "-57.2338, -49.5286, -139.842, 0.96", "-58.4905, -49.1669, -141.606, 0.29", "-58.7549, -49.087, -141.892, 0.29", "-59.2529, -48.9532, -142.3, 1.03", "-59.7728, -48.8357, -142.63, 1.33", "-60.4444, -48.7057, -142.958, 0.74", "-61.4041, -48.534, -143.316, 0.37", "-62.5913, -48.3393, -143.641, 0.29", "-63.2889, -48.2304, -143.843, 0.22", "-64.0328, -48.1279, -144.062, 0.22", "-64.7922, -48.0118, -144.289, 0.52", "-65.3469, -47.9185, -144.459, 0.96", "-65.8241, -47.8319, -144.621, 1.18", "-66.3077, -47.7529, -144.795, 1.18", "-66.9883, -47.6218, -145.043, 0.74", "-67.6139, -47.5052, -145.265, 0.22", "-67.9325, -47.4514, -145.368, 0.44", "-68.3637, -47.3799, -145.485, 0.44", "-68.907, -47.2709, -145.618, 0.22", "-69.4696, -47.1347, -145.739, 0.22", "-69.8508, -47.0254, -145.814, 0.88", "-70.2699, -46.8985, -145.887, 1.25", "-70.4743, -46.8222, -145.915, 1.25", "-71.4329, -46.3924, -146.017, 0.22", "-71.9275, -46.1347, -146.062, 0.22", "-72.4359, -45.8375, -146.105, 0.88", "-72.8641, -45.5567, -146.14, 1.25", "-73.502, -45.0935, -146.19, 0.22", "-74.2574, -44.4981, -146.246, 0.22", "-74.8577, -43.9781, -146.296, 0.88", "-75.2111, -43.6417, -146.325, 0.88", "-75.5364, -43.31, -146.329, 0.37", "-76.026, -42.7681, -146.289, 0.15", "-76.4851, -42.211, -146.21, 0.96", "-76.8092, -41.7888, -146.13, 1.18", "-77.6397, -40.7133, -145.84, 0.22", "-78.4158, -39.7453, -145.517, 0.81", "-78.8183, -39.239, -145.325, 0.74", "-79.3305, -38.5751, -145.035, 0.29", "-79.5037, -38.3474, -144.925, 0.29", "-79.9842, -37.7169, -144.598, 0.52", "-80.2161, -37.4028, -144.429, 0.66", "-80.6089, -36.7823, -144.162, 0.22", "-80.784, -36.4529, -144.046, 0.22", "-81.0212, -35.8614, -143.869, 0.81", "-81.1151, -35.5107, -143.791, 1.11", "-81.183, -34.9495, -143.722, 1.11", "-81.1936, -34.0756, -143.685, 0.22", "-81.162, -33.6024, -143.704, 0.59", "-81.1374, -33.31, -143.729, 0.59", "-81.0911, -32.7196, -143.79, 0.29", "-81.0529, -31.8033, -143.923, 0.22", "-81.0307, -30.8923, -144.085, 0.88", "-81.0511, -30.0893, -144.23, 1.11", "-81.1373, -28.8367, -144.431, 0.22", "-81.1915, -28.2645, -144.512, 0.52", "-81.3046, -27.36, -144.654, 0.22", "-81.4667, -26.345, -144.842, 0.22", "-81.6564, -25.32, -145.055, 0.66", "-81.8155, -24.4862, -145.259, 0.66", "-81.9833, -23.5739, -145.55, 0.88", "-82.1726, -22.503, -145.937, 0.66", "-82.2957, -21.8184, -146.207, 0.44", "-82.4149, -21.2052, -146.479, 0.66", "-82.4598, -20.9309, -146.62, 0.66", "-82.6446, -19.7714, -147.297, 0.22", "-82.7864, -18.9516, -147.797, 0.22", "-82.853, -18.5413, -148.02, 1.33" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-40.7687, -49.7122, -111.398, 0.44", "-40.9625, -50.4763, -111.851, 0.44", "-41.0964, -51.0611, -112.229, 0.29", "-41.1552, -51.3322, -112.425, 0.66", "-41.2138, -51.6021, -112.651, 0.66", "-41.3095, -52.0568, -113.108, 0.29", "-41.3613, -52.2793, -113.353, 0.59", "-41.4277, -52.6343, -113.788, 0.37", "-41.493, -53.0258, -114.322, 1.18", "-41.5247, -53.3744, -114.835, 1.62", "-41.4829, -53.7533, -115.471, 1.62", "-41.278, -54.2887, -116.524, 0.29", "-41.1387, -54.5093, -117.012, 0.29", "-41.0209, -54.6493, -117.341, 0.66", "-40.7619, -54.9378, -117.992, 0.52", "-40.2583, -55.5275, -119.198, 1.18", "-39.9124, -55.9605, -119.989, 1.77", "-39.7141, -56.2254, -120.447, 1.77", "-39.3024, -56.9498, -121.66, 0.29", "-39.1782, -57.2651, -122.131, 0.29", "-39.0777, -57.6081, -122.594, 0.29", "-38.928, -58.1396, -123.265, 1.62", "-38.8035, -58.4812, -123.7, 1.69", "-38.129, -59.8189, -125.469, 0.29", "-37.8663, -60.2099, -126.009, 0.29", "-37.6066, -60.5122, -126.447, 0.29", "-36.9319, -61.1528, -127.388, 1.25", "-36.3071, -61.6222, -128.09, 0.66", "-35.7164, -61.9719, -128.593, 0.29", "-35.2541, -62.1851, -128.87, 1.03", "-34.8603, -62.3381, -129.086, 1.03", "-34.3829, -62.5204, -129.321, 0.44", "-33.7388, -62.7603, -129.579, 0.29", "-33.3448, -62.9073, -129.727, 0.88", "-33.0986, -63.0053, -129.82, 1.33", "-31.77, -63.6201, -130.431, 0.29", "-31.3603, -63.8579, -130.655, 0.96", "-31.1407, -64.0179, -130.797, 0.81", "-30.7801, -64.3425, -131.085, 0.37", "-30.3521, -64.7758, -131.479, 0.66", "-29.8337, -65.3362, -131.993, 0.52", "-29.5202, -65.6892, -132.321, 0.88", "-29.2751, -65.9444, -132.598, 0.88", "-28.4556, -66.649, -133.616, 0.44", "-28.1645, -66.8686, -134.025, 0.37", "-27.7461, -67.1436, -134.649, 0.29", "-27.4141, -67.3252, -135.13, 0.96", "-26.8805, -67.5801, -135.904, 1.03", "-25.8229, -68.0636, -137.431, 0.74", "-25.214, -68.353, -138.295, 1.33", "-24.7261, -68.615, -138.969, 1.11", "-24.2896, -68.8923, -139.553, 0.44", "-23.9976, -69.1205, -139.917, 0.81", "-23.6492, -69.4406, -140.289, 0.88", "-23.0653, -70.0338, -140.817, 0.22", "-22.6804, -70.3945, -141.141, 0.22", "-22.4781, -70.5784, -141.328, 0.59", "-22.2151, -70.8176, -141.597, 0.59", "-21.491, -71.4461, -142.379, 0.37", "-21.0706, -71.771, -142.865, 0.59", "-20.4793, -72.1983, -143.579, 0.44", "-20.1671, -72.4005, -143.991, 0.74", "-19.9525, -72.5381, -144.297, 0.74", "-19.596, -72.7865, -144.857, 0.37", "-19.0059, -73.1879, -145.931, 0.96", "-18.7533, -73.3409, -146.442, 0.88", "-18.0479, -73.7662, -148.066, 0.66", "-17.8023, -73.9079, -148.675, 0.96", "-17.5804, -74.0372, -149.264, 0.96", "-16.7863, -74.5294, -151.507, 0.66", "-16.2261, -74.9325, -153.116, 0.66", "-15.5715, -75.4577, -154.972, 0.44", "-15.1873, -75.8304, -156.02, 0.74", "-14.99, -76.0522, -156.525, 0.37", "-14.7707, -76.3514, -157.039, 0.81", "-14.4268, -77.0153, -157.767, 0.22", "-14.2717, -77.3636, -158.048, 0.81", "-13.9661, -78.0789, -158.46, 0.22", "-13.5955, -78.9913, -158.888, 0.22", "-13.4253, -79.4, -159.074, 0.88", "-13.2995, -79.7078, -159.219, 0.88" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-70.1471, -71.3636, -77.865, 0.96", "-71.1932, -72.9656, -79.976, 0.96", "-72.034, -73.8765, -81.2506, 0.22", "-72.4647, -74.3432, -81.9035, 0.52", "-72.8036, -74.7103, -82.4173, 0.66", "-73.3099, -75.2588, -83.1848, 0.44", "-73.8835, -75.8802, -84.0544, 1.33", "-74.8425, -76.3767, -85.1415, 1.84" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-70.1471, -71.3636, -77.865, 0.37", "-71.5037, -70.5243, -77.8579, 0.37", "-71.9766, -70.2568, -77.8485, 0.37", "-72.77, -69.808, -77.8326, 0.22", "-73.1986, -69.5655, -77.824, 1.03", "-73.6388, -69.3166, -77.8151, 1.77", "-74.1634, -69.0198, -77.8046, 2.14", "-74.4938, -68.8548, -77.8423, 2.14" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "61.2991, -85.8271, -22.4241, 0.44", "62.1504, -85.6521, -21.6955, 0.44", "62.6832, -85.4686, -21.2371, 0.22", "63.2186, -85.169, -20.8404, 0.22", "63.8921, -84.7546, -20.447, 0.44", "64.1198, -84.6061, -20.3553, 0.81", "64.5025, -84.3477, -20.2269, 0.81", "64.8995, -84.0799, -20.1921, 0.37", "65.7704, -83.4634, -20.2869, 0.44", "66.3001, -83.1154, -20.5203, 0.59", "67.1427, -82.5836, -21.0327, 0.15", "67.7354, -82.2371, -21.4411, 0.29", "68.8672, -81.6252, -22.2622, 1.18", "69.5133, -81.3022, -22.7447, 1.18", "72.114, -80.0747, -24.6514, 0.74", "72.5858, -79.8477, -24.9839, 0.74", "73.2022, -79.5507, -25.3927, 0.96", "73.7261, -79.2882, -25.7108, 0.96", "74.5512, -78.8275, -26.1158, 0.52", "75.4832, -78.2174, -26.4512, 0.29", "76.2359, -77.6523, -26.5862, 0.29", "77.1827, -76.904, -26.7103, 1.33", "77.6347, -76.53, -26.7432, 1.33", "78.5065, -75.7615, -26.7432, 0.44", "79.3551, -74.9628, -26.6629, 0.37", "80.0022, -74.3067, -26.5294, 0.37", "80.2777, -74.017, -26.4332, 0.37", "80.7511, -73.5032, -26.2054, 0.22", "81.7202, -72.4624, -25.6708, 1.55", "82.1187, -72.049, -25.4197, 1.77", "83.0527, -71.0866, -24.8309, 0.37", "83.3715, -70.7134, -24.6316, 0.44", "83.6053, -70.3984, -24.4928, 0.44", "83.8461, -70.044, -24.3644, 0.44", "84.4144, -69.2023, -24.1003, 0.29", "84.803, -68.6304, -23.9496, 0.22", "85.2593, -67.9711, -23.7927, 0.22", "86.0505, -66.8227, -23.5111, 1.18", "86.5367, -66.0952, -23.3177, 1.4", "86.7058, -65.8389, -23.2411, 1.62", "86.9166, -65.5309, -23.1438, 1.62", "87.4771, -64.8542, -22.9107, 0.96", "87.926, -64.3837, -22.733, 0.59", "88.6073, -63.7225, -22.4794, 0.52", "89.3263, -63.038, -22.2115, 0.37", "89.8954, -62.5194, -22.0037, 1.03", "91.1754, -61.4756, -21.5401, 0.22", "91.6231, -61.1682, -21.3702, 0.66", "91.9529, -60.9886, -21.2325, 0.66", "92.7058, -60.7457, -20.8703, 0.29", "93.224, -60.7684, -20.5433, 0.29", "93.9066, -61.0961, -20.1402, 0.29", "94.6569, -61.7578, -19.7754, 1.33", "95.0409, -62.1729, -19.695, 1.47", "95.7107, -62.9265, -19.6922, 0.74", "96.2919, -63.5547, -19.7695, 0.44", "97.8645, -65.0449, -20.0985, 0.96", "98.3595, -65.4399, -20.2208, 0.74", "99.658, -66.3414, -20.5531, 0.29", "100.361, -66.7619, -20.6914, 0.52", "101.213, -67.2088, -20.7829, 0.29", "102.049, -67.6074, -20.774, 0.66", "102.551, -67.8236, -20.6917, 0.66", "103.254, -68.0562, -20.5629, 0.29", "104.455, -68.3826, -20.3158, 0.96", "105.229, -68.6001, -20.1698, 0.29", "106.056, -68.8276, -20.0365, 1.11", "107.372, -69.167, -19.8418, 0.37", "108.718, -69.4715, -19.6482, 0.96", "109.642, -69.6395, -19.5162, 0.52", "110.49, -69.7718, -19.3967, 0.96", "110.805, -69.8148, -19.3452, 0.96", "111.998, -69.9873, -19.1253, 0.29", "112.536, -70.0757, -18.9941, 0.81", "112.923, -70.1405, -18.8641, 0.81", "113.777, -70.2446, -18.541, 0.29", "114.446, -70.2897, -18.2618, 0.81" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "61.2991, -85.8271, -22.4241, 0.74", "61.511, -87.5075, -21.9338, 0.74", "61.7107, -88.753, -21.4128, 0.81", "61.9652, -90.0163, -20.7616, 0.81", "62.3054, -91.3508, -19.9662, 0.59", "62.6424, -92.3717, -19.2715, 0.37", "62.864, -92.9235, -18.8321, 0.37", "63.3339, -93.94, -17.8267, 0.88", "63.5501, -94.293, -17.4131, 0.88", "63.8133, -94.6866, -16.9281, 0.88", "64.1872, -95.2565, -16.3181, 0.29", "64.8273, -96.4328, -15.3583, 0.29", "65.1558, -97.2232, -14.913, 1.03", "65.3669, -97.8132, -14.6381, 1.33", "65.7106, -98.8329, -14.162, 1.18", "66.127, -100.025, -13.5692, 1.03", "66.4768, -100.906, -13.0779, 0.81", "67.0992, -102.092, -12.2209, 0.37", "67.8057, -103.082, -11.2294, 0.96", "68.2761, -103.58, -10.5844, 1.18", "68.7925, -104.001, -9.85499, 1.18", "69.3062, -104.304, -9.14982, 0.88", "70.1797, -104.639, -8.10941, 0.44", "70.6639, -104.742, -7.67901, 0.44", "71.6872, -104.877, -7.03934, 0.37", "72.6133, -104.963, -6.65915, 0.37", "74.0502, -105.093, -6.29893, 0.66", "75.1629, -105.229, -6.12776, 1.03", "76.6482, -105.389, -6.01213, 0.74", "77.6939, -105.492, -5.98203, 0.52", "79.069, -105.606, -6.02044, 0.44", "80.2087, -105.733, -6.10837, 0.44", "81.3426, -105.947, -6.18293, 0.37" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-5.20907, 243.064, -28.7482, 0.29", "-5.37268, 245.509, -29.3417, 0.29", "-5.34631, 246.06, -29.4013, 0.29", "-5.31471, 246.645, -29.4116, 0.66", "-5.33006, 247.264, -29.361, 0.88", "-5.40626, 248.001, -29.2564, 0.88", "-5.63489, 249.272, -28.8774, 0.52", "-5.88094, 250.253, -28.3168, 0.66", "-6.08722, 250.84, -27.8266, 0.81", "-6.46398, 251.688, -26.9805, 0.37", "-6.78262, 252.283, -26.334, 0.52", "-7.53353, 253.488, -24.9527, 0.74", "-8.13233, 254.323, -23.9902, 1.03", "-9.27254, 255.745, -22.3129, 1.03", "-9.82366, 256.411, -21.5388, 0.74", "-10.2609, 256.966, -20.9291, 0.44", "-10.6783, 257.518, -20.3504, 0.44", "-11.3442, 258.434, -19.4876, 0.44", "-12.3384, 259.851, -18.2601, 0.88", "-12.8629, 260.651, -17.6342, 1.18", "-13.2122, 261.222, -17.1748, 0.52", "-13.5611, 261.858, -16.6573, 0.52", "-13.9784, 262.771, -15.9631, 0.59", "-14.216, 263.427, -15.5411, 0.81", "-14.4728, 264.264, -15.1635, 0.29", "-14.6621, 264.765, -14.9743, 0.29", "-14.9704, 265.335, -14.7646, 0.66", "-15.3452, 265.822, -14.5116, 0.66", "-15.6901, 266.213, -14.2305, 0.37", "-16.0254, 266.592, -13.8878, 0.66", "-16.4497, 267.121, -13.3909, 0.81", "-16.7968, 267.633, -12.94, 0.74", "-17.6863, 269.255, -11.5972, 0.44", "-17.9719, 269.975, -11.0528, 0.37", "-18.1194, 270.64, -10.627, 0.37", "-18.1784, 271.56, -10.1559, 0.29", "-18.1443, 272.268, -9.8477, 0.15", "-18.0618, 272.823, -9.66291, 0.44", "-17.9855, 273.121, -9.6175, 0.44", "-17.9194, 273.393, -9.58026, 0.44", "-17.6662, 275.187, -9.20969, 0.22" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-5.20907, 243.064, -28.7482, 0.74", "-5.35342, 244.285, -29.3257, 0.74", "-5.51967, 245.364, -29.7792, 0.74", "-5.8425, 247.105, -30.4477, 0.96", "-6.11099, 248.381, -30.8424, 0.96", "-6.4698, 249.896, -31.1893, 0.74", "-7.00939, 252.001, -31.55, 0.59", "-7.29097, 253.03, -31.6312, 0.81", "-7.64175, 254.396, -31.6447, 0.81", "-8.03339, 256.131, -31.5552, 0.81", "-8.3497, 258.041, -31.3883, 0.96", "-8.4806, 259.332, -31.2559, 0.96", "-8.53955, 261.503, -31.0703, 0.74", "-8.47664, 262.692, -30.9998, 1.03", "-8.36024, 263.546, -30.9834, 1.03", "-8.0791, 264.993, -31.0553, 1.03", "-7.91569, 265.75, -31.1268, 1.03", "-7.71823, 266.9, -31.2683, 1.03", "-7.63654, 267.888, -31.3744, 1.03", "-7.64337, 269.037, -31.4905, 0.96", "-7.7795, 270.31, -31.5959, 0.74", "-7.9758, 271.351, -31.678, 0.74", "-8.27592, 272.578, -31.7514, 0.88", "-8.73868, 274.153, -31.8077, 1.11", "-9.13372, 275.339, -31.8395, 1.11", "-9.80573, 277.266, -31.8717, 0.96", "-10.157, 278.32, -31.8781, 0.96", "-10.475, 279.351, -31.8647, 0.96", "-10.7399, 280.233, -31.8319, 0.96", "-11.0792, 281.352, -31.76, 0.81", "-11.4681, 282.71, -31.6465, 0.96", "-11.7247, 283.724, -31.5325, 0.96", "-11.9856, 284.919, -31.3397, 0.96", "-12.1331, 285.817, -31.17, 1.25", "-12.2473, 286.885, -30.9118, 1.25", "-12.315, 288.445, -30.4562, 1.11", "-12.2869, 289.766, -30.0774, 0.88", "-12.1462, 291.137, -29.7215, 0.74", "-11.9744, 292.065, -29.5369, 1.18", "-11.6872, 293.165, -29.3691, 1.18", "-11.4852, 293.854, -29.2689, 1.18", "-11.1308, 295.106, -29.0758, 0.96", "-10.9147, 296.032, -28.9661, 0.81", "-10.7451, 297.053, -28.8763, 0.81", "-10.6162, 298.23, -28.7754, 0.81", "-10.5089, 299.712, -28.6631, 0.81", "-10.4679, 300.896, -28.5612, 1.11", "-10.464, 302.158, -28.4594, 1.11", "-10.5122, 303.495, -28.4485, 0.96", "-10.6111, 304.883, -28.5383, 0.96", "-10.8206, 306.759, -28.8204, 0.88", "-11.0697, 308.461, -29.2235, 0.88", "-11.3227, 309.891, -29.6618, 0.88", "-11.7484, 312.103, -30.4513, 0.88", "-12.0786, 313.753, -31.0802, 1.11", "-12.3573, 315.116, -31.6264, 1.11", "-12.5976, 316.377, -32.0755, 1.11", "-12.7941, 317.83, -32.4792, 0.81", "-12.9364, 320.099, -32.9175, 1.11", "-12.9123, 321.058, -33.0136, 1.11", "-12.7503, 322.651, -33.1273, 1.11", "-12.388, 325.044, -33.2488, 0.96", "-12.0585, 326.87, -33.3211, 0.96", "-11.8366, 328.098, -33.4071, 0.96", "-11.6697, 329.138, -33.5429, 0.96", "-11.3535, 331.073, -33.8847, 0.81", "-11.1247, 332.356, -34.1662, 0.81", "-10.8655, 333.847, -34.5489, 0.66", "-10.4859, 336.144, -35.1753, 0.66", "-10.2053, 338.036, -35.6819, 0.66", "-9.95343, 340.374, -36.2845, 1.03", "-9.88749, 341.456, -36.5316, 1.03", "-9.86288, 343.559, -37.0348, 0.81", "-9.91461, 344.833, -37.3432, 0.81", "-10.0323, 346.158, -37.6545, 0.96", "-10.2775, 348.104, -38.1243, 0.66", "-10.4955, 349.509, -38.4784, 0.88", "-10.7253, 351.135, -38.8703, 0.88", "-10.9242, 352.894, -39.2469, 0.88", "-11.082, 354.883, -39.6052, 1.03", "-11.1144, 355.979, -39.807, 1.03", "-11.0984, 357.092, -40.0124, 1.03", "-11.0241, 359.029, -40.3377, 0.81", "-10.9455, 360.872, -40.5822, 0.81", "-10.9168, 362.102, -40.7269, 0.81", "-10.9276, 364.637, -40.9756, 0.81", "-11.0317, 366.514, -41.1313, 1.25", "-11.11, 367.184, -41.1859, 1.33", "-11.2942, 368.302, -41.2931, 1.33", "-11.5356, 369.568, -41.437, 1.18", "-11.7501, 370.639, -41.588, 0.74", "-12.0817, 372.191, -41.8159, 0.66", "-12.3362, 373.427, -42.0409, 0.96", "-12.536, 374.546, -42.2834, 0.96", "-12.6602, 375.527, -42.4981, 0.66", "-12.7414, 376.843, -42.7325, 0.66", "-12.7815, 378.526, -42.95, 0.66", "-12.7862, 379.852, -43.0567, 0.96", "-12.8128, 380.898, -43.1196, 0.96", "-12.8965, 382.02, -43.2115, 0.74", "-13.1562, 384.507, -43.4823, 0.74", "-13.2561, 385.314, -43.5819, 0.88", "-13.5377, 387.405, -43.8902, 0.96", "-13.8124, 389.368, -44.1912, 0.81", "-14.0993, 391.383, -44.5209, 0.66", "-14.3258, 393.144, -44.8387, 0.81", "-14.4738, 394.546, -45.0743, 0.96", "-14.6227, 396.659, -45.3903, 0.74", "-14.6746, 397.717, -45.5121, 1.03", "-14.7261, 399.079, -45.5701, 1.03", "-14.8149, 401.052, -45.5615, 1.33", "-14.8998, 402.313, -45.5403, 1.55", "-15.0724, 404.374, -45.4974, 0.81", "-15.2309, 405.779, -45.4678, 0.66", "-15.4339, 407.197, -45.4608, 0.66", "-15.613, 408.224, -45.4855, 0.66", "-15.907, 409.783, -45.5838, 0.66", "-16.1215, 411.081, -45.7106, 0.66", "-16.3028, 412.489, -45.849, 1.25", "-16.3587, 413.121, -45.9215, 1.03", "-16.4379, 414.83, -46.1551, 0.81", "-16.456, 416.356, -46.3569, 0.81", "-16.4324, 418.035, -46.5855, 0.66", "-16.3642, 419.451, -46.7713, 0.66", "-16.2549, 420.854, -46.9428, 0.96", "-16.1388, 422.088, -47.0805, 1.4", "-16.0358, 423.078, -47.1793, 1.4", "-15.9708, 423.81, -47.2484, 1.4", "-15.8976, 425.117, -47.3647, 0.88", "-15.8233, 426.735, -47.5134, 0.74", "-15.7696, 427.794, -47.6208, 0.74", "-15.6855, 429.549, -47.8121, 0.74", "-15.6027, 431.034, -47.9898, 0.66", "-15.4938, 432.701, -48.2121, 0.66", "-15.3295, 434.968, -48.5473, 0.66", "-15.1833, 436.616, -48.7998, 0.74", "-15.07, 437.635, -48.9634, 0.74", "-14.906, 438.842, -49.1662, 0.96", "-14.7415, 439.919, -49.3438, 1.11", "-14.6188, 440.727, -49.4789, 1.11", "-14.4505, 442.111, -49.7044, 0.74", "-14.3287, 443.306, -49.9088, 0.59", "-14.1806, 444.66, -50.1422, 0.59", "-14.0179, 445.946, -50.383, 0.88", "-13.9399, 446.579, -50.5132, 1.25", "-13.8351, 447.527, -50.7252, 1.4", "-13.7743, 448.191, -50.885, 1.4", "-13.7178, 449.194, -51.1306, 0.88", "-13.6906, 450.4, -51.4288, 0.66", "-13.7119, 451.981, -51.8081, 0.66", "-13.7483, 453.161, -52.0614, 0.66", "-13.7863, 453.957, -52.2169, 0.52", "-13.8744, 455.476, -52.489, 0.81", "-13.9555, 456.656, -52.6988, 0.81", "-14.0274, 457.814, -52.8931, 0.66", "-14.087, 459.57, -53.1778, 0.59", "-14.0958, 460.539, -53.3244, 0.88", "-14.0821, 461.69, -53.4977, 1.11", "-14.046, 462.835, -53.6643, 1.11", "-14.0028, 463.75, -53.7947, 1.11", "-13.9484, 464.587, -53.9131, 0.88", "-13.8652, 465.599, -54.0757, 0.52", "-13.7676, 466.617, -54.2422, 0.81", "-13.6641, 467.653, -54.3929, 0.81", "-13.6071, 468.265, -54.4599, 0.81", "-13.516, 469.362, -54.5664, 0.96", "-13.4252, 470.728, -54.683, 0.59", "-13.3649, 471.705, -54.761, 0.44", "-13.2714, 473.133, -54.8532, 0.44", "-13.1938, 474.22, -54.9129, 1.11", "-13.1616, 474.712, -54.9348, 1.4", "-13.1246, 475.777, -54.9507, 1.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-16.415, 149.012, -21.2322, 0.29", "-16.9014, 149.775, -21.4307, 0.29", "-17.2944, 150.421, -21.6607, 0.52", "-17.5705, 150.877, -21.8486, 0.52", "-18.0705, 151.733, -22.2179, 0.66", "-18.2637, 152.078, -22.3704, 0.66", "-18.4517, 152.435, -22.4975, 0.37", "-18.9061, 153.454, -22.7164, 0.29", "-19.034, 153.833, -22.7479, 0.59", "-19.1526, 154.303, -22.7478, 0.81", "-19.2101, 154.595, -22.7212, 0.81", "-19.4302, 155.832, -22.531, 0.74", "-19.5466, 156.497, -22.3918, 0.74", "-19.7077, 157.318, -22.1759, 0.44", "-19.829, 157.865, -22.048, 0.29", "-19.9648, 158.411, -21.9474, 0.29", "-20.0643, 158.775, -21.9057, 0.52", "-20.1827, 159.198, -21.9075, 0.52", "-20.3243, 159.71, -21.9441, 0.52", "-20.5554, 160.525, -22.0436, 0.74", "-20.6979, 161.021, -22.1273, 0.96", "-20.7964, 161.382, -22.1998, 0.96", "-20.924, 161.897, -22.3114, 0.59", "-21.0594, 162.523, -22.4562, 0.37", "-21.1575, 163.104, -22.6387, 0.22", "-21.2007, 163.489, -22.7809, 0.22", "-21.2247, 163.852, -22.9151, 0.74", "-21.2473, 164.383, -23.1154, 1.03", "-21.2607, 164.665, -23.2198, 1.03", "-21.3166, 165.732, -23.5997, 0.44", "-21.3466, 166.47, -23.8637, 0.44", "-21.3743, 167.139, -24.0773, 0.37", "-21.4031, 167.748, -24.2548, 0.37", "-21.431, 168.329, -24.4039, 0.37", "-21.4529, 168.948, -24.5278, 0.37", "-21.4527, 169.549, -24.6176, 0.37", "-21.3925, 170.502, -24.771, 0.88", "-21.3297, 170.984, -24.8459, 1.18", "-21.2648, 171.343, -24.8993, 1.18", "-21.1342, 171.921, -24.9819, 0.74", "-20.9494, 172.668, -25.0781, 0.52", "-20.78, 173.366, -25.1602, 0.44", "-20.5847, 174.141, -25.2476, 0.37", "-20.4788, 174.553, -25.2854, 0.37", "-20.3089, 175.194, -25.3241, 0.37", "-20.0967, 175.969, -25.3385, 0.59", "-19.9602, 176.454, -25.3221, 1.03", "-19.8276, 176.908, -25.2938, 1.03", "-19.6892, 177.398, -25.2564, 0.96", "-19.5301, 178.076, -25.197, 0.29", "-19.4207, 178.704, -25.1623, 0.29", "-19.3824, 179.059, -25.1589, 0.52", "-19.3704, 179.397, -25.1632, 0.52", "-19.3832, 179.802, -25.1773, 0.29", "-19.432, 180.359, -25.2126, 0.52", "-19.5072, 181.034, -25.2524, 0.66", "-19.5438, 181.616, -25.2648, 0.66", "-19.538, 182.165, -25.2648, 0.52", "-19.5116, 182.541, -25.2664, 0.81", "-19.4644, 182.962, -25.2898, 1.11", "-19.3838, 183.624, -25.3607, 0.15", "-19.3039, 184.26, -25.4449, 0.15", "-19.2411, 184.7, -25.5177, 0.52", "-19.1223, 185.445, -25.6669, 0.59", "-18.9823, 186.274, -25.8498, 0.29", "-18.88, 186.932, -26.0027, 0.29", "-18.8077, 187.476, -26.1465, 0.96", "-18.776, 187.777, -26.2248, 0.96", "-18.7213, 188.269, -26.3301, 0.59", "-18.6603, 188.723, -26.4179, 0.22", "-18.5768, 189.367, -26.5262, 0.22", "-18.5127, 189.913, -26.6252, 0.88", "-18.4893, 190.23, -26.6854, 0.88", "-18.4793, 190.626, -26.7601, 0.88", "-18.4956, 191.29, -26.8908, 0.29", "-18.5544, 191.949, -27.0223, 0.22", "-18.6034, 192.238, -27.0714, 0.22", "-18.7584, 192.855, -27.1423, 0.81", "-18.8433, 193.173, -27.1567, 1.11", "-18.8892, 193.359, -27.1542, 1.11", "-18.966, 193.899, -27.1426, 0.88", "-18.9842, 194.429, -27.1496, 0.59", "-18.9585, 195.042, -27.1736, 0.29", "-18.8791, 195.907, -27.2237, 0.29", "-18.8125, 196.601, -27.2746, 0.74", "-18.7195, 197.677, -27.3989, 0.52", "-18.6674, 198.343, -27.5179, 1.03", "-18.6405, 198.865, -27.648, 1.03", "-18.6478, 199.188, -27.7465, 0.74", "-18.7522, 199.875, -28.0014, 0.44", "-18.9487, 200.581, -28.264, 0.88", "-19.1052, 201.032, -28.4137, 1.18", "-19.1817, 201.257, -28.4919, 1.18", "-19.3392, 201.768, -28.6683, 0.59", "-19.5317, 202.533, -28.9201, 0.29", "-19.684, 203.33, -29.1576, 0.81", "-19.8068, 204.1, -29.3533, 0.52", "-19.8835, 204.605, -29.4734, 0.52", "-19.9575, 205.102, -29.5935, 0.74", "-20.0583, 205.723, -29.7376, 0.74", "-20.1918, 206.411, -29.8747, 0.22", "-20.2574, 206.662, -29.9289, 0.22", "-20.3812, 207.049, -30.0127, 0.52", "-20.4712, 207.324, -30.0631, 0.52", "-20.6341, 207.855, -30.1649, 0.29", "-20.7611, 208.308, -30.2526, 0.29", "-20.9032, 208.868, -30.3646, 1.03", "-21.0053, 209.344, -30.456, 1.03", "-21.0673, 209.675, -30.5083, 1.03", "-21.1418, 210.163, -30.5624, 0.52", "-21.1823, 210.574, -30.5883, 0.29", "-21.2162, 210.999, -30.5905, 0.59", "-21.2303, 211.286, -30.5695, 0.59", "-21.2357, 211.888, -30.5041, 0.22", "-21.2195, 212.496, -30.4268, 0.81", "-21.191, 212.893, -30.3729, 1.03", "-21.1755, 213.034, -30.3553, 1.03", "-21.1078, 213.625, -30.2906, 0.59", "-21.0569, 214.209, -30.2365, 0.37", "-21.0472, 214.538, -30.2066, 0.37", "-21.0747, 214.979, -30.1662, 0.66", "-21.1126, 215.26, -30.1388, 0.66", "-21.2853, 216.05, -30.0707, 0.29", "-21.398, 216.434, -30.0466, 0.29", "-21.5997, 217.032, -30.0184, 0.74", "-21.756, 217.487, -29.9983, 0.74", "-21.9238, 217.983, -29.9735, 0.74", "-22.1341, 218.656, -29.9311, 0.29", "-22.2992, 219.258, -29.8856, 0.29", "-22.473, 220.137, -29.802, 1.33", "-22.5205, 220.581, -29.7417, 1.33", "-22.5385, 221.212, -29.6441, 1.11", "-22.5109, 221.749, -29.551, 0.59", "-22.4207, 222.321, -29.4556, 0.44", "-22.144, 223.459, -29.3279, 0.29", "-21.8741, 224.262, -29.298, 0.74", "-21.6981, 224.724, -29.3256, 0.81", "-21.5399, 225.111, -29.3889, 0.44", "-21.2362, 225.857, -29.5796, 0.22", "-20.9798, 226.502, -29.7943, 0.81", "-20.8652, 226.793, -29.9147, 0.81", "-20.6437, 227.384, -30.1818, 0.22", "-20.4788, 227.851, -30.3799, 0.22", "-20.2906, 228.423, -30.6159, 0.81", "-20.2408, 228.587, -30.6745, 0.81", "-20.06, 229.159, -30.8559, 0.29", "-19.903, 229.632, -30.9938, 0.88", "-19.7084, 230.159, -31.1268, 0.88", "-19.4054, 230.981, -31.3068, 0.22", "-19.2174, 231.56, -31.414, 0.74", "-19.1666, 231.747, -31.4414, 0.88", "-19.0439, 232.402, -31.5291, 0.15", "-18.971, 232.943, -31.593, 0.52", "-18.927, 233.418, -31.6457, 0.22", "-18.9006, 233.89, -31.7108, 0.66", "-18.8949, 234.125, -31.7558, 0.88", "-18.9157, 235.076, -31.9795, 0.22", "-18.937, 235.363, -32.0564, 0.59", "-18.9825, 235.769, -32.177, 0.44", "-19.06, 236.331, -32.3344, 0.22", "-19.1126, 236.673, -32.4178, 0.37", "-19.2213, 237.281, -32.5343, 0.15", "-19.346, 237.878, -32.6089, 0.81", "-19.422, 238.226, -32.6396, 1.11", "-19.5399, 238.771, -32.6661, 1.03", "-19.6444, 239.284, -32.6722, 0.29", "-19.741, 239.793, -32.6791, 0.29", "-19.8319, 240.257, -32.6899, 0.29", "-19.9966, 241.087, -32.7219, 0.22", "-20.1003, 241.594, -32.7482, 0.74", "-20.3325, 242.701, -32.8306, 0.22", "-20.4809, 243.362, -32.8858, 0.81", "-20.7997, 244.72, -33.008, 0.22", "-20.8565, 244.957, -33.0303, 0.22", "-20.9723, 245.453, -33.0774, 0.81", "-21.0102, 245.636, -33.0925, 1.03", "-21.0892, 246.072, -33.1188, 0.22", "-21.1601, 246.487, -33.1265, 0.44", "-21.2405, 247.012, -33.1182, 0.22", "-21.2987, 247.412, -33.1071, 0.44", "-21.3677, 247.92, -33.0854, 0.22", "-21.4441, 248.421, -33.0604, 0.44", "-21.5416, 248.942, -33.0264, 0.59", "-21.6707, 249.489, -33.0113, 0.29", "-21.8703, 250.19, -33.0329, 0.44", "-22.107, 250.909, -33.087, 0.44", "-22.4508, 251.897, -33.1952, 0.81", "-22.6332, 252.443, -33.2899, 0.96", "-22.8651, 253.166, -33.4733, 0.66", "-23.1972, 254.081, -33.7717, 0.29", "-23.3167, 254.372, -33.8906, 0.44", "-23.5188, 254.846, -34.1224, 0.15", "-23.8003, 255.511, -34.5028, 0.44", "-23.9839, 255.982, -34.7874, 0.44", "-24.1713, 256.492, -35.0734, 0.15", "-24.2411, 256.679, -35.1946, 0.74" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-16.415, 149.012, -21.2322, 0.22", "-15.3956, 150.34, -21.5789, 0.22", "-14.8702, 150.921, -21.6809, 0.22", "-14.362, 151.484, -21.7795, 0.22", "-13.8306, 152.072, -21.8827, 0.22", "-13.4063, 152.542, -21.965, 0.44", "-12.5907, 153.445, -22.1233, 0.74", "-12.0325, 154.12, -22.1647, 0.88" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-73.8258, 103.391, -11.9304, 0.29", "-74.6386, 103.066, -11.9907, 0.29", "-75.1291, 102.87, -12.027, 0.29", "-75.8519, 102.581, -12.0806, 0.29", "-76.6481, 102.263, -12.1396, 0.29" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-73.8258, 103.391, -11.9304, 0.22", "-74.8741, 104.849, -12.0573, 0.22", "-75.416, 105.603, -12.1229, 0.66", "-75.6584, 105.94, -12.1523, 0.66", "-76.1155, 106.576, -12.2076, 0.29" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-82.853, -18.5413, -148.02, 0.22", "-81.1199, -14.9491, -150.294, 0.22", "-80.701, -14.081, -150.843, 0.22", "-79.8921, -12.4044, -151.904, 0.88", "-79.6319, -11.8648, -152.246, 0.66", "-79.4075, -11.3999, -152.54, 0.66" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-82.853, -18.5413, -148.02, 0.22", "-83.5047, -17.8651, -148.462, 0.22", "-83.7781, -17.636, -148.667, 0.44", "-84.3068, -17.243, -149.094, 0.22", "-84.5132, -17.102, -149.26, 0.59", "-85.0771, -16.7226, -149.692, 0.29", "-85.7767, -16.2518, -150.227, 0.29", "-86.1546, -16.0364, -150.529, 0.29", "-86.45, -15.8936, -150.787, 0.59", "-86.8625, -15.733, -151.186, 0.22", "-87.2042, -15.6117, -151.516, 0.44" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-74.8425, -76.3767, -85.1415, 0.37", "-75.2541, -77.9815, -85.2763, 0.37", "-75.54, -79.0968, -85.3408, 0.15", "-75.7923, -80.0123, -85.3399, 0.44", "-76.0212, -80.7886, -85.3178, 0.44", "-76.3584, -81.8768, -85.2675, 0.22", "-76.6653, -82.794, -85.2157, 1.03", "-76.8076, -83.1344, -85.1792, 1.03", "-77.396, -84.3068, -85.0049, 0.29", "-77.8331, -85.0738, -84.8823, 1.03", "-78.3003, -85.7708, -84.7617, 1.03", "-78.8148, -86.4415, -84.6419, 0.29", "-79.5619, -87.3191, -84.4687, 0.29", "-80.0091, -87.7912, -84.3617, 0.81", "-80.4767, -88.2319, -84.2554, 0.52", "-81.5718, -89.1992, -84.0099, 0.29", "-82.507, -89.9855, -83.8073, 0.74", "-83.0785, -90.4089, -83.6799, 1.03", "-84.35, -91.2628, -83.3955, 0.22", "-84.9522, -91.6274, -83.2602, 0.22", "-85.281, -91.8017, -83.1892, 0.59", "-85.5352, -91.929, -83.1397, 0.59", "-87.0359, -92.6997, -82.8524, 0.59", "-87.7413, -93.1424, -82.741, 0.37", "-88.7878, -93.8928, -82.6161, 1.25", "-89.1601, -94.1838, -82.5747, 1.47", "-90.108, -94.971, -82.4947, 0.37", "-90.7134, -95.5153, -82.4873, 1.03", "-91.7206, -96.5159, -82.5704, 0.29", "-92.1691, -96.9439, -82.6279, 0.44", "-92.4733, -97.2081, -82.6444, 0.66", "-92.8025, -97.4737, -82.6343, 0.52", "-93.5384, -97.9631, -82.5465, 0.29", "-94.2647, -98.3579, -82.3897, 0.74", "-94.5891, -98.4884, -82.2726, 0.74", "-96.1603, -99.1008, -81.6049, 0.22", "-96.548, -99.2572, -81.413, 0.44", "-97.0186, -99.4376, -81.1347, 0.59", "-97.8284, -99.7219, -80.6296, 0.37", "-98.7916, -100.056, -80.0384, 0.74", "-99.3101, -100.237, -79.7541, 0.74", "-100.02, -100.505, -79.435, 0.29", "-101.229, -101.004, -78.9518, 1.03", "-102.366, -101.547, -78.5666, 0.22", "-102.824, -101.784, -78.4493, 0.88", "-104.108, -102.54, -78.2339, 0.29", "-104.893, -103.026, -78.1458, 0.15", "-105.47, -103.413, -78.1307, 0.74", "-106.287, -104.05, -78.2142, 1.03", "-106.836, -104.527, -78.3235, 1.11", "-107.841, -105.457, -78.6003, 0.22", "-108.087, -105.707, -78.6862, 0.59", "-108.276, -105.915, -78.7538, 0.59", "-109.242, -107.044, -79.0992, 0.22", "-109.565, -107.452, -79.1951, 0.74", "-109.914, -107.899, -79.2331, 0.74", "-110.523, -108.649, -79.1158, 0.22", "-111.17, -109.478, -78.8135, 0.59", "-111.405, -109.811, -78.6454, 0.74", "-111.897, -110.599, -78.1634, 0.22", "-112.481, -111.533, -77.5096, 0.88", "-113.105, -112.559, -76.6919, 0.15", "-113.312, -112.9, -76.3676, 0.15", "-113.659, -113.413, -75.7783, 0.74", "-113.893, -113.758, -75.366, 0.74" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-74.8425, -76.3767, -85.1415, 0.29", "-75.8416, -74.9224, -85.6605, 0.29", "-76.791, -73.7844, -86.131, 0.29", "-77.8609, -72.6912, -86.5454, 0.29", "-78.4095, -72.1761, -86.7325, 0.29", "-79.6856, -71.0693, -87.1193, 0.52", "-80.5475, -70.4068, -87.3645, 0.74", "-81.4455, -69.8239, -87.553, 0.37", "-82.6803, -69.1496, -87.7982, 0.66", "-83.1771, -68.9351, -87.9082, 1.03", "-84.3732, -68.5446, -88.1482, 1.03", "-86.0825, -68.172, -88.4277, 0.22", "-87.1872, -68.0092, -88.5664, 0.22", "-88.4042, -67.9452, -88.585, 0.44", "-89.2084, -67.9566, -88.5395, 0.44", "-90.4668, -68.0203, -88.3834, 0.29", "-91.6176, -68.1456, -88.1686, 1.11", "-92.2089, -68.2393, -88.0323, 1.25", "-94.6519, -68.7574, -87.4144, 0.66", "-96.0208, -69.0998, -87.0338, 0.22", "-96.808, -69.3317, -86.7888, 0.22", "-97.7323, -69.6637, -86.4551, 0.22", "-98.5208, -70.0132, -86.169, 0.81", "-99.1456, -70.3304, -85.9587, 0.81", "-99.823, -70.7354, -85.7742, 0.29", "-100.878, -71.3721, -85.5273, 0.88", "-102.53, -72.264, -85.2517, 0.22", "-103.19, -72.5557, -85.2015, 0.52", "-104.189, -72.9314, -85.1925, 0.29", "-104.91, -73.1737, -85.2469, 0.66", "-106.284, -73.599, -85.4795, 0.29", "-106.936, -73.8314, -85.661, 0.96", "-107.33, -73.9844, -85.7935, 0.96", "-108.729, -74.5379, -86.2437, 0.29", "-109.597, -74.8724, -86.4629, 1.33", "-110.462, -75.1709, -86.6264, 1.55", "-111.956, -75.5837, -86.8351, 0.29", "-112.725, -75.7429, -86.9055, 0.29", "-113.803, -75.9178, -86.9453, 0.52", "-115.171, -76.0724, -86.9846, 0.96", "-116.13, -76.146, -86.968, 0.44", "-117.362, -76.2082, -86.8726, 0.29", "-118.97, -76.2206, -86.647, 0.88", "-120.047, -76.2688, -86.4527, 0.96" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-74.4938, -68.8548, -77.8423, 0.29", "-75.1023, -69.7563, -78.4923, 0.29", "-75.8825, -70.8113, -78.8652, 0.29", "-76.6103, -71.678, -79.0204, 0.81", "-77.2896, -72.3757, -79.062, 0.81", "-78.0885, -73.0465, -78.9813, 0.37", "-80.0876, -74.3815, -78.4956, 0.37", "-81.1131, -74.8187, -78.0213, 0.59", "-81.8354, -75.0327, -77.6406, 0.88", "-82.6752, -75.2216, -77.173, 0.88", "-84.0773, -75.493, -76.3497, 1.03", "-85.2783, -75.7303, -75.6134, 1.03", "-86.8072, -76.1008, -74.5985, 0.59", "-87.7861, -76.456, -73.8257, 0.37", "-88.8895, -77.0864, -72.7742, 0.37", "-89.7734, -77.839, -71.7973, 0.66", "-90.3701, -78.5468, -71.0738, 0.96", "-91.3475, -79.9828, -69.8146, 1.03", "-92.0302, -81.1019, -68.8983, 0.44", "-92.5964, -81.9818, -68.1585, 0.44", "-92.9542, -82.5339, -67.7014, 0.66", "-93.3642, -83.1317, -67.1928, 0.88", "-93.863, -83.7706, -66.3757, 0.88", "-94.4092, -84.4531, -65.1583, 0.44", "-94.8213, -84.9839, -63.9147, 0.74", "-95.0753, -85.416, -62.766, 0.74", "-95.2238, -85.8941, -61.4011, 1.03", "-95.2711, -87.1478, -57.4698, 0.44", "-95.181, -87.4461, -56.4111, 0.44", "-95.1048, -87.5469, -55.9401, 0.74", "-94.8344, -87.7518, -54.6076, 0.74", "-94.5613, -87.8534, -53.2671, 0.66", "-94.377, -87.8137, -52.4495, 0.52", "-94.1336, -87.6494, -51.5726, 0.52", "-93.7151, -86.8287, -49.4704, 1.03", "-93.5562, -85.8986, -48.1231, 0.22", "-93.6532, -85.0117, -47.5444, 0.22", "-94.2374, -83.1796, -47.0859, 0.22" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-74.4938, -68.8548, -77.8423, 0.29", "-75.4914, -68.0195, -78.4956, 0.29", "-75.9859, -67.6636, -78.6873, 0.29", "-76.3795, -67.3938, -78.7439, 0.66", "-76.8269, -67.0847, -78.7756, 0.66", "-77.4, -66.7077, -78.7977, 0.44", "-77.9626, -66.3376, -78.8195, 0.29", "-79.0943, -65.6662, -78.7931, 0.59", "-80.0528, -65.1123, -78.6725, 1.03", "-80.8276, -64.6644, -78.503, 1.4", "-81.1645, -64.471, -78.3939, 1.4" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "81.3426, -105.947, -6.18293, 0.81", "82.2777, -106.543, -6.60945, 0.81", "82.7707, -106.869, -6.81055, 1.11", "85.3238, -108.5, -7.71626, 0.44", "85.7815, -108.765, -7.85587, 0.29", "86.3451, -109.058, -8.00048, 0.29", "87.3369, -109.542, -8.23267, 0.29", "88.0573, -109.808, -8.4052, 0.59", "88.582, -109.987, -8.61611, 0.74", "89.2162, -110.183, -8.88332, 0.37", "89.942, -110.362, -9.23085, 0.81", "90.3255, -110.433, -9.42209, 0.96", "91.8328, -110.659, -10.2067, 1.4", "94.789, -111.014, -12.0359, 0.74", "95.5902, -111.092, -12.5743, 0.29", "96.3435, -111.154, -13.1006, 0.29", "96.7812, -111.179, -13.4075, 0.66", "98.5333, -111.242, -14.578, 1.69", "101.656, -111.292, -16.4899, 1.18", "103.758, -111.329, -17.6455, 0.74", "104.881, -111.407, -18.2444, 1.47", "105.301, -111.469, -18.4515, 1.47", "106.358, -111.71, -18.9196, 0.29", "107.482, -112.131, -19.2587, 0.29", "108.428, -112.77, -19.3096, 1.11", "109.196, -113.543, -19.2387, 0.29", "109.643, -114.132, -19.1555, 1.25", "109.888, -114.498, -19.1049, 1.25", "110.399, -115.33, -18.9933, 0.15", "110.72, -115.785, -18.9234, 0.59", "110.948, -116.003, -18.8848, 0.59", "111.637, -116.486, -18.8024, 0.22", "112.453, -116.952, -18.7063, 1.84", "113.005, -117.218, -18.6394, 1.84", "114.186, -117.705, -18.4825, 0.22", "114.917, -117.992, -18.3565, 0.59", "115.778, -118.349, -18.174, 0.22", "116.433, -118.653, -18.0068, 0.22", "117.09, -119.039, -17.7889, 0.88", "117.436, -119.281, -17.6525, 1.11", "118.364, -120.034, -17.229, 0.22", "118.832, -120.445, -16.9891, 1.33", "119.085, -120.678, -16.8584, 1.55", "119.765, -121.39, -16.4967, 0.22", "120.192, -121.889, -16.2629, 0.66", "120.408, -122.166, -16.1485, 0.66", "120.848, -122.775, -15.9359, 0.22", "121.253, -123.344, -15.7611, 0.44", "121.588, -123.816, -15.6351, 0.22", "121.921, -124.27, -15.532, 0.96", "122.17, -124.623, -15.4315, 1.18", "122.967, -125.817, -15.0355, 0.15", "123.279, -126.294, -14.8488, 0.96", "123.518, -126.627, -14.7287, 0.96", "123.966, -127.222, -14.5331, 0.15", "124.884, -128.425, -14.1856, 0.81", "125.381, -129.022, -14.0498, 0.81", "126.086, -129.78, -13.9198, 0.29", "127.301, -130.934, -13.7828, 0.44", "127.796, -131.339, -13.7507, 0.81", "128.196, -131.599, -13.741, 0.81", "129.233, -132.092, -13.7932, 0.37", "129.937, -132.348, -13.8214, 0.29", "130.685, -132.573, -13.817, 0.59", "131.421, -132.779, -13.7689, 0.44", "132.359, -133.019, -13.696, 0.29", "133.513, -133.302, -13.5756, 0.59", "134.241, -133.469, -13.5244, 0.59", "134.898, -133.606, -13.5106, 0.29", "135.998, -133.806, -13.5139, 0.29", "136.669, -133.921, -13.5307, 0.29", "137.232, -134.023, -13.5204, 0.74", "138.575, -134.257, -13.4244, 0.74", "139.173, -134.372, -13.374, 0.37", "139.551, -134.448, -13.3366, 1.03", "140.086, -134.559, -13.2722, 1.03", "141.174, -134.832, -13.1403, 0.29", "142.754, -135.318, -12.909, 1.11", "143.893, -135.749, -12.6676, 0.44", "144.24, -135.897, -12.6036, 0.22" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "81.3426, -105.947, -6.18293, 0.52", "82.2682, -105.812, -5.50693, 0.52", "82.8792, -105.684, -5.09713, 0.52", "83.5097, -105.529, -4.68847, 0.81", "83.9988, -105.36, -4.40377, 0.81", "84.831, -104.992, -3.96677, 0.29", "85.4739, -104.639, -3.67767, 0.29", "86.0464, -104.185, -3.51708, 0.88", "86.5208, -103.686, -3.44494, 1.11", "87.1103, -102.919, -3.45031, 0.44", "87.569, -102.165, -3.55876, 0.37", "87.9964, -101.302, -3.77853, 0.37", "88.4461, -100.149, -4.1225, 0.66", "88.6759, -99.3969, -4.3675, 1.03", "88.8452, -98.6005, -4.61539, 1.03", "88.984, -97.318, -4.92924, 0.52", "88.9997, -96.831, -5.01004, 0.37", "88.9912, -96.0051, -5.06667, 1.03", "88.98, -95.4985, -5.044, 1.03", "89.0023, -94.379, -4.90616, 0.29", "89.1034, -92.5603, -4.5368, 0.22", "89.1666, -91.9056, -4.35722, 0.66", "89.2415, -91.3492, -4.20054, 0.52", "89.3806, -90.549, -4.01116, 0.37", "89.6209, -89.4728, -3.79204, 0.74", "89.8155, -88.7856, -3.65825, 0.22", "90.0793, -87.9486, -3.48494, 0.88", "90.1918, -87.5228, -3.39461, 0.88", "90.451, -86.3268, -3.15367, 0.29", "90.549, -85.7161, -3.04828, 0.44", "90.6122, -85.0839, -2.94948, 0.29", "90.6741, -84.3853, -2.89131, 0.29", "90.7344, -83.3693, -2.89469, 0.81", "90.7662, -82.6328, -2.91847, 1.03", "90.7815, -82.1261, -2.95494, 1.03", "90.7899, -81.5717, -3.02518, 0.22", "90.8023, -80.4768, -3.16746, 0.22", "90.8193, -79.5764, -3.21606, 0.81", "90.8356, -79.1205, -3.1834, 0.81", "90.8613, -78.4428, -3.01039, 0.44", "90.9027, -77.7667, -2.74206, 0.44", "90.9618, -76.8214, -2.27377, 0.96", "90.9936, -75.881, -1.73048, 0.96", "91.0073, -75.2551, -1.36694, 1.11", "91.0322, -74.3629, -0.87864, 0.29", "91.0627, -73.664, -0.50506, 0.81", "91.1271, -72.9059, -0.116295, 0.81", "91.2892, -71.8658, 0.344378, 0.44", "91.4648, -70.8857, 0.69011, 1.11", "91.6048, -70.1943, 0.903412, 1.11", "91.7193, -69.7007, 1.0384, 0.81", "91.8741, -69.1935, 1.19209, 0.52", "92.3154, -68.2002, 1.53966, 0.22", "92.8721, -67.3803, 1.87398, 0.22", "93.3694, -66.9284, 2.11459, 0.59", "93.5802, -66.815, 2.19633, 0.59", "94.8734, -66.3859, 2.59876, 0.52", "95.6534, -66.2409, 2.8182, 0.29", "96.7003, -66.1376, 3.09763, 0.52", "97.7364, -66.0573, 3.34019, 0.44", "98.4437, -65.9937, 3.47907, 0.81", "99.0449, -65.9063, 3.58414, 1.03", "100.155, -65.6335, 3.76496, 0.29", "100.692, -65.4414, 3.88903, 0.29", "101.283, -65.1894, 4.0792, 0.81", "101.681, -65.0156, 4.2423, 0.81", "102.46, -64.7166, 4.61967, 0.52", "103.423, -64.4608, 5.1863, 0.15", "104.139, -64.4101, 5.71194, 0.44", "104.572, -64.4599, 6.15492, 0.74", "104.869, -64.5186, 6.53064, 1.03", "105.163, -64.5745, 6.95119, 1.03", "105.562, -64.6196, 7.60284, 0.88", "106.052, -64.5493, 8.45565, 0.37", "106.832, -64.1119, 9.65935, 0.81", "107.264, -63.7024, 10.2258, 0.81", "107.666, -63.136, 10.7573, 0.29", "107.928, -62.6472, 11.1277, 0.29", "108.279, -61.8759, 11.6278, 0.15", "108.584, -61.2547, 12.0129, 1.03", "108.783, -60.9102, 12.2506, 1.03", "109.625, -59.7277, 13.288, 0.52", "110.102, -59.1971, 13.8884, 0.52", "110.646, -58.7337, 14.571, 0.44", "111.603, -58.1121, 15.7384, 0.88", "112.211, -57.7915, 16.4285, 0.74", "112.838, -57.5353, 17.0421, 0.44", "113.293, -57.4119, 17.4071, 0.37", "113.916, -57.2918, 17.8544, 0.22", "114.465, -57.2366, 18.2123, 0.22", "115.215, -57.1699, 18.6578, 0.44", "115.705, -57.1161, 18.9113, 0.22", "116.364, -57.028, 19.2232, 0.22", "117.035, -56.9473, 19.5044, 0.44", "118.149, -56.8956, 19.9289, 0.29" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-13.1246, 475.777, -54.9507, 0.74", "-13.0858, 477.272, -55.4266, 0.74", "-13.0719, 477.902, -55.6038, 0.52", "-13.0472, 478.524, -55.7569, 0.37", "-13.0114, 479.513, -55.9758, 0.37", "-12.9976, 479.885, -56.0519, 0.59", "-12.9587, 480.677, -56.2033, 0.74", "-12.9292, 481.177, -56.2747, 0.74", "-12.8623, 482.128, -56.4324, 0.37", "-12.8137, 482.822, -56.5555, 0.37", "-12.7327, 484.023, -56.7703, 0.81", "-12.6817, 484.829, -56.9151, 0.96", "-12.6259, 485.648, -57.06, 0.96", "-12.5533, 486.72, -57.2493, 0.66", "-12.5156, 487.348, -57.3598, 0.44", "-12.484, 487.836, -57.4401, 0.44", "-12.4366, 488.757, -57.5798, 0.44", "-12.4088, 489.568, -57.6914, 0.81", "-12.4037, 490.13, -57.7613, 1.03", "-12.4087, 490.715, -57.829, 1.03", "-12.4383, 491.698, -57.9503, 0.74", "-12.4812, 492.465, -58.0493, 0.74", "-12.5782, 493.692, -58.2043, 0.44", "-12.7082, 494.905, -58.3598, 0.44", "-12.7758, 495.491, -58.4463, 1.03", "-12.8403, 496.055, -58.5417, 1.18", "-12.9417, 496.96, -58.7332, 0.52", "-13.03, 497.829, -58.9691, 0.74", "-13.1206, 498.703, -59.2638, 1.11", "-13.2011, 499.507, -59.5702, 0.44", "-13.2772, 500.221, -59.8621, 0.37", "-13.3508, 500.982, -60.1856, 0.37", "-13.4388, 502.052, -60.6452, 0.59", "-13.4884, 502.832, -60.9698, 0.96", "-13.5094, 503.389, -61.1766, 1.18", "-13.5165, 503.902, -61.3349, 1.18", "-13.4945, 505.049, -61.6366, 0.44", "-13.445, 505.85, -61.7953, 0.37", "-13.3849, 506.423, -61.8819, 0.59", "-13.2848, 507.138, -61.9868, 0.44", "-13.1563, 508.007, -62.1372, 0.44", "-13.061, 508.649, -62.2625, 0.74", "-12.9974, 509.128, -62.3648, 0.74", "-12.9588, 509.495, -62.4517, 0.74", "-12.9063, 510.235, -62.6392, 0.37", "-12.8696, 511.145, -62.8773, 1.18", "-12.8611, 511.483, -62.9634, 1.18", "-12.8313, 512.218, -63.131, 0.88", "-12.7801, 512.958, -63.2826, 0.59", "-12.688, 513.925, -63.4516, 0.88", "-12.6155, 514.632, -63.5537, 1.11", "-12.5312, 515.351, -63.638, 1.11", "-12.4047, 516.32, -63.7486, 0.52", "-12.2513, 517.284, -63.8589, 0.44", "-12.1454, 517.824, -63.9212, 0.44" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-13.1246, 475.777, -54.9507, 0.29", "-12.8242, 477.362, -54.2731, 0.29", "-12.5131, 479.089, -53.6413, 0.66", "-12.3321, 480.088, -53.2823, 0.66", "-12.1589, 480.986, -52.9577, 0.37", "-11.85, 482.513, -52.3833, 0.22", "-11.7502, 482.987, -52.1976, 0.66", "-11.5963, 483.607, -51.964, 0.66", "-11.2081, 485.311, -51.3713, 0.37", "-11.0038, 486.343, -51.0158, 0.37", "-10.7792, 487.737, -50.5607, 0.59", "-10.6822, 488.388, -50.3751, 0.37", "-10.5429, 489.391, -50.1145, 0.29", "-10.4168, 490.516, -49.8607, 0.74", "-10.3695, 491.137, -49.7497, 0.96", "-10.3173, 491.957, -49.6083, 0.52", "-10.2679, 493.115, -49.4035, 0.44", "-10.2052, 494.188, -49.1906, 0.29", "-10.0721, 495.612, -48.857, 0.29", "-9.95498, 496.51, -48.5984, 0.66", "-9.79767, 497.456, -48.3037, 0.81", "-9.47299, 499.039, -47.8061, 0.29", "-8.98111, 501.03, -47.1933, 0.29", "-8.58582, 502.405, -46.7962, 0.29", "-8.21479, 503.597, -46.501, 0.88", "-7.9335, 504.501, -46.3222, 0.88", "-7.60465, 505.568, -46.1582, 0.29", "-7.19851, 506.892, -46.0633, 0.29", "-7.08587, 507.306, -46.0675, 0.52", "-6.70983, 508.774, -46.1773, 0.22", "-6.47019, 509.653, -46.3064, 0.52", "-6.22352, 510.46, -46.4544, 0.52", "-5.48154, 512.57, -46.919, 0.44", "-5.04185, 513.689, -47.2087, 0.96", "-4.75825, 514.343, -47.3997, 0.96", "-4.06279, 515.791, -47.8548, 0.29", "-3.4559, 516.97, -48.2493, 0.22", "-2.88409, 518.031, -48.6067, 0.81", "-2.18678, 519.265, -49.0009, 0.29", "-1.63438, 520.232, -49.2911, 0.29", "-1.12326, 521.13, -49.531, 0.66", "-0.906596, 521.503, -49.6097, 0.81", "-0.236563, 522.648, -49.8012, 0.29", "0.18205, 523.373, -49.8857, 0.29", "0.485153, 523.91, -49.9226, 0.81", "0.791725, 524.489, -49.9477, 0.81", "1.35434, 525.679, -50.0081, 0.29", "1.97192, 527.161, -50.0908, 0.29", "2.37592, 528.261, -50.1578, 0.88", "2.57176, 528.85, -50.2014, 1.03", "2.86237, 529.771, -50.2815, 0.74", "3.64342, 532.374, -50.5314, 0.22", "3.94189, 533.373, -50.6408, 0.96", "4.20432, 534.167, -50.7313, 1.11", "4.77946, 535.83, -50.9132, 0.29", "5.10997, 536.742, -51.0075, 0.59", "5.36085, 537.415, -51.0458, 0.59", "5.76684, 538.461, -51.0542, 0.59", "6.29989, 539.792, -50.9984, 0.29", "6.70298, 540.764, -50.9156, 0.44", "7.30821, 542.29, -50.6607, 0.29", "7.90439, 543.899, -50.3136, 0.81", "8.0702, 544.35, -50.2022, 0.81", "8.27818, 544.938, -50.0441, 1.03", "8.60587, 545.858, -49.7917, 0.37", "9.2064, 547.434, -49.3594, 0.29", "9.53732, 548.302, -49.1548, 0.29", "10.141, 549.967, -48.8516, 0.29", "10.4112, 550.817, -48.752, 0.81", "10.8551, 552.485, -48.5998, 0.37", "11.1934, 553.818, -48.4444, 0.29", "11.5722, 555.128, -48.2764, 1.11", "11.8165, 555.967, -48.1136, 0.66", "12.2474, 557.601, -47.611, 0.29", "12.6366, 559.079, -46.9587, 0.29", "13.0918, 560.666, -46.0056, 0.29", "13.4388, 561.552, -45.343, 0.29", "13.7603, 562.287, -44.7232, 0.29", "14.2031, 563.316, -43.7936, 0.81", "14.4288, 563.9, -43.2122, 1.11", "14.6871, 564.659, -42.5139, 0.88", "15.3215, 566.909, -40.7614, 0.29", "15.5793, 567.814, -40.1282, 0.29", "15.8786, 568.799, -39.53, 0.74", "16.2895, 570.293, -38.7438, 0.29", "16.573, 571.561, -38.1256, 0.29", "16.8367, 572.981, -37.4886, 0.66", "16.9408, 573.626, -37.257, 0.88", "17.2946, 575.086, -36.8568, 0.22", "17.5889, 576.056, -36.6914, 0.37", "17.6141, 576.152, -36.6871, 0.37" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-81.1645, -64.471, -78.3939, 0.22", "-82.5023, -64.2134, -79.126, 0.22", "-83.0711, -64.1445, -79.4255, 0.22", "-83.9095, -64.1018, -79.8505, 0.37", "-84.7644, -64.1002, -80.2722, 0.22", "-85.8446, -64.141, -80.7937, 0.22", "-86.9819, -64.205, -81.3374, 0.81", "-87.5229, -64.2648, -81.5984, 0.81", "-88.245, -64.3852, -81.9483, 0.52", "-88.8802, -64.5279, -82.2612, 0.29", "-89.4071, -64.6607, -82.5261, 0.66", "-90.1478, -64.8526, -82.9375, 0.66", "-90.7182, -64.9817, -83.288, 0.29", "-91.4988, -65.1469, -83.8143, 0.29", "-92.2504, -65.2856, -84.3711, 0.96", "-92.9329, -65.4256, -84.9788, 1.03", "-93.8442, -65.6395, -85.8908, 0.22", "-94.0704, -65.702, -86.1372, 0.22", "-94.4922, -65.8383, -86.6125, 0.88", "-94.8489, -65.9936, -87.0255, 0.88", "-95.7838, -66.5179, -88.1769, 0.22", "-96.2465, -66.8449, -88.8101, 0.22", "-96.6447, -67.1795, -89.3666, 0.22", "-96.9838, -67.5163, -89.8436, 0.88", "-97.3403, -67.9832, -90.3608, 1.11", "-97.699, -68.6561, -90.9428, 0.88", "-98.0852, -69.7808, -91.668, 0.29", "-98.2524, -70.7274, -92.1634, 1.18", "-98.3069, -71.2429, -92.412, 1.33", "-98.3568, -72.4854, -92.9703, 0.29", "-98.3285, -73.4378, -93.3283, 0.22", "-98.2591, -74.3028, -93.5296, 0.22", "-98.0852, -75.4444, -93.6323, 0.96" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-81.1645, -64.471, -78.3939, 0.66", "-83.0946, -64.0597, -76.7089, 0.66", "-83.6964, -63.8739, -76.1578, 0.66", "-84.4137, -63.5754, -75.4748, 0.81", "-85.033, -63.2808, -74.9041, 0.81", "-86.5637, -62.5552, -73.5902, 0.96", "-87.7917, -61.9886, -72.6112, 1.33", "-88.5598, -61.5843, -72.0877, 0.44", "-89.2434, -61.2004, -71.6758, 0.44", "-89.8831, -60.8193, -71.3992, 0.37", "-90.8655, -60.2034, -71.2544, 0.37", "-91.2833, -59.9658, -71.3463, 0.37", "-92.0205, -59.5942, -71.6453, 0.29", "-92.8052, -59.25, -71.987, 0.66", "-93.4062, -59.0092, -72.1788, 0.88", "-94.1289, -58.7506, -72.3236, 0.88", "-95.1679, -58.4803, -72.3879, 0.66", "-95.8114, -58.4075, -72.2946, 0.66", "-96.6508, -58.4004, -72.0359, 0.81", "-98.7581, -58.48, -71.137, 0.81", "-99.6705, -58.5108, -70.6412, 0.59", "-100.661, -58.5027, -69.9962, 0.44", "-101.679, -58.4, -69.2419, 0.44", "-102.246, -58.2711, -68.8099, 0.37", "-102.864, -58.0035, -68.38, 0.37", "-103.587, -57.4388, -68.0073, 0.66", "-104.136, -56.8775, -67.8432, 0.66", "-104.761, -56.1837, -67.8508, 0.44", "-105.266, -55.6984, -68.0114, 0.66", "-105.752, -55.371, -68.2581, 0.66", "-106.476, -55.0596, -68.6781, 0.66", "-108.16, -54.6154, -69.6621, 0.37", "-108.813, -54.5066, -70.0201, 0.66", "-109.765, -54.4158, -70.5142, 0.66", "-110.557, -54.3927, -70.8769, 0.44", "-111.303, -54.4122, -71.1647, 0.37", "-111.899, -54.4554, -71.3065, 0.59", "-112.851, -54.5431, -71.38, 0.44", "-113.521, -54.6141, -71.3995, 0.37", "-114.41, -54.7133, -71.3729, 0.37", "-115.557, -54.8632, -71.3055, 0.37", "-117.064, -55.0776, -71.1814, 0.37", "-118.114, -55.2266, -71.0708, 0.29", "-118.68, -55.2938, -71.0087, 0.52", "-119.883, -55.3582, -70.8897, 0.29", "-120.883, -55.3713, -70.78, 0.37", "-121.52, -55.3456, -70.7213, 0.37", "-122.177, -55.2677, -70.7316, 0.96", "-123.005, -55.0945, -70.801, 0.66", "-123.538, -54.9306, -70.865, 0.44" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-12.1454, 517.824, -63.9212, 0.52", "-12.0937, 519.049, -64.1249, 0.52", "-12.0695, 519.998, -64.2721, 1.03", "-12.058, 520.767, -64.3865, 1.03", "-12.0518, 522.251, -64.6138, 1.11", "-12.0335, 523.967, -64.8652, 0.29", "-12.0072, 525.553, -65.1067, 0.29", "-11.9738, 527.037, -65.3577, 0.96", "-11.9541, 527.716, -65.4625, 1.11", "-11.9057, 529.271, -65.6696, 0.66", "-11.8686, 531.012, -65.8583, 0.52", "-11.8572, 532.561, -65.985, 0.52", "-11.8505, 534.175, -66.0786, 0.52", "-11.8574, 535.389, -66.1121, 0.81", "-11.8919, 537.379, -66.1305, 1.11", "-11.9202, 538.484, -66.1198, 1.33", "-12.0295, 541.271, -66.0753, 0.44", "-12.0864, 542.557, -66.0488, 0.44", "-12.1706, 544.782, -66.0263, 0.37", "-12.2027, 546.12, -66.0346, 0.96", "-12.2071, 547.533, -66.0807, 1.25", "-12.1853, 548.469, -66.1358, 1.25", "-12.1239, 549.487, -66.2238, 1.03", "-12.0567, 550.271, -66.3051, 0.74", "-11.9402, 551.395, -66.4304, 0.52", "-11.8418, 552.43, -66.5291, 0.37", "-11.7452, 553.529, -66.621, 0.37", "-11.6363, 554.951, -66.7116, 0.37", "-11.5273, 556.764, -66.8089, 0.66", "-11.4862, 557.77, -66.8553, 0.66", "-11.4293, 559.457, -66.9458, 0.66", "-11.3892, 560.91, -67.023, 0.29", "-11.357, 562.208, -67.1057, 0.29", "-11.3397, 563.119, -67.1692, 0.81", "-11.3151, 564.723, -67.2989, 1.03", "-11.3011, 566.02, -67.4109, 1.18", "-11.292, 567.004, -67.5048, 0.81", "-11.2905, 568.355, -67.6491, 0.29", "-11.2912, 569.551, -67.7787, 0.29", "-11.2891, 570.769, -67.9117, 0.96", "-11.2902, 572.155, -68.0598, 1.11", "-11.2786, 573.196, -68.1647, 1.11", "-11.2312, 574.906, -68.3431, 0.74", "-11.1678, 576.382, -68.4867, 0.44", "-11.0762, 577.867, -68.6211, 0.88", "-10.9998, 578.941, -68.7095, 0.88", "-10.8733, 580.466, -68.8373, 0.52", "-10.7202, 582.075, -68.9772, 0.52", "-10.5481, 583.687, -69.1215, 0.52", "-10.3843, 585.381, -69.2753, 0.52", "-10.2792, 586.772, -69.3959, 1.11", "-10.2353, 587.484, -69.4596, 1.11", "-10.1832, 588.822, -69.5756, 0.81", "-10.1285, 590.631, -69.7354, 0.29", "-10.0959, 592.346, -69.8944, 0.29", "-10.0898, 593.344, -69.9853, 0.96", "-10.0973, 594.478, -70.0723, 1.11", "-10.1386, 595.674, -70.1372, 1.4" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-12.1454, 517.824, -63.9212, 0.44", "-11.1681, 516.875, -63.7502, 0.44", "-10.4891, 516.216, -63.6314, 0.37", "-9.39692, 515.155, -63.4403, 0.29", "-8.87493, 514.648, -63.349, 0.29" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-123.538, -54.9306, -70.865, 0.22", "-122.745, -54.0314, -70.333, 0.22", "-122.184, -53.3937, -69.9558, 0.22", "-121.627, -52.7614, -69.5818, 0.59", "-121.249, -52.333, -69.3283, 0.59", "-120.754, -51.7712, -68.996, 0.29" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-123.538, -54.9306, -70.865, 0.37", "-124.59, -53.9962, -70.7881, 0.37", "-125.445, -53.3015, -70.757, 0.37", "-126.327, -52.6448, -70.7549, 0.22", "-127.273, -51.9412, -70.7527, 0.22", "-127.952, -51.4352, -70.7511, 0.22", "-128.681, -50.8925, -70.7494, 0.22", "-128.931, -50.7309, -70.7581, 0.52", "-129.497, -50.4309, -70.8079, 0.66" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-10.1386, 595.674, -70.1372, 0.22", "-9.90808, 597.75, -72.2688, 0.22", "-9.9327, 598.123, -72.6439, 0.29", "-10.0808, 598.775, -73.316, 0.29", "-10.1866, 598.969, -73.5535, 0.66", "-10.4123, 599.24, -73.928, 0.66", "-10.7147, 599.578, -74.3836, 0.29", "-11.2561, 599.978, -74.8394, 0.88", "-11.5088, 600.163, -75.0376, 0.88", "-12.345, 600.794, -75.6598, 0.29", "-12.6658, 601.083, -75.8935, 0.29", "-13.0606, 601.571, -76.1738, 0.29", "-13.4014, 602.209, -76.463, 0.66", "-13.6538, 602.831, -76.7147, 0.22", "-13.8351, 603.331, -76.9023, 0.22", "-14.0298, 603.847, -77.086, 0.22", "-14.4287, 604.759, -77.4256, 0.96", "-14.9724, 605.785, -77.8621, 1.33", "-15.633, 606.875, -78.3856, 0.29", "-15.839, 607.205, -78.5528, 0.29", "-16.2976, 607.896, -78.9152, 0.29", "-16.6888, 608.419, -79.209, 0.29", "-17.1615, 608.908, -79.5037, 0.96", "-17.4551, 609.127, -79.6226, 1.11" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-10.1386, 595.674, -70.1372, 0.29", "-10.0618, 596.598, -70.1333, 0.29", "-10.0046, 597.295, -70.1299, 0.29", "-9.93483, 598.286, -70.1247, 0.29", "-9.88519, 599.122, -70.12, 0.74", "-9.85612, 599.712, -70.1166, 1.03", "-9.83919, 600.121, -70.1142, 1.03", "-9.80283, 601.121, -70.1057, 0.29", "-9.76165, 602.02, -70.1003, 0.29", "-9.73779, 602.467, -70.0967, 0.96", "-9.71127, 602.915, -70.0925, 1.18", "-9.67035, 603.611, -70.0881, 0.59", "-9.62886, 604.269, -70.0808, 0.37", "-9.55737, 605.226, -70.0665, 0.37", "-9.48797, 606.002, -70.0525, 0.29", "-9.39906, 607.031, -70.032, 0.29", "-9.34655, 607.761, -70.0123, 0.88", "-9.33053, 608.049, -70.0039, 1.03", "-9.31604, 608.523, -69.9903, 1.03", "-9.3066, 609.151, -69.9734, 1.03", "-9.29421, 610.007, -69.9535, 0.44", "-9.27166, 610.831, -69.9365, 0.74", "-9.26415, 611.098, -69.9322, 0.74", "-9.24889, 611.752, -69.9287, 0.44", "-9.24447, 612.137, -69.9274, 0.37", "-9.23373, 612.596, -69.9271, 0.74", "-9.2122, 612.98, -69.9282, 0.96", "-9.1564, 613.635, -69.9401, 0.29", "-9.11663, 614.01, -69.9452, 0.29", "-9.04528, 614.577, -69.9529, 0.81", "-9.01509, 614.782, -69.9559, 0.81", "-8.95135, 615.189, -69.9658, 0.37", "-8.86748, 615.81, -69.9818, 0.37", "-8.81889, 616.219, -69.9944, 1.03", "-8.79379, 616.581, -70.0068, 1.03", "-8.77243, 617.293, -70.0315, 1.03", "-8.78028, 617.955, -70.055, 0.37", "-8.82778, 618.855, -70.0793, 0.29", "-8.87057, 619.35, -70.0878, 0.29", "-8.94448, 620.022, -70.0915, 0.88", "-8.99589, 620.431, -70.0877, 1.25", "-9.04929, 620.793, -70.077, 1.25", "-9.13112, 621.368, -70.0485, 0.74", "-9.19325, 621.856, -70.0193, 0.74", "-9.29657, 622.749, -69.9576, 1.25", "-9.34344, 623.239, -69.9248, 1.25", "-9.38226, 623.67, -69.8997, 0.52", "-9.42896, 624.242, -69.871, 0.29", "-9.46369, 624.693, -69.8543, 0.52", "-9.49628, 625.14, -69.8415, 0.81", "-9.57919, 626.242, -69.8236, 0.37", "-9.6441, 627.057, -69.8136, 0.37", "-9.66042, 627.264, -69.812, 1.03", "-9.69602, 627.677, -69.8088, 1.4", "-9.72091, 627.956, -69.8066, 1.4", "-9.78374, 628.733, -69.8006, 0.52", "-9.83189, 629.387, -69.7957, 0.52", "-9.87228, 630.045, -69.7908, 0.81", "-9.89448, 630.532, -69.7872, 0.81", "-9.90983, 631.023, -69.7838, 0.81", "-9.92243, 631.62, -69.7796, 0.44", "-9.92481, 632.027, -69.7769, 0.44", "-9.92052, 632.638, -69.7729, 0.81", "-9.9135, 633.267, -69.7688, 0.88", "-9.89853, 633.956, -69.7644, 1.18", "-9.88447, 634.57, -69.7605, 1.4", "-9.87789, 634.866, -69.7586, 1.4", "-9.86392, 635.309, -69.7595, 0.88", "-9.81258, 636.452, -69.7706, 0.37", "-9.77888, 637.042, -69.7801, 0.37", "-9.74978, 637.45, -69.7888, 0.66", "-9.7154, 637.856, -69.7977, 0.96", "-9.66867, 638.345, -69.8073, 0.37", "-9.6285, 638.732, -69.8146, 0.74", "-9.55521, 639.395, -69.8359, 0.37", "-9.49505, 639.973, -69.8576, 0.81", "-9.44315, 640.503, -69.8815, 1.03", "-9.35296, 641.541, -69.9491, 0.22", "-9.29609, 642.264, -70.0053, 0.22", "-9.23274, 643.106, -70.0824, 0.22", "-9.17816, 643.882, -70.168, 1.25", "-9.15301, 644.263, -70.2185, 1.33", "-9.11591, 644.909, -70.3149, 0.44", "-9.08681, 645.455, -70.4124, 0.44", "-9.04214, 646.124, -70.5425, 0.44", "-8.9991, 646.659, -70.6512, 0.37", "-8.93215, 647.449, -70.8128, 0.37", "-8.894, 647.853, -70.8878, 0.37", "-8.83983, 648.446, -70.9855, 0.74", "-8.80458, 648.885, -71.0542, 1.03", "-8.77172, 649.346, -71.1159, 0.74", "-8.74528, 649.723, -71.1518, 0.29", "-8.70732, 650.289, -71.1849, 0.29", "-8.68825, 650.614, -71.1941, 0.66", "-8.66354, 651.071, -71.1953, 0.66", "-8.6351, 651.725, -71.1961, 0.22", "-8.61353, 652.217, -71.1932, 0.52", "-8.59561, 652.561, -71.1916, 0.52", "-8.52986, 653.75, -71.1787, 0.22", "-8.47767, 654.421, -71.16, 0.59", "-8.45513, 654.666, -71.1495, 0.59", "-8.38925, 655.284, -71.1137, 0.22", "-8.34344, 655.683, -71.0878, 0.81", "-8.308, 655.973, -71.0675, 0.81", "-8.20233, 656.74, -71.0144, 0.22", "-8.15576, 657.059, -70.9946, 0.59", "-8.1267, 657.237, -70.9859, 0.59", "-7.93527, 658.425, -70.9483, 0.22", "-7.8817, 658.798, -70.9407, 0.22", "-7.80107, 659.442, -70.9367, 0.74", "-7.77327, 659.746, -70.9381, 0.81", "-7.74163, 660.192, -70.9385, 0.81", "-7.70102, 660.964, -70.936, 0.22", "-7.67177, 661.739, -70.9304, 0.22", "-7.6595, 662.227, -70.9251, 0.22", "-7.65343, 662.845, -70.9161, 0.81", "-7.65263, 663.012, -70.9132, 0.81", "-7.63777, 664.029, -70.901, 0.22", "-7.63574, 664.08, -70.9009, 0.52", "-7.55186, 665.235, -70.9166, 0.29", "-7.48779, 665.884, -70.933, 0.88", "-7.44286, 666.254, -70.9471, 0.88", "-7.35962, 666.922, -70.9776, 0.22", "-7.3114, 667.348, -70.9987, 0.22", "-7.25197, 667.846, -71.0226, 0.96", "-7.22582, 668.051, -71.0318, 0.96", "-7.11632, 668.875, -71.0631, 0.22", "-7.0591, 669.363, -71.076, 0.22", "-6.98467, 670.013, -71.0825, 0.88", "-6.91282, 670.668, -71.0824, 0.22", "-6.84677, 671.326, -71.0789, 0.88", "-6.82402, 671.53, -71.0778, 0.88", "-6.73783, 672.214, -71.0744, 0.22", "-6.66162, 672.715, -71.072, 0.96" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-17.4551, 609.127, -79.6226, 0.37", "-17.9891, 610.399, -80.1703, 0.37", "-18.1593, 610.826, -80.3547, 0.59", "-18.4397, 611.619, -80.676, 0.59", "-18.6423, 612.296, -80.9367, 0.29", "-18.9613, 613.465, -81.397, 0.29", "-19.1259, 614.102, -81.6578, 0.29", "-19.2461, 614.662, -81.9269, 0.52", "-19.3328, 615.201, -82.2191, 0.22", "-19.4152, 615.875, -82.6352, 0.52", "-19.5146, 616.6, -83.1088, 0.81", "-19.5984, 617.117, -83.4291, 0.81", "-19.8768, 618.397, -84.2036, 0.22", "-20.0527, 619.037, -84.583, 0.81", "-20.2899, 619.728, -84.9734, 0.81", "-20.6059, 620.511, -85.3657, 0.29", "-21.092, 621.61, -85.8674, 0.29", "-21.467, 622.381, -86.221, 0.81", "-21.7719, 622.942, -86.5011, 1.11", "-22.0372, 623.445, -86.7937, 0.74", "-22.3568, 624.129, -87.2216, 0.29", "-22.7665, 625.081, -87.8651, 0.29", "-23.0933, 625.864, -88.403, 0.29", "-23.5044, 626.953, -89.1252, 1.03", "-23.8235, 627.863, -89.6937, 1.18", "-24.3532, 629.469, -90.641, 0.29", "-24.5442, 630.1, -90.9855, 0.29", "-24.8198, 631.122, -91.4913, 1.55", "-24.9581, 631.671, -91.7485, 1.33", "-25.169, 632.446, -92.1106, 0.81", "-25.4171, 633.26, -92.5164, 0.52", "-25.7992, 634.453, -93.1522, 0.29", "-26.1205, 635.474, -93.7091, 0.52", "-26.2355, 635.863, -93.9155, 0.81", "-26.6812, 637.475, -94.7143, 0.22", "-26.9453, 638.595, -95.2207, 0.22", "-27.0685, 639.199, -95.4458, 0.66", "-27.1647, 639.864, -95.6536, 0.66", "-27.2641, 641.149, -95.9983, 0.22", "-27.2575, 641.733, -96.1657, 0.52", "-27.2228, 642.238, -96.3266, 0.52", "-27.1774, 643.324, -96.7168, 0.29", "-27.1765, 644.466, -97.1739, 0.96", "-27.2073, 645.046, -97.4234, 0.96", "-27.3531, 646.831, -98.2625, 0.22", "-27.4968, 648.095, -98.8901, 0.96", "-27.6326, 648.968, -99.3509, 0.22", "-27.7237, 649.376, -99.5861, 0.59", "-27.8749, 649.827, -99.8425, 0.59" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-17.4551, 609.127, -79.6226, 0.15", "-18.6897, 608.715, -80.3905, 0.15", "-19.0594, 608.602, -80.6039, 0.52", "-19.3023, 608.53, -80.7395, 0.66", "-20.1791, 608.272, -81.2208, 0.22", "-20.9698, 608.032, -81.6412, 0.22", "-21.3028, 607.927, -81.8054, 0.59", "-21.8094, 607.79, -82.0393, 0.66", "-22.7176, 607.539, -82.4274, 0.29", "-23.0492, 607.445, -82.5565, 0.81", "-23.713, 607.242, -82.8038, 0.96", "-24.464, 606.999, -83.0952, 0.15", "-25.2271, 606.739, -83.4134, 0.15", "-25.9667, 606.482, -83.7342, 0.15", "-26.5797, 606.265, -84.0018, 0.88", "-27.0241, 606.089, -84.2009, 0.88", "-28.2469, 605.593, -84.7737, 0.22", "-28.7157, 605.392, -85.0059, 0.74", "-29.3591, 605.087, -85.3254, 0.74", "-30.1021, 604.697, -85.7031, 0.29", "-30.7356, 604.338, -86.0202, 0.29" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_54", "dend_27", "dend_0", "dend_56", "dend_55", "dend_29", "dend_28", "dend_6", "dend_1", "dend_37", "dend_30", "dend_12", "dend_7", "dend_3", "dend_2", "dend_49", "dend_38", "dend_32", "dend_31", "dend_16", "dend_13", "dend_11", "dend_8", "dend_5", "dend_4", "dend_51", "dend_50", "dend_46", "dend_39", "dend_36", "dend_33", "dend_26", "dend_17", "dend_15", "dend_14", "dend_10", "dend_9", "dend_53", "dend_52", "dend_48", "dend_47", "dend_45", "dend_40", "dend_35", "dend_34", "dend_19", "dend_18", "dend_44", "dend_41", "dend_21", "dend_20", "dend_43", "dend_42", "dend_23", "dend_22", "dend_25", "dend_24" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_54", "dend_27", "dend_0", "dend_56", "dend_55", "dend_29", "dend_28", "dend_6", "dend_1", "dend_37", "dend_30", "dend_12", "dend_7", "dend_3", "dend_2", "dend_49", "dend_38", "dend_32", "dend_31", "dend_16", "dend_13", "dend_11", "dend_8", "dend_5", "dend_4", "dend_51", "dend_50", "dend_46", "dend_39", "dend_36", "dend_33", "dend_26", "dend_17", "dend_15", "dend_14", "dend_10", "dend_9", "dend_53", "dend_52", "dend_48", "dend_47", "dend_45", "dend_40", "dend_35", "dend_34", "dend_19", "dend_18", "dend_44", "dend_41", "dend_21", "dend_20", "dend_43", "dend_42", "dend_23", "dend_22", "dend_25", "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L6_SBC_d20c9b88b4_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_54, id: dend_54, parent: soma_0
create dend_54
public dend_54
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_37, id: dend_37, parent: dend_29
create dend_37
public dend_37
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_12, id: dend_12, parent: dend_6
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_49, id: dend_49, parent: dend_37
create dend_49
public dend_49
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_46, id: dend_46, parent: dend_38
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_32
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_26, id: dend_26, parent: dend_16
create dend_26
public dend_26
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_45, id: dend_45, parent: dend_39
create dend_45
public dend_45
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_44, id: dend_44, parent: dend_40
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_54, dend_27, dend_0, dend_56, dend_55, dend_29, dend_28, dend_6, dend_1, dend_37, dend_30, dend_12, dend_7, dend_3, dend_2, dend_49, dend_38, dend_32, dend_31, dend_16, dend_13, dend_11, dend_8, dend_5, dend_4, dend_51, dend_50, dend_46, dend_39, dend_36, dend_33, dend_26, dend_17, dend_15, dend_14, dend_10, dend_9, dend_53, dend_52, dend_48, dend_47, dend_45, dend_40, dend_35, dend_34, dend_19, dend_18, dend_44, dend_41, dend_21, dend_20, dend_43, dend_42, dend_23, dend_22, dend_25, dend_24]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_54, dend_27, dend_0, dend_56, dend_55, dend_29, dend_28, dend_6, dend_1, dend_37, dend_30, dend_12, dend_7, dend_3, dend_2, dend_49, dend_38, dend_32, dend_31, dend_16, dend_13, dend_11, dend_8, dend_5, dend_4, dend_51, dend_50, dend_46, dend_39, dend_36, dend_33, dend_26, dend_17, dend_15, dend_14, dend_10, dend_9, dend_53, dend_52, dend_48, dend_47, dend_45, dend_40, dend_35, dend_34, dend_19, dend_18, dend_44, dend_41, dend_21, dend_20, dend_43, dend_42, dend_23, dend_22, dend_25, dend_24]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_60
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_54(0), soma_0(0.49999773444601353)
    connect dend_27(0), soma_0(0.49999773444601353)
    connect dend_0(0), soma_0(0.49999773444601353)
    connect axon_0(0), soma_0(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_37(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_12(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_49(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_46(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_36(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_26(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_45(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_44(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.488402, 10.6886, -0.10439, 2.1741 ) }
    soma_0 { pt3dadd( 0.446743, 9.60874, -0.0969525, 3.70718 ) }
    soma_0 { pt3dadd( 0.405084, 8.52883, -0.0895152, 5.34259 ) }
    soma_0 { pt3dadd( 0.363425, 7.44892, -0.0820778, 6.31081 ) }
    soma_0 { pt3dadd( 0.321766, 6.36901, -0.0746405, 7.2239 ) }
    soma_0 { pt3dadd( 0.280106, 5.2891, -0.0672032, 7.79497 ) }
    soma_0 { pt3dadd( 0.238447, 4.20919, -0.0597659, 8.16787 ) }
    soma_0 { pt3dadd( 0.196788, 3.12928, -0.0523285, 8.65603 ) }
    soma_0 { pt3dadd( 0.155129, 2.04937, -0.0448912, 9.27596 ) }
    soma_0 { pt3dadd( 0.11347, 0.969459, -0.0374539, 9.68183 ) }
    soma_0 { pt3dadd( 0.0718107, -0.110451, -0.0300165, 9.60108 ) }
    soma_0 { pt3dadd( 0.0301515, -1.19036, -0.0225792, 9.40911 ) }
    soma_0 { pt3dadd( -0.0115077, -2.27027, -0.0151419, 8.85229 ) }
    soma_0 { pt3dadd( -0.0531668, -3.35018, -0.00770454, 8.34531 ) }
    soma_0 { pt3dadd( -0.094826, -4.43009, -2.67214E-4, 7.89073 ) }
    soma_0 { pt3dadd( -0.136485, -5.51, 0.00717012, 7.34681 ) }
    soma_0 { pt3dadd( -0.178144, -6.58991, 0.0146074, 6.74183 ) }
    soma_0 { pt3dadd( -0.219803, -7.66982, 0.0220448, 6.06339 ) }
    soma_0 { pt3dadd( -0.261463, -8.74973, 0.0294821, 5.33412 ) }
    soma_0 { pt3dadd( -0.303122, -9.82964, 0.0369194, 3.6506 ) }
    soma_0 { pt3dadd( -0.344781, -10.9096, 0.0443568, 2.18196 ) }
    // Section: dend_54, id: dend_54, parent: soma_0 (entry count 21/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 1.87458, 3.14782, 11.4844, 0.81 ) }
    dend_54 { pt3dadd( 1.40242, 4.09022, 11.4844, 0.81 ) }
    dend_54 { pt3dadd( 0.879858, 5.13323, 11.4844, 0.81 ) }
    dend_54 { pt3dadd( 0.10843, 6.67296, 11.4844, 0.81 ) }
    dend_54 { pt3dadd( -0.495774, 7.87892, 11.4844, 0.81 ) }
    dend_54 { pt3dadd( -1.2242, 9.33282, 11.4844, 1.4 ) }
    dend_54 { pt3dadd( -1.41052, 9.70471, 11.4844, 1.4 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 28/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -1.37542, -9.94143, 0.224411, 4.05 ) }
    dend_27 { pt3dadd( -1.37542, -9.94143, 0.224411, 4.05 ) }
    dend_27 { pt3dadd( -1.83175, -11.5114, 0.233574, 3.61 ) }
    dend_27 { pt3dadd( -2.46432, -13.8079, 0.184341, 2.87 ) }
    dend_27 { pt3dadd( -2.99934, -15.9431, 0.0269322, 2.36 ) }
    dend_27 { pt3dadd( -3.46792, -18.0208, -0.134421, 2.36 ) }
    dend_27 { pt3dadd( -3.91424, -20.2045, -0.282834, 2.65 ) }
    dend_27 { pt3dadd( -4.27757, -22.0697, -0.420814, 2.65 ) }
    dend_27 { pt3dadd( -4.57885, -23.7749, -0.566362, 2.8 ) }
    dend_27 { pt3dadd( -4.97899, -26.4261, -0.826366, 2.43 ) }
    dend_27 { pt3dadd( -5.28217, -28.7793, -1.08845, 2.28 ) }
    dend_27 { pt3dadd( -5.54998, -31.3044, -1.39941, 2.14 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 40/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.565422, 10.6201, -2.89559, 3.17 ) }
    dend_0 { pt3dadd( -0.565422, 10.6201, -2.89559, 3.17 ) }
    dend_0 { pt3dadd( -1.80867, 11.9215, -2.98351, 2.8 ) }
    dend_0 { pt3dadd( -3.02043, 13.1307, -3.06436, 2.8 ) }
    dend_0 { pt3dadd( -4.11493, 14.2, -3.13269, 2.8 ) }
    dend_0 { pt3dadd( -5.51243, 15.5804, -3.20629, 2.8 ) }
    dend_0 { pt3dadd( -6.5778, 16.6936, -3.25557, 2.58 ) }
    dend_0 { pt3dadd( -7.32178, 17.5116, -3.28444, 2.58 ) }
    dend_0 { pt3dadd( -7.95028, 18.2542, -3.30299, 2.36 ) }
    dend_0 { pt3dadd( -8.51536, 19.046, -3.31128, 1.92 ) }
    dend_0 { pt3dadd( -9.21909, 20.4253, -3.31305, 1.92 ) }
    dend_0 { pt3dadd( -9.60982, 21.8129, -3.30199, 1.92 ) }
    dend_0 { pt3dadd( -9.75278, 23.0429, -3.29451, 1.92 ) }
    dend_0 { pt3dadd( -9.73077, 24.0988, -3.29191, 2.21 ) }
    dend_0 { pt3dadd( -9.57425, 25.2215, -3.35248, 2.21 ) }
    dend_0 { pt3dadd( -9.35103, 26.155, -3.45051, 1.84 ) }
    dend_0 { pt3dadd( -8.92175, 27.5087, -3.65563, 1.84 ) }
    dend_0 { pt3dadd( -8.61777, 28.3811, -3.81417, 1.84 ) }
    dend_0 { pt3dadd( -8.27053, 29.3596, -4.03564, 1.84 ) }
    dend_0 { pt3dadd( -7.64077, 31.2547, -4.54791, 1.69 ) }
    dend_0 { pt3dadd( -7.41896, 32.0334, -4.78677, 1.69 ) }
    dend_0 { pt3dadd( -7.14153, 33.2026, -5.23745, 1.69 ) }
    dend_0 { pt3dadd( -6.9527, 34.2835, -5.73413, 1.84 ) }
    dend_0 { pt3dadd( -6.83736, 35.2054, -6.2015, 1.99 ) }
    dend_0 { pt3dadd( -6.78001, 36.1027, -6.67944, 1.99 ) }
    dend_0 { pt3dadd( -6.74477, 37.1154, -7.22516, 1.99 ) }
    dend_0 { pt3dadd( -6.7306, 38.6221, -8.13063, 2.14 ) }
    dend_0 { pt3dadd( -6.74481, 39.4168, -8.67394, 2.14 ) }
    dend_0 { pt3dadd( -6.77673, 40.1263, -9.20755, 2.14 ) }
    dend_0 { pt3dadd( -6.82539, 40.8328, -9.73947, 2.14 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 70/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.344781, -10.9096, 0.0443568, 0.594742 ) }
    axon_0 { pt3dadd( -0.922998, -25.8985, 0.0443568, 0.594742 ) }
    axon_0 { pt3dadd( -1.50121, -40.8873, 0.0443568, 0.594742 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 73/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -1.41052, 9.70471, 11.4844, 0.81 ) }
    dend_56 { pt3dadd( -2.47499, 12.0859, 10.0584, 0.81 ) }
    dend_56 { pt3dadd( -3.0003, 13.2704, 9.43458, 0.81 ) }
    dend_56 { pt3dadd( -3.42832, 14.1797, 9.00787, 1.03 ) }
    dend_56 { pt3dadd( -3.85205, 15.0146, 8.65296, 1.03 ) }
    dend_56 { pt3dadd( -4.41367, 16.0374, 8.25426, 0.59 ) }
    dend_56 { pt3dadd( -5.00701, 17.038, 7.9008, 0.37 ) }
    dend_56 { pt3dadd( -5.59159, 17.9451, 7.72351, 0.37 ) }
    dend_56 { pt3dadd( -6.14193, 18.7386, 7.57577, 0.59 ) }
    dend_56 { pt3dadd( -6.59805, 19.3845, 7.45075, 0.59 ) }
    dend_56 { pt3dadd( -7.03815, 19.9728, 7.33137, 0.66 ) }
    dend_56 { pt3dadd( -7.65592, 20.7757, 7.10649, 0.59 ) }
    dend_56 { pt3dadd( -8.27752, 21.556, 6.77679, 0.44 ) }
    dend_56 { pt3dadd( -9.03183, 22.5411, 6.16481, 0.44 ) }
    dend_56 { pt3dadd( -9.37589, 23.0309, 5.80465, 0.96 ) }
    dend_56 { pt3dadd( -9.82777, 23.7253, 5.26741, 1.33 ) }
    dend_56 { pt3dadd( -10.2091, 24.3714, 4.76939, 1.55 ) }
    dend_56 { pt3dadd( -10.8235, 25.5296, 3.90278, 1.03 ) }
    dend_56 { pt3dadd( -11.6072, 27.2354, 2.76684, 0.52 ) }
    dend_56 { pt3dadd( -11.7774, 27.7066, 2.50498, 0.88 ) }
    dend_56 { pt3dadd( -12.0434, 28.6766, 2.05509, 0.52 ) }
    dend_56 { pt3dadd( -12.1941, 29.5251, 1.75139, 0.52 ) }
    dend_56 { pt3dadd( -12.272, 30.2613, 1.55825, 0.52 ) }
    dend_56 { pt3dadd( -12.3533, 31.5698, 1.28562, 0.88 ) }
    dend_56 { pt3dadd( -12.4306, 32.9305, 1.01954, 0.74 ) }
    dend_56 { pt3dadd( -12.5139, 33.7185, 0.845814, 0.59 ) }
    dend_56 { pt3dadd( -12.8232, 35.3659, 0.424986, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_56 { pt3dadd( -13.1531, 36.3807, 0.137752, 1.25 ) }
    dend_56 { pt3dadd( -13.6738, 37.4081, -0.193429, 1.4 ) }
    dend_56 { pt3dadd( -14.2182, 38.1104, -0.440758, 1.18 ) }
    dend_56 { pt3dadd( -14.9161, 38.7934, -0.672915, 0.88 ) }
    dend_56 { pt3dadd( -15.8236, 39.5573, -0.925731, 0.66 ) }
    dend_56 { pt3dadd( -16.5113, 40.0686, -1.07917, 0.66 ) }
    dend_56 { pt3dadd( -17.0231, 40.4592, -1.17065, 0.66 ) }
    dend_56 { pt3dadd( -17.7753, 41.1647, -1.25005, 0.59 ) }
    dend_56 { pt3dadd( -18.2457, 41.8231, -1.26261, 0.59 ) }
    dend_56 { pt3dadd( -18.5826, 42.6577, -1.21345, 0.74 ) }
    dend_56 { pt3dadd( -18.6796, 43.0581, -1.16389, 0.88 ) }
    dend_56 { pt3dadd( -18.7823, 43.6033, -1.06665, 0.88 ) }
    dend_56 { pt3dadd( -18.9065, 44.2875, -0.913094, 1.03 ) }
    dend_56 { pt3dadd( -19.0917, 45.0946, -0.704183, 0.66 ) }
    dend_56 { pt3dadd( -19.454, 46.3211, -0.349364, 0.44 ) }
    dend_56 { pt3dadd( -19.7702, 47.2762, -0.0521948, 0.44 ) }
    dend_56 { pt3dadd( -20.0626, 48.1892, 0.156276, 0.59 ) }
    dend_56 { pt3dadd( -20.2042, 48.6891, 0.215738, 0.96 ) }
    dend_56 { pt3dadd( -20.437, 49.8381, 0.233491, 1.18 ) }
    dend_56 { pt3dadd( -20.485, 50.4506, 0.181495, 1.18 ) }
    dend_56 { pt3dadd( -20.436, 51.4491, 0.0096615, 0.74 ) }
    dend_56 { pt3dadd( -20.1502, 53.4228, -0.37612, 0.37 ) }
    dend_56 { pt3dadd( -19.9712, 54.4093, -0.573926, 0.29 ) }
    dend_56 { pt3dadd( -19.7804, 55.4263, -0.763136, 0.29 ) }
    dend_56 { pt3dadd( -19.5874, 56.4936, -0.947236, 0.37 ) }
    dend_56 { pt3dadd( -19.4982, 57.2948, -1.05803, 0.37 ) }
    dend_56 { pt3dadd( -19.5075, 58.4958, -1.13895, 0.29 ) }
    dend_56 { pt3dadd( -19.6419, 59.3545, -1.09244, 0.37 ) }
    dend_56 { pt3dadd( -19.8232, 60.0173, -1.02179, 0.74 ) }
    dend_56 { pt3dadd( -19.9871, 60.469, -0.964443, 0.74 ) }
    dend_56 { pt3dadd( -20.2294, 61.0722, -0.905676, 0.44 ) }
    dend_56 { pt3dadd( -20.5613, 62.0455, -0.854976, 0.66 ) }
    dend_56 { pt3dadd( -20.8186, 63.0005, -0.888681, 1.25 ) }
    dend_56 { pt3dadd( -20.9523, 63.5834, -0.936692, 1.47 ) }
    dend_56 { pt3dadd( -21.101, 64.2324, -1.01195, 1.47 ) }
    dend_56 { pt3dadd( -21.3821, 65.3832, -1.17787, 1.11 ) }
    dend_56 { pt3dadd( -21.7634, 66.8786, -1.4319, 0.29 ) }
    dend_56 { pt3dadd( -22.0547, 67.9616, -1.63491, 0.66 ) }
    dend_56 { pt3dadd( -22.229, 68.5667, -1.76272, 0.52 ) }
    dend_56 { pt3dadd( -22.5405, 69.5322, -2.0076, 0.52 ) }
    dend_56 { pt3dadd( -22.9723, 70.6876, -2.31394, 0.66 ) }
    dend_56 { pt3dadd( -23.5242, 72.0119, -2.64441, 0.88 ) }
    dend_56 { pt3dadd( -23.8267, 72.6497, -2.80141, 1.47 ) }
    dend_56 { pt3dadd( -24.2084, 73.4568, -2.97322, 1.47 ) }
    dend_56 { pt3dadd( -24.6456, 74.4063, -3.16085, 0.74 ) }
    dend_56 { pt3dadd( -25.0853, 75.3007, -3.34715, 0.74 ) }
    dend_56 { pt3dadd( -25.5174, 76.0634, -3.50048, 0.74 ) }
    dend_56 { pt3dadd( -26.0433, 76.8645, -3.64598, 0.37 ) }
    dend_56 { pt3dadd( -26.6888, 77.7865, -3.78255, 0.37 ) }
    dend_56 { pt3dadd( -27.2138, 78.5218, -3.869, 0.29 ) }
    dend_56 { pt3dadd( -27.6959, 79.2235, -3.94863, 0.29 ) }
    dend_56 { pt3dadd( -28.2679, 80.1022, -4.08273, 0.29 ) }
    dend_56 { pt3dadd( -28.5873, 80.6409, -4.18033, 0.29 ) }
    dend_56 { pt3dadd( -28.9973, 81.5287, -4.41362, 0.88 ) }
    dend_56 { pt3dadd( -29.197, 82.1315, -4.60759, 1.47 ) }
    dend_56 { pt3dadd( -29.3168, 82.749, -4.82203, 1.47 ) }
    dend_56 { pt3dadd( -29.3672, 83.2892, -4.99942, 1.47 ) }
    dend_56 { pt3dadd( -29.3739, 84.0759, -5.25087, 1.18 ) }
    dend_56 { pt3dadd( -29.3092, 85.5936, -5.69791, 0.37 ) }
    dend_56 { pt3dadd( -29.2506, 86.4215, -5.89927, 0.37 ) }
    dend_56 { pt3dadd( -29.2223, 87.2499, -6.03333, 0.37 ) }
    dend_56 { pt3dadd( -29.2383, 87.8384, -6.08752, 0.96 ) }
    dend_56 { pt3dadd( -29.3029, 88.5727, -6.10806, 1.03 ) }
    dend_56 { pt3dadd( -29.3675, 88.9861, -6.082, 1.03 ) }
    dend_56 { pt3dadd( -29.6013, 90.1032, -5.95191, 0.37 ) }
    dend_56 { pt3dadd( -29.8632, 91.2007, -5.88209, 0.37 ) }
    dend_56 { pt3dadd( -30.0164, 91.8267, -5.87522, 0.29 ) }
    dend_56 { pt3dadd( -30.1807, 92.5352, -5.99154, 0.29 ) }
    dend_56 { pt3dadd( -30.405, 93.5895, -6.28526, 0.29 ) }
    dend_56 { pt3dadd( -30.5255, 94.3547, -6.57392, 0.29 ) }
    dend_56 { pt3dadd( -30.6556, 95.4023, -7.04358, 1.18 ) }
    dend_56 { pt3dadd( -30.6938, 95.9309, -7.29462, 1.47 ) }
    dend_56 { pt3dadd( -30.7463, 98.2224, -8.47917, 0.22 ) }
    dend_56 { pt3dadd( -30.7432, 98.4691, -8.61814, 0.44 ) }
    dend_56 { pt3dadd( -30.6889, 99.4263, -9.183, 0.66 ) }
    dend_56 { pt3dadd( -30.612, 100.278, -9.66125, 0.22 ) }
    dend_56 { pt3dadd( -30.5196, 101.104, -10.0983, 0.22 ) }
    dend_56 { pt3dadd( -30.3503, 102.568, -10.8446, 0.88 ) }
    dend_56 { pt3dadd( -30.2575, 103.343, -11.2061, 0.88 ) }
    dend_56 { pt3dadd( -30.1883, 104.082, -11.5708, 0.88 ) }
    dend_56 { pt3dadd( -30.1151, 105.348, -12.2574, 0.37 ) }
    dend_56 { pt3dadd( -30.1067, 106.239, -12.8031, 0.37 ) }
    dend_56 { pt3dadd( -30.1418, 106.62, -13.0567, 0.88 ) }
    dend_56 { pt3dadd( -30.2432, 107.139, -13.3975, 0.88 ) }
    dend_56 { pt3dadd( -30.4616, 107.939, -13.9679, 0.52 ) }
    dend_56 { pt3dadd( -30.701, 108.62, -14.4976, 0.29 ) }
    dend_56 { pt3dadd( -30.9975, 109.368, -15.1139, 0.29 ) }
    dend_56 { pt3dadd( -31.3459, 110.219, -15.7926, 1.11 ) }
    dend_56 { pt3dadd( -31.534, 110.784, -16.2368, 1.33 ) }
    dend_56 { pt3dadd( -31.7213, 111.453, -16.7689, 1.55 ) }
    dend_56 { pt3dadd( -31.8813, 112.112, -17.2999, 1.55 ) }
    dend_56 { pt3dadd( -32.0907, 113.076, -18.0898, 0.52 ) }
    dend_56 { pt3dadd( -32.2891, 113.982, -18.8302, 0.44 ) }
    dend_56 { pt3dadd( -32.6558, 115.454, -19.9988, 1.47 ) }
    dend_56 { pt3dadd( -32.8443, 116.165, -20.5226, 1.47 ) }
    dend_56 { pt3dadd( -33.2992, 117.812, -21.6069, 0.44 ) }
    dend_56 { pt3dadd( -33.5507, 118.701, -22.1598, 0.44 ) }
    dend_56 { pt3dadd( -33.8617, 119.828, -22.8323, 0.44 ) }
    dend_56 { pt3dadd( -34.1548, 120.933, -23.4611, 0.37 ) }
    dend_56 { pt3dadd( -34.4394, 121.982, -23.9928, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_56 { pt3dadd( -34.821, 123.702, -24.7134, 1.47 ) }
    dend_56 { pt3dadd( -34.9173, 124.374, -24.9172, 1.77 ) }
    dend_56 { pt3dadd( -35.0613, 126.105, -25.2928, 0.29 ) }
    dend_56 { pt3dadd( -35.0899, 126.941, -25.4192, 1.03 ) }
    dend_56 { pt3dadd( -35.0911, 127.43, -25.4568, 1.03 ) }
    dend_56 { pt3dadd( -35.0826, 129.154, -25.4447, 0.66 ) }
    dend_56 { pt3dadd( -35.0809, 131.255, -25.2306, 0.29 ) }
    dend_56 { pt3dadd( -35.1013, 132.314, -25.0389, 1.03 ) }
    dend_56 { pt3dadd( -35.1219, 132.753, -24.9238, 1.25 ) }
    dend_56 { pt3dadd( -35.2192, 133.892, -24.6004, 0.22 ) }
    dend_56 { pt3dadd( -35.2933, 134.435, -24.4529, 0.44 ) }
    dend_56 { pt3dadd( -35.4948, 135.444, -24.2029, 0.22 ) }
    dend_56 { pt3dadd( -35.6931, 136.23, -23.9797, 0.52 ) }
    dend_56 { pt3dadd( -35.8479, 136.811, -23.81, 0.52 ) }
    dend_56 { pt3dadd( -36.2054, 138.28, -23.3771, 0.22 ) }
    dend_56 { pt3dadd( -36.3711, 139.076, -23.1433, 0.29 ) }
    dend_56 { pt3dadd( -36.5154, 139.889, -22.9075, 0.29 ) }
    dend_56 { pt3dadd( -36.7762, 141.524, -22.449, 1.11 ) }
    dend_56 { pt3dadd( -36.848, 142.073, -22.3156, 1.33 ) }
    dend_56 { pt3dadd( -36.9393, 143.093, -22.0874, 0.29 ) }
    dend_56 { pt3dadd( -36.9806, 144.108, -21.8724, 0.29 ) }
    dend_56 { pt3dadd( -36.98, 144.513, -21.7958, 0.44 ) }
    dend_56 { pt3dadd( -36.9487, 145.64, -21.6247, 0.22 ) }
    dend_56 { pt3dadd( -36.9095, 146.797, -21.4957, 0.66 ) }
    dend_56 { pt3dadd( -36.91, 147.155, -21.4589, 1.18 ) }
    dend_56 { pt3dadd( -36.9414, 147.667, -21.4136, 1.18 ) }
    dend_56 { pt3dadd( -36.9696, 148.075, -21.3788, 0.74 ) }
    dend_56 { pt3dadd( -37.0621, 149.596, -21.2517, 0.22 ) }
    dend_56 { pt3dadd( -37.0909, 150.192, -21.207, 0.66 ) }
    dend_56 { pt3dadd( -37.1862, 151.218, -21.1133, 0.22 ) }
    dend_56 { pt3dadd( -37.2563, 151.721, -21.0631, 0.52 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 31/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -1.41052, 9.70471, 11.4844, 0.44 ) }
    dend_55 { pt3dadd( -0.516006, 10.8748, 10.8241, 0.44 ) }
    dend_55 { pt3dadd( -0.0530794, 11.5355, 10.4606, 0.44 ) }
    dend_55 { pt3dadd( 0.497356, 12.3403, 10.0351, 0.96 ) }
    dend_55 { pt3dadd( 0.87286, 12.8607, 9.76806, 0.96 ) }
    dend_55 { pt3dadd( 1.87527, 14.2982, 9.15953, 0.52 ) }
    dend_55 { pt3dadd( 2.21434, 14.834, 8.99364, 0.52 ) }
    dend_55 { pt3dadd( 2.49092, 15.3413, 8.85613, 0.66 ) }
    dend_55 { pt3dadd( 2.76178, 16.0689, 8.77851, 0.37 ) }
    dend_55 { pt3dadd( 2.90049, 16.6316, 8.87384, 0.37 ) }
    dend_55 { pt3dadd( 3.19268, 17.7594, 9.23919, 0.37 ) }
    dend_55 { pt3dadd( 3.50165, 18.7997, 9.65808, 0.59 ) }
    dend_55 { pt3dadd( 3.70395, 19.3932, 9.87939, 0.81 ) }
    dend_55 { pt3dadd( 3.9158, 19.9754, 10.083, 0.81 ) }
    dend_55 { pt3dadd( 4.4529, 21.5046, 10.6288, 0.29 ) }
    dend_55 { pt3dadd( 4.85842, 22.6389, 10.9727, 0.29 ) }
    dend_55 { pt3dadd( 5.21304, 23.5367, 11.2088, 0.29 ) }
    dend_55 { pt3dadd( 5.54678, 24.2646, 11.3806, 0.29 ) }
    dend_55 { pt3dadd( 5.87266, 24.9212, 11.5343, 0.88 ) }
    dend_55 { pt3dadd( 6.29347, 25.7613, 11.7084, 0.88 ) }
    dend_55 { pt3dadd( 6.5396, 26.4749, 11.834, 0.52 ) }
    dend_55 { pt3dadd( 6.64375, 27.2673, 12.0586, 0.37 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 53/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -5.54998, -31.3044, -1.39941, 1.77 ) }
    dend_29 { pt3dadd( -5.20217, -32.952, -1.24214, 1.77 ) }
    dend_29 { pt3dadd( -5.01431, -33.771, -1.10521, 1.77 ) }
    dend_29 { pt3dadd( -4.68719, -34.675, -1.1439, 1.77 ) }
    dend_29 { pt3dadd( -4.17164, -35.6603, -1.34948, 1.77 ) }
    dend_29 { pt3dadd( -3.57659, -36.7975, -1.58676, 1.92 ) }
    dend_29 { pt3dadd( -3.12103, -37.6681, -1.76842, 2.14 ) }
    dend_29 { pt3dadd( -2.42009, -38.7729, -2.03996, 2.36 ) }
    dend_29 { pt3dadd( -0.185841, -41.7815, -3.20009, 1.77 ) }
    dend_29 { pt3dadd( 0.723259, -42.7783, -3.82106, 1.55 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 63/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -5.54998, -31.3044, -1.39941, 0.81 ) }
    dend_28 { pt3dadd( -5.00352, -32.137, -0.899303, 0.81 ) }
    dend_28 { pt3dadd( -4.04601, -33.2822, -0.24059, 0.66 ) }
    dend_28 { pt3dadd( -3.6227, -33.6739, -0.0145083, 0.88 ) }
    dend_28 { pt3dadd( -2.90064, -34.2322, 0.290097, 0.59 ) }
    dend_28 { pt3dadd( -2.14311, -34.7433, 0.519786, 0.88 ) }
    dend_28 { pt3dadd( -1.29263, -35.2577, 0.685671, 1.18 ) }
    dend_28 { pt3dadd( -0.56238, -35.6191, 0.676216, 0.81 ) }
    dend_28 { pt3dadd( 0.323793, -35.9621, 0.556847, 0.66 ) }
    dend_28 { pt3dadd( 0.9414, -36.1757, 0.448312, 0.59 ) }
    dend_28 { pt3dadd( 1.79885, -36.4561, 0.272868, 0.88 ) }
    dend_28 { pt3dadd( 2.56769, -36.7118, 0.0959431, 0.74 ) }
    dend_28 { pt3dadd( 3.37242, -37.0165, -0.107078, 0.59 ) }
    dend_28 { pt3dadd( 4.20388, -37.3689, -0.326974, 0.74 ) }
    dend_28 { pt3dadd( 4.93791, -37.7145, -0.512331, 0.74 ) }
    dend_28 { pt3dadd( 5.38059, -37.9434, -0.610918, 0.88 ) }
    dend_28 { pt3dadd( 5.86438, -38.2277, -0.699382, 0.88 ) }
    dend_28 { pt3dadd( 6.47627, -38.6406, -0.80113, 0.66 ) }
    dend_28 { pt3dadd( 7.07958, -39.1374, -0.917174, 0.66 ) }
    dend_28 { pt3dadd( 7.42649, -39.5198, -1.01154, 0.52 ) }
    dend_28 { pt3dadd( 7.7868, -40.0653, -1.13566, 0.52 ) }
    dend_28 { pt3dadd( 7.96765, -40.4812, -1.19741, 0.96 ) }
    dend_28 { pt3dadd( 8.06045, -40.7772, -1.21383, 1.18 ) }
    dend_28 { pt3dadd( 8.23665, -41.4336, -1.20571, 1.03 ) }
    dend_28 { pt3dadd( 8.33836, -41.7851, -1.15538, 1.18 ) }
    dend_28 { pt3dadd( 8.51998, -42.2571, -1.02016, 1.03 ) }
    dend_28 { pt3dadd( 8.89505, -42.9701, -0.703374, 0.37 ) }
    dend_28 { pt3dadd( 9.27943, -43.5421, -0.356088, 0.74 ) }
    dend_28 { pt3dadd( 9.51366, -43.8511, -0.116292, 0.88 ) }
    dend_28 { pt3dadd( 10.0467, -44.5195, 0.487722, 0.59 ) }
    dend_28 { pt3dadd( 10.3204, -44.8709, 0.818417, 0.59 ) }
    dend_28 { pt3dadd( 10.6342, -45.3039, 1.21946, 0.88 ) }
    dend_28 { pt3dadd( 10.9996, -45.8729, 1.7091, 0.74 ) }
    dend_28 { pt3dadd( 11.3028, -46.4299, 2.14104, 1.25 ) }
    dend_28 { pt3dadd( 11.4956, -46.802, 2.38878, 1.25 ) }
    dend_28 { pt3dadd( 11.7334, -47.255, 2.62745, 0.81 ) }
    dend_28 { pt3dadd( 11.9751, -47.7264, 2.83529, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_28 { pt3dadd( 12.2661, -48.2803, 3.03553, 0.59 ) }
    dend_28 { pt3dadd( 12.5337, -48.7399, 3.15188, 0.59 ) }
    dend_28 { pt3dadd( 13.0218, -49.4523, 3.2934, 0.44 ) }
    dend_28 { pt3dadd( 13.3659, -49.8735, 3.38399, 0.52 ) }
    dend_28 { pt3dadd( 13.7396, -50.2604, 3.47493, 0.44 ) }
    dend_28 { pt3dadd( 14.1998, -50.6882, 3.58067, 0.44 ) }
    dend_28 { pt3dadd( 14.569, -51.0265, 3.66543, 0.52 ) }
    dend_28 { pt3dadd( 15.0223, -51.4729, 3.78338, 0.66 ) }
    dend_28 { pt3dadd( 15.4281, -51.9065, 3.88357, 0.66 ) }
    dend_28 { pt3dadd( 15.9409, -52.524, 4.02149, 0.52 ) }
    dend_28 { pt3dadd( 16.17, -52.8245, 4.10922, 0.81 ) }
    dend_28 { pt3dadd( 16.4275, -53.221, 4.24733, 0.81 ) }
    dend_28 { pt3dadd( 16.6907, -53.6972, 4.42706, 0.66 ) }
    dend_28 { pt3dadd( 17.0631, -54.4785, 4.71582, 0.52 ) }
    dend_28 { pt3dadd( 17.3829, -55.2414, 4.99676, 0.52 ) }
    dend_28 { pt3dadd( 17.6533, -55.9511, 5.2724, 1.18 ) }
    dend_28 { pt3dadd( 17.7889, -56.3056, 5.4186, 1.4 ) }
    dend_28 { pt3dadd( 18.0234, -56.875, 5.67319, 1.25 ) }
    dend_28 { pt3dadd( 18.3081, -57.526, 6.01098, 1.03 ) }
    dend_28 { pt3dadd( 18.4087, -57.7407, 6.14699, 1.03 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 20/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -6.82539, 40.8328, -9.73947, 1.33 ) }
    dend_6 { pt3dadd( -7.75966, 42.3796, -9.92988, 1.33 ) }
    dend_6 { pt3dadd( -8.69481, 44.1037, -10.0806, 1.33 ) }
    dend_6 { pt3dadd( -9.56701, 45.8333, -10.1123, 1.33 ) }
    dend_6 { pt3dadd( -10.497, 47.8435, -10.016, 1.33 ) }
    dend_6 { pt3dadd( -11.4442, 50.1035, -9.80482, 1.47 ) }
    dend_6 { pt3dadd( -12.0617, 51.7687, -9.59065, 1.69 ) }
    dend_6 { pt3dadd( -12.4512, 53.1802, -9.32735, 1.77 ) }
    dend_6 { pt3dadd( -12.7903, 54.8023, -8.9359, 1.99 ) }
    dend_6 { pt3dadd( -13.0535, 56.4333, -8.51445, 2.14 ) }
    dend_6 { pt3dadd( -13.326, 58.3967, -8.00128, 1.84 ) }
    dend_6 { pt3dadd( -13.6669, 60.7093, -7.43691, 1.84 ) }
    dend_6 { pt3dadd( -14.0292, 62.7182, -7.03545, 1.84 ) }
    dend_6 { pt3dadd( -14.3262, 64.084, -6.85669, 1.92 ) }
    dend_6 { pt3dadd( -14.7572, 65.788, -6.74537, 1.92 ) }
    dend_6 { pt3dadd( -15.2129, 67.4245, -6.68887, 1.92 ) }
    dend_6 { pt3dadd( -15.7337, 69.0856, -6.67376, 1.62 ) }
    dend_6 { pt3dadd( -16.4631, 71.1, -6.72845, 1.62 ) }
    dend_6 { pt3dadd( -17.2218, 72.9721, -6.83817, 1.77 ) }
    dend_6 { pt3dadd( -17.9184, 74.6033, -6.98068, 2.14 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 40/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -6.82539, 40.8328, -9.73947, 0.66 ) }
    dend_1 { pt3dadd( -5.91965, 42.5407, -9.85876, 0.66 ) }
    dend_1 { pt3dadd( -5.34969, 43.4572, -9.8398, 0.66 ) }
    dend_1 { pt3dadd( -5.12163, 43.7884, -9.8, 0.96 ) }
    dend_1 { pt3dadd( -4.6781, 44.4093, -9.66349, 0.96 ) }
    dend_1 { pt3dadd( -4.34703, 44.9094, -9.47186, 0.74 ) }
    dend_1 { pt3dadd( -4.11175, 45.3092, -9.29482, 0.66 ) }
    dend_1 { pt3dadd( -3.736, 45.9395, -8.91118, 0.66 ) }
    dend_1 { pt3dadd( -3.41216, 46.4698, -8.58829, 0.66 ) }
    dend_1 { pt3dadd( -3.08878, 46.9714, -8.30686, 0.66 ) }
    dend_1 { pt3dadd( -2.17679, 48.2284, -7.7239, 0.88 ) }
    dend_1 { pt3dadd( -1.51277, 49.0304, -7.44433, 0.29 ) }
    dend_1 { pt3dadd( -0.929859, 49.622, -7.34003, 0.29 ) }
    dend_1 { pt3dadd( -0.0675878, 50.2411, -7.45824, 1.18 ) }
    dend_1 { pt3dadd( 0.358844, 50.4657, -7.60891, 1.62 ) }
    dend_1 { pt3dadd( 1.44751, 50.9272, -8.11676, 0.81 ) }
    dend_1 { pt3dadd( 2.10193, 51.1591, -8.47057, 0.81 ) }
    dend_1 { pt3dadd( 2.7401, 51.3425, -8.8368, 1.03 ) }
    dend_1 { pt3dadd( 3.71795, 51.6052, -9.43994, 0.44 ) }
    dend_1 { pt3dadd( 4.54796, 51.8317, -9.98308, 0.44 ) }
    dend_1 { pt3dadd( 5.07768, 52.0024, -10.3222, 1.18 ) }
    dend_1 { pt3dadd( 5.48883, 52.1763, -10.5533, 1.33 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 62/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -1.50121, -40.8873, 0.0443568, 0.15 ) }
    axon_1 { pt3dadd( -2.07943, -55.8762, 0.0443568, 0.15 ) }
    axon_1 { pt3dadd( -2.65765, -70.865, 0.0443568, 0.15 ) }
    // Section: dend_37, id: dend_37, parent: dend_29 (entry count 65/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 0.723259, -42.7783, -3.82106, 1.03 ) }
    dend_37 { pt3dadd( 0.698942, -44.6775, -6.72985, 1.03 ) }
    dend_37 { pt3dadd( 0.282915, -46.1282, -8.85928, 0.81 ) }
    dend_37 { pt3dadd( -0.0286457, -46.76, -9.78794, 0.81 ) }
    dend_37 { pt3dadd( -0.476524, -47.3899, -10.7953, 0.81 ) }
    dend_37 { pt3dadd( -0.896908, -47.8535, -11.6258, 1.11 ) }
    dend_37 { pt3dadd( -1.4016, -48.2699, -12.4822, 1.11 ) }
    dend_37 { pt3dadd( -2.25409, -48.5707, -13.3665, 1.4 ) }
    dend_37 { pt3dadd( -2.87665, -48.6723, -13.9125, 1.4 ) }
    dend_37 { pt3dadd( -3.90463, -48.6941, -14.9197, 1.11 ) }
    dend_37 { pt3dadd( -4.41922, -48.5758, -15.5084, 1.33 ) }
    dend_37 { pt3dadd( -5.28912, -48.0922, -16.6713, 1.03 ) }
    dend_37 { pt3dadd( -5.69121, -47.66, -17.6071, 0.81 ) }
    dend_37 { pt3dadd( -5.89593, -47.3679, -18.2783, 0.81 ) }
    dend_37 { pt3dadd( -6.30995, -46.7908, -19.929, 0.81 ) }
    dend_37 { pt3dadd( -6.69278, -46.3452, -21.7288, 1.03 ) }
    dend_37 { pt3dadd( -6.97586, -46.1441, -23.1365, 1.33 ) }
    dend_37 { pt3dadd( -7.87937, -46.1011, -27.8142, 1.03 ) }
    dend_37 { pt3dadd( -8.22777, -46.326, -29.3328, 1.03 ) }
    dend_37 { pt3dadd( -8.7754, -46.8983, -31.0821, 1.33 ) }
    dend_37 { pt3dadd( -9.30437, -47.5452, -32.2869, 1.33 ) }
    dend_37 { pt3dadd( -9.81384, -48.2045, -33.162, 1.47 ) }
    dend_37 { pt3dadd( -10.7922, -49.3501, -34.3168, 1.11 ) }
    dend_37 { pt3dadd( -11.7183, -50.2405, -35.006, 0.88 ) }
    dend_37 { pt3dadd( -12.4219, -50.7847, -35.4807, 1.55 ) }
    dend_37 { pt3dadd( -13.1885, -51.2111, -35.9837, 1.84 ) }
    dend_37 { pt3dadd( -14.0171, -51.4868, -36.5435, 1.99 ) }
    dend_37 { pt3dadd( -15.4567, -51.6062, -37.5202, 1.18 ) }
    dend_37 { pt3dadd( -16.4243, -51.4269, -38.1654, 0.88 ) }
    dend_37 { pt3dadd( -17.4002, -50.993, -38.8309, 1.25 ) }
    dend_37 { pt3dadd( -18.1382, -50.4233, -39.3616, 1.47 ) }
    dend_37 { pt3dadd( -18.9261, -49.5295, -40.1104, 1.18 ) }
    dend_37 { pt3dadd( -19.5345, -48.6392, -41.3643, 0.96 ) }
    dend_37 { pt3dadd( -19.621, -48.4531, -41.9888, 1.18 ) }
    dend_37 { pt3dadd( -19.6599, -48.3676, -42.649, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_37 { pt3dadd( -19.7591, -48.2955, -44.0459, 0.74 ) }
    dend_37 { pt3dadd( -20.0323, -48.3231, -46.7711, 0.74 ) }
    dend_37 { pt3dadd( -20.4612, -48.5908, -51.7597, 1.47 ) }
    dend_37 { pt3dadd( -20.6916, -48.8532, -54.7501, 1.99 ) }
    dend_37 { pt3dadd( -20.893, -49.1663, -57.3792, 1.47 ) }
    dend_37 { pt3dadd( -21.013, -49.402, -58.9057, 1.62 ) }
    dend_37 { pt3dadd( -21.1923, -49.8371, -61.1072, 1.33 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 7/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 0.723259, -42.7783, -3.82106, 0.88 ) }
    dend_30 { pt3dadd( 1.88865, -43.4878, -3.84579, 0.88 ) }
    dend_30 { pt3dadd( 2.79812, -44.1334, -3.97317, 1.03 ) }
    dend_30 { pt3dadd( 3.65438, -44.9007, -4.1983, 1.03 ) }
    dend_30 { pt3dadd( 4.3671, -45.7507, -4.51755, 0.88 ) }
    dend_30 { pt3dadd( 5.02369, -46.767, -4.93827, 0.81 ) }
    dend_30 { pt3dadd( 5.6711, -48.01, -5.53757, 1.03 ) }
    dend_30 { pt3dadd( 5.86363, -48.7128, -5.97541, 1.33 ) }
    dend_30 { pt3dadd( 5.95984, -49.7277, -6.84115, 0.88 ) }
    dend_30 { pt3dadd( 5.90536, -50.7685, -7.96016, 0.66 ) }
    dend_30 { pt3dadd( 5.87011, -51.2917, -8.65575, 0.96 ) }
    dend_30 { pt3dadd( 5.94642, -51.8775, -9.61514, 0.66 ) }
    dend_30 { pt3dadd( 6.17988, -52.339, -10.4897, 0.74 ) }
    dend_30 { pt3dadd( 7.14359, -53.2228, -12.3275, 0.88 ) }
    dend_30 { pt3dadd( 7.6618, -53.5081, -12.9157, 1.11 ) }
    dend_30 { pt3dadd( 9.32553, -54.2677, -14.3328, 0.88 ) }
    dend_30 { pt3dadd( 11.2079, -55.1435, -15.8262, 0.74 ) }
    dend_30 { pt3dadd( 12.5809, -55.8609, -16.8389, 0.74 ) }
    dend_30 { pt3dadd( 13.6391, -56.4859, -17.6042, 0.74 ) }
    dend_30 { pt3dadd( 14.571, -57.1228, -18.2754, 0.66 ) }
    dend_30 { pt3dadd( 16.2048, -58.4225, -19.5017, 0.96 ) }
    dend_30 { pt3dadd( 17.2883, -59.4782, -20.3324, 1.25 ) }
    dend_30 { pt3dadd( 18.2642, -60.5799, -21.0854, 0.81 ) }
    dend_30 { pt3dadd( 19.3793, -61.9145, -21.9393, 0.74 ) }
    dend_30 { pt3dadd( 20.0853, -62.7351, -22.3994, 0.88 ) }
    dend_30 { pt3dadd( 21.0557, -63.7738, -22.7653, 0.59 ) }
    dend_30 { pt3dadd( 22.1445, -64.7615, -22.773, 0.59 ) }
    dend_30 { pt3dadd( 23.1235, -65.5307, -22.5566, 1.18 ) }
    dend_30 { pt3dadd( 23.5727, -65.8517, -22.3381, 1.62 ) }
    dend_30 { pt3dadd( 24.0205, -66.1545, -22.0158, 1.84 ) }
    dend_30 { pt3dadd( 25.1893, -66.8791, -21.023, 1.18 ) }
    dend_30 { pt3dadd( 26.1181, -67.3766, -20.2963, 0.81 ) }
    dend_30 { pt3dadd( 26.5299, -67.5728, -20.0315, 0.96 ) }
    dend_30 { pt3dadd( 27.7243, -68.1003, -19.5452, 0.59 ) }
    dend_30 { pt3dadd( 28.1821, -68.3034, -19.4504, 0.66 ) }
    dend_30 { pt3dadd( 29.0816, -68.7264, -19.3963, 0.52 ) }
    dend_30 { pt3dadd( 31.0533, -69.769, -19.634, 1.18 ) }
    dend_30 { pt3dadd( 31.831, -70.2538, -19.817, 1.25 ) }
    dend_30 { pt3dadd( 33.3334, -71.2165, -20.4296, 0.88 ) }
    dend_30 { pt3dadd( 33.9961, -71.6351, -20.756, 0.88 ) }
    dend_30 { pt3dadd( 34.9025, -72.1893, -21.2123, 0.66 ) }
    dend_30 { pt3dadd( 36.6336, -73.1198, -22.094, 1.47 ) }
    dend_30 { pt3dadd( 37.4329, -73.4814, -22.4933, 1.69 ) }
    dend_30 { pt3dadd( 41.2013, -74.9006, -24.337, 0.81 ) }
    dend_30 { pt3dadd( 42.0262, -75.1653, -24.7166, 0.81 ) }
    dend_30 { pt3dadd( 43.0426, -75.4491, -25.1419, 0.66 ) }
    dend_30 { pt3dadd( 45.3744, -75.9979, -25.962, 1.03 ) }
    dend_30 { pt3dadd( 46.1327, -76.1468, -26.1422, 1.03 ) }
    dend_30 { pt3dadd( 47.0957, -76.363, -26.2436, 1.33 ) }
    dend_30 { pt3dadd( 48.5113, -76.8428, -26.0354, 0.88 ) }
    dend_30 { pt3dadd( 49.5022, -77.3265, -25.7732, 0.88 ) }
    dend_30 { pt3dadd( 50.2183, -77.8239, -25.4515, 0.74 ) }
    dend_30 { pt3dadd( 50.4805, -78.0548, -25.2787, 0.88 ) }
    dend_30 { pt3dadd( 51.2353, -78.7729, -24.707, 0.44 ) }
    dend_30 { pt3dadd( 51.8569, -79.3694, -24.183, 1.77 ) }
    dend_30 { pt3dadd( 52.1848, -79.7003, -23.8742, 2.06 ) }
    dend_30 { pt3dadd( 52.5398, -80.161, -23.4829, 2.06 ) }
    // Section: dend_12, id: dend_12, parent: dend_6 (entry count 64/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -17.9184, 74.6033, -6.98068, 1.25 ) }
    dend_12 { pt3dadd( -17.3401, 75.9294, -8.06194, 1.25 ) }
    dend_12 { pt3dadd( -17.084, 76.4887, -8.43528, 1.4 ) }
    dend_12 { pt3dadd( -16.6806, 77.4988, -8.98209, 1.11 ) }
    dend_12 { pt3dadd( -16.2356, 78.8167, -9.57447, 1.33 ) }
    dend_12 { pt3dadd( -15.9727, 79.7523, -9.93556, 1.25 ) }
    dend_12 { pt3dadd( -15.6543, 81.0501, -10.3901, 1.25 ) }
    dend_12 { pt3dadd( -15.3146, 82.5178, -10.8066, 1.47 ) }
    dend_12 { pt3dadd( -15.0014, 83.9251, -11.1494, 1.69 ) }
    dend_12 { pt3dadd( -14.7635, 85.1739, -11.364, 1.84 ) }
    dend_12 { pt3dadd( -14.6216, 86.2581, -11.4762, 2.14 ) }
    dend_12 { pt3dadd( -14.5769, 87.328, -11.5629, 2.14 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 76/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -17.9184, 74.6033, -6.98068, 0.96 ) }
    dend_7 { pt3dadd( -18.6387, 75.5603, -6.7591, 0.96 ) }
    dend_7 { pt3dadd( -19.134, 76.1955, -6.71535, 0.81 ) }
    dend_7 { pt3dadd( -20.0667, 77.3023, -6.80903, 0.66 ) }
    dend_7 { pt3dadd( -20.5861, 77.8534, -6.9525, 0.59 ) }
    dend_7 { pt3dadd( -21.2197, 78.4571, -7.20061, 0.59 ) }
    dend_7 { pt3dadd( -22.0265, 79.1495, -7.60137, 0.74 ) }
    dend_7 { pt3dadd( -22.6846, 79.6033, -8.06674, 0.74 ) }
    dend_7 { pt3dadd( -23.2128, 79.9147, -8.52754, 1.11 ) }
    dend_7 { pt3dadd( -23.8433, 80.2453, -9.14556, 0.74 ) }
    dend_7 { pt3dadd( -24.2868, 80.4789, -9.58754, 1.25 ) }
    dend_7 { pt3dadd( -24.9451, 80.875, -10.2397, 0.96 ) }
    dend_7 { pt3dadd( -25.6712, 81.4217, -10.8778, 0.44 ) }
    dend_7 { pt3dadd( -25.9314, 81.7006, -11.0962, 0.44 ) }
    dend_7 { pt3dadd( -26.1773, 82.0986, -11.2979, 0.74 ) }
    dend_7 { pt3dadd( -26.4246, 82.7007, -11.4795, 0.74 ) }
    dend_7 { pt3dadd( -26.6709, 83.3985, -11.543, 0.74 ) }
    dend_7 { pt3dadd( -26.9706, 84.2255, -11.4099, 0.59 ) }
    dend_7 { pt3dadd( -27.2114, 84.8268, -11.1717, 0.59 ) }
    dend_7 { pt3dadd( -27.4732, 85.4237, -10.8043, 0.88 ) }
    dend_7 { pt3dadd( -27.7045, 85.9611, -10.4136, 0.66 ) }
    dend_7 { pt3dadd( -28.3244, 87.2079, -9.28665, 0.66 ) }
    dend_7 { pt3dadd( -28.8189, 88.0833, -8.398, 0.96 ) }
    dend_7 { pt3dadd( -29.0982, 88.5337, -7.91764, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_7 { pt3dadd( -29.4844, 89.093, -7.30458, 0.52 ) }
    dend_7 { pt3dadd( -29.9774, 89.7466, -6.60586, 0.88 ) }
    dend_7 { pt3dadd( -30.6886, 90.6788, -5.74688, 0.59 ) }
    dend_7 { pt3dadd( -31.0484, 91.172, -5.42039, 0.59 ) }
    dend_7 { pt3dadd( -31.3909, 91.6189, -5.19538, 0.59 ) }
    dend_7 { pt3dadd( -32.0304, 92.3703, -4.87957, 0.59 ) }
    dend_7 { pt3dadd( -32.6384, 93.0191, -4.6412, 1.11 ) }
    dend_7 { pt3dadd( -33.451, 93.8372, -4.3695, 0.59 ) }
    dend_7 { pt3dadd( -33.9489, 94.3473, -4.25503, 0.59 ) }
    dend_7 { pt3dadd( -34.5467, 94.9339, -4.1321, 0.81 ) }
    dend_7 { pt3dadd( -35.1415, 95.5162, -4.02974, 0.81 ) }
    dend_7 { pt3dadd( -35.7543, 96.1272, -3.97123, 0.96 ) }
    dend_7 { pt3dadd( -36.2996, 96.6568, -3.94488, 1.03 ) }
    dend_7 { pt3dadd( -36.8376, 97.1295, -3.9415, 1.33 ) }
    dend_7 { pt3dadd( -37.4069, 97.5859, -3.92778, 1.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 15/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 5.48883, 52.1763, -10.5533, 0.88 ) }
    dend_3 { pt3dadd( 6.25131, 52.4074, -10.6222, 0.88 ) }
    dend_3 { pt3dadd( 6.87064, 52.5388, -10.6802, 0.66 ) }
    dend_3 { pt3dadd( 7.33568, 52.6088, -10.7253, 1.03 ) }
    dend_3 { pt3dadd( 7.86973, 52.6887, -10.7951, 1.18 ) }
    dend_3 { pt3dadd( 8.33461, 52.7786, -10.8804, 1.18 ) }
    dend_3 { pt3dadd( 8.69081, 52.868, -10.9652, 0.81 ) }
    dend_3 { pt3dadd( 9.13744, 53.0043, -11.113, 0.44 ) }
    dend_3 { pt3dadd( 9.63238, 53.2172, -11.3249, 0.44 ) }
    dend_3 { pt3dadd( 10.1753, 53.5751, -11.6116, 0.44 ) }
    dend_3 { pt3dadd( 10.6667, 54.0224, -11.9023, 0.59 ) }
    dend_3 { pt3dadd( 10.998, 54.3769, -12.1003, 0.81 ) }
    dend_3 { pt3dadd( 11.2557, 54.6602, -12.2446, 0.81 ) }
    dend_3 { pt3dadd( 11.5768, 55.0099, -12.4053, 0.66 ) }
    dend_3 { pt3dadd( 11.982, 55.4008, -12.5686, 0.66 ) }
    dend_3 { pt3dadd( 12.4903, 55.7827, -12.7075, 0.66 ) }
    dend_3 { pt3dadd( 12.9481, 56.0225, -12.7894, 0.88 ) }
    dend_3 { pt3dadd( 13.4501, 56.2026, -12.857, 0.52 ) }
    dend_3 { pt3dadd( 13.8211, 56.2849, -12.9008, 0.96 ) }
    dend_3 { pt3dadd( 14.2873, 56.3166, -12.9549, 0.96 ) }
    dend_3 { pt3dadd( 14.6534, 56.2811, -12.9966, 1.11 ) }
    dend_3 { pt3dadd( 15.1261, 56.1453, -13.0633, 1.18 ) }
    dend_3 { pt3dadd( 15.4705, 55.9848, -13.1195, 1.18 ) }
    dend_3 { pt3dadd( 15.8795, 55.7145, -13.2117, 0.66 ) }
    dend_3 { pt3dadd( 16.4391, 55.2322, -13.3876, 0.96 ) }
    dend_3 { pt3dadd( 16.9655, 54.6498, -13.6107, 0.44 ) }
    dend_3 { pt3dadd( 17.5463, 53.8866, -13.9501, 0.37 ) }
    dend_3 { pt3dadd( 17.8532, 53.4515, -14.1731, 1.18 ) }
    dend_3 { pt3dadd( 18.1873, 52.9722, -14.4531, 1.33 ) }
    dend_3 { pt3dadd( 18.441, 52.609, -14.6947, 1.33 ) }
    dend_3 { pt3dadd( 18.8619, 51.9931, -15.1885, 0.59 ) }
    dend_3 { pt3dadd( 19.24, 51.4089, -15.7428, 0.37 ) }
    dend_3 { pt3dadd( 19.4781, 51.0071, -16.166, 0.37 ) }
    dend_3 { pt3dadd( 19.6389, 50.6905, -16.539, 0.37 ) }
    dend_3 { pt3dadd( 19.787, 50.3568, -16.9533, 0.37 ) }
    dend_3 { pt3dadd( 19.9818, 49.815, -17.6592, 0.52 ) }
    dend_3 { pt3dadd( 20.1114, 49.3665, -18.2611, 0.52 ) }
    dend_3 { pt3dadd( 20.2085, 48.9423, -18.7962, 0.52 ) }
    dend_3 { pt3dadd( 20.3987, 48.0355, -19.7864, 0.96 ) }
    dend_3 { pt3dadd( 20.5437, 47.4372, -20.3547, 1.47 ) }
    dend_3 { pt3dadd( 20.7076, 46.9403, -20.7737, 1.69 ) }
    dend_3 { pt3dadd( 20.8608, 46.601, -21.0254, 1.92 ) }
    dend_3 { pt3dadd( 21.1004, 46.1822, -21.3077, 1.92 ) }
    dend_3 { pt3dadd( 21.7429, 45.2477, -21.8649, 0.74 ) }
    dend_3 { pt3dadd( 22.2883, 44.5561, -22.1968, 0.37 ) }
    dend_3 { pt3dadd( 22.6757, 44.1294, -22.384, 0.88 ) }
    dend_3 { pt3dadd( 22.9536, 43.8772, -22.491, 1.11 ) }
    dend_3 { pt3dadd( 23.2092, 43.6793, -22.581, 1.11 ) }
    dend_3 { pt3dadd( 23.5634, 43.436, -22.698, 1.33 ) }
    dend_3 { pt3dadd( 23.7785, 43.2963, -22.7648, 1.33 ) }
    dend_3 { pt3dadd( 24.1441, 42.9978, -22.8595, 0.81 ) }
    dend_3 { pt3dadd( 24.4366, 42.6002, -22.9527, 0.44 ) }
    dend_3 { pt3dadd( 24.6837, 42.1129, -23.0824, 0.37 ) }
    dend_3 { pt3dadd( 24.9438, 41.5047, -23.2803, 0.37 ) }
    dend_3 { pt3dadd( 25.0957, 41.1273, -23.4264, 1.18 ) }
    dend_3 { pt3dadd( 25.2644, 40.7057, -23.6131, 1.4 ) }
    dend_3 { pt3dadd( 25.6313, 39.8268, -24.0826, 0.29 ) }
    dend_3 { pt3dadd( 26.0281, 39.0527, -24.6167, 0.66 ) }
    dend_3 { pt3dadd( 26.4051, 38.4875, -25.1167, 1.11 ) }
    dend_3 { pt3dadd( 26.6825, 38.1289, -25.4903, 1.62 ) }
    dend_3 { pt3dadd( 26.8104, 37.9651, -25.6699, 1.84 ) }
    dend_3 { pt3dadd( 27.1393, 37.5483, -26.1322, 1.84 ) }
    dend_3 { pt3dadd( 27.5891, 36.9379, -26.8109, 0.81 ) }
    dend_3 { pt3dadd( 27.9375, 36.4146, -27.351, 0.44 ) }
    dend_3 { pt3dadd( 28.1702, 36.0347, -27.7066, 0.44 ) }
    dend_3 { pt3dadd( 28.5355, 35.4451, -28.2022, 0.44 ) }
    dend_3 { pt3dadd( 28.7894, 35.0516, -28.497, 0.59 ) }
    dend_3 { pt3dadd( 29.3996, 34.1942, -29.0479, 0.52 ) }
    dend_3 { pt3dadd( 29.7445, 33.7764, -29.2829, 0.37 ) }
    dend_3 { pt3dadd( 30.0747, 33.466, -29.4849, 0.96 ) }
    dend_3 { pt3dadd( 30.5575, 33.0857, -29.7811, 1.62 ) }
    dend_3 { pt3dadd( 30.7825, 32.9215, -29.9165, 1.99 ) }
    dend_3 { pt3dadd( 31.2154, 32.5888, -30.1818, 1.99 ) }
    dend_3 { pt3dadd( 31.4877, 32.3679, -30.338, 1.47 ) }
    dend_3 { pt3dadd( 32.4714, 31.4765, -30.9296, 0.52 ) }
    dend_3 { pt3dadd( 33.0661, 30.9301, -31.2862, 0.52 ) }
    dend_3 { pt3dadd( 33.5271, 30.511, -31.5549, 0.88 ) }
    dend_3 { pt3dadd( 34.0024, 30.1008, -31.8136, 0.59 ) }
    dend_3 { pt3dadd( 34.4133, 29.7616, -32.0136, 0.37 ) }
    dend_3 { pt3dadd( 34.7543, 29.4958, -32.1368, 0.37 ) }
    dend_3 { pt3dadd( 35.2351, 29.1566, -32.21, 0.74 ) }
    dend_3 { pt3dadd( 35.5348, 28.9526, -32.2564, 0.74 ) }
    dend_3 { pt3dadd( 35.7968, 28.7579, -32.3254, 0.37 ) }
    dend_3 { pt3dadd( 35.9699, 28.6013, -32.398, 0.37 ) }
    dend_3 { pt3dadd( 36.3452, 28.1867, -32.6223, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_3 { pt3dadd( 36.487, 27.9845, -32.7398, 1.03 ) }
    dend_3 { pt3dadd( 36.9875, 27.1252, -33.2338, 0.37 ) }
    dend_3 { pt3dadd( 37.3091, 26.5183, -33.5854, 1.18 ) }
    dend_3 { pt3dadd( 37.5471, 26.0384, -33.8643, 1.47 ) }
    dend_3 { pt3dadd( 37.8429, 25.4631, -34.2035, 0.66 ) }
    dend_3 { pt3dadd( 38.2419, 24.784, -34.6391, 0.29 ) }
    dend_3 { pt3dadd( 38.4322, 24.5097, -34.8163, 1.25 ) }
    dend_3 { pt3dadd( 38.6564, 24.2362, -35.0038, 1.55 ) }
    dend_3 { pt3dadd( 38.902, 23.9874, -35.1959, 1.55 ) }
    dend_3 { pt3dadd( 39.5976, 23.4174, -35.6923, 0.44 ) }
    dend_3 { pt3dadd( 40.4267, 22.8819, -36.2437, 1.18 ) }
    dend_3 { pt3dadd( 41.0728, 22.5352, -36.6461, 1.84 ) }
    dend_3 { pt3dadd( 41.8449, 22.1631, -37.1152, 2.06 ) }
    dend_3 { pt3dadd( 42.7629, 21.7683, -37.6787, 0.29 ) }
    dend_3 { pt3dadd( 43.3181, 21.554, -38.0272, 0.29 ) }
    dend_3 { pt3dadd( 43.936, 21.3136, -38.4182, 1.18 ) }
    dend_3 { pt3dadd( 44.4431, 21.0831, -38.7295, 0.88 ) }
    dend_3 { pt3dadd( 44.772, 20.9234, -38.9238, 0.52 ) }
    dend_3 { pt3dadd( 45.471, 20.5659, -39.2943, 0.52 ) }
    dend_3 { pt3dadd( 45.8855, 20.3317, -39.5155, 0.52 ) }
    dend_3 { pt3dadd( 46.493, 19.9536, -39.8306, 0.29 ) }
    dend_3 { pt3dadd( 46.9868, 19.6276, -40.0589, 0.29 ) }
    dend_3 { pt3dadd( 47.4569, 19.3211, -40.2628, 0.66 ) }
    dend_3 { pt3dadd( 47.885, 19.0279, -40.4321, 0.81 ) }
    dend_3 { pt3dadd( 48.0564, 18.9028, -40.489, 0.81 ) }
    dend_3 { pt3dadd( 48.7175, 18.4151, -40.7175, 0.29 ) }
    dend_3 { pt3dadd( 49.2135, 18.0652, -40.8997, 0.96 ) }
    dend_3 { pt3dadd( 49.6666, 17.756, -41.0875, 1.03 ) }
    dend_3 { pt3dadd( 50.1877, 17.3892, -41.3151, 0.29 ) }
    dend_3 { pt3dadd( 50.4989, 17.1732, -41.4506, 0.29 ) }
    dend_3 { pt3dadd( 50.9914, 16.8539, -41.6564, 0.96 ) }
    dend_3 { pt3dadd( 51.4932, 16.5584, -41.8453, 0.96 ) }
    dend_3 { pt3dadd( 52.1727, 16.2065, -42.0786, 0.37 ) }
    dend_3 { pt3dadd( 52.8543, 15.8988, -42.2736, 0.66 ) }
    dend_3 { pt3dadd( 53.1475, 15.7693, -42.3507, 0.96 ) }
    dend_3 { pt3dadd( 53.8583, 15.4371, -42.5192, 0.29 ) }
    dend_3 { pt3dadd( 54.593, 15.0774, -42.6671, 1.03 ) }
    dend_3 { pt3dadd( 54.8565, 14.9503, -42.7183, 1.33 ) }
    dend_3 { pt3dadd( 55.5415, 14.6459, -42.8366, 0.37 ) }
    dend_3 { pt3dadd( 56.196, 14.4153, -42.9599, 0.37 ) }
    dend_3 { pt3dadd( 56.7631, 14.2546, -43.0918, 0.37 ) }
    dend_3 { pt3dadd( 57.1182, 14.1782, -43.1883, 0.74 ) }
    dend_3 { pt3dadd( 57.6889, 14.071, -43.3585, 0.74 ) }
    dend_3 { pt3dadd( 58.1093, 13.9901, -43.491, 0.37 ) }
    dend_3 { pt3dadd( 58.651, 13.8999, -43.6682, 0.29 ) }
    dend_3 { pt3dadd( 59.2142, 13.8399, -43.8478, 0.29 ) }
    dend_3 { pt3dadd( 59.6688, 13.8096, -43.9884, 0.88 ) }
    dend_3 { pt3dadd( 60.1564, 13.7847, -44.1314, 1.25 ) }
    dend_3 { pt3dadd( 60.7287, 13.7601, -44.2956, 1.18 ) }
    dend_3 { pt3dadd( 61.4858, 13.7379, -44.5124, 0.29 ) }
    dend_3 { pt3dadd( 62.0328, 13.7438, -44.6715, 0.74 ) }
    dend_3 { pt3dadd( 62.4923, 13.7619, -44.8033, 0.74 ) }
    dend_3 { pt3dadd( 63.0278, 13.7909, -44.9807, 0.37 ) }
    dend_3 { pt3dadd( 63.6868, 13.8263, -45.2336, 0.96 ) }
    dend_3 { pt3dadd( 64.0713, 13.8363, -45.3915, 1.33 ) }
    dend_3 { pt3dadd( 64.4555, 13.8143, -45.5641, 1.33 ) }
    dend_3 { pt3dadd( 65.0774, 13.7139, -45.8482, 0.37 ) }
    dend_3 { pt3dadd( 65.7363, 13.5473, -46.1496, 0.44 ) }
    dend_3 { pt3dadd( 66.1913, 13.4046, -46.3531, 0.44 ) }
    dend_3 { pt3dadd( 66.6974, 13.2356, -46.5602, 0.44 ) }
    dend_3 { pt3dadd( 67.427, 12.9889, -46.8346, 0.96 ) }
    dend_3 { pt3dadd( 67.8966, 12.8179, -46.9913, 1.03 ) }
    dend_3 { pt3dadd( 68.2285, 12.6876, -47.0856, 0.81 ) }
    dend_3 { pt3dadd( 68.668, 12.4958, -47.1893, 0.52 ) }
    dend_3 { pt3dadd( 69.1887, 12.2487, -47.299, 0.29 ) }
    dend_3 { pt3dadd( 69.4668, 12.1159, -47.3625, 0.29 ) }
    dend_3 { pt3dadd( 69.96, 11.8966, -47.4346, 0.88 ) }
    dend_3 { pt3dadd( 70.4273, 11.694, -47.4759, 1.25 ) }
    dend_3 { pt3dadd( 70.6173, 11.6037, -47.484, 1.25 ) }
    dend_3 { pt3dadd( 71.2622, 11.238, -47.4952, 0.29 ) }
    dend_3 { pt3dadd( 71.7177, 10.9243, -47.5004, 0.29 ) }
    dend_3 { pt3dadd( 72.4867, 10.3409, -47.5078, 0.29 ) }
    dend_3 { pt3dadd( 72.7546, 10.1348, -47.5149, 0.29 ) }
    dend_3 { pt3dadd( 73.3209, 9.71024, -47.551, 0.96 ) }
    dend_3 { pt3dadd( 73.758, 9.41426, -47.5994, 0.96 ) }
    dend_3 { pt3dadd( 74.2478, 9.12044, -47.6867, 0.44 ) }
    dend_3 { pt3dadd( 74.5748, 8.95016, -47.767, 0.37 ) }
    dend_3 { pt3dadd( 74.9643, 8.78651, -47.9085, 0.81 ) }
    dend_3 { pt3dadd( 75.5468, 8.61479, -48.1581, 0.29 ) }
    dend_3 { pt3dadd( 76.0164, 8.49744, -48.3878, 0.29 ) }
    dend_3 { pt3dadd( 76.4379, 8.38317, -48.6069, 0.74 ) }
    dend_3 { pt3dadd( 76.9284, 8.21918, -48.883, 0.96 ) }
    dend_3 { pt3dadd( 77.4355, 8.00314, -49.1863, 0.96 ) }
    dend_3 { pt3dadd( 78.1159, 7.655, -49.5961, 0.44 ) }
    dend_3 { pt3dadd( 78.6664, 7.32201, -49.9503, 0.29 ) }
    dend_3 { pt3dadd( 79.1186, 7.00072, -50.2547, 0.29 ) }
    dend_3 { pt3dadd( 79.5357, 6.6687, -50.5291, 0.96 ) }
    dend_3 { pt3dadd( 79.7631, 6.47739, -50.6714, 1.11 ) }
    dend_3 { pt3dadd( 80.1585, 6.15455, -50.8897, 1.18 ) }
    dend_3 { pt3dadd( 80.821, 5.63415, -51.2578, 0.37 ) }
    dend_3 { pt3dadd( 81.1968, 5.3758, -51.4766, 0.37 ) }
    dend_3 { pt3dadd( 81.7513, 5.02751, -51.8225, 0.29 ) }
    dend_3 { pt3dadd( 82.2853, 4.72205, -52.1667, 0.29 ) }
    dend_3 { pt3dadd( 82.7997, 4.45129, -52.5065, 0.96 ) }
    dend_3 { pt3dadd( 83.6014, 4.07489, -53.0308, 0.44 ) }
    dend_3 { pt3dadd( 83.9855, 3.92157, -53.2626, 1.03 ) }
    dend_3 { pt3dadd( 84.2912, 3.81483, -53.4351, 1.03 ) }
    dend_3 { pt3dadd( 84.9601, 3.62292, -53.7981, 0.29 ) }
    dend_3 { pt3dadd( 85.304, 3.54848, -53.9627, 0.29 ) }
    dend_3 { pt3dadd( 85.7141, 3.49255, -54.1427, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_3 { pt3dadd( 86.2379, 3.45037, -54.3505, 0.96 ) }
    dend_3 { pt3dadd( 86.5621, 3.42491, -54.4811, 0.37 ) }
    dend_3 { pt3dadd( 87.1015, 3.37466, -54.7069, 0.22 ) }
    dend_3 { pt3dadd( 87.7013, 3.29599, -54.9748, 1.11 ) }
    dend_3 { pt3dadd( 88.3621, 3.21557, -55.2833, 1.11 ) }
    dend_3 { pt3dadd( 89.2616, 3.11517, -55.7297, 0.44 ) }
    dend_3 { pt3dadd( 89.6854, 3.06976, -55.9544, 1.03 ) }
    dend_3 { pt3dadd( 89.9725, 3.02841, -56.1136, 1.03 ) }
    dend_3 { pt3dadd( 90.5694, 2.87575, -56.4546, 0.74 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 9/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 5.48883, 52.1763, -10.5533, 0.29 ) }
    dend_2 { pt3dadd( 5.79659, 53.3457, -10.7627, 0.29 ) }
    dend_2 { pt3dadd( 5.95493, 53.8953, -10.8763, 0.29 ) }
    dend_2 { pt3dadd( 6.25254, 54.9498, -11.094, 0.29 ) }
    dend_2 { pt3dadd( 6.45924, 55.6783, -11.2473, 0.81 ) }
    dend_2 { pt3dadd( 6.584, 56.1058, -11.343, 0.81 ) }
    dend_2 { pt3dadd( 6.83335, 56.9903, -11.5461, 0.29 ) }
    dend_2 { pt3dadd( 7.08731, 57.8124, -11.7476, 0.29 ) }
    dend_2 { pt3dadd( 7.32607, 58.5943, -11.9497, 0.88 ) }
    dend_2 { pt3dadd( 7.39385, 58.8345, -12.0136, 0.88 ) }
    dend_2 { pt3dadd( 7.58418, 59.5186, -12.2103, 0.22 ) }
    dend_2 { pt3dadd( 7.81913, 60.3622, -12.4521, 0.74 ) }
    // Section: dend_49, id: dend_49, parent: dend_37 (entry count 21/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -21.1923, -49.8371, -61.1072, 0.88 ) }
    dend_49 { pt3dadd( -21.4381, -49.0453, -71.2508, 0.88 ) }
    dend_49 { pt3dadd( -21.5366, -48.9775, -72.5838, 0.52 ) }
    dend_49 { pt3dadd( -21.6055, -48.9591, -73.1754, 0.52 ) }
    dend_49 { pt3dadd( -21.8334, -48.9414, -74.563, 0.52 ) }
    dend_49 { pt3dadd( -22.1454, -48.965, -75.9313, 0.52 ) }
    dend_49 { pt3dadd( -22.4718, -49.0232, -76.9815, 1.03 ) }
    dend_49 { pt3dadd( -22.9019, -49.2032, -77.2227, 1.62 ) }
    dend_49 { pt3dadd( -23.123, -49.3018, -77.3301, 1.99 ) }
    dend_49 { pt3dadd( -23.6767, -49.5152, -77.5707, 2.14 ) }
    dend_49 { pt3dadd( -24.6302, -49.7356, -77.9974, 1.55 ) }
    dend_49 { pt3dadd( -25.4627, -49.7967, -78.5333, 0.74 ) }
    dend_49 { pt3dadd( -26.1838, -49.7636, -79.2298, 0.37 ) }
    dend_49 { pt3dadd( -26.8113, -49.7063, -79.9905, 0.37 ) }
    dend_49 { pt3dadd( -27.2003, -49.7094, -80.6199, 0.37 ) }
    dend_49 { pt3dadd( -28.0153, -49.7984, -82.2503, 0.74 ) }
    dend_49 { pt3dadd( -28.7877, -49.9514, -83.9679, 1.4 ) }
    dend_49 { pt3dadd( -29.1919, -50.0659, -84.8792, 1.92 ) }
    dend_49 { pt3dadd( -29.392, -50.1388, -85.3224, 2.21 ) }
    dend_49 { pt3dadd( -30.4946, -50.5851, -87.8826, 0.52 ) }
    dend_49 { pt3dadd( -30.8246, -50.7279, -88.6934, 0.52 ) }
    dend_49 { pt3dadd( -31.229, -50.9108, -89.7287, 0.52 ) }
    dend_49 { pt3dadd( -31.5186, -50.9948, -90.5217, 0.59 ) }
    dend_49 { pt3dadd( -31.7179, -51.0022, -91.1453, 0.59 ) }
    dend_49 { pt3dadd( -32.3682, -50.7938, -93.3194, 1.69 ) }
    dend_49 { pt3dadd( -32.9434, -50.3384, -95.2785, 2.06 ) }
    dend_49 { pt3dadd( -33.4379, -49.8382, -96.9251, 1.03 ) }
    dend_49 { pt3dadd( -33.6727, -49.5553, -97.7229, 0.29 ) }
    dend_49 { pt3dadd( -33.937, -49.2619, -98.5399, 0.29 ) }
    dend_49 { pt3dadd( -34.3311, -48.9294, -99.4861, 1.25 ) }
    dend_49 { pt3dadd( -34.6214, -48.7804, -99.9965, 1.62 ) }
    dend_49 { pt3dadd( -35.0557, -48.6326, -100.661, 1.92 ) }
    dend_49 { pt3dadd( -36.3455, -48.4353, -102.597, 0.81 ) }
    dend_49 { pt3dadd( -36.9899, -48.4983, -103.546, 1.11 ) }
    dend_49 { pt3dadd( -37.2969, -48.5774, -104.047, 1.11 ) }
    dend_49 { pt3dadd( -37.9461, -48.7996, -105.276, 0.37 ) }
    dend_49 { pt3dadd( -38.3339, -48.9396, -106.096, 0.29 ) }
    dend_49 { pt3dadd( -38.7607, -49.116, -107.022, 0.29 ) }
    dend_49 { pt3dadd( -39.237, -49.3099, -107.961, 0.29 ) }
    dend_49 { pt3dadd( -40.1418, -49.6082, -109.85, 1.33 ) }
    dend_49 { pt3dadd( -40.476, -49.6855, -110.624, 1.55 ) }
    dend_49 { pt3dadd( -40.7687, -49.7122, -111.398, 1.77 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 63/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -21.1923, -49.8371, -61.1072, 1.18 ) }
    dend_38 { pt3dadd( -22.427, -50.5156, -62.3006, 1.18 ) }
    dend_38 { pt3dadd( -23.9507, -51.396, -63.6195, 0.52 ) }
    dend_38 { pt3dadd( -24.8496, -51.8993, -64.3585, 0.52 ) }
    dend_38 { pt3dadd( -27.0282, -53.0338, -65.8427, 0.88 ) }
    dend_38 { pt3dadd( -28.435, -53.7307, -66.6522, 1.18 ) }
    dend_38 { pt3dadd( -29.4932, -54.2711, -67.1947, 1.18 ) }
    dend_38 { pt3dadd( -30.8104, -55.0038, -67.74, 1.25 ) }
    dend_38 { pt3dadd( -32.0086, -55.7262, -68.1578, 1.11 ) }
    dend_38 { pt3dadd( -34.0856, -57.0187, -68.6163, 0.88 ) }
    dend_38 { pt3dadd( -35.4095, -57.8347, -68.7544, 0.59 ) }
    dend_38 { pt3dadd( -36.5191, -58.5094, -68.8387, 0.44 ) }
    dend_38 { pt3dadd( -37.3406, -58.9892, -68.8868, 0.29 ) }
    dend_38 { pt3dadd( -38.2532, -59.4909, -68.9288, 0.29 ) }
    dend_38 { pt3dadd( -39.2991, -60.037, -69.0099, 0.88 ) }
    dend_38 { pt3dadd( -40.2284, -60.4531, -69.1975, 1.25 ) }
    dend_38 { pt3dadd( -40.7702, -60.6591, -69.3481, 1.47 ) }
    dend_38 { pt3dadd( -41.6282, -60.9475, -69.6243, 1.47 ) }
    dend_38 { pt3dadd( -42.3372, -61.2002, -69.8851, 1.33 ) }
    dend_38 { pt3dadd( -43.3899, -61.632, -70.3144, 0.59 ) }
    dend_38 { pt3dadd( -44.4483, -62.1409, -70.7979, 0.44 ) }
    dend_38 { pt3dadd( -45.7629, -62.8354, -71.4346, 0.37 ) }
    dend_38 { pt3dadd( -46.5614, -63.2668, -71.8314, 0.96 ) }
    dend_38 { pt3dadd( -47.5823, -63.8126, -72.3456, 0.59 ) }
    dend_38 { pt3dadd( -48.9926, -64.5341, -73.0556, 0.52 ) }
    dend_38 { pt3dadd( -49.7975, -64.902, -73.4609, 0.52 ) }
    dend_38 { pt3dadd( -50.6422, -65.2146, -73.892, 1.11 ) }
    dend_38 { pt3dadd( -51.3987, -65.4103, -74.2776, 1.99 ) }
    dend_38 { pt3dadd( -52.2187, -65.5371, -74.6956, 2.28 ) }
    dend_38 { pt3dadd( -53.083, -65.5805, -75.1459, 1.99 ) }
    dend_38 { pt3dadd( -54.1342, -65.5399, -75.7085, 1.69 ) }
    dend_38 { pt3dadd( -55.1044, -65.4561, -76.2615, 1.4 ) }
    dend_38 { pt3dadd( -55.869, -65.3952, -76.7282, 0.66 ) }
    dend_38 { pt3dadd( -56.7673, -65.3686, -77.306, 0.52 ) }
    dend_38 { pt3dadd( -57.6547, -65.4254, -77.9004, 0.52 ) }
    dend_38 { pt3dadd( -58.3345, -65.5972, -78.3665, 0.29 ) }
    dend_38 { pt3dadd( -59.0001, -66.0346, -78.8125, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_38 { pt3dadd( -59.7858, -66.8775, -79.259, 0.81 ) }
    dend_38 { pt3dadd( -60.2296, -67.4345, -79.4417, 1.11 ) }
    dend_38 { pt3dadd( -60.8762, -68.272, -79.5898, 0.96 ) }
    dend_38 { pt3dadd( -61.7352, -69.2572, -79.5953, 0.74 ) }
    dend_38 { pt3dadd( -62.5699, -69.9947, -79.5261, 0.37 ) }
    dend_38 { pt3dadd( -63.7981, -70.6826, -79.3194, 1.11 ) }
    dend_38 { pt3dadd( -64.6173, -71.0217, -79.1609, 1.84 ) }
    dend_38 { pt3dadd( -65.5404, -71.281, -78.9675, 2.36 ) }
    dend_38 { pt3dadd( -67.1104, -71.4992, -78.6133, 2.58 ) }
    dend_38 { pt3dadd( -68.7474, -71.5094, -78.2244, 0.59 ) }
    dend_38 { pt3dadd( -70.1471, -71.3636, -77.865, 0.81 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 11/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 52.5398, -80.161, -23.4829, 0.74 ) }
    dend_32 { pt3dadd( 53.5531, -81.3051, -23.0676, 0.74 ) }
    dend_32 { pt3dadd( 54.3868, -82.1147, -22.8384, 0.66 ) }
    dend_32 { pt3dadd( 54.9319, -82.5979, -22.7278, 1.11 ) }
    dend_32 { pt3dadd( 55.4078, -82.9789, -22.6571, 1.11 ) }
    dend_32 { pt3dadd( 56.4403, -83.7142, -22.5322, 0.88 ) }
    dend_32 { pt3dadd( 57.2208, -84.2172, -22.4549, 0.59 ) }
    dend_32 { pt3dadd( 58.0707, -84.6996, -22.4392, 1.11 ) }
    dend_32 { pt3dadd( 58.3537, -84.8395, -22.4506, 1.47 ) }
    dend_32 { pt3dadd( 58.9452, -85.0906, -22.4775, 1.69 ) }
    dend_32 { pt3dadd( 59.7505, -85.3873, -22.4974, 1.69 ) }
    dend_32 { pt3dadd( 60.7314, -85.6758, -22.4557, 1.77 ) }
    dend_32 { pt3dadd( 61.2991, -85.8271, -22.4241, 1.77 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 24/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 52.5398, -80.161, -23.4829, 0.37 ) }
    dend_31 { pt3dadd( 53.1904, -80.8491, -24.4304, 0.37 ) }
    dend_31 { pt3dadd( 53.7549, -81.4865, -25.4054, 1.03 ) }
    dend_31 { pt3dadd( 54.3941, -82.2834, -26.6706, 1.25 ) }
    dend_31 { pt3dadd( 55.1134, -83.1963, -28.3947, 0.66 ) }
    dend_31 { pt3dadd( 55.3308, -83.4668, -28.9924, 0.81 ) }
    dend_31 { pt3dadd( 56.0717, -84.2948, -31.1375, 1.11 ) }
    dend_31 { pt3dadd( 56.3235, -84.5456, -32.0133, 1.4 ) }
    dend_31 { pt3dadd( 56.5367, -84.7622, -32.9805, 0.88 ) }
    dend_31 { pt3dadd( 56.8943, -85.1018, -35.1969, 0.22 ) }
    dend_31 { pt3dadd( 57.1581, -85.3318, -37.2676, 0.37 ) }
    dend_31 { pt3dadd( 57.4413, -85.5597, -39.5769, 1.03 ) }
    dend_31 { pt3dadd( 57.599, -85.6743, -40.7859, 1.69 ) }
    dend_31 { pt3dadd( 57.7888, -85.7944, -41.62, 1.69 ) }
    dend_31 { pt3dadd( 58.7847, -86.5362, -45.4657, 0.15 ) }
    dend_31 { pt3dadd( 59.0401, -86.7326, -46.162, 0.15 ) }
    dend_31 { pt3dadd( 59.3115, -86.9389, -46.748, 1.18 ) }
    dend_31 { pt3dadd( 59.7779, -87.3022, -47.6024, 1.47 ) }
    dend_31 { pt3dadd( 61.5832, -88.75, -50.5399, 0.88 ) }
    dend_31 { pt3dadd( 62.5318, -89.5393, -51.94, 1.55 ) }
    dend_31 { pt3dadd( 64.4863, -91.2166, -54.5192, 0.81 ) }
    dend_31 { pt3dadd( 65.2099, -91.8439, -55.4902, 0.37 ) }
    dend_31 { pt3dadd( 65.5739, -92.1837, -56.0151, 0.52 ) }
    dend_31 { pt3dadd( 65.9539, -92.6175, -56.6387, 0.52 ) }
    dend_31 { pt3dadd( 66.1562, -93.0191, -57.062, 0.37 ) }
    dend_31 { pt3dadd( 66.3173, -93.6803, -57.5823, 0.37 ) }
    dend_31 { pt3dadd( 66.1844, -94.3229, -57.9722, 0.81 ) }
    dend_31 { pt3dadd( 66.0222, -94.8909, -58.2891, 1.11 ) }
    dend_31 { pt3dadd( 65.7929, -95.793, -58.6927, 1.25 ) }
    dend_31 { pt3dadd( 65.5466, -97.0341, -59.184, 0.29 ) }
    dend_31 { pt3dadd( 65.4167, -97.7412, -59.4428, 0.29 ) }
    dend_31 { pt3dadd( 65.1494, -98.982, -59.8919, 1.55 ) }
    dend_31 { pt3dadd( 64.9772, -99.6483, -60.1486, 1.77 ) }
    dend_31 { pt3dadd( 64.5069, -101.195, -60.8088, 0.29 ) }
    dend_31 { pt3dadd( 64.0453, -102.378, -61.4028, 0.22 ) }
    dend_31 { pt3dadd( 63.3678, -103.623, -62.202, 0.22 ) }
    dend_31 { pt3dadd( 62.703, -104.557, -62.9218, 0.66 ) }
    dend_31 { pt3dadd( 62.2154, -105.075, -63.4262, 1.4 ) }
    dend_31 { pt3dadd( 62.1105, -105.162, -63.5293, 1.92 ) }
    dend_31 { pt3dadd( 61.5063, -105.562, -64.0866, 1.62 ) }
    dend_31 { pt3dadd( 60.7931, -105.998, -64.6964, 0.52 ) }
    dend_31 { pt3dadd( 60.1558, -106.395, -65.2519, 0.29 ) }
    dend_31 { pt3dadd( 59.4468, -106.882, -65.8901, 0.52 ) }
    dend_31 { pt3dadd( 59.1381, -107.101, -66.1693, 0.52 ) }
    dend_31 { pt3dadd( 58.4906, -107.582, -66.757, 0.37 ) }
    dend_31 { pt3dadd( 58.2106, -107.79, -67.0082, 0.88 ) }
    dend_31 { pt3dadd( 57.7929, -108.095, -67.4023, 0.88 ) }
    dend_31 { pt3dadd( 57.3234, -108.429, -67.8668, 0.44 ) }
    dend_31 { pt3dadd( 56.8279, -108.806, -68.3774, 0.22 ) }
    dend_31 { pt3dadd( 56.4576, -109.126, -68.7845, 0.96 ) }
    dend_31 { pt3dadd( 56.0051, -109.592, -69.3547, 0.96 ) }
    dend_31 { pt3dadd( 55.2781, -110.512, -70.3778, 0.29 ) }
    dend_31 { pt3dadd( 54.9863, -110.968, -70.8454, 1.25 ) }
    dend_31 { pt3dadd( 54.7283, -111.397, -71.2839, 1.25 ) }
    dend_31 { pt3dadd( 54.4302, -111.939, -71.8352, 0.96 ) }
    dend_31 { pt3dadd( 54.1025, -112.647, -72.5413, 0.96 ) }
    dend_31 { pt3dadd( 53.7317, -113.779, -73.6023, 0.29 ) }
    dend_31 { pt3dadd( 53.5375, -114.635, -74.3513, 0.29 ) }
    dend_31 { pt3dadd( 53.4265, -115.369, -74.9685, 0.66 ) }
    dend_31 { pt3dadd( 53.3751, -116.023, -75.5161, 0.37 ) }
    dend_31 { pt3dadd( 53.3753, -116.889, -76.3185, 0.96 ) }
    dend_31 { pt3dadd( 53.4714, -117.604, -77.061, 1.18 ) }
    dend_31 { pt3dadd( 53.5702, -117.957, -77.4716, 0.81 ) }
    dend_31 { pt3dadd( 53.8583, -118.767, -78.4854, 0.52 ) }
    dend_31 { pt3dadd( 54.1256, -119.583, -79.5025, 0.44 ) }
    dend_31 { pt3dadd( 54.4668, -120.746, -81.0103, 0.96 ) }
    dend_31 { pt3dadd( 54.8657, -122.224, -83.0743, 0.37 ) }
    dend_31 { pt3dadd( 55.0535, -122.978, -84.1617, 0.37 ) }
    dend_31 { pt3dadd( 55.3327, -124.011, -85.6465, 0.37 ) }
    dend_31 { pt3dadd( 55.5862, -124.988, -86.962, 1.18 ) }
    dend_31 { pt3dadd( 55.7328, -125.584, -87.6763, 1.47 ) }
    dend_31 { pt3dadd( 55.8635, -126.131, -88.2546, 1.47 ) }
    dend_31 { pt3dadd( 56.2979, -127.864, -89.8789, 0.74 ) }
    dend_31 { pt3dadd( 56.612, -128.96, -90.7832, 0.29 ) }
    dend_31 { pt3dadd( 56.9239, -129.935, -91.4853, 0.29 ) }
    dend_31 { pt3dadd( 57.4316, -131.425, -92.4418, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_31 { pt3dadd( 57.608, -131.99, -92.7463, 1.11 ) }
    dend_31 { pt3dadd( 57.9175, -133.032, -93.1949, 0.29 ) }
    dend_31 { pt3dadd( 58.2099, -133.972, -93.4863, 0.29 ) }
    dend_31 { pt3dadd( 58.5112, -134.862, -93.6743, 0.44 ) }
    dend_31 { pt3dadd( 58.7628, -135.503, -93.7558, 0.29 ) }
    dend_31 { pt3dadd( 58.9953, -136.171, -93.7857, 1.03 ) }
    dend_31 { pt3dadd( 59.1913, -136.816, -93.8075, 1.03 ) }
    dend_31 { pt3dadd( 59.5686, -138.14, -93.8574, 0.29 ) }
    dend_31 { pt3dadd( 59.8848, -139.168, -93.8473, 1.11 ) }
    dend_31 { pt3dadd( 60.0279, -139.621, -93.8297, 1.25 ) }
    dend_31 { pt3dadd( 60.3979, -140.91, -93.7566, 0.22 ) }
    dend_31 { pt3dadd( 60.4744, -141.269, -93.7347, 0.74 ) }
    dend_31 { pt3dadd( 60.5279, -141.617, -93.7181, 0.74 ) }
    dend_31 { pt3dadd( 60.6134, -142.553, -93.6736, 0.22 ) }
    dend_31 { pt3dadd( 60.6569, -143.192, -93.6519, 0.66 ) }
    dend_31 { pt3dadd( 60.7033, -143.754, -93.6285, 0.66 ) }
    dend_31 { pt3dadd( 60.7784, -144.528, -93.5884, 0.22 ) }
    dend_31 { pt3dadd( 60.8195, -145.074, -93.5715, 0.81 ) }
    dend_31 { pt3dadd( 60.8582, -145.936, -93.564, 0.22 ) }
    dend_31 { pt3dadd( 60.8692, -147.053, -93.581, 0.52 ) }
    dend_31 { pt3dadd( 60.86, -147.756, -93.6016, 0.66 ) }
    dend_31 { pt3dadd( 60.8491, -148.156, -93.6152, 0.66 ) }
    dend_31 { pt3dadd( 60.8209, -149.122, -93.642, 0.29 ) }
    dend_31 { pt3dadd( 60.7619, -150.535, -93.6835, 0.29 ) }
    dend_31 { pt3dadd( 60.7308, -151.277, -93.7044, 0.81 ) }
    dend_31 { pt3dadd( 60.7179, -151.557, -93.7118, 0.81 ) }
    dend_31 { pt3dadd( 60.6674, -152.673, -93.7397, 0.29 ) }
    dend_31 { pt3dadd( 60.6286, -153.64, -93.7568, 0.66 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 28/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -14.5769, 87.328, -11.5629, 1.25 ) }
    dend_16 { pt3dadd( -13.9959, 89.6009, -10.2359, 1.25 ) }
    dend_16 { pt3dadd( -13.8285, 90.3456, -10.1021, 1.25 ) }
    dend_16 { pt3dadd( -13.6681, 91.4454, -10.2113, 1.03 ) }
    dend_16 { pt3dadd( -13.6089, 92.0149, -10.3412, 1.11 ) }
    dend_16 { pt3dadd( -13.5223, 93.034, -10.6324, 1.11 ) }
    dend_16 { pt3dadd( -13.4497, 94.1006, -10.9574, 1.03 ) }
    dend_16 { pt3dadd( -13.3843, 95.5694, -11.5839, 0.96 ) }
    dend_16 { pt3dadd( -13.3731, 96.8581, -12.1764, 1.18 ) }
    dend_16 { pt3dadd( -13.4073, 97.951, -12.6983, 1.18 ) }
    dend_16 { pt3dadd( -13.4704, 98.9765, -13.1803, 1.4 ) }
    dend_16 { pt3dadd( -13.5752, 100.145, -13.6835, 1.55 ) }
    dend_16 { pt3dadd( -13.7268, 101.537, -14.2233, 1.18 ) }
    dend_16 { pt3dadd( -13.8433, 102.573, -14.5806, 0.96 ) }
    dend_16 { pt3dadd( -13.9792, 103.853, -15.0002, 1.25 ) }
    dend_16 { pt3dadd( -14.0996, 104.84, -15.3053, 1.25 ) }
    dend_16 { pt3dadd( -14.2161, 105.732, -15.5613, 1.03 ) }
    dend_16 { pt3dadd( -14.3928, 107.019, -15.8812, 1.03 ) }
    dend_16 { pt3dadd( -14.5288, 107.885, -16.0507, 1.03 ) }
    dend_16 { pt3dadd( -14.7484, 109.249, -16.2591, 1.03 ) }
    dend_16 { pt3dadd( -14.986, 110.818, -16.4244, 1.03 ) }
    dend_16 { pt3dadd( -15.0886, 111.523, -16.4751, 1.33 ) }
    dend_16 { pt3dadd( -15.3089, 113.112, -16.5531, 1.62 ) }
    dend_16 { pt3dadd( -15.4797, 114.397, -16.5858, 1.11 ) }
    dend_16 { pt3dadd( -15.6414, 115.646, -16.5108, 1.4 ) }
    dend_16 { pt3dadd( -15.7553, 116.619, -16.3894, 1.25 ) }
    dend_16 { pt3dadd( -15.8494, 117.793, -16.1987, 1.55 ) }
    dend_16 { pt3dadd( -15.8608, 118.032, -16.1555, 1.47 ) }
    dend_16 { pt3dadd( -15.8831, 119.557, -15.8652, 1.62 ) }
    dend_16 { pt3dadd( -15.883, 121.6, -15.4759, 1.47 ) }
    dend_16 { pt3dadd( -15.9025, 122.445, -15.3314, 1.55 ) }
    dend_16 { pt3dadd( -15.9404, 123.233, -15.2327, 1.11 ) }
    dend_16 { pt3dadd( -16.0235, 124.686, -15.1133, 0.88 ) }
    dend_16 { pt3dadd( -16.0759, 125.67, -15.0817, 0.88 ) }
    dend_16 { pt3dadd( -16.1043, 126.598, -15.1129, 0.88 ) }
    dend_16 { pt3dadd( -16.0831, 127.914, -15.2502, 0.88 ) }
    dend_16 { pt3dadd( -15.9975, 128.915, -15.3619, 1.18 ) }
    dend_16 { pt3dadd( -15.8121, 130.07, -15.5214, 1.18 ) }
    dend_16 { pt3dadd( -15.607, 130.914, -15.6549, 1.33 ) }
    dend_16 { pt3dadd( -15.3127, 131.891, -15.7834, 1.33 ) }
    dend_16 { pt3dadd( -14.7935, 133.424, -15.9077, 1.11 ) }
    dend_16 { pt3dadd( -14.2467, 134.962, -15.9442, 0.88 ) }
    dend_16 { pt3dadd( -13.8859, 136.02, -15.8991, 0.88 ) }
    dend_16 { pt3dadd( -13.5164, 137.245, -15.7809, 1.03 ) }
    dend_16 { pt3dadd( -13.2325, 138.467, -15.6129, 1.33 ) }
    dend_16 { pt3dadd( -13.0619, 139.615, -15.4202, 1.33 ) }
    dend_16 { pt3dadd( -13.0078, 140.578, -15.2542, 1.47 ) }
    dend_16 { pt3dadd( -13.0327, 141.484, -15.0737, 1.4 ) }
    dend_16 { pt3dadd( -13.1029, 142.322, -14.8929, 1.4 ) }
    dend_16 { pt3dadd( -13.2182, 143.26, -14.7076, 1.18 ) }
    dend_16 { pt3dadd( -13.3655, 144.353, -14.5309, 1.18 ) }
    dend_16 { pt3dadd( -13.4624, 145.113, -14.4141, 1.03 ) }
    dend_16 { pt3dadd( -13.5743, 146.258, -14.2475, 1.03 ) }
    dend_16 { pt3dadd( -13.6125, 147.312, -14.1194, 0.88 ) }
    dend_16 { pt3dadd( -13.5757, 148.442, -14.0898, 1.03 ) }
    dend_16 { pt3dadd( -13.496, 149.477, -14.1271, 0.96 ) }
    dend_16 { pt3dadd( -13.4093, 150.269, -14.2227, 0.96 ) }
    dend_16 { pt3dadd( -13.2762, 151.343, -14.4342, 0.96 ) }
    dend_16 { pt3dadd( -13.0944, 152.743, -14.8784, 0.96 ) }
    dend_16 { pt3dadd( -12.828, 154.829, -15.8623, 0.81 ) }
    dend_16 { pt3dadd( -12.7154, 156.1, -16.6288, 1.03 ) }
    dend_16 { pt3dadd( -12.6878, 156.873, -17.1573, 1.03 ) }
    dend_16 { pt3dadd( -12.6882, 157.981, -17.9164, 0.88 ) }
    dend_16 { pt3dadd( -12.7239, 159.579, -18.977, 1.03 ) }
    dend_16 { pt3dadd( -12.7935, 161.322, -20.0373, 1.03 ) }
    dend_16 { pt3dadd( -12.8296, 162.341, -20.5408, 1.25 ) }
    dend_16 { pt3dadd( -12.8977, 163.691, -21.0944, 1.25 ) }
    dend_16 { pt3dadd( -13.0411, 165.611, -21.6763, 1.03 ) }
    dend_16 { pt3dadd( -13.132, 166.613, -21.8846, 1.03 ) }
    dend_16 { pt3dadd( -13.244, 167.981, -22.0899, 1.03 ) }
    dend_16 { pt3dadd( -13.3312, 169.749, -22.2938, 1.03 ) }
    dend_16 { pt3dadd( -13.3234, 171.627, -22.509, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_16 { pt3dadd( -13.2228, 173.267, -22.7148, 0.88 ) }
    dend_16 { pt3dadd( -13.0751, 174.698, -22.9017, 0.88 ) }
    dend_16 { pt3dadd( -12.7232, 177.343, -23.2358, 0.74 ) }
    dend_16 { pt3dadd( -12.4432, 179.066, -23.4364, 0.74 ) }
    dend_16 { pt3dadd( -12.112, 180.855, -23.6019, 0.74 ) }
    dend_16 { pt3dadd( -11.8269, 182.324, -23.7451, 0.74 ) }
    dend_16 { pt3dadd( -11.6123, 183.864, -23.9758, 0.74 ) }
    dend_16 { pt3dadd( -11.5861, 185.461, -24.3903, 0.74 ) }
    dend_16 { pt3dadd( -11.6843, 186.214, -24.661, 0.88 ) }
    dend_16 { pt3dadd( -11.8766, 187.083, -25.074, 1.03 ) }
    dend_16 { pt3dadd( -12.2283, 188.61, -25.8605, 0.74 ) }
    dend_16 { pt3dadd( -12.656, 190.76, -26.9588, 0.74 ) }
    dend_16 { pt3dadd( -12.92, 192.594, -27.8799, 0.59 ) }
    dend_16 { pt3dadd( -12.9906, 193.426, -28.2638, 0.88 ) }
    dend_16 { pt3dadd( -13.0469, 194.849, -28.848, 1.11 ) }
    dend_16 { pt3dadd( -13.0161, 196.908, -29.5522, 1.55 ) }
    dend_16 { pt3dadd( -12.9145, 198.58, -29.9546, 1.33 ) }
    dend_16 { pt3dadd( -12.7776, 200.017, -30.1945, 1.11 ) }
    dend_16 { pt3dadd( -12.5754, 201.836, -30.4434, 1.11 ) }
    dend_16 { pt3dadd( -12.3931, 203.286, -30.6307, 1.11 ) }
    dend_16 { pt3dadd( -12.1629, 204.752, -30.7918, 1.03 ) }
    dend_16 { pt3dadd( -11.8239, 206.425, -30.9508, 0.88 ) }
    dend_16 { pt3dadd( -11.5832, 207.329, -31.0246, 1.18 ) }
    dend_16 { pt3dadd( -11.4013, 207.898, -31.0522, 1.4 ) }
    dend_16 { pt3dadd( -11.1193, 208.72, -31.0647, 1.25 ) }
    dend_16 { pt3dadd( -10.8096, 209.676, -31.0736, 1.25 ) }
    dend_16 { pt3dadd( -10.6525, 210.272, -31.1007, 1.11 ) }
    dend_16 { pt3dadd( -10.5197, 210.955, -31.1561, 0.96 ) }
    dend_16 { pt3dadd( -10.4469, 211.825, -31.2329, 0.96 ) }
    dend_16 { pt3dadd( -10.4434, 212.433, -31.2931, 0.88 ) }
    dend_16 { pt3dadd( -10.4825, 213.632, -31.411, 0.66 ) }
    dend_16 { pt3dadd( -10.5063, 214.414, -31.4493, 0.81 ) }
    dend_16 { pt3dadd( -10.5052, 215.244, -31.4425, 0.81 ) }
    dend_16 { pt3dadd( -10.4524, 216.214, -31.3645, 0.74 ) }
    dend_16 { pt3dadd( -10.2289, 218.119, -31.095, 0.88 ) }
    dend_16 { pt3dadd( -10.1421, 218.635, -30.9861, 1.18 ) }
    dend_16 { pt3dadd( -9.82442, 219.972, -30.6213, 1.18 ) }
    dend_16 { pt3dadd( -9.59816, 220.729, -30.3775, 1.18 ) }
    dend_16 { pt3dadd( -9.31273, 221.529, -30.1082, 1.11 ) }
    dend_16 { pt3dadd( -8.94288, 222.446, -29.8061, 0.96 ) }
    dend_16 { pt3dadd( -8.6855, 223.076, -29.6028, 0.96 ) }
    dend_16 { pt3dadd( -8.39216, 223.844, -29.4148, 0.81 ) }
    dend_16 { pt3dadd( -8.11139, 224.637, -29.2919, 1.11 ) }
    dend_16 { pt3dadd( -7.96038, 225.088, -29.2714, 1.47 ) }
    dend_16 { pt3dadd( -7.65358, 226.064, -29.3507, 1.03 ) }
    dend_16 { pt3dadd( -7.41603, 226.878, -29.4936, 1.03 ) }
    dend_16 { pt3dadd( -7.16942, 227.767, -29.7321, 1.25 ) }
    dend_16 { pt3dadd( -7.0257, 228.385, -29.9071, 1.25 ) }
    dend_16 { pt3dadd( -6.74232, 229.888, -30.2902, 0.88 ) }
    dend_16 { pt3dadd( -6.6336, 230.681, -30.4335, 0.88 ) }
    dend_16 { pt3dadd( -6.55012, 231.696, -30.543, 1.18 ) }
    dend_16 { pt3dadd( -6.50186, 232.808, -30.5762, 0.96 ) }
    dend_16 { pt3dadd( -6.46805, 234.053, -30.4857, 0.81 ) }
    dend_16 { pt3dadd( -6.43751, 235.148, -30.3016, 1.25 ) }
    dend_16 { pt3dadd( -6.40169, 236.025, -30.072, 0.66 ) }
    dend_16 { pt3dadd( -6.34792, 236.911, -29.8003, 0.96 ) }
    dend_16 { pt3dadd( -6.28004, 237.721, -29.5595, 1.25 ) }
    dend_16 { pt3dadd( -6.19424, 238.513, -29.3474, 0.96 ) }
    dend_16 { pt3dadd( -6.08013, 239.278, -29.2085, 0.96 ) }
    dend_16 { pt3dadd( -5.92173, 240.149, -29.0849, 1.25 ) }
    dend_16 { pt3dadd( -5.77858, 240.821, -28.9953, 1.55 ) }
    dend_16 { pt3dadd( -5.58434, 241.626, -28.8854, 1.55 ) }
    dend_16 { pt3dadd( -5.42784, 242.211, -28.8125, 1.25 ) }
    dend_16 { pt3dadd( -5.20907, 243.064, -28.7482, 0.96 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 64/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -14.5769, 87.328, -11.5629, 0.59 ) }
    dend_13 { pt3dadd( -14.4364, 89.8963, -12.7348, 0.59 ) }
    dend_13 { pt3dadd( -14.4069, 90.8503, -13.1372, 0.88 ) }
    dend_13 { pt3dadd( -14.3941, 91.9855, -13.5576, 1.18 ) }
    dend_13 { pt3dadd( -14.3688, 93.4145, -14.0135, 1.18 ) }
    dend_13 { pt3dadd( -14.315, 94.4136, -14.3332, 0.96 ) }
    dend_13 { pt3dadd( -14.2411, 95.5298, -14.6851, 0.59 ) }
    dend_13 { pt3dadd( -14.2021, 96.2491, -14.8566, 0.96 ) }
    dend_13 { pt3dadd( -14.1372, 97.4229, -15.1368, 0.96 ) }
    dend_13 { pt3dadd( -14.0777, 98.8143, -15.4992, 0.96 ) }
    dend_13 { pt3dadd( -14.0607, 100.119, -15.866, 0.52 ) }
    dend_13 { pt3dadd( -14.0974, 101.069, -16.1476, 0.37 ) }
    dend_13 { pt3dadd( -14.1849, 101.683, -16.3536, 0.37 ) }
    dend_13 { pt3dadd( -14.3694, 102.3, -16.5727, 0.81 ) }
    dend_13 { pt3dadd( -14.6318, 102.815, -16.8007, 1.18 ) }
    dend_13 { pt3dadd( -14.8348, 103.17, -16.9696, 1.18 ) }
    dend_13 { pt3dadd( -15.1594, 103.805, -17.2426, 0.66 ) }
    dend_13 { pt3dadd( -15.379, 104.374, -17.481, 0.66 ) }
    dend_13 { pt3dadd( -15.6306, 105.322, -17.8401, 0.59 ) }
    dend_13 { pt3dadd( -15.8125, 106.492, -18.2372, 0.88 ) }
    dend_13 { pt3dadd( -15.9452, 108.17, -18.7556, 1.11 ) }
    dend_13 { pt3dadd( -15.9662, 109.103, -19.0164, 1.11 ) }
    dend_13 { pt3dadd( -15.9511, 109.905, -19.1987, 1.11 ) }
    dend_13 { pt3dadd( -15.9185, 110.871, -19.3424, 0.37 ) }
    dend_13 { pt3dadd( -15.9019, 111.917, -19.3895, 0.37 ) }
    dend_13 { pt3dadd( -15.9322, 112.615, -19.333, 0.74 ) }
    dend_13 { pt3dadd( -15.9582, 112.839, -19.3002, 0.88 ) }
    dend_13 { pt3dadd( -16.1021, 113.84, -19.1157, 0.88 ) }
    dend_13 { pt3dadd( -16.2038, 114.602, -18.9354, 0.66 ) }
    dend_13 { pt3dadd( -16.3045, 115.644, -18.6481, 0.52 ) }
    dend_13 { pt3dadd( -16.316, 116.13, -18.5324, 0.52 ) }
    dend_13 { pt3dadd( -16.2599, 117.053, -18.3812, 0.96 ) }
    dend_13 { pt3dadd( -16.1677, 117.677, -18.3391, 0.96 ) }
    dend_13 { pt3dadd( -16.0546, 118.191, -18.3519, 1.18 ) }
    dend_13 { pt3dadd( -15.9535, 118.615, -18.3914, 1.18 ) }
    dend_13 { pt3dadd( -15.7134, 119.728, -18.5386, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_13 { pt3dadd( -15.6313, 120.35, -18.6303, 0.88 ) }
    dend_13 { pt3dadd( -15.6097, 121.176, -18.7495, 0.88 ) }
    dend_13 { pt3dadd( -15.6373, 121.824, -18.8658, 0.44 ) }
    dend_13 { pt3dadd( -15.6912, 122.533, -18.9948, 0.74 ) }
    dend_13 { pt3dadd( -15.7287, 122.969, -19.0657, 0.74 ) }
    dend_13 { pt3dadd( -15.77, 123.551, -19.1348, 0.52 ) }
    dend_13 { pt3dadd( -15.7834, 124.278, -19.2143, 0.37 ) }
    dend_13 { pt3dadd( -15.7596, 124.889, -19.272, 0.37 ) }
    dend_13 { pt3dadd( -15.6786, 125.636, -19.3255, 0.74 ) }
    dend_13 { pt3dadd( -15.5994, 126.111, -19.3493, 0.74 ) }
    dend_13 { pt3dadd( -15.4789, 126.748, -19.3738, 0.66 ) }
    dend_13 { pt3dadd( -15.2758, 127.78, -19.401, 0.74 ) }
    dend_13 { pt3dadd( -15.2122, 128.091, -19.4055, 1.4 ) }
    dend_13 { pt3dadd( -15.0505, 128.745, -19.4029, 1.4 ) }
    dend_13 { pt3dadd( -14.8714, 129.352, -19.4242, 1.33 ) }
    dend_13 { pt3dadd( -14.4879, 130.431, -19.5032, 0.44 ) }
    dend_13 { pt3dadd( -14.0956, 131.36, -19.6024, 0.44 ) }
    dend_13 { pt3dadd( -13.8239, 131.975, -19.691, 0.37 ) }
    dend_13 { pt3dadd( -13.3546, 133.087, -19.8899, 0.37 ) }
    dend_13 { pt3dadd( -12.989, 134.019, -20.0821, 0.59 ) }
    dend_13 { pt3dadd( -12.7968, 134.601, -20.2183, 0.59 ) }
    dend_13 { pt3dadd( -12.6701, 135.137, -20.3581, 0.29 ) }
    dend_13 { pt3dadd( -12.616, 136.454, -20.6943, 0.88 ) }
    dend_13 { pt3dadd( -12.7025, 137.084, -20.8323, 1.77 ) }
    dend_13 { pt3dadd( -12.8404, 137.658, -20.9272, 2.06 ) }
    dend_13 { pt3dadd( -12.9789, 138.162, -20.9817, 1.69 ) }
    dend_13 { pt3dadd( -13.1843, 138.887, -21.0632, 1.18 ) }
    dend_13 { pt3dadd( -13.4944, 139.996, -21.2087, 0.44 ) }
    dend_13 { pt3dadd( -13.7712, 140.986, -21.3474, 0.37 ) }
    dend_13 { pt3dadd( -14.08, 142.106, -21.5136, 0.74 ) }
    dend_13 { pt3dadd( -14.2116, 142.561, -21.5892, 0.74 ) }
    dend_13 { pt3dadd( -14.4968, 143.549, -21.7796, 0.52 ) }
    dend_13 { pt3dadd( -14.7108, 144.268, -21.8959, 0.44 ) }
    dend_13 { pt3dadd( -14.8478, 144.722, -21.9438, 0.66 ) }
    dend_13 { pt3dadd( -15.0, 145.166, -21.9574, 0.66 ) }
    dend_13 { pt3dadd( -15.2317, 145.759, -21.9524, 0.37 ) }
    dend_13 { pt3dadd( -15.4139, 146.211, -21.9188, 0.37 ) }
    dend_13 { pt3dadd( -15.9438, 147.542, -21.6619, 0.59 ) }
    dend_13 { pt3dadd( -16.2672, 148.482, -21.4015, 1.03 ) }
    dend_13 { pt3dadd( -16.415, 149.012, -21.2322, 1.4 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 40/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -37.4069, 97.5859, -3.92778, 0.29 ) }
    dend_11 { pt3dadd( -37.792, 99.8386, -3.64466, 0.29 ) }
    dend_11 { pt3dadd( -38.0655, 100.9, -3.50489, 0.44 ) }
    dend_11 { pt3dadd( -38.4034, 101.675, -3.33869, 0.66 ) }
    dend_11 { pt3dadd( -38.9701, 102.492, -3.00651, 0.29 ) }
    dend_11 { pt3dadd( -39.6341, 103.224, -2.61496, 0.29 ) }
    dend_11 { pt3dadd( -40.0067, 103.602, -2.39794, 0.74 ) }
    dend_11 { pt3dadd( -40.5313, 103.996, -2.0812, 0.88 ) }
    dend_11 { pt3dadd( -41.7383, 104.816, -1.41028, 0.44 ) }
    dend_11 { pt3dadd( -42.9137, 105.624, -0.814494, 0.52 ) }
    dend_11 { pt3dadd( -43.2471, 105.888, -0.651074, 0.81 ) }
    dend_11 { pt3dadd( -43.7828, 106.474, -0.357562, 0.44 ) }
    dend_11 { pt3dadd( -44.2377, 107.154, -0.0288553, 0.88 ) }
    dend_11 { pt3dadd( -44.6681, 108.007, 0.403685, 0.59 ) }
    dend_11 { pt3dadd( -44.9737, 108.895, 0.759593, 0.29 ) }
    dend_11 { pt3dadd( -45.1626, 109.666, 1.01507, 0.29 ) }
    dend_11 { pt3dadd( -45.4396, 111.012, 1.42305, 0.96 ) }
    dend_11 { pt3dadd( -45.671, 112.221, 1.77578, 1.18 ) }
    dend_11 { pt3dadd( -45.8873, 113.473, 2.14154, 0.81 ) }
    dend_11 { pt3dadd( -46.1702, 115.198, 2.57765, 0.52 ) }
    dend_11 { pt3dadd( -46.3248, 116.101, 2.77834, 0.52 ) }
    dend_11 { pt3dadd( -46.5882, 117.448, 2.97858, 0.44 ) }
    dend_11 { pt3dadd( -46.8159, 118.505, 3.08612, 0.66 ) }
    dend_11 { pt3dadd( -47.0766, 119.688, 3.22982, 0.88 ) }
    dend_11 { pt3dadd( -47.2434, 120.395, 3.33353, 0.52 ) }
    dend_11 { pt3dadd( -47.4484, 121.269, 3.51451, 0.29 ) }
    dend_11 { pt3dadd( -47.7404, 122.492, 3.76715, 0.29 ) }
    dend_11 { pt3dadd( -48.1249, 124.121, 4.09626, 0.52 ) }
    dend_11 { pt3dadd( -48.4803, 125.368, 4.32763, 0.81 ) }
    dend_11 { pt3dadd( -48.8282, 126.497, 4.47488, 0.22 ) }
    dend_11 { pt3dadd( -49.078, 127.348, 4.56301, 0.22 ) }
    dend_11 { pt3dadd( -49.5047, 128.752, 4.67569, 0.37 ) }
    dend_11 { pt3dadd( -49.7477, 129.474, 4.71666, 0.37 ) }
    dend_11 { pt3dadd( -50.3196, 130.983, 4.77351, 0.37 ) }
    dend_11 { pt3dadd( -50.9139, 132.425, 4.82316, 0.29 ) }
    dend_11 { pt3dadd( -51.5002, 133.926, 4.90211, 0.52 ) }
    dend_11 { pt3dadd( -51.7802, 134.721, 4.94554, 0.88 ) }
    dend_11 { pt3dadd( -52.2332, 136.354, 5.03458, 0.59 ) }
    dend_11 { pt3dadd( -52.416, 137.215, 5.07245, 0.44 ) }
    dend_11 { pt3dadd( -52.5583, 138.281, 5.12165, 0.22 ) }
    dend_11 { pt3dadd( -52.7707, 140.416, 5.21914, 0.22 ) }
    dend_11 { pt3dadd( -52.8188, 141.374, 5.23861, 0.81 ) }
    dend_11 { pt3dadd( -52.8143, 142.172, 5.21175, 1.33 ) }
    dend_11 { pt3dadd( -52.7936, 142.95, 5.14046, 1.33 ) }
    dend_11 { pt3dadd( -52.7269, 144.366, 4.95919, 0.59 ) }
    dend_11 { pt3dadd( -52.6452, 145.296, 4.80133, 0.81 ) }
    dend_11 { pt3dadd( -52.5311, 146.156, 4.62258, 0.81 ) }
    dend_11 { pt3dadd( -52.3124, 147.483, 4.27106, 0.52 ) }
    dend_11 { pt3dadd( -52.0035, 149.158, 3.73783, 0.22 ) }
    dend_11 { pt3dadd( -51.7371, 150.476, 3.26682, 0.22 ) }
    dend_11 { pt3dadd( -51.3787, 152.061, 2.64913, 0.59 ) }
    dend_11 { pt3dadd( -51.1228, 153.053, 2.26015, 0.81 ) }
    dend_11 { pt3dadd( -50.7579, 154.455, 1.70587, 0.29 ) }
    dend_11 { pt3dadd( -50.4982, 155.474, 1.34224, 0.22 ) }
    dend_11 { pt3dadd( -50.3832, 156.0, 1.16096, 0.59 ) }
    dend_11 { pt3dadd( -50.3553, 156.403, 1.03169, 0.59 ) }
    dend_11 { pt3dadd( -50.5355, 157.435, 0.714913, 0.22 ) }
    dend_11 { pt3dadd( -50.8752, 158.342, 0.389571, 0.29 ) }
    dend_11 { pt3dadd( -51.1837, 158.944, 0.129435, 0.81 ) }
    dend_11 { pt3dadd( -51.4174, 159.347, -0.0999539, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_11 { pt3dadd( -51.5921, 159.658, -0.296535, 1.11 ) }
    dend_11 { pt3dadd( -52.3478, 161.175, -1.28702, 0.37 ) }
    dend_11 { pt3dadd( -52.6246, 161.889, -1.71151, 0.96 ) }
    dend_11 { pt3dadd( -52.9268, 162.905, -2.24377, 0.88 ) }
    dend_11 { pt3dadd( -53.1532, 163.718, -2.64325, 0.88 ) }
    dend_11 { pt3dadd( -53.4834, 164.815, -3.13313, 0.52 ) }
    dend_11 { pt3dadd( -53.744, 165.632, -3.4607, 0.74 ) }
    dend_11 { pt3dadd( -54.2364, 167.1, -3.97244, 0.29 ) }
    dend_11 { pt3dadd( -54.7409, 168.449, -4.46441, 0.59 ) }
    dend_11 { pt3dadd( -55.1269, 169.365, -4.81937, 0.59 ) }
    dend_11 { pt3dadd( -55.5941, 170.509, -5.40003, 0.29 ) }
    dend_11 { pt3dadd( -55.9548, 171.42, -6.01764, 1.18 ) }
    dend_11 { pt3dadd( -56.0982, 171.838, -6.35286, 1.47 ) }
    dend_11 { pt3dadd( -56.3628, 172.83, -7.24849, 1.18 ) }
    dend_11 { pt3dadd( -56.5637, 173.799, -8.11992, 0.44 ) }
    dend_11 { pt3dadd( -56.8169, 175.48, -9.57489, 0.22 ) }
    dend_11 { pt3dadd( -56.8751, 176.138, -10.1602, 0.22 ) }
    dend_11 { pt3dadd( -56.9364, 177.473, -11.2685, 1.18 ) }
    dend_11 { pt3dadd( -56.937, 177.816, -11.5303, 1.4 ) }
    dend_11 { pt3dadd( -56.8429, 179.401, -12.5752, 0.44 ) }
    dend_11 { pt3dadd( -56.7371, 180.32, -13.1221, 0.66 ) }
    dend_11 { pt3dadd( -56.6474, 181.204, -13.5678, 0.66 ) }
    dend_11 { pt3dadd( -56.4477, 182.462, -14.2071, 0.22 ) }
    dend_11 { pt3dadd( -56.3162, 183.002, -14.5032, 0.59 ) }
    dend_11 { pt3dadd( -56.0661, 183.825, -14.9759, 0.52 ) }
    dend_11 { pt3dadd( -55.7232, 184.772, -15.5185, 0.96 ) }
    dend_11 { pt3dadd( -55.4415, 185.645, -16.063, 0.59 ) }
    dend_11 { pt3dadd( -55.1967, 186.477, -16.6107, 0.37 ) }
    dend_11 { pt3dadd( -54.9397, 187.317, -17.1982, 0.59 ) }
    dend_11 { pt3dadd( -54.7471, 187.895, -17.5759, 0.81 ) }
    dend_11 { pt3dadd( -54.3046, 189.269, -18.4528, 0.22 ) }
    dend_11 { pt3dadd( -53.9401, 190.452, -19.1424, 0.59 ) }
    dend_11 { pt3dadd( -53.7236, 191.202, -19.5545, 0.52 ) }
    dend_11 { pt3dadd( -53.519, 192.094, -20.0212, 0.22 ) }
    dend_11 { pt3dadd( -53.251, 193.472, -20.7144, 0.22 ) }
    dend_11 { pt3dadd( -52.9943, 194.997, -21.4728, 0.88 ) }
    dend_11 { pt3dadd( -52.8772, 195.873, -21.8941, 1.69 ) }
    dend_11 { pt3dadd( -52.8344, 196.363, -22.1014, 1.92 ) }
    dend_11 { pt3dadd( -52.8213, 197.291, -22.5094, 1.25 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 39/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -37.4069, 97.5859, -3.92778, 0.52 ) }
    dend_8 { pt3dadd( -38.7437, 97.8482, -3.98811, 0.52 ) }
    dend_8 { pt3dadd( -39.6072, 98.0018, -4.02263, 0.59 ) }
    dend_8 { pt3dadd( -40.5424, 98.1604, -4.05433, 0.44 ) }
    dend_8 { pt3dadd( -41.1847, 98.2883, -4.07233, 0.59 ) }
    dend_8 { pt3dadd( -41.9109, 98.4733, -4.08273, 0.59 ) }
    dend_8 { pt3dadd( -42.7912, 98.7506, -4.08581, 0.52 ) }
    dend_8 { pt3dadd( -43.354, 98.96, -4.07646, 0.74 ) }
    dend_8 { pt3dadd( -44.0775, 99.2837, -4.05289, 0.37 ) }
    dend_8 { pt3dadd( -44.6206, 99.5558, -4.01847, 0.37 ) }
    dend_8 { pt3dadd( -45.3177, 99.9189, -3.96209, 0.37 ) }
    dend_8 { pt3dadd( -45.9296, 100.217, -3.8974, 0.52 ) }
    dend_8 { pt3dadd( -46.7031, 100.487, -3.82119, 0.52 ) }
    dend_8 { pt3dadd( -47.3056, 100.564, -3.78045, 0.29 ) }
    dend_8 { pt3dadd( -48.125, 100.532, -3.78098, 0.81 ) }
    dend_8 { pt3dadd( -48.6197, 100.473, -3.80509, 1.11 ) }
    dend_8 { pt3dadd( -49.3038, 100.377, -3.86298, 1.25 ) }
    dend_8 { pt3dadd( -50.3645, 100.239, -3.97605, 0.66 ) }
    dend_8 { pt3dadd( -51.2802, 100.146, -4.10017, 0.37 ) }
    dend_8 { pt3dadd( -52.5879, 100.097, -4.35486, 0.37 ) }
    dend_8 { pt3dadd( -53.4488, 100.132, -4.58804, 0.29 ) }
    dend_8 { pt3dadd( -54.5735, 100.257, -4.96121, 0.66 ) }
    dend_8 { pt3dadd( -55.0046, 100.339, -5.13797, 0.88 ) }
    dend_8 { pt3dadd( -55.6118, 100.502, -5.46719, 0.59 ) }
    dend_8 { pt3dadd( -56.539, 100.765, -6.09388, 0.37 ) }
    dend_8 { pt3dadd( -57.1644, 100.921, -6.59229, 0.37 ) }
    dend_8 { pt3dadd( -57.6277, 101.005, -7.00551, 0.96 ) }
    dend_8 { pt3dadd( -58.3513, 101.074, -7.73257, 1.18 ) }
    dend_8 { pt3dadd( -59.5768, 101.098, -8.99433, 0.59 ) }
    dend_8 { pt3dadd( -60.033, 101.079, -9.46279, 0.44 ) }
    dend_8 { pt3dadd( -60.5494, 101.021, -9.95892, 0.29 ) }
    dend_8 { pt3dadd( -61.1623, 100.919, -10.4971, 0.15 ) }
    dend_8 { pt3dadd( -62.1683, 100.7, -11.3129, 0.88 ) }
    dend_8 { pt3dadd( -62.6473, 100.592, -11.6423, 1.18 ) }
    dend_8 { pt3dadd( -63.335, 100.471, -12.0453, 0.44 ) }
    dend_8 { pt3dadd( -63.9928, 100.407, -12.389, 0.37 ) }
    dend_8 { pt3dadd( -64.6026, 100.394, -12.6554, 0.96 ) }
    dend_8 { pt3dadd( -65.6225, 100.458, -12.9815, 1.25 ) }
    dend_8 { pt3dadd( -66.7244, 100.631, -13.1959, 0.44 ) }
    dend_8 { pt3dadd( -67.439, 100.798, -13.2618, 0.44 ) }
    dend_8 { pt3dadd( -68.3604, 101.066, -13.2672, 1.03 ) }
    dend_8 { pt3dadd( -69.1203, 101.333, -13.1945, 0.88 ) }
    dend_8 { pt3dadd( -70.1155, 101.721, -13.0459, 0.74 ) }
    dend_8 { pt3dadd( -71.6345, 102.377, -12.7002, 0.37 ) }
    dend_8 { pt3dadd( -72.6534, 102.831, -12.4009, 0.88 ) }
    dend_8 { pt3dadd( -72.9808, 102.977, -12.2828, 1.18 ) }
    dend_8 { pt3dadd( -73.8258, 103.391, -11.9304, 1.18 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 86/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 90.5694, 2.87575, -56.4546, 0.29 ) }
    dend_5 { pt3dadd( 91.4191, 5.35821, -59.7793, 0.29 ) }
    dend_5 { pt3dadd( 91.634, 6.07938, -60.6005, 0.52 ) }
    dend_5 { pt3dadd( 91.6912, 6.32322, -60.8311, 0.52 ) }
    dend_5 { pt3dadd( 91.8358, 7.20822, -61.5208, 0.29 ) }
    dend_5 { pt3dadd( 91.9246, 8.04261, -62.0736, 0.96 ) }
    dend_5 { pt3dadd( 91.9529, 8.30935, -62.2337, 1.33 ) }
    dend_5 { pt3dadd( 91.9733, 8.68095, -62.3214, 1.33 ) }
    dend_5 { pt3dadd( 92.0314, 9.43009, -62.5006, 0.59 ) }
    dend_5 { pt3dadd( 92.1472, 10.1159, -62.723, 0.37 ) }
    dend_5 { pt3dadd( 92.3789, 10.7364, -63.054, 0.22 ) }
    dend_5 { pt3dadd( 92.9305, 11.375, -63.6271, 0.22 ) }
    dend_5 { pt3dadd( 93.2194, 11.5392, -63.8805, 0.59 ) }
    dend_5 { pt3dadd( 93.7471, 11.6904, -64.3063, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_5 { pt3dadd( 94.2136, 11.7405, -64.6537, 0.37 ) }
    dend_5 { pt3dadd( 94.8077, 11.7404, -65.0686, 0.96 ) }
    dend_5 { pt3dadd( 95.3919, 11.7051, -65.4491, 0.96 ) }
    dend_5 { pt3dadd( 96.1565, 11.629, -65.9426, 0.44 ) }
    dend_5 { pt3dadd( 96.5425, 11.5875, -66.1932, 0.52 ) }
    dend_5 { pt3dadd( 97.0397, 11.5217, -66.5262, 0.22 ) }
    dend_5 { pt3dadd( 97.3808, 11.4831, -66.7661, 0.74 ) }
    dend_5 { pt3dadd( 98.1215, 11.4265, -67.2958, 0.29 ) }
    dend_5 { pt3dadd( 98.4637, 11.4235, -67.5447, 0.29 ) }
    dend_5 { pt3dadd( 98.9983, 11.47, -67.9462, 0.88 ) }
    dend_5 { pt3dadd( 99.6349, 11.5718, -68.4312, 0.37 ) }
    dend_5 { pt3dadd( 100.714, 11.8346, -69.2564, 0.96 ) }
    dend_5 { pt3dadd( 101.194, 12.0013, -69.6233, 1.4 ) }
    dend_5 { pt3dadd( 101.633, 12.2169, -69.9557, 0.59 ) }
    dend_5 { pt3dadd( 102.333, 12.6812, -70.4722, 0.22 ) }
    dend_5 { pt3dadd( 102.957, 13.2206, -70.9106, 0.22 ) }
    dend_5 { pt3dadd( 103.469, 13.8083, -71.2478, 1.11 ) }
    dend_5 { pt3dadd( 103.839, 14.395, -71.4759, 1.33 ) }
    dend_5 { pt3dadd( 104.181, 15.0764, -71.6874, 1.33 ) }
    dend_5 { pt3dadd( 104.413, 15.6192, -71.8173, 1.33 ) }
    dend_5 { pt3dadd( 104.603, 16.1408, -71.9028, 0.59 ) }
    dend_5 { pt3dadd( 104.908, 17.0445, -72.0202, 0.22 ) }
    dend_5 { pt3dadd( 105.297, 18.0528, -72.1307, 1.4 ) }
    dend_5 { pt3dadd( 105.525, 18.5205, -72.1887, 1.69 ) }
    dend_5 { pt3dadd( 106.047, 19.4121, -72.3318, 0.29 ) }
    dend_5 { pt3dadd( 106.31, 19.7723, -72.4412, 0.66 ) }
    dend_5 { pt3dadd( 106.742, 20.2299, -72.703, 0.66 ) }
    dend_5 { pt3dadd( 107.433, 20.6816, -73.3372, 0.22 ) }
    dend_5 { pt3dadd( 107.943, 20.8112, -74.094, 1.03 ) }
    dend_5 { pt3dadd( 108.124, 20.7879, -74.5619, 1.03 ) }
    dend_5 { pt3dadd( 108.436, 20.5359, -76.2572, 0.74 ) }
    dend_5 { pt3dadd( 108.571, 20.3446, -77.2564, 1.03 ) }
    dend_5 { pt3dadd( 108.688, 19.9905, -78.7526, 1.11 ) }
    dend_5 { pt3dadd( 108.703, 19.5793, -80.2595, 1.11 ) }
    dend_5 { pt3dadd( 108.624, 19.1037, -81.8211, 0.74 ) }
    dend_5 { pt3dadd( 108.469, 18.6433, -83.2822, 0.96 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 36/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 90.5694, 2.87575, -56.4546, 0.37 ) }
    dend_4 { pt3dadd( 93.2692, 1.17968, -56.6567, 0.37 ) }
    dend_4 { pt3dadd( 94.2556, 0.727434, -56.4993, 0.44 ) }
    dend_4 { pt3dadd( 94.8623, 0.544743, -56.2038, 0.44 ) }
    dend_4 { pt3dadd( 96.7748, 0.179047, -54.9435, 0.74 ) }
    dend_4 { pt3dadd( 97.0538, 0.160819, -54.7447, 0.88 ) }
    dend_4 { pt3dadd( 98.0353, 0.180662, -54.057, 0.37 ) }
    dend_4 { pt3dadd( 99.2954, 0.33464, -53.0607, 0.37 ) }
    dend_4 { pt3dadd( 101.237, 0.649583, -51.4751, 0.88 ) }
    dend_4 { pt3dadd( 101.914, 0.781339, -50.9125, 1.03 ) }
    dend_4 { pt3dadd( 102.947, 1.0018, -50.0631, 0.29 ) }
    dend_4 { pt3dadd( 103.93, 1.24486, -49.2196, 0.29 ) }
    dend_4 { pt3dadd( 104.712, 1.47546, -48.5125, 0.29 ) }
    dend_4 { pt3dadd( 106.234, 1.96557, -47.3124, 0.81 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 50/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -40.7687, -49.7122, -111.398, 0.74 ) }
    dend_51 { pt3dadd( -41.4975, -49.5427, -111.962, 0.74 ) }
    dend_51 { pt3dadd( -42.0643, -49.4352, -112.39, 1.03 ) }
    dend_51 { pt3dadd( -42.9677, -49.2985, -113.128, 0.37 ) }
    dend_51 { pt3dadd( -43.42, -49.2512, -113.54, 0.22 ) }
    dend_51 { pt3dadd( -43.9489, -49.2213, -114.076, 1.4 ) }
    dend_51 { pt3dadd( -44.312, -49.2129, -114.467, 1.55 ) }
    dend_51 { pt3dadd( -44.7698, -49.242, -115.02, 1.55 ) }
    dend_51 { pt3dadd( -45.516, -49.3437, -116.015, 0.81 ) }
    dend_51 { pt3dadd( -46.038, -49.4567, -116.754, 0.52 ) }
    dend_51 { pt3dadd( -46.472, -49.5856, -117.385, 0.88 ) }
    dend_51 { pt3dadd( -46.9571, -49.7471, -118.113, 0.22 ) }
    dend_51 { pt3dadd( -47.329, -49.8622, -118.676, 0.74 ) }
    dend_51 { pt3dadd( -47.6626, -49.9333, -119.169, 0.74 ) }
    dend_51 { pt3dadd( -47.9182, -49.9428, -119.588, 0.74 ) }
    dend_51 { pt3dadd( -48.3327, -49.8997, -120.352, 0.44 ) }
    dend_51 { pt3dadd( -48.6587, -49.8468, -121.012, 0.22 ) }
    dend_51 { pt3dadd( -48.8172, -49.8169, -121.401, 0.81 ) }
    dend_51 { pt3dadd( -49.0415, -49.7757, -121.977, 0.81 ) }
    dend_51 { pt3dadd( -49.8688, -49.6198, -124.105, 0.52 ) }
    dend_51 { pt3dadd( -50.1989, -49.5692, -124.926, 1.03 ) }
    dend_51 { pt3dadd( -50.4814, -49.5576, -125.573, 1.4 ) }
    dend_51 { pt3dadd( -50.9694, -49.5864, -126.591, 1.18 ) }
    dend_51 { pt3dadd( -51.2666, -49.625, -127.161, 0.66 ) }
    dend_51 { pt3dadd( -51.7372, -49.6973, -127.985, 1.18 ) }
    dend_51 { pt3dadd( -52.0274, -49.7402, -128.435, 1.55 ) }
    dend_51 { pt3dadd( -52.706, -49.8243, -129.507, 0.52 ) }
    dend_51 { pt3dadd( -52.9786, -49.8547, -129.971, 1.18 ) }
    dend_51 { pt3dadd( -53.3487, -49.9006, -130.649, 1.18 ) }
    dend_51 { pt3dadd( -53.972, -49.9718, -131.941, 0.29 ) }
    dend_51 { pt3dadd( -54.194, -49.9963, -132.476, 0.29 ) }
    dend_51 { pt3dadd( -54.4431, -50.0176, -133.137, 0.29 ) }
    dend_51 { pt3dadd( -54.7153, -50.0248, -133.897, 0.59 ) }
    dend_51 { pt3dadd( -54.9595, -50.0253, -134.592, 0.59 ) }
    dend_51 { pt3dadd( -55.1474, -50.0154, -135.095, 0.44 ) }
    dend_51 { pt3dadd( -55.6152, -49.9654, -136.251, 1.03 ) }
    dend_51 { pt3dadd( -55.8471, -49.9173, -136.839, 1.33 ) }
    dend_51 { pt3dadd( -56.397, -49.776, -138.177, 0.29 ) }
    dend_51 { pt3dadd( -56.6498, -49.7028, -138.742, 0.29 ) }
    dend_51 { pt3dadd( -56.8916, -49.6289, -139.233, 0.96 ) }
    dend_51 { pt3dadd( -57.2338, -49.5286, -139.842, 0.96 ) }
    dend_51 { pt3dadd( -58.4905, -49.1669, -141.606, 0.29 ) }
    dend_51 { pt3dadd( -58.7549, -49.087, -141.892, 0.29 ) }
    dend_51 { pt3dadd( -59.2529, -48.9532, -142.3, 1.03 ) }
    dend_51 { pt3dadd( -59.7728, -48.8357, -142.63, 1.33 ) }
    dend_51 { pt3dadd( -60.4444, -48.7057, -142.958, 0.74 ) }
    dend_51 { pt3dadd( -61.4041, -48.534, -143.316, 0.37 ) }
    dend_51 { pt3dadd( -62.5913, -48.3393, -143.641, 0.29 ) }
    dend_51 { pt3dadd( -63.2889, -48.2304, -143.843, 0.22 ) }
    dend_51 { pt3dadd( -64.0328, -48.1279, -144.062, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_51 { pt3dadd( -64.7922, -48.0118, -144.289, 0.52 ) }
    dend_51 { pt3dadd( -65.3469, -47.9185, -144.459, 0.96 ) }
    dend_51 { pt3dadd( -65.8241, -47.8319, -144.621, 1.18 ) }
    dend_51 { pt3dadd( -66.3077, -47.7529, -144.795, 1.18 ) }
    dend_51 { pt3dadd( -66.9883, -47.6218, -145.043, 0.74 ) }
    dend_51 { pt3dadd( -67.6139, -47.5052, -145.265, 0.22 ) }
    dend_51 { pt3dadd( -67.9325, -47.4514, -145.368, 0.44 ) }
    dend_51 { pt3dadd( -68.3637, -47.3799, -145.485, 0.44 ) }
    dend_51 { pt3dadd( -68.907, -47.2709, -145.618, 0.22 ) }
    dend_51 { pt3dadd( -69.4696, -47.1347, -145.739, 0.22 ) }
    dend_51 { pt3dadd( -69.8508, -47.0254, -145.814, 0.88 ) }
    dend_51 { pt3dadd( -70.2699, -46.8985, -145.887, 1.25 ) }
    dend_51 { pt3dadd( -70.4743, -46.8222, -145.915, 1.25 ) }
    dend_51 { pt3dadd( -71.4329, -46.3924, -146.017, 0.22 ) }
    dend_51 { pt3dadd( -71.9275, -46.1347, -146.062, 0.22 ) }
    dend_51 { pt3dadd( -72.4359, -45.8375, -146.105, 0.88 ) }
    dend_51 { pt3dadd( -72.8641, -45.5567, -146.14, 1.25 ) }
    dend_51 { pt3dadd( -73.502, -45.0935, -146.19, 0.22 ) }
    dend_51 { pt3dadd( -74.2574, -44.4981, -146.246, 0.22 ) }
    dend_51 { pt3dadd( -74.8577, -43.9781, -146.296, 0.88 ) }
    dend_51 { pt3dadd( -75.2111, -43.6417, -146.325, 0.88 ) }
    dend_51 { pt3dadd( -75.5364, -43.31, -146.329, 0.37 ) }
    dend_51 { pt3dadd( -76.026, -42.7681, -146.289, 0.15 ) }
    dend_51 { pt3dadd( -76.4851, -42.211, -146.21, 0.96 ) }
    dend_51 { pt3dadd( -76.8092, -41.7888, -146.13, 1.18 ) }
    dend_51 { pt3dadd( -77.6397, -40.7133, -145.84, 0.22 ) }
    dend_51 { pt3dadd( -78.4158, -39.7453, -145.517, 0.81 ) }
    dend_51 { pt3dadd( -78.8183, -39.239, -145.325, 0.74 ) }
    dend_51 { pt3dadd( -79.3305, -38.5751, -145.035, 0.29 ) }
    dend_51 { pt3dadd( -79.5037, -38.3474, -144.925, 0.29 ) }
    dend_51 { pt3dadd( -79.9842, -37.7169, -144.598, 0.52 ) }
    dend_51 { pt3dadd( -80.2161, -37.4028, -144.429, 0.66 ) }
    dend_51 { pt3dadd( -80.6089, -36.7823, -144.162, 0.22 ) }
    dend_51 { pt3dadd( -80.784, -36.4529, -144.046, 0.22 ) }
    dend_51 { pt3dadd( -81.0212, -35.8614, -143.869, 0.81 ) }
    dend_51 { pt3dadd( -81.1151, -35.5107, -143.791, 1.11 ) }
    dend_51 { pt3dadd( -81.183, -34.9495, -143.722, 1.11 ) }
    dend_51 { pt3dadd( -81.1936, -34.0756, -143.685, 0.22 ) }
    dend_51 { pt3dadd( -81.162, -33.6024, -143.704, 0.59 ) }
    dend_51 { pt3dadd( -81.1374, -33.31, -143.729, 0.59 ) }
    dend_51 { pt3dadd( -81.0911, -32.7196, -143.79, 0.29 ) }
    dend_51 { pt3dadd( -81.0529, -31.8033, -143.923, 0.22 ) }
    dend_51 { pt3dadd( -81.0307, -30.8923, -144.085, 0.88 ) }
    dend_51 { pt3dadd( -81.0511, -30.0893, -144.23, 1.11 ) }
    dend_51 { pt3dadd( -81.1373, -28.8367, -144.431, 0.22 ) }
    dend_51 { pt3dadd( -81.1915, -28.2645, -144.512, 0.52 ) }
    dend_51 { pt3dadd( -81.3046, -27.36, -144.654, 0.22 ) }
    dend_51 { pt3dadd( -81.4667, -26.345, -144.842, 0.22 ) }
    dend_51 { pt3dadd( -81.6564, -25.32, -145.055, 0.66 ) }
    dend_51 { pt3dadd( -81.8155, -24.4862, -145.259, 0.66 ) }
    dend_51 { pt3dadd( -81.9833, -23.5739, -145.55, 0.88 ) }
    dend_51 { pt3dadd( -82.1726, -22.503, -145.937, 0.66 ) }
    dend_51 { pt3dadd( -82.2957, -21.8184, -146.207, 0.44 ) }
    dend_51 { pt3dadd( -82.4149, -21.2052, -146.479, 0.66 ) }
    dend_51 { pt3dadd( -82.4598, -20.9309, -146.62, 0.66 ) }
    dend_51 { pt3dadd( -82.6446, -19.7714, -147.297, 0.22 ) }
    dend_51 { pt3dadd( -82.7864, -18.9516, -147.797, 0.22 ) }
    dend_51 { pt3dadd( -82.853, -18.5413, -148.02, 1.33 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 58/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -40.7687, -49.7122, -111.398, 0.44 ) }
    dend_50 { pt3dadd( -40.9625, -50.4763, -111.851, 0.44 ) }
    dend_50 { pt3dadd( -41.0964, -51.0611, -112.229, 0.29 ) }
    dend_50 { pt3dadd( -41.1552, -51.3322, -112.425, 0.66 ) }
    dend_50 { pt3dadd( -41.2138, -51.6021, -112.651, 0.66 ) }
    dend_50 { pt3dadd( -41.3095, -52.0568, -113.108, 0.29 ) }
    dend_50 { pt3dadd( -41.3613, -52.2793, -113.353, 0.59 ) }
    dend_50 { pt3dadd( -41.4277, -52.6343, -113.788, 0.37 ) }
    dend_50 { pt3dadd( -41.493, -53.0258, -114.322, 1.18 ) }
    dend_50 { pt3dadd( -41.5247, -53.3744, -114.835, 1.62 ) }
    dend_50 { pt3dadd( -41.4829, -53.7533, -115.471, 1.62 ) }
    dend_50 { pt3dadd( -41.278, -54.2887, -116.524, 0.29 ) }
    dend_50 { pt3dadd( -41.1387, -54.5093, -117.012, 0.29 ) }
    dend_50 { pt3dadd( -41.0209, -54.6493, -117.341, 0.66 ) }
    dend_50 { pt3dadd( -40.7619, -54.9378, -117.992, 0.52 ) }
    dend_50 { pt3dadd( -40.2583, -55.5275, -119.198, 1.18 ) }
    dend_50 { pt3dadd( -39.9124, -55.9605, -119.989, 1.77 ) }
    dend_50 { pt3dadd( -39.7141, -56.2254, -120.447, 1.77 ) }
    dend_50 { pt3dadd( -39.3024, -56.9498, -121.66, 0.29 ) }
    dend_50 { pt3dadd( -39.1782, -57.2651, -122.131, 0.29 ) }
    dend_50 { pt3dadd( -39.0777, -57.6081, -122.594, 0.29 ) }
    dend_50 { pt3dadd( -38.928, -58.1396, -123.265, 1.62 ) }
    dend_50 { pt3dadd( -38.8035, -58.4812, -123.7, 1.69 ) }
    dend_50 { pt3dadd( -38.129, -59.8189, -125.469, 0.29 ) }
    dend_50 { pt3dadd( -37.8663, -60.2099, -126.009, 0.29 ) }
    dend_50 { pt3dadd( -37.6066, -60.5122, -126.447, 0.29 ) }
    dend_50 { pt3dadd( -36.9319, -61.1528, -127.388, 1.25 ) }
    dend_50 { pt3dadd( -36.3071, -61.6222, -128.09, 0.66 ) }
    dend_50 { pt3dadd( -35.7164, -61.9719, -128.593, 0.29 ) }
    dend_50 { pt3dadd( -35.2541, -62.1851, -128.87, 1.03 ) }
    dend_50 { pt3dadd( -34.8603, -62.3381, -129.086, 1.03 ) }
    dend_50 { pt3dadd( -34.3829, -62.5204, -129.321, 0.44 ) }
    dend_50 { pt3dadd( -33.7388, -62.7603, -129.579, 0.29 ) }
    dend_50 { pt3dadd( -33.3448, -62.9073, -129.727, 0.88 ) }
    dend_50 { pt3dadd( -33.0986, -63.0053, -129.82, 1.33 ) }
    dend_50 { pt3dadd( -31.77, -63.6201, -130.431, 0.29 ) }
    dend_50 { pt3dadd( -31.3603, -63.8579, -130.655, 0.96 ) }
    dend_50 { pt3dadd( -31.1407, -64.0179, -130.797, 0.81 ) }
    dend_50 { pt3dadd( -30.7801, -64.3425, -131.085, 0.37 ) }
    dend_50 { pt3dadd( -30.3521, -64.7758, -131.479, 0.66 ) }
    dend_50 { pt3dadd( -29.8337, -65.3362, -131.993, 0.52 ) }
    dend_50 { pt3dadd( -29.5202, -65.6892, -132.321, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_50 { pt3dadd( -29.2751, -65.9444, -132.598, 0.88 ) }
    dend_50 { pt3dadd( -28.4556, -66.649, -133.616, 0.44 ) }
    dend_50 { pt3dadd( -28.1645, -66.8686, -134.025, 0.37 ) }
    dend_50 { pt3dadd( -27.7461, -67.1436, -134.649, 0.29 ) }
    dend_50 { pt3dadd( -27.4141, -67.3252, -135.13, 0.96 ) }
    dend_50 { pt3dadd( -26.8805, -67.5801, -135.904, 1.03 ) }
    dend_50 { pt3dadd( -25.8229, -68.0636, -137.431, 0.74 ) }
    dend_50 { pt3dadd( -25.214, -68.353, -138.295, 1.33 ) }
    dend_50 { pt3dadd( -24.7261, -68.615, -138.969, 1.11 ) }
    dend_50 { pt3dadd( -24.2896, -68.8923, -139.553, 0.44 ) }
    dend_50 { pt3dadd( -23.9976, -69.1205, -139.917, 0.81 ) }
    dend_50 { pt3dadd( -23.6492, -69.4406, -140.289, 0.88 ) }
    dend_50 { pt3dadd( -23.0653, -70.0338, -140.817, 0.22 ) }
    dend_50 { pt3dadd( -22.6804, -70.3945, -141.141, 0.22 ) }
    dend_50 { pt3dadd( -22.4781, -70.5784, -141.328, 0.59 ) }
    dend_50 { pt3dadd( -22.2151, -70.8176, -141.597, 0.59 ) }
    dend_50 { pt3dadd( -21.491, -71.4461, -142.379, 0.37 ) }
    dend_50 { pt3dadd( -21.0706, -71.771, -142.865, 0.59 ) }
    dend_50 { pt3dadd( -20.4793, -72.1983, -143.579, 0.44 ) }
    dend_50 { pt3dadd( -20.1671, -72.4005, -143.991, 0.74 ) }
    dend_50 { pt3dadd( -19.9525, -72.5381, -144.297, 0.74 ) }
    dend_50 { pt3dadd( -19.596, -72.7865, -144.857, 0.37 ) }
    dend_50 { pt3dadd( -19.0059, -73.1879, -145.931, 0.96 ) }
    dend_50 { pt3dadd( -18.7533, -73.3409, -146.442, 0.88 ) }
    dend_50 { pt3dadd( -18.0479, -73.7662, -148.066, 0.66 ) }
    dend_50 { pt3dadd( -17.8023, -73.9079, -148.675, 0.96 ) }
    dend_50 { pt3dadd( -17.5804, -74.0372, -149.264, 0.96 ) }
    dend_50 { pt3dadd( -16.7863, -74.5294, -151.507, 0.66 ) }
    dend_50 { pt3dadd( -16.2261, -74.9325, -153.116, 0.66 ) }
    dend_50 { pt3dadd( -15.5715, -75.4577, -154.972, 0.44 ) }
    dend_50 { pt3dadd( -15.1873, -75.8304, -156.02, 0.74 ) }
    dend_50 { pt3dadd( -14.99, -76.0522, -156.525, 0.37 ) }
    dend_50 { pt3dadd( -14.7707, -76.3514, -157.039, 0.81 ) }
    dend_50 { pt3dadd( -14.4268, -77.0153, -157.767, 0.22 ) }
    dend_50 { pt3dadd( -14.2717, -77.3636, -158.048, 0.81 ) }
    dend_50 { pt3dadd( -13.9661, -78.0789, -158.46, 0.22 ) }
    dend_50 { pt3dadd( -13.5955, -78.9913, -158.888, 0.22 ) }
    dend_50 { pt3dadd( -13.4253, -79.4, -159.074, 0.88 ) }
    dend_50 { pt3dadd( -13.2995, -79.7078, -159.219, 0.88 ) }
    // Section: dend_46, id: dend_46, parent: dend_38 (entry count 39/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -70.1471, -71.3636, -77.865, 0.96 ) }
    dend_46 { pt3dadd( -71.1932, -72.9656, -79.976, 0.96 ) }
    dend_46 { pt3dadd( -72.034, -73.8765, -81.2506, 0.22 ) }
    dend_46 { pt3dadd( -72.4647, -74.3432, -81.9035, 0.52 ) }
    dend_46 { pt3dadd( -72.8036, -74.7103, -82.4173, 0.66 ) }
    dend_46 { pt3dadd( -73.3099, -75.2588, -83.1848, 0.44 ) }
    dend_46 { pt3dadd( -73.8835, -75.8802, -84.0544, 1.33 ) }
    dend_46 { pt3dadd( -74.8425, -76.3767, -85.1415, 1.84 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 47/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -70.1471, -71.3636, -77.865, 0.37 ) }
    dend_39 { pt3dadd( -71.5037, -70.5243, -77.8579, 0.37 ) }
    dend_39 { pt3dadd( -71.9766, -70.2568, -77.8485, 0.37 ) }
    dend_39 { pt3dadd( -72.77, -69.808, -77.8326, 0.22 ) }
    dend_39 { pt3dadd( -73.1986, -69.5655, -77.824, 1.03 ) }
    dend_39 { pt3dadd( -73.6388, -69.3166, -77.8151, 1.77 ) }
    dend_39 { pt3dadd( -74.1634, -69.0198, -77.8046, 2.14 ) }
    dend_39 { pt3dadd( -74.4938, -68.8548, -77.8423, 2.14 ) }
    // Section: dend_36, id: dend_36, parent: dend_32 (entry count 55/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 61.2991, -85.8271, -22.4241, 0.44 ) }
    dend_36 { pt3dadd( 62.1504, -85.6521, -21.6955, 0.44 ) }
    dend_36 { pt3dadd( 62.6832, -85.4686, -21.2371, 0.22 ) }
    dend_36 { pt3dadd( 63.2186, -85.169, -20.8404, 0.22 ) }
    dend_36 { pt3dadd( 63.8921, -84.7546, -20.447, 0.44 ) }
    dend_36 { pt3dadd( 64.1198, -84.6061, -20.3553, 0.81 ) }
    dend_36 { pt3dadd( 64.5025, -84.3477, -20.2269, 0.81 ) }
    dend_36 { pt3dadd( 64.8995, -84.0799, -20.1921, 0.37 ) }
    dend_36 { pt3dadd( 65.7704, -83.4634, -20.2869, 0.44 ) }
    dend_36 { pt3dadd( 66.3001, -83.1154, -20.5203, 0.59 ) }
    dend_36 { pt3dadd( 67.1427, -82.5836, -21.0327, 0.15 ) }
    dend_36 { pt3dadd( 67.7354, -82.2371, -21.4411, 0.29 ) }
    dend_36 { pt3dadd( 68.8672, -81.6252, -22.2622, 1.18 ) }
    dend_36 { pt3dadd( 69.5133, -81.3022, -22.7447, 1.18 ) }
    dend_36 { pt3dadd( 72.114, -80.0747, -24.6514, 0.74 ) }
    dend_36 { pt3dadd( 72.5858, -79.8477, -24.9839, 0.74 ) }
    dend_36 { pt3dadd( 73.2022, -79.5507, -25.3927, 0.96 ) }
    dend_36 { pt3dadd( 73.7261, -79.2882, -25.7108, 0.96 ) }
    dend_36 { pt3dadd( 74.5512, -78.8275, -26.1158, 0.52 ) }
    dend_36 { pt3dadd( 75.4832, -78.2174, -26.4512, 0.29 ) }
    dend_36 { pt3dadd( 76.2359, -77.6523, -26.5862, 0.29 ) }
    dend_36 { pt3dadd( 77.1827, -76.904, -26.7103, 1.33 ) }
    dend_36 { pt3dadd( 77.6347, -76.53, -26.7432, 1.33 ) }
    dend_36 { pt3dadd( 78.5065, -75.7615, -26.7432, 0.44 ) }
    dend_36 { pt3dadd( 79.3551, -74.9628, -26.6629, 0.37 ) }
    dend_36 { pt3dadd( 80.0022, -74.3067, -26.5294, 0.37 ) }
    dend_36 { pt3dadd( 80.2777, -74.017, -26.4332, 0.37 ) }
    dend_36 { pt3dadd( 80.7511, -73.5032, -26.2054, 0.22 ) }
    dend_36 { pt3dadd( 81.7202, -72.4624, -25.6708, 1.55 ) }
    dend_36 { pt3dadd( 82.1187, -72.049, -25.4197, 1.77 ) }
    dend_36 { pt3dadd( 83.0527, -71.0866, -24.8309, 0.37 ) }
    dend_36 { pt3dadd( 83.3715, -70.7134, -24.6316, 0.44 ) }
    dend_36 { pt3dadd( 83.6053, -70.3984, -24.4928, 0.44 ) }
    dend_36 { pt3dadd( 83.8461, -70.044, -24.3644, 0.44 ) }
    dend_36 { pt3dadd( 84.4144, -69.2023, -24.1003, 0.29 ) }
    dend_36 { pt3dadd( 84.803, -68.6304, -23.9496, 0.22 ) }
    dend_36 { pt3dadd( 85.2593, -67.9711, -23.7927, 0.22 ) }
    dend_36 { pt3dadd( 86.0505, -66.8227, -23.5111, 1.18 ) }
    dend_36 { pt3dadd( 86.5367, -66.0952, -23.3177, 1.4 ) }
    dend_36 { pt3dadd( 86.7058, -65.8389, -23.2411, 1.62 ) }
    dend_36 { pt3dadd( 86.9166, -65.5309, -23.1438, 1.62 ) }
    dend_36 { pt3dadd( 87.4771, -64.8542, -22.9107, 0.96 ) }
    dend_36 { pt3dadd( 87.926, -64.3837, -22.733, 0.59 ) }
    dend_36 { pt3dadd( 88.6073, -63.7225, -22.4794, 0.52 ) }
    dend_36 { pt3dadd( 89.3263, -63.038, -22.2115, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_36 { pt3dadd( 89.8954, -62.5194, -22.0037, 1.03 ) }
    dend_36 { pt3dadd( 91.1754, -61.4756, -21.5401, 0.22 ) }
    dend_36 { pt3dadd( 91.6231, -61.1682, -21.3702, 0.66 ) }
    dend_36 { pt3dadd( 91.9529, -60.9886, -21.2325, 0.66 ) }
    dend_36 { pt3dadd( 92.7058, -60.7457, -20.8703, 0.29 ) }
    dend_36 { pt3dadd( 93.224, -60.7684, -20.5433, 0.29 ) }
    dend_36 { pt3dadd( 93.9066, -61.0961, -20.1402, 0.29 ) }
    dend_36 { pt3dadd( 94.6569, -61.7578, -19.7754, 1.33 ) }
    dend_36 { pt3dadd( 95.0409, -62.1729, -19.695, 1.47 ) }
    dend_36 { pt3dadd( 95.7107, -62.9265, -19.6922, 0.74 ) }
    dend_36 { pt3dadd( 96.2919, -63.5547, -19.7695, 0.44 ) }
    dend_36 { pt3dadd( 97.8645, -65.0449, -20.0985, 0.96 ) }
    dend_36 { pt3dadd( 98.3595, -65.4399, -20.2208, 0.74 ) }
    dend_36 { pt3dadd( 99.658, -66.3414, -20.5531, 0.29 ) }
    dend_36 { pt3dadd( 100.361, -66.7619, -20.6914, 0.52 ) }
    dend_36 { pt3dadd( 101.213, -67.2088, -20.7829, 0.29 ) }
    dend_36 { pt3dadd( 102.049, -67.6074, -20.774, 0.66 ) }
    dend_36 { pt3dadd( 102.551, -67.8236, -20.6917, 0.66 ) }
    dend_36 { pt3dadd( 103.254, -68.0562, -20.5629, 0.29 ) }
    dend_36 { pt3dadd( 104.455, -68.3826, -20.3158, 0.96 ) }
    dend_36 { pt3dadd( 105.229, -68.6001, -20.1698, 0.29 ) }
    dend_36 { pt3dadd( 106.056, -68.8276, -20.0365, 1.11 ) }
    dend_36 { pt3dadd( 107.372, -69.167, -19.8418, 0.37 ) }
    dend_36 { pt3dadd( 108.718, -69.4715, -19.6482, 0.96 ) }
    dend_36 { pt3dadd( 109.642, -69.6395, -19.5162, 0.52 ) }
    dend_36 { pt3dadd( 110.49, -69.7718, -19.3967, 0.96 ) }
    dend_36 { pt3dadd( 110.805, -69.8148, -19.3452, 0.96 ) }
    dend_36 { pt3dadd( 111.998, -69.9873, -19.1253, 0.29 ) }
    dend_36 { pt3dadd( 112.536, -70.0757, -18.9941, 0.81 ) }
    dend_36 { pt3dadd( 112.923, -70.1405, -18.8641, 0.81 ) }
    dend_36 { pt3dadd( 113.777, -70.2446, -18.541, 0.29 ) }
    dend_36 { pt3dadd( 114.446, -70.2897, -18.2618, 0.81 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 32/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 61.2991, -85.8271, -22.4241, 0.74 ) }
    dend_33 { pt3dadd( 61.511, -87.5075, -21.9338, 0.74 ) }
    dend_33 { pt3dadd( 61.7107, -88.753, -21.4128, 0.81 ) }
    dend_33 { pt3dadd( 61.9652, -90.0163, -20.7616, 0.81 ) }
    dend_33 { pt3dadd( 62.3054, -91.3508, -19.9662, 0.59 ) }
    dend_33 { pt3dadd( 62.6424, -92.3717, -19.2715, 0.37 ) }
    dend_33 { pt3dadd( 62.864, -92.9235, -18.8321, 0.37 ) }
    dend_33 { pt3dadd( 63.3339, -93.94, -17.8267, 0.88 ) }
    dend_33 { pt3dadd( 63.5501, -94.293, -17.4131, 0.88 ) }
    dend_33 { pt3dadd( 63.8133, -94.6866, -16.9281, 0.88 ) }
    dend_33 { pt3dadd( 64.1872, -95.2565, -16.3181, 0.29 ) }
    dend_33 { pt3dadd( 64.8273, -96.4328, -15.3583, 0.29 ) }
    dend_33 { pt3dadd( 65.1558, -97.2232, -14.913, 1.03 ) }
    dend_33 { pt3dadd( 65.3669, -97.8132, -14.6381, 1.33 ) }
    dend_33 { pt3dadd( 65.7106, -98.8329, -14.162, 1.18 ) }
    dend_33 { pt3dadd( 66.127, -100.025, -13.5692, 1.03 ) }
    dend_33 { pt3dadd( 66.4768, -100.906, -13.0779, 0.81 ) }
    dend_33 { pt3dadd( 67.0992, -102.092, -12.2209, 0.37 ) }
    dend_33 { pt3dadd( 67.8057, -103.082, -11.2294, 0.96 ) }
    dend_33 { pt3dadd( 68.2761, -103.58, -10.5844, 1.18 ) }
    dend_33 { pt3dadd( 68.7925, -104.001, -9.85499, 1.18 ) }
    dend_33 { pt3dadd( 69.3062, -104.304, -9.14982, 0.88 ) }
    dend_33 { pt3dadd( 70.1797, -104.639, -8.10941, 0.44 ) }
    dend_33 { pt3dadd( 70.6639, -104.742, -7.67901, 0.44 ) }
    dend_33 { pt3dadd( 71.6872, -104.877, -7.03934, 0.37 ) }
    dend_33 { pt3dadd( 72.6133, -104.963, -6.65915, 0.37 ) }
    dend_33 { pt3dadd( 74.0502, -105.093, -6.29893, 0.66 ) }
    dend_33 { pt3dadd( 75.1629, -105.229, -6.12776, 1.03 ) }
    dend_33 { pt3dadd( 76.6482, -105.389, -6.01213, 0.74 ) }
    dend_33 { pt3dadd( 77.6939, -105.492, -5.98203, 0.52 ) }
    dend_33 { pt3dadd( 79.069, -105.606, -6.02044, 0.44 ) }
    dend_33 { pt3dadd( 80.2087, -105.733, -6.10837, 0.44 ) }
    dend_33 { pt3dadd( 81.3426, -105.947, -6.18293, 0.37 ) }
    // Section: dend_26, id: dend_26, parent: dend_16 (entry count 65/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -5.20907, 243.064, -28.7482, 0.29 ) }
    dend_26 { pt3dadd( -5.37268, 245.509, -29.3417, 0.29 ) }
    dend_26 { pt3dadd( -5.34631, 246.06, -29.4013, 0.29 ) }
    dend_26 { pt3dadd( -5.31471, 246.645, -29.4116, 0.66 ) }
    dend_26 { pt3dadd( -5.33006, 247.264, -29.361, 0.88 ) }
    dend_26 { pt3dadd( -5.40626, 248.001, -29.2564, 0.88 ) }
    dend_26 { pt3dadd( -5.63489, 249.272, -28.8774, 0.52 ) }
    dend_26 { pt3dadd( -5.88094, 250.253, -28.3168, 0.66 ) }
    dend_26 { pt3dadd( -6.08722, 250.84, -27.8266, 0.81 ) }
    dend_26 { pt3dadd( -6.46398, 251.688, -26.9805, 0.37 ) }
    dend_26 { pt3dadd( -6.78262, 252.283, -26.334, 0.52 ) }
    dend_26 { pt3dadd( -7.53353, 253.488, -24.9527, 0.74 ) }
    dend_26 { pt3dadd( -8.13233, 254.323, -23.9902, 1.03 ) }
    dend_26 { pt3dadd( -9.27254, 255.745, -22.3129, 1.03 ) }
    dend_26 { pt3dadd( -9.82366, 256.411, -21.5388, 0.74 ) }
    dend_26 { pt3dadd( -10.2609, 256.966, -20.9291, 0.44 ) }
    dend_26 { pt3dadd( -10.6783, 257.518, -20.3504, 0.44 ) }
    dend_26 { pt3dadd( -11.3442, 258.434, -19.4876, 0.44 ) }
    dend_26 { pt3dadd( -12.3384, 259.851, -18.2601, 0.88 ) }
    dend_26 { pt3dadd( -12.8629, 260.651, -17.6342, 1.18 ) }
    dend_26 { pt3dadd( -13.2122, 261.222, -17.1748, 0.52 ) }
    dend_26 { pt3dadd( -13.5611, 261.858, -16.6573, 0.52 ) }
    dend_26 { pt3dadd( -13.9784, 262.771, -15.9631, 0.59 ) }
    dend_26 { pt3dadd( -14.216, 263.427, -15.5411, 0.81 ) }
    dend_26 { pt3dadd( -14.4728, 264.264, -15.1635, 0.29 ) }
    dend_26 { pt3dadd( -14.6621, 264.765, -14.9743, 0.29 ) }
    dend_26 { pt3dadd( -14.9704, 265.335, -14.7646, 0.66 ) }
    dend_26 { pt3dadd( -15.3452, 265.822, -14.5116, 0.66 ) }
    dend_26 { pt3dadd( -15.6901, 266.213, -14.2305, 0.37 ) }
    dend_26 { pt3dadd( -16.0254, 266.592, -13.8878, 0.66 ) }
    dend_26 { pt3dadd( -16.4497, 267.121, -13.3909, 0.81 ) }
    dend_26 { pt3dadd( -16.7968, 267.633, -12.94, 0.74 ) }
    dend_26 { pt3dadd( -17.6863, 269.255, -11.5972, 0.44 ) }
    dend_26 { pt3dadd( -17.9719, 269.975, -11.0528, 0.37 ) }
    dend_26 { pt3dadd( -18.1194, 270.64, -10.627, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_26 { pt3dadd( -18.1784, 271.56, -10.1559, 0.29 ) }
    dend_26 { pt3dadd( -18.1443, 272.268, -9.8477, 0.15 ) }
    dend_26 { pt3dadd( -18.0618, 272.823, -9.66291, 0.44 ) }
    dend_26 { pt3dadd( -17.9855, 273.121, -9.6175, 0.44 ) }
    dend_26 { pt3dadd( -17.9194, 273.393, -9.58026, 0.44 ) }
    dend_26 { pt3dadd( -17.6662, 275.187, -9.20969, 0.22 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 6/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -5.20907, 243.064, -28.7482, 0.74 ) }
    dend_17 { pt3dadd( -5.35342, 244.285, -29.3257, 0.74 ) }
    dend_17 { pt3dadd( -5.51967, 245.364, -29.7792, 0.74 ) }
    dend_17 { pt3dadd( -5.8425, 247.105, -30.4477, 0.96 ) }
    dend_17 { pt3dadd( -6.11099, 248.381, -30.8424, 0.96 ) }
    dend_17 { pt3dadd( -6.4698, 249.896, -31.1893, 0.74 ) }
    dend_17 { pt3dadd( -7.00939, 252.001, -31.55, 0.59 ) }
    dend_17 { pt3dadd( -7.29097, 253.03, -31.6312, 0.81 ) }
    dend_17 { pt3dadd( -7.64175, 254.396, -31.6447, 0.81 ) }
    dend_17 { pt3dadd( -8.03339, 256.131, -31.5552, 0.81 ) }
    dend_17 { pt3dadd( -8.3497, 258.041, -31.3883, 0.96 ) }
    dend_17 { pt3dadd( -8.4806, 259.332, -31.2559, 0.96 ) }
    dend_17 { pt3dadd( -8.53955, 261.503, -31.0703, 0.74 ) }
    dend_17 { pt3dadd( -8.47664, 262.692, -30.9998, 1.03 ) }
    dend_17 { pt3dadd( -8.36024, 263.546, -30.9834, 1.03 ) }
    dend_17 { pt3dadd( -8.0791, 264.993, -31.0553, 1.03 ) }
    dend_17 { pt3dadd( -7.91569, 265.75, -31.1268, 1.03 ) }
    dend_17 { pt3dadd( -7.71823, 266.9, -31.2683, 1.03 ) }
    dend_17 { pt3dadd( -7.63654, 267.888, -31.3744, 1.03 ) }
    dend_17 { pt3dadd( -7.64337, 269.037, -31.4905, 0.96 ) }
    dend_17 { pt3dadd( -7.7795, 270.31, -31.5959, 0.74 ) }
    dend_17 { pt3dadd( -7.9758, 271.351, -31.678, 0.74 ) }
    dend_17 { pt3dadd( -8.27592, 272.578, -31.7514, 0.88 ) }
    dend_17 { pt3dadd( -8.73868, 274.153, -31.8077, 1.11 ) }
    dend_17 { pt3dadd( -9.13372, 275.339, -31.8395, 1.11 ) }
    dend_17 { pt3dadd( -9.80573, 277.266, -31.8717, 0.96 ) }
    dend_17 { pt3dadd( -10.157, 278.32, -31.8781, 0.96 ) }
    dend_17 { pt3dadd( -10.475, 279.351, -31.8647, 0.96 ) }
    dend_17 { pt3dadd( -10.7399, 280.233, -31.8319, 0.96 ) }
    dend_17 { pt3dadd( -11.0792, 281.352, -31.76, 0.81 ) }
    dend_17 { pt3dadd( -11.4681, 282.71, -31.6465, 0.96 ) }
    dend_17 { pt3dadd( -11.7247, 283.724, -31.5325, 0.96 ) }
    dend_17 { pt3dadd( -11.9856, 284.919, -31.3397, 0.96 ) }
    dend_17 { pt3dadd( -12.1331, 285.817, -31.17, 1.25 ) }
    dend_17 { pt3dadd( -12.2473, 286.885, -30.9118, 1.25 ) }
    dend_17 { pt3dadd( -12.315, 288.445, -30.4562, 1.11 ) }
    dend_17 { pt3dadd( -12.2869, 289.766, -30.0774, 0.88 ) }
    dend_17 { pt3dadd( -12.1462, 291.137, -29.7215, 0.74 ) }
    dend_17 { pt3dadd( -11.9744, 292.065, -29.5369, 1.18 ) }
    dend_17 { pt3dadd( -11.6872, 293.165, -29.3691, 1.18 ) }
    dend_17 { pt3dadd( -11.4852, 293.854, -29.2689, 1.18 ) }
    dend_17 { pt3dadd( -11.1308, 295.106, -29.0758, 0.96 ) }
    dend_17 { pt3dadd( -10.9147, 296.032, -28.9661, 0.81 ) }
    dend_17 { pt3dadd( -10.7451, 297.053, -28.8763, 0.81 ) }
    dend_17 { pt3dadd( -10.6162, 298.23, -28.7754, 0.81 ) }
    dend_17 { pt3dadd( -10.5089, 299.712, -28.6631, 0.81 ) }
    dend_17 { pt3dadd( -10.4679, 300.896, -28.5612, 1.11 ) }
    dend_17 { pt3dadd( -10.464, 302.158, -28.4594, 1.11 ) }
    dend_17 { pt3dadd( -10.5122, 303.495, -28.4485, 0.96 ) }
    dend_17 { pt3dadd( -10.6111, 304.883, -28.5383, 0.96 ) }
    dend_17 { pt3dadd( -10.8206, 306.759, -28.8204, 0.88 ) }
    dend_17 { pt3dadd( -11.0697, 308.461, -29.2235, 0.88 ) }
    dend_17 { pt3dadd( -11.3227, 309.891, -29.6618, 0.88 ) }
    dend_17 { pt3dadd( -11.7484, 312.103, -30.4513, 0.88 ) }
    dend_17 { pt3dadd( -12.0786, 313.753, -31.0802, 1.11 ) }
    dend_17 { pt3dadd( -12.3573, 315.116, -31.6264, 1.11 ) }
    dend_17 { pt3dadd( -12.5976, 316.377, -32.0755, 1.11 ) }
    dend_17 { pt3dadd( -12.7941, 317.83, -32.4792, 0.81 ) }
    dend_17 { pt3dadd( -12.9364, 320.099, -32.9175, 1.11 ) }
    dend_17 { pt3dadd( -12.9123, 321.058, -33.0136, 1.11 ) }
    dend_17 { pt3dadd( -12.7503, 322.651, -33.1273, 1.11 ) }
    dend_17 { pt3dadd( -12.388, 325.044, -33.2488, 0.96 ) }
    dend_17 { pt3dadd( -12.0585, 326.87, -33.3211, 0.96 ) }
    dend_17 { pt3dadd( -11.8366, 328.098, -33.4071, 0.96 ) }
    dend_17 { pt3dadd( -11.6697, 329.138, -33.5429, 0.96 ) }
    dend_17 { pt3dadd( -11.3535, 331.073, -33.8847, 0.81 ) }
    dend_17 { pt3dadd( -11.1247, 332.356, -34.1662, 0.81 ) }
    dend_17 { pt3dadd( -10.8655, 333.847, -34.5489, 0.66 ) }
    dend_17 { pt3dadd( -10.4859, 336.144, -35.1753, 0.66 ) }
    dend_17 { pt3dadd( -10.2053, 338.036, -35.6819, 0.66 ) }
    dend_17 { pt3dadd( -9.95343, 340.374, -36.2845, 1.03 ) }
    dend_17 { pt3dadd( -9.88749, 341.456, -36.5316, 1.03 ) }
    dend_17 { pt3dadd( -9.86288, 343.559, -37.0348, 0.81 ) }
    dend_17 { pt3dadd( -9.91461, 344.833, -37.3432, 0.81 ) }
    dend_17 { pt3dadd( -10.0323, 346.158, -37.6545, 0.96 ) }
    dend_17 { pt3dadd( -10.2775, 348.104, -38.1243, 0.66 ) }
    dend_17 { pt3dadd( -10.4955, 349.509, -38.4784, 0.88 ) }
    dend_17 { pt3dadd( -10.7253, 351.135, -38.8703, 0.88 ) }
    dend_17 { pt3dadd( -10.9242, 352.894, -39.2469, 0.88 ) }
    dend_17 { pt3dadd( -11.082, 354.883, -39.6052, 1.03 ) }
    dend_17 { pt3dadd( -11.1144, 355.979, -39.807, 1.03 ) }
    dend_17 { pt3dadd( -11.0984, 357.092, -40.0124, 1.03 ) }
    dend_17 { pt3dadd( -11.0241, 359.029, -40.3377, 0.81 ) }
    dend_17 { pt3dadd( -10.9455, 360.872, -40.5822, 0.81 ) }
    dend_17 { pt3dadd( -10.9168, 362.102, -40.7269, 0.81 ) }
    dend_17 { pt3dadd( -10.9276, 364.637, -40.9756, 0.81 ) }
    dend_17 { pt3dadd( -11.0317, 366.514, -41.1313, 1.25 ) }
    dend_17 { pt3dadd( -11.11, 367.184, -41.1859, 1.33 ) }
    dend_17 { pt3dadd( -11.2942, 368.302, -41.2931, 1.33 ) }
    dend_17 { pt3dadd( -11.5356, 369.568, -41.437, 1.18 ) }
    dend_17 { pt3dadd( -11.7501, 370.639, -41.588, 0.74 ) }
    dend_17 { pt3dadd( -12.0817, 372.191, -41.8159, 0.66 ) }
    dend_17 { pt3dadd( -12.3362, 373.427, -42.0409, 0.96 ) }
    dend_17 { pt3dadd( -12.536, 374.546, -42.2834, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_17 { pt3dadd( -12.6602, 375.527, -42.4981, 0.66 ) }
    dend_17 { pt3dadd( -12.7414, 376.843, -42.7325, 0.66 ) }
    dend_17 { pt3dadd( -12.7815, 378.526, -42.95, 0.66 ) }
    dend_17 { pt3dadd( -12.7862, 379.852, -43.0567, 0.96 ) }
    dend_17 { pt3dadd( -12.8128, 380.898, -43.1196, 0.96 ) }
    dend_17 { pt3dadd( -12.8965, 382.02, -43.2115, 0.74 ) }
    dend_17 { pt3dadd( -13.1562, 384.507, -43.4823, 0.74 ) }
    dend_17 { pt3dadd( -13.2561, 385.314, -43.5819, 0.88 ) }
    dend_17 { pt3dadd( -13.5377, 387.405, -43.8902, 0.96 ) }
    dend_17 { pt3dadd( -13.8124, 389.368, -44.1912, 0.81 ) }
    dend_17 { pt3dadd( -14.0993, 391.383, -44.5209, 0.66 ) }
    dend_17 { pt3dadd( -14.3258, 393.144, -44.8387, 0.81 ) }
    dend_17 { pt3dadd( -14.4738, 394.546, -45.0743, 0.96 ) }
    dend_17 { pt3dadd( -14.6227, 396.659, -45.3903, 0.74 ) }
    dend_17 { pt3dadd( -14.6746, 397.717, -45.5121, 1.03 ) }
    dend_17 { pt3dadd( -14.7261, 399.079, -45.5701, 1.03 ) }
    dend_17 { pt3dadd( -14.8149, 401.052, -45.5615, 1.33 ) }
    dend_17 { pt3dadd( -14.8998, 402.313, -45.5403, 1.55 ) }
    dend_17 { pt3dadd( -15.0724, 404.374, -45.4974, 0.81 ) }
    dend_17 { pt3dadd( -15.2309, 405.779, -45.4678, 0.66 ) }
    dend_17 { pt3dadd( -15.4339, 407.197, -45.4608, 0.66 ) }
    dend_17 { pt3dadd( -15.613, 408.224, -45.4855, 0.66 ) }
    dend_17 { pt3dadd( -15.907, 409.783, -45.5838, 0.66 ) }
    dend_17 { pt3dadd( -16.1215, 411.081, -45.7106, 0.66 ) }
    dend_17 { pt3dadd( -16.3028, 412.489, -45.849, 1.25 ) }
    dend_17 { pt3dadd( -16.3587, 413.121, -45.9215, 1.03 ) }
    dend_17 { pt3dadd( -16.4379, 414.83, -46.1551, 0.81 ) }
    dend_17 { pt3dadd( -16.456, 416.356, -46.3569, 0.81 ) }
    dend_17 { pt3dadd( -16.4324, 418.035, -46.5855, 0.66 ) }
    dend_17 { pt3dadd( -16.3642, 419.451, -46.7713, 0.66 ) }
    dend_17 { pt3dadd( -16.2549, 420.854, -46.9428, 0.96 ) }
    dend_17 { pt3dadd( -16.1388, 422.088, -47.0805, 1.4 ) }
    dend_17 { pt3dadd( -16.0358, 423.078, -47.1793, 1.4 ) }
    dend_17 { pt3dadd( -15.9708, 423.81, -47.2484, 1.4 ) }
    dend_17 { pt3dadd( -15.8976, 425.117, -47.3647, 0.88 ) }
    dend_17 { pt3dadd( -15.8233, 426.735, -47.5134, 0.74 ) }
    dend_17 { pt3dadd( -15.7696, 427.794, -47.6208, 0.74 ) }
    dend_17 { pt3dadd( -15.6855, 429.549, -47.8121, 0.74 ) }
    dend_17 { pt3dadd( -15.6027, 431.034, -47.9898, 0.66 ) }
    dend_17 { pt3dadd( -15.4938, 432.701, -48.2121, 0.66 ) }
    dend_17 { pt3dadd( -15.3295, 434.968, -48.5473, 0.66 ) }
    dend_17 { pt3dadd( -15.1833, 436.616, -48.7998, 0.74 ) }
    dend_17 { pt3dadd( -15.07, 437.635, -48.9634, 0.74 ) }
    dend_17 { pt3dadd( -14.906, 438.842, -49.1662, 0.96 ) }
    dend_17 { pt3dadd( -14.7415, 439.919, -49.3438, 1.11 ) }
    dend_17 { pt3dadd( -14.6188, 440.727, -49.4789, 1.11 ) }
    dend_17 { pt3dadd( -14.4505, 442.111, -49.7044, 0.74 ) }
    dend_17 { pt3dadd( -14.3287, 443.306, -49.9088, 0.59 ) }
    dend_17 { pt3dadd( -14.1806, 444.66, -50.1422, 0.59 ) }
    dend_17 { pt3dadd( -14.0179, 445.946, -50.383, 0.88 ) }
    dend_17 { pt3dadd( -13.9399, 446.579, -50.5132, 1.25 ) }
    dend_17 { pt3dadd( -13.8351, 447.527, -50.7252, 1.4 ) }
    dend_17 { pt3dadd( -13.7743, 448.191, -50.885, 1.4 ) }
    dend_17 { pt3dadd( -13.7178, 449.194, -51.1306, 0.88 ) }
    dend_17 { pt3dadd( -13.6906, 450.4, -51.4288, 0.66 ) }
    dend_17 { pt3dadd( -13.7119, 451.981, -51.8081, 0.66 ) }
    dend_17 { pt3dadd( -13.7483, 453.161, -52.0614, 0.66 ) }
    dend_17 { pt3dadd( -13.7863, 453.957, -52.2169, 0.52 ) }
    dend_17 { pt3dadd( -13.8744, 455.476, -52.489, 0.81 ) }
    dend_17 { pt3dadd( -13.9555, 456.656, -52.6988, 0.81 ) }
    dend_17 { pt3dadd( -14.0274, 457.814, -52.8931, 0.66 ) }
    dend_17 { pt3dadd( -14.087, 459.57, -53.1778, 0.59 ) }
    dend_17 { pt3dadd( -14.0958, 460.539, -53.3244, 0.88 ) }
    dend_17 { pt3dadd( -14.0821, 461.69, -53.4977, 1.11 ) }
    dend_17 { pt3dadd( -14.046, 462.835, -53.6643, 1.11 ) }
    dend_17 { pt3dadd( -14.0028, 463.75, -53.7947, 1.11 ) }
    dend_17 { pt3dadd( -13.9484, 464.587, -53.9131, 0.88 ) }
    dend_17 { pt3dadd( -13.8652, 465.599, -54.0757, 0.52 ) }
    dend_17 { pt3dadd( -13.7676, 466.617, -54.2422, 0.81 ) }
    dend_17 { pt3dadd( -13.6641, 467.653, -54.3929, 0.81 ) }
    dend_17 { pt3dadd( -13.6071, 468.265, -54.4599, 0.81 ) }
    dend_17 { pt3dadd( -13.516, 469.362, -54.5664, 0.96 ) }
    dend_17 { pt3dadd( -13.4252, 470.728, -54.683, 0.59 ) }
    dend_17 { pt3dadd( -13.3649, 471.705, -54.761, 0.44 ) }
    dend_17 { pt3dadd( -13.2714, 473.133, -54.8532, 0.44 ) }
    dend_17 { pt3dadd( -13.1938, 474.22, -54.9129, 1.11 ) }
    dend_17 { pt3dadd( -13.1616, 474.712, -54.9348, 1.4 ) }
    dend_17 { pt3dadd( -13.1246, 475.777, -54.9507, 1.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 78/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -16.415, 149.012, -21.2322, 0.29 ) }
    dend_15 { pt3dadd( -16.9014, 149.775, -21.4307, 0.29 ) }
    dend_15 { pt3dadd( -17.2944, 150.421, -21.6607, 0.52 ) }
    dend_15 { pt3dadd( -17.5705, 150.877, -21.8486, 0.52 ) }
    dend_15 { pt3dadd( -18.0705, 151.733, -22.2179, 0.66 ) }
    dend_15 { pt3dadd( -18.2637, 152.078, -22.3704, 0.66 ) }
    dend_15 { pt3dadd( -18.4517, 152.435, -22.4975, 0.37 ) }
    dend_15 { pt3dadd( -18.9061, 153.454, -22.7164, 0.29 ) }
    dend_15 { pt3dadd( -19.034, 153.833, -22.7479, 0.59 ) }
    dend_15 { pt3dadd( -19.1526, 154.303, -22.7478, 0.81 ) }
    dend_15 { pt3dadd( -19.2101, 154.595, -22.7212, 0.81 ) }
    dend_15 { pt3dadd( -19.4302, 155.832, -22.531, 0.74 ) }
    dend_15 { pt3dadd( -19.5466, 156.497, -22.3918, 0.74 ) }
    dend_15 { pt3dadd( -19.7077, 157.318, -22.1759, 0.44 ) }
    dend_15 { pt3dadd( -19.829, 157.865, -22.048, 0.29 ) }
    dend_15 { pt3dadd( -19.9648, 158.411, -21.9474, 0.29 ) }
    dend_15 { pt3dadd( -20.0643, 158.775, -21.9057, 0.52 ) }
    dend_15 { pt3dadd( -20.1827, 159.198, -21.9075, 0.52 ) }
    dend_15 { pt3dadd( -20.3243, 159.71, -21.9441, 0.52 ) }
    dend_15 { pt3dadd( -20.5554, 160.525, -22.0436, 0.74 ) }
    dend_15 { pt3dadd( -20.6979, 161.021, -22.1273, 0.96 ) }
    dend_15 { pt3dadd( -20.7964, 161.382, -22.1998, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_15 { pt3dadd( -20.924, 161.897, -22.3114, 0.59 ) }
    dend_15 { pt3dadd( -21.0594, 162.523, -22.4562, 0.37 ) }
    dend_15 { pt3dadd( -21.1575, 163.104, -22.6387, 0.22 ) }
    dend_15 { pt3dadd( -21.2007, 163.489, -22.7809, 0.22 ) }
    dend_15 { pt3dadd( -21.2247, 163.852, -22.9151, 0.74 ) }
    dend_15 { pt3dadd( -21.2473, 164.383, -23.1154, 1.03 ) }
    dend_15 { pt3dadd( -21.2607, 164.665, -23.2198, 1.03 ) }
    dend_15 { pt3dadd( -21.3166, 165.732, -23.5997, 0.44 ) }
    dend_15 { pt3dadd( -21.3466, 166.47, -23.8637, 0.44 ) }
    dend_15 { pt3dadd( -21.3743, 167.139, -24.0773, 0.37 ) }
    dend_15 { pt3dadd( -21.4031, 167.748, -24.2548, 0.37 ) }
    dend_15 { pt3dadd( -21.431, 168.329, -24.4039, 0.37 ) }
    dend_15 { pt3dadd( -21.4529, 168.948, -24.5278, 0.37 ) }
    dend_15 { pt3dadd( -21.4527, 169.549, -24.6176, 0.37 ) }
    dend_15 { pt3dadd( -21.3925, 170.502, -24.771, 0.88 ) }
    dend_15 { pt3dadd( -21.3297, 170.984, -24.8459, 1.18 ) }
    dend_15 { pt3dadd( -21.2648, 171.343, -24.8993, 1.18 ) }
    dend_15 { pt3dadd( -21.1342, 171.921, -24.9819, 0.74 ) }
    dend_15 { pt3dadd( -20.9494, 172.668, -25.0781, 0.52 ) }
    dend_15 { pt3dadd( -20.78, 173.366, -25.1602, 0.44 ) }
    dend_15 { pt3dadd( -20.5847, 174.141, -25.2476, 0.37 ) }
    dend_15 { pt3dadd( -20.4788, 174.553, -25.2854, 0.37 ) }
    dend_15 { pt3dadd( -20.3089, 175.194, -25.3241, 0.37 ) }
    dend_15 { pt3dadd( -20.0967, 175.969, -25.3385, 0.59 ) }
    dend_15 { pt3dadd( -19.9602, 176.454, -25.3221, 1.03 ) }
    dend_15 { pt3dadd( -19.8276, 176.908, -25.2938, 1.03 ) }
    dend_15 { pt3dadd( -19.6892, 177.398, -25.2564, 0.96 ) }
    dend_15 { pt3dadd( -19.5301, 178.076, -25.197, 0.29 ) }
    dend_15 { pt3dadd( -19.4207, 178.704, -25.1623, 0.29 ) }
    dend_15 { pt3dadd( -19.3824, 179.059, -25.1589, 0.52 ) }
    dend_15 { pt3dadd( -19.3704, 179.397, -25.1632, 0.52 ) }
    dend_15 { pt3dadd( -19.3832, 179.802, -25.1773, 0.29 ) }
    dend_15 { pt3dadd( -19.432, 180.359, -25.2126, 0.52 ) }
    dend_15 { pt3dadd( -19.5072, 181.034, -25.2524, 0.66 ) }
    dend_15 { pt3dadd( -19.5438, 181.616, -25.2648, 0.66 ) }
    dend_15 { pt3dadd( -19.538, 182.165, -25.2648, 0.52 ) }
    dend_15 { pt3dadd( -19.5116, 182.541, -25.2664, 0.81 ) }
    dend_15 { pt3dadd( -19.4644, 182.962, -25.2898, 1.11 ) }
    dend_15 { pt3dadd( -19.3838, 183.624, -25.3607, 0.15 ) }
    dend_15 { pt3dadd( -19.3039, 184.26, -25.4449, 0.15 ) }
    dend_15 { pt3dadd( -19.2411, 184.7, -25.5177, 0.52 ) }
    dend_15 { pt3dadd( -19.1223, 185.445, -25.6669, 0.59 ) }
    dend_15 { pt3dadd( -18.9823, 186.274, -25.8498, 0.29 ) }
    dend_15 { pt3dadd( -18.88, 186.932, -26.0027, 0.29 ) }
    dend_15 { pt3dadd( -18.8077, 187.476, -26.1465, 0.96 ) }
    dend_15 { pt3dadd( -18.776, 187.777, -26.2248, 0.96 ) }
    dend_15 { pt3dadd( -18.7213, 188.269, -26.3301, 0.59 ) }
    dend_15 { pt3dadd( -18.6603, 188.723, -26.4179, 0.22 ) }
    dend_15 { pt3dadd( -18.5768, 189.367, -26.5262, 0.22 ) }
    dend_15 { pt3dadd( -18.5127, 189.913, -26.6252, 0.88 ) }
    dend_15 { pt3dadd( -18.4893, 190.23, -26.6854, 0.88 ) }
    dend_15 { pt3dadd( -18.4793, 190.626, -26.7601, 0.88 ) }
    dend_15 { pt3dadd( -18.4956, 191.29, -26.8908, 0.29 ) }
    dend_15 { pt3dadd( -18.5544, 191.949, -27.0223, 0.22 ) }
    dend_15 { pt3dadd( -18.6034, 192.238, -27.0714, 0.22 ) }
    dend_15 { pt3dadd( -18.7584, 192.855, -27.1423, 0.81 ) }
    dend_15 { pt3dadd( -18.8433, 193.173, -27.1567, 1.11 ) }
    dend_15 { pt3dadd( -18.8892, 193.359, -27.1542, 1.11 ) }
    dend_15 { pt3dadd( -18.966, 193.899, -27.1426, 0.88 ) }
    dend_15 { pt3dadd( -18.9842, 194.429, -27.1496, 0.59 ) }
    dend_15 { pt3dadd( -18.9585, 195.042, -27.1736, 0.29 ) }
    dend_15 { pt3dadd( -18.8791, 195.907, -27.2237, 0.29 ) }
    dend_15 { pt3dadd( -18.8125, 196.601, -27.2746, 0.74 ) }
    dend_15 { pt3dadd( -18.7195, 197.677, -27.3989, 0.52 ) }
    dend_15 { pt3dadd( -18.6674, 198.343, -27.5179, 1.03 ) }
    dend_15 { pt3dadd( -18.6405, 198.865, -27.648, 1.03 ) }
    dend_15 { pt3dadd( -18.6478, 199.188, -27.7465, 0.74 ) }
    dend_15 { pt3dadd( -18.7522, 199.875, -28.0014, 0.44 ) }
    dend_15 { pt3dadd( -18.9487, 200.581, -28.264, 0.88 ) }
    dend_15 { pt3dadd( -19.1052, 201.032, -28.4137, 1.18 ) }
    dend_15 { pt3dadd( -19.1817, 201.257, -28.4919, 1.18 ) }
    dend_15 { pt3dadd( -19.3392, 201.768, -28.6683, 0.59 ) }
    dend_15 { pt3dadd( -19.5317, 202.533, -28.9201, 0.29 ) }
    dend_15 { pt3dadd( -19.684, 203.33, -29.1576, 0.81 ) }
    dend_15 { pt3dadd( -19.8068, 204.1, -29.3533, 0.52 ) }
    dend_15 { pt3dadd( -19.8835, 204.605, -29.4734, 0.52 ) }
    dend_15 { pt3dadd( -19.9575, 205.102, -29.5935, 0.74 ) }
    dend_15 { pt3dadd( -20.0583, 205.723, -29.7376, 0.74 ) }
    dend_15 { pt3dadd( -20.1918, 206.411, -29.8747, 0.22 ) }
    dend_15 { pt3dadd( -20.2574, 206.662, -29.9289, 0.22 ) }
    dend_15 { pt3dadd( -20.3812, 207.049, -30.0127, 0.52 ) }
    dend_15 { pt3dadd( -20.4712, 207.324, -30.0631, 0.52 ) }
    dend_15 { pt3dadd( -20.6341, 207.855, -30.1649, 0.29 ) }
    dend_15 { pt3dadd( -20.7611, 208.308, -30.2526, 0.29 ) }
    dend_15 { pt3dadd( -20.9032, 208.868, -30.3646, 1.03 ) }
    dend_15 { pt3dadd( -21.0053, 209.344, -30.456, 1.03 ) }
    dend_15 { pt3dadd( -21.0673, 209.675, -30.5083, 1.03 ) }
    dend_15 { pt3dadd( -21.1418, 210.163, -30.5624, 0.52 ) }
    dend_15 { pt3dadd( -21.1823, 210.574, -30.5883, 0.29 ) }
    dend_15 { pt3dadd( -21.2162, 210.999, -30.5905, 0.59 ) }
    dend_15 { pt3dadd( -21.2303, 211.286, -30.5695, 0.59 ) }
    dend_15 { pt3dadd( -21.2357, 211.888, -30.5041, 0.22 ) }
    dend_15 { pt3dadd( -21.2195, 212.496, -30.4268, 0.81 ) }
    dend_15 { pt3dadd( -21.191, 212.893, -30.3729, 1.03 ) }
    dend_15 { pt3dadd( -21.1755, 213.034, -30.3553, 1.03 ) }
    dend_15 { pt3dadd( -21.1078, 213.625, -30.2906, 0.59 ) }
    dend_15 { pt3dadd( -21.0569, 214.209, -30.2365, 0.37 ) }
    dend_15 { pt3dadd( -21.0472, 214.538, -30.2066, 0.37 ) }
    dend_15 { pt3dadd( -21.0747, 214.979, -30.1662, 0.66 ) }
    dend_15 { pt3dadd( -21.1126, 215.26, -30.1388, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_15 { pt3dadd( -21.2853, 216.05, -30.0707, 0.29 ) }
    dend_15 { pt3dadd( -21.398, 216.434, -30.0466, 0.29 ) }
    dend_15 { pt3dadd( -21.5997, 217.032, -30.0184, 0.74 ) }
    dend_15 { pt3dadd( -21.756, 217.487, -29.9983, 0.74 ) }
    dend_15 { pt3dadd( -21.9238, 217.983, -29.9735, 0.74 ) }
    dend_15 { pt3dadd( -22.1341, 218.656, -29.9311, 0.29 ) }
    dend_15 { pt3dadd( -22.2992, 219.258, -29.8856, 0.29 ) }
    dend_15 { pt3dadd( -22.473, 220.137, -29.802, 1.33 ) }
    dend_15 { pt3dadd( -22.5205, 220.581, -29.7417, 1.33 ) }
    dend_15 { pt3dadd( -22.5385, 221.212, -29.6441, 1.11 ) }
    dend_15 { pt3dadd( -22.5109, 221.749, -29.551, 0.59 ) }
    dend_15 { pt3dadd( -22.4207, 222.321, -29.4556, 0.44 ) }
    dend_15 { pt3dadd( -22.144, 223.459, -29.3279, 0.29 ) }
    dend_15 { pt3dadd( -21.8741, 224.262, -29.298, 0.74 ) }
    dend_15 { pt3dadd( -21.6981, 224.724, -29.3256, 0.81 ) }
    dend_15 { pt3dadd( -21.5399, 225.111, -29.3889, 0.44 ) }
    dend_15 { pt3dadd( -21.2362, 225.857, -29.5796, 0.22 ) }
    dend_15 { pt3dadd( -20.9798, 226.502, -29.7943, 0.81 ) }
    dend_15 { pt3dadd( -20.8652, 226.793, -29.9147, 0.81 ) }
    dend_15 { pt3dadd( -20.6437, 227.384, -30.1818, 0.22 ) }
    dend_15 { pt3dadd( -20.4788, 227.851, -30.3799, 0.22 ) }
    dend_15 { pt3dadd( -20.2906, 228.423, -30.6159, 0.81 ) }
    dend_15 { pt3dadd( -20.2408, 228.587, -30.6745, 0.81 ) }
    dend_15 { pt3dadd( -20.06, 229.159, -30.8559, 0.29 ) }
    dend_15 { pt3dadd( -19.903, 229.632, -30.9938, 0.88 ) }
    dend_15 { pt3dadd( -19.7084, 230.159, -31.1268, 0.88 ) }
    dend_15 { pt3dadd( -19.4054, 230.981, -31.3068, 0.22 ) }
    dend_15 { pt3dadd( -19.2174, 231.56, -31.414, 0.74 ) }
    dend_15 { pt3dadd( -19.1666, 231.747, -31.4414, 0.88 ) }
    dend_15 { pt3dadd( -19.0439, 232.402, -31.5291, 0.15 ) }
    dend_15 { pt3dadd( -18.971, 232.943, -31.593, 0.52 ) }
    dend_15 { pt3dadd( -18.927, 233.418, -31.6457, 0.22 ) }
    dend_15 { pt3dadd( -18.9006, 233.89, -31.7108, 0.66 ) }
    dend_15 { pt3dadd( -18.8949, 234.125, -31.7558, 0.88 ) }
    dend_15 { pt3dadd( -18.9157, 235.076, -31.9795, 0.22 ) }
    dend_15 { pt3dadd( -18.937, 235.363, -32.0564, 0.59 ) }
    dend_15 { pt3dadd( -18.9825, 235.769, -32.177, 0.44 ) }
    dend_15 { pt3dadd( -19.06, 236.331, -32.3344, 0.22 ) }
    dend_15 { pt3dadd( -19.1126, 236.673, -32.4178, 0.37 ) }
    dend_15 { pt3dadd( -19.2213, 237.281, -32.5343, 0.15 ) }
    dend_15 { pt3dadd( -19.346, 237.878, -32.6089, 0.81 ) }
    dend_15 { pt3dadd( -19.422, 238.226, -32.6396, 1.11 ) }
    dend_15 { pt3dadd( -19.5399, 238.771, -32.6661, 1.03 ) }
    dend_15 { pt3dadd( -19.6444, 239.284, -32.6722, 0.29 ) }
    dend_15 { pt3dadd( -19.741, 239.793, -32.6791, 0.29 ) }
    dend_15 { pt3dadd( -19.8319, 240.257, -32.6899, 0.29 ) }
    dend_15 { pt3dadd( -19.9966, 241.087, -32.7219, 0.22 ) }
    dend_15 { pt3dadd( -20.1003, 241.594, -32.7482, 0.74 ) }
    dend_15 { pt3dadd( -20.3325, 242.701, -32.8306, 0.22 ) }
    dend_15 { pt3dadd( -20.4809, 243.362, -32.8858, 0.81 ) }
    dend_15 { pt3dadd( -20.7997, 244.72, -33.008, 0.22 ) }
    dend_15 { pt3dadd( -20.8565, 244.957, -33.0303, 0.22 ) }
    dend_15 { pt3dadd( -20.9723, 245.453, -33.0774, 0.81 ) }
    dend_15 { pt3dadd( -21.0102, 245.636, -33.0925, 1.03 ) }
    dend_15 { pt3dadd( -21.0892, 246.072, -33.1188, 0.22 ) }
    dend_15 { pt3dadd( -21.1601, 246.487, -33.1265, 0.44 ) }
    dend_15 { pt3dadd( -21.2405, 247.012, -33.1182, 0.22 ) }
    dend_15 { pt3dadd( -21.2987, 247.412, -33.1071, 0.44 ) }
    dend_15 { pt3dadd( -21.3677, 247.92, -33.0854, 0.22 ) }
    dend_15 { pt3dadd( -21.4441, 248.421, -33.0604, 0.44 ) }
    dend_15 { pt3dadd( -21.5416, 248.942, -33.0264, 0.59 ) }
    dend_15 { pt3dadd( -21.6707, 249.489, -33.0113, 0.29 ) }
    dend_15 { pt3dadd( -21.8703, 250.19, -33.0329, 0.44 ) }
    dend_15 { pt3dadd( -22.107, 250.909, -33.087, 0.44 ) }
    dend_15 { pt3dadd( -22.4508, 251.897, -33.1952, 0.81 ) }
    dend_15 { pt3dadd( -22.6332, 252.443, -33.2899, 0.96 ) }
    dend_15 { pt3dadd( -22.8651, 253.166, -33.4733, 0.66 ) }
    dend_15 { pt3dadd( -23.1972, 254.081, -33.7717, 0.29 ) }
    dend_15 { pt3dadd( -23.3167, 254.372, -33.8906, 0.44 ) }
    dend_15 { pt3dadd( -23.5188, 254.846, -34.1224, 0.15 ) }
    dend_15 { pt3dadd( -23.8003, 255.511, -34.5028, 0.44 ) }
    dend_15 { pt3dadd( -23.9839, 255.982, -34.7874, 0.44 ) }
    dend_15 { pt3dadd( -24.1713, 256.492, -35.0734, 0.15 ) }
    dend_15 { pt3dadd( -24.2411, 256.679, -35.1946, 0.74 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 74/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -16.415, 149.012, -21.2322, 0.22 ) }
    dend_14 { pt3dadd( -15.3956, 150.34, -21.5789, 0.22 ) }
    dend_14 { pt3dadd( -14.8702, 150.921, -21.6809, 0.22 ) }
    dend_14 { pt3dadd( -14.362, 151.484, -21.7795, 0.22 ) }
    dend_14 { pt3dadd( -13.8306, 152.072, -21.8827, 0.22 ) }
    dend_14 { pt3dadd( -13.4063, 152.542, -21.965, 0.44 ) }
    dend_14 { pt3dadd( -12.5907, 153.445, -22.1233, 0.74 ) }
    dend_14 { pt3dadd( -12.0325, 154.12, -22.1647, 0.88 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 82/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -73.8258, 103.391, -11.9304, 0.29 ) }
    dend_10 { pt3dadd( -74.6386, 103.066, -11.9907, 0.29 ) }
    dend_10 { pt3dadd( -75.1291, 102.87, -12.027, 0.29 ) }
    dend_10 { pt3dadd( -75.8519, 102.581, -12.0806, 0.29 ) }
    dend_10 { pt3dadd( -76.6481, 102.263, -12.1396, 0.29 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 87/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -73.8258, 103.391, -11.9304, 0.22 ) }
    dend_9 { pt3dadd( -74.8741, 104.849, -12.0573, 0.22 ) }
    dend_9 { pt3dadd( -75.416, 105.603, -12.1229, 0.66 ) }
    dend_9 { pt3dadd( -75.6584, 105.94, -12.1523, 0.66 ) }
    dend_9 { pt3dadd( -76.1155, 106.576, -12.2076, 0.29 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 92/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -82.853, -18.5413, -148.02, 0.22 ) }
    dend_53 { pt3dadd( -81.1199, -14.9491, -150.294, 0.22 ) }
    dend_53 { pt3dadd( -80.701, -14.081, -150.843, 0.22 ) }
    dend_53 { pt3dadd( -79.8921, -12.4044, -151.904, 0.88 ) }
    dend_53 { pt3dadd( -79.6319, -11.8648, -152.246, 0.66 ) }
    dend_53 { pt3dadd( -79.4075, -11.3999, -152.54, 0.66 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 98/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -82.853, -18.5413, -148.02, 0.22 ) }
    dend_52 { pt3dadd( -83.5047, -17.8651, -148.462, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_52 { pt3dadd( -83.7781, -17.636, -148.667, 0.44 ) }
    dend_52 { pt3dadd( -84.3068, -17.243, -149.094, 0.22 ) }
    dend_52 { pt3dadd( -84.5132, -17.102, -149.26, 0.59 ) }
    dend_52 { pt3dadd( -85.0771, -16.7226, -149.692, 0.29 ) }
    dend_52 { pt3dadd( -85.7767, -16.2518, -150.227, 0.29 ) }
    dend_52 { pt3dadd( -86.1546, -16.0364, -150.529, 0.29 ) }
    dend_52 { pt3dadd( -86.45, -15.8936, -150.787, 0.59 ) }
    dend_52 { pt3dadd( -86.8625, -15.733, -151.186, 0.22 ) }
    dend_52 { pt3dadd( -87.2042, -15.6117, -151.516, 0.44 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 9/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -74.8425, -76.3767, -85.1415, 0.37 ) }
    dend_48 { pt3dadd( -75.2541, -77.9815, -85.2763, 0.37 ) }
    dend_48 { pt3dadd( -75.54, -79.0968, -85.3408, 0.15 ) }
    dend_48 { pt3dadd( -75.7923, -80.0123, -85.3399, 0.44 ) }
    dend_48 { pt3dadd( -76.0212, -80.7886, -85.3178, 0.44 ) }
    dend_48 { pt3dadd( -76.3584, -81.8768, -85.2675, 0.22 ) }
    dend_48 { pt3dadd( -76.6653, -82.794, -85.2157, 1.03 ) }
    dend_48 { pt3dadd( -76.8076, -83.1344, -85.1792, 1.03 ) }
    dend_48 { pt3dadd( -77.396, -84.3068, -85.0049, 0.29 ) }
    dend_48 { pt3dadd( -77.8331, -85.0738, -84.8823, 1.03 ) }
    dend_48 { pt3dadd( -78.3003, -85.7708, -84.7617, 1.03 ) }
    dend_48 { pt3dadd( -78.8148, -86.4415, -84.6419, 0.29 ) }
    dend_48 { pt3dadd( -79.5619, -87.3191, -84.4687, 0.29 ) }
    dend_48 { pt3dadd( -80.0091, -87.7912, -84.3617, 0.81 ) }
    dend_48 { pt3dadd( -80.4767, -88.2319, -84.2554, 0.52 ) }
    dend_48 { pt3dadd( -81.5718, -89.1992, -84.0099, 0.29 ) }
    dend_48 { pt3dadd( -82.507, -89.9855, -83.8073, 0.74 ) }
    dend_48 { pt3dadd( -83.0785, -90.4089, -83.6799, 1.03 ) }
    dend_48 { pt3dadd( -84.35, -91.2628, -83.3955, 0.22 ) }
    dend_48 { pt3dadd( -84.9522, -91.6274, -83.2602, 0.22 ) }
    dend_48 { pt3dadd( -85.281, -91.8017, -83.1892, 0.59 ) }
    dend_48 { pt3dadd( -85.5352, -91.929, -83.1397, 0.59 ) }
    dend_48 { pt3dadd( -87.0359, -92.6997, -82.8524, 0.59 ) }
    dend_48 { pt3dadd( -87.7413, -93.1424, -82.741, 0.37 ) }
    dend_48 { pt3dadd( -88.7878, -93.8928, -82.6161, 1.25 ) }
    dend_48 { pt3dadd( -89.1601, -94.1838, -82.5747, 1.47 ) }
    dend_48 { pt3dadd( -90.108, -94.971, -82.4947, 0.37 ) }
    dend_48 { pt3dadd( -90.7134, -95.5153, -82.4873, 1.03 ) }
    dend_48 { pt3dadd( -91.7206, -96.5159, -82.5704, 0.29 ) }
    dend_48 { pt3dadd( -92.1691, -96.9439, -82.6279, 0.44 ) }
    dend_48 { pt3dadd( -92.4733, -97.2081, -82.6444, 0.66 ) }
    dend_48 { pt3dadd( -92.8025, -97.4737, -82.6343, 0.52 ) }
    dend_48 { pt3dadd( -93.5384, -97.9631, -82.5465, 0.29 ) }
    dend_48 { pt3dadd( -94.2647, -98.3579, -82.3897, 0.74 ) }
    dend_48 { pt3dadd( -94.5891, -98.4884, -82.2726, 0.74 ) }
    dend_48 { pt3dadd( -96.1603, -99.1008, -81.6049, 0.22 ) }
    dend_48 { pt3dadd( -96.548, -99.2572, -81.413, 0.44 ) }
    dend_48 { pt3dadd( -97.0186, -99.4376, -81.1347, 0.59 ) }
    dend_48 { pt3dadd( -97.8284, -99.7219, -80.6296, 0.37 ) }
    dend_48 { pt3dadd( -98.7916, -100.056, -80.0384, 0.74 ) }
    dend_48 { pt3dadd( -99.3101, -100.237, -79.7541, 0.74 ) }
    dend_48 { pt3dadd( -100.02, -100.505, -79.435, 0.29 ) }
    dend_48 { pt3dadd( -101.229, -101.004, -78.9518, 1.03 ) }
    dend_48 { pt3dadd( -102.366, -101.547, -78.5666, 0.22 ) }
    dend_48 { pt3dadd( -102.824, -101.784, -78.4493, 0.88 ) }
    dend_48 { pt3dadd( -104.108, -102.54, -78.2339, 0.29 ) }
    dend_48 { pt3dadd( -104.893, -103.026, -78.1458, 0.15 ) }
    dend_48 { pt3dadd( -105.47, -103.413, -78.1307, 0.74 ) }
    dend_48 { pt3dadd( -106.287, -104.05, -78.2142, 1.03 ) }
    dend_48 { pt3dadd( -106.836, -104.527, -78.3235, 1.11 ) }
    dend_48 { pt3dadd( -107.841, -105.457, -78.6003, 0.22 ) }
    dend_48 { pt3dadd( -108.087, -105.707, -78.6862, 0.59 ) }
    dend_48 { pt3dadd( -108.276, -105.915, -78.7538, 0.59 ) }
    dend_48 { pt3dadd( -109.242, -107.044, -79.0992, 0.22 ) }
    dend_48 { pt3dadd( -109.565, -107.452, -79.1951, 0.74 ) }
    dend_48 { pt3dadd( -109.914, -107.899, -79.2331, 0.74 ) }
    dend_48 { pt3dadd( -110.523, -108.649, -79.1158, 0.22 ) }
    dend_48 { pt3dadd( -111.17, -109.478, -78.8135, 0.59 ) }
    dend_48 { pt3dadd( -111.405, -109.811, -78.6454, 0.74 ) }
    dend_48 { pt3dadd( -111.897, -110.599, -78.1634, 0.22 ) }
    dend_48 { pt3dadd( -112.481, -111.533, -77.5096, 0.88 ) }
    dend_48 { pt3dadd( -113.105, -112.559, -76.6919, 0.15 ) }
    dend_48 { pt3dadd( -113.312, -112.9, -76.3676, 0.15 ) }
    dend_48 { pt3dadd( -113.659, -113.413, -75.7783, 0.74 ) }
    dend_48 { pt3dadd( -113.893, -113.758, -75.366, 0.74 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 74/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -74.8425, -76.3767, -85.1415, 0.29 ) }
    dend_47 { pt3dadd( -75.8416, -74.9224, -85.6605, 0.29 ) }
    dend_47 { pt3dadd( -76.791, -73.7844, -86.131, 0.29 ) }
    dend_47 { pt3dadd( -77.8609, -72.6912, -86.5454, 0.29 ) }
    dend_47 { pt3dadd( -78.4095, -72.1761, -86.7325, 0.29 ) }
    dend_47 { pt3dadd( -79.6856, -71.0693, -87.1193, 0.52 ) }
    dend_47 { pt3dadd( -80.5475, -70.4068, -87.3645, 0.74 ) }
    dend_47 { pt3dadd( -81.4455, -69.8239, -87.553, 0.37 ) }
    dend_47 { pt3dadd( -82.6803, -69.1496, -87.7982, 0.66 ) }
    dend_47 { pt3dadd( -83.1771, -68.9351, -87.9082, 1.03 ) }
    dend_47 { pt3dadd( -84.3732, -68.5446, -88.1482, 1.03 ) }
    dend_47 { pt3dadd( -86.0825, -68.172, -88.4277, 0.22 ) }
    dend_47 { pt3dadd( -87.1872, -68.0092, -88.5664, 0.22 ) }
    dend_47 { pt3dadd( -88.4042, -67.9452, -88.585, 0.44 ) }
    dend_47 { pt3dadd( -89.2084, -67.9566, -88.5395, 0.44 ) }
    dend_47 { pt3dadd( -90.4668, -68.0203, -88.3834, 0.29 ) }
    dend_47 { pt3dadd( -91.6176, -68.1456, -88.1686, 1.11 ) }
    dend_47 { pt3dadd( -92.2089, -68.2393, -88.0323, 1.25 ) }
    dend_47 { pt3dadd( -94.6519, -68.7574, -87.4144, 0.66 ) }
    dend_47 { pt3dadd( -96.0208, -69.0998, -87.0338, 0.22 ) }
    dend_47 { pt3dadd( -96.808, -69.3317, -86.7888, 0.22 ) }
    dend_47 { pt3dadd( -97.7323, -69.6637, -86.4551, 0.22 ) }
    dend_47 { pt3dadd( -98.5208, -70.0132, -86.169, 0.81 ) }
    dend_47 { pt3dadd( -99.1456, -70.3304, -85.9587, 0.81 ) }
    dend_47 { pt3dadd( -99.823, -70.7354, -85.7742, 0.29 ) }
    dend_47 { pt3dadd( -100.878, -71.3721, -85.5273, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_47 { pt3dadd( -102.53, -72.264, -85.2517, 0.22 ) }
    dend_47 { pt3dadd( -103.19, -72.5557, -85.2015, 0.52 ) }
    dend_47 { pt3dadd( -104.189, -72.9314, -85.1925, 0.29 ) }
    dend_47 { pt3dadd( -104.91, -73.1737, -85.2469, 0.66 ) }
    dend_47 { pt3dadd( -106.284, -73.599, -85.4795, 0.29 ) }
    dend_47 { pt3dadd( -106.936, -73.8314, -85.661, 0.96 ) }
    dend_47 { pt3dadd( -107.33, -73.9844, -85.7935, 0.96 ) }
    dend_47 { pt3dadd( -108.729, -74.5379, -86.2437, 0.29 ) }
    dend_47 { pt3dadd( -109.597, -74.8724, -86.4629, 1.33 ) }
    dend_47 { pt3dadd( -110.462, -75.1709, -86.6264, 1.55 ) }
    dend_47 { pt3dadd( -111.956, -75.5837, -86.8351, 0.29 ) }
    dend_47 { pt3dadd( -112.725, -75.7429, -86.9055, 0.29 ) }
    dend_47 { pt3dadd( -113.803, -75.9178, -86.9453, 0.52 ) }
    dend_47 { pt3dadd( -115.171, -76.0724, -86.9846, 0.96 ) }
    dend_47 { pt3dadd( -116.13, -76.146, -86.968, 0.44 ) }
    dend_47 { pt3dadd( -117.362, -76.2082, -86.8726, 0.29 ) }
    dend_47 { pt3dadd( -118.97, -76.2206, -86.647, 0.88 ) }
    dend_47 { pt3dadd( -120.047, -76.2688, -86.4527, 0.96 ) }
    // Section: dend_45, id: dend_45, parent: dend_39 (entry count 18/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -74.4938, -68.8548, -77.8423, 0.29 ) }
    dend_45 { pt3dadd( -75.1023, -69.7563, -78.4923, 0.29 ) }
    dend_45 { pt3dadd( -75.8825, -70.8113, -78.8652, 0.29 ) }
    dend_45 { pt3dadd( -76.6103, -71.678, -79.0204, 0.81 ) }
    dend_45 { pt3dadd( -77.2896, -72.3757, -79.062, 0.81 ) }
    dend_45 { pt3dadd( -78.0885, -73.0465, -78.9813, 0.37 ) }
    dend_45 { pt3dadd( -80.0876, -74.3815, -78.4956, 0.37 ) }
    dend_45 { pt3dadd( -81.1131, -74.8187, -78.0213, 0.59 ) }
    dend_45 { pt3dadd( -81.8354, -75.0327, -77.6406, 0.88 ) }
    dend_45 { pt3dadd( -82.6752, -75.2216, -77.173, 0.88 ) }
    dend_45 { pt3dadd( -84.0773, -75.493, -76.3497, 1.03 ) }
    dend_45 { pt3dadd( -85.2783, -75.7303, -75.6134, 1.03 ) }
    dend_45 { pt3dadd( -86.8072, -76.1008, -74.5985, 0.59 ) }
    dend_45 { pt3dadd( -87.7861, -76.456, -73.8257, 0.37 ) }
    dend_45 { pt3dadd( -88.8895, -77.0864, -72.7742, 0.37 ) }
    dend_45 { pt3dadd( -89.7734, -77.839, -71.7973, 0.66 ) }
    dend_45 { pt3dadd( -90.3701, -78.5468, -71.0738, 0.96 ) }
    dend_45 { pt3dadd( -91.3475, -79.9828, -69.8146, 1.03 ) }
    dend_45 { pt3dadd( -92.0302, -81.1019, -68.8983, 0.44 ) }
    dend_45 { pt3dadd( -92.5964, -81.9818, -68.1585, 0.44 ) }
    dend_45 { pt3dadd( -92.9542, -82.5339, -67.7014, 0.66 ) }
    dend_45 { pt3dadd( -93.3642, -83.1317, -67.1928, 0.88 ) }
    dend_45 { pt3dadd( -93.863, -83.7706, -66.3757, 0.88 ) }
    dend_45 { pt3dadd( -94.4092, -84.4531, -65.1583, 0.44 ) }
    dend_45 { pt3dadd( -94.8213, -84.9839, -63.9147, 0.74 ) }
    dend_45 { pt3dadd( -95.0753, -85.416, -62.766, 0.74 ) }
    dend_45 { pt3dadd( -95.2238, -85.8941, -61.4011, 1.03 ) }
    dend_45 { pt3dadd( -95.2711, -87.1478, -57.4698, 0.44 ) }
    dend_45 { pt3dadd( -95.181, -87.4461, -56.4111, 0.44 ) }
    dend_45 { pt3dadd( -95.1048, -87.5469, -55.9401, 0.74 ) }
    dend_45 { pt3dadd( -94.8344, -87.7518, -54.6076, 0.74 ) }
    dend_45 { pt3dadd( -94.5613, -87.8534, -53.2671, 0.66 ) }
    dend_45 { pt3dadd( -94.377, -87.8137, -52.4495, 0.52 ) }
    dend_45 { pt3dadd( -94.1336, -87.6494, -51.5726, 0.52 ) }
    dend_45 { pt3dadd( -93.7151, -86.8287, -49.4704, 1.03 ) }
    dend_45 { pt3dadd( -93.5562, -85.8986, -48.1231, 0.22 ) }
    dend_45 { pt3dadd( -93.6532, -85.0117, -47.5444, 0.22 ) }
    dend_45 { pt3dadd( -94.2374, -83.1796, -47.0859, 0.22 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 56/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -74.4938, -68.8548, -77.8423, 0.29 ) }
    dend_40 { pt3dadd( -75.4914, -68.0195, -78.4956, 0.29 ) }
    dend_40 { pt3dadd( -75.9859, -67.6636, -78.6873, 0.29 ) }
    dend_40 { pt3dadd( -76.3795, -67.3938, -78.7439, 0.66 ) }
    dend_40 { pt3dadd( -76.8269, -67.0847, -78.7756, 0.66 ) }
    dend_40 { pt3dadd( -77.4, -66.7077, -78.7977, 0.44 ) }
    dend_40 { pt3dadd( -77.9626, -66.3376, -78.8195, 0.29 ) }
    dend_40 { pt3dadd( -79.0943, -65.6662, -78.7931, 0.59 ) }
    dend_40 { pt3dadd( -80.0528, -65.1123, -78.6725, 1.03 ) }
    dend_40 { pt3dadd( -80.8276, -64.6644, -78.503, 1.4 ) }
    dend_40 { pt3dadd( -81.1645, -64.471, -78.3939, 1.4 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 67/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 81.3426, -105.947, -6.18293, 0.81 ) }
    dend_35 { pt3dadd( 82.2777, -106.543, -6.60945, 0.81 ) }
    dend_35 { pt3dadd( 82.7707, -106.869, -6.81055, 1.11 ) }
    dend_35 { pt3dadd( 85.3238, -108.5, -7.71626, 0.44 ) }
    dend_35 { pt3dadd( 85.7815, -108.765, -7.85587, 0.29 ) }
    dend_35 { pt3dadd( 86.3451, -109.058, -8.00048, 0.29 ) }
    dend_35 { pt3dadd( 87.3369, -109.542, -8.23267, 0.29 ) }
    dend_35 { pt3dadd( 88.0573, -109.808, -8.4052, 0.59 ) }
    dend_35 { pt3dadd( 88.582, -109.987, -8.61611, 0.74 ) }
    dend_35 { pt3dadd( 89.2162, -110.183, -8.88332, 0.37 ) }
    dend_35 { pt3dadd( 89.942, -110.362, -9.23085, 0.81 ) }
    dend_35 { pt3dadd( 90.3255, -110.433, -9.42209, 0.96 ) }
    dend_35 { pt3dadd( 91.8328, -110.659, -10.2067, 1.4 ) }
    dend_35 { pt3dadd( 94.789, -111.014, -12.0359, 0.74 ) }
    dend_35 { pt3dadd( 95.5902, -111.092, -12.5743, 0.29 ) }
    dend_35 { pt3dadd( 96.3435, -111.154, -13.1006, 0.29 ) }
    dend_35 { pt3dadd( 96.7812, -111.179, -13.4075, 0.66 ) }
    dend_35 { pt3dadd( 98.5333, -111.242, -14.578, 1.69 ) }
    dend_35 { pt3dadd( 101.656, -111.292, -16.4899, 1.18 ) }
    dend_35 { pt3dadd( 103.758, -111.329, -17.6455, 0.74 ) }
    dend_35 { pt3dadd( 104.881, -111.407, -18.2444, 1.47 ) }
    dend_35 { pt3dadd( 105.301, -111.469, -18.4515, 1.47 ) }
    dend_35 { pt3dadd( 106.358, -111.71, -18.9196, 0.29 ) }
    dend_35 { pt3dadd( 107.482, -112.131, -19.2587, 0.29 ) }
    dend_35 { pt3dadd( 108.428, -112.77, -19.3096, 1.11 ) }
    dend_35 { pt3dadd( 109.196, -113.543, -19.2387, 0.29 ) }
    dend_35 { pt3dadd( 109.643, -114.132, -19.1555, 1.25 ) }
    dend_35 { pt3dadd( 109.888, -114.498, -19.1049, 1.25 ) }
    dend_35 { pt3dadd( 110.399, -115.33, -18.9933, 0.15 ) }
    dend_35 { pt3dadd( 110.72, -115.785, -18.9234, 0.59 ) }
    dend_35 { pt3dadd( 110.948, -116.003, -18.8848, 0.59 ) }
    dend_35 { pt3dadd( 111.637, -116.486, -18.8024, 0.22 ) }
    dend_35 { pt3dadd( 112.453, -116.952, -18.7063, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_35 { pt3dadd( 113.005, -117.218, -18.6394, 1.84 ) }
    dend_35 { pt3dadd( 114.186, -117.705, -18.4825, 0.22 ) }
    dend_35 { pt3dadd( 114.917, -117.992, -18.3565, 0.59 ) }
    dend_35 { pt3dadd( 115.778, -118.349, -18.174, 0.22 ) }
    dend_35 { pt3dadd( 116.433, -118.653, -18.0068, 0.22 ) }
    dend_35 { pt3dadd( 117.09, -119.039, -17.7889, 0.88 ) }
    dend_35 { pt3dadd( 117.436, -119.281, -17.6525, 1.11 ) }
    dend_35 { pt3dadd( 118.364, -120.034, -17.229, 0.22 ) }
    dend_35 { pt3dadd( 118.832, -120.445, -16.9891, 1.33 ) }
    dend_35 { pt3dadd( 119.085, -120.678, -16.8584, 1.55 ) }
    dend_35 { pt3dadd( 119.765, -121.39, -16.4967, 0.22 ) }
    dend_35 { pt3dadd( 120.192, -121.889, -16.2629, 0.66 ) }
    dend_35 { pt3dadd( 120.408, -122.166, -16.1485, 0.66 ) }
    dend_35 { pt3dadd( 120.848, -122.775, -15.9359, 0.22 ) }
    dend_35 { pt3dadd( 121.253, -123.344, -15.7611, 0.44 ) }
    dend_35 { pt3dadd( 121.588, -123.816, -15.6351, 0.22 ) }
    dend_35 { pt3dadd( 121.921, -124.27, -15.532, 0.96 ) }
    dend_35 { pt3dadd( 122.17, -124.623, -15.4315, 1.18 ) }
    dend_35 { pt3dadd( 122.967, -125.817, -15.0355, 0.15 ) }
    dend_35 { pt3dadd( 123.279, -126.294, -14.8488, 0.96 ) }
    dend_35 { pt3dadd( 123.518, -126.627, -14.7287, 0.96 ) }
    dend_35 { pt3dadd( 123.966, -127.222, -14.5331, 0.15 ) }
    dend_35 { pt3dadd( 124.884, -128.425, -14.1856, 0.81 ) }
    dend_35 { pt3dadd( 125.381, -129.022, -14.0498, 0.81 ) }
    dend_35 { pt3dadd( 126.086, -129.78, -13.9198, 0.29 ) }
    dend_35 { pt3dadd( 127.301, -130.934, -13.7828, 0.44 ) }
    dend_35 { pt3dadd( 127.796, -131.339, -13.7507, 0.81 ) }
    dend_35 { pt3dadd( 128.196, -131.599, -13.741, 0.81 ) }
    dend_35 { pt3dadd( 129.233, -132.092, -13.7932, 0.37 ) }
    dend_35 { pt3dadd( 129.937, -132.348, -13.8214, 0.29 ) }
    dend_35 { pt3dadd( 130.685, -132.573, -13.817, 0.59 ) }
    dend_35 { pt3dadd( 131.421, -132.779, -13.7689, 0.44 ) }
    dend_35 { pt3dadd( 132.359, -133.019, -13.696, 0.29 ) }
    dend_35 { pt3dadd( 133.513, -133.302, -13.5756, 0.59 ) }
    dend_35 { pt3dadd( 134.241, -133.469, -13.5244, 0.59 ) }
    dend_35 { pt3dadd( 134.898, -133.606, -13.5106, 0.29 ) }
    dend_35 { pt3dadd( 135.998, -133.806, -13.5139, 0.29 ) }
    dend_35 { pt3dadd( 136.669, -133.921, -13.5307, 0.29 ) }
    dend_35 { pt3dadd( 137.232, -134.023, -13.5204, 0.74 ) }
    dend_35 { pt3dadd( 138.575, -134.257, -13.4244, 0.74 ) }
    dend_35 { pt3dadd( 139.173, -134.372, -13.374, 0.37 ) }
    dend_35 { pt3dadd( 139.551, -134.448, -13.3366, 1.03 ) }
    dend_35 { pt3dadd( 140.086, -134.559, -13.2722, 1.03 ) }
    dend_35 { pt3dadd( 141.174, -134.832, -13.1403, 0.29 ) }
    dend_35 { pt3dadd( 142.754, -135.318, -12.909, 1.11 ) }
    dend_35 { pt3dadd( 143.893, -135.749, -12.6676, 0.44 ) }
    dend_35 { pt3dadd( 144.24, -135.897, -12.6036, 0.22 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 47/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 81.3426, -105.947, -6.18293, 0.52 ) }
    dend_34 { pt3dadd( 82.2682, -105.812, -5.50693, 0.52 ) }
    dend_34 { pt3dadd( 82.8792, -105.684, -5.09713, 0.52 ) }
    dend_34 { pt3dadd( 83.5097, -105.529, -4.68847, 0.81 ) }
    dend_34 { pt3dadd( 83.9988, -105.36, -4.40377, 0.81 ) }
    dend_34 { pt3dadd( 84.831, -104.992, -3.96677, 0.29 ) }
    dend_34 { pt3dadd( 85.4739, -104.639, -3.67767, 0.29 ) }
    dend_34 { pt3dadd( 86.0464, -104.185, -3.51708, 0.88 ) }
    dend_34 { pt3dadd( 86.5208, -103.686, -3.44494, 1.11 ) }
    dend_34 { pt3dadd( 87.1103, -102.919, -3.45031, 0.44 ) }
    dend_34 { pt3dadd( 87.569, -102.165, -3.55876, 0.37 ) }
    dend_34 { pt3dadd( 87.9964, -101.302, -3.77853, 0.37 ) }
    dend_34 { pt3dadd( 88.4461, -100.149, -4.1225, 0.66 ) }
    dend_34 { pt3dadd( 88.6759, -99.3969, -4.3675, 1.03 ) }
    dend_34 { pt3dadd( 88.8452, -98.6005, -4.61539, 1.03 ) }
    dend_34 { pt3dadd( 88.984, -97.318, -4.92924, 0.52 ) }
    dend_34 { pt3dadd( 88.9997, -96.831, -5.01004, 0.37 ) }
    dend_34 { pt3dadd( 88.9912, -96.0051, -5.06667, 1.03 ) }
    dend_34 { pt3dadd( 88.98, -95.4985, -5.044, 1.03 ) }
    dend_34 { pt3dadd( 89.0023, -94.379, -4.90616, 0.29 ) }
    dend_34 { pt3dadd( 89.1034, -92.5603, -4.5368, 0.22 ) }
    dend_34 { pt3dadd( 89.1666, -91.9056, -4.35722, 0.66 ) }
    dend_34 { pt3dadd( 89.2415, -91.3492, -4.20054, 0.52 ) }
    dend_34 { pt3dadd( 89.3806, -90.549, -4.01116, 0.37 ) }
    dend_34 { pt3dadd( 89.6209, -89.4728, -3.79204, 0.74 ) }
    dend_34 { pt3dadd( 89.8155, -88.7856, -3.65825, 0.22 ) }
    dend_34 { pt3dadd( 90.0793, -87.9486, -3.48494, 0.88 ) }
    dend_34 { pt3dadd( 90.1918, -87.5228, -3.39461, 0.88 ) }
    dend_34 { pt3dadd( 90.451, -86.3268, -3.15367, 0.29 ) }
    dend_34 { pt3dadd( 90.549, -85.7161, -3.04828, 0.44 ) }
    dend_34 { pt3dadd( 90.6122, -85.0839, -2.94948, 0.29 ) }
    dend_34 { pt3dadd( 90.6741, -84.3853, -2.89131, 0.29 ) }
    dend_34 { pt3dadd( 90.7344, -83.3693, -2.89469, 0.81 ) }
    dend_34 { pt3dadd( 90.7662, -82.6328, -2.91847, 1.03 ) }
    dend_34 { pt3dadd( 90.7815, -82.1261, -2.95494, 1.03 ) }
    dend_34 { pt3dadd( 90.7899, -81.5717, -3.02518, 0.22 ) }
    dend_34 { pt3dadd( 90.8023, -80.4768, -3.16746, 0.22 ) }
    dend_34 { pt3dadd( 90.8193, -79.5764, -3.21606, 0.81 ) }
    dend_34 { pt3dadd( 90.8356, -79.1205, -3.1834, 0.81 ) }
    dend_34 { pt3dadd( 90.8613, -78.4428, -3.01039, 0.44 ) }
    dend_34 { pt3dadd( 90.9027, -77.7667, -2.74206, 0.44 ) }
    dend_34 { pt3dadd( 90.9618, -76.8214, -2.27377, 0.96 ) }
    dend_34 { pt3dadd( 90.9936, -75.881, -1.73048, 0.96 ) }
    dend_34 { pt3dadd( 91.0073, -75.2551, -1.36694, 1.11 ) }
    dend_34 { pt3dadd( 91.0322, -74.3629, -0.87864, 0.29 ) }
    dend_34 { pt3dadd( 91.0627, -73.664, -0.50506, 0.81 ) }
    dend_34 { pt3dadd( 91.1271, -72.9059, -0.116295, 0.81 ) }
    dend_34 { pt3dadd( 91.2892, -71.8658, 0.344378, 0.44 ) }
    dend_34 { pt3dadd( 91.4648, -70.8857, 0.69011, 1.11 ) }
    dend_34 { pt3dadd( 91.6048, -70.1943, 0.903412, 1.11 ) }
    dend_34 { pt3dadd( 91.7193, -69.7007, 1.0384, 0.81 ) }
    dend_34 { pt3dadd( 91.8741, -69.1935, 1.19209, 0.52 ) }
    dend_34 { pt3dadd( 92.3154, -68.2002, 1.53966, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_34 { pt3dadd( 92.8721, -67.3803, 1.87398, 0.22 ) }
    dend_34 { pt3dadd( 93.3694, -66.9284, 2.11459, 0.59 ) }
    dend_34 { pt3dadd( 93.5802, -66.815, 2.19633, 0.59 ) }
    dend_34 { pt3dadd( 94.8734, -66.3859, 2.59876, 0.52 ) }
    dend_34 { pt3dadd( 95.6534, -66.2409, 2.8182, 0.29 ) }
    dend_34 { pt3dadd( 96.7003, -66.1376, 3.09763, 0.52 ) }
    dend_34 { pt3dadd( 97.7364, -66.0573, 3.34019, 0.44 ) }
    dend_34 { pt3dadd( 98.4437, -65.9937, 3.47907, 0.81 ) }
    dend_34 { pt3dadd( 99.0449, -65.9063, 3.58414, 1.03 ) }
    dend_34 { pt3dadd( 100.155, -65.6335, 3.76496, 0.29 ) }
    dend_34 { pt3dadd( 100.692, -65.4414, 3.88903, 0.29 ) }
    dend_34 { pt3dadd( 101.283, -65.1894, 4.0792, 0.81 ) }
    dend_34 { pt3dadd( 101.681, -65.0156, 4.2423, 0.81 ) }
    dend_34 { pt3dadd( 102.46, -64.7166, 4.61967, 0.52 ) }
    dend_34 { pt3dadd( 103.423, -64.4608, 5.1863, 0.15 ) }
    dend_34 { pt3dadd( 104.139, -64.4101, 5.71194, 0.44 ) }
    dend_34 { pt3dadd( 104.572, -64.4599, 6.15492, 0.74 ) }
    dend_34 { pt3dadd( 104.869, -64.5186, 6.53064, 1.03 ) }
    dend_34 { pt3dadd( 105.163, -64.5745, 6.95119, 1.03 ) }
    dend_34 { pt3dadd( 105.562, -64.6196, 7.60284, 0.88 ) }
    dend_34 { pt3dadd( 106.052, -64.5493, 8.45565, 0.37 ) }
    dend_34 { pt3dadd( 106.832, -64.1119, 9.65935, 0.81 ) }
    dend_34 { pt3dadd( 107.264, -63.7024, 10.2258, 0.81 ) }
    dend_34 { pt3dadd( 107.666, -63.136, 10.7573, 0.29 ) }
    dend_34 { pt3dadd( 107.928, -62.6472, 11.1277, 0.29 ) }
    dend_34 { pt3dadd( 108.279, -61.8759, 11.6278, 0.15 ) }
    dend_34 { pt3dadd( 108.584, -61.2547, 12.0129, 1.03 ) }
    dend_34 { pt3dadd( 108.783, -60.9102, 12.2506, 1.03 ) }
    dend_34 { pt3dadd( 109.625, -59.7277, 13.288, 0.52 ) }
    dend_34 { pt3dadd( 110.102, -59.1971, 13.8884, 0.52 ) }
    dend_34 { pt3dadd( 110.646, -58.7337, 14.571, 0.44 ) }
    dend_34 { pt3dadd( 111.603, -58.1121, 15.7384, 0.88 ) }
    dend_34 { pt3dadd( 112.211, -57.7915, 16.4285, 0.74 ) }
    dend_34 { pt3dadd( 112.838, -57.5353, 17.0421, 0.44 ) }
    dend_34 { pt3dadd( 113.293, -57.4119, 17.4071, 0.37 ) }
    dend_34 { pt3dadd( 113.916, -57.2918, 17.8544, 0.22 ) }
    dend_34 { pt3dadd( 114.465, -57.2366, 18.2123, 0.22 ) }
    dend_34 { pt3dadd( 115.215, -57.1699, 18.6578, 0.44 ) }
    dend_34 { pt3dadd( 115.705, -57.1161, 18.9113, 0.22 ) }
    dend_34 { pt3dadd( 116.364, -57.028, 19.2232, 0.22 ) }
    dend_34 { pt3dadd( 117.035, -56.9473, 19.5044, 0.44 ) }
    dend_34 { pt3dadd( 118.149, -56.8956, 19.9289, 0.29 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 42/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -13.1246, 475.777, -54.9507, 0.74 ) }
    dend_19 { pt3dadd( -13.0858, 477.272, -55.4266, 0.74 ) }
    dend_19 { pt3dadd( -13.0719, 477.902, -55.6038, 0.52 ) }
    dend_19 { pt3dadd( -13.0472, 478.524, -55.7569, 0.37 ) }
    dend_19 { pt3dadd( -13.0114, 479.513, -55.9758, 0.37 ) }
    dend_19 { pt3dadd( -12.9976, 479.885, -56.0519, 0.59 ) }
    dend_19 { pt3dadd( -12.9587, 480.677, -56.2033, 0.74 ) }
    dend_19 { pt3dadd( -12.9292, 481.177, -56.2747, 0.74 ) }
    dend_19 { pt3dadd( -12.8623, 482.128, -56.4324, 0.37 ) }
    dend_19 { pt3dadd( -12.8137, 482.822, -56.5555, 0.37 ) }
    dend_19 { pt3dadd( -12.7327, 484.023, -56.7703, 0.81 ) }
    dend_19 { pt3dadd( -12.6817, 484.829, -56.9151, 0.96 ) }
    dend_19 { pt3dadd( -12.6259, 485.648, -57.06, 0.96 ) }
    dend_19 { pt3dadd( -12.5533, 486.72, -57.2493, 0.66 ) }
    dend_19 { pt3dadd( -12.5156, 487.348, -57.3598, 0.44 ) }
    dend_19 { pt3dadd( -12.484, 487.836, -57.4401, 0.44 ) }
    dend_19 { pt3dadd( -12.4366, 488.757, -57.5798, 0.44 ) }
    dend_19 { pt3dadd( -12.4088, 489.568, -57.6914, 0.81 ) }
    dend_19 { pt3dadd( -12.4037, 490.13, -57.7613, 1.03 ) }
    dend_19 { pt3dadd( -12.4087, 490.715, -57.829, 1.03 ) }
    dend_19 { pt3dadd( -12.4383, 491.698, -57.9503, 0.74 ) }
    dend_19 { pt3dadd( -12.4812, 492.465, -58.0493, 0.74 ) }
    dend_19 { pt3dadd( -12.5782, 493.692, -58.2043, 0.44 ) }
    dend_19 { pt3dadd( -12.7082, 494.905, -58.3598, 0.44 ) }
    dend_19 { pt3dadd( -12.7758, 495.491, -58.4463, 1.03 ) }
    dend_19 { pt3dadd( -12.8403, 496.055, -58.5417, 1.18 ) }
    dend_19 { pt3dadd( -12.9417, 496.96, -58.7332, 0.52 ) }
    dend_19 { pt3dadd( -13.03, 497.829, -58.9691, 0.74 ) }
    dend_19 { pt3dadd( -13.1206, 498.703, -59.2638, 1.11 ) }
    dend_19 { pt3dadd( -13.2011, 499.507, -59.5702, 0.44 ) }
    dend_19 { pt3dadd( -13.2772, 500.221, -59.8621, 0.37 ) }
    dend_19 { pt3dadd( -13.3508, 500.982, -60.1856, 0.37 ) }
    dend_19 { pt3dadd( -13.4388, 502.052, -60.6452, 0.59 ) }
    dend_19 { pt3dadd( -13.4884, 502.832, -60.9698, 0.96 ) }
    dend_19 { pt3dadd( -13.5094, 503.389, -61.1766, 1.18 ) }
    dend_19 { pt3dadd( -13.5165, 503.902, -61.3349, 1.18 ) }
    dend_19 { pt3dadd( -13.4945, 505.049, -61.6366, 0.44 ) }
    dend_19 { pt3dadd( -13.445, 505.85, -61.7953, 0.37 ) }
    dend_19 { pt3dadd( -13.3849, 506.423, -61.8819, 0.59 ) }
    dend_19 { pt3dadd( -13.2848, 507.138, -61.9868, 0.44 ) }
    dend_19 { pt3dadd( -13.1563, 508.007, -62.1372, 0.44 ) }
    dend_19 { pt3dadd( -13.061, 508.649, -62.2625, 0.74 ) }
    dend_19 { pt3dadd( -12.9974, 509.128, -62.3648, 0.74 ) }
    dend_19 { pt3dadd( -12.9588, 509.495, -62.4517, 0.74 ) }
    dend_19 { pt3dadd( -12.9063, 510.235, -62.6392, 0.37 ) }
    dend_19 { pt3dadd( -12.8696, 511.145, -62.8773, 1.18 ) }
    dend_19 { pt3dadd( -12.8611, 511.483, -62.9634, 1.18 ) }
    dend_19 { pt3dadd( -12.8313, 512.218, -63.131, 0.88 ) }
    dend_19 { pt3dadd( -12.7801, 512.958, -63.2826, 0.59 ) }
    dend_19 { pt3dadd( -12.688, 513.925, -63.4516, 0.88 ) }
    dend_19 { pt3dadd( -12.6155, 514.632, -63.5537, 1.11 ) }
    dend_19 { pt3dadd( -12.5312, 515.351, -63.638, 1.11 ) }
    dend_19 { pt3dadd( -12.4047, 516.32, -63.7486, 0.52 ) }
    dend_19 { pt3dadd( -12.2513, 517.284, -63.8589, 0.44 ) }
    dend_19 { pt3dadd( -12.1454, 517.824, -63.9212, 0.44 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 97/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -13.1246, 475.777, -54.9507, 0.29 ) }
    dend_18 { pt3dadd( -12.8242, 477.362, -54.2731, 0.29 ) }
    dend_18 { pt3dadd( -12.5131, 479.089, -53.6413, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_18 { pt3dadd( -12.3321, 480.088, -53.2823, 0.66 ) }
    dend_18 { pt3dadd( -12.1589, 480.986, -52.9577, 0.37 ) }
    dend_18 { pt3dadd( -11.85, 482.513, -52.3833, 0.22 ) }
    dend_18 { pt3dadd( -11.7502, 482.987, -52.1976, 0.66 ) }
    dend_18 { pt3dadd( -11.5963, 483.607, -51.964, 0.66 ) }
    dend_18 { pt3dadd( -11.2081, 485.311, -51.3713, 0.37 ) }
    dend_18 { pt3dadd( -11.0038, 486.343, -51.0158, 0.37 ) }
    dend_18 { pt3dadd( -10.7792, 487.737, -50.5607, 0.59 ) }
    dend_18 { pt3dadd( -10.6822, 488.388, -50.3751, 0.37 ) }
    dend_18 { pt3dadd( -10.5429, 489.391, -50.1145, 0.29 ) }
    dend_18 { pt3dadd( -10.4168, 490.516, -49.8607, 0.74 ) }
    dend_18 { pt3dadd( -10.3695, 491.137, -49.7497, 0.96 ) }
    dend_18 { pt3dadd( -10.3173, 491.957, -49.6083, 0.52 ) }
    dend_18 { pt3dadd( -10.2679, 493.115, -49.4035, 0.44 ) }
    dend_18 { pt3dadd( -10.2052, 494.188, -49.1906, 0.29 ) }
    dend_18 { pt3dadd( -10.0721, 495.612, -48.857, 0.29 ) }
    dend_18 { pt3dadd( -9.95498, 496.51, -48.5984, 0.66 ) }
    dend_18 { pt3dadd( -9.79767, 497.456, -48.3037, 0.81 ) }
    dend_18 { pt3dadd( -9.47299, 499.039, -47.8061, 0.29 ) }
    dend_18 { pt3dadd( -8.98111, 501.03, -47.1933, 0.29 ) }
    dend_18 { pt3dadd( -8.58582, 502.405, -46.7962, 0.29 ) }
    dend_18 { pt3dadd( -8.21479, 503.597, -46.501, 0.88 ) }
    dend_18 { pt3dadd( -7.9335, 504.501, -46.3222, 0.88 ) }
    dend_18 { pt3dadd( -7.60465, 505.568, -46.1582, 0.29 ) }
    dend_18 { pt3dadd( -7.19851, 506.892, -46.0633, 0.29 ) }
    dend_18 { pt3dadd( -7.08587, 507.306, -46.0675, 0.52 ) }
    dend_18 { pt3dadd( -6.70983, 508.774, -46.1773, 0.22 ) }
    dend_18 { pt3dadd( -6.47019, 509.653, -46.3064, 0.52 ) }
    dend_18 { pt3dadd( -6.22352, 510.46, -46.4544, 0.52 ) }
    dend_18 { pt3dadd( -5.48154, 512.57, -46.919, 0.44 ) }
    dend_18 { pt3dadd( -5.04185, 513.689, -47.2087, 0.96 ) }
    dend_18 { pt3dadd( -4.75825, 514.343, -47.3997, 0.96 ) }
    dend_18 { pt3dadd( -4.06279, 515.791, -47.8548, 0.29 ) }
    dend_18 { pt3dadd( -3.4559, 516.97, -48.2493, 0.22 ) }
    dend_18 { pt3dadd( -2.88409, 518.031, -48.6067, 0.81 ) }
    dend_18 { pt3dadd( -2.18678, 519.265, -49.0009, 0.29 ) }
    dend_18 { pt3dadd( -1.63438, 520.232, -49.2911, 0.29 ) }
    dend_18 { pt3dadd( -1.12326, 521.13, -49.531, 0.66 ) }
    dend_18 { pt3dadd( -0.906596, 521.503, -49.6097, 0.81 ) }
    dend_18 { pt3dadd( -0.236563, 522.648, -49.8012, 0.29 ) }
    dend_18 { pt3dadd( 0.18205, 523.373, -49.8857, 0.29 ) }
    dend_18 { pt3dadd( 0.485153, 523.91, -49.9226, 0.81 ) }
    dend_18 { pt3dadd( 0.791725, 524.489, -49.9477, 0.81 ) }
    dend_18 { pt3dadd( 1.35434, 525.679, -50.0081, 0.29 ) }
    dend_18 { pt3dadd( 1.97192, 527.161, -50.0908, 0.29 ) }
    dend_18 { pt3dadd( 2.37592, 528.261, -50.1578, 0.88 ) }
    dend_18 { pt3dadd( 2.57176, 528.85, -50.2014, 1.03 ) }
    dend_18 { pt3dadd( 2.86237, 529.771, -50.2815, 0.74 ) }
    dend_18 { pt3dadd( 3.64342, 532.374, -50.5314, 0.22 ) }
    dend_18 { pt3dadd( 3.94189, 533.373, -50.6408, 0.96 ) }
    dend_18 { pt3dadd( 4.20432, 534.167, -50.7313, 1.11 ) }
    dend_18 { pt3dadd( 4.77946, 535.83, -50.9132, 0.29 ) }
    dend_18 { pt3dadd( 5.10997, 536.742, -51.0075, 0.59 ) }
    dend_18 { pt3dadd( 5.36085, 537.415, -51.0458, 0.59 ) }
    dend_18 { pt3dadd( 5.76684, 538.461, -51.0542, 0.59 ) }
    dend_18 { pt3dadd( 6.29989, 539.792, -50.9984, 0.29 ) }
    dend_18 { pt3dadd( 6.70298, 540.764, -50.9156, 0.44 ) }
    dend_18 { pt3dadd( 7.30821, 542.29, -50.6607, 0.29 ) }
    dend_18 { pt3dadd( 7.90439, 543.899, -50.3136, 0.81 ) }
    dend_18 { pt3dadd( 8.0702, 544.35, -50.2022, 0.81 ) }
    dend_18 { pt3dadd( 8.27818, 544.938, -50.0441, 1.03 ) }
    dend_18 { pt3dadd( 8.60587, 545.858, -49.7917, 0.37 ) }
    dend_18 { pt3dadd( 9.2064, 547.434, -49.3594, 0.29 ) }
    dend_18 { pt3dadd( 9.53732, 548.302, -49.1548, 0.29 ) }
    dend_18 { pt3dadd( 10.141, 549.967, -48.8516, 0.29 ) }
    dend_18 { pt3dadd( 10.4112, 550.817, -48.752, 0.81 ) }
    dend_18 { pt3dadd( 10.8551, 552.485, -48.5998, 0.37 ) }
    dend_18 { pt3dadd( 11.1934, 553.818, -48.4444, 0.29 ) }
    dend_18 { pt3dadd( 11.5722, 555.128, -48.2764, 1.11 ) }
    dend_18 { pt3dadd( 11.8165, 555.967, -48.1136, 0.66 ) }
    dend_18 { pt3dadd( 12.2474, 557.601, -47.611, 0.29 ) }
    dend_18 { pt3dadd( 12.6366, 559.079, -46.9587, 0.29 ) }
    dend_18 { pt3dadd( 13.0918, 560.666, -46.0056, 0.29 ) }
    dend_18 { pt3dadd( 13.4388, 561.552, -45.343, 0.29 ) }
    dend_18 { pt3dadd( 13.7603, 562.287, -44.7232, 0.29 ) }
    dend_18 { pt3dadd( 14.2031, 563.316, -43.7936, 0.81 ) }
    dend_18 { pt3dadd( 14.4288, 563.9, -43.2122, 1.11 ) }
    dend_18 { pt3dadd( 14.6871, 564.659, -42.5139, 0.88 ) }
    dend_18 { pt3dadd( 15.3215, 566.909, -40.7614, 0.29 ) }
    dend_18 { pt3dadd( 15.5793, 567.814, -40.1282, 0.29 ) }
    dend_18 { pt3dadd( 15.8786, 568.799, -39.53, 0.74 ) }
    dend_18 { pt3dadd( 16.2895, 570.293, -38.7438, 0.29 ) }
    dend_18 { pt3dadd( 16.573, 571.561, -38.1256, 0.29 ) }
    dend_18 { pt3dadd( 16.8367, 572.981, -37.4886, 0.66 ) }
    dend_18 { pt3dadd( 16.9408, 573.626, -37.257, 0.88 ) }
    dend_18 { pt3dadd( 17.2946, 575.086, -36.8568, 0.22 ) }
    dend_18 { pt3dadd( 17.5889, 576.056, -36.6914, 0.37 ) }
    dend_18 { pt3dadd( 17.6141, 576.152, -36.6871, 0.37 ) }
    // Section: dend_44, id: dend_44, parent: dend_40 (entry count 88/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -81.1645, -64.471, -78.3939, 0.22 ) }
    dend_44 { pt3dadd( -82.5023, -64.2134, -79.126, 0.22 ) }
    dend_44 { pt3dadd( -83.0711, -64.1445, -79.4255, 0.22 ) }
    dend_44 { pt3dadd( -83.9095, -64.1018, -79.8505, 0.37 ) }
    dend_44 { pt3dadd( -84.7644, -64.1002, -80.2722, 0.22 ) }
    dend_44 { pt3dadd( -85.8446, -64.141, -80.7937, 0.22 ) }
    dend_44 { pt3dadd( -86.9819, -64.205, -81.3374, 0.81 ) }
    dend_44 { pt3dadd( -87.5229, -64.2648, -81.5984, 0.81 ) }
    dend_44 { pt3dadd( -88.245, -64.3852, -81.9483, 0.52 ) }
    dend_44 { pt3dadd( -88.8802, -64.5279, -82.2612, 0.29 ) }
    dend_44 { pt3dadd( -89.4071, -64.6607, -82.5261, 0.66 ) }
    dend_44 { pt3dadd( -90.1478, -64.8526, -82.9375, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_44 { pt3dadd( -90.7182, -64.9817, -83.288, 0.29 ) }
    dend_44 { pt3dadd( -91.4988, -65.1469, -83.8143, 0.29 ) }
    dend_44 { pt3dadd( -92.2504, -65.2856, -84.3711, 0.96 ) }
    dend_44 { pt3dadd( -92.9329, -65.4256, -84.9788, 1.03 ) }
    dend_44 { pt3dadd( -93.8442, -65.6395, -85.8908, 0.22 ) }
    dend_44 { pt3dadd( -94.0704, -65.702, -86.1372, 0.22 ) }
    dend_44 { pt3dadd( -94.4922, -65.8383, -86.6125, 0.88 ) }
    dend_44 { pt3dadd( -94.8489, -65.9936, -87.0255, 0.88 ) }
    dend_44 { pt3dadd( -95.7838, -66.5179, -88.1769, 0.22 ) }
    dend_44 { pt3dadd( -96.2465, -66.8449, -88.8101, 0.22 ) }
    dend_44 { pt3dadd( -96.6447, -67.1795, -89.3666, 0.22 ) }
    dend_44 { pt3dadd( -96.9838, -67.5163, -89.8436, 0.88 ) }
    dend_44 { pt3dadd( -97.3403, -67.9832, -90.3608, 1.11 ) }
    dend_44 { pt3dadd( -97.699, -68.6561, -90.9428, 0.88 ) }
    dend_44 { pt3dadd( -98.0852, -69.7808, -91.668, 0.29 ) }
    dend_44 { pt3dadd( -98.2524, -70.7274, -92.1634, 1.18 ) }
    dend_44 { pt3dadd( -98.3069, -71.2429, -92.412, 1.33 ) }
    dend_44 { pt3dadd( -98.3568, -72.4854, -92.9703, 0.29 ) }
    dend_44 { pt3dadd( -98.3285, -73.4378, -93.3283, 0.22 ) }
    dend_44 { pt3dadd( -98.2591, -74.3028, -93.5296, 0.22 ) }
    dend_44 { pt3dadd( -98.0852, -75.4444, -93.6323, 0.96 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 21/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -81.1645, -64.471, -78.3939, 0.66 ) }
    dend_41 { pt3dadd( -83.0946, -64.0597, -76.7089, 0.66 ) }
    dend_41 { pt3dadd( -83.6964, -63.8739, -76.1578, 0.66 ) }
    dend_41 { pt3dadd( -84.4137, -63.5754, -75.4748, 0.81 ) }
    dend_41 { pt3dadd( -85.033, -63.2808, -74.9041, 0.81 ) }
    dend_41 { pt3dadd( -86.5637, -62.5552, -73.5902, 0.96 ) }
    dend_41 { pt3dadd( -87.7917, -61.9886, -72.6112, 1.33 ) }
    dend_41 { pt3dadd( -88.5598, -61.5843, -72.0877, 0.44 ) }
    dend_41 { pt3dadd( -89.2434, -61.2004, -71.6758, 0.44 ) }
    dend_41 { pt3dadd( -89.8831, -60.8193, -71.3992, 0.37 ) }
    dend_41 { pt3dadd( -90.8655, -60.2034, -71.2544, 0.37 ) }
    dend_41 { pt3dadd( -91.2833, -59.9658, -71.3463, 0.37 ) }
    dend_41 { pt3dadd( -92.0205, -59.5942, -71.6453, 0.29 ) }
    dend_41 { pt3dadd( -92.8052, -59.25, -71.987, 0.66 ) }
    dend_41 { pt3dadd( -93.4062, -59.0092, -72.1788, 0.88 ) }
    dend_41 { pt3dadd( -94.1289, -58.7506, -72.3236, 0.88 ) }
    dend_41 { pt3dadd( -95.1679, -58.4803, -72.3879, 0.66 ) }
    dend_41 { pt3dadd( -95.8114, -58.4075, -72.2946, 0.66 ) }
    dend_41 { pt3dadd( -96.6508, -58.4004, -72.0359, 0.81 ) }
    dend_41 { pt3dadd( -98.7581, -58.48, -71.137, 0.81 ) }
    dend_41 { pt3dadd( -99.6705, -58.5108, -70.6412, 0.59 ) }
    dend_41 { pt3dadd( -100.661, -58.5027, -69.9962, 0.44 ) }
    dend_41 { pt3dadd( -101.679, -58.4, -69.2419, 0.44 ) }
    dend_41 { pt3dadd( -102.246, -58.2711, -68.8099, 0.37 ) }
    dend_41 { pt3dadd( -102.864, -58.0035, -68.38, 0.37 ) }
    dend_41 { pt3dadd( -103.587, -57.4388, -68.0073, 0.66 ) }
    dend_41 { pt3dadd( -104.136, -56.8775, -67.8432, 0.66 ) }
    dend_41 { pt3dadd( -104.761, -56.1837, -67.8508, 0.44 ) }
    dend_41 { pt3dadd( -105.266, -55.6984, -68.0114, 0.66 ) }
    dend_41 { pt3dadd( -105.752, -55.371, -68.2581, 0.66 ) }
    dend_41 { pt3dadd( -106.476, -55.0596, -68.6781, 0.66 ) }
    dend_41 { pt3dadd( -108.16, -54.6154, -69.6621, 0.37 ) }
    dend_41 { pt3dadd( -108.813, -54.5066, -70.0201, 0.66 ) }
    dend_41 { pt3dadd( -109.765, -54.4158, -70.5142, 0.66 ) }
    dend_41 { pt3dadd( -110.557, -54.3927, -70.8769, 0.44 ) }
    dend_41 { pt3dadd( -111.303, -54.4122, -71.1647, 0.37 ) }
    dend_41 { pt3dadd( -111.899, -54.4554, -71.3065, 0.59 ) }
    dend_41 { pt3dadd( -112.851, -54.5431, -71.38, 0.44 ) }
    dend_41 { pt3dadd( -113.521, -54.6141, -71.3995, 0.37 ) }
    dend_41 { pt3dadd( -114.41, -54.7133, -71.3729, 0.37 ) }
    dend_41 { pt3dadd( -115.557, -54.8632, -71.3055, 0.37 ) }
    dend_41 { pt3dadd( -117.064, -55.0776, -71.1814, 0.37 ) }
    dend_41 { pt3dadd( -118.114, -55.2266, -71.0708, 0.29 ) }
    dend_41 { pt3dadd( -118.68, -55.2938, -71.0087, 0.52 ) }
    dend_41 { pt3dadd( -119.883, -55.3582, -70.8897, 0.29 ) }
    dend_41 { pt3dadd( -120.883, -55.3713, -70.78, 0.37 ) }
    dend_41 { pt3dadd( -121.52, -55.3456, -70.7213, 0.37 ) }
    dend_41 { pt3dadd( -122.177, -55.2677, -70.7316, 0.96 ) }
    dend_41 { pt3dadd( -123.005, -55.0945, -70.801, 0.66 ) }
    dend_41 { pt3dadd( -123.538, -54.9306, -70.865, 0.44 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 71/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -12.1454, 517.824, -63.9212, 0.52 ) }
    dend_21 { pt3dadd( -12.0937, 519.049, -64.1249, 0.52 ) }
    dend_21 { pt3dadd( -12.0695, 519.998, -64.2721, 1.03 ) }
    dend_21 { pt3dadd( -12.058, 520.767, -64.3865, 1.03 ) }
    dend_21 { pt3dadd( -12.0518, 522.251, -64.6138, 1.11 ) }
    dend_21 { pt3dadd( -12.0335, 523.967, -64.8652, 0.29 ) }
    dend_21 { pt3dadd( -12.0072, 525.553, -65.1067, 0.29 ) }
    dend_21 { pt3dadd( -11.9738, 527.037, -65.3577, 0.96 ) }
    dend_21 { pt3dadd( -11.9541, 527.716, -65.4625, 1.11 ) }
    dend_21 { pt3dadd( -11.9057, 529.271, -65.6696, 0.66 ) }
    dend_21 { pt3dadd( -11.8686, 531.012, -65.8583, 0.52 ) }
    dend_21 { pt3dadd( -11.8572, 532.561, -65.985, 0.52 ) }
    dend_21 { pt3dadd( -11.8505, 534.175, -66.0786, 0.52 ) }
    dend_21 { pt3dadd( -11.8574, 535.389, -66.1121, 0.81 ) }
    dend_21 { pt3dadd( -11.8919, 537.379, -66.1305, 1.11 ) }
    dend_21 { pt3dadd( -11.9202, 538.484, -66.1198, 1.33 ) }
    dend_21 { pt3dadd( -12.0295, 541.271, -66.0753, 0.44 ) }
    dend_21 { pt3dadd( -12.0864, 542.557, -66.0488, 0.44 ) }
    dend_21 { pt3dadd( -12.1706, 544.782, -66.0263, 0.37 ) }
    dend_21 { pt3dadd( -12.2027, 546.12, -66.0346, 0.96 ) }
    dend_21 { pt3dadd( -12.2071, 547.533, -66.0807, 1.25 ) }
    dend_21 { pt3dadd( -12.1853, 548.469, -66.1358, 1.25 ) }
    dend_21 { pt3dadd( -12.1239, 549.487, -66.2238, 1.03 ) }
    dend_21 { pt3dadd( -12.0567, 550.271, -66.3051, 0.74 ) }
    dend_21 { pt3dadd( -11.9402, 551.395, -66.4304, 0.52 ) }
    dend_21 { pt3dadd( -11.8418, 552.43, -66.5291, 0.37 ) }
    dend_21 { pt3dadd( -11.7452, 553.529, -66.621, 0.37 ) }
    dend_21 { pt3dadd( -11.6363, 554.951, -66.7116, 0.37 ) }
    dend_21 { pt3dadd( -11.5273, 556.764, -66.8089, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_21 { pt3dadd( -11.4862, 557.77, -66.8553, 0.66 ) }
    dend_21 { pt3dadd( -11.4293, 559.457, -66.9458, 0.66 ) }
    dend_21 { pt3dadd( -11.3892, 560.91, -67.023, 0.29 ) }
    dend_21 { pt3dadd( -11.357, 562.208, -67.1057, 0.29 ) }
    dend_21 { pt3dadd( -11.3397, 563.119, -67.1692, 0.81 ) }
    dend_21 { pt3dadd( -11.3151, 564.723, -67.2989, 1.03 ) }
    dend_21 { pt3dadd( -11.3011, 566.02, -67.4109, 1.18 ) }
    dend_21 { pt3dadd( -11.292, 567.004, -67.5048, 0.81 ) }
    dend_21 { pt3dadd( -11.2905, 568.355, -67.6491, 0.29 ) }
    dend_21 { pt3dadd( -11.2912, 569.551, -67.7787, 0.29 ) }
    dend_21 { pt3dadd( -11.2891, 570.769, -67.9117, 0.96 ) }
    dend_21 { pt3dadd( -11.2902, 572.155, -68.0598, 1.11 ) }
    dend_21 { pt3dadd( -11.2786, 573.196, -68.1647, 1.11 ) }
    dend_21 { pt3dadd( -11.2312, 574.906, -68.3431, 0.74 ) }
    dend_21 { pt3dadd( -11.1678, 576.382, -68.4867, 0.44 ) }
    dend_21 { pt3dadd( -11.0762, 577.867, -68.6211, 0.88 ) }
    dend_21 { pt3dadd( -10.9998, 578.941, -68.7095, 0.88 ) }
    dend_21 { pt3dadd( -10.8733, 580.466, -68.8373, 0.52 ) }
    dend_21 { pt3dadd( -10.7202, 582.075, -68.9772, 0.52 ) }
    dend_21 { pt3dadd( -10.5481, 583.687, -69.1215, 0.52 ) }
    dend_21 { pt3dadd( -10.3843, 585.381, -69.2753, 0.52 ) }
    dend_21 { pt3dadd( -10.2792, 586.772, -69.3959, 1.11 ) }
    dend_21 { pt3dadd( -10.2353, 587.484, -69.4596, 1.11 ) }
    dend_21 { pt3dadd( -10.1832, 588.822, -69.5756, 0.81 ) }
    dend_21 { pt3dadd( -10.1285, 590.631, -69.7354, 0.29 ) }
    dend_21 { pt3dadd( -10.0959, 592.346, -69.8944, 0.29 ) }
    dend_21 { pt3dadd( -10.0898, 593.344, -69.9853, 0.96 ) }
    dend_21 { pt3dadd( -10.0973, 594.478, -70.0723, 1.11 ) }
    dend_21 { pt3dadd( -10.1386, 595.674, -70.1372, 1.4 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 29/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -12.1454, 517.824, -63.9212, 0.44 ) }
    dend_20 { pt3dadd( -11.1681, 516.875, -63.7502, 0.44 ) }
    dend_20 { pt3dadd( -10.4891, 516.216, -63.6314, 0.37 ) }
    dend_20 { pt3dadd( -9.39692, 515.155, -63.4403, 0.29 ) }
    dend_20 { pt3dadd( -8.87493, 514.648, -63.349, 0.29 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 34/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -123.538, -54.9306, -70.865, 0.22 ) }
    dend_43 { pt3dadd( -122.745, -54.0314, -70.333, 0.22 ) }
    dend_43 { pt3dadd( -122.184, -53.3937, -69.9558, 0.22 ) }
    dend_43 { pt3dadd( -121.627, -52.7614, -69.5818, 0.59 ) }
    dend_43 { pt3dadd( -121.249, -52.333, -69.3283, 0.59 ) }
    dend_43 { pt3dadd( -120.754, -51.7712, -68.996, 0.29 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 40/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -123.538, -54.9306, -70.865, 0.37 ) }
    dend_42 { pt3dadd( -124.59, -53.9962, -70.7881, 0.37 ) }
    dend_42 { pt3dadd( -125.445, -53.3015, -70.757, 0.37 ) }
    dend_42 { pt3dadd( -126.327, -52.6448, -70.7549, 0.22 ) }
    dend_42 { pt3dadd( -127.273, -51.9412, -70.7527, 0.22 ) }
    dend_42 { pt3dadd( -127.952, -51.4352, -70.7511, 0.22 ) }
    dend_42 { pt3dadd( -128.681, -50.8925, -70.7494, 0.22 ) }
    dend_42 { pt3dadd( -128.931, -50.7309, -70.7581, 0.52 ) }
    dend_42 { pt3dadd( -129.497, -50.4309, -70.8079, 0.66 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 49/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -10.1386, 595.674, -70.1372, 0.22 ) }
    dend_23 { pt3dadd( -9.90808, 597.75, -72.2688, 0.22 ) }
    dend_23 { pt3dadd( -9.9327, 598.123, -72.6439, 0.29 ) }
    dend_23 { pt3dadd( -10.0808, 598.775, -73.316, 0.29 ) }
    dend_23 { pt3dadd( -10.1866, 598.969, -73.5535, 0.66 ) }
    dend_23 { pt3dadd( -10.4123, 599.24, -73.928, 0.66 ) }
    dend_23 { pt3dadd( -10.7147, 599.578, -74.3836, 0.29 ) }
    dend_23 { pt3dadd( -11.2561, 599.978, -74.8394, 0.88 ) }
    dend_23 { pt3dadd( -11.5088, 600.163, -75.0376, 0.88 ) }
    dend_23 { pt3dadd( -12.345, 600.794, -75.6598, 0.29 ) }
    dend_23 { pt3dadd( -12.6658, 601.083, -75.8935, 0.29 ) }
    dend_23 { pt3dadd( -13.0606, 601.571, -76.1738, 0.29 ) }
    dend_23 { pt3dadd( -13.4014, 602.209, -76.463, 0.66 ) }
    dend_23 { pt3dadd( -13.6538, 602.831, -76.7147, 0.22 ) }
    dend_23 { pt3dadd( -13.8351, 603.331, -76.9023, 0.22 ) }
    dend_23 { pt3dadd( -14.0298, 603.847, -77.086, 0.22 ) }
    dend_23 { pt3dadd( -14.4287, 604.759, -77.4256, 0.96 ) }
    dend_23 { pt3dadd( -14.9724, 605.785, -77.8621, 1.33 ) }
    dend_23 { pt3dadd( -15.633, 606.875, -78.3856, 0.29 ) }
    dend_23 { pt3dadd( -15.839, 607.205, -78.5528, 0.29 ) }
    dend_23 { pt3dadd( -16.2976, 607.896, -78.9152, 0.29 ) }
    dend_23 { pt3dadd( -16.6888, 608.419, -79.209, 0.29 ) }
    dend_23 { pt3dadd( -17.1615, 608.908, -79.5037, 0.96 ) }
    dend_23 { pt3dadd( -17.4551, 609.127, -79.6226, 1.11 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 73/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -10.1386, 595.674, -70.1372, 0.29 ) }
    dend_22 { pt3dadd( -10.0618, 596.598, -70.1333, 0.29 ) }
    dend_22 { pt3dadd( -10.0046, 597.295, -70.1299, 0.29 ) }
    dend_22 { pt3dadd( -9.93483, 598.286, -70.1247, 0.29 ) }
    dend_22 { pt3dadd( -9.88519, 599.122, -70.12, 0.74 ) }
    dend_22 { pt3dadd( -9.85612, 599.712, -70.1166, 1.03 ) }
    dend_22 { pt3dadd( -9.83919, 600.121, -70.1142, 1.03 ) }
    dend_22 { pt3dadd( -9.80283, 601.121, -70.1057, 0.29 ) }
    dend_22 { pt3dadd( -9.76165, 602.02, -70.1003, 0.29 ) }
    dend_22 { pt3dadd( -9.73779, 602.467, -70.0967, 0.96 ) }
    dend_22 { pt3dadd( -9.71127, 602.915, -70.0925, 1.18 ) }
    dend_22 { pt3dadd( -9.67035, 603.611, -70.0881, 0.59 ) }
    dend_22 { pt3dadd( -9.62886, 604.269, -70.0808, 0.37 ) }
    dend_22 { pt3dadd( -9.55737, 605.226, -70.0665, 0.37 ) }
    dend_22 { pt3dadd( -9.48797, 606.002, -70.0525, 0.29 ) }
    dend_22 { pt3dadd( -9.39906, 607.031, -70.032, 0.29 ) }
    dend_22 { pt3dadd( -9.34655, 607.761, -70.0123, 0.88 ) }
    dend_22 { pt3dadd( -9.33053, 608.049, -70.0039, 1.03 ) }
    dend_22 { pt3dadd( -9.31604, 608.523, -69.9903, 1.03 ) }
    dend_22 { pt3dadd( -9.3066, 609.151, -69.9734, 1.03 ) }
    dend_22 { pt3dadd( -9.29421, 610.007, -69.9535, 0.44 ) }
    dend_22 { pt3dadd( -9.27166, 610.831, -69.9365, 0.74 ) }
    dend_22 { pt3dadd( -9.26415, 611.098, -69.9322, 0.74 ) }
    dend_22 { pt3dadd( -9.24889, 611.752, -69.9287, 0.44 ) }
    dend_22 { pt3dadd( -9.24447, 612.137, -69.9274, 0.37 ) }
    dend_22 { pt3dadd( -9.23373, 612.596, -69.9271, 0.74 ) }
    dend_22 { pt3dadd( -9.2122, 612.98, -69.9282, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_22 { pt3dadd( -9.1564, 613.635, -69.9401, 0.29 ) }
    dend_22 { pt3dadd( -9.11663, 614.01, -69.9452, 0.29 ) }
    dend_22 { pt3dadd( -9.04528, 614.577, -69.9529, 0.81 ) }
    dend_22 { pt3dadd( -9.01509, 614.782, -69.9559, 0.81 ) }
    dend_22 { pt3dadd( -8.95135, 615.189, -69.9658, 0.37 ) }
    dend_22 { pt3dadd( -8.86748, 615.81, -69.9818, 0.37 ) }
    dend_22 { pt3dadd( -8.81889, 616.219, -69.9944, 1.03 ) }
    dend_22 { pt3dadd( -8.79379, 616.581, -70.0068, 1.03 ) }
    dend_22 { pt3dadd( -8.77243, 617.293, -70.0315, 1.03 ) }
    dend_22 { pt3dadd( -8.78028, 617.955, -70.055, 0.37 ) }
    dend_22 { pt3dadd( -8.82778, 618.855, -70.0793, 0.29 ) }
    dend_22 { pt3dadd( -8.87057, 619.35, -70.0878, 0.29 ) }
    dend_22 { pt3dadd( -8.94448, 620.022, -70.0915, 0.88 ) }
    dend_22 { pt3dadd( -8.99589, 620.431, -70.0877, 1.25 ) }
    dend_22 { pt3dadd( -9.04929, 620.793, -70.077, 1.25 ) }
    dend_22 { pt3dadd( -9.13112, 621.368, -70.0485, 0.74 ) }
    dend_22 { pt3dadd( -9.19325, 621.856, -70.0193, 0.74 ) }
    dend_22 { pt3dadd( -9.29657, 622.749, -69.9576, 1.25 ) }
    dend_22 { pt3dadd( -9.34344, 623.239, -69.9248, 1.25 ) }
    dend_22 { pt3dadd( -9.38226, 623.67, -69.8997, 0.52 ) }
    dend_22 { pt3dadd( -9.42896, 624.242, -69.871, 0.29 ) }
    dend_22 { pt3dadd( -9.46369, 624.693, -69.8543, 0.52 ) }
    dend_22 { pt3dadd( -9.49628, 625.14, -69.8415, 0.81 ) }
    dend_22 { pt3dadd( -9.57919, 626.242, -69.8236, 0.37 ) }
    dend_22 { pt3dadd( -9.6441, 627.057, -69.8136, 0.37 ) }
    dend_22 { pt3dadd( -9.66042, 627.264, -69.812, 1.03 ) }
    dend_22 { pt3dadd( -9.69602, 627.677, -69.8088, 1.4 ) }
    dend_22 { pt3dadd( -9.72091, 627.956, -69.8066, 1.4 ) }
    dend_22 { pt3dadd( -9.78374, 628.733, -69.8006, 0.52 ) }
    dend_22 { pt3dadd( -9.83189, 629.387, -69.7957, 0.52 ) }
    dend_22 { pt3dadd( -9.87228, 630.045, -69.7908, 0.81 ) }
    dend_22 { pt3dadd( -9.89448, 630.532, -69.7872, 0.81 ) }
    dend_22 { pt3dadd( -9.90983, 631.023, -69.7838, 0.81 ) }
    dend_22 { pt3dadd( -9.92243, 631.62, -69.7796, 0.44 ) }
    dend_22 { pt3dadd( -9.92481, 632.027, -69.7769, 0.44 ) }
    dend_22 { pt3dadd( -9.92052, 632.638, -69.7729, 0.81 ) }
    dend_22 { pt3dadd( -9.9135, 633.267, -69.7688, 0.88 ) }
    dend_22 { pt3dadd( -9.89853, 633.956, -69.7644, 1.18 ) }
    dend_22 { pt3dadd( -9.88447, 634.57, -69.7605, 1.4 ) }
    dend_22 { pt3dadd( -9.87789, 634.866, -69.7586, 1.4 ) }
    dend_22 { pt3dadd( -9.86392, 635.309, -69.7595, 0.88 ) }
    dend_22 { pt3dadd( -9.81258, 636.452, -69.7706, 0.37 ) }
    dend_22 { pt3dadd( -9.77888, 637.042, -69.7801, 0.37 ) }
    dend_22 { pt3dadd( -9.74978, 637.45, -69.7888, 0.66 ) }
    dend_22 { pt3dadd( -9.7154, 637.856, -69.7977, 0.96 ) }
    dend_22 { pt3dadd( -9.66867, 638.345, -69.8073, 0.37 ) }
    dend_22 { pt3dadd( -9.6285, 638.732, -69.8146, 0.74 ) }
    dend_22 { pt3dadd( -9.55521, 639.395, -69.8359, 0.37 ) }
    dend_22 { pt3dadd( -9.49505, 639.973, -69.8576, 0.81 ) }
    dend_22 { pt3dadd( -9.44315, 640.503, -69.8815, 1.03 ) }
    dend_22 { pt3dadd( -9.35296, 641.541, -69.9491, 0.22 ) }
    dend_22 { pt3dadd( -9.29609, 642.264, -70.0053, 0.22 ) }
    dend_22 { pt3dadd( -9.23274, 643.106, -70.0824, 0.22 ) }
    dend_22 { pt3dadd( -9.17816, 643.882, -70.168, 1.25 ) }
    dend_22 { pt3dadd( -9.15301, 644.263, -70.2185, 1.33 ) }
    dend_22 { pt3dadd( -9.11591, 644.909, -70.3149, 0.44 ) }
    dend_22 { pt3dadd( -9.08681, 645.455, -70.4124, 0.44 ) }
    dend_22 { pt3dadd( -9.04214, 646.124, -70.5425, 0.44 ) }
    dend_22 { pt3dadd( -8.9991, 646.659, -70.6512, 0.37 ) }
    dend_22 { pt3dadd( -8.93215, 647.449, -70.8128, 0.37 ) }
    dend_22 { pt3dadd( -8.894, 647.853, -70.8878, 0.37 ) }
    dend_22 { pt3dadd( -8.83983, 648.446, -70.9855, 0.74 ) }
    dend_22 { pt3dadd( -8.80458, 648.885, -71.0542, 1.03 ) }
    dend_22 { pt3dadd( -8.77172, 649.346, -71.1159, 0.74 ) }
    dend_22 { pt3dadd( -8.74528, 649.723, -71.1518, 0.29 ) }
    dend_22 { pt3dadd( -8.70732, 650.289, -71.1849, 0.29 ) }
    dend_22 { pt3dadd( -8.68825, 650.614, -71.1941, 0.66 ) }
    dend_22 { pt3dadd( -8.66354, 651.071, -71.1953, 0.66 ) }
    dend_22 { pt3dadd( -8.6351, 651.725, -71.1961, 0.22 ) }
    dend_22 { pt3dadd( -8.61353, 652.217, -71.1932, 0.52 ) }
    dend_22 { pt3dadd( -8.59561, 652.561, -71.1916, 0.52 ) }
    dend_22 { pt3dadd( -8.52986, 653.75, -71.1787, 0.22 ) }
    dend_22 { pt3dadd( -8.47767, 654.421, -71.16, 0.59 ) }
    dend_22 { pt3dadd( -8.45513, 654.666, -71.1495, 0.59 ) }
    dend_22 { pt3dadd( -8.38925, 655.284, -71.1137, 0.22 ) }
    dend_22 { pt3dadd( -8.34344, 655.683, -71.0878, 0.81 ) }
    dend_22 { pt3dadd( -8.308, 655.973, -71.0675, 0.81 ) }
    dend_22 { pt3dadd( -8.20233, 656.74, -71.0144, 0.22 ) }
    dend_22 { pt3dadd( -8.15576, 657.059, -70.9946, 0.59 ) }
    dend_22 { pt3dadd( -8.1267, 657.237, -70.9859, 0.59 ) }
    dend_22 { pt3dadd( -7.93527, 658.425, -70.9483, 0.22 ) }
    dend_22 { pt3dadd( -7.8817, 658.798, -70.9407, 0.22 ) }
    dend_22 { pt3dadd( -7.80107, 659.442, -70.9367, 0.74 ) }
    dend_22 { pt3dadd( -7.77327, 659.746, -70.9381, 0.81 ) }
    dend_22 { pt3dadd( -7.74163, 660.192, -70.9385, 0.81 ) }
    dend_22 { pt3dadd( -7.70102, 660.964, -70.936, 0.22 ) }
    dend_22 { pt3dadd( -7.67177, 661.739, -70.9304, 0.22 ) }
    dend_22 { pt3dadd( -7.6595, 662.227, -70.9251, 0.22 ) }
    dend_22 { pt3dadd( -7.65343, 662.845, -70.9161, 0.81 ) }
    dend_22 { pt3dadd( -7.65263, 663.012, -70.9132, 0.81 ) }
    dend_22 { pt3dadd( -7.63777, 664.029, -70.901, 0.22 ) }
    dend_22 { pt3dadd( -7.63574, 664.08, -70.9009, 0.52 ) }
    dend_22 { pt3dadd( -7.55186, 665.235, -70.9166, 0.29 ) }
    dend_22 { pt3dadd( -7.48779, 665.884, -70.933, 0.88 ) }
    dend_22 { pt3dadd( -7.44286, 666.254, -70.9471, 0.88 ) }
    dend_22 { pt3dadd( -7.35962, 666.922, -70.9776, 0.22 ) }
    dend_22 { pt3dadd( -7.3114, 667.348, -70.9987, 0.22 ) }
    dend_22 { pt3dadd( -7.25197, 667.846, -71.0226, 0.96 ) }
    dend_22 { pt3dadd( -7.22582, 668.051, -71.0318, 0.96 ) }
    dend_22 { pt3dadd( -7.11632, 668.875, -71.0631, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_22 { pt3dadd( -7.0591, 669.363, -71.076, 0.22 ) }
    dend_22 { pt3dadd( -6.98467, 670.013, -71.0825, 0.88 ) }
    dend_22 { pt3dadd( -6.91282, 670.668, -71.0824, 0.22 ) }
    dend_22 { pt3dadd( -6.84677, 671.326, -71.0789, 0.88 ) }
    dend_22 { pt3dadd( -6.82402, 671.53, -71.0778, 0.88 ) }
    dend_22 { pt3dadd( -6.73783, 672.214, -71.0744, 0.22 ) }
    dend_22 { pt3dadd( -6.66162, 672.715, -71.072, 0.96 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 7/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -17.4551, 609.127, -79.6226, 0.37 ) }
    dend_25 { pt3dadd( -17.9891, 610.399, -80.1703, 0.37 ) }
    dend_25 { pt3dadd( -18.1593, 610.826, -80.3547, 0.59 ) }
    dend_25 { pt3dadd( -18.4397, 611.619, -80.676, 0.59 ) }
    dend_25 { pt3dadd( -18.6423, 612.296, -80.9367, 0.29 ) }
    dend_25 { pt3dadd( -18.9613, 613.465, -81.397, 0.29 ) }
    dend_25 { pt3dadd( -19.1259, 614.102, -81.6578, 0.29 ) }
    dend_25 { pt3dadd( -19.2461, 614.662, -81.9269, 0.52 ) }
    dend_25 { pt3dadd( -19.3328, 615.201, -82.2191, 0.22 ) }
    dend_25 { pt3dadd( -19.4152, 615.875, -82.6352, 0.52 ) }
    dend_25 { pt3dadd( -19.5146, 616.6, -83.1088, 0.81 ) }
    dend_25 { pt3dadd( -19.5984, 617.117, -83.4291, 0.81 ) }
    dend_25 { pt3dadd( -19.8768, 618.397, -84.2036, 0.22 ) }
    dend_25 { pt3dadd( -20.0527, 619.037, -84.583, 0.81 ) }
    dend_25 { pt3dadd( -20.2899, 619.728, -84.9734, 0.81 ) }
    dend_25 { pt3dadd( -20.6059, 620.511, -85.3657, 0.29 ) }
    dend_25 { pt3dadd( -21.092, 621.61, -85.8674, 0.29 ) }
    dend_25 { pt3dadd( -21.467, 622.381, -86.221, 0.81 ) }
    dend_25 { pt3dadd( -21.7719, 622.942, -86.5011, 1.11 ) }
    dend_25 { pt3dadd( -22.0372, 623.445, -86.7937, 0.74 ) }
    dend_25 { pt3dadd( -22.3568, 624.129, -87.2216, 0.29 ) }
    dend_25 { pt3dadd( -22.7665, 625.081, -87.8651, 0.29 ) }
    dend_25 { pt3dadd( -23.0933, 625.864, -88.403, 0.29 ) }
    dend_25 { pt3dadd( -23.5044, 626.953, -89.1252, 1.03 ) }
    dend_25 { pt3dadd( -23.8235, 627.863, -89.6937, 1.18 ) }
    dend_25 { pt3dadd( -24.3532, 629.469, -90.641, 0.29 ) }
    dend_25 { pt3dadd( -24.5442, 630.1, -90.9855, 0.29 ) }
    dend_25 { pt3dadd( -24.8198, 631.122, -91.4913, 1.55 ) }
    dend_25 { pt3dadd( -24.9581, 631.671, -91.7485, 1.33 ) }
    dend_25 { pt3dadd( -25.169, 632.446, -92.1106, 0.81 ) }
    dend_25 { pt3dadd( -25.4171, 633.26, -92.5164, 0.52 ) }
    dend_25 { pt3dadd( -25.7992, 634.453, -93.1522, 0.29 ) }
    dend_25 { pt3dadd( -26.1205, 635.474, -93.7091, 0.52 ) }
    dend_25 { pt3dadd( -26.2355, 635.863, -93.9155, 0.81 ) }
    dend_25 { pt3dadd( -26.6812, 637.475, -94.7143, 0.22 ) }
    dend_25 { pt3dadd( -26.9453, 638.595, -95.2207, 0.22 ) }
    dend_25 { pt3dadd( -27.0685, 639.199, -95.4458, 0.66 ) }
    dend_25 { pt3dadd( -27.1647, 639.864, -95.6536, 0.66 ) }
    dend_25 { pt3dadd( -27.2641, 641.149, -95.9983, 0.22 ) }
    dend_25 { pt3dadd( -27.2575, 641.733, -96.1657, 0.52 ) }
    dend_25 { pt3dadd( -27.2228, 642.238, -96.3266, 0.52 ) }
    dend_25 { pt3dadd( -27.1774, 643.324, -96.7168, 0.29 ) }
    dend_25 { pt3dadd( -27.1765, 644.466, -97.1739, 0.96 ) }
    dend_25 { pt3dadd( -27.2073, 645.046, -97.4234, 0.96 ) }
    dend_25 { pt3dadd( -27.3531, 646.831, -98.2625, 0.22 ) }
    dend_25 { pt3dadd( -27.4968, 648.095, -98.8901, 0.96 ) }
    dend_25 { pt3dadd( -27.6326, 648.968, -99.3509, 0.22 ) }
    dend_25 { pt3dadd( -27.7237, 649.376, -99.5861, 0.59 ) }
    dend_25 { pt3dadd( -27.8749, 649.827, -99.8425, 0.59 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 56/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -17.4551, 609.127, -79.6226, 0.15 ) }
    dend_24 { pt3dadd( -18.6897, 608.715, -80.3905, 0.15 ) }
    dend_24 { pt3dadd( -19.0594, 608.602, -80.6039, 0.52 ) }
    dend_24 { pt3dadd( -19.3023, 608.53, -80.7395, 0.66 ) }
    dend_24 { pt3dadd( -20.1791, 608.272, -81.2208, 0.22 ) }
    dend_24 { pt3dadd( -20.9698, 608.032, -81.6412, 0.22 ) }
    dend_24 { pt3dadd( -21.3028, 607.927, -81.8054, 0.59 ) }
    dend_24 { pt3dadd( -21.8094, 607.79, -82.0393, 0.66 ) }
    dend_24 { pt3dadd( -22.7176, 607.539, -82.4274, 0.29 ) }
    dend_24 { pt3dadd( -23.0492, 607.445, -82.5565, 0.81 ) }
    dend_24 { pt3dadd( -23.713, 607.242, -82.8038, 0.96 ) }
    dend_24 { pt3dadd( -24.464, 606.999, -83.0952, 0.15 ) }
    dend_24 { pt3dadd( -25.2271, 606.739, -83.4134, 0.15 ) }
    dend_24 { pt3dadd( -25.9667, 606.482, -83.7342, 0.15 ) }
    dend_24 { pt3dadd( -26.5797, 606.265, -84.0018, 0.88 ) }
    dend_24 { pt3dadd( -27.0241, 606.089, -84.2009, 0.88 ) }
    dend_24 { pt3dadd( -28.2469, 605.593, -84.7737, 0.22 ) }
    dend_24 { pt3dadd( -28.7157, 605.392, -85.0059, 0.74 ) }
    dend_24 { pt3dadd( -29.3591, 605.087, -85.3254, 0.74 ) }
    dend_24 { pt3dadd( -30.1021, 604.697, -85.7031, 0.29 ) }
    dend_24 { pt3dadd( -30.7356, 604.338, -86.0202, 0.29 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_54, dend_27, dend_0, dend_56, dend_55, dend_29, dend_28, dend_6, dend_1, dend_37, dend_30, dend_12, dend_7, dend_3, dend_2, dend_49, dend_38, dend_32, dend_31, dend_16, dend_13, dend_11, dend_8, dend_5, dend_4, dend_51, dend_50, dend_46, dend_39, dend_36, dend_33, dend_26, dend_17, dend_15, dend_14, dend_10, dend_9, dend_53, dend_52, dend_48, dend_47, dend_45, dend_40, dend_35, dend_34, dend_19, dend_18, dend_44, dend_41, dend_21, dend_20, dend_43, dend_42, dend_23, dend_22, dend_25, dend_24]}
    ModelViewParmSubset_2 = new SectionList()
    dend_54 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_54, dend_27, dend_0, dend_56, dend_55, dend_29, dend_28, dend_6, dend_1, dend_37, dend_30, dend_12, dend_7, dend_3, dend_2, dend_49, dend_38, dend_32, dend_31, dend_16, dend_13, dend_11, dend_8, dend_5, dend_4, dend_51, dend_50, dend_46, dend_39, dend_36, dend_33, dend_26, dend_17, dend_15, dend_14, dend_10, dend_9, dend_53, dend_52, dend_48, dend_47, dend_45, dend_40, dend_35, dend_34, dend_19, dend_18, dend_44, dend_41, dend_21, dend_20, dend_43, dend_42, dend_23, dend_22, dend_25, dend_24]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_56 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_37 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_30 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_3 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_49 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_38 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_31 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_16 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_13 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_11 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_8 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_5 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_51 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_50 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_26 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_15 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_48 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_47 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_45 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_35 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_34 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_19 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_18 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_41 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_21 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_22 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_25 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_54 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_27 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_29 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_28 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_2 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_6 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_12 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_7 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_32 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_10 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_9 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_14 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_40 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_4 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_44 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_43 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_42 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_52 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_53 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_20 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_23 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_24 OneSecGrp_SectionRef_60.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_56 nseg = 9
    dend_37 nseg = 3
    dend_30 nseg = 3
    dend_3 nseg = 7
    dend_49 nseg = 3
    dend_38 nseg = 3
    dend_31 nseg = 5
    dend_16 nseg = 9
    dend_13 nseg = 3
    dend_11 nseg = 5
    dend_8 nseg = 3
    dend_5 nseg = 3
    dend_51 nseg = 5
    dend_50 nseg = 3
    dend_36 nseg = 3
    dend_26 nseg = 3
    dend_17 nseg = 11
    dend_15 nseg = 5
    dend_48 nseg = 3
    dend_47 nseg = 3
    dend_45 nseg = 3
    dend_35 nseg = 3
    dend_34 nseg = 5
    dend_19 nseg = 3
    dend_18 nseg = 5
    dend_41 nseg = 3
    dend_21 nseg = 3
    dend_22 nseg = 3
    dend_25 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L6_SBC_d20c9b88b4_0_0


