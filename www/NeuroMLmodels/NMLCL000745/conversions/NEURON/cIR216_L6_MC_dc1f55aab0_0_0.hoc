// Cell: cIR216_L6_MC_dc1f55aab0_0_0
/*
{
  "id" : "cIR216_L6_MC_dc1f55aab0_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.71807, 7.46707, -0.239219, 3.11955", "-1.47665, 6.49176, -0.211241, 4.96485", "-1.23523, 5.51645, -0.183263, 8.86546", "-0.993808, 4.54115, -0.155286, 11.5665", "-0.752387, 3.56584, -0.127308, 12.2473", "-0.510965, 2.59053, -0.0993297, 12.0797", "-0.269543, 1.61523, -0.0713518, 11.9263", "-0.0281214, 0.639918, -0.0433739, 11.7729", "0.2133, -0.335389, -0.015396, 11.5513", "0.454722, -1.3107, 0.0125819, 11.1274", "0.696144, -2.286, 0.0405598, 10.6073", "0.937566, -3.26131, 0.0685377, 10.0873", "1.17899, -4.23662, 0.0965156, 9.54598", "1.42041, -5.21192, 0.124494, 8.95742", "1.66183, -6.18723, 0.152471, 8.27166", "1.90325, -7.16254, 0.180449, 7.57184", "2.14467, -8.13784, 0.208427, 6.87201", "2.3861, -9.11315, 0.236405, 6.12549", "2.62752, -10.0885, 0.264383, 5.153", "2.86894, -11.0638, 0.292361, 4.18051", "3.11036, -12.0391, 0.320339, 2.46024" ]
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-0.609396, 6.0721, -8.22409, 1.24", "-1.3326, 7.33628, -8.83454, 1.24", "-2.09433, 8.6678, -9.47752, 1.24", "-3.44828, 11.0345, -10.6204, 1.24", "-5.2583, 14.1984, -12.1482, 1.24" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999926374436926
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "5.6806, 2.94211, 2.77591, 0.93", "6.62157, 4.69627, 2.77591, 0.93", "7.67994, 6.66927, 2.77591, 0.93", "10.6838, 12.2689, 2.77591, 0.93" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999926374436926
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "4.9206, 5.29211, 1.74591, 1.24", "6.304, 8.03628, 0.551995, 1.24", "7.11083, 9.63674, -0.144321, 1.24", "8.47723, 12.3471, -1.32355, 1.24", "9.57416, 14.5231, -2.27024, 1.24", "10.4459, 16.2523, -3.02259, 1.24" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999926374436926
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-6.4794, 0.862105, 0.615908, 1.24", "-7.75517, 1.43907, 1.51018, 1.24", "-10.3285, 2.58173, 3.30987, 1.24", "-13.601, 4.03479, 5.59843, 1.24", "-16.2101, 5.1933, 7.42309, 1.24", "-18.7229, 6.30904, 9.1804, 0.93", "-23.6304, 8.48811, 12.6124, 0.93", "-25.323, 9.1282, 13.8263, 0.93" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999926374436926
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.5006, -12.7979, 0.445908, 2.8", "2.75514, -14.9272, 0.682442, 2.8", "3.08209, -17.6621, 0.986268, 2.8", "3.83913, -23.9949, 1.68976, 2.48", "4.38484, -28.5599, 2.19688, 2.8" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999926374436926
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "3.11036, -12.0391, 0.320339, 0.93", "6.71458, -26.5996, 0.320339, 0.93", "10.3188, -41.1602, 0.320339, 0.93" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-5.2583, 14.1984, -12.1482, 0.62", "-9.56798, 14.176, -18.0171, 0.62", "-10.3659, 14.0783, -19.3416, 0.62", "-11.2828, 13.9545, -21.0687, 0.93", "-14.1233, 13.3079, -26.788, 0.93", "-14.519, 13.1806, -27.6304, 0.93", "-16.5149, 12.3881, -32.1245, 0.93", "-18.657, 11.2926, -37.0937, 0.93", "-20.7005, 10.2761, -41.8325, 0.93", "-21.7325, 9.77364, -44.0862, 0.93", "-24.5579, 8.40238, -49.883, 0.93", "-28.2344, 6.85553, -56.549, 0.31", "-28.773, 6.63693, -57.3976, 0.62", "-34.1434, 4.51758, -64.5994, 0.31", "-36.6326, 3.52404, -67.5167, 0.62", "-43.1848, 1.02729, -74.459, 0.31", "-45.8634, -0.0394975, -77.0024, 0.62", "-48.4668, -1.17125, -79.2232, 0.31", "-50.67, -2.24619, -81.0991, 0.93", "-52.6398, -3.38551, -82.7742, 0.31", "-53.9214, -4.09507, -84.054, 0.62", "-56.5594, -5.48875, -86.9528, 0.31", "-57.9642, -6.20405, -88.5581, 0.62", "-61.478, -7.62874, -92.583, 0.31", "-63.467, -8.26843, -94.7428, 0.62", "-69.233, -9.75435, -100.708, 0.31", "-70.5313, -10.0259, -101.896, 0.31", "-75.9411, -10.957, -106.266, 0.93", "-80.1767, -11.4963, -109.645, 0.31", "-81.663, -11.6478, -110.818, 0.62", "-86.4464, -12.199, -115.731, 0.31", "-87.7383, -12.3862, -117.204, 0.31", "-88.581, -12.4927, -118.188, 0.93", "-91.8026, -12.8482, -122.302, 0.31", "-93.8998, -13.115, -124.808, 0.62", "-101.429, -14.0196, -133.38, 0.31", "-105.179, -14.363, -137.226, 0.62", "-108.098, -14.4999, -140.026, 0.31", "-112.261, -14.4848, -143.573, 0.93", "-116.672, -14.23, -146.396, 0.31", "-117.904, -14.0824, -146.987, 0.62", "-120.009, -13.7626, -147.722, 0.62", "-121.659, -13.5082, -148.431, 0.93", "-123.45, -13.2718, -149.148, 0.31", "-126.643, -13.0025, -150.091, 0.31", "-127.429, -12.9654, -150.32, 0.62", "-132.316, -12.9405, -151.786, 0.31", "-133.092, -12.987, -152.032, 0.62", "-135.215, -13.2616, -152.733, 0.31", "-139.011, -14.0042, -154.044, 1.24", "-141.388, -14.5725, -154.903, 0.62" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-5.2583, 14.1984, -12.1482, 0.93", "-6.11987, 18.0239, -15.4902, 0.93", "-6.7829, 20.1998, -17.2041, 0.93", "-7.48415, 22.2222, -18.7948, 0.93", "-9.05296, 26.7466, -22.3534, 0.93", "-10.0478, 29.6157, -24.6102, 0.93", "-10.7041, 31.5086, -26.099, 0.93", "-11.9821, 34.8165, -28.4714, 0.93", "-12.9789, 37.2378, -30.2942, 0.93" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "10.6838, 12.2689, 2.77591, 0.62", "12.1438, 12.8689, 5.63591, 0.62", "16.9714, 15.731, 13.9125, 0.62" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "10.6838, 12.2689, 2.77591, 0.93", "13.5062, 17.8373, 5.04055, 0.93", "16.454, 22.7851, 7.0355, 0.93", "18.8922, 26.4029, 8.50152, 0.93", "20.5446, 28.5327, 9.42379, 0.62", "23.1934, 31.6046, 10.8362, 0.62", "25.9861, 34.497, 12.2448, 0.62", "28.5945, 36.4667, 13.2015, 0.62", "30.592, 37.4975, 13.8649, 0.62", "33.4946, 38.5929, 14.7469, 0.62", "35.4623, 39.1484, 15.3699, 0.62", "38.165, 39.629, 16.2518, 0.62", "41.3259, 39.9748, 17.2738, 0.62", "45.3425, 40.3463, 18.4953, 0.31", "46.6757, 40.4262, 18.8804, 0.62", "53.1214, 46.5456, 23.4636, 0.62", "61.2646, 51.3708, 26.6894, 0.62", "69.0748, 55.9988, 30.8825, 0.62", "75.9261, 61.0298, 36.1502, 0.62", "82.9246, 67.1957, 39.7563, 0.62", "89.3042, 74.2132, 42.9272, 0.62", "95.7752, 80.8624, 46.6573, 0.62", "101.389, 87.7528, 51.2398, 0.62", "107.613, 94.1232, 55.7881, 0.62", "114.194, 100.982, 58.8926, 0.62", "121.012, 106.823, 63.297, 0.62", "128.35, 112.625, 66.8317, 0.62", "135.576, 118.61, 70.2909, 0.62", "143.475, 122.878, 74.6926, 0.62", "152.23, 126.989, 77.2351, 0.62" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "10.4459, 16.2523, -3.02259, 0.62", "14.5899, 17.3156, -6.36344, 0.62", "17.0873, 17.9595, -9.05837, 0.62", "18.761, 18.2188, -10.9698, 0.93", "20.6649, 18.3749, -13.4065, 0.62", "22.2271, 18.4285, -15.4983, 0.62", "24.0824, 18.4558, -18.139, 0.93", "26.7676, 18.4642, -22.57, 0.93", "28.18, 18.4997, -25.4639, 0.62", "30.6579, 18.6747, -31.1887, 0.31", "30.8932, 18.7023, -31.7517, 0.62", "32.5692, 19.0406, -35.5944, 0.62", "34.3527, 19.5068, -39.4459, 0.62", "36.1967, 20.1285, -43.276, 0.93", "38.5242, 21.1019, -47.9356, 0.31", "39.4189, 21.4606, -49.5835, 0.62", "41.5039, 22.2834, -53.3729, 0.31", "41.8424, 22.4093, -53.9572, 0.62", "43.9894, 23.1585, -57.3414, 0.31", "45.0772, 23.5598, -58.9442, 0.31", "46.9768, 24.3547, -61.772, 0.93", "52.486, 26.8292, -70.1344, 0.31", "52.8948, 27.0357, -70.7636, 0.62", "54.1818, 27.7213, -72.8666, 0.31", "54.5174, 27.9194, -73.4631, 0.93", "56.6265, 29.2033, -77.302, 0.31", "56.9169, 29.3889, -77.8194, 0.62", "58.7776, 30.5525, -80.8979, 0.31", "63.3987, 33.477, -88.5874, 0.31", "65.5494, 34.7998, -92.0353, 0.93", "67.3726, 35.9075, -94.8354, 0.31", "67.8422, 36.1886, -95.5293, 0.62", "69.7745, 37.357, -98.3142, 0.31", "71.1052, 38.1631, -100.054, 0.93", "74.9016, 40.4717, -103.72, 0.31", "77.1066, 41.7189, -105.705, 0.93" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "10.4459, 16.2523, -3.02259, 0.93", "11.1468, 19.523, -3.19371, 0.93", "11.9573, 23.3052, -3.3916, 0.93" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-25.323, 9.1282, 13.8263, 0.62", "-27.5488, 11.4766, 14.7005, 0.62", "-28.9689, 13.2335, 15.6992, 0.62", "-29.808, 14.2589, 16.56, 0.62", "-30.989, 15.7024, 17.7717, 0.62", "-31.8107, 16.7067, 18.6148, 0.62", "-33.8557, 19.206, 20.7128, 0.62", "-36.1994, 22.2265, 23.6278, 0.62", "-39.2924, 26.0888, 27.8007, 0.62", "-44.1116, 32.1457, 34.1324, 0.62", "-48.3411, 39.3138, 39.6757, 0.62", "-52.0685, 47.5543, 43.942, 0.62", "-55.9981, 56.0108, 47.5539, 0.62", "-60.9541, 64.5621, 49.0747, 0.62", "-64.9914, 73.4858, 51.0916, 0.62", "-69.7733, 81.9555, 53.415, 0.62", "-74.7556, 90.5787, 54.3191, 0.62", "-78.0572, 99.8964, 55.8321, 0.62", "-81.863, 109.104, 56.6771, 0.62", "-85.5831, 118.371, 56.1431, 0.62", "-88.9218, 127.796, 56.2879, 0.62", "-91.433, 137.462, 55.7699, 0.62", "-92.1707, 147.414, 56.4136, 0.62", "-94.1174, 156.921, 58.829, 0.62", "-94.9737, 166.853, 59.6086, 0.62", "-96.1273, 176.491, 62.014, 0.62" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-25.323, 9.1282, 13.8263, 0.93", "-32.5685, 9.13946, 13.077, 0.93", "-39.9345, 8.76566, 12.4347, 0.93", "-44.579, 8.45863, 12.072, 0.93", "-48.0409, 8.12253, 11.8329, 0.93", "-51.0727, 7.79246, 11.7238, 0.93", "-53.9055, 7.39458, 11.7595, 0.93", "-57.7318, 6.77483, 12.1289, 0.93", "-59.8978, 6.31654, 12.4344, 0.93", "-63.4172, 5.63444, 12.9872, 0.93", "-68.7313, 4.6173, 13.6303, 0.93", "-75.9402, 3.36562, 14.2158, 0.93", "-79.0198, 2.81779, 14.4731, 0.93", "-84.2755, 1.88402, 14.8908, 0.93", "-89.3774, 0.929196, 15.227, 0.93", "-96.2373, -0.478746, 15.5557, 0.93", "-100.281, -1.70843, 15.6407, 0.93", "-104.379, -3.04198, 15.6523, 0.93", "-108.756, -4.65249, 15.6674, 0.93", "-112.559, -6.20281, 15.7198, 0.93", "-118.525, -9.0188, 15.9893, 0.93", "-129.64, -14.747, 17.1104, 0.93" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "4.38484, -28.5599, 2.19688, 0.93", "8.84805, -33.0164, 2.56734, 0.93", "11.7534, -35.2976, 2.71755, 0.93", "17.194, -38.9589, 2.93438, 0.93", "20.7833, -41.1348, 2.9611, 0.93", "24.9756, -43.5553, 2.88664, 0.93", "31.4574, -47.1949, 2.33149, 0.93", "36.8542, -49.6905, 1.32994, 0.93", "38.64, -50.3996, 0.85416, 0.93", "40.8738, -51.2347, 0.0386141, 0.93", "42.6351, -51.8537, -0.71157, 0.93", "47.8934, -53.9433, -3.54435, 0.93", "49.6525, -54.9618, -4.82207, 0.93", "52.1263, -56.6338, -6.97246, 0.93", "54.7891, -58.6597, -9.28342, 0.93" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "4.38484, -28.5599, 2.19688, 2.8", "4.07142, -31.1751, 1.14931, 2.8", "3.80369, -33.4091, 0.254442, 2.17", "3.28914, -37.7026, -1.46535, 2.8" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "10.3188, -41.1602, 0.320339, 0.31", "13.923, -55.7207, 0.320339, 0.31", "17.5273, -70.2813, 0.320339, 0.31" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-12.9789, 37.2378, -30.2942, 0.62", "-18.5957, 40.8115, -32.5297, 0.62", "-20.8535, 42.2264, -33.5372, 0.31", "-22.8017, 43.5279, -34.3859, 0.62", "-24.7394, 44.9439, -35.124, 0.31", "-29.638, 48.6631, -36.848, 0.31", "-31.7756, 50.2757, -37.5962, 0.93", "-33.4735, 51.6311, -38.242, 0.31", "-36.517, 54.2075, -39.3608, 0.62", "-40.4215, 57.7169, -40.7362, 0.31", "-42.3716, 59.5146, -41.267, 0.31", "-44.4847, 61.4687, -41.5152, 0.93", "-47.609, 64.4463, -41.8171, 0.31", "-49.1005, 65.9045, -41.9552, 0.93", "-50.6102, 67.4012, -42.0928, 0.31", "-52.7795, 69.6514, -42.2692, 0.93", "-58.2848, 75.5717, -42.6364, 0.31", "-59.448, 76.9328, -42.6975, 0.93", "-64.8424, 83.6049, -43.0676, 0.31", "-66.351, 85.5917, -43.145, 0.93", "-67.9952, 87.9166, -43.2024, 0.31", "-68.7508, 89.1079, -43.2362, 0.62", "-73.2113, 96.8119, -43.3023, 0.31", "-74.3537, 98.8258, -43.2043, 0.93", "-75.7073, 101.407, -42.6604, 0.31", "-76.1811, 102.351, -42.3382, 0.62", "-77.0716, 104.137, -41.3862, 0.31", "-77.7904, 105.562, -40.358, 0.93", "-78.2101, 106.354, -39.5217, 0.31", "-80.4889, 110.53, -34.6618, 0.31", "-81.2205, 111.856, -33.1036, 0.93", "-82.138, 113.53, -31.0294, 0.31", "-82.9646, 115.125, -28.929, 0.62" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-12.9789, 37.2378, -30.2942, 0.93", "-15.9874, 40.6608, -34.3474, 0.93", "-16.3386, 41.0663, -34.772, 0.93", "-17.9638, 43.2167, -37.0697, 0.93", "-19.1158, 45.0052, -38.922, 0.31", "-19.605, 45.8525, -39.7466, 0.31", "-20.4806, 47.4704, -41.381, 0.62", "-21.1074, 48.738, -42.6068, 0.62", "-22.4746, 51.7242, -45.4789, 0.93", "-23.5368, 54.3806, -47.9444, 0.31", "-23.909, 55.4402, -49.0116, 0.93", "-24.731, 58.4295, -52.0201, 1.24" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "16.9714, 15.731, 13.9125, 0.62", "20.9775, 18.8624, 22.5233, 0.62", "24.7199, 22.1535, 31.193, 0.62", "28.6418, 24.0803, 40.1878, 0.62", "32.4475, 25.6985, 49.2926, 0.62", "35.3006, 27.9002, 58.6206, 0.62", "38.476, 30.9637, 67.5946, 0.62", "42.2713, 32.0218, 76.7857, 0.62", "46.4024, 33.6084, 85.7532, 0.62", "49.6405, 35.8185, 94.9527, 0.62", "52.0137, 36.3431, 104.653, 0.62", "53.0744, 37.2776, 114.552, 0.62", "52.0614, 36.1503, 124.437, 0.62", "50.3524, 35.7184, 134.28, 0.62" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "16.9714, 15.731, 13.9125, 0.93", "22.1948, 17.9801, 22.138, 0.62", "26.8613, 19.8709, 30.7779, 0.62", "30.6487, 20.5221, 40.01, 0.62", "33.1017, 21.6158, 49.6426, 0.62" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "11.9573, 23.3052, -3.3916, 0.62", "13.1718, 26.4384, -6.15733, 0.62", "13.5453, 27.3305, -6.81982, 0.93", "15.3914, 31.4315, -9.47666, 0.62", "16.8135, 34.3704, -11.187, 0.31", "17.8357, 36.3893, -12.2369, 0.93", "18.745, 38.1007, -13.0035, 0.62", "20.0009, 40.2378, -13.5964, 0.62", "20.8096, 41.5301, -13.8354, 0.93", "21.9759, 43.2392, -13.9323, 0.31", "23.0922, 44.8761, -13.9741, 0.62", "25.1036, 47.757, -13.9142, 0.62", "28.4152, 52.6324, -13.6671, 0.62", "29.5415, 54.2676, -13.501, 0.62", "31.0888, 56.5771, -13.1551, 0.62", "32.7319, 59.1741, -12.648, 0.62", "34.793, 62.6416, -11.8967, 0.93", "36.2519, 65.5427, -11.1924, 0.62", "37.6015, 68.6218, -10.4487, 0.93", "38.3024, 70.4229, -10.0443, 0.93", "39.6865, 74.2917, -9.27994, 0.62", "40.7735, 77.405, -8.72763, 0.62", "42.8672, 83.7074, -7.87951, 0.62", "44.3698, 88.2816, -7.31492, 0.62", "45.578, 92.1266, -6.92682, 0.31", "45.9788, 93.3633, -6.80581, 0.62", "46.6881, 95.4886, -6.60782, 0.31", "47.3344, 97.3448, -6.44272, 0.62" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "11.9573, 23.3052, -3.3916, 0.62", "11.4419, 27.3181, -2.90546, 0.62", "11.004, 30.0327, -2.56146, 0.62", "10.6401, 32.7604, -2.23906, 0.62", "10.2124, 36.4209, -1.84218, 0.62", "9.91463, 39.1577, -1.47472, 0.62", "9.72656, 41.3786, -1.13877, 0.62", "9.53663, 47.1782, -0.143257, 0.62", "9.59927, 50.9799, 0.548198, 0.62", "9.98316, 58.6168, 1.938, 0.62", "10.2564, 62.0203, 2.55245, 0.62", "10.7844, 67.6861, 3.49668, 0.62", "11.2635, 73.0396, 4.38357, 0.62", "11.7168, 78.8887, 5.45253, 0.62", "11.9724, 84.4774, 6.53576, 0.62", "12.0379, 86.9664, 7.03635, 0.62", "12.0898, 92.4156, 8.14381, 0.62", "12.121, 96.3778, 9.06294, 0.62", "12.1613, 100.56, 10.1578, 0.62", "12.2564, 103.215, 11.0231, 0.62", "12.5593, 107.343, 12.6906, 0.62", "13.1022, 112.522, 14.9077, 0.31", "14.1391, 119.288, 18.0357, 0.31", "14.5819, 121.462, 19.0639, 0.62", "16.0618, 127.837, 22.0712, 0.31", "16.8082, 130.816, 23.6081, 0.62", "18.8205, 139.874, 27.3378, 0.62" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-129.64, -14.747, 17.1104, 0.31", "-132.812, -17.6723, 17.0389, 0.31", "-133.99, -18.8639, 17.0042, 0.62", "-135.863, -20.7629, 16.9455, 0.31", "-136.815, -21.7196, 16.9345, 0.62", "-137.956, -22.7693, 16.9505, 0.31", "-139.292, -23.9981, 16.9692, 0.62", "-140.782, -25.4309, 16.9906, 0.31", "-141.69, -26.2802, 17.0142, 0.62", "-142.827, -27.2233, 17.068, 0.31", "-144.463, -28.5593, 17.2349, 0.62", "-152.57, -34.1582, 18.9439, 0.62" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-129.64, -14.747, 17.1104, 0.62", "-136.103, -16.6733, 17.662, 0.62", "-142.439, -18.2321, 17.8026, 0.62", "-146.933, -19.206, 17.4964, 0.62", "-153.779, -20.4734, 16.7035, 0.62", "-158.202, -21.1766, 16.0462, 0.62", "-160.627, -21.4636, 15.6447, 0.62", "-166.696, -21.7939, 14.1704, 0.62", "-171.894, -21.6028, 12.7079, 0.62", "-173.603, -21.42, 12.1583, 0.62", "-176.289, -20.9291, 11.1571, 0.62", "-181.237, -19.8848, 9.21153, 0.31", "-182.683, -19.5257, 8.68485, 0.93", "-185.026, -18.8566, 8.18167, 0.62", "-194.919, -20.1351, 7.47994, 0.62", "-204.748, -21.9203, 7.93262, 0.62", "-214.517, -23.8244, 8.90621, 0.62" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "54.7891, -58.6597, -9.28342, 0.62", "57.9441, -60.9246, -10.7898, 0.62", "60.2259, -62.8848, -11.9602, 0.62", "63.6942, -66.0989, -13.8191, 0.62", "65.0036, -67.2835, -14.5902, 0.62", "68.9346, -70.9312, -17.2139, 0.62", "71.5743, -73.5331, -19.1108, 0.62", "74.0087, -76.1495, -21.0389, 0.62", "77.3216, -79.8534, -23.8706, 0.62", "81.7264, -85.1234, -27.9253, 0.62", "84.5381, -88.6636, -30.5922, 0.62", "88.4877, -93.7261, -34.2427, 0.62", "90.2654, -96.039, -35.8978, 0.62", "91.2356, -97.2948, -36.7599, 0.93", "92.6279, -99.1505, -37.9088, 0.62", "93.7177, -100.615, -38.6449, 0.62", "94.9497, -102.032, -39.2708, 0.93", "96.8694, -103.825, -40.1372, 0.62", "98.6349, -105.288, -40.9097, 0.93", "102.025, -107.854, -42.7584, 0.31", "103.256, -108.717, -43.4721, 0.31", "104.547, -109.601, -44.2523, 0.62", "109.928, -113.272, -47.7576, 0.31", "111.002, -114.004, -48.5209, 0.93", "115.152, -116.738, -51.5163, 0.31", "118.06, -118.638, -53.8125, 0.31", "118.974, -119.202, -54.5658, 0.93", "120.704, -120.232, -56.0313, 0.31", "121.931, -120.912, -57.1324, 0.93", "125.081, -122.66, -60.1919, 0.31", "128.064, -124.274, -63.0938, 0.93", "129.568, -125.089, -64.7213, 0.31", "130.333, -125.532, -65.5782, 0.93", "132.945, -127.184, -68.3572, 0.31", "135.331, -128.83, -70.858, 0.93", "137.121, -130.127, -72.748, 0.31", "137.716, -130.543, -73.3266, 0.62", "139.221, -131.524, -74.755, 0.31", "143.817, -134.368, -78.9391, 0.31", "146.998, -136.15, -81.7928, 0.93", "149.862, -137.529, -84.6699, 0.31", "151.474, -138.218, -86.3942, 0.62", "155.4, -139.816, -90.512, 0.31", "155.88, -139.999, -91.0067, 0.93", "159.726, -141.486, -94.9044, 0.31", "165.082, -143.77, -100.08, 0.62", "167.081, -144.796, -101.898, 0.93", "170.37, -146.946, -104.816, 0.31", "171.158, -147.634, -105.48, 0.62", "172.747, -149.277, -106.809, 0.31", "173.239, -149.896, -107.194, 0.93", "175.028, -152.333, -108.591, 0.31", "177.163, -155.054, -110.406, 0.31", "180.055, -158.454, -112.992, 0.31", "181.917, -160.471, -114.586, 0.93", "183.087, -161.61, -115.515, 0.31", "184.31, -162.694, -116.369, 0.62", "189.083, -166.614, -119.233, 0.31", "190.171, -167.457, -119.625, 0.62", "191.926, -168.915, -120.01, 0.31", "192.744, -169.637, -120.173, 0.62", "194.705, -171.388, -120.657, 0.31", "195.46, -172.076, -120.946, 0.62", "202.269, -178.349, -124.398, 0.31", "204.624, -180.389, -125.716, 0.31", "207.46, -182.671, -127.417, 0.93", "210.511, -185.066, -129.345, 0.31", "215.117, -188.554, -132.42, 0.31", "215.851, -189.094, -132.926, 0.62", "219.315, -191.55, -135.499, 0.31", "220.728, -192.48, -136.478, 0.62", "223.607, -194.445, -138.099, 0.31", "224.137, -194.845, -138.314, 0.62", "225.979, -196.3, -138.597, 0.31", "226.563, -196.804, -138.673, 0.93" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "54.7891, -58.6597, -9.28342, 0.62", "56.3522, -62.6679, -8.24539, 0.62", "56.7895, -63.7751, -7.92211, 0.62", "57.5154, -65.6514, -7.41704, 0.62", "58.9945, -68.6309, -6.73125, 0.62", "61.8609, -73.6292, -5.65563, 0.62", "62.8825, -75.2184, -5.32878, 0.62", "65.6408, -79.1175, -4.22667, 0.62", "70.6888, -85.9582, -1.94798, 0.62", "76.1075, -93.2561, 0.671223, 0.62", "78.5334, -96.46, 1.85293, 0.62", "80.5872, -99.094, 2.78291, 0.62", "85.3998, -105.414, 5.37089, 0.62", "87.1222, -107.748, 6.6264, 0.62", "89.4987, -111.096, 8.77969, 0.62", "91.0625, -113.836, 10.7648, 0.62", "91.8221, -115.395, 11.9082, 0.62", "94.0164, -120.572, 15.5688, 0.62", "95.945, -125.001, 18.2003, 0.62", "101.677, -132.969, 20.1131, 0.62", "108.758, -139.594, 22.5556, 0.62", "115.984, -145.441, 26.2431, 0.62", "123.52, -149.919, 31.0563, 0.62", "130.346, -152.932, 37.7133, 0.62", "138.104, -155.15, 43.6209, 0.62" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "3.28914, -37.7026, -1.46535, 0.93", "5.2869, -40.2688, -6.05196, 0.93", "6.04777, -41.2978, -7.6492, 0.93", "7.18817, -42.84, -10.0432, 0.93", "8.55127, -44.6834, -12.9047, 0.93", "9.1691, -45.519, -14.2016, 0.93", "10.7829, -47.7013, -17.5892, 1.24", "12.2249, -49.4658, -20.4024, 1.24" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "3.28914, -37.7026, -1.46535, 2.48", "2.36914, -39.4426, -1.55535, 2.48" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-24.731, 58.4295, -52.0201, 0.31", "-25.0931, 61.1454, -53.9517, 0.31", "-25.1663, 61.9381, -54.5015, 0.62", "-25.4318, 67.0039, -57.784, 0.31", "-25.4515, 68.3212, -58.5806, 0.31", "-25.4009, 70.0464, -59.5312, 0.93", "-25.0667, 75.1049, -62.2462, 0.31", "-24.9315, 75.9483, -62.8064, 0.62", "-24.4945, 77.8224, -64.1864, 0.62", "-24.1687, 78.953, -65.1845, 0.93", "-23.3597, 81.1422, -67.4126, 0.62", "-22.6162, 82.6371, -69.5134, 0.62", "-20.1301, 86.605, -76.3148, 0.31", "-19.4598, 87.5263, -78.1218, 0.93", "-17.1266, 90.1886, -84.521, 0.31", "-16.1805, 91.1272, -87.1687, 0.31", "-12.5924, 94.0312, -96.9218, 0.31", "-12.1817, 94.3034, -97.9653, 0.93", "-11.2017, 94.7873, -100.22, 0.62", "-8.83905, 95.6671, -105.348, 0.31", "-7.39066, 96.027, -108.242, 0.93", "-5.35371, 96.439, -111.904, 0.31", "-4.68265, 96.5364, -112.955, 0.93", "-2.40785, 96.796, -116.395, 0.31", "0.405285, 97.014, -120.413, 0.31", "2.28025, 97.1976, -122.973, 0.62", "6.78016, 97.691, -129.005, 0.31", "8.51461, 97.9485, -131.286, 0.62", "10.4892, 98.3255, -133.868, 0.31", "12.0801, 98.7107, -136.084, 0.93", "16.9148, 100.018, -143.068, 0.31", "17.6233, 100.225, -144.116, 0.62", "19.158, 100.666, -146.418, 0.31", "19.5119, 100.752, -146.907, 0.62", "24.8749, 101.601, -154.405, 0.31", "25.7789, 101.657, -155.66, 0.31", "26.2658, 101.625, -156.449, 0.62", "27.3667, 101.601, -158.862, 0.31", "27.8472, 101.579, -160.005, 0.62", "29.4947, 101.53, -164.122, 0.31", "30.0996, 101.534, -165.837, 0.62", "32.9901, 101.72, -175.31, 0.31", "35.1411, 101.996, -183.542, 0.62" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-24.731, 58.4295, -52.0201, 0.31", "-23.6622, 62.9891, -54.1067, 0.31", "-23.2609, 64.8061, -55.0136, 0.62", "-22.4648, 68.41, -56.8123, 0.93", "-20.6846, 76.4689, -60.8346, 0.31", "-20.0677, 79.2613, -62.2283, 0.62", "-19.5564, 81.576, -63.3836, 0.31", "-18.6399, 85.8762, -65.8424, 0.62" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "33.1017, 21.6158, 49.6426, 0.62", "37.8714, 22.5172, 58.3854, 0.62", "41.2217, 23.261, 67.7781, 0.62", "43.2053, 23.5956, 77.5737, 0.62", "46.9306, 22.2244, 86.752, 0.62", "50.2996, 21.9831, 96.1643, 0.62", "52.166, 22.0869, 105.988, 0.62", "54.5764, 21.6012, 115.681, 0.62", "58.8753, 20.968, 124.688, 0.62", "63.1185, 20.8183, 133.742, 0.62", "69.0338, 18.7157, 141.525, 0.62", "74.4646, 16.15, 149.521, 0.62", "78.6509, 13.3137, 158.148, 0.62", "84.773, 10.8832, 165.672, 0.62", "90.9764, 9.26221, 173.346, 0.62", "96.0854, 6.5003, 181.487, 0.62", "101.436, 5.03471, 189.806, 0.62" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "33.1017, 21.6158, 49.6426, 0.93", "35.4967, 24.3372, 58.9623, 0.62", "38.3556, 25.781, 68.4356, 0.62", "40.1884, 28.4482, 77.8974, 0.62", "43.1516, 32.1586, 86.6981, 0.62", "45.5662, 36.2821, 95.4826, 0.62", "46.8715, 39.4252, 104.886, 0.62", "47.7084, 41.96, 114.523, 0.62", "48.2106, 45.8848, 123.707, 0.62", "49.2975, 50.6425, 132.435, 0.62", "51.7705, 55.6227, 140.747, 0.62", "54.2199, 59.8663, 149.464, 0.62", "55.6011, 63.3141, 158.749, 0.62", "57.4765, 68.5504, 167.059, 0.62", "57.9969, 74.6089, 174.998, 0.62", "59.9098, 80.7845, 182.627, 0.62", "62.9986, 85.5721, 190.845, 0.62" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "12.2249, -49.4658, -20.4024, 0.62", "10.9499, -52.2473, -24.3013, 0.62", "9.53624, -55.2042, -28.215, 0.62", "7.29091, -59.5453, -33.5779, 0.62", "5.10254, -63.5687, -38.1457, 0.62", "3.8664, -65.8023, -40.613, 0.62", "2.15224, -68.9298, -43.96, 0.31", "1.49012, -70.1603, -45.1097, 0.62", "0.235094, -72.4517, -46.9679, 0.31", "-1.10364, -75.0508, -48.6261, 0.62", "-2.99794, -79.0825, -50.8131, 0.31", "-3.55961, -80.4479, -51.5213, 0.93", "-4.92517, -84.2721, -53.4144, 0.62", "-6.40858, -88.8738, -55.674, 0.93", "-7.76808, -93.5124, -58.5031, 0.31", "-8.52699, -96.0999, -60.2594, 0.31", "-9.49471, -99.3149, -62.483, 0.62", "-10.1061, -101.236, -63.9701, 0.31", "-10.4941, -102.395, -64.9557, 0.93", "-13.3907, -110.119, -72.0919, 0.62", "-14.0857, -111.748, -73.7307, 0.62", "-15.0601, -113.794, -75.7562, 0.62", "-16.4087, -116.576, -78.3518, 0.31", "-17.0013, -117.774, -79.4817, 1.24", "-18.5583, -120.698, -81.9965, 0.62", "-19.5733, -122.525, -83.2022, 0.31", "-20.0855, -123.407, -83.8284, 0.62", "-21.6606, -126.038, -85.6482, 0.31", "-22.6579, -127.704, -86.7546, 0.62", "-23.9383, -129.827, -88.1897, 0.31", "-24.8692, -131.311, -89.1514, 0.62", "-26.008, -133.062, -90.3061, 0.62", "-27.892, -135.894, -92.1263, 0.31", "-29.1422, -137.721, -93.3138, 0.62", "-31.2928, -141.047, -95.7883, 0.31", "-31.8126, -141.995, -96.4719, 0.62", "-32.4383, -143.251, -97.2987, 0.31", "-32.9122, -144.317, -97.8987, 0.62", "-34.7371, -148.975, -100.137, 0.31", "-35.7371, -152.27, -101.44, 0.93", "-36.8786, -156.918, -103.059, 0.31", "-37.2242, -158.442, -103.531, 0.62", "-37.7849, -161.063, -104.241, 0.31", "-38.1259, -162.772, -104.695, 1.24", "-39.964, -172.184, -107.057, 0.31", "-40.5261, -174.708, -107.681, 1.24", "-41.4896, -178.468, -108.752, 0.62", "-41.9324, -179.932, -109.146, 0.93", "-43.7659, -185.151, -110.411, 0.31", "-44.3426, -186.557, -110.676, 0.31", "-47.3067, -192.52, -111.342, 0.31", "-48.0249, -193.855, -111.45, 0.93", "-51.2989, -199.804, -111.701, 0.31", "-52.4943, -201.91, -111.686, 0.62", "-53.9535, -204.429, -111.462, 0.93", "-54.8217, -206.01, -111.283, 0.31", "-55.5939, -207.463, -111.055, 0.62", "-56.6837, -209.662, -110.537, 0.31", "-57.0072, -210.246, -110.353, 0.62", "-59.6591, -214.512, -108.676, 0.31", "-60.8455, -216.166, -107.947, 0.62", "-62.5658, -218.394, -106.881, 0.31", "-64.6231, -220.908, -105.655, 0.62", "-69.5889, -226.735, -102.78, 0.31", "-71.4094, -228.969, -101.737, 0.93", "-74.8182, -233.702, -99.7763, 0.31", "-75.9012, -235.434, -99.2315, 0.62", "-77.7279, -238.57, -98.3865, 0.31", "-78.6807, -240.403, -98.0187, 0.62", "-80.4929, -245.007, -97.356, 0.31", "-82.686, -251.754, -96.8046, 0.31", "-83.5097, -255.537, -96.6576, 0.93" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "12.2249, -49.4658, -20.4024, 0.93", "15.6139, -50.7508, -22.7333, 0.93", "18.281, -51.9755, -23.8645, 0.93", "20.4583, -53.0635, -24.5613, 0.93", "22.56, -54.1967, -25.1607, 0.93", "25.9333, -56.0117, -26.2877, 0.93", "32.1741, -59.5047, -28.6153, 0.93", "40.3321, -64.2257, -31.8149, 0.93", "41.9194, -65.1979, -32.5108, 0.93", "44.4681, -66.8148, -33.7548, 0.93", "50.0317, -70.4632, -36.7472, 0.93", "53.4593, -72.9329, -38.766, 0.93", "55.4254, -74.4929, -40.1194, 0.93", "58.2148, -76.874, -42.4149, 0.93", "60.1472, -78.6264, -43.9388, 0.93", "61.9117, -80.4113, -45.2385, 0.93", "64.3172, -83.174, -46.7145, 0.93", "67.2419, -86.7698, -48.414, 0.93", "70.3327, -90.9135, -50.1045, 0.93", "71.458, -92.5186, -50.7144, 0.93", "73.2512, -95.2882, -51.7637, 0.93", "76.609, -101.111, -54.3692, 0.93", "77.7215, -103.364, -55.5733, 0.93", "79.0426, -107.078, -57.7124, 0.93", "79.7619, -110.042, -59.4579, 0.93", "80.2066, -112.453, -61.1039, 0.93", "80.8371, -117.194, -64.7805, 0.93", "80.9857, -119.357, -66.5738, 0.93", "81.282, -124.834, -71.1321, 0.93", "81.3892, -127.953, -73.7925, 0.93", "81.6585, -133.726, -78.4546, 0.93", "81.9184, -136.932, -80.8993, 1.86" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "2.36914, -39.4426, -1.55535, 0.93", "-1.21827, -41.6466, 0.178926, 0.93", "-2.79462, -42.7115, 1.27971, 0.62", "-3.65113, -43.2756, 1.97926, 0.62", "-5.82821, -44.8549, 3.87587, 0.93", "-7.14727, -45.8028, 5.0186, 0.93", "-13.6272, -50.6781, 10.3006, 0.93", "-16.3711, -52.8567, 12.5578, 0.93", "-18.5401, -54.6645, 14.2424, 0.93", "-23.0279, -58.6222, 17.3208, 0.93", "-25.0366, -60.5495, 18.4278, 0.93", "-28.102, -63.7102, 19.6203, 0.93", "-30.7837, -66.7111, 20.0428, 0.93", "-32.0969, -68.1937, 20.1117, 0.93", "-35.0845, -71.7053, 19.9881, 0.93", "-38.004, -75.1832, 19.5939, 0.93", "-39.4422, -76.9926, 19.3585, 0.62", "-43.177, -81.5172, 18.8418, 0.62" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "2.36914, -39.4426, -1.55535, 1.55", "2.94914, -44.0426, -2.07535, 1.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "81.9184, -136.932, -80.8993, 0.62", "81.5821, -143.544, -82.6115, 0.62", "81.4449, -147.205, -83.4659, 0.62", "81.5533, -151.735, -84.432, 0.31", "81.6701, -153.071, -84.7166, 0.62", "81.9886, -155.547, -85.2607, 0.31", "82.7045, -160.332, -86.3164, 0.31", "82.9188, -161.37, -86.638, 0.62", "83.8558, -165.657, -88.1263, 0.31", "84.3273, -167.674, -88.8439, 0.62", "85.7216, -173.56, -91.1432, 0.31", "85.9186, -174.392, -91.5031, 0.62", "87.6845, -182.473, -95.5285, 0.31", "88.028, -184.176, -96.4423, 0.62", "88.2161, -185.392, -97.1234, 0.93", "88.5435, -188.052, -98.6538, 0.31", "88.6638, -189.074, -99.2619, 0.62", "89.2423, -194.405, -102.327, 0.31", "89.6672, -198.515, -104.448, 0.31", "89.8466, -200.297, -105.324, 0.93", "90.3114, -205.193, -107.565, 0.31", "90.5195, -207.005, -108.402, 0.62", "90.7319, -208.404, -109.032, 0.62", "91.2975, -211.49, -110.324, 0.31", "91.77, -213.645, -111.428, 0.62", "92.6419, -217.287, -113.552, 0.31", "93.4443, -220.688, -115.748, 1.24", "94.0722, -223.522, -117.97, 0.31", "94.4682, -225.525, -119.678, 0.62", "95.5695, -231.475, -125.04, 0.31", "96.0412, -234.406, -127.675, 0.31", "96.3047, -236.457, -129.464, 0.93", "96.8912, -242.523, -134.441, 0.31", "97.1035, -245.219, -136.584, 0.31", "97.2738, -247.416, -138.187, 0.93", "97.4162, -249.904, -139.777, 0.31", "97.4844, -251.394, -140.783, 0.62", "97.5749, -253.8, -142.367, 0.31", "97.5933, -255.025, -143.008, 0.93", "97.5586, -259.169, -144.938, 0.62", "97.5344, -262.989, -146.314, 1.24", "97.5924, -267.163, -147.394, 0.31", "97.6226, -268.992, -147.69, 0.62", "97.7429, -275.542, -148.107, 0.31", "97.8847, -278.583, -148.087, 0.62", "98.2839, -283.257, -147.756, 0.31", "98.6484, -286.02, -147.475, 0.62", "98.9828, -288.053, -147.279, 0.62", "99.5533, -291.417, -147.225, 0.31", "100.0, -294.129, -147.473, 0.31", "100.212, -296.099, -147.776, 0.62", "100.574, -300.684, -148.595, 0.31", "100.636, -301.628, -148.797, 0.93", "100.784, -305.18, -149.693, 0.31", "100.664, -306.787, -150.213, 0.62", "99.3193, -311.263, -151.974, 0.31" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "81.9184, -136.932, -80.8993, 0.62", "85.0587, -140.298, -86.4498, 0.62", "86.4577, -141.919, -89.0296, 0.62", "87.3654, -143.111, -90.6965, 0.62", "89.1587, -145.793, -94.0847, 0.93", "90.1231, -147.282, -95.8725, 0.62", "91.7262, -149.81, -98.855, 0.31", "92.3148, -150.811, -99.9046, 0.62", "93.4231, -152.557, -101.766, 0.62", "94.0165, -153.366, -102.608, 0.62", "96.0317, -155.945, -104.986, 0.62", "97.6034, -157.741, -106.69, 0.62", "98.7189, -158.979, -108.085, 1.24", "100.691, -161.058, -110.602, 1.24", "104.185, -164.533, -115.116, 0.62", "105.527, -165.839, -116.853, 0.62", "107.26, -167.602, -119.185, 0.93", "111.793, -172.294, -125.597, 1.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-43.177, -81.5172, 18.8418, 0.62", "-46.9978, -85.6587, 15.2863, 0.62", "-49.0083, -87.8378, 13.4155, 0.62", "-54.1979, -94.2495, 7.76229, 0.62", "-59.3851, -101.372, 3.03271, 0.62", "-63.6607, -107.999, -3.11599, 0.62", "-66.9268, -114.418, -10.0534, 0.62", "-69.2881, -120.417, -17.6976, 0.62", "-70.7667, -127.136, -24.9546, 0.62" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-43.177, -81.5172, 18.8418, 0.93", "-45.5176, -84.5154, 17.1192, 0.93", "-46.7615, -85.9794, 16.3187, 0.31", "-47.3118, -86.631, 16.0204, 0.62", "-48.8612, -88.4655, 15.1806, 0.31", "-50.8922, -90.8701, 14.0798, 0.62", "-54.5915, -95.2501, 12.0747, 0.62", "-57.3318, -98.695, 10.31, 0.62", "-60.2115, -102.085, 8.48016, 0.62", "-65.0797, -110.276, 5.44588, 0.62", "-71.204, -116.943, 1.19807, 0.62", "-77.8363, -124.254, -0.402229, 0.62", "-85.1825, -130.907, -1.73498, 0.62", "-92.3046, -137.781, -3.15734, 0.62", "-100.349, -143.57, -4.48909, 0.62", "-109.088, -147.888, -6.72074, 0.62", "-117.603, -151.086, -10.8765, 0.62", "-125.159, -155.432, -15.7771, 0.62", "-132.627, -158.528, -21.6633, 0.62", "-140.015, -161.117, -27.8853, 0.62" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "2.94914, -44.0426, -2.07535, 0.93", "4.03864, -46.6606, 3.82393, 0.93", "4.40957, -47.552, 5.83242, 0.93" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "2.94914, -44.0426, -2.07535, 0.93", "2.95781, -47.3619, -4.41666, 0.93", "2.78257, -51.6837, -7.45248, 1.24", "2.56754, -55.5887, -9.96317, 1.24", "2.32503, -58.4651, -11.6342, 0.93", "2.04378, -60.991, -12.9812, 0.93", "1.65964, -64.2337, -14.5844, 1.24", "1.16718, -68.1545, -16.324, 0.93", "0.633258, -71.3639, -17.502, 0.93", "0.166018, -74.3326, -18.2229, 0.93", "-0.108053, -76.2606, -18.5392, 0.93", "-0.493965, -78.7553, -18.8088, 0.93", "-0.846754, -81.5842, -18.9202, 0.93", "-1.00464, -83.6446, -19.0414, 1.24", "-1.09291, -85.515, -19.2064, 1.24", "-1.14082, -87.7515, -19.437, 0.93", "-1.12046, -90.9103, -19.7575, 0.93", "-1.07972, -93.9813, -20.0476, 1.24", "-0.976329, -98.4104, -20.4558, 0.93", "-0.909269, -101.558, -20.7278, 0.93", "-0.85535, -105.749, -21.0582, 0.93", "-0.804128, -112.213, -21.5018, 0.93", "-0.753949, -116.318, -21.7445, 1.24", "-0.753044, -118.5, -21.8292, 0.93", "-0.770957, -120.737, -21.8209, 1.24", "-0.800598, -122.986, -21.8304, 0.93", "-0.865699, -125.339, -21.8437, 1.24" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "111.793, -172.294, -125.597, 0.31", "113.552, -172.915, -125.586, 0.31", "115.609, -173.645, -125.576, 0.31", "116.451, -173.871, -125.626, 0.62", "118.297, -174.238, -125.807, 0.31", "119.201, -174.417, -125.896, 0.62", "122.319, -175.037, -126.201, 0.31", "122.627, -175.098, -126.239, 0.62", "125.668, -175.488, -126.699, 0.31", "126.968, -175.597, -126.929, 0.62" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "111.793, -172.294, -125.597, 0.62", "113.228, -174.926, -128.33, 0.62", "113.585, -175.564, -128.996, 0.93", "115.795, -179.357, -133.639, 0.62", "116.721, -180.939, -135.586, 0.93", "118.774, -184.021, -139.495, 0.62", "120.771, -186.828, -143.073, 0.62", "121.68, -187.957, -144.714, 0.62", "124.533, -191.565, -150.296, 0.62", "125.526, -192.828, -152.273, 0.93", "128.535, -197.246, -158.791, 0.31", "128.809, -197.736, -159.46, 0.62", "130.599, -201.739, -164.186, 0.62", "132.453, -206.781, -169.83, 0.62", "132.906, -208.328, -171.401, 0.62", "133.529, -211.403, -174.337, 0.31", "133.863, -214.551, -176.994, 0.93", "134.236, -219.217, -180.655, 0.93", "134.534, -224.446, -184.235, 0.31", "134.586, -225.275, -184.802, 0.62", "134.733, -228.173, -186.941, 0.31", "134.779, -228.909, -187.52, 0.62", "135.021, -233.68, -191.145, 0.31", "135.025, -234.666, -191.949, 0.31", "134.88, -237.89, -194.206, 0.31", "134.857, -238.431, -194.628, 0.62" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "4.40957, -47.552, 5.83242, 0.93", "6.52688, -48.7428, 7.0304, 0.93", "8.74018, -50.1098, 8.30058, 0.93", "10.2395, -51.0841, 9.1374, 0.93", "14.6197, -54.1744, 12.0079, 0.93", "16.8074, -55.744, 13.4946, 0.93", "18.6381, -57.1317, 14.7789, 0.93", "20.0399, -58.2836, 15.841, 0.93", "21.7061, -59.947, 17.1385, 0.93", "24.3462, -63.1376, 19.0375, 0.62", "25.4774, -64.767, 19.6529, 0.62", "26.269, -66.027, 20.0613, 0.62", "27.3349, -67.929, 20.5171, 0.62", "29.67, -72.2372, 21.3899, 0.62", "30.8843, -74.5891, 21.7605, 0.62", "32.9565, -78.6611, 22.1744, 0.62", "35.0624, -82.9341, 22.6386, 0.93", "37.7299, -88.1201, 23.2562, 0.62", "45.0702, -94.7004, 24.9354, 0.62", "53.7048, -99.6352, 25.98, 0.62", "62.2492, -104.532, 27.7189, 0.62", "71.3371, -108.574, 28.7505, 0.62", "80.805, -111.084, 30.7663, 0.62", "89.8804, -113.099, 34.4504, 0.62", "98.8866, -113.341, 38.7899, 0.62", "107.212, -112.077, 44.1828, 0.62", "114.998, -112.151, 50.4576, 0.62", "122.904, -113.825, 56.3473, 0.62", "130.46, -116.339, 62.3966, 0.62", "138.197, -120.318, 67.3265, 0.62", "145.594, -124.138, 72.8676, 0.62", "152.239, -127.856, 79.3495, 0.62" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "4.40957, -47.552, 5.83242, 0.93", "5.32187, -48.2104, 8.83777, 0.93", "5.84544, -48.5416, 10.2937, 0.93", "7.71135, -49.722, 15.4823, 0.93", "9.01646, -50.5476, 19.1115, 0.93", "10.976, -51.7872, 24.5604, 0.93", "11.8797, -52.3589, 27.0733, 0.93", "13.2688, -53.0782, 30.8505, 0.62", "15.9659, -54.1191, 40.4235, 0.62", "17.7234, -56.6003, 49.95, 0.62", "18.9174, -59.7842, 59.3541, 0.62", "18.6412, -62.7154, 68.9109, 0.62", "20.1876, -65.0244, 78.517, 0.62", "21.3057, -68.4485, 87.8457, 0.62", "21.3899, -72.6756, 96.908, 0.62", "22.4727, -77.4791, 105.612, 0.62", "25.0006, -83.3151, 113.329, 0.62", "26.5083, -88.0463, 122.009, 0.62", "29.5477, -91.7797, 130.774, 0.62", "31.4791, -96.2506, 139.508, 0.62", "32.1582, -100.436, 148.564, 0.62", "33.8954, -106.563, 156.274, 0.62", "34.6006, -112.397, 164.366, 0.62", "33.2355, -117.898, 172.604, 0.62" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-0.865699, -125.339, -21.8437, 0.93", "-3.23137, -126.664, -22.5484, 0.93", "-7.75855, -129.231, -24.3314, 0.93", "-11.7482, -131.371, -26.0302, 0.93", "-15.441, -133.249, -27.5537, 0.93", "-18.1124, -134.559, -28.6718, 0.93", "-20.0004, -135.469, -29.4751, 0.93", "-23.5173, -137.139, -31.09, 0.62", "-25.2579, -137.917, -31.9063, 0.62", "-29.8428, -139.868, -34.0804, 0.93", "-33.6367, -141.476, -35.7595, 0.93", "-37.5624, -143.179, -37.4306, 0.93", "-42.7704, -145.576, -39.773, 0.93", "-44.5876, -146.455, -40.5929, 0.93", "-48.7999, -148.605, -42.5411, 0.93", "-51.5524, -150.099, -43.8957, 0.93", "-55.8589, -152.469, -45.849, 0.93", "-60.0128, -154.77, -47.5018, 0.93", "-62.9317, -156.442, -48.4868, 0.62", "-66.059, -158.278, -49.4331, 0.62", "-70.0686, -160.631, -50.4058, 0.62", "-73.2399, -162.455, -51.0628, 0.62", "-78.0573, -165.026, -51.7545, 0.62", "-81.0286, -166.529, -52.139, 0.31", "-83.4562, -167.729, -52.4895, 0.62", "-85.4126, -168.696, -52.774, 0.31", "-87.3813, -169.613, -53.044, 0.62", "-89.2954, -170.57, -53.5324, 0.31", "-92.5663, -172.027, -54.6134, 0.93" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-0.865699, -125.339, -21.8437, 0.93", "-0.54347, -128.225, -21.8294, 0.93", "-0.203824, -131.643, -21.8042, 0.93", "0.156773, -136.519, -21.8183, 0.93", "0.273058, -138.579, -22.1087, 0.93", "0.432012, -142.073, -22.7704, 0.93", "0.48327, -145.461, -23.5543, 0.93", "0.442234, -151.434, -25.2097, 0.93", "0.373863, -154.118, -26.0456, 0.93", "-0.170267, -163.173, -28.948, 0.93", "-0.48069, -168.261, -30.5462, 0.93", "-0.778555, -173.271, -32.0498, 0.93", "-0.941039, -175.529, -32.6702, 0.93", "-1.39771, -182.037, -34.2111, 0.93", "-1.76814, -188.425, -35.4596, 0.93", "-1.89516, -191.174, -35.8558, 0.93", "-2.03485, -195.471, -36.5568, 0.93", "-2.04719, -198.813, -37.1315, 0.93", "-2.03144, -203.402, -38.0394, 0.93", "-1.90127, -207.892, -39.0046, 0.93", "-1.73118, -210.817, -39.7487, 0.93", "-1.60487, -213.358, -40.478, 0.93", "-1.35376, -219.057, -42.3673, 0.93", "-1.26287, -221.79, -43.3771, 1.24" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-92.5663, -172.027, -54.6134, 0.62", "-94.6262, -171.755, -56.0549, 0.62", "-96.1621, -171.506, -57.4307, 0.62", "-99.3436, -170.99, -60.2806, 0.31", "-101.95, -170.568, -62.6151, 0.62", "-104.254, -170.194, -64.6784, 0.31", "-107.83, -169.615, -67.8824, 0.62", "-111.741, -168.846, -71.8858, 0.62" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-92.5663, -172.027, -54.6134, 0.62", "-96.9383, -174.957, -55.6627, 0.62", "-102.987, -179.26, -57.4369, 0.62", "-107.195, -182.354, -58.7572, 0.62", "-110.864, -185.101, -59.9423, 0.62", "-117.954, -190.401, -62.263, 0.31", "-123.342, -194.514, -64.0989, 0.31", "-125.059, -195.853, -64.7792, 0.62", "-127.082, -197.503, -65.7391, 0.62", "-128.778, -198.936, -66.6182, 0.31", "-130.54, -200.468, -67.7091, 0.62", "-134.164, -203.742, -70.1463, 0.31", "-135.343, -204.782, -70.9628, 0.62", "-137.811, -206.901, -72.8619, 0.31", "-139.6, -208.496, -74.367, 0.62", "-144.483, -212.842, -78.5748, 0.31", "-145.969, -214.134, -79.8692, 0.62", "-147.124, -215.12, -80.8593, 0.62", "-150.178, -217.836, -83.0216, 0.31", "-152.256, -219.77, -84.288, 0.62", "-154.741, -222.147, -85.5755, 0.31", "-156.455, -223.755, -86.2569, 0.62", "-158.212, -225.444, -87.0247, 0.62", "-165.449, -232.352, -90.1971, 0.31", "-166.883, -233.694, -90.7514, 0.62", "-169.43, -235.968, -91.6742, 0.31", "-170.873, -237.207, -92.1538, 0.62", "-174.632, -240.243, -93.2567, 0.31", "-176.858, -241.935, -93.8637, 0.31", "-182.077, -245.72, -95.1895, 0.62", "-185.019, -247.847, -95.7595, 0.31", "-186.518, -248.932, -95.9732, 0.62", "-188.885, -250.665, -96.1922, 0.31", "-190.392, -251.789, -96.2222, 0.31", "-192.727, -253.628, -96.3667, 0.62", "-195.275, -255.797, -96.667, 0.31", "-196.284, -256.606, -96.8482, 0.93", "-198.067, -258.117, -97.1947, 0.31", "-198.927, -258.823, -97.3504, 0.62", "-202.308, -261.489, -97.9991, 0.31", "-204.189, -263.004, -98.3664, 0.62", "-208.9, -266.923, -99.3133, 0.31", "-216.017, -272.945, -100.691, 0.31", "-220.657, -276.939, -101.554, 0.62", "-225.107, -280.931, -102.309, 0.62", "-227.777, -283.499, -102.695, 0.31", "-229.17, -284.926, -102.877, 0.62", "-230.677, -286.73, -103.043, 0.31", "-231.338, -287.637, -103.118, 0.62", "-233.616, -291.461, -103.296, 0.31", "-235.068, -294.199, -103.309, 0.31", "-236.175, -296.331, -103.31, 0.93", "-237.967, -299.619, -103.285, 0.31", "-239.588, -302.534, -103.153, 0.62", "-240.591, -304.235, -103.012, 0.62", "-242.024, -306.419, -102.719, 0.93", "-244.053, -309.269, -102.248, 0.31", "-245.787, -311.428, -101.711, 0.93", "-248.122, -313.865, -100.881, 0.31", "-249.23, -314.899, -100.462, 0.62", "-250.852, -316.373, -99.8186, 0.62", "-253.828, -319.038, -98.5599, 0.62", "-257.175, -321.937, -97.1179, 0.31", "-259.454, -323.933, -96.1542, 0.31", "-260.792, -325.048, -95.6524, 0.93", "-262.857, -326.778, -94.8421, 0.31", "-264.196, -327.944, -94.2741, 0.62" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-1.26287, -221.79, -43.3771, 0.62", "1.22359, -225.289, -45.3038, 0.62", "3.76836, -228.744, -47.359, 0.31", "4.58928, -229.859, -48.0398, 0.62", "6.73737, -232.789, -49.8717, 0.31", "8.72215, -235.547, -51.563, 0.31", "10.4814, -238.091, -53.0449, 0.31", "12.2744, -240.935, -54.6456, 0.31", "13.0209, -242.333, -55.2992, 0.31", "13.7572, -244.058, -56.0079, 0.93", "14.483, -246.365, -56.9012, 0.62", "14.8463, -248.592, -57.9174, 0.62", "14.9234, -250.472, -58.8449, 0.62", "14.882, -253.082, -60.1895, 0.31", "14.7515, -256.454, -61.9991, 0.31", "14.6276, -259.654, -63.6597, 0.62", "14.4593, -265.233, -66.3385, 0.31", "14.4117, -267.018, -67.1422, 0.62", "14.4238, -269.49, -68.1207, 0.31", "14.5115, -273.071, -69.3462, 0.62", "14.7404, -277.848, -70.5409, 0.31", "15.0663, -282.812, -71.2828, 0.31", "15.2504, -284.363, -71.3839, 0.62", "15.8038, -288.14, -71.5318, 0.31", "16.0564, -289.669, -71.5648, 0.62", "17.1267, -294.817, -71.6462, 0.31", "17.5119, -296.339, -71.6692, 0.62", "19.7149, -303.425, -71.7894, 0.31", "20.6532, -306.04, -71.8338, 0.31", "21.3449, -307.762, -71.8647, 0.62", "22.481, -310.19, -71.9067, 0.31", "22.9371, -311.065, -71.9213, 0.62", "24.944, -314.674, -71.9892, 0.31", "25.7446, -316.002, -72.0201, 0.62", "27.042, -317.954, -72.0638, 0.31", "27.6879, -318.884, -72.0786, 0.62" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-1.26287, -221.79, -43.3771, 0.93", "-2.69545, -225.162, -46.2853, 0.93", "-4.19216, -229.337, -49.2778, 0.93", "-4.97871, -231.531, -50.6559, 0.93", "-6.4915, -236.049, -53.1169, 0.93", "-7.80315, -240.029, -55.0542, 0.62", "-9.07239, -244.2, -56.8769, 0.62", "-10.1124, -248.295, -58.2625, 0.62", "-10.8132, -251.664, -59.1844, 0.62", "-11.5068, -255.913, -60.2074, 0.62", "-11.8499, -259.404, -60.9042, 0.62", "-12.1082, -263.33, -61.7719, 0.62", "-12.1333, -265.364, -62.238, 0.62", "-12.0338, -268.559, -62.9583, 0.93", "-11.7522, -271.856, -63.7064, 0.62", "-11.507, -273.979, -64.152, 0.93", "-10.9172, -278.121, -64.9308, 0.62", "-10.2453, -283.563, -65.7952, 0.31", "-9.91373, -286.787, -66.183, 0.31", "-9.77978, -288.69, -66.351, 0.62", "-9.60762, -292.728, -66.5911, 0.31", "-9.58975, -293.419, -66.6051, 0.62", "-9.59389, -296.6, -66.5633, 0.31", "-9.69386, -299.142, -66.5448, 0.93", "-10.0017, -302.772, -66.5379, 0.62", "-10.5954, -307.929, -66.5277, 0.31", "-11.0972, -311.664, -66.7685, 0.62", "-11.4265, -314.604, -67.1144, 0.62", "-11.8952, -319.173, -67.7439, 0.31", "-12.1619, -321.797, -68.1785, 0.31", "-12.282, -323.066, -68.4516, 0.62", "-12.7752, -328.671, -70.3272, 0.62", "-12.9778, -331.244, -71.5889, 0.31" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_44", "dend_37", "dend_32", "dend_27", "dend_0", "dend_50", "dend_45", "dend_39", "dend_38", "dend_36", "dend_33", "dend_31", "dend_28", "dend_24", "dend_1", "dend_49", "dend_46", "dend_43", "dend_40", "dend_35", "dend_34", "dend_30", "dend_29", "dend_26", "dend_25", "dend_17", "dend_2", "dend_48", "dend_47", "dend_42", "dend_41", "dend_23", "dend_18", "dend_14", "dend_3", "dend_22", "dend_19", "dend_16", "dend_15", "dend_11", "dend_4", "dend_21", "dend_20", "dend_13", "dend_12", "dend_8", "dend_5", "dend_10", "dend_9", "dend_7", "dend_6" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_44", "dend_37", "dend_32", "dend_27", "dend_0", "dend_50", "dend_45", "dend_39", "dend_38", "dend_36", "dend_33", "dend_31", "dend_28", "dend_24", "dend_1", "dend_49", "dend_46", "dend_43", "dend_40", "dend_35", "dend_34", "dend_30", "dend_29", "dend_26", "dend_25", "dend_17", "dend_2", "dend_48", "dend_47", "dend_42", "dend_41", "dend_23", "dend_18", "dend_14", "dend_3", "dend_22", "dend_19", "dend_16", "dend_15", "dend_11", "dend_4", "dend_21", "dend_20", "dend_13", "dend_12", "dend_8", "dend_5", "dend_10", "dend_9", "dend_7", "dend_6" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_44", "dend_37", "dend_32", "dend_27", "dend_0", "axon_0", "dend_50", "dend_45", "dend_39", "dend_38", "dend_36", "dend_33", "dend_31", "dend_28", "dend_24", "dend_1", "axon_1", "dend_49", "dend_46", "dend_43", "dend_40", "dend_35", "dend_34", "dend_30", "dend_29", "dend_26", "dend_25", "dend_17", "dend_2", "dend_48", "dend_47", "dend_42", "dend_41", "dend_23", "dend_18", "dend_14", "dend_3", "dend_22", "dend_19", "dend_16", "dend_15", "dend_11", "dend_4", "dend_21", "dend_20", "dend_13", "dend_12", "dend_8", "dend_5", "dend_10", "dend_9", "dend_7", "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_44", "dend_44", "dend_44", "dend_44", "dend_37", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_2", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_3", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_11", "dend_11", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.43567E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cIR216_L6_MC_dc1f55aab0_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_37, id: dend_37, parent: soma_0
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_50, id: dend_50, parent: dend_44
create dend_50
public dend_50
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_32
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_24, id: dend_24, parent: dend_0
create dend_24
public dend_24
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_49, id: dend_49, parent: dend_45
create dend_49
public dend_49
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_17, id: dend_17, parent: dend_1
create dend_17
public dend_17
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_14, id: dend_14, parent: dend_2
create dend_14
public dend_14
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_22, id: dend_22, parent: dend_18
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_11, id: dend_11, parent: dend_3
create dend_11
public dend_11
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_8, id: dend_8, parent: dend_4
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_44, dend_37, dend_32, dend_27, dend_0, dend_50, dend_45, dend_39, dend_38, dend_36, dend_33, dend_31, dend_28, dend_24, dend_1, dend_49, dend_46, dend_43, dend_40, dend_35, dend_34, dend_30, dend_29, dend_26, dend_25, dend_17, dend_2, dend_48, dend_47, dend_42, dend_41, dend_23, dend_18, dend_14, dend_3, dend_22, dend_19, dend_16, dend_15, dend_11, dend_4, dend_21, dend_20, dend_13, dend_12, dend_8, dend_5, dend_10, dend_9, dend_7, dend_6]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_44, dend_37, dend_32, dend_27, dend_0, dend_50, dend_45, dend_39, dend_38, dend_36, dend_33, dend_31, dend_28, dend_24, dend_1, dend_49, dend_46, dend_43, dend_40, dend_35, dend_34, dend_30, dend_29, dend_26, dend_25, dend_17, dend_2, dend_48, dend_47, dend_42, dend_41, dend_23, dend_18, dend_14, dend_3, dend_22, dend_19, dend_16, dend_15, dend_11, dend_4, dend_21, dend_20, dend_13, dend_12, dend_8, dend_5, dend_10, dend_9, dend_7, dend_6]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_44, dend_37, dend_32, dend_27, dend_0, axon_0, dend_50, dend_45, dend_39, dend_38, dend_36, dend_33, dend_31, dend_28, dend_24, dend_1, axon_1, dend_49, dend_46, dend_43, dend_40, dend_35, dend_34, dend_30, dend_29, dend_26, dend_25, dend_17, dend_2, dend_48, dend_47, dend_42, dend_41, dend_23, dend_18, dend_14, dend_3, dend_22, dend_19, dend_16, dend_15, dend_11, dend_4, dend_21, dend_20, dend_13, dend_12, dend_8, dend_5, dend_10, dend_9, dend_7, dend_6]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_45
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_44, dend_44, dend_44, dend_44, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_1, dend_1, dend_1, axon_1, axon_1, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_3, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_44(0), soma_0(0.49999926374436926)
    connect dend_37(0), soma_0(0.49999926374436926)
    connect dend_32(0), soma_0(0.49999926374436926)
    connect dend_27(0), soma_0(0.49999926374436926)
    connect dend_0(0), soma_0(0.49999926374436926)
    connect axon_0(0), soma_0(1.0)
    connect dend_50(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_24(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_49(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_17(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_14(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_22(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_11(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_8(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.71807, 7.46707, -0.239219, 3.11955 ) }
    soma_0 { pt3dadd( -1.47665, 6.49176, -0.211241, 4.96485 ) }
    soma_0 { pt3dadd( -1.23523, 5.51645, -0.183263, 8.86546 ) }
    soma_0 { pt3dadd( -0.993808, 4.54115, -0.155286, 11.5665 ) }
    soma_0 { pt3dadd( -0.752387, 3.56584, -0.127308, 12.2473 ) }
    soma_0 { pt3dadd( -0.510965, 2.59053, -0.0993297, 12.0797 ) }
    soma_0 { pt3dadd( -0.269543, 1.61523, -0.0713518, 11.9263 ) }
    soma_0 { pt3dadd( -0.0281214, 0.639918, -0.0433739, 11.7729 ) }
    soma_0 { pt3dadd( 0.2133, -0.335389, -0.015396, 11.5513 ) }
    soma_0 { pt3dadd( 0.454722, -1.3107, 0.0125819, 11.1274 ) }
    soma_0 { pt3dadd( 0.696144, -2.286, 0.0405598, 10.6073 ) }
    soma_0 { pt3dadd( 0.937566, -3.26131, 0.0685377, 10.0873 ) }
    soma_0 { pt3dadd( 1.17899, -4.23662, 0.0965156, 9.54598 ) }
    soma_0 { pt3dadd( 1.42041, -5.21192, 0.124494, 8.95742 ) }
    soma_0 { pt3dadd( 1.66183, -6.18723, 0.152471, 8.27166 ) }
    soma_0 { pt3dadd( 1.90325, -7.16254, 0.180449, 7.57184 ) }
    soma_0 { pt3dadd( 2.14467, -8.13784, 0.208427, 6.87201 ) }
    soma_0 { pt3dadd( 2.3861, -9.11315, 0.236405, 6.12549 ) }
    soma_0 { pt3dadd( 2.62752, -10.0885, 0.264383, 5.153 ) }
    soma_0 { pt3dadd( 2.86894, -11.0638, 0.292361, 4.18051 ) }
    soma_0 { pt3dadd( 3.11036, -12.0391, 0.320339, 2.46024 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 21/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -0.609396, 6.0721, -8.22409, 1.24 ) }
    dend_44 { pt3dadd( -1.3326, 7.33628, -8.83454, 1.24 ) }
    dend_44 { pt3dadd( -2.09433, 8.6678, -9.47752, 1.24 ) }
    dend_44 { pt3dadd( -3.44828, 11.0345, -10.6204, 1.24 ) }
    dend_44 { pt3dadd( -5.2583, 14.1984, -12.1482, 1.24 ) }
    // Section: dend_37, id: dend_37, parent: soma_0 (entry count 26/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 5.6806, 2.94211, 2.77591, 0.93 ) }
    dend_37 { pt3dadd( 6.62157, 4.69627, 2.77591, 0.93 ) }
    dend_37 { pt3dadd( 7.67994, 6.66927, 2.77591, 0.93 ) }
    dend_37 { pt3dadd( 10.6838, 12.2689, 2.77591, 0.93 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 30/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 4.9206, 5.29211, 1.74591, 1.24 ) }
    dend_32 { pt3dadd( 6.304, 8.03628, 0.551995, 1.24 ) }
    dend_32 { pt3dadd( 7.11083, 9.63674, -0.144321, 1.24 ) }
    dend_32 { pt3dadd( 8.47723, 12.3471, -1.32355, 1.24 ) }
    dend_32 { pt3dadd( 9.57416, 14.5231, -2.27024, 1.24 ) }
    dend_32 { pt3dadd( 10.4459, 16.2523, -3.02259, 1.24 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 36/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -6.4794, 0.862105, 0.615908, 1.24 ) }
    dend_27 { pt3dadd( -7.75517, 1.43907, 1.51018, 1.24 ) }
    dend_27 { pt3dadd( -10.3285, 2.58173, 3.30987, 1.24 ) }
    dend_27 { pt3dadd( -13.601, 4.03479, 5.59843, 1.24 ) }
    dend_27 { pt3dadd( -16.2101, 5.1933, 7.42309, 1.24 ) }
    dend_27 { pt3dadd( -18.7229, 6.30904, 9.1804, 0.93 ) }
    dend_27 { pt3dadd( -23.6304, 8.48811, 12.6124, 0.93 ) }
    dend_27 { pt3dadd( -25.323, 9.1282, 13.8263, 0.93 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 44/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.5006, -12.7979, 0.445908, 2.8 ) }
    dend_0 { pt3dadd( 2.75514, -14.9272, 0.682442, 2.8 ) }
    dend_0 { pt3dadd( 3.08209, -17.6621, 0.986268, 2.8 ) }
    dend_0 { pt3dadd( 3.83913, -23.9949, 1.68976, 2.48 ) }
    dend_0 { pt3dadd( 4.38484, -28.5599, 2.19688, 2.8 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 49/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 3.11036, -12.0391, 0.320339, 0.93 ) }
    axon_0 { pt3dadd( 6.71458, -26.5996, 0.320339, 0.93 ) }
    axon_0 { pt3dadd( 10.3188, -41.1602, 0.320339, 0.93 ) }
    // Section: dend_50, id: dend_50, parent: dend_44 (entry count 52/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -5.2583, 14.1984, -12.1482, 0.62 ) }
    dend_50 { pt3dadd( -9.56798, 14.176, -18.0171, 0.62 ) }
    dend_50 { pt3dadd( -10.3659, 14.0783, -19.3416, 0.62 ) }
    dend_50 { pt3dadd( -11.2828, 13.9545, -21.0687, 0.93 ) }
    dend_50 { pt3dadd( -14.1233, 13.3079, -26.788, 0.93 ) }
    dend_50 { pt3dadd( -14.519, 13.1806, -27.6304, 0.93 ) }
    dend_50 { pt3dadd( -16.5149, 12.3881, -32.1245, 0.93 ) }
    dend_50 { pt3dadd( -18.657, 11.2926, -37.0937, 0.93 ) }
    dend_50 { pt3dadd( -20.7005, 10.2761, -41.8325, 0.93 ) }
    dend_50 { pt3dadd( -21.7325, 9.77364, -44.0862, 0.93 ) }
    dend_50 { pt3dadd( -24.5579, 8.40238, -49.883, 0.93 ) }
    dend_50 { pt3dadd( -28.2344, 6.85553, -56.549, 0.31 ) }
    dend_50 { pt3dadd( -28.773, 6.63693, -57.3976, 0.62 ) }
    dend_50 { pt3dadd( -34.1434, 4.51758, -64.5994, 0.31 ) }
    dend_50 { pt3dadd( -36.6326, 3.52404, -67.5167, 0.62 ) }
    dend_50 { pt3dadd( -43.1848, 1.02729, -74.459, 0.31 ) }
    dend_50 { pt3dadd( -45.8634, -0.0394975, -77.0024, 0.62 ) }
    dend_50 { pt3dadd( -48.4668, -1.17125, -79.2232, 0.31 ) }
    dend_50 { pt3dadd( -50.67, -2.24619, -81.0991, 0.93 ) }
    dend_50 { pt3dadd( -52.6398, -3.38551, -82.7742, 0.31 ) }
    dend_50 { pt3dadd( -53.9214, -4.09507, -84.054, 0.62 ) }
    dend_50 { pt3dadd( -56.5594, -5.48875, -86.9528, 0.31 ) }
    dend_50 { pt3dadd( -57.9642, -6.20405, -88.5581, 0.62 ) }
    dend_50 { pt3dadd( -61.478, -7.62874, -92.583, 0.31 ) }
    dend_50 { pt3dadd( -63.467, -8.26843, -94.7428, 0.62 ) }
    dend_50 { pt3dadd( -69.233, -9.75435, -100.708, 0.31 ) }
    dend_50 { pt3dadd( -70.5313, -10.0259, -101.896, 0.31 ) }
    dend_50 { pt3dadd( -75.9411, -10.957, -106.266, 0.93 ) }
    dend_50 { pt3dadd( -80.1767, -11.4963, -109.645, 0.31 ) }
    dend_50 { pt3dadd( -81.663, -11.6478, -110.818, 0.62 ) }
    dend_50 { pt3dadd( -86.4464, -12.199, -115.731, 0.31 ) }
    dend_50 { pt3dadd( -87.7383, -12.3862, -117.204, 0.31 ) }
    dend_50 { pt3dadd( -88.581, -12.4927, -118.188, 0.93 ) }
    dend_50 { pt3dadd( -91.8026, -12.8482, -122.302, 0.31 ) }
    dend_50 { pt3dadd( -93.8998, -13.115, -124.808, 0.62 ) }
    dend_50 { pt3dadd( -101.429, -14.0196, -133.38, 0.31 ) }
    dend_50 { pt3dadd( -105.179, -14.363, -137.226, 0.62 ) }
    dend_50 { pt3dadd( -108.098, -14.4999, -140.026, 0.31 ) }
    dend_50 { pt3dadd( -112.261, -14.4848, -143.573, 0.93 ) }
    dend_50 { pt3dadd( -116.672, -14.23, -146.396, 0.31 ) }
    dend_50 { pt3dadd( -117.904, -14.0824, -146.987, 0.62 ) }
    dend_50 { pt3dadd( -120.009, -13.7626, -147.722, 0.62 ) }
    dend_50 { pt3dadd( -121.659, -13.5082, -148.431, 0.93 ) }
    dend_50 { pt3dadd( -123.45, -13.2718, -149.148, 0.31 ) }
    dend_50 { pt3dadd( -126.643, -13.0025, -150.091, 0.31 ) }
    dend_50 { pt3dadd( -127.429, -12.9654, -150.32, 0.62 ) }
    dend_50 { pt3dadd( -132.316, -12.9405, -151.786, 0.31 ) }
    dend_50 { pt3dadd( -133.092, -12.987, -152.032, 0.62 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_50 { pt3dadd( -135.215, -13.2616, -152.733, 0.31 ) }
    dend_50 { pt3dadd( -139.011, -14.0042, -154.044, 1.24 ) }
    dend_50 { pt3dadd( -141.388, -14.5725, -154.903, 0.62 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 3/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -5.2583, 14.1984, -12.1482, 0.93 ) }
    dend_45 { pt3dadd( -6.11987, 18.0239, -15.4902, 0.93 ) }
    dend_45 { pt3dadd( -6.7829, 20.1998, -17.2041, 0.93 ) }
    dend_45 { pt3dadd( -7.48415, 22.2222, -18.7948, 0.93 ) }
    dend_45 { pt3dadd( -9.05296, 26.7466, -22.3534, 0.93 ) }
    dend_45 { pt3dadd( -10.0478, 29.6157, -24.6102, 0.93 ) }
    dend_45 { pt3dadd( -10.7041, 31.5086, -26.099, 0.93 ) }
    dend_45 { pt3dadd( -11.9821, 34.8165, -28.4714, 0.93 ) }
    dend_45 { pt3dadd( -12.9789, 37.2378, -30.2942, 0.93 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 12/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 10.6838, 12.2689, 2.77591, 0.62 ) }
    dend_39 { pt3dadd( 12.1438, 12.8689, 5.63591, 0.62 ) }
    dend_39 { pt3dadd( 16.9714, 15.731, 13.9125, 0.62 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 15/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 10.6838, 12.2689, 2.77591, 0.93 ) }
    dend_38 { pt3dadd( 13.5062, 17.8373, 5.04055, 0.93 ) }
    dend_38 { pt3dadd( 16.454, 22.7851, 7.0355, 0.93 ) }
    dend_38 { pt3dadd( 18.8922, 26.4029, 8.50152, 0.93 ) }
    dend_38 { pt3dadd( 20.5446, 28.5327, 9.42379, 0.62 ) }
    dend_38 { pt3dadd( 23.1934, 31.6046, 10.8362, 0.62 ) }
    dend_38 { pt3dadd( 25.9861, 34.497, 12.2448, 0.62 ) }
    dend_38 { pt3dadd( 28.5945, 36.4667, 13.2015, 0.62 ) }
    dend_38 { pt3dadd( 30.592, 37.4975, 13.8649, 0.62 ) }
    dend_38 { pt3dadd( 33.4946, 38.5929, 14.7469, 0.62 ) }
    dend_38 { pt3dadd( 35.4623, 39.1484, 15.3699, 0.62 ) }
    dend_38 { pt3dadd( 38.165, 39.629, 16.2518, 0.62 ) }
    dend_38 { pt3dadd( 41.3259, 39.9748, 17.2738, 0.62 ) }
    dend_38 { pt3dadd( 45.3425, 40.3463, 18.4953, 0.31 ) }
    dend_38 { pt3dadd( 46.6757, 40.4262, 18.8804, 0.62 ) }
    dend_38 { pt3dadd( 53.1214, 46.5456, 23.4636, 0.62 ) }
    dend_38 { pt3dadd( 61.2646, 51.3708, 26.6894, 0.62 ) }
    dend_38 { pt3dadd( 69.0748, 55.9988, 30.8825, 0.62 ) }
    dend_38 { pt3dadd( 75.9261, 61.0298, 36.1502, 0.62 ) }
    dend_38 { pt3dadd( 82.9246, 67.1957, 39.7563, 0.62 ) }
    dend_38 { pt3dadd( 89.3042, 74.2132, 42.9272, 0.62 ) }
    dend_38 { pt3dadd( 95.7752, 80.8624, 46.6573, 0.62 ) }
    dend_38 { pt3dadd( 101.389, 87.7528, 51.2398, 0.62 ) }
    dend_38 { pt3dadd( 107.613, 94.1232, 55.7881, 0.62 ) }
    dend_38 { pt3dadd( 114.194, 100.982, 58.8926, 0.62 ) }
    dend_38 { pt3dadd( 121.012, 106.823, 63.297, 0.62 ) }
    dend_38 { pt3dadd( 128.35, 112.625, 66.8317, 0.62 ) }
    dend_38 { pt3dadd( 135.576, 118.61, 70.2909, 0.62 ) }
    dend_38 { pt3dadd( 143.475, 122.878, 74.6926, 0.62 ) }
    dend_38 { pt3dadd( 152.23, 126.989, 77.2351, 0.62 ) }
    // Section: dend_36, id: dend_36, parent: dend_32 (entry count 45/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 10.4459, 16.2523, -3.02259, 0.62 ) }
    dend_36 { pt3dadd( 14.5899, 17.3156, -6.36344, 0.62 ) }
    dend_36 { pt3dadd( 17.0873, 17.9595, -9.05837, 0.62 ) }
    dend_36 { pt3dadd( 18.761, 18.2188, -10.9698, 0.93 ) }
    dend_36 { pt3dadd( 20.6649, 18.3749, -13.4065, 0.62 ) }
    dend_36 { pt3dadd( 22.2271, 18.4285, -15.4983, 0.62 ) }
    dend_36 { pt3dadd( 24.0824, 18.4558, -18.139, 0.93 ) }
    dend_36 { pt3dadd( 26.7676, 18.4642, -22.57, 0.93 ) }
    dend_36 { pt3dadd( 28.18, 18.4997, -25.4639, 0.62 ) }
    dend_36 { pt3dadd( 30.6579, 18.6747, -31.1887, 0.31 ) }
    dend_36 { pt3dadd( 30.8932, 18.7023, -31.7517, 0.62 ) }
    dend_36 { pt3dadd( 32.5692, 19.0406, -35.5944, 0.62 ) }
    dend_36 { pt3dadd( 34.3527, 19.5068, -39.4459, 0.62 ) }
    dend_36 { pt3dadd( 36.1967, 20.1285, -43.276, 0.93 ) }
    dend_36 { pt3dadd( 38.5242, 21.1019, -47.9356, 0.31 ) }
    dend_36 { pt3dadd( 39.4189, 21.4606, -49.5835, 0.62 ) }
    dend_36 { pt3dadd( 41.5039, 22.2834, -53.3729, 0.31 ) }
    dend_36 { pt3dadd( 41.8424, 22.4093, -53.9572, 0.62 ) }
    dend_36 { pt3dadd( 43.9894, 23.1585, -57.3414, 0.31 ) }
    dend_36 { pt3dadd( 45.0772, 23.5598, -58.9442, 0.31 ) }
    dend_36 { pt3dadd( 46.9768, 24.3547, -61.772, 0.93 ) }
    dend_36 { pt3dadd( 52.486, 26.8292, -70.1344, 0.31 ) }
    dend_36 { pt3dadd( 52.8948, 27.0357, -70.7636, 0.62 ) }
    dend_36 { pt3dadd( 54.1818, 27.7213, -72.8666, 0.31 ) }
    dend_36 { pt3dadd( 54.5174, 27.9194, -73.4631, 0.93 ) }
    dend_36 { pt3dadd( 56.6265, 29.2033, -77.302, 0.31 ) }
    dend_36 { pt3dadd( 56.9169, 29.3889, -77.8194, 0.62 ) }
    dend_36 { pt3dadd( 58.7776, 30.5525, -80.8979, 0.31 ) }
    dend_36 { pt3dadd( 63.3987, 33.477, -88.5874, 0.31 ) }
    dend_36 { pt3dadd( 65.5494, 34.7998, -92.0353, 0.93 ) }
    dend_36 { pt3dadd( 67.3726, 35.9075, -94.8354, 0.31 ) }
    dend_36 { pt3dadd( 67.8422, 36.1886, -95.5293, 0.62 ) }
    dend_36 { pt3dadd( 69.7745, 37.357, -98.3142, 0.31 ) }
    dend_36 { pt3dadd( 71.1052, 38.1631, -100.054, 0.93 ) }
    dend_36 { pt3dadd( 74.9016, 40.4717, -103.72, 0.31 ) }
    dend_36 { pt3dadd( 77.1066, 41.7189, -105.705, 0.93 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 81/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 10.4459, 16.2523, -3.02259, 0.93 ) }
    dend_33 { pt3dadd( 11.1468, 19.523, -3.19371, 0.93 ) }
    dend_33 { pt3dadd( 11.9573, 23.3052, -3.3916, 0.93 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 84/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -25.323, 9.1282, 13.8263, 0.62 ) }
    dend_31 { pt3dadd( -27.5488, 11.4766, 14.7005, 0.62 ) }
    dend_31 { pt3dadd( -28.9689, 13.2335, 15.6992, 0.62 ) }
    dend_31 { pt3dadd( -29.808, 14.2589, 16.56, 0.62 ) }
    dend_31 { pt3dadd( -30.989, 15.7024, 17.7717, 0.62 ) }
    dend_31 { pt3dadd( -31.8107, 16.7067, 18.6148, 0.62 ) }
    dend_31 { pt3dadd( -33.8557, 19.206, 20.7128, 0.62 ) }
    dend_31 { pt3dadd( -36.1994, 22.2265, 23.6278, 0.62 ) }
    dend_31 { pt3dadd( -39.2924, 26.0888, 27.8007, 0.62 ) }
    dend_31 { pt3dadd( -44.1116, 32.1457, 34.1324, 0.62 ) }
    dend_31 { pt3dadd( -48.3411, 39.3138, 39.6757, 0.62 ) }
    dend_31 { pt3dadd( -52.0685, 47.5543, 43.942, 0.62 ) }
    dend_31 { pt3dadd( -55.9981, 56.0108, 47.5539, 0.62 ) }
    dend_31 { pt3dadd( -60.9541, 64.5621, 49.0747, 0.62 ) }
    dend_31 { pt3dadd( -64.9914, 73.4858, 51.0916, 0.62 ) }
    dend_31 { pt3dadd( -69.7733, 81.9555, 53.415, 0.62 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_31 { pt3dadd( -74.7556, 90.5787, 54.3191, 0.62 ) }
    dend_31 { pt3dadd( -78.0572, 99.8964, 55.8321, 0.62 ) }
    dend_31 { pt3dadd( -81.863, 109.104, 56.6771, 0.62 ) }
    dend_31 { pt3dadd( -85.5831, 118.371, 56.1431, 0.62 ) }
    dend_31 { pt3dadd( -88.9218, 127.796, 56.2879, 0.62 ) }
    dend_31 { pt3dadd( -91.433, 137.462, 55.7699, 0.62 ) }
    dend_31 { pt3dadd( -92.1707, 147.414, 56.4136, 0.62 ) }
    dend_31 { pt3dadd( -94.1174, 156.921, 58.829, 0.62 ) }
    dend_31 { pt3dadd( -94.9737, 166.853, 59.6086, 0.62 ) }
    dend_31 { pt3dadd( -96.1273, 176.491, 62.014, 0.62 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 10/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -25.323, 9.1282, 13.8263, 0.93 ) }
    dend_28 { pt3dadd( -32.5685, 9.13946, 13.077, 0.93 ) }
    dend_28 { pt3dadd( -39.9345, 8.76566, 12.4347, 0.93 ) }
    dend_28 { pt3dadd( -44.579, 8.45863, 12.072, 0.93 ) }
    dend_28 { pt3dadd( -48.0409, 8.12253, 11.8329, 0.93 ) }
    dend_28 { pt3dadd( -51.0727, 7.79246, 11.7238, 0.93 ) }
    dend_28 { pt3dadd( -53.9055, 7.39458, 11.7595, 0.93 ) }
    dend_28 { pt3dadd( -57.7318, 6.77483, 12.1289, 0.93 ) }
    dend_28 { pt3dadd( -59.8978, 6.31654, 12.4344, 0.93 ) }
    dend_28 { pt3dadd( -63.4172, 5.63444, 12.9872, 0.93 ) }
    dend_28 { pt3dadd( -68.7313, 4.6173, 13.6303, 0.93 ) }
    dend_28 { pt3dadd( -75.9402, 3.36562, 14.2158, 0.93 ) }
    dend_28 { pt3dadd( -79.0198, 2.81779, 14.4731, 0.93 ) }
    dend_28 { pt3dadd( -84.2755, 1.88402, 14.8908, 0.93 ) }
    dend_28 { pt3dadd( -89.3774, 0.929196, 15.227, 0.93 ) }
    dend_28 { pt3dadd( -96.2373, -0.478746, 15.5557, 0.93 ) }
    dend_28 { pt3dadd( -100.281, -1.70843, 15.6407, 0.93 ) }
    dend_28 { pt3dadd( -104.379, -3.04198, 15.6523, 0.93 ) }
    dend_28 { pt3dadd( -108.756, -4.65249, 15.6674, 0.93 ) }
    dend_28 { pt3dadd( -112.559, -6.20281, 15.7198, 0.93 ) }
    dend_28 { pt3dadd( -118.525, -9.0188, 15.9893, 0.93 ) }
    dend_28 { pt3dadd( -129.64, -14.747, 17.1104, 0.93 ) }
    // Section: dend_24, id: dend_24, parent: dend_0 (entry count 32/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 4.38484, -28.5599, 2.19688, 0.93 ) }
    dend_24 { pt3dadd( 8.84805, -33.0164, 2.56734, 0.93 ) }
    dend_24 { pt3dadd( 11.7534, -35.2976, 2.71755, 0.93 ) }
    dend_24 { pt3dadd( 17.194, -38.9589, 2.93438, 0.93 ) }
    dend_24 { pt3dadd( 20.7833, -41.1348, 2.9611, 0.93 ) }
    dend_24 { pt3dadd( 24.9756, -43.5553, 2.88664, 0.93 ) }
    dend_24 { pt3dadd( 31.4574, -47.1949, 2.33149, 0.93 ) }
    dend_24 { pt3dadd( 36.8542, -49.6905, 1.32994, 0.93 ) }
    dend_24 { pt3dadd( 38.64, -50.3996, 0.85416, 0.93 ) }
    dend_24 { pt3dadd( 40.8738, -51.2347, 0.0386141, 0.93 ) }
    dend_24 { pt3dadd( 42.6351, -51.8537, -0.71157, 0.93 ) }
    dend_24 { pt3dadd( 47.8934, -53.9433, -3.54435, 0.93 ) }
    dend_24 { pt3dadd( 49.6525, -54.9618, -4.82207, 0.93 ) }
    dend_24 { pt3dadd( 52.1263, -56.6338, -6.97246, 0.93 ) }
    dend_24 { pt3dadd( 54.7891, -58.6597, -9.28342, 0.93 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 47/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 4.38484, -28.5599, 2.19688, 2.8 ) }
    dend_1 { pt3dadd( 4.07142, -31.1751, 1.14931, 2.8 ) }
    dend_1 { pt3dadd( 3.80369, -33.4091, 0.254442, 2.17 ) }
    dend_1 { pt3dadd( 3.28914, -37.7026, -1.46535, 2.8 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 51/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 10.3188, -41.1602, 0.320339, 0.31 ) }
    axon_1 { pt3dadd( 13.923, -55.7207, 0.320339, 0.31 ) }
    axon_1 { pt3dadd( 17.5273, -70.2813, 0.320339, 0.31 ) }
    // Section: dend_49, id: dend_49, parent: dend_45 (entry count 54/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -12.9789, 37.2378, -30.2942, 0.62 ) }
    dend_49 { pt3dadd( -18.5957, 40.8115, -32.5297, 0.62 ) }
    dend_49 { pt3dadd( -20.8535, 42.2264, -33.5372, 0.31 ) }
    dend_49 { pt3dadd( -22.8017, 43.5279, -34.3859, 0.62 ) }
    dend_49 { pt3dadd( -24.7394, 44.9439, -35.124, 0.31 ) }
    dend_49 { pt3dadd( -29.638, 48.6631, -36.848, 0.31 ) }
    dend_49 { pt3dadd( -31.7756, 50.2757, -37.5962, 0.93 ) }
    dend_49 { pt3dadd( -33.4735, 51.6311, -38.242, 0.31 ) }
    dend_49 { pt3dadd( -36.517, 54.2075, -39.3608, 0.62 ) }
    dend_49 { pt3dadd( -40.4215, 57.7169, -40.7362, 0.31 ) }
    dend_49 { pt3dadd( -42.3716, 59.5146, -41.267, 0.31 ) }
    dend_49 { pt3dadd( -44.4847, 61.4687, -41.5152, 0.93 ) }
    dend_49 { pt3dadd( -47.609, 64.4463, -41.8171, 0.31 ) }
    dend_49 { pt3dadd( -49.1005, 65.9045, -41.9552, 0.93 ) }
    dend_49 { pt3dadd( -50.6102, 67.4012, -42.0928, 0.31 ) }
    dend_49 { pt3dadd( -52.7795, 69.6514, -42.2692, 0.93 ) }
    dend_49 { pt3dadd( -58.2848, 75.5717, -42.6364, 0.31 ) }
    dend_49 { pt3dadd( -59.448, 76.9328, -42.6975, 0.93 ) }
    dend_49 { pt3dadd( -64.8424, 83.6049, -43.0676, 0.31 ) }
    dend_49 { pt3dadd( -66.351, 85.5917, -43.145, 0.93 ) }
    dend_49 { pt3dadd( -67.9952, 87.9166, -43.2024, 0.31 ) }
    dend_49 { pt3dadd( -68.7508, 89.1079, -43.2362, 0.62 ) }
    dend_49 { pt3dadd( -73.2113, 96.8119, -43.3023, 0.31 ) }
    dend_49 { pt3dadd( -74.3537, 98.8258, -43.2043, 0.93 ) }
    dend_49 { pt3dadd( -75.7073, 101.407, -42.6604, 0.31 ) }
    dend_49 { pt3dadd( -76.1811, 102.351, -42.3382, 0.62 ) }
    dend_49 { pt3dadd( -77.0716, 104.137, -41.3862, 0.31 ) }
    dend_49 { pt3dadd( -77.7904, 105.562, -40.358, 0.93 ) }
    dend_49 { pt3dadd( -78.2101, 106.354, -39.5217, 0.31 ) }
    dend_49 { pt3dadd( -80.4889, 110.53, -34.6618, 0.31 ) }
    dend_49 { pt3dadd( -81.2205, 111.856, -33.1036, 0.93 ) }
    dend_49 { pt3dadd( -82.138, 113.53, -31.0294, 0.31 ) }
    dend_49 { pt3dadd( -82.9646, 115.125, -28.929, 0.62 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 87/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -12.9789, 37.2378, -30.2942, 0.93 ) }
    dend_46 { pt3dadd( -15.9874, 40.6608, -34.3474, 0.93 ) }
    dend_46 { pt3dadd( -16.3386, 41.0663, -34.772, 0.93 ) }
    dend_46 { pt3dadd( -17.9638, 43.2167, -37.0697, 0.93 ) }
    dend_46 { pt3dadd( -19.1158, 45.0052, -38.922, 0.31 ) }
    dend_46 { pt3dadd( -19.605, 45.8525, -39.7466, 0.31 ) }
    dend_46 { pt3dadd( -20.4806, 47.4704, -41.381, 0.62 ) }
    dend_46 { pt3dadd( -21.1074, 48.738, -42.6068, 0.62 ) }
    dend_46 { pt3dadd( -22.4746, 51.7242, -45.4789, 0.93 ) }
    dend_46 { pt3dadd( -23.5368, 54.3806, -47.9444, 0.31 ) }
    dend_46 { pt3dadd( -23.909, 55.4402, -49.0116, 0.93 ) }
    dend_46 { pt3dadd( -24.731, 58.4295, -52.0201, 1.24 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 99/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 16.9714, 15.731, 13.9125, 0.62 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_43 { pt3dadd( 20.9775, 18.8624, 22.5233, 0.62 ) }
    dend_43 { pt3dadd( 24.7199, 22.1535, 31.193, 0.62 ) }
    dend_43 { pt3dadd( 28.6418, 24.0803, 40.1878, 0.62 ) }
    dend_43 { pt3dadd( 32.4475, 25.6985, 49.2926, 0.62 ) }
    dend_43 { pt3dadd( 35.3006, 27.9002, 58.6206, 0.62 ) }
    dend_43 { pt3dadd( 38.476, 30.9637, 67.5946, 0.62 ) }
    dend_43 { pt3dadd( 42.2713, 32.0218, 76.7857, 0.62 ) }
    dend_43 { pt3dadd( 46.4024, 33.6084, 85.7532, 0.62 ) }
    dend_43 { pt3dadd( 49.6405, 35.8185, 94.9527, 0.62 ) }
    dend_43 { pt3dadd( 52.0137, 36.3431, 104.653, 0.62 ) }
    dend_43 { pt3dadd( 53.0744, 37.2776, 114.552, 0.62 ) }
    dend_43 { pt3dadd( 52.0614, 36.1503, 124.437, 0.62 ) }
    dend_43 { pt3dadd( 50.3524, 35.7184, 134.28, 0.62 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 13/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 16.9714, 15.731, 13.9125, 0.93 ) }
    dend_40 { pt3dadd( 22.1948, 17.9801, 22.138, 0.62 ) }
    dend_40 { pt3dadd( 26.8613, 19.8709, 30.7779, 0.62 ) }
    dend_40 { pt3dadd( 30.6487, 20.5221, 40.01, 0.62 ) }
    dend_40 { pt3dadd( 33.1017, 21.6158, 49.6426, 0.62 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 18/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 11.9573, 23.3052, -3.3916, 0.62 ) }
    dend_35 { pt3dadd( 13.1718, 26.4384, -6.15733, 0.62 ) }
    dend_35 { pt3dadd( 13.5453, 27.3305, -6.81982, 0.93 ) }
    dend_35 { pt3dadd( 15.3914, 31.4315, -9.47666, 0.62 ) }
    dend_35 { pt3dadd( 16.8135, 34.3704, -11.187, 0.31 ) }
    dend_35 { pt3dadd( 17.8357, 36.3893, -12.2369, 0.93 ) }
    dend_35 { pt3dadd( 18.745, 38.1007, -13.0035, 0.62 ) }
    dend_35 { pt3dadd( 20.0009, 40.2378, -13.5964, 0.62 ) }
    dend_35 { pt3dadd( 20.8096, 41.5301, -13.8354, 0.93 ) }
    dend_35 { pt3dadd( 21.9759, 43.2392, -13.9323, 0.31 ) }
    dend_35 { pt3dadd( 23.0922, 44.8761, -13.9741, 0.62 ) }
    dend_35 { pt3dadd( 25.1036, 47.757, -13.9142, 0.62 ) }
    dend_35 { pt3dadd( 28.4152, 52.6324, -13.6671, 0.62 ) }
    dend_35 { pt3dadd( 29.5415, 54.2676, -13.501, 0.62 ) }
    dend_35 { pt3dadd( 31.0888, 56.5771, -13.1551, 0.62 ) }
    dend_35 { pt3dadd( 32.7319, 59.1741, -12.648, 0.62 ) }
    dend_35 { pt3dadd( 34.793, 62.6416, -11.8967, 0.93 ) }
    dend_35 { pt3dadd( 36.2519, 65.5427, -11.1924, 0.62 ) }
    dend_35 { pt3dadd( 37.6015, 68.6218, -10.4487, 0.93 ) }
    dend_35 { pt3dadd( 38.3024, 70.4229, -10.0443, 0.93 ) }
    dend_35 { pt3dadd( 39.6865, 74.2917, -9.27994, 0.62 ) }
    dend_35 { pt3dadd( 40.7735, 77.405, -8.72763, 0.62 ) }
    dend_35 { pt3dadd( 42.8672, 83.7074, -7.87951, 0.62 ) }
    dend_35 { pt3dadd( 44.3698, 88.2816, -7.31492, 0.62 ) }
    dend_35 { pt3dadd( 45.578, 92.1266, -6.92682, 0.31 ) }
    dend_35 { pt3dadd( 45.9788, 93.3633, -6.80581, 0.62 ) }
    dend_35 { pt3dadd( 46.6881, 95.4886, -6.60782, 0.31 ) }
    dend_35 { pt3dadd( 47.3344, 97.3448, -6.44272, 0.62 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 46/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 11.9573, 23.3052, -3.3916, 0.62 ) }
    dend_34 { pt3dadd( 11.4419, 27.3181, -2.90546, 0.62 ) }
    dend_34 { pt3dadd( 11.004, 30.0327, -2.56146, 0.62 ) }
    dend_34 { pt3dadd( 10.6401, 32.7604, -2.23906, 0.62 ) }
    dend_34 { pt3dadd( 10.2124, 36.4209, -1.84218, 0.62 ) }
    dend_34 { pt3dadd( 9.91463, 39.1577, -1.47472, 0.62 ) }
    dend_34 { pt3dadd( 9.72656, 41.3786, -1.13877, 0.62 ) }
    dend_34 { pt3dadd( 9.53663, 47.1782, -0.143257, 0.62 ) }
    dend_34 { pt3dadd( 9.59927, 50.9799, 0.548198, 0.62 ) }
    dend_34 { pt3dadd( 9.98316, 58.6168, 1.938, 0.62 ) }
    dend_34 { pt3dadd( 10.2564, 62.0203, 2.55245, 0.62 ) }
    dend_34 { pt3dadd( 10.7844, 67.6861, 3.49668, 0.62 ) }
    dend_34 { pt3dadd( 11.2635, 73.0396, 4.38357, 0.62 ) }
    dend_34 { pt3dadd( 11.7168, 78.8887, 5.45253, 0.62 ) }
    dend_34 { pt3dadd( 11.9724, 84.4774, 6.53576, 0.62 ) }
    dend_34 { pt3dadd( 12.0379, 86.9664, 7.03635, 0.62 ) }
    dend_34 { pt3dadd( 12.0898, 92.4156, 8.14381, 0.62 ) }
    dend_34 { pt3dadd( 12.121, 96.3778, 9.06294, 0.62 ) }
    dend_34 { pt3dadd( 12.1613, 100.56, 10.1578, 0.62 ) }
    dend_34 { pt3dadd( 12.2564, 103.215, 11.0231, 0.62 ) }
    dend_34 { pt3dadd( 12.5593, 107.343, 12.6906, 0.62 ) }
    dend_34 { pt3dadd( 13.1022, 112.522, 14.9077, 0.31 ) }
    dend_34 { pt3dadd( 14.1391, 119.288, 18.0357, 0.31 ) }
    dend_34 { pt3dadd( 14.5819, 121.462, 19.0639, 0.62 ) }
    dend_34 { pt3dadd( 16.0618, 127.837, 22.0712, 0.31 ) }
    dend_34 { pt3dadd( 16.8082, 130.816, 23.6081, 0.62 ) }
    dend_34 { pt3dadd( 18.8205, 139.874, 27.3378, 0.62 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 73/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -129.64, -14.747, 17.1104, 0.31 ) }
    dend_30 { pt3dadd( -132.812, -17.6723, 17.0389, 0.31 ) }
    dend_30 { pt3dadd( -133.99, -18.8639, 17.0042, 0.62 ) }
    dend_30 { pt3dadd( -135.863, -20.7629, 16.9455, 0.31 ) }
    dend_30 { pt3dadd( -136.815, -21.7196, 16.9345, 0.62 ) }
    dend_30 { pt3dadd( -137.956, -22.7693, 16.9505, 0.31 ) }
    dend_30 { pt3dadd( -139.292, -23.9981, 16.9692, 0.62 ) }
    dend_30 { pt3dadd( -140.782, -25.4309, 16.9906, 0.31 ) }
    dend_30 { pt3dadd( -141.69, -26.2802, 17.0142, 0.62 ) }
    dend_30 { pt3dadd( -142.827, -27.2233, 17.068, 0.31 ) }
    dend_30 { pt3dadd( -144.463, -28.5593, 17.2349, 0.62 ) }
    dend_30 { pt3dadd( -152.57, -34.1582, 18.9439, 0.62 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 85/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -129.64, -14.747, 17.1104, 0.62 ) }
    dend_29 { pt3dadd( -136.103, -16.6733, 17.662, 0.62 ) }
    dend_29 { pt3dadd( -142.439, -18.2321, 17.8026, 0.62 ) }
    dend_29 { pt3dadd( -146.933, -19.206, 17.4964, 0.62 ) }
    dend_29 { pt3dadd( -153.779, -20.4734, 16.7035, 0.62 ) }
    dend_29 { pt3dadd( -158.202, -21.1766, 16.0462, 0.62 ) }
    dend_29 { pt3dadd( -160.627, -21.4636, 15.6447, 0.62 ) }
    dend_29 { pt3dadd( -166.696, -21.7939, 14.1704, 0.62 ) }
    dend_29 { pt3dadd( -171.894, -21.6028, 12.7079, 0.62 ) }
    dend_29 { pt3dadd( -173.603, -21.42, 12.1583, 0.62 ) }
    dend_29 { pt3dadd( -176.289, -20.9291, 11.1571, 0.62 ) }
    dend_29 { pt3dadd( -181.237, -19.8848, 9.21153, 0.31 ) }
    dend_29 { pt3dadd( -182.683, -19.5257, 8.68485, 0.93 ) }
    dend_29 { pt3dadd( -185.026, -18.8566, 8.18167, 0.62 ) }
    dend_29 { pt3dadd( -194.919, -20.1351, 7.47994, 0.62 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_29 { pt3dadd( -204.748, -21.9203, 7.93262, 0.62 ) }
    dend_29 { pt3dadd( -214.517, -23.8244, 8.90621, 0.62 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 2/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 54.7891, -58.6597, -9.28342, 0.62 ) }
    dend_26 { pt3dadd( 57.9441, -60.9246, -10.7898, 0.62 ) }
    dend_26 { pt3dadd( 60.2259, -62.8848, -11.9602, 0.62 ) }
    dend_26 { pt3dadd( 63.6942, -66.0989, -13.8191, 0.62 ) }
    dend_26 { pt3dadd( 65.0036, -67.2835, -14.5902, 0.62 ) }
    dend_26 { pt3dadd( 68.9346, -70.9312, -17.2139, 0.62 ) }
    dend_26 { pt3dadd( 71.5743, -73.5331, -19.1108, 0.62 ) }
    dend_26 { pt3dadd( 74.0087, -76.1495, -21.0389, 0.62 ) }
    dend_26 { pt3dadd( 77.3216, -79.8534, -23.8706, 0.62 ) }
    dend_26 { pt3dadd( 81.7264, -85.1234, -27.9253, 0.62 ) }
    dend_26 { pt3dadd( 84.5381, -88.6636, -30.5922, 0.62 ) }
    dend_26 { pt3dadd( 88.4877, -93.7261, -34.2427, 0.62 ) }
    dend_26 { pt3dadd( 90.2654, -96.039, -35.8978, 0.62 ) }
    dend_26 { pt3dadd( 91.2356, -97.2948, -36.7599, 0.93 ) }
    dend_26 { pt3dadd( 92.6279, -99.1505, -37.9088, 0.62 ) }
    dend_26 { pt3dadd( 93.7177, -100.615, -38.6449, 0.62 ) }
    dend_26 { pt3dadd( 94.9497, -102.032, -39.2708, 0.93 ) }
    dend_26 { pt3dadd( 96.8694, -103.825, -40.1372, 0.62 ) }
    dend_26 { pt3dadd( 98.6349, -105.288, -40.9097, 0.93 ) }
    dend_26 { pt3dadd( 102.025, -107.854, -42.7584, 0.31 ) }
    dend_26 { pt3dadd( 103.256, -108.717, -43.4721, 0.31 ) }
    dend_26 { pt3dadd( 104.547, -109.601, -44.2523, 0.62 ) }
    dend_26 { pt3dadd( 109.928, -113.272, -47.7576, 0.31 ) }
    dend_26 { pt3dadd( 111.002, -114.004, -48.5209, 0.93 ) }
    dend_26 { pt3dadd( 115.152, -116.738, -51.5163, 0.31 ) }
    dend_26 { pt3dadd( 118.06, -118.638, -53.8125, 0.31 ) }
    dend_26 { pt3dadd( 118.974, -119.202, -54.5658, 0.93 ) }
    dend_26 { pt3dadd( 120.704, -120.232, -56.0313, 0.31 ) }
    dend_26 { pt3dadd( 121.931, -120.912, -57.1324, 0.93 ) }
    dend_26 { pt3dadd( 125.081, -122.66, -60.1919, 0.31 ) }
    dend_26 { pt3dadd( 128.064, -124.274, -63.0938, 0.93 ) }
    dend_26 { pt3dadd( 129.568, -125.089, -64.7213, 0.31 ) }
    dend_26 { pt3dadd( 130.333, -125.532, -65.5782, 0.93 ) }
    dend_26 { pt3dadd( 132.945, -127.184, -68.3572, 0.31 ) }
    dend_26 { pt3dadd( 135.331, -128.83, -70.858, 0.93 ) }
    dend_26 { pt3dadd( 137.121, -130.127, -72.748, 0.31 ) }
    dend_26 { pt3dadd( 137.716, -130.543, -73.3266, 0.62 ) }
    dend_26 { pt3dadd( 139.221, -131.524, -74.755, 0.31 ) }
    dend_26 { pt3dadd( 143.817, -134.368, -78.9391, 0.31 ) }
    dend_26 { pt3dadd( 146.998, -136.15, -81.7928, 0.93 ) }
    dend_26 { pt3dadd( 149.862, -137.529, -84.6699, 0.31 ) }
    dend_26 { pt3dadd( 151.474, -138.218, -86.3942, 0.62 ) }
    dend_26 { pt3dadd( 155.4, -139.816, -90.512, 0.31 ) }
    dend_26 { pt3dadd( 155.88, -139.999, -91.0067, 0.93 ) }
    dend_26 { pt3dadd( 159.726, -141.486, -94.9044, 0.31 ) }
    dend_26 { pt3dadd( 165.082, -143.77, -100.08, 0.62 ) }
    dend_26 { pt3dadd( 167.081, -144.796, -101.898, 0.93 ) }
    dend_26 { pt3dadd( 170.37, -146.946, -104.816, 0.31 ) }
    dend_26 { pt3dadd( 171.158, -147.634, -105.48, 0.62 ) }
    dend_26 { pt3dadd( 172.747, -149.277, -106.809, 0.31 ) }
    dend_26 { pt3dadd( 173.239, -149.896, -107.194, 0.93 ) }
    dend_26 { pt3dadd( 175.028, -152.333, -108.591, 0.31 ) }
    dend_26 { pt3dadd( 177.163, -155.054, -110.406, 0.31 ) }
    dend_26 { pt3dadd( 180.055, -158.454, -112.992, 0.31 ) }
    dend_26 { pt3dadd( 181.917, -160.471, -114.586, 0.93 ) }
    dend_26 { pt3dadd( 183.087, -161.61, -115.515, 0.31 ) }
    dend_26 { pt3dadd( 184.31, -162.694, -116.369, 0.62 ) }
    dend_26 { pt3dadd( 189.083, -166.614, -119.233, 0.31 ) }
    dend_26 { pt3dadd( 190.171, -167.457, -119.625, 0.62 ) }
    dend_26 { pt3dadd( 191.926, -168.915, -120.01, 0.31 ) }
    dend_26 { pt3dadd( 192.744, -169.637, -120.173, 0.62 ) }
    dend_26 { pt3dadd( 194.705, -171.388, -120.657, 0.31 ) }
    dend_26 { pt3dadd( 195.46, -172.076, -120.946, 0.62 ) }
    dend_26 { pt3dadd( 202.269, -178.349, -124.398, 0.31 ) }
    dend_26 { pt3dadd( 204.624, -180.389, -125.716, 0.31 ) }
    dend_26 { pt3dadd( 207.46, -182.671, -127.417, 0.93 ) }
    dend_26 { pt3dadd( 210.511, -185.066, -129.345, 0.31 ) }
    dend_26 { pt3dadd( 215.117, -188.554, -132.42, 0.31 ) }
    dend_26 { pt3dadd( 215.851, -189.094, -132.926, 0.62 ) }
    dend_26 { pt3dadd( 219.315, -191.55, -135.499, 0.31 ) }
    dend_26 { pt3dadd( 220.728, -192.48, -136.478, 0.62 ) }
    dend_26 { pt3dadd( 223.607, -194.445, -138.099, 0.31 ) }
    dend_26 { pt3dadd( 224.137, -194.845, -138.314, 0.62 ) }
    dend_26 { pt3dadd( 225.979, -196.3, -138.597, 0.31 ) }
    dend_26 { pt3dadd( 226.563, -196.804, -138.673, 0.93 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 77/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 54.7891, -58.6597, -9.28342, 0.62 ) }
    dend_25 { pt3dadd( 56.3522, -62.6679, -8.24539, 0.62 ) }
    dend_25 { pt3dadd( 56.7895, -63.7751, -7.92211, 0.62 ) }
    dend_25 { pt3dadd( 57.5154, -65.6514, -7.41704, 0.62 ) }
    dend_25 { pt3dadd( 58.9945, -68.6309, -6.73125, 0.62 ) }
    dend_25 { pt3dadd( 61.8609, -73.6292, -5.65563, 0.62 ) }
    dend_25 { pt3dadd( 62.8825, -75.2184, -5.32878, 0.62 ) }
    dend_25 { pt3dadd( 65.6408, -79.1175, -4.22667, 0.62 ) }
    dend_25 { pt3dadd( 70.6888, -85.9582, -1.94798, 0.62 ) }
    dend_25 { pt3dadd( 76.1075, -93.2561, 0.671223, 0.62 ) }
    dend_25 { pt3dadd( 78.5334, -96.46, 1.85293, 0.62 ) }
    dend_25 { pt3dadd( 80.5872, -99.094, 2.78291, 0.62 ) }
    dend_25 { pt3dadd( 85.3998, -105.414, 5.37089, 0.62 ) }
    dend_25 { pt3dadd( 87.1222, -107.748, 6.6264, 0.62 ) }
    dend_25 { pt3dadd( 89.4987, -111.096, 8.77969, 0.62 ) }
    dend_25 { pt3dadd( 91.0625, -113.836, 10.7648, 0.62 ) }
    dend_25 { pt3dadd( 91.8221, -115.395, 11.9082, 0.62 ) }
    dend_25 { pt3dadd( 94.0164, -120.572, 15.5688, 0.62 ) }
    dend_25 { pt3dadd( 95.945, -125.001, 18.2003, 0.62 ) }
    dend_25 { pt3dadd( 101.677, -132.969, 20.1131, 0.62 ) }
    dend_25 { pt3dadd( 108.758, -139.594, 22.5556, 0.62 ) }
    dend_25 { pt3dadd( 115.984, -145.441, 26.2431, 0.62 ) }
    dend_25 { pt3dadd( 123.52, -149.919, 31.0563, 0.62 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_25 { pt3dadd( 130.346, -152.932, 37.7133, 0.62 ) }
    dend_25 { pt3dadd( 138.104, -155.15, 43.6209, 0.62 ) }
    // Section: dend_17, id: dend_17, parent: dend_1 (entry count 2/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 3.28914, -37.7026, -1.46535, 0.93 ) }
    dend_17 { pt3dadd( 5.2869, -40.2688, -6.05196, 0.93 ) }
    dend_17 { pt3dadd( 6.04777, -41.2978, -7.6492, 0.93 ) }
    dend_17 { pt3dadd( 7.18817, -42.84, -10.0432, 0.93 ) }
    dend_17 { pt3dadd( 8.55127, -44.6834, -12.9047, 0.93 ) }
    dend_17 { pt3dadd( 9.1691, -45.519, -14.2016, 0.93 ) }
    dend_17 { pt3dadd( 10.7829, -47.7013, -17.5892, 1.24 ) }
    dend_17 { pt3dadd( 12.2249, -49.4658, -20.4024, 1.24 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 10/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 3.28914, -37.7026, -1.46535, 2.48 ) }
    dend_2 { pt3dadd( 2.36914, -39.4426, -1.55535, 2.48 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 12/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -24.731, 58.4295, -52.0201, 0.31 ) }
    dend_48 { pt3dadd( -25.0931, 61.1454, -53.9517, 0.31 ) }
    dend_48 { pt3dadd( -25.1663, 61.9381, -54.5015, 0.62 ) }
    dend_48 { pt3dadd( -25.4318, 67.0039, -57.784, 0.31 ) }
    dend_48 { pt3dadd( -25.4515, 68.3212, -58.5806, 0.31 ) }
    dend_48 { pt3dadd( -25.4009, 70.0464, -59.5312, 0.93 ) }
    dend_48 { pt3dadd( -25.0667, 75.1049, -62.2462, 0.31 ) }
    dend_48 { pt3dadd( -24.9315, 75.9483, -62.8064, 0.62 ) }
    dend_48 { pt3dadd( -24.4945, 77.8224, -64.1864, 0.62 ) }
    dend_48 { pt3dadd( -24.1687, 78.953, -65.1845, 0.93 ) }
    dend_48 { pt3dadd( -23.3597, 81.1422, -67.4126, 0.62 ) }
    dend_48 { pt3dadd( -22.6162, 82.6371, -69.5134, 0.62 ) }
    dend_48 { pt3dadd( -20.1301, 86.605, -76.3148, 0.31 ) }
    dend_48 { pt3dadd( -19.4598, 87.5263, -78.1218, 0.93 ) }
    dend_48 { pt3dadd( -17.1266, 90.1886, -84.521, 0.31 ) }
    dend_48 { pt3dadd( -16.1805, 91.1272, -87.1687, 0.31 ) }
    dend_48 { pt3dadd( -12.5924, 94.0312, -96.9218, 0.31 ) }
    dend_48 { pt3dadd( -12.1817, 94.3034, -97.9653, 0.93 ) }
    dend_48 { pt3dadd( -11.2017, 94.7873, -100.22, 0.62 ) }
    dend_48 { pt3dadd( -8.83905, 95.6671, -105.348, 0.31 ) }
    dend_48 { pt3dadd( -7.39066, 96.027, -108.242, 0.93 ) }
    dend_48 { pt3dadd( -5.35371, 96.439, -111.904, 0.31 ) }
    dend_48 { pt3dadd( -4.68265, 96.5364, -112.955, 0.93 ) }
    dend_48 { pt3dadd( -2.40785, 96.796, -116.395, 0.31 ) }
    dend_48 { pt3dadd( 0.405285, 97.014, -120.413, 0.31 ) }
    dend_48 { pt3dadd( 2.28025, 97.1976, -122.973, 0.62 ) }
    dend_48 { pt3dadd( 6.78016, 97.691, -129.005, 0.31 ) }
    dend_48 { pt3dadd( 8.51461, 97.9485, -131.286, 0.62 ) }
    dend_48 { pt3dadd( 10.4892, 98.3255, -133.868, 0.31 ) }
    dend_48 { pt3dadd( 12.0801, 98.7107, -136.084, 0.93 ) }
    dend_48 { pt3dadd( 16.9148, 100.018, -143.068, 0.31 ) }
    dend_48 { pt3dadd( 17.6233, 100.225, -144.116, 0.62 ) }
    dend_48 { pt3dadd( 19.158, 100.666, -146.418, 0.31 ) }
    dend_48 { pt3dadd( 19.5119, 100.752, -146.907, 0.62 ) }
    dend_48 { pt3dadd( 24.8749, 101.601, -154.405, 0.31 ) }
    dend_48 { pt3dadd( 25.7789, 101.657, -155.66, 0.31 ) }
    dend_48 { pt3dadd( 26.2658, 101.625, -156.449, 0.62 ) }
    dend_48 { pt3dadd( 27.3667, 101.601, -158.862, 0.31 ) }
    dend_48 { pt3dadd( 27.8472, 101.579, -160.005, 0.62 ) }
    dend_48 { pt3dadd( 29.4947, 101.53, -164.122, 0.31 ) }
    dend_48 { pt3dadd( 30.0996, 101.534, -165.837, 0.62 ) }
    dend_48 { pt3dadd( 32.9901, 101.72, -175.31, 0.31 ) }
    dend_48 { pt3dadd( 35.1411, 101.996, -183.542, 0.62 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 55/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -24.731, 58.4295, -52.0201, 0.31 ) }
    dend_47 { pt3dadd( -23.6622, 62.9891, -54.1067, 0.31 ) }
    dend_47 { pt3dadd( -23.2609, 64.8061, -55.0136, 0.62 ) }
    dend_47 { pt3dadd( -22.4648, 68.41, -56.8123, 0.93 ) }
    dend_47 { pt3dadd( -20.6846, 76.4689, -60.8346, 0.31 ) }
    dend_47 { pt3dadd( -20.0677, 79.2613, -62.2283, 0.62 ) }
    dend_47 { pt3dadd( -19.5564, 81.576, -63.3836, 0.31 ) }
    dend_47 { pt3dadd( -18.6399, 85.8762, -65.8424, 0.62 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 63/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 33.1017, 21.6158, 49.6426, 0.62 ) }
    dend_42 { pt3dadd( 37.8714, 22.5172, 58.3854, 0.62 ) }
    dend_42 { pt3dadd( 41.2217, 23.261, 67.7781, 0.62 ) }
    dend_42 { pt3dadd( 43.2053, 23.5956, 77.5737, 0.62 ) }
    dend_42 { pt3dadd( 46.9306, 22.2244, 86.752, 0.62 ) }
    dend_42 { pt3dadd( 50.2996, 21.9831, 96.1643, 0.62 ) }
    dend_42 { pt3dadd( 52.166, 22.0869, 105.988, 0.62 ) }
    dend_42 { pt3dadd( 54.5764, 21.6012, 115.681, 0.62 ) }
    dend_42 { pt3dadd( 58.8753, 20.968, 124.688, 0.62 ) }
    dend_42 { pt3dadd( 63.1185, 20.8183, 133.742, 0.62 ) }
    dend_42 { pt3dadd( 69.0338, 18.7157, 141.525, 0.62 ) }
    dend_42 { pt3dadd( 74.4646, 16.15, 149.521, 0.62 ) }
    dend_42 { pt3dadd( 78.6509, 13.3137, 158.148, 0.62 ) }
    dend_42 { pt3dadd( 84.773, 10.8832, 165.672, 0.62 ) }
    dend_42 { pt3dadd( 90.9764, 9.26221, 173.346, 0.62 ) }
    dend_42 { pt3dadd( 96.0854, 6.5003, 181.487, 0.62 ) }
    dend_42 { pt3dadd( 101.436, 5.03471, 189.806, 0.62 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 80/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 33.1017, 21.6158, 49.6426, 0.93 ) }
    dend_41 { pt3dadd( 35.4967, 24.3372, 58.9623, 0.62 ) }
    dend_41 { pt3dadd( 38.3556, 25.781, 68.4356, 0.62 ) }
    dend_41 { pt3dadd( 40.1884, 28.4482, 77.8974, 0.62 ) }
    dend_41 { pt3dadd( 43.1516, 32.1586, 86.6981, 0.62 ) }
    dend_41 { pt3dadd( 45.5662, 36.2821, 95.4826, 0.62 ) }
    dend_41 { pt3dadd( 46.8715, 39.4252, 104.886, 0.62 ) }
    dend_41 { pt3dadd( 47.7084, 41.96, 114.523, 0.62 ) }
    dend_41 { pt3dadd( 48.2106, 45.8848, 123.707, 0.62 ) }
    dend_41 { pt3dadd( 49.2975, 50.6425, 132.435, 0.62 ) }
    dend_41 { pt3dadd( 51.7705, 55.6227, 140.747, 0.62 ) }
    dend_41 { pt3dadd( 54.2199, 59.8663, 149.464, 0.62 ) }
    dend_41 { pt3dadd( 55.6011, 63.3141, 158.749, 0.62 ) }
    dend_41 { pt3dadd( 57.4765, 68.5504, 167.059, 0.62 ) }
    dend_41 { pt3dadd( 57.9969, 74.6089, 174.998, 0.62 ) }
    dend_41 { pt3dadd( 59.9098, 80.7845, 182.627, 0.62 ) }
    dend_41 { pt3dadd( 62.9986, 85.5721, 190.845, 0.62 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 97/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 12.2249, -49.4658, -20.4024, 0.62 ) }
    dend_23 { pt3dadd( 10.9499, -52.2473, -24.3013, 0.62 ) }
    dend_23 { pt3dadd( 9.53624, -55.2042, -28.215, 0.62 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_23 { pt3dadd( 7.29091, -59.5453, -33.5779, 0.62 ) }
    dend_23 { pt3dadd( 5.10254, -63.5687, -38.1457, 0.62 ) }
    dend_23 { pt3dadd( 3.8664, -65.8023, -40.613, 0.62 ) }
    dend_23 { pt3dadd( 2.15224, -68.9298, -43.96, 0.31 ) }
    dend_23 { pt3dadd( 1.49012, -70.1603, -45.1097, 0.62 ) }
    dend_23 { pt3dadd( 0.235094, -72.4517, -46.9679, 0.31 ) }
    dend_23 { pt3dadd( -1.10364, -75.0508, -48.6261, 0.62 ) }
    dend_23 { pt3dadd( -2.99794, -79.0825, -50.8131, 0.31 ) }
    dend_23 { pt3dadd( -3.55961, -80.4479, -51.5213, 0.93 ) }
    dend_23 { pt3dadd( -4.92517, -84.2721, -53.4144, 0.62 ) }
    dend_23 { pt3dadd( -6.40858, -88.8738, -55.674, 0.93 ) }
    dend_23 { pt3dadd( -7.76808, -93.5124, -58.5031, 0.31 ) }
    dend_23 { pt3dadd( -8.52699, -96.0999, -60.2594, 0.31 ) }
    dend_23 { pt3dadd( -9.49471, -99.3149, -62.483, 0.62 ) }
    dend_23 { pt3dadd( -10.1061, -101.236, -63.9701, 0.31 ) }
    dend_23 { pt3dadd( -10.4941, -102.395, -64.9557, 0.93 ) }
    dend_23 { pt3dadd( -13.3907, -110.119, -72.0919, 0.62 ) }
    dend_23 { pt3dadd( -14.0857, -111.748, -73.7307, 0.62 ) }
    dend_23 { pt3dadd( -15.0601, -113.794, -75.7562, 0.62 ) }
    dend_23 { pt3dadd( -16.4087, -116.576, -78.3518, 0.31 ) }
    dend_23 { pt3dadd( -17.0013, -117.774, -79.4817, 1.24 ) }
    dend_23 { pt3dadd( -18.5583, -120.698, -81.9965, 0.62 ) }
    dend_23 { pt3dadd( -19.5733, -122.525, -83.2022, 0.31 ) }
    dend_23 { pt3dadd( -20.0855, -123.407, -83.8284, 0.62 ) }
    dend_23 { pt3dadd( -21.6606, -126.038, -85.6482, 0.31 ) }
    dend_23 { pt3dadd( -22.6579, -127.704, -86.7546, 0.62 ) }
    dend_23 { pt3dadd( -23.9383, -129.827, -88.1897, 0.31 ) }
    dend_23 { pt3dadd( -24.8692, -131.311, -89.1514, 0.62 ) }
    dend_23 { pt3dadd( -26.008, -133.062, -90.3061, 0.62 ) }
    dend_23 { pt3dadd( -27.892, -135.894, -92.1263, 0.31 ) }
    dend_23 { pt3dadd( -29.1422, -137.721, -93.3138, 0.62 ) }
    dend_23 { pt3dadd( -31.2928, -141.047, -95.7883, 0.31 ) }
    dend_23 { pt3dadd( -31.8126, -141.995, -96.4719, 0.62 ) }
    dend_23 { pt3dadd( -32.4383, -143.251, -97.2987, 0.31 ) }
    dend_23 { pt3dadd( -32.9122, -144.317, -97.8987, 0.62 ) }
    dend_23 { pt3dadd( -34.7371, -148.975, -100.137, 0.31 ) }
    dend_23 { pt3dadd( -35.7371, -152.27, -101.44, 0.93 ) }
    dend_23 { pt3dadd( -36.8786, -156.918, -103.059, 0.31 ) }
    dend_23 { pt3dadd( -37.2242, -158.442, -103.531, 0.62 ) }
    dend_23 { pt3dadd( -37.7849, -161.063, -104.241, 0.31 ) }
    dend_23 { pt3dadd( -38.1259, -162.772, -104.695, 1.24 ) }
    dend_23 { pt3dadd( -39.964, -172.184, -107.057, 0.31 ) }
    dend_23 { pt3dadd( -40.5261, -174.708, -107.681, 1.24 ) }
    dend_23 { pt3dadd( -41.4896, -178.468, -108.752, 0.62 ) }
    dend_23 { pt3dadd( -41.9324, -179.932, -109.146, 0.93 ) }
    dend_23 { pt3dadd( -43.7659, -185.151, -110.411, 0.31 ) }
    dend_23 { pt3dadd( -44.3426, -186.557, -110.676, 0.31 ) }
    dend_23 { pt3dadd( -47.3067, -192.52, -111.342, 0.31 ) }
    dend_23 { pt3dadd( -48.0249, -193.855, -111.45, 0.93 ) }
    dend_23 { pt3dadd( -51.2989, -199.804, -111.701, 0.31 ) }
    dend_23 { pt3dadd( -52.4943, -201.91, -111.686, 0.62 ) }
    dend_23 { pt3dadd( -53.9535, -204.429, -111.462, 0.93 ) }
    dend_23 { pt3dadd( -54.8217, -206.01, -111.283, 0.31 ) }
    dend_23 { pt3dadd( -55.5939, -207.463, -111.055, 0.62 ) }
    dend_23 { pt3dadd( -56.6837, -209.662, -110.537, 0.31 ) }
    dend_23 { pt3dadd( -57.0072, -210.246, -110.353, 0.62 ) }
    dend_23 { pt3dadd( -59.6591, -214.512, -108.676, 0.31 ) }
    dend_23 { pt3dadd( -60.8455, -216.166, -107.947, 0.62 ) }
    dend_23 { pt3dadd( -62.5658, -218.394, -106.881, 0.31 ) }
    dend_23 { pt3dadd( -64.6231, -220.908, -105.655, 0.62 ) }
    dend_23 { pt3dadd( -69.5889, -226.735, -102.78, 0.31 ) }
    dend_23 { pt3dadd( -71.4094, -228.969, -101.737, 0.93 ) }
    dend_23 { pt3dadd( -74.8182, -233.702, -99.7763, 0.31 ) }
    dend_23 { pt3dadd( -75.9012, -235.434, -99.2315, 0.62 ) }
    dend_23 { pt3dadd( -77.7279, -238.57, -98.3865, 0.31 ) }
    dend_23 { pt3dadd( -78.6807, -240.403, -98.0187, 0.62 ) }
    dend_23 { pt3dadd( -80.4929, -245.007, -97.356, 0.31 ) }
    dend_23 { pt3dadd( -82.686, -251.754, -96.8046, 0.31 ) }
    dend_23 { pt3dadd( -83.5097, -255.537, -96.6576, 0.93 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 69/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 12.2249, -49.4658, -20.4024, 0.93 ) }
    dend_18 { pt3dadd( 15.6139, -50.7508, -22.7333, 0.93 ) }
    dend_18 { pt3dadd( 18.281, -51.9755, -23.8645, 0.93 ) }
    dend_18 { pt3dadd( 20.4583, -53.0635, -24.5613, 0.93 ) }
    dend_18 { pt3dadd( 22.56, -54.1967, -25.1607, 0.93 ) }
    dend_18 { pt3dadd( 25.9333, -56.0117, -26.2877, 0.93 ) }
    dend_18 { pt3dadd( 32.1741, -59.5047, -28.6153, 0.93 ) }
    dend_18 { pt3dadd( 40.3321, -64.2257, -31.8149, 0.93 ) }
    dend_18 { pt3dadd( 41.9194, -65.1979, -32.5108, 0.93 ) }
    dend_18 { pt3dadd( 44.4681, -66.8148, -33.7548, 0.93 ) }
    dend_18 { pt3dadd( 50.0317, -70.4632, -36.7472, 0.93 ) }
    dend_18 { pt3dadd( 53.4593, -72.9329, -38.766, 0.93 ) }
    dend_18 { pt3dadd( 55.4254, -74.4929, -40.1194, 0.93 ) }
    dend_18 { pt3dadd( 58.2148, -76.874, -42.4149, 0.93 ) }
    dend_18 { pt3dadd( 60.1472, -78.6264, -43.9388, 0.93 ) }
    dend_18 { pt3dadd( 61.9117, -80.4113, -45.2385, 0.93 ) }
    dend_18 { pt3dadd( 64.3172, -83.174, -46.7145, 0.93 ) }
    dend_18 { pt3dadd( 67.2419, -86.7698, -48.414, 0.93 ) }
    dend_18 { pt3dadd( 70.3327, -90.9135, -50.1045, 0.93 ) }
    dend_18 { pt3dadd( 71.458, -92.5186, -50.7144, 0.93 ) }
    dend_18 { pt3dadd( 73.2512, -95.2882, -51.7637, 0.93 ) }
    dend_18 { pt3dadd( 76.609, -101.111, -54.3692, 0.93 ) }
    dend_18 { pt3dadd( 77.7215, -103.364, -55.5733, 0.93 ) }
    dend_18 { pt3dadd( 79.0426, -107.078, -57.7124, 0.93 ) }
    dend_18 { pt3dadd( 79.7619, -110.042, -59.4579, 0.93 ) }
    dend_18 { pt3dadd( 80.2066, -112.453, -61.1039, 0.93 ) }
    dend_18 { pt3dadd( 80.8371, -117.194, -64.7805, 0.93 ) }
    dend_18 { pt3dadd( 80.9857, -119.357, -66.5738, 0.93 ) }
    dend_18 { pt3dadd( 81.282, -124.834, -71.1321, 0.93 ) }
    dend_18 { pt3dadd( 81.3892, -127.953, -73.7925, 0.93 ) }
    dend_18 { pt3dadd( 81.6585, -133.726, -78.4546, 0.93 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_18 { pt3dadd( 81.9184, -136.932, -80.8993, 1.86 ) }
    // Section: dend_14, id: dend_14, parent: dend_2 (entry count 1/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 2.36914, -39.4426, -1.55535, 0.93 ) }
    dend_14 { pt3dadd( -1.21827, -41.6466, 0.178926, 0.93 ) }
    dend_14 { pt3dadd( -2.79462, -42.7115, 1.27971, 0.62 ) }
    dend_14 { pt3dadd( -3.65113, -43.2756, 1.97926, 0.62 ) }
    dend_14 { pt3dadd( -5.82821, -44.8549, 3.87587, 0.93 ) }
    dend_14 { pt3dadd( -7.14727, -45.8028, 5.0186, 0.93 ) }
    dend_14 { pt3dadd( -13.6272, -50.6781, 10.3006, 0.93 ) }
    dend_14 { pt3dadd( -16.3711, -52.8567, 12.5578, 0.93 ) }
    dend_14 { pt3dadd( -18.5401, -54.6645, 14.2424, 0.93 ) }
    dend_14 { pt3dadd( -23.0279, -58.6222, 17.3208, 0.93 ) }
    dend_14 { pt3dadd( -25.0366, -60.5495, 18.4278, 0.93 ) }
    dend_14 { pt3dadd( -28.102, -63.7102, 19.6203, 0.93 ) }
    dend_14 { pt3dadd( -30.7837, -66.7111, 20.0428, 0.93 ) }
    dend_14 { pt3dadd( -32.0969, -68.1937, 20.1117, 0.93 ) }
    dend_14 { pt3dadd( -35.0845, -71.7053, 19.9881, 0.93 ) }
    dend_14 { pt3dadd( -38.004, -75.1832, 19.5939, 0.93 ) }
    dend_14 { pt3dadd( -39.4422, -76.9926, 19.3585, 0.62 ) }
    dend_14 { pt3dadd( -43.177, -81.5172, 18.8418, 0.62 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 19/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 2.36914, -39.4426, -1.55535, 1.55 ) }
    dend_3 { pt3dadd( 2.94914, -44.0426, -2.07535, 1.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_18 (entry count 21/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 81.9184, -136.932, -80.8993, 0.62 ) }
    dend_22 { pt3dadd( 81.5821, -143.544, -82.6115, 0.62 ) }
    dend_22 { pt3dadd( 81.4449, -147.205, -83.4659, 0.62 ) }
    dend_22 { pt3dadd( 81.5533, -151.735, -84.432, 0.31 ) }
    dend_22 { pt3dadd( 81.6701, -153.071, -84.7166, 0.62 ) }
    dend_22 { pt3dadd( 81.9886, -155.547, -85.2607, 0.31 ) }
    dend_22 { pt3dadd( 82.7045, -160.332, -86.3164, 0.31 ) }
    dend_22 { pt3dadd( 82.9188, -161.37, -86.638, 0.62 ) }
    dend_22 { pt3dadd( 83.8558, -165.657, -88.1263, 0.31 ) }
    dend_22 { pt3dadd( 84.3273, -167.674, -88.8439, 0.62 ) }
    dend_22 { pt3dadd( 85.7216, -173.56, -91.1432, 0.31 ) }
    dend_22 { pt3dadd( 85.9186, -174.392, -91.5031, 0.62 ) }
    dend_22 { pt3dadd( 87.6845, -182.473, -95.5285, 0.31 ) }
    dend_22 { pt3dadd( 88.028, -184.176, -96.4423, 0.62 ) }
    dend_22 { pt3dadd( 88.2161, -185.392, -97.1234, 0.93 ) }
    dend_22 { pt3dadd( 88.5435, -188.052, -98.6538, 0.31 ) }
    dend_22 { pt3dadd( 88.6638, -189.074, -99.2619, 0.62 ) }
    dend_22 { pt3dadd( 89.2423, -194.405, -102.327, 0.31 ) }
    dend_22 { pt3dadd( 89.6672, -198.515, -104.448, 0.31 ) }
    dend_22 { pt3dadd( 89.8466, -200.297, -105.324, 0.93 ) }
    dend_22 { pt3dadd( 90.3114, -205.193, -107.565, 0.31 ) }
    dend_22 { pt3dadd( 90.5195, -207.005, -108.402, 0.62 ) }
    dend_22 { pt3dadd( 90.7319, -208.404, -109.032, 0.62 ) }
    dend_22 { pt3dadd( 91.2975, -211.49, -110.324, 0.31 ) }
    dend_22 { pt3dadd( 91.77, -213.645, -111.428, 0.62 ) }
    dend_22 { pt3dadd( 92.6419, -217.287, -113.552, 0.31 ) }
    dend_22 { pt3dadd( 93.4443, -220.688, -115.748, 1.24 ) }
    dend_22 { pt3dadd( 94.0722, -223.522, -117.97, 0.31 ) }
    dend_22 { pt3dadd( 94.4682, -225.525, -119.678, 0.62 ) }
    dend_22 { pt3dadd( 95.5695, -231.475, -125.04, 0.31 ) }
    dend_22 { pt3dadd( 96.0412, -234.406, -127.675, 0.31 ) }
    dend_22 { pt3dadd( 96.3047, -236.457, -129.464, 0.93 ) }
    dend_22 { pt3dadd( 96.8912, -242.523, -134.441, 0.31 ) }
    dend_22 { pt3dadd( 97.1035, -245.219, -136.584, 0.31 ) }
    dend_22 { pt3dadd( 97.2738, -247.416, -138.187, 0.93 ) }
    dend_22 { pt3dadd( 97.4162, -249.904, -139.777, 0.31 ) }
    dend_22 { pt3dadd( 97.4844, -251.394, -140.783, 0.62 ) }
    dend_22 { pt3dadd( 97.5749, -253.8, -142.367, 0.31 ) }
    dend_22 { pt3dadd( 97.5933, -255.025, -143.008, 0.93 ) }
    dend_22 { pt3dadd( 97.5586, -259.169, -144.938, 0.62 ) }
    dend_22 { pt3dadd( 97.5344, -262.989, -146.314, 1.24 ) }
    dend_22 { pt3dadd( 97.5924, -267.163, -147.394, 0.31 ) }
    dend_22 { pt3dadd( 97.6226, -268.992, -147.69, 0.62 ) }
    dend_22 { pt3dadd( 97.7429, -275.542, -148.107, 0.31 ) }
    dend_22 { pt3dadd( 97.8847, -278.583, -148.087, 0.62 ) }
    dend_22 { pt3dadd( 98.2839, -283.257, -147.756, 0.31 ) }
    dend_22 { pt3dadd( 98.6484, -286.02, -147.475, 0.62 ) }
    dend_22 { pt3dadd( 98.9828, -288.053, -147.279, 0.62 ) }
    dend_22 { pt3dadd( 99.5533, -291.417, -147.225, 0.31 ) }
    dend_22 { pt3dadd( 100.0, -294.129, -147.473, 0.31 ) }
    dend_22 { pt3dadd( 100.212, -296.099, -147.776, 0.62 ) }
    dend_22 { pt3dadd( 100.574, -300.684, -148.595, 0.31 ) }
    dend_22 { pt3dadd( 100.636, -301.628, -148.797, 0.93 ) }
    dend_22 { pt3dadd( 100.784, -305.18, -149.693, 0.31 ) }
    dend_22 { pt3dadd( 100.664, -306.787, -150.213, 0.62 ) }
    dend_22 { pt3dadd( 99.3193, -311.263, -151.974, 0.31 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 77/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 81.9184, -136.932, -80.8993, 0.62 ) }
    dend_19 { pt3dadd( 85.0587, -140.298, -86.4498, 0.62 ) }
    dend_19 { pt3dadd( 86.4577, -141.919, -89.0296, 0.62 ) }
    dend_19 { pt3dadd( 87.3654, -143.111, -90.6965, 0.62 ) }
    dend_19 { pt3dadd( 89.1587, -145.793, -94.0847, 0.93 ) }
    dend_19 { pt3dadd( 90.1231, -147.282, -95.8725, 0.62 ) }
    dend_19 { pt3dadd( 91.7262, -149.81, -98.855, 0.31 ) }
    dend_19 { pt3dadd( 92.3148, -150.811, -99.9046, 0.62 ) }
    dend_19 { pt3dadd( 93.4231, -152.557, -101.766, 0.62 ) }
    dend_19 { pt3dadd( 94.0165, -153.366, -102.608, 0.62 ) }
    dend_19 { pt3dadd( 96.0317, -155.945, -104.986, 0.62 ) }
    dend_19 { pt3dadd( 97.6034, -157.741, -106.69, 0.62 ) }
    dend_19 { pt3dadd( 98.7189, -158.979, -108.085, 1.24 ) }
    dend_19 { pt3dadd( 100.691, -161.058, -110.602, 1.24 ) }
    dend_19 { pt3dadd( 104.185, -164.533, -115.116, 0.62 ) }
    dend_19 { pt3dadd( 105.527, -165.839, -116.853, 0.62 ) }
    dend_19 { pt3dadd( 107.26, -167.602, -119.185, 0.93 ) }
    dend_19 { pt3dadd( 111.793, -172.294, -125.597, 1.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 95/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -43.177, -81.5172, 18.8418, 0.62 ) }
    dend_16 { pt3dadd( -46.9978, -85.6587, 15.2863, 0.62 ) }
    dend_16 { pt3dadd( -49.0083, -87.8378, 13.4155, 0.62 ) }
    dend_16 { pt3dadd( -54.1979, -94.2495, 7.76229, 0.62 ) }
    dend_16 { pt3dadd( -59.3851, -101.372, 3.03271, 0.62 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -63.6607, -107.999, -3.11599, 0.62 ) }
    dend_16 { pt3dadd( -66.9268, -114.418, -10.0534, 0.62 ) }
    dend_16 { pt3dadd( -69.2881, -120.417, -17.6976, 0.62 ) }
    dend_16 { pt3dadd( -70.7667, -127.136, -24.9546, 0.62 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 4/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -43.177, -81.5172, 18.8418, 0.93 ) }
    dend_15 { pt3dadd( -45.5176, -84.5154, 17.1192, 0.93 ) }
    dend_15 { pt3dadd( -46.7615, -85.9794, 16.3187, 0.31 ) }
    dend_15 { pt3dadd( -47.3118, -86.631, 16.0204, 0.62 ) }
    dend_15 { pt3dadd( -48.8612, -88.4655, 15.1806, 0.31 ) }
    dend_15 { pt3dadd( -50.8922, -90.8701, 14.0798, 0.62 ) }
    dend_15 { pt3dadd( -54.5915, -95.2501, 12.0747, 0.62 ) }
    dend_15 { pt3dadd( -57.3318, -98.695, 10.31, 0.62 ) }
    dend_15 { pt3dadd( -60.2115, -102.085, 8.48016, 0.62 ) }
    dend_15 { pt3dadd( -65.0797, -110.276, 5.44588, 0.62 ) }
    dend_15 { pt3dadd( -71.204, -116.943, 1.19807, 0.62 ) }
    dend_15 { pt3dadd( -77.8363, -124.254, -0.402229, 0.62 ) }
    dend_15 { pt3dadd( -85.1825, -130.907, -1.73498, 0.62 ) }
    dend_15 { pt3dadd( -92.3046, -137.781, -3.15734, 0.62 ) }
    dend_15 { pt3dadd( -100.349, -143.57, -4.48909, 0.62 ) }
    dend_15 { pt3dadd( -109.088, -147.888, -6.72074, 0.62 ) }
    dend_15 { pt3dadd( -117.603, -151.086, -10.8765, 0.62 ) }
    dend_15 { pt3dadd( -125.159, -155.432, -15.7771, 0.62 ) }
    dend_15 { pt3dadd( -132.627, -158.528, -21.6633, 0.62 ) }
    dend_15 { pt3dadd( -140.015, -161.117, -27.8853, 0.62 ) }
    // Section: dend_11, id: dend_11, parent: dend_3 (entry count 24/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 2.94914, -44.0426, -2.07535, 0.93 ) }
    dend_11 { pt3dadd( 4.03864, -46.6606, 3.82393, 0.93 ) }
    dend_11 { pt3dadd( 4.40957, -47.552, 5.83242, 0.93 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 27/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 2.94914, -44.0426, -2.07535, 0.93 ) }
    dend_4 { pt3dadd( 2.95781, -47.3619, -4.41666, 0.93 ) }
    dend_4 { pt3dadd( 2.78257, -51.6837, -7.45248, 1.24 ) }
    dend_4 { pt3dadd( 2.56754, -55.5887, -9.96317, 1.24 ) }
    dend_4 { pt3dadd( 2.32503, -58.4651, -11.6342, 0.93 ) }
    dend_4 { pt3dadd( 2.04378, -60.991, -12.9812, 0.93 ) }
    dend_4 { pt3dadd( 1.65964, -64.2337, -14.5844, 1.24 ) }
    dend_4 { pt3dadd( 1.16718, -68.1545, -16.324, 0.93 ) }
    dend_4 { pt3dadd( 0.633258, -71.3639, -17.502, 0.93 ) }
    dend_4 { pt3dadd( 0.166018, -74.3326, -18.2229, 0.93 ) }
    dend_4 { pt3dadd( -0.108053, -76.2606, -18.5392, 0.93 ) }
    dend_4 { pt3dadd( -0.493965, -78.7553, -18.8088, 0.93 ) }
    dend_4 { pt3dadd( -0.846754, -81.5842, -18.9202, 0.93 ) }
    dend_4 { pt3dadd( -1.00464, -83.6446, -19.0414, 1.24 ) }
    dend_4 { pt3dadd( -1.09291, -85.515, -19.2064, 1.24 ) }
    dend_4 { pt3dadd( -1.14082, -87.7515, -19.437, 0.93 ) }
    dend_4 { pt3dadd( -1.12046, -90.9103, -19.7575, 0.93 ) }
    dend_4 { pt3dadd( -1.07972, -93.9813, -20.0476, 1.24 ) }
    dend_4 { pt3dadd( -0.976329, -98.4104, -20.4558, 0.93 ) }
    dend_4 { pt3dadd( -0.909269, -101.558, -20.7278, 0.93 ) }
    dend_4 { pt3dadd( -0.85535, -105.749, -21.0582, 0.93 ) }
    dend_4 { pt3dadd( -0.804128, -112.213, -21.5018, 0.93 ) }
    dend_4 { pt3dadd( -0.753949, -116.318, -21.7445, 1.24 ) }
    dend_4 { pt3dadd( -0.753044, -118.5, -21.8292, 0.93 ) }
    dend_4 { pt3dadd( -0.770957, -120.737, -21.8209, 1.24 ) }
    dend_4 { pt3dadd( -0.800598, -122.986, -21.8304, 0.93 ) }
    dend_4 { pt3dadd( -0.865699, -125.339, -21.8437, 1.24 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 54/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 111.793, -172.294, -125.597, 0.31 ) }
    dend_21 { pt3dadd( 113.552, -172.915, -125.586, 0.31 ) }
    dend_21 { pt3dadd( 115.609, -173.645, -125.576, 0.31 ) }
    dend_21 { pt3dadd( 116.451, -173.871, -125.626, 0.62 ) }
    dend_21 { pt3dadd( 118.297, -174.238, -125.807, 0.31 ) }
    dend_21 { pt3dadd( 119.201, -174.417, -125.896, 0.62 ) }
    dend_21 { pt3dadd( 122.319, -175.037, -126.201, 0.31 ) }
    dend_21 { pt3dadd( 122.627, -175.098, -126.239, 0.62 ) }
    dend_21 { pt3dadd( 125.668, -175.488, -126.699, 0.31 ) }
    dend_21 { pt3dadd( 126.968, -175.597, -126.929, 0.62 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 64/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 111.793, -172.294, -125.597, 0.62 ) }
    dend_20 { pt3dadd( 113.228, -174.926, -128.33, 0.62 ) }
    dend_20 { pt3dadd( 113.585, -175.564, -128.996, 0.93 ) }
    dend_20 { pt3dadd( 115.795, -179.357, -133.639, 0.62 ) }
    dend_20 { pt3dadd( 116.721, -180.939, -135.586, 0.93 ) }
    dend_20 { pt3dadd( 118.774, -184.021, -139.495, 0.62 ) }
    dend_20 { pt3dadd( 120.771, -186.828, -143.073, 0.62 ) }
    dend_20 { pt3dadd( 121.68, -187.957, -144.714, 0.62 ) }
    dend_20 { pt3dadd( 124.533, -191.565, -150.296, 0.62 ) }
    dend_20 { pt3dadd( 125.526, -192.828, -152.273, 0.93 ) }
    dend_20 { pt3dadd( 128.535, -197.246, -158.791, 0.31 ) }
    dend_20 { pt3dadd( 128.809, -197.736, -159.46, 0.62 ) }
    dend_20 { pt3dadd( 130.599, -201.739, -164.186, 0.62 ) }
    dend_20 { pt3dadd( 132.453, -206.781, -169.83, 0.62 ) }
    dend_20 { pt3dadd( 132.906, -208.328, -171.401, 0.62 ) }
    dend_20 { pt3dadd( 133.529, -211.403, -174.337, 0.31 ) }
    dend_20 { pt3dadd( 133.863, -214.551, -176.994, 0.93 ) }
    dend_20 { pt3dadd( 134.236, -219.217, -180.655, 0.93 ) }
    dend_20 { pt3dadd( 134.534, -224.446, -184.235, 0.31 ) }
    dend_20 { pt3dadd( 134.586, -225.275, -184.802, 0.62 ) }
    dend_20 { pt3dadd( 134.733, -228.173, -186.941, 0.31 ) }
    dend_20 { pt3dadd( 134.779, -228.909, -187.52, 0.62 ) }
    dend_20 { pt3dadd( 135.021, -233.68, -191.145, 0.31 ) }
    dend_20 { pt3dadd( 135.025, -234.666, -191.949, 0.31 ) }
    dend_20 { pt3dadd( 134.88, -237.89, -194.206, 0.31 ) }
    dend_20 { pt3dadd( 134.857, -238.431, -194.628, 0.62 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 90/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 4.40957, -47.552, 5.83242, 0.93 ) }
    dend_13 { pt3dadd( 6.52688, -48.7428, 7.0304, 0.93 ) }
    dend_13 { pt3dadd( 8.74018, -50.1098, 8.30058, 0.93 ) }
    dend_13 { pt3dadd( 10.2395, -51.0841, 9.1374, 0.93 ) }
    dend_13 { pt3dadd( 14.6197, -54.1744, 12.0079, 0.93 ) }
    dend_13 { pt3dadd( 16.8074, -55.744, 13.4946, 0.93 ) }
    dend_13 { pt3dadd( 18.6381, -57.1317, 14.7789, 0.93 ) }
    dend_13 { pt3dadd( 20.0399, -58.2836, 15.841, 0.93 ) }
    dend_13 { pt3dadd( 21.7061, -59.947, 17.1385, 0.93 ) }
    dend_13 { pt3dadd( 24.3462, -63.1376, 19.0375, 0.62 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_13 { pt3dadd( 25.4774, -64.767, 19.6529, 0.62 ) }
    dend_13 { pt3dadd( 26.269, -66.027, 20.0613, 0.62 ) }
    dend_13 { pt3dadd( 27.3349, -67.929, 20.5171, 0.62 ) }
    dend_13 { pt3dadd( 29.67, -72.2372, 21.3899, 0.62 ) }
    dend_13 { pt3dadd( 30.8843, -74.5891, 21.7605, 0.62 ) }
    dend_13 { pt3dadd( 32.9565, -78.6611, 22.1744, 0.62 ) }
    dend_13 { pt3dadd( 35.0624, -82.9341, 22.6386, 0.93 ) }
    dend_13 { pt3dadd( 37.7299, -88.1201, 23.2562, 0.62 ) }
    dend_13 { pt3dadd( 45.0702, -94.7004, 24.9354, 0.62 ) }
    dend_13 { pt3dadd( 53.7048, -99.6352, 25.98, 0.62 ) }
    dend_13 { pt3dadd( 62.2492, -104.532, 27.7189, 0.62 ) }
    dend_13 { pt3dadd( 71.3371, -108.574, 28.7505, 0.62 ) }
    dend_13 { pt3dadd( 80.805, -111.084, 30.7663, 0.62 ) }
    dend_13 { pt3dadd( 89.8804, -113.099, 34.4504, 0.62 ) }
    dend_13 { pt3dadd( 98.8866, -113.341, 38.7899, 0.62 ) }
    dend_13 { pt3dadd( 107.212, -112.077, 44.1828, 0.62 ) }
    dend_13 { pt3dadd( 114.998, -112.151, 50.4576, 0.62 ) }
    dend_13 { pt3dadd( 122.904, -113.825, 56.3473, 0.62 ) }
    dend_13 { pt3dadd( 130.46, -116.339, 62.3966, 0.62 ) }
    dend_13 { pt3dadd( 138.197, -120.318, 67.3265, 0.62 ) }
    dend_13 { pt3dadd( 145.594, -124.138, 72.8676, 0.62 ) }
    dend_13 { pt3dadd( 152.239, -127.856, 79.3495, 0.62 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 22/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 4.40957, -47.552, 5.83242, 0.93 ) }
    dend_12 { pt3dadd( 5.32187, -48.2104, 8.83777, 0.93 ) }
    dend_12 { pt3dadd( 5.84544, -48.5416, 10.2937, 0.93 ) }
    dend_12 { pt3dadd( 7.71135, -49.722, 15.4823, 0.93 ) }
    dend_12 { pt3dadd( 9.01646, -50.5476, 19.1115, 0.93 ) }
    dend_12 { pt3dadd( 10.976, -51.7872, 24.5604, 0.93 ) }
    dend_12 { pt3dadd( 11.8797, -52.3589, 27.0733, 0.93 ) }
    dend_12 { pt3dadd( 13.2688, -53.0782, 30.8505, 0.62 ) }
    dend_12 { pt3dadd( 15.9659, -54.1191, 40.4235, 0.62 ) }
    dend_12 { pt3dadd( 17.7234, -56.6003, 49.95, 0.62 ) }
    dend_12 { pt3dadd( 18.9174, -59.7842, 59.3541, 0.62 ) }
    dend_12 { pt3dadd( 18.6412, -62.7154, 68.9109, 0.62 ) }
    dend_12 { pt3dadd( 20.1876, -65.0244, 78.517, 0.62 ) }
    dend_12 { pt3dadd( 21.3057, -68.4485, 87.8457, 0.62 ) }
    dend_12 { pt3dadd( 21.3899, -72.6756, 96.908, 0.62 ) }
    dend_12 { pt3dadd( 22.4727, -77.4791, 105.612, 0.62 ) }
    dend_12 { pt3dadd( 25.0006, -83.3151, 113.329, 0.62 ) }
    dend_12 { pt3dadd( 26.5083, -88.0463, 122.009, 0.62 ) }
    dend_12 { pt3dadd( 29.5477, -91.7797, 130.774, 0.62 ) }
    dend_12 { pt3dadd( 31.4791, -96.2506, 139.508, 0.62 ) }
    dend_12 { pt3dadd( 32.1582, -100.436, 148.564, 0.62 ) }
    dend_12 { pt3dadd( 33.8954, -106.563, 156.274, 0.62 ) }
    dend_12 { pt3dadd( 34.6006, -112.397, 164.366, 0.62 ) }
    dend_12 { pt3dadd( 33.2355, -117.898, 172.604, 0.62 ) }
    // Section: dend_8, id: dend_8, parent: dend_4 (entry count 46/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -0.865699, -125.339, -21.8437, 0.93 ) }
    dend_8 { pt3dadd( -3.23137, -126.664, -22.5484, 0.93 ) }
    dend_8 { pt3dadd( -7.75855, -129.231, -24.3314, 0.93 ) }
    dend_8 { pt3dadd( -11.7482, -131.371, -26.0302, 0.93 ) }
    dend_8 { pt3dadd( -15.441, -133.249, -27.5537, 0.93 ) }
    dend_8 { pt3dadd( -18.1124, -134.559, -28.6718, 0.93 ) }
    dend_8 { pt3dadd( -20.0004, -135.469, -29.4751, 0.93 ) }
    dend_8 { pt3dadd( -23.5173, -137.139, -31.09, 0.62 ) }
    dend_8 { pt3dadd( -25.2579, -137.917, -31.9063, 0.62 ) }
    dend_8 { pt3dadd( -29.8428, -139.868, -34.0804, 0.93 ) }
    dend_8 { pt3dadd( -33.6367, -141.476, -35.7595, 0.93 ) }
    dend_8 { pt3dadd( -37.5624, -143.179, -37.4306, 0.93 ) }
    dend_8 { pt3dadd( -42.7704, -145.576, -39.773, 0.93 ) }
    dend_8 { pt3dadd( -44.5876, -146.455, -40.5929, 0.93 ) }
    dend_8 { pt3dadd( -48.7999, -148.605, -42.5411, 0.93 ) }
    dend_8 { pt3dadd( -51.5524, -150.099, -43.8957, 0.93 ) }
    dend_8 { pt3dadd( -55.8589, -152.469, -45.849, 0.93 ) }
    dend_8 { pt3dadd( -60.0128, -154.77, -47.5018, 0.93 ) }
    dend_8 { pt3dadd( -62.9317, -156.442, -48.4868, 0.62 ) }
    dend_8 { pt3dadd( -66.059, -158.278, -49.4331, 0.62 ) }
    dend_8 { pt3dadd( -70.0686, -160.631, -50.4058, 0.62 ) }
    dend_8 { pt3dadd( -73.2399, -162.455, -51.0628, 0.62 ) }
    dend_8 { pt3dadd( -78.0573, -165.026, -51.7545, 0.62 ) }
    dend_8 { pt3dadd( -81.0286, -166.529, -52.139, 0.31 ) }
    dend_8 { pt3dadd( -83.4562, -167.729, -52.4895, 0.62 ) }
    dend_8 { pt3dadd( -85.4126, -168.696, -52.774, 0.31 ) }
    dend_8 { pt3dadd( -87.3813, -169.613, -53.044, 0.62 ) }
    dend_8 { pt3dadd( -89.2954, -170.57, -53.5324, 0.31 ) }
    dend_8 { pt3dadd( -92.5663, -172.027, -54.6134, 0.93 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 75/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -0.865699, -125.339, -21.8437, 0.93 ) }
    dend_5 { pt3dadd( -0.54347, -128.225, -21.8294, 0.93 ) }
    dend_5 { pt3dadd( -0.203824, -131.643, -21.8042, 0.93 ) }
    dend_5 { pt3dadd( 0.156773, -136.519, -21.8183, 0.93 ) }
    dend_5 { pt3dadd( 0.273058, -138.579, -22.1087, 0.93 ) }
    dend_5 { pt3dadd( 0.432012, -142.073, -22.7704, 0.93 ) }
    dend_5 { pt3dadd( 0.48327, -145.461, -23.5543, 0.93 ) }
    dend_5 { pt3dadd( 0.442234, -151.434, -25.2097, 0.93 ) }
    dend_5 { pt3dadd( 0.373863, -154.118, -26.0456, 0.93 ) }
    dend_5 { pt3dadd( -0.170267, -163.173, -28.948, 0.93 ) }
    dend_5 { pt3dadd( -0.48069, -168.261, -30.5462, 0.93 ) }
    dend_5 { pt3dadd( -0.778555, -173.271, -32.0498, 0.93 ) }
    dend_5 { pt3dadd( -0.941039, -175.529, -32.6702, 0.93 ) }
    dend_5 { pt3dadd( -1.39771, -182.037, -34.2111, 0.93 ) }
    dend_5 { pt3dadd( -1.76814, -188.425, -35.4596, 0.93 ) }
    dend_5 { pt3dadd( -1.89516, -191.174, -35.8558, 0.93 ) }
    dend_5 { pt3dadd( -2.03485, -195.471, -36.5568, 0.93 ) }
    dend_5 { pt3dadd( -2.04719, -198.813, -37.1315, 0.93 ) }
    dend_5 { pt3dadd( -2.03144, -203.402, -38.0394, 0.93 ) }
    dend_5 { pt3dadd( -1.90127, -207.892, -39.0046, 0.93 ) }
    dend_5 { pt3dadd( -1.73118, -210.817, -39.7487, 0.93 ) }
    dend_5 { pt3dadd( -1.60487, -213.358, -40.478, 0.93 ) }
    dend_5 { pt3dadd( -1.35376, -219.057, -42.3673, 0.93 ) }
    dend_5 { pt3dadd( -1.26287, -221.79, -43.3771, 1.24 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 99/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -92.5663, -172.027, -54.6134, 0.62 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_10 { pt3dadd( -94.6262, -171.755, -56.0549, 0.62 ) }
    dend_10 { pt3dadd( -96.1621, -171.506, -57.4307, 0.62 ) }
    dend_10 { pt3dadd( -99.3436, -170.99, -60.2806, 0.31 ) }
    dend_10 { pt3dadd( -101.95, -170.568, -62.6151, 0.62 ) }
    dend_10 { pt3dadd( -104.254, -170.194, -64.6784, 0.31 ) }
    dend_10 { pt3dadd( -107.83, -169.615, -67.8824, 0.62 ) }
    dend_10 { pt3dadd( -111.741, -168.846, -71.8858, 0.62 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 7/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -92.5663, -172.027, -54.6134, 0.62 ) }
    dend_9 { pt3dadd( -96.9383, -174.957, -55.6627, 0.62 ) }
    dend_9 { pt3dadd( -102.987, -179.26, -57.4369, 0.62 ) }
    dend_9 { pt3dadd( -107.195, -182.354, -58.7572, 0.62 ) }
    dend_9 { pt3dadd( -110.864, -185.101, -59.9423, 0.62 ) }
    dend_9 { pt3dadd( -117.954, -190.401, -62.263, 0.31 ) }
    dend_9 { pt3dadd( -123.342, -194.514, -64.0989, 0.31 ) }
    dend_9 { pt3dadd( -125.059, -195.853, -64.7792, 0.62 ) }
    dend_9 { pt3dadd( -127.082, -197.503, -65.7391, 0.62 ) }
    dend_9 { pt3dadd( -128.778, -198.936, -66.6182, 0.31 ) }
    dend_9 { pt3dadd( -130.54, -200.468, -67.7091, 0.62 ) }
    dend_9 { pt3dadd( -134.164, -203.742, -70.1463, 0.31 ) }
    dend_9 { pt3dadd( -135.343, -204.782, -70.9628, 0.62 ) }
    dend_9 { pt3dadd( -137.811, -206.901, -72.8619, 0.31 ) }
    dend_9 { pt3dadd( -139.6, -208.496, -74.367, 0.62 ) }
    dend_9 { pt3dadd( -144.483, -212.842, -78.5748, 0.31 ) }
    dend_9 { pt3dadd( -145.969, -214.134, -79.8692, 0.62 ) }
    dend_9 { pt3dadd( -147.124, -215.12, -80.8593, 0.62 ) }
    dend_9 { pt3dadd( -150.178, -217.836, -83.0216, 0.31 ) }
    dend_9 { pt3dadd( -152.256, -219.77, -84.288, 0.62 ) }
    dend_9 { pt3dadd( -154.741, -222.147, -85.5755, 0.31 ) }
    dend_9 { pt3dadd( -156.455, -223.755, -86.2569, 0.62 ) }
    dend_9 { pt3dadd( -158.212, -225.444, -87.0247, 0.62 ) }
    dend_9 { pt3dadd( -165.449, -232.352, -90.1971, 0.31 ) }
    dend_9 { pt3dadd( -166.883, -233.694, -90.7514, 0.62 ) }
    dend_9 { pt3dadd( -169.43, -235.968, -91.6742, 0.31 ) }
    dend_9 { pt3dadd( -170.873, -237.207, -92.1538, 0.62 ) }
    dend_9 { pt3dadd( -174.632, -240.243, -93.2567, 0.31 ) }
    dend_9 { pt3dadd( -176.858, -241.935, -93.8637, 0.31 ) }
    dend_9 { pt3dadd( -182.077, -245.72, -95.1895, 0.62 ) }
    dend_9 { pt3dadd( -185.019, -247.847, -95.7595, 0.31 ) }
    dend_9 { pt3dadd( -186.518, -248.932, -95.9732, 0.62 ) }
    dend_9 { pt3dadd( -188.885, -250.665, -96.1922, 0.31 ) }
    dend_9 { pt3dadd( -190.392, -251.789, -96.2222, 0.31 ) }
    dend_9 { pt3dadd( -192.727, -253.628, -96.3667, 0.62 ) }
    dend_9 { pt3dadd( -195.275, -255.797, -96.667, 0.31 ) }
    dend_9 { pt3dadd( -196.284, -256.606, -96.8482, 0.93 ) }
    dend_9 { pt3dadd( -198.067, -258.117, -97.1947, 0.31 ) }
    dend_9 { pt3dadd( -198.927, -258.823, -97.3504, 0.62 ) }
    dend_9 { pt3dadd( -202.308, -261.489, -97.9991, 0.31 ) }
    dend_9 { pt3dadd( -204.189, -263.004, -98.3664, 0.62 ) }
    dend_9 { pt3dadd( -208.9, -266.923, -99.3133, 0.31 ) }
    dend_9 { pt3dadd( -216.017, -272.945, -100.691, 0.31 ) }
    dend_9 { pt3dadd( -220.657, -276.939, -101.554, 0.62 ) }
    dend_9 { pt3dadd( -225.107, -280.931, -102.309, 0.62 ) }
    dend_9 { pt3dadd( -227.777, -283.499, -102.695, 0.31 ) }
    dend_9 { pt3dadd( -229.17, -284.926, -102.877, 0.62 ) }
    dend_9 { pt3dadd( -230.677, -286.73, -103.043, 0.31 ) }
    dend_9 { pt3dadd( -231.338, -287.637, -103.118, 0.62 ) }
    dend_9 { pt3dadd( -233.616, -291.461, -103.296, 0.31 ) }
    dend_9 { pt3dadd( -235.068, -294.199, -103.309, 0.31 ) }
    dend_9 { pt3dadd( -236.175, -296.331, -103.31, 0.93 ) }
    dend_9 { pt3dadd( -237.967, -299.619, -103.285, 0.31 ) }
    dend_9 { pt3dadd( -239.588, -302.534, -103.153, 0.62 ) }
    dend_9 { pt3dadd( -240.591, -304.235, -103.012, 0.62 ) }
    dend_9 { pt3dadd( -242.024, -306.419, -102.719, 0.93 ) }
    dend_9 { pt3dadd( -244.053, -309.269, -102.248, 0.31 ) }
    dend_9 { pt3dadd( -245.787, -311.428, -101.711, 0.93 ) }
    dend_9 { pt3dadd( -248.122, -313.865, -100.881, 0.31 ) }
    dend_9 { pt3dadd( -249.23, -314.899, -100.462, 0.62 ) }
    dend_9 { pt3dadd( -250.852, -316.373, -99.8186, 0.62 ) }
    dend_9 { pt3dadd( -253.828, -319.038, -98.5599, 0.62 ) }
    dend_9 { pt3dadd( -257.175, -321.937, -97.1179, 0.31 ) }
    dend_9 { pt3dadd( -259.454, -323.933, -96.1542, 0.31 ) }
    dend_9 { pt3dadd( -260.792, -325.048, -95.6524, 0.93 ) }
    dend_9 { pt3dadd( -262.857, -326.778, -94.8421, 0.31 ) }
    dend_9 { pt3dadd( -264.196, -327.944, -94.2741, 0.62 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 74/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -1.26287, -221.79, -43.3771, 0.62 ) }
    dend_7 { pt3dadd( 1.22359, -225.289, -45.3038, 0.62 ) }
    dend_7 { pt3dadd( 3.76836, -228.744, -47.359, 0.31 ) }
    dend_7 { pt3dadd( 4.58928, -229.859, -48.0398, 0.62 ) }
    dend_7 { pt3dadd( 6.73737, -232.789, -49.8717, 0.31 ) }
    dend_7 { pt3dadd( 8.72215, -235.547, -51.563, 0.31 ) }
    dend_7 { pt3dadd( 10.4814, -238.091, -53.0449, 0.31 ) }
    dend_7 { pt3dadd( 12.2744, -240.935, -54.6456, 0.31 ) }
    dend_7 { pt3dadd( 13.0209, -242.333, -55.2992, 0.31 ) }
    dend_7 { pt3dadd( 13.7572, -244.058, -56.0079, 0.93 ) }
    dend_7 { pt3dadd( 14.483, -246.365, -56.9012, 0.62 ) }
    dend_7 { pt3dadd( 14.8463, -248.592, -57.9174, 0.62 ) }
    dend_7 { pt3dadd( 14.9234, -250.472, -58.8449, 0.62 ) }
    dend_7 { pt3dadd( 14.882, -253.082, -60.1895, 0.31 ) }
    dend_7 { pt3dadd( 14.7515, -256.454, -61.9991, 0.31 ) }
    dend_7 { pt3dadd( 14.6276, -259.654, -63.6597, 0.62 ) }
    dend_7 { pt3dadd( 14.4593, -265.233, -66.3385, 0.31 ) }
    dend_7 { pt3dadd( 14.4117, -267.018, -67.1422, 0.62 ) }
    dend_7 { pt3dadd( 14.4238, -269.49, -68.1207, 0.31 ) }
    dend_7 { pt3dadd( 14.5115, -273.071, -69.3462, 0.62 ) }
    dend_7 { pt3dadd( 14.7404, -277.848, -70.5409, 0.31 ) }
    dend_7 { pt3dadd( 15.0663, -282.812, -71.2828, 0.31 ) }
    dend_7 { pt3dadd( 15.2504, -284.363, -71.3839, 0.62 ) }
    dend_7 { pt3dadd( 15.8038, -288.14, -71.5318, 0.31 ) }
    dend_7 { pt3dadd( 16.0564, -289.669, -71.5648, 0.62 ) }
    dend_7 { pt3dadd( 17.1267, -294.817, -71.6462, 0.31 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_7 { pt3dadd( 17.5119, -296.339, -71.6692, 0.62 ) }
    dend_7 { pt3dadd( 19.7149, -303.425, -71.7894, 0.31 ) }
    dend_7 { pt3dadd( 20.6532, -306.04, -71.8338, 0.31 ) }
    dend_7 { pt3dadd( 21.3449, -307.762, -71.8647, 0.62 ) }
    dend_7 { pt3dadd( 22.481, -310.19, -71.9067, 0.31 ) }
    dend_7 { pt3dadd( 22.9371, -311.065, -71.9213, 0.62 ) }
    dend_7 { pt3dadd( 24.944, -314.674, -71.9892, 0.31 ) }
    dend_7 { pt3dadd( 25.7446, -316.002, -72.0201, 0.62 ) }
    dend_7 { pt3dadd( 27.042, -317.954, -72.0638, 0.31 ) }
    dend_7 { pt3dadd( 27.6879, -318.884, -72.0786, 0.62 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 10/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -1.26287, -221.79, -43.3771, 0.93 ) }
    dend_6 { pt3dadd( -2.69545, -225.162, -46.2853, 0.93 ) }
    dend_6 { pt3dadd( -4.19216, -229.337, -49.2778, 0.93 ) }
    dend_6 { pt3dadd( -4.97871, -231.531, -50.6559, 0.93 ) }
    dend_6 { pt3dadd( -6.4915, -236.049, -53.1169, 0.93 ) }
    dend_6 { pt3dadd( -7.80315, -240.029, -55.0542, 0.62 ) }
    dend_6 { pt3dadd( -9.07239, -244.2, -56.8769, 0.62 ) }
    dend_6 { pt3dadd( -10.1124, -248.295, -58.2625, 0.62 ) }
    dend_6 { pt3dadd( -10.8132, -251.664, -59.1844, 0.62 ) }
    dend_6 { pt3dadd( -11.5068, -255.913, -60.2074, 0.62 ) }
    dend_6 { pt3dadd( -11.8499, -259.404, -60.9042, 0.62 ) }
    dend_6 { pt3dadd( -12.1082, -263.33, -61.7719, 0.62 ) }
    dend_6 { pt3dadd( -12.1333, -265.364, -62.238, 0.62 ) }
    dend_6 { pt3dadd( -12.0338, -268.559, -62.9583, 0.93 ) }
    dend_6 { pt3dadd( -11.7522, -271.856, -63.7064, 0.62 ) }
    dend_6 { pt3dadd( -11.507, -273.979, -64.152, 0.93 ) }
    dend_6 { pt3dadd( -10.9172, -278.121, -64.9308, 0.62 ) }
    dend_6 { pt3dadd( -10.2453, -283.563, -65.7952, 0.31 ) }
    dend_6 { pt3dadd( -9.91373, -286.787, -66.183, 0.31 ) }
    dend_6 { pt3dadd( -9.77978, -288.69, -66.351, 0.62 ) }
    dend_6 { pt3dadd( -9.60762, -292.728, -66.5911, 0.31 ) }
    dend_6 { pt3dadd( -9.58975, -293.419, -66.6051, 0.62 ) }
    dend_6 { pt3dadd( -9.59389, -296.6, -66.5633, 0.31 ) }
    dend_6 { pt3dadd( -9.69386, -299.142, -66.5448, 0.93 ) }
    dend_6 { pt3dadd( -10.0017, -302.772, -66.5379, 0.62 ) }
    dend_6 { pt3dadd( -10.5954, -307.929, -66.5277, 0.31 ) }
    dend_6 { pt3dadd( -11.0972, -311.664, -66.7685, 0.62 ) }
    dend_6 { pt3dadd( -11.4265, -314.604, -67.1144, 0.62 ) }
    dend_6 { pt3dadd( -11.8952, -319.173, -67.7439, 0.31 ) }
    dend_6 { pt3dadd( -12.1619, -321.797, -68.1785, 0.31 ) }
    dend_6 { pt3dadd( -12.282, -323.066, -68.4516, 0.62 ) }
    dend_6 { pt3dadd( -12.7752, -328.671, -70.3272, 0.62 ) }
    dend_6 { pt3dadd( -12.9778, -331.244, -71.5889, 0.31 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_44, dend_37, dend_32, dend_27, dend_0, dend_50, dend_45, dend_39, dend_38, dend_36, dend_33, dend_31, dend_28, dend_24, dend_1, dend_49, dend_46, dend_43, dend_40, dend_35, dend_34, dend_30, dend_29, dend_26, dend_25, dend_17, dend_2, dend_48, dend_47, dend_42, dend_41, dend_23, dend_18, dend_14, dend_3, dend_22, dend_19, dend_16, dend_15, dend_11, dend_4, dend_21, dend_20, dend_13, dend_12, dend_8, dend_5, dend_10, dend_9, dend_7, dend_6]}
    ModelViewParmSubset_2 = new SectionList()
    dend_44 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_44, dend_37, dend_32, dend_27, dend_0, dend_50, dend_45, dend_39, dend_38, dend_36, dend_33, dend_31, dend_28, dend_24, dend_1, dend_49, dend_46, dend_43, dend_40, dend_35, dend_34, dend_30, dend_29, dend_26, dend_25, dend_17, dend_2, dend_48, dend_47, dend_42, dend_41, dend_23, dend_18, dend_14, dend_3, dend_22, dend_19, dend_16, dend_15, dend_11, dend_4, dend_21, dend_20, dend_13, dend_12, dend_8, dend_5, dend_10, dend_9, dend_7, dend_6]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_44, dend_37, dend_32, dend_27, dend_0, axon_0, dend_50, dend_45, dend_39, dend_38, dend_36, dend_33, dend_31, dend_28, dend_24, dend_1, axon_1, dend_49, dend_46, dend_43, dend_40, dend_35, dend_34, dend_30, dend_29, dend_26, dend_25, dend_17, dend_2, dend_48, dend_47, dend_42, dend_41, dend_23, dend_18, dend_14, dend_3, dend_22, dend_19, dend_16, dend_15, dend_11, dend_4, dend_21, dend_20, dend_13, dend_12, dend_8, dend_5, dend_10, dend_9, dend_7, dend_6]}
    ModelViewParmSubset_5 = new SectionList()
    dend_44 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_50 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_38 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_36 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_31 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_28 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_24 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_49 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_43 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_40 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_35 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_34 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_29 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_26 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_25 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_48 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_42 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_41 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_23 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_18 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_22 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_19 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_16 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_15 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_4 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_20 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_13 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_12 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_8 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_5 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_9 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_7 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_6 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_44 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_37 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_32 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_33 OneSecGrp_SectionRef_13.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_39 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_27 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_1 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_2 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_3 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_45 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_11 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_17 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_46 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_47 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_30 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_10 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_21 OneSecGrp_SectionRef_45.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_44, dend_44, dend_44, dend_44, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_1, dend_1, dend_1, axon_1, axon_1, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_3, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_2 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_3 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 7.43567E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_50 nseg = 11
    dend_38 nseg = 11
    dend_36 nseg = 7
    dend_31 nseg = 9
    dend_28 nseg = 5
    dend_24 nseg = 3
    dend_49 nseg = 5
    dend_43 nseg = 7
    dend_40 nseg = 3
    dend_35 nseg = 5
    dend_34 nseg = 7
    dend_29 nseg = 5
    dend_26 nseg = 13
    dend_25 nseg = 7
    dend_48 nseg = 9
    dend_42 nseg = 7
    dend_41 nseg = 7
    dend_23 nseg = 13
    dend_18 nseg = 7
    dend_14 nseg = 3
    dend_22 nseg = 9
    dend_19 nseg = 3
    dend_16 nseg = 3
    dend_15 nseg = 7
    dend_4 nseg = 5
    dend_20 nseg = 5
    dend_13 nseg = 9
    dend_12 nseg = 9
    dend_8 nseg = 5
    dend_5 nseg = 5
    dend_9 nseg = 13
    dend_7 nseg = 5
    dend_6 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cIR216_L6_MC_dc1f55aab0_0_0


