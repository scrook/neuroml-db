// Cell: cACint209_L1_NGCDA_79c9f5c53c_0_0
/*
{
  "id" : "cACint209_L1_NGCDA_79c9f5c53c_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-7.76078, 2.47809, 0.0, 2.50435", "-6.92396, 2.21021, 0.0, 4.05157", "-6.08714, 1.94233, 0.0, 5.83387", "-5.25032, 1.67445, 0.0, 7.52546", "-4.4135, 1.40658, 0.0, 8.92466", "-3.57668, 1.1387, 0.0, 11.3125", "-2.73986, 0.870821, 0.0, 13.2915", "-1.90304, 0.602943, 0.0, 14.2697", "-1.06622, 0.335065, 0.0, 14.7055", "-0.2294, 0.0671876, 0.0, 14.4406", "0.60742, -0.20069, 0.0, 13.9726", "1.44424, -0.468568, 0.0, 13.4671", "2.28106, -0.736446, 0.0, 12.9541", "3.11788, -1.00432, 0.0, 12.3444", "3.9547, -1.2722, 0.0, 11.7176", "4.79152, -1.54008, 0.0, 11.0567", "5.62834, -1.80796, 0.0, 10.3093", "6.46516, -2.07584, 0.0, 9.03836", "7.30198, -2.34371, 0.0, 7.21047", "8.1388, -2.61159, 0.0, 4.85049", "8.97562, -2.87947, 0.0, 2.73898" ]
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "6.37701, -2.96425, 12.36, 1.76", "6.35977, -2.53289, 13.654, 1.47", "6.34126, -2.07011, 15.0422, 1.47", "6.30842, -1.2488, 17.506, 1.69", "6.28164, -0.578904, 19.5156, 2.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999996699
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "7.07709, -5.80425, 6.45, 1.47", "8.03093, -6.51556, 7.91712, 1.47", "9.19456, -7.37098, 9.61175, 1.25", "10.4078, -8.19677, 11.1841, 1.25", "11.7393, -9.06524, 12.8252, 1.47", "13.5061, -10.1593, 14.8953, 0.95", "14.7778, -10.9335, 16.3198, 1.18", "16.3823, -11.8628, 18.0073, 1.62", "17.7903, -12.6212, 19.4245, 1.18", "19.1062, -13.3194, 20.6885, 1.25", "20.5646, -14.1112, 22.0117, 1.25", "22.6537, -15.2333, 23.7443, 1.76" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999996699
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "2.88702, -6.94425, 2.66, 1.4", "2.79314, -7.52548, 2.99433, 1.4", "2.61537, -8.62608, 3.62741, 1.03", "2.39205, -10.0087, 4.42273, 1.03", "2.24843, -10.8979, 4.93419, 1.03", "2.06261, -12.0483, 5.59594, 1.25", "1.91184, -12.9817, 6.13286, 1.91" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999996699
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "1.83697, 5.90575, -7.7, 0.95", "2.04314, 6.72343, -8.06325, 0.95", "2.51518, 8.6186, -8.90571, 0.95", "2.77105, 9.78416, -9.39834, 0.95", "3.02213, 11.1714, -9.97197, 0.95", "3.24017, 12.4815, -10.5351, 0.51", "3.47532, 13.9252, -11.2259, 0.51", "3.66073, 15.1255, -11.9035, 0.73", "3.77709, 15.9727, -12.4908, 0.44", "3.93609, 17.2476, -13.5502, 1.25", "4.0721, 18.4686, -14.6762, 1.25", "4.19774, 19.8836, -16.1363, 0.81", "4.33244, 21.3823, -17.8647, 1.18", "4.48691, 22.7386, -19.6131, 1.47", "4.60047, 23.4685, -20.6914, 1.69" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999996699
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "0.856998, 6.61575, -5.66, 3.53", "0.782391, 6.91731, -5.57618, 3.53", "0.533718, 7.92244, -5.29678, 3.53", "0.390994, 8.49933, -5.13642, 3.31" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999996699
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-8.31293, -1.52425, -3.49, 1.76", "-8.86777, -1.57452, -3.65575, 1.76", "-9.95311, -1.62964, -4.00291, 1.47", "-10.6896, -1.66704, -4.2385, 1.47", "-11.5692, -1.7117, -4.51987, 1.47", "-12.1218, -1.73976, -4.69662, 1.54", "-13.0671, -1.78776, -4.99899, 1.54", "-14.7125, -1.82109, -5.57216, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999996699
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "8.97562, -2.87947, 0.0, 0.536641", "23.2615, -7.45259, 0.0, 0.536641", "37.5474, -12.0257, 0.0, 0.536641" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_89",
    "id" : "dend_89",
    "points3d" : [ "6.28164, -0.578904, 19.5156, 1.1", "6.87863, -0.226878, 21.0756, 1.1", "7.58207, 0.187919, 22.9137, 1.1", "8.31067, 0.617554, 24.8175, 1.47", "8.36156, 0.647561, 24.9505, 1.47", "9.30122, 1.20165, 27.4059, 1.69" ],
    "parent" : "dend_81",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "6.28164, -0.578904, 19.5156, 1.25", "5.79756, -0.525391, 19.9001, 1.25", "4.64086, -0.39752, 20.8189, 1.03", "3.78758, -0.303193, 21.4967, 1.32", "3.2772, -0.246771, 21.9022, 1.54", "2.44818, -0.155126, 22.5607, 1.25" ],
    "parent" : "dend_81",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "22.6537, -15.2333, 23.7443, 1.4", "23.8481, -16.0875, 23.2221, 1.4", "25.807, -17.4885, 22.3659, 1.25", "27.6253, -18.789, 21.571, 1.4" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "22.6537, -15.2333, 23.7443, 0.88", "22.2343, -15.4107, 24.6675, 0.88", "21.7032, -15.6282, 25.7293, 0.88", "21.1413, -15.8443, 26.7354, 0.88", "20.2706, -16.1308, 28.0699, 0.88", "19.3275, -16.414, 29.3225, 0.59", "18.5235, -16.6426, 30.3063, 0.59", "17.9424, -16.7777, 30.9306, 0.59", "17.5103, -16.8593, 31.3388, 0.59", "16.7185, -16.9728, 32.0476, 0.73", "15.6278, -17.0841, 33.0454, 0.59", "14.7597, -17.1029, 33.8902, 0.95", "14.3044, -17.0776, 34.3934, 0.95", "12.986, -16.9112, 36.0661, 1.03", "12.2776, -16.7778, 37.1316, 0.51", "11.6993, -16.6216, 38.2216, 0.51", "11.3685, -16.4862, 39.0065, 0.59", "11.1772, -16.3943, 39.6244, 0.59", "11.1141, -16.3791, 39.9877, 0.59", "11.1411, -16.4636, 40.3719, 0.59", "11.3848, -17.0401, 41.0037, 0.59", "11.5873, -17.5925, 41.3237, 0.29", "11.8151, -18.3499, 41.6228, 0.29", "12.037, -19.1829, 41.9044, 0.29", "12.1409, -19.6502, 42.0483, 0.29", "12.2737, -20.3504, 42.232, 0.37", "12.3797, -20.9554, 42.3375, 0.15", "12.4671, -21.74, 42.4681, 0.37" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "1.91184, -12.9817, 6.13286, 1.18", "2.69965, -13.9963, 6.16833, 1.18", "3.49128, -14.9856, 6.21362, 0.88", "4.16538, -15.8355, 6.18502, 0.88", "4.5962, -16.3688, 6.17774, 0.88", "5.28903, -17.2163, 6.17579, 0.59", "6.55906, -18.744, 6.2965, 1.1", "7.64629, -20.0431, 6.60515, 0.51", "8.66764, -21.2366, 6.96836, 0.66", "9.44922, -22.1159, 7.2889, 0.66", "9.94784, -22.6614, 7.53186, 1.03", "11.3203, -24.1101, 8.40719, 1.47", "12.7408, -25.6189, 9.83235, 1.47" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "1.91184, -12.9817, 6.13286, 1.1", "1.27126, -13.2892, 6.48934, 1.1", "0.0214191, -13.8583, 6.94954, 1.25", "-0.205566, -13.9652, 7.013, 1.25", "-0.545929, -14.1338, 7.08876, 1.25", "-1.18194, -14.45, 7.20211, 1.18", "-1.84343, -14.7785, 7.32848, 1.18", "-2.80635, -15.2581, 7.38598, 1.25", "-3.64245, -15.6686, 7.33715, 0.88", "-4.47157, -16.0725, 7.24862, 0.88", "-5.4445, -16.544, 7.12756, 0.37", "-6.07254, -16.8527, 7.03046, 0.37", "-7.62148, -17.6303, 6.71591, 1.18", "-7.91113, -17.7755, 6.63093, 1.84", "-8.36691, -17.9861, 6.43068, 1.47" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "4.60047, 23.4685, -20.6914, 0.81", "4.77805, 24.1139, -21.1803, 0.81", "4.90788, 24.6381, -21.5358, 0.81", "5.21252, 25.9133, -22.3251, 0.81", "5.59773, 27.3824, -23.1663, 1.03", "6.21456, 29.3871, -24.2006, 0.73", "6.49776, 30.1444, -24.5516, 0.81", "6.86429, 30.9041, -24.8455, 0.95", "7.17543, 31.4041, -24.9953, 0.66", "7.66417, 32.0191, -25.1437, 0.66", "8.53383, 32.9416, -25.3827, 0.88", "9.41366, 33.7412, -25.6575, 0.66", "10.3122, 34.4832, -26.0492, 0.88", "11.3875, 35.281, -26.6644, 0.44", "12.8802, 36.3459, -27.641, 0.44", "13.9894, 37.1161, -28.4971, 0.51", "14.5565, 37.491, -29.0099, 0.81", "15.8023, 38.2375, -30.2203, 0.81", "17.3596, 39.0553, -31.7665, 0.81", "18.1799, 39.3949, -32.5897, 0.81", "19.6134, 39.8384, -34.0949, 0.81", "20.7336, 40.0935, -35.3339, 0.95", "21.9038, 40.3024, -36.7358, 0.59", "22.7238, 40.4108, -37.8062, 0.59", "23.9832, 40.5309, -39.5843, 0.59", "25.0095, 40.6332, -41.1443, 0.59", "25.3442, 40.6912, -41.6644, 0.59", "25.6832, 40.8209, -42.1988, 0.59", "26.2297, 41.1744, -43.0577, 0.59", "26.8563, 41.692, -43.8502, 0.81", "27.6077, 42.3997, -44.5668, 0.81", "28.0722, 42.8567, -44.9321, 0.59", "29.5671, 44.2734, -46.0408, 0.59", "30.0337, 44.6891, -46.3919, 0.73", "30.5918, 45.1712, -46.8761, 0.51", "31.5543, 46.0283, -47.9506, 0.73", "32.0193, 46.4744, -48.629, 0.59", "32.5994, 47.1352, -49.7799, 0.59", "33.1811, 47.9237, -51.3099, 0.44", "33.6466, 48.6032, -52.7808, 1.03", "34.2685, 49.4461, -55.0583, 0.66", "34.7103, 50.0102, -56.8027, 0.66", "35.1494, 50.5674, -58.6306, 0.51", "35.6664, 51.2503, -60.7729, 0.51", "36.0407, 51.7301, -62.1693, 1.03", "37.6168, 53.4979, -67.0134, 0.59", "37.9404, 53.8087, -67.7969, 0.59", "38.2077, 54.0347, -68.289, 0.59", "38.9531, 54.6162, -69.3258, 0.73", "39.6819, 55.1913, -70.1658, 0.29", "41.0193, 56.2523, -71.2692, 0.51", "41.8291, 56.8957, -71.5337, 0.88", "42.6385, 57.4738, -71.7598, 0.51", "43.7733, 58.1723, -72.0792, 0.66" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "4.60047, 23.4685, -20.6914, 0.88", "4.37669, 23.6247, -21.5156, 0.88", "3.8667, 24.1258, -23.9433, 0.66", "3.65708, 24.4655, -25.6488, 0.81", "3.64329, 24.6149, -26.6585, 0.81", "3.69365, 24.6877, -27.38, 0.81", "3.75505, 24.7765, -28.2596, 0.81", "3.88925, 24.8379, -29.0438, 0.81", "4.33979, 24.8837, -30.1525, 0.81", "5.24943, 24.8206, -31.6406, 0.81", "5.70682, 24.7219, -32.2973, 1.25" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "0.390994, 8.49933, -5.13642, 1.98", "0.336645, 9.92952, -4.32201, 1.98", "0.347535, 11.5249, -3.53157, 1.76", "0.36021, 13.3819, -2.61149, 1.76", "0.363755, 13.9013, -2.35416, 1.91", "0.371361, 15.0156, -1.80207, 1.62", "0.374299, 15.4459, -1.58884, 1.62", "0.449908, 16.7733, -1.08095, 1.91" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "0.390994, 8.49933, -5.13642, 1.32", "0.81939, 9.50229, -5.84306, 1.32", "1.73757, 11.1827, -6.83654, 1.1", "2.57591, 12.457, -7.4936, 0.95", "3.28961, 13.3597, -7.99991, 0.95", "4.64554, 14.874, -8.94263, 0.95", "5.46456, 15.737, -9.51199, 0.95", "6.564, 16.794, -10.1949, 0.95", "7.22525, 17.3959, -10.5558, 1.03", "9.02217, 18.9336, -11.492, 0.95", "10.6652, 20.3208, -12.3923, 0.88", "11.8704, 21.4009, -13.1286, 1.03", "12.6144, 22.1313, -13.5734, 0.73", "13.3633, 22.9243, -13.9584, 0.95", "14.1214, 23.7759, -14.2912, 1.03", "15.4263, 25.2793, -14.7118, 0.81", "16.6314, 26.614, -14.9953, 1.25", "18.0566, 28.1038, -15.2977, 0.88", "19.1317, 29.1754, -15.558, 0.95", "20.3896, 30.3595, -15.8859, 0.88", "21.2199, 31.1199, -16.1061, 0.88", "22.2825, 32.0122, -16.3738, 1.03", "23.472, 32.859, -16.7076, 0.88", "24.6229, 33.5584, -17.0767, 0.88", "24.9145, 33.7226, -17.2024, 1.47" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-14.7125, -1.82109, -5.57216, 1.25", "-15.5105, -0.78514, -5.78297, 1.25", "-16.3303, 0.279231, -5.99956, 1.25", "-17.3796, 1.6415, -6.27678, 1.25", "-17.7377, 2.10642, -6.37139, 1.25" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-14.7125, -1.82109, -5.57216, 1.1", "-16.2718, -3.97076, -7.01536, 1.1", "-16.9772, -4.94324, -7.66823, 1.4", "-18.359, -6.84818, -8.94712, 2.28" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "37.5474, -12.0257, 0.0, 0.15", "51.8333, -16.5988, 0.0, 0.15", "66.1192, -21.1719, 0.0, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_101",
    "id" : "dend_101",
    "points3d" : [ "9.30122, 1.20165, 27.4059, 0.88", "10.6773, 1.26996, 29.2158, 0.88", "12.1525, 1.34319, 31.1561, 0.88", "13.8753, 1.42872, 33.4221, 0.88", "15.0571, 1.48739, 34.9766, 1.47" ],
    "parent" : "dend_89",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_90",
    "id" : "dend_90",
    "points3d" : [ "9.30122, 1.20165, 27.4059, 1.69", "9.38789, 1.65023, 27.4076, 1.69", "9.56382, 2.56084, 27.411, 1.25", "9.68781, 3.20258, 27.4134, 1.25" ],
    "parent" : "dend_89",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "2.44818, -0.155126, 22.5607, 1.03", "1.88008, 0.0436241, 22.6991, 1.03", "1.34433, 0.231054, 22.8295, 1.03", "0.735314, 0.444121, 22.9779, 1.03", "-0.127944, 0.74613, 23.1881, 1.32" ],
    "parent" : "dend_82",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "2.44818, -0.155126, 22.5607, 0.81", "2.00419, -1.34118, 23.7697, 0.81", "1.58381, -2.23509, 24.7802, 0.81", "0.819661, -3.58762, 26.3593, 0.81", "0.114477, -4.66352, 27.6862, 1.03", "-0.153871, -5.03974, 28.1535, 1.03", "-0.918356, -6.11907, 29.5237, 0.51", "-1.41001, -6.77405, 30.4745, 0.51", "-1.71247, -7.19401, 31.1333, 0.88", "-2.13847, -7.78625, 32.0918, 0.73", "-2.31469, -8.07882, 32.5536, 1.03", "-2.59284, -8.79746, 33.5835, 1.18", "-2.63871, -9.11974, 33.9247, 1.18", "-2.83583, -10.7419, 35.168, 0.81", "-2.96775, -11.6381, 35.6749, 0.37", "-3.14054, -12.3941, 35.9432, 0.37", "-3.534, -13.8098, 36.2295, 0.51", "-3.96776, -15.2034, 36.3472, 0.44", "-4.3378, -16.384, 36.3744, 0.88", "-4.55831, -17.0736, 36.3683, 0.88", "-4.86721, -18.1431, 36.4085, 0.95", "-5.21388, -19.5195, 36.4571, 0.37", "-5.3989, -20.3817, 36.4987, 0.37", "-5.53515, -21.2522, 36.5533, 0.37", "-5.68501, -22.5771, 36.6595, 0.29", "-5.77467, -23.5444, 36.7255, 0.88", "-5.8467, -24.4181, 36.7742, 0.88", "-5.92219, -25.2718, 36.7834, 0.51", "-6.03931, -26.6343, 36.6692, 0.66", "-6.07592, -27.192, 36.5732, 0.66", "-6.10709, -27.9705, 36.3741, 0.37", "-6.1221, -28.7591, 36.1465, 0.73", "-6.10817, -29.8248, 35.8394, 0.29", "-6.04112, -30.9788, 35.5241, 0.73", "-5.98319, -31.5627, 35.3853, 0.37", "-5.90484, -32.1108, 35.263, 0.95", "-5.6447, -33.2902, 35.0813, 0.29", "-5.48567, -33.8415, 35.0683, 0.29", "-5.1351, -34.867, 35.1892, 0.29", "-4.88295, -35.4993, 35.3259, 0.81", "-4.68146, -35.9492, 35.4431, 0.81", "-4.146, -37.0765, 35.7781, 0.29", "-3.67657, -38.0676, 36.1073, 0.59", "-3.40028, -38.6952, 36.3312, 0.81", "-3.12381, -39.3868, 36.5834, 0.81", "-2.71593, -40.5733, 36.9719, 0.29", "-2.6121, -40.9439, 37.101, 0.29", "-2.40012, -41.9653, 37.4438, 0.88", "-2.25543, -42.9813, 37.7915, 0.15", "-2.23785, -43.6468, 38.0343, 0.59", "-2.31452, -44.4355, 38.3303, 0.37", "-2.63055, -45.9246, 38.9496, 1.32", "-2.76463, -46.4205, 39.1622, 1.32", "-2.99634, -47.0916, 39.5116, 1.03", "-3.35245, -48.0625, 40.1145, 0.51", "-3.51525, -48.5066, 40.4186, 0.22", "-3.8128, -49.3433, 41.0119, 0.22", "-4.00187, -49.9025, 41.4038, 1.03", "-4.52805, -51.5338, 42.625, 0.37", "-4.75005, -52.3427, 43.2766, 0.15", "-4.84165, -52.7679, 43.623, 0.15", "-4.90152, -53.09, 43.8583, 0.15", "-4.94782, -53.3649, 44.0068, 0.15", "-5.02721, -53.8958, 44.2257, 0.73", "-5.12762, -54.5152, 44.3725, 0.88", "-5.2517, -55.125, 44.4823, 0.73", "-5.41506, -55.8872, 44.6397, 0.73", "-5.68057, -57.0476, 44.8951, 0.22", "-5.92162, -58.121, 45.1148, 0.22", "-6.18593, -59.2888, 45.3506, 0.81", "-6.58386, -60.9446, 45.6722, 0.07", "-7.0089, -62.6098, 46.0122, 0.95", "-7.36131, -63.8931, 46.2866, 0.15", "-7.73024, -65.125, 46.5559, 1.4" ],
    "parent" : "dend_82",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "27.6253, -18.789, 21.571, 0.44", "28.8615, -18.2652, 21.4972, 0.44", "29.8851, -17.9139, 21.3676, 0.44", "30.497, -17.721, 21.2402, 0.66", "31.1211, -17.4968, 21.0877, 0.88", "32.4278, -16.9691, 20.752, 1.1", "33.5994, -16.4554, 20.447, 0.73", "34.4159, -16.0617, 20.2228, 1.18", "35.2542, -15.6155, 19.9917, 0.81", "36.3985, -14.8962, 19.7483, 0.29", "37.1822, -14.2888, 19.6932, 0.73", "37.6306, -13.8925, 19.7303, 1.18", "38.6835, -12.9821, 19.9128, 0.66", "39.3684, -12.4276, 20.0653, 0.44", "40.2224, -11.8047, 20.2804, 0.44", "41.6394, -10.8773, 20.626, 0.95", "42.9758, -10.0683, 20.9169, 0.59", "44.7211, -9.04903, 21.2388, 0.29", "45.3184, -8.70449, 21.3199, 0.66", "46.1869, -8.22191, 21.4045, 0.22", "46.8685, -7.86005, 21.4301, 0.22", "47.8053, -7.35865, 21.4049, 0.88", "48.4254, -6.99721, 21.3814, 0.59", "49.241, -6.49131, 21.3597, 0.37", "49.646, -6.24721, 21.3507, 0.22", "50.1424, -5.9909, 21.3508, 0.22", "50.7972, -5.71144, 21.3601, 0.22", "52.3839, -5.19654, 21.6059, 0.22", "52.9005, -5.08028, 21.7148, 0.81", "53.3674, -4.99487, 21.8281, 0.81", "54.6154, -4.77736, 22.1525, 0.59", "55.2927, -4.66063, 22.3381, 0.73", "57.749, -4.27837, 23.0252, 0.22", "58.8299, -4.1206, 23.3437, 0.37", "59.5757, -3.98045, 23.5294, 0.37", "60.3134, -3.77972, 23.6827, 0.37", "61.2635, -3.41709, 23.8356, 0.37", "61.8307, -3.17117, 23.8847, 0.37", "62.3829, -2.91831, 23.8614, 0.44", "63.639, -2.36564, 23.8901, 0.51", "64.8108, -1.92839, 23.9574, 0.66", "65.7485, -1.61209, 24.1142, 0.37", "66.6805, -1.35133, 24.3562, 0.22", "67.7102, -1.13441, 24.6915, 0.22", "69.1205, -0.940793, 25.2826, 0.66", "69.7311, -0.903329, 25.608, 0.66", "71.2681, -0.88734, 26.4795, 0.66", "71.7927, -0.897225, 26.788, 0.66", "72.8609, -0.947699, 27.4274, 0.22", "73.8477, -1.05503, 27.9935, 0.88", "75.43, -1.33213, 28.7656, 0.29", "76.1761, -1.50907, 29.0946, 0.29", "77.3192, -1.85711, 29.4956, 0.29", "78.0032, -2.09576, 29.6876, 0.51", "78.8155, -2.41459, 29.8007, 0.07", "79.1058, -2.53517, 29.7836, 0.29", "79.5182, -2.71883, 29.6871, 0.07", "80.2276, -3.01665, 29.4576, 0.59", "81.3271, -3.42549, 28.9671, 0.22", "82.1683, -3.68831, 28.5438, 0.59", "82.5183, -3.79171, 28.3418, 0.22", "83.1827, -4.00777, 27.9234, 0.22" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "27.6253, -18.789, 21.571, 0.81", "28.0743, -19.9343, 21.0583, 0.81", "28.4569, -20.9104, 20.6213, 1.03", "28.8034, -21.7941, 20.2257, 1.03", "29.0644, -22.4601, 19.9276, 0.66", "29.3095, -23.0851, 19.6478, 1.03", "29.6692, -24.0029, 19.237, 1.18" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "12.7408, -25.6189, 9.83235, 0.44", "14.5119, -26.8927, 7.40798, 0.44", "14.7988, -27.1303, 7.09337, 0.44", "15.0886, -27.38, 6.81168, 0.44", "15.7903, -28.0016, 6.14725, 0.44", "16.3097, -28.4638, 5.66855, 0.88", "16.6428, -28.7454, 5.38979, 1.32", "17.2969, -29.2991, 4.91703, 1.32", "18.5205, -30.2817, 4.0585, 0.44", "19.5654, -31.0776, 3.36048, 1.1", "20.2671, -31.586, 2.95645, 1.1", "21.6745, -32.5091, 2.21835, 0.29", "22.504, -33.0082, 1.85443, 0.29", "23.1665, -33.3652, 1.61366, 0.29", "23.8089, -33.668, 1.46528, 0.29", "25.2175, -34.2476, 1.31463, 1.18", "26.4509, -34.7259, 1.31411, 0.51", "27.5775, -35.1594, 1.41779, 1.1", "29.1397, -35.8109, 1.65993, 0.66", "30.3427, -36.3251, 1.84012, 1.03", "31.5749, -36.8755, 1.98244, 0.22", "32.5675, -37.3344, 2.05805, 0.95", "33.4003, -37.7258, 2.12602, 0.66", "34.6528, -38.3167, 2.20606, 0.22", "35.6743, -38.8017, 2.2314, 0.81", "36.8981, -39.3884, 2.1784, 1.18", "37.4188, -39.6391, 2.13994, 1.18", "38.466, -40.1929, 2.10088, 0.44", "39.0318, -40.5302, 2.10556, 0.44", "39.7779, -41.0363, 2.16019, 0.44", "40.685, -41.744, 2.29479, 0.44", "41.545, -42.4093, 2.43523, 1.03", "42.7092, -43.2204, 2.57738, 0.22", "43.6098, -43.7664, 2.65792, 1.1", "44.3906, -44.1528, 2.71068, 0.44", "45.2769, -44.4744, 2.71514, 1.18", "46.6573, -44.8014, 2.63817, 0.15", "47.8035, -44.9597, 2.55156, 0.95", "48.5055, -45.0235, 2.4654, 0.07", "49.0943, -45.0702, 2.38281, 0.44", "50.4267, -45.1749, 2.1657, 0.29", "51.0504, -45.2352, 2.04943, 0.29", "51.5597, -45.3064, 1.95497, 0.81", "53.0293, -45.5363, 1.69955, 0.81", "54.2004, -45.7055, 1.4627, 0.15", "54.9624, -45.8182, 1.30476, 0.59", "56.2791, -46.0195, 1.05468, 0.29", "56.9653, -46.1287, 0.924983, 1.18", "57.6512, -46.259, 0.794597, 1.18", "59.576, -46.7706, 0.412934, 0.15", "60.0552, -46.9244, 0.305356, 0.15", "60.5825, -47.1216, 0.171719, 0.15", "61.2138, -47.3981, 0.00131911, 0.15", "62.2714, -47.9128, -0.319783, 1.32", "63.2719, -48.4888, -0.635459, 0.29" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "12.7408, -25.6189, 9.83235, 0.37", "12.6247, -26.5869, 11.1216, 0.37", "12.4351, -28.1282, 12.9295, 0.44", "12.2708, -29.4379, 14.3294, 0.44", "12.1169, -30.7167, 15.5563, 0.59", "12.0517, -31.472, 16.1978, 0.73", "12.0121, -32.2264, 16.7706, 0.29", "12.0105, -33.2186, 17.3342, 1.1", "12.0947, -34.4532, 17.788, 1.1", "12.2114, -35.4082, 18.0262, 0.81", "12.4702, -36.6782, 18.2459, 0.15", "12.7064, -37.5042, 18.3594, 0.15", "13.1719, -38.8049, 18.4825, 0.95", "13.7068, -40.0423, 18.5677, 0.37", "14.0608, -40.7856, 18.5927, 0.37", "14.7131, -42.122, 18.628, 1.18", "15.4003, -43.5375, 18.6672, 0.22", "15.9864, -44.7522, 18.6975, 0.22", "16.4336, -45.6889, 18.7076, 1.25", "17.0787, -47.1627, 18.6795, 0.15", "17.4835, -48.1416, 18.6267, 0.15", "17.8608, -49.146, 18.5375, 1.03", "18.0892, -49.769, 18.4582, 1.03", "18.4541, -50.8143, 18.3405, 0.29", "18.8838, -52.0837, 18.2543, 0.15", "19.0522, -52.578, 18.2557, 0.95", "19.2885, -53.2661, 18.3081, 0.95", "19.5698, -54.136, 18.5205, 0.95", "19.9506, -55.4878, 19.0219, 0.22", "20.1489, -56.3449, 19.4139, 0.22", "20.326, -57.1834, 19.8282, 1.1", "20.551, -58.5978, 20.5339, 0.15", "20.7672, -60.4632, 21.437, 0.15", "20.8308, -61.244, 21.7709, 0.15", "20.89, -62.1192, 22.0432, 0.15", "20.9554, -63.2501, 22.3406, 0.15", "21.0121, -64.5541, 22.6775, 0.88", "21.0359, -65.0331, 22.7917, 1.1", "21.1459, -66.5307, 23.0778, 0.07", "21.2711, -67.9083, 23.363, 0.88", "21.4111, -69.3792, 23.6887, 0.15", "21.5188, -70.5718, 23.9617, 0.15", "21.6763, -71.7733, 24.2267, 0.95", "21.7703, -72.4009, 24.3977, 0.95" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-8.36691, -17.9861, 6.43068, 0.51", "-8.04485, -19.2555, 6.48142, 0.51", "-7.82018, -20.2243, 6.53439, 0.95", "-7.70346, -20.6998, 6.5646, 0.81", "-7.53267, -21.3842, 6.61085, 1.1", "-7.2638, -22.5714, 6.72981, 1.03", "-7.11823, -23.3044, 6.81546, 1.03", "-6.9789, -24.1176, 6.9089, 0.59", "-6.844, -24.9933, 7.06823, 0.37", "-6.75527, -25.5807, 7.20129, 0.37", "-6.61487, -26.5194, 7.44092, 0.37", "-6.53299, -27.1314, 7.60607, 0.37", "-6.46424, -27.6501, 7.74816, 0.37", "-6.33357, -28.5915, 8.04458, 0.37", "-6.21971, -29.4592, 8.36119, 0.51", "-6.04776, -30.5718, 8.78608, 1.18", "-5.92628, -31.2588, 9.12016, 0.81", "-5.72221, -32.3543, 9.74593, 0.37", "-5.58771, -33.1276, 10.2401, 0.15", "-5.46978, -33.9291, 10.7781, 1.1", "-5.33634, -34.8789, 11.4825, 0.29", "-5.09026, -36.5086, 12.7823, 0.29", "-5.00701, -36.9845, 13.1609, 1.32", "-4.8293, -37.9182, 13.9072, 0.37", "-4.69449, -38.5504, 14.4196, 0.66", "-4.47874, -39.4923, 15.1791, 0.29", "-4.3871, -39.8878, 15.4889, 0.29", "-4.24086, -40.5099, 15.9008, 0.88", "-3.99462, -41.6141, 16.6237, 0.22", "-3.8171, -42.4433, 17.1696, 1.18", "-3.76738, -42.7241, 17.3447, 1.03", "-3.69616, -43.2865, 17.657, 0.81", "-3.63155, -44.0216, 18.0356, 0.22", "-3.60088, -44.5814, 18.3003, 0.59", "-3.55002, -45.4441, 18.6371, 0.15", "-3.49423, -46.1558, 18.9166, 0.44", "-3.39605, -47.1458, 19.3174, 1.25", "-3.32801, -47.9022, 19.6558, 0.81", "-3.24671, -48.7621, 20.0576, 0.66", "-3.14779, -49.6764, 20.4905, 0.29", "-2.9761, -50.8678, 21.127, 0.81", "-2.83614, -51.6139, 21.5785, 0.15", "-2.57766, -52.6249, 22.2282, 0.51", "-2.45794, -52.9985, 22.4777, 1.25", "-2.36741, -53.2364, 22.6328, 1.25", "-1.71272, -54.8104, 23.621, 0.07", "-1.43487, -55.4164, 23.952, 0.51", "-0.95784, -56.3722, 24.3607, 0.07", "-0.65812, -56.9387, 24.5285, 0.59", "-0.322018, -57.6166, 24.693, 0.59", "-0.0649067, -58.1709, 24.7875, 0.15", "0.229813, -58.857, 24.8097, 1.18", "0.665095, -59.8984, 24.8248, 0.15", "0.84792, -60.3677, 24.8164, 0.15", "1.14496, -61.0691, 24.7915, 0.15" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-8.36691, -17.9861, 6.43068, 0.66", "-8.92484, -17.7015, 5.91807, 0.66", "-9.73196, -17.3235, 5.30311, 0.51", "-10.4379, -17.0085, 4.83061, 0.15", "-10.7425, -16.8823, 4.65046, 0.51", "-11.2163, -16.7002, 4.39899, 0.59", "-11.962, -16.4452, 4.06425, 0.88", "-12.5968, -16.2375, 3.86263, 0.44", "-12.8484, -16.1599, 3.80323, 1.03", "-13.2188, -16.0523, 3.72417, 1.03", "-13.4959, -15.9702, 3.64648, 1.03", "-14.2574, -15.7309, 3.36024, 0.29", "-15.2671, -15.3848, 2.91371, 0.29", "-15.8366, -15.1785, 2.61737, 0.29", "-16.0114, -15.1163, 2.52861, 0.88", "-16.9311, -14.7849, 2.08521, 0.44", "-17.5076, -14.5635, 1.83589, 0.44", "-17.7296, -14.4722, 1.76161, 0.44", "-18.0483, -14.3439, 1.71642, 0.44", "-18.8685, -13.9907, 1.72089, 0.44", "-19.3186, -13.7704, 1.79238, 0.44", "-19.8187, -13.4972, 1.93801, 0.15", "-20.2841, -13.2199, 2.08638, 0.15", "-20.4887, -13.096, 2.13577, 0.15", "-20.9991, -12.7741, 2.23402, 0.37", "-21.5277, -12.4311, 2.30558, 0.15", "-22.02, -12.111, 2.37254, 0.51", "-22.3429, -11.9012, 2.41559, 0.51", "-23.1789, -11.3319, 2.52138, 0.37", "-23.7978, -10.9183, 2.63069, 0.59", "-24.1243, -10.7199, 2.69804, 0.59", "-24.5522, -10.4801, 2.7927, 1.25", "-24.8604, -10.3165, 2.87107, 1.32", "-25.5368, -9.97787, 3.05329, 0.73", "-26.4366, -9.55483, 3.3051, 0.29", "-27.2448, -9.21618, 3.48269, 0.29", "-27.5336, -9.10575, 3.53253, 0.29", "-28.3541, -8.80994, 3.66524, 0.07", "-28.7789, -8.66542, 3.74136, 1.1", "-29.233, -8.51447, 3.85016, 0.88", "-29.8742, -8.28631, 4.02532, 0.22", "-30.6225, -7.9921, 4.27785, 0.22", "-31.384, -7.6827, 4.56967, 0.22", "-32.2543, -7.3276, 4.93419, 0.44", "-33.0721, -6.99856, 5.28772, 0.29", "-33.5186, -6.83042, 5.48215, 0.66", "-34.2588, -6.584, 5.81403, 0.22", "-34.6268, -6.47855, 5.95999, 0.59", "-35.2605, -6.34026, 6.15916, 0.59", "-35.7984, -6.26438, 6.28906, 0.15", "-36.4308, -6.23728, 6.39697, 0.15", "-36.8701, -6.25212, 6.46974, 1.18", "-37.4884, -6.31792, 6.56589, 1.18", "-38.1658, -6.41845, 6.66082, 0.37", "-38.5145, -6.48561, 6.70407, 1.03", "-39.2677, -6.65748, 6.73908, 0.15", "-39.5771, -6.74345, 6.72942, 0.15", "-39.9515, -6.85822, 6.69392, 0.15", "-40.3191, -6.98699, 6.64255, 0.51", "-41.0956, -7.26722, 6.50803, 0.88", "-41.9334, -7.56839, 6.4177, 0.15", "-42.6025, -7.81236, 6.39616, 0.81", "-43.012, -7.94552, 6.38814, 0.44", "-43.3024, -8.02092, 6.38871, 1.03", "-43.7959, -8.11418, 6.38338, 0.66", "-44.6436, -8.21625, 6.37625, 0.22", "-45.3037, -8.23954, 6.37905, 1.03", "-46.0477, -8.20406, 6.35012, 0.66", "-46.9082, -8.128, 6.29259, 0.44", "-47.6894, -8.02282, 6.27608, 1.03", "-47.9755, -7.97032, 6.27863, 1.25", "-48.8391, -7.77078, 6.30666, 0.73", "-50.1507, -7.43067, 6.428, 0.29", "-50.4513, -7.35259, 6.47275, 0.29", "-51.6055, -7.04074, 6.67806, 1.1", "-51.9607, -6.95398, 6.75031, 1.1", "-52.5944, -6.85226, 6.86034, 0.22", "-53.1529, -6.80075, 6.9798, 0.22", "-53.522, -6.7766, 7.06776, 0.22", "-53.8176, -6.75975, 7.13271, 0.81", "-54.5121, -6.72668, 7.25737, 1.25", "-55.8029, -6.66483, 7.6199, 0.37", "-56.7112, -6.61455, 7.95553, 0.51", "-57.0387, -6.5932, 8.11333, 0.29", "-57.3084, -6.57473, 8.2591, 0.29", "-57.6986, -6.54998, 8.47688, 0.88", "-58.646, -6.50292, 9.00138, 0.15", "-59.0535, -6.48563, 9.20078, 0.37", "-59.8035, -6.46068, 9.49571, 0.07", "-60.4245, -6.44554, 9.68769, 0.81", "-61.0517, -6.41477, 9.83836, 0.07", "-61.6006, -6.36568, 9.90886, 0.37", "-62.4046, -6.26092, 9.91063, 0.07", "-63.1095, -6.1618, 9.86276, 0.81", "-64.0159, -6.05501, 9.73619, 0.29", "-64.3287, -6.03135, 9.66688, 0.29", "-65.0772, -6.0105, 9.45064, 0.29", "-65.316, -6.01502, 9.37019, 0.29", "-65.9506, -6.04624, 9.10738, 0.81", "-66.8645, -6.12119, 8.70864, 0.37", "-67.6049, -6.19873, 8.41784, 0.07", "-68.0234, -6.24706, 8.26681, 0.07", "-68.4051, -6.28054, 8.15161, 0.07", "-69.295, -6.28878, 7.85023, 1.03", "-69.7948, -6.23596, 7.61811, 0.44", "-70.1739, -6.1699, 7.37871, 0.29", "-70.4336, -6.13424, 7.17083, 0.29", "-70.9136, -6.1099, 6.70688, 0.59", "-71.4768, -6.08922, 6.11582, 0.29", "-72.3717, -6.07622, 5.09197, 0.95", "-73.2086, -6.07073, 4.03527, 1.1", "-74.0523, -6.08954, 2.87675, 0.15", "-74.6528, -6.13922, 1.99079, 0.81" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "5.70682, 24.7219, -32.2973, 0.37", "6.77782, 24.9694, -32.6654, 0.37", "8.1361, 25.1994, -33.1526, 0.37", "10.0792, 25.4253, -33.8043, 0.95", "11.0534, 25.4865, -34.1027, 0.66", "11.9587, 25.4865, -34.3982, 0.81", "12.53, 25.4478, -34.6144, 0.44", "14.0724, 25.1121, -35.3799, 0.44", "14.8386, 24.8042, -35.9336, 0.73", "15.3755, 24.4838, -36.4715, 0.44", "16.1786, 23.8763, -37.51, 0.37", "16.9373, 23.1803, -38.7467, 0.37", "17.8802, 22.2254, -40.4937, 0.37", "18.6153, 21.3545, -42.1113, 0.37", "18.9925, 20.8615, -43.0806, 0.37", "19.3614, 20.3436, -44.1587, 0.37", "19.7065, 19.8134, -45.2789, 0.15" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "5.70682, 24.7219, -32.2973, 0.29", "5.64082, 24.6145, -32.8609, 0.29", "5.41236, 24.2426, -34.8118, 0.29", "5.36617, 24.1674, -35.2063, 0.29", "5.08962, 23.7173, -37.5679, 0.51", "5.01187, 23.5907, -38.2319, 0.37", "4.88576, 23.3855, -39.3088, 1.25" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "0.449908, 16.7733, -1.08095, 1.4", "0.581698, 18.5035, -1.05147, 1.4", "0.642013, 19.2953, -1.03799, 1.4", "0.685927, 19.8718, -1.02817, 1.4", "0.764659, 20.9055, -1.01056, 1.69" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "0.449908, 16.7733, -1.08095, 1.03", "0.766863, 16.7903, -0.503639, 1.03", "1.81915, 16.8759, 1.35111, 0.66", "2.6121, 16.9829, 2.63091, 0.66", "3.64109, 17.1404, 4.15675, 0.66", "4.73617, 17.2969, 5.73736, 0.66", "5.20974, 17.3662, 6.41274, 0.66", "5.80213, 17.4765, 7.27375, 0.66", "6.4301, 17.6155, 8.19126, 0.73", "7.5184, 17.8765, 9.86846, 0.73", "8.54408, 18.1177, 11.5759, 0.66", "9.249, 18.2468, 12.8212, 0.66", "9.75433, 18.3313, 13.7506, 0.66", "10.0531, 18.3791, 14.314, 0.66", "10.4425, 18.4332, 15.0536, 0.66", "10.6749, 18.4701, 15.4267, 0.66", "11.0056, 18.5212, 15.8673, 0.66", "11.8157, 18.6446, 16.9159, 0.66", "12.462, 18.7561, 17.8235, 0.66", "13.4146, 18.9624, 19.2223, 0.66", "14.5384, 19.2583, 20.9846, 0.66", "15.6279, 19.5723, 22.7848, 0.51", "16.5642, 19.8535, 24.4588, 0.51", "17.5202, 20.1482, 26.2383, 0.37", "17.7083, 20.2083, 26.5782, 0.37", "18.3082, 20.4032, 27.6321, 0.37", "18.6723, 20.5146, 28.2221, 0.88", "20.2221, 20.9111, 30.3852, 0.59", "20.6883, 21.0128, 30.9246, 0.88", "22.1752, 21.3145, 32.4299, 0.59", "23.3577, 21.5609, 33.5496, 0.81", "23.9889, 21.7003, 34.1184, 0.51", "24.9087, 21.8812, 34.9656, 0.51", "25.4831, 21.9507, 35.4924, 0.29", "26.5798, 22.0341, 36.5307, 0.51", "27.1062, 22.0544, 37.0201, 0.51", "28.6092, 22.0712, 38.4719, 0.51", "29.8263, 22.037, 39.6966, 0.29", "30.977, 21.9342, 40.8908, 0.29", "31.4048, 21.854, 41.35, 0.29", "32.5593, 21.514, 42.5864, 0.29", "33.3643, 21.1758, 43.4925, 0.81", "33.9808, 20.8429, 44.1477, 0.15", "34.7674, 20.402, 44.9071, 0.37", "35.6322, 19.9451, 45.6433, 0.29", "36.0421, 19.7362, 45.9505, 0.29", "37.0932, 19.2442, 46.5835, 0.29", "37.8548, 18.9437, 46.9954, 0.81", "38.6869, 18.675, 47.461, 0.44", "40.1226, 18.2683, 48.2105, 0.44", "40.885, 18.0803, 48.586, 0.44", "41.765, 17.8542, 49.0056, 0.66", "43.0519, 17.4987, 49.5731, 0.81", "45.0183, 16.8778, 50.4135, 0.51", "46.5151, 16.3208, 51.0747, 0.51", "47.0552, 16.0935, 51.311, 0.22", "47.672, 15.8285, 51.5714, 0.81", "48.393, 15.523, 51.8221, 0.29", "49.8057, 14.9285, 52.0843, 0.29" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "24.9145, 33.7226, -17.2024, 1.84", "25.101, 34.3342, -17.1857, 1.84" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "24.9145, 33.7226, -17.2024, 0.66", "27.0441, 33.4169, -20.2382, 0.66", "27.4168, 33.3625, -20.8356, 0.66", "27.9555, 33.2969, -21.6874, 0.66", "28.5368, 33.2292, -22.561, 0.81", "29.2121, 33.1531, -23.54, 0.81", "29.9704, 33.0655, -24.6555, 0.81", "31.3505, 32.9114, -26.554, 0.81", "31.6867, 32.8868, -27.0405, 0.51", "32.0287, 32.8903, -27.5584, 0.29", "32.8501, 33.0012, -28.8381, 0.88", "34.0349, 33.3405, -30.7219, 0.88", "34.3067, 33.4707, -31.1496, 0.73", "34.5584, 33.6162, -31.5743, 0.59", "34.8116, 33.7664, -32.0699, 0.59", "35.086, 33.9339, -32.6143, 0.59", "35.3939, 34.0829, -33.1208, 0.95", "36.1882, 34.3182, -34.2174, 0.66", "37.6074, 34.5669, -35.9142, 0.66", "38.7244, 34.6673, -37.122, 0.66", "39.164, 34.6776, -37.5367, 0.88", "40.3263, 34.6673, -38.5783, 0.29", "41.7056, 34.6258, -39.7328, 0.88", "42.5783, 34.5898, -40.3872, 0.29", "43.5462, 34.5654, -40.9843, 0.29", "44.7854, 34.51, -41.672, 0.22" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-17.7377, 2.10642, -6.37139, 0.88", "-18.5034, 3.16922, -7.54944, 0.88", "-18.751, 3.51287, -7.93036, 0.88", "-19.0478, 3.92478, -8.38694, 0.95", "-19.5094, 4.5655, -9.09713, 0.95", "-19.7626, 4.91691, -9.48665, 0.95", "-20.1614, 5.47046, -10.1002, 1.18" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-17.7377, 2.10642, -6.37139, 0.66", "-17.6718, 2.61596, -6.09989, 0.66", "-17.5537, 3.36178, -5.67742, 0.51", "-17.4841, 3.80185, -5.42815, 0.81", "-17.4115, 4.26051, -5.16834, 1.03", "-17.3058, 4.92847, -4.78998, 0.29", "-17.1896, 5.66288, -4.37398, 0.44", "-17.1169, 6.12742, -4.13806, 0.95" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-18.359, -6.84818, -8.94712, 1.1", "-19.0773, -6.69855, -8.45292, 1.1", "-19.7731, -6.5536, -7.97417, 0.73", "-20.3843, -6.42626, -7.55359, 0.73", "-21.509, -6.19195, -6.77971, 0.73", "-22.281, -6.03112, -6.24853, 1.1", "-22.7032, -5.94316, -5.95803, 1.32" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-18.359, -6.84818, -8.94712, 1.25", "-18.6884, -8.00364, -10.4454, 1.25", "-18.8278, -8.49227, -11.0791, 1.03", "-19.303, -10.1593, -13.2408, 1.03", "-19.4554, -10.6937, -13.9337, 1.03" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_105",
    "id" : "dend_105",
    "points3d" : [ "15.0571, 1.48739, 34.9766, 0.66", "16.492, 2.61151, 33.3136, 0.66", "17.4829, 3.30828, 32.2618, 0.51", "18.2253, 3.74715, 31.5634, 0.51", "18.7299, 4.02162, 31.0964, 0.81", "19.6513, 4.50832, 30.2242, 0.81", "21.7301, 5.57531, 28.1439, 0.59", "22.4018, 5.8842, 27.5196, 0.59", "23.2508, 6.2657, 26.7533, 0.81", "24.4121, 6.79459, 25.7196, 0.51", "25.4964, 7.30098, 24.771, 0.66", "26.8935, 7.99655, 23.6251, 0.66", "27.8001, 8.47829, 23.0189, 0.66", "28.8693, 9.04591, 22.3741, 0.51", "29.8022, 9.52704, 21.9154, 0.51", "30.5426, 9.86107, 21.6843, 0.51", "31.4077, 10.2072, 21.6142, 0.51", "32.6731, 10.6328, 21.8614, 0.07", "33.6089, 10.8642, 22.1956, 0.44", "34.2843, 10.9706, 22.5224, 0.07", "35.2261, 11.042, 23.0961, 0.44", "37.2503, 11.043, 24.4567, 0.07", "38.9492, 10.9787, 25.6773, 0.07", "39.6101, 10.9652, 26.1743, 0.07", "39.9541, 10.9604, 26.4338, 0.37", "40.7968, 10.9252, 27.0026, 0.07", "41.794, 10.8383, 27.5579, 1.03", "42.48, 10.7442, 27.8638, 1.03", "43.3086, 10.6194, 28.2091, 0.37", "45.0638, 10.367, 28.954, 0.07", "46.2826, 10.1718, 29.5451, 0.81", "47.625, 9.91078, 30.2421, 0.07", "49.3482, 9.52353, 31.2039, 0.07", "49.7949, 9.40223, 31.4686, 0.22", "50.2073, 9.26658, 31.7262, 0.22", "52.1231, 8.56476, 32.98, 0.07", "52.4955, 8.41497, 33.2811, 0.22" ],
    "parent" : "dend_101",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_102",
    "id" : "dend_102",
    "points3d" : [ "15.0571, 1.48739, 34.9766, 0.51", "15.8474, 1.20743, 35.5691, 0.51", "16.4094, 0.977479, 35.9699, 0.81", "16.9411, 0.704783, 36.3626, 1.18", "17.7617, 0.197928, 36.9903, 1.1", "18.5359, -0.399412, 37.6567, 1.1", "18.6661, -0.528679, 37.7811, 1.1", "18.9734, -1.01977, 38.1392, 0.73", "19.1842, -1.65633, 38.4859, 0.73", "19.2204, -2.04631, 38.6429, 0.73", "19.1398, -3.03303, 38.8862, 0.73", "18.9897, -3.86202, 39.0191, 0.44", "18.8402, -4.42278, 39.0895, 0.44", "18.6726, -4.90136, 39.1282, 0.44", "18.4009, -5.54652, 39.1399, 0.66", "18.0175, -6.31954, 39.1152, 0.59", "17.882, -6.55221, 39.1062, 0.59", "17.4813, -7.15977, 39.1097, 0.81", "17.1855, -7.59008, 39.1246, 0.59", "16.8572, -8.07644, 39.151, 0.81", "16.2912, -8.95825, 39.2225, 0.15", "15.6528, -9.98835, 39.2853, 0.44", "15.2059, -10.7522, 39.3134, 0.59", "14.8804, -11.3418, 39.3223, 0.59", "14.663, -11.7453, 39.318, 0.88", "14.1127, -12.839, 39.3074, 0.37", "13.6492, -13.8026, 39.2885, 0.37", "13.4884, -14.1536, 39.2618, 0.37", "13.2834, -14.5965, 39.2233, 0.37", "12.8953, -15.333, 39.1191, 0.44", "12.5155, -15.9663, 38.9905, 0.73", "12.3401, -16.224, 38.921, 0.73", "11.9401, -16.7682, 38.7989, 0.73", "11.6623, -17.1199, 38.7227, 0.29", "11.1361, -17.7139, 38.5958, 0.29", "10.9692, -17.8894, 38.5597, 0.29", "10.5457, -18.325, 38.4798, 0.29", "10.1117, -18.7961, 38.4712, 0.29", "9.4666, -19.5431, 38.5525, 0.37", "9.15776, -19.9163, 38.615, 0.22", "8.89366, -20.2383, 38.683, 0.22", "8.5544, -20.6519, 38.7569, 0.73", "7.95732, -21.3477, 38.8521, 0.44", "7.49442, -21.8805, 38.9215, 0.66", "7.20493, -22.2292, 38.9743, 0.66", "6.74402, -22.7963, 39.0614, 0.37", "6.04539, -23.6746, 39.1862, 0.95", "5.47533, -24.4394, 39.2887, 0.29", "5.19026, -24.846, 39.3326, 0.29", "4.9396, -25.2351, 39.3782, 0.88", "4.60234, -25.787, 39.4407, 0.37", "4.23253, -26.3963, 39.5309, 0.95", "3.78472, -27.1025, 39.6529, 0.07", "3.50214, -27.5129, 39.7248, 0.44", "3.13509, -27.974, 39.7998, 0.59", "2.56887, -28.5531, 39.911, 0.22", "1.96054, -29.0491, 40.0718, 0.81", "1.62758, -29.238, 40.1859, 0.81", "1.13678, -29.4045, 40.3686, 0.07", "0.735312, -29.4798, 40.5512, 0.73", "-0.0241317, -29.5463, 40.9645, 0.22", "-0.777534, -29.5563, 41.4222, 0.44", "-1.45755, -29.5441, 41.8566, 1.18", "-2.29727, -29.5381, 42.4204, 0.22", "-3.05346, -29.5635, 42.9363, 0.73", "-3.74008, -29.6306, 43.4268, 0.07", "-4.36926, -29.7427, 43.8692, 0.81", "-4.9365, -29.8716, 44.2246, 0.07", "-5.29696, -29.9736, 44.4315, 0.22", "-5.84247, -30.1708, 44.7209, 0.22", "-6.50367, -30.4009, 45.0023, 0.22", "-7.01642, -30.555, 45.1877, 0.59", "-8.11202, -30.8184, 45.5385, 0.59", "-8.53518, -30.88, 45.6555, 0.22", "-9.16581, -30.9375, 45.8237, 0.81", "-9.96794, -30.9651, 46.0173, 0.07", "-10.3488, -30.9649, 46.0861, 0.07", "-10.9653, -30.9496, 46.1971, 0.07", "-11.6069, -30.8967, 46.2926, 0.95" ],
    "parent" : "dend_101",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_100",
    "id" : "dend_100",
    "points3d" : [ "9.68781, 3.20258, 27.4134, 0.22", "10.2987, 3.90707, 27.4583, 0.22", "10.6909, 4.37925, 27.5314, 0.22", "11.1768, 4.93901, 27.7095, 0.37", "11.7107, 5.55207, 27.9475, 0.37", "12.2563, 6.17729, 28.2096, 0.29", "12.4369, 6.38542, 28.2984, 0.44", "12.9888, 7.00609, 28.6388, 0.37", "13.7639, 7.81557, 29.1175, 0.22", "13.9334, 7.97781, 29.2053, 0.22", "14.2033, 8.20905, 29.2997, 0.22", "14.5856, 8.4997, 29.3944, 0.22", "15.0047, 8.78801, 29.4508, 0.22", "15.5479, 9.11926, 29.3917, 0.22", "16.4536, 9.62925, 29.0686, 0.22", "17.0163, 9.90855, 28.8359, 0.37" ],
    "parent" : "dend_90",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_91",
    "id" : "dend_91",
    "points3d" : [ "9.68781, 3.20258, 27.4134, 1.1", "9.85194, 3.60099, 28.3937, 1.1", "10.0427, 4.06388, 29.5327, 1.4", "10.1916, 4.42546, 30.4224, 1.69" ],
    "parent" : "dend_90",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "-0.127944, 0.74613, 23.1881, 1.03", "-0.8004, 0.654983, 23.5476, 1.03", "-1.50254, 0.683445, 23.8948, 0.73", "-1.99861, 0.785399, 24.1115, 0.73", "-2.82334, 1.0854, 24.4469, 0.66", "-3.17305, 1.24074, 24.5763, 0.66", "-3.57913, 1.44043, 24.7138, 0.37", "-4.23083, 1.85054, 24.8988, 0.15", "-4.67906, 2.1962, 24.9912, 0.59", "-5.15927, 2.62447, 25.0596, 0.44", "-5.47641, 2.95733, 25.0707, 0.44", "-5.71825, 3.23666, 25.0589, 0.66", "-6.13802, 3.75205, 24.996, 0.59", "-6.41235, 4.10221, 24.9153, 0.81", "-6.92585, 4.76755, 24.7004, 0.59", "-7.64892, 5.64088, 24.2607, 0.29", "-8.0277, 6.04035, 23.933, 0.29", "-8.28635, 6.23547, 23.5975, 0.59", "-8.53825, 6.37991, 23.1752, 0.59", "-8.7317, 6.46713, 22.7949, 0.59", "-9.15366, 6.60418, 21.8238, 0.73", "-9.54581, 6.68029, 20.7757, 0.95", "-10.1998, 6.75981, 18.8288, 0.95", "-10.3758, 6.77125, 18.2339, 0.95", "-10.48, 6.78081, 17.8589, 0.95", "-10.5505, 6.7913, 17.618, 0.95", "-10.6861, 6.82239, 17.2166, 0.81", "-10.9918, 6.90246, 16.3971, 0.81", "-11.5637, 7.0469, 14.942, 0.81", "-11.9311, 7.16, 14.0714, 0.81", "-12.2202, 7.25557, 13.4212, 0.88", "-12.6506, 7.40174, 12.4506, 0.66", "-13.1962, 7.60159, 11.1439, 0.81", "-13.6623, 7.81357, 9.82052, 0.81", "-13.8903, 7.93608, 9.02971, 0.66", "-14.0148, 8.00089, 8.47238, 0.66", "-14.128, 8.04938, 7.84507, 0.66", "-14.2482, 8.07888, 7.16534, 0.66", "-14.3948, 8.10748, 6.40374, 0.66", "-14.4377, 8.12312, 6.17444, 0.66", "-14.6926, 8.29299, 4.74698, 0.66", "-14.7885, 8.40211, 4.20221, 0.66", "-14.9125, 8.59157, 3.49626, 0.51", "-15.0265, 8.7975, 2.85638, 0.51", "-15.147, 9.10124, 2.0403, 0.51", "-15.2166, 9.41294, 1.28129, 0.51", "-15.2332, 9.62088, 0.82522, 0.51", "-15.2358, 9.85061, 0.340989, 0.51", "-15.2383, 10.151, -0.302289, 0.51", "-15.2749, 10.6401, -1.43839, 0.73", "-15.4063, 11.2654, -2.94439, 0.95", "-15.5745, 11.7857, -4.17837, 0.66", "-15.6822, 12.0613, -4.7965, 0.81", "-15.8525, 12.4637, -5.58883, 0.59", "-16.1252, 13.1078, -6.70122, 0.59", "-16.2973, 13.5391, -7.3268, 0.95", "-16.5323, 14.2907, -8.23974, 0.44", "-16.6514, 14.8602, -8.89229, 0.66", "-16.7434, 15.7122, -9.8044, 0.37", "-16.737, 16.3154, -10.4071, 1.1", "-16.67, 16.8844, -10.9511, 0.44", "-16.497, 17.7784, -11.811, 0.95", "-16.1849, 18.9833, -13.0301, 0.59", "-16.0184, 19.4604, -13.5378, 0.81", "-15.6591, 20.3214, -14.4803, 0.44", "-15.544, 20.5745, -14.7657, 0.44", "-15.4382, 20.8046, -15.032, 0.44", "-14.8675, 22.041, -16.4056, 0.37", "-14.6099, 22.5524, -16.9421, 0.37" ],
    "parent" : "dend_84",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "-0.127944, 0.74613, 23.1881, 0.95", "0.310527, 1.77867, 22.4973, 0.95", "0.543978, 2.35652, 22.179, 0.95", "0.797596, 2.97755, 21.8603, 0.59", "1.17399, 3.89225, 21.4314, 0.59", "1.39144, 4.44254, 21.2004, 0.59", "1.71443, 5.28189, 20.874, 0.59", "2.04564, 6.1485, 20.5929, 0.81", "2.30223, 6.79641, 20.3886, 0.95", "2.55862, 7.4665, 20.1939, 0.95", "2.83706, 8.17871, 20.0025, 0.66", "2.99266, 8.56768, 19.8576, 0.66", "3.10403, 8.83745, 19.7134, 0.66", "3.31024, 9.33507, 19.3488, 0.66", "3.6473, 10.1508, 18.61, 0.59", "3.83596, 10.6447, 18.0976, 0.59", "4.11828, 11.5503, 17.0999, 0.59", "4.32514, 12.4068, 16.1864, 0.59", "4.48403, 13.2736, 15.2917, 0.88", "4.59825, 14.2816, 14.314, 0.88", "4.63133, 14.9508, 13.7049, 0.37", "4.62445, 16.0176, 12.8655, 0.37", "4.58215, 16.7951, 12.3765, 0.37", "4.47654, 17.6886, 11.9047, 0.37", "4.33569, 18.5458, 11.5059, 0.66", "4.22537, 19.0787, 11.2865, 0.51", "4.12845, 19.5871, 11.0817, 0.07", "4.0507, 19.9886, 10.9238, 0.44", "3.80528, 21.1259, 10.4441, 0.07", "3.58805, 22.0645, 10.0418, 0.88", "3.47678, 22.5651, 9.79549, 0.88", "3.31403, 23.3827, 9.36081, 0.29", "3.204, 24.0593, 8.9877, 0.73" ],
    "parent" : "dend_84",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "29.6692, -24.0029, 19.237, 0.95", "29.7577, -24.8449, 20.3014, 0.95", "29.8305, -25.504, 21.1771, 0.15", "29.8482, -25.9601, 21.7473, 0.44", "29.8417, -26.3952, 22.2485, 0.95", "29.8008, -27.1208, 23.0758, 0.37", "29.7452, -27.8694, 23.8942, 0.37", "29.7092, -28.4246, 24.4343, 0.37", "29.6513, -29.1793, 25.1052, 0.37", "29.6025, -29.7846, 25.5855, 0.37", "29.5416, -30.6149, 26.1394, 1.03", "29.5359, -31.1563, 26.4653, 1.03", "29.6349, -32.3854, 27.2179, 0.66", "29.771, -33.1046, 27.6685, 1.18", "29.9856, -33.8381, 28.1872, 0.44", "30.2215, -34.5444, 28.7058, 0.95", "30.6561, -35.7342, 29.6676, 0.37", "31.0418, -36.7393, 30.582, 0.95", "31.206, -37.1596, 31.0044, 1.18", "31.5554, -38.0425, 31.971, 0.51", "31.7612, -38.6158, 32.6885, 0.22", "32.0465, -39.5646, 33.8572, 0.22", "32.0848, -39.7107, 34.0319, 0.81", "32.1281, -39.8934, 34.2419, 0.81", "32.2303, -40.3999, 34.8201, 0.29", "32.4599, -41.7797, 36.3428, 1.1", "32.5568, -42.669, 37.3718, 0.44", "32.5663, -43.5312, 38.3587, 1.1", "32.5388, -43.8453, 38.7416, 1.25", "32.3558, -44.6494, 39.7984, 0.37", "32.2109, -45.0019, 40.2839, 0.15", "31.8243, -45.6319, 41.1385, 0.15", "31.5111, -46.0449, 41.6885, 0.66", "31.0132, -46.7022, 42.4275, 0.29", "30.4325, -47.463, 43.2863, 0.95", "30.2715, -47.6795, 43.5149, 0.95", "29.935, -48.213, 44.0177, 0.22", "29.573, -48.9115, 44.496, 0.44", "29.3134, -49.491, 44.7722, 0.66" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "29.6692, -24.0029, 19.237, 0.59", "28.9774, -25.0111, 18.3946, 0.59", "28.0528, -26.3005, 17.3552, 0.37", "27.5138, -27.0291, 16.7775, 1.03", "27.3551, -27.2482, 16.6069, 1.18", "26.9123, -27.8984, 16.133, 0.51", "26.4749, -28.5644, 15.6829, 0.88", "25.8928, -29.4721, 15.155, 0.95", "25.6231, -29.925, 14.9495, 0.95", "25.2619, -30.568, 14.6594, 0.81", "24.9506, -31.1519, 14.3962, 0.44", "24.7298, -31.6079, 14.2068, 0.44", "24.4342, -32.2759, 14.0006, 0.44", "24.1961, -32.9519, 13.8765, 0.44" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "63.2719, -48.4888, -0.635459, 0.07", "64.4528, -48.4377, -0.51128, 0.07", "65.3414, -48.3726, -0.517496, 0.73", "66.8541, -48.2247, -0.596329, 0.07", "68.3791, -48.002, -0.713393, 0.88", "68.9148, -47.8857, -0.776849, 0.88", "69.8192, -47.6295, -0.928483, 0.15", "71.4923, -46.9797, -1.37759, 0.15", "71.8521, -46.7853, -1.50867, 0.95", "72.7136, -46.1232, -1.90682, 0.07", "73.7107, -45.0915, -2.38451, 0.81", "74.2646, -44.3923, -2.6328, 0.15", "74.4523, -44.1053, -2.71807, 0.44", "74.6907, -43.6693, -2.79128, 0.15", "75.0082, -43.0157, -2.89266, 0.15", "75.2965, -42.285, -2.94676, 0.15", "75.5585, -41.611, -2.83074, 0.73" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "63.2719, -48.4888, -0.635459, 0.15", "63.689, -48.8788, -1.06895, 0.15", "64.6063, -49.7268, -1.86532, 0.73", "64.8609, -49.9488, -2.05068, 0.73", "65.7735, -50.7098, -2.61614, 0.15", "66.0084, -50.9002, -2.74553, 0.15", "66.3523, -51.1761, -2.88145, 0.44", "66.8846, -51.5858, -2.98492, 0.95", "68.0828, -52.5662, -2.90932, 0.07", "68.5636, -52.968, -2.82221, 0.07", "68.8105, -53.1704, -2.7786, 0.95", "70.0298, -54.1656, -2.61424, 0.07", "70.5825, -54.6205, -2.55442, 0.22", "71.5776, -55.4592, -2.4664, 0.22", "72.2634, -56.0487, -2.4168, 1.32", "73.8666, -57.414, -2.48634, 0.15", "74.3487, -57.8147, -2.55951, 0.15", "74.7088, -58.1056, -2.65952, 0.37", "75.0627, -58.3806, -2.76848, 0.07", "75.5866, -58.7777, -2.93864, 0.73", "76.375, -59.3939, -3.12047, 0.07", "76.7553, -59.7073, -3.16259, 0.44", "77.2583, -60.105, -3.22599, 0.07", "77.7673, -60.4882, -3.28603, 0.07", "78.4653, -61.0013, -3.35494, 0.73", "79.2728, -61.5872, -3.41883, 0.15", "79.9654, -62.1016, -3.45822, 0.15", "80.7924, -62.6805, -3.50662, 0.66", "81.1111, -62.8969, -3.5297, 0.66", "81.7187, -63.2978, -3.58432, 0.37", "82.3263, -63.6689, -3.64402, 0.07", "82.7682, -63.9336, -3.69366, 0.37", "83.46, -64.352, -3.75932, 0.37" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "21.7703, -72.4009, 24.3977, 0.15", "21.4603, -73.597, 24.4159, 0.15", "21.2758, -74.3087, 24.4266, 0.15", "20.9974, -75.3829, 24.4429, 0.88", "20.6147, -76.8594, 24.4653, 0.07", "20.4026, -77.6777, 24.4777, 0.07", "20.2266, -78.357, 24.488, 0.81" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "21.7703, -72.4009, 24.3977, 0.15", "21.9499, -73.225, 25.888, 0.15", "21.9449, -73.9659, 27.2411, 0.59", "21.8453, -74.3506, 28.1525, 0.22", "21.7915, -74.5585, 28.6454, 0.44", "21.6194, -75.223, 30.22, 0.07", "21.5584, -75.4588, 30.7788, 0.51", "21.3566, -75.6895, 31.4412, 0.22", "20.5634, -76.1071, 33.0976, 0.51" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "1.14496, -61.0691, 24.7915, 0.73", "1.89566, -61.8606, 24.711, 0.73", "2.65093, -62.6568, 24.63, 0.29", "3.08495, -63.1144, 24.5834, 0.51", "3.88973, -63.9629, 24.497, 0.15", "4.41617, -64.5179, 24.4406, 0.44" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "1.14496, -61.0691, 24.7915, 0.88", "1.31927, -61.7811, 25.432, 0.88", "1.58313, -62.7974, 26.3309, 0.15", "1.91238, -63.9502, 27.3986, 0.15", "2.05568, -64.4309, 27.8343, 0.95", "2.18549, -64.8637, 28.2261, 1.25", "2.6891, -66.6485, 29.8002, 0.07", "2.86693, -67.4097, 30.4325, 1.03", "3.04219, -68.3789, 31.1138, 0.07", "3.11998, -69.0193, 31.4763, 0.81", "3.16222, -69.7595, 31.8192, 0.81", "3.1556, -70.3477, 32.0192, 0.81", "3.07348, -71.7925, 32.2902, 0.15", "3.02258, -72.3998, 32.3737, 0.15", "2.93204, -73.535, 32.4968, 0.88", "2.88107, -74.4115, 32.5971, 0.29", "2.867, -75.4812, 32.7204, 0.07", "2.91246, -76.3352, 32.846, 1.03", "2.95864, -76.6618, 32.9045, 1.03", "3.17123, -77.7686, 33.1479, 0.22", "3.3248, -78.396, 33.3038, 0.22", "3.46279, -78.8531, 33.4231, 0.73", "3.65255, -79.432, 33.5726, 1.1", "4.14809, -80.8064, 33.9467, 0.15", "4.53027, -81.8144, 34.2206, 0.37", "4.82244, -82.4824, 34.4283, 0.07", "5.09668, -83.0576, 34.6319, 0.07", "5.23833, -83.3435, 34.7406, 0.44", "5.71427, -84.2808, 35.1115, 0.07", "5.89083, -84.6243, 35.2483, 0.51", "6.48094, -85.7155, 35.6575, 0.07", "6.64077, -86.0159, 35.7794, 0.07", "6.8685, -86.4736, 35.9732, 0.37", "7.11518, -86.9913, 36.1956, 0.07", "7.24984, -87.3553, 36.3403, 0.51" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "4.88576, 23.3855, -39.3088, 0.29", "3.62412, 23.6747, -39.9436, 0.29", "2.61866, 23.9379, -40.4553, 0.51", "1.33186, 24.3611, -41.1249, 0.29", "0.184616, 24.7385, -41.7219, 0.29", "-0.601544, 24.9971, -42.1309, 0.59", "-1.43332, 25.2707, -42.5637, 0.29", "-1.80991, 25.4327, -42.7958, 0.29", "-2.39984, 25.7396, -43.1423, 0.29" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "4.88576, 23.3855, -39.3088, 0.29", "4.18605, 22.9521, -39.2941, 0.29", "3.51256, 22.5351, -39.2799, 0.73", "2.41113, 21.8529, -39.2568, 0.22", "1.46998, 21.2701, -39.237, 0.22", "0.999466, 20.9787, -39.2271, 0.44", "0.481309, 20.6578, -39.2163, 0.44" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "0.764659, 20.9055, -1.01056, 0.88", "0.789332, 22.5829, -1.54931, 0.88", "0.711219, 23.6733, -1.95036, 1.1", "0.671612, 24.2262, -2.15372, 1.1", "0.604485, 25.1632, -2.49837, 1.03", "0.528161, 26.2286, -2.89025, 1.03", "0.427591, 27.6325, -3.40661, 1.03", "0.234495, 28.5535, -3.85185, 1.18" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "0.764659, 20.9055, -1.01056, 0.44", "0.547055, 21.5492, -0.125481, 0.44", "0.230893, 22.4844, 1.16048, 0.66", "0.14585, 22.736, 1.50638, 1.03" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "25.101, 34.3342, -17.1857, 0.66", "24.7941, 34.9845, -17.2691, 0.66", "24.4967, 35.5787, -17.4395, 0.66", "24.1683, 36.1876, -17.6761, 0.95", "23.8679, 36.7394, -17.9657, 0.95", "23.4419, 37.5378, -18.5082, 0.88", "23.1555, 38.0905, -18.9483, 0.59", "22.8515, 38.7293, -19.5853, 0.37", "22.6462, 39.1826, -20.127, 1.1", "22.253, 40.0911, -21.3305, 0.66", "21.894, 40.9053, -22.5152, 0.44", "21.6271, 41.4797, -23.4434, 0.81", "21.2506, 42.1962, -24.7731, 0.51", "20.8388, 42.8405, -26.2136, 0.51", "20.6702, 43.0466, -26.8127, 1.1", "20.4604, 43.2209, -27.5576, 0.66", "20.1763, 43.3726, -28.6393, 0.66", "19.9187, 43.4665, -29.7554, 0.66", "19.6105, 43.566, -31.359, 0.66", "19.4603, 43.6364, -32.4757, 0.66", "19.3841, 43.7194, -33.4479, 0.66", "19.3729, 43.9242, -34.9272, 0.66", "19.4573, 44.2124, -36.3079, 0.66", "19.6687, 44.7213, -37.9755, 0.66", "19.8337, 45.0676, -38.7832, 0.66", "19.9659, 45.3412, -39.2647, 0.95", "20.4901, 46.3714, -40.6235, 0.44", "20.7278, 46.8705, -41.1213, 0.66", "20.9694, 47.4565, -41.6074, 0.22", "21.0752, 47.8572, -41.8724, 0.22", "21.1138, 48.3159, -42.1352, 0.22", "21.0478, 49.0605, -42.5117, 0.88", "20.7137, 50.5306, -43.1286, 0.51", "20.3719, 51.6114, -43.561, 0.22", "19.9728, 52.6658, -43.9917, 0.44", "19.6995, 53.2875, -44.2276, 0.15", "19.3585, 53.9606, -44.4297, 0.73", "19.1955, 54.2322, -44.4853, 0.73", "18.9535, 54.6474, -44.4495, 0.29" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "25.101, 34.3342, -17.1857, 0.66", "26.3073, 35.2891, -16.2904, 0.66", "27.0059, 35.8671, -15.7069, 0.66", "27.5081, 36.3016, -15.28, 0.73", "28.4709, 37.1417, -14.4688, 0.73", "29.7292, 38.2966, -13.435, 0.59", "30.0783, 38.6413, -13.1476, 0.59", "30.7894, 39.4395, -12.6063, 0.73", "31.2526, 39.9962, -12.3488, 0.59", "31.7654, 40.6847, -12.2639, 0.59", "32.333, 41.5477, -12.4775, 1.03", "33.0396, 42.8409, -13.1829, 0.59", "33.5683, 44.0495, -14.0386, 0.59", "34.0702, 45.7303, -15.4768, 0.59", "34.2103, 46.7904, -16.5405, 0.59", "34.2137, 47.2715, -17.0601, 0.59", "34.1027, 48.3507, -18.2418, 0.51", "33.8448, 49.5541, -19.5482, 0.51", "33.4521, 50.8918, -20.9274, 0.88", "32.9452, 52.3896, -22.4679, 0.73", "32.8109, 52.8117, -22.9256, 0.73", "32.5777, 53.6713, -23.9144, 1.1", "32.3861, 54.9473, -25.5275, 0.59", "32.3925, 56.2895, -27.4922, 0.59", "32.5018, 56.8905, -28.4384, 0.73", "32.7611, 57.5823, -29.7045, 0.73", "32.9916, 57.9998, -30.6519, 1.03", "33.5183, 58.6236, -32.4562, 0.59", "34.0775, 59.1008, -34.0726, 0.59", "34.2521, 59.2273, -34.5444, 0.73", "35.1367, 59.8516, -37.021, 0.73", "35.5919, 60.1511, -38.3851, 0.73", "35.9915, 60.3696, -39.6568, 1.03", "36.1173, 60.4341, -40.0843, 1.25" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-20.1614, 5.47046, -10.1002, 0.73", "-20.0726, 6.50487, -11.6539, 0.73", "-20.0683, 7.49473, -13.1447, 0.88", "-20.1189, 8.43628, -14.7645, 1.1", "-20.159, 8.96804, -15.8455, 0.59", "-20.1567, 9.36614, -16.8137, 0.51", "-20.118, 9.76936, -17.8917, 0.29", "-20.0807, 10.1892, -19.3036, 0.37", "-20.031, 10.6358, -21.3448, 0.66", "-19.9757, 10.8829, -23.1339, 1.03", "-19.8418, 10.9722, -25.0501, 0.73", "-19.7378, 10.9358, -25.8887, 0.73", "-19.5, 10.8025, -27.0084, 0.73", "-19.2353, 10.6364, -27.8829, 0.73", "-19.0859, 10.5389, -28.3402, 0.73", "-18.7776, 10.269, -29.5655, 0.73", "-18.6286, 10.0651, -30.4895, 0.73", "-18.4403, 9.6809, -32.0134, 0.73", "-18.1888, 9.10026, -34.144, 0.73", "-17.8691, 8.37047, -36.8024, 0.73", "-17.7311, 7.85187, -38.6551, 0.73", "-17.7156, 7.58738, -39.5887, 0.73", "-17.7796, 7.13793, -41.099, 0.73", "-17.8723, 6.77149, -42.2979, 0.73", "-17.9341, 6.53216, -43.2207, 0.73", "-18.1104, 5.5295, -48.6213, 0.73", "-18.103, 5.4573, -49.2444, 0.88", "-18.0133, 5.36574, -50.9125, 0.88", "-17.8266, 5.38438, -53.7466, 0.88", "-17.6977, 5.45355, -55.6453, 0.73", "-17.5669, 5.52219, -57.562, 0.44", "-17.4941, 5.54606, -58.186, 0.07", "-17.2274, 5.51849, -60.0771, 1.18", "-16.8288, 5.2875, -63.2006, 1.03", "-16.7565, 5.14965, -64.1581, 0.73", "-16.7323, 4.90241, -65.3804, 0.73", "-16.7403, 4.62584, -66.7241, 0.73", "-16.7663, 4.35239, -68.1763, 0.73", "-16.8707, 4.06144, -69.9717, 0.73", "-16.9365, 3.93587, -71.0995, 0.73", "-17.0477, 3.82176, -73.078, 0.73", "-17.1109, 3.81904, -73.9693, 0.73", "-17.2153, 3.85364, -75.0131, 1.1", "-17.5581, 4.0552, -77.738, 0.22", "-17.8219, 4.28705, -79.8374, 0.59", "-17.9199, 4.393, -80.6665, 0.59", "-18.0381, 4.56308, -81.8538, 0.59", "-18.1023, 4.69704, -82.8707, 0.59", "-18.1092, 4.81481, -83.7959, 0.66", "-17.9176, 5.04245, -85.806, 0.66", "-17.676, 5.15779, -87.4552, 0.51", "-17.3124, 5.21631, -89.5812, 0.51", "-16.9867, 5.19019, -91.1768, 0.51", "-16.5531, 5.11091, -92.8524, 0.51", "-16.0184, 4.93753, -94.4806, 0.51", "-15.1266, 4.55413, -96.6189, 0.37", "-14.1249, 4.0313, -98.259, 0.37", "-12.5995, 3.17866, -99.0906, 0.37", "-8.48319, 0.88201, -99.0065, 0.29", "-6.87615, -0.0188993, -98.6028, 0.29", "-5.55189, -0.772063, -98.066, 0.15", "-3.95939, -1.68023, -97.2368, 0.15", "-3.27147, -2.07392, -96.8202, 0.15", "-2.78966, -2.3653, -96.5169, 0.15", "-2.11087, -2.84533, -96.3472, 0.66" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-20.1614, 5.47046, -10.1002, 0.51", "-20.5468, 5.35238, -10.4381, 0.51", "-20.8558, 5.21714, -10.6695, 0.51", "-21.4146, 5.00442, -11.025, 0.51", "-21.768, 4.91429, -11.2877, 0.51", "-22.0351, 4.8849, -11.6295, 0.51", "-22.1755, 4.88765, -11.8834, 0.51", "-22.3299, 4.91505, -12.2903, 0.51", "-22.4225, 4.95554, -12.6527, 0.51", "-22.5347, 5.05331, -13.433, 0.51", "-22.636, 5.19123, -14.9197, 0.51", "-22.6767, 5.25181, -15.812, 0.51", "-22.6925, 5.26352, -16.4538, 0.51", "-22.6952, 5.23943, -16.9267, 0.51", "-22.7171, 5.15229, -17.6933, 0.51", "-22.7848, 4.97274, -18.6591, 0.51", "-22.8609, 4.83581, -19.2547, 0.51", "-23.0456, 4.57031, -20.3244, 0.51", "-23.2921, 4.26663, -21.597, 0.51", "-23.5341, 4.02127, -22.8082, 0.51", "-23.8976, 3.74474, -24.7858, 0.73", "-23.9993, 3.70273, -25.5046, 0.73", "-24.0708, 3.72417, -26.2518, 0.73", "-24.1245, 3.84266, -27.2027, 0.73", "-24.1446, 4.0348, -28.2008, 0.73", "-24.1006, 4.34889, -29.3484, 0.59", "-23.997, 4.77235, -30.4349, 0.59", "-23.8514, 5.23561, -31.4981, 0.81", "-23.7802, 5.47831, -31.9912, 1.03" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-17.1169, 6.12742, -4.13806, 0.22", "-16.4195, 6.67351, -5.05637, 0.22", "-16.006, 7.07169, -5.65322, 0.29", "-15.5879, 7.53645, -6.3201, 0.29", "-15.2961, 7.87969, -6.79324, 0.29", "-14.9789, 8.23887, -7.32996, 0.44", "-14.8376, 8.40566, -7.58282, 0.73", "-14.6081, 8.74337, -8.03627, 0.73", "-14.4321, 9.07735, -8.47637, 0.73", "-14.2895, 9.38534, -8.87964, 0.37", "-14.0304, 9.96402, -9.69532, 0.73", "-13.9081, 10.2298, -10.099, 0.37", "-13.7783, 10.4765, -10.4904, 0.51", "-13.595, 10.8041, -11.0129, 0.29" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-17.1169, 6.12742, -4.13806, 0.81", "-17.031, 6.5124, -3.86381, 0.81", "-16.6189, 8.22124, -2.49229, 0.81", "-16.2157, 10.071, -0.885097, 0.81", "-16.024, 11.0048, -0.0733173, 0.81", "-15.8552, 11.8007, 0.595532, 0.66", "-15.766, 12.2066, 0.916696, 0.66", "-15.5422, 13.1066, 1.60007, 0.66", "-15.3737, 14.0061, 2.2122, 0.66", "-15.3238, 14.5012, 2.54536, 0.66", "-15.2864, 15.0933, 2.98207, 0.66", "-15.2028, 16.8931, 4.42662, 0.66", "-15.0519, 18.5825, 5.86983, 0.66", "-14.8041, 20.1003, 7.26078, 0.66", "-14.5896, 21.0679, 8.24378, 0.66", "-14.3679, 21.9524, 9.16843, 0.66", "-14.0945, 22.8592, 10.0688, 0.66", "-13.8169, 23.588, 10.7048, 0.66", "-13.3207, 24.7358, 11.4518, 0.66", "-12.7411, 26.0234, 11.971, 0.66", "-12.2145, 27.4614, 12.2773, 0.66", "-11.7713, 29.072, 12.4731, 0.66", "-11.5798, 29.9639, 12.5018, 0.66", "-11.3697, 31.1413, 12.4802, 0.66", "-11.205, 32.1346, 12.4256, 0.51", "-10.8546, 34.23, 12.3576, 0.66", "-10.6248, 35.8951, 12.4776, 0.95", "-10.5007, 37.4321, 12.7553, 0.66", "-10.4483, 38.7821, 13.0791, 0.66", "-10.4517, 39.9499, 13.4034, 0.88", "-10.5909, 42.0556, 14.1248, 1.03", "-10.9222, 44.3429, 15.0903, 1.54", "-11.3881, 46.4605, 16.1639, 0.66", "-11.6057, 47.2356, 16.6392, 0.88", "-11.8006, 47.7802, 17.0236, 0.81", "-12.4554, 49.2511, 18.2776, 0.81", "-13.09, 50.2998, 19.4471, 0.51", "-13.522, 50.9129, 20.3898, 0.66", "-13.7962, 51.2564, 21.0635, 0.66", "-14.0559, 51.5459, 21.7047, 0.66", "-14.5837, 52.0608, 22.9493, 0.51", "-15.2225, 52.5951, 24.4264, 0.37", "-16.1997, 53.3489, 26.6644, 0.51", "-16.416, 53.5235, 27.1685, 0.51", "-16.8608, 53.9553, 28.2154, 0.51", "-17.1216, 54.2687, 28.8388, 0.51", "-18.0399, 55.5265, 30.9664, 0.66", "-18.586, 56.3953, 32.2796, 0.66", "-19.0862, 57.2309, 33.4017, 0.44", "-19.7749, 58.494, 34.8777, 0.66", "-20.3565, 59.6123, 35.9434, 0.29", "-20.6304, 60.1105, 36.2989, 0.44", "-21.1636, 60.9971, 36.6646, 0.37", "-21.709, 61.887, 36.8163, 0.15", "-22.1756, 62.627, 36.7637, 0.15", "-22.7091, 63.4537, 36.5329, 0.15", "-23.249, 64.2288, 36.1733, 0.37", "-23.4855, 64.5166, 35.9848, 0.22", "-23.7425, 64.7589, 35.7588, 0.22", "-24.1067, 65.0618, 35.4318, 0.22", "-24.6676, 65.4698, 34.9468, 0.22", "-25.5244, 66.0516, 34.2976, 0.22", "-26.4342, 66.6882, 33.7284, 0.22", "-27.1304, 67.1933, 33.362, 0.22", "-27.9845, 67.8702, 32.998, 0.22", "-28.2822, 68.1426, 32.8793, 0.37", "-29.1015, 68.9948, 32.5691, 0.15", "-29.8109, 69.8438, 32.3491, 0.29", "-30.3521, 70.5302, 32.2144, 0.22", "-31.0435, 71.3896, 32.0586, 0.22", "-31.7481, 72.2979, 31.8867, 0.07", "-31.9594, 72.578, 31.8277, 0.07", "-32.3542, 73.0967, 31.6955, 0.07", "-32.7304, 73.5389, 31.5654, 0.07", "-33.0219, 73.8357, 31.4829, 0.37" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-22.7032, -5.94316, -5.95803, 0.51", "-23.9779, -7.56624, -6.63416, 0.51", "-24.3715, -8.14687, -6.84155, 0.59", "-25.3563, -9.66297, -7.22797, 0.44", "-26.1852, -10.8881, -7.40864, 0.44", "-26.9399, -11.8153, -7.44445, 0.73", "-27.8677, -12.7325, -7.3931, 0.44", "-29.2818, -13.7757, -6.99776, 0.44", "-30.6409, -14.4738, -6.48354, 0.22", "-31.9295, -14.9014, -5.8982, 0.22", "-34.1274, -15.3527, -4.87676, 0.88", "-35.6961, -15.5341, -4.19135, 0.66", "-37.5593, -15.6495, -3.46013, 0.44", "-38.3494, -15.6776, -3.17748, 0.15", "-39.0699, -15.7137, -2.98955, 0.59", "-40.3262, -15.8436, -2.80377, 0.22", "-41.5424, -16.0544, -2.74795, 1.03", "-43.6547, -16.5763, -2.91713, 0.07", "-44.6811, -16.8636, -3.11932, 0.81", "-45.8046, -17.1783, -3.38072, 0.95", "-46.7532, -17.4487, -3.64609, 0.95", "-47.6907, -17.7265, -3.98065, 0.73", "-49.2479, -18.2245, -4.71088, 0.37", "-49.882, -18.4464, -5.13509, 0.88" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-22.7032, -5.94316, -5.95803, 0.66", "-22.5632, -7.271, -4.12631, 0.66", "-22.4358, -9.05028, -1.34354, 1.25", "-22.4459, -10.1851, 0.617787, 1.18", "-22.624, -11.6258, 3.09683, 0.73", "-22.7722, -12.2371, 4.10826, 0.37", "-23.3102, -13.6485, 6.47, 0.73", "-24.6175, -15.6388, 10.1021, 1.32", "-25.8274, -16.9641, 12.7533, 1.25", "-26.7767, -17.8141, 14.6495, 0.88", "-27.7679, -18.5701, 16.5511, 0.51", "-28.919, -19.3656, 18.8307, 0.51", "-30.3123, -20.242, 21.7047, 0.51", "-31.164, -20.8261, 24.0633, 0.51", "-31.2907, -20.9285, 25.5731, 0.51", "-31.254, -20.8935, 26.3399, 0.51", "-31.1656, -20.8183, 27.2264, 0.51", "-31.0265, -20.6811, 28.4616, 0.51", "-30.7435, -20.2301, 31.4049, 0.51", "-30.2495, -19.0954, 37.5674, 0.66", "-30.0801, -18.5349, 40.3735, 1.03", "-29.9585, -17.8106, 43.9311, 1.03", "-29.9547, -17.5784, 45.0735, 1.03", "-29.9918, -17.3874, 46.031, 1.18" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-19.4554, -10.6937, -13.9337, 1.18", "-19.6459, -13.1603, -14.5004, 1.18", "-19.6548, -13.6046, -14.5472, 1.18", "-19.6534, -13.8508, -14.5688, 1.18", "-19.6416, -14.3736, -14.5871, 1.18", "-19.5824, -15.3013, -14.6314, 1.18", "-19.3124, -18.0826, -14.7299, 1.18", "-18.8635, -21.4896, -14.6847, 0.88", "-18.4038, -24.0782, -14.6393, 1.47", "-18.0783, -25.5459, -14.5905, 1.18", "-17.3179, -28.5764, -14.5063, 0.59", "-17.0192, -29.6809, -14.4823, 0.95", "-16.7107, -30.6909, -14.4611, 1.32", "-15.867, -33.3083, -14.4379, 0.59", "-15.4501, -34.6463, -14.4609, 0.66", "-14.8722, -36.6145, -14.5743, 0.37", "-14.4338, -38.1702, -14.6887, 0.51", "-13.9114, -39.9966, -14.9209, 1.1", "-13.4841, -41.355, -15.177, 0.37", "-12.9768, -42.7636, -15.5157, 1.47", "-12.5808, -43.6746, -15.7818, 1.47", "-11.6784, -45.2442, -16.2795, 1.03", "-11.1307, -46.028, -16.5642, 0.66", "-10.1876, -47.2932, -17.0596, 0.66", "-9.49195, -48.2572, -17.4602, 0.66", "-9.17552, -48.7319, -17.6507, 0.88", "-8.60759, -49.655, -17.9912, 0.88", "-7.74095, -51.1449, -18.4754, 0.88", "-6.88249, -52.6294, -18.874, 0.44", "-5.96402, -54.2155, -19.2313, 0.59", "-4.8853, -56.1021, -19.6372, 1.18", "-4.60479, -56.6138, -19.7609, 1.4", "-3.65819, -58.3814, -20.2591, 1.03", "-3.17068, -59.2905, -20.5658, 0.81", "-3.04129, -59.5399, -20.6798, 0.81", "-2.18596, -61.1779, -21.5203, 0.51", "-0.969955, -63.4323, -22.8155, 0.88", "-0.0961028, -65.0462, -23.8549, 1.18", "0.932846, -66.9417, -25.2731, 1.18", "2.8155, -70.368, -28.1863, 1.18", "3.23806, -71.1386, -28.9434, 0.51", "3.65369, -71.9435, -29.8514, 0.51", "4.10478, -72.8963, -31.0611, 0.51", "4.66465, -74.2873, -32.9664, 0.88", "4.83785, -74.9188, -33.8388, 1.32", "5.01963, -76.7136, -36.0686, 0.88", "5.03236, -78.1333, -37.6859, 0.81", "4.9771, -79.4254, -39.0385, 0.81", "4.92053, -80.6561, -40.2275, 0.81", "4.8783, -81.8196, -41.2423, 0.81", "4.83517, -84.4874, -43.3985, 0.81", "4.84166, -84.9696, -43.7537, 0.81", "4.85938, -85.378, -44.0338, 0.81", "4.87856, -86.6247, -44.7246, 0.73", "4.88103, -88.0551, -45.1855, 0.73", "4.93337, -89.0082, -45.362, 0.73", "5.05732, -90.2327, -45.2847, 0.29", "5.15376, -91.2207, -45.1552, 0.29", "5.22007, -92.3151, -44.8995, 0.29", "5.21784, -93.9665, -44.1887, 0.88" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-19.4554, -10.6937, -13.9337, 0.66", "-19.5322, -11.0773, -14.8398, 0.66", "-19.6496, -11.6033, -16.0707, 0.66", "-19.8081, -12.1875, -17.387, 0.66", "-20.0191, -12.8781, -18.8218, 0.88", "-20.3062, -13.6249, -20.3491, 0.37", "-20.4862, -14.0272, -21.1774, 0.37", "-20.6391, -14.3081, -21.7785, 0.37", "-20.9436, -14.6932, -22.6472, 0.37", "-21.2382, -14.9267, -23.2641, 0.95", "-21.6678, -15.1313, -23.9646, 0.66", "-21.9412, -15.2393, -24.3932, 0.44", "-22.3431, -15.4459, -25.1774, 0.73", "-22.7877, -15.6925, -26.2428, 0.22", "-22.8935, -15.7621, -26.5697, 0.95", "-23.0806, -15.9405, -27.3697, 0.95", "-23.3445, -16.3024, -28.89, 0.95", "-23.5597, -16.7504, -30.6573, 0.44", "-23.6262, -16.9818, -31.5119, 0.66", "-23.6868, -17.2658, -32.4461, 0.44", "-23.7737, -17.7486, -33.8224, 0.81", "-23.8044, -17.9078, -34.2391, 0.95", "-23.9707, -18.5354, -35.8012, 0.29", "-24.1057, -18.9458, -36.8037, 0.44", "-24.3752, -19.6925, -38.4267, 0.59", "-24.488, -20.0123, -39.0213, 0.59", "-24.5575, -20.2273, -39.3745, 0.59", "-24.7316, -20.9066, -40.3591, 0.59", "-24.8281, -21.392, -41.0045, 1.1", "-25.1133, -23.592, -43.7069, 0.59", "-25.2142, -25.501, -45.8378, 0.59", "-25.2186, -26.3676, -46.7025, 0.73", "-25.1752, -27.5612, -47.7473, 0.29", "-25.1417, -28.0056, -48.0752, 0.59", "-25.0258, -28.9317, -48.6288, 0.73", "-24.6846, -30.511, -49.31, 0.22", "-24.4505, -31.4324, -49.668, 0.22", "-24.422, -31.5536, -49.713, 0.51", "-24.323, -31.9871, -49.8741, 0.07", "-23.985, -33.5551, -50.4742, 0.88", "-23.542, -35.5429, -51.246, 0.37", "-23.0938, -37.5076, -52.0438, 0.15", "-22.8401, -38.5979, -52.5218, 0.37" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_104",
    "id" : "dend_104",
    "points3d" : [ "-11.6069, -30.8967, 46.2926, 0.07", "-11.3965, -30.0581, 46.3408, 0.07", "-11.2113, -29.3198, 46.3832, 0.07", "-11.0624, -28.7265, 46.4173, 0.07", "-10.9598, -28.3175, 46.4409, 0.37", "-10.8097, -27.7195, 46.4752, 0.37", "-10.6809, -27.2062, 46.5047, 0.66" ],
    "parent" : "dend_102",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_103",
    "id" : "dend_103",
    "points3d" : [ "-11.6069, -30.8967, 46.2926, 0.22", "-12.9838, -30.4991, 46.3157, 0.22", "-13.6065, -30.3664, 46.3152, 0.22", "-14.3302, -30.2514, 46.3056, 0.22", "-14.8389, -30.1845, 46.3203, 0.22", "-15.6722, -30.0716, 46.3607, 0.73", "-16.0999, -30.004, 46.3852, 0.73", "-16.864, -29.8635, 46.4468, 0.73", "-17.2104, -29.7793, 46.471, 0.73", "-18.1888, -29.4801, 46.508, 0.07", "-18.609, -29.3263, 46.5189, 0.07", "-19.087, -29.1236, 46.5241, 0.07", "-19.6581, -28.8467, 46.5178, 1.1", "-20.4872, -28.3981, 46.4871, 0.15", "-21.2384, -27.9743, 46.4011, 0.88", "-21.8801, -27.6137, 46.3239, 0.66", "-22.286, -27.3979, 46.2896, 0.66", "-22.7307, -27.172, 46.2663, 0.22", "-23.0816, -27.01, 46.272, 0.51", "-23.9498, -26.6327, 46.3906, 0.15", "-25.0762, -26.1789, 46.6318, 0.15", "-25.5392, -25.9994, 46.7497, 0.15", "-26.2971, -25.6876, 46.9871, 0.59", "-27.1185, -25.3264, 47.3448, 0.22", "-28.102, -24.8775, 47.8558, 0.88", "-28.5367, -24.6593, 48.1127, 0.51", "-29.0006, -24.3737, 48.3812, 0.73", "-29.6001, -23.9224, 48.7515, 0.44", "-30.4552, -23.1443, 49.2797, 0.07", "-30.8107, -22.7633, 49.4764, 0.07", "-31.1562, -22.3519, 49.6603, 0.73", "-31.6986, -21.6776, 49.9487, 0.07", "-32.0507, -21.2372, 50.1087, 0.07", "-32.4128, -20.8157, 50.1917, 0.07", "-33.0453, -20.0662, 50.1997, 0.22" ],
    "parent" : "dend_102",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_97",
    "id" : "dend_97",
    "points3d" : [ "10.1916, 4.42546, 30.4224, 0.81", "8.98332, 5.6519, 30.6203, 0.81", "8.3568, 6.34494, 30.6969, 0.81", "7.47932, 7.43155, 30.8149, 0.81", "6.966, 8.16902, 30.8864, 0.81", "6.59476, 8.80702, 30.9684, 0.88", "6.38322, 9.23953, 31.0304, 1.18", "6.04323, 10.2637, 31.1624, 0.59", "5.90858, 11.0304, 31.2696, 0.59", "5.8862, 11.9607, 31.4112, 0.59", "5.92637, 13.0774, 31.6496, 0.44", "5.94994, 13.6128, 31.784, 0.95", "5.98658, 14.4411, 32.0488, 0.44", "5.9874, 14.959, 32.2375, 0.44", "5.89813, 16.0346, 32.6857, 0.37", "5.72657, 17.0031, 33.0917, 0.37", "5.49516, 17.9168, 33.4707, 0.66", "5.16925, 18.9219, 33.8837, 0.95", "4.83394, 19.7307, 34.2056, 0.95", "4.03991, 21.3238, 34.7685, 0.88", "3.246, 22.7419, 35.1847, 0.59", "2.72522, 23.6443, 35.4128, 0.59", "2.13291, 24.6152, 35.636, 0.59", "1.44846, 25.676, 35.8157, 0.22", "0.746985, 26.707, 35.961, 0.22", "0.394433, 27.1405, 35.9742, 0.73" ],
    "parent" : "dend_91",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_92",
    "id" : "dend_92",
    "points3d" : [ "10.1916, 4.42546, 30.4224, 0.66", "11.2234, 4.89054, 31.1065, 0.66", "13.0211, 5.93544, 32.3364, 0.66", "13.8672, 6.57838, 32.9295, 0.66", "14.5213, 7.17627, 33.4058, 0.59", "15.3888, 8.05885, 34.0346, 0.59", "16.0128, 8.70475, 34.5103, 0.59", "16.5051, 9.28173, 34.9293, 0.59", "17.2247, 10.1035, 35.5195, 0.59", "18.378, 11.4505, 36.5456, 0.59", "18.7672, 11.8923, 36.9005, 0.88", "19.8111, 12.9931, 37.8061, 0.59", "20.6499, 13.7661, 38.5593, 0.59", "21.5512, 14.4454, 39.3459, 1.4" ],
    "parent" : "dend_91",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "3.204, 24.0593, 8.9877, 0.37", "3.61894, 24.4454, 9.33357, 0.37", "4.33755, 24.8684, 9.95166, 0.29", "4.93228, 25.0767, 10.4305, 0.29", "5.57649, 25.1984, 10.9561, 0.29", "6.14083, 25.2217, 11.4404, 0.29", "6.42121, 25.2196, 11.7017, 0.29", "7.55854, 25.1043, 12.8368, 0.07", "8.14809, 25.0107, 13.463, 0.22", "9.03694, 24.8234, 14.3977, 0.22", "10.0638, 24.5581, 15.4853, 0.07", "10.6978, 24.3823, 16.1594, 0.22", "10.9475, 24.3174, 16.4426, 0.59", "11.3968, 24.226, 17.0412, 0.59" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "3.204, 24.0593, 8.9877, 0.29", "2.69215, 25.3172, 10.2889, 0.29", "2.37174, 26.085, 11.1084, 0.81", "2.0221, 26.9808, 12.0219, 0.29", "1.59885, 28.2656, 13.3418, 0.29", "1.38537, 29.0808, 14.2068, 0.29", "1.23806, 29.9959, 15.1843, 0.29", "1.25527, 30.5092, 15.765, 0.66", "1.37708, 31.0562, 16.4408, 0.66", "1.78683, 32.2625, 18.0402, 0.29", "2.03604, 32.9257, 18.9231, 0.29", "2.36394, 33.8276, 20.1512, 0.44", "2.70435, 34.8529, 21.5118, 0.44", "2.97099, 35.9416, 22.9426, 0.44", "3.06696, 37.0903, 24.4095, 0.29", "2.91916, 38.3987, 25.8822, 0.59", "2.50551, 39.7161, 27.1422, 0.37", "2.04185, 40.5439, 27.7843, 0.66", "1.36436, 41.3277, 28.1557, 0.37", "0.0140238, 42.5949, 28.4247, 0.22", "-1.30823, 43.6093, 28.2948, 0.51", "-2.5528, 44.3449, 27.8921, 0.22", "-3.23963, 44.6682, 27.5707, 0.22", "-4.53269, 45.1374, 26.8725, 0.73" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "29.3134, -49.491, 44.7722, 0.44", "29.2606, -50.1541, 44.5625, 0.44", "29.1973, -51.1455, 44.3124, 1.1", "29.1723, -52.3916, 43.9195, 0.22", "29.1724, -53.0345, 43.6883, 0.73", "29.1611, -53.5351, 43.4915, 0.73", "29.1315, -54.327, 43.1744, 0.22", "29.1165, -54.9637, 42.9018, 0.51", "29.0638, -56.8117, 42.1002, 0.07", "29.0025, -57.894, 41.6013, 0.95", "28.9068, -59.1262, 41.0022, 0.15", "28.8711, -59.4961, 40.8091, 0.51", "28.7075, -60.9239, 40.0058, 0.22", "28.6549, -61.3453, 39.7625, 0.66" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "29.3134, -49.491, 44.7722, 0.88", "29.6958, -50.074, 45.8144, 0.88", "30.0891, -50.942, 47.1095, 0.51", "30.5146, -52.2193, 48.749, 0.29", "30.6949, -52.9146, 49.5648, 0.29", "30.7776, -53.2619, 49.9378, 0.66", "30.925, -53.9281, 50.6039, 1.18", "31.194, -55.6633, 52.0532, 0.29", "31.2726, -56.4463, 52.5918, 0.29", "31.3425, -57.6863, 53.3247, 0.51", "31.3624, -58.7513, 53.9583, 0.07", "31.3574, -59.2491, 54.2678, 0.07", "31.3469, -59.7011, 54.5481, 0.22", "31.3429, -60.3414, 54.9174, 0.66", "31.3256, -61.4543, 55.5813, 0.29", "31.2504, -63.123, 56.5799, 0.07", "31.1567, -64.2691, 57.3214, 0.07", "31.1186, -64.7434, 57.6521, 0.07", "31.058, -65.5904, 58.2899, 0.81" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "24.1961, -32.9519, 13.8765, 0.07", "24.1169, -33.7708, 13.759, 0.07", "24.0275, -34.7554, 13.6175, 0.73", "23.9871, -35.2992, 13.4883, 0.37", "23.9531, -35.8528, 13.3031, 0.73", "23.8688, -37.5378, 12.6945, 0.22", "23.8563, -38.2294, 12.4177, 0.81", "23.8476, -38.7053, 12.1836, 0.81", "23.8248, -40.1378, 11.4578, 0.07", "23.8103, -41.1705, 10.9332, 0.07", "23.7866, -41.8268, 10.58, 1.4", "23.7, -43.6304, 9.61382, 0.88", "23.6118, -45.271, 8.70714, 0.15", "23.5406, -46.3931, 8.09119, 0.15", "23.4405, -47.6022, 7.47687, 1.4", "23.3008, -48.9272, 6.82316, 1.4" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "24.1961, -32.9519, 13.8765, 0.37", "23.0629, -33.2856, 14.3598, 0.37", "21.4523, -33.8263, 14.9474, 0.37", "20.5927, -34.1654, 15.1501, 0.37", "18.8831, -34.8922, 15.3849, 0.81", "18.0034, -35.2975, 15.4685, 0.81", "17.3162, -35.618, 15.5526, 0.81", "15.7207, -36.4798, 15.5428, 0.22", "14.0294, -37.4823, 15.37, 0.22", "13.2367, -37.9797, 15.2074, 0.88", "12.1438, -38.682, 14.7701, 0.15", "10.6041, -39.6786, 13.8202, 0.15", "8.32409, -41.1898, 12.0231, 0.37", "7.53084, -41.7252, 11.2393, 1.4", "6.36057, -42.4952, 9.77979, 1.32", "4.75107, -43.5675, 7.3439, 0.44", "3.44579, -44.471, 5.09893, 0.22", "2.99143, -44.82, 4.21466, 0.88", "2.09104, -45.6051, 2.3278, 0.07", "0.729428, -46.9904, -0.846574, 0.95", "0.143096, -47.7004, -2.323, 0.15", "-0.173733, -48.1408, -3.14421, 0.88", "-1.30572, -49.8574, -5.95425, 0.07", "-1.93697, -50.8464, -7.38195, 0.07", "-2.30539, -51.4392, -8.12479, 0.07", "-3.42984, -53.2366, -10.0934, 1.03", "-3.67991, -53.616, -10.4872, 1.25", "-5.1068, -55.6836, -12.7779, 0.29", "-6.87736, -58.1399, -15.4513, 0.29", "-7.21219, -58.5842, -15.9381, 0.29", "-7.78096, -59.3386, -16.7583, 0.88", "-8.13352, -59.8122, -17.2675, 0.88", "-10.5113, -63.056, -20.9181, 0.07", "-11.021, -63.753, -21.7631, 0.73" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "0.234495, 28.5535, -3.85185, 0.66", "0.370145, 29.7387, -4.77769, 0.66", "0.466012, 30.5749, -5.4051, 0.15", "0.588295, 31.5931, -6.17357, 0.51", "0.6705, 32.1018, -6.59261, 0.95", "0.886504, 32.9883, -7.46135, 1.1", "1.20202, 33.9148, -8.49661, 0.73", "1.57174, 34.7136, -9.4421, 0.44", "1.96086, 35.4535, -10.379, 0.88", "2.58025, 36.5569, -11.8739, 0.88", "3.33303, 37.8014, -13.7279, 1.03", "3.92147, 38.659, -15.1498, 1.03", "4.13916, 38.9157, -15.6428, 1.25" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "0.234495, 28.5535, -3.85185, 0.66", "1.18009, 29.6923, -4.13383, 0.66", "1.6376, 30.2433, -4.27025, 0.88", "2.24883, 30.9794, -4.45252, 0.66", "2.83014, 31.6794, -4.62586, 0.95", "3.25504, 32.1911, -4.75257, 1.32" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "0.14585, 22.736, 1.50638, 0.29", "0.758582, 22.4873, 2.35863, 0.29", "1.3584, 22.2626, 3.36183, 0.29", "2.53651, 21.9114, 5.49681, 0.29", "3.00011, 21.8162, 6.37261, 0.51", "3.3926, 21.7747, 7.0939, 0.51", "3.97876, 21.7669, 8.05623, 0.51", "4.72324, 21.8565, 9.20282, 0.51", "5.01558, 21.9445, 9.61687, 0.95", "5.38807, 22.1182, 10.1448, 1.1", "6.14066, 22.4646, 11.1311, 0.59", "7.24256, 22.8494, 12.43, 0.37", "7.93482, 23.0016, 13.1558, 0.37", "8.4065, 23.0751, 13.5831, 0.29", "10.237, 23.3173, 15.111, 0.29", "11.4638, 23.4726, 16.0413, 0.51", "13.154, 23.6898, 17.1767, 0.51", "14.9505, 23.9339, 18.2348, 0.51", "16.7019, 24.1846, 19.1712, 0.51", "17.9147, 24.3863, 19.8154, 0.44", "18.8503, 24.5722, 20.2728, 0.73", "19.7623, 24.7762, 20.7401, 0.59", "20.4209, 24.9291, 21.0911, 0.81", "22.2611, 25.2933, 22.2142, 0.37", "23.8388, 25.5629, 23.3332, 0.37", "24.4721, 25.6502, 23.8348, 0.73", "25.0555, 25.7103, 24.3508, 0.73", "26.0117, 25.7647, 25.2831, 0.44", "27.0588, 25.7521, 26.3177, 0.73" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "0.14585, 22.736, 1.50638, 0.88", "-0.916118, 23.0015, 2.76513, 0.88", "-1.51942, 23.2311, 3.46583, 1.03", "-2.41243, 23.6415, 4.38622, 0.59", "-3.55759, 24.1968, 5.5114, 0.59", "-4.49609, 24.693, 6.37333, 0.59", "-5.63554, 25.3066, 7.35279, 0.73", "-6.17174, 25.6074, 7.74726, 0.81", "-7.43564, 26.2689, 8.51927, 0.73", "-9.15224, 26.9889, 9.24794, 0.88", "-10.4822, 27.4045, 9.59848, 0.51", "-11.3157, 27.6005, 9.73115, 0.66", "-12.7936, 27.8844, 9.87784, 0.66", "-14.2965, 28.1717, 10.0166, 1.1", "-16.054, 28.5245, 10.1432, 0.66", "-16.6291, 28.6533, 10.1718, 0.66", "-17.6462, 28.9006, 10.2676, 0.51", "-18.977, 29.2799, 10.4321, 0.44", "-20.4503, 29.7827, 10.6905, 1.25", "-20.9443, 29.9665, 10.7981, 1.25", "-21.6506, 30.2219, 10.972, 0.88", "-22.8022, 30.5059, 11.1676, 0.59", "-23.8132, 30.6041, 11.257, 0.51", "-24.4966, 30.579, 11.2706, 0.51", "-25.0947, 30.5171, 11.2577, 0.51", "-25.6867, 30.4705, 11.2647, 0.81", "-26.9876, 30.4839, 11.3854, 0.73", "-27.7835, 30.578, 11.5219, 0.73", "-28.5302, 30.7376, 11.6977, 0.73", "-29.8615, 31.1765, 12.0583, 0.73", "-31.3781, 31.8394, 12.4887, 0.51", "-33.1748, 32.8295, 13.0304, 0.59", "-34.0048, 33.413, 13.2684, 0.37", "-34.3763, 33.7307, 13.3564, 0.95", "-35.3772, 34.7673, 13.5365, 0.51", "-35.8573, 35.3936, 13.5955, 0.51", "-36.1721, 35.9016, 13.5906, 0.81", "-37.1382, 37.7011, 13.3434, 0.37", "-37.6103, 38.6237, 13.1191, 0.88", "-38.0322, 39.4674, 12.8576, 0.44", "-38.5874, 40.5444, 12.4016, 0.81", "-39.2091, 41.8065, 11.8319, 0.37", "-39.7105, 42.8544, 11.2885, 0.37", "-40.1677, 43.8383, 10.6614, 0.37", "-40.3934, 44.2705, 10.316, 1.03", "-41.0549, 45.3034, 9.26532, 1.4" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "36.1173, 60.4341, -40.0843, 0.59", "35.9599, 60.8948, -41.059, 0.59", "35.9016, 61.639, -42.7221, 0.59", "35.9719, 61.8807, -43.3246, 0.37", "36.0165, 61.9506, -43.521, 0.29", "36.201, 62.1358, -44.126, 0.29", "36.3859, 62.2689, -44.6625, 0.29", "36.7127, 62.3163, -45.428, 0.29", "36.9853, 62.3148, -46.1143, 0.29", "37.053, 62.3271, -46.4198, 0.29", "37.0691, 62.3461, -46.7329, 0.29", "37.0333, 62.3888, -47.2194, 0.29", "36.7357, 62.5528, -48.8976, 0.29", "36.2802, 62.7404, -50.5144, 0.29", "35.8697, 62.916, -51.8327, 0.29", "35.474, 63.1038, -53.0624, 0.29", "35.1606, 63.2722, -54.0301, 0.29", "34.8135, 63.479, -55.1183, 0.29", "34.0706, 63.8085, -57.2906, 0.29" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "36.1173, 60.4341, -40.0843, 0.44", "35.3134, 60.8388, -41.3519, 0.44", "33.6718, 61.9704, -44.3628, 0.44", "33.1048, 62.4973, -45.7584, 0.44", "32.587, 63.1075, -47.3268, 0.59", "31.9537, 63.8537, -49.2446, 0.59", "31.7365, 64.1096, -49.9025, 0.37", "31.2113, 64.9978, -52.0276, 0.59", "30.8564, 66.2558, -54.7208, 0.59", "30.8473, 66.5707, -55.3872, 0.73" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-23.7802, 5.47831, -31.9912, 0.59", "-24.4198, 5.93937, -32.5902, 0.59", "-24.6589, 6.1019, -32.7966, 0.44", "-25.0839, 6.39081, -33.1636, 0.59", "-25.6494, 6.77522, -33.6518, 0.29", "-26.2832, 7.20611, -34.1991, 0.29", "-26.7564, 7.52778, -34.6077, 0.29", "-27.153, 7.76462, -34.9, 0.15" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-23.7802, 5.47831, -31.9912, 0.51", "-23.6743, 5.79819, -32.9236, 0.51", "-23.3219, 6.49782, -35.1628, 0.51", "-23.0552, 6.89956, -36.4882, 0.66", "-22.6333, 7.39553, -38.2051, 0.66", "-22.1001, 7.91104, -40.1355, 0.66", "-21.1126, 8.68789, -43.5217, 0.66", "-20.6589, 8.93518, -45.0098, 0.66", "-20.2434, 9.04313, -46.3379, 0.66", "-19.8861, 9.03464, -47.513, 0.66", "-19.483, 8.90574, -49.0171, 0.51", "-19.2198, 8.69093, -50.4658, 0.51", "-19.1699, 8.41795, -52.0685, 0.51", "-19.3695, 8.09607, -53.9587, 0.22", "-19.862, 7.78098, -55.9338, 0.51", "-20.4911, 7.58767, -57.4956, 0.59", "-21.252, 7.48637, -58.8535, 1.18", "-22.3904, 7.45856, -60.5554, 0.44", "-22.9302, 7.48764, -61.289, 0.73", "-23.7992, 7.59578, -62.3692, 0.44", "-24.7508, 7.76245, -63.5521, 0.44", "-25.6184, 7.89847, -64.6738, 0.44", "-26.6998, 8.02967, -66.1879, 0.81", "-27.8076, 8.12931, -67.7068, 0.44", "-28.1335, 8.15499, -68.1433, 0.44", "-29.2558, 8.25455, -69.5392, 1.03", "-29.9278, 8.29827, -70.3106, 0.44", "-30.943, 8.35311, -71.3014, 0.44", "-31.6668, 8.42396, -71.8599, 0.73", "-32.3557, 8.54612, -72.3049, 0.51", "-33.3664, 8.88731, -72.9299, 0.51", "-34.4421, 9.53143, -73.4565, 0.51", "-34.9885, 10.1411, -73.679, 0.51", "-35.6308, 11.3657, -73.8437, 0.29", "-36.0047, 12.5772, -73.816, 0.51", "-36.1771, 13.811, -73.5841, 0.07", "-36.2529, 15.6776, -73.006, 0.59", "-36.2132, 16.9795, -72.4943, 0.07", "-36.1606, 17.4668, -72.2773, 0.44", "-35.9833, 18.4559, -71.7693, 0.07", "-35.6794, 19.7608, -70.9903, 0.37", "-35.6137, 20.0096, -70.8164, 0.66", "-35.4706, 20.4964, -70.4758, 0.66", "-35.4037, 20.7233, -70.2761, 0.29" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-29.9918, -17.3874, 46.031, 0.29", "-30.1787, -17.5521, 46.3043, 0.29", "-30.5256, -17.8989, 46.8231, 1.25", "-30.912, -18.3507, 47.3946, 0.88", "-31.4461, -19.0686, 48.1844, 1.03", "-31.9653, -19.8379, 48.9676, 0.51", "-32.2703, -20.3615, 49.4467, 0.51", "-32.4284, -20.7091, 49.7254, 0.51", "-32.6696, -21.3968, 50.1836, 1.1", "-32.811, -21.8534, 50.4266, 0.44", "-33.0445, -22.611, 50.7783, 0.95", "-33.3083, -23.3953, 51.1672, 0.37", "-33.4424, -23.78, 51.4012, 0.59", "-33.6189, -24.3078, 51.7919, 0.15", "-33.8152, -24.9099, 52.3, 0.66", "-33.9843, -25.4534, 52.8005, 0.37", "-34.2045, -26.2299, 53.5599, 0.15", "-34.332, -26.7476, 54.0951, 0.81", "-34.4162, -27.2188, 54.5645, 0.88", "-34.4636, -27.5982, 54.9309, 0.88", "-34.5339, -28.32, 55.5706, 0.29", "-34.5968, -28.9203, 56.0461, 0.29", "-34.6779, -29.5, 56.4663, 0.81", "-34.8003, -30.0906, 56.8693, 0.37", "-35.0701, -31.0361, 57.4945, 0.95", "-35.3931, -31.8591, 58.0362, 0.07", "-35.6092, -32.2754, 58.3279, 0.66", "-35.8187, -32.6179, 58.5775, 0.88", "-36.0968, -33.0265, 58.885, 1.03", "-36.3657, -33.3987, 59.1702, 0.81", "-36.8267, -34.0803, 59.7043, 0.22", "-37.3717, -35.0153, 60.4976, 0.22", "-37.5035, -35.3224, 60.7624, 0.66", "-37.6076, -35.7614, 61.1427, 1.25", "-37.6189, -35.8938, 61.2529, 1.4", "-37.6004, -36.6161, 61.8452, 0.66", "-37.5545, -37.1424, 62.2955, 0.22", "-37.504, -37.6252, 62.6845, 0.81", "-37.4209, -38.6183, 63.5008, 0.29", "-37.4006, -38.9663, 63.7864, 0.29", "-37.3727, -39.7393, 64.4623, 0.29", "-37.3692, -40.7496, 65.3646, 1.32", "-37.4012, -41.7809, 66.3678, 0.15", "-37.442, -42.2225, 66.8139, 0.15", "-37.5178, -42.6955, 67.2909, 0.73", "-37.7824, -43.7931, 68.4368, 0.37", "-37.8562, -44.0286, 68.6813, 0.37", "-38.1801, -44.8731, 69.5972, 0.88", "-38.4024, -45.3528, 70.1675, 1.03", "-38.509, -45.5757, 70.4117, 1.03", "-38.9397, -46.4412, 71.2664, 0.15", "-39.048, -46.6451, 71.4398, 0.15", "-39.4269, -47.3681, 72.0495, 0.81", "-39.7018, -47.9249, 72.4921, 0.81", "-40.0582, -48.7155, 73.132, 0.22", "-40.1916, -49.0183, 73.3649, 0.22", "-40.3475, -49.3625, 73.5779, 0.44" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-29.9918, -17.3874, 46.031, 0.44", "-30.439, -16.3132, 47.2372, 0.44", "-31.3135, -15.1345, 48.5797, 0.73", "-31.6907, -14.7302, 49.0532, 1.25", "-32.3365, -14.213, 49.7037, 1.4", "-33.4682, -13.499, 50.6771, 0.66", "-34.5246, -13.0458, 51.4967, 0.59", "-36.1424, -12.657, 52.4789, 0.59", "-36.6038, -12.5997, 52.716, 0.73", "-37.8884, -12.5598, 53.4014, 0.51", "-38.5139, -12.5933, 53.7889, 0.51", "-40.3291, -12.8374, 55.0102, 0.22", "-40.9193, -12.964, 55.4186, 0.22", "-41.6288, -13.1806, 56.0166, 0.22", "-42.472, -13.525, 57.093, 1.03", "-43.0186, -13.9114, 58.5565, 1.03", "-43.0928, -14.0602, 59.1527, 1.03", "-43.0852, -14.3017, 60.1641, 0.44", "-42.9696, -14.7246, 61.9836, 0.44", "-42.6916, -15.2433, 64.3349, 0.66", "-42.3062, -15.7942, 66.8418, 0.73", "-41.7745, -16.4238, 69.8238, 0.66", "-41.3381, -16.8633, 72.1734, 0.66", "-41.1336, -17.0432, 73.3219, 0.66", "-41.0298, -17.1383, 73.9496, 0.88" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_99",
    "id" : "dend_99",
    "points3d" : [ "0.394433, 27.1405, 35.9742, 0.22", "-0.608537, 26.5175, 36.9347, 0.22", "-1.05921, 26.2376, 37.3663, 0.22", "-1.89589, 25.7179, 38.1676, 0.73", "-2.39948, 25.4051, 38.6498, 0.73", "-3.37235, 24.8008, 39.5815, 0.37" ],
    "parent" : "dend_97",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_98",
    "id" : "dend_98",
    "points3d" : [ "0.394433, 27.1405, 35.9742, 0.15", "0.257927, 27.3933, 36.6395, 0.15", "0.0946236, 27.6454, 37.2786, 0.15", "-0.238856, 28.0692, 38.2538, 0.15", "-0.630796, 28.5215, 39.1774, 0.37", "-0.953447, 28.8669, 39.7897, 0.37", "-1.71264, 29.6244, 40.9607, 0.37", "-2.63854, 30.3943, 42.0123, 0.37", "-3.18879, 30.8123, 42.3635, 0.73", "-3.68817, 31.2002, 42.5803, 0.37", "-4.19968, 31.6106, 42.7466, 0.37", "-4.81854, 32.117, 42.9163, 0.37", "-5.5703, 32.7673, 43.1114, 0.95", "-6.47708, 33.6234, 43.488, 0.37", "-7.18241, 34.3543, 43.8086, 0.37", "-7.55449, 34.7908, 44.0176, 0.29", "-7.99428, 35.4156, 44.3761, 0.22", "-8.23696, 35.8789, 44.6921, 0.22", "-8.5373, 36.667, 45.3002, 0.22", "-8.71159, 37.2333, 45.8537, 0.22", "-8.8783, 37.8987, 46.6527, 0.22", "-8.93662, 38.3578, 47.4103, 0.22", "-8.94409, 38.7724, 48.1967, 0.22", "-8.93253, 38.9765, 48.6728, 0.22", "-8.85616, 39.3796, 49.9245, 0.22", "-8.78869, 39.5752, 50.9205, 0.22", "-8.75037, 39.6384, 51.7599, 0.22" ],
    "parent" : "dend_97",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_96",
    "id" : "dend_96",
    "points3d" : [ "21.5512, 14.4454, 39.3459, 0.44", "22.63, 15.475, 39.6122, 0.44", "22.8835, 15.7769, 39.6603, 0.44", "23.1103, 16.1367, 39.6866, 0.44", "23.4429, 16.9341, 39.7212, 0.44", "23.577, 17.4804, 39.7177, 0.95", "23.7235, 18.3729, 39.714, 0.29", "23.767, 19.0129, 39.6832, 0.29", "23.8022, 19.9043, 39.6522, 0.66", "23.8652, 20.9754, 39.6266, 1.1", "24.0221, 22.3957, 39.6649, 0.66", "24.2124, 23.3457, 39.808, 0.66", "24.4867, 24.2113, 40.115, 0.81", "24.776, 24.7876, 40.4231, 0.59", "25.2817, 25.5146, 40.9319, 0.59", "26.0946, 26.4488, 41.6845, 0.59", "27.1792, 27.553, 42.686, 0.81", "28.2955, 28.6483, 43.6681, 0.51", "29.1364, 29.4944, 44.3976, 0.51", "29.7645, 30.1672, 44.9137, 0.51", "30.3102, 30.7991, 45.3178, 0.51", "30.7848, 31.3492, 45.6155, 0.51", "31.4462, 32.0733, 45.9427, 0.66", "32.2966, 32.9999, 46.3125, 0.29", "32.6746, 33.4207, 46.4884, 0.66", "33.1948, 33.9224, 46.7115, 0.44", "34.6574, 35.0656, 47.2412, 0.59", "35.3384, 35.4733, 47.428, 0.59", "35.6633, 35.6183, 47.4944, 0.59", "36.4864, 35.8918, 47.602, 0.66", "37.5572, 36.1593, 47.7021, 0.51", "38.5329, 36.3485, 47.7864, 0.51", "39.3341, 36.4513, 47.8371, 0.73", "40.454, 36.5375, 47.9606, 0.29", "41.0162, 36.5523, 48.0452, 0.29", "41.643, 36.5538, 48.1583, 0.88", "43.1761, 36.5388, 48.4894, 0.29", "44.0014, 36.5218, 48.7047, 0.29", "44.8566, 36.4908, 48.9423, 0.29", "45.5174, 36.4541, 49.1334, 0.59", "46.9695, 36.3968, 49.5382, 0.22" ],
    "parent" : "dend_92",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_93",
    "id" : "dend_93",
    "points3d" : [ "21.5512, 14.4454, 39.3459, 0.44", "21.9118, 13.8865, 40.4137, 0.44", "22.4152, 13.4193, 41.4221, 0.44", "23.1969, 12.846, 42.668, 0.73", "23.5058, 12.6257, 43.1015, 0.73", "24.0237, 12.2284, 43.782, 0.73", "24.6567, 11.683, 44.5927, 0.44", "25.3068, 11.1653, 45.2407, 0.44", "25.7595, 10.7551, 45.6029, 0.44", "26.1854, 10.3086, 45.9529, 0.44", "26.5647, 9.84315, 46.3033, 0.95", "26.9113, 9.34917, 46.6077, 0.95", "27.3064, 8.69793, 47.011, 0.66", "28.0054, 7.4154, 47.8871, 0.37", "28.6729, 6.10022, 48.8848, 0.66", "28.9063, 5.63918, 49.258, 0.66", "29.3709, 4.76361, 50.0413, 0.44", "29.9916, 3.62031, 51.1217, 0.44", "30.2614, 3.07464, 51.6075, 0.44", "30.4569, 2.59163, 51.9798, 0.44", "30.7129, 1.84859, 52.4403, 0.44", "30.9513, 1.05598, 52.8973, 0.66", "31.0623, 0.697257, 53.1066, 0.66", "31.4745, -0.390507, 53.6682, 0.29", "31.7486, -0.913449, 53.9805, 0.29", "32.0062, -1.29591, 54.2676, 0.37", "32.4226, -1.80428, 54.6989, 0.37", "33.0183, -2.48941, 55.3002, 0.37", "33.7872, -3.26823, 56.0779, 0.81", "34.7515, -4.0534, 57.0253, 0.51", "35.4579, -4.53163, 57.6727, 0.73", "36.076, -4.88143, 58.2192, 0.81" ],
    "parent" : "dend_92",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "4.13916, 38.9157, -15.6428, 0.29", "4.28545, 39.0384, -14.5067, 0.29", "4.33882, 39.0062, -13.7548, 0.29", "4.34275, 38.9627, -13.5837, 0.59", "4.37593, 38.5052, -12.5743, 0.66", "4.39061, 38.3497, -12.3182, 0.66", "4.42882, 37.9447, -11.6517, 0.44", "4.44171, 37.5188, -11.1355, 0.44", "4.45474, 36.6446, -10.2529, 0.29", "4.46177, 35.95, -9.63137, 0.29", "4.47372, 35.5162, -9.32064, 0.29" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "4.13916, 38.9157, -15.6428, 1.32", "4.20247, 38.998, -16.758, 1.32", "4.25634, 39.0828, -18.1177, 1.32", "4.25961, 39.2464, -20.2256, 1.32", "4.17148, 39.4432, -22.0959, 1.1", "3.8902, 39.7858, -24.8089, 0.73", "3.64879, 40.0286, -26.4356, 0.81", "3.41366, 40.1828, -27.4471, 0.81", "3.07756, 40.364, -28.5133, 0.81", "2.51423, 40.6674, -29.9702, 0.81", "2.10405, 40.9548, -31.0053, 0.81", "1.59924, 41.3989, -32.3218, 0.81", "1.29003, 41.7217, -33.2151, 0.81", "0.974663, 42.1166, -34.2995, 0.95", "0.730831, 42.4887, -35.3181, 1.18", "0.395982, 43.1101, -36.8623, 1.03", "0.0475554, 43.811, -38.4457, 0.66", "-0.122562, 44.1118, -39.0654, 1.32", "-0.765037, 45.0303, -40.8887, 0.37", "-1.17645, 45.4432, -41.7443, 0.44", "-1.52481, 45.6818, -42.4071, 0.37", "-1.74383, 45.777, -42.8972, 0.37", "-1.86277, 45.8101, -43.4935, 0.37", "-1.8589, 45.7617, -44.777, 0.37", "-1.73465, 45.6608, -45.8752, 0.81", "-1.31866, 45.3307, -48.4177, 0.81", "-0.9383, 45.0629, -50.355, 0.81", "-0.306435, 44.7126, -53.0157, 0.81", "0.285518, 44.4667, -55.0919, 0.44", "0.661843, 44.3528, -56.1763, 0.44", "0.951137, 44.281, -56.9018, 0.66" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "3.25504, 32.1911, -4.75257, 0.73", "3.73954, 33.1619, -4.40747, 0.73", "4.05379, 33.7822, -4.00144, 0.73", "4.40682, 34.3813, -3.53536, 0.73", "4.71894, 34.897, -3.0852, 0.73", "5.00404, 35.368, -2.67402, 0.29", "5.32078, 35.8914, -2.21719, 0.29", "5.83101, 36.798, -1.33783, 0.29", "6.30711, 37.5068, -0.594353, 0.29", "6.72344, 38.0055, 0.0417511, 0.95" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "3.25504, 32.1911, -4.75257, 0.73", "4.56281, 32.762, -5.91638, 0.73", "6.31464, 33.4105, -7.12583, 0.51", "8.11438, 33.966, -8.22027, 0.51", "9.65079, 34.3816, -9.11147, 0.51", "10.4952, 34.6095, -9.60655, 1.03", "11.7277, 34.9486, -10.3406, 0.44", "13.3309, 35.3895, -11.1924, 0.95", "15.2394, 35.9172, -12.2267, 0.95", "16.1181, 36.1911, -12.805, 0.95", "16.7929, 36.4243, -13.4246, 0.95", "16.9815, 36.5015, -13.641, 0.95", "17.3887, 36.7072, -14.191, 0.73", "18.6481, 37.4148, -16.0293, 0.73", "19.7182, 38.0767, -17.602, 0.88", "20.9687, 38.8552, -19.3155, 0.88", "21.7327, 39.3152, -20.3102, 0.88", "22.434, 39.7448, -21.1932, 0.73", "23.4642, 40.3611, -22.4193, 0.95", "24.7506, 41.1199, -23.9236, 0.66", "25.7081, 41.6384, -25.0527, 0.66", "26.732, 42.1145, -26.2994, 0.66", "27.8079, 42.4917, -27.7413, 0.88", "28.8353, 42.7613, -29.2473, 0.73", "30.1563, 43.0267, -31.3774, 0.73", "31.1925, 43.1594, -33.1568, 0.73", "32.0786, 43.206, -34.7623, 0.73", "33.3141, 43.1771, -36.9981, 0.73", "33.9779, 43.1124, -38.138, 0.73", "34.5072, 43.0485, -38.9942, 0.73", "35.2619, 42.9602, -40.1578, 0.73", "36.405, 42.8524, -41.7864, 0.73", "37.2176, 42.7964, -42.7976, 0.73", "38.5861, 42.6722, -44.1973, 0.73", "40.6155, 42.3502, -46.0448, 0.51" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "27.0588, 25.7521, 26.3177, 0.44", "27.5164, 26.349, 27.1517, 0.44", "27.8492, 26.7496, 27.6764, 0.44", "28.4133, 27.2635, 28.4538, 0.44", "28.9345, 27.69, 29.1039, 0.44", "29.1509, 27.8601, 29.3537, 0.37", "29.6276, 28.2247, 29.8704, 0.37", "30.0559, 28.5094, 30.299, 0.44", "30.867, 29.0273, 30.9685, 0.22", "31.2145, 29.2574, 31.2042, 0.22", "31.5032, 29.4426, 31.369, 0.22", "31.8902, 29.6932, 31.5776, 0.22", "32.2844, 29.9834, 31.7637, 0.22", "32.58, 30.2201, 31.8937, 0.22", "32.9127, 30.5825, 31.9882, 0.22" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "27.0588, 25.7521, 26.3177, 0.59", "28.2902, 25.75, 26.2799, 0.59", "29.6222, 25.7026, 26.1968, 0.59", "30.9772, 25.6631, 26.0978, 0.51", "31.9273, 25.6548, 26.0263, 0.59", "33.175, 25.659, 25.9308, 0.15", "34.1746, 25.6688, 25.8533, 0.73", "35.85, 25.6553, 25.7109, 0.37", "36.7513, 25.6171, 25.6389, 0.29", "37.349, 25.5483, 25.5903, 0.29", "37.6487, 25.4931, 25.56, 0.29", "38.4724, 25.2936, 25.4587, 0.29", "39.419, 25.0454, 25.2868, 0.37", "40.0958, 24.8652, 25.1322, 0.37", "40.7774, 24.7083, 24.9509, 0.37", "41.5163, 24.5804, 24.7423, 0.37", "42.2658, 24.4875, 24.5224, 0.51", "43.777, 24.3583, 24.065, 0.37", "44.7731, 24.3254, 23.793, 0.22", "45.4698, 24.3313, 23.6264, 0.22", "46.0717, 24.3488, 23.514, 0.22", "46.6706, 24.3612, 23.4428, 0.22", "47.4459, 24.3581, 23.3875, 0.73", "48.4384, 24.3198, 23.372, 0.44", "49.1534, 24.3061, 23.2174, 1.1", "49.4489, 24.3107, 23.1033, 1.1", "50.7006, 24.4118, 22.4989, 0.66", "51.1071, 24.4611, 22.2784, 0.22", "51.8323, 24.5718, 21.8186, 0.51", "54.4353, 24.9878, 19.8246, 0.07", "55.0717, 25.0894, 19.2628, 0.15", "55.9829, 25.2513, 18.3352, 0.59" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-41.0549, 45.3034, 9.26532, 0.37", "-41.4481, 46.1548, 9.35733, 0.37", "-42.0846, 47.2834, 9.46329, 0.37", "-42.7581, 48.3631, 9.44797, 0.81", "-43.2074, 48.9886, 9.32898, 0.81", "-43.9871, 49.9916, 8.95197, 0.22", "-44.4238, 50.5165, 8.70607, 0.44", "-44.9734, 51.0877, 8.3425, 0.07", "-45.9693, 52.0094, 7.58893, 0.81", "-47.1729, 53.0651, 6.56017, 0.29", "-48.2046, 53.9576, 5.64751, 0.59", "-48.6665, 54.3667, 5.20208, 0.59", "-48.9671, 54.6523, 4.90059, 0.29", "-49.6477, 55.3056, 4.24118, 0.81", "-50.376, 55.9686, 3.62524, 0.81", "-50.9521, 56.4695, 3.20267, 1.1", "-52.1557, 57.4549, 2.50295, 0.29", "-53.0698, 58.1634, 2.09634, 0.29", "-53.7181, 58.6172, 1.94182, 0.29", "-54.3627, 58.9982, 1.93677, 0.29", "-55.0081, 59.3195, 2.04232, 0.29", "-56.3736, 59.8832, 2.42315, 0.29", "-57.368, 60.2142, 2.82162, 0.29", "-58.2905, 60.5177, 3.2273, 0.59", "-58.9272, 60.7383, 3.50465, 0.29", "-59.357, 60.8734, 3.69362, 0.59", "-59.7276, 60.9607, 3.84205, 0.59", "-60.9835, 61.1378, 4.30075, 0.29", "-61.992, 61.2523, 4.67653, 0.29", "-62.7695, 61.3027, 5.06714, 0.29", "-63.6872, 61.3453, 5.61289, 0.29", "-64.3375, 61.3487, 6.07267, 0.44", "-65.1656, 61.2985, 6.77099, 0.73", "-65.7313, 61.2148, 7.32158, 0.73", "-66.7855, 61.015, 8.51186, 0.29", "-67.293, 60.9272, 9.15757, 0.29", "-68.0592, 60.8177, 10.2081, 0.29", "-69.014, 60.6811, 11.5964, 0.29", "-70.06, 60.5291, 13.1364, 0.59", "-71.484, 60.3414, 15.2572, 0.15", "-72.2917, 60.2654, 16.4452, 0.44", "-72.9912, 60.2292, 17.4757, 0.44", "-73.6069, 60.2282, 18.3734, 0.44", "-74.2948, 60.2709, 19.3696, 0.66", "-74.6002, 60.3169, 19.7998, 0.66", "-74.7585, 60.3514, 19.9813, 0.95", "-75.1998, 60.4636, 20.3809, 0.73" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-41.0549, 45.3034, 9.26532, 0.95", "-41.9197, 45.5894, 8.75574, 0.95", "-43.2699, 46.1969, 7.87448, 0.73", "-44.1799, 46.7026, 7.27863, 0.66", "-45.1989, 47.4182, 6.47587, 0.07", "-45.9974, 48.1067, 5.76446, 0.59", "-46.27, 48.3651, 5.49241, 0.59", "-47.0574, 49.2577, 4.6246, 0.07", "-47.4343, 49.7209, 4.19101, 0.66", "-48.3278, 50.8826, 3.03338, 0.66", "-48.8749, 51.5516, 2.34518, 0.66", "-49.5657, 52.2877, 1.62588, 0.37", "-49.7476, 52.4587, 1.4651, 0.37", "-50.4868, 53.0052, 1.04188, 0.95", "-51.5078, 53.6179, 0.732191, 0.73", "-52.3795, 54.0808, 0.697735, 0.44", "-52.9272, 54.3613, 0.78606, 0.44", "-53.5187, 54.6776, 0.983979, 0.73", "-54.9257, 55.4617, 1.59063, 0.37", "-55.6892, 55.8821, 2.06433, 0.29", "-56.3096, 56.1699, 2.67988, 0.29", "-57.0709, 56.4149, 3.7095, 0.29", "-57.4311, 56.4756, 4.29511, 0.29", "-57.8664, 56.5159, 5.08771, 0.66", "-58.6104, 56.4957, 6.64076, 1.03", "-59.8516, 56.2745, 9.63427, 1.03", "-60.3908, 56.0742, 11.0938, 0.66", "-60.5679, 55.9707, 11.6319, 0.66" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "30.8473, 66.5707, -55.3872, 0.29", "32.3064, 66.9296, -55.8418, 0.29", "33.3062, 67.2918, -56.159, 0.29", "33.8469, 67.5661, -56.3367, 0.29", "34.4017, 67.8476, -56.5191, 0.29", "34.8581, 68.0792, -56.6691, 0.29", "35.1968, 68.251, -56.7805, 0.29", "35.4702, 68.4736, -56.9575, 0.29", "35.949, 69.268, -57.1467, 0.51" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "30.8473, 66.5707, -55.3872, 0.51", "30.5814, 66.5893, -56.7227, 0.51", "30.2445, 66.6245, -58.5686, 0.44", "29.8542, 66.6833, -60.7077, 0.44", "29.5506, 66.7127, -62.1211, 0.59", "28.9119, 66.729, -64.3871, 0.59", "28.3309, 66.7254, -66.0818, 0.59", "27.8875, 66.7213, -67.1652, 0.44", "27.1576, 66.7536, -68.6085, 0.44", "26.5329, 66.8478, -69.6894, 0.44", "25.7731, 66.9937, -71.114, 0.44", "25.1946, 67.1072, -72.2207, 0.44", "24.3533, 67.2879, -74.0249, 0.73", "23.7217, 67.4207, -75.6176, 0.37", "23.1983, 67.5268, -77.1349, 0.59", "22.3591, 67.7305, -80.1624, 0.59", "22.069, 67.8047, -81.4037, 0.59", "21.6652, 67.8979, -83.2278, 0.59", "21.2969, 67.9656, -84.8318, 0.59", "20.9425, 68.0097, -86.4646, 0.59", "20.277, 68.089, -89.3753, 0.88", "19.7183, 68.1941, -91.4587, 0.59", "19.3937, 68.2617, -92.5431, 0.29", "19.1474, 68.3236, -93.3452, 0.29" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-41.0298, -17.1383, 73.9496, 0.22", "-40.11, -17.6312, 74.5492, 0.22", "-39.0546, -17.9472, 75.2562, 0.22", "-38.1499, -18.0463, 75.9487, 0.29", "-37.5597, -18.0292, 76.4131, 0.29", "-36.5405, -17.9997, 77.2149, 0.07", "-35.6832, -17.9749, 77.8894, 0.37", "-34.6874, -17.7733, 78.6785, 0.15", "-33.6953, -17.3867, 79.5142, 0.15", "-33.0995, -17.0522, 80.0495, 1.1" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-41.0298, -17.1383, 73.9496, 0.29", "-40.1148, -16.9788, 75.0115, 0.29", "-39.466, -16.8866, 75.641, 0.81", "-39.1112, -16.8136, 76.0283, 0.81", "-38.7307, -16.7125, 76.5112, 0.51", "-38.0501, -16.5107, 77.4301, 0.51", "-37.6937, -16.4035, 77.9218, 0.29", "-37.0658, -16.2534, 78.7882, 0.29", "-36.3246, -16.103, 79.8907, 0.51", "-35.573, -15.9261, 81.1648, 0.59", "-35.1787, -15.7946, 81.9668, 0.59", "-34.9713, -15.7011, 82.4758, 0.59", "-34.8347, -15.6263, 82.8648, 0.59", "-34.6241, -15.4348, 83.5642, 0.59", "-34.5169, -15.238, 83.9321, 0.59", "-34.4327, -14.864, 84.3451, 0.59", "-34.3499, -14.3733, 84.8008, 0.59", "-34.2265, -13.6945, 85.3496, 0.59", "-34.1018, -13.0257, 85.8483, 0.81", "-33.9095, -12.093, 86.4913, 0.59", "-33.6378, -10.8878, 87.3141, 0.59", "-33.541, -10.4815, 87.6063, 0.59", "-33.4431, -9.98758, 87.987, 0.95" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_95",
    "id" : "dend_95",
    "points3d" : [ "36.076, -4.88143, 58.2192, 0.15", "36.9062, -5.32672, 59.3101, 0.15", "38.1359, -5.87073, 60.7881, 0.29", "38.5809, -6.06756, 61.3229, 0.07", "39.8125, -6.6124, 62.8031, 0.22", "40.2863, -6.82202, 63.3726, 0.07", "40.815, -7.05586, 64.0079, 0.07", "41.3429, -7.28157, 64.6824, 0.81" ],
    "parent" : "dend_93",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_94",
    "id" : "dend_94",
    "points3d" : [ "36.076, -4.88143, 58.2192, 0.22", "36.4946, -5.74575, 58.7582, 0.22", "36.7345, -6.30621, 59.0962, 0.51", "37.1242, -7.25944, 59.7468, 0.73", "37.423, -8.00223, 60.2748, 0.15", "37.7452, -8.80322, 60.8441, 0.81", "38.0142, -9.4722, 61.3196, 0.29", "38.2764, -10.1574, 61.8432, 0.29", "38.5982, -11.1116, 62.5926, 0.29", "38.6933, -11.4468, 62.8522, 0.44" ],
    "parent" : "dend_93",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "6.72344, 38.0055, 0.0417511, 0.29", "6.90233, 38.0455, 0.444581, 0.29", "7.23434, 38.1199, 1.19219, 0.29", "7.59745, 38.2012, 2.00983, 0.29", "7.93715, 38.2772, 2.77474, 0.29", "8.28086, 38.3542, 3.5487, 0.29", "8.59339, 38.4241, 4.25243, 0.29" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "6.72344, 38.0055, 0.0417511, 0.88", "6.68306, 38.0244, 0.291341, 0.88", "6.44955, 38.1824, 1.68235, 0.37", "6.28817, 38.3737, 2.77056, 0.37", "6.14814, 38.7401, 4.12744, 0.37", "6.11469, 39.0868, 4.93369, 0.37", "6.11774, 39.2689, 5.24431, 0.37", "6.16947, 39.7769, 5.78457, 0.37", "6.30146, 40.3129, 6.1319, 0.37", "6.55922, 41.0481, 6.51823, 0.37", "6.96252, 41.9561, 6.98617, 0.37", "7.14115, 42.2942, 7.18503, 1.18", "7.58037, 43.0843, 7.6747, 0.44", "8.03383, 43.8778, 8.20784, 0.44", "8.53852, 44.7126, 8.82181, 0.44", "9.12284, 45.5963, 9.56961, 0.44", "9.68389, 46.3258, 10.2836, 0.73" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_81", "dend_70", "dend_57", "dend_50", "dend_21", "dend_0", "dend_89", "dend_82", "dend_72", "dend_71", "dend_63", "dend_58", "dend_56", "dend_51", "dend_31", "dend_22", "dend_12", "dend_1", "dend_101", "dend_90", "dend_84", "dend_83", "dend_80", "dend_73", "dend_67", "dend_64", "dend_60", "dend_59", "dend_55", "dend_52", "dend_33", "dend_32", "dend_24", "dend_23", "dend_16", "dend_13", "dend_5", "dend_2", "dend_105", "dend_102", "dend_100", "dend_91", "dend_88", "dend_85", "dend_77", "dend_74", "dend_69", "dend_68", "dend_66", "dend_65", "dend_62", "dend_61", "dend_54", "dend_53", "dend_41", "dend_34", "dend_30", "dend_25", "dend_20", "dend_17", "dend_15", "dend_14", "dend_11", "dend_6", "dend_4", "dend_3", "dend_104", "dend_103", "dend_97", "dend_92", "dend_87", "dend_86", "dend_79", "dend_78", "dend_76", "dend_75", "dend_47", "dend_42", "dend_38", "dend_35", "dend_29", "dend_26", "dend_19", "dend_18", "dend_10", "dend_7", "dend_99", "dend_98", "dend_96", "dend_93", "dend_49", "dend_48", "dend_44", "dend_43", "dend_40", "dend_39", "dend_37", "dend_36", "dend_28", "dend_27", "dend_9", "dend_8", "dend_95", "dend_94", "dend_46", "dend_45" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_81", "dend_70", "dend_57", "dend_50", "dend_21", "dend_0", "dend_89", "dend_82", "dend_72", "dend_71", "dend_63", "dend_58", "dend_56", "dend_51", "dend_31", "dend_22", "dend_12", "dend_1", "dend_101", "dend_90", "dend_84", "dend_83", "dend_80", "dend_73", "dend_67", "dend_64", "dend_60", "dend_59", "dend_55", "dend_52", "dend_33", "dend_32", "dend_24", "dend_23", "dend_16", "dend_13", "dend_5", "dend_2", "dend_105", "dend_102", "dend_100", "dend_91", "dend_88", "dend_85", "dend_77", "dend_74", "dend_69", "dend_68", "dend_66", "dend_65", "dend_62", "dend_61", "dend_54", "dend_53", "dend_41", "dend_34", "dend_30", "dend_25", "dend_20", "dend_17", "dend_15", "dend_14", "dend_11", "dend_6", "dend_4", "dend_3", "dend_104", "dend_103", "dend_97", "dend_92", "dend_87", "dend_86", "dend_79", "dend_78", "dend_76", "dend_75", "dend_47", "dend_42", "dend_38", "dend_35", "dend_29", "dend_26", "dend_19", "dend_18", "dend_10", "dend_7", "dend_99", "dend_98", "dend_96", "dend_93", "dend_49", "dend_48", "dend_44", "dend_43", "dend_40", "dend_39", "dend_37", "dend_36", "dend_28", "dend_27", "dend_9", "dend_8", "dend_95", "dend_94", "dend_46", "dend_45" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_81", "dend_70", "dend_57", "dend_50", "dend_21", "dend_0", "axon_0", "dend_89", "dend_82", "dend_72", "dend_71", "dend_63", "dend_58", "dend_56", "dend_51", "dend_31", "dend_22", "dend_12", "dend_1", "axon_1", "dend_101", "dend_90", "dend_84", "dend_83", "dend_80", "dend_73", "dend_67", "dend_64", "dend_60", "dend_59", "dend_55", "dend_52", "dend_33", "dend_32", "dend_24", "dend_23", "dend_16", "dend_13", "dend_5", "dend_2", "dend_105", "dend_102", "dend_100", "dend_91", "dend_88", "dend_85", "dend_77", "dend_74", "dend_69", "dend_68", "dend_66", "dend_65", "dend_62", "dend_61", "dend_54", "dend_53", "dend_41", "dend_34", "dend_30", "dend_25", "dend_20", "dend_17", "dend_15", "dend_14", "dend_11", "dend_6", "dend_4", "dend_3", "dend_104", "dend_103", "dend_97", "dend_92", "dend_87", "dend_86", "dend_79", "dend_78", "dend_76", "dend_75", "dend_47", "dend_42", "dend_38", "dend_35", "dend_29", "dend_26", "dend_19", "dend_18", "dend_10", "dend_7", "dend_99", "dend_98", "dend_96", "dend_93", "dend_49", "dend_48", "dend_44", "dend_43", "dend_40", "dend_39", "dend_37", "dend_36", "dend_28", "dend_27", "dend_9", "dend_8", "dend_95", "dend_94", "dend_46", "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_105" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_102" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_96" ]
  }, {
    "name" : "OneSecGrp_SectionRef_95",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_97",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_100",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_89" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_90" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_91" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_101" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_100" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_96",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_92" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_108",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_94",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_97" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_109",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_99" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_98",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_93",
    "groups" : [ ],
    "sections" : [ "dend_93" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_98" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_107",
    "groups" : [ ],
    "sections" : [ "dend_94" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_106",
    "groups" : [ ],
    "sections" : [ "dend_95" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_104" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_99",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_101",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_103" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_102",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_104",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_105",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_103",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88", "dend_89", "dend_90", "dend_91", "dend_92", "dend_93", "dend_94", "dend_95", "dend_96", "dend_97", "dend_98", "dend_99", "dend_100", "dend_101", "dend_102", "dend_103", "dend_104", "dend_105" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_81", "dend_81", "dend_81", "dend_81", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_21", "dend_21", "dend_21", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_72", "dend_72", "dend_72", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_12", "dend_12", "dend_12", "dend_12", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_101", "dend_101", "dend_101", "dend_101", "dend_90", "dend_90", "dend_90", "dend_84", "dend_84", "dend_84", "dend_84", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_91", "dend_91", "dend_91", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_34", "dend_34", "dend_34", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L1_NGCDA_79c9f5c53c_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_81, id: dend_81, parent: soma_0
create dend_81
public dend_81
// Section: dend_70, id: dend_70, parent: soma_0
create dend_70
public dend_70
// Section: dend_57, id: dend_57, parent: soma_0
create dend_57
public dend_57
// Section: dend_50, id: dend_50, parent: soma_0
create dend_50
public dend_50
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_89, id: dend_89, parent: dend_81
create dend_89
public dend_89
// Section: dend_82, id: dend_82, parent: dend_81
create dend_82
public dend_82
// Section: dend_72, id: dend_72, parent: dend_70
create dend_72
public dend_72
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_63, id: dend_63, parent: dend_57
create dend_63
public dend_63
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_56, id: dend_56, parent: dend_50
create dend_56
public dend_56
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_31, id: dend_31, parent: dend_21
create dend_31
public dend_31
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_12, id: dend_12, parent: dend_0
create dend_12
public dend_12
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_101, id: dend_101, parent: dend_89
create dend_101
public dend_101
// Section: dend_90, id: dend_90, parent: dend_89
create dend_90
public dend_90
// Section: dend_84, id: dend_84, parent: dend_82
create dend_84
public dend_84
// Section: dend_83, id: dend_83, parent: dend_82
create dend_83
public dend_83
// Section: dend_80, id: dend_80, parent: dend_72
create dend_80
public dend_80
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_67, id: dend_67, parent: dend_63
create dend_67
public dend_67
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_55, id: dend_55, parent: dend_51
create dend_55
public dend_55
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_105, id: dend_105, parent: dend_101
create dend_105
public dend_105
// Section: dend_102, id: dend_102, parent: dend_101
create dend_102
public dend_102
// Section: dend_100, id: dend_100, parent: dend_90
create dend_100
public dend_100
// Section: dend_91, id: dend_91, parent: dend_90
create dend_91
public dend_91
// Section: dend_88, id: dend_88, parent: dend_84
create dend_88
public dend_88
// Section: dend_85, id: dend_85, parent: dend_84
create dend_85
public dend_85
// Section: dend_77, id: dend_77, parent: dend_73
create dend_77
public dend_77
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_69, id: dend_69, parent: dend_67
create dend_69
public dend_69
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_41, id: dend_41, parent: dend_33
create dend_41
public dend_41
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_30, id: dend_30, parent: dend_24
create dend_30
public dend_30
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: dend_16
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: dend_5
create dend_11
public dend_11
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_104, id: dend_104, parent: dend_102
create dend_104
public dend_104
// Section: dend_103, id: dend_103, parent: dend_102
create dend_103
public dend_103
// Section: dend_97, id: dend_97, parent: dend_91
create dend_97
public dend_97
// Section: dend_92, id: dend_92, parent: dend_91
create dend_92
public dend_92
// Section: dend_87, id: dend_87, parent: dend_85
create dend_87
public dend_87
// Section: dend_86, id: dend_86, parent: dend_85
create dend_86
public dend_86
// Section: dend_79, id: dend_79, parent: dend_77
create dend_79
public dend_79
// Section: dend_78, id: dend_78, parent: dend_77
create dend_78
public dend_78
// Section: dend_76, id: dend_76, parent: dend_74
create dend_76
public dend_76
// Section: dend_75, id: dend_75, parent: dend_74
create dend_75
public dend_75
// Section: dend_47, id: dend_47, parent: dend_41
create dend_47
public dend_47
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_38, id: dend_38, parent: dend_34
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_29, id: dend_29, parent: dend_25
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_99, id: dend_99, parent: dend_97
create dend_99
public dend_99
// Section: dend_98, id: dend_98, parent: dend_97
create dend_98
public dend_98
// Section: dend_96, id: dend_96, parent: dend_92
create dend_96
public dend_96
// Section: dend_93, id: dend_93, parent: dend_92
create dend_93
public dend_93
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_95, id: dend_95, parent: dend_93
create dend_95
public dend_95
// Section: dend_94, id: dend_94, parent: dend_93
create dend_94
public dend_94
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_81, dend_70, dend_57, dend_50, dend_21, dend_0, dend_89, dend_82, dend_72, dend_71, dend_63, dend_58, dend_56, dend_51, dend_31, dend_22, dend_12, dend_1, dend_101, dend_90, dend_84, dend_83, dend_80, dend_73, dend_67, dend_64, dend_60, dend_59, dend_55, dend_52, dend_33, dend_32, dend_24, dend_23, dend_16, dend_13, dend_5, dend_2, dend_105, dend_102, dend_100, dend_91, dend_88, dend_85, dend_77, dend_74, dend_69, dend_68, dend_66, dend_65, dend_62, dend_61, dend_54, dend_53, dend_41, dend_34, dend_30, dend_25, dend_20, dend_17, dend_15, dend_14, dend_11, dend_6, dend_4, dend_3, dend_104, dend_103, dend_97, dend_92, dend_87, dend_86, dend_79, dend_78, dend_76, dend_75, dend_47, dend_42, dend_38, dend_35, dend_29, dend_26, dend_19, dend_18, dend_10, dend_7, dend_99, dend_98, dend_96, dend_93, dend_49, dend_48, dend_44, dend_43, dend_40, dend_39, dend_37, dend_36, dend_28, dend_27, dend_9, dend_8, dend_95, dend_94, dend_46, dend_45]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_81, dend_70, dend_57, dend_50, dend_21, dend_0, dend_89, dend_82, dend_72, dend_71, dend_63, dend_58, dend_56, dend_51, dend_31, dend_22, dend_12, dend_1, dend_101, dend_90, dend_84, dend_83, dend_80, dend_73, dend_67, dend_64, dend_60, dend_59, dend_55, dend_52, dend_33, dend_32, dend_24, dend_23, dend_16, dend_13, dend_5, dend_2, dend_105, dend_102, dend_100, dend_91, dend_88, dend_85, dend_77, dend_74, dend_69, dend_68, dend_66, dend_65, dend_62, dend_61, dend_54, dend_53, dend_41, dend_34, dend_30, dend_25, dend_20, dend_17, dend_15, dend_14, dend_11, dend_6, dend_4, dend_3, dend_104, dend_103, dend_97, dend_92, dend_87, dend_86, dend_79, dend_78, dend_76, dend_75, dend_47, dend_42, dend_38, dend_35, dend_29, dend_26, dend_19, dend_18, dend_10, dend_7, dend_99, dend_98, dend_96, dend_93, dend_49, dend_48, dend_44, dend_43, dend_40, dend_39, dend_37, dend_36, dend_28, dend_27, dend_9, dend_8, dend_95, dend_94, dend_46, dend_45]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_81, dend_70, dend_57, dend_50, dend_21, dend_0, axon_0, dend_89, dend_82, dend_72, dend_71, dend_63, dend_58, dend_56, dend_51, dend_31, dend_22, dend_12, dend_1, axon_1, dend_101, dend_90, dend_84, dend_83, dend_80, dend_73, dend_67, dend_64, dend_60, dend_59, dend_55, dend_52, dend_33, dend_32, dend_24, dend_23, dend_16, dend_13, dend_5, dend_2, dend_105, dend_102, dend_100, dend_91, dend_88, dend_85, dend_77, dend_74, dend_69, dend_68, dend_66, dend_65, dend_62, dend_61, dend_54, dend_53, dend_41, dend_34, dend_30, dend_25, dend_20, dend_17, dend_15, dend_14, dend_11, dend_6, dend_4, dend_3, dend_104, dend_103, dend_97, dend_92, dend_87, dend_86, dend_79, dend_78, dend_76, dend_75, dend_47, dend_42, dend_38, dend_35, dend_29, dend_26, dend_19, dend_18, dend_10, dend_7, dend_99, dend_98, dend_96, dend_93, dend_49, dend_48, dend_44, dend_43, dend_40, dend_39, dend_37, dend_36, dend_28, dend_27, dend_9, dend_8, dend_95, dend_94, dend_46, dend_45]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_105]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_102]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_96]}
objref OneSecGrp_SectionRef_92
// Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_95
// Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_97
// Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_100
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_89]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_90]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_91]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_101]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_100]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_96
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_92]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_108
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_94
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_97]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_109, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_109
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_99]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_98
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_93]}
objref OneSecGrp_SectionRef_93
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_98]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_94]}
objref OneSecGrp_SectionRef_107
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_95]}
objref OneSecGrp_SectionRef_106
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_104]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_99
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_101
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_103]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_102
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_104
// Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_105
// Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_103
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104, dend_105], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_81, dend_81, dend_81, dend_81, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_89, dend_89, dend_89, dend_89, dend_89, dend_82, dend_82, dend_82, dend_82, dend_82, dend_72, dend_72, dend_72, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, axon_1, axon_1, dend_101, dend_101, dend_101, dend_101, dend_90, dend_90, dend_90, dend_84, dend_84, dend_84, dend_84, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_91, dend_91, dend_91, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_99, dend_99, dend_99, dend_99, dend_99, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_81(0), soma_0(0.4999999999996699)
    connect dend_70(0), soma_0(0.4999999999996699)
    connect dend_57(0), soma_0(0.4999999999996699)
    connect dend_50(0), soma_0(0.4999999999996699)
    connect dend_21(0), soma_0(0.4999999999996699)
    connect dend_0(0), soma_0(0.4999999999996699)
    connect axon_0(0), soma_0(1.0)
    connect dend_89(0), dend_81(1.0)
    connect dend_82(0), dend_81(1.0)
    connect dend_72(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_63(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_56(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_31(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_12(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_101(0), dend_89(1.0)
    connect dend_90(0), dend_89(1.0)
    connect dend_84(0), dend_82(1.0)
    connect dend_83(0), dend_82(1.0)
    connect dend_80(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_67(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_55(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_105(0), dend_101(1.0)
    connect dend_102(0), dend_101(1.0)
    connect dend_100(0), dend_90(1.0)
    connect dend_91(0), dend_90(1.0)
    connect dend_88(0), dend_84(1.0)
    connect dend_85(0), dend_84(1.0)
    connect dend_77(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_69(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_41(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_30(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_20(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_11(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_104(0), dend_102(1.0)
    connect dend_103(0), dend_102(1.0)
    connect dend_97(0), dend_91(1.0)
    connect dend_92(0), dend_91(1.0)
    connect dend_87(0), dend_85(1.0)
    connect dend_86(0), dend_85(1.0)
    connect dend_79(0), dend_77(1.0)
    connect dend_78(0), dend_77(1.0)
    connect dend_76(0), dend_74(1.0)
    connect dend_75(0), dend_74(1.0)
    connect dend_47(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_38(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_29(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_99(0), dend_97(1.0)
    connect dend_98(0), dend_97(1.0)
    connect dend_96(0), dend_92(1.0)
    connect dend_93(0), dend_92(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_95(0), dend_93(1.0)
    connect dend_94(0), dend_93(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -7.76078, 2.47809, 0.0, 2.50435 ) }
    soma_0 { pt3dadd( -6.92396, 2.21021, 0.0, 4.05157 ) }
    soma_0 { pt3dadd( -6.08714, 1.94233, 0.0, 5.83387 ) }
    soma_0 { pt3dadd( -5.25032, 1.67445, 0.0, 7.52546 ) }
    soma_0 { pt3dadd( -4.4135, 1.40658, 0.0, 8.92466 ) }
    soma_0 { pt3dadd( -3.57668, 1.1387, 0.0, 11.3125 ) }
    soma_0 { pt3dadd( -2.73986, 0.870821, 0.0, 13.2915 ) }
    soma_0 { pt3dadd( -1.90304, 0.602943, 0.0, 14.2697 ) }
    soma_0 { pt3dadd( -1.06622, 0.335065, 0.0, 14.7055 ) }
    soma_0 { pt3dadd( -0.2294, 0.0671876, 0.0, 14.4406 ) }
    soma_0 { pt3dadd( 0.60742, -0.20069, 0.0, 13.9726 ) }
    soma_0 { pt3dadd( 1.44424, -0.468568, 0.0, 13.4671 ) }
    soma_0 { pt3dadd( 2.28106, -0.736446, 0.0, 12.9541 ) }
    soma_0 { pt3dadd( 3.11788, -1.00432, 0.0, 12.3444 ) }
    soma_0 { pt3dadd( 3.9547, -1.2722, 0.0, 11.7176 ) }
    soma_0 { pt3dadd( 4.79152, -1.54008, 0.0, 11.0567 ) }
    soma_0 { pt3dadd( 5.62834, -1.80796, 0.0, 10.3093 ) }
    soma_0 { pt3dadd( 6.46516, -2.07584, 0.0, 9.03836 ) }
    soma_0 { pt3dadd( 7.30198, -2.34371, 0.0, 7.21047 ) }
    soma_0 { pt3dadd( 8.1388, -2.61159, 0.0, 4.85049 ) }
    soma_0 { pt3dadd( 8.97562, -2.87947, 0.0, 2.73898 ) }
    // Section: dend_81, id: dend_81, parent: soma_0 (entry count 21/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( 6.37701, -2.96425, 12.36, 1.76 ) }
    dend_81 { pt3dadd( 6.35977, -2.53289, 13.654, 1.47 ) }
    dend_81 { pt3dadd( 6.34126, -2.07011, 15.0422, 1.47 ) }
    dend_81 { pt3dadd( 6.30842, -1.2488, 17.506, 1.69 ) }
    dend_81 { pt3dadd( 6.28164, -0.578904, 19.5156, 2.28 ) }
    // Section: dend_70, id: dend_70, parent: soma_0 (entry count 26/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 7.07709, -5.80425, 6.45, 1.47 ) }
    dend_70 { pt3dadd( 8.03093, -6.51556, 7.91712, 1.47 ) }
    dend_70 { pt3dadd( 9.19456, -7.37098, 9.61175, 1.25 ) }
    dend_70 { pt3dadd( 10.4078, -8.19677, 11.1841, 1.25 ) }
    dend_70 { pt3dadd( 11.7393, -9.06524, 12.8252, 1.47 ) }
    dend_70 { pt3dadd( 13.5061, -10.1593, 14.8953, 0.95 ) }
    dend_70 { pt3dadd( 14.7778, -10.9335, 16.3198, 1.18 ) }
    dend_70 { pt3dadd( 16.3823, -11.8628, 18.0073, 1.62 ) }
    dend_70 { pt3dadd( 17.7903, -12.6212, 19.4245, 1.18 ) }
    dend_70 { pt3dadd( 19.1062, -13.3194, 20.6885, 1.25 ) }
    dend_70 { pt3dadd( 20.5646, -14.1112, 22.0117, 1.25 ) }
    dend_70 { pt3dadd( 22.6537, -15.2333, 23.7443, 1.76 ) }
    // Section: dend_57, id: dend_57, parent: soma_0 (entry count 38/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 2.88702, -6.94425, 2.66, 1.4 ) }
    dend_57 { pt3dadd( 2.79314, -7.52548, 2.99433, 1.4 ) }
    dend_57 { pt3dadd( 2.61537, -8.62608, 3.62741, 1.03 ) }
    dend_57 { pt3dadd( 2.39205, -10.0087, 4.42273, 1.03 ) }
    dend_57 { pt3dadd( 2.24843, -10.8979, 4.93419, 1.03 ) }
    dend_57 { pt3dadd( 2.06261, -12.0483, 5.59594, 1.25 ) }
    dend_57 { pt3dadd( 1.91184, -12.9817, 6.13286, 1.91 ) }
    // Section: dend_50, id: dend_50, parent: soma_0 (entry count 45/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 1.83697, 5.90575, -7.7, 0.95 ) }
    dend_50 { pt3dadd( 2.04314, 6.72343, -8.06325, 0.95 ) }
    dend_50 { pt3dadd( 2.51518, 8.6186, -8.90571, 0.95 ) }
    dend_50 { pt3dadd( 2.77105, 9.78416, -9.39834, 0.95 ) }
    dend_50 { pt3dadd( 3.02213, 11.1714, -9.97197, 0.95 ) }
    dend_50 { pt3dadd( 3.24017, 12.4815, -10.5351, 0.51 ) }
    dend_50 { pt3dadd( 3.47532, 13.9252, -11.2259, 0.51 ) }
    dend_50 { pt3dadd( 3.66073, 15.1255, -11.9035, 0.73 ) }
    dend_50 { pt3dadd( 3.77709, 15.9727, -12.4908, 0.44 ) }
    dend_50 { pt3dadd( 3.93609, 17.2476, -13.5502, 1.25 ) }
    dend_50 { pt3dadd( 4.0721, 18.4686, -14.6762, 1.25 ) }
    dend_50 { pt3dadd( 4.19774, 19.8836, -16.1363, 0.81 ) }
    dend_50 { pt3dadd( 4.33244, 21.3823, -17.8647, 1.18 ) }
    dend_50 { pt3dadd( 4.48691, 22.7386, -19.6131, 1.47 ) }
    dend_50 { pt3dadd( 4.60047, 23.4685, -20.6914, 1.69 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 60/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 0.856998, 6.61575, -5.66, 3.53 ) }
    dend_21 { pt3dadd( 0.782391, 6.91731, -5.57618, 3.53 ) }
    dend_21 { pt3dadd( 0.533718, 7.92244, -5.29678, 3.53 ) }
    dend_21 { pt3dadd( 0.390994, 8.49933, -5.13642, 3.31 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 64/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -8.31293, -1.52425, -3.49, 1.76 ) }
    dend_0 { pt3dadd( -8.86777, -1.57452, -3.65575, 1.76 ) }
    dend_0 { pt3dadd( -9.95311, -1.62964, -4.00291, 1.47 ) }
    dend_0 { pt3dadd( -10.6896, -1.66704, -4.2385, 1.47 ) }
    dend_0 { pt3dadd( -11.5692, -1.7117, -4.51987, 1.47 ) }
    dend_0 { pt3dadd( -12.1218, -1.73976, -4.69662, 1.54 ) }
    dend_0 { pt3dadd( -13.0671, -1.78776, -4.99899, 1.54 ) }
    dend_0 { pt3dadd( -14.7125, -1.82109, -5.57216, 2.06 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 72/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 8.97562, -2.87947, 0.0, 0.536641 ) }
    axon_0 { pt3dadd( 23.2615, -7.45259, 0.0, 0.536641 ) }
    axon_0 { pt3dadd( 37.5474, -12.0257, 0.0, 0.536641 ) }
    // Section: dend_89, id: dend_89, parent: dend_81 (entry count 75/100)
    dend_89 { pt3dclear() }
    dend_89 { pt3dadd( 6.28164, -0.578904, 19.5156, 1.1 ) }
    dend_89 { pt3dadd( 6.87863, -0.226878, 21.0756, 1.1 ) }
    dend_89 { pt3dadd( 7.58207, 0.187919, 22.9137, 1.1 ) }
    dend_89 { pt3dadd( 8.31067, 0.617554, 24.8175, 1.47 ) }
    dend_89 { pt3dadd( 8.36156, 0.647561, 24.9505, 1.47 ) }
    dend_89 { pt3dadd( 9.30122, 1.20165, 27.4059, 1.69 ) }
    // Section: dend_82, id: dend_82, parent: dend_81 (entry count 81/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( 6.28164, -0.578904, 19.5156, 1.25 ) }
    dend_82 { pt3dadd( 5.79756, -0.525391, 19.9001, 1.25 ) }
    dend_82 { pt3dadd( 4.64086, -0.39752, 20.8189, 1.03 ) }
    dend_82 { pt3dadd( 3.78758, -0.303193, 21.4967, 1.32 ) }
    dend_82 { pt3dadd( 3.2772, -0.246771, 21.9022, 1.54 ) }
    dend_82 { pt3dadd( 2.44818, -0.155126, 22.5607, 1.25 ) }
    // Section: dend_72, id: dend_72, parent: dend_70 (entry count 87/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 22.6537, -15.2333, 23.7443, 1.4 ) }
    dend_72 { pt3dadd( 23.8481, -16.0875, 23.2221, 1.4 ) }
    dend_72 { pt3dadd( 25.807, -17.4885, 22.3659, 1.25 ) }
    dend_72 { pt3dadd( 27.6253, -18.789, 21.571, 1.4 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 91/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 22.6537, -15.2333, 23.7443, 0.88 ) }
    dend_71 { pt3dadd( 22.2343, -15.4107, 24.6675, 0.88 ) }
    dend_71 { pt3dadd( 21.7032, -15.6282, 25.7293, 0.88 ) }
    dend_71 { pt3dadd( 21.1413, -15.8443, 26.7354, 0.88 ) }
    dend_71 { pt3dadd( 20.2706, -16.1308, 28.0699, 0.88 ) }
    dend_71 { pt3dadd( 19.3275, -16.414, 29.3225, 0.59 ) }
    dend_71 { pt3dadd( 18.5235, -16.6426, 30.3063, 0.59 ) }
    dend_71 { pt3dadd( 17.9424, -16.7777, 30.9306, 0.59 ) }
    dend_71 { pt3dadd( 17.5103, -16.8593, 31.3388, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_71 { pt3dadd( 16.7185, -16.9728, 32.0476, 0.73 ) }
    dend_71 { pt3dadd( 15.6278, -17.0841, 33.0454, 0.59 ) }
    dend_71 { pt3dadd( 14.7597, -17.1029, 33.8902, 0.95 ) }
    dend_71 { pt3dadd( 14.3044, -17.0776, 34.3934, 0.95 ) }
    dend_71 { pt3dadd( 12.986, -16.9112, 36.0661, 1.03 ) }
    dend_71 { pt3dadd( 12.2776, -16.7778, 37.1316, 0.51 ) }
    dend_71 { pt3dadd( 11.6993, -16.6216, 38.2216, 0.51 ) }
    dend_71 { pt3dadd( 11.3685, -16.4862, 39.0065, 0.59 ) }
    dend_71 { pt3dadd( 11.1772, -16.3943, 39.6244, 0.59 ) }
    dend_71 { pt3dadd( 11.1141, -16.3791, 39.9877, 0.59 ) }
    dend_71 { pt3dadd( 11.1411, -16.4636, 40.3719, 0.59 ) }
    dend_71 { pt3dadd( 11.3848, -17.0401, 41.0037, 0.59 ) }
    dend_71 { pt3dadd( 11.5873, -17.5925, 41.3237, 0.29 ) }
    dend_71 { pt3dadd( 11.8151, -18.3499, 41.6228, 0.29 ) }
    dend_71 { pt3dadd( 12.037, -19.1829, 41.9044, 0.29 ) }
    dend_71 { pt3dadd( 12.1409, -19.6502, 42.0483, 0.29 ) }
    dend_71 { pt3dadd( 12.2737, -20.3504, 42.232, 0.37 ) }
    dend_71 { pt3dadd( 12.3797, -20.9554, 42.3375, 0.15 ) }
    dend_71 { pt3dadd( 12.4671, -21.74, 42.4681, 0.37 ) }
    // Section: dend_63, id: dend_63, parent: dend_57 (entry count 19/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 1.91184, -12.9817, 6.13286, 1.18 ) }
    dend_63 { pt3dadd( 2.69965, -13.9963, 6.16833, 1.18 ) }
    dend_63 { pt3dadd( 3.49128, -14.9856, 6.21362, 0.88 ) }
    dend_63 { pt3dadd( 4.16538, -15.8355, 6.18502, 0.88 ) }
    dend_63 { pt3dadd( 4.5962, -16.3688, 6.17774, 0.88 ) }
    dend_63 { pt3dadd( 5.28903, -17.2163, 6.17579, 0.59 ) }
    dend_63 { pt3dadd( 6.55906, -18.744, 6.2965, 1.1 ) }
    dend_63 { pt3dadd( 7.64629, -20.0431, 6.60515, 0.51 ) }
    dend_63 { pt3dadd( 8.66764, -21.2366, 6.96836, 0.66 ) }
    dend_63 { pt3dadd( 9.44922, -22.1159, 7.2889, 0.66 ) }
    dend_63 { pt3dadd( 9.94784, -22.6614, 7.53186, 1.03 ) }
    dend_63 { pt3dadd( 11.3203, -24.1101, 8.40719, 1.47 ) }
    dend_63 { pt3dadd( 12.7408, -25.6189, 9.83235, 1.47 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 32/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 1.91184, -12.9817, 6.13286, 1.1 ) }
    dend_58 { pt3dadd( 1.27126, -13.2892, 6.48934, 1.1 ) }
    dend_58 { pt3dadd( 0.0214191, -13.8583, 6.94954, 1.25 ) }
    dend_58 { pt3dadd( -0.205566, -13.9652, 7.013, 1.25 ) }
    dend_58 { pt3dadd( -0.545929, -14.1338, 7.08876, 1.25 ) }
    dend_58 { pt3dadd( -1.18194, -14.45, 7.20211, 1.18 ) }
    dend_58 { pt3dadd( -1.84343, -14.7785, 7.32848, 1.18 ) }
    dend_58 { pt3dadd( -2.80635, -15.2581, 7.38598, 1.25 ) }
    dend_58 { pt3dadd( -3.64245, -15.6686, 7.33715, 0.88 ) }
    dend_58 { pt3dadd( -4.47157, -16.0725, 7.24862, 0.88 ) }
    dend_58 { pt3dadd( -5.4445, -16.544, 7.12756, 0.37 ) }
    dend_58 { pt3dadd( -6.07254, -16.8527, 7.03046, 0.37 ) }
    dend_58 { pt3dadd( -7.62148, -17.6303, 6.71591, 1.18 ) }
    dend_58 { pt3dadd( -7.91113, -17.7755, 6.63093, 1.84 ) }
    dend_58 { pt3dadd( -8.36691, -17.9861, 6.43068, 1.47 ) }
    // Section: dend_56, id: dend_56, parent: dend_50 (entry count 47/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 4.60047, 23.4685, -20.6914, 0.81 ) }
    dend_56 { pt3dadd( 4.77805, 24.1139, -21.1803, 0.81 ) }
    dend_56 { pt3dadd( 4.90788, 24.6381, -21.5358, 0.81 ) }
    dend_56 { pt3dadd( 5.21252, 25.9133, -22.3251, 0.81 ) }
    dend_56 { pt3dadd( 5.59773, 27.3824, -23.1663, 1.03 ) }
    dend_56 { pt3dadd( 6.21456, 29.3871, -24.2006, 0.73 ) }
    dend_56 { pt3dadd( 6.49776, 30.1444, -24.5516, 0.81 ) }
    dend_56 { pt3dadd( 6.86429, 30.9041, -24.8455, 0.95 ) }
    dend_56 { pt3dadd( 7.17543, 31.4041, -24.9953, 0.66 ) }
    dend_56 { pt3dadd( 7.66417, 32.0191, -25.1437, 0.66 ) }
    dend_56 { pt3dadd( 8.53383, 32.9416, -25.3827, 0.88 ) }
    dend_56 { pt3dadd( 9.41366, 33.7412, -25.6575, 0.66 ) }
    dend_56 { pt3dadd( 10.3122, 34.4832, -26.0492, 0.88 ) }
    dend_56 { pt3dadd( 11.3875, 35.281, -26.6644, 0.44 ) }
    dend_56 { pt3dadd( 12.8802, 36.3459, -27.641, 0.44 ) }
    dend_56 { pt3dadd( 13.9894, 37.1161, -28.4971, 0.51 ) }
    dend_56 { pt3dadd( 14.5565, 37.491, -29.0099, 0.81 ) }
    dend_56 { pt3dadd( 15.8023, 38.2375, -30.2203, 0.81 ) }
    dend_56 { pt3dadd( 17.3596, 39.0553, -31.7665, 0.81 ) }
    dend_56 { pt3dadd( 18.1799, 39.3949, -32.5897, 0.81 ) }
    dend_56 { pt3dadd( 19.6134, 39.8384, -34.0949, 0.81 ) }
    dend_56 { pt3dadd( 20.7336, 40.0935, -35.3339, 0.95 ) }
    dend_56 { pt3dadd( 21.9038, 40.3024, -36.7358, 0.59 ) }
    dend_56 { pt3dadd( 22.7238, 40.4108, -37.8062, 0.59 ) }
    dend_56 { pt3dadd( 23.9832, 40.5309, -39.5843, 0.59 ) }
    dend_56 { pt3dadd( 25.0095, 40.6332, -41.1443, 0.59 ) }
    dend_56 { pt3dadd( 25.3442, 40.6912, -41.6644, 0.59 ) }
    dend_56 { pt3dadd( 25.6832, 40.8209, -42.1988, 0.59 ) }
    dend_56 { pt3dadd( 26.2297, 41.1744, -43.0577, 0.59 ) }
    dend_56 { pt3dadd( 26.8563, 41.692, -43.8502, 0.81 ) }
    dend_56 { pt3dadd( 27.6077, 42.3997, -44.5668, 0.81 ) }
    dend_56 { pt3dadd( 28.0722, 42.8567, -44.9321, 0.59 ) }
    dend_56 { pt3dadd( 29.5671, 44.2734, -46.0408, 0.59 ) }
    dend_56 { pt3dadd( 30.0337, 44.6891, -46.3919, 0.73 ) }
    dend_56 { pt3dadd( 30.5918, 45.1712, -46.8761, 0.51 ) }
    dend_56 { pt3dadd( 31.5543, 46.0283, -47.9506, 0.73 ) }
    dend_56 { pt3dadd( 32.0193, 46.4744, -48.629, 0.59 ) }
    dend_56 { pt3dadd( 32.5994, 47.1352, -49.7799, 0.59 ) }
    dend_56 { pt3dadd( 33.1811, 47.9237, -51.3099, 0.44 ) }
    dend_56 { pt3dadd( 33.6466, 48.6032, -52.7808, 1.03 ) }
    dend_56 { pt3dadd( 34.2685, 49.4461, -55.0583, 0.66 ) }
    dend_56 { pt3dadd( 34.7103, 50.0102, -56.8027, 0.66 ) }
    dend_56 { pt3dadd( 35.1494, 50.5674, -58.6306, 0.51 ) }
    dend_56 { pt3dadd( 35.6664, 51.2503, -60.7729, 0.51 ) }
    dend_56 { pt3dadd( 36.0407, 51.7301, -62.1693, 1.03 ) }
    dend_56 { pt3dadd( 37.6168, 53.4979, -67.0134, 0.59 ) }
    dend_56 { pt3dadd( 37.9404, 53.8087, -67.7969, 0.59 ) }
    dend_56 { pt3dadd( 38.2077, 54.0347, -68.289, 0.59 ) }
    dend_56 { pt3dadd( 38.9531, 54.6162, -69.3258, 0.73 ) }
    dend_56 { pt3dadd( 39.6819, 55.1913, -70.1658, 0.29 ) }
    dend_56 { pt3dadd( 41.0193, 56.2523, -71.2692, 0.51 ) }
    dend_56 { pt3dadd( 41.8291, 56.8957, -71.5337, 0.88 ) }
    dend_56 { pt3dadd( 42.6385, 57.4738, -71.7598, 0.51 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_56 { pt3dadd( 43.7733, 58.1723, -72.0792, 0.66 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 1/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 4.60047, 23.4685, -20.6914, 0.88 ) }
    dend_51 { pt3dadd( 4.37669, 23.6247, -21.5156, 0.88 ) }
    dend_51 { pt3dadd( 3.8667, 24.1258, -23.9433, 0.66 ) }
    dend_51 { pt3dadd( 3.65708, 24.4655, -25.6488, 0.81 ) }
    dend_51 { pt3dadd( 3.64329, 24.6149, -26.6585, 0.81 ) }
    dend_51 { pt3dadd( 3.69365, 24.6877, -27.38, 0.81 ) }
    dend_51 { pt3dadd( 3.75505, 24.7765, -28.2596, 0.81 ) }
    dend_51 { pt3dadd( 3.88925, 24.8379, -29.0438, 0.81 ) }
    dend_51 { pt3dadd( 4.33979, 24.8837, -30.1525, 0.81 ) }
    dend_51 { pt3dadd( 5.24943, 24.8206, -31.6406, 0.81 ) }
    dend_51 { pt3dadd( 5.70682, 24.7219, -32.2973, 1.25 ) }
    // Section: dend_31, id: dend_31, parent: dend_21 (entry count 12/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 0.390994, 8.49933, -5.13642, 1.98 ) }
    dend_31 { pt3dadd( 0.336645, 9.92952, -4.32201, 1.98 ) }
    dend_31 { pt3dadd( 0.347535, 11.5249, -3.53157, 1.76 ) }
    dend_31 { pt3dadd( 0.36021, 13.3819, -2.61149, 1.76 ) }
    dend_31 { pt3dadd( 0.363755, 13.9013, -2.35416, 1.91 ) }
    dend_31 { pt3dadd( 0.371361, 15.0156, -1.80207, 1.62 ) }
    dend_31 { pt3dadd( 0.374299, 15.4459, -1.58884, 1.62 ) }
    dend_31 { pt3dadd( 0.449908, 16.7733, -1.08095, 1.91 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 20/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 0.390994, 8.49933, -5.13642, 1.32 ) }
    dend_22 { pt3dadd( 0.81939, 9.50229, -5.84306, 1.32 ) }
    dend_22 { pt3dadd( 1.73757, 11.1827, -6.83654, 1.1 ) }
    dend_22 { pt3dadd( 2.57591, 12.457, -7.4936, 0.95 ) }
    dend_22 { pt3dadd( 3.28961, 13.3597, -7.99991, 0.95 ) }
    dend_22 { pt3dadd( 4.64554, 14.874, -8.94263, 0.95 ) }
    dend_22 { pt3dadd( 5.46456, 15.737, -9.51199, 0.95 ) }
    dend_22 { pt3dadd( 6.564, 16.794, -10.1949, 0.95 ) }
    dend_22 { pt3dadd( 7.22525, 17.3959, -10.5558, 1.03 ) }
    dend_22 { pt3dadd( 9.02217, 18.9336, -11.492, 0.95 ) }
    dend_22 { pt3dadd( 10.6652, 20.3208, -12.3923, 0.88 ) }
    dend_22 { pt3dadd( 11.8704, 21.4009, -13.1286, 1.03 ) }
    dend_22 { pt3dadd( 12.6144, 22.1313, -13.5734, 0.73 ) }
    dend_22 { pt3dadd( 13.3633, 22.9243, -13.9584, 0.95 ) }
    dend_22 { pt3dadd( 14.1214, 23.7759, -14.2912, 1.03 ) }
    dend_22 { pt3dadd( 15.4263, 25.2793, -14.7118, 0.81 ) }
    dend_22 { pt3dadd( 16.6314, 26.614, -14.9953, 1.25 ) }
    dend_22 { pt3dadd( 18.0566, 28.1038, -15.2977, 0.88 ) }
    dend_22 { pt3dadd( 19.1317, 29.1754, -15.558, 0.95 ) }
    dend_22 { pt3dadd( 20.3896, 30.3595, -15.8859, 0.88 ) }
    dend_22 { pt3dadd( 21.2199, 31.1199, -16.1061, 0.88 ) }
    dend_22 { pt3dadd( 22.2825, 32.0122, -16.3738, 1.03 ) }
    dend_22 { pt3dadd( 23.472, 32.859, -16.7076, 0.88 ) }
    dend_22 { pt3dadd( 24.6229, 33.5584, -17.0767, 0.88 ) }
    dend_22 { pt3dadd( 24.9145, 33.7226, -17.2024, 1.47 ) }
    // Section: dend_12, id: dend_12, parent: dend_0 (entry count 45/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -14.7125, -1.82109, -5.57216, 1.25 ) }
    dend_12 { pt3dadd( -15.5105, -0.78514, -5.78297, 1.25 ) }
    dend_12 { pt3dadd( -16.3303, 0.279231, -5.99956, 1.25 ) }
    dend_12 { pt3dadd( -17.3796, 1.6415, -6.27678, 1.25 ) }
    dend_12 { pt3dadd( -17.7377, 2.10642, -6.37139, 1.25 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 50/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -14.7125, -1.82109, -5.57216, 1.1 ) }
    dend_1 { pt3dadd( -16.2718, -3.97076, -7.01536, 1.1 ) }
    dend_1 { pt3dadd( -16.9772, -4.94324, -7.66823, 1.4 ) }
    dend_1 { pt3dadd( -18.359, -6.84818, -8.94712, 2.28 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 54/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 37.5474, -12.0257, 0.0, 0.15 ) }
    axon_1 { pt3dadd( 51.8333, -16.5988, 0.0, 0.15 ) }
    axon_1 { pt3dadd( 66.1192, -21.1719, 0.0, 0.15 ) }
    // Section: dend_101, id: dend_101, parent: dend_89 (entry count 57/100)
    dend_101 { pt3dclear() }
    dend_101 { pt3dadd( 9.30122, 1.20165, 27.4059, 0.88 ) }
    dend_101 { pt3dadd( 10.6773, 1.26996, 29.2158, 0.88 ) }
    dend_101 { pt3dadd( 12.1525, 1.34319, 31.1561, 0.88 ) }
    dend_101 { pt3dadd( 13.8753, 1.42872, 33.4221, 0.88 ) }
    dend_101 { pt3dadd( 15.0571, 1.48739, 34.9766, 1.47 ) }
    // Section: dend_90, id: dend_90, parent: dend_89 (entry count 62/100)
    dend_90 { pt3dclear() }
    dend_90 { pt3dadd( 9.30122, 1.20165, 27.4059, 1.69 ) }
    dend_90 { pt3dadd( 9.38789, 1.65023, 27.4076, 1.69 ) }
    dend_90 { pt3dadd( 9.56382, 2.56084, 27.411, 1.25 ) }
    dend_90 { pt3dadd( 9.68781, 3.20258, 27.4134, 1.25 ) }
    // Section: dend_84, id: dend_84, parent: dend_82 (entry count 66/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( 2.44818, -0.155126, 22.5607, 1.03 ) }
    dend_84 { pt3dadd( 1.88008, 0.0436241, 22.6991, 1.03 ) }
    dend_84 { pt3dadd( 1.34433, 0.231054, 22.8295, 1.03 ) }
    dend_84 { pt3dadd( 0.735314, 0.444121, 22.9779, 1.03 ) }
    dend_84 { pt3dadd( -0.127944, 0.74613, 23.1881, 1.32 ) }
    // Section: dend_83, id: dend_83, parent: dend_82 (entry count 71/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( 2.44818, -0.155126, 22.5607, 0.81 ) }
    dend_83 { pt3dadd( 2.00419, -1.34118, 23.7697, 0.81 ) }
    dend_83 { pt3dadd( 1.58381, -2.23509, 24.7802, 0.81 ) }
    dend_83 { pt3dadd( 0.819661, -3.58762, 26.3593, 0.81 ) }
    dend_83 { pt3dadd( 0.114477, -4.66352, 27.6862, 1.03 ) }
    dend_83 { pt3dadd( -0.153871, -5.03974, 28.1535, 1.03 ) }
    dend_83 { pt3dadd( -0.918356, -6.11907, 29.5237, 0.51 ) }
    dend_83 { pt3dadd( -1.41001, -6.77405, 30.4745, 0.51 ) }
    dend_83 { pt3dadd( -1.71247, -7.19401, 31.1333, 0.88 ) }
    dend_83 { pt3dadd( -2.13847, -7.78625, 32.0918, 0.73 ) }
    dend_83 { pt3dadd( -2.31469, -8.07882, 32.5536, 1.03 ) }
    dend_83 { pt3dadd( -2.59284, -8.79746, 33.5835, 1.18 ) }
    dend_83 { pt3dadd( -2.63871, -9.11974, 33.9247, 1.18 ) }
    dend_83 { pt3dadd( -2.83583, -10.7419, 35.168, 0.81 ) }
    dend_83 { pt3dadd( -2.96775, -11.6381, 35.6749, 0.37 ) }
    dend_83 { pt3dadd( -3.14054, -12.3941, 35.9432, 0.37 ) }
    dend_83 { pt3dadd( -3.534, -13.8098, 36.2295, 0.51 ) }
    dend_83 { pt3dadd( -3.96776, -15.2034, 36.3472, 0.44 ) }
    dend_83 { pt3dadd( -4.3378, -16.384, 36.3744, 0.88 ) }
    dend_83 { pt3dadd( -4.55831, -17.0736, 36.3683, 0.88 ) }
    dend_83 { pt3dadd( -4.86721, -18.1431, 36.4085, 0.95 ) }
    dend_83 { pt3dadd( -5.21388, -19.5195, 36.4571, 0.37 ) }
    dend_83 { pt3dadd( -5.3989, -20.3817, 36.4987, 0.37 ) }
    dend_83 { pt3dadd( -5.53515, -21.2522, 36.5533, 0.37 ) }
    dend_83 { pt3dadd( -5.68501, -22.5771, 36.6595, 0.29 ) }
    dend_83 { pt3dadd( -5.77467, -23.5444, 36.7255, 0.88 ) }
    dend_83 { pt3dadd( -5.8467, -24.4181, 36.7742, 0.88 ) }
    dend_83 { pt3dadd( -5.92219, -25.2718, 36.7834, 0.51 ) }
    dend_83 { pt3dadd( -6.03931, -26.6343, 36.6692, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_83 { pt3dadd( -6.07592, -27.192, 36.5732, 0.66 ) }
    dend_83 { pt3dadd( -6.10709, -27.9705, 36.3741, 0.37 ) }
    dend_83 { pt3dadd( -6.1221, -28.7591, 36.1465, 0.73 ) }
    dend_83 { pt3dadd( -6.10817, -29.8248, 35.8394, 0.29 ) }
    dend_83 { pt3dadd( -6.04112, -30.9788, 35.5241, 0.73 ) }
    dend_83 { pt3dadd( -5.98319, -31.5627, 35.3853, 0.37 ) }
    dend_83 { pt3dadd( -5.90484, -32.1108, 35.263, 0.95 ) }
    dend_83 { pt3dadd( -5.6447, -33.2902, 35.0813, 0.29 ) }
    dend_83 { pt3dadd( -5.48567, -33.8415, 35.0683, 0.29 ) }
    dend_83 { pt3dadd( -5.1351, -34.867, 35.1892, 0.29 ) }
    dend_83 { pt3dadd( -4.88295, -35.4993, 35.3259, 0.81 ) }
    dend_83 { pt3dadd( -4.68146, -35.9492, 35.4431, 0.81 ) }
    dend_83 { pt3dadd( -4.146, -37.0765, 35.7781, 0.29 ) }
    dend_83 { pt3dadd( -3.67657, -38.0676, 36.1073, 0.59 ) }
    dend_83 { pt3dadd( -3.40028, -38.6952, 36.3312, 0.81 ) }
    dend_83 { pt3dadd( -3.12381, -39.3868, 36.5834, 0.81 ) }
    dend_83 { pt3dadd( -2.71593, -40.5733, 36.9719, 0.29 ) }
    dend_83 { pt3dadd( -2.6121, -40.9439, 37.101, 0.29 ) }
    dend_83 { pt3dadd( -2.40012, -41.9653, 37.4438, 0.88 ) }
    dend_83 { pt3dadd( -2.25543, -42.9813, 37.7915, 0.15 ) }
    dend_83 { pt3dadd( -2.23785, -43.6468, 38.0343, 0.59 ) }
    dend_83 { pt3dadd( -2.31452, -44.4355, 38.3303, 0.37 ) }
    dend_83 { pt3dadd( -2.63055, -45.9246, 38.9496, 1.32 ) }
    dend_83 { pt3dadd( -2.76463, -46.4205, 39.1622, 1.32 ) }
    dend_83 { pt3dadd( -2.99634, -47.0916, 39.5116, 1.03 ) }
    dend_83 { pt3dadd( -3.35245, -48.0625, 40.1145, 0.51 ) }
    dend_83 { pt3dadd( -3.51525, -48.5066, 40.4186, 0.22 ) }
    dend_83 { pt3dadd( -3.8128, -49.3433, 41.0119, 0.22 ) }
    dend_83 { pt3dadd( -4.00187, -49.9025, 41.4038, 1.03 ) }
    dend_83 { pt3dadd( -4.52805, -51.5338, 42.625, 0.37 ) }
    dend_83 { pt3dadd( -4.75005, -52.3427, 43.2766, 0.15 ) }
    dend_83 { pt3dadd( -4.84165, -52.7679, 43.623, 0.15 ) }
    dend_83 { pt3dadd( -4.90152, -53.09, 43.8583, 0.15 ) }
    dend_83 { pt3dadd( -4.94782, -53.3649, 44.0068, 0.15 ) }
    dend_83 { pt3dadd( -5.02721, -53.8958, 44.2257, 0.73 ) }
    dend_83 { pt3dadd( -5.12762, -54.5152, 44.3725, 0.88 ) }
    dend_83 { pt3dadd( -5.2517, -55.125, 44.4823, 0.73 ) }
    dend_83 { pt3dadd( -5.41506, -55.8872, 44.6397, 0.73 ) }
    dend_83 { pt3dadd( -5.68057, -57.0476, 44.8951, 0.22 ) }
    dend_83 { pt3dadd( -5.92162, -58.121, 45.1148, 0.22 ) }
    dend_83 { pt3dadd( -6.18593, -59.2888, 45.3506, 0.81 ) }
    dend_83 { pt3dadd( -6.58386, -60.9446, 45.6722, 0.07 ) }
    dend_83 { pt3dadd( -7.0089, -62.6098, 46.0122, 0.95 ) }
    dend_83 { pt3dadd( -7.36131, -63.8931, 46.2866, 0.15 ) }
    dend_83 { pt3dadd( -7.73024, -65.125, 46.5559, 1.4 ) }
    // Section: dend_80, id: dend_80, parent: dend_72 (entry count 45/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( 27.6253, -18.789, 21.571, 0.44 ) }
    dend_80 { pt3dadd( 28.8615, -18.2652, 21.4972, 0.44 ) }
    dend_80 { pt3dadd( 29.8851, -17.9139, 21.3676, 0.44 ) }
    dend_80 { pt3dadd( 30.497, -17.721, 21.2402, 0.66 ) }
    dend_80 { pt3dadd( 31.1211, -17.4968, 21.0877, 0.88 ) }
    dend_80 { pt3dadd( 32.4278, -16.9691, 20.752, 1.1 ) }
    dend_80 { pt3dadd( 33.5994, -16.4554, 20.447, 0.73 ) }
    dend_80 { pt3dadd( 34.4159, -16.0617, 20.2228, 1.18 ) }
    dend_80 { pt3dadd( 35.2542, -15.6155, 19.9917, 0.81 ) }
    dend_80 { pt3dadd( 36.3985, -14.8962, 19.7483, 0.29 ) }
    dend_80 { pt3dadd( 37.1822, -14.2888, 19.6932, 0.73 ) }
    dend_80 { pt3dadd( 37.6306, -13.8925, 19.7303, 1.18 ) }
    dend_80 { pt3dadd( 38.6835, -12.9821, 19.9128, 0.66 ) }
    dend_80 { pt3dadd( 39.3684, -12.4276, 20.0653, 0.44 ) }
    dend_80 { pt3dadd( 40.2224, -11.8047, 20.2804, 0.44 ) }
    dend_80 { pt3dadd( 41.6394, -10.8773, 20.626, 0.95 ) }
    dend_80 { pt3dadd( 42.9758, -10.0683, 20.9169, 0.59 ) }
    dend_80 { pt3dadd( 44.7211, -9.04903, 21.2388, 0.29 ) }
    dend_80 { pt3dadd( 45.3184, -8.70449, 21.3199, 0.66 ) }
    dend_80 { pt3dadd( 46.1869, -8.22191, 21.4045, 0.22 ) }
    dend_80 { pt3dadd( 46.8685, -7.86005, 21.4301, 0.22 ) }
    dend_80 { pt3dadd( 47.8053, -7.35865, 21.4049, 0.88 ) }
    dend_80 { pt3dadd( 48.4254, -6.99721, 21.3814, 0.59 ) }
    dend_80 { pt3dadd( 49.241, -6.49131, 21.3597, 0.37 ) }
    dend_80 { pt3dadd( 49.646, -6.24721, 21.3507, 0.22 ) }
    dend_80 { pt3dadd( 50.1424, -5.9909, 21.3508, 0.22 ) }
    dend_80 { pt3dadd( 50.7972, -5.71144, 21.3601, 0.22 ) }
    dend_80 { pt3dadd( 52.3839, -5.19654, 21.6059, 0.22 ) }
    dend_80 { pt3dadd( 52.9005, -5.08028, 21.7148, 0.81 ) }
    dend_80 { pt3dadd( 53.3674, -4.99487, 21.8281, 0.81 ) }
    dend_80 { pt3dadd( 54.6154, -4.77736, 22.1525, 0.59 ) }
    dend_80 { pt3dadd( 55.2927, -4.66063, 22.3381, 0.73 ) }
    dend_80 { pt3dadd( 57.749, -4.27837, 23.0252, 0.22 ) }
    dend_80 { pt3dadd( 58.8299, -4.1206, 23.3437, 0.37 ) }
    dend_80 { pt3dadd( 59.5757, -3.98045, 23.5294, 0.37 ) }
    dend_80 { pt3dadd( 60.3134, -3.77972, 23.6827, 0.37 ) }
    dend_80 { pt3dadd( 61.2635, -3.41709, 23.8356, 0.37 ) }
    dend_80 { pt3dadd( 61.8307, -3.17117, 23.8847, 0.37 ) }
    dend_80 { pt3dadd( 62.3829, -2.91831, 23.8614, 0.44 ) }
    dend_80 { pt3dadd( 63.639, -2.36564, 23.8901, 0.51 ) }
    dend_80 { pt3dadd( 64.8108, -1.92839, 23.9574, 0.66 ) }
    dend_80 { pt3dadd( 65.7485, -1.61209, 24.1142, 0.37 ) }
    dend_80 { pt3dadd( 66.6805, -1.35133, 24.3562, 0.22 ) }
    dend_80 { pt3dadd( 67.7102, -1.13441, 24.6915, 0.22 ) }
    dend_80 { pt3dadd( 69.1205, -0.940793, 25.2826, 0.66 ) }
    dend_80 { pt3dadd( 69.7311, -0.903329, 25.608, 0.66 ) }
    dend_80 { pt3dadd( 71.2681, -0.88734, 26.4795, 0.66 ) }
    dend_80 { pt3dadd( 71.7927, -0.897225, 26.788, 0.66 ) }
    dend_80 { pt3dadd( 72.8609, -0.947699, 27.4274, 0.22 ) }
    dend_80 { pt3dadd( 73.8477, -1.05503, 27.9935, 0.88 ) }
    dend_80 { pt3dadd( 75.43, -1.33213, 28.7656, 0.29 ) }
    dend_80 { pt3dadd( 76.1761, -1.50907, 29.0946, 0.29 ) }
    dend_80 { pt3dadd( 77.3192, -1.85711, 29.4956, 0.29 ) }
    dend_80 { pt3dadd( 78.0032, -2.09576, 29.6876, 0.51 ) }
    dend_80 { pt3dadd( 78.8155, -2.41459, 29.8007, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_80 { pt3dadd( 79.1058, -2.53517, 29.7836, 0.29 ) }
    dend_80 { pt3dadd( 79.5182, -2.71883, 29.6871, 0.07 ) }
    dend_80 { pt3dadd( 80.2276, -3.01665, 29.4576, 0.59 ) }
    dend_80 { pt3dadd( 81.3271, -3.42549, 28.9671, 0.22 ) }
    dend_80 { pt3dadd( 82.1683, -3.68831, 28.5438, 0.59 ) }
    dend_80 { pt3dadd( 82.5183, -3.79171, 28.3418, 0.22 ) }
    dend_80 { pt3dadd( 83.1827, -4.00777, 27.9234, 0.22 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 7/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 27.6253, -18.789, 21.571, 0.81 ) }
    dend_73 { pt3dadd( 28.0743, -19.9343, 21.0583, 0.81 ) }
    dend_73 { pt3dadd( 28.4569, -20.9104, 20.6213, 1.03 ) }
    dend_73 { pt3dadd( 28.8034, -21.7941, 20.2257, 1.03 ) }
    dend_73 { pt3dadd( 29.0644, -22.4601, 19.9276, 0.66 ) }
    dend_73 { pt3dadd( 29.3095, -23.0851, 19.6478, 1.03 ) }
    dend_73 { pt3dadd( 29.6692, -24.0029, 19.237, 1.18 ) }
    // Section: dend_67, id: dend_67, parent: dend_63 (entry count 14/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 12.7408, -25.6189, 9.83235, 0.44 ) }
    dend_67 { pt3dadd( 14.5119, -26.8927, 7.40798, 0.44 ) }
    dend_67 { pt3dadd( 14.7988, -27.1303, 7.09337, 0.44 ) }
    dend_67 { pt3dadd( 15.0886, -27.38, 6.81168, 0.44 ) }
    dend_67 { pt3dadd( 15.7903, -28.0016, 6.14725, 0.44 ) }
    dend_67 { pt3dadd( 16.3097, -28.4638, 5.66855, 0.88 ) }
    dend_67 { pt3dadd( 16.6428, -28.7454, 5.38979, 1.32 ) }
    dend_67 { pt3dadd( 17.2969, -29.2991, 4.91703, 1.32 ) }
    dend_67 { pt3dadd( 18.5205, -30.2817, 4.0585, 0.44 ) }
    dend_67 { pt3dadd( 19.5654, -31.0776, 3.36048, 1.1 ) }
    dend_67 { pt3dadd( 20.2671, -31.586, 2.95645, 1.1 ) }
    dend_67 { pt3dadd( 21.6745, -32.5091, 2.21835, 0.29 ) }
    dend_67 { pt3dadd( 22.504, -33.0082, 1.85443, 0.29 ) }
    dend_67 { pt3dadd( 23.1665, -33.3652, 1.61366, 0.29 ) }
    dend_67 { pt3dadd( 23.8089, -33.668, 1.46528, 0.29 ) }
    dend_67 { pt3dadd( 25.2175, -34.2476, 1.31463, 1.18 ) }
    dend_67 { pt3dadd( 26.4509, -34.7259, 1.31411, 0.51 ) }
    dend_67 { pt3dadd( 27.5775, -35.1594, 1.41779, 1.1 ) }
    dend_67 { pt3dadd( 29.1397, -35.8109, 1.65993, 0.66 ) }
    dend_67 { pt3dadd( 30.3427, -36.3251, 1.84012, 1.03 ) }
    dend_67 { pt3dadd( 31.5749, -36.8755, 1.98244, 0.22 ) }
    dend_67 { pt3dadd( 32.5675, -37.3344, 2.05805, 0.95 ) }
    dend_67 { pt3dadd( 33.4003, -37.7258, 2.12602, 0.66 ) }
    dend_67 { pt3dadd( 34.6528, -38.3167, 2.20606, 0.22 ) }
    dend_67 { pt3dadd( 35.6743, -38.8017, 2.2314, 0.81 ) }
    dend_67 { pt3dadd( 36.8981, -39.3884, 2.1784, 1.18 ) }
    dend_67 { pt3dadd( 37.4188, -39.6391, 2.13994, 1.18 ) }
    dend_67 { pt3dadd( 38.466, -40.1929, 2.10088, 0.44 ) }
    dend_67 { pt3dadd( 39.0318, -40.5302, 2.10556, 0.44 ) }
    dend_67 { pt3dadd( 39.7779, -41.0363, 2.16019, 0.44 ) }
    dend_67 { pt3dadd( 40.685, -41.744, 2.29479, 0.44 ) }
    dend_67 { pt3dadd( 41.545, -42.4093, 2.43523, 1.03 ) }
    dend_67 { pt3dadd( 42.7092, -43.2204, 2.57738, 0.22 ) }
    dend_67 { pt3dadd( 43.6098, -43.7664, 2.65792, 1.1 ) }
    dend_67 { pt3dadd( 44.3906, -44.1528, 2.71068, 0.44 ) }
    dend_67 { pt3dadd( 45.2769, -44.4744, 2.71514, 1.18 ) }
    dend_67 { pt3dadd( 46.6573, -44.8014, 2.63817, 0.15 ) }
    dend_67 { pt3dadd( 47.8035, -44.9597, 2.55156, 0.95 ) }
    dend_67 { pt3dadd( 48.5055, -45.0235, 2.4654, 0.07 ) }
    dend_67 { pt3dadd( 49.0943, -45.0702, 2.38281, 0.44 ) }
    dend_67 { pt3dadd( 50.4267, -45.1749, 2.1657, 0.29 ) }
    dend_67 { pt3dadd( 51.0504, -45.2352, 2.04943, 0.29 ) }
    dend_67 { pt3dadd( 51.5597, -45.3064, 1.95497, 0.81 ) }
    dend_67 { pt3dadd( 53.0293, -45.5363, 1.69955, 0.81 ) }
    dend_67 { pt3dadd( 54.2004, -45.7055, 1.4627, 0.15 ) }
    dend_67 { pt3dadd( 54.9624, -45.8182, 1.30476, 0.59 ) }
    dend_67 { pt3dadd( 56.2791, -46.0195, 1.05468, 0.29 ) }
    dend_67 { pt3dadd( 56.9653, -46.1287, 0.924983, 1.18 ) }
    dend_67 { pt3dadd( 57.6512, -46.259, 0.794597, 1.18 ) }
    dend_67 { pt3dadd( 59.576, -46.7706, 0.412934, 0.15 ) }
    dend_67 { pt3dadd( 60.0552, -46.9244, 0.305356, 0.15 ) }
    dend_67 { pt3dadd( 60.5825, -47.1216, 0.171719, 0.15 ) }
    dend_67 { pt3dadd( 61.2138, -47.3981, 0.00131911, 0.15 ) }
    dend_67 { pt3dadd( 62.2714, -47.9128, -0.319783, 1.32 ) }
    dend_67 { pt3dadd( 63.2719, -48.4888, -0.635459, 0.29 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 69/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 12.7408, -25.6189, 9.83235, 0.37 ) }
    dend_64 { pt3dadd( 12.6247, -26.5869, 11.1216, 0.37 ) }
    dend_64 { pt3dadd( 12.4351, -28.1282, 12.9295, 0.44 ) }
    dend_64 { pt3dadd( 12.2708, -29.4379, 14.3294, 0.44 ) }
    dend_64 { pt3dadd( 12.1169, -30.7167, 15.5563, 0.59 ) }
    dend_64 { pt3dadd( 12.0517, -31.472, 16.1978, 0.73 ) }
    dend_64 { pt3dadd( 12.0121, -32.2264, 16.7706, 0.29 ) }
    dend_64 { pt3dadd( 12.0105, -33.2186, 17.3342, 1.1 ) }
    dend_64 { pt3dadd( 12.0947, -34.4532, 17.788, 1.1 ) }
    dend_64 { pt3dadd( 12.2114, -35.4082, 18.0262, 0.81 ) }
    dend_64 { pt3dadd( 12.4702, -36.6782, 18.2459, 0.15 ) }
    dend_64 { pt3dadd( 12.7064, -37.5042, 18.3594, 0.15 ) }
    dend_64 { pt3dadd( 13.1719, -38.8049, 18.4825, 0.95 ) }
    dend_64 { pt3dadd( 13.7068, -40.0423, 18.5677, 0.37 ) }
    dend_64 { pt3dadd( 14.0608, -40.7856, 18.5927, 0.37 ) }
    dend_64 { pt3dadd( 14.7131, -42.122, 18.628, 1.18 ) }
    dend_64 { pt3dadd( 15.4003, -43.5375, 18.6672, 0.22 ) }
    dend_64 { pt3dadd( 15.9864, -44.7522, 18.6975, 0.22 ) }
    dend_64 { pt3dadd( 16.4336, -45.6889, 18.7076, 1.25 ) }
    dend_64 { pt3dadd( 17.0787, -47.1627, 18.6795, 0.15 ) }
    dend_64 { pt3dadd( 17.4835, -48.1416, 18.6267, 0.15 ) }
    dend_64 { pt3dadd( 17.8608, -49.146, 18.5375, 1.03 ) }
    dend_64 { pt3dadd( 18.0892, -49.769, 18.4582, 1.03 ) }
    dend_64 { pt3dadd( 18.4541, -50.8143, 18.3405, 0.29 ) }
    dend_64 { pt3dadd( 18.8838, -52.0837, 18.2543, 0.15 ) }
    dend_64 { pt3dadd( 19.0522, -52.578, 18.2557, 0.95 ) }
    dend_64 { pt3dadd( 19.2885, -53.2661, 18.3081, 0.95 ) }
    dend_64 { pt3dadd( 19.5698, -54.136, 18.5205, 0.95 ) }
    dend_64 { pt3dadd( 19.9506, -55.4878, 19.0219, 0.22 ) }
    dend_64 { pt3dadd( 20.1489, -56.3449, 19.4139, 0.22 ) }
    dend_64 { pt3dadd( 20.326, -57.1834, 19.8282, 1.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_64 { pt3dadd( 20.551, -58.5978, 20.5339, 0.15 ) }
    dend_64 { pt3dadd( 20.7672, -60.4632, 21.437, 0.15 ) }
    dend_64 { pt3dadd( 20.8308, -61.244, 21.7709, 0.15 ) }
    dend_64 { pt3dadd( 20.89, -62.1192, 22.0432, 0.15 ) }
    dend_64 { pt3dadd( 20.9554, -63.2501, 22.3406, 0.15 ) }
    dend_64 { pt3dadd( 21.0121, -64.5541, 22.6775, 0.88 ) }
    dend_64 { pt3dadd( 21.0359, -65.0331, 22.7917, 1.1 ) }
    dend_64 { pt3dadd( 21.1459, -66.5307, 23.0778, 0.07 ) }
    dend_64 { pt3dadd( 21.2711, -67.9083, 23.363, 0.88 ) }
    dend_64 { pt3dadd( 21.4111, -69.3792, 23.6887, 0.15 ) }
    dend_64 { pt3dadd( 21.5188, -70.5718, 23.9617, 0.15 ) }
    dend_64 { pt3dadd( 21.6763, -71.7733, 24.2267, 0.95 ) }
    dend_64 { pt3dadd( 21.7703, -72.4009, 24.3977, 0.95 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 13/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -8.36691, -17.9861, 6.43068, 0.51 ) }
    dend_60 { pt3dadd( -8.04485, -19.2555, 6.48142, 0.51 ) }
    dend_60 { pt3dadd( -7.82018, -20.2243, 6.53439, 0.95 ) }
    dend_60 { pt3dadd( -7.70346, -20.6998, 6.5646, 0.81 ) }
    dend_60 { pt3dadd( -7.53267, -21.3842, 6.61085, 1.1 ) }
    dend_60 { pt3dadd( -7.2638, -22.5714, 6.72981, 1.03 ) }
    dend_60 { pt3dadd( -7.11823, -23.3044, 6.81546, 1.03 ) }
    dend_60 { pt3dadd( -6.9789, -24.1176, 6.9089, 0.59 ) }
    dend_60 { pt3dadd( -6.844, -24.9933, 7.06823, 0.37 ) }
    dend_60 { pt3dadd( -6.75527, -25.5807, 7.20129, 0.37 ) }
    dend_60 { pt3dadd( -6.61487, -26.5194, 7.44092, 0.37 ) }
    dend_60 { pt3dadd( -6.53299, -27.1314, 7.60607, 0.37 ) }
    dend_60 { pt3dadd( -6.46424, -27.6501, 7.74816, 0.37 ) }
    dend_60 { pt3dadd( -6.33357, -28.5915, 8.04458, 0.37 ) }
    dend_60 { pt3dadd( -6.21971, -29.4592, 8.36119, 0.51 ) }
    dend_60 { pt3dadd( -6.04776, -30.5718, 8.78608, 1.18 ) }
    dend_60 { pt3dadd( -5.92628, -31.2588, 9.12016, 0.81 ) }
    dend_60 { pt3dadd( -5.72221, -32.3543, 9.74593, 0.37 ) }
    dend_60 { pt3dadd( -5.58771, -33.1276, 10.2401, 0.15 ) }
    dend_60 { pt3dadd( -5.46978, -33.9291, 10.7781, 1.1 ) }
    dend_60 { pt3dadd( -5.33634, -34.8789, 11.4825, 0.29 ) }
    dend_60 { pt3dadd( -5.09026, -36.5086, 12.7823, 0.29 ) }
    dend_60 { pt3dadd( -5.00701, -36.9845, 13.1609, 1.32 ) }
    dend_60 { pt3dadd( -4.8293, -37.9182, 13.9072, 0.37 ) }
    dend_60 { pt3dadd( -4.69449, -38.5504, 14.4196, 0.66 ) }
    dend_60 { pt3dadd( -4.47874, -39.4923, 15.1791, 0.29 ) }
    dend_60 { pt3dadd( -4.3871, -39.8878, 15.4889, 0.29 ) }
    dend_60 { pt3dadd( -4.24086, -40.5099, 15.9008, 0.88 ) }
    dend_60 { pt3dadd( -3.99462, -41.6141, 16.6237, 0.22 ) }
    dend_60 { pt3dadd( -3.8171, -42.4433, 17.1696, 1.18 ) }
    dend_60 { pt3dadd( -3.76738, -42.7241, 17.3447, 1.03 ) }
    dend_60 { pt3dadd( -3.69616, -43.2865, 17.657, 0.81 ) }
    dend_60 { pt3dadd( -3.63155, -44.0216, 18.0356, 0.22 ) }
    dend_60 { pt3dadd( -3.60088, -44.5814, 18.3003, 0.59 ) }
    dend_60 { pt3dadd( -3.55002, -45.4441, 18.6371, 0.15 ) }
    dend_60 { pt3dadd( -3.49423, -46.1558, 18.9166, 0.44 ) }
    dend_60 { pt3dadd( -3.39605, -47.1458, 19.3174, 1.25 ) }
    dend_60 { pt3dadd( -3.32801, -47.9022, 19.6558, 0.81 ) }
    dend_60 { pt3dadd( -3.24671, -48.7621, 20.0576, 0.66 ) }
    dend_60 { pt3dadd( -3.14779, -49.6764, 20.4905, 0.29 ) }
    dend_60 { pt3dadd( -2.9761, -50.8678, 21.127, 0.81 ) }
    dend_60 { pt3dadd( -2.83614, -51.6139, 21.5785, 0.15 ) }
    dend_60 { pt3dadd( -2.57766, -52.6249, 22.2282, 0.51 ) }
    dend_60 { pt3dadd( -2.45794, -52.9985, 22.4777, 1.25 ) }
    dend_60 { pt3dadd( -2.36741, -53.2364, 22.6328, 1.25 ) }
    dend_60 { pt3dadd( -1.71272, -54.8104, 23.621, 0.07 ) }
    dend_60 { pt3dadd( -1.43487, -55.4164, 23.952, 0.51 ) }
    dend_60 { pt3dadd( -0.95784, -56.3722, 24.3607, 0.07 ) }
    dend_60 { pt3dadd( -0.65812, -56.9387, 24.5285, 0.59 ) }
    dend_60 { pt3dadd( -0.322018, -57.6166, 24.693, 0.59 ) }
    dend_60 { pt3dadd( -0.0649067, -58.1709, 24.7875, 0.15 ) }
    dend_60 { pt3dadd( 0.229813, -58.857, 24.8097, 1.18 ) }
    dend_60 { pt3dadd( 0.665095, -59.8984, 24.8248, 0.15 ) }
    dend_60 { pt3dadd( 0.84792, -60.3677, 24.8164, 0.15 ) }
    dend_60 { pt3dadd( 1.14496, -61.0691, 24.7915, 0.15 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 68/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -8.36691, -17.9861, 6.43068, 0.66 ) }
    dend_59 { pt3dadd( -8.92484, -17.7015, 5.91807, 0.66 ) }
    dend_59 { pt3dadd( -9.73196, -17.3235, 5.30311, 0.51 ) }
    dend_59 { pt3dadd( -10.4379, -17.0085, 4.83061, 0.15 ) }
    dend_59 { pt3dadd( -10.7425, -16.8823, 4.65046, 0.51 ) }
    dend_59 { pt3dadd( -11.2163, -16.7002, 4.39899, 0.59 ) }
    dend_59 { pt3dadd( -11.962, -16.4452, 4.06425, 0.88 ) }
    dend_59 { pt3dadd( -12.5968, -16.2375, 3.86263, 0.44 ) }
    dend_59 { pt3dadd( -12.8484, -16.1599, 3.80323, 1.03 ) }
    dend_59 { pt3dadd( -13.2188, -16.0523, 3.72417, 1.03 ) }
    dend_59 { pt3dadd( -13.4959, -15.9702, 3.64648, 1.03 ) }
    dend_59 { pt3dadd( -14.2574, -15.7309, 3.36024, 0.29 ) }
    dend_59 { pt3dadd( -15.2671, -15.3848, 2.91371, 0.29 ) }
    dend_59 { pt3dadd( -15.8366, -15.1785, 2.61737, 0.29 ) }
    dend_59 { pt3dadd( -16.0114, -15.1163, 2.52861, 0.88 ) }
    dend_59 { pt3dadd( -16.9311, -14.7849, 2.08521, 0.44 ) }
    dend_59 { pt3dadd( -17.5076, -14.5635, 1.83589, 0.44 ) }
    dend_59 { pt3dadd( -17.7296, -14.4722, 1.76161, 0.44 ) }
    dend_59 { pt3dadd( -18.0483, -14.3439, 1.71642, 0.44 ) }
    dend_59 { pt3dadd( -18.8685, -13.9907, 1.72089, 0.44 ) }
    dend_59 { pt3dadd( -19.3186, -13.7704, 1.79238, 0.44 ) }
    dend_59 { pt3dadd( -19.8187, -13.4972, 1.93801, 0.15 ) }
    dend_59 { pt3dadd( -20.2841, -13.2199, 2.08638, 0.15 ) }
    dend_59 { pt3dadd( -20.4887, -13.096, 2.13577, 0.15 ) }
    dend_59 { pt3dadd( -20.9991, -12.7741, 2.23402, 0.37 ) }
    dend_59 { pt3dadd( -21.5277, -12.4311, 2.30558, 0.15 ) }
    dend_59 { pt3dadd( -22.02, -12.111, 2.37254, 0.51 ) }
    dend_59 { pt3dadd( -22.3429, -11.9012, 2.41559, 0.51 ) }
    dend_59 { pt3dadd( -23.1789, -11.3319, 2.52138, 0.37 ) }
    dend_59 { pt3dadd( -23.7978, -10.9183, 2.63069, 0.59 ) }
    dend_59 { pt3dadd( -24.1243, -10.7199, 2.69804, 0.59 ) }
    dend_59 { pt3dadd( -24.5522, -10.4801, 2.7927, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_59 { pt3dadd( -24.8604, -10.3165, 2.87107, 1.32 ) }
    dend_59 { pt3dadd( -25.5368, -9.97787, 3.05329, 0.73 ) }
    dend_59 { pt3dadd( -26.4366, -9.55483, 3.3051, 0.29 ) }
    dend_59 { pt3dadd( -27.2448, -9.21618, 3.48269, 0.29 ) }
    dend_59 { pt3dadd( -27.5336, -9.10575, 3.53253, 0.29 ) }
    dend_59 { pt3dadd( -28.3541, -8.80994, 3.66524, 0.07 ) }
    dend_59 { pt3dadd( -28.7789, -8.66542, 3.74136, 1.1 ) }
    dend_59 { pt3dadd( -29.233, -8.51447, 3.85016, 0.88 ) }
    dend_59 { pt3dadd( -29.8742, -8.28631, 4.02532, 0.22 ) }
    dend_59 { pt3dadd( -30.6225, -7.9921, 4.27785, 0.22 ) }
    dend_59 { pt3dadd( -31.384, -7.6827, 4.56967, 0.22 ) }
    dend_59 { pt3dadd( -32.2543, -7.3276, 4.93419, 0.44 ) }
    dend_59 { pt3dadd( -33.0721, -6.99856, 5.28772, 0.29 ) }
    dend_59 { pt3dadd( -33.5186, -6.83042, 5.48215, 0.66 ) }
    dend_59 { pt3dadd( -34.2588, -6.584, 5.81403, 0.22 ) }
    dend_59 { pt3dadd( -34.6268, -6.47855, 5.95999, 0.59 ) }
    dend_59 { pt3dadd( -35.2605, -6.34026, 6.15916, 0.59 ) }
    dend_59 { pt3dadd( -35.7984, -6.26438, 6.28906, 0.15 ) }
    dend_59 { pt3dadd( -36.4308, -6.23728, 6.39697, 0.15 ) }
    dend_59 { pt3dadd( -36.8701, -6.25212, 6.46974, 1.18 ) }
    dend_59 { pt3dadd( -37.4884, -6.31792, 6.56589, 1.18 ) }
    dend_59 { pt3dadd( -38.1658, -6.41845, 6.66082, 0.37 ) }
    dend_59 { pt3dadd( -38.5145, -6.48561, 6.70407, 1.03 ) }
    dend_59 { pt3dadd( -39.2677, -6.65748, 6.73908, 0.15 ) }
    dend_59 { pt3dadd( -39.5771, -6.74345, 6.72942, 0.15 ) }
    dend_59 { pt3dadd( -39.9515, -6.85822, 6.69392, 0.15 ) }
    dend_59 { pt3dadd( -40.3191, -6.98699, 6.64255, 0.51 ) }
    dend_59 { pt3dadd( -41.0956, -7.26722, 6.50803, 0.88 ) }
    dend_59 { pt3dadd( -41.9334, -7.56839, 6.4177, 0.15 ) }
    dend_59 { pt3dadd( -42.6025, -7.81236, 6.39616, 0.81 ) }
    dend_59 { pt3dadd( -43.012, -7.94552, 6.38814, 0.44 ) }
    dend_59 { pt3dadd( -43.3024, -8.02092, 6.38871, 1.03 ) }
    dend_59 { pt3dadd( -43.7959, -8.11418, 6.38338, 0.66 ) }
    dend_59 { pt3dadd( -44.6436, -8.21625, 6.37625, 0.22 ) }
    dend_59 { pt3dadd( -45.3037, -8.23954, 6.37905, 1.03 ) }
    dend_59 { pt3dadd( -46.0477, -8.20406, 6.35012, 0.66 ) }
    dend_59 { pt3dadd( -46.9082, -8.128, 6.29259, 0.44 ) }
    dend_59 { pt3dadd( -47.6894, -8.02282, 6.27608, 1.03 ) }
    dend_59 { pt3dadd( -47.9755, -7.97032, 6.27863, 1.25 ) }
    dend_59 { pt3dadd( -48.8391, -7.77078, 6.30666, 0.73 ) }
    dend_59 { pt3dadd( -50.1507, -7.43067, 6.428, 0.29 ) }
    dend_59 { pt3dadd( -50.4513, -7.35259, 6.47275, 0.29 ) }
    dend_59 { pt3dadd( -51.6055, -7.04074, 6.67806, 1.1 ) }
    dend_59 { pt3dadd( -51.9607, -6.95398, 6.75031, 1.1 ) }
    dend_59 { pt3dadd( -52.5944, -6.85226, 6.86034, 0.22 ) }
    dend_59 { pt3dadd( -53.1529, -6.80075, 6.9798, 0.22 ) }
    dend_59 { pt3dadd( -53.522, -6.7766, 7.06776, 0.22 ) }
    dend_59 { pt3dadd( -53.8176, -6.75975, 7.13271, 0.81 ) }
    dend_59 { pt3dadd( -54.5121, -6.72668, 7.25737, 1.25 ) }
    dend_59 { pt3dadd( -55.8029, -6.66483, 7.6199, 0.37 ) }
    dend_59 { pt3dadd( -56.7112, -6.61455, 7.95553, 0.51 ) }
    dend_59 { pt3dadd( -57.0387, -6.5932, 8.11333, 0.29 ) }
    dend_59 { pt3dadd( -57.3084, -6.57473, 8.2591, 0.29 ) }
    dend_59 { pt3dadd( -57.6986, -6.54998, 8.47688, 0.88 ) }
    dend_59 { pt3dadd( -58.646, -6.50292, 9.00138, 0.15 ) }
    dend_59 { pt3dadd( -59.0535, -6.48563, 9.20078, 0.37 ) }
    dend_59 { pt3dadd( -59.8035, -6.46068, 9.49571, 0.07 ) }
    dend_59 { pt3dadd( -60.4245, -6.44554, 9.68769, 0.81 ) }
    dend_59 { pt3dadd( -61.0517, -6.41477, 9.83836, 0.07 ) }
    dend_59 { pt3dadd( -61.6006, -6.36568, 9.90886, 0.37 ) }
    dend_59 { pt3dadd( -62.4046, -6.26092, 9.91063, 0.07 ) }
    dend_59 { pt3dadd( -63.1095, -6.1618, 9.86276, 0.81 ) }
    dend_59 { pt3dadd( -64.0159, -6.05501, 9.73619, 0.29 ) }
    dend_59 { pt3dadd( -64.3287, -6.03135, 9.66688, 0.29 ) }
    dend_59 { pt3dadd( -65.0772, -6.0105, 9.45064, 0.29 ) }
    dend_59 { pt3dadd( -65.316, -6.01502, 9.37019, 0.29 ) }
    dend_59 { pt3dadd( -65.9506, -6.04624, 9.10738, 0.81 ) }
    dend_59 { pt3dadd( -66.8645, -6.12119, 8.70864, 0.37 ) }
    dend_59 { pt3dadd( -67.6049, -6.19873, 8.41784, 0.07 ) }
    dend_59 { pt3dadd( -68.0234, -6.24706, 8.26681, 0.07 ) }
    dend_59 { pt3dadd( -68.4051, -6.28054, 8.15161, 0.07 ) }
    dend_59 { pt3dadd( -69.295, -6.28878, 7.85023, 1.03 ) }
    dend_59 { pt3dadd( -69.7948, -6.23596, 7.61811, 0.44 ) }
    dend_59 { pt3dadd( -70.1739, -6.1699, 7.37871, 0.29 ) }
    dend_59 { pt3dadd( -70.4336, -6.13424, 7.17083, 0.29 ) }
    dend_59 { pt3dadd( -70.9136, -6.1099, 6.70688, 0.59 ) }
    dend_59 { pt3dadd( -71.4768, -6.08922, 6.11582, 0.29 ) }
    dend_59 { pt3dadd( -72.3717, -6.07622, 5.09197, 0.95 ) }
    dend_59 { pt3dadd( -73.2086, -6.07073, 4.03527, 1.1 ) }
    dend_59 { pt3dadd( -74.0523, -6.08954, 2.87675, 0.15 ) }
    dend_59 { pt3dadd( -74.6528, -6.13922, 1.99079, 0.81 ) }
    // Section: dend_55, id: dend_55, parent: dend_51 (entry count 81/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 5.70682, 24.7219, -32.2973, 0.37 ) }
    dend_55 { pt3dadd( 6.77782, 24.9694, -32.6654, 0.37 ) }
    dend_55 { pt3dadd( 8.1361, 25.1994, -33.1526, 0.37 ) }
    dend_55 { pt3dadd( 10.0792, 25.4253, -33.8043, 0.95 ) }
    dend_55 { pt3dadd( 11.0534, 25.4865, -34.1027, 0.66 ) }
    dend_55 { pt3dadd( 11.9587, 25.4865, -34.3982, 0.81 ) }
    dend_55 { pt3dadd( 12.53, 25.4478, -34.6144, 0.44 ) }
    dend_55 { pt3dadd( 14.0724, 25.1121, -35.3799, 0.44 ) }
    dend_55 { pt3dadd( 14.8386, 24.8042, -35.9336, 0.73 ) }
    dend_55 { pt3dadd( 15.3755, 24.4838, -36.4715, 0.44 ) }
    dend_55 { pt3dadd( 16.1786, 23.8763, -37.51, 0.37 ) }
    dend_55 { pt3dadd( 16.9373, 23.1803, -38.7467, 0.37 ) }
    dend_55 { pt3dadd( 17.8802, 22.2254, -40.4937, 0.37 ) }
    dend_55 { pt3dadd( 18.6153, 21.3545, -42.1113, 0.37 ) }
    dend_55 { pt3dadd( 18.9925, 20.8615, -43.0806, 0.37 ) }
    dend_55 { pt3dadd( 19.3614, 20.3436, -44.1587, 0.37 ) }
    dend_55 { pt3dadd( 19.7065, 19.8134, -45.2789, 0.15 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 98/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 5.70682, 24.7219, -32.2973, 0.29 ) }
    dend_52 { pt3dadd( 5.64082, 24.6145, -32.8609, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_52 { pt3dadd( 5.41236, 24.2426, -34.8118, 0.29 ) }
    dend_52 { pt3dadd( 5.36617, 24.1674, -35.2063, 0.29 ) }
    dend_52 { pt3dadd( 5.08962, 23.7173, -37.5679, 0.51 ) }
    dend_52 { pt3dadd( 5.01187, 23.5907, -38.2319, 0.37 ) }
    dend_52 { pt3dadd( 4.88576, 23.3855, -39.3088, 1.25 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 5/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 0.449908, 16.7733, -1.08095, 1.4 ) }
    dend_33 { pt3dadd( 0.581698, 18.5035, -1.05147, 1.4 ) }
    dend_33 { pt3dadd( 0.642013, 19.2953, -1.03799, 1.4 ) }
    dend_33 { pt3dadd( 0.685927, 19.8718, -1.02817, 1.4 ) }
    dend_33 { pt3dadd( 0.764659, 20.9055, -1.01056, 1.69 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 10/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 0.449908, 16.7733, -1.08095, 1.03 ) }
    dend_32 { pt3dadd( 0.766863, 16.7903, -0.503639, 1.03 ) }
    dend_32 { pt3dadd( 1.81915, 16.8759, 1.35111, 0.66 ) }
    dend_32 { pt3dadd( 2.6121, 16.9829, 2.63091, 0.66 ) }
    dend_32 { pt3dadd( 3.64109, 17.1404, 4.15675, 0.66 ) }
    dend_32 { pt3dadd( 4.73617, 17.2969, 5.73736, 0.66 ) }
    dend_32 { pt3dadd( 5.20974, 17.3662, 6.41274, 0.66 ) }
    dend_32 { pt3dadd( 5.80213, 17.4765, 7.27375, 0.66 ) }
    dend_32 { pt3dadd( 6.4301, 17.6155, 8.19126, 0.73 ) }
    dend_32 { pt3dadd( 7.5184, 17.8765, 9.86846, 0.73 ) }
    dend_32 { pt3dadd( 8.54408, 18.1177, 11.5759, 0.66 ) }
    dend_32 { pt3dadd( 9.249, 18.2468, 12.8212, 0.66 ) }
    dend_32 { pt3dadd( 9.75433, 18.3313, 13.7506, 0.66 ) }
    dend_32 { pt3dadd( 10.0531, 18.3791, 14.314, 0.66 ) }
    dend_32 { pt3dadd( 10.4425, 18.4332, 15.0536, 0.66 ) }
    dend_32 { pt3dadd( 10.6749, 18.4701, 15.4267, 0.66 ) }
    dend_32 { pt3dadd( 11.0056, 18.5212, 15.8673, 0.66 ) }
    dend_32 { pt3dadd( 11.8157, 18.6446, 16.9159, 0.66 ) }
    dend_32 { pt3dadd( 12.462, 18.7561, 17.8235, 0.66 ) }
    dend_32 { pt3dadd( 13.4146, 18.9624, 19.2223, 0.66 ) }
    dend_32 { pt3dadd( 14.5384, 19.2583, 20.9846, 0.66 ) }
    dend_32 { pt3dadd( 15.6279, 19.5723, 22.7848, 0.51 ) }
    dend_32 { pt3dadd( 16.5642, 19.8535, 24.4588, 0.51 ) }
    dend_32 { pt3dadd( 17.5202, 20.1482, 26.2383, 0.37 ) }
    dend_32 { pt3dadd( 17.7083, 20.2083, 26.5782, 0.37 ) }
    dend_32 { pt3dadd( 18.3082, 20.4032, 27.6321, 0.37 ) }
    dend_32 { pt3dadd( 18.6723, 20.5146, 28.2221, 0.88 ) }
    dend_32 { pt3dadd( 20.2221, 20.9111, 30.3852, 0.59 ) }
    dend_32 { pt3dadd( 20.6883, 21.0128, 30.9246, 0.88 ) }
    dend_32 { pt3dadd( 22.1752, 21.3145, 32.4299, 0.59 ) }
    dend_32 { pt3dadd( 23.3577, 21.5609, 33.5496, 0.81 ) }
    dend_32 { pt3dadd( 23.9889, 21.7003, 34.1184, 0.51 ) }
    dend_32 { pt3dadd( 24.9087, 21.8812, 34.9656, 0.51 ) }
    dend_32 { pt3dadd( 25.4831, 21.9507, 35.4924, 0.29 ) }
    dend_32 { pt3dadd( 26.5798, 22.0341, 36.5307, 0.51 ) }
    dend_32 { pt3dadd( 27.1062, 22.0544, 37.0201, 0.51 ) }
    dend_32 { pt3dadd( 28.6092, 22.0712, 38.4719, 0.51 ) }
    dend_32 { pt3dadd( 29.8263, 22.037, 39.6966, 0.29 ) }
    dend_32 { pt3dadd( 30.977, 21.9342, 40.8908, 0.29 ) }
    dend_32 { pt3dadd( 31.4048, 21.854, 41.35, 0.29 ) }
    dend_32 { pt3dadd( 32.5593, 21.514, 42.5864, 0.29 ) }
    dend_32 { pt3dadd( 33.3643, 21.1758, 43.4925, 0.81 ) }
    dend_32 { pt3dadd( 33.9808, 20.8429, 44.1477, 0.15 ) }
    dend_32 { pt3dadd( 34.7674, 20.402, 44.9071, 0.37 ) }
    dend_32 { pt3dadd( 35.6322, 19.9451, 45.6433, 0.29 ) }
    dend_32 { pt3dadd( 36.0421, 19.7362, 45.9505, 0.29 ) }
    dend_32 { pt3dadd( 37.0932, 19.2442, 46.5835, 0.29 ) }
    dend_32 { pt3dadd( 37.8548, 18.9437, 46.9954, 0.81 ) }
    dend_32 { pt3dadd( 38.6869, 18.675, 47.461, 0.44 ) }
    dend_32 { pt3dadd( 40.1226, 18.2683, 48.2105, 0.44 ) }
    dend_32 { pt3dadd( 40.885, 18.0803, 48.586, 0.44 ) }
    dend_32 { pt3dadd( 41.765, 17.8542, 49.0056, 0.66 ) }
    dend_32 { pt3dadd( 43.0519, 17.4987, 49.5731, 0.81 ) }
    dend_32 { pt3dadd( 45.0183, 16.8778, 50.4135, 0.51 ) }
    dend_32 { pt3dadd( 46.5151, 16.3208, 51.0747, 0.51 ) }
    dend_32 { pt3dadd( 47.0552, 16.0935, 51.311, 0.22 ) }
    dend_32 { pt3dadd( 47.672, 15.8285, 51.5714, 0.81 ) }
    dend_32 { pt3dadd( 48.393, 15.523, 51.8221, 0.29 ) }
    dend_32 { pt3dadd( 49.8057, 14.9285, 52.0843, 0.29 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 69/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 24.9145, 33.7226, -17.2024, 1.84 ) }
    dend_24 { pt3dadd( 25.101, 34.3342, -17.1857, 1.84 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 71/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 24.9145, 33.7226, -17.2024, 0.66 ) }
    dend_23 { pt3dadd( 27.0441, 33.4169, -20.2382, 0.66 ) }
    dend_23 { pt3dadd( 27.4168, 33.3625, -20.8356, 0.66 ) }
    dend_23 { pt3dadd( 27.9555, 33.2969, -21.6874, 0.66 ) }
    dend_23 { pt3dadd( 28.5368, 33.2292, -22.561, 0.81 ) }
    dend_23 { pt3dadd( 29.2121, 33.1531, -23.54, 0.81 ) }
    dend_23 { pt3dadd( 29.9704, 33.0655, -24.6555, 0.81 ) }
    dend_23 { pt3dadd( 31.3505, 32.9114, -26.554, 0.81 ) }
    dend_23 { pt3dadd( 31.6867, 32.8868, -27.0405, 0.51 ) }
    dend_23 { pt3dadd( 32.0287, 32.8903, -27.5584, 0.29 ) }
    dend_23 { pt3dadd( 32.8501, 33.0012, -28.8381, 0.88 ) }
    dend_23 { pt3dadd( 34.0349, 33.3405, -30.7219, 0.88 ) }
    dend_23 { pt3dadd( 34.3067, 33.4707, -31.1496, 0.73 ) }
    dend_23 { pt3dadd( 34.5584, 33.6162, -31.5743, 0.59 ) }
    dend_23 { pt3dadd( 34.8116, 33.7664, -32.0699, 0.59 ) }
    dend_23 { pt3dadd( 35.086, 33.9339, -32.6143, 0.59 ) }
    dend_23 { pt3dadd( 35.3939, 34.0829, -33.1208, 0.95 ) }
    dend_23 { pt3dadd( 36.1882, 34.3182, -34.2174, 0.66 ) }
    dend_23 { pt3dadd( 37.6074, 34.5669, -35.9142, 0.66 ) }
    dend_23 { pt3dadd( 38.7244, 34.6673, -37.122, 0.66 ) }
    dend_23 { pt3dadd( 39.164, 34.6776, -37.5367, 0.88 ) }
    dend_23 { pt3dadd( 40.3263, 34.6673, -38.5783, 0.29 ) }
    dend_23 { pt3dadd( 41.7056, 34.6258, -39.7328, 0.88 ) }
    dend_23 { pt3dadd( 42.5783, 34.5898, -40.3872, 0.29 ) }
    dend_23 { pt3dadd( 43.5462, 34.5654, -40.9843, 0.29 ) }
    dend_23 { pt3dadd( 44.7854, 34.51, -41.672, 0.22 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 97/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -17.7377, 2.10642, -6.37139, 0.88 ) }
    dend_16 { pt3dadd( -18.5034, 3.16922, -7.54944, 0.88 ) }
    dend_16 { pt3dadd( -18.751, 3.51287, -7.93036, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -19.0478, 3.92478, -8.38694, 0.95 ) }
    dend_16 { pt3dadd( -19.5094, 4.5655, -9.09713, 0.95 ) }
    dend_16 { pt3dadd( -19.7626, 4.91691, -9.48665, 0.95 ) }
    dend_16 { pt3dadd( -20.1614, 5.47046, -10.1002, 1.18 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 4/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -17.7377, 2.10642, -6.37139, 0.66 ) }
    dend_13 { pt3dadd( -17.6718, 2.61596, -6.09989, 0.66 ) }
    dend_13 { pt3dadd( -17.5537, 3.36178, -5.67742, 0.51 ) }
    dend_13 { pt3dadd( -17.4841, 3.80185, -5.42815, 0.81 ) }
    dend_13 { pt3dadd( -17.4115, 4.26051, -5.16834, 1.03 ) }
    dend_13 { pt3dadd( -17.3058, 4.92847, -4.78998, 0.29 ) }
    dend_13 { pt3dadd( -17.1896, 5.66288, -4.37398, 0.44 ) }
    dend_13 { pt3dadd( -17.1169, 6.12742, -4.13806, 0.95 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 12/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -18.359, -6.84818, -8.94712, 1.1 ) }
    dend_5 { pt3dadd( -19.0773, -6.69855, -8.45292, 1.1 ) }
    dend_5 { pt3dadd( -19.7731, -6.5536, -7.97417, 0.73 ) }
    dend_5 { pt3dadd( -20.3843, -6.42626, -7.55359, 0.73 ) }
    dend_5 { pt3dadd( -21.509, -6.19195, -6.77971, 0.73 ) }
    dend_5 { pt3dadd( -22.281, -6.03112, -6.24853, 1.1 ) }
    dend_5 { pt3dadd( -22.7032, -5.94316, -5.95803, 1.32 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 19/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -18.359, -6.84818, -8.94712, 1.25 ) }
    dend_2 { pt3dadd( -18.6884, -8.00364, -10.4454, 1.25 ) }
    dend_2 { pt3dadd( -18.8278, -8.49227, -11.0791, 1.03 ) }
    dend_2 { pt3dadd( -19.303, -10.1593, -13.2408, 1.03 ) }
    dend_2 { pt3dadd( -19.4554, -10.6937, -13.9337, 1.03 ) }
    // Section: dend_105, id: dend_105, parent: dend_101 (entry count 24/100)
    dend_105 { pt3dclear() }
    dend_105 { pt3dadd( 15.0571, 1.48739, 34.9766, 0.66 ) }
    dend_105 { pt3dadd( 16.492, 2.61151, 33.3136, 0.66 ) }
    dend_105 { pt3dadd( 17.4829, 3.30828, 32.2618, 0.51 ) }
    dend_105 { pt3dadd( 18.2253, 3.74715, 31.5634, 0.51 ) }
    dend_105 { pt3dadd( 18.7299, 4.02162, 31.0964, 0.81 ) }
    dend_105 { pt3dadd( 19.6513, 4.50832, 30.2242, 0.81 ) }
    dend_105 { pt3dadd( 21.7301, 5.57531, 28.1439, 0.59 ) }
    dend_105 { pt3dadd( 22.4018, 5.8842, 27.5196, 0.59 ) }
    dend_105 { pt3dadd( 23.2508, 6.2657, 26.7533, 0.81 ) }
    dend_105 { pt3dadd( 24.4121, 6.79459, 25.7196, 0.51 ) }
    dend_105 { pt3dadd( 25.4964, 7.30098, 24.771, 0.66 ) }
    dend_105 { pt3dadd( 26.8935, 7.99655, 23.6251, 0.66 ) }
    dend_105 { pt3dadd( 27.8001, 8.47829, 23.0189, 0.66 ) }
    dend_105 { pt3dadd( 28.8693, 9.04591, 22.3741, 0.51 ) }
    dend_105 { pt3dadd( 29.8022, 9.52704, 21.9154, 0.51 ) }
    dend_105 { pt3dadd( 30.5426, 9.86107, 21.6843, 0.51 ) }
    dend_105 { pt3dadd( 31.4077, 10.2072, 21.6142, 0.51 ) }
    dend_105 { pt3dadd( 32.6731, 10.6328, 21.8614, 0.07 ) }
    dend_105 { pt3dadd( 33.6089, 10.8642, 22.1956, 0.44 ) }
    dend_105 { pt3dadd( 34.2843, 10.9706, 22.5224, 0.07 ) }
    dend_105 { pt3dadd( 35.2261, 11.042, 23.0961, 0.44 ) }
    dend_105 { pt3dadd( 37.2503, 11.043, 24.4567, 0.07 ) }
    dend_105 { pt3dadd( 38.9492, 10.9787, 25.6773, 0.07 ) }
    dend_105 { pt3dadd( 39.6101, 10.9652, 26.1743, 0.07 ) }
    dend_105 { pt3dadd( 39.9541, 10.9604, 26.4338, 0.37 ) }
    dend_105 { pt3dadd( 40.7968, 10.9252, 27.0026, 0.07 ) }
    dend_105 { pt3dadd( 41.794, 10.8383, 27.5579, 1.03 ) }
    dend_105 { pt3dadd( 42.48, 10.7442, 27.8638, 1.03 ) }
    dend_105 { pt3dadd( 43.3086, 10.6194, 28.2091, 0.37 ) }
    dend_105 { pt3dadd( 45.0638, 10.367, 28.954, 0.07 ) }
    dend_105 { pt3dadd( 46.2826, 10.1718, 29.5451, 0.81 ) }
    dend_105 { pt3dadd( 47.625, 9.91078, 30.2421, 0.07 ) }
    dend_105 { pt3dadd( 49.3482, 9.52353, 31.2039, 0.07 ) }
    dend_105 { pt3dadd( 49.7949, 9.40223, 31.4686, 0.22 ) }
    dend_105 { pt3dadd( 50.2073, 9.26658, 31.7262, 0.22 ) }
    dend_105 { pt3dadd( 52.1231, 8.56476, 32.98, 0.07 ) }
    dend_105 { pt3dadd( 52.4955, 8.41497, 33.2811, 0.22 ) }
    // Section: dend_102, id: dend_102, parent: dend_101 (entry count 61/100)
    dend_102 { pt3dclear() }
    dend_102 { pt3dadd( 15.0571, 1.48739, 34.9766, 0.51 ) }
    dend_102 { pt3dadd( 15.8474, 1.20743, 35.5691, 0.51 ) }
    dend_102 { pt3dadd( 16.4094, 0.977479, 35.9699, 0.81 ) }
    dend_102 { pt3dadd( 16.9411, 0.704783, 36.3626, 1.18 ) }
    dend_102 { pt3dadd( 17.7617, 0.197928, 36.9903, 1.1 ) }
    dend_102 { pt3dadd( 18.5359, -0.399412, 37.6567, 1.1 ) }
    dend_102 { pt3dadd( 18.6661, -0.528679, 37.7811, 1.1 ) }
    dend_102 { pt3dadd( 18.9734, -1.01977, 38.1392, 0.73 ) }
    dend_102 { pt3dadd( 19.1842, -1.65633, 38.4859, 0.73 ) }
    dend_102 { pt3dadd( 19.2204, -2.04631, 38.6429, 0.73 ) }
    dend_102 { pt3dadd( 19.1398, -3.03303, 38.8862, 0.73 ) }
    dend_102 { pt3dadd( 18.9897, -3.86202, 39.0191, 0.44 ) }
    dend_102 { pt3dadd( 18.8402, -4.42278, 39.0895, 0.44 ) }
    dend_102 { pt3dadd( 18.6726, -4.90136, 39.1282, 0.44 ) }
    dend_102 { pt3dadd( 18.4009, -5.54652, 39.1399, 0.66 ) }
    dend_102 { pt3dadd( 18.0175, -6.31954, 39.1152, 0.59 ) }
    dend_102 { pt3dadd( 17.882, -6.55221, 39.1062, 0.59 ) }
    dend_102 { pt3dadd( 17.4813, -7.15977, 39.1097, 0.81 ) }
    dend_102 { pt3dadd( 17.1855, -7.59008, 39.1246, 0.59 ) }
    dend_102 { pt3dadd( 16.8572, -8.07644, 39.151, 0.81 ) }
    dend_102 { pt3dadd( 16.2912, -8.95825, 39.2225, 0.15 ) }
    dend_102 { pt3dadd( 15.6528, -9.98835, 39.2853, 0.44 ) }
    dend_102 { pt3dadd( 15.2059, -10.7522, 39.3134, 0.59 ) }
    dend_102 { pt3dadd( 14.8804, -11.3418, 39.3223, 0.59 ) }
    dend_102 { pt3dadd( 14.663, -11.7453, 39.318, 0.88 ) }
    dend_102 { pt3dadd( 14.1127, -12.839, 39.3074, 0.37 ) }
    dend_102 { pt3dadd( 13.6492, -13.8026, 39.2885, 0.37 ) }
    dend_102 { pt3dadd( 13.4884, -14.1536, 39.2618, 0.37 ) }
    dend_102 { pt3dadd( 13.2834, -14.5965, 39.2233, 0.37 ) }
    dend_102 { pt3dadd( 12.8953, -15.333, 39.1191, 0.44 ) }
    dend_102 { pt3dadd( 12.5155, -15.9663, 38.9905, 0.73 ) }
    dend_102 { pt3dadd( 12.3401, -16.224, 38.921, 0.73 ) }
    dend_102 { pt3dadd( 11.9401, -16.7682, 38.7989, 0.73 ) }
    dend_102 { pt3dadd( 11.6623, -17.1199, 38.7227, 0.29 ) }
    dend_102 { pt3dadd( 11.1361, -17.7139, 38.5958, 0.29 ) }
    dend_102 { pt3dadd( 10.9692, -17.8894, 38.5597, 0.29 ) }
    dend_102 { pt3dadd( 10.5457, -18.325, 38.4798, 0.29 ) }
    dend_102 { pt3dadd( 10.1117, -18.7961, 38.4712, 0.29 ) }
    dend_102 { pt3dadd( 9.4666, -19.5431, 38.5525, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_102 { pt3dadd( 9.15776, -19.9163, 38.615, 0.22 ) }
    dend_102 { pt3dadd( 8.89366, -20.2383, 38.683, 0.22 ) }
    dend_102 { pt3dadd( 8.5544, -20.6519, 38.7569, 0.73 ) }
    dend_102 { pt3dadd( 7.95732, -21.3477, 38.8521, 0.44 ) }
    dend_102 { pt3dadd( 7.49442, -21.8805, 38.9215, 0.66 ) }
    dend_102 { pt3dadd( 7.20493, -22.2292, 38.9743, 0.66 ) }
    dend_102 { pt3dadd( 6.74402, -22.7963, 39.0614, 0.37 ) }
    dend_102 { pt3dadd( 6.04539, -23.6746, 39.1862, 0.95 ) }
    dend_102 { pt3dadd( 5.47533, -24.4394, 39.2887, 0.29 ) }
    dend_102 { pt3dadd( 5.19026, -24.846, 39.3326, 0.29 ) }
    dend_102 { pt3dadd( 4.9396, -25.2351, 39.3782, 0.88 ) }
    dend_102 { pt3dadd( 4.60234, -25.787, 39.4407, 0.37 ) }
    dend_102 { pt3dadd( 4.23253, -26.3963, 39.5309, 0.95 ) }
    dend_102 { pt3dadd( 3.78472, -27.1025, 39.6529, 0.07 ) }
    dend_102 { pt3dadd( 3.50214, -27.5129, 39.7248, 0.44 ) }
    dend_102 { pt3dadd( 3.13509, -27.974, 39.7998, 0.59 ) }
    dend_102 { pt3dadd( 2.56887, -28.5531, 39.911, 0.22 ) }
    dend_102 { pt3dadd( 1.96054, -29.0491, 40.0718, 0.81 ) }
    dend_102 { pt3dadd( 1.62758, -29.238, 40.1859, 0.81 ) }
    dend_102 { pt3dadd( 1.13678, -29.4045, 40.3686, 0.07 ) }
    dend_102 { pt3dadd( 0.735312, -29.4798, 40.5512, 0.73 ) }
    dend_102 { pt3dadd( -0.0241317, -29.5463, 40.9645, 0.22 ) }
    dend_102 { pt3dadd( -0.777534, -29.5563, 41.4222, 0.44 ) }
    dend_102 { pt3dadd( -1.45755, -29.5441, 41.8566, 1.18 ) }
    dend_102 { pt3dadd( -2.29727, -29.5381, 42.4204, 0.22 ) }
    dend_102 { pt3dadd( -3.05346, -29.5635, 42.9363, 0.73 ) }
    dend_102 { pt3dadd( -3.74008, -29.6306, 43.4268, 0.07 ) }
    dend_102 { pt3dadd( -4.36926, -29.7427, 43.8692, 0.81 ) }
    dend_102 { pt3dadd( -4.9365, -29.8716, 44.2246, 0.07 ) }
    dend_102 { pt3dadd( -5.29696, -29.9736, 44.4315, 0.22 ) }
    dend_102 { pt3dadd( -5.84247, -30.1708, 44.7209, 0.22 ) }
    dend_102 { pt3dadd( -6.50367, -30.4009, 45.0023, 0.22 ) }
    dend_102 { pt3dadd( -7.01642, -30.555, 45.1877, 0.59 ) }
    dend_102 { pt3dadd( -8.11202, -30.8184, 45.5385, 0.59 ) }
    dend_102 { pt3dadd( -8.53518, -30.88, 45.6555, 0.22 ) }
    dend_102 { pt3dadd( -9.16581, -30.9375, 45.8237, 0.81 ) }
    dend_102 { pt3dadd( -9.96794, -30.9651, 46.0173, 0.07 ) }
    dend_102 { pt3dadd( -10.3488, -30.9649, 46.0861, 0.07 ) }
    dend_102 { pt3dadd( -10.9653, -30.9496, 46.1971, 0.07 ) }
    dend_102 { pt3dadd( -11.6069, -30.8967, 46.2926, 0.95 ) }
    // Section: dend_100, id: dend_100, parent: dend_90 (entry count 40/100)
    dend_100 { pt3dclear() }
    dend_100 { pt3dadd( 9.68781, 3.20258, 27.4134, 0.22 ) }
    dend_100 { pt3dadd( 10.2987, 3.90707, 27.4583, 0.22 ) }
    dend_100 { pt3dadd( 10.6909, 4.37925, 27.5314, 0.22 ) }
    dend_100 { pt3dadd( 11.1768, 4.93901, 27.7095, 0.37 ) }
    dend_100 { pt3dadd( 11.7107, 5.55207, 27.9475, 0.37 ) }
    dend_100 { pt3dadd( 12.2563, 6.17729, 28.2096, 0.29 ) }
    dend_100 { pt3dadd( 12.4369, 6.38542, 28.2984, 0.44 ) }
    dend_100 { pt3dadd( 12.9888, 7.00609, 28.6388, 0.37 ) }
    dend_100 { pt3dadd( 13.7639, 7.81557, 29.1175, 0.22 ) }
    dend_100 { pt3dadd( 13.9334, 7.97781, 29.2053, 0.22 ) }
    dend_100 { pt3dadd( 14.2033, 8.20905, 29.2997, 0.22 ) }
    dend_100 { pt3dadd( 14.5856, 8.4997, 29.3944, 0.22 ) }
    dend_100 { pt3dadd( 15.0047, 8.78801, 29.4508, 0.22 ) }
    dend_100 { pt3dadd( 15.5479, 9.11926, 29.3917, 0.22 ) }
    dend_100 { pt3dadd( 16.4536, 9.62925, 29.0686, 0.22 ) }
    dend_100 { pt3dadd( 17.0163, 9.90855, 28.8359, 0.37 ) }
    // Section: dend_91, id: dend_91, parent: dend_90 (entry count 56/100)
    dend_91 { pt3dclear() }
    dend_91 { pt3dadd( 9.68781, 3.20258, 27.4134, 1.1 ) }
    dend_91 { pt3dadd( 9.85194, 3.60099, 28.3937, 1.1 ) }
    dend_91 { pt3dadd( 10.0427, 4.06388, 29.5327, 1.4 ) }
    dend_91 { pt3dadd( 10.1916, 4.42546, 30.4224, 1.69 ) }
    // Section: dend_88, id: dend_88, parent: dend_84 (entry count 60/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( -0.127944, 0.74613, 23.1881, 1.03 ) }
    dend_88 { pt3dadd( -0.8004, 0.654983, 23.5476, 1.03 ) }
    dend_88 { pt3dadd( -1.50254, 0.683445, 23.8948, 0.73 ) }
    dend_88 { pt3dadd( -1.99861, 0.785399, 24.1115, 0.73 ) }
    dend_88 { pt3dadd( -2.82334, 1.0854, 24.4469, 0.66 ) }
    dend_88 { pt3dadd( -3.17305, 1.24074, 24.5763, 0.66 ) }
    dend_88 { pt3dadd( -3.57913, 1.44043, 24.7138, 0.37 ) }
    dend_88 { pt3dadd( -4.23083, 1.85054, 24.8988, 0.15 ) }
    dend_88 { pt3dadd( -4.67906, 2.1962, 24.9912, 0.59 ) }
    dend_88 { pt3dadd( -5.15927, 2.62447, 25.0596, 0.44 ) }
    dend_88 { pt3dadd( -5.47641, 2.95733, 25.0707, 0.44 ) }
    dend_88 { pt3dadd( -5.71825, 3.23666, 25.0589, 0.66 ) }
    dend_88 { pt3dadd( -6.13802, 3.75205, 24.996, 0.59 ) }
    dend_88 { pt3dadd( -6.41235, 4.10221, 24.9153, 0.81 ) }
    dend_88 { pt3dadd( -6.92585, 4.76755, 24.7004, 0.59 ) }
    dend_88 { pt3dadd( -7.64892, 5.64088, 24.2607, 0.29 ) }
    dend_88 { pt3dadd( -8.0277, 6.04035, 23.933, 0.29 ) }
    dend_88 { pt3dadd( -8.28635, 6.23547, 23.5975, 0.59 ) }
    dend_88 { pt3dadd( -8.53825, 6.37991, 23.1752, 0.59 ) }
    dend_88 { pt3dadd( -8.7317, 6.46713, 22.7949, 0.59 ) }
    dend_88 { pt3dadd( -9.15366, 6.60418, 21.8238, 0.73 ) }
    dend_88 { pt3dadd( -9.54581, 6.68029, 20.7757, 0.95 ) }
    dend_88 { pt3dadd( -10.1998, 6.75981, 18.8288, 0.95 ) }
    dend_88 { pt3dadd( -10.3758, 6.77125, 18.2339, 0.95 ) }
    dend_88 { pt3dadd( -10.48, 6.78081, 17.8589, 0.95 ) }
    dend_88 { pt3dadd( -10.5505, 6.7913, 17.618, 0.95 ) }
    dend_88 { pt3dadd( -10.6861, 6.82239, 17.2166, 0.81 ) }
    dend_88 { pt3dadd( -10.9918, 6.90246, 16.3971, 0.81 ) }
    dend_88 { pt3dadd( -11.5637, 7.0469, 14.942, 0.81 ) }
    dend_88 { pt3dadd( -11.9311, 7.16, 14.0714, 0.81 ) }
    dend_88 { pt3dadd( -12.2202, 7.25557, 13.4212, 0.88 ) }
    dend_88 { pt3dadd( -12.6506, 7.40174, 12.4506, 0.66 ) }
    dend_88 { pt3dadd( -13.1962, 7.60159, 11.1439, 0.81 ) }
    dend_88 { pt3dadd( -13.6623, 7.81357, 9.82052, 0.81 ) }
    dend_88 { pt3dadd( -13.8903, 7.93608, 9.02971, 0.66 ) }
    dend_88 { pt3dadd( -14.0148, 8.00089, 8.47238, 0.66 ) }
    dend_88 { pt3dadd( -14.128, 8.04938, 7.84507, 0.66 ) }
    dend_88 { pt3dadd( -14.2482, 8.07888, 7.16534, 0.66 ) }
    dend_88 { pt3dadd( -14.3948, 8.10748, 6.40374, 0.66 ) }
    dend_88 { pt3dadd( -14.4377, 8.12312, 6.17444, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_88 { pt3dadd( -14.6926, 8.29299, 4.74698, 0.66 ) }
    dend_88 { pt3dadd( -14.7885, 8.40211, 4.20221, 0.66 ) }
    dend_88 { pt3dadd( -14.9125, 8.59157, 3.49626, 0.51 ) }
    dend_88 { pt3dadd( -15.0265, 8.7975, 2.85638, 0.51 ) }
    dend_88 { pt3dadd( -15.147, 9.10124, 2.0403, 0.51 ) }
    dend_88 { pt3dadd( -15.2166, 9.41294, 1.28129, 0.51 ) }
    dend_88 { pt3dadd( -15.2332, 9.62088, 0.82522, 0.51 ) }
    dend_88 { pt3dadd( -15.2358, 9.85061, 0.340989, 0.51 ) }
    dend_88 { pt3dadd( -15.2383, 10.151, -0.302289, 0.51 ) }
    dend_88 { pt3dadd( -15.2749, 10.6401, -1.43839, 0.73 ) }
    dend_88 { pt3dadd( -15.4063, 11.2654, -2.94439, 0.95 ) }
    dend_88 { pt3dadd( -15.5745, 11.7857, -4.17837, 0.66 ) }
    dend_88 { pt3dadd( -15.6822, 12.0613, -4.7965, 0.81 ) }
    dend_88 { pt3dadd( -15.8525, 12.4637, -5.58883, 0.59 ) }
    dend_88 { pt3dadd( -16.1252, 13.1078, -6.70122, 0.59 ) }
    dend_88 { pt3dadd( -16.2973, 13.5391, -7.3268, 0.95 ) }
    dend_88 { pt3dadd( -16.5323, 14.2907, -8.23974, 0.44 ) }
    dend_88 { pt3dadd( -16.6514, 14.8602, -8.89229, 0.66 ) }
    dend_88 { pt3dadd( -16.7434, 15.7122, -9.8044, 0.37 ) }
    dend_88 { pt3dadd( -16.737, 16.3154, -10.4071, 1.1 ) }
    dend_88 { pt3dadd( -16.67, 16.8844, -10.9511, 0.44 ) }
    dend_88 { pt3dadd( -16.497, 17.7784, -11.811, 0.95 ) }
    dend_88 { pt3dadd( -16.1849, 18.9833, -13.0301, 0.59 ) }
    dend_88 { pt3dadd( -16.0184, 19.4604, -13.5378, 0.81 ) }
    dend_88 { pt3dadd( -15.6591, 20.3214, -14.4803, 0.44 ) }
    dend_88 { pt3dadd( -15.544, 20.5745, -14.7657, 0.44 ) }
    dend_88 { pt3dadd( -15.4382, 20.8046, -15.032, 0.44 ) }
    dend_88 { pt3dadd( -14.8675, 22.041, -16.4056, 0.37 ) }
    dend_88 { pt3dadd( -14.6099, 22.5524, -16.9421, 0.37 ) }
    // Section: dend_85, id: dend_85, parent: dend_84 (entry count 29/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( -0.127944, 0.74613, 23.1881, 0.95 ) }
    dend_85 { pt3dadd( 0.310527, 1.77867, 22.4973, 0.95 ) }
    dend_85 { pt3dadd( 0.543978, 2.35652, 22.179, 0.95 ) }
    dend_85 { pt3dadd( 0.797596, 2.97755, 21.8603, 0.59 ) }
    dend_85 { pt3dadd( 1.17399, 3.89225, 21.4314, 0.59 ) }
    dend_85 { pt3dadd( 1.39144, 4.44254, 21.2004, 0.59 ) }
    dend_85 { pt3dadd( 1.71443, 5.28189, 20.874, 0.59 ) }
    dend_85 { pt3dadd( 2.04564, 6.1485, 20.5929, 0.81 ) }
    dend_85 { pt3dadd( 2.30223, 6.79641, 20.3886, 0.95 ) }
    dend_85 { pt3dadd( 2.55862, 7.4665, 20.1939, 0.95 ) }
    dend_85 { pt3dadd( 2.83706, 8.17871, 20.0025, 0.66 ) }
    dend_85 { pt3dadd( 2.99266, 8.56768, 19.8576, 0.66 ) }
    dend_85 { pt3dadd( 3.10403, 8.83745, 19.7134, 0.66 ) }
    dend_85 { pt3dadd( 3.31024, 9.33507, 19.3488, 0.66 ) }
    dend_85 { pt3dadd( 3.6473, 10.1508, 18.61, 0.59 ) }
    dend_85 { pt3dadd( 3.83596, 10.6447, 18.0976, 0.59 ) }
    dend_85 { pt3dadd( 4.11828, 11.5503, 17.0999, 0.59 ) }
    dend_85 { pt3dadd( 4.32514, 12.4068, 16.1864, 0.59 ) }
    dend_85 { pt3dadd( 4.48403, 13.2736, 15.2917, 0.88 ) }
    dend_85 { pt3dadd( 4.59825, 14.2816, 14.314, 0.88 ) }
    dend_85 { pt3dadd( 4.63133, 14.9508, 13.7049, 0.37 ) }
    dend_85 { pt3dadd( 4.62445, 16.0176, 12.8655, 0.37 ) }
    dend_85 { pt3dadd( 4.58215, 16.7951, 12.3765, 0.37 ) }
    dend_85 { pt3dadd( 4.47654, 17.6886, 11.9047, 0.37 ) }
    dend_85 { pt3dadd( 4.33569, 18.5458, 11.5059, 0.66 ) }
    dend_85 { pt3dadd( 4.22537, 19.0787, 11.2865, 0.51 ) }
    dend_85 { pt3dadd( 4.12845, 19.5871, 11.0817, 0.07 ) }
    dend_85 { pt3dadd( 4.0507, 19.9886, 10.9238, 0.44 ) }
    dend_85 { pt3dadd( 3.80528, 21.1259, 10.4441, 0.07 ) }
    dend_85 { pt3dadd( 3.58805, 22.0645, 10.0418, 0.88 ) }
    dend_85 { pt3dadd( 3.47678, 22.5651, 9.79549, 0.88 ) }
    dend_85 { pt3dadd( 3.31403, 23.3827, 9.36081, 0.29 ) }
    dend_85 { pt3dadd( 3.204, 24.0593, 8.9877, 0.73 ) }
    // Section: dend_77, id: dend_77, parent: dend_73 (entry count 62/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 29.6692, -24.0029, 19.237, 0.95 ) }
    dend_77 { pt3dadd( 29.7577, -24.8449, 20.3014, 0.95 ) }
    dend_77 { pt3dadd( 29.8305, -25.504, 21.1771, 0.15 ) }
    dend_77 { pt3dadd( 29.8482, -25.9601, 21.7473, 0.44 ) }
    dend_77 { pt3dadd( 29.8417, -26.3952, 22.2485, 0.95 ) }
    dend_77 { pt3dadd( 29.8008, -27.1208, 23.0758, 0.37 ) }
    dend_77 { pt3dadd( 29.7452, -27.8694, 23.8942, 0.37 ) }
    dend_77 { pt3dadd( 29.7092, -28.4246, 24.4343, 0.37 ) }
    dend_77 { pt3dadd( 29.6513, -29.1793, 25.1052, 0.37 ) }
    dend_77 { pt3dadd( 29.6025, -29.7846, 25.5855, 0.37 ) }
    dend_77 { pt3dadd( 29.5416, -30.6149, 26.1394, 1.03 ) }
    dend_77 { pt3dadd( 29.5359, -31.1563, 26.4653, 1.03 ) }
    dend_77 { pt3dadd( 29.6349, -32.3854, 27.2179, 0.66 ) }
    dend_77 { pt3dadd( 29.771, -33.1046, 27.6685, 1.18 ) }
    dend_77 { pt3dadd( 29.9856, -33.8381, 28.1872, 0.44 ) }
    dend_77 { pt3dadd( 30.2215, -34.5444, 28.7058, 0.95 ) }
    dend_77 { pt3dadd( 30.6561, -35.7342, 29.6676, 0.37 ) }
    dend_77 { pt3dadd( 31.0418, -36.7393, 30.582, 0.95 ) }
    dend_77 { pt3dadd( 31.206, -37.1596, 31.0044, 1.18 ) }
    dend_77 { pt3dadd( 31.5554, -38.0425, 31.971, 0.51 ) }
    dend_77 { pt3dadd( 31.7612, -38.6158, 32.6885, 0.22 ) }
    dend_77 { pt3dadd( 32.0465, -39.5646, 33.8572, 0.22 ) }
    dend_77 { pt3dadd( 32.0848, -39.7107, 34.0319, 0.81 ) }
    dend_77 { pt3dadd( 32.1281, -39.8934, 34.2419, 0.81 ) }
    dend_77 { pt3dadd( 32.2303, -40.3999, 34.8201, 0.29 ) }
    dend_77 { pt3dadd( 32.4599, -41.7797, 36.3428, 1.1 ) }
    dend_77 { pt3dadd( 32.5568, -42.669, 37.3718, 0.44 ) }
    dend_77 { pt3dadd( 32.5663, -43.5312, 38.3587, 1.1 ) }
    dend_77 { pt3dadd( 32.5388, -43.8453, 38.7416, 1.25 ) }
    dend_77 { pt3dadd( 32.3558, -44.6494, 39.7984, 0.37 ) }
    dend_77 { pt3dadd( 32.2109, -45.0019, 40.2839, 0.15 ) }
    dend_77 { pt3dadd( 31.8243, -45.6319, 41.1385, 0.15 ) }
    dend_77 { pt3dadd( 31.5111, -46.0449, 41.6885, 0.66 ) }
    dend_77 { pt3dadd( 31.0132, -46.7022, 42.4275, 0.29 ) }
    dend_77 { pt3dadd( 30.4325, -47.463, 43.2863, 0.95 ) }
    dend_77 { pt3dadd( 30.2715, -47.6795, 43.5149, 0.95 ) }
    dend_77 { pt3dadd( 29.935, -48.213, 44.0177, 0.22 ) }
    dend_77 { pt3dadd( 29.573, -48.9115, 44.496, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_77 { pt3dadd( 29.3134, -49.491, 44.7722, 0.66 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 1/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 29.6692, -24.0029, 19.237, 0.59 ) }
    dend_74 { pt3dadd( 28.9774, -25.0111, 18.3946, 0.59 ) }
    dend_74 { pt3dadd( 28.0528, -26.3005, 17.3552, 0.37 ) }
    dend_74 { pt3dadd( 27.5138, -27.0291, 16.7775, 1.03 ) }
    dend_74 { pt3dadd( 27.3551, -27.2482, 16.6069, 1.18 ) }
    dend_74 { pt3dadd( 26.9123, -27.8984, 16.133, 0.51 ) }
    dend_74 { pt3dadd( 26.4749, -28.5644, 15.6829, 0.88 ) }
    dend_74 { pt3dadd( 25.8928, -29.4721, 15.155, 0.95 ) }
    dend_74 { pt3dadd( 25.6231, -29.925, 14.9495, 0.95 ) }
    dend_74 { pt3dadd( 25.2619, -30.568, 14.6594, 0.81 ) }
    dend_74 { pt3dadd( 24.9506, -31.1519, 14.3962, 0.44 ) }
    dend_74 { pt3dadd( 24.7298, -31.6079, 14.2068, 0.44 ) }
    dend_74 { pt3dadd( 24.4342, -32.2759, 14.0006, 0.44 ) }
    dend_74 { pt3dadd( 24.1961, -32.9519, 13.8765, 0.44 ) }
    // Section: dend_69, id: dend_69, parent: dend_67 (entry count 15/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 63.2719, -48.4888, -0.635459, 0.07 ) }
    dend_69 { pt3dadd( 64.4528, -48.4377, -0.51128, 0.07 ) }
    dend_69 { pt3dadd( 65.3414, -48.3726, -0.517496, 0.73 ) }
    dend_69 { pt3dadd( 66.8541, -48.2247, -0.596329, 0.07 ) }
    dend_69 { pt3dadd( 68.3791, -48.002, -0.713393, 0.88 ) }
    dend_69 { pt3dadd( 68.9148, -47.8857, -0.776849, 0.88 ) }
    dend_69 { pt3dadd( 69.8192, -47.6295, -0.928483, 0.15 ) }
    dend_69 { pt3dadd( 71.4923, -46.9797, -1.37759, 0.15 ) }
    dend_69 { pt3dadd( 71.8521, -46.7853, -1.50867, 0.95 ) }
    dend_69 { pt3dadd( 72.7136, -46.1232, -1.90682, 0.07 ) }
    dend_69 { pt3dadd( 73.7107, -45.0915, -2.38451, 0.81 ) }
    dend_69 { pt3dadd( 74.2646, -44.3923, -2.6328, 0.15 ) }
    dend_69 { pt3dadd( 74.4523, -44.1053, -2.71807, 0.44 ) }
    dend_69 { pt3dadd( 74.6907, -43.6693, -2.79128, 0.15 ) }
    dend_69 { pt3dadd( 75.0082, -43.0157, -2.89266, 0.15 ) }
    dend_69 { pt3dadd( 75.2965, -42.285, -2.94676, 0.15 ) }
    dend_69 { pt3dadd( 75.5585, -41.611, -2.83074, 0.73 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 32/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 63.2719, -48.4888, -0.635459, 0.15 ) }
    dend_68 { pt3dadd( 63.689, -48.8788, -1.06895, 0.15 ) }
    dend_68 { pt3dadd( 64.6063, -49.7268, -1.86532, 0.73 ) }
    dend_68 { pt3dadd( 64.8609, -49.9488, -2.05068, 0.73 ) }
    dend_68 { pt3dadd( 65.7735, -50.7098, -2.61614, 0.15 ) }
    dend_68 { pt3dadd( 66.0084, -50.9002, -2.74553, 0.15 ) }
    dend_68 { pt3dadd( 66.3523, -51.1761, -2.88145, 0.44 ) }
    dend_68 { pt3dadd( 66.8846, -51.5858, -2.98492, 0.95 ) }
    dend_68 { pt3dadd( 68.0828, -52.5662, -2.90932, 0.07 ) }
    dend_68 { pt3dadd( 68.5636, -52.968, -2.82221, 0.07 ) }
    dend_68 { pt3dadd( 68.8105, -53.1704, -2.7786, 0.95 ) }
    dend_68 { pt3dadd( 70.0298, -54.1656, -2.61424, 0.07 ) }
    dend_68 { pt3dadd( 70.5825, -54.6205, -2.55442, 0.22 ) }
    dend_68 { pt3dadd( 71.5776, -55.4592, -2.4664, 0.22 ) }
    dend_68 { pt3dadd( 72.2634, -56.0487, -2.4168, 1.32 ) }
    dend_68 { pt3dadd( 73.8666, -57.414, -2.48634, 0.15 ) }
    dend_68 { pt3dadd( 74.3487, -57.8147, -2.55951, 0.15 ) }
    dend_68 { pt3dadd( 74.7088, -58.1056, -2.65952, 0.37 ) }
    dend_68 { pt3dadd( 75.0627, -58.3806, -2.76848, 0.07 ) }
    dend_68 { pt3dadd( 75.5866, -58.7777, -2.93864, 0.73 ) }
    dend_68 { pt3dadd( 76.375, -59.3939, -3.12047, 0.07 ) }
    dend_68 { pt3dadd( 76.7553, -59.7073, -3.16259, 0.44 ) }
    dend_68 { pt3dadd( 77.2583, -60.105, -3.22599, 0.07 ) }
    dend_68 { pt3dadd( 77.7673, -60.4882, -3.28603, 0.07 ) }
    dend_68 { pt3dadd( 78.4653, -61.0013, -3.35494, 0.73 ) }
    dend_68 { pt3dadd( 79.2728, -61.5872, -3.41883, 0.15 ) }
    dend_68 { pt3dadd( 79.9654, -62.1016, -3.45822, 0.15 ) }
    dend_68 { pt3dadd( 80.7924, -62.6805, -3.50662, 0.66 ) }
    dend_68 { pt3dadd( 81.1111, -62.8969, -3.5297, 0.66 ) }
    dend_68 { pt3dadd( 81.7187, -63.2978, -3.58432, 0.37 ) }
    dend_68 { pt3dadd( 82.3263, -63.6689, -3.64402, 0.07 ) }
    dend_68 { pt3dadd( 82.7682, -63.9336, -3.69366, 0.37 ) }
    dend_68 { pt3dadd( 83.46, -64.352, -3.75932, 0.37 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 65/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 21.7703, -72.4009, 24.3977, 0.15 ) }
    dend_66 { pt3dadd( 21.4603, -73.597, 24.4159, 0.15 ) }
    dend_66 { pt3dadd( 21.2758, -74.3087, 24.4266, 0.15 ) }
    dend_66 { pt3dadd( 20.9974, -75.3829, 24.4429, 0.88 ) }
    dend_66 { pt3dadd( 20.6147, -76.8594, 24.4653, 0.07 ) }
    dend_66 { pt3dadd( 20.4026, -77.6777, 24.4777, 0.07 ) }
    dend_66 { pt3dadd( 20.2266, -78.357, 24.488, 0.81 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 72/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 21.7703, -72.4009, 24.3977, 0.15 ) }
    dend_65 { pt3dadd( 21.9499, -73.225, 25.888, 0.15 ) }
    dend_65 { pt3dadd( 21.9449, -73.9659, 27.2411, 0.59 ) }
    dend_65 { pt3dadd( 21.8453, -74.3506, 28.1525, 0.22 ) }
    dend_65 { pt3dadd( 21.7915, -74.5585, 28.6454, 0.44 ) }
    dend_65 { pt3dadd( 21.6194, -75.223, 30.22, 0.07 ) }
    dend_65 { pt3dadd( 21.5584, -75.4588, 30.7788, 0.51 ) }
    dend_65 { pt3dadd( 21.3566, -75.6895, 31.4412, 0.22 ) }
    dend_65 { pt3dadd( 20.5634, -76.1071, 33.0976, 0.51 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 81/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 1.14496, -61.0691, 24.7915, 0.73 ) }
    dend_62 { pt3dadd( 1.89566, -61.8606, 24.711, 0.73 ) }
    dend_62 { pt3dadd( 2.65093, -62.6568, 24.63, 0.29 ) }
    dend_62 { pt3dadd( 3.08495, -63.1144, 24.5834, 0.51 ) }
    dend_62 { pt3dadd( 3.88973, -63.9629, 24.497, 0.15 ) }
    dend_62 { pt3dadd( 4.41617, -64.5179, 24.4406, 0.44 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 87/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 1.14496, -61.0691, 24.7915, 0.88 ) }
    dend_61 { pt3dadd( 1.31927, -61.7811, 25.432, 0.88 ) }
    dend_61 { pt3dadd( 1.58313, -62.7974, 26.3309, 0.15 ) }
    dend_61 { pt3dadd( 1.91238, -63.9502, 27.3986, 0.15 ) }
    dend_61 { pt3dadd( 2.05568, -64.4309, 27.8343, 0.95 ) }
    dend_61 { pt3dadd( 2.18549, -64.8637, 28.2261, 1.25 ) }
    dend_61 { pt3dadd( 2.6891, -66.6485, 29.8002, 0.07 ) }
    dend_61 { pt3dadd( 2.86693, -67.4097, 30.4325, 1.03 ) }
    dend_61 { pt3dadd( 3.04219, -68.3789, 31.1138, 0.07 ) }
    dend_61 { pt3dadd( 3.11998, -69.0193, 31.4763, 0.81 ) }
    dend_61 { pt3dadd( 3.16222, -69.7595, 31.8192, 0.81 ) }
    dend_61 { pt3dadd( 3.1556, -70.3477, 32.0192, 0.81 ) }
    dend_61 { pt3dadd( 3.07348, -71.7925, 32.2902, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_61 { pt3dadd( 3.02258, -72.3998, 32.3737, 0.15 ) }
    dend_61 { pt3dadd( 2.93204, -73.535, 32.4968, 0.88 ) }
    dend_61 { pt3dadd( 2.88107, -74.4115, 32.5971, 0.29 ) }
    dend_61 { pt3dadd( 2.867, -75.4812, 32.7204, 0.07 ) }
    dend_61 { pt3dadd( 2.91246, -76.3352, 32.846, 1.03 ) }
    dend_61 { pt3dadd( 2.95864, -76.6618, 32.9045, 1.03 ) }
    dend_61 { pt3dadd( 3.17123, -77.7686, 33.1479, 0.22 ) }
    dend_61 { pt3dadd( 3.3248, -78.396, 33.3038, 0.22 ) }
    dend_61 { pt3dadd( 3.46279, -78.8531, 33.4231, 0.73 ) }
    dend_61 { pt3dadd( 3.65255, -79.432, 33.5726, 1.1 ) }
    dend_61 { pt3dadd( 4.14809, -80.8064, 33.9467, 0.15 ) }
    dend_61 { pt3dadd( 4.53027, -81.8144, 34.2206, 0.37 ) }
    dend_61 { pt3dadd( 4.82244, -82.4824, 34.4283, 0.07 ) }
    dend_61 { pt3dadd( 5.09668, -83.0576, 34.6319, 0.07 ) }
    dend_61 { pt3dadd( 5.23833, -83.3435, 34.7406, 0.44 ) }
    dend_61 { pt3dadd( 5.71427, -84.2808, 35.1115, 0.07 ) }
    dend_61 { pt3dadd( 5.89083, -84.6243, 35.2483, 0.51 ) }
    dend_61 { pt3dadd( 6.48094, -85.7155, 35.6575, 0.07 ) }
    dend_61 { pt3dadd( 6.64077, -86.0159, 35.7794, 0.07 ) }
    dend_61 { pt3dadd( 6.8685, -86.4736, 35.9732, 0.37 ) }
    dend_61 { pt3dadd( 7.11518, -86.9913, 36.1956, 0.07 ) }
    dend_61 { pt3dadd( 7.24984, -87.3553, 36.3403, 0.51 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 22/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 4.88576, 23.3855, -39.3088, 0.29 ) }
    dend_54 { pt3dadd( 3.62412, 23.6747, -39.9436, 0.29 ) }
    dend_54 { pt3dadd( 2.61866, 23.9379, -40.4553, 0.51 ) }
    dend_54 { pt3dadd( 1.33186, 24.3611, -41.1249, 0.29 ) }
    dend_54 { pt3dadd( 0.184616, 24.7385, -41.7219, 0.29 ) }
    dend_54 { pt3dadd( -0.601544, 24.9971, -42.1309, 0.59 ) }
    dend_54 { pt3dadd( -1.43332, 25.2707, -42.5637, 0.29 ) }
    dend_54 { pt3dadd( -1.80991, 25.4327, -42.7958, 0.29 ) }
    dend_54 { pt3dadd( -2.39984, 25.7396, -43.1423, 0.29 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 31/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 4.88576, 23.3855, -39.3088, 0.29 ) }
    dend_53 { pt3dadd( 4.18605, 22.9521, -39.2941, 0.29 ) }
    dend_53 { pt3dadd( 3.51256, 22.5351, -39.2799, 0.73 ) }
    dend_53 { pt3dadd( 2.41113, 21.8529, -39.2568, 0.22 ) }
    dend_53 { pt3dadd( 1.46998, 21.2701, -39.237, 0.22 ) }
    dend_53 { pt3dadd( 0.999466, 20.9787, -39.2271, 0.44 ) }
    dend_53 { pt3dadd( 0.481309, 20.6578, -39.2163, 0.44 ) }
    // Section: dend_41, id: dend_41, parent: dend_33 (entry count 38/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 0.764659, 20.9055, -1.01056, 0.88 ) }
    dend_41 { pt3dadd( 0.789332, 22.5829, -1.54931, 0.88 ) }
    dend_41 { pt3dadd( 0.711219, 23.6733, -1.95036, 1.1 ) }
    dend_41 { pt3dadd( 0.671612, 24.2262, -2.15372, 1.1 ) }
    dend_41 { pt3dadd( 0.604485, 25.1632, -2.49837, 1.03 ) }
    dend_41 { pt3dadd( 0.528161, 26.2286, -2.89025, 1.03 ) }
    dend_41 { pt3dadd( 0.427591, 27.6325, -3.40661, 1.03 ) }
    dend_41 { pt3dadd( 0.234495, 28.5535, -3.85185, 1.18 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 46/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 0.764659, 20.9055, -1.01056, 0.44 ) }
    dend_34 { pt3dadd( 0.547055, 21.5492, -0.125481, 0.44 ) }
    dend_34 { pt3dadd( 0.230893, 22.4844, 1.16048, 0.66 ) }
    dend_34 { pt3dadd( 0.14585, 22.736, 1.50638, 1.03 ) }
    // Section: dend_30, id: dend_30, parent: dend_24 (entry count 50/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 25.101, 34.3342, -17.1857, 0.66 ) }
    dend_30 { pt3dadd( 24.7941, 34.9845, -17.2691, 0.66 ) }
    dend_30 { pt3dadd( 24.4967, 35.5787, -17.4395, 0.66 ) }
    dend_30 { pt3dadd( 24.1683, 36.1876, -17.6761, 0.95 ) }
    dend_30 { pt3dadd( 23.8679, 36.7394, -17.9657, 0.95 ) }
    dend_30 { pt3dadd( 23.4419, 37.5378, -18.5082, 0.88 ) }
    dend_30 { pt3dadd( 23.1555, 38.0905, -18.9483, 0.59 ) }
    dend_30 { pt3dadd( 22.8515, 38.7293, -19.5853, 0.37 ) }
    dend_30 { pt3dadd( 22.6462, 39.1826, -20.127, 1.1 ) }
    dend_30 { pt3dadd( 22.253, 40.0911, -21.3305, 0.66 ) }
    dend_30 { pt3dadd( 21.894, 40.9053, -22.5152, 0.44 ) }
    dend_30 { pt3dadd( 21.6271, 41.4797, -23.4434, 0.81 ) }
    dend_30 { pt3dadd( 21.2506, 42.1962, -24.7731, 0.51 ) }
    dend_30 { pt3dadd( 20.8388, 42.8405, -26.2136, 0.51 ) }
    dend_30 { pt3dadd( 20.6702, 43.0466, -26.8127, 1.1 ) }
    dend_30 { pt3dadd( 20.4604, 43.2209, -27.5576, 0.66 ) }
    dend_30 { pt3dadd( 20.1763, 43.3726, -28.6393, 0.66 ) }
    dend_30 { pt3dadd( 19.9187, 43.4665, -29.7554, 0.66 ) }
    dend_30 { pt3dadd( 19.6105, 43.566, -31.359, 0.66 ) }
    dend_30 { pt3dadd( 19.4603, 43.6364, -32.4757, 0.66 ) }
    dend_30 { pt3dadd( 19.3841, 43.7194, -33.4479, 0.66 ) }
    dend_30 { pt3dadd( 19.3729, 43.9242, -34.9272, 0.66 ) }
    dend_30 { pt3dadd( 19.4573, 44.2124, -36.3079, 0.66 ) }
    dend_30 { pt3dadd( 19.6687, 44.7213, -37.9755, 0.66 ) }
    dend_30 { pt3dadd( 19.8337, 45.0676, -38.7832, 0.66 ) }
    dend_30 { pt3dadd( 19.9659, 45.3412, -39.2647, 0.95 ) }
    dend_30 { pt3dadd( 20.4901, 46.3714, -40.6235, 0.44 ) }
    dend_30 { pt3dadd( 20.7278, 46.8705, -41.1213, 0.66 ) }
    dend_30 { pt3dadd( 20.9694, 47.4565, -41.6074, 0.22 ) }
    dend_30 { pt3dadd( 21.0752, 47.8572, -41.8724, 0.22 ) }
    dend_30 { pt3dadd( 21.1138, 48.3159, -42.1352, 0.22 ) }
    dend_30 { pt3dadd( 21.0478, 49.0605, -42.5117, 0.88 ) }
    dend_30 { pt3dadd( 20.7137, 50.5306, -43.1286, 0.51 ) }
    dend_30 { pt3dadd( 20.3719, 51.6114, -43.561, 0.22 ) }
    dend_30 { pt3dadd( 19.9728, 52.6658, -43.9917, 0.44 ) }
    dend_30 { pt3dadd( 19.6995, 53.2875, -44.2276, 0.15 ) }
    dend_30 { pt3dadd( 19.3585, 53.9606, -44.4297, 0.73 ) }
    dend_30 { pt3dadd( 19.1955, 54.2322, -44.4853, 0.73 ) }
    dend_30 { pt3dadd( 18.9535, 54.6474, -44.4495, 0.29 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 89/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 25.101, 34.3342, -17.1857, 0.66 ) }
    dend_25 { pt3dadd( 26.3073, 35.2891, -16.2904, 0.66 ) }
    dend_25 { pt3dadd( 27.0059, 35.8671, -15.7069, 0.66 ) }
    dend_25 { pt3dadd( 27.5081, 36.3016, -15.28, 0.73 ) }
    dend_25 { pt3dadd( 28.4709, 37.1417, -14.4688, 0.73 ) }
    dend_25 { pt3dadd( 29.7292, 38.2966, -13.435, 0.59 ) }
    dend_25 { pt3dadd( 30.0783, 38.6413, -13.1476, 0.59 ) }
    dend_25 { pt3dadd( 30.7894, 39.4395, -12.6063, 0.73 ) }
    dend_25 { pt3dadd( 31.2526, 39.9962, -12.3488, 0.59 ) }
    dend_25 { pt3dadd( 31.7654, 40.6847, -12.2639, 0.59 ) }
    dend_25 { pt3dadd( 32.333, 41.5477, -12.4775, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_25 { pt3dadd( 33.0396, 42.8409, -13.1829, 0.59 ) }
    dend_25 { pt3dadd( 33.5683, 44.0495, -14.0386, 0.59 ) }
    dend_25 { pt3dadd( 34.0702, 45.7303, -15.4768, 0.59 ) }
    dend_25 { pt3dadd( 34.2103, 46.7904, -16.5405, 0.59 ) }
    dend_25 { pt3dadd( 34.2137, 47.2715, -17.0601, 0.59 ) }
    dend_25 { pt3dadd( 34.1027, 48.3507, -18.2418, 0.51 ) }
    dend_25 { pt3dadd( 33.8448, 49.5541, -19.5482, 0.51 ) }
    dend_25 { pt3dadd( 33.4521, 50.8918, -20.9274, 0.88 ) }
    dend_25 { pt3dadd( 32.9452, 52.3896, -22.4679, 0.73 ) }
    dend_25 { pt3dadd( 32.8109, 52.8117, -22.9256, 0.73 ) }
    dend_25 { pt3dadd( 32.5777, 53.6713, -23.9144, 1.1 ) }
    dend_25 { pt3dadd( 32.3861, 54.9473, -25.5275, 0.59 ) }
    dend_25 { pt3dadd( 32.3925, 56.2895, -27.4922, 0.59 ) }
    dend_25 { pt3dadd( 32.5018, 56.8905, -28.4384, 0.73 ) }
    dend_25 { pt3dadd( 32.7611, 57.5823, -29.7045, 0.73 ) }
    dend_25 { pt3dadd( 32.9916, 57.9998, -30.6519, 1.03 ) }
    dend_25 { pt3dadd( 33.5183, 58.6236, -32.4562, 0.59 ) }
    dend_25 { pt3dadd( 34.0775, 59.1008, -34.0726, 0.59 ) }
    dend_25 { pt3dadd( 34.2521, 59.2273, -34.5444, 0.73 ) }
    dend_25 { pt3dadd( 35.1367, 59.8516, -37.021, 0.73 ) }
    dend_25 { pt3dadd( 35.5919, 60.1511, -38.3851, 0.73 ) }
    dend_25 { pt3dadd( 35.9915, 60.3696, -39.6568, 1.03 ) }
    dend_25 { pt3dadd( 36.1173, 60.4341, -40.0843, 1.25 ) }
    // Section: dend_20, id: dend_20, parent: dend_16 (entry count 23/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -20.1614, 5.47046, -10.1002, 0.73 ) }
    dend_20 { pt3dadd( -20.0726, 6.50487, -11.6539, 0.73 ) }
    dend_20 { pt3dadd( -20.0683, 7.49473, -13.1447, 0.88 ) }
    dend_20 { pt3dadd( -20.1189, 8.43628, -14.7645, 1.1 ) }
    dend_20 { pt3dadd( -20.159, 8.96804, -15.8455, 0.59 ) }
    dend_20 { pt3dadd( -20.1567, 9.36614, -16.8137, 0.51 ) }
    dend_20 { pt3dadd( -20.118, 9.76936, -17.8917, 0.29 ) }
    dend_20 { pt3dadd( -20.0807, 10.1892, -19.3036, 0.37 ) }
    dend_20 { pt3dadd( -20.031, 10.6358, -21.3448, 0.66 ) }
    dend_20 { pt3dadd( -19.9757, 10.8829, -23.1339, 1.03 ) }
    dend_20 { pt3dadd( -19.8418, 10.9722, -25.0501, 0.73 ) }
    dend_20 { pt3dadd( -19.7378, 10.9358, -25.8887, 0.73 ) }
    dend_20 { pt3dadd( -19.5, 10.8025, -27.0084, 0.73 ) }
    dend_20 { pt3dadd( -19.2353, 10.6364, -27.8829, 0.73 ) }
    dend_20 { pt3dadd( -19.0859, 10.5389, -28.3402, 0.73 ) }
    dend_20 { pt3dadd( -18.7776, 10.269, -29.5655, 0.73 ) }
    dend_20 { pt3dadd( -18.6286, 10.0651, -30.4895, 0.73 ) }
    dend_20 { pt3dadd( -18.4403, 9.6809, -32.0134, 0.73 ) }
    dend_20 { pt3dadd( -18.1888, 9.10026, -34.144, 0.73 ) }
    dend_20 { pt3dadd( -17.8691, 8.37047, -36.8024, 0.73 ) }
    dend_20 { pt3dadd( -17.7311, 7.85187, -38.6551, 0.73 ) }
    dend_20 { pt3dadd( -17.7156, 7.58738, -39.5887, 0.73 ) }
    dend_20 { pt3dadd( -17.7796, 7.13793, -41.099, 0.73 ) }
    dend_20 { pt3dadd( -17.8723, 6.77149, -42.2979, 0.73 ) }
    dend_20 { pt3dadd( -17.9341, 6.53216, -43.2207, 0.73 ) }
    dend_20 { pt3dadd( -18.1104, 5.5295, -48.6213, 0.73 ) }
    dend_20 { pt3dadd( -18.103, 5.4573, -49.2444, 0.88 ) }
    dend_20 { pt3dadd( -18.0133, 5.36574, -50.9125, 0.88 ) }
    dend_20 { pt3dadd( -17.8266, 5.38438, -53.7466, 0.88 ) }
    dend_20 { pt3dadd( -17.6977, 5.45355, -55.6453, 0.73 ) }
    dend_20 { pt3dadd( -17.5669, 5.52219, -57.562, 0.44 ) }
    dend_20 { pt3dadd( -17.4941, 5.54606, -58.186, 0.07 ) }
    dend_20 { pt3dadd( -17.2274, 5.51849, -60.0771, 1.18 ) }
    dend_20 { pt3dadd( -16.8288, 5.2875, -63.2006, 1.03 ) }
    dend_20 { pt3dadd( -16.7565, 5.14965, -64.1581, 0.73 ) }
    dend_20 { pt3dadd( -16.7323, 4.90241, -65.3804, 0.73 ) }
    dend_20 { pt3dadd( -16.7403, 4.62584, -66.7241, 0.73 ) }
    dend_20 { pt3dadd( -16.7663, 4.35239, -68.1763, 0.73 ) }
    dend_20 { pt3dadd( -16.8707, 4.06144, -69.9717, 0.73 ) }
    dend_20 { pt3dadd( -16.9365, 3.93587, -71.0995, 0.73 ) }
    dend_20 { pt3dadd( -17.0477, 3.82176, -73.078, 0.73 ) }
    dend_20 { pt3dadd( -17.1109, 3.81904, -73.9693, 0.73 ) }
    dend_20 { pt3dadd( -17.2153, 3.85364, -75.0131, 1.1 ) }
    dend_20 { pt3dadd( -17.5581, 4.0552, -77.738, 0.22 ) }
    dend_20 { pt3dadd( -17.8219, 4.28705, -79.8374, 0.59 ) }
    dend_20 { pt3dadd( -17.9199, 4.393, -80.6665, 0.59 ) }
    dend_20 { pt3dadd( -18.0381, 4.56308, -81.8538, 0.59 ) }
    dend_20 { pt3dadd( -18.1023, 4.69704, -82.8707, 0.59 ) }
    dend_20 { pt3dadd( -18.1092, 4.81481, -83.7959, 0.66 ) }
    dend_20 { pt3dadd( -17.9176, 5.04245, -85.806, 0.66 ) }
    dend_20 { pt3dadd( -17.676, 5.15779, -87.4552, 0.51 ) }
    dend_20 { pt3dadd( -17.3124, 5.21631, -89.5812, 0.51 ) }
    dend_20 { pt3dadd( -16.9867, 5.19019, -91.1768, 0.51 ) }
    dend_20 { pt3dadd( -16.5531, 5.11091, -92.8524, 0.51 ) }
    dend_20 { pt3dadd( -16.0184, 4.93753, -94.4806, 0.51 ) }
    dend_20 { pt3dadd( -15.1266, 4.55413, -96.6189, 0.37 ) }
    dend_20 { pt3dadd( -14.1249, 4.0313, -98.259, 0.37 ) }
    dend_20 { pt3dadd( -12.5995, 3.17866, -99.0906, 0.37 ) }
    dend_20 { pt3dadd( -8.48319, 0.88201, -99.0065, 0.29 ) }
    dend_20 { pt3dadd( -6.87615, -0.0188993, -98.6028, 0.29 ) }
    dend_20 { pt3dadd( -5.55189, -0.772063, -98.066, 0.15 ) }
    dend_20 { pt3dadd( -3.95939, -1.68023, -97.2368, 0.15 ) }
    dend_20 { pt3dadd( -3.27147, -2.07392, -96.8202, 0.15 ) }
    dend_20 { pt3dadd( -2.78966, -2.3653, -96.5169, 0.15 ) }
    dend_20 { pt3dadd( -2.11087, -2.84533, -96.3472, 0.66 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 88/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -20.1614, 5.47046, -10.1002, 0.51 ) }
    dend_17 { pt3dadd( -20.5468, 5.35238, -10.4381, 0.51 ) }
    dend_17 { pt3dadd( -20.8558, 5.21714, -10.6695, 0.51 ) }
    dend_17 { pt3dadd( -21.4146, 5.00442, -11.025, 0.51 ) }
    dend_17 { pt3dadd( -21.768, 4.91429, -11.2877, 0.51 ) }
    dend_17 { pt3dadd( -22.0351, 4.8849, -11.6295, 0.51 ) }
    dend_17 { pt3dadd( -22.1755, 4.88765, -11.8834, 0.51 ) }
    dend_17 { pt3dadd( -22.3299, 4.91505, -12.2903, 0.51 ) }
    dend_17 { pt3dadd( -22.4225, 4.95554, -12.6527, 0.51 ) }
    dend_17 { pt3dadd( -22.5347, 5.05331, -13.433, 0.51 ) }
    dend_17 { pt3dadd( -22.636, 5.19123, -14.9197, 0.51 ) }
    dend_17 { pt3dadd( -22.6767, 5.25181, -15.812, 0.51 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_17 { pt3dadd( -22.6925, 5.26352, -16.4538, 0.51 ) }
    dend_17 { pt3dadd( -22.6952, 5.23943, -16.9267, 0.51 ) }
    dend_17 { pt3dadd( -22.7171, 5.15229, -17.6933, 0.51 ) }
    dend_17 { pt3dadd( -22.7848, 4.97274, -18.6591, 0.51 ) }
    dend_17 { pt3dadd( -22.8609, 4.83581, -19.2547, 0.51 ) }
    dend_17 { pt3dadd( -23.0456, 4.57031, -20.3244, 0.51 ) }
    dend_17 { pt3dadd( -23.2921, 4.26663, -21.597, 0.51 ) }
    dend_17 { pt3dadd( -23.5341, 4.02127, -22.8082, 0.51 ) }
    dend_17 { pt3dadd( -23.8976, 3.74474, -24.7858, 0.73 ) }
    dend_17 { pt3dadd( -23.9993, 3.70273, -25.5046, 0.73 ) }
    dend_17 { pt3dadd( -24.0708, 3.72417, -26.2518, 0.73 ) }
    dend_17 { pt3dadd( -24.1245, 3.84266, -27.2027, 0.73 ) }
    dend_17 { pt3dadd( -24.1446, 4.0348, -28.2008, 0.73 ) }
    dend_17 { pt3dadd( -24.1006, 4.34889, -29.3484, 0.59 ) }
    dend_17 { pt3dadd( -23.997, 4.77235, -30.4349, 0.59 ) }
    dend_17 { pt3dadd( -23.8514, 5.23561, -31.4981, 0.81 ) }
    dend_17 { pt3dadd( -23.7802, 5.47831, -31.9912, 1.03 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 17/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -17.1169, 6.12742, -4.13806, 0.22 ) }
    dend_15 { pt3dadd( -16.4195, 6.67351, -5.05637, 0.22 ) }
    dend_15 { pt3dadd( -16.006, 7.07169, -5.65322, 0.29 ) }
    dend_15 { pt3dadd( -15.5879, 7.53645, -6.3201, 0.29 ) }
    dend_15 { pt3dadd( -15.2961, 7.87969, -6.79324, 0.29 ) }
    dend_15 { pt3dadd( -14.9789, 8.23887, -7.32996, 0.44 ) }
    dend_15 { pt3dadd( -14.8376, 8.40566, -7.58282, 0.73 ) }
    dend_15 { pt3dadd( -14.6081, 8.74337, -8.03627, 0.73 ) }
    dend_15 { pt3dadd( -14.4321, 9.07735, -8.47637, 0.73 ) }
    dend_15 { pt3dadd( -14.2895, 9.38534, -8.87964, 0.37 ) }
    dend_15 { pt3dadd( -14.0304, 9.96402, -9.69532, 0.73 ) }
    dend_15 { pt3dadd( -13.9081, 10.2298, -10.099, 0.37 ) }
    dend_15 { pt3dadd( -13.7783, 10.4765, -10.4904, 0.51 ) }
    dend_15 { pt3dadd( -13.595, 10.8041, -11.0129, 0.29 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 31/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -17.1169, 6.12742, -4.13806, 0.81 ) }
    dend_14 { pt3dadd( -17.031, 6.5124, -3.86381, 0.81 ) }
    dend_14 { pt3dadd( -16.6189, 8.22124, -2.49229, 0.81 ) }
    dend_14 { pt3dadd( -16.2157, 10.071, -0.885097, 0.81 ) }
    dend_14 { pt3dadd( -16.024, 11.0048, -0.0733173, 0.81 ) }
    dend_14 { pt3dadd( -15.8552, 11.8007, 0.595532, 0.66 ) }
    dend_14 { pt3dadd( -15.766, 12.2066, 0.916696, 0.66 ) }
    dend_14 { pt3dadd( -15.5422, 13.1066, 1.60007, 0.66 ) }
    dend_14 { pt3dadd( -15.3737, 14.0061, 2.2122, 0.66 ) }
    dend_14 { pt3dadd( -15.3238, 14.5012, 2.54536, 0.66 ) }
    dend_14 { pt3dadd( -15.2864, 15.0933, 2.98207, 0.66 ) }
    dend_14 { pt3dadd( -15.2028, 16.8931, 4.42662, 0.66 ) }
    dend_14 { pt3dadd( -15.0519, 18.5825, 5.86983, 0.66 ) }
    dend_14 { pt3dadd( -14.8041, 20.1003, 7.26078, 0.66 ) }
    dend_14 { pt3dadd( -14.5896, 21.0679, 8.24378, 0.66 ) }
    dend_14 { pt3dadd( -14.3679, 21.9524, 9.16843, 0.66 ) }
    dend_14 { pt3dadd( -14.0945, 22.8592, 10.0688, 0.66 ) }
    dend_14 { pt3dadd( -13.8169, 23.588, 10.7048, 0.66 ) }
    dend_14 { pt3dadd( -13.3207, 24.7358, 11.4518, 0.66 ) }
    dend_14 { pt3dadd( -12.7411, 26.0234, 11.971, 0.66 ) }
    dend_14 { pt3dadd( -12.2145, 27.4614, 12.2773, 0.66 ) }
    dend_14 { pt3dadd( -11.7713, 29.072, 12.4731, 0.66 ) }
    dend_14 { pt3dadd( -11.5798, 29.9639, 12.5018, 0.66 ) }
    dend_14 { pt3dadd( -11.3697, 31.1413, 12.4802, 0.66 ) }
    dend_14 { pt3dadd( -11.205, 32.1346, 12.4256, 0.51 ) }
    dend_14 { pt3dadd( -10.8546, 34.23, 12.3576, 0.66 ) }
    dend_14 { pt3dadd( -10.6248, 35.8951, 12.4776, 0.95 ) }
    dend_14 { pt3dadd( -10.5007, 37.4321, 12.7553, 0.66 ) }
    dend_14 { pt3dadd( -10.4483, 38.7821, 13.0791, 0.66 ) }
    dend_14 { pt3dadd( -10.4517, 39.9499, 13.4034, 0.88 ) }
    dend_14 { pt3dadd( -10.5909, 42.0556, 14.1248, 1.03 ) }
    dend_14 { pt3dadd( -10.9222, 44.3429, 15.0903, 1.54 ) }
    dend_14 { pt3dadd( -11.3881, 46.4605, 16.1639, 0.66 ) }
    dend_14 { pt3dadd( -11.6057, 47.2356, 16.6392, 0.88 ) }
    dend_14 { pt3dadd( -11.8006, 47.7802, 17.0236, 0.81 ) }
    dend_14 { pt3dadd( -12.4554, 49.2511, 18.2776, 0.81 ) }
    dend_14 { pt3dadd( -13.09, 50.2998, 19.4471, 0.51 ) }
    dend_14 { pt3dadd( -13.522, 50.9129, 20.3898, 0.66 ) }
    dend_14 { pt3dadd( -13.7962, 51.2564, 21.0635, 0.66 ) }
    dend_14 { pt3dadd( -14.0559, 51.5459, 21.7047, 0.66 ) }
    dend_14 { pt3dadd( -14.5837, 52.0608, 22.9493, 0.51 ) }
    dend_14 { pt3dadd( -15.2225, 52.5951, 24.4264, 0.37 ) }
    dend_14 { pt3dadd( -16.1997, 53.3489, 26.6644, 0.51 ) }
    dend_14 { pt3dadd( -16.416, 53.5235, 27.1685, 0.51 ) }
    dend_14 { pt3dadd( -16.8608, 53.9553, 28.2154, 0.51 ) }
    dend_14 { pt3dadd( -17.1216, 54.2687, 28.8388, 0.51 ) }
    dend_14 { pt3dadd( -18.0399, 55.5265, 30.9664, 0.66 ) }
    dend_14 { pt3dadd( -18.586, 56.3953, 32.2796, 0.66 ) }
    dend_14 { pt3dadd( -19.0862, 57.2309, 33.4017, 0.44 ) }
    dend_14 { pt3dadd( -19.7749, 58.494, 34.8777, 0.66 ) }
    dend_14 { pt3dadd( -20.3565, 59.6123, 35.9434, 0.29 ) }
    dend_14 { pt3dadd( -20.6304, 60.1105, 36.2989, 0.44 ) }
    dend_14 { pt3dadd( -21.1636, 60.9971, 36.6646, 0.37 ) }
    dend_14 { pt3dadd( -21.709, 61.887, 36.8163, 0.15 ) }
    dend_14 { pt3dadd( -22.1756, 62.627, 36.7637, 0.15 ) }
    dend_14 { pt3dadd( -22.7091, 63.4537, 36.5329, 0.15 ) }
    dend_14 { pt3dadd( -23.249, 64.2288, 36.1733, 0.37 ) }
    dend_14 { pt3dadd( -23.4855, 64.5166, 35.9848, 0.22 ) }
    dend_14 { pt3dadd( -23.7425, 64.7589, 35.7588, 0.22 ) }
    dend_14 { pt3dadd( -24.1067, 65.0618, 35.4318, 0.22 ) }
    dend_14 { pt3dadd( -24.6676, 65.4698, 34.9468, 0.22 ) }
    dend_14 { pt3dadd( -25.5244, 66.0516, 34.2976, 0.22 ) }
    dend_14 { pt3dadd( -26.4342, 66.6882, 33.7284, 0.22 ) }
    dend_14 { pt3dadd( -27.1304, 67.1933, 33.362, 0.22 ) }
    dend_14 { pt3dadd( -27.9845, 67.8702, 32.998, 0.22 ) }
    dend_14 { pt3dadd( -28.2822, 68.1426, 32.8793, 0.37 ) }
    dend_14 { pt3dadd( -29.1015, 68.9948, 32.5691, 0.15 ) }
    dend_14 { pt3dadd( -29.8109, 69.8438, 32.3491, 0.29 ) }
    dend_14 { pt3dadd( -30.3521, 70.5302, 32.2144, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_14 { pt3dadd( -31.0435, 71.3896, 32.0586, 0.22 ) }
    dend_14 { pt3dadd( -31.7481, 72.2979, 31.8867, 0.07 ) }
    dend_14 { pt3dadd( -31.9594, 72.578, 31.8277, 0.07 ) }
    dend_14 { pt3dadd( -32.3542, 73.0967, 31.6955, 0.07 ) }
    dend_14 { pt3dadd( -32.7304, 73.5389, 31.5654, 0.07 ) }
    dend_14 { pt3dadd( -33.0219, 73.8357, 31.4829, 0.37 ) }
    // Section: dend_11, id: dend_11, parent: dend_5 (entry count 6/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -22.7032, -5.94316, -5.95803, 0.51 ) }
    dend_11 { pt3dadd( -23.9779, -7.56624, -6.63416, 0.51 ) }
    dend_11 { pt3dadd( -24.3715, -8.14687, -6.84155, 0.59 ) }
    dend_11 { pt3dadd( -25.3563, -9.66297, -7.22797, 0.44 ) }
    dend_11 { pt3dadd( -26.1852, -10.8881, -7.40864, 0.44 ) }
    dend_11 { pt3dadd( -26.9399, -11.8153, -7.44445, 0.73 ) }
    dend_11 { pt3dadd( -27.8677, -12.7325, -7.3931, 0.44 ) }
    dend_11 { pt3dadd( -29.2818, -13.7757, -6.99776, 0.44 ) }
    dend_11 { pt3dadd( -30.6409, -14.4738, -6.48354, 0.22 ) }
    dend_11 { pt3dadd( -31.9295, -14.9014, -5.8982, 0.22 ) }
    dend_11 { pt3dadd( -34.1274, -15.3527, -4.87676, 0.88 ) }
    dend_11 { pt3dadd( -35.6961, -15.5341, -4.19135, 0.66 ) }
    dend_11 { pt3dadd( -37.5593, -15.6495, -3.46013, 0.44 ) }
    dend_11 { pt3dadd( -38.3494, -15.6776, -3.17748, 0.15 ) }
    dend_11 { pt3dadd( -39.0699, -15.7137, -2.98955, 0.59 ) }
    dend_11 { pt3dadd( -40.3262, -15.8436, -2.80377, 0.22 ) }
    dend_11 { pt3dadd( -41.5424, -16.0544, -2.74795, 1.03 ) }
    dend_11 { pt3dadd( -43.6547, -16.5763, -2.91713, 0.07 ) }
    dend_11 { pt3dadd( -44.6811, -16.8636, -3.11932, 0.81 ) }
    dend_11 { pt3dadd( -45.8046, -17.1783, -3.38072, 0.95 ) }
    dend_11 { pt3dadd( -46.7532, -17.4487, -3.64609, 0.95 ) }
    dend_11 { pt3dadd( -47.6907, -17.7265, -3.98065, 0.73 ) }
    dend_11 { pt3dadd( -49.2479, -18.2245, -4.71088, 0.37 ) }
    dend_11 { pt3dadd( -49.882, -18.4464, -5.13509, 0.88 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 30/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -22.7032, -5.94316, -5.95803, 0.66 ) }
    dend_6 { pt3dadd( -22.5632, -7.271, -4.12631, 0.66 ) }
    dend_6 { pt3dadd( -22.4358, -9.05028, -1.34354, 1.25 ) }
    dend_6 { pt3dadd( -22.4459, -10.1851, 0.617787, 1.18 ) }
    dend_6 { pt3dadd( -22.624, -11.6258, 3.09683, 0.73 ) }
    dend_6 { pt3dadd( -22.7722, -12.2371, 4.10826, 0.37 ) }
    dend_6 { pt3dadd( -23.3102, -13.6485, 6.47, 0.73 ) }
    dend_6 { pt3dadd( -24.6175, -15.6388, 10.1021, 1.32 ) }
    dend_6 { pt3dadd( -25.8274, -16.9641, 12.7533, 1.25 ) }
    dend_6 { pt3dadd( -26.7767, -17.8141, 14.6495, 0.88 ) }
    dend_6 { pt3dadd( -27.7679, -18.5701, 16.5511, 0.51 ) }
    dend_6 { pt3dadd( -28.919, -19.3656, 18.8307, 0.51 ) }
    dend_6 { pt3dadd( -30.3123, -20.242, 21.7047, 0.51 ) }
    dend_6 { pt3dadd( -31.164, -20.8261, 24.0633, 0.51 ) }
    dend_6 { pt3dadd( -31.2907, -20.9285, 25.5731, 0.51 ) }
    dend_6 { pt3dadd( -31.254, -20.8935, 26.3399, 0.51 ) }
    dend_6 { pt3dadd( -31.1656, -20.8183, 27.2264, 0.51 ) }
    dend_6 { pt3dadd( -31.0265, -20.6811, 28.4616, 0.51 ) }
    dend_6 { pt3dadd( -30.7435, -20.2301, 31.4049, 0.51 ) }
    dend_6 { pt3dadd( -30.2495, -19.0954, 37.5674, 0.66 ) }
    dend_6 { pt3dadd( -30.0801, -18.5349, 40.3735, 1.03 ) }
    dend_6 { pt3dadd( -29.9585, -17.8106, 43.9311, 1.03 ) }
    dend_6 { pt3dadd( -29.9547, -17.5784, 45.0735, 1.03 ) }
    dend_6 { pt3dadd( -29.9918, -17.3874, 46.031, 1.18 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 54/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -19.4554, -10.6937, -13.9337, 1.18 ) }
    dend_4 { pt3dadd( -19.6459, -13.1603, -14.5004, 1.18 ) }
    dend_4 { pt3dadd( -19.6548, -13.6046, -14.5472, 1.18 ) }
    dend_4 { pt3dadd( -19.6534, -13.8508, -14.5688, 1.18 ) }
    dend_4 { pt3dadd( -19.6416, -14.3736, -14.5871, 1.18 ) }
    dend_4 { pt3dadd( -19.5824, -15.3013, -14.6314, 1.18 ) }
    dend_4 { pt3dadd( -19.3124, -18.0826, -14.7299, 1.18 ) }
    dend_4 { pt3dadd( -18.8635, -21.4896, -14.6847, 0.88 ) }
    dend_4 { pt3dadd( -18.4038, -24.0782, -14.6393, 1.47 ) }
    dend_4 { pt3dadd( -18.0783, -25.5459, -14.5905, 1.18 ) }
    dend_4 { pt3dadd( -17.3179, -28.5764, -14.5063, 0.59 ) }
    dend_4 { pt3dadd( -17.0192, -29.6809, -14.4823, 0.95 ) }
    dend_4 { pt3dadd( -16.7107, -30.6909, -14.4611, 1.32 ) }
    dend_4 { pt3dadd( -15.867, -33.3083, -14.4379, 0.59 ) }
    dend_4 { pt3dadd( -15.4501, -34.6463, -14.4609, 0.66 ) }
    dend_4 { pt3dadd( -14.8722, -36.6145, -14.5743, 0.37 ) }
    dend_4 { pt3dadd( -14.4338, -38.1702, -14.6887, 0.51 ) }
    dend_4 { pt3dadd( -13.9114, -39.9966, -14.9209, 1.1 ) }
    dend_4 { pt3dadd( -13.4841, -41.355, -15.177, 0.37 ) }
    dend_4 { pt3dadd( -12.9768, -42.7636, -15.5157, 1.47 ) }
    dend_4 { pt3dadd( -12.5808, -43.6746, -15.7818, 1.47 ) }
    dend_4 { pt3dadd( -11.6784, -45.2442, -16.2795, 1.03 ) }
    dend_4 { pt3dadd( -11.1307, -46.028, -16.5642, 0.66 ) }
    dend_4 { pt3dadd( -10.1876, -47.2932, -17.0596, 0.66 ) }
    dend_4 { pt3dadd( -9.49195, -48.2572, -17.4602, 0.66 ) }
    dend_4 { pt3dadd( -9.17552, -48.7319, -17.6507, 0.88 ) }
    dend_4 { pt3dadd( -8.60759, -49.655, -17.9912, 0.88 ) }
    dend_4 { pt3dadd( -7.74095, -51.1449, -18.4754, 0.88 ) }
    dend_4 { pt3dadd( -6.88249, -52.6294, -18.874, 0.44 ) }
    dend_4 { pt3dadd( -5.96402, -54.2155, -19.2313, 0.59 ) }
    dend_4 { pt3dadd( -4.8853, -56.1021, -19.6372, 1.18 ) }
    dend_4 { pt3dadd( -4.60479, -56.6138, -19.7609, 1.4 ) }
    dend_4 { pt3dadd( -3.65819, -58.3814, -20.2591, 1.03 ) }
    dend_4 { pt3dadd( -3.17068, -59.2905, -20.5658, 0.81 ) }
    dend_4 { pt3dadd( -3.04129, -59.5399, -20.6798, 0.81 ) }
    dend_4 { pt3dadd( -2.18596, -61.1779, -21.5203, 0.51 ) }
    dend_4 { pt3dadd( -0.969955, -63.4323, -22.8155, 0.88 ) }
    dend_4 { pt3dadd( -0.0961028, -65.0462, -23.8549, 1.18 ) }
    dend_4 { pt3dadd( 0.932846, -66.9417, -25.2731, 1.18 ) }
    dend_4 { pt3dadd( 2.8155, -70.368, -28.1863, 1.18 ) }
    dend_4 { pt3dadd( 3.23806, -71.1386, -28.9434, 0.51 ) }
    dend_4 { pt3dadd( 3.65369, -71.9435, -29.8514, 0.51 ) }
    dend_4 { pt3dadd( 4.10478, -72.8963, -31.0611, 0.51 ) }
    dend_4 { pt3dadd( 4.66465, -74.2873, -32.9664, 0.88 ) }
    dend_4 { pt3dadd( 4.83785, -74.9188, -33.8388, 1.32 ) }
    dend_4 { pt3dadd( 5.01963, -76.7136, -36.0686, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_4 { pt3dadd( 5.03236, -78.1333, -37.6859, 0.81 ) }
    dend_4 { pt3dadd( 4.9771, -79.4254, -39.0385, 0.81 ) }
    dend_4 { pt3dadd( 4.92053, -80.6561, -40.2275, 0.81 ) }
    dend_4 { pt3dadd( 4.8783, -81.8196, -41.2423, 0.81 ) }
    dend_4 { pt3dadd( 4.83517, -84.4874, -43.3985, 0.81 ) }
    dend_4 { pt3dadd( 4.84166, -84.9696, -43.7537, 0.81 ) }
    dend_4 { pt3dadd( 4.85938, -85.378, -44.0338, 0.81 ) }
    dend_4 { pt3dadd( 4.87856, -86.6247, -44.7246, 0.73 ) }
    dend_4 { pt3dadd( 4.88103, -88.0551, -45.1855, 0.73 ) }
    dend_4 { pt3dadd( 4.93337, -89.0082, -45.362, 0.73 ) }
    dend_4 { pt3dadd( 5.05732, -90.2327, -45.2847, 0.29 ) }
    dend_4 { pt3dadd( 5.15376, -91.2207, -45.1552, 0.29 ) }
    dend_4 { pt3dadd( 5.22007, -92.3151, -44.8995, 0.29 ) }
    dend_4 { pt3dadd( 5.21784, -93.9665, -44.1887, 0.88 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 14/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -19.4554, -10.6937, -13.9337, 0.66 ) }
    dend_3 { pt3dadd( -19.5322, -11.0773, -14.8398, 0.66 ) }
    dend_3 { pt3dadd( -19.6496, -11.6033, -16.0707, 0.66 ) }
    dend_3 { pt3dadd( -19.8081, -12.1875, -17.387, 0.66 ) }
    dend_3 { pt3dadd( -20.0191, -12.8781, -18.8218, 0.88 ) }
    dend_3 { pt3dadd( -20.3062, -13.6249, -20.3491, 0.37 ) }
    dend_3 { pt3dadd( -20.4862, -14.0272, -21.1774, 0.37 ) }
    dend_3 { pt3dadd( -20.6391, -14.3081, -21.7785, 0.37 ) }
    dend_3 { pt3dadd( -20.9436, -14.6932, -22.6472, 0.37 ) }
    dend_3 { pt3dadd( -21.2382, -14.9267, -23.2641, 0.95 ) }
    dend_3 { pt3dadd( -21.6678, -15.1313, -23.9646, 0.66 ) }
    dend_3 { pt3dadd( -21.9412, -15.2393, -24.3932, 0.44 ) }
    dend_3 { pt3dadd( -22.3431, -15.4459, -25.1774, 0.73 ) }
    dend_3 { pt3dadd( -22.7877, -15.6925, -26.2428, 0.22 ) }
    dend_3 { pt3dadd( -22.8935, -15.7621, -26.5697, 0.95 ) }
    dend_3 { pt3dadd( -23.0806, -15.9405, -27.3697, 0.95 ) }
    dend_3 { pt3dadd( -23.3445, -16.3024, -28.89, 0.95 ) }
    dend_3 { pt3dadd( -23.5597, -16.7504, -30.6573, 0.44 ) }
    dend_3 { pt3dadd( -23.6262, -16.9818, -31.5119, 0.66 ) }
    dend_3 { pt3dadd( -23.6868, -17.2658, -32.4461, 0.44 ) }
    dend_3 { pt3dadd( -23.7737, -17.7486, -33.8224, 0.81 ) }
    dend_3 { pt3dadd( -23.8044, -17.9078, -34.2391, 0.95 ) }
    dend_3 { pt3dadd( -23.9707, -18.5354, -35.8012, 0.29 ) }
    dend_3 { pt3dadd( -24.1057, -18.9458, -36.8037, 0.44 ) }
    dend_3 { pt3dadd( -24.3752, -19.6925, -38.4267, 0.59 ) }
    dend_3 { pt3dadd( -24.488, -20.0123, -39.0213, 0.59 ) }
    dend_3 { pt3dadd( -24.5575, -20.2273, -39.3745, 0.59 ) }
    dend_3 { pt3dadd( -24.7316, -20.9066, -40.3591, 0.59 ) }
    dend_3 { pt3dadd( -24.8281, -21.392, -41.0045, 1.1 ) }
    dend_3 { pt3dadd( -25.1133, -23.592, -43.7069, 0.59 ) }
    dend_3 { pt3dadd( -25.2142, -25.501, -45.8378, 0.59 ) }
    dend_3 { pt3dadd( -25.2186, -26.3676, -46.7025, 0.73 ) }
    dend_3 { pt3dadd( -25.1752, -27.5612, -47.7473, 0.29 ) }
    dend_3 { pt3dadd( -25.1417, -28.0056, -48.0752, 0.59 ) }
    dend_3 { pt3dadd( -25.0258, -28.9317, -48.6288, 0.73 ) }
    dend_3 { pt3dadd( -24.6846, -30.511, -49.31, 0.22 ) }
    dend_3 { pt3dadd( -24.4505, -31.4324, -49.668, 0.22 ) }
    dend_3 { pt3dadd( -24.422, -31.5536, -49.713, 0.51 ) }
    dend_3 { pt3dadd( -24.323, -31.9871, -49.8741, 0.07 ) }
    dend_3 { pt3dadd( -23.985, -33.5551, -50.4742, 0.88 ) }
    dend_3 { pt3dadd( -23.542, -35.5429, -51.246, 0.37 ) }
    dend_3 { pt3dadd( -23.0938, -37.5076, -52.0438, 0.15 ) }
    dend_3 { pt3dadd( -22.8401, -38.5979, -52.5218, 0.37 ) }
    // Section: dend_104, id: dend_104, parent: dend_102 (entry count 57/100)
    dend_104 { pt3dclear() }
    dend_104 { pt3dadd( -11.6069, -30.8967, 46.2926, 0.07 ) }
    dend_104 { pt3dadd( -11.3965, -30.0581, 46.3408, 0.07 ) }
    dend_104 { pt3dadd( -11.2113, -29.3198, 46.3832, 0.07 ) }
    dend_104 { pt3dadd( -11.0624, -28.7265, 46.4173, 0.07 ) }
    dend_104 { pt3dadd( -10.9598, -28.3175, 46.4409, 0.37 ) }
    dend_104 { pt3dadd( -10.8097, -27.7195, 46.4752, 0.37 ) }
    dend_104 { pt3dadd( -10.6809, -27.2062, 46.5047, 0.66 ) }
    // Section: dend_103, id: dend_103, parent: dend_102 (entry count 64/100)
    dend_103 { pt3dclear() }
    dend_103 { pt3dadd( -11.6069, -30.8967, 46.2926, 0.22 ) }
    dend_103 { pt3dadd( -12.9838, -30.4991, 46.3157, 0.22 ) }
    dend_103 { pt3dadd( -13.6065, -30.3664, 46.3152, 0.22 ) }
    dend_103 { pt3dadd( -14.3302, -30.2514, 46.3056, 0.22 ) }
    dend_103 { pt3dadd( -14.8389, -30.1845, 46.3203, 0.22 ) }
    dend_103 { pt3dadd( -15.6722, -30.0716, 46.3607, 0.73 ) }
    dend_103 { pt3dadd( -16.0999, -30.004, 46.3852, 0.73 ) }
    dend_103 { pt3dadd( -16.864, -29.8635, 46.4468, 0.73 ) }
    dend_103 { pt3dadd( -17.2104, -29.7793, 46.471, 0.73 ) }
    dend_103 { pt3dadd( -18.1888, -29.4801, 46.508, 0.07 ) }
    dend_103 { pt3dadd( -18.609, -29.3263, 46.5189, 0.07 ) }
    dend_103 { pt3dadd( -19.087, -29.1236, 46.5241, 0.07 ) }
    dend_103 { pt3dadd( -19.6581, -28.8467, 46.5178, 1.1 ) }
    dend_103 { pt3dadd( -20.4872, -28.3981, 46.4871, 0.15 ) }
    dend_103 { pt3dadd( -21.2384, -27.9743, 46.4011, 0.88 ) }
    dend_103 { pt3dadd( -21.8801, -27.6137, 46.3239, 0.66 ) }
    dend_103 { pt3dadd( -22.286, -27.3979, 46.2896, 0.66 ) }
    dend_103 { pt3dadd( -22.7307, -27.172, 46.2663, 0.22 ) }
    dend_103 { pt3dadd( -23.0816, -27.01, 46.272, 0.51 ) }
    dend_103 { pt3dadd( -23.9498, -26.6327, 46.3906, 0.15 ) }
    dend_103 { pt3dadd( -25.0762, -26.1789, 46.6318, 0.15 ) }
    dend_103 { pt3dadd( -25.5392, -25.9994, 46.7497, 0.15 ) }
    dend_103 { pt3dadd( -26.2971, -25.6876, 46.9871, 0.59 ) }
    dend_103 { pt3dadd( -27.1185, -25.3264, 47.3448, 0.22 ) }
    dend_103 { pt3dadd( -28.102, -24.8775, 47.8558, 0.88 ) }
    dend_103 { pt3dadd( -28.5367, -24.6593, 48.1127, 0.51 ) }
    dend_103 { pt3dadd( -29.0006, -24.3737, 48.3812, 0.73 ) }
    dend_103 { pt3dadd( -29.6001, -23.9224, 48.7515, 0.44 ) }
    dend_103 { pt3dadd( -30.4552, -23.1443, 49.2797, 0.07 ) }
    dend_103 { pt3dadd( -30.8107, -22.7633, 49.4764, 0.07 ) }
    dend_103 { pt3dadd( -31.1562, -22.3519, 49.6603, 0.73 ) }
    dend_103 { pt3dadd( -31.6986, -21.6776, 49.9487, 0.07 ) }
    dend_103 { pt3dadd( -32.0507, -21.2372, 50.1087, 0.07 ) }
    dend_103 { pt3dadd( -32.4128, -20.8157, 50.1917, 0.07 ) }
    dend_103 { pt3dadd( -33.0453, -20.0662, 50.1997, 0.22 ) }
    // Section: dend_97, id: dend_97, parent: dend_91 (entry count 99/100)
    dend_97 { pt3dclear() }
    dend_97 { pt3dadd( 10.1916, 4.42546, 30.4224, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_97 { pt3dadd( 8.98332, 5.6519, 30.6203, 0.81 ) }
    dend_97 { pt3dadd( 8.3568, 6.34494, 30.6969, 0.81 ) }
    dend_97 { pt3dadd( 7.47932, 7.43155, 30.8149, 0.81 ) }
    dend_97 { pt3dadd( 6.966, 8.16902, 30.8864, 0.81 ) }
    dend_97 { pt3dadd( 6.59476, 8.80702, 30.9684, 0.88 ) }
    dend_97 { pt3dadd( 6.38322, 9.23953, 31.0304, 1.18 ) }
    dend_97 { pt3dadd( 6.04323, 10.2637, 31.1624, 0.59 ) }
    dend_97 { pt3dadd( 5.90858, 11.0304, 31.2696, 0.59 ) }
    dend_97 { pt3dadd( 5.8862, 11.9607, 31.4112, 0.59 ) }
    dend_97 { pt3dadd( 5.92637, 13.0774, 31.6496, 0.44 ) }
    dend_97 { pt3dadd( 5.94994, 13.6128, 31.784, 0.95 ) }
    dend_97 { pt3dadd( 5.98658, 14.4411, 32.0488, 0.44 ) }
    dend_97 { pt3dadd( 5.9874, 14.959, 32.2375, 0.44 ) }
    dend_97 { pt3dadd( 5.89813, 16.0346, 32.6857, 0.37 ) }
    dend_97 { pt3dadd( 5.72657, 17.0031, 33.0917, 0.37 ) }
    dend_97 { pt3dadd( 5.49516, 17.9168, 33.4707, 0.66 ) }
    dend_97 { pt3dadd( 5.16925, 18.9219, 33.8837, 0.95 ) }
    dend_97 { pt3dadd( 4.83394, 19.7307, 34.2056, 0.95 ) }
    dend_97 { pt3dadd( 4.03991, 21.3238, 34.7685, 0.88 ) }
    dend_97 { pt3dadd( 3.246, 22.7419, 35.1847, 0.59 ) }
    dend_97 { pt3dadd( 2.72522, 23.6443, 35.4128, 0.59 ) }
    dend_97 { pt3dadd( 2.13291, 24.6152, 35.636, 0.59 ) }
    dend_97 { pt3dadd( 1.44846, 25.676, 35.8157, 0.22 ) }
    dend_97 { pt3dadd( 0.746985, 26.707, 35.961, 0.22 ) }
    dend_97 { pt3dadd( 0.394433, 27.1405, 35.9742, 0.73 ) }
    // Section: dend_92, id: dend_92, parent: dend_91 (entry count 25/100)
    dend_92 { pt3dclear() }
    dend_92 { pt3dadd( 10.1916, 4.42546, 30.4224, 0.66 ) }
    dend_92 { pt3dadd( 11.2234, 4.89054, 31.1065, 0.66 ) }
    dend_92 { pt3dadd( 13.0211, 5.93544, 32.3364, 0.66 ) }
    dend_92 { pt3dadd( 13.8672, 6.57838, 32.9295, 0.66 ) }
    dend_92 { pt3dadd( 14.5213, 7.17627, 33.4058, 0.59 ) }
    dend_92 { pt3dadd( 15.3888, 8.05885, 34.0346, 0.59 ) }
    dend_92 { pt3dadd( 16.0128, 8.70475, 34.5103, 0.59 ) }
    dend_92 { pt3dadd( 16.5051, 9.28173, 34.9293, 0.59 ) }
    dend_92 { pt3dadd( 17.2247, 10.1035, 35.5195, 0.59 ) }
    dend_92 { pt3dadd( 18.378, 11.4505, 36.5456, 0.59 ) }
    dend_92 { pt3dadd( 18.7672, 11.8923, 36.9005, 0.88 ) }
    dend_92 { pt3dadd( 19.8111, 12.9931, 37.8061, 0.59 ) }
    dend_92 { pt3dadd( 20.6499, 13.7661, 38.5593, 0.59 ) }
    dend_92 { pt3dadd( 21.5512, 14.4454, 39.3459, 1.4 ) }
    // Section: dend_87, id: dend_87, parent: dend_85 (entry count 39/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( 3.204, 24.0593, 8.9877, 0.37 ) }
    dend_87 { pt3dadd( 3.61894, 24.4454, 9.33357, 0.37 ) }
    dend_87 { pt3dadd( 4.33755, 24.8684, 9.95166, 0.29 ) }
    dend_87 { pt3dadd( 4.93228, 25.0767, 10.4305, 0.29 ) }
    dend_87 { pt3dadd( 5.57649, 25.1984, 10.9561, 0.29 ) }
    dend_87 { pt3dadd( 6.14083, 25.2217, 11.4404, 0.29 ) }
    dend_87 { pt3dadd( 6.42121, 25.2196, 11.7017, 0.29 ) }
    dend_87 { pt3dadd( 7.55854, 25.1043, 12.8368, 0.07 ) }
    dend_87 { pt3dadd( 8.14809, 25.0107, 13.463, 0.22 ) }
    dend_87 { pt3dadd( 9.03694, 24.8234, 14.3977, 0.22 ) }
    dend_87 { pt3dadd( 10.0638, 24.5581, 15.4853, 0.07 ) }
    dend_87 { pt3dadd( 10.6978, 24.3823, 16.1594, 0.22 ) }
    dend_87 { pt3dadd( 10.9475, 24.3174, 16.4426, 0.59 ) }
    dend_87 { pt3dadd( 11.3968, 24.226, 17.0412, 0.59 ) }
    // Section: dend_86, id: dend_86, parent: dend_85 (entry count 53/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( 3.204, 24.0593, 8.9877, 0.29 ) }
    dend_86 { pt3dadd( 2.69215, 25.3172, 10.2889, 0.29 ) }
    dend_86 { pt3dadd( 2.37174, 26.085, 11.1084, 0.81 ) }
    dend_86 { pt3dadd( 2.0221, 26.9808, 12.0219, 0.29 ) }
    dend_86 { pt3dadd( 1.59885, 28.2656, 13.3418, 0.29 ) }
    dend_86 { pt3dadd( 1.38537, 29.0808, 14.2068, 0.29 ) }
    dend_86 { pt3dadd( 1.23806, 29.9959, 15.1843, 0.29 ) }
    dend_86 { pt3dadd( 1.25527, 30.5092, 15.765, 0.66 ) }
    dend_86 { pt3dadd( 1.37708, 31.0562, 16.4408, 0.66 ) }
    dend_86 { pt3dadd( 1.78683, 32.2625, 18.0402, 0.29 ) }
    dend_86 { pt3dadd( 2.03604, 32.9257, 18.9231, 0.29 ) }
    dend_86 { pt3dadd( 2.36394, 33.8276, 20.1512, 0.44 ) }
    dend_86 { pt3dadd( 2.70435, 34.8529, 21.5118, 0.44 ) }
    dend_86 { pt3dadd( 2.97099, 35.9416, 22.9426, 0.44 ) }
    dend_86 { pt3dadd( 3.06696, 37.0903, 24.4095, 0.29 ) }
    dend_86 { pt3dadd( 2.91916, 38.3987, 25.8822, 0.59 ) }
    dend_86 { pt3dadd( 2.50551, 39.7161, 27.1422, 0.37 ) }
    dend_86 { pt3dadd( 2.04185, 40.5439, 27.7843, 0.66 ) }
    dend_86 { pt3dadd( 1.36436, 41.3277, 28.1557, 0.37 ) }
    dend_86 { pt3dadd( 0.0140238, 42.5949, 28.4247, 0.22 ) }
    dend_86 { pt3dadd( -1.30823, 43.6093, 28.2948, 0.51 ) }
    dend_86 { pt3dadd( -2.5528, 44.3449, 27.8921, 0.22 ) }
    dend_86 { pt3dadd( -3.23963, 44.6682, 27.5707, 0.22 ) }
    dend_86 { pt3dadd( -4.53269, 45.1374, 26.8725, 0.73 ) }
    // Section: dend_79, id: dend_79, parent: dend_77 (entry count 77/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( 29.3134, -49.491, 44.7722, 0.44 ) }
    dend_79 { pt3dadd( 29.2606, -50.1541, 44.5625, 0.44 ) }
    dend_79 { pt3dadd( 29.1973, -51.1455, 44.3124, 1.1 ) }
    dend_79 { pt3dadd( 29.1723, -52.3916, 43.9195, 0.22 ) }
    dend_79 { pt3dadd( 29.1724, -53.0345, 43.6883, 0.73 ) }
    dend_79 { pt3dadd( 29.1611, -53.5351, 43.4915, 0.73 ) }
    dend_79 { pt3dadd( 29.1315, -54.327, 43.1744, 0.22 ) }
    dend_79 { pt3dadd( 29.1165, -54.9637, 42.9018, 0.51 ) }
    dend_79 { pt3dadd( 29.0638, -56.8117, 42.1002, 0.07 ) }
    dend_79 { pt3dadd( 29.0025, -57.894, 41.6013, 0.95 ) }
    dend_79 { pt3dadd( 28.9068, -59.1262, 41.0022, 0.15 ) }
    dend_79 { pt3dadd( 28.8711, -59.4961, 40.8091, 0.51 ) }
    dend_79 { pt3dadd( 28.7075, -60.9239, 40.0058, 0.22 ) }
    dend_79 { pt3dadd( 28.6549, -61.3453, 39.7625, 0.66 ) }
    // Section: dend_78, id: dend_78, parent: dend_77 (entry count 91/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 29.3134, -49.491, 44.7722, 0.88 ) }
    dend_78 { pt3dadd( 29.6958, -50.074, 45.8144, 0.88 ) }
    dend_78 { pt3dadd( 30.0891, -50.942, 47.1095, 0.51 ) }
    dend_78 { pt3dadd( 30.5146, -52.2193, 48.749, 0.29 ) }
    dend_78 { pt3dadd( 30.6949, -52.9146, 49.5648, 0.29 ) }
    dend_78 { pt3dadd( 30.7776, -53.2619, 49.9378, 0.66 ) }
    dend_78 { pt3dadd( 30.925, -53.9281, 50.6039, 1.18 ) }
    dend_78 { pt3dadd( 31.194, -55.6633, 52.0532, 0.29 ) }
    dend_78 { pt3dadd( 31.2726, -56.4463, 52.5918, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_78 { pt3dadd( 31.3425, -57.6863, 53.3247, 0.51 ) }
    dend_78 { pt3dadd( 31.3624, -58.7513, 53.9583, 0.07 ) }
    dend_78 { pt3dadd( 31.3574, -59.2491, 54.2678, 0.07 ) }
    dend_78 { pt3dadd( 31.3469, -59.7011, 54.5481, 0.22 ) }
    dend_78 { pt3dadd( 31.3429, -60.3414, 54.9174, 0.66 ) }
    dend_78 { pt3dadd( 31.3256, -61.4543, 55.5813, 0.29 ) }
    dend_78 { pt3dadd( 31.2504, -63.123, 56.5799, 0.07 ) }
    dend_78 { pt3dadd( 31.1567, -64.2691, 57.3214, 0.07 ) }
    dend_78 { pt3dadd( 31.1186, -64.7434, 57.6521, 0.07 ) }
    dend_78 { pt3dadd( 31.058, -65.5904, 58.2899, 0.81 ) }
    // Section: dend_76, id: dend_76, parent: dend_74 (entry count 10/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 24.1961, -32.9519, 13.8765, 0.07 ) }
    dend_76 { pt3dadd( 24.1169, -33.7708, 13.759, 0.07 ) }
    dend_76 { pt3dadd( 24.0275, -34.7554, 13.6175, 0.73 ) }
    dend_76 { pt3dadd( 23.9871, -35.2992, 13.4883, 0.37 ) }
    dend_76 { pt3dadd( 23.9531, -35.8528, 13.3031, 0.73 ) }
    dend_76 { pt3dadd( 23.8688, -37.5378, 12.6945, 0.22 ) }
    dend_76 { pt3dadd( 23.8563, -38.2294, 12.4177, 0.81 ) }
    dend_76 { pt3dadd( 23.8476, -38.7053, 12.1836, 0.81 ) }
    dend_76 { pt3dadd( 23.8248, -40.1378, 11.4578, 0.07 ) }
    dend_76 { pt3dadd( 23.8103, -41.1705, 10.9332, 0.07 ) }
    dend_76 { pt3dadd( 23.7866, -41.8268, 10.58, 1.4 ) }
    dend_76 { pt3dadd( 23.7, -43.6304, 9.61382, 0.88 ) }
    dend_76 { pt3dadd( 23.6118, -45.271, 8.70714, 0.15 ) }
    dend_76 { pt3dadd( 23.5406, -46.3931, 8.09119, 0.15 ) }
    dend_76 { pt3dadd( 23.4405, -47.6022, 7.47687, 1.4 ) }
    dend_76 { pt3dadd( 23.3008, -48.9272, 6.82316, 1.4 ) }
    // Section: dend_75, id: dend_75, parent: dend_74 (entry count 26/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 24.1961, -32.9519, 13.8765, 0.37 ) }
    dend_75 { pt3dadd( 23.0629, -33.2856, 14.3598, 0.37 ) }
    dend_75 { pt3dadd( 21.4523, -33.8263, 14.9474, 0.37 ) }
    dend_75 { pt3dadd( 20.5927, -34.1654, 15.1501, 0.37 ) }
    dend_75 { pt3dadd( 18.8831, -34.8922, 15.3849, 0.81 ) }
    dend_75 { pt3dadd( 18.0034, -35.2975, 15.4685, 0.81 ) }
    dend_75 { pt3dadd( 17.3162, -35.618, 15.5526, 0.81 ) }
    dend_75 { pt3dadd( 15.7207, -36.4798, 15.5428, 0.22 ) }
    dend_75 { pt3dadd( 14.0294, -37.4823, 15.37, 0.22 ) }
    dend_75 { pt3dadd( 13.2367, -37.9797, 15.2074, 0.88 ) }
    dend_75 { pt3dadd( 12.1438, -38.682, 14.7701, 0.15 ) }
    dend_75 { pt3dadd( 10.6041, -39.6786, 13.8202, 0.15 ) }
    dend_75 { pt3dadd( 8.32409, -41.1898, 12.0231, 0.37 ) }
    dend_75 { pt3dadd( 7.53084, -41.7252, 11.2393, 1.4 ) }
    dend_75 { pt3dadd( 6.36057, -42.4952, 9.77979, 1.32 ) }
    dend_75 { pt3dadd( 4.75107, -43.5675, 7.3439, 0.44 ) }
    dend_75 { pt3dadd( 3.44579, -44.471, 5.09893, 0.22 ) }
    dend_75 { pt3dadd( 2.99143, -44.82, 4.21466, 0.88 ) }
    dend_75 { pt3dadd( 2.09104, -45.6051, 2.3278, 0.07 ) }
    dend_75 { pt3dadd( 0.729428, -46.9904, -0.846574, 0.95 ) }
    dend_75 { pt3dadd( 0.143096, -47.7004, -2.323, 0.15 ) }
    dend_75 { pt3dadd( -0.173733, -48.1408, -3.14421, 0.88 ) }
    dend_75 { pt3dadd( -1.30572, -49.8574, -5.95425, 0.07 ) }
    dend_75 { pt3dadd( -1.93697, -50.8464, -7.38195, 0.07 ) }
    dend_75 { pt3dadd( -2.30539, -51.4392, -8.12479, 0.07 ) }
    dend_75 { pt3dadd( -3.42984, -53.2366, -10.0934, 1.03 ) }
    dend_75 { pt3dadd( -3.67991, -53.616, -10.4872, 1.25 ) }
    dend_75 { pt3dadd( -5.1068, -55.6836, -12.7779, 0.29 ) }
    dend_75 { pt3dadd( -6.87736, -58.1399, -15.4513, 0.29 ) }
    dend_75 { pt3dadd( -7.21219, -58.5842, -15.9381, 0.29 ) }
    dend_75 { pt3dadd( -7.78096, -59.3386, -16.7583, 0.88 ) }
    dend_75 { pt3dadd( -8.13352, -59.8122, -17.2675, 0.88 ) }
    dend_75 { pt3dadd( -10.5113, -63.056, -20.9181, 0.07 ) }
    dend_75 { pt3dadd( -11.021, -63.753, -21.7631, 0.73 ) }
    // Section: dend_47, id: dend_47, parent: dend_41 (entry count 60/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 0.234495, 28.5535, -3.85185, 0.66 ) }
    dend_47 { pt3dadd( 0.370145, 29.7387, -4.77769, 0.66 ) }
    dend_47 { pt3dadd( 0.466012, 30.5749, -5.4051, 0.15 ) }
    dend_47 { pt3dadd( 0.588295, 31.5931, -6.17357, 0.51 ) }
    dend_47 { pt3dadd( 0.6705, 32.1018, -6.59261, 0.95 ) }
    dend_47 { pt3dadd( 0.886504, 32.9883, -7.46135, 1.1 ) }
    dend_47 { pt3dadd( 1.20202, 33.9148, -8.49661, 0.73 ) }
    dend_47 { pt3dadd( 1.57174, 34.7136, -9.4421, 0.44 ) }
    dend_47 { pt3dadd( 1.96086, 35.4535, -10.379, 0.88 ) }
    dend_47 { pt3dadd( 2.58025, 36.5569, -11.8739, 0.88 ) }
    dend_47 { pt3dadd( 3.33303, 37.8014, -13.7279, 1.03 ) }
    dend_47 { pt3dadd( 3.92147, 38.659, -15.1498, 1.03 ) }
    dend_47 { pt3dadd( 4.13916, 38.9157, -15.6428, 1.25 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 73/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 0.234495, 28.5535, -3.85185, 0.66 ) }
    dend_42 { pt3dadd( 1.18009, 29.6923, -4.13383, 0.66 ) }
    dend_42 { pt3dadd( 1.6376, 30.2433, -4.27025, 0.88 ) }
    dend_42 { pt3dadd( 2.24883, 30.9794, -4.45252, 0.66 ) }
    dend_42 { pt3dadd( 2.83014, 31.6794, -4.62586, 0.95 ) }
    dend_42 { pt3dadd( 3.25504, 32.1911, -4.75257, 1.32 ) }
    // Section: dend_38, id: dend_38, parent: dend_34 (entry count 79/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 0.14585, 22.736, 1.50638, 0.29 ) }
    dend_38 { pt3dadd( 0.758582, 22.4873, 2.35863, 0.29 ) }
    dend_38 { pt3dadd( 1.3584, 22.2626, 3.36183, 0.29 ) }
    dend_38 { pt3dadd( 2.53651, 21.9114, 5.49681, 0.29 ) }
    dend_38 { pt3dadd( 3.00011, 21.8162, 6.37261, 0.51 ) }
    dend_38 { pt3dadd( 3.3926, 21.7747, 7.0939, 0.51 ) }
    dend_38 { pt3dadd( 3.97876, 21.7669, 8.05623, 0.51 ) }
    dend_38 { pt3dadd( 4.72324, 21.8565, 9.20282, 0.51 ) }
    dend_38 { pt3dadd( 5.01558, 21.9445, 9.61687, 0.95 ) }
    dend_38 { pt3dadd( 5.38807, 22.1182, 10.1448, 1.1 ) }
    dend_38 { pt3dadd( 6.14066, 22.4646, 11.1311, 0.59 ) }
    dend_38 { pt3dadd( 7.24256, 22.8494, 12.43, 0.37 ) }
    dend_38 { pt3dadd( 7.93482, 23.0016, 13.1558, 0.37 ) }
    dend_38 { pt3dadd( 8.4065, 23.0751, 13.5831, 0.29 ) }
    dend_38 { pt3dadd( 10.237, 23.3173, 15.111, 0.29 ) }
    dend_38 { pt3dadd( 11.4638, 23.4726, 16.0413, 0.51 ) }
    dend_38 { pt3dadd( 13.154, 23.6898, 17.1767, 0.51 ) }
    dend_38 { pt3dadd( 14.9505, 23.9339, 18.2348, 0.51 ) }
    dend_38 { pt3dadd( 16.7019, 24.1846, 19.1712, 0.51 ) }
    dend_38 { pt3dadd( 17.9147, 24.3863, 19.8154, 0.44 ) }
    dend_38 { pt3dadd( 18.8503, 24.5722, 20.2728, 0.73 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_38 { pt3dadd( 19.7623, 24.7762, 20.7401, 0.59 ) }
    dend_38 { pt3dadd( 20.4209, 24.9291, 21.0911, 0.81 ) }
    dend_38 { pt3dadd( 22.2611, 25.2933, 22.2142, 0.37 ) }
    dend_38 { pt3dadd( 23.8388, 25.5629, 23.3332, 0.37 ) }
    dend_38 { pt3dadd( 24.4721, 25.6502, 23.8348, 0.73 ) }
    dend_38 { pt3dadd( 25.0555, 25.7103, 24.3508, 0.73 ) }
    dend_38 { pt3dadd( 26.0117, 25.7647, 25.2831, 0.44 ) }
    dend_38 { pt3dadd( 27.0588, 25.7521, 26.3177, 0.73 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 8/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 0.14585, 22.736, 1.50638, 0.88 ) }
    dend_35 { pt3dadd( -0.916118, 23.0015, 2.76513, 0.88 ) }
    dend_35 { pt3dadd( -1.51942, 23.2311, 3.46583, 1.03 ) }
    dend_35 { pt3dadd( -2.41243, 23.6415, 4.38622, 0.59 ) }
    dend_35 { pt3dadd( -3.55759, 24.1968, 5.5114, 0.59 ) }
    dend_35 { pt3dadd( -4.49609, 24.693, 6.37333, 0.59 ) }
    dend_35 { pt3dadd( -5.63554, 25.3066, 7.35279, 0.73 ) }
    dend_35 { pt3dadd( -6.17174, 25.6074, 7.74726, 0.81 ) }
    dend_35 { pt3dadd( -7.43564, 26.2689, 8.51927, 0.73 ) }
    dend_35 { pt3dadd( -9.15224, 26.9889, 9.24794, 0.88 ) }
    dend_35 { pt3dadd( -10.4822, 27.4045, 9.59848, 0.51 ) }
    dend_35 { pt3dadd( -11.3157, 27.6005, 9.73115, 0.66 ) }
    dend_35 { pt3dadd( -12.7936, 27.8844, 9.87784, 0.66 ) }
    dend_35 { pt3dadd( -14.2965, 28.1717, 10.0166, 1.1 ) }
    dend_35 { pt3dadd( -16.054, 28.5245, 10.1432, 0.66 ) }
    dend_35 { pt3dadd( -16.6291, 28.6533, 10.1718, 0.66 ) }
    dend_35 { pt3dadd( -17.6462, 28.9006, 10.2676, 0.51 ) }
    dend_35 { pt3dadd( -18.977, 29.2799, 10.4321, 0.44 ) }
    dend_35 { pt3dadd( -20.4503, 29.7827, 10.6905, 1.25 ) }
    dend_35 { pt3dadd( -20.9443, 29.9665, 10.7981, 1.25 ) }
    dend_35 { pt3dadd( -21.6506, 30.2219, 10.972, 0.88 ) }
    dend_35 { pt3dadd( -22.8022, 30.5059, 11.1676, 0.59 ) }
    dend_35 { pt3dadd( -23.8132, 30.6041, 11.257, 0.51 ) }
    dend_35 { pt3dadd( -24.4966, 30.579, 11.2706, 0.51 ) }
    dend_35 { pt3dadd( -25.0947, 30.5171, 11.2577, 0.51 ) }
    dend_35 { pt3dadd( -25.6867, 30.4705, 11.2647, 0.81 ) }
    dend_35 { pt3dadd( -26.9876, 30.4839, 11.3854, 0.73 ) }
    dend_35 { pt3dadd( -27.7835, 30.578, 11.5219, 0.73 ) }
    dend_35 { pt3dadd( -28.5302, 30.7376, 11.6977, 0.73 ) }
    dend_35 { pt3dadd( -29.8615, 31.1765, 12.0583, 0.73 ) }
    dend_35 { pt3dadd( -31.3781, 31.8394, 12.4887, 0.51 ) }
    dend_35 { pt3dadd( -33.1748, 32.8295, 13.0304, 0.59 ) }
    dend_35 { pt3dadd( -34.0048, 33.413, 13.2684, 0.37 ) }
    dend_35 { pt3dadd( -34.3763, 33.7307, 13.3564, 0.95 ) }
    dend_35 { pt3dadd( -35.3772, 34.7673, 13.5365, 0.51 ) }
    dend_35 { pt3dadd( -35.8573, 35.3936, 13.5955, 0.51 ) }
    dend_35 { pt3dadd( -36.1721, 35.9016, 13.5906, 0.81 ) }
    dend_35 { pt3dadd( -37.1382, 37.7011, 13.3434, 0.37 ) }
    dend_35 { pt3dadd( -37.6103, 38.6237, 13.1191, 0.88 ) }
    dend_35 { pt3dadd( -38.0322, 39.4674, 12.8576, 0.44 ) }
    dend_35 { pt3dadd( -38.5874, 40.5444, 12.4016, 0.81 ) }
    dend_35 { pt3dadd( -39.2091, 41.8065, 11.8319, 0.37 ) }
    dend_35 { pt3dadd( -39.7105, 42.8544, 11.2885, 0.37 ) }
    dend_35 { pt3dadd( -40.1677, 43.8383, 10.6614, 0.37 ) }
    dend_35 { pt3dadd( -40.3934, 44.2705, 10.316, 1.03 ) }
    dend_35 { pt3dadd( -41.0549, 45.3034, 9.26532, 1.4 ) }
    // Section: dend_29, id: dend_29, parent: dend_25 (entry count 54/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 36.1173, 60.4341, -40.0843, 0.59 ) }
    dend_29 { pt3dadd( 35.9599, 60.8948, -41.059, 0.59 ) }
    dend_29 { pt3dadd( 35.9016, 61.639, -42.7221, 0.59 ) }
    dend_29 { pt3dadd( 35.9719, 61.8807, -43.3246, 0.37 ) }
    dend_29 { pt3dadd( 36.0165, 61.9506, -43.521, 0.29 ) }
    dend_29 { pt3dadd( 36.201, 62.1358, -44.126, 0.29 ) }
    dend_29 { pt3dadd( 36.3859, 62.2689, -44.6625, 0.29 ) }
    dend_29 { pt3dadd( 36.7127, 62.3163, -45.428, 0.29 ) }
    dend_29 { pt3dadd( 36.9853, 62.3148, -46.1143, 0.29 ) }
    dend_29 { pt3dadd( 37.053, 62.3271, -46.4198, 0.29 ) }
    dend_29 { pt3dadd( 37.0691, 62.3461, -46.7329, 0.29 ) }
    dend_29 { pt3dadd( 37.0333, 62.3888, -47.2194, 0.29 ) }
    dend_29 { pt3dadd( 36.7357, 62.5528, -48.8976, 0.29 ) }
    dend_29 { pt3dadd( 36.2802, 62.7404, -50.5144, 0.29 ) }
    dend_29 { pt3dadd( 35.8697, 62.916, -51.8327, 0.29 ) }
    dend_29 { pt3dadd( 35.474, 63.1038, -53.0624, 0.29 ) }
    dend_29 { pt3dadd( 35.1606, 63.2722, -54.0301, 0.29 ) }
    dend_29 { pt3dadd( 34.8135, 63.479, -55.1183, 0.29 ) }
    dend_29 { pt3dadd( 34.0706, 63.8085, -57.2906, 0.29 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 73/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 36.1173, 60.4341, -40.0843, 0.44 ) }
    dend_26 { pt3dadd( 35.3134, 60.8388, -41.3519, 0.44 ) }
    dend_26 { pt3dadd( 33.6718, 61.9704, -44.3628, 0.44 ) }
    dend_26 { pt3dadd( 33.1048, 62.4973, -45.7584, 0.44 ) }
    dend_26 { pt3dadd( 32.587, 63.1075, -47.3268, 0.59 ) }
    dend_26 { pt3dadd( 31.9537, 63.8537, -49.2446, 0.59 ) }
    dend_26 { pt3dadd( 31.7365, 64.1096, -49.9025, 0.37 ) }
    dend_26 { pt3dadd( 31.2113, 64.9978, -52.0276, 0.59 ) }
    dend_26 { pt3dadd( 30.8564, 66.2558, -54.7208, 0.59 ) }
    dend_26 { pt3dadd( 30.8473, 66.5707, -55.3872, 0.73 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 83/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -23.7802, 5.47831, -31.9912, 0.59 ) }
    dend_19 { pt3dadd( -24.4198, 5.93937, -32.5902, 0.59 ) }
    dend_19 { pt3dadd( -24.6589, 6.1019, -32.7966, 0.44 ) }
    dend_19 { pt3dadd( -25.0839, 6.39081, -33.1636, 0.59 ) }
    dend_19 { pt3dadd( -25.6494, 6.77522, -33.6518, 0.29 ) }
    dend_19 { pt3dadd( -26.2832, 7.20611, -34.1991, 0.29 ) }
    dend_19 { pt3dadd( -26.7564, 7.52778, -34.6077, 0.29 ) }
    dend_19 { pt3dadd( -27.153, 7.76462, -34.9, 0.15 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 91/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -23.7802, 5.47831, -31.9912, 0.51 ) }
    dend_18 { pt3dadd( -23.6743, 5.79819, -32.9236, 0.51 ) }
    dend_18 { pt3dadd( -23.3219, 6.49782, -35.1628, 0.51 ) }
    dend_18 { pt3dadd( -23.0552, 6.89956, -36.4882, 0.66 ) }
    dend_18 { pt3dadd( -22.6333, 7.39553, -38.2051, 0.66 ) }
    dend_18 { pt3dadd( -22.1001, 7.91104, -40.1355, 0.66 ) }
    dend_18 { pt3dadd( -21.1126, 8.68789, -43.5217, 0.66 ) }
    dend_18 { pt3dadd( -20.6589, 8.93518, -45.0098, 0.66 ) }
    dend_18 { pt3dadd( -20.2434, 9.04313, -46.3379, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_18 { pt3dadd( -19.8861, 9.03464, -47.513, 0.66 ) }
    dend_18 { pt3dadd( -19.483, 8.90574, -49.0171, 0.51 ) }
    dend_18 { pt3dadd( -19.2198, 8.69093, -50.4658, 0.51 ) }
    dend_18 { pt3dadd( -19.1699, 8.41795, -52.0685, 0.51 ) }
    dend_18 { pt3dadd( -19.3695, 8.09607, -53.9587, 0.22 ) }
    dend_18 { pt3dadd( -19.862, 7.78098, -55.9338, 0.51 ) }
    dend_18 { pt3dadd( -20.4911, 7.58767, -57.4956, 0.59 ) }
    dend_18 { pt3dadd( -21.252, 7.48637, -58.8535, 1.18 ) }
    dend_18 { pt3dadd( -22.3904, 7.45856, -60.5554, 0.44 ) }
    dend_18 { pt3dadd( -22.9302, 7.48764, -61.289, 0.73 ) }
    dend_18 { pt3dadd( -23.7992, 7.59578, -62.3692, 0.44 ) }
    dend_18 { pt3dadd( -24.7508, 7.76245, -63.5521, 0.44 ) }
    dend_18 { pt3dadd( -25.6184, 7.89847, -64.6738, 0.44 ) }
    dend_18 { pt3dadd( -26.6998, 8.02967, -66.1879, 0.81 ) }
    dend_18 { pt3dadd( -27.8076, 8.12931, -67.7068, 0.44 ) }
    dend_18 { pt3dadd( -28.1335, 8.15499, -68.1433, 0.44 ) }
    dend_18 { pt3dadd( -29.2558, 8.25455, -69.5392, 1.03 ) }
    dend_18 { pt3dadd( -29.9278, 8.29827, -70.3106, 0.44 ) }
    dend_18 { pt3dadd( -30.943, 8.35311, -71.3014, 0.44 ) }
    dend_18 { pt3dadd( -31.6668, 8.42396, -71.8599, 0.73 ) }
    dend_18 { pt3dadd( -32.3557, 8.54612, -72.3049, 0.51 ) }
    dend_18 { pt3dadd( -33.3664, 8.88731, -72.9299, 0.51 ) }
    dend_18 { pt3dadd( -34.4421, 9.53143, -73.4565, 0.51 ) }
    dend_18 { pt3dadd( -34.9885, 10.1411, -73.679, 0.51 ) }
    dend_18 { pt3dadd( -35.6308, 11.3657, -73.8437, 0.29 ) }
    dend_18 { pt3dadd( -36.0047, 12.5772, -73.816, 0.51 ) }
    dend_18 { pt3dadd( -36.1771, 13.811, -73.5841, 0.07 ) }
    dend_18 { pt3dadd( -36.2529, 15.6776, -73.006, 0.59 ) }
    dend_18 { pt3dadd( -36.2132, 16.9795, -72.4943, 0.07 ) }
    dend_18 { pt3dadd( -36.1606, 17.4668, -72.2773, 0.44 ) }
    dend_18 { pt3dadd( -35.9833, 18.4559, -71.7693, 0.07 ) }
    dend_18 { pt3dadd( -35.6794, 19.7608, -70.9903, 0.37 ) }
    dend_18 { pt3dadd( -35.6137, 20.0096, -70.8164, 0.66 ) }
    dend_18 { pt3dadd( -35.4706, 20.4964, -70.4758, 0.66 ) }
    dend_18 { pt3dadd( -35.4037, 20.7233, -70.2761, 0.29 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 35/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -29.9918, -17.3874, 46.031, 0.29 ) }
    dend_10 { pt3dadd( -30.1787, -17.5521, 46.3043, 0.29 ) }
    dend_10 { pt3dadd( -30.5256, -17.8989, 46.8231, 1.25 ) }
    dend_10 { pt3dadd( -30.912, -18.3507, 47.3946, 0.88 ) }
    dend_10 { pt3dadd( -31.4461, -19.0686, 48.1844, 1.03 ) }
    dend_10 { pt3dadd( -31.9653, -19.8379, 48.9676, 0.51 ) }
    dend_10 { pt3dadd( -32.2703, -20.3615, 49.4467, 0.51 ) }
    dend_10 { pt3dadd( -32.4284, -20.7091, 49.7254, 0.51 ) }
    dend_10 { pt3dadd( -32.6696, -21.3968, 50.1836, 1.1 ) }
    dend_10 { pt3dadd( -32.811, -21.8534, 50.4266, 0.44 ) }
    dend_10 { pt3dadd( -33.0445, -22.611, 50.7783, 0.95 ) }
    dend_10 { pt3dadd( -33.3083, -23.3953, 51.1672, 0.37 ) }
    dend_10 { pt3dadd( -33.4424, -23.78, 51.4012, 0.59 ) }
    dend_10 { pt3dadd( -33.6189, -24.3078, 51.7919, 0.15 ) }
    dend_10 { pt3dadd( -33.8152, -24.9099, 52.3, 0.66 ) }
    dend_10 { pt3dadd( -33.9843, -25.4534, 52.8005, 0.37 ) }
    dend_10 { pt3dadd( -34.2045, -26.2299, 53.5599, 0.15 ) }
    dend_10 { pt3dadd( -34.332, -26.7476, 54.0951, 0.81 ) }
    dend_10 { pt3dadd( -34.4162, -27.2188, 54.5645, 0.88 ) }
    dend_10 { pt3dadd( -34.4636, -27.5982, 54.9309, 0.88 ) }
    dend_10 { pt3dadd( -34.5339, -28.32, 55.5706, 0.29 ) }
    dend_10 { pt3dadd( -34.5968, -28.9203, 56.0461, 0.29 ) }
    dend_10 { pt3dadd( -34.6779, -29.5, 56.4663, 0.81 ) }
    dend_10 { pt3dadd( -34.8003, -30.0906, 56.8693, 0.37 ) }
    dend_10 { pt3dadd( -35.0701, -31.0361, 57.4945, 0.95 ) }
    dend_10 { pt3dadd( -35.3931, -31.8591, 58.0362, 0.07 ) }
    dend_10 { pt3dadd( -35.6092, -32.2754, 58.3279, 0.66 ) }
    dend_10 { pt3dadd( -35.8187, -32.6179, 58.5775, 0.88 ) }
    dend_10 { pt3dadd( -36.0968, -33.0265, 58.885, 1.03 ) }
    dend_10 { pt3dadd( -36.3657, -33.3987, 59.1702, 0.81 ) }
    dend_10 { pt3dadd( -36.8267, -34.0803, 59.7043, 0.22 ) }
    dend_10 { pt3dadd( -37.3717, -35.0153, 60.4976, 0.22 ) }
    dend_10 { pt3dadd( -37.5035, -35.3224, 60.7624, 0.66 ) }
    dend_10 { pt3dadd( -37.6076, -35.7614, 61.1427, 1.25 ) }
    dend_10 { pt3dadd( -37.6189, -35.8938, 61.2529, 1.4 ) }
    dend_10 { pt3dadd( -37.6004, -36.6161, 61.8452, 0.66 ) }
    dend_10 { pt3dadd( -37.5545, -37.1424, 62.2955, 0.22 ) }
    dend_10 { pt3dadd( -37.504, -37.6252, 62.6845, 0.81 ) }
    dend_10 { pt3dadd( -37.4209, -38.6183, 63.5008, 0.29 ) }
    dend_10 { pt3dadd( -37.4006, -38.9663, 63.7864, 0.29 ) }
    dend_10 { pt3dadd( -37.3727, -39.7393, 64.4623, 0.29 ) }
    dend_10 { pt3dadd( -37.3692, -40.7496, 65.3646, 1.32 ) }
    dend_10 { pt3dadd( -37.4012, -41.7809, 66.3678, 0.15 ) }
    dend_10 { pt3dadd( -37.442, -42.2225, 66.8139, 0.15 ) }
    dend_10 { pt3dadd( -37.5178, -42.6955, 67.2909, 0.73 ) }
    dend_10 { pt3dadd( -37.7824, -43.7931, 68.4368, 0.37 ) }
    dend_10 { pt3dadd( -37.8562, -44.0286, 68.6813, 0.37 ) }
    dend_10 { pt3dadd( -38.1801, -44.8731, 69.5972, 0.88 ) }
    dend_10 { pt3dadd( -38.4024, -45.3528, 70.1675, 1.03 ) }
    dend_10 { pt3dadd( -38.509, -45.5757, 70.4117, 1.03 ) }
    dend_10 { pt3dadd( -38.9397, -46.4412, 71.2664, 0.15 ) }
    dend_10 { pt3dadd( -39.048, -46.6451, 71.4398, 0.15 ) }
    dend_10 { pt3dadd( -39.4269, -47.3681, 72.0495, 0.81 ) }
    dend_10 { pt3dadd( -39.7018, -47.9249, 72.4921, 0.81 ) }
    dend_10 { pt3dadd( -40.0582, -48.7155, 73.132, 0.22 ) }
    dend_10 { pt3dadd( -40.1916, -49.0183, 73.3649, 0.22 ) }
    dend_10 { pt3dadd( -40.3475, -49.3625, 73.5779, 0.44 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 92/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -29.9918, -17.3874, 46.031, 0.44 ) }
    dend_7 { pt3dadd( -30.439, -16.3132, 47.2372, 0.44 ) }
    dend_7 { pt3dadd( -31.3135, -15.1345, 48.5797, 0.73 ) }
    dend_7 { pt3dadd( -31.6907, -14.7302, 49.0532, 1.25 ) }
    dend_7 { pt3dadd( -32.3365, -14.213, 49.7037, 1.4 ) }
    dend_7 { pt3dadd( -33.4682, -13.499, 50.6771, 0.66 ) }
    dend_7 { pt3dadd( -34.5246, -13.0458, 51.4967, 0.59 ) }
    dend_7 { pt3dadd( -36.1424, -12.657, 52.4789, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_7 { pt3dadd( -36.6038, -12.5997, 52.716, 0.73 ) }
    dend_7 { pt3dadd( -37.8884, -12.5598, 53.4014, 0.51 ) }
    dend_7 { pt3dadd( -38.5139, -12.5933, 53.7889, 0.51 ) }
    dend_7 { pt3dadd( -40.3291, -12.8374, 55.0102, 0.22 ) }
    dend_7 { pt3dadd( -40.9193, -12.964, 55.4186, 0.22 ) }
    dend_7 { pt3dadd( -41.6288, -13.1806, 56.0166, 0.22 ) }
    dend_7 { pt3dadd( -42.472, -13.525, 57.093, 1.03 ) }
    dend_7 { pt3dadd( -43.0186, -13.9114, 58.5565, 1.03 ) }
    dend_7 { pt3dadd( -43.0928, -14.0602, 59.1527, 1.03 ) }
    dend_7 { pt3dadd( -43.0852, -14.3017, 60.1641, 0.44 ) }
    dend_7 { pt3dadd( -42.9696, -14.7246, 61.9836, 0.44 ) }
    dend_7 { pt3dadd( -42.6916, -15.2433, 64.3349, 0.66 ) }
    dend_7 { pt3dadd( -42.3062, -15.7942, 66.8418, 0.73 ) }
    dend_7 { pt3dadd( -41.7745, -16.4238, 69.8238, 0.66 ) }
    dend_7 { pt3dadd( -41.3381, -16.8633, 72.1734, 0.66 ) }
    dend_7 { pt3dadd( -41.1336, -17.0432, 73.3219, 0.66 ) }
    dend_7 { pt3dadd( -41.0298, -17.1383, 73.9496, 0.88 ) }
    // Section: dend_99, id: dend_99, parent: dend_97 (entry count 17/100)
    dend_99 { pt3dclear() }
    dend_99 { pt3dadd( 0.394433, 27.1405, 35.9742, 0.22 ) }
    dend_99 { pt3dadd( -0.608537, 26.5175, 36.9347, 0.22 ) }
    dend_99 { pt3dadd( -1.05921, 26.2376, 37.3663, 0.22 ) }
    dend_99 { pt3dadd( -1.89589, 25.7179, 38.1676, 0.73 ) }
    dend_99 { pt3dadd( -2.39948, 25.4051, 38.6498, 0.73 ) }
    dend_99 { pt3dadd( -3.37235, 24.8008, 39.5815, 0.37 ) }
    // Section: dend_98, id: dend_98, parent: dend_97 (entry count 23/100)
    dend_98 { pt3dclear() }
    dend_98 { pt3dadd( 0.394433, 27.1405, 35.9742, 0.15 ) }
    dend_98 { pt3dadd( 0.257927, 27.3933, 36.6395, 0.15 ) }
    dend_98 { pt3dadd( 0.0946236, 27.6454, 37.2786, 0.15 ) }
    dend_98 { pt3dadd( -0.238856, 28.0692, 38.2538, 0.15 ) }
    dend_98 { pt3dadd( -0.630796, 28.5215, 39.1774, 0.37 ) }
    dend_98 { pt3dadd( -0.953447, 28.8669, 39.7897, 0.37 ) }
    dend_98 { pt3dadd( -1.71264, 29.6244, 40.9607, 0.37 ) }
    dend_98 { pt3dadd( -2.63854, 30.3943, 42.0123, 0.37 ) }
    dend_98 { pt3dadd( -3.18879, 30.8123, 42.3635, 0.73 ) }
    dend_98 { pt3dadd( -3.68817, 31.2002, 42.5803, 0.37 ) }
    dend_98 { pt3dadd( -4.19968, 31.6106, 42.7466, 0.37 ) }
    dend_98 { pt3dadd( -4.81854, 32.117, 42.9163, 0.37 ) }
    dend_98 { pt3dadd( -5.5703, 32.7673, 43.1114, 0.95 ) }
    dend_98 { pt3dadd( -6.47708, 33.6234, 43.488, 0.37 ) }
    dend_98 { pt3dadd( -7.18241, 34.3543, 43.8086, 0.37 ) }
    dend_98 { pt3dadd( -7.55449, 34.7908, 44.0176, 0.29 ) }
    dend_98 { pt3dadd( -7.99428, 35.4156, 44.3761, 0.22 ) }
    dend_98 { pt3dadd( -8.23696, 35.8789, 44.6921, 0.22 ) }
    dend_98 { pt3dadd( -8.5373, 36.667, 45.3002, 0.22 ) }
    dend_98 { pt3dadd( -8.71159, 37.2333, 45.8537, 0.22 ) }
    dend_98 { pt3dadd( -8.8783, 37.8987, 46.6527, 0.22 ) }
    dend_98 { pt3dadd( -8.93662, 38.3578, 47.4103, 0.22 ) }
    dend_98 { pt3dadd( -8.94409, 38.7724, 48.1967, 0.22 ) }
    dend_98 { pt3dadd( -8.93253, 38.9765, 48.6728, 0.22 ) }
    dend_98 { pt3dadd( -8.85616, 39.3796, 49.9245, 0.22 ) }
    dend_98 { pt3dadd( -8.78869, 39.5752, 50.9205, 0.22 ) }
    dend_98 { pt3dadd( -8.75037, 39.6384, 51.7599, 0.22 ) }
    // Section: dend_96, id: dend_96, parent: dend_92 (entry count 50/100)
    dend_96 { pt3dclear() }
    dend_96 { pt3dadd( 21.5512, 14.4454, 39.3459, 0.44 ) }
    dend_96 { pt3dadd( 22.63, 15.475, 39.6122, 0.44 ) }
    dend_96 { pt3dadd( 22.8835, 15.7769, 39.6603, 0.44 ) }
    dend_96 { pt3dadd( 23.1103, 16.1367, 39.6866, 0.44 ) }
    dend_96 { pt3dadd( 23.4429, 16.9341, 39.7212, 0.44 ) }
    dend_96 { pt3dadd( 23.577, 17.4804, 39.7177, 0.95 ) }
    dend_96 { pt3dadd( 23.7235, 18.3729, 39.714, 0.29 ) }
    dend_96 { pt3dadd( 23.767, 19.0129, 39.6832, 0.29 ) }
    dend_96 { pt3dadd( 23.8022, 19.9043, 39.6522, 0.66 ) }
    dend_96 { pt3dadd( 23.8652, 20.9754, 39.6266, 1.1 ) }
    dend_96 { pt3dadd( 24.0221, 22.3957, 39.6649, 0.66 ) }
    dend_96 { pt3dadd( 24.2124, 23.3457, 39.808, 0.66 ) }
    dend_96 { pt3dadd( 24.4867, 24.2113, 40.115, 0.81 ) }
    dend_96 { pt3dadd( 24.776, 24.7876, 40.4231, 0.59 ) }
    dend_96 { pt3dadd( 25.2817, 25.5146, 40.9319, 0.59 ) }
    dend_96 { pt3dadd( 26.0946, 26.4488, 41.6845, 0.59 ) }
    dend_96 { pt3dadd( 27.1792, 27.553, 42.686, 0.81 ) }
    dend_96 { pt3dadd( 28.2955, 28.6483, 43.6681, 0.51 ) }
    dend_96 { pt3dadd( 29.1364, 29.4944, 44.3976, 0.51 ) }
    dend_96 { pt3dadd( 29.7645, 30.1672, 44.9137, 0.51 ) }
    dend_96 { pt3dadd( 30.3102, 30.7991, 45.3178, 0.51 ) }
    dend_96 { pt3dadd( 30.7848, 31.3492, 45.6155, 0.51 ) }
    dend_96 { pt3dadd( 31.4462, 32.0733, 45.9427, 0.66 ) }
    dend_96 { pt3dadd( 32.2966, 32.9999, 46.3125, 0.29 ) }
    dend_96 { pt3dadd( 32.6746, 33.4207, 46.4884, 0.66 ) }
    dend_96 { pt3dadd( 33.1948, 33.9224, 46.7115, 0.44 ) }
    dend_96 { pt3dadd( 34.6574, 35.0656, 47.2412, 0.59 ) }
    dend_96 { pt3dadd( 35.3384, 35.4733, 47.428, 0.59 ) }
    dend_96 { pt3dadd( 35.6633, 35.6183, 47.4944, 0.59 ) }
    dend_96 { pt3dadd( 36.4864, 35.8918, 47.602, 0.66 ) }
    dend_96 { pt3dadd( 37.5572, 36.1593, 47.7021, 0.51 ) }
    dend_96 { pt3dadd( 38.5329, 36.3485, 47.7864, 0.51 ) }
    dend_96 { pt3dadd( 39.3341, 36.4513, 47.8371, 0.73 ) }
    dend_96 { pt3dadd( 40.454, 36.5375, 47.9606, 0.29 ) }
    dend_96 { pt3dadd( 41.0162, 36.5523, 48.0452, 0.29 ) }
    dend_96 { pt3dadd( 41.643, 36.5538, 48.1583, 0.88 ) }
    dend_96 { pt3dadd( 43.1761, 36.5388, 48.4894, 0.29 ) }
    dend_96 { pt3dadd( 44.0014, 36.5218, 48.7047, 0.29 ) }
    dend_96 { pt3dadd( 44.8566, 36.4908, 48.9423, 0.29 ) }
    dend_96 { pt3dadd( 45.5174, 36.4541, 49.1334, 0.59 ) }
    dend_96 { pt3dadd( 46.9695, 36.3968, 49.5382, 0.22 ) }
    // Section: dend_93, id: dend_93, parent: dend_92 (entry count 91/100)
    dend_93 { pt3dclear() }
    dend_93 { pt3dadd( 21.5512, 14.4454, 39.3459, 0.44 ) }
    dend_93 { pt3dadd( 21.9118, 13.8865, 40.4137, 0.44 ) }
    dend_93 { pt3dadd( 22.4152, 13.4193, 41.4221, 0.44 ) }
    dend_93 { pt3dadd( 23.1969, 12.846, 42.668, 0.73 ) }
    dend_93 { pt3dadd( 23.5058, 12.6257, 43.1015, 0.73 ) }
    dend_93 { pt3dadd( 24.0237, 12.2284, 43.782, 0.73 ) }
    dend_93 { pt3dadd( 24.6567, 11.683, 44.5927, 0.44 ) }
    dend_93 { pt3dadd( 25.3068, 11.1653, 45.2407, 0.44 ) }
    dend_93 { pt3dadd( 25.7595, 10.7551, 45.6029, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_93 { pt3dadd( 26.1854, 10.3086, 45.9529, 0.44 ) }
    dend_93 { pt3dadd( 26.5647, 9.84315, 46.3033, 0.95 ) }
    dend_93 { pt3dadd( 26.9113, 9.34917, 46.6077, 0.95 ) }
    dend_93 { pt3dadd( 27.3064, 8.69793, 47.011, 0.66 ) }
    dend_93 { pt3dadd( 28.0054, 7.4154, 47.8871, 0.37 ) }
    dend_93 { pt3dadd( 28.6729, 6.10022, 48.8848, 0.66 ) }
    dend_93 { pt3dadd( 28.9063, 5.63918, 49.258, 0.66 ) }
    dend_93 { pt3dadd( 29.3709, 4.76361, 50.0413, 0.44 ) }
    dend_93 { pt3dadd( 29.9916, 3.62031, 51.1217, 0.44 ) }
    dend_93 { pt3dadd( 30.2614, 3.07464, 51.6075, 0.44 ) }
    dend_93 { pt3dadd( 30.4569, 2.59163, 51.9798, 0.44 ) }
    dend_93 { pt3dadd( 30.7129, 1.84859, 52.4403, 0.44 ) }
    dend_93 { pt3dadd( 30.9513, 1.05598, 52.8973, 0.66 ) }
    dend_93 { pt3dadd( 31.0623, 0.697257, 53.1066, 0.66 ) }
    dend_93 { pt3dadd( 31.4745, -0.390507, 53.6682, 0.29 ) }
    dend_93 { pt3dadd( 31.7486, -0.913449, 53.9805, 0.29 ) }
    dend_93 { pt3dadd( 32.0062, -1.29591, 54.2676, 0.37 ) }
    dend_93 { pt3dadd( 32.4226, -1.80428, 54.6989, 0.37 ) }
    dend_93 { pt3dadd( 33.0183, -2.48941, 55.3002, 0.37 ) }
    dend_93 { pt3dadd( 33.7872, -3.26823, 56.0779, 0.81 ) }
    dend_93 { pt3dadd( 34.7515, -4.0534, 57.0253, 0.51 ) }
    dend_93 { pt3dadd( 35.4579, -4.53163, 57.6727, 0.73 ) }
    dend_93 { pt3dadd( 36.076, -4.88143, 58.2192, 0.81 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 23/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 4.13916, 38.9157, -15.6428, 0.29 ) }
    dend_49 { pt3dadd( 4.28545, 39.0384, -14.5067, 0.29 ) }
    dend_49 { pt3dadd( 4.33882, 39.0062, -13.7548, 0.29 ) }
    dend_49 { pt3dadd( 4.34275, 38.9627, -13.5837, 0.59 ) }
    dend_49 { pt3dadd( 4.37593, 38.5052, -12.5743, 0.66 ) }
    dend_49 { pt3dadd( 4.39061, 38.3497, -12.3182, 0.66 ) }
    dend_49 { pt3dadd( 4.42882, 37.9447, -11.6517, 0.44 ) }
    dend_49 { pt3dadd( 4.44171, 37.5188, -11.1355, 0.44 ) }
    dend_49 { pt3dadd( 4.45474, 36.6446, -10.2529, 0.29 ) }
    dend_49 { pt3dadd( 4.46177, 35.95, -9.63137, 0.29 ) }
    dend_49 { pt3dadd( 4.47372, 35.5162, -9.32064, 0.29 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 34/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 4.13916, 38.9157, -15.6428, 1.32 ) }
    dend_48 { pt3dadd( 4.20247, 38.998, -16.758, 1.32 ) }
    dend_48 { pt3dadd( 4.25634, 39.0828, -18.1177, 1.32 ) }
    dend_48 { pt3dadd( 4.25961, 39.2464, -20.2256, 1.32 ) }
    dend_48 { pt3dadd( 4.17148, 39.4432, -22.0959, 1.1 ) }
    dend_48 { pt3dadd( 3.8902, 39.7858, -24.8089, 0.73 ) }
    dend_48 { pt3dadd( 3.64879, 40.0286, -26.4356, 0.81 ) }
    dend_48 { pt3dadd( 3.41366, 40.1828, -27.4471, 0.81 ) }
    dend_48 { pt3dadd( 3.07756, 40.364, -28.5133, 0.81 ) }
    dend_48 { pt3dadd( 2.51423, 40.6674, -29.9702, 0.81 ) }
    dend_48 { pt3dadd( 2.10405, 40.9548, -31.0053, 0.81 ) }
    dend_48 { pt3dadd( 1.59924, 41.3989, -32.3218, 0.81 ) }
    dend_48 { pt3dadd( 1.29003, 41.7217, -33.2151, 0.81 ) }
    dend_48 { pt3dadd( 0.974663, 42.1166, -34.2995, 0.95 ) }
    dend_48 { pt3dadd( 0.730831, 42.4887, -35.3181, 1.18 ) }
    dend_48 { pt3dadd( 0.395982, 43.1101, -36.8623, 1.03 ) }
    dend_48 { pt3dadd( 0.0475554, 43.811, -38.4457, 0.66 ) }
    dend_48 { pt3dadd( -0.122562, 44.1118, -39.0654, 1.32 ) }
    dend_48 { pt3dadd( -0.765037, 45.0303, -40.8887, 0.37 ) }
    dend_48 { pt3dadd( -1.17645, 45.4432, -41.7443, 0.44 ) }
    dend_48 { pt3dadd( -1.52481, 45.6818, -42.4071, 0.37 ) }
    dend_48 { pt3dadd( -1.74383, 45.777, -42.8972, 0.37 ) }
    dend_48 { pt3dadd( -1.86277, 45.8101, -43.4935, 0.37 ) }
    dend_48 { pt3dadd( -1.8589, 45.7617, -44.777, 0.37 ) }
    dend_48 { pt3dadd( -1.73465, 45.6608, -45.8752, 0.81 ) }
    dend_48 { pt3dadd( -1.31866, 45.3307, -48.4177, 0.81 ) }
    dend_48 { pt3dadd( -0.9383, 45.0629, -50.355, 0.81 ) }
    dend_48 { pt3dadd( -0.306435, 44.7126, -53.0157, 0.81 ) }
    dend_48 { pt3dadd( 0.285518, 44.4667, -55.0919, 0.44 ) }
    dend_48 { pt3dadd( 0.661843, 44.3528, -56.1763, 0.44 ) }
    dend_48 { pt3dadd( 0.951137, 44.281, -56.9018, 0.66 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 65/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 3.25504, 32.1911, -4.75257, 0.73 ) }
    dend_44 { pt3dadd( 3.73954, 33.1619, -4.40747, 0.73 ) }
    dend_44 { pt3dadd( 4.05379, 33.7822, -4.00144, 0.73 ) }
    dend_44 { pt3dadd( 4.40682, 34.3813, -3.53536, 0.73 ) }
    dend_44 { pt3dadd( 4.71894, 34.897, -3.0852, 0.73 ) }
    dend_44 { pt3dadd( 5.00404, 35.368, -2.67402, 0.29 ) }
    dend_44 { pt3dadd( 5.32078, 35.8914, -2.21719, 0.29 ) }
    dend_44 { pt3dadd( 5.83101, 36.798, -1.33783, 0.29 ) }
    dend_44 { pt3dadd( 6.30711, 37.5068, -0.594353, 0.29 ) }
    dend_44 { pt3dadd( 6.72344, 38.0055, 0.0417511, 0.95 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 75/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 3.25504, 32.1911, -4.75257, 0.73 ) }
    dend_43 { pt3dadd( 4.56281, 32.762, -5.91638, 0.73 ) }
    dend_43 { pt3dadd( 6.31464, 33.4105, -7.12583, 0.51 ) }
    dend_43 { pt3dadd( 8.11438, 33.966, -8.22027, 0.51 ) }
    dend_43 { pt3dadd( 9.65079, 34.3816, -9.11147, 0.51 ) }
    dend_43 { pt3dadd( 10.4952, 34.6095, -9.60655, 1.03 ) }
    dend_43 { pt3dadd( 11.7277, 34.9486, -10.3406, 0.44 ) }
    dend_43 { pt3dadd( 13.3309, 35.3895, -11.1924, 0.95 ) }
    dend_43 { pt3dadd( 15.2394, 35.9172, -12.2267, 0.95 ) }
    dend_43 { pt3dadd( 16.1181, 36.1911, -12.805, 0.95 ) }
    dend_43 { pt3dadd( 16.7929, 36.4243, -13.4246, 0.95 ) }
    dend_43 { pt3dadd( 16.9815, 36.5015, -13.641, 0.95 ) }
    dend_43 { pt3dadd( 17.3887, 36.7072, -14.191, 0.73 ) }
    dend_43 { pt3dadd( 18.6481, 37.4148, -16.0293, 0.73 ) }
    dend_43 { pt3dadd( 19.7182, 38.0767, -17.602, 0.88 ) }
    dend_43 { pt3dadd( 20.9687, 38.8552, -19.3155, 0.88 ) }
    dend_43 { pt3dadd( 21.7327, 39.3152, -20.3102, 0.88 ) }
    dend_43 { pt3dadd( 22.434, 39.7448, -21.1932, 0.73 ) }
    dend_43 { pt3dadd( 23.4642, 40.3611, -22.4193, 0.95 ) }
    dend_43 { pt3dadd( 24.7506, 41.1199, -23.9236, 0.66 ) }
    dend_43 { pt3dadd( 25.7081, 41.6384, -25.0527, 0.66 ) }
    dend_43 { pt3dadd( 26.732, 42.1145, -26.2994, 0.66 ) }
    dend_43 { pt3dadd( 27.8079, 42.4917, -27.7413, 0.88 ) }
    dend_43 { pt3dadd( 28.8353, 42.7613, -29.2473, 0.73 ) }
    dend_43 { pt3dadd( 30.1563, 43.0267, -31.3774, 0.73 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_43 { pt3dadd( 31.1925, 43.1594, -33.1568, 0.73 ) }
    dend_43 { pt3dadd( 32.0786, 43.206, -34.7623, 0.73 ) }
    dend_43 { pt3dadd( 33.3141, 43.1771, -36.9981, 0.73 ) }
    dend_43 { pt3dadd( 33.9779, 43.1124, -38.138, 0.73 ) }
    dend_43 { pt3dadd( 34.5072, 43.0485, -38.9942, 0.73 ) }
    dend_43 { pt3dadd( 35.2619, 42.9602, -40.1578, 0.73 ) }
    dend_43 { pt3dadd( 36.405, 42.8524, -41.7864, 0.73 ) }
    dend_43 { pt3dadd( 37.2176, 42.7964, -42.7976, 0.73 ) }
    dend_43 { pt3dadd( 38.5861, 42.6722, -44.1973, 0.73 ) }
    dend_43 { pt3dadd( 40.6155, 42.3502, -46.0448, 0.51 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 10/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 27.0588, 25.7521, 26.3177, 0.44 ) }
    dend_40 { pt3dadd( 27.5164, 26.349, 27.1517, 0.44 ) }
    dend_40 { pt3dadd( 27.8492, 26.7496, 27.6764, 0.44 ) }
    dend_40 { pt3dadd( 28.4133, 27.2635, 28.4538, 0.44 ) }
    dend_40 { pt3dadd( 28.9345, 27.69, 29.1039, 0.44 ) }
    dend_40 { pt3dadd( 29.1509, 27.8601, 29.3537, 0.37 ) }
    dend_40 { pt3dadd( 29.6276, 28.2247, 29.8704, 0.37 ) }
    dend_40 { pt3dadd( 30.0559, 28.5094, 30.299, 0.44 ) }
    dend_40 { pt3dadd( 30.867, 29.0273, 30.9685, 0.22 ) }
    dend_40 { pt3dadd( 31.2145, 29.2574, 31.2042, 0.22 ) }
    dend_40 { pt3dadd( 31.5032, 29.4426, 31.369, 0.22 ) }
    dend_40 { pt3dadd( 31.8902, 29.6932, 31.5776, 0.22 ) }
    dend_40 { pt3dadd( 32.2844, 29.9834, 31.7637, 0.22 ) }
    dend_40 { pt3dadd( 32.58, 30.2201, 31.8937, 0.22 ) }
    dend_40 { pt3dadd( 32.9127, 30.5825, 31.9882, 0.22 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 25/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 27.0588, 25.7521, 26.3177, 0.59 ) }
    dend_39 { pt3dadd( 28.2902, 25.75, 26.2799, 0.59 ) }
    dend_39 { pt3dadd( 29.6222, 25.7026, 26.1968, 0.59 ) }
    dend_39 { pt3dadd( 30.9772, 25.6631, 26.0978, 0.51 ) }
    dend_39 { pt3dadd( 31.9273, 25.6548, 26.0263, 0.59 ) }
    dend_39 { pt3dadd( 33.175, 25.659, 25.9308, 0.15 ) }
    dend_39 { pt3dadd( 34.1746, 25.6688, 25.8533, 0.73 ) }
    dend_39 { pt3dadd( 35.85, 25.6553, 25.7109, 0.37 ) }
    dend_39 { pt3dadd( 36.7513, 25.6171, 25.6389, 0.29 ) }
    dend_39 { pt3dadd( 37.349, 25.5483, 25.5903, 0.29 ) }
    dend_39 { pt3dadd( 37.6487, 25.4931, 25.56, 0.29 ) }
    dend_39 { pt3dadd( 38.4724, 25.2936, 25.4587, 0.29 ) }
    dend_39 { pt3dadd( 39.419, 25.0454, 25.2868, 0.37 ) }
    dend_39 { pt3dadd( 40.0958, 24.8652, 25.1322, 0.37 ) }
    dend_39 { pt3dadd( 40.7774, 24.7083, 24.9509, 0.37 ) }
    dend_39 { pt3dadd( 41.5163, 24.5804, 24.7423, 0.37 ) }
    dend_39 { pt3dadd( 42.2658, 24.4875, 24.5224, 0.51 ) }
    dend_39 { pt3dadd( 43.777, 24.3583, 24.065, 0.37 ) }
    dend_39 { pt3dadd( 44.7731, 24.3254, 23.793, 0.22 ) }
    dend_39 { pt3dadd( 45.4698, 24.3313, 23.6264, 0.22 ) }
    dend_39 { pt3dadd( 46.0717, 24.3488, 23.514, 0.22 ) }
    dend_39 { pt3dadd( 46.6706, 24.3612, 23.4428, 0.22 ) }
    dend_39 { pt3dadd( 47.4459, 24.3581, 23.3875, 0.73 ) }
    dend_39 { pt3dadd( 48.4384, 24.3198, 23.372, 0.44 ) }
    dend_39 { pt3dadd( 49.1534, 24.3061, 23.2174, 1.1 ) }
    dend_39 { pt3dadd( 49.4489, 24.3107, 23.1033, 1.1 ) }
    dend_39 { pt3dadd( 50.7006, 24.4118, 22.4989, 0.66 ) }
    dend_39 { pt3dadd( 51.1071, 24.4611, 22.2784, 0.22 ) }
    dend_39 { pt3dadd( 51.8323, 24.5718, 21.8186, 0.51 ) }
    dend_39 { pt3dadd( 54.4353, 24.9878, 19.8246, 0.07 ) }
    dend_39 { pt3dadd( 55.0717, 25.0894, 19.2628, 0.15 ) }
    dend_39 { pt3dadd( 55.9829, 25.2513, 18.3352, 0.59 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 57/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -41.0549, 45.3034, 9.26532, 0.37 ) }
    dend_37 { pt3dadd( -41.4481, 46.1548, 9.35733, 0.37 ) }
    dend_37 { pt3dadd( -42.0846, 47.2834, 9.46329, 0.37 ) }
    dend_37 { pt3dadd( -42.7581, 48.3631, 9.44797, 0.81 ) }
    dend_37 { pt3dadd( -43.2074, 48.9886, 9.32898, 0.81 ) }
    dend_37 { pt3dadd( -43.9871, 49.9916, 8.95197, 0.22 ) }
    dend_37 { pt3dadd( -44.4238, 50.5165, 8.70607, 0.44 ) }
    dend_37 { pt3dadd( -44.9734, 51.0877, 8.3425, 0.07 ) }
    dend_37 { pt3dadd( -45.9693, 52.0094, 7.58893, 0.81 ) }
    dend_37 { pt3dadd( -47.1729, 53.0651, 6.56017, 0.29 ) }
    dend_37 { pt3dadd( -48.2046, 53.9576, 5.64751, 0.59 ) }
    dend_37 { pt3dadd( -48.6665, 54.3667, 5.20208, 0.59 ) }
    dend_37 { pt3dadd( -48.9671, 54.6523, 4.90059, 0.29 ) }
    dend_37 { pt3dadd( -49.6477, 55.3056, 4.24118, 0.81 ) }
    dend_37 { pt3dadd( -50.376, 55.9686, 3.62524, 0.81 ) }
    dend_37 { pt3dadd( -50.9521, 56.4695, 3.20267, 1.1 ) }
    dend_37 { pt3dadd( -52.1557, 57.4549, 2.50295, 0.29 ) }
    dend_37 { pt3dadd( -53.0698, 58.1634, 2.09634, 0.29 ) }
    dend_37 { pt3dadd( -53.7181, 58.6172, 1.94182, 0.29 ) }
    dend_37 { pt3dadd( -54.3627, 58.9982, 1.93677, 0.29 ) }
    dend_37 { pt3dadd( -55.0081, 59.3195, 2.04232, 0.29 ) }
    dend_37 { pt3dadd( -56.3736, 59.8832, 2.42315, 0.29 ) }
    dend_37 { pt3dadd( -57.368, 60.2142, 2.82162, 0.29 ) }
    dend_37 { pt3dadd( -58.2905, 60.5177, 3.2273, 0.59 ) }
    dend_37 { pt3dadd( -58.9272, 60.7383, 3.50465, 0.29 ) }
    dend_37 { pt3dadd( -59.357, 60.8734, 3.69362, 0.59 ) }
    dend_37 { pt3dadd( -59.7276, 60.9607, 3.84205, 0.59 ) }
    dend_37 { pt3dadd( -60.9835, 61.1378, 4.30075, 0.29 ) }
    dend_37 { pt3dadd( -61.992, 61.2523, 4.67653, 0.29 ) }
    dend_37 { pt3dadd( -62.7695, 61.3027, 5.06714, 0.29 ) }
    dend_37 { pt3dadd( -63.6872, 61.3453, 5.61289, 0.29 ) }
    dend_37 { pt3dadd( -64.3375, 61.3487, 6.07267, 0.44 ) }
    dend_37 { pt3dadd( -65.1656, 61.2985, 6.77099, 0.73 ) }
    dend_37 { pt3dadd( -65.7313, 61.2148, 7.32158, 0.73 ) }
    dend_37 { pt3dadd( -66.7855, 61.015, 8.51186, 0.29 ) }
    dend_37 { pt3dadd( -67.293, 60.9272, 9.15757, 0.29 ) }
    dend_37 { pt3dadd( -68.0592, 60.8177, 10.2081, 0.29 ) }
    dend_37 { pt3dadd( -69.014, 60.6811, 11.5964, 0.29 ) }
    dend_37 { pt3dadd( -70.06, 60.5291, 13.1364, 0.59 ) }
    dend_37 { pt3dadd( -71.484, 60.3414, 15.2572, 0.15 ) }
    dend_37 { pt3dadd( -72.2917, 60.2654, 16.4452, 0.44 ) }
    dend_37 { pt3dadd( -72.9912, 60.2292, 17.4757, 0.44 ) }
    dend_37 { pt3dadd( -73.6069, 60.2282, 18.3734, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_37 { pt3dadd( -74.2948, 60.2709, 19.3696, 0.66 ) }
    dend_37 { pt3dadd( -74.6002, 60.3169, 19.7998, 0.66 ) }
    dend_37 { pt3dadd( -74.7585, 60.3514, 19.9813, 0.95 ) }
    dend_37 { pt3dadd( -75.1998, 60.4636, 20.3809, 0.73 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 4/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -41.0549, 45.3034, 9.26532, 0.95 ) }
    dend_36 { pt3dadd( -41.9197, 45.5894, 8.75574, 0.95 ) }
    dend_36 { pt3dadd( -43.2699, 46.1969, 7.87448, 0.73 ) }
    dend_36 { pt3dadd( -44.1799, 46.7026, 7.27863, 0.66 ) }
    dend_36 { pt3dadd( -45.1989, 47.4182, 6.47587, 0.07 ) }
    dend_36 { pt3dadd( -45.9974, 48.1067, 5.76446, 0.59 ) }
    dend_36 { pt3dadd( -46.27, 48.3651, 5.49241, 0.59 ) }
    dend_36 { pt3dadd( -47.0574, 49.2577, 4.6246, 0.07 ) }
    dend_36 { pt3dadd( -47.4343, 49.7209, 4.19101, 0.66 ) }
    dend_36 { pt3dadd( -48.3278, 50.8826, 3.03338, 0.66 ) }
    dend_36 { pt3dadd( -48.8749, 51.5516, 2.34518, 0.66 ) }
    dend_36 { pt3dadd( -49.5657, 52.2877, 1.62588, 0.37 ) }
    dend_36 { pt3dadd( -49.7476, 52.4587, 1.4651, 0.37 ) }
    dend_36 { pt3dadd( -50.4868, 53.0052, 1.04188, 0.95 ) }
    dend_36 { pt3dadd( -51.5078, 53.6179, 0.732191, 0.73 ) }
    dend_36 { pt3dadd( -52.3795, 54.0808, 0.697735, 0.44 ) }
    dend_36 { pt3dadd( -52.9272, 54.3613, 0.78606, 0.44 ) }
    dend_36 { pt3dadd( -53.5187, 54.6776, 0.983979, 0.73 ) }
    dend_36 { pt3dadd( -54.9257, 55.4617, 1.59063, 0.37 ) }
    dend_36 { pt3dadd( -55.6892, 55.8821, 2.06433, 0.29 ) }
    dend_36 { pt3dadd( -56.3096, 56.1699, 2.67988, 0.29 ) }
    dend_36 { pt3dadd( -57.0709, 56.4149, 3.7095, 0.29 ) }
    dend_36 { pt3dadd( -57.4311, 56.4756, 4.29511, 0.29 ) }
    dend_36 { pt3dadd( -57.8664, 56.5159, 5.08771, 0.66 ) }
    dend_36 { pt3dadd( -58.6104, 56.4957, 6.64076, 1.03 ) }
    dend_36 { pt3dadd( -59.8516, 56.2745, 9.63427, 1.03 ) }
    dend_36 { pt3dadd( -60.3908, 56.0742, 11.0938, 0.66 ) }
    dend_36 { pt3dadd( -60.5679, 55.9707, 11.6319, 0.66 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 32/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 30.8473, 66.5707, -55.3872, 0.29 ) }
    dend_28 { pt3dadd( 32.3064, 66.9296, -55.8418, 0.29 ) }
    dend_28 { pt3dadd( 33.3062, 67.2918, -56.159, 0.29 ) }
    dend_28 { pt3dadd( 33.8469, 67.5661, -56.3367, 0.29 ) }
    dend_28 { pt3dadd( 34.4017, 67.8476, -56.5191, 0.29 ) }
    dend_28 { pt3dadd( 34.8581, 68.0792, -56.6691, 0.29 ) }
    dend_28 { pt3dadd( 35.1968, 68.251, -56.7805, 0.29 ) }
    dend_28 { pt3dadd( 35.4702, 68.4736, -56.9575, 0.29 ) }
    dend_28 { pt3dadd( 35.949, 69.268, -57.1467, 0.51 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 41/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 30.8473, 66.5707, -55.3872, 0.51 ) }
    dend_27 { pt3dadd( 30.5814, 66.5893, -56.7227, 0.51 ) }
    dend_27 { pt3dadd( 30.2445, 66.6245, -58.5686, 0.44 ) }
    dend_27 { pt3dadd( 29.8542, 66.6833, -60.7077, 0.44 ) }
    dend_27 { pt3dadd( 29.5506, 66.7127, -62.1211, 0.59 ) }
    dend_27 { pt3dadd( 28.9119, 66.729, -64.3871, 0.59 ) }
    dend_27 { pt3dadd( 28.3309, 66.7254, -66.0818, 0.59 ) }
    dend_27 { pt3dadd( 27.8875, 66.7213, -67.1652, 0.44 ) }
    dend_27 { pt3dadd( 27.1576, 66.7536, -68.6085, 0.44 ) }
    dend_27 { pt3dadd( 26.5329, 66.8478, -69.6894, 0.44 ) }
    dend_27 { pt3dadd( 25.7731, 66.9937, -71.114, 0.44 ) }
    dend_27 { pt3dadd( 25.1946, 67.1072, -72.2207, 0.44 ) }
    dend_27 { pt3dadd( 24.3533, 67.2879, -74.0249, 0.73 ) }
    dend_27 { pt3dadd( 23.7217, 67.4207, -75.6176, 0.37 ) }
    dend_27 { pt3dadd( 23.1983, 67.5268, -77.1349, 0.59 ) }
    dend_27 { pt3dadd( 22.3591, 67.7305, -80.1624, 0.59 ) }
    dend_27 { pt3dadd( 22.069, 67.8047, -81.4037, 0.59 ) }
    dend_27 { pt3dadd( 21.6652, 67.8979, -83.2278, 0.59 ) }
    dend_27 { pt3dadd( 21.2969, 67.9656, -84.8318, 0.59 ) }
    dend_27 { pt3dadd( 20.9425, 68.0097, -86.4646, 0.59 ) }
    dend_27 { pt3dadd( 20.277, 68.089, -89.3753, 0.88 ) }
    dend_27 { pt3dadd( 19.7183, 68.1941, -91.4587, 0.59 ) }
    dend_27 { pt3dadd( 19.3937, 68.2617, -92.5431, 0.29 ) }
    dend_27 { pt3dadd( 19.1474, 68.3236, -93.3452, 0.29 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 65/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -41.0298, -17.1383, 73.9496, 0.22 ) }
    dend_9 { pt3dadd( -40.11, -17.6312, 74.5492, 0.22 ) }
    dend_9 { pt3dadd( -39.0546, -17.9472, 75.2562, 0.22 ) }
    dend_9 { pt3dadd( -38.1499, -18.0463, 75.9487, 0.29 ) }
    dend_9 { pt3dadd( -37.5597, -18.0292, 76.4131, 0.29 ) }
    dend_9 { pt3dadd( -36.5405, -17.9997, 77.2149, 0.07 ) }
    dend_9 { pt3dadd( -35.6832, -17.9749, 77.8894, 0.37 ) }
    dend_9 { pt3dadd( -34.6874, -17.7733, 78.6785, 0.15 ) }
    dend_9 { pt3dadd( -33.6953, -17.3867, 79.5142, 0.15 ) }
    dend_9 { pt3dadd( -33.0995, -17.0522, 80.0495, 1.1 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 75/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -41.0298, -17.1383, 73.9496, 0.29 ) }
    dend_8 { pt3dadd( -40.1148, -16.9788, 75.0115, 0.29 ) }
    dend_8 { pt3dadd( -39.466, -16.8866, 75.641, 0.81 ) }
    dend_8 { pt3dadd( -39.1112, -16.8136, 76.0283, 0.81 ) }
    dend_8 { pt3dadd( -38.7307, -16.7125, 76.5112, 0.51 ) }
    dend_8 { pt3dadd( -38.0501, -16.5107, 77.4301, 0.51 ) }
    dend_8 { pt3dadd( -37.6937, -16.4035, 77.9218, 0.29 ) }
    dend_8 { pt3dadd( -37.0658, -16.2534, 78.7882, 0.29 ) }
    dend_8 { pt3dadd( -36.3246, -16.103, 79.8907, 0.51 ) }
    dend_8 { pt3dadd( -35.573, -15.9261, 81.1648, 0.59 ) }
    dend_8 { pt3dadd( -35.1787, -15.7946, 81.9668, 0.59 ) }
    dend_8 { pt3dadd( -34.9713, -15.7011, 82.4758, 0.59 ) }
    dend_8 { pt3dadd( -34.8347, -15.6263, 82.8648, 0.59 ) }
    dend_8 { pt3dadd( -34.6241, -15.4348, 83.5642, 0.59 ) }
    dend_8 { pt3dadd( -34.5169, -15.238, 83.9321, 0.59 ) }
    dend_8 { pt3dadd( -34.4327, -14.864, 84.3451, 0.59 ) }
    dend_8 { pt3dadd( -34.3499, -14.3733, 84.8008, 0.59 ) }
    dend_8 { pt3dadd( -34.2265, -13.6945, 85.3496, 0.59 ) }
    dend_8 { pt3dadd( -34.1018, -13.0257, 85.8483, 0.81 ) }
    dend_8 { pt3dadd( -33.9095, -12.093, 86.4913, 0.59 ) }
    dend_8 { pt3dadd( -33.6378, -10.8878, 87.3141, 0.59 ) }
    dend_8 { pt3dadd( -33.541, -10.4815, 87.6063, 0.59 ) }
    dend_8 { pt3dadd( -33.4431, -9.98758, 87.987, 0.95 ) }
    // Section: dend_95, id: dend_95, parent: dend_93 (entry count 98/100)
    dend_95 { pt3dclear() }
    dend_95 { pt3dadd( 36.076, -4.88143, 58.2192, 0.15 ) }
    dend_95 { pt3dadd( 36.9062, -5.32672, 59.3101, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_95 { pt3dadd( 38.1359, -5.87073, 60.7881, 0.29 ) }
    dend_95 { pt3dadd( 38.5809, -6.06756, 61.3229, 0.07 ) }
    dend_95 { pt3dadd( 39.8125, -6.6124, 62.8031, 0.22 ) }
    dend_95 { pt3dadd( 40.2863, -6.82202, 63.3726, 0.07 ) }
    dend_95 { pt3dadd( 40.815, -7.05586, 64.0079, 0.07 ) }
    dend_95 { pt3dadd( 41.3429, -7.28157, 64.6824, 0.81 ) }
    // Section: dend_94, id: dend_94, parent: dend_93 (entry count 6/100)
    dend_94 { pt3dclear() }
    dend_94 { pt3dadd( 36.076, -4.88143, 58.2192, 0.22 ) }
    dend_94 { pt3dadd( 36.4946, -5.74575, 58.7582, 0.22 ) }
    dend_94 { pt3dadd( 36.7345, -6.30621, 59.0962, 0.51 ) }
    dend_94 { pt3dadd( 37.1242, -7.25944, 59.7468, 0.73 ) }
    dend_94 { pt3dadd( 37.423, -8.00223, 60.2748, 0.15 ) }
    dend_94 { pt3dadd( 37.7452, -8.80322, 60.8441, 0.81 ) }
    dend_94 { pt3dadd( 38.0142, -9.4722, 61.3196, 0.29 ) }
    dend_94 { pt3dadd( 38.2764, -10.1574, 61.8432, 0.29 ) }
    dend_94 { pt3dadd( 38.5982, -11.1116, 62.5926, 0.29 ) }
    dend_94 { pt3dadd( 38.6933, -11.4468, 62.8522, 0.44 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 16/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 6.72344, 38.0055, 0.0417511, 0.29 ) }
    dend_46 { pt3dadd( 6.90233, 38.0455, 0.444581, 0.29 ) }
    dend_46 { pt3dadd( 7.23434, 38.1199, 1.19219, 0.29 ) }
    dend_46 { pt3dadd( 7.59745, 38.2012, 2.00983, 0.29 ) }
    dend_46 { pt3dadd( 7.93715, 38.2772, 2.77474, 0.29 ) }
    dend_46 { pt3dadd( 8.28086, 38.3542, 3.5487, 0.29 ) }
    dend_46 { pt3dadd( 8.59339, 38.4241, 4.25243, 0.29 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 23/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 6.72344, 38.0055, 0.0417511, 0.88 ) }
    dend_45 { pt3dadd( 6.68306, 38.0244, 0.291341, 0.88 ) }
    dend_45 { pt3dadd( 6.44955, 38.1824, 1.68235, 0.37 ) }
    dend_45 { pt3dadd( 6.28817, 38.3737, 2.77056, 0.37 ) }
    dend_45 { pt3dadd( 6.14814, 38.7401, 4.12744, 0.37 ) }
    dend_45 { pt3dadd( 6.11469, 39.0868, 4.93369, 0.37 ) }
    dend_45 { pt3dadd( 6.11774, 39.2689, 5.24431, 0.37 ) }
    dend_45 { pt3dadd( 6.16947, 39.7769, 5.78457, 0.37 ) }
    dend_45 { pt3dadd( 6.30146, 40.3129, 6.1319, 0.37 ) }
    dend_45 { pt3dadd( 6.55922, 41.0481, 6.51823, 0.37 ) }
    dend_45 { pt3dadd( 6.96252, 41.9561, 6.98617, 0.37 ) }
    dend_45 { pt3dadd( 7.14115, 42.2942, 7.18503, 1.18 ) }
    dend_45 { pt3dadd( 7.58037, 43.0843, 7.6747, 0.44 ) }
    dend_45 { pt3dadd( 8.03383, 43.8778, 8.20784, 0.44 ) }
    dend_45 { pt3dadd( 8.53852, 44.7126, 8.82181, 0.44 ) }
    dend_45 { pt3dadd( 9.12284, 45.5963, 9.56961, 0.44 ) }
    dend_45 { pt3dadd( 9.68389, 46.3258, 10.2836, 0.73 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_81, dend_70, dend_57, dend_50, dend_21, dend_0, dend_89, dend_82, dend_72, dend_71, dend_63, dend_58, dend_56, dend_51, dend_31, dend_22, dend_12, dend_1, dend_101, dend_90, dend_84, dend_83, dend_80, dend_73, dend_67, dend_64, dend_60, dend_59, dend_55, dend_52, dend_33, dend_32, dend_24, dend_23, dend_16, dend_13, dend_5, dend_2, dend_105, dend_102, dend_100, dend_91, dend_88, dend_85, dend_77, dend_74, dend_69, dend_68, dend_66, dend_65, dend_62, dend_61, dend_54, dend_53, dend_41, dend_34, dend_30, dend_25, dend_20, dend_17, dend_15, dend_14, dend_11, dend_6, dend_4, dend_3, dend_104, dend_103, dend_97, dend_92, dend_87, dend_86, dend_79, dend_78, dend_76, dend_75, dend_47, dend_42, dend_38, dend_35, dend_29, dend_26, dend_19, dend_18, dend_10, dend_7, dend_99, dend_98, dend_96, dend_93, dend_49, dend_48, dend_44, dend_43, dend_40, dend_39, dend_37, dend_36, dend_28, dend_27, dend_9, dend_8, dend_95, dend_94, dend_46, dend_45]}
    ModelViewParmSubset_2 = new SectionList()
    dend_81 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_89 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_101 ModelViewParmSubset_2.append()
    dend_90 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_105 ModelViewParmSubset_2.append()
    dend_102 ModelViewParmSubset_2.append()
    dend_100 ModelViewParmSubset_2.append()
    dend_91 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_104 ModelViewParmSubset_2.append()
    dend_103 ModelViewParmSubset_2.append()
    dend_97 ModelViewParmSubset_2.append()
    dend_92 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_99 ModelViewParmSubset_2.append()
    dend_98 ModelViewParmSubset_2.append()
    dend_96 ModelViewParmSubset_2.append()
    dend_93 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_36 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_95 ModelViewParmSubset_2.append()
    dend_94 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_81, dend_70, dend_57, dend_50, dend_21, dend_0, dend_89, dend_82, dend_72, dend_71, dend_63, dend_58, dend_56, dend_51, dend_31, dend_22, dend_12, dend_1, dend_101, dend_90, dend_84, dend_83, dend_80, dend_73, dend_67, dend_64, dend_60, dend_59, dend_55, dend_52, dend_33, dend_32, dend_24, dend_23, dend_16, dend_13, dend_5, dend_2, dend_105, dend_102, dend_100, dend_91, dend_88, dend_85, dend_77, dend_74, dend_69, dend_68, dend_66, dend_65, dend_62, dend_61, dend_54, dend_53, dend_41, dend_34, dend_30, dend_25, dend_20, dend_17, dend_15, dend_14, dend_11, dend_6, dend_4, dend_3, dend_104, dend_103, dend_97, dend_92, dend_87, dend_86, dend_79, dend_78, dend_76, dend_75, dend_47, dend_42, dend_38, dend_35, dend_29, dend_26, dend_19, dend_18, dend_10, dend_7, dend_99, dend_98, dend_96, dend_93, dend_49, dend_48, dend_44, dend_43, dend_40, dend_39, dend_37, dend_36, dend_28, dend_27, dend_9, dend_8, dend_95, dend_94, dend_46, dend_45]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_89 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_101 ModelViewParmSubset_4.append()
    dend_90 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_105 ModelViewParmSubset_4.append()
    dend_102 ModelViewParmSubset_4.append()
    dend_100 ModelViewParmSubset_4.append()
    dend_91 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_104 ModelViewParmSubset_4.append()
    dend_103 ModelViewParmSubset_4.append()
    dend_97 ModelViewParmSubset_4.append()
    dend_92 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_99 ModelViewParmSubset_4.append()
    dend_98 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_96 ModelViewParmSubset_4.append()
    dend_93 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_95 ModelViewParmSubset_4.append()
    dend_94 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_81, dend_70, dend_57, dend_50, dend_21, dend_0, axon_0, dend_89, dend_82, dend_72, dend_71, dend_63, dend_58, dend_56, dend_51, dend_31, dend_22, dend_12, dend_1, axon_1, dend_101, dend_90, dend_84, dend_83, dend_80, dend_73, dend_67, dend_64, dend_60, dend_59, dend_55, dend_52, dend_33, dend_32, dend_24, dend_23, dend_16, dend_13, dend_5, dend_2, dend_105, dend_102, dend_100, dend_91, dend_88, dend_85, dend_77, dend_74, dend_69, dend_68, dend_66, dend_65, dend_62, dend_61, dend_54, dend_53, dend_41, dend_34, dend_30, dend_25, dend_20, dend_17, dend_15, dend_14, dend_11, dend_6, dend_4, dend_3, dend_104, dend_103, dend_97, dend_92, dend_87, dend_86, dend_79, dend_78, dend_76, dend_75, dend_47, dend_42, dend_38, dend_35, dend_29, dend_26, dend_19, dend_18, dend_10, dend_7, dend_99, dend_98, dend_96, dend_93, dend_49, dend_48, dend_44, dend_43, dend_40, dend_39, dend_37, dend_36, dend_28, dend_27, dend_9, dend_8, dend_95, dend_94, dend_46, dend_45]}
    ModelViewParmSubset_5 = new SectionList()
    dend_81 ModelViewParmSubset_5.append()
    dend_70 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_89 ModelViewParmSubset_5.append()
    dend_82 ModelViewParmSubset_5.append()
    dend_72 ModelViewParmSubset_5.append()
    dend_71 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_101 ModelViewParmSubset_5.append()
    dend_90 ModelViewParmSubset_5.append()
    dend_84 ModelViewParmSubset_5.append()
    dend_83 ModelViewParmSubset_5.append()
    dend_80 ModelViewParmSubset_5.append()
    dend_73 ModelViewParmSubset_5.append()
    dend_67 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_105 ModelViewParmSubset_5.append()
    dend_102 ModelViewParmSubset_5.append()
    dend_100 ModelViewParmSubset_5.append()
    dend_91 ModelViewParmSubset_5.append()
    dend_88 ModelViewParmSubset_5.append()
    dend_85 ModelViewParmSubset_5.append()
    dend_77 ModelViewParmSubset_5.append()
    dend_74 ModelViewParmSubset_5.append()
    dend_69 ModelViewParmSubset_5.append()
    dend_68 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_104 ModelViewParmSubset_5.append()
    dend_103 ModelViewParmSubset_5.append()
    dend_97 ModelViewParmSubset_5.append()
    dend_92 ModelViewParmSubset_5.append()
    dend_87 ModelViewParmSubset_5.append()
    dend_86 ModelViewParmSubset_5.append()
    dend_79 ModelViewParmSubset_5.append()
    dend_78 ModelViewParmSubset_5.append()
    dend_76 ModelViewParmSubset_5.append()
    dend_75 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_29 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_99 ModelViewParmSubset_5.append()
    dend_98 ModelViewParmSubset_5.append()
    dend_96 ModelViewParmSubset_5.append()
    dend_93 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_95 ModelViewParmSubset_5.append()
    dend_94 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_83 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_80 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_67 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_64 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_60 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_59 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_105]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_105 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_102]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_102 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_88 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_25 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_20 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_14 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_6 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_4 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_3 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_75 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_35 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_18 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_10 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_96]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_96 OneSecGrp_SectionRef_92.append()

    // Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_95 = new SectionList()
    dend_48 OneSecGrp_SectionRef_95.append()

    // Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_97 = new SectionList()
    dend_43 OneSecGrp_SectionRef_97.append()

    // Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_100 = new SectionList()
    dend_37 OneSecGrp_SectionRef_100.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_21 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_57 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_81 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_31 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_12 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_82 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_1 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_84 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_89]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_89 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_13 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_16 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_90]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_90 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_34 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_58 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_5 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_2 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_91]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_91 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_50 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_41 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_63 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_70 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_15 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_101]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_101 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_42 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_100]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_100 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_72 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_51 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_96 = new SectionList()
    dend_44 OneSecGrp_SectionRef_96.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_73 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_92]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_92 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_22 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_47 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_24 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_17 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_108 = new SectionList()
    dend_46 OneSecGrp_SectionRef_108.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_52 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_85 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_19 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_53 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_94 = new SectionList()
    dend_49 OneSecGrp_SectionRef_94.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_97]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_97 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_74 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_54 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_109, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_109 = new SectionList()
    dend_45 OneSecGrp_SectionRef_109.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_71 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_11 OneSecGrp_SectionRef_66.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_99]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_99 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_87 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_38 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_55 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_98 = new SectionList()
    dend_40 OneSecGrp_SectionRef_98.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_76 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_93]}
    OneSecGrp_SectionRef_93 = new SectionList()
    dend_93 OneSecGrp_SectionRef_93.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_23 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_98]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_98 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_62 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_77 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_86 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_94]}
    OneSecGrp_SectionRef_107 = new SectionList()
    dend_94 OneSecGrp_SectionRef_107.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_30 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_95]}
    OneSecGrp_SectionRef_106 = new SectionList()
    dend_95 OneSecGrp_SectionRef_106.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_66 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_104]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_104 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_65 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_99 = new SectionList()
    dend_39 OneSecGrp_SectionRef_99.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_79 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_78 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_61 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_69 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_101 = new SectionList()
    dend_36 OneSecGrp_SectionRef_101.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_26 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_29 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_103]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_103 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_68 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_102 = new SectionList()
    dend_28 OneSecGrp_SectionRef_102.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_7 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_104 = new SectionList()
    dend_9 OneSecGrp_SectionRef_104.append()

    // Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_105 = new SectionList()
    dend_8 OneSecGrp_SectionRef_105.append()

    // Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_103 = new SectionList()
    dend_27 OneSecGrp_SectionRef_103.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104, dend_105], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()
    dend_89 basal.append()
    dend_90 basal.append()
    dend_91 basal.append()
    dend_92 basal.append()
    dend_93 basal.append()
    dend_94 basal.append()
    dend_95 basal.append()
    dend_96 basal.append()
    dend_97 basal.append()
    dend_98 basal.append()
    dend_99 basal.append()
    dend_100 basal.append()
    dend_101 basal.append()
    dend_102 basal.append()
    dend_103 basal.append()
    dend_104 basal.append()
    dend_105 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_81, dend_81, dend_81, dend_81, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_89, dend_89, dend_89, dend_89, dend_89, dend_82, dend_82, dend_82, dend_82, dend_82, dend_72, dend_72, dend_72, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, axon_1, axon_1, dend_101, dend_101, dend_101, dend_101, dend_90, dend_90, dend_90, dend_84, dend_84, dend_84, dend_84, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_91, dend_91, dend_91, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_99, dend_99, dend_99, dend_99, dend_99, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_23 all.append()
    dend_23 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_98 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_56 nseg = 3
    dend_83 nseg = 3
    dend_80 nseg = 3
    dend_67 nseg = 3
    dend_64 nseg = 3
    dend_60 nseg = 3
    dend_59 nseg = 3
    dend_32 nseg = 3
    dend_105 nseg = 3
    dend_102 nseg = 3
    dend_88 nseg = 3
    dend_25 nseg = 3
    dend_20 nseg = 5
    dend_14 nseg = 5
    dend_6 nseg = 3
    dend_4 nseg = 5
    dend_3 nseg = 3
    dend_75 nseg = 3
    dend_35 nseg = 3
    dend_18 nseg = 3
    dend_10 nseg = 3
    dend_96 nseg = 3
    dend_48 nseg = 3
    dend_43 nseg = 3
    dend_37 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L1_NGCDA_79c9f5c53c_0_0


