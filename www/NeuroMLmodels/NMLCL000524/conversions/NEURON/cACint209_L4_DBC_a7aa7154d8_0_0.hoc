// Cell: cACint209_L4_DBC_a7aa7154d8_0_0
/*
{
  "id" : "cACint209_L4_DBC_a7aa7154d8_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "2.03775, -11.4909, 0.0, 3.43439", "1.89325, -10.3873, 0.0, 4.10946", "1.74876, -9.28361, 0.0, 5.49512", "1.60426, -8.17996, 0.0, 6.92062", "1.45977, -7.07631, 0.0, 8.33776", "1.31528, -5.97266, 0.0, 9.37588", "1.17078, -4.86901, 0.0, 10.388", "1.02629, -3.76536, 0.0, 11.4001", "0.881794, -2.66171, 0.0, 12.0337", "0.7373, -1.55806, 0.0, 11.8609", "0.592806, -0.454415, 0.0, 11.675", "0.448312, 0.649234, 0.0, 11.6509", "0.303818, 1.75288, 0.0, 11.6321", "0.159324, 2.85653, 0.0, 10.7321", "0.0148298, 3.96018, 0.0, 9.70998", "-0.129664, 5.06383, 0.0, 8.74071", "-0.274158, 6.16748, 0.0, 7.95018", "-0.418652, 7.27113, 0.0, 6.7513", "-0.563146, 8.37478, 0.0, 5.22686", "-0.70764, 9.47842, 0.0, 3.48033", "-0.852134, 10.5821, 0.0, 2.02048" ]
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-0.596014, -11.6449, -2.34, 2.22", "-0.980489, -15.0175, -0.984006, 2.22", "-1.31698, -18.4588, 0.290101, 2.49", "-1.822, -24.4365, 2.31791, 2.49", "-2.1175, -30.2129, 3.98564, 2.49", "-2.20053, -32.8342, 4.65255, 1.94", "-2.2377, -35.6595, 5.29367, 1.38", "-2.1572, -39.0961, 5.97401, 1.11", "-2.05147, -41.414, 6.32646, 0.83", "-1.76285, -47.2289, 6.85652, 1.11", "-1.67031, -49.5751, 6.887, 1.11", "-1.5546, -52.383, 6.85149, 1.38", "-1.42392, -55.0702, 6.77371, 0.83", "-1.28621, -57.3571, 6.71991, 1.66", "-1.12399, -59.5212, 6.68599, 1.11", "-0.733088, -64.2071, 6.56742, 1.66", "-0.49788, -66.7753, 6.49635, 1.38", "-0.160677, -70.0784, 6.39644, 1.94", "0.281134, -73.5613, 6.28318, 1.38", "0.889337, -77.1803, 6.16047, 1.38", "1.81456, -81.6443, 6.00941, 1.38" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999993435552117,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.59602, 9.47005, -0.86, 2.22", "-1.00078, 14.285, -0.832455, 1.94", "-0.663726, 18.0499, -0.713543, 1.94", "-0.322257, 23.6855, -0.357638, 1.94", "-0.231909, 25.7405, -0.201851, 1.38", "0.0471427, 30.3853, 0.13315, 2.22", "0.321025, 34.9441, 0.461946, 1.94", "0.677413, 41.1089, 0.931341, 1.94", "0.882417, 45.5506, 1.36468, 1.94", "0.965189, 49.8493, 1.92072, 1.94", "1.02737, 55.6726, 2.68129, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999993435552117,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.852134, 10.5821, 0.0, 0.55", "-2.79938, 25.4552, 0.0, 0.55", "-4.74662, 40.3282, 0.0, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "1.81456, -81.6443, 6.00941, 0.55", "2.58059, -83.0542, 6.39099, 0.55", "3.35107, -84.2602, 6.88951, 0.55", "4.48567, -85.8994, 7.80804, 0.28", "5.8036, -87.4638, 8.78303, 0.55", "7.39391, -89.1721, 9.85623, 0.28", "8.73837, -90.5022, 10.816, 1.11", "10.8895, -92.4965, 12.444, 0.28", "12.2965, -93.6938, 13.7087, 0.83", "14.3885, -95.3308, 15.7297, 0.83", "15.6386, -96.2795, 16.9948, 0.83", "17.7487, -97.9081, 19.1625, 0.83", "18.8467, -98.7476, 20.2989, 1.11", "22.2053, -101.494, 23.5751, 0.28", "22.9469, -102.155, 24.2175, 0.28", "23.5881, -102.76, 24.7206, 0.55", "24.5355, -103.633, 25.3066, 0.55", "26.5184, -105.413, 26.1323, 0.55", "28.3856, -106.963, 26.6685, 0.55", "30.4194, -108.622, 26.9689, 0.83", "32.3312, -110.04, 27.2257, 1.11", "34.0019, -111.248, 27.4544, 0.55", "34.9121, -111.923, 27.5902, 1.38", "36.1014, -112.797, 27.7852, 0.55", "37.4499, -113.623, 27.998, 1.11", "40.3387, -115.243, 28.3808, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "1.81456, -81.6443, 6.00941, 1.38", "1.63973, -82.7113, 5.83632, 1.38", "1.05529, -85.8424, 5.58865, 1.38", "0.691078, -87.7937, 5.43431, 1.11", "-0.100501, -92.0345, 5.09886, 1.66", "-0.604939, -94.737, 4.8851, 2.22", "-0.862162, -96.1151, 4.77609, 2.22", "-1.50457, -100.07, 4.37881, 1.66" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "1.02737, 55.6726, 2.68129, 1.38", "0.934667, 58.7231, 2.68129, 1.38", "0.945916, 60.791, 2.66414, 1.38", "1.0151, 63.8134, 2.61942, 1.11", "1.20581, 68.4629, 2.60854, 1.38", "1.29232, 70.7854, 2.59718, 1.38", "1.35273, 74.8419, 2.59595, 1.38", "1.36816, 79.9754, 2.59607, 1.38", "1.28796, 83.7163, 2.59795, 1.38", "1.17673, 87.1985, 2.60667, 1.38", "0.971355, 90.4508, 2.62369, 1.38", "0.3748, 95.8794, 2.66475, 1.66", "-0.101233, 98.9973, 2.69591, 1.38", "-0.708875, 102.545, 2.63181, 1.38", "-1.41259, 106.62, 2.4341, 1.38", "-1.91183, 109.871, 2.18155, 1.38", "-2.11099, 111.596, 2.02935, 1.38", "-2.32579, 114.266, 1.77273, 1.11", "-2.56644, 118.305, 1.40181, 1.11", "-2.63087, 122.559, 1.03296, 1.11", "-2.60989, 126.855, 0.711618, 1.38", "-2.55177, 129.74, 0.57198, 1.11", "-2.51302, 132.51, 0.516455, 1.38", "-2.49612, 134.296, 0.571609, 1.38", "-2.46308, 137.149, 0.890058, 1.38", "-2.47163, 141.235, 1.47682, 1.94", "-2.46126, 143.395, 1.82221, 1.66", "-2.44995, 144.304, 1.96189, 1.66", "-2.41448, 147.136, 2.35746, 1.66", "-2.3644, 151.604, 2.93845, 1.66", "-2.39027, 153.936, 3.21395, 1.38", "-2.47948, 157.616, 3.58344, 1.66", "-2.53563, 160.86, 3.81862, 1.11", "-2.57906, 164.455, 4.03401, 1.11", "-2.61535, 166.457, 4.10912, 1.11", "-2.63237, 168.667, 4.16507, 1.11", "-2.60232, 170.322, 4.22314, 1.11", "-2.42858, 173.834, 4.37742, 1.38", "-2.22696, 176.511, 4.51004, 1.11", "-2.06006, 178.516, 4.60429, 1.38", "-1.8719, 180.794, 4.69956, 1.38", "-1.70464, 183.391, 4.78764, 0.83", "-1.58732, 186.536, 4.86755, 1.38", "-1.58354, 189.047, 4.90279, 0.83", "-1.63637, 191.597, 4.90279, 1.38", "-1.75152, 193.607, 4.90279, 1.38", "-2.0248, 196.905, 4.87632, 1.38", "-2.13216, 198.36, 4.85549, 1.38", "-2.24315, 200.618, 4.81094, 1.11", "-2.27134, 203.425, 4.74408, 1.11", "-2.17081, 207.48, 4.63096, 1.66", "-1.98877, 210.088, 4.54749, 1.11", "-1.88843, 211.119, 4.57235, 1.11", "-1.76103, 212.91, 4.70039, 1.38", "-1.63978, 215.175, 4.96061, 1.38", "-1.58116, 217.728, 5.34916, 1.94", "-1.63117, 220.374, 5.82962, 1.94", "-1.91081, 224.692, 6.64864, 1.11", "-2.18066, 227.097, 7.07215, 1.11", "-2.53374, 229.376, 7.44171, 1.38", "-3.05479, 232.118, 7.82282, 1.38", "-3.50609, 234.411, 8.06694, 1.11", "-3.93905, 236.932, 8.22441, 0.83", "-4.3573, 239.815, 8.24158, 0.83", "-4.58242, 241.478, 8.24975, 0.83", "-4.97962, 244.368, 8.26005, 1.11", "-5.27016, 246.904, 8.24573, 1.11", "-5.56616, 249.516, 8.20988, 1.38", "-6.0262, 253.487, 8.137, 1.38", "-6.27764, 255.92, 8.08371, 1.11", "-6.56035, 258.805, 8.01386, 1.38", "-6.82108, 261.173, 7.92043, 0.83", "-7.23568, 264.335, 7.77393, 0.83", "-7.54829, 266.844, 7.62836, 1.38", "-7.6278, 267.972, 7.55244, 1.38", "-7.746, 270.04, 7.39859, 1.11", "-7.94817, 273.457, 7.12524, 1.38", "-8.04634, 275.537, 6.95308, 1.11", "-8.05969, 277.581, 6.7635, 1.11", "-8.05078, 279.626, 6.57236, 1.11", "-8.04534, 282.177, 6.33321, 1.11", "-8.00985, 286.564, 5.90254, 1.11", "-7.95071, 289.139, 5.6564, 1.11", "-7.91232, 291.982, 5.44967, 1.38", "-7.92104, 294.9, 5.32218, 1.38", "-7.97127, 297.63, 5.27039, 0.83", "-7.99493, 299.729, 5.2932, 1.38", "-7.99765, 301.711, 5.38197, 1.38", "-8.01345, 304.403, 5.57483, 1.11", "-8.00769, 306.192, 5.74063, 0.55", "-7.90741, 307.973, 5.91496, 1.11", "-7.79642, 309.658, 6.07618, 1.11", "-7.66789, 311.458, 6.21509, 0.83", "-7.51975, 313.36, 6.29069, 0.83", "-7.38695, 315.089, 6.29069, 0.83", "-7.24106, 318.237, 6.29069, 1.11", "-7.14264, 320.292, 6.25526, 1.66", "-7.1213, 322.269, 6.19743, 1.66", "-7.20513, 324.831, 6.11035, 0.83", "-7.29385, 326.889, 6.02435, 0.83", "-7.3852, 329.792, 5.89208, 1.11", "-7.54254, 333.249, 5.72494, 0.83", "-7.6922, 337.109, 5.54106, 0.83", "-7.77607, 339.318, 5.43464, 0.83", "-7.96687, 343.884, 5.21867, 1.38", "-8.20499, 348.447, 5.01957, 1.38", "-8.32491, 350.48, 4.94379, 1.11", "-8.6167, 353.633, 4.86456, 1.11", "-8.82527, 355.636, 4.81301, 0.83", "-9.03651, 357.043, 4.77999, 0.83", "-9.53102, 359.4, 4.84127, 1.38", "-9.79179, 360.626, 4.96629, 1.38", "-10.2426, 363.497, 5.39034, 0.83", "-10.4468, 365.459, 5.75008, 0.83", "-10.6639, 368.591, 6.20417, 0.83", "-10.7688, 371.52, 6.65651, 0.83", "-10.7782, 375.279, 7.28096, 1.38", "-10.7442, 377.831, 7.72699, 1.38", "-10.5981, 379.607, 8.05686, 1.38", "-9.98714, 383.722, 8.78563, 1.38" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "1.02737, 55.6726, 2.68129, 1.11", "1.27721, 59.5811, -1.30739, 1.11", "1.37608, 60.7886, -2.37397, 1.11", "1.48298, 62.8681, -4.24815, 1.11", "1.68515, 68.8298, -9.41976, 1.11", "1.7298, 71.0394, -11.118, 1.11", "1.73939, 74.1423, -13.2932, 0.83", "1.68478, 75.9977, -14.3954, 0.83", "1.55354, 81.2996, -17.2113, 1.11", "1.50223, 83.7243, -18.2553, 1.11", "1.26676, 87.5342, -19.3455, 1.11", "0.898272, 91.0242, -20.0417, 1.11", "0.591113, 93.4568, -20.2833, 1.38", "0.411533, 95.1629, -20.2321, 1.38", "0.265852, 97.1409, -19.9783, 1.11", "0.00589897, 100.91, -19.4737, 1.11", "-0.221447, 104.894, -19.0414, 0.83", "-0.245405, 105.524, -18.9564, 0.83", "-0.330845, 109.369, -18.561, 1.66", "-0.429266, 112.665, -18.4133, 0.83", "-0.450695, 113.298, -18.4264, 0.83", "-0.509847, 115.985, -18.6474, 1.66", "-0.566939, 117.675, -18.8609, 1.66", "-0.655323, 119.813, -19.0624, 1.11", "-0.821642, 122.332, -19.2602, 1.11", "-1.01698, 125.036, -19.371, 1.11", "-1.21984, 128.261, -19.5298, 1.66", "-1.39225, 131.309, -19.641, 1.66", "-1.59969, 134.493, -19.8229, 0.83", "-1.78356, 137.295, -20.096, 0.83", "-1.88216, 139.274, -20.3795, 0.83", "-1.95677, 142.114, -20.8569, 1.66", "-1.99465, 144.833, -21.3644, 0.55", "-2.02413, 147.484, -21.8521, 0.55", "-1.99015, 150.446, -22.3404, 1.38", "-1.89029, 152.914, -22.6413, 1.94", "-1.76091, 155.891, -22.8973, 0.83", "-1.70348, 157.549, -22.9742, 0.83", "-1.65258, 160.346, -23.044, 1.94", "-1.61602, 163.866, -22.976, 1.94", "-1.6366, 166.157, -22.8999, 1.11", "-1.64511, 168.849, -22.6552, 1.11", "-1.6643, 171.286, -22.3487, 1.11", "-1.67197, 172.69, -22.1278, 1.11", "-1.69245, 174.127, -21.8962, 1.11", "-1.86391, 179.47, -21.0234, 2.22", "-2.01471, 185.585, -20.06, 0.83", "-2.03001, 187.368, -19.8142, 0.83", "-1.99035, 189.779, -19.5426, 1.11", "-1.93369, 192.782, -19.3096, 0.55", "-1.96914, 195.119, -19.2353, 2.22", "-2.0423, 196.58, -19.3134, 1.94", "-2.16147, 198.698, -19.6252, 0.83", "-2.23844, 200.954, -19.9499, 0.83", "-2.27291, 203.222, -20.2456, 0.83", "-2.34027, 205.617, -20.4819, 1.66", "-2.4346, 208.252, -20.7178, 0.83", "-2.49245, 209.759, -20.8221, 0.83", "-2.54421, 211.038, -20.9123, 1.11", "-2.65144, 213.013, -21.0671, 0.83", "-2.79778, 216.468, -21.3765, 0.83", "-2.82774, 217.092, -21.4322, 0.83", "-3.08307, 220.538, -21.7065, 1.94", "-3.27889, 223.109, -21.9141, 0.55", "-3.48443, 226.013, -22.2145, 0.55", "-3.52771, 226.536, -22.2913, 0.55", "-3.91678, 230.67, -23.0176, 2.22", "-4.15189, 233.828, -23.6036, 0.83", "-4.21894, 235.259, -23.8596, 0.83", "-4.28815, 238.645, -24.4103, 1.38", "-4.23983, 241.63, -24.8666, 0.55", "-4.15169, 244.281, -25.2118, 0.55", "-3.93188, 247.964, -25.7116, 0.83", "-3.49069, 253.145, -26.1247, 0.83", "-3.34256, 254.602, -26.1646, 2.49", "-3.02507, 257.415, -26.0796, 2.49", "-2.53211, 261.789, -25.784, 0.83", "-2.26534, 264.252, -25.5871, 0.83", "-1.97398, 269.139, -25.1539, 0.83", "-1.91621, 270.587, -25.0183, 0.83", "-1.9202, 273.732, -24.7476, 1.66", "-1.97637, 276.911, -24.5128, 0.83", "-2.03393, 279.235, -24.3737, 0.83", "-2.13843, 282.708, -24.2268, 0.83", "-2.20465, 285.391, -24.2268, 1.94", "-2.21202, 289.829, -24.2268, 0.83", "-2.15002, 294.405, -24.2268, 0.83", "-2.10216, 296.459, -24.2268, 0.83", "-2.0503, 299.045, -24.2268, 1.11", "-2.01549, 301.048, -24.2268, 2.49", "-2.04139, 304.48, -24.2268, 0.83", "-2.09327, 305.661, -24.2268, 0.83", "-2.23982, 307.656, -24.2268, 0.83", "-2.48741, 310.962, -24.2268, 0.83", "-2.69389, 314.191, -24.2948, 0.83", "-2.95733, 317.972, -24.4398, 1.11", "-3.14784, 321.28, -24.6499, 1.66", "-3.25928, 324.449, -24.8897, 0.83", "-3.31318, 327.041, -25.1289, 0.83", "-3.24457, 330.023, -25.4492, 0.83", "-3.1368, 332.213, -25.7098, 0.83", "-3.03035, 334.627, -26.0182, 0.83", "-2.86096, 338.399, -26.4958, 1.66", "-2.74009, 341.395, -26.8639, 0.83", "-2.68257, 342.981, -27.0364, 0.83", "-2.58822, 346.831, -27.3409, 1.38", "-2.4392, 350.444, -27.6129, 0.83", "-2.37319, 352.448, -27.7481, 0.83", "-2.33661, 353.649, -27.8432, 1.66", "-2.29742, 356.082, -28.009, 1.66", "-2.36812, 358.534, -28.1694, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-4.74662, 40.3282, 0.0, 0.28", "-6.69386, 55.2013, 0.0, 0.28", "-8.6411, 70.0744, 0.0, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "40.3387, -115.243, 28.3808, 0.83", "41.542, -115.173, 29.8001, 0.83", "42.3198, -115.106, 30.8152, 0.28", "44.1922, -114.948, 33.2586, 0.55", "44.9303, -114.885, 34.2219, 0.55", "45.9948, -114.795, 35.6111, 0.55", "49.4173, -114.504, 40.0774, 0.28", "49.8383, -114.513, 40.7401, 0.28" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "40.3387, -115.243, 28.3808, 0.55", "42.1002, -117.107, 30.4597, 0.55", "42.5784, -117.414, 31.0246, 0.83", "43.7438, -118.257, 32.4992, 0.28", "44.2121, -118.626, 33.1819, 0.83", "45.139, -119.33, 34.5065, 0.83", "47.383, -121.006, 37.6343, 0.83", "50.3744, -122.963, 41.4165, 0.83", "51.5073, -123.598, 42.9634, 0.83", "54.362, -124.701, 46.9532, 1.11", "55.2333, -124.892, 48.3909, 0.83", "55.5131, -124.885, 48.9425, 0.83", "56.2899, -124.417, 50.9897, 0.83", "57.3141, -122.67, 55.0581, 0.83", "57.95, -121.065, 57.856, 0.83", "58.5091, -118.52, 61.2158, 0.83", "58.6607, -117.216, 62.9083, 1.11", "58.7394, -115.198, 65.461, 0.28", "58.7042, -114.806, 65.9457, 0.55", "58.5257, -113.004, 67.7175, 0.28", "58.0977, -112.037, 68.8104, 1.11" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-1.50457, -100.07, 4.37881, 1.11", "-2.52085, -101.288, 5.13302, 1.11", "-3.67734, -102.966, 6.07837, 1.11", "-6.33556, -107.681, 8.34734, 1.38", "-7.71004, -110.492, 9.7478, 1.38", "-8.7226, -112.562, 10.7795, 1.66", "-10.3284, -115.846, 12.4157, 1.11", "-11.1268, -117.748, 13.3547, 1.11", "-12.077, -120.712, 14.723, 1.38", "-13.17, -125.782, 16.7247, 2.77" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-1.50457, -100.07, 4.37881, 1.38", "-1.49324, -104.518, 4.42321, 1.38", "-1.4134, -108.113, 4.55193, 1.94", "-1.27954, -110.723, 4.4484, 1.38", "-0.847605, -115.047, 3.70365, 1.94", "-0.333385, -118.402, 2.86798, 0.83", "0.0720411, -120.428, 2.24468, 0.83", "0.780269, -123.024, 1.31779, 1.38", "2.23497, -126.917, -0.442158, 1.94", "4.23994, -131.037, -2.79226, 0.83", "4.98454, -132.298, -3.67624, 0.83", "7.02262, -135.365, -6.32123, 1.11", "8.25402, -137.119, -7.91103, 0.55", "8.87924, -138.039, -8.80877, 0.55", "10.0732, -139.938, -10.6584, 0.55", "10.6264, -140.924, -11.7282, 0.83", "11.8024, -143.133, -14.3333, 0.55", "12.9503, -145.308, -17.1649, 1.66", "14.6221, -148.741, -21.7729, 0.55", "15.2401, -150.23, -23.7461, 1.66", "16.3418, -153.449, -27.8396, 0.55", "16.8456, -154.859, -29.6619, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-9.98714, 383.722, 8.78563, 0.83", "-9.92502, 385.463, 7.4863, 0.83", "-9.94887, 387.384, 6.06055, 0.83", "-9.9503, 389.898, 4.40161, 0.55", "-9.85689, 392.389, 2.86056, 0.83", "-9.73136, 394.907, 1.43952, 0.28", "-9.67443, 396.076, 0.839124, 0.55", "-9.68626, 396.877, 0.443277, 0.55", "-9.67988, 399.217, -0.57773, 1.11", "-9.61551, 401.22, -1.25161, 0.55", "-9.54616, 402.943, -1.73525, 1.11", "-9.48553, 404.432, -2.06532, 1.11", "-9.4068, 406.675, -2.46358, 0.28", "-9.39567, 409.59, -3.06109, 0.55", "-9.50529, 413.005, -3.81538, 0.55", "-9.54661, 414.754, -4.15022, 0.55", "-9.55943, 416.036, -4.36991, 0.28", "-9.51715, 417.907, -4.54423, 0.83", "-9.37, 421.571, -4.54843, 1.38", "-9.34878, 423.317, -4.44779, 1.38", "-9.23383, 427.314, -4.02541, 0.83", "-9.19125, 429.221, -3.76823, 0.83", "-9.06848, 434.504, -2.84799, 0.83", "-9.03833, 436.322, -2.48541, 0.83", "-8.96769, 439.229, -1.74259, 0.83", "-8.96007, 439.968, -1.54502, 0.83", "-8.93727, 442.505, -0.887711, 1.38", "-8.88487, 444.282, -0.486524, 0.55", "-8.81451, 446.429, -0.159157, 0.55", "-8.69632, 447.612, -0.0475244, 0.55", "-8.567, 448.476, -0.00819066, 0.28", "-8.14328, 450.871, -0.0170998, 0.83", "-7.74112, 452.717, -0.157827, 0.55", "-7.24092, 454.702, -0.405022, 0.83", "-6.51135, 457.552, -0.813588, 0.55", "-6.1077, 459.208, -1.06519, 1.66", "-5.50992, 461.797, -1.46929, 1.66", "-4.92654, 464.631, -1.90074, 0.83", "-4.52008, 466.912, -2.2271, 0.83", "-4.25301, 468.786, -2.46223, 0.83", "-4.14895, 469.907, -2.5719, 0.28", "-4.05128, 471.806, -2.68008, 1.11", "-4.08202, 474.661, -2.73599, 0.55", "-4.15981, 476.305, -2.72124, 0.55", "-4.26582, 478.022, -2.727, 0.55", "-4.36405, 479.157, -2.75164, 0.55", "-4.5942, 480.799, -2.81146, 1.11", "-4.92604, 482.606, -2.90203, 0.28", "-5.09319, 483.452, -2.95202, 0.55", "-5.36402, 485.465, -3.07467, 0.55", "-5.61388, 488.673, -3.26822, 0.55", "-5.63274, 489.803, -3.32617, 0.83", "-5.59435, 491.594, -3.44676, 0.83", "-5.4632, 494.16, -3.58049, 0.83", "-5.24371, 496.594, -3.63892, 0.83", "-4.96124, 498.464, -3.65626, 0.83", "-4.0068, 502.566, -3.66923, 1.11", "-3.4156, 504.665, -3.67182, 0.28", "-2.98893, 505.908, -3.69093, 0.55", "-2.48343, 507.258, -3.57412, 0.55", "-2.02689, 508.401, -3.35708, 0.55", "-1.6478, 509.173, -3.12962, 0.55", "-0.202411, 511.517, -2.29803, 0.55", "0.799345, 513.182, -1.71683, 0.83", "3.26599, 517.392, -0.641924, 0.55", "3.66508, 518.114, -0.467872, 0.83", "4.3868, 519.549, -0.151084, 0.83", "5.20463, 521.349, 0.175336, 0.55", "5.8718, 522.999, 0.369917, 0.83", "6.78656, 525.679, 0.474664, 0.83", "7.48631, 528.038, 0.437316, 0.55", "7.70163, 528.908, 0.481542, 0.55", "8.12209, 530.86, 0.684123, 0.55", "8.29854, 531.804, 0.828238, 0.83", "8.61805, 533.469, 1.12996, 0.83", "9.05631, 536.423, 1.64389, 0.55", "9.26459, 537.859, 1.82974, 0.55", "9.55823, 540.017, 2.12544, 0.55", "9.76877, 541.792, 2.36017, 0.55", "10.1928, 545.094, 2.78109, 0.55", "10.4958, 547.429, 3.01424, 0.83", "10.6493, 548.638, 3.06966, 1.11", "10.8638, 551.042, 3.19353, 0.55", "10.9969, 554.486, 3.45089, 0.83" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-9.98714, 383.722, 8.78563, 0.55", "-11.2518, 386.67, 8.32953, 0.55", "-12.0827, 388.784, 8.07234, 0.55", "-12.6982, 390.581, 7.89926, 0.55", "-13.2023, 392.202, 7.76329, 0.55", "-14.2012, 395.524, 7.51566, 0.55", "-14.7793, 397.451, 7.37676, 0.83", "-15.5305, 399.875, 7.28885, 0.83", "-16.2726, 402.395, 7.19383, 0.83", "-16.7778, 404.504, 7.11644, 0.55", "-17.1238, 406.273, 7.05632, 0.55", "-17.6117, 408.705, 7.00184, 0.83", "-18.0073, 410.662, 6.97391, 0.83", "-18.6911, 413.732, 6.93753, 0.83", "-19.1529, 415.74, 6.92504, 0.83", "-19.4902, 417.303, 6.93301, 0.55", "-19.8627, 419.322, 6.96636, 0.83", "-20.201, 421.565, 7.06101, 0.83" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-2.36812, 358.534, -28.1694, 0.55", "-2.39017, 360.21, -28.1694, 0.55", "-2.42206, 362.635, -28.1694, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-2.36812, 358.534, -28.1694, 0.55", "-5.13812, 358.831, -27.4094, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "49.8383, -114.513, 40.7401, 0.28", "50.2589, -117.12, 39.226, 0.28", "50.3364, -117.6, 38.9469, 1.11", "50.7045, -119.882, 37.6219, 0.28", "50.7416, -120.111, 37.4887, 1.11" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "49.8383, -114.513, 40.7401, 1.66", "49.9898, -113.632, 41.6524, 1.66", "50.1569, -111.221, 43.6643, 0.83", "50.2739, -108.814, 45.5567, 0.28", "50.2578, -107.999, 46.1455, 0.55", "50.0368, -105.185, 47.9576, 0.28", "49.8844, -103.5, 49.0028, 0.83", "49.5992, -101.314, 50.3561, 0.83", "49.3511, -99.9374, 51.1054, 0.28", "48.9423, -97.9451, 52.0741, 0.55", "48.3747, -96.1449, 52.825, 0.55", "47.4453, -93.9619, 53.5857, 0.28", "47.1035, -93.3117, 53.7993, 0.83", "46.1067, -91.4936, 54.3743, 0.28", "44.856, -89.3789, 54.968, 0.55", "43.2547, -86.8267, 55.647, 0.28", "42.0131, -85.0697, 56.0568, 1.11", "40.9656, -83.7675, 56.251, 0.28", "39.5919, -82.1102, 56.4436, 0.83" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-13.17, -125.782, 16.7247, 0.83", "-12.3335, -129.702, 17.2726, 0.83", "-11.8507, -131.618, 17.5449, 0.83", "-11.0684, -135.021, 17.988, 0.83", "-10.6598, -137.54, 18.4559, 0.55", "-10.4563, -139.873, 19.0264, 0.83", "-10.4136, -142.115, 19.7118, 0.83", "-10.515, -143.777, 20.4411, 0.83", "-10.9132, -146.501, 21.8507, 0.83", "-11.6371, -149.782, 23.7338, 0.83", "-12.2567, -151.926, 24.9803, 0.83", "-13.4476, -155.336, 27.0406, 1.11", "-14.4318, -157.891, 28.6058, 0.55", "-15.087, -159.727, 29.6624, 0.55", "-15.806, -162.025, 30.8331, 0.83", "-16.2037, -163.523, 31.414, 0.83", "-16.4879, -164.827, 31.8328, 0.28", "-16.7694, -166.197, 32.2067, 0.55", "-17.325, -169.095, 32.8951, 1.11", "-17.6446, -171.137, 33.3285, 0.28", "-17.8161, -172.289, 33.5432, 0.55", "-18.3818, -175.573, 34.075, 0.28", "-18.4944, -176.203, 34.1847, 0.83", "-18.8996, -178.724, 34.6702, 0.83", "-19.3095, -181.341, 35.1887, 0.28", "-19.3512, -181.733, 35.2599, 1.11", "-19.4786, -183.493, 35.509, 1.11", "-19.6901, -186.105, 35.7504, 0.55", "-19.842, -188.131, 35.9916, 1.11", "-19.9516, -189.818, 36.2614, 1.11", "-20.0463, -190.995, 36.5335, 1.11", "-20.1856, -192.554, 36.8975, 0.28", "-20.2387, -193.518, 37.2027, 0.55", "-20.2805, -195.011, 37.7463, 0.28", "-20.3001, -195.753, 38.1425, 0.83", "-20.3486, -197.2, 39.0326, 0.28", "-20.3702, -197.967, 39.5087, 0.83", "-20.3498, -200.844, 41.2621, 0.28", "-20.349, -201.731, 41.7281, 0.83", "-20.3848, -204.233, 42.799, 0.55", "-20.4396, -205.921, 43.4073, 1.11", "-20.5222, -207.754, 43.9141, 0.28", "-20.5666, -208.741, 44.1111, 0.83", "-20.7337, -211.415, 44.3759, 0.83", "-20.8108, -212.854, 44.5832, 0.28", "-20.8231, -213.738, 44.7323, 0.28", "-20.8014, -214.725, 45.0059, 0.83", "-20.718, -215.916, 45.448, 0.83", "-20.5377, -217.506, 46.1503, 0.55", "-20.0837, -220.394, 47.5635, 0.28", "-19.9897, -221.198, 47.9644, 1.11", "-19.8798, -222.382, 48.5057, 0.83", "-19.7005, -224.8, 49.4678, 0.28", "-19.6652, -225.174, 49.5857, 0.55", "-19.4433, -226.825, 49.9445, 0.55", "-19.0912, -228.618, 50.1443, 0.55", "-18.7739, -230.087, 50.2529, 0.55", "-18.5073, -231.337, 50.305, 0.55", "-18.1821, -232.958, 50.37, 0.55", "-17.7004, -235.01, 50.4496, 0.55", "-17.174, -236.995, 50.5243, 0.55", "-16.625, -238.934, 50.5901, 0.55", "-16.2655, -240.329, 50.6659, 0.28", "-15.878, -242.022, 50.759, 0.83", "-15.4717, -244.399, 50.8786, 0.83" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-13.17, -125.782, 16.7247, 1.38", "-16.297, -126.553, 16.7247, 1.38", "-20.0595, -127.481, 16.7247, 1.38" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "16.8456, -154.859, -29.6619, 0.55", "17.3478, -160.555, -30.2037, 0.55", "17.5301, -163.379, -30.5998, 0.55", "17.7721, -166.756, -31.1323, 2.49", "17.9759, -169.477, -31.6729, 0.55", "18.1622, -172.105, -32.2514, 0.55", "18.3979, -175.432, -32.9834, 0.83", "18.4072, -178.315, -33.7378, 0.28", "18.4575, -179.66, -34.1457, 0.55", "18.5928, -181.813, -34.9053, 0.28", "18.6933, -183.156, -35.415, 0.83" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "16.8456, -154.859, -29.6619, 0.83", "19.2873, -155.075, -30.121, 0.83", "21.4324, -155.104, -30.3744, 0.83", "23.7466, -155.051, -30.6459, 0.55", "26.6188, -155.015, -30.9697, 0.55", "27.5995, -155.07, -31.1261, 0.83", "29.5949, -155.386, -31.439, 0.55", "31.3786, -155.848, -31.6829, 1.11", "33.2364, -156.62, -31.9191, 0.28", "34.5368, -157.365, -32.0715, 0.83", "37.0663, -159.217, -32.4806, 0.28", "39.4245, -161.202, -32.9862, 1.38", "40.8008, -162.474, -33.1975, 0.55", "41.8549, -163.543, -33.2526, 0.55", "43.3555, -165.184, -33.0332, 0.83", "44.4355, -166.435, -32.6883, 0.28", "45.8778, -168.101, -32.0775, 0.55", "48.7778, -171.352, -30.4937, 0.28", "50.161, -172.792, -29.6317, 0.83", "52.3715, -174.846, -28.156, 0.55", "53.1518, -175.482, -27.601, 0.55", "55.5139, -177.213, -25.9257, 1.94", "58.3567, -179.229, -24.076, 0.55", "59.6853, -180.093, -23.3134, 0.55", "60.8568, -180.794, -22.6372, 0.55", "63.2052, -182.319, -21.3297, 0.28", "64.0131, -182.954, -20.8772, 1.38", "65.591, -184.493, -19.9606, 1.38", "67.6524, -187.057, -19.0849, 0.55", "68.5499, -188.45, -18.3595, 0.55", "70.1922, -191.284, -16.6391, 1.11", "71.4972, -193.759, -15.1261, 0.28", "71.731, -194.239, -14.815, 0.83", "72.9196, -196.867, -12.9295, 0.28", "76.4268, -205.499, -6.33489, 0.83", "76.8927, -206.693, -4.99638, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-20.201, 421.565, 7.06101, 0.55", "-20.2815, 423.315, 7.15511, 0.55", "-20.3679, 425.017, 7.51298, 0.28", "-20.5617, 426.541, 7.93054, 0.55", "-20.836, 427.617, 8.28312, 0.28", "-21.3325, 429.182, 8.7515, 0.83", "-21.8359, 430.776, 9.17288, 0.83", "-22.7028, 433.238, 10.3104, 0.55", "-23.2066, 434.643, 11.1493, 0.55", "-24.1665, 437.299, 12.9717, 0.83", "-24.736, 438.768, 14.0549, 0.83", "-25.3745, 440.437, 15.432, 0.83", "-27.5648, 445.731, 19.6544, 0.55", "-27.962, 446.81, 20.4511, 0.55", "-28.1117, 447.314, 20.8089, 0.83", "-28.3792, 448.462, 21.5851, 0.55", "-29.0361, 452.02, 23.6332, 1.11", "-29.4904, 455.135, 24.9878, 0.83", "-29.7091, 457.335, 25.5731, 0.55", "-29.8078, 458.977, 25.9859, 1.11", "-29.8707, 460.802, 26.4634, 0.55", "-29.8584, 463.809, 27.2672, 1.11", "-29.8517, 466.121, 27.8503, 0.55", "-29.8501, 468.19, 28.4599, 0.55", "-29.9248, 469.314, 28.8012, 0.28", "-30.1173, 471.322, 29.4199, 0.83", "-30.364, 473.359, 29.9773, 0.55", "-30.6308, 475.186, 30.4006, 0.83", "-30.9363, 476.92, 30.7342, 0.83", "-31.4797, 479.419, 31.1567, 0.55", "-32.0622, 481.908, 31.4952, 0.55", "-32.8778, 485.115, 31.8208, 0.83", "-33.7374, 488.288, 32.1054, 0.83", "-34.5424, 491.252, 32.354, 0.83", "-35.0563, 493.097, 32.4913, 0.83", "-35.7088, 495.559, 32.6356, 0.83", "-36.3048, 497.715, 32.7689, 0.83", "-36.8702, 500.059, 33.0, 0.83", "-37.1762, 501.436, 33.1655, 0.83", "-37.5388, 503.345, 33.4596, 0.55", "-37.8538, 504.969, 33.6556, 0.83", "-38.2674, 506.958, 33.9164, 0.83", "-38.9328, 510.188, 34.3606, 0.55", "-39.636, 513.299, 34.8225, 0.83", "-40.4651, 516.618, 35.3395, 0.55", "-41.5597, 520.181, 35.9056, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-20.201, 421.565, 7.06101, 0.55", "-22.2119, 424.794, 8.51869, 0.55", "-23.8369, 427.381, 9.28376, 0.28", "-24.6171, 428.569, 9.53635, 0.83", "-25.752, 430.219, 9.81244, 0.28", "-26.3184, 431.045, 9.92764, 0.28", "-27.245, 432.377, 10.0756, 0.83", "-28.9714, 435.077, 10.1314, 0.83", "-29.8344, 436.49, 10.0509, 0.28", "-31.0593, 438.602, 9.97615, 0.83", "-31.6901, 439.682, 9.94083, 0.55", "-32.8954, 441.783, 9.9374, 1.11", "-34.0102, 443.828, 9.95728, 0.55", "-34.8684, 445.563, 9.98461, 1.11", "-35.7567, 447.532, 10.0244, 0.55", "-36.8974, 450.299, 10.0877, 1.11", "-37.5805, 451.96, 10.1442, 0.28", "-38.1093, 453.279, 10.2161, 0.55", "-38.7719, 454.789, 10.3349, 0.28", "-39.2415, 455.859, 10.4459, 0.83", "-39.7547, 457.283, 10.5234, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-2.42206, 362.635, -28.1694, 0.83", "-1.71062, 365.692, -28.662, 0.83", "-1.37462, 367.357, -28.9428, 0.83", "-0.889097, 369.841, -29.3546, 2.22", "-0.440272, 372.358, -29.7841, 1.66", "0.13528, 375.425, -30.1904, 0.83", "0.3218, 376.436, -30.2982, 0.83", "0.661217, 378.694, -30.496, 0.83", "1.07974, 381.81, -30.6704, 1.66", "1.29814, 384.234, -30.731, 0.55", "1.36133, 386.677, -30.7976, 0.55", "1.33334, 388.202, -30.8657, 1.11", "1.21714, 390.818, -31.0937, 0.55", "0.898356, 395.101, -31.6764, 1.66", "0.790901, 397.277, -32.0521, 0.83", "0.718009, 400.829, -32.7499, 0.83", "0.715087, 402.548, -33.135, 0.83", "0.816043, 404.464, -33.5486, 1.66", "1.09299, 407.063, -34.069, 0.83", "1.70628, 411.052, -34.7376, 0.83", "2.29812, 414.036, -35.1074, 0.83", "2.57485, 415.168, -35.1813, 0.83", "3.199, 417.71, -35.2858, 0.83", "3.58187, 419.387, -35.3511, 1.38", "4.15833, 422.003, -35.436, 0.55", "4.56278, 423.737, -35.4967, 1.38", "5.37452, 427.049, -35.6145, 1.38", "6.0325, 429.888, -35.7117, 0.83", "6.70592, 432.97, -35.8058, 0.83", "7.47455, 436.338, -35.9027, 1.11", "8.09629, 439.104, -35.9715, 0.55", "8.54257, 441.329, -36.0121, 0.55", "8.86915, 443.092, -36.0969, 0.55", "9.60696, 446.999, -36.3832, 2.22", "9.93517, 448.747, -36.5547, 0.55", "10.2786, 450.495, -36.76, 0.55", "10.4408, 451.358, -36.8678, 1.11", "11.2269, 455.46, -37.3837, 0.55", "11.613, 457.726, -37.6587, 0.55", "11.731, 458.616, -37.7585, 0.55", "11.9644, 461.395, -38.0062, 1.11", "12.0786, 464.07, -38.244, 1.11", "12.1241, 466.269, -38.4025, 0.83", "12.0636, 468.568, -38.4874, 0.83", "11.9893, 470.02, -38.5517, 0.83", "11.7262, 472.921, -38.7036, 0.83", "11.2373, 476.207, -38.927, 2.22" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-2.42206, 362.635, -28.1694, 0.55", "-4.37944, 362.59, -28.1147, 0.55", "-6.42669, 362.543, -28.0575, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-20.0595, -127.481, 16.7247, 1.11", "-20.0213, -128.684, 16.7247, 1.11", "-19.9566, -130.715, 16.7247, 1.11" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-20.0595, -127.481, 16.7247, 1.11", "-22.829, -125.836, 14.1647, 1.11", "-23.7597, -125.154, 13.3879, 0.28", "-24.4356, -124.706, 13.0688, 0.83", "-27.0552, -123.059, 12.2579, 0.55", "-28.2784, -122.361, 11.9741, 0.55", "-29.4565, -121.71, 11.6654, 0.55", "-31.1035, -120.899, 11.2806, 0.55", "-35.167, -119.11, 10.2009, 1.11", "-37.557, -118.088, 9.53886, 0.55", "-39.1129, -117.438, 9.11846, 0.55", "-42.6669, -116.184, 8.06869, 0.83", "-44.8117, -115.532, 7.41026, 0.55", "-46.9047, -114.993, 6.74495, 1.11", "-50.267, -114.263, 5.56159, 0.83", "-51.4601, -114.069, 5.18254, 0.83", "-53.1446, -113.828, 4.75312, 0.83", "-55.811, -113.582, 4.29179, 0.83", "-59.1858, -113.402, 3.75944, 1.11", "-60.7513, -113.398, 3.46077, 0.83", "-62.984, -113.491, 2.95353, 0.83", "-66.255, -113.707, 2.10707, 0.83", "-68.3744, -113.93, 1.4425, 0.55", "-69.9381, -114.232, 0.876252, 1.38", "-72.1557, -114.706, -0.093552, 0.55", "-74.1511, -115.047, -1.06088, 0.55", "-75.3539, -115.271, -1.7193, 0.55", "-77.1152, -115.612, -2.82961, 0.55", "-78.0585, -115.751, -3.48501, 0.83", "-81.1854, -115.959, -5.81185, 0.55", "-82.2756, -115.994, -6.6609, 0.55", "-83.5099, -115.963, -7.63954, 0.55", "-85.9318, -115.801, -9.33442, 0.55", "-88.5092, -115.559, -10.8989, 1.11", "-91.1579, -115.31, -12.335, 0.55", "-91.8812, -115.273, -12.6586, 0.55", "-94.3541, -115.264, -13.5613, 0.55", "-97.2416, -115.299, -14.294, 1.94", "-99.3588, -115.449, -14.5051, 0.83", "-100.13, -115.541, -14.5416, 0.28", "-101.486, -115.803, -14.5976, 0.55", "-103.432, -116.271, -14.7042, 0.55", "-105.113, -116.757, -14.8244, 0.28", "-108.081, -117.658, -14.983, 1.11", "-110.304, -118.391, -14.9875, 0.28", "-112.749, -119.081, -14.9164, 0.83", "-114.656, -119.52, -14.778, 0.28", "-115.486, -119.652, -14.6757, 0.28", "-117.562, -119.826, -14.2908, 0.28", "-118.697, -119.809, -14.0029, 0.55", "-120.968, -119.523, -13.3566, 0.55", "-121.9, -119.245, -13.165, 0.83", "-123.398, -118.678, -12.9901, 0.28", "-123.765, -118.542, -12.9712, 0.83", "-126.1, -117.681, -12.9986, 0.83", "-128.004, -116.985, -13.0474, 0.83", "-130.179, -116.305, -13.1279, 0.55", "-131.281, -116.005, -13.1794, 0.55", "-133.344, -115.567, -13.2683, 1.38", "-135.552, -115.214, -13.3489, 1.38", "-137.391, -115.023, -13.4006, 0.28", "-138.876, -115.036, -13.4629, 0.83", "-140.048, -115.181, -13.5211, 0.28", "-141.157, -115.444, -13.5951, 1.38", "-142.828, -115.989, -13.7422, 0.28", "-143.405, -116.263, -13.8072, 0.83", "-144.986, -117.214, -14.0244, 0.55", "-145.822, -117.751, -14.1655, 0.55", "-147.283, -118.676, -14.4572, 1.11" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "18.6933, -183.156, -35.415, 0.83", "18.7406, -184.941, -35.5234, 0.83", "18.759, -186.633, -35.83, 1.94", "18.7957, -188.333, -36.2077, 1.94", "18.7934, -191.704, -37.1053, 0.83", "18.7675, -194.052, -37.7482, 1.38", "18.5969, -200.142, -39.597, 0.28", "18.584, -200.677, -39.7797, 0.83", "18.5424, -202.207, -40.3977, 0.55", "18.4289, -204.317, -41.4291, 0.28", "18.2277, -206.307, -42.6297, 0.55", "17.8815, -208.99, -44.22, 3.6" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "18.6933, -183.156, -35.415, 0.28", "16.5558, -182.211, -32.4016, 0.28", "16.2508, -182.076, -31.9716, 1.38", "14.0604, -181.108, -28.8835, 0.55", "12.8069, -180.553, -27.1165, 0.55" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "76.8927, -206.693, -4.99638, 1.38", "77.4527, -209.44, -4.96638, 1.38" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "76.8927, -206.693, -4.99638, 0.55", "78.0148, -205.625, -6.03824, 0.55", "78.7375, -204.937, -6.70926, 0.55", "80.6435, -203.123, -8.47887, 0.28", "81.2612, -202.535, -9.05236, 1.11", "83.1526, -200.735, -10.8084, 0.28", "84.7363, -199.227, -12.2789, 0.83" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-41.5597, 520.181, 35.9056, 1.38", "-41.3372, 522.114, 36.3767, 1.38", "-41.2897, 523.849, 36.8786, 0.55", "-41.4031, 525.307, 37.5596, 0.55", "-41.5017, 526.575, 38.1521, 0.55", "-41.6162, 528.048, 38.84, 1.11", "-41.8455, 530.996, 40.2175, 0.55", "-42.1771, 533.099, 41.395, 1.11", "-42.82, 536.15, 43.4014, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-41.5597, 520.181, 35.9056, 0.55", "-42.0969, 522.772, 35.4819, 0.55", "-42.4601, 523.853, 35.3618, 0.28", "-42.9322, 524.881, 35.1777, 0.83", "-43.8492, 526.691, 34.8152, 0.28", "-44.7246, 528.237, 34.5073, 0.55", "-45.5884, 529.676, 34.2336, 0.55", "-47.3702, 532.16, 33.7291, 1.11", "-49.0496, 534.201, 33.3543, 0.55", "-49.7035, 534.958, 33.1842, 0.55", "-51.182, 536.642, 32.7906, 0.83", "-52.2048, 537.788, 32.4762, 0.83", "-53.6724, 539.484, 31.8512, 0.83", "-54.4326, 540.391, 31.4579, 0.83", "-56.1865, 542.789, 30.3888, 0.55", "-57.4272, 544.808, 29.3384, 0.83", "-58.1387, 546.115, 28.5257, 0.83", "-59.2922, 548.418, 26.9914, 0.55", "-60.1733, 550.385, 25.6697, 0.55", "-60.706, 551.602, 24.8356, 0.83", "-62.0248, 554.402, 22.9475, 0.83", "-62.8226, 556.12, 21.7638, 0.83", "-63.3995, 557.35, 20.907, 0.28", "-63.832, 558.27, 20.2005, 0.55", "-64.5267, 559.838, 18.4949, 0.55", "-64.914, 560.689, 17.4228, 0.55", "-65.2338, 561.379, 16.4386, 0.55", "-66.0345, 563.059, 13.8026, 0.55", "-66.8911, 564.624, 10.9163, 0.83", "-68.3943, 566.884, 6.21886, 0.28", "-68.8956, 567.488, 4.66127, 0.28", "-69.1712, 567.785, 3.73755, 0.55", "-69.5006, 568.131, 2.45954, 0.28", "-69.6824, 568.346, 1.61118, 0.83", "-69.9335, 568.729, 0.283225, 0.83", "-70.5789, 570.129, -4.24763, 0.83", "-70.9692, 571.164, -7.75611, 0.28", "-71.3119, 572.108, -11.1747, 1.11", "-71.8008, 573.46, -16.2347, 0.55", "-71.9607, 573.801, -17.5609, 0.55", "-72.3261, 574.342, -19.948, 0.55", "-72.6831, 574.666, -21.5396, 0.55", "-73.1923, 574.949, -23.2458, 0.83", "-74.2917, 575.369, -26.214, 0.55", "-75.1565, 575.646, -28.3576, 1.11", "-77.9128, 576.515, -34.9518, 0.28", "-78.2303, 576.646, -35.7699, 0.55", "-79.3028, 577.217, -38.6169, 0.28", "-80.0723, 577.683, -40.7855, 1.11", "-81.2215, 578.446, -44.3164, 0.55", "-81.6455, 578.836, -46.001, 1.11", "-82.4363, 579.845, -50.0651, 0.55", "-82.5903, 580.144, -51.1914, 0.55", "-82.8552, 580.942, -54.1028, 1.11", "-82.921, 581.368, -55.5984, 1.11", "-82.9281, 582.944, -60.9091, 0.28", "-82.8975, 583.41, -62.4705, 0.83", "-82.8945, 584.507, -66.2422, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-39.7547, 457.283, 10.5234, 0.55", "-40.1847, 458.568, 10.9877, 0.55", "-40.7554, 460.165, 11.5129, 0.28", "-41.6227, 462.422, 12.1764, 1.38", "-42.9808, 465.662, 13.0384, 0.28", "-44.1964, 468.396, 13.7047, 0.55", "-44.8559, 469.873, 14.0367, 0.55", "-45.4259, 471.123, 14.2852, 0.83", "-46.2924, 472.925, 14.5885, 0.28", "-47.0261, 474.391, 14.7301, 0.83", "-47.5287, 475.455, 14.7431, 0.28", "-47.989, 476.516, 14.7748, 0.28", "-48.6944, 478.148, 14.8262, 0.83", "-49.5089, 480.087, 14.8864, 0.28", "-49.9025, 481.062, 14.914, 0.55", "-50.802, 483.316, 14.9708, 0.55", "-51.4818, 484.995, 15.021, 0.28", "-51.8377, 485.834, 15.0489, 0.28", "-52.4549, 487.343, 15.0993, 1.11", "-53.15, 489.273, 15.0474, 0.28", "-53.601, 490.609, 14.9097, 0.83", "-54.0296, 492.084, 14.63, 0.28", "-54.3723, 493.818, 14.1919, 0.83", "-54.5202, 494.89, 13.8965, 0.83", "-54.7839, 497.719, 13.0627, 0.55", "-54.9135, 499.629, 12.5095, 0.55", "-55.0013, 500.848, 12.1828, 0.55", "-55.1785, 503.06, 11.6516, 0.83", "-55.3433, 504.929, 11.2853, 0.55", "-55.662, 507.667, 10.886, 1.11", "-55.9156, 509.573, 10.7032, 0.55", "-56.1754, 511.362, 10.5596, 0.55", "-56.3583, 512.499, 10.4338, 0.83", "-56.502, 513.371, 10.2692, 0.55", "-56.9025, 516.408, 9.51425, 0.83", "-57.0237, 517.643, 9.03342, 0.28", "-57.0451, 517.894, 8.90595, 0.28", "-57.111, 518.968, 8.27675, 0.55", "-57.2512, 521.715, 6.56062, 0.28", "-57.2813, 522.232, 6.26026, 0.55", "-57.4336, 524.913, 4.79221, 0.28", "-57.4963, 526.005, 4.28525, 0.83", "-57.6922, 527.898, 3.54883, 0.83", "-57.7952, 528.698, 3.3107, 0.28", "-58.0288, 531.098, 2.80739, 0.55", "-58.1686, 532.661, 2.56269, 0.28", "-58.3136, 534.693, 2.5364, 0.83", "-58.4504, 537.379, 2.6768, 0.28", "-58.471, 538.542, 2.84028, 0.28", "-58.4671, 540.165, 3.18913, 0.55", "-58.4639, 542.648, 3.74934, 0.83", "-58.5267, 545.933, 4.53319, 0.28", "-58.5333, 547.32, 4.80678, 0.83", "-58.5354, 549.617, 5.05919, 0.28", "-58.4918, 552.639, 4.95838, 1.38", "-58.4383, 555.332, 4.57256, 0.28", "-58.3149, 557.687, 4.02803, 0.83", "-58.1586, 559.95, 3.31949, 0.83", "-57.8721, 563.507, 2.12095, 0.55", "-57.663, 567.141, 0.825888, 0.55", "-57.5216, 569.702, 0.0322887, 0.83", "-57.4398, 571.677, -0.309258, 0.83", "-57.3884, 574.238, -0.459457, 0.55", "-57.4238, 575.933, -0.217486, 0.55", "-57.4932, 578.421, 0.591, 1.38", "-57.6991, 581.496, 1.94327, 0.83", "-57.9486, 585.027, 3.82827, 1.11", "-58.0876, 586.764, 4.93109, 1.11", "-58.3008, 590.27, 7.60425, 0.83", "-58.3031, 591.028, 8.24901, 0.83" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-39.7547, 457.283, 10.5234, 0.28", "-37.5114, 457.092, 11.5895, 0.28", "-36.9403, 457.043, 11.8609, 0.83", "-35.1802, 456.892, 12.6975, 0.28", "-34.9223, 456.87, 12.82, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "11.2373, 476.207, -38.927, 0.55", "12.0809, 478.441, -38.9958, 0.55", "12.9774, 480.934, -39.1286, 0.55", "13.4536, 482.371, -39.224, 0.55", "14.1494, 484.239, -39.3576, 0.28", "14.8712, 485.948, -39.4921, 0.83", "15.9976, 488.548, -39.7007, 0.28", "16.4343, 489.591, -39.7944, 0.83", "17.0442, 491.198, -39.947, 0.55", "17.9088, 493.457, -40.2063, 0.55", "18.3977, 494.799, -40.3781, 0.83", "18.9208, 496.499, -40.5976, 0.28", "19.3148, 497.89, -40.7332, 0.83", "19.721, 499.474, -40.8985, 0.83", "19.9807, 500.638, -41.0982, 0.28", "20.1894, 502.317, -41.445, 0.83", "20.2459, 503.722, -41.814, 0.83", "20.1495, 505.469, -42.5799, 0.83", "19.8429, 507.42, -43.7105, 1.11", "19.28, 509.662, -45.5593, 0.55", "18.5983, 511.273, -47.1995, 0.55", "17.7738, 512.728, -48.9228, 1.11", "16.0877, 515.151, -52.3095, 0.28", "15.6176, 515.773, -53.283, 0.28", "14.0902, 517.692, -56.4775, 0.83", "13.2202, 518.796, -58.4453, 0.55", "12.9466, 519.168, -59.1837, 0.55", "12.1407, 520.387, -61.5216, 0.55", "11.5558, 521.315, -63.2347, 0.83", "10.4214, 523.015, -66.5387, 0.55", "8.28535, 526.051, -72.5192, 1.94", "6.47118, 528.613, -78.0297, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "11.2373, 476.207, -38.927, 0.55", "10.5795, 478.302, -39.2559, 0.55", "10.0026, 480.243, -39.612, 0.83", "9.74144, 481.189, -39.849, 0.55", "9.33163, 483.294, -40.421, 0.83", "8.86369, 486.334, -41.2988, 0.55", "8.62047, 487.653, -41.7398, 0.55", "8.39603, 488.889, -42.308, 1.11", "8.15374, 490.621, -43.2315, 0.83", "7.86322, 492.774, -44.5344, 0.83", "7.46528, 495.275, -46.231, 0.83", "6.93981, 497.352, -47.7672, 0.55", "6.24422, 499.68, -49.5118, 0.28", "5.41833, 501.919, -51.7725, 0.83", "4.71279, 503.59, -53.7136, 0.55", "3.83127, 505.481, -56.1333, 1.38", "3.04868, 507.243, -58.4849, 0.55", "2.62087, 508.308, -59.8652, 0.55", "-0.0991558, 515.392, -68.6723, 0.83", "-0.522553, 516.444, -69.9934, 0.55", "-0.608096, 516.7, -70.2968, 0.55", "-1.05518, 518.323, -72.0278, 1.38", "-1.2981, 519.611, -73.1176, 1.38", "-1.7079, 522.256, -74.3683, 0.28", "-1.85525, 523.427, -74.2776, 0.55", "-2.00403, 525.435, -73.9706, 0.28", "-2.16842, 527.597, -73.5536, 0.55", "-2.50048, 531.386, -72.5491, 0.55", "-2.71598, 533.705, -71.848, 0.55", "-2.96275, 536.454, -70.9102, 0.55", "-3.05084, 538.709, -70.0357, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-19.9566, -130.715, 16.7247, 0.55", "-20.9766, -131.287, 18.0572, 0.55", "-21.7872, -131.744, 19.1377, 0.28", "-22.5306, -132.164, 20.1285, 1.11", "-25.2488, -133.699, 23.7512, 0.28", "-25.6031, -133.9, 24.2234, 1.11", "-27.4381, -134.936, 26.6691, 0.28", "-27.8684, -135.196, 27.387, 1.11" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-19.9566, -130.715, 16.7247, 0.83", "-21.5587, -132.403, 17.8917, 0.83", "-23.1083, -133.785, 18.9996, 0.83", "-24.5079, -134.709, 20.096, 0.83", "-26.9671, -136.197, 22.0253, 0.83", "-28.6423, -137.341, 23.7248, 0.83", "-30.7658, -139.018, 26.2832, 0.83", "-31.8761, -140.003, 27.821, 0.83", "-34.1841, -142.662, 31.617, 1.11", "-34.6108, -143.361, 32.5569, 1.11", "-36.0159, -146.937, 36.8551, 1.11", "-36.6823, -149.437, 39.5185, 1.11", "-37.089, -151.75, 41.6908, 1.11", "-37.3018, -153.903, 43.5503, 1.38", "-37.4171, -157.386, 46.1745, 0.55", "-37.4781, -158.861, 47.2134, 0.83", "-37.6076, -160.317, 48.0577, 0.83", "-37.6664, -161.558, 48.7962, 0.83", "-37.7566, -162.739, 49.5537, 0.83", "-37.9166, -165.029, 50.7668, 0.55", "-38.101, -166.599, 51.2701, 0.55", "-38.2479, -167.476, 51.4519, 1.11", "-38.5558, -169.111, 51.6289, 0.28", "-38.7527, -169.996, 51.6778, 1.11", "-39.3224, -171.942, 51.6063, 0.55", "-39.9575, -173.836, 51.2454, 0.55", "-40.8499, -175.95, 50.6814, 0.28", "-41.163, -176.623, 50.4411, 1.11" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-147.283, -118.676, -14.4572, 1.11", "-149.783, -118.409, -14.4572, 1.11" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-147.283, -118.676, -14.4572, 0.28", "-147.911, -120.516, -15.1335, 0.28", "-148.03, -120.865, -15.2617, 0.83", "-148.617, -122.584, -15.8937, 0.28", "-148.782, -123.068, -16.0718, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "17.8815, -208.99, -44.22, 0.55", "16.507, -210.252, -43.34, 0.55", "15.5261, -211.128, -42.8132, 0.55", "13.7162, -212.692, -41.5292, 0.28", "13.2048, -213.185, -41.1483, 0.55", "12.4166, -213.944, -40.5622, 1.11", "11.4071, -214.942, -39.8172, 0.28", "10.591, -215.68, -39.227, 0.55", "8.23743, -217.705, -37.7047, 0.28", "6.24683, -219.384, -36.5266, 0.83", "4.2576, -221.1, -35.2845, 0.28", "3.69818, -221.598, -34.9161, 0.83", "2.27387, -222.854, -33.9767, 0.83", "0.768386, -224.097, -33.0993, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "17.8815, -208.99, -44.22, 0.28", "17.7224, -212.965, -44.061, 0.28", "17.6841, -214.364, -43.937, 0.55", "17.6458, -216.719, -43.6761, 0.28", "17.6231, -219.554, -43.3356, 1.11", "17.6257, -222.928, -42.9176, 0.28", "17.6467, -223.825, -42.8089, 0.55", "17.6621, -225.22, -42.5173, 0.28", "17.6819, -226.092, -42.3057, 0.55", "17.6635, -227.205, -41.9917, 0.28", "17.6404, -227.821, -41.8379, 0.55", "17.5497, -229.842, -41.5945, 0.28", "17.4752, -231.627, -41.4697, 1.11", "17.2475, -235.399, -41.0164, 0.28", "17.1272, -237.582, -40.6949, 1.11", "17.0226, -239.322, -40.4297, 1.11", "16.8113, -242.551, -39.9276, 0.28", "16.6734, -244.596, -39.6058, 0.83", "16.5703, -248.953, -38.9856, 0.55", "16.6039, -251.368, -38.7891, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "77.4527, -209.44, -4.96638, 0.28", "79.9793, -210.834, -4.54411, 0.28", "80.8659, -211.311, -4.40119, 0.83", "82.2571, -212.072, -4.19526, 0.28", "84.2017, -213.164, -3.93069, 0.83", "86.1371, -214.32, -3.68544, 0.28", "87.5738, -215.166, -3.51972, 0.55", "88.3468, -215.577, -3.43687, 0.28", "90.0449, -216.388, -3.29689, 0.55", "91.1688, -216.901, -3.22737, 0.28", "92.4334, -217.447, -3.15934, 0.55", "94.0753, -218.069, -3.09977, 0.55", "95.7225, -218.655, -3.13645, 0.55", "97.9438, -219.478, -3.27975, 0.83", "99.2749, -219.998, -3.49974, 0.28", "100.515, -220.569, -3.79529, 0.83", "101.776, -221.203, -3.9194, 1.38", "104.541, -222.763, -3.87498, 0.28", "106.043, -223.731, -3.82139, 0.83", "108.361, -225.292, -3.69408, 0.28", "109.826, -226.285, -3.55444, 1.11", "115.395, -230.111, -2.61163, 0.28", "116.107, -230.602, -2.44239, 0.55", "119.677, -233.046, -1.4176, 0.28", "122.061, -234.733, -0.735402, 0.28", "123.082, -235.538, -0.443979, 0.55", "124.69, -236.839, -0.152794, 0.28", "125.607, -237.691, -0.211272, 0.28", "126.757, -238.825, -0.232075, 0.55", "128.092, -240.244, 0.0535538, 0.55", "128.855, -241.467, 0.145446, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "77.4527, -209.44, -4.96638, 0.55", "75.1064, -210.85, -4.91179, 0.55", "74.134, -211.434, -4.88916, 0.55", "72.9353, -212.155, -4.86128, 0.28", "71.3498, -213.108, -4.82439, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-42.82, 536.15, 43.4014, 0.83", "-42.8946, 538.261, 44.2519, 0.83", "-42.966, 541.52, 45.5416, 0.83", "-42.9921, 543.747, 46.436, 0.83", "-43.1927, 548.361, 48.2602, 0.83", "-43.2222, 548.894, 48.4333, 1.11", "-43.3241, 550.284, 48.8056, 0.55", "-43.4178, 551.107, 48.984, 0.83", "-43.6707, 551.762, 47.447, 0.28", "-43.7598, 552.4, 45.7997, 0.55", "-43.7158, 554.475, 40.6418, 0.28", "-43.6733, 555.158, 39.1628, 0.83", "-43.6068, 555.725, 38.0339, 0.83", "-42.9334, 559.616, 31.1821, 0.55", "-42.6478, 560.792, 29.3759, 0.55", "-42.272, 561.981, 28.1173, 1.11", "-41.07, 566.245, 26.3196, 0.55", "-40.9126, 566.85, 26.231, 0.83", "-40.7033, 567.824, 26.3882, 0.28", "-40.6295, 568.345, 26.5877, 0.55", "-40.6049, 569.179, 26.8035, 0.28", "-40.6318, 570.334, 26.9011, 0.83", "-40.5905, 571.546, 26.8064, 0.28", "-40.5741, 572.349, 26.7307, 0.83", "-40.5422, 574.929, 26.2457, 0.55", "-40.5101, 577.267, 25.6527, 0.55", "-40.5003, 578.997, 25.1471, 0.55", "-40.4843, 581.409, 24.4248, 0.55", "-40.4926, 583.028, 23.8947, 0.55", "-40.5483, 586.532, 22.778, 0.55", "-40.55, 587.621, 22.4229, 0.28", "-40.5415, 588.586, 22.078, 0.55", "-40.5656, 589.923, 21.5883, 0.28", "-40.711, 591.993, 20.7754, 0.55", "-40.7733, 592.85, 20.461, 0.55", "-40.854, 594.475, 19.9465, 0.28", "-40.8766, 596.01, 19.3654, 0.28", "-40.8195, 596.798, 19.0429, 0.55", "-40.4864, 598.546, 17.9031, 0.28", "-40.1536, 599.451, 17.0815, 0.83", "-39.7605, 600.406, 16.1392, 0.83", "-38.9626, 602.08, 14.3471, 0.55", "-38.2809, 603.299, 12.8889, 0.55", "-36.0782, 606.829, 8.27479, 0.28", "-34.507, 609.008, 5.13804, 0.83" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-42.82, 536.15, 43.4014, 0.55", "-44.1845, 538.301, 43.7629, 0.55", "-45.9803, 541.131, 44.2386, 0.55", "-47.2435, 543.122, 44.5733, 0.55", "-48.3401, 544.85, 44.8638, 0.83" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-58.3031, 591.028, 8.24901, 0.28", "-57.7982, 591.762, 6.19564, 0.28", "-57.6578, 591.967, 5.62452, 0.55", "-56.2763, 593.977, 0.00676681, 0.28", "-56.1195, 594.205, -0.630801, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-58.3031, 591.028, 8.24901, 0.28", "-60.2436, 592.947, 8.18131, 0.28", "-61.4431, 594.133, 8.13947, 0.83", "-62.34, 595.02, 8.10818, 0.83", "-62.9075, 595.581, 8.08838, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "6.47118, 528.613, -78.0297, 0.55", "3.9104, 529.555, -78.595, 0.55", "0.901551, 530.702, -79.4725, 0.55", "-1.34502, 531.558, -80.1276, 0.55", "-3.9537, 532.552, -80.8884, 0.28", "-6.3132, 533.452, -81.5765, 0.83", "-8.13151, 534.145, -82.1067, 0.83", "-10.0316, 534.994, -82.8585, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "6.47118, 528.613, -78.0297, 0.55", "5.56118, 531.114, -78.7397, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-149.783, -118.409, -14.4572, 0.28", "-151.991, -118.22, -14.6875, 0.28", "-154.195, -117.92, -14.8925, 0.55", "-156.655, -117.549, -15.0978, 0.28", "-158.033, -117.361, -15.1695, 1.11", "-160.143, -117.071, -15.222, 0.28", "-160.685, -116.989, -15.2554, 0.55", "-163.731, -116.53, -15.5352, 0.28", "-164.601, -116.383, -15.6221, 1.11", "-166.57, -116.086, -15.8263, 0.28", "-167.736, -115.918, -15.9364, 1.11", "-170.509, -115.537, -16.0976, 1.11", "-172.425, -115.328, -16.3009, 0.55" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-149.783, -118.409, -14.4572, 0.83", "-151.583, -120.357, -15.3572, 0.83" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "0.768386, -224.097, -33.0993, 0.83", "0.252363, -224.849, -33.76, 0.83", "-0.611722, -226.108, -34.8663, 0.28", "-1.33648, -227.164, -35.7942, 1.11", "-3.38443, -230.149, -38.4161, 0.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "0.768386, -224.097, -33.0993, 1.11", "-1.11161, -222.221, -33.0993, 1.11" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-62.9075, 595.581, 8.08838, 0.55", "-61.9429, 596.623, 6.43776, 0.55", "-60.891, 597.599, 4.9801, 0.28", "-60.6309, 597.831, 4.48182, 0.55", "-58.7954, 599.471, 0.965062, 0.28", "-57.9346, 600.24, -0.684167, 0.55", "-56.7644, 601.285, -2.92628, 0.28", "-56.0357, 602.032, -4.77111, 0.55", "-54.1137, 604.3, -10.8495, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-62.9075, 595.581, 8.08838, 0.28", "-64.0885, 595.774, 8.2177, 0.28", "-65.9112, 596.073, 8.41729, 0.55", "-67.4581, 596.326, 8.58667, 0.55", "-69.0902, 596.593, 8.76538, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-10.0316, 534.994, -82.8585, 0.55", "-10.7016, 536.271, -82.7027, 0.55", "-11.3492, 537.505, -82.5521, 0.55", "-11.9379, 538.626, -82.4152, 0.83", "-12.6522, 539.988, -82.2491, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-10.0316, 534.994, -82.8585, 0.28", "-12.5495, 536.135, -84.1283, 0.28", "-13.2405, 536.448, -84.4767, 0.28", "-14.6377, 537.082, -85.1814, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-3.38443, -230.149, -38.4161, 1.11", "-3.41129, -232.351, -36.8724, 1.11", "-3.49039, -234.6, -35.1881, 0.28", "-3.59826, -236.159, -34.0062, 1.11", "-4.08444, -240.459, -30.4733, 0.28", "-4.23724, -241.527, -29.5797, 1.94", "-4.71856, -244.646, -27.1294, 1.11", "-4.85774, -245.336, -26.589, 0.28", "-5.05252, -246.131, -25.9779, 0.83", "-5.62653, -248.263, -24.58, 0.28", "-5.91307, -249.262, -24.1667, 1.11", "-6.65919, -251.93, -23.3081, 0.28", "-7.28079, -254.063, -22.8453, 0.28", "-7.57211, -255.185, -22.621, 1.11", "-7.57211, -255.185, -22.621, 1.11", "-7.88695, -256.588, -22.4988, 0.55", "-8.03605, -257.202, -22.4279, 1.38", "-8.73434, -259.53, -21.987, 0.28", "-8.80732, -259.779, -21.9198, 1.11" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-3.38443, -230.149, -38.4161, 0.55", "-6.42434, -229.875, -37.2621, 0.55", "-8.308, -229.705, -36.5471, 0.55", "-9.92176, -229.56, -35.9345, 0.83" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-69.0902, 596.593, 8.76538, 0.55", "-69.6304, 597.869, 9.03805, 0.55", "-70.4441, 600.208, 9.61166, 0.55", "-70.8448, 601.779, 9.96509, 0.55", "-71.2934, 603.723, 10.3305, 0.55", "-71.6729, 605.516, 10.7211, 0.28", "-71.8333, 606.337, 10.8547, 0.83", "-72.1841, 608.681, 11.1251, 0.83", "-72.3525, 610.697, 11.3183, 0.83", "-72.4192, 611.732, 11.3718, 0.55", "-72.4148, 614.371, 11.4175, 0.83", "-72.2259, 617.361, 11.2591, 0.28", "-72.1428, 618.792, 11.0548, 0.28" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-69.0902, 596.593, 8.76538, 0.55", "-71.8902, 595.435, 9.40538, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_29", "dend_0", "dend_57", "dend_30", "dend_12", "dend_1", "dend_59", "dend_58", "dend_46", "dend_31", "dend_28", "dend_13", "dend_3", "dend_2", "dend_61", "dend_60", "dend_56", "dend_47", "dend_37", "dend_32", "dend_23", "dend_14", "dend_5", "dend_4", "dend_53", "dend_48", "dend_39", "dend_38", "dend_34", "dend_33", "dend_25", "dend_24", "dend_16", "dend_15", "dend_7", "dend_6", "dend_55", "dend_54", "dend_50", "dend_49", "dend_41", "dend_40", "dend_36", "dend_35", "dend_27", "dend_26", "dend_22", "dend_17", "dend_9", "dend_8", "dend_52", "dend_51", "dend_43", "dend_42", "dend_21", "dend_18", "dend_11", "dend_10", "dend_45", "dend_44", "dend_20", "dend_19" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_29", "dend_0", "dend_57", "dend_30", "dend_12", "dend_1", "dend_59", "dend_58", "dend_46", "dend_31", "dend_28", "dend_13", "dend_3", "dend_2", "dend_61", "dend_60", "dend_56", "dend_47", "dend_37", "dend_32", "dend_23", "dend_14", "dend_5", "dend_4", "dend_53", "dend_48", "dend_39", "dend_38", "dend_34", "dend_33", "dend_25", "dend_24", "dend_16", "dend_15", "dend_7", "dend_6", "dend_55", "dend_54", "dend_50", "dend_49", "dend_41", "dend_40", "dend_36", "dend_35", "dend_27", "dend_26", "dend_22", "dend_17", "dend_9", "dend_8", "dend_52", "dend_51", "dend_43", "dend_42", "dend_21", "dend_18", "dend_11", "dend_10", "dend_45", "dend_44", "dend_20", "dend_19" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_29", "dend_0", "axon_0", "dend_57", "dend_30", "dend_12", "dend_1", "axon_1", "dend_59", "dend_58", "dend_46", "dend_31", "dend_28", "dend_13", "dend_3", "dend_2", "dend_61", "dend_60", "dend_56", "dend_47", "dend_37", "dend_32", "dend_23", "dend_14", "dend_5", "dend_4", "dend_53", "dend_48", "dend_39", "dend_38", "dend_34", "dend_33", "dend_25", "dend_24", "dend_16", "dend_15", "dend_7", "dend_6", "dend_55", "dend_54", "dend_50", "dend_49", "dend_41", "dend_40", "dend_36", "dend_35", "dend_27", "dend_26", "dend_22", "dend_17", "dend_9", "dend_8", "dend_52", "dend_51", "dend_43", "dend_42", "dend_21", "dend_18", "dend_11", "dend_10", "dend_45", "dend_44", "dend_20", "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_3", "dend_3", "dend_2", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_47", "dend_47", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_53", "dend_53", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L4_DBC_a7aa7154d8_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_57, id: dend_57, parent: dend_29
create dend_57
public dend_57
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_12, id: dend_12, parent: dend_0
create dend_12
public dend_12
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_46, id: dend_46, parent: dend_30
create dend_46
public dend_46
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_12
create dend_28
public dend_28
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_56, id: dend_56, parent: dend_46
create dend_56
public dend_56
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_37, id: dend_37, parent: dend_31
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_23, id: dend_23, parent: dend_13
create dend_23
public dend_23
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_53, id: dend_53, parent: dend_47
create dend_53
public dend_53
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_16
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_29, dend_0, dend_57, dend_30, dend_12, dend_1, dend_59, dend_58, dend_46, dend_31, dend_28, dend_13, dend_3, dend_2, dend_61, dend_60, dend_56, dend_47, dend_37, dend_32, dend_23, dend_14, dend_5, dend_4, dend_53, dend_48, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_49, dend_41, dend_40, dend_36, dend_35, dend_27, dend_26, dend_22, dend_17, dend_9, dend_8, dend_52, dend_51, dend_43, dend_42, dend_21, dend_18, dend_11, dend_10, dend_45, dend_44, dend_20, dend_19]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_29, dend_0, dend_57, dend_30, dend_12, dend_1, dend_59, dend_58, dend_46, dend_31, dend_28, dend_13, dend_3, dend_2, dend_61, dend_60, dend_56, dend_47, dend_37, dend_32, dend_23, dend_14, dend_5, dend_4, dend_53, dend_48, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_49, dend_41, dend_40, dend_36, dend_35, dend_27, dend_26, dend_22, dend_17, dend_9, dend_8, dend_52, dend_51, dend_43, dend_42, dend_21, dend_18, dend_11, dend_10, dend_45, dend_44, dend_20, dend_19]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_29, dend_0, axon_0, dend_57, dend_30, dend_12, dend_1, axon_1, dend_59, dend_58, dend_46, dend_31, dend_28, dend_13, dend_3, dend_2, dend_61, dend_60, dend_56, dend_47, dend_37, dend_32, dend_23, dend_14, dend_5, dend_4, dend_53, dend_48, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_49, dend_41, dend_40, dend_36, dend_35, dend_27, dend_26, dend_22, dend_17, dend_9, dend_8, dend_52, dend_51, dend_43, dend_42, dend_21, dend_18, dend_11, dend_10, dend_45, dend_44, dend_20, dend_19]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_64
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_3, dend_3, dend_2, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_47, dend_47, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_43, dend_43, dend_43, dend_43, dend_42, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_29(0), soma_0(0.4999993435552117)
    connect dend_0(0), soma_0(0.4999993435552117)
    connect axon_0(0), soma_0(1.0)
    connect dend_57(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_12(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_46(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_28(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_56(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_37(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_23(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_53(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 2.03775, -11.4909, 0.0, 3.43439 ) }
    soma_0 { pt3dadd( 1.89325, -10.3873, 0.0, 4.10946 ) }
    soma_0 { pt3dadd( 1.74876, -9.28361, 0.0, 5.49512 ) }
    soma_0 { pt3dadd( 1.60426, -8.17996, 0.0, 6.92062 ) }
    soma_0 { pt3dadd( 1.45977, -7.07631, 0.0, 8.33776 ) }
    soma_0 { pt3dadd( 1.31528, -5.97266, 0.0, 9.37588 ) }
    soma_0 { pt3dadd( 1.17078, -4.86901, 0.0, 10.388 ) }
    soma_0 { pt3dadd( 1.02629, -3.76536, 0.0, 11.4001 ) }
    soma_0 { pt3dadd( 0.881794, -2.66171, 0.0, 12.0337 ) }
    soma_0 { pt3dadd( 0.7373, -1.55806, 0.0, 11.8609 ) }
    soma_0 { pt3dadd( 0.592806, -0.454415, 0.0, 11.675 ) }
    soma_0 { pt3dadd( 0.448312, 0.649234, 0.0, 11.6509 ) }
    soma_0 { pt3dadd( 0.303818, 1.75288, 0.0, 11.6321 ) }
    soma_0 { pt3dadd( 0.159324, 2.85653, 0.0, 10.7321 ) }
    soma_0 { pt3dadd( 0.0148298, 3.96018, 0.0, 9.70998 ) }
    soma_0 { pt3dadd( -0.129664, 5.06383, 0.0, 8.74071 ) }
    soma_0 { pt3dadd( -0.274158, 6.16748, 0.0, 7.95018 ) }
    soma_0 { pt3dadd( -0.418652, 7.27113, 0.0, 6.7513 ) }
    soma_0 { pt3dadd( -0.563146, 8.37478, 0.0, 5.22686 ) }
    soma_0 { pt3dadd( -0.70764, 9.47842, 0.0, 3.48033 ) }
    soma_0 { pt3dadd( -0.852134, 10.5821, 0.0, 2.02048 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 21/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -0.596014, -11.6449, -2.34, 2.22 ) }
    dend_29 { pt3dadd( -0.980489, -15.0175, -0.984006, 2.22 ) }
    dend_29 { pt3dadd( -1.31698, -18.4588, 0.290101, 2.49 ) }
    dend_29 { pt3dadd( -1.822, -24.4365, 2.31791, 2.49 ) }
    dend_29 { pt3dadd( -2.1175, -30.2129, 3.98564, 2.49 ) }
    dend_29 { pt3dadd( -2.20053, -32.8342, 4.65255, 1.94 ) }
    dend_29 { pt3dadd( -2.2377, -35.6595, 5.29367, 1.38 ) }
    dend_29 { pt3dadd( -2.1572, -39.0961, 5.97401, 1.11 ) }
    dend_29 { pt3dadd( -2.05147, -41.414, 6.32646, 0.83 ) }
    dend_29 { pt3dadd( -1.76285, -47.2289, 6.85652, 1.11 ) }
    dend_29 { pt3dadd( -1.67031, -49.5751, 6.887, 1.11 ) }
    dend_29 { pt3dadd( -1.5546, -52.383, 6.85149, 1.38 ) }
    dend_29 { pt3dadd( -1.42392, -55.0702, 6.77371, 0.83 ) }
    dend_29 { pt3dadd( -1.28621, -57.3571, 6.71991, 1.66 ) }
    dend_29 { pt3dadd( -1.12399, -59.5212, 6.68599, 1.11 ) }
    dend_29 { pt3dadd( -0.733088, -64.2071, 6.56742, 1.66 ) }
    dend_29 { pt3dadd( -0.49788, -66.7753, 6.49635, 1.38 ) }
    dend_29 { pt3dadd( -0.160677, -70.0784, 6.39644, 1.94 ) }
    dend_29 { pt3dadd( 0.281134, -73.5613, 6.28318, 1.38 ) }
    dend_29 { pt3dadd( 0.889337, -77.1803, 6.16047, 1.38 ) }
    dend_29 { pt3dadd( 1.81456, -81.6443, 6.00941, 1.38 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 42/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.59602, 9.47005, -0.86, 2.22 ) }
    dend_0 { pt3dadd( -1.00078, 14.285, -0.832455, 1.94 ) }
    dend_0 { pt3dadd( -0.663726, 18.0499, -0.713543, 1.94 ) }
    dend_0 { pt3dadd( -0.322257, 23.6855, -0.357638, 1.94 ) }
    dend_0 { pt3dadd( -0.231909, 25.7405, -0.201851, 1.38 ) }
    dend_0 { pt3dadd( 0.0471427, 30.3853, 0.13315, 2.22 ) }
    dend_0 { pt3dadd( 0.321025, 34.9441, 0.461946, 1.94 ) }
    dend_0 { pt3dadd( 0.677413, 41.1089, 0.931341, 1.94 ) }
    dend_0 { pt3dadd( 0.882417, 45.5506, 1.36468, 1.94 ) }
    dend_0 { pt3dadd( 0.965189, 49.8493, 1.92072, 1.94 ) }
    dend_0 { pt3dadd( 1.02737, 55.6726, 2.68129, 2.49 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 53/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.852134, 10.5821, 0.0, 0.55 ) }
    axon_0 { pt3dadd( -2.79938, 25.4552, 0.0, 0.55 ) }
    axon_0 { pt3dadd( -4.74662, 40.3282, 0.0, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_29 (entry count 56/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 1.81456, -81.6443, 6.00941, 0.55 ) }
    dend_57 { pt3dadd( 2.58059, -83.0542, 6.39099, 0.55 ) }
    dend_57 { pt3dadd( 3.35107, -84.2602, 6.88951, 0.55 ) }
    dend_57 { pt3dadd( 4.48567, -85.8994, 7.80804, 0.28 ) }
    dend_57 { pt3dadd( 5.8036, -87.4638, 8.78303, 0.55 ) }
    dend_57 { pt3dadd( 7.39391, -89.1721, 9.85623, 0.28 ) }
    dend_57 { pt3dadd( 8.73837, -90.5022, 10.816, 1.11 ) }
    dend_57 { pt3dadd( 10.8895, -92.4965, 12.444, 0.28 ) }
    dend_57 { pt3dadd( 12.2965, -93.6938, 13.7087, 0.83 ) }
    dend_57 { pt3dadd( 14.3885, -95.3308, 15.7297, 0.83 ) }
    dend_57 { pt3dadd( 15.6386, -96.2795, 16.9948, 0.83 ) }
    dend_57 { pt3dadd( 17.7487, -97.9081, 19.1625, 0.83 ) }
    dend_57 { pt3dadd( 18.8467, -98.7476, 20.2989, 1.11 ) }
    dend_57 { pt3dadd( 22.2053, -101.494, 23.5751, 0.28 ) }
    dend_57 { pt3dadd( 22.9469, -102.155, 24.2175, 0.28 ) }
    dend_57 { pt3dadd( 23.5881, -102.76, 24.7206, 0.55 ) }
    dend_57 { pt3dadd( 24.5355, -103.633, 25.3066, 0.55 ) }
    dend_57 { pt3dadd( 26.5184, -105.413, 26.1323, 0.55 ) }
    dend_57 { pt3dadd( 28.3856, -106.963, 26.6685, 0.55 ) }
    dend_57 { pt3dadd( 30.4194, -108.622, 26.9689, 0.83 ) }
    dend_57 { pt3dadd( 32.3312, -110.04, 27.2257, 1.11 ) }
    dend_57 { pt3dadd( 34.0019, -111.248, 27.4544, 0.55 ) }
    dend_57 { pt3dadd( 34.9121, -111.923, 27.5902, 1.38 ) }
    dend_57 { pt3dadd( 36.1014, -112.797, 27.7852, 0.55 ) }
    dend_57 { pt3dadd( 37.4499, -113.623, 27.998, 1.11 ) }
    dend_57 { pt3dadd( 40.3387, -115.243, 28.3808, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 82/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 1.81456, -81.6443, 6.00941, 1.38 ) }
    dend_30 { pt3dadd( 1.63973, -82.7113, 5.83632, 1.38 ) }
    dend_30 { pt3dadd( 1.05529, -85.8424, 5.58865, 1.38 ) }
    dend_30 { pt3dadd( 0.691078, -87.7937, 5.43431, 1.11 ) }
    dend_30 { pt3dadd( -0.100501, -92.0345, 5.09886, 1.66 ) }
    dend_30 { pt3dadd( -0.604939, -94.737, 4.8851, 2.22 ) }
    dend_30 { pt3dadd( -0.862162, -96.1151, 4.77609, 2.22 ) }
    dend_30 { pt3dadd( -1.50457, -100.07, 4.37881, 1.66 ) }
    // Section: dend_12, id: dend_12, parent: dend_0 (entry count 90/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 1.02737, 55.6726, 2.68129, 1.38 ) }
    dend_12 { pt3dadd( 0.934667, 58.7231, 2.68129, 1.38 ) }
    dend_12 { pt3dadd( 0.945916, 60.791, 2.66414, 1.38 ) }
    dend_12 { pt3dadd( 1.0151, 63.8134, 2.61942, 1.11 ) }
    dend_12 { pt3dadd( 1.20581, 68.4629, 2.60854, 1.38 ) }
    dend_12 { pt3dadd( 1.29232, 70.7854, 2.59718, 1.38 ) }
    dend_12 { pt3dadd( 1.35273, 74.8419, 2.59595, 1.38 ) }
    dend_12 { pt3dadd( 1.36816, 79.9754, 2.59607, 1.38 ) }
    dend_12 { pt3dadd( 1.28796, 83.7163, 2.59795, 1.38 ) }
    dend_12 { pt3dadd( 1.17673, 87.1985, 2.60667, 1.38 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_12 { pt3dadd( 0.971355, 90.4508, 2.62369, 1.38 ) }
    dend_12 { pt3dadd( 0.3748, 95.8794, 2.66475, 1.66 ) }
    dend_12 { pt3dadd( -0.101233, 98.9973, 2.69591, 1.38 ) }
    dend_12 { pt3dadd( -0.708875, 102.545, 2.63181, 1.38 ) }
    dend_12 { pt3dadd( -1.41259, 106.62, 2.4341, 1.38 ) }
    dend_12 { pt3dadd( -1.91183, 109.871, 2.18155, 1.38 ) }
    dend_12 { pt3dadd( -2.11099, 111.596, 2.02935, 1.38 ) }
    dend_12 { pt3dadd( -2.32579, 114.266, 1.77273, 1.11 ) }
    dend_12 { pt3dadd( -2.56644, 118.305, 1.40181, 1.11 ) }
    dend_12 { pt3dadd( -2.63087, 122.559, 1.03296, 1.11 ) }
    dend_12 { pt3dadd( -2.60989, 126.855, 0.711618, 1.38 ) }
    dend_12 { pt3dadd( -2.55177, 129.74, 0.57198, 1.11 ) }
    dend_12 { pt3dadd( -2.51302, 132.51, 0.516455, 1.38 ) }
    dend_12 { pt3dadd( -2.49612, 134.296, 0.571609, 1.38 ) }
    dend_12 { pt3dadd( -2.46308, 137.149, 0.890058, 1.38 ) }
    dend_12 { pt3dadd( -2.47163, 141.235, 1.47682, 1.94 ) }
    dend_12 { pt3dadd( -2.46126, 143.395, 1.82221, 1.66 ) }
    dend_12 { pt3dadd( -2.44995, 144.304, 1.96189, 1.66 ) }
    dend_12 { pt3dadd( -2.41448, 147.136, 2.35746, 1.66 ) }
    dend_12 { pt3dadd( -2.3644, 151.604, 2.93845, 1.66 ) }
    dend_12 { pt3dadd( -2.39027, 153.936, 3.21395, 1.38 ) }
    dend_12 { pt3dadd( -2.47948, 157.616, 3.58344, 1.66 ) }
    dend_12 { pt3dadd( -2.53563, 160.86, 3.81862, 1.11 ) }
    dend_12 { pt3dadd( -2.57906, 164.455, 4.03401, 1.11 ) }
    dend_12 { pt3dadd( -2.61535, 166.457, 4.10912, 1.11 ) }
    dend_12 { pt3dadd( -2.63237, 168.667, 4.16507, 1.11 ) }
    dend_12 { pt3dadd( -2.60232, 170.322, 4.22314, 1.11 ) }
    dend_12 { pt3dadd( -2.42858, 173.834, 4.37742, 1.38 ) }
    dend_12 { pt3dadd( -2.22696, 176.511, 4.51004, 1.11 ) }
    dend_12 { pt3dadd( -2.06006, 178.516, 4.60429, 1.38 ) }
    dend_12 { pt3dadd( -1.8719, 180.794, 4.69956, 1.38 ) }
    dend_12 { pt3dadd( -1.70464, 183.391, 4.78764, 0.83 ) }
    dend_12 { pt3dadd( -1.58732, 186.536, 4.86755, 1.38 ) }
    dend_12 { pt3dadd( -1.58354, 189.047, 4.90279, 0.83 ) }
    dend_12 { pt3dadd( -1.63637, 191.597, 4.90279, 1.38 ) }
    dend_12 { pt3dadd( -1.75152, 193.607, 4.90279, 1.38 ) }
    dend_12 { pt3dadd( -2.0248, 196.905, 4.87632, 1.38 ) }
    dend_12 { pt3dadd( -2.13216, 198.36, 4.85549, 1.38 ) }
    dend_12 { pt3dadd( -2.24315, 200.618, 4.81094, 1.11 ) }
    dend_12 { pt3dadd( -2.27134, 203.425, 4.74408, 1.11 ) }
    dend_12 { pt3dadd( -2.17081, 207.48, 4.63096, 1.66 ) }
    dend_12 { pt3dadd( -1.98877, 210.088, 4.54749, 1.11 ) }
    dend_12 { pt3dadd( -1.88843, 211.119, 4.57235, 1.11 ) }
    dend_12 { pt3dadd( -1.76103, 212.91, 4.70039, 1.38 ) }
    dend_12 { pt3dadd( -1.63978, 215.175, 4.96061, 1.38 ) }
    dend_12 { pt3dadd( -1.58116, 217.728, 5.34916, 1.94 ) }
    dend_12 { pt3dadd( -1.63117, 220.374, 5.82962, 1.94 ) }
    dend_12 { pt3dadd( -1.91081, 224.692, 6.64864, 1.11 ) }
    dend_12 { pt3dadd( -2.18066, 227.097, 7.07215, 1.11 ) }
    dend_12 { pt3dadd( -2.53374, 229.376, 7.44171, 1.38 ) }
    dend_12 { pt3dadd( -3.05479, 232.118, 7.82282, 1.38 ) }
    dend_12 { pt3dadd( -3.50609, 234.411, 8.06694, 1.11 ) }
    dend_12 { pt3dadd( -3.93905, 236.932, 8.22441, 0.83 ) }
    dend_12 { pt3dadd( -4.3573, 239.815, 8.24158, 0.83 ) }
    dend_12 { pt3dadd( -4.58242, 241.478, 8.24975, 0.83 ) }
    dend_12 { pt3dadd( -4.97962, 244.368, 8.26005, 1.11 ) }
    dend_12 { pt3dadd( -5.27016, 246.904, 8.24573, 1.11 ) }
    dend_12 { pt3dadd( -5.56616, 249.516, 8.20988, 1.38 ) }
    dend_12 { pt3dadd( -6.0262, 253.487, 8.137, 1.38 ) }
    dend_12 { pt3dadd( -6.27764, 255.92, 8.08371, 1.11 ) }
    dend_12 { pt3dadd( -6.56035, 258.805, 8.01386, 1.38 ) }
    dend_12 { pt3dadd( -6.82108, 261.173, 7.92043, 0.83 ) }
    dend_12 { pt3dadd( -7.23568, 264.335, 7.77393, 0.83 ) }
    dend_12 { pt3dadd( -7.54829, 266.844, 7.62836, 1.38 ) }
    dend_12 { pt3dadd( -7.6278, 267.972, 7.55244, 1.38 ) }
    dend_12 { pt3dadd( -7.746, 270.04, 7.39859, 1.11 ) }
    dend_12 { pt3dadd( -7.94817, 273.457, 7.12524, 1.38 ) }
    dend_12 { pt3dadd( -8.04634, 275.537, 6.95308, 1.11 ) }
    dend_12 { pt3dadd( -8.05969, 277.581, 6.7635, 1.11 ) }
    dend_12 { pt3dadd( -8.05078, 279.626, 6.57236, 1.11 ) }
    dend_12 { pt3dadd( -8.04534, 282.177, 6.33321, 1.11 ) }
    dend_12 { pt3dadd( -8.00985, 286.564, 5.90254, 1.11 ) }
    dend_12 { pt3dadd( -7.95071, 289.139, 5.6564, 1.11 ) }
    dend_12 { pt3dadd( -7.91232, 291.982, 5.44967, 1.38 ) }
    dend_12 { pt3dadd( -7.92104, 294.9, 5.32218, 1.38 ) }
    dend_12 { pt3dadd( -7.97127, 297.63, 5.27039, 0.83 ) }
    dend_12 { pt3dadd( -7.99493, 299.729, 5.2932, 1.38 ) }
    dend_12 { pt3dadd( -7.99765, 301.711, 5.38197, 1.38 ) }
    dend_12 { pt3dadd( -8.01345, 304.403, 5.57483, 1.11 ) }
    dend_12 { pt3dadd( -8.00769, 306.192, 5.74063, 0.55 ) }
    dend_12 { pt3dadd( -7.90741, 307.973, 5.91496, 1.11 ) }
    dend_12 { pt3dadd( -7.79642, 309.658, 6.07618, 1.11 ) }
    dend_12 { pt3dadd( -7.66789, 311.458, 6.21509, 0.83 ) }
    dend_12 { pt3dadd( -7.51975, 313.36, 6.29069, 0.83 ) }
    dend_12 { pt3dadd( -7.38695, 315.089, 6.29069, 0.83 ) }
    dend_12 { pt3dadd( -7.24106, 318.237, 6.29069, 1.11 ) }
    dend_12 { pt3dadd( -7.14264, 320.292, 6.25526, 1.66 ) }
    dend_12 { pt3dadd( -7.1213, 322.269, 6.19743, 1.66 ) }
    dend_12 { pt3dadd( -7.20513, 324.831, 6.11035, 0.83 ) }
    dend_12 { pt3dadd( -7.29385, 326.889, 6.02435, 0.83 ) }
    dend_12 { pt3dadd( -7.3852, 329.792, 5.89208, 1.11 ) }
    dend_12 { pt3dadd( -7.54254, 333.249, 5.72494, 0.83 ) }
    dend_12 { pt3dadd( -7.6922, 337.109, 5.54106, 0.83 ) }
    dend_12 { pt3dadd( -7.77607, 339.318, 5.43464, 0.83 ) }
    dend_12 { pt3dadd( -7.96687, 343.884, 5.21867, 1.38 ) }
    dend_12 { pt3dadd( -8.20499, 348.447, 5.01957, 1.38 ) }
    dend_12 { pt3dadd( -8.32491, 350.48, 4.94379, 1.11 ) }
    dend_12 { pt3dadd( -8.6167, 353.633, 4.86456, 1.11 ) }
    dend_12 { pt3dadd( -8.82527, 355.636, 4.81301, 0.83 ) }
    dend_12 { pt3dadd( -9.03651, 357.043, 4.77999, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_12 { pt3dadd( -9.53102, 359.4, 4.84127, 1.38 ) }
    dend_12 { pt3dadd( -9.79179, 360.626, 4.96629, 1.38 ) }
    dend_12 { pt3dadd( -10.2426, 363.497, 5.39034, 0.83 ) }
    dend_12 { pt3dadd( -10.4468, 365.459, 5.75008, 0.83 ) }
    dend_12 { pt3dadd( -10.6639, 368.591, 6.20417, 0.83 ) }
    dend_12 { pt3dadd( -10.7688, 371.52, 6.65651, 0.83 ) }
    dend_12 { pt3dadd( -10.7782, 375.279, 7.28096, 1.38 ) }
    dend_12 { pt3dadd( -10.7442, 377.831, 7.72699, 1.38 ) }
    dend_12 { pt3dadd( -10.5981, 379.607, 8.05686, 1.38 ) }
    dend_12 { pt3dadd( -9.98714, 383.722, 8.78563, 1.38 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 10/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 1.02737, 55.6726, 2.68129, 1.11 ) }
    dend_1 { pt3dadd( 1.27721, 59.5811, -1.30739, 1.11 ) }
    dend_1 { pt3dadd( 1.37608, 60.7886, -2.37397, 1.11 ) }
    dend_1 { pt3dadd( 1.48298, 62.8681, -4.24815, 1.11 ) }
    dend_1 { pt3dadd( 1.68515, 68.8298, -9.41976, 1.11 ) }
    dend_1 { pt3dadd( 1.7298, 71.0394, -11.118, 1.11 ) }
    dend_1 { pt3dadd( 1.73939, 74.1423, -13.2932, 0.83 ) }
    dend_1 { pt3dadd( 1.68478, 75.9977, -14.3954, 0.83 ) }
    dend_1 { pt3dadd( 1.55354, 81.2996, -17.2113, 1.11 ) }
    dend_1 { pt3dadd( 1.50223, 83.7243, -18.2553, 1.11 ) }
    dend_1 { pt3dadd( 1.26676, 87.5342, -19.3455, 1.11 ) }
    dend_1 { pt3dadd( 0.898272, 91.0242, -20.0417, 1.11 ) }
    dend_1 { pt3dadd( 0.591113, 93.4568, -20.2833, 1.38 ) }
    dend_1 { pt3dadd( 0.411533, 95.1629, -20.2321, 1.38 ) }
    dend_1 { pt3dadd( 0.265852, 97.1409, -19.9783, 1.11 ) }
    dend_1 { pt3dadd( 0.00589897, 100.91, -19.4737, 1.11 ) }
    dend_1 { pt3dadd( -0.221447, 104.894, -19.0414, 0.83 ) }
    dend_1 { pt3dadd( -0.245405, 105.524, -18.9564, 0.83 ) }
    dend_1 { pt3dadd( -0.330845, 109.369, -18.561, 1.66 ) }
    dend_1 { pt3dadd( -0.429266, 112.665, -18.4133, 0.83 ) }
    dend_1 { pt3dadd( -0.450695, 113.298, -18.4264, 0.83 ) }
    dend_1 { pt3dadd( -0.509847, 115.985, -18.6474, 1.66 ) }
    dend_1 { pt3dadd( -0.566939, 117.675, -18.8609, 1.66 ) }
    dend_1 { pt3dadd( -0.655323, 119.813, -19.0624, 1.11 ) }
    dend_1 { pt3dadd( -0.821642, 122.332, -19.2602, 1.11 ) }
    dend_1 { pt3dadd( -1.01698, 125.036, -19.371, 1.11 ) }
    dend_1 { pt3dadd( -1.21984, 128.261, -19.5298, 1.66 ) }
    dend_1 { pt3dadd( -1.39225, 131.309, -19.641, 1.66 ) }
    dend_1 { pt3dadd( -1.59969, 134.493, -19.8229, 0.83 ) }
    dend_1 { pt3dadd( -1.78356, 137.295, -20.096, 0.83 ) }
    dend_1 { pt3dadd( -1.88216, 139.274, -20.3795, 0.83 ) }
    dend_1 { pt3dadd( -1.95677, 142.114, -20.8569, 1.66 ) }
    dend_1 { pt3dadd( -1.99465, 144.833, -21.3644, 0.55 ) }
    dend_1 { pt3dadd( -2.02413, 147.484, -21.8521, 0.55 ) }
    dend_1 { pt3dadd( -1.99015, 150.446, -22.3404, 1.38 ) }
    dend_1 { pt3dadd( -1.89029, 152.914, -22.6413, 1.94 ) }
    dend_1 { pt3dadd( -1.76091, 155.891, -22.8973, 0.83 ) }
    dend_1 { pt3dadd( -1.70348, 157.549, -22.9742, 0.83 ) }
    dend_1 { pt3dadd( -1.65258, 160.346, -23.044, 1.94 ) }
    dend_1 { pt3dadd( -1.61602, 163.866, -22.976, 1.94 ) }
    dend_1 { pt3dadd( -1.6366, 166.157, -22.8999, 1.11 ) }
    dend_1 { pt3dadd( -1.64511, 168.849, -22.6552, 1.11 ) }
    dend_1 { pt3dadd( -1.6643, 171.286, -22.3487, 1.11 ) }
    dend_1 { pt3dadd( -1.67197, 172.69, -22.1278, 1.11 ) }
    dend_1 { pt3dadd( -1.69245, 174.127, -21.8962, 1.11 ) }
    dend_1 { pt3dadd( -1.86391, 179.47, -21.0234, 2.22 ) }
    dend_1 { pt3dadd( -2.01471, 185.585, -20.06, 0.83 ) }
    dend_1 { pt3dadd( -2.03001, 187.368, -19.8142, 0.83 ) }
    dend_1 { pt3dadd( -1.99035, 189.779, -19.5426, 1.11 ) }
    dend_1 { pt3dadd( -1.93369, 192.782, -19.3096, 0.55 ) }
    dend_1 { pt3dadd( -1.96914, 195.119, -19.2353, 2.22 ) }
    dend_1 { pt3dadd( -2.0423, 196.58, -19.3134, 1.94 ) }
    dend_1 { pt3dadd( -2.16147, 198.698, -19.6252, 0.83 ) }
    dend_1 { pt3dadd( -2.23844, 200.954, -19.9499, 0.83 ) }
    dend_1 { pt3dadd( -2.27291, 203.222, -20.2456, 0.83 ) }
    dend_1 { pt3dadd( -2.34027, 205.617, -20.4819, 1.66 ) }
    dend_1 { pt3dadd( -2.4346, 208.252, -20.7178, 0.83 ) }
    dend_1 { pt3dadd( -2.49245, 209.759, -20.8221, 0.83 ) }
    dend_1 { pt3dadd( -2.54421, 211.038, -20.9123, 1.11 ) }
    dend_1 { pt3dadd( -2.65144, 213.013, -21.0671, 0.83 ) }
    dend_1 { pt3dadd( -2.79778, 216.468, -21.3765, 0.83 ) }
    dend_1 { pt3dadd( -2.82774, 217.092, -21.4322, 0.83 ) }
    dend_1 { pt3dadd( -3.08307, 220.538, -21.7065, 1.94 ) }
    dend_1 { pt3dadd( -3.27889, 223.109, -21.9141, 0.55 ) }
    dend_1 { pt3dadd( -3.48443, 226.013, -22.2145, 0.55 ) }
    dend_1 { pt3dadd( -3.52771, 226.536, -22.2913, 0.55 ) }
    dend_1 { pt3dadd( -3.91678, 230.67, -23.0176, 2.22 ) }
    dend_1 { pt3dadd( -4.15189, 233.828, -23.6036, 0.83 ) }
    dend_1 { pt3dadd( -4.21894, 235.259, -23.8596, 0.83 ) }
    dend_1 { pt3dadd( -4.28815, 238.645, -24.4103, 1.38 ) }
    dend_1 { pt3dadd( -4.23983, 241.63, -24.8666, 0.55 ) }
    dend_1 { pt3dadd( -4.15169, 244.281, -25.2118, 0.55 ) }
    dend_1 { pt3dadd( -3.93188, 247.964, -25.7116, 0.83 ) }
    dend_1 { pt3dadd( -3.49069, 253.145, -26.1247, 0.83 ) }
    dend_1 { pt3dadd( -3.34256, 254.602, -26.1646, 2.49 ) }
    dend_1 { pt3dadd( -3.02507, 257.415, -26.0796, 2.49 ) }
    dend_1 { pt3dadd( -2.53211, 261.789, -25.784, 0.83 ) }
    dend_1 { pt3dadd( -2.26534, 264.252, -25.5871, 0.83 ) }
    dend_1 { pt3dadd( -1.97398, 269.139, -25.1539, 0.83 ) }
    dend_1 { pt3dadd( -1.91621, 270.587, -25.0183, 0.83 ) }
    dend_1 { pt3dadd( -1.9202, 273.732, -24.7476, 1.66 ) }
    dend_1 { pt3dadd( -1.97637, 276.911, -24.5128, 0.83 ) }
    dend_1 { pt3dadd( -2.03393, 279.235, -24.3737, 0.83 ) }
    dend_1 { pt3dadd( -2.13843, 282.708, -24.2268, 0.83 ) }
    dend_1 { pt3dadd( -2.20465, 285.391, -24.2268, 1.94 ) }
    dend_1 { pt3dadd( -2.21202, 289.829, -24.2268, 0.83 ) }
    dend_1 { pt3dadd( -2.15002, 294.405, -24.2268, 0.83 ) }
    dend_1 { pt3dadd( -2.10216, 296.459, -24.2268, 0.83 ) }
    dend_1 { pt3dadd( -2.0503, 299.045, -24.2268, 1.11 ) }
    dend_1 { pt3dadd( -2.01549, 301.048, -24.2268, 2.49 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_1 { pt3dadd( -2.04139, 304.48, -24.2268, 0.83 ) }
    dend_1 { pt3dadd( -2.09327, 305.661, -24.2268, 0.83 ) }
    dend_1 { pt3dadd( -2.23982, 307.656, -24.2268, 0.83 ) }
    dend_1 { pt3dadd( -2.48741, 310.962, -24.2268, 0.83 ) }
    dend_1 { pt3dadd( -2.69389, 314.191, -24.2948, 0.83 ) }
    dend_1 { pt3dadd( -2.95733, 317.972, -24.4398, 1.11 ) }
    dend_1 { pt3dadd( -3.14784, 321.28, -24.6499, 1.66 ) }
    dend_1 { pt3dadd( -3.25928, 324.449, -24.8897, 0.83 ) }
    dend_1 { pt3dadd( -3.31318, 327.041, -25.1289, 0.83 ) }
    dend_1 { pt3dadd( -3.24457, 330.023, -25.4492, 0.83 ) }
    dend_1 { pt3dadd( -3.1368, 332.213, -25.7098, 0.83 ) }
    dend_1 { pt3dadd( -3.03035, 334.627, -26.0182, 0.83 ) }
    dend_1 { pt3dadd( -2.86096, 338.399, -26.4958, 1.66 ) }
    dend_1 { pt3dadd( -2.74009, 341.395, -26.8639, 0.83 ) }
    dend_1 { pt3dadd( -2.68257, 342.981, -27.0364, 0.83 ) }
    dend_1 { pt3dadd( -2.58822, 346.831, -27.3409, 1.38 ) }
    dend_1 { pt3dadd( -2.4392, 350.444, -27.6129, 0.83 ) }
    dend_1 { pt3dadd( -2.37319, 352.448, -27.7481, 0.83 ) }
    dend_1 { pt3dadd( -2.33661, 353.649, -27.8432, 1.66 ) }
    dend_1 { pt3dadd( -2.29742, 356.082, -28.009, 1.66 ) }
    dend_1 { pt3dadd( -2.36812, 358.534, -28.1694, 0.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 21/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -4.74662, 40.3282, 0.0, 0.28 ) }
    axon_1 { pt3dadd( -6.69386, 55.2013, 0.0, 0.28 ) }
    axon_1 { pt3dadd( -8.6411, 70.0744, 0.0, 0.28 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 24/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 40.3387, -115.243, 28.3808, 0.83 ) }
    dend_59 { pt3dadd( 41.542, -115.173, 29.8001, 0.83 ) }
    dend_59 { pt3dadd( 42.3198, -115.106, 30.8152, 0.28 ) }
    dend_59 { pt3dadd( 44.1922, -114.948, 33.2586, 0.55 ) }
    dend_59 { pt3dadd( 44.9303, -114.885, 34.2219, 0.55 ) }
    dend_59 { pt3dadd( 45.9948, -114.795, 35.6111, 0.55 ) }
    dend_59 { pt3dadd( 49.4173, -114.504, 40.0774, 0.28 ) }
    dend_59 { pt3dadd( 49.8383, -114.513, 40.7401, 0.28 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 32/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 40.3387, -115.243, 28.3808, 0.55 ) }
    dend_58 { pt3dadd( 42.1002, -117.107, 30.4597, 0.55 ) }
    dend_58 { pt3dadd( 42.5784, -117.414, 31.0246, 0.83 ) }
    dend_58 { pt3dadd( 43.7438, -118.257, 32.4992, 0.28 ) }
    dend_58 { pt3dadd( 44.2121, -118.626, 33.1819, 0.83 ) }
    dend_58 { pt3dadd( 45.139, -119.33, 34.5065, 0.83 ) }
    dend_58 { pt3dadd( 47.383, -121.006, 37.6343, 0.83 ) }
    dend_58 { pt3dadd( 50.3744, -122.963, 41.4165, 0.83 ) }
    dend_58 { pt3dadd( 51.5073, -123.598, 42.9634, 0.83 ) }
    dend_58 { pt3dadd( 54.362, -124.701, 46.9532, 1.11 ) }
    dend_58 { pt3dadd( 55.2333, -124.892, 48.3909, 0.83 ) }
    dend_58 { pt3dadd( 55.5131, -124.885, 48.9425, 0.83 ) }
    dend_58 { pt3dadd( 56.2899, -124.417, 50.9897, 0.83 ) }
    dend_58 { pt3dadd( 57.3141, -122.67, 55.0581, 0.83 ) }
    dend_58 { pt3dadd( 57.95, -121.065, 57.856, 0.83 ) }
    dend_58 { pt3dadd( 58.5091, -118.52, 61.2158, 0.83 ) }
    dend_58 { pt3dadd( 58.6607, -117.216, 62.9083, 1.11 ) }
    dend_58 { pt3dadd( 58.7394, -115.198, 65.461, 0.28 ) }
    dend_58 { pt3dadd( 58.7042, -114.806, 65.9457, 0.55 ) }
    dend_58 { pt3dadd( 58.5257, -113.004, 67.7175, 0.28 ) }
    dend_58 { pt3dadd( 58.0977, -112.037, 68.8104, 1.11 ) }
    // Section: dend_46, id: dend_46, parent: dend_30 (entry count 53/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -1.50457, -100.07, 4.37881, 1.11 ) }
    dend_46 { pt3dadd( -2.52085, -101.288, 5.13302, 1.11 ) }
    dend_46 { pt3dadd( -3.67734, -102.966, 6.07837, 1.11 ) }
    dend_46 { pt3dadd( -6.33556, -107.681, 8.34734, 1.38 ) }
    dend_46 { pt3dadd( -7.71004, -110.492, 9.7478, 1.38 ) }
    dend_46 { pt3dadd( -8.7226, -112.562, 10.7795, 1.66 ) }
    dend_46 { pt3dadd( -10.3284, -115.846, 12.4157, 1.11 ) }
    dend_46 { pt3dadd( -11.1268, -117.748, 13.3547, 1.11 ) }
    dend_46 { pt3dadd( -12.077, -120.712, 14.723, 1.38 ) }
    dend_46 { pt3dadd( -13.17, -125.782, 16.7247, 2.77 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 63/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -1.50457, -100.07, 4.37881, 1.38 ) }
    dend_31 { pt3dadd( -1.49324, -104.518, 4.42321, 1.38 ) }
    dend_31 { pt3dadd( -1.4134, -108.113, 4.55193, 1.94 ) }
    dend_31 { pt3dadd( -1.27954, -110.723, 4.4484, 1.38 ) }
    dend_31 { pt3dadd( -0.847605, -115.047, 3.70365, 1.94 ) }
    dend_31 { pt3dadd( -0.333385, -118.402, 2.86798, 0.83 ) }
    dend_31 { pt3dadd( 0.0720411, -120.428, 2.24468, 0.83 ) }
    dend_31 { pt3dadd( 0.780269, -123.024, 1.31779, 1.38 ) }
    dend_31 { pt3dadd( 2.23497, -126.917, -0.442158, 1.94 ) }
    dend_31 { pt3dadd( 4.23994, -131.037, -2.79226, 0.83 ) }
    dend_31 { pt3dadd( 4.98454, -132.298, -3.67624, 0.83 ) }
    dend_31 { pt3dadd( 7.02262, -135.365, -6.32123, 1.11 ) }
    dend_31 { pt3dadd( 8.25402, -137.119, -7.91103, 0.55 ) }
    dend_31 { pt3dadd( 8.87924, -138.039, -8.80877, 0.55 ) }
    dend_31 { pt3dadd( 10.0732, -139.938, -10.6584, 0.55 ) }
    dend_31 { pt3dadd( 10.6264, -140.924, -11.7282, 0.83 ) }
    dend_31 { pt3dadd( 11.8024, -143.133, -14.3333, 0.55 ) }
    dend_31 { pt3dadd( 12.9503, -145.308, -17.1649, 1.66 ) }
    dend_31 { pt3dadd( 14.6221, -148.741, -21.7729, 0.55 ) }
    dend_31 { pt3dadd( 15.2401, -150.23, -23.7461, 1.66 ) }
    dend_31 { pt3dadd( 16.3418, -153.449, -27.8396, 0.55 ) }
    dend_31 { pt3dadd( 16.8456, -154.859, -29.6619, 0.55 ) }
    // Section: dend_28, id: dend_28, parent: dend_12 (entry count 85/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -9.98714, 383.722, 8.78563, 0.83 ) }
    dend_28 { pt3dadd( -9.92502, 385.463, 7.4863, 0.83 ) }
    dend_28 { pt3dadd( -9.94887, 387.384, 6.06055, 0.83 ) }
    dend_28 { pt3dadd( -9.9503, 389.898, 4.40161, 0.55 ) }
    dend_28 { pt3dadd( -9.85689, 392.389, 2.86056, 0.83 ) }
    dend_28 { pt3dadd( -9.73136, 394.907, 1.43952, 0.28 ) }
    dend_28 { pt3dadd( -9.67443, 396.076, 0.839124, 0.55 ) }
    dend_28 { pt3dadd( -9.68626, 396.877, 0.443277, 0.55 ) }
    dend_28 { pt3dadd( -9.67988, 399.217, -0.57773, 1.11 ) }
    dend_28 { pt3dadd( -9.61551, 401.22, -1.25161, 0.55 ) }
    dend_28 { pt3dadd( -9.54616, 402.943, -1.73525, 1.11 ) }
    dend_28 { pt3dadd( -9.48553, 404.432, -2.06532, 1.11 ) }
    dend_28 { pt3dadd( -9.4068, 406.675, -2.46358, 0.28 ) }
    dend_28 { pt3dadd( -9.39567, 409.59, -3.06109, 0.55 ) }
    dend_28 { pt3dadd( -9.50529, 413.005, -3.81538, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_28 { pt3dadd( -9.54661, 414.754, -4.15022, 0.55 ) }
    dend_28 { pt3dadd( -9.55943, 416.036, -4.36991, 0.28 ) }
    dend_28 { pt3dadd( -9.51715, 417.907, -4.54423, 0.83 ) }
    dend_28 { pt3dadd( -9.37, 421.571, -4.54843, 1.38 ) }
    dend_28 { pt3dadd( -9.34878, 423.317, -4.44779, 1.38 ) }
    dend_28 { pt3dadd( -9.23383, 427.314, -4.02541, 0.83 ) }
    dend_28 { pt3dadd( -9.19125, 429.221, -3.76823, 0.83 ) }
    dend_28 { pt3dadd( -9.06848, 434.504, -2.84799, 0.83 ) }
    dend_28 { pt3dadd( -9.03833, 436.322, -2.48541, 0.83 ) }
    dend_28 { pt3dadd( -8.96769, 439.229, -1.74259, 0.83 ) }
    dend_28 { pt3dadd( -8.96007, 439.968, -1.54502, 0.83 ) }
    dend_28 { pt3dadd( -8.93727, 442.505, -0.887711, 1.38 ) }
    dend_28 { pt3dadd( -8.88487, 444.282, -0.486524, 0.55 ) }
    dend_28 { pt3dadd( -8.81451, 446.429, -0.159157, 0.55 ) }
    dend_28 { pt3dadd( -8.69632, 447.612, -0.0475244, 0.55 ) }
    dend_28 { pt3dadd( -8.567, 448.476, -0.00819066, 0.28 ) }
    dend_28 { pt3dadd( -8.14328, 450.871, -0.0170998, 0.83 ) }
    dend_28 { pt3dadd( -7.74112, 452.717, -0.157827, 0.55 ) }
    dend_28 { pt3dadd( -7.24092, 454.702, -0.405022, 0.83 ) }
    dend_28 { pt3dadd( -6.51135, 457.552, -0.813588, 0.55 ) }
    dend_28 { pt3dadd( -6.1077, 459.208, -1.06519, 1.66 ) }
    dend_28 { pt3dadd( -5.50992, 461.797, -1.46929, 1.66 ) }
    dend_28 { pt3dadd( -4.92654, 464.631, -1.90074, 0.83 ) }
    dend_28 { pt3dadd( -4.52008, 466.912, -2.2271, 0.83 ) }
    dend_28 { pt3dadd( -4.25301, 468.786, -2.46223, 0.83 ) }
    dend_28 { pt3dadd( -4.14895, 469.907, -2.5719, 0.28 ) }
    dend_28 { pt3dadd( -4.05128, 471.806, -2.68008, 1.11 ) }
    dend_28 { pt3dadd( -4.08202, 474.661, -2.73599, 0.55 ) }
    dend_28 { pt3dadd( -4.15981, 476.305, -2.72124, 0.55 ) }
    dend_28 { pt3dadd( -4.26582, 478.022, -2.727, 0.55 ) }
    dend_28 { pt3dadd( -4.36405, 479.157, -2.75164, 0.55 ) }
    dend_28 { pt3dadd( -4.5942, 480.799, -2.81146, 1.11 ) }
    dend_28 { pt3dadd( -4.92604, 482.606, -2.90203, 0.28 ) }
    dend_28 { pt3dadd( -5.09319, 483.452, -2.95202, 0.55 ) }
    dend_28 { pt3dadd( -5.36402, 485.465, -3.07467, 0.55 ) }
    dend_28 { pt3dadd( -5.61388, 488.673, -3.26822, 0.55 ) }
    dend_28 { pt3dadd( -5.63274, 489.803, -3.32617, 0.83 ) }
    dend_28 { pt3dadd( -5.59435, 491.594, -3.44676, 0.83 ) }
    dend_28 { pt3dadd( -5.4632, 494.16, -3.58049, 0.83 ) }
    dend_28 { pt3dadd( -5.24371, 496.594, -3.63892, 0.83 ) }
    dend_28 { pt3dadd( -4.96124, 498.464, -3.65626, 0.83 ) }
    dend_28 { pt3dadd( -4.0068, 502.566, -3.66923, 1.11 ) }
    dend_28 { pt3dadd( -3.4156, 504.665, -3.67182, 0.28 ) }
    dend_28 { pt3dadd( -2.98893, 505.908, -3.69093, 0.55 ) }
    dend_28 { pt3dadd( -2.48343, 507.258, -3.57412, 0.55 ) }
    dend_28 { pt3dadd( -2.02689, 508.401, -3.35708, 0.55 ) }
    dend_28 { pt3dadd( -1.6478, 509.173, -3.12962, 0.55 ) }
    dend_28 { pt3dadd( -0.202411, 511.517, -2.29803, 0.55 ) }
    dend_28 { pt3dadd( 0.799345, 513.182, -1.71683, 0.83 ) }
    dend_28 { pt3dadd( 3.26599, 517.392, -0.641924, 0.55 ) }
    dend_28 { pt3dadd( 3.66508, 518.114, -0.467872, 0.83 ) }
    dend_28 { pt3dadd( 4.3868, 519.549, -0.151084, 0.83 ) }
    dend_28 { pt3dadd( 5.20463, 521.349, 0.175336, 0.55 ) }
    dend_28 { pt3dadd( 5.8718, 522.999, 0.369917, 0.83 ) }
    dend_28 { pt3dadd( 6.78656, 525.679, 0.474664, 0.83 ) }
    dend_28 { pt3dadd( 7.48631, 528.038, 0.437316, 0.55 ) }
    dend_28 { pt3dadd( 7.70163, 528.908, 0.481542, 0.55 ) }
    dend_28 { pt3dadd( 8.12209, 530.86, 0.684123, 0.55 ) }
    dend_28 { pt3dadd( 8.29854, 531.804, 0.828238, 0.83 ) }
    dend_28 { pt3dadd( 8.61805, 533.469, 1.12996, 0.83 ) }
    dend_28 { pt3dadd( 9.05631, 536.423, 1.64389, 0.55 ) }
    dend_28 { pt3dadd( 9.26459, 537.859, 1.82974, 0.55 ) }
    dend_28 { pt3dadd( 9.55823, 540.017, 2.12544, 0.55 ) }
    dend_28 { pt3dadd( 9.76877, 541.792, 2.36017, 0.55 ) }
    dend_28 { pt3dadd( 10.1928, 545.094, 2.78109, 0.55 ) }
    dend_28 { pt3dadd( 10.4958, 547.429, 3.01424, 0.83 ) }
    dend_28 { pt3dadd( 10.6493, 548.638, 3.06966, 1.11 ) }
    dend_28 { pt3dadd( 10.8638, 551.042, 3.19353, 0.55 ) }
    dend_28 { pt3dadd( 10.9969, 554.486, 3.45089, 0.83 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 69/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -9.98714, 383.722, 8.78563, 0.55 ) }
    dend_13 { pt3dadd( -11.2518, 386.67, 8.32953, 0.55 ) }
    dend_13 { pt3dadd( -12.0827, 388.784, 8.07234, 0.55 ) }
    dend_13 { pt3dadd( -12.6982, 390.581, 7.89926, 0.55 ) }
    dend_13 { pt3dadd( -13.2023, 392.202, 7.76329, 0.55 ) }
    dend_13 { pt3dadd( -14.2012, 395.524, 7.51566, 0.55 ) }
    dend_13 { pt3dadd( -14.7793, 397.451, 7.37676, 0.83 ) }
    dend_13 { pt3dadd( -15.5305, 399.875, 7.28885, 0.83 ) }
    dend_13 { pt3dadd( -16.2726, 402.395, 7.19383, 0.83 ) }
    dend_13 { pt3dadd( -16.7778, 404.504, 7.11644, 0.55 ) }
    dend_13 { pt3dadd( -17.1238, 406.273, 7.05632, 0.55 ) }
    dend_13 { pt3dadd( -17.6117, 408.705, 7.00184, 0.83 ) }
    dend_13 { pt3dadd( -18.0073, 410.662, 6.97391, 0.83 ) }
    dend_13 { pt3dadd( -18.6911, 413.732, 6.93753, 0.83 ) }
    dend_13 { pt3dadd( -19.1529, 415.74, 6.92504, 0.83 ) }
    dend_13 { pt3dadd( -19.4902, 417.303, 6.93301, 0.55 ) }
    dend_13 { pt3dadd( -19.8627, 419.322, 6.96636, 0.83 ) }
    dend_13 { pt3dadd( -20.201, 421.565, 7.06101, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 87/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -2.36812, 358.534, -28.1694, 0.55 ) }
    dend_3 { pt3dadd( -2.39017, 360.21, -28.1694, 0.55 ) }
    dend_3 { pt3dadd( -2.42206, 362.635, -28.1694, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 90/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -2.36812, 358.534, -28.1694, 0.55 ) }
    dend_2 { pt3dadd( -5.13812, 358.831, -27.4094, 0.55 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 92/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 49.8383, -114.513, 40.7401, 0.28 ) }
    dend_61 { pt3dadd( 50.2589, -117.12, 39.226, 0.28 ) }
    dend_61 { pt3dadd( 50.3364, -117.6, 38.9469, 1.11 ) }
    dend_61 { pt3dadd( 50.7045, -119.882, 37.6219, 0.28 ) }
    dend_61 { pt3dadd( 50.7416, -120.111, 37.4887, 1.11 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 97/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 49.8383, -114.513, 40.7401, 1.66 ) }
    dend_60 { pt3dadd( 49.9898, -113.632, 41.6524, 1.66 ) }
    dend_60 { pt3dadd( 50.1569, -111.221, 43.6643, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_60 { pt3dadd( 50.2739, -108.814, 45.5567, 0.28 ) }
    dend_60 { pt3dadd( 50.2578, -107.999, 46.1455, 0.55 ) }
    dend_60 { pt3dadd( 50.0368, -105.185, 47.9576, 0.28 ) }
    dend_60 { pt3dadd( 49.8844, -103.5, 49.0028, 0.83 ) }
    dend_60 { pt3dadd( 49.5992, -101.314, 50.3561, 0.83 ) }
    dend_60 { pt3dadd( 49.3511, -99.9374, 51.1054, 0.28 ) }
    dend_60 { pt3dadd( 48.9423, -97.9451, 52.0741, 0.55 ) }
    dend_60 { pt3dadd( 48.3747, -96.1449, 52.825, 0.55 ) }
    dend_60 { pt3dadd( 47.4453, -93.9619, 53.5857, 0.28 ) }
    dend_60 { pt3dadd( 47.1035, -93.3117, 53.7993, 0.83 ) }
    dend_60 { pt3dadd( 46.1067, -91.4936, 54.3743, 0.28 ) }
    dend_60 { pt3dadd( 44.856, -89.3789, 54.968, 0.55 ) }
    dend_60 { pt3dadd( 43.2547, -86.8267, 55.647, 0.28 ) }
    dend_60 { pt3dadd( 42.0131, -85.0697, 56.0568, 1.11 ) }
    dend_60 { pt3dadd( 40.9656, -83.7675, 56.251, 0.28 ) }
    dend_60 { pt3dadd( 39.5919, -82.1102, 56.4436, 0.83 ) }
    // Section: dend_56, id: dend_56, parent: dend_46 (entry count 16/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -13.17, -125.782, 16.7247, 0.83 ) }
    dend_56 { pt3dadd( -12.3335, -129.702, 17.2726, 0.83 ) }
    dend_56 { pt3dadd( -11.8507, -131.618, 17.5449, 0.83 ) }
    dend_56 { pt3dadd( -11.0684, -135.021, 17.988, 0.83 ) }
    dend_56 { pt3dadd( -10.6598, -137.54, 18.4559, 0.55 ) }
    dend_56 { pt3dadd( -10.4563, -139.873, 19.0264, 0.83 ) }
    dend_56 { pt3dadd( -10.4136, -142.115, 19.7118, 0.83 ) }
    dend_56 { pt3dadd( -10.515, -143.777, 20.4411, 0.83 ) }
    dend_56 { pt3dadd( -10.9132, -146.501, 21.8507, 0.83 ) }
    dend_56 { pt3dadd( -11.6371, -149.782, 23.7338, 0.83 ) }
    dend_56 { pt3dadd( -12.2567, -151.926, 24.9803, 0.83 ) }
    dend_56 { pt3dadd( -13.4476, -155.336, 27.0406, 1.11 ) }
    dend_56 { pt3dadd( -14.4318, -157.891, 28.6058, 0.55 ) }
    dend_56 { pt3dadd( -15.087, -159.727, 29.6624, 0.55 ) }
    dend_56 { pt3dadd( -15.806, -162.025, 30.8331, 0.83 ) }
    dend_56 { pt3dadd( -16.2037, -163.523, 31.414, 0.83 ) }
    dend_56 { pt3dadd( -16.4879, -164.827, 31.8328, 0.28 ) }
    dend_56 { pt3dadd( -16.7694, -166.197, 32.2067, 0.55 ) }
    dend_56 { pt3dadd( -17.325, -169.095, 32.8951, 1.11 ) }
    dend_56 { pt3dadd( -17.6446, -171.137, 33.3285, 0.28 ) }
    dend_56 { pt3dadd( -17.8161, -172.289, 33.5432, 0.55 ) }
    dend_56 { pt3dadd( -18.3818, -175.573, 34.075, 0.28 ) }
    dend_56 { pt3dadd( -18.4944, -176.203, 34.1847, 0.83 ) }
    dend_56 { pt3dadd( -18.8996, -178.724, 34.6702, 0.83 ) }
    dend_56 { pt3dadd( -19.3095, -181.341, 35.1887, 0.28 ) }
    dend_56 { pt3dadd( -19.3512, -181.733, 35.2599, 1.11 ) }
    dend_56 { pt3dadd( -19.4786, -183.493, 35.509, 1.11 ) }
    dend_56 { pt3dadd( -19.6901, -186.105, 35.7504, 0.55 ) }
    dend_56 { pt3dadd( -19.842, -188.131, 35.9916, 1.11 ) }
    dend_56 { pt3dadd( -19.9516, -189.818, 36.2614, 1.11 ) }
    dend_56 { pt3dadd( -20.0463, -190.995, 36.5335, 1.11 ) }
    dend_56 { pt3dadd( -20.1856, -192.554, 36.8975, 0.28 ) }
    dend_56 { pt3dadd( -20.2387, -193.518, 37.2027, 0.55 ) }
    dend_56 { pt3dadd( -20.2805, -195.011, 37.7463, 0.28 ) }
    dend_56 { pt3dadd( -20.3001, -195.753, 38.1425, 0.83 ) }
    dend_56 { pt3dadd( -20.3486, -197.2, 39.0326, 0.28 ) }
    dend_56 { pt3dadd( -20.3702, -197.967, 39.5087, 0.83 ) }
    dend_56 { pt3dadd( -20.3498, -200.844, 41.2621, 0.28 ) }
    dend_56 { pt3dadd( -20.349, -201.731, 41.7281, 0.83 ) }
    dend_56 { pt3dadd( -20.3848, -204.233, 42.799, 0.55 ) }
    dend_56 { pt3dadd( -20.4396, -205.921, 43.4073, 1.11 ) }
    dend_56 { pt3dadd( -20.5222, -207.754, 43.9141, 0.28 ) }
    dend_56 { pt3dadd( -20.5666, -208.741, 44.1111, 0.83 ) }
    dend_56 { pt3dadd( -20.7337, -211.415, 44.3759, 0.83 ) }
    dend_56 { pt3dadd( -20.8108, -212.854, 44.5832, 0.28 ) }
    dend_56 { pt3dadd( -20.8231, -213.738, 44.7323, 0.28 ) }
    dend_56 { pt3dadd( -20.8014, -214.725, 45.0059, 0.83 ) }
    dend_56 { pt3dadd( -20.718, -215.916, 45.448, 0.83 ) }
    dend_56 { pt3dadd( -20.5377, -217.506, 46.1503, 0.55 ) }
    dend_56 { pt3dadd( -20.0837, -220.394, 47.5635, 0.28 ) }
    dend_56 { pt3dadd( -19.9897, -221.198, 47.9644, 1.11 ) }
    dend_56 { pt3dadd( -19.8798, -222.382, 48.5057, 0.83 ) }
    dend_56 { pt3dadd( -19.7005, -224.8, 49.4678, 0.28 ) }
    dend_56 { pt3dadd( -19.6652, -225.174, 49.5857, 0.55 ) }
    dend_56 { pt3dadd( -19.4433, -226.825, 49.9445, 0.55 ) }
    dend_56 { pt3dadd( -19.0912, -228.618, 50.1443, 0.55 ) }
    dend_56 { pt3dadd( -18.7739, -230.087, 50.2529, 0.55 ) }
    dend_56 { pt3dadd( -18.5073, -231.337, 50.305, 0.55 ) }
    dend_56 { pt3dadd( -18.1821, -232.958, 50.37, 0.55 ) }
    dend_56 { pt3dadd( -17.7004, -235.01, 50.4496, 0.55 ) }
    dend_56 { pt3dadd( -17.174, -236.995, 50.5243, 0.55 ) }
    dend_56 { pt3dadd( -16.625, -238.934, 50.5901, 0.55 ) }
    dend_56 { pt3dadd( -16.2655, -240.329, 50.6659, 0.28 ) }
    dend_56 { pt3dadd( -15.878, -242.022, 50.759, 0.83 ) }
    dend_56 { pt3dadd( -15.4717, -244.399, 50.8786, 0.83 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 81/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -13.17, -125.782, 16.7247, 1.38 ) }
    dend_47 { pt3dadd( -16.297, -126.553, 16.7247, 1.38 ) }
    dend_47 { pt3dadd( -20.0595, -127.481, 16.7247, 1.38 ) }
    // Section: dend_37, id: dend_37, parent: dend_31 (entry count 84/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 16.8456, -154.859, -29.6619, 0.55 ) }
    dend_37 { pt3dadd( 17.3478, -160.555, -30.2037, 0.55 ) }
    dend_37 { pt3dadd( 17.5301, -163.379, -30.5998, 0.55 ) }
    dend_37 { pt3dadd( 17.7721, -166.756, -31.1323, 2.49 ) }
    dend_37 { pt3dadd( 17.9759, -169.477, -31.6729, 0.55 ) }
    dend_37 { pt3dadd( 18.1622, -172.105, -32.2514, 0.55 ) }
    dend_37 { pt3dadd( 18.3979, -175.432, -32.9834, 0.83 ) }
    dend_37 { pt3dadd( 18.4072, -178.315, -33.7378, 0.28 ) }
    dend_37 { pt3dadd( 18.4575, -179.66, -34.1457, 0.55 ) }
    dend_37 { pt3dadd( 18.5928, -181.813, -34.9053, 0.28 ) }
    dend_37 { pt3dadd( 18.6933, -183.156, -35.415, 0.83 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 95/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 16.8456, -154.859, -29.6619, 0.83 ) }
    dend_32 { pt3dadd( 19.2873, -155.075, -30.121, 0.83 ) }
    dend_32 { pt3dadd( 21.4324, -155.104, -30.3744, 0.83 ) }
    dend_32 { pt3dadd( 23.7466, -155.051, -30.6459, 0.55 ) }
    dend_32 { pt3dadd( 26.6188, -155.015, -30.9697, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_32 { pt3dadd( 27.5995, -155.07, -31.1261, 0.83 ) }
    dend_32 { pt3dadd( 29.5949, -155.386, -31.439, 0.55 ) }
    dend_32 { pt3dadd( 31.3786, -155.848, -31.6829, 1.11 ) }
    dend_32 { pt3dadd( 33.2364, -156.62, -31.9191, 0.28 ) }
    dend_32 { pt3dadd( 34.5368, -157.365, -32.0715, 0.83 ) }
    dend_32 { pt3dadd( 37.0663, -159.217, -32.4806, 0.28 ) }
    dend_32 { pt3dadd( 39.4245, -161.202, -32.9862, 1.38 ) }
    dend_32 { pt3dadd( 40.8008, -162.474, -33.1975, 0.55 ) }
    dend_32 { pt3dadd( 41.8549, -163.543, -33.2526, 0.55 ) }
    dend_32 { pt3dadd( 43.3555, -165.184, -33.0332, 0.83 ) }
    dend_32 { pt3dadd( 44.4355, -166.435, -32.6883, 0.28 ) }
    dend_32 { pt3dadd( 45.8778, -168.101, -32.0775, 0.55 ) }
    dend_32 { pt3dadd( 48.7778, -171.352, -30.4937, 0.28 ) }
    dend_32 { pt3dadd( 50.161, -172.792, -29.6317, 0.83 ) }
    dend_32 { pt3dadd( 52.3715, -174.846, -28.156, 0.55 ) }
    dend_32 { pt3dadd( 53.1518, -175.482, -27.601, 0.55 ) }
    dend_32 { pt3dadd( 55.5139, -177.213, -25.9257, 1.94 ) }
    dend_32 { pt3dadd( 58.3567, -179.229, -24.076, 0.55 ) }
    dend_32 { pt3dadd( 59.6853, -180.093, -23.3134, 0.55 ) }
    dend_32 { pt3dadd( 60.8568, -180.794, -22.6372, 0.55 ) }
    dend_32 { pt3dadd( 63.2052, -182.319, -21.3297, 0.28 ) }
    dend_32 { pt3dadd( 64.0131, -182.954, -20.8772, 1.38 ) }
    dend_32 { pt3dadd( 65.591, -184.493, -19.9606, 1.38 ) }
    dend_32 { pt3dadd( 67.6524, -187.057, -19.0849, 0.55 ) }
    dend_32 { pt3dadd( 68.5499, -188.45, -18.3595, 0.55 ) }
    dend_32 { pt3dadd( 70.1922, -191.284, -16.6391, 1.11 ) }
    dend_32 { pt3dadd( 71.4972, -193.759, -15.1261, 0.28 ) }
    dend_32 { pt3dadd( 71.731, -194.239, -14.815, 0.83 ) }
    dend_32 { pt3dadd( 72.9196, -196.867, -12.9295, 0.28 ) }
    dend_32 { pt3dadd( 76.4268, -205.499, -6.33489, 0.83 ) }
    dend_32 { pt3dadd( 76.8927, -206.693, -4.99638, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_13 (entry count 31/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -20.201, 421.565, 7.06101, 0.55 ) }
    dend_23 { pt3dadd( -20.2815, 423.315, 7.15511, 0.55 ) }
    dend_23 { pt3dadd( -20.3679, 425.017, 7.51298, 0.28 ) }
    dend_23 { pt3dadd( -20.5617, 426.541, 7.93054, 0.55 ) }
    dend_23 { pt3dadd( -20.836, 427.617, 8.28312, 0.28 ) }
    dend_23 { pt3dadd( -21.3325, 429.182, 8.7515, 0.83 ) }
    dend_23 { pt3dadd( -21.8359, 430.776, 9.17288, 0.83 ) }
    dend_23 { pt3dadd( -22.7028, 433.238, 10.3104, 0.55 ) }
    dend_23 { pt3dadd( -23.2066, 434.643, 11.1493, 0.55 ) }
    dend_23 { pt3dadd( -24.1665, 437.299, 12.9717, 0.83 ) }
    dend_23 { pt3dadd( -24.736, 438.768, 14.0549, 0.83 ) }
    dend_23 { pt3dadd( -25.3745, 440.437, 15.432, 0.83 ) }
    dend_23 { pt3dadd( -27.5648, 445.731, 19.6544, 0.55 ) }
    dend_23 { pt3dadd( -27.962, 446.81, 20.4511, 0.55 ) }
    dend_23 { pt3dadd( -28.1117, 447.314, 20.8089, 0.83 ) }
    dend_23 { pt3dadd( -28.3792, 448.462, 21.5851, 0.55 ) }
    dend_23 { pt3dadd( -29.0361, 452.02, 23.6332, 1.11 ) }
    dend_23 { pt3dadd( -29.4904, 455.135, 24.9878, 0.83 ) }
    dend_23 { pt3dadd( -29.7091, 457.335, 25.5731, 0.55 ) }
    dend_23 { pt3dadd( -29.8078, 458.977, 25.9859, 1.11 ) }
    dend_23 { pt3dadd( -29.8707, 460.802, 26.4634, 0.55 ) }
    dend_23 { pt3dadd( -29.8584, 463.809, 27.2672, 1.11 ) }
    dend_23 { pt3dadd( -29.8517, 466.121, 27.8503, 0.55 ) }
    dend_23 { pt3dadd( -29.8501, 468.19, 28.4599, 0.55 ) }
    dend_23 { pt3dadd( -29.9248, 469.314, 28.8012, 0.28 ) }
    dend_23 { pt3dadd( -30.1173, 471.322, 29.4199, 0.83 ) }
    dend_23 { pt3dadd( -30.364, 473.359, 29.9773, 0.55 ) }
    dend_23 { pt3dadd( -30.6308, 475.186, 30.4006, 0.83 ) }
    dend_23 { pt3dadd( -30.9363, 476.92, 30.7342, 0.83 ) }
    dend_23 { pt3dadd( -31.4797, 479.419, 31.1567, 0.55 ) }
    dend_23 { pt3dadd( -32.0622, 481.908, 31.4952, 0.55 ) }
    dend_23 { pt3dadd( -32.8778, 485.115, 31.8208, 0.83 ) }
    dend_23 { pt3dadd( -33.7374, 488.288, 32.1054, 0.83 ) }
    dend_23 { pt3dadd( -34.5424, 491.252, 32.354, 0.83 ) }
    dend_23 { pt3dadd( -35.0563, 493.097, 32.4913, 0.83 ) }
    dend_23 { pt3dadd( -35.7088, 495.559, 32.6356, 0.83 ) }
    dend_23 { pt3dadd( -36.3048, 497.715, 32.7689, 0.83 ) }
    dend_23 { pt3dadd( -36.8702, 500.059, 33.0, 0.83 ) }
    dend_23 { pt3dadd( -37.1762, 501.436, 33.1655, 0.83 ) }
    dend_23 { pt3dadd( -37.5388, 503.345, 33.4596, 0.55 ) }
    dend_23 { pt3dadd( -37.8538, 504.969, 33.6556, 0.83 ) }
    dend_23 { pt3dadd( -38.2674, 506.958, 33.9164, 0.83 ) }
    dend_23 { pt3dadd( -38.9328, 510.188, 34.3606, 0.55 ) }
    dend_23 { pt3dadd( -39.636, 513.299, 34.8225, 0.83 ) }
    dend_23 { pt3dadd( -40.4651, 516.618, 35.3395, 0.55 ) }
    dend_23 { pt3dadd( -41.5597, 520.181, 35.9056, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 77/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -20.201, 421.565, 7.06101, 0.55 ) }
    dend_14 { pt3dadd( -22.2119, 424.794, 8.51869, 0.55 ) }
    dend_14 { pt3dadd( -23.8369, 427.381, 9.28376, 0.28 ) }
    dend_14 { pt3dadd( -24.6171, 428.569, 9.53635, 0.83 ) }
    dend_14 { pt3dadd( -25.752, 430.219, 9.81244, 0.28 ) }
    dend_14 { pt3dadd( -26.3184, 431.045, 9.92764, 0.28 ) }
    dend_14 { pt3dadd( -27.245, 432.377, 10.0756, 0.83 ) }
    dend_14 { pt3dadd( -28.9714, 435.077, 10.1314, 0.83 ) }
    dend_14 { pt3dadd( -29.8344, 436.49, 10.0509, 0.28 ) }
    dend_14 { pt3dadd( -31.0593, 438.602, 9.97615, 0.83 ) }
    dend_14 { pt3dadd( -31.6901, 439.682, 9.94083, 0.55 ) }
    dend_14 { pt3dadd( -32.8954, 441.783, 9.9374, 1.11 ) }
    dend_14 { pt3dadd( -34.0102, 443.828, 9.95728, 0.55 ) }
    dend_14 { pt3dadd( -34.8684, 445.563, 9.98461, 1.11 ) }
    dend_14 { pt3dadd( -35.7567, 447.532, 10.0244, 0.55 ) }
    dend_14 { pt3dadd( -36.8974, 450.299, 10.0877, 1.11 ) }
    dend_14 { pt3dadd( -37.5805, 451.96, 10.1442, 0.28 ) }
    dend_14 { pt3dadd( -38.1093, 453.279, 10.2161, 0.55 ) }
    dend_14 { pt3dadd( -38.7719, 454.789, 10.3349, 0.28 ) }
    dend_14 { pt3dadd( -39.2415, 455.859, 10.4459, 0.83 ) }
    dend_14 { pt3dadd( -39.7547, 457.283, 10.5234, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 98/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -2.42206, 362.635, -28.1694, 0.83 ) }
    dend_5 { pt3dadd( -1.71062, 365.692, -28.662, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_5 { pt3dadd( -1.37462, 367.357, -28.9428, 0.83 ) }
    dend_5 { pt3dadd( -0.889097, 369.841, -29.3546, 2.22 ) }
    dend_5 { pt3dadd( -0.440272, 372.358, -29.7841, 1.66 ) }
    dend_5 { pt3dadd( 0.13528, 375.425, -30.1904, 0.83 ) }
    dend_5 { pt3dadd( 0.3218, 376.436, -30.2982, 0.83 ) }
    dend_5 { pt3dadd( 0.661217, 378.694, -30.496, 0.83 ) }
    dend_5 { pt3dadd( 1.07974, 381.81, -30.6704, 1.66 ) }
    dend_5 { pt3dadd( 1.29814, 384.234, -30.731, 0.55 ) }
    dend_5 { pt3dadd( 1.36133, 386.677, -30.7976, 0.55 ) }
    dend_5 { pt3dadd( 1.33334, 388.202, -30.8657, 1.11 ) }
    dend_5 { pt3dadd( 1.21714, 390.818, -31.0937, 0.55 ) }
    dend_5 { pt3dadd( 0.898356, 395.101, -31.6764, 1.66 ) }
    dend_5 { pt3dadd( 0.790901, 397.277, -32.0521, 0.83 ) }
    dend_5 { pt3dadd( 0.718009, 400.829, -32.7499, 0.83 ) }
    dend_5 { pt3dadd( 0.715087, 402.548, -33.135, 0.83 ) }
    dend_5 { pt3dadd( 0.816043, 404.464, -33.5486, 1.66 ) }
    dend_5 { pt3dadd( 1.09299, 407.063, -34.069, 0.83 ) }
    dend_5 { pt3dadd( 1.70628, 411.052, -34.7376, 0.83 ) }
    dend_5 { pt3dadd( 2.29812, 414.036, -35.1074, 0.83 ) }
    dend_5 { pt3dadd( 2.57485, 415.168, -35.1813, 0.83 ) }
    dend_5 { pt3dadd( 3.199, 417.71, -35.2858, 0.83 ) }
    dend_5 { pt3dadd( 3.58187, 419.387, -35.3511, 1.38 ) }
    dend_5 { pt3dadd( 4.15833, 422.003, -35.436, 0.55 ) }
    dend_5 { pt3dadd( 4.56278, 423.737, -35.4967, 1.38 ) }
    dend_5 { pt3dadd( 5.37452, 427.049, -35.6145, 1.38 ) }
    dend_5 { pt3dadd( 6.0325, 429.888, -35.7117, 0.83 ) }
    dend_5 { pt3dadd( 6.70592, 432.97, -35.8058, 0.83 ) }
    dend_5 { pt3dadd( 7.47455, 436.338, -35.9027, 1.11 ) }
    dend_5 { pt3dadd( 8.09629, 439.104, -35.9715, 0.55 ) }
    dend_5 { pt3dadd( 8.54257, 441.329, -36.0121, 0.55 ) }
    dend_5 { pt3dadd( 8.86915, 443.092, -36.0969, 0.55 ) }
    dend_5 { pt3dadd( 9.60696, 446.999, -36.3832, 2.22 ) }
    dend_5 { pt3dadd( 9.93517, 448.747, -36.5547, 0.55 ) }
    dend_5 { pt3dadd( 10.2786, 450.495, -36.76, 0.55 ) }
    dend_5 { pt3dadd( 10.4408, 451.358, -36.8678, 1.11 ) }
    dend_5 { pt3dadd( 11.2269, 455.46, -37.3837, 0.55 ) }
    dend_5 { pt3dadd( 11.613, 457.726, -37.6587, 0.55 ) }
    dend_5 { pt3dadd( 11.731, 458.616, -37.7585, 0.55 ) }
    dend_5 { pt3dadd( 11.9644, 461.395, -38.0062, 1.11 ) }
    dend_5 { pt3dadd( 12.0786, 464.07, -38.244, 1.11 ) }
    dend_5 { pt3dadd( 12.1241, 466.269, -38.4025, 0.83 ) }
    dend_5 { pt3dadd( 12.0636, 468.568, -38.4874, 0.83 ) }
    dend_5 { pt3dadd( 11.9893, 470.02, -38.5517, 0.83 ) }
    dend_5 { pt3dadd( 11.7262, 472.921, -38.7036, 0.83 ) }
    dend_5 { pt3dadd( 11.2373, 476.207, -38.927, 2.22 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 45/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -2.42206, 362.635, -28.1694, 0.55 ) }
    dend_4 { pt3dadd( -4.37944, 362.59, -28.1147, 0.55 ) }
    dend_4 { pt3dadd( -6.42669, 362.543, -28.0575, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_47 (entry count 48/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -20.0595, -127.481, 16.7247, 1.11 ) }
    dend_53 { pt3dadd( -20.0213, -128.684, 16.7247, 1.11 ) }
    dend_53 { pt3dadd( -19.9566, -130.715, 16.7247, 1.11 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 51/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -20.0595, -127.481, 16.7247, 1.11 ) }
    dend_48 { pt3dadd( -22.829, -125.836, 14.1647, 1.11 ) }
    dend_48 { pt3dadd( -23.7597, -125.154, 13.3879, 0.28 ) }
    dend_48 { pt3dadd( -24.4356, -124.706, 13.0688, 0.83 ) }
    dend_48 { pt3dadd( -27.0552, -123.059, 12.2579, 0.55 ) }
    dend_48 { pt3dadd( -28.2784, -122.361, 11.9741, 0.55 ) }
    dend_48 { pt3dadd( -29.4565, -121.71, 11.6654, 0.55 ) }
    dend_48 { pt3dadd( -31.1035, -120.899, 11.2806, 0.55 ) }
    dend_48 { pt3dadd( -35.167, -119.11, 10.2009, 1.11 ) }
    dend_48 { pt3dadd( -37.557, -118.088, 9.53886, 0.55 ) }
    dend_48 { pt3dadd( -39.1129, -117.438, 9.11846, 0.55 ) }
    dend_48 { pt3dadd( -42.6669, -116.184, 8.06869, 0.83 ) }
    dend_48 { pt3dadd( -44.8117, -115.532, 7.41026, 0.55 ) }
    dend_48 { pt3dadd( -46.9047, -114.993, 6.74495, 1.11 ) }
    dend_48 { pt3dadd( -50.267, -114.263, 5.56159, 0.83 ) }
    dend_48 { pt3dadd( -51.4601, -114.069, 5.18254, 0.83 ) }
    dend_48 { pt3dadd( -53.1446, -113.828, 4.75312, 0.83 ) }
    dend_48 { pt3dadd( -55.811, -113.582, 4.29179, 0.83 ) }
    dend_48 { pt3dadd( -59.1858, -113.402, 3.75944, 1.11 ) }
    dend_48 { pt3dadd( -60.7513, -113.398, 3.46077, 0.83 ) }
    dend_48 { pt3dadd( -62.984, -113.491, 2.95353, 0.83 ) }
    dend_48 { pt3dadd( -66.255, -113.707, 2.10707, 0.83 ) }
    dend_48 { pt3dadd( -68.3744, -113.93, 1.4425, 0.55 ) }
    dend_48 { pt3dadd( -69.9381, -114.232, 0.876252, 1.38 ) }
    dend_48 { pt3dadd( -72.1557, -114.706, -0.093552, 0.55 ) }
    dend_48 { pt3dadd( -74.1511, -115.047, -1.06088, 0.55 ) }
    dend_48 { pt3dadd( -75.3539, -115.271, -1.7193, 0.55 ) }
    dend_48 { pt3dadd( -77.1152, -115.612, -2.82961, 0.55 ) }
    dend_48 { pt3dadd( -78.0585, -115.751, -3.48501, 0.83 ) }
    dend_48 { pt3dadd( -81.1854, -115.959, -5.81185, 0.55 ) }
    dend_48 { pt3dadd( -82.2756, -115.994, -6.6609, 0.55 ) }
    dend_48 { pt3dadd( -83.5099, -115.963, -7.63954, 0.55 ) }
    dend_48 { pt3dadd( -85.9318, -115.801, -9.33442, 0.55 ) }
    dend_48 { pt3dadd( -88.5092, -115.559, -10.8989, 1.11 ) }
    dend_48 { pt3dadd( -91.1579, -115.31, -12.335, 0.55 ) }
    dend_48 { pt3dadd( -91.8812, -115.273, -12.6586, 0.55 ) }
    dend_48 { pt3dadd( -94.3541, -115.264, -13.5613, 0.55 ) }
    dend_48 { pt3dadd( -97.2416, -115.299, -14.294, 1.94 ) }
    dend_48 { pt3dadd( -99.3588, -115.449, -14.5051, 0.83 ) }
    dend_48 { pt3dadd( -100.13, -115.541, -14.5416, 0.28 ) }
    dend_48 { pt3dadd( -101.486, -115.803, -14.5976, 0.55 ) }
    dend_48 { pt3dadd( -103.432, -116.271, -14.7042, 0.55 ) }
    dend_48 { pt3dadd( -105.113, -116.757, -14.8244, 0.28 ) }
    dend_48 { pt3dadd( -108.081, -117.658, -14.983, 1.11 ) }
    dend_48 { pt3dadd( -110.304, -118.391, -14.9875, 0.28 ) }
    dend_48 { pt3dadd( -112.749, -119.081, -14.9164, 0.83 ) }
    dend_48 { pt3dadd( -114.656, -119.52, -14.778, 0.28 ) }
    dend_48 { pt3dadd( -115.486, -119.652, -14.6757, 0.28 ) }
    dend_48 { pt3dadd( -117.562, -119.826, -14.2908, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_48 { pt3dadd( -118.697, -119.809, -14.0029, 0.55 ) }
    dend_48 { pt3dadd( -120.968, -119.523, -13.3566, 0.55 ) }
    dend_48 { pt3dadd( -121.9, -119.245, -13.165, 0.83 ) }
    dend_48 { pt3dadd( -123.398, -118.678, -12.9901, 0.28 ) }
    dend_48 { pt3dadd( -123.765, -118.542, -12.9712, 0.83 ) }
    dend_48 { pt3dadd( -126.1, -117.681, -12.9986, 0.83 ) }
    dend_48 { pt3dadd( -128.004, -116.985, -13.0474, 0.83 ) }
    dend_48 { pt3dadd( -130.179, -116.305, -13.1279, 0.55 ) }
    dend_48 { pt3dadd( -131.281, -116.005, -13.1794, 0.55 ) }
    dend_48 { pt3dadd( -133.344, -115.567, -13.2683, 1.38 ) }
    dend_48 { pt3dadd( -135.552, -115.214, -13.3489, 1.38 ) }
    dend_48 { pt3dadd( -137.391, -115.023, -13.4006, 0.28 ) }
    dend_48 { pt3dadd( -138.876, -115.036, -13.4629, 0.83 ) }
    dend_48 { pt3dadd( -140.048, -115.181, -13.5211, 0.28 ) }
    dend_48 { pt3dadd( -141.157, -115.444, -13.5951, 1.38 ) }
    dend_48 { pt3dadd( -142.828, -115.989, -13.7422, 0.28 ) }
    dend_48 { pt3dadd( -143.405, -116.263, -13.8072, 0.83 ) }
    dend_48 { pt3dadd( -144.986, -117.214, -14.0244, 0.55 ) }
    dend_48 { pt3dadd( -145.822, -117.751, -14.1655, 0.55 ) }
    dend_48 { pt3dadd( -147.283, -118.676, -14.4572, 1.11 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 20/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 18.6933, -183.156, -35.415, 0.83 ) }
    dend_39 { pt3dadd( 18.7406, -184.941, -35.5234, 0.83 ) }
    dend_39 { pt3dadd( 18.759, -186.633, -35.83, 1.94 ) }
    dend_39 { pt3dadd( 18.7957, -188.333, -36.2077, 1.94 ) }
    dend_39 { pt3dadd( 18.7934, -191.704, -37.1053, 0.83 ) }
    dend_39 { pt3dadd( 18.7675, -194.052, -37.7482, 1.38 ) }
    dend_39 { pt3dadd( 18.5969, -200.142, -39.597, 0.28 ) }
    dend_39 { pt3dadd( 18.584, -200.677, -39.7797, 0.83 ) }
    dend_39 { pt3dadd( 18.5424, -202.207, -40.3977, 0.55 ) }
    dend_39 { pt3dadd( 18.4289, -204.317, -41.4291, 0.28 ) }
    dend_39 { pt3dadd( 18.2277, -206.307, -42.6297, 0.55 ) }
    dend_39 { pt3dadd( 17.8815, -208.99, -44.22, 3.6 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 32/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 18.6933, -183.156, -35.415, 0.28 ) }
    dend_38 { pt3dadd( 16.5558, -182.211, -32.4016, 0.28 ) }
    dend_38 { pt3dadd( 16.2508, -182.076, -31.9716, 1.38 ) }
    dend_38 { pt3dadd( 14.0604, -181.108, -28.8835, 0.55 ) }
    dend_38 { pt3dadd( 12.8069, -180.553, -27.1165, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 37/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 76.8927, -206.693, -4.99638, 1.38 ) }
    dend_34 { pt3dadd( 77.4527, -209.44, -4.96638, 1.38 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 39/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 76.8927, -206.693, -4.99638, 0.55 ) }
    dend_33 { pt3dadd( 78.0148, -205.625, -6.03824, 0.55 ) }
    dend_33 { pt3dadd( 78.7375, -204.937, -6.70926, 0.55 ) }
    dend_33 { pt3dadd( 80.6435, -203.123, -8.47887, 0.28 ) }
    dend_33 { pt3dadd( 81.2612, -202.535, -9.05236, 1.11 ) }
    dend_33 { pt3dadd( 83.1526, -200.735, -10.8084, 0.28 ) }
    dend_33 { pt3dadd( 84.7363, -199.227, -12.2789, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 46/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -41.5597, 520.181, 35.9056, 1.38 ) }
    dend_25 { pt3dadd( -41.3372, 522.114, 36.3767, 1.38 ) }
    dend_25 { pt3dadd( -41.2897, 523.849, 36.8786, 0.55 ) }
    dend_25 { pt3dadd( -41.4031, 525.307, 37.5596, 0.55 ) }
    dend_25 { pt3dadd( -41.5017, 526.575, 38.1521, 0.55 ) }
    dend_25 { pt3dadd( -41.6162, 528.048, 38.84, 1.11 ) }
    dend_25 { pt3dadd( -41.8455, 530.996, 40.2175, 0.55 ) }
    dend_25 { pt3dadd( -42.1771, 533.099, 41.395, 1.11 ) }
    dend_25 { pt3dadd( -42.82, 536.15, 43.4014, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 55/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -41.5597, 520.181, 35.9056, 0.55 ) }
    dend_24 { pt3dadd( -42.0969, 522.772, 35.4819, 0.55 ) }
    dend_24 { pt3dadd( -42.4601, 523.853, 35.3618, 0.28 ) }
    dend_24 { pt3dadd( -42.9322, 524.881, 35.1777, 0.83 ) }
    dend_24 { pt3dadd( -43.8492, 526.691, 34.8152, 0.28 ) }
    dend_24 { pt3dadd( -44.7246, 528.237, 34.5073, 0.55 ) }
    dend_24 { pt3dadd( -45.5884, 529.676, 34.2336, 0.55 ) }
    dend_24 { pt3dadd( -47.3702, 532.16, 33.7291, 1.11 ) }
    dend_24 { pt3dadd( -49.0496, 534.201, 33.3543, 0.55 ) }
    dend_24 { pt3dadd( -49.7035, 534.958, 33.1842, 0.55 ) }
    dend_24 { pt3dadd( -51.182, 536.642, 32.7906, 0.83 ) }
    dend_24 { pt3dadd( -52.2048, 537.788, 32.4762, 0.83 ) }
    dend_24 { pt3dadd( -53.6724, 539.484, 31.8512, 0.83 ) }
    dend_24 { pt3dadd( -54.4326, 540.391, 31.4579, 0.83 ) }
    dend_24 { pt3dadd( -56.1865, 542.789, 30.3888, 0.55 ) }
    dend_24 { pt3dadd( -57.4272, 544.808, 29.3384, 0.83 ) }
    dend_24 { pt3dadd( -58.1387, 546.115, 28.5257, 0.83 ) }
    dend_24 { pt3dadd( -59.2922, 548.418, 26.9914, 0.55 ) }
    dend_24 { pt3dadd( -60.1733, 550.385, 25.6697, 0.55 ) }
    dend_24 { pt3dadd( -60.706, 551.602, 24.8356, 0.83 ) }
    dend_24 { pt3dadd( -62.0248, 554.402, 22.9475, 0.83 ) }
    dend_24 { pt3dadd( -62.8226, 556.12, 21.7638, 0.83 ) }
    dend_24 { pt3dadd( -63.3995, 557.35, 20.907, 0.28 ) }
    dend_24 { pt3dadd( -63.832, 558.27, 20.2005, 0.55 ) }
    dend_24 { pt3dadd( -64.5267, 559.838, 18.4949, 0.55 ) }
    dend_24 { pt3dadd( -64.914, 560.689, 17.4228, 0.55 ) }
    dend_24 { pt3dadd( -65.2338, 561.379, 16.4386, 0.55 ) }
    dend_24 { pt3dadd( -66.0345, 563.059, 13.8026, 0.55 ) }
    dend_24 { pt3dadd( -66.8911, 564.624, 10.9163, 0.83 ) }
    dend_24 { pt3dadd( -68.3943, 566.884, 6.21886, 0.28 ) }
    dend_24 { pt3dadd( -68.8956, 567.488, 4.66127, 0.28 ) }
    dend_24 { pt3dadd( -69.1712, 567.785, 3.73755, 0.55 ) }
    dend_24 { pt3dadd( -69.5006, 568.131, 2.45954, 0.28 ) }
    dend_24 { pt3dadd( -69.6824, 568.346, 1.61118, 0.83 ) }
    dend_24 { pt3dadd( -69.9335, 568.729, 0.283225, 0.83 ) }
    dend_24 { pt3dadd( -70.5789, 570.129, -4.24763, 0.83 ) }
    dend_24 { pt3dadd( -70.9692, 571.164, -7.75611, 0.28 ) }
    dend_24 { pt3dadd( -71.3119, 572.108, -11.1747, 1.11 ) }
    dend_24 { pt3dadd( -71.8008, 573.46, -16.2347, 0.55 ) }
    dend_24 { pt3dadd( -71.9607, 573.801, -17.5609, 0.55 ) }
    dend_24 { pt3dadd( -72.3261, 574.342, -19.948, 0.55 ) }
    dend_24 { pt3dadd( -72.6831, 574.666, -21.5396, 0.55 ) }
    dend_24 { pt3dadd( -73.1923, 574.949, -23.2458, 0.83 ) }
    dend_24 { pt3dadd( -74.2917, 575.369, -26.214, 0.55 ) }
    dend_24 { pt3dadd( -75.1565, 575.646, -28.3576, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_24 { pt3dadd( -77.9128, 576.515, -34.9518, 0.28 ) }
    dend_24 { pt3dadd( -78.2303, 576.646, -35.7699, 0.55 ) }
    dend_24 { pt3dadd( -79.3028, 577.217, -38.6169, 0.28 ) }
    dend_24 { pt3dadd( -80.0723, 577.683, -40.7855, 1.11 ) }
    dend_24 { pt3dadd( -81.2215, 578.446, -44.3164, 0.55 ) }
    dend_24 { pt3dadd( -81.6455, 578.836, -46.001, 1.11 ) }
    dend_24 { pt3dadd( -82.4363, 579.845, -50.0651, 0.55 ) }
    dend_24 { pt3dadd( -82.5903, 580.144, -51.1914, 0.55 ) }
    dend_24 { pt3dadd( -82.8552, 580.942, -54.1028, 1.11 ) }
    dend_24 { pt3dadd( -82.921, 581.368, -55.5984, 1.11 ) }
    dend_24 { pt3dadd( -82.9281, 582.944, -60.9091, 0.28 ) }
    dend_24 { pt3dadd( -82.8975, 583.41, -62.4705, 0.83 ) }
    dend_24 { pt3dadd( -82.8945, 584.507, -66.2422, 0.83 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 13/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -39.7547, 457.283, 10.5234, 0.55 ) }
    dend_16 { pt3dadd( -40.1847, 458.568, 10.9877, 0.55 ) }
    dend_16 { pt3dadd( -40.7554, 460.165, 11.5129, 0.28 ) }
    dend_16 { pt3dadd( -41.6227, 462.422, 12.1764, 1.38 ) }
    dend_16 { pt3dadd( -42.9808, 465.662, 13.0384, 0.28 ) }
    dend_16 { pt3dadd( -44.1964, 468.396, 13.7047, 0.55 ) }
    dend_16 { pt3dadd( -44.8559, 469.873, 14.0367, 0.55 ) }
    dend_16 { pt3dadd( -45.4259, 471.123, 14.2852, 0.83 ) }
    dend_16 { pt3dadd( -46.2924, 472.925, 14.5885, 0.28 ) }
    dend_16 { pt3dadd( -47.0261, 474.391, 14.7301, 0.83 ) }
    dend_16 { pt3dadd( -47.5287, 475.455, 14.7431, 0.28 ) }
    dend_16 { pt3dadd( -47.989, 476.516, 14.7748, 0.28 ) }
    dend_16 { pt3dadd( -48.6944, 478.148, 14.8262, 0.83 ) }
    dend_16 { pt3dadd( -49.5089, 480.087, 14.8864, 0.28 ) }
    dend_16 { pt3dadd( -49.9025, 481.062, 14.914, 0.55 ) }
    dend_16 { pt3dadd( -50.802, 483.316, 14.9708, 0.55 ) }
    dend_16 { pt3dadd( -51.4818, 484.995, 15.021, 0.28 ) }
    dend_16 { pt3dadd( -51.8377, 485.834, 15.0489, 0.28 ) }
    dend_16 { pt3dadd( -52.4549, 487.343, 15.0993, 1.11 ) }
    dend_16 { pt3dadd( -53.15, 489.273, 15.0474, 0.28 ) }
    dend_16 { pt3dadd( -53.601, 490.609, 14.9097, 0.83 ) }
    dend_16 { pt3dadd( -54.0296, 492.084, 14.63, 0.28 ) }
    dend_16 { pt3dadd( -54.3723, 493.818, 14.1919, 0.83 ) }
    dend_16 { pt3dadd( -54.5202, 494.89, 13.8965, 0.83 ) }
    dend_16 { pt3dadd( -54.7839, 497.719, 13.0627, 0.55 ) }
    dend_16 { pt3dadd( -54.9135, 499.629, 12.5095, 0.55 ) }
    dend_16 { pt3dadd( -55.0013, 500.848, 12.1828, 0.55 ) }
    dend_16 { pt3dadd( -55.1785, 503.06, 11.6516, 0.83 ) }
    dend_16 { pt3dadd( -55.3433, 504.929, 11.2853, 0.55 ) }
    dend_16 { pt3dadd( -55.662, 507.667, 10.886, 1.11 ) }
    dend_16 { pt3dadd( -55.9156, 509.573, 10.7032, 0.55 ) }
    dend_16 { pt3dadd( -56.1754, 511.362, 10.5596, 0.55 ) }
    dend_16 { pt3dadd( -56.3583, 512.499, 10.4338, 0.83 ) }
    dend_16 { pt3dadd( -56.502, 513.371, 10.2692, 0.55 ) }
    dend_16 { pt3dadd( -56.9025, 516.408, 9.51425, 0.83 ) }
    dend_16 { pt3dadd( -57.0237, 517.643, 9.03342, 0.28 ) }
    dend_16 { pt3dadd( -57.0451, 517.894, 8.90595, 0.28 ) }
    dend_16 { pt3dadd( -57.111, 518.968, 8.27675, 0.55 ) }
    dend_16 { pt3dadd( -57.2512, 521.715, 6.56062, 0.28 ) }
    dend_16 { pt3dadd( -57.2813, 522.232, 6.26026, 0.55 ) }
    dend_16 { pt3dadd( -57.4336, 524.913, 4.79221, 0.28 ) }
    dend_16 { pt3dadd( -57.4963, 526.005, 4.28525, 0.83 ) }
    dend_16 { pt3dadd( -57.6922, 527.898, 3.54883, 0.83 ) }
    dend_16 { pt3dadd( -57.7952, 528.698, 3.3107, 0.28 ) }
    dend_16 { pt3dadd( -58.0288, 531.098, 2.80739, 0.55 ) }
    dend_16 { pt3dadd( -58.1686, 532.661, 2.56269, 0.28 ) }
    dend_16 { pt3dadd( -58.3136, 534.693, 2.5364, 0.83 ) }
    dend_16 { pt3dadd( -58.4504, 537.379, 2.6768, 0.28 ) }
    dend_16 { pt3dadd( -58.471, 538.542, 2.84028, 0.28 ) }
    dend_16 { pt3dadd( -58.4671, 540.165, 3.18913, 0.55 ) }
    dend_16 { pt3dadd( -58.4639, 542.648, 3.74934, 0.83 ) }
    dend_16 { pt3dadd( -58.5267, 545.933, 4.53319, 0.28 ) }
    dend_16 { pt3dadd( -58.5333, 547.32, 4.80678, 0.83 ) }
    dend_16 { pt3dadd( -58.5354, 549.617, 5.05919, 0.28 ) }
    dend_16 { pt3dadd( -58.4918, 552.639, 4.95838, 1.38 ) }
    dend_16 { pt3dadd( -58.4383, 555.332, 4.57256, 0.28 ) }
    dend_16 { pt3dadd( -58.3149, 557.687, 4.02803, 0.83 ) }
    dend_16 { pt3dadd( -58.1586, 559.95, 3.31949, 0.83 ) }
    dend_16 { pt3dadd( -57.8721, 563.507, 2.12095, 0.55 ) }
    dend_16 { pt3dadd( -57.663, 567.141, 0.825888, 0.55 ) }
    dend_16 { pt3dadd( -57.5216, 569.702, 0.0322887, 0.83 ) }
    dend_16 { pt3dadd( -57.4398, 571.677, -0.309258, 0.83 ) }
    dend_16 { pt3dadd( -57.3884, 574.238, -0.459457, 0.55 ) }
    dend_16 { pt3dadd( -57.4238, 575.933, -0.217486, 0.55 ) }
    dend_16 { pt3dadd( -57.4932, 578.421, 0.591, 1.38 ) }
    dend_16 { pt3dadd( -57.6991, 581.496, 1.94327, 0.83 ) }
    dend_16 { pt3dadd( -57.9486, 585.027, 3.82827, 1.11 ) }
    dend_16 { pt3dadd( -58.0876, 586.764, 4.93109, 1.11 ) }
    dend_16 { pt3dadd( -58.3008, 590.27, 7.60425, 0.83 ) }
    dend_16 { pt3dadd( -58.3031, 591.028, 8.24901, 0.83 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 83/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -39.7547, 457.283, 10.5234, 0.28 ) }
    dend_15 { pt3dadd( -37.5114, 457.092, 11.5895, 0.28 ) }
    dend_15 { pt3dadd( -36.9403, 457.043, 11.8609, 0.83 ) }
    dend_15 { pt3dadd( -35.1802, 456.892, 12.6975, 0.28 ) }
    dend_15 { pt3dadd( -34.9223, 456.87, 12.82, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 88/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 11.2373, 476.207, -38.927, 0.55 ) }
    dend_7 { pt3dadd( 12.0809, 478.441, -38.9958, 0.55 ) }
    dend_7 { pt3dadd( 12.9774, 480.934, -39.1286, 0.55 ) }
    dend_7 { pt3dadd( 13.4536, 482.371, -39.224, 0.55 ) }
    dend_7 { pt3dadd( 14.1494, 484.239, -39.3576, 0.28 ) }
    dend_7 { pt3dadd( 14.8712, 485.948, -39.4921, 0.83 ) }
    dend_7 { pt3dadd( 15.9976, 488.548, -39.7007, 0.28 ) }
    dend_7 { pt3dadd( 16.4343, 489.591, -39.7944, 0.83 ) }
    dend_7 { pt3dadd( 17.0442, 491.198, -39.947, 0.55 ) }
    dend_7 { pt3dadd( 17.9088, 493.457, -40.2063, 0.55 ) }
    dend_7 { pt3dadd( 18.3977, 494.799, -40.3781, 0.83 ) }
    dend_7 { pt3dadd( 18.9208, 496.499, -40.5976, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_7 { pt3dadd( 19.3148, 497.89, -40.7332, 0.83 ) }
    dend_7 { pt3dadd( 19.721, 499.474, -40.8985, 0.83 ) }
    dend_7 { pt3dadd( 19.9807, 500.638, -41.0982, 0.28 ) }
    dend_7 { pt3dadd( 20.1894, 502.317, -41.445, 0.83 ) }
    dend_7 { pt3dadd( 20.2459, 503.722, -41.814, 0.83 ) }
    dend_7 { pt3dadd( 20.1495, 505.469, -42.5799, 0.83 ) }
    dend_7 { pt3dadd( 19.8429, 507.42, -43.7105, 1.11 ) }
    dend_7 { pt3dadd( 19.28, 509.662, -45.5593, 0.55 ) }
    dend_7 { pt3dadd( 18.5983, 511.273, -47.1995, 0.55 ) }
    dend_7 { pt3dadd( 17.7738, 512.728, -48.9228, 1.11 ) }
    dend_7 { pt3dadd( 16.0877, 515.151, -52.3095, 0.28 ) }
    dend_7 { pt3dadd( 15.6176, 515.773, -53.283, 0.28 ) }
    dend_7 { pt3dadd( 14.0902, 517.692, -56.4775, 0.83 ) }
    dend_7 { pt3dadd( 13.2202, 518.796, -58.4453, 0.55 ) }
    dend_7 { pt3dadd( 12.9466, 519.168, -59.1837, 0.55 ) }
    dend_7 { pt3dadd( 12.1407, 520.387, -61.5216, 0.55 ) }
    dend_7 { pt3dadd( 11.5558, 521.315, -63.2347, 0.83 ) }
    dend_7 { pt3dadd( 10.4214, 523.015, -66.5387, 0.55 ) }
    dend_7 { pt3dadd( 8.28535, 526.051, -72.5192, 1.94 ) }
    dend_7 { pt3dadd( 6.47118, 528.613, -78.0297, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 20/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 11.2373, 476.207, -38.927, 0.55 ) }
    dend_6 { pt3dadd( 10.5795, 478.302, -39.2559, 0.55 ) }
    dend_6 { pt3dadd( 10.0026, 480.243, -39.612, 0.83 ) }
    dend_6 { pt3dadd( 9.74144, 481.189, -39.849, 0.55 ) }
    dend_6 { pt3dadd( 9.33163, 483.294, -40.421, 0.83 ) }
    dend_6 { pt3dadd( 8.86369, 486.334, -41.2988, 0.55 ) }
    dend_6 { pt3dadd( 8.62047, 487.653, -41.7398, 0.55 ) }
    dend_6 { pt3dadd( 8.39603, 488.889, -42.308, 1.11 ) }
    dend_6 { pt3dadd( 8.15374, 490.621, -43.2315, 0.83 ) }
    dend_6 { pt3dadd( 7.86322, 492.774, -44.5344, 0.83 ) }
    dend_6 { pt3dadd( 7.46528, 495.275, -46.231, 0.83 ) }
    dend_6 { pt3dadd( 6.93981, 497.352, -47.7672, 0.55 ) }
    dend_6 { pt3dadd( 6.24422, 499.68, -49.5118, 0.28 ) }
    dend_6 { pt3dadd( 5.41833, 501.919, -51.7725, 0.83 ) }
    dend_6 { pt3dadd( 4.71279, 503.59, -53.7136, 0.55 ) }
    dend_6 { pt3dadd( 3.83127, 505.481, -56.1333, 1.38 ) }
    dend_6 { pt3dadd( 3.04868, 507.243, -58.4849, 0.55 ) }
    dend_6 { pt3dadd( 2.62087, 508.308, -59.8652, 0.55 ) }
    dend_6 { pt3dadd( -0.0991558, 515.392, -68.6723, 0.83 ) }
    dend_6 { pt3dadd( -0.522553, 516.444, -69.9934, 0.55 ) }
    dend_6 { pt3dadd( -0.608096, 516.7, -70.2968, 0.55 ) }
    dend_6 { pt3dadd( -1.05518, 518.323, -72.0278, 1.38 ) }
    dend_6 { pt3dadd( -1.2981, 519.611, -73.1176, 1.38 ) }
    dend_6 { pt3dadd( -1.7079, 522.256, -74.3683, 0.28 ) }
    dend_6 { pt3dadd( -1.85525, 523.427, -74.2776, 0.55 ) }
    dend_6 { pt3dadd( -2.00403, 525.435, -73.9706, 0.28 ) }
    dend_6 { pt3dadd( -2.16842, 527.597, -73.5536, 0.55 ) }
    dend_6 { pt3dadd( -2.50048, 531.386, -72.5491, 0.55 ) }
    dend_6 { pt3dadd( -2.71598, 533.705, -71.848, 0.55 ) }
    dend_6 { pt3dadd( -2.96275, 536.454, -70.9102, 0.55 ) }
    dend_6 { pt3dadd( -3.05084, 538.709, -70.0357, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 51/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -19.9566, -130.715, 16.7247, 0.55 ) }
    dend_55 { pt3dadd( -20.9766, -131.287, 18.0572, 0.55 ) }
    dend_55 { pt3dadd( -21.7872, -131.744, 19.1377, 0.28 ) }
    dend_55 { pt3dadd( -22.5306, -132.164, 20.1285, 1.11 ) }
    dend_55 { pt3dadd( -25.2488, -133.699, 23.7512, 0.28 ) }
    dend_55 { pt3dadd( -25.6031, -133.9, 24.2234, 1.11 ) }
    dend_55 { pt3dadd( -27.4381, -134.936, 26.6691, 0.28 ) }
    dend_55 { pt3dadd( -27.8684, -135.196, 27.387, 1.11 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 59/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -19.9566, -130.715, 16.7247, 0.83 ) }
    dend_54 { pt3dadd( -21.5587, -132.403, 17.8917, 0.83 ) }
    dend_54 { pt3dadd( -23.1083, -133.785, 18.9996, 0.83 ) }
    dend_54 { pt3dadd( -24.5079, -134.709, 20.096, 0.83 ) }
    dend_54 { pt3dadd( -26.9671, -136.197, 22.0253, 0.83 ) }
    dend_54 { pt3dadd( -28.6423, -137.341, 23.7248, 0.83 ) }
    dend_54 { pt3dadd( -30.7658, -139.018, 26.2832, 0.83 ) }
    dend_54 { pt3dadd( -31.8761, -140.003, 27.821, 0.83 ) }
    dend_54 { pt3dadd( -34.1841, -142.662, 31.617, 1.11 ) }
    dend_54 { pt3dadd( -34.6108, -143.361, 32.5569, 1.11 ) }
    dend_54 { pt3dadd( -36.0159, -146.937, 36.8551, 1.11 ) }
    dend_54 { pt3dadd( -36.6823, -149.437, 39.5185, 1.11 ) }
    dend_54 { pt3dadd( -37.089, -151.75, 41.6908, 1.11 ) }
    dend_54 { pt3dadd( -37.3018, -153.903, 43.5503, 1.38 ) }
    dend_54 { pt3dadd( -37.4171, -157.386, 46.1745, 0.55 ) }
    dend_54 { pt3dadd( -37.4781, -158.861, 47.2134, 0.83 ) }
    dend_54 { pt3dadd( -37.6076, -160.317, 48.0577, 0.83 ) }
    dend_54 { pt3dadd( -37.6664, -161.558, 48.7962, 0.83 ) }
    dend_54 { pt3dadd( -37.7566, -162.739, 49.5537, 0.83 ) }
    dend_54 { pt3dadd( -37.9166, -165.029, 50.7668, 0.55 ) }
    dend_54 { pt3dadd( -38.101, -166.599, 51.2701, 0.55 ) }
    dend_54 { pt3dadd( -38.2479, -167.476, 51.4519, 1.11 ) }
    dend_54 { pt3dadd( -38.5558, -169.111, 51.6289, 0.28 ) }
    dend_54 { pt3dadd( -38.7527, -169.996, 51.6778, 1.11 ) }
    dend_54 { pt3dadd( -39.3224, -171.942, 51.6063, 0.55 ) }
    dend_54 { pt3dadd( -39.9575, -173.836, 51.2454, 0.55 ) }
    dend_54 { pt3dadd( -40.8499, -175.95, 50.6814, 0.28 ) }
    dend_54 { pt3dadd( -41.163, -176.623, 50.4411, 1.11 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 87/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -147.283, -118.676, -14.4572, 1.11 ) }
    dend_50 { pt3dadd( -149.783, -118.409, -14.4572, 1.11 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 89/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -147.283, -118.676, -14.4572, 0.28 ) }
    dend_49 { pt3dadd( -147.911, -120.516, -15.1335, 0.28 ) }
    dend_49 { pt3dadd( -148.03, -120.865, -15.2617, 0.83 ) }
    dend_49 { pt3dadd( -148.617, -122.584, -15.8937, 0.28 ) }
    dend_49 { pt3dadd( -148.782, -123.068, -16.0718, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 94/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 17.8815, -208.99, -44.22, 0.55 ) }
    dend_41 { pt3dadd( 16.507, -210.252, -43.34, 0.55 ) }
    dend_41 { pt3dadd( 15.5261, -211.128, -42.8132, 0.55 ) }
    dend_41 { pt3dadd( 13.7162, -212.692, -41.5292, 0.28 ) }
    dend_41 { pt3dadd( 13.2048, -213.185, -41.1483, 0.55 ) }
    dend_41 { pt3dadd( 12.4166, -213.944, -40.5622, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_41 { pt3dadd( 11.4071, -214.942, -39.8172, 0.28 ) }
    dend_41 { pt3dadd( 10.591, -215.68, -39.227, 0.55 ) }
    dend_41 { pt3dadd( 8.23743, -217.705, -37.7047, 0.28 ) }
    dend_41 { pt3dadd( 6.24683, -219.384, -36.5266, 0.83 ) }
    dend_41 { pt3dadd( 4.2576, -221.1, -35.2845, 0.28 ) }
    dend_41 { pt3dadd( 3.69818, -221.598, -34.9161, 0.83 ) }
    dend_41 { pt3dadd( 2.27387, -222.854, -33.9767, 0.83 ) }
    dend_41 { pt3dadd( 0.768386, -224.097, -33.0993, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 8/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 17.8815, -208.99, -44.22, 0.28 ) }
    dend_40 { pt3dadd( 17.7224, -212.965, -44.061, 0.28 ) }
    dend_40 { pt3dadd( 17.6841, -214.364, -43.937, 0.55 ) }
    dend_40 { pt3dadd( 17.6458, -216.719, -43.6761, 0.28 ) }
    dend_40 { pt3dadd( 17.6231, -219.554, -43.3356, 1.11 ) }
    dend_40 { pt3dadd( 17.6257, -222.928, -42.9176, 0.28 ) }
    dend_40 { pt3dadd( 17.6467, -223.825, -42.8089, 0.55 ) }
    dend_40 { pt3dadd( 17.6621, -225.22, -42.5173, 0.28 ) }
    dend_40 { pt3dadd( 17.6819, -226.092, -42.3057, 0.55 ) }
    dend_40 { pt3dadd( 17.6635, -227.205, -41.9917, 0.28 ) }
    dend_40 { pt3dadd( 17.6404, -227.821, -41.8379, 0.55 ) }
    dend_40 { pt3dadd( 17.5497, -229.842, -41.5945, 0.28 ) }
    dend_40 { pt3dadd( 17.4752, -231.627, -41.4697, 1.11 ) }
    dend_40 { pt3dadd( 17.2475, -235.399, -41.0164, 0.28 ) }
    dend_40 { pt3dadd( 17.1272, -237.582, -40.6949, 1.11 ) }
    dend_40 { pt3dadd( 17.0226, -239.322, -40.4297, 1.11 ) }
    dend_40 { pt3dadd( 16.8113, -242.551, -39.9276, 0.28 ) }
    dend_40 { pt3dadd( 16.6734, -244.596, -39.6058, 0.83 ) }
    dend_40 { pt3dadd( 16.5703, -248.953, -38.9856, 0.55 ) }
    dend_40 { pt3dadd( 16.6039, -251.368, -38.7891, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 28/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 77.4527, -209.44, -4.96638, 0.28 ) }
    dend_36 { pt3dadd( 79.9793, -210.834, -4.54411, 0.28 ) }
    dend_36 { pt3dadd( 80.8659, -211.311, -4.40119, 0.83 ) }
    dend_36 { pt3dadd( 82.2571, -212.072, -4.19526, 0.28 ) }
    dend_36 { pt3dadd( 84.2017, -213.164, -3.93069, 0.83 ) }
    dend_36 { pt3dadd( 86.1371, -214.32, -3.68544, 0.28 ) }
    dend_36 { pt3dadd( 87.5738, -215.166, -3.51972, 0.55 ) }
    dend_36 { pt3dadd( 88.3468, -215.577, -3.43687, 0.28 ) }
    dend_36 { pt3dadd( 90.0449, -216.388, -3.29689, 0.55 ) }
    dend_36 { pt3dadd( 91.1688, -216.901, -3.22737, 0.28 ) }
    dend_36 { pt3dadd( 92.4334, -217.447, -3.15934, 0.55 ) }
    dend_36 { pt3dadd( 94.0753, -218.069, -3.09977, 0.55 ) }
    dend_36 { pt3dadd( 95.7225, -218.655, -3.13645, 0.55 ) }
    dend_36 { pt3dadd( 97.9438, -219.478, -3.27975, 0.83 ) }
    dend_36 { pt3dadd( 99.2749, -219.998, -3.49974, 0.28 ) }
    dend_36 { pt3dadd( 100.515, -220.569, -3.79529, 0.83 ) }
    dend_36 { pt3dadd( 101.776, -221.203, -3.9194, 1.38 ) }
    dend_36 { pt3dadd( 104.541, -222.763, -3.87498, 0.28 ) }
    dend_36 { pt3dadd( 106.043, -223.731, -3.82139, 0.83 ) }
    dend_36 { pt3dadd( 108.361, -225.292, -3.69408, 0.28 ) }
    dend_36 { pt3dadd( 109.826, -226.285, -3.55444, 1.11 ) }
    dend_36 { pt3dadd( 115.395, -230.111, -2.61163, 0.28 ) }
    dend_36 { pt3dadd( 116.107, -230.602, -2.44239, 0.55 ) }
    dend_36 { pt3dadd( 119.677, -233.046, -1.4176, 0.28 ) }
    dend_36 { pt3dadd( 122.061, -234.733, -0.735402, 0.28 ) }
    dend_36 { pt3dadd( 123.082, -235.538, -0.443979, 0.55 ) }
    dend_36 { pt3dadd( 124.69, -236.839, -0.152794, 0.28 ) }
    dend_36 { pt3dadd( 125.607, -237.691, -0.211272, 0.28 ) }
    dend_36 { pt3dadd( 126.757, -238.825, -0.232075, 0.55 ) }
    dend_36 { pt3dadd( 128.092, -240.244, 0.0535538, 0.55 ) }
    dend_36 { pt3dadd( 128.855, -241.467, 0.145446, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 59/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 77.4527, -209.44, -4.96638, 0.55 ) }
    dend_35 { pt3dadd( 75.1064, -210.85, -4.91179, 0.55 ) }
    dend_35 { pt3dadd( 74.134, -211.434, -4.88916, 0.55 ) }
    dend_35 { pt3dadd( 72.9353, -212.155, -4.86128, 0.28 ) }
    dend_35 { pt3dadd( 71.3498, -213.108, -4.82439, 0.83 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 64/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -42.82, 536.15, 43.4014, 0.83 ) }
    dend_27 { pt3dadd( -42.8946, 538.261, 44.2519, 0.83 ) }
    dend_27 { pt3dadd( -42.966, 541.52, 45.5416, 0.83 ) }
    dend_27 { pt3dadd( -42.9921, 543.747, 46.436, 0.83 ) }
    dend_27 { pt3dadd( -43.1927, 548.361, 48.2602, 0.83 ) }
    dend_27 { pt3dadd( -43.2222, 548.894, 48.4333, 1.11 ) }
    dend_27 { pt3dadd( -43.3241, 550.284, 48.8056, 0.55 ) }
    dend_27 { pt3dadd( -43.4178, 551.107, 48.984, 0.83 ) }
    dend_27 { pt3dadd( -43.6707, 551.762, 47.447, 0.28 ) }
    dend_27 { pt3dadd( -43.7598, 552.4, 45.7997, 0.55 ) }
    dend_27 { pt3dadd( -43.7158, 554.475, 40.6418, 0.28 ) }
    dend_27 { pt3dadd( -43.6733, 555.158, 39.1628, 0.83 ) }
    dend_27 { pt3dadd( -43.6068, 555.725, 38.0339, 0.83 ) }
    dend_27 { pt3dadd( -42.9334, 559.616, 31.1821, 0.55 ) }
    dend_27 { pt3dadd( -42.6478, 560.792, 29.3759, 0.55 ) }
    dend_27 { pt3dadd( -42.272, 561.981, 28.1173, 1.11 ) }
    dend_27 { pt3dadd( -41.07, 566.245, 26.3196, 0.55 ) }
    dend_27 { pt3dadd( -40.9126, 566.85, 26.231, 0.83 ) }
    dend_27 { pt3dadd( -40.7033, 567.824, 26.3882, 0.28 ) }
    dend_27 { pt3dadd( -40.6295, 568.345, 26.5877, 0.55 ) }
    dend_27 { pt3dadd( -40.6049, 569.179, 26.8035, 0.28 ) }
    dend_27 { pt3dadd( -40.6318, 570.334, 26.9011, 0.83 ) }
    dend_27 { pt3dadd( -40.5905, 571.546, 26.8064, 0.28 ) }
    dend_27 { pt3dadd( -40.5741, 572.349, 26.7307, 0.83 ) }
    dend_27 { pt3dadd( -40.5422, 574.929, 26.2457, 0.55 ) }
    dend_27 { pt3dadd( -40.5101, 577.267, 25.6527, 0.55 ) }
    dend_27 { pt3dadd( -40.5003, 578.997, 25.1471, 0.55 ) }
    dend_27 { pt3dadd( -40.4843, 581.409, 24.4248, 0.55 ) }
    dend_27 { pt3dadd( -40.4926, 583.028, 23.8947, 0.55 ) }
    dend_27 { pt3dadd( -40.5483, 586.532, 22.778, 0.55 ) }
    dend_27 { pt3dadd( -40.55, 587.621, 22.4229, 0.28 ) }
    dend_27 { pt3dadd( -40.5415, 588.586, 22.078, 0.55 ) }
    dend_27 { pt3dadd( -40.5656, 589.923, 21.5883, 0.28 ) }
    dend_27 { pt3dadd( -40.711, 591.993, 20.7754, 0.55 ) }
    dend_27 { pt3dadd( -40.7733, 592.85, 20.461, 0.55 ) }
    dend_27 { pt3dadd( -40.854, 594.475, 19.9465, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_27 { pt3dadd( -40.8766, 596.01, 19.3654, 0.28 ) }
    dend_27 { pt3dadd( -40.8195, 596.798, 19.0429, 0.55 ) }
    dend_27 { pt3dadd( -40.4864, 598.546, 17.9031, 0.28 ) }
    dend_27 { pt3dadd( -40.1536, 599.451, 17.0815, 0.83 ) }
    dend_27 { pt3dadd( -39.7605, 600.406, 16.1392, 0.83 ) }
    dend_27 { pt3dadd( -38.9626, 602.08, 14.3471, 0.55 ) }
    dend_27 { pt3dadd( -38.2809, 603.299, 12.8889, 0.55 ) }
    dend_27 { pt3dadd( -36.0782, 606.829, 8.27479, 0.28 ) }
    dend_27 { pt3dadd( -34.507, 609.008, 5.13804, 0.83 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 9/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -42.82, 536.15, 43.4014, 0.55 ) }
    dend_26 { pt3dadd( -44.1845, 538.301, 43.7629, 0.55 ) }
    dend_26 { pt3dadd( -45.9803, 541.131, 44.2386, 0.55 ) }
    dend_26 { pt3dadd( -47.2435, 543.122, 44.5733, 0.55 ) }
    dend_26 { pt3dadd( -48.3401, 544.85, 44.8638, 0.83 ) }
    // Section: dend_22, id: dend_22, parent: dend_16 (entry count 14/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -58.3031, 591.028, 8.24901, 0.28 ) }
    dend_22 { pt3dadd( -57.7982, 591.762, 6.19564, 0.28 ) }
    dend_22 { pt3dadd( -57.6578, 591.967, 5.62452, 0.55 ) }
    dend_22 { pt3dadd( -56.2763, 593.977, 0.00676681, 0.28 ) }
    dend_22 { pt3dadd( -56.1195, 594.205, -0.630801, 0.83 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 19/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -58.3031, 591.028, 8.24901, 0.28 ) }
    dend_17 { pt3dadd( -60.2436, 592.947, 8.18131, 0.28 ) }
    dend_17 { pt3dadd( -61.4431, 594.133, 8.13947, 0.83 ) }
    dend_17 { pt3dadd( -62.34, 595.02, 8.10818, 0.83 ) }
    dend_17 { pt3dadd( -62.9075, 595.581, 8.08838, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 24/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 6.47118, 528.613, -78.0297, 0.55 ) }
    dend_9 { pt3dadd( 3.9104, 529.555, -78.595, 0.55 ) }
    dend_9 { pt3dadd( 0.901551, 530.702, -79.4725, 0.55 ) }
    dend_9 { pt3dadd( -1.34502, 531.558, -80.1276, 0.55 ) }
    dend_9 { pt3dadd( -3.9537, 532.552, -80.8884, 0.28 ) }
    dend_9 { pt3dadd( -6.3132, 533.452, -81.5765, 0.83 ) }
    dend_9 { pt3dadd( -8.13151, 534.145, -82.1067, 0.83 ) }
    dend_9 { pt3dadd( -10.0316, 534.994, -82.8585, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 32/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 6.47118, 528.613, -78.0297, 0.55 ) }
    dend_8 { pt3dadd( 5.56118, 531.114, -78.7397, 0.55 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 34/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -149.783, -118.409, -14.4572, 0.28 ) }
    dend_52 { pt3dadd( -151.991, -118.22, -14.6875, 0.28 ) }
    dend_52 { pt3dadd( -154.195, -117.92, -14.8925, 0.55 ) }
    dend_52 { pt3dadd( -156.655, -117.549, -15.0978, 0.28 ) }
    dend_52 { pt3dadd( -158.033, -117.361, -15.1695, 1.11 ) }
    dend_52 { pt3dadd( -160.143, -117.071, -15.222, 0.28 ) }
    dend_52 { pt3dadd( -160.685, -116.989, -15.2554, 0.55 ) }
    dend_52 { pt3dadd( -163.731, -116.53, -15.5352, 0.28 ) }
    dend_52 { pt3dadd( -164.601, -116.383, -15.6221, 1.11 ) }
    dend_52 { pt3dadd( -166.57, -116.086, -15.8263, 0.28 ) }
    dend_52 { pt3dadd( -167.736, -115.918, -15.9364, 1.11 ) }
    dend_52 { pt3dadd( -170.509, -115.537, -16.0976, 1.11 ) }
    dend_52 { pt3dadd( -172.425, -115.328, -16.3009, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 47/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -149.783, -118.409, -14.4572, 0.83 ) }
    dend_51 { pt3dadd( -151.583, -120.357, -15.3572, 0.83 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 49/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 0.768386, -224.097, -33.0993, 0.83 ) }
    dend_43 { pt3dadd( 0.252363, -224.849, -33.76, 0.83 ) }
    dend_43 { pt3dadd( -0.611722, -226.108, -34.8663, 0.28 ) }
    dend_43 { pt3dadd( -1.33648, -227.164, -35.7942, 1.11 ) }
    dend_43 { pt3dadd( -3.38443, -230.149, -38.4161, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 54/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 0.768386, -224.097, -33.0993, 1.11 ) }
    dend_42 { pt3dadd( -1.11161, -222.221, -33.0993, 1.11 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 56/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -62.9075, 595.581, 8.08838, 0.55 ) }
    dend_21 { pt3dadd( -61.9429, 596.623, 6.43776, 0.55 ) }
    dend_21 { pt3dadd( -60.891, 597.599, 4.9801, 0.28 ) }
    dend_21 { pt3dadd( -60.6309, 597.831, 4.48182, 0.55 ) }
    dend_21 { pt3dadd( -58.7954, 599.471, 0.965062, 0.28 ) }
    dend_21 { pt3dadd( -57.9346, 600.24, -0.684167, 0.55 ) }
    dend_21 { pt3dadd( -56.7644, 601.285, -2.92628, 0.28 ) }
    dend_21 { pt3dadd( -56.0357, 602.032, -4.77111, 0.55 ) }
    dend_21 { pt3dadd( -54.1137, 604.3, -10.8495, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 65/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -62.9075, 595.581, 8.08838, 0.28 ) }
    dend_18 { pt3dadd( -64.0885, 595.774, 8.2177, 0.28 ) }
    dend_18 { pt3dadd( -65.9112, 596.073, 8.41729, 0.55 ) }
    dend_18 { pt3dadd( -67.4581, 596.326, 8.58667, 0.55 ) }
    dend_18 { pt3dadd( -69.0902, 596.593, 8.76538, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 70/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -10.0316, 534.994, -82.8585, 0.55 ) }
    dend_11 { pt3dadd( -10.7016, 536.271, -82.7027, 0.55 ) }
    dend_11 { pt3dadd( -11.3492, 537.505, -82.5521, 0.55 ) }
    dend_11 { pt3dadd( -11.9379, 538.626, -82.4152, 0.83 ) }
    dend_11 { pt3dadd( -12.6522, 539.988, -82.2491, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 75/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -10.0316, 534.994, -82.8585, 0.28 ) }
    dend_10 { pt3dadd( -12.5495, 536.135, -84.1283, 0.28 ) }
    dend_10 { pt3dadd( -13.2405, 536.448, -84.4767, 0.28 ) }
    dend_10 { pt3dadd( -14.6377, 537.082, -85.1814, 0.83 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 79/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -3.38443, -230.149, -38.4161, 1.11 ) }
    dend_45 { pt3dadd( -3.41129, -232.351, -36.8724, 1.11 ) }
    dend_45 { pt3dadd( -3.49039, -234.6, -35.1881, 0.28 ) }
    dend_45 { pt3dadd( -3.59826, -236.159, -34.0062, 1.11 ) }
    dend_45 { pt3dadd( -4.08444, -240.459, -30.4733, 0.28 ) }
    dend_45 { pt3dadd( -4.23724, -241.527, -29.5797, 1.94 ) }
    dend_45 { pt3dadd( -4.71856, -244.646, -27.1294, 1.11 ) }
    dend_45 { pt3dadd( -4.85774, -245.336, -26.589, 0.28 ) }
    dend_45 { pt3dadd( -5.05252, -246.131, -25.9779, 0.83 ) }
    dend_45 { pt3dadd( -5.62653, -248.263, -24.58, 0.28 ) }
    dend_45 { pt3dadd( -5.91307, -249.262, -24.1667, 1.11 ) }
    dend_45 { pt3dadd( -6.65919, -251.93, -23.3081, 0.28 ) }
    dend_45 { pt3dadd( -7.28079, -254.063, -22.8453, 0.28 ) }
    dend_45 { pt3dadd( -7.57211, -255.185, -22.621, 1.11 ) }
    dend_45 { pt3dadd( -7.57211, -255.185, -22.621, 1.11 ) }
    dend_45 { pt3dadd( -7.88695, -256.588, -22.4988, 0.55 ) }
    dend_45 { pt3dadd( -8.03605, -257.202, -22.4279, 1.38 ) }
    dend_45 { pt3dadd( -8.73434, -259.53, -21.987, 0.28 ) }
    dend_45 { pt3dadd( -8.80732, -259.779, -21.9198, 1.11 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 98/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -3.38443, -230.149, -38.4161, 0.55 ) }
    dend_44 { pt3dadd( -6.42434, -229.875, -37.2621, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_44 { pt3dadd( -8.308, -229.705, -36.5471, 0.55 ) }
    dend_44 { pt3dadd( -9.92176, -229.56, -35.9345, 0.83 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 2/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -69.0902, 596.593, 8.76538, 0.55 ) }
    dend_20 { pt3dadd( -69.6304, 597.869, 9.03805, 0.55 ) }
    dend_20 { pt3dadd( -70.4441, 600.208, 9.61166, 0.55 ) }
    dend_20 { pt3dadd( -70.8448, 601.779, 9.96509, 0.55 ) }
    dend_20 { pt3dadd( -71.2934, 603.723, 10.3305, 0.55 ) }
    dend_20 { pt3dadd( -71.6729, 605.516, 10.7211, 0.28 ) }
    dend_20 { pt3dadd( -71.8333, 606.337, 10.8547, 0.83 ) }
    dend_20 { pt3dadd( -72.1841, 608.681, 11.1251, 0.83 ) }
    dend_20 { pt3dadd( -72.3525, 610.697, 11.3183, 0.83 ) }
    dend_20 { pt3dadd( -72.4192, 611.732, 11.3718, 0.55 ) }
    dend_20 { pt3dadd( -72.4148, 614.371, 11.4175, 0.83 ) }
    dend_20 { pt3dadd( -72.2259, 617.361, 11.2591, 0.28 ) }
    dend_20 { pt3dadd( -72.1428, 618.792, 11.0548, 0.28 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 15/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -69.0902, 596.593, 8.76538, 0.55 ) }
    dend_19 { pt3dadd( -71.8902, 595.435, 9.40538, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_29, dend_0, dend_57, dend_30, dend_12, dend_1, dend_59, dend_58, dend_46, dend_31, dend_28, dend_13, dend_3, dend_2, dend_61, dend_60, dend_56, dend_47, dend_37, dend_32, dend_23, dend_14, dend_5, dend_4, dend_53, dend_48, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_49, dend_41, dend_40, dend_36, dend_35, dend_27, dend_26, dend_22, dend_17, dend_9, dend_8, dend_52, dend_51, dend_43, dend_42, dend_21, dend_18, dend_11, dend_10, dend_45, dend_44, dend_20, dend_19]}
    ModelViewParmSubset_2 = new SectionList()
    dend_29 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_29, dend_0, dend_57, dend_30, dend_12, dend_1, dend_59, dend_58, dend_46, dend_31, dend_28, dend_13, dend_3, dend_2, dend_61, dend_60, dend_56, dend_47, dend_37, dend_32, dend_23, dend_14, dend_5, dend_4, dend_53, dend_48, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_49, dend_41, dend_40, dend_36, dend_35, dend_27, dend_26, dend_22, dend_17, dend_9, dend_8, dend_52, dend_51, dend_43, dend_42, dend_21, dend_18, dend_11, dend_10, dend_45, dend_44, dend_20, dend_19]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_29, dend_0, axon_0, dend_57, dend_30, dend_12, dend_1, axon_1, dend_59, dend_58, dend_46, dend_31, dend_28, dend_13, dend_3, dend_2, dend_61, dend_60, dend_56, dend_47, dend_37, dend_32, dend_23, dend_14, dend_5, dend_4, dend_53, dend_48, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_49, dend_41, dend_40, dend_36, dend_35, dend_27, dend_26, dend_22, dend_17, dend_9, dend_8, dend_52, dend_51, dend_43, dend_42, dend_21, dend_18, dend_11, dend_10, dend_45, dend_44, dend_20, dend_19]}
    ModelViewParmSubset_5 = new SectionList()
    dend_29 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_29 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_57 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_12 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_58 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_31 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_28 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_56 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_32 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_23 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_14 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_5 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_48 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_24 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_16 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_6 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_54 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_40 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_36 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_27 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_30 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_46 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_47 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_53 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_59 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_55 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_61 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_60 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_37 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_38 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_39 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_41 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_42 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_43 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_34 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_44 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_35 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_33 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_50 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_49 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_51 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_45 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_52 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_2 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_3 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_4 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_13 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_15 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_25 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_26 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_8 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_9 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_10 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_11 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_17 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_22 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_18 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_19 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_21 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_20 OneSecGrp_SectionRef_64.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_3, dend_3, dend_2, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_47, dend_47, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_43, dend_43, dend_43, dend_43, dend_42, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_29 nseg = 3
    dend_0 nseg = 3
    dend_57 nseg = 3
    dend_12 nseg = 17
    dend_1 nseg = 15
    dend_58 nseg = 3
    dend_31 nseg = 3
    dend_28 nseg = 9
    dend_56 nseg = 7
    dend_32 nseg = 5
    dend_23 nseg = 5
    dend_14 nseg = 3
    dend_5 nseg = 5
    dend_48 nseg = 7
    dend_24 nseg = 7
    dend_16 nseg = 7
    dend_7 nseg = 3
    dend_6 nseg = 3
    dend_54 nseg = 3
    dend_40 nseg = 3
    dend_36 nseg = 3
    dend_27 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L4_DBC_a7aa7154d8_0_0


