// Cell: bSTUT213_L6_LBC_9961376dfe_0_0
/*
{
  "id" : "bSTUT213_L6_LBC_9961376dfe_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-5.84291, 11.3612, 2.23641, 5.89494", "-5.19407, 10.0003, 1.99661, 10.2773", "-4.54524, 8.63944, 1.7568, 13.3265", "-3.8964, 7.27857, 1.517, 15.2194", "-3.24756, 5.91771, 1.2772, 16.1615", "-2.59873, 4.55684, 1.0374, 16.5543", "-1.94989, 3.19598, 0.797597, 16.4314", "-1.30106, 1.83511, 0.557795, 16.0873", "-0.65222, 0.47425, 0.317993, 15.3318", "-0.00338354, -0.886615, 0.0781916, 14.6262", "0.645453, -2.24748, -0.16161, 13.9141", "1.29429, -3.60834, -0.401412, 12.634", "1.94312, -4.96921, -0.641214, 10.4536", "2.59196, -6.33007, -0.881015, 8.87258", "3.2408, -7.69094, -1.12082, 7.42349", "3.88963, -9.0518, -1.36062, 6.11203", "4.53847, -10.4127, -1.60042, 4.82754", "5.18731, -11.7735, -1.84022, 4.18986", "5.83614, -13.1344, -2.08002, 4.58127", "6.48498, -14.4953, -2.31983, 4.2655", "7.13381, -15.8561, -2.55963, 2.83368" ]
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "9.13926, -15.777, -1.39701, 1.62", "10.7033, -16.1868, -0.605933, 1.62", "11.9686, -16.5243, 0.0728854, 1.62", "13.3828, -16.9094, 0.888633, 1.25", "15.0014, -17.3947, 1.87347, 1.25", "17.2632, -18.1599, 3.26959, 1.25", "18.5138, -18.6331, 4.03065, 1.4", "20.1776, -19.3113, 5.11846, 1.4", "21.1251, -19.8117, 5.7707, 1.4", "22.2117, -20.5706, 6.51303, 1.62", "22.9123, -21.1879, 6.90882, 1.62", "24.1748, -22.3707, 7.44807, 1.62", "25.2636, -23.3239, 7.82914, 1.62", "26.6424, -24.4466, 8.26029, 1.62", "27.7017, -25.2894, 8.55665, 1.62", "29.7562, -26.8401, 9.09191, 1.11", "31.9587, -28.3876, 9.65764, 1.4", "34.3321, -29.9195, 10.2364, 1.4", "35.7072, -30.6867, 10.5451, 1.4" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500009122195697
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "6.56926, -15.977, -4.34701, 2.65", "8.12656, -18.9906, -4.5644, 2.73", "9.42242, -21.4982, -4.74528, 2.43", "10.7017, -23.9738, -4.92386, 2.43", "12.0039, -26.4937, -5.10564, 2.65", "12.8284, -28.0891, -5.22072, 2.65" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500009122195697
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-4.59074, -4.41702, 12.953, 2.36", "-6.96385, -5.28756, 13.3131, 2.36", "-9.43025, -6.19231, 13.6873, 2.36" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500009122195697
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "3.27926, 9.99302, 3.25299, 2.21", "4.58246, 11.2769, 4.66659, 2.21", "6.04752, 12.7202, 6.25577, 2.21", "7.07014, 13.7277, 7.36503, 2.21", "8.31249, 14.9517, 8.71262, 2.21", "9.38042, 16.0038, 9.87102, 2.21", "10.9742, 17.574, 11.5998, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500009122195697
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-8.53074, 9.25302, 1.90299, 1.47", "-8.77792, 10.1682, 1.90299, 1.47", "-9.01783, 11.1053, 1.90299, 1.47", "-9.19561, 12.0321, 1.90299, 1.62", "-9.33224, 12.8257, 1.90299, 1.84", "-9.40173, 13.2882, 1.90299, 1.84", "-9.53265, 14.3408, 1.90521, 1.84", "-9.55235, 14.7012, 1.90646, 1.84", "-9.54865, 16.0107, 1.9121, 1.4", "-9.50155, 17.1151, 1.91732, 1.4", "-9.45065, 17.7036, 1.92015, 1.25", "-9.2331, 19.731, 1.9298, 1.69", "-9.11887, 20.6814, 1.93542, 1.69", "-8.97837, 21.9589, 1.97721, 1.69", "-8.89302, 23.0941, 2.04058, 1.33", "-8.84627, 24.2155, 2.12504, 1.33", "-8.87111, 24.9106, 2.18894, 1.33", "-9.03081, 25.998, 2.33637, 0.81", "-9.34909, 27.2581, 2.54243, 0.81", "-9.62695, 28.193, 2.70993, 0.81", "-9.77855, 28.8187, 2.78995, 0.96", "-9.99695, 30.0189, 2.83779, 0.96", "-10.1676, 31.5177, 2.72572, 1.25", "-10.2209, 32.3939, 2.55623, 1.25", "-10.2807, 33.6763, 2.20709, 1.25", "-10.4278, 36.1448, 1.47141, 0.88", "-10.5262, 37.3254, 1.09691, 0.88", "-10.6944, 38.8158, 0.608847, 1.03", "-10.8466, 39.765, 0.321891, 1.25", "-11.3759, 42.1316, -0.270805, 1.11", "-11.8146, 43.5776, -0.536261, 0.88", "-12.0074, 44.1245, -0.600221, 0.88", "-12.4164, 45.3581, -0.68177, 1.11", "-12.8889, 47.0391, -0.826803, 0.66", "-13.0018, 47.5733, -0.903734, 0.66", "-13.1008, 48.3407, -1.04958, 0.66", "-13.2484, 49.8709, -1.36436, 0.88", "-13.3041, 50.4025, -1.47951, 0.88", "-13.5329, 52.2308, -1.89559, 0.59", "-13.6653, 53.2567, -2.13496, 0.52", "-14.1878, 57.3995, -3.00112, 0.59", "-14.2511, 58.0097, -3.10744, 0.52", "-14.3412, 59.0789, -3.27521, 0.37", "-14.3724, 59.7313, -3.37944, 0.37", "-14.3758, 61.0375, -3.57884, 0.44", "-14.3069, 61.9303, -3.77872, 0.44", "-14.0203, 63.2154, -4.31415, 0.29", "-13.7297, 64.3939, -4.91139, 0.29", "-13.5528, 65.1385, -5.35145, 0.29", "-13.499, 65.4659, -5.57542, 0.44", "-13.5081, 65.7909, -5.84256, 0.74", "-13.6496, 66.3841, -6.3888, 0.74", "-13.8518, 66.8186, -6.80783, 0.74", "-14.1456, 67.3925, -7.25896, 0.74", "-14.2244, 67.5742, -7.37581, 0.37", "-14.2963, 68.128, -7.72143, 0.37", "-14.2955, 68.3464, -7.87098, 0.37", "-14.2702, 68.8011, -8.2, 0.37", "-14.2591, 69.305, -8.58884, 0.37", "-14.284, 69.954, -9.08355, 0.37", "-14.4663, 71.8, -10.5541, 0.37", "-14.6704, 73.2406, -11.7282, 0.37", "-14.7635, 73.79, -12.1912, 0.22", "-14.9592, 74.6966, -12.9718, 0.22", "-15.2219, 75.6545, -13.7695, 0.22", "-15.4298, 76.6201, -14.5177, 0.44", "-15.4736, 76.947, -14.7337, 0.44", "-15.4753, 77.5722, -15.1018, 0.44", "-15.3875, 78.3136, -15.5067, 0.44", "-15.0759, 79.7131, -16.204, 0.44", "-14.3937, 82.0622, -17.2729, 0.29", "-14.1733, 82.7635, -17.537, 0.37", "-14.0123, 83.2483, -17.7009, 0.37", "-13.6348, 84.3109, -18.0127, 0.37", "-13.4275, 84.8719, -18.1599, 0.37", "-13.2708, 85.3902, -18.2673, 0.37", "-13.2541, 85.9671, -18.3089, 0.22", "-13.2864, 86.37, -18.3171, 0.22", "-13.3259, 86.622, -18.3071, 0.29", "-13.4823, 87.347, -18.2479, 0.29", "-13.7591, 88.5352, -18.1352, 0.29", "-14.2556, 90.6849, -17.9919, 0.59", "-14.465, 91.6119, -17.9717, 0.37", "-14.6415, 92.3638, -17.9825, 0.22", "-14.8101, 93.04, -18.0138, 0.22", "-15.1255, 94.0923, -18.0976, 0.22", "-15.8234, 95.7917, -18.3127, 0.37", "-16.185, 96.473, -18.4734, 0.37", "-16.5683, 97.0883, -18.6706, 0.37", "-16.9195, 97.6022, -18.877, 0.37", "-17.7023, 98.637, -19.3025, 0.37", "-18.555, 99.6444, -19.698, 0.15", "-19.2622, 100.424, -19.941, 0.15", "-19.3419, 100.524, -19.9697, 0.29", "-19.7353, 101.111, -20.1461, 0.29", "-20.149, 101.887, -20.3887, 0.29", "-20.4361, 102.622, -20.6276, 0.29", "-20.6738, 103.421, -20.8554, 0.29", "-21.0348, 104.887, -21.1576, 0.37", "-21.1876, 105.655, -21.3168, 0.22", "-21.2862, 106.262, -21.4147, 0.15", "-21.3734, 106.933, -21.5108, 0.15", "-21.5136, 108.54, -21.6729, 0.15", "-21.656, 110.686, -21.7782, 0.29", "-21.6799, 111.299, -21.7687, 0.22", "-21.715, 112.599, -21.7107, 0.22", "-21.724, 112.97, -21.6851, 0.29", "-21.724, 113.547, -21.6106, 0.29", "-21.7025, 114.384, -21.4648, 0.29", "-21.6716, 115.245, -21.2933, 0.29", "-21.6601, 115.582, -21.231, 0.29", "-21.5779, 117.188, -20.9969, 0.29", "-21.481, 119.101, -20.7345, 0.29", "-21.4556, 119.655, -20.6584, 0.29", "-21.4385, 120.151, -20.5928, 0.29", "-21.4387, 121.939, -20.4424, 0.29", "-21.4665, 123.512, -20.3983, 0.44", "-21.5064, 124.352, -20.4223, 0.44", "-21.5633, 125.392, -20.4935, 0.29", "-21.6609, 126.829, -20.6163, 0.29", "-21.8769, 129.248, -20.8641, 0.44", "-21.9805, 130.124, -20.9802, 0.29", "-22.2325, 131.88, -21.2747, 0.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500009122195697,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "7.13381, -15.8561, -2.55963, 0.944631", "13.5893, -29.3959, -2.55963, 0.944631", "20.0449, -42.9357, -2.55963, 0.944631" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "35.7072, -30.6867, 10.5451, 1.33", "36.9662, -30.7211, 10.0868, 1.33", "37.9713, -30.8283, 9.7647, 1.33", "39.6495, -31.1485, 9.19365, 0.96", "40.665, -31.4492, 8.8072, 0.96", "41.0814, -31.62, 8.61997, 1.11", "41.683, -31.9781, 8.29496, 1.11", "42.3694, -32.6164, 7.81236, 0.88", "42.7667, -33.2156, 7.43741, 0.52", "43.1076, -33.8694, 7.00429, 0.52", "43.3844, -34.4397, 6.55418, 0.52", "43.8252, -35.3168, 5.81135, 1.03", "44.0951, -35.7944, 5.37971, 1.4", "44.4877, -36.3695, 4.84259, 1.4", "45.4885, -37.5713, 3.7309, 1.11", "46.0869, -38.1596, 3.19713, 0.66", "46.6552, -38.6345, 2.79506, 0.66", "47.445, -39.1883, 2.38053, 1.11", "48.0784, -39.5989, 2.12412, 1.55", "48.5698, -39.905, 1.98602, 1.55", "49.2725, -40.3169, 1.88312, 1.55", "49.8931, -40.6652, 1.79064, 1.55", "50.9102, -41.2338, 1.57292, 1.25", "51.7807, -41.7453, 1.31872, 1.25", "52.3286, -42.0895, 1.10166, 1.25", "53.0054, -42.5473, 0.753541, 0.81", "53.8304, -43.1153, 0.266843, 0.66", "54.2474, -43.4086, 6.79553E-4, 0.66", "54.5465, -43.6294, -0.186115, 0.66", "54.8408, -43.8393, -0.318074, 0.66", "55.171, -44.0503, -0.41169, 0.66", "56.0954, -44.6305, -0.600325, 0.66", "56.518, -44.8896, -0.633247, 1.11", "57.3467, -45.3823, -0.645761, 1.47", "58.1926, -45.8761, -0.627768, 1.99", "59.0879, -46.414, -0.595685, 1.99" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "35.7072, -30.6867, 10.5451, 1.11", "36.5347, -31.2063, 12.0824, 1.11", "37.8365, -32.0275, 14.3135, 1.25", "38.7439, -32.5402, 15.8135, 1.25", "39.7012, -33.0037, 17.3712, 0.74", "40.1025, -33.1362, 18.011, 0.59", "40.5181, -33.1872, 18.6514, 0.59", "40.8248, -33.1582, 19.1923, 0.59", "41.2974, -32.9107, 20.0206, 0.44", "41.6064, -32.6521, 20.5665, 0.44", "42.3772, -31.8508, 21.9059, 0.44", "43.1608, -30.9232, 23.286, 0.44", "44.322, -29.4367, 25.2925, 0.44", "44.9694, -28.6001, 26.3455, 0.52", "45.4448, -28.0508, 27.0392, 0.52", "45.8555, -27.6905, 27.5302, 0.52", "46.4766, -27.4006, 28.0443, 0.52", "46.9028, -27.3514, 28.2988, 0.52", "47.1569, -27.375, 28.4243, 0.52", "48.0134, -27.6049, 28.8885, 0.52", "49.8287, -28.3, 29.9512, 0.52", "51.4637, -29.0656, 30.9488, 0.81", "52.3665, -29.5717, 31.5108, 1.03", "52.975, -29.9548, 31.8879, 1.03", "53.3988, -30.2295, 32.1306, 1.33", "53.8091, -30.4809, 32.3263, 1.33", "54.0274, -30.6026, 32.4042, 1.33", "55.0678, -31.0315, 32.6674, 0.59", "55.7257, -31.2417, 32.8111, 0.59", "57.0917, -31.565, 33.1114, 0.59", "58.385, -31.8089, 33.4244, 0.59", "59.1526, -31.9394, 33.6424, 0.59", "59.8886, -32.0746, 33.8893, 0.37", "60.9268, -32.2945, 34.324, 0.37", "61.1698, -32.4039, 34.4478, 0.37", "61.4341, -32.6806, 34.6009, 0.37", "61.8667, -33.3497, 34.7765, 0.37", "62.3484, -34.097, 34.8743, 0.37", "62.6995, -34.6198, 34.923, 0.74", "63.549, -35.6893, 34.9883, 1.18", "64.3971, -36.6151, 35.066, 0.52", "65.249, -37.4064, 35.1832, 0.52", "66.2393, -38.1777, 35.3928, 0.81", "66.8503, -38.5731, 35.6138, 0.81", "67.7822, -39.0607, 36.0995, 1.11", "68.1177, -39.1829, 36.3331, 1.11", "68.7278, -39.3297, 36.8542, 1.11", "69.2863, -39.4081, 37.3872, 1.11", "70.1052, -39.4485, 38.1606, 0.66", "70.4472, -39.4335, 38.4175, 0.66", "70.932, -39.3742, 38.7115, 0.66", "71.455, -39.3035, 38.9601, 0.66", "71.8975, -39.2553, 39.1269, 0.66", "72.6298, -39.2025, 39.3722, 0.15", "73.5855, -39.2015, 39.7254, 0.37", "73.8608, -39.2823, 39.9387, 0.37", "74.1908, -39.6617, 40.6629, 0.37", "74.3318, -39.9232, 41.1177, 0.37", "74.3977, -40.1376, 41.4709, 0.37", "74.4457, -40.5997, 42.2043, 0.37", "74.3897, -41.5801, 43.7571, 0.59", "74.2744, -42.3336, 45.0052, 0.59", "81.081, -45.8032, 50.9217, 0.59", "88.0687, -49.2689, 56.6256, 0.59", "94.6668, -53.6403, 62.1691, 0.59", "100.167, -57.9152, 68.8654, 0.59", "105.863, -62.2928, 75.3279, 0.59", "109.759, -68.0568, 82.0345, 0.59", "114.045, -74.7888, 87.4824, 0.59", "119.854, -80.3951, 92.7921, 0.59", "126.207, -83.7705, 99.2437, 0.59" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "12.8284, -28.0891, -5.22072, 1.55", "11.9033, -29.4645, -8.61015, 1.55", "10.723, -31.0409, -12.4615, 1.55", "9.97438, -31.9373, -14.5228, 1.84", "9.54944, -32.4179, -15.5061, 1.84", "9.01614, -33.0265, -16.602, 1.84", "8.62895, -33.4727, -17.2923, 1.84", "8.03636, -34.0487, -18.1086, 1.84", "7.15192, -34.9424, -18.9104, 1.84", "6.14188, -36.0043, -19.6452, 1.84", "5.40946, -36.7725, -20.0772, 1.84", "4.31841, -38.0078, -20.5914, 1.18" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "12.8284, -28.0891, -5.22072, 1.25", "14.601, -29.9985, -5.31236, 1.25", "16.6889, -32.2475, -5.4203, 1.18", "18.0829, -33.7492, -5.49238, 1.03", "20.0798, -35.9001, -5.59561, 1.25", "22.7961, -38.826, -5.73604, 2.73" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-9.43025, -6.19231, 13.6873, 1.11", "-8.86934, -7.56318, 13.7915, 1.11", "-8.48617, -8.4905, 13.8543, 1.11", "-7.94465, -9.81374, 13.9383, 1.03", "-7.72857, -10.3554, 13.9719, 1.03", "-7.41166, -11.1941, 14.0225, 1.03", "-6.90266, -12.6392, 14.1073, 1.18", "-6.65417, -13.3293, 14.1732, 1.18", "-6.53089, -13.6909, 14.2215, 1.18", "-6.32028, -14.3444, 14.3325, 1.03", "-6.05871, -15.1962, 14.5028, 1.03", "-5.91624, -15.6666, 14.6113, 1.03", "-5.59156, -16.7894, 14.9057, 0.74", "-5.37555, -17.4739, 15.084, 0.74", "-5.16272, -18.1222, 15.2804, 0.74", "-4.9715, -18.7021, 15.4811, 0.74", "-4.84032, -19.0874, 15.62, 0.88", "-4.56389, -19.8633, 15.8996, 0.88", "-4.37539, -20.354, 16.0836, 0.88", "-3.74562, -21.8577, 16.7154, 0.88", "-3.46989, -22.4469, 16.9798, 0.88", "-3.06391, -23.221, 17.3373, 0.88", "-2.79381, -23.7572, 17.5739, 0.88", "-2.37241, -24.6771, 17.952, 0.66", "-2.14535, -25.2851, 18.1672, 0.44", "-1.95397, -25.939, 18.3285, 0.44", "-1.82297, -26.4874, 18.4385, 0.44", "-1.53847, -27.7539, 18.6639, 0.44", "-1.39568, -28.3138, 18.7469, 0.44", "-1.22861, -28.8424, 18.8266, 0.44", "-0.820333, -29.7195, 19.0595, 0.44", "-0.495563, -30.1708, 19.2457, 0.44", "0.244764, -30.8146, 19.6359, 0.44", "0.863322, -31.1706, 19.943, 0.44", "1.38358, -31.429, 20.1983, 0.44", "2.25373, -31.8056, 20.6326, 0.07", "2.66435, -31.9551, 20.8624, 0.07", "3.46221, -32.2288, 21.3597, 0.07", "3.88604, -32.3543, 21.6658, 0.07", "6.18107, -37.7514, 22.2201, 0.07", "8.52495, -43.076, 23.146, 0.07", "11.3394, -48.2439, 23.4207, 0.07", "14.5575, -53.1491, 23.9551, 0.07", "18.7578, -57.1312, 25.0521, 0.07", "22.3841, -61.7727, 24.9596, 0.07", "25.7782, -66.569, 25.3828, 0.07", "29.1446, -71.3702, 24.818, 0.07", "32.806, -75.6585, 23.1131, 0.07", "36.2834, -80.0854, 21.3771, 0.07", "39.5583, -84.7426, 19.8641, 0.07", "43.1315, -89.3029, 18.7969, 0.07", "47.1358, -93.5831, 18.2065, 0.07" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-9.43025, -6.19231, 13.6873, 1.55", "-11.1271, -6.0966, 14.6031, 1.55", "-12.8217, -6.1201, 15.5529, 1.55", "-14.8581, -6.14832, 16.6944, 1.55", "-15.7855, -6.16118, 17.2142, 1.55", "-16.9213, -6.17693, 17.8508, 1.55", "-19.043, -6.20634, 19.0401, 1.55", "-20.9088, -6.36215, 20.0624, 1.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "10.9742, 17.574, 11.5998, 2.14", "13.3998, 20.2182, 12.1822, 2.14", "15.5176, 22.247, 12.7699, 2.14", "17.8307, 24.4628, 13.4119, 2.43", "19.3402, 25.9088, 13.8308, 2.43", "20.0726, 26.6103, 14.034, 2.43", "22.4475, 28.8853, 14.6931, 2.28", "25.3577, 31.2651, 15.6066, 2.28" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "10.9742, 17.574, 11.5998, 0.81", "12.7385, 17.089, 11.9592, 0.81", "13.8841, 16.8054, 12.2812, 0.81", "14.9119, 16.5855, 12.7647, 0.81", "16.0845, 16.3792, 13.6468, 0.66", "16.8481, 16.2806, 14.4135, 0.66", "17.1759, 16.2494, 14.7763, 0.66", "17.5746, 16.2359, 15.3352, 0.96", "18.4732, 16.2699, 16.6662, 1.33", "19.2322, 16.3447, 17.7404, 1.77", "20.0263, 16.4221, 18.6904, 1.33", "20.6516, 16.4368, 19.2126, 0.44", "21.5094, 16.4259, 19.7242, 0.44", "22.0556, 16.4237, 19.9808, 0.44", "22.8685, 16.4536, 20.2702, 0.44", "24.2452, 16.5635, 20.7203, 0.44", "25.2332, 16.6656, 21.0469, 0.44", "27.07, 16.8758, 21.7706, 0.66", "27.9903, 16.9757, 22.2033, 0.66", "28.9778, 17.0714, 22.7444, 0.66", "29.7188, 17.1295, 23.23, 0.44", "30.1921, 17.1436, 23.6306, 0.44", "30.9614, 17.0787, 24.4666, 0.44", "31.2705, 16.9407, 24.9613, 1.11", "31.4776, 16.8108, 25.3727, 1.11", "31.6382, 16.7023, 25.7504, 1.11", "31.8678, 16.5936, 26.3317, 1.4", "32.0807, 16.604, 26.9242, 1.77", "32.4389, 16.9617, 28.0772, 1.77", "32.7103, 17.4331, 29.033, 0.59", "32.8207, 17.6839, 29.4334, 0.59", "32.9806, 18.0903, 29.9895, 0.59", "33.2726, 18.8114, 30.8263, 0.59", "33.8665, 20.1946, 32.2419, 0.81", "33.9845, 20.4553, 32.4885, 0.81", "34.1368, 20.7571, 32.8058, 0.81", "34.2894, 20.9967, 33.0964, 0.81", "34.7184, 21.4781, 33.7902, 0.52", "35.1042, 21.7468, 34.2582, 0.29", "35.3231, 21.8539, 34.4008, 0.29", "35.8257, 22.0464, 34.7016, 0.29", "36.7464, 22.3297, 35.2145, 0.29", "43.8643, 25.9694, 40.6839, 0.29", "51.2195, 30.3164, 45.2481, 0.29", "59.5227, 34.3802, 48.1412, 0.29", "67.6595, 38.6127, 51.2565, 0.29", "75.2959, 43.9909, 53.8231, 0.29", "82.4108, 50.4469, 55.0582, 0.29", "89.3745, 57.1782, 55.2099, 0.29", "94.6865, 65.0182, 57.2454, 0.29", "98.0501, 73.8706, 59.2823, 0.29", "102.247, 82.242, 61.759, 0.29", "106.632, 90.6132, 63.8847, 0.29", "112.221, 98.433, 65.0844, 0.29", "118.82, 104.943, 67.8946, 0.29" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-22.2325, 131.88, -21.2747, 0.29", "-21.6682, 133.235, -23.5172, 0.29", "-21.4238, 133.759, -24.4696, 0.29", "-21.1869, 134.216, -25.2063, 0.15", "-20.8992, 134.77, -25.9907, 0.22", "-20.1157, 136.224, -27.9373, 0.29", "-19.3464, 137.605, -29.6191, 0.29", "-18.8082, 138.54, -30.5983, 0.29", "-17.9714, 140.049, -31.9776, 0.22", "-16.9742, 141.923, -33.4207, 0.22", "-16.7195, 142.421, -33.7324, 0.22", "-15.7306, 144.498, -34.6349, 0.15", "-15.1499, 145.841, -35.1045, 0.15", "-14.686, 146.985, -35.4571, 0.07", "-13.7655, 149.42, -36.1529, 0.07", "-13.373, 150.508, -36.4182, 0.07", "-12.2519, 153.735, -37.1192, 0.07", "-11.7502, 155.237, -37.4262, 0.22", "-11.4404, 156.189, -37.6124, 0.22", "-11.016, 157.557, -37.8872, 0.22", "-10.7147, 158.569, -38.1072, 0.22", "-10.0154, 160.934, -38.6657, 0.22", "-9.67775, 162.099, -38.9508, 0.22", "-9.21554, 163.546, -39.3293, 0.22", "-8.78046, 164.756, -39.7286, 0.15", "-8.33764, 165.847, -40.1937, 0.15", "-7.8068, 166.991, -40.7799, 0.15", "-7.44534, 167.696, -41.1866, 0.15", "-6.51173, 169.41, -42.202, 0.15", "-5.8186, 170.713, -43.0903, 0.15", "-5.39059, 171.628, -43.7191, 0.15", "-4.97588, 172.697, -44.442, 0.15", "-4.62202, 173.866, -45.2117, 0.15", "-4.30202, 175.322, -46.1022, 0.15", "-3.96086, 177.814, -47.4021, 0.15", "-3.8807, 178.998, -47.9252, 0.15", "-3.83421, 180.733, -48.5917, 0.07", "-3.84607, 181.939, -49.0188, 0.07", "-3.89753, 182.987, -49.3906, 0.07", "-3.98916, 184.534, -49.9056, 0.07", "-4.03483, 185.752, -50.2559, 0.07", "-4.06634, 187.365, -50.7377, 0.07", "-4.09727, 189.661, -51.4403, 0.07", "-4.04075, 191.45, -51.9626, 0.07", "-3.87523, 193.329, -52.4654, 0.07", "-3.43191, 196.207, -53.1661, 0.07", "-2.93136, 198.478, -53.6436, 0.07", "-2.2948, 200.777, -54.0367, 0.07", "-1.53713, 202.947, -54.3861, 0.07", "-0.742274, 204.776, -54.753, 0.07", "0.395834, 206.927, -55.4059, 0.07", "1.30541, 208.224, -56.0044, 0.07", "1.69854, 208.679, -56.3615, 0.07", "2.79997, 209.783, -57.7256, 0.07", "4.11058, 211.031, -59.8775, 0.07", "4.90107, 211.779, -61.5047, 0.07", "5.65759, 212.539, -63.4351, 0.07", "6.8759, 213.967, -67.1791, 0.07", "7.28903, 214.58, -68.7104, 0.07", "7.44947, 214.887, -69.4487, 0.07", "7.68901, 215.611, -71.0924, 0.07", "7.78657, 216.294, -72.5745, 0.07", "7.75581, 216.8, -73.5732, 0.07", "7.7457, 217.341, -74.3359, 0.07" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-22.2325, 131.88, -21.2747, 0.07", "-22.5001, 134.218, -21.4323, 0.07", "-22.6998, 135.851, -21.5037, 0.15", "-22.8888, 137.764, -21.5539, 0.15", "-23.2602, 141.133, -21.6135, 0.15", "-23.4554, 142.658, -21.6147, 0.15", "-23.7464, 144.86, -21.5707, 0.07", "-23.8184, 145.409, -21.5267, 0.07", "-24.3171, 148.364, -21.0806, 0.07", "-24.7456, 150.769, -20.6601, 0.07", "-25.1564, 153.022, -20.1938, 0.07", "-25.4541, 154.549, -19.8509, 0.07", "-25.89, 156.648, -19.3403, 0.07", "-26.4481, 159.062, -18.6465, 0.07" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "20.0449, -42.9357, -2.55963, 0.287701", "26.5004, -56.4755, -2.55963, 0.287701", "32.9559, -70.0153, -2.55963, 0.287701" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "59.0879, -46.414, -0.595685, 0.29", "61.1707, -46.2327, -1.0421, 0.29", "62.9736, -46.0813, -1.40341, 0.44", "64.6348, -46.0245, -1.70875, 0.44", "68.0126, -46.1436, -2.28177, 0.44", "68.6581, -46.1888, -2.4115, 0.44", "70.2485, -46.3801, -2.75386, 0.44", "71.3141, -46.5689, -3.02256, 0.44", "73.7517, -47.2358, -3.62777, 0.44", "75.6469, -47.9267, -4.05886, 0.44", "77.5302, -48.7724, -4.45656, 0.29", "79.8665, -49.9246, -4.98633, 0.29", "81.2973, -50.6982, -5.32551, 0.29", "84.3792, -52.4882, -6.01895, 0.29", "86.1256, -53.5445, -6.393, 0.29", "87.5556, -54.4092, -6.66325, 0.22", "88.835, -55.1831, -6.85199, 0.22", "90.2318, -55.9771, -7.02355, 0.22", "92.5284, -57.2078, -7.25251, 0.22", "94.2871, -58.0356, -7.36685, 0.22", "95.1809, -58.4207, -7.38732, 0.22", "95.9335, -58.6937, -7.39656, 0.22", "97.3826, -59.1418, -7.38493, 0.22", "97.9473, -59.3045, -7.36781, 0.07", "98.6423, -59.4982, -7.37396, 0.07", "99.6583, -59.7718, -7.4429, 0.07", "101.954, -60.3983, -7.68669, 0.07", "102.868, -60.6537, -7.82137, 0.07", "106.858, -61.7033, -8.62187, 0.07", "109.103, -62.2498, -9.18437, 0.07", "111.533, -62.8162, -9.91567, 0.07", "112.592, -63.0569, -10.2972, 0.07", "114.314, -63.4536, -11.0706, 0.07", "115.942, -63.8391, -11.9819, 0.15", "117.194, -64.1756, -12.8635, 0.15", "117.732, -64.3637, -13.2594, 0.15", "118.038, -64.499, -13.4778, 0.15", "119.83, -65.2453, -14.668, 0.15", "121.602, -65.9051, -15.7336, 0.15", "122.832, -66.3149, -16.384, 0.15", "123.758, -66.5627, -16.7692, 0.15", "127.59, -67.3288, -18.1541, 0.07", "130.391, -67.704, -19.0131, 0.07", "131.698, -67.7839, -19.3397, 0.07", "132.953, -67.8248, -19.5976, 0.07", "136.7, -67.8226, -20.2908, 0.07", "138.415, -67.7923, -20.5557, 0.07", "139.477, -67.7955, -20.6746, 0.07", "141.357, -67.9463, -20.8531, 0.07", "142.722, -68.1562, -20.9871, 0.07", "144.416, -68.5464, -21.1358, 0.07", "145.794, -68.9999, -21.1839, 0.07", "149.162, -70.3927, -21.0817, 0.07", "151.743, -71.6032, -20.9066, 0.07", "153.33, -72.4392, -20.7453, 0.07", "156.185, -74.1021, -20.3711, 0.07", "160.177, -76.6828, -19.7117, 0.07", "162.592, -78.3236, -19.2317, 0.07", "164.755, -79.8241, -18.6911, 0.07", "166.829, -81.2168, -18.0713, 0.07", "168.983, -82.5437, -17.3635, 0.07", "170.831, -83.5321, -16.7209, 0.07", "172.783, -84.3767, -16.0214, 0.07", "174.402, -84.9137, -15.4051, 0.07", "176.193, -85.3064, -14.6604, 0.07", "177.731, -85.4532, -13.9928, 0.07", "180.716, -85.504, -12.6203, 0.07", "181.35, -85.5014, -12.3131, 0.07", "182.573, -85.5475, -11.714, 0.07", "185.013, -85.7855, -10.5037, 0.07", "187.278, -86.2111, -9.2741, 0.07", "189.591, -86.8122, -7.74386, 0.07", "190.365, -87.077, -7.12672, 0.07", "192.422, -87.9775, -5.31675, 0.07", "194.013, -88.8163, -3.77211, 0.07", "196.186, -90.1816, -1.34814, 0.07", "198.007, -91.4175, 0.846114, 0.07", "198.935, -92.0702, 2.02715, 0.07", "199.719, -92.6102, 3.08531, 0.07", "201.337, -93.6965, 5.51946, 0.07", "202.957, -94.7505, 8.03839, 0.07", "203.768, -95.1943, 9.19713, 0.07" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "59.0879, -46.414, -0.595685, 2.5", "59.111, -46.7625, -1.0717, 2.5", "59.1957, -47.9158, -2.55738, 0.52", "59.2409, -48.3701, -3.02428, 0.52", "59.3322, -49.0368, -3.67595, 0.52", "59.3889, -49.5617, -4.14471, 0.52", "59.4312, -50.2581, -4.74105, 0.52", "59.4415, -50.6155, -5.02694, 0.52", "59.4564, -52.4308, -6.3649, 0.52", "59.4625, -53.4043, -6.97552, 0.37", "59.4756, -54.6428, -7.67954, 0.52", "59.5023, -55.6741, -8.24168, 0.52", "59.5185, -56.815, -8.8412, 0.52", "59.5229, -57.6223, -9.27793, 0.52", "59.4945, -60.3619, -10.8011, 0.37", "59.4865, -61.0505, -11.1881, 0.37", "59.4987, -61.7179, -11.5935, 0.07", "59.5268, -62.4455, -12.0582, 0.22", "59.5326, -63.7704, -12.9963, 0.22", "59.4936, -64.578, -13.6372, 0.07", "59.47, -64.9283, -13.9397, 0.07", "59.4422, -65.6777, -14.579, 0.22", "59.444, -66.0795, -14.9102, 0.22", "59.5147, -67.2947, -15.8574, 0.22", "59.636, -68.4469, -16.6665, 0.22", "59.8609, -69.9675, -17.6873, 0.44", "59.9816, -70.7519, -18.1978, 0.44", "60.0707, -71.3104, -18.5519, 0.44", "60.1534, -71.7659, -18.8423, 0.44", "60.2779, -72.3151, -19.1739, 0.44", "60.399, -72.8666, -19.5123, 0.44", "60.4951, -73.425, -19.8522, 0.44", "60.5865, -74.0534, -20.2233, 0.44", "60.6983, -74.8641, -20.6969, 0.44", "61.069, -77.6345, -22.2958, 0.37", "61.1438, -78.1516, -22.5856, 0.15", "61.2446, -78.7316, -22.8952, 0.15", "61.3833, -79.3739, -23.2147, 0.15", "61.4994, -79.8224, -23.4043, 0.15", "61.5689, -80.0576, -23.4917, 0.15", "61.9158, -81.1491, -23.8541, 0.15", "62.0919, -81.6871, -24.0291, 0.15", "62.5006, -82.9617, -24.3947, 0.15", "63.0095, -84.686, -24.8002, 0.15", "63.3128, -85.7409, -25.0373, 0.15", "63.5397, -86.5459, -25.2041, 0.15", "63.7407, -87.2928, -25.3371, 0.15", "64.0663, -88.5637, -25.5265, 0.15", "64.3022, -89.6514, -25.6388, 0.15" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "126.207, -83.7705, 99.2437, 0.29", "132.557, -83.1478, 104.465, 0.29", "139.487, -83.6336, 108.906, 0.29" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "126.207, -83.7705, 99.2437, 0.07", "127.708, -96.6085, 101.914, 0.29", "127.554, -109.005, 106.443, 0.29" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "4.31841, -38.0078, -20.5914, 0.66", "2.01263, -39.7843, -18.6011, 0.66", "1.85199, -39.9236, -18.4825, 0.66", "1.0237, -40.8137, -17.838, 0.37", "0.185972, -41.9679, -17.1429, 0.37", "-0.601163, -43.3468, -16.4348, 0.37", "-1.04181, -44.3154, -15.9981, 0.37", "-1.41675, -45.4509, -15.6769, 0.37", "-1.6097, -46.9084, -15.318, 0.37", "-1.56836, -48.333, -14.985, 0.59", "-1.38935, -49.4482, -14.7236, 0.59", "-1.11193, -50.5423, -14.4441, 0.59", "-0.784763, -51.6332, -14.1432, 0.59", "0.0776882, -54.401, -13.3455, 0.59", "0.40802, -55.5654, -13.0106, 0.44", "0.665486, -56.5153, -12.7295, 0.44", "0.920486, -57.4934, -12.4428, 0.44", "1.22416, -58.5669, -12.1535, 0.44", "1.58092, -59.7917, -11.8407, 0.44", "1.96791, -61.2378, -11.5078, 0.44", "2.1793, -62.1156, -11.3146, 0.44", "2.36135, -62.9649, -11.1315, 0.44", "2.72308, -64.7805, -10.7013, 0.44", "2.98194, -66.0892, -10.2972, 0.59", "3.26692, -67.5076, -9.7797, 0.59", "3.55339, -68.9455, -9.20574, 0.59", "3.9901, -71.2326, -8.25494, 0.44", "4.28524, -72.8932, -7.57027, 0.15", "4.57907, -74.7147, -6.85626, 0.15", "4.75106, -75.6176, -6.54991, 0.37", "4.95497, -76.5733, -6.27874, 0.37", "5.17548, -77.6138, -6.05614, 0.37", "5.49974, -79.2445, -5.8571, 0.37", "5.82756, -81.0415, -5.84687, 0.37", "6.08114, -82.7797, -5.94939, 0.37", "6.27943, -84.5122, -6.08639, 0.37", "6.33341, -85.6099, -6.17792, 0.37", "6.32106, -88.308, -6.40603, 0.37", "6.2368, -90.406, -6.59292, 0.07", "6.14706, -91.5882, -6.70378, 0.07", "5.99329, -92.9468, -6.82612, 0.07", "5.61829, -95.661, -7.0315, 0.07", "5.50495, -96.4163, -7.08271, 0.22", "5.36997, -97.1684, -7.13004, 0.22", "5.18028, -98.251, -7.21393, 0.22", "5.07457, -99.0601, -7.31688, 0.22", "4.94818, -100.687, -7.59629, 0.22", "4.96082, -103.299, -8.0571, 0.22", "4.993, -104.203, -8.1998, 0.22", "5.07969, -105.278, -8.32615, 0.22", "5.21145, -106.14, -8.375, 0.22", "5.43131, -107.108, -8.34863, 0.29", "5.86676, -108.584, -8.13594, 0.29", "6.13792, -109.413, -7.88278, 0.29", "6.60483, -110.946, -7.21711, 0.29", "6.84969, -111.943, -6.71741, 0.29", "7.10403, -113.231, -6.03947, 0.29", "7.25995, -114.184, -5.52667, 0.29", "7.47173, -115.787, -4.7083, 0.29", "7.67266, -117.829, -3.72974, 0.29", "7.75545, -119.474, -3.00213, 0.15", "7.76829, -120.198, -2.72383, 0.15", "7.77489, -120.895, -2.49343, 0.15", "7.78247, -122.748, -2.04697, 0.15", "7.77993, -124.633, -1.6973, 0.15", "7.78197, -125.949, -1.52245, 0.15", "7.79412, -127.47, -1.33879, 0.15", "7.79796, -128.687, -1.20731, 0.15", "7.79548, -130.889, -1.00793, 0.15" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "4.31841, -38.0078, -20.5914, 0.52", "4.04781, -38.7384, -21.5314, 0.52", "3.96138, -39.2675, -22.1643, 0.52", "3.88041, -40.463, -23.5745, 0.74", "3.79868, -41.4982, -24.8366, 0.74", "3.71692, -42.0667, -25.5541, 0.74", "3.42152, -43.3224, -27.1996, 0.74", "3.20093, -44.1722, -28.2228, 0.74", "2.9809, -44.8079, -28.9467, 0.74", "2.61198, -45.434, -29.6274, 0.74", "1.86839, -46.1799, -30.4684, 1.4", "1.13424, -46.7245, -31.089, 1.4", "0.214979, -47.2793, -31.67, 1.4", "-0.627753, -47.7601, -32.1335, 1.69", "-2.64959, -48.8832, -33.1538, 1.69", "-4.45028, -49.9499, -34.0207, 1.69", "-5.49919, -50.6206, -34.5156, 1.69", "-7.10306, -51.7728, -35.3216, 1.11", "-8.20693, -52.6747, -35.9395, 0.88", "-8.67053, -53.1503, -36.2356, 0.88", "-9.53335, -54.3798, -36.9648, 0.88", "-9.86715, -55.0775, -37.4028, 0.88", "-10.26, -56.1425, -38.1332, 0.88", "-10.5538, -57.0526, -38.8157, 1.18", "-10.8805, -57.9313, -39.5283, 1.18", "-11.6078, -59.349, -40.8849, 1.47", "-12.0332, -59.9119, -41.513, 1.47", "-12.4657, -60.3206, -42.0563, 1.47", "-13.3674, -60.9358, -43.024, 1.18", "-14.1833, -61.4194, -43.8635, 1.18", "-15.1245, -62.0002, -44.8732, 1.18", "-15.8483, -62.4741, -45.6736, 0.74", "-16.7571, -63.1388, -46.7319, 0.74", "-17.1546, -63.4573, -47.2427, 0.74", "-18.5136, -64.588, -49.0993, 0.74", "-19.6251, -65.5749, -50.6328, 0.74", "-19.8557, -65.7961, -50.9474, 0.74", "-20.9656, -66.8814, -52.4091, 0.74", "-22.0032, -67.9612, -53.6757, 0.74", "-23.053, -69.0958, -54.9159, 0.74", "-23.8199, -69.8607, -55.6735, 0.74", "-24.5048, -70.543, -56.2449, 0.15", "-25.0657, -71.1319, -56.7231, 0.15", "-25.7076, -71.9058, -57.3205, 0.15", "-26.2291, -72.5923, -57.7987, 0.15", "-27.129, -73.8342, -58.721, 0.15", "-27.758, -74.6522, -59.4304, 0.15", "-29.2113, -76.402, -61.0639, 0.52", "-30.1682, -77.4705, -62.0761, 0.52", "-30.6747, -77.9775, -62.6028, 0.52", "-31.4401, -78.6694, -63.3755, 0.52", "-32.4109, -79.3968, -64.312, 0.52", "-33.6455, -80.0809, -65.3659, 0.52", "-34.4945, -80.4117, -65.9695, 0.52", "-35.7697, -80.7639, -66.8202, 0.52", "-36.8618, -81.021, -67.5434, 0.44", "-38.4007, -81.3513, -68.4818, 0.44", "-39.8777, -81.6789, -69.3475, 0.44", "-40.7002, -81.871, -69.8098, 0.44", "-42.4399, -82.3997, -70.7547, 0.44", "-43.547, -82.8332, -71.3231, 0.44", "-45.1868, -83.6555, -72.1421, 0.29", "-46.299, -84.3422, -72.6929, 0.29", "-47.4888, -85.1618, -73.2692, 0.29", "-48.9111, -86.2351, -73.9438, 0.29", "-49.8009, -86.9424, -74.3497, 0.29", "-50.8978, -87.859, -74.8673, 0.29", "-51.824, -88.6349, -75.3115, 0.29", "-52.361, -89.0796, -75.5554, 0.29", "-53.1667, -89.7326, -75.9268, 0.29", "-54.3501, -90.6562, -76.5369, 0.29", "-55.0862, -91.2288, -76.9579, 0.29", "-56.5397, -92.3868, -77.8644, 0.29", "-57.8538, -93.4862, -78.7238, 0.29", "-59.0067, -94.5619, -79.497, 0.29", "-60.3214, -95.8755, -80.3899, 0.07", "-60.7814, -96.3798, -80.7573, 0.07", "-61.2535, -96.9345, -81.1751, 0.07", "-61.6467, -97.4575, -81.558, 0.07", "-63.0942, -99.4836, -82.9358, 0.07", "-64.1817, -101.081, -83.8644, 0.22", "-65.3879, -102.896, -84.7875, 0.22", "-65.9197, -103.742, -85.2581, 0.22", "-66.5313, -104.779, -85.9204, 0.22", "-66.9423, -105.567, -86.4681, 0.22", "-67.2937, -106.388, -87.0957, 0.22", "-67.564, -107.132, -87.6759, 0.22", "-68.2822, -109.062, -89.1297, 0.22", "-68.6822, -110.059, -90.0191, 0.22", "-68.8454, -110.414, -90.3791, 0.22", "-69.1404, -110.976, -90.9802, 0.22", "-69.5727, -111.655, -91.7129, 0.22", "-70.101, -112.35, -92.4396, 0.22", "-70.8718, -113.249, -93.2855, 0.22", "-71.2782, -113.719, -93.6856, 0.22", "-71.8994, -114.464, -94.2824, 0.22", "-72.8366, -115.671, -95.1721, 0.22", "-73.3569, -116.353, -95.6358, 0.22", "-73.8326, -116.982, -96.0516, 0.22", "-74.8224, -118.272, -96.8512, 0.22", "-75.662, -119.231, -97.47, 0.22", "-76.4377, -120.003, -97.9704, 0.22", "-77.5215, -120.976, -98.6177, 0.22", "-78.3939, -121.672, -99.0976, 0.22", "-79.0415, -122.139, -99.4445, 0.22", "-82.4621, -124.42, -101.288, 0.22", "-83.5485, -125.129, -101.854, 0.22", "-85.3258, -126.279, -102.79, 0.22", "-87.0476, -127.448, -103.741, 0.22", "-88.3916, -128.394, -104.494, 0.22", "-89.5264, -129.249, -105.175, 0.22", "-90.8173, -130.319, -106.068, 0.22", "-91.6672, -131.083, -106.746, 0.22", "-92.8316, -132.194, -107.736, 0.22", "-93.2941, -132.652, -108.142, 0.22", "-94.2465, -133.609, -108.996, 0.22", "-95.2719, -134.568, -109.935, 0.22", "-96.0121, -135.195, -110.647, 0.22", "-97.4227, -136.242, -111.89, 0.22", "-98.2755, -136.807, -112.646, 0.22", "-99.3755, -137.481, -113.563, 0.22", "-100.944, -138.432, -114.795, 0.22", "-102.356, -139.325, -115.927, 0.22", "-103.801, -140.316, -117.112, 0.07", "-104.967, -141.198, -118.086, 0.07", "-106.088, -142.135, -119.001, 0.07", "-107.01, -142.987, -119.689, 0.07", "-108.078, -144.189, -120.452, 0.07", "-109.108, -145.521, -121.129, 0.07", "-109.765, -146.445, -121.553, 0.07", "-110.543, -147.609, -122.008, 0.07", "-111.13, -148.538, -122.359, 0.07", "-112.083, -150.002, -122.837, 0.07", "-113.076, -151.547, -123.338, 0.07", "-113.752, -152.587, -123.781, 0.07", "-114.423, -153.614, -124.274, 0.07", "-115.313, -154.964, -124.957, 0.07", "-116.592, -156.936, -125.972, 0.07", "-117.85, -158.92, -127.005, 0.07", "-119.086, -160.887, -128.076, 0.07", "-119.793, -162.013, -128.708, 0.07", "-120.33, -162.857, -129.185, 0.07", "-121.298, -164.537, -130.109, 0.07", "-121.607, -165.1, -130.4, 0.07", "-122.335, -166.392, -131.041, 0.07", "-122.874, -167.302, -131.484, 0.07", "-123.7, -168.665, -132.198, 0.07", "-125.261, -171.159, -133.591, 0.07", "-126.077, -172.389, -134.332, 0.07", "-127.539, -174.577, -135.655, 0.15", "-128.707, -176.352, -136.685, 0.15" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "22.7961, -38.826, -5.73604, 0.52", "24.6788, -38.8322, -4.26373, 0.52", "27.3663, -38.6956, -2.00759, 1.25", "29.4522, -38.5252, -0.216741, 1.33", "30.5816, -38.4108, 0.761966, 1.11", "31.6538, -38.2868, 1.67213, 1.11", "33.0056, -38.1362, 2.78007, 1.11", "33.7898, -37.9683, 3.44756, 1.11", "34.2895, -37.861, 3.83863, 1.11", "34.6121, -37.8779, 4.06748, 1.11", "35.3751, -38.1736, 4.42478, 0.81", "36.0592, -38.6525, 4.61213, 0.81", "36.5801, -39.0875, 4.67576, 0.96", "37.7609, -40.0881, 4.74992, 0.96", "38.3534, -40.5566, 4.7733, 0.96", "39.1712, -41.0722, 4.85293, 0.81", "39.4526, -41.1715, 4.90644, 0.81", "40.1283, -41.2632, 5.09616, 0.81", "41.3573, -41.3135, 5.55365, 0.81", "41.866, -41.307, 5.77002, 0.81", "43.2496, -41.2566, 6.41944, 0.81", "44.8719, -41.1822, 7.25324, 0.81", "46.7378, -41.1239, 8.2271, 0.96", "48.3804, -41.1232, 9.08727, 0.96", "49.8304, -41.1496, 9.87052, 1.11", "50.573, -41.1604, 10.2787, 1.11", "50.9617, -41.1534, 10.4976, 1.11", "51.7429, -41.1, 10.9961, 0.37", "52.3487, -40.9881, 11.4517, 0.37", "52.7036, -40.8644, 11.7769, 0.37", "53.0022, -40.6918, 12.1543, 0.37", "53.3158, -40.4802, 12.5962, 0.52", "53.6144, -40.2806, 12.9949, 0.52", "54.24, -39.9893, 13.6664, 0.52", "54.4615, -39.9445, 13.8379, 0.52", "54.9775, -39.9765, 14.1007, 0.52", "55.4662, -40.2132, 14.2576, 0.52", "56.1942, -40.8339, 14.4088, 0.52", "57.2786, -41.9789, 14.6165, 0.52", "57.9061, -42.7072, 14.7455, 1.11", "58.2336, -43.119, 14.8598, 1.11", "59.3215, -44.647, 15.6683, 1.11", "59.7517, -45.3288, 16.2692, 0.66", "59.976, -45.7367, 16.7886, 0.66", "60.225, -46.2475, 17.6422, 0.66", "60.5782, -46.9807, 19.0835, 0.81", "61.1179, -48.0611, 21.4532, 1.11", "61.422, -48.6321, 22.8514, 1.11", "61.6031, -48.9971, 23.6874, 1.11", "61.7433, -49.2647, 24.1953, 1.11", "61.9538, -49.6299, 24.7518, 1.11", "62.3502, -50.0048, 25.1658, 1.11", "62.9653, -50.287, 25.4274, 0.66", "63.8289, -50.4417, 25.6819, 0.37", "65.0528, -50.4743, 25.9876, 0.37", "65.3801, -50.4582, 26.0536, 0.37", "67.4623, -50.3018, 26.4199, 0.74", "68.5481, -50.2343, 26.6288, 0.37", "69.7581, -50.1778, 26.882, 0.37", "71.1525, -50.1067, 27.199, 0.37", "72.6548, -50.0709, 27.5381, 0.44", "73.4688, -50.1238, 27.7088, 0.44", "75.0142, -50.3922, 28.0004, 0.44", "75.9827, -50.5854, 28.1305, 0.44", "77.2463, -50.8362, 28.2632, 0.44", "78.0769, -50.9751, 28.3575, 0.22", "79.3984, -51.1606, 28.5105, 0.22", "80.0466, -51.225, 28.5607, 0.22", "81.6202, -51.3471, 28.5624, 0.07", "82.915, -51.4782, 28.5251, 0.07", "85.2657, -51.796, 28.4228, 0.07", "92.6734, -53.1703, 33.8482, 0.07", "99.5931, -55.6041, 39.5395, 0.07", "106.981, -58.9622, 44.0492, 0.07", "115.188, -61.4911, 47.5773, 0.07", "122.728, -65.4068, 51.3205, 0.07", "131.271, -67.813, 54.0445, 0.07", "140.082, -68.6997, 56.8332, 0.07" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "22.7961, -38.826, -5.73604, 1.4", "22.3135, -41.3814, -6.03348, 1.4", "21.9984, -43.0858, -6.1807, 1.25", "21.5127, -45.33, -6.32682, 0.88", "21.2203, -46.5221, -6.37104, 0.88", "20.7123, -48.2667, -6.39135, 1.18", "20.2366, -49.7279, -6.38373, 1.69", "19.7277, -51.1535, -6.32552, 2.14", "19.274, -52.2449, -6.2335, 2.14", "18.1148, -54.6293, -6.00363, 2.43", "16.9267, -56.7808, -5.77208, 2.06", "16.2481, -57.8751, -5.63915, 2.06", "15.0209, -59.7573, -5.37618, 2.28", "13.9248, -61.3991, -5.12076, 2.28", "13.1032, -62.6876, -4.90532, 2.28", "12.2935, -63.9724, -4.66395, 1.69", "11.3398, -65.6098, -4.33514, 1.55", "10.6623, -66.8558, -4.07348, 1.55", "9.83795, -68.4695, -3.71927, 1.33", "9.10244, -70.0672, -3.3135, 1.33", "8.66104, -71.0898, -3.0319, 0.44", "8.43309, -71.6678, -2.86515, 0.44", "8.10897, -72.5671, -2.58365, 0.44", "7.57431, -74.2779, -2.0039, 0.44", "6.93273, -76.9136, -1.04732, 0.44", "6.78066, -77.6047, -0.787731, 0.44", "6.52691, -78.7747, -0.342455, 0.37", "6.299, -79.6598, -0.00669645, 0.37", "5.84204, -81.3008, 0.561245, 0.37", "5.39659, -82.6577, 0.960414, 0.37", "4.74894, -84.2418, 1.33242, 0.37", "4.2418, -85.3959, 1.57299, 0.37", "3.3804, -87.2728, 1.92455, 0.37", "2.17421, -89.7289, 2.36217, 0.37", "1.03625, -91.8365, 2.7552, 0.37", "-0.053581, -93.8955, 3.19717, 0.44", "-0.793564, -95.5006, 3.56403, 0.44", "-1.28797, -96.7789, 3.87561, 0.44", "-1.52936, -97.5473, 4.08985, 0.44", "-1.9884, -99.3295, 4.65227, 0.44", "-2.52422, -101.891, 5.52603, 0.44", "-3.10822, -104.907, 6.63217, 0.44", "-3.39205, -106.29, 7.15113, 0.44", "-3.80259, -108.122, 7.82788, 0.37", "-4.0567, -109.214, 8.21705, 0.37", "-4.4113, -110.656, 8.7205, 0.37", "-4.91977, -112.404, 9.34517, 0.66", "-5.29366, -113.407, 9.73289, 0.66", "-5.88844, -114.659, 10.217, 1.11", "-6.17118, -115.143, 10.4002, 0.52", "-6.46829, -115.618, 10.5751, 0.52", "-7.23785, -116.973, 10.9738, 0.52", "-7.53348, -117.547, 11.1155, 0.52", "-7.78426, -118.052, 11.2337, 0.52", "-8.66248, -119.893, 11.6364, 0.59", "-9.26482, -121.21, 11.9005, 0.59", "-10.8236, -124.707, 12.5404, 0.59", "-12.6427, -128.864, 13.216, 0.37", "-13.0366, -129.806, 13.3605, 0.37", "-13.5651, -131.06, 13.5496, 0.37", "-14.3463, -132.851, 13.8269, 0.37", "-15.1221, -134.473, 14.1082, 0.37", "-15.8198, -135.827, 14.3723, 0.37", "-16.1938, -136.527, 14.5158, 0.37", "-16.8691, -137.724, 14.7839, 0.37", "-17.8525, -139.31, 15.1858, 0.37", "-18.7508, -140.619, 15.5593, 0.37", "-20.0149, -142.414, 16.0988, 0.37", "-20.6573, -143.39, 16.359, 0.37", "-20.9046, -143.814, 16.4499, 0.37", "-21.1793, -144.388, 16.539, 0.37", "-21.6521, -145.502, 16.6724, 0.37", "-22.1229, -146.775, 16.7915, 0.37", "-23.0072, -149.45, 16.993, 0.37", "-23.4821, -151.086, 17.0981, 0.37", "-24.3749, -154.429, 17.3895, 0.37", "-24.8644, -156.427, 17.5932, 0.37", "-25.2438, -158.121, 17.803, 0.37", "-25.9032, -161.207, 18.2195, 0.07", "-26.2123, -162.722, 18.4576, 0.07", "-26.7786, -165.483, 18.9409, 0.07", "-26.9497, -166.273, 19.1062, 0.07", "-27.1877, -167.367, 19.3817, 0.07", "-29.4428, -177.805, 22.7287, 0.07", "-30.7625, -188.49, 25.7805, 0.07" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "47.1358, -93.5831, 18.2065, 0.22", "50.6648, -102.002, 17.569, 0.22", "54.5017, -110.133, 15.8665, 0.22" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "47.1358, -93.5831, 18.2065, 0.07", "53.867, -100.991, 19.9903, 0.22", "59.2388, -109.595, 20.6919, 0.22" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-20.9088, -6.36215, 20.0624, 0.29", "-22.2776, -7.51932, 20.6118, 0.29", "-22.9158, -7.82578, 20.9723, 0.66", "-23.5247, -8.06589, 21.3325, 0.66", "-24.5087, -8.38074, 21.9051, 0.66", "-24.9989, -8.49278, 22.1924, 0.66", "-26.4945, -8.66572, 23.129, 0.66", "-27.2037, -8.71786, 23.6397, 0.44", "-27.5105, -8.70914, 23.9066, 0.44", "-27.7867, -8.61679, 24.2383, 0.44", "-28.0442, -8.33217, 24.7128, 0.44", "-28.3222, -7.88421, 25.3334, 0.44", "-28.642, -7.11442, 26.2971, 0.52", "-28.8085, -6.54369, 26.9571, 0.52", "-28.9242, -5.98431, 27.5667, 0.52", "-29.2521, -3.98527, 29.6522, 0.66", "-29.3866, -3.19658, 30.4736, 0.66", "-29.5327, -2.57658, 31.1098, 0.66", "-29.7297, -1.79027, 31.871, 0.66", "-29.8744, -1.17765, 32.444, 0.52", "-29.9485, -0.759383, 32.8122, 0.29", "-29.8555, 0.17354, 33.3889, 0.29", "-29.8744, 1.23171, 34.0612, 0.29", "-34.0576, 7.31134, 41.0838, 0.29", "-38.7956, 12.8355, 48.212, 0.29", "-43.3594, 17.5517, 56.0035, 0.29", "-47.4992, 24.0695, 62.6485, 0.29", "-50.5864, 30.1387, 70.2256, 0.29", "-52.9529, 36.2687, 78.0102, 0.29", "-56.8086, 42.0953, 85.4238, 0.29", "-63.1404, 47.4832, 91.3107, 0.29", "-68.3955, 53.2653, 97.8475, 0.29", "-74.6284, 58.4645, 104.003, 0.29", "-80.4257, 65.484, 108.574, 0.29", "-84.7462, 72.3213, 114.768, 0.29", "-88.8408, 77.9413, 122.213, 0.29" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-20.9088, -6.36215, 20.0624, 1.11", "-22.266, -7.38228, 18.9794, 1.11", "-23.3244, -7.9908, 18.309, 1.11", "-24.0386, -8.31835, 17.9505, 1.25", "-25.517, -8.88287, 17.3601, 1.25", "-26.6665, -9.24158, 17.0269, 1.25", "-27.8791, -9.58392, 16.7889, 1.11", "-29.1432, -9.81834, 16.7077, 0.88", "-29.9979, -9.90951, 16.7434, 0.88", "-30.6483, -9.92566, 16.8243, 0.88", "-31.8017, -9.85546, 17.1349, 0.88", "-32.7425, -9.78226, 17.5122, 0.88" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "25.3577, 31.2651, 15.6066, 1.55", "25.4543, 32.7223, 15.3507, 1.55", "25.4822, 33.3045, 15.2306, 1.55", "25.5289, 34.6401, 14.9406, 1.77", "25.5511, 35.3745, 14.7832, 1.77", "25.5726, 36.4198, 14.5633, 2.06", "25.5767, 37.0551, 14.4377, 2.06", "25.5641, 37.8695, 14.2682, 1.55", "25.5393, 38.7387, 14.079, 1.55", "25.5147, 39.4842, 13.9009, 1.84", "25.5114, 39.9009, 13.783, 1.84", "25.5123, 41.1904, 13.4227, 1.92", "25.5218, 42.2057, 13.1519, 1.92", "25.5302, 42.7248, 13.0282, 1.92", "25.5528, 43.4922, 12.8739, 1.92", "25.6075, 44.529, 12.7313, 1.4", "25.6664, 45.2171, 12.6958, 1.4", "25.739, 45.89, 12.7383, 1.55", "25.811, 46.6465, 12.8786, 1.55", "25.8358, 47.1051, 12.9967, 1.55", "25.8419, 47.7186, 13.1683, 1.25", "25.8186, 48.3389, 13.3123, 0.59", "25.7939, 48.7254, 13.3269, 0.88", "25.7575, 49.1563, 13.2702, 1.25", "25.6825, 49.826, 13.091, 1.25", "25.5302, 50.8505, 12.732, 1.62", "25.3291, 52.0215, 12.2494, 1.62", "25.0939, 53.3456, 11.6594, 1.18", "24.9572, 54.1007, 11.3088, 1.18", "24.8679, 54.641, 11.0498, 0.74", "24.7822, 55.2554, 10.7551, 1.03", "24.7471, 55.6319, 10.5906, 1.84", "24.7382, 56.1474, 10.4356, 2.21", "24.7547, 56.6694, 10.37, 2.21", "24.772, 57.1704, 10.3398, 2.21", "24.7839, 57.7533, 10.3178, 2.21", "24.7784, 58.7206, 10.2684, 2.21", "24.739, 59.7985, 10.1986, 1.99", "24.6582, 60.9442, 10.0967, 1.11", "24.5484, 61.9568, 9.97092, 1.33", "24.4527, 62.5316, 9.88162, 1.33", "24.2992, 63.27, 9.74176, 1.33", "24.2346, 63.5451, 9.6776, 1.33", "24.155, 63.9471, 9.56065, 0.96", "24.1361, 64.4192, 9.39828, 0.74", "24.1882, 64.6947, 9.3032, 0.59", "24.2929, 65.0669, 9.19245, 0.66", "24.4294, 65.6416, 9.04534, 0.66", "24.4644, 66.0685, 8.93773, 0.66", "24.4339, 66.6014, 8.81584, 0.66", "24.3166, 67.2749, 8.64717, 0.96", "24.1998, 67.752, 8.52314, 0.96", "23.9854, 68.4907, 8.33416, 1.25", "23.717, 69.3755, 8.12452, 1.25", "23.4885, 70.1382, 7.96371, 1.4", "23.3219, 70.7617, 7.84943, 1.4", "23.0997, 71.675, 7.70278, 1.18", "22.9851, 72.201, 7.62811, 1.18", "22.7894, 73.2529, 7.504, 1.55", "22.6188, 74.4208, 7.38668, 1.55", "22.5178, 75.3017, 7.30667, 0.81", "22.452, 76.045, 7.24293, 0.66", "22.4378, 76.2751, 7.21874, 0.66", "22.437, 76.6275, 7.17292, 0.66", "22.456, 77.0342, 7.09, 0.66", "22.4687, 77.2581, 7.03362, 0.66", "22.4778, 77.6807, 6.91651, 0.66", "22.463, 78.5043, 6.67621, 0.66", "22.3208, 80.5449, 6.04299, 0.81", "22.2239, 81.3799, 5.77167, 1.03", "22.1107, 82.1201, 5.52261, 1.18", "22.0189, 82.6755, 5.33044, 1.18", "21.9273, 83.2071, 5.1492, 1.18", "21.8479, 83.6313, 4.9985, 1.03", "21.794, 83.9105, 4.90265, 1.03", "21.7748, 84.558, 4.756, 0.96", "21.8125, 84.8547, 4.68652, 0.59", "21.9, 85.2267, 4.58699, 0.59", "21.9762, 85.4912, 4.50725, 0.59", "22.0493, 85.7194, 4.42692, 0.59", "22.3878, 86.7479, 4.01828, 0.59", "22.5202, 87.2037, 3.80355, 0.66", "22.6237, 87.6737, 3.55707, 0.81", "22.6818, 88.0926, 3.31918, 0.81", "22.7033, 88.4062, 3.13749, 0.81", "22.6994, 88.6452, 3.01014, 0.81", "22.6759, 89.2581, 2.75113, 0.81", "22.6707, 89.5591, 2.65477, 0.81", "22.658, 90.0131, 2.50962, 0.66", "22.6402, 90.4075, 2.3847, 0.44", "22.5921, 91.1641, 2.15376, 0.44", "22.5328, 92.463, 1.78898, 0.52", "22.5306, 92.7726, 1.7117, 0.52", "22.5422, 93.5161, 1.5371, 0.52", "22.5483, 93.8716, 1.45946, 0.59", "22.5247, 94.2646, 1.38783, 0.59", "22.43, 94.9228, 1.29575, 0.59", "22.3912, 95.1187, 1.2789, 0.59", "22.3048, 95.651, 1.2496, 0.59", "22.2664, 96.0801, 1.23076, 0.59", "22.2439, 97.1531, 1.10953, 0.59", "22.2633, 97.9428, 0.968684, 0.37", "22.2919, 98.5004, 0.835793, 0.37", "22.3242, 98.9384, 0.713641, 0.37", "22.4085, 99.7574, 0.457835, 0.37", "22.5202, 100.585, 0.183863, 0.37", "22.6032, 101.095, 0.0136226, 0.37", "22.6438, 101.402, -0.0969255, 0.37", "22.6607, 101.684, -0.20365, 0.37", "22.6572, 101.93, -0.293497, 0.37", "22.6305, 102.284, -0.409692, 0.37", "22.561, 103.045, -0.624498, 0.37", "22.484, 104.138, -0.925087, 0.52", "22.4512, 104.807, -1.10714, 0.52", "22.4365, 105.173, -1.20475, 0.52", "22.4238, 105.519, -1.29655, 0.52", "22.3777, 106.227, -1.46514, 0.44", "22.3453, 106.576, -1.526, 0.44", "22.3179, 106.861, -1.54527, 0.44", "22.2793, 107.415, -1.56214, 0.44", "22.2495, 108.034, -1.60896, 0.44", "22.2014, 108.867, -1.70492, 0.44", "22.1699, 109.32, -1.7881, 0.44", "22.1234, 109.978, -1.93762, 0.44", "22.0779, 110.811, -2.15091, 0.44", "22.0433, 111.922, -2.47215, 0.44", "22.0328, 113.285, -2.90056, 0.44", "22.0693, 114.377, -3.28127, 0.44", "22.1134, 115.074, -3.54166, 0.44", "22.1606, 115.571, -3.73479, 0.44", "22.2502, 116.258, -3.99689, 0.44", "22.3037, 116.596, -4.11566, 0.44", "22.4172, 117.212, -4.32816, 0.44", "22.4971, 117.631, -4.41423, 0.44", "22.5647, 118.036, -4.45854, 0.44", "22.6246, 118.501, -4.47801, 0.44", "22.6679, 119.031, -4.50434, 0.44", "22.7337, 120.179, -4.57819, 0.44", "22.7992, 121.537, -4.65267, 0.59", "22.8374, 122.156, -4.68481, 0.59", "22.9497, 123.534, -4.76098, 0.59", "23.1104, 125.226, -4.85617, 0.44", "23.1817, 125.962, -4.90199, 0.37", "23.2065, 126.381, -4.94137, 0.37", "23.2092, 126.956, -5.04253, 0.29", "23.2066, 127.233, -5.09673, 0.29", "23.2032, 127.492, -5.15182, 0.29", "23.1951, 127.866, -5.23156, 0.29", "23.1411, 128.681, -5.42994, 0.29", "23.0332, 129.766, -5.75036, 0.52", "22.9948, 130.132, -5.8692, 0.52", "22.9559, 130.63, -6.03155, 0.52", "22.9251, 131.134, -6.20194, 0.52", "22.8902, 131.714, -6.41079, 0.52", "22.8546, 132.379, -6.66326, 0.44", "22.8205, 132.7, -6.77698, 0.37", "22.7162, 133.509, -7.07749, 0.37" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "25.3577, 31.2651, 15.6066, 1.55", "27.6082, 32.3773, 17.4, 1.55", "28.4688, 32.8027, 18.0858, 1.55", "28.8516, 32.9919, 18.3908, 1.55" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "118.82, 104.943, 67.8946, 0.29", "129.869, 114.262, 73.0848, 0.29", "142.279, 122.654, 76.4628, 0.29" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "118.82, 104.943, 67.8946, 0.07", "127.96, 112.154, 72.8606, 0.29", "136.055, 119.954, 78.6773, 0.29" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-26.4481, 159.062, -18.6465, 0.22", "-28.2607, 159.144, -17.7925, 0.22", "-29.6274, 159.237, -17.2067, 0.22", "-30.9173, 159.346, -16.6808, 0.22", "-32.0247, 159.439, -16.2294, 0.22", "-33.565, 159.568, -15.6014, 0.22", "-35.9808, 159.772, -14.6165, 0.07", "-38.2318, 160.034, -13.8133, 0.07", "-39.1995, 160.15, -13.4825, 0.07" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-26.4481, 159.062, -18.6465, 0.07", "-26.7588, 159.951, -18.6411, 0.07", "-27.0226, 160.651, -18.6357, 0.07", "-27.9062, 163.074, -18.7386, 0.07", "-28.5286, 164.819, -18.858, 0.07", "-28.8946, 165.904, -18.9462, 0.07", "-29.5173, 167.973, -19.1618, 0.07", "-29.7839, 169.014, -19.3054, 0.07", "-30.0873, 170.584, -19.5613, 0.07", "-30.2294, 171.651, -19.7713, 0.07", "-30.323, 172.823, -20.0398, 0.07", "-30.3348, 174.131, -20.3754, 0.07", "-30.198, 175.357, -20.7262, 0.07", "-29.9905, 176.466, -21.0307, 0.07" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "7.79548, -130.889, -1.00793, 0.07", "7.52739, -132.562, -1.15506, 0.07", "7.39952, -134.055, -1.3021, 0.07", "7.26926, -135.576, -1.45188, 0.07", "7.0877, -137.697, -1.66066, 0.07", "6.88424, -140.073, -1.89462, 0.07", "6.70935, -142.115, -2.09572, 0.07", "6.64922, -143.779, -2.29346, 0.07" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "7.79548, -130.889, -1.00793, 0.07", "9.45422, -131.874, -0.756896, 0.07", "10.558, -132.529, -0.589853, 0.07", "10.9414, -132.756, -0.531824, 0.07", "11.9468, -133.353, -0.379661, 0.07" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-128.707, -176.352, -136.685, 0.15", "-129.951, -177.582, -136.934, 0.15", "-131.108, -178.813, -137.232, 0.15", "-132.465, -180.289, -137.62, 0.15", "-134.337, -182.466, -138.271, 0.15", "-135.296, -183.607, -138.697, 0.15", "-136.78, -185.376, -139.424, 0.15", "-137.618, -186.359, -139.87, 0.15", "-137.976, -186.766, -140.067, 0.15", "-141.489, -190.578, -142.007, 0.15", "-143.418, -192.561, -143.019, 0.15", "-144.396, -193.514, -143.491, 0.15", "-146.695, -195.751, -144.593, 0.15", "-147.446, -196.498, -144.949, 0.15", "-148.62, -197.711, -145.504, 0.07", "-149.919, -199.127, -146.122, 0.07", "-150.955, -200.429, -146.664, 0.07", "-152.288, -202.462, -147.601, 0.07", "-152.81, -203.459, -148.097, 0.07", "-153.497, -204.934, -148.827, 0.07", "-153.908, -205.943, -149.345, 0.07", "-154.418, -207.296, -150.145, 0.22", "-154.731, -208.123, -150.673, 0.22", "-155.366, -209.619, -151.64, 0.22", "-155.7, -210.442, -152.187, 0.22", "-156.176, -211.709, -152.986, 0.22", "-156.604, -212.88, -153.775, 0.22", "-156.876, -213.678, -154.32, 0.22", "-157.082, -214.339, -154.779, 0.22", "-157.338, -215.349, -155.496, 0.22", "-157.584, -216.436, -156.23, 0.22", "-158.118, -218.761, -157.601, 0.22", "-158.326, -219.685, -158.079, 0.22", "-158.458, -220.329, -158.417, 0.22", "-158.549, -220.828, -158.679, 0.22", "-158.613, -221.385, -159.008, 0.22", "-158.691, -222.435, -159.642, 0.22", "-158.748, -223.349, -160.123, 0.22", "-158.794, -224.199, -160.535, 0.22", "-158.819, -224.859, -160.864, 0.22", "-158.928, -227.683, -162.323, 0.07", "-158.975, -229.121, -163.089, 0.07", "-159.023, -230.616, -163.839, 0.07", "-159.067, -232.345, -164.681, 0.07", "-159.139, -235.116, -165.969, 0.07", "-159.216, -236.965, -166.794, 0.07", "-159.32, -238.28, -167.322, 0.07", "-159.45, -239.849, -168.019, 0.07" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-128.707, -176.352, -136.685, 0.15", "-129.935, -176.121, -138.256, 0.15", "-131.173, -175.85, -139.717, 0.15", "-132.084, -175.615, -140.67, 0.15", "-132.935, -175.371, -141.498, 0.07", "-133.779, -175.112, -142.319, 0.07", "-134.259, -174.958, -142.793, 0.07", "-134.905, -174.725, -143.397, 0.07", "-136.138, -174.305, -144.464, 0.07", "-136.74, -174.129, -145.001, 0.15", "-137.482, -173.94, -145.668, 0.15", "-138.333, -173.783, -146.565, 0.15", "-138.698, -173.754, -146.999, 0.15", "-139.11, -173.788, -147.551, 0.15", "-139.608, -173.961, -148.246, 0.15", "-139.799, -174.046, -148.513, 0.15", "-140.875, -174.611, -149.96, 0.15", "-141.288, -174.864, -150.528, 0.15", "-141.87, -175.228, -151.365, 0.15", "-142.572, -175.778, -152.468, 0.15" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "140.082, -68.6997, 56.8332, 0.22", "147.159, -70.3688, 60.2906, 0.22", "153.926, -71.5793, 64.4803, 0.22" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "140.082, -68.6997, 56.8332, 0.07", "150.048, -71.0459, 61.8878, 0.22", "160.209, -71.3762, 67.0846, 0.22", "170.001, -70.4276, 72.8784, 0.22" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-30.7625, -188.49, 25.7805, 0.22", "-33.6098, -197.074, 28.0784, 0.22", "-37.653, -205.429, 29.0388, 0.22" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-30.7625, -188.49, 25.7805, 0.07", "-33.4795, -198.891, 29.3551, 0.22", "-35.9347, -209.055, 33.7126, 0.22" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-88.8408, 77.9413, 122.213, 0.29", "-92.4156, 82.4859, 127.983, 0.29", "-97.2667, 87.5294, 132.197, 0.29", "-102.393, 92.6541, 135.964, 0.29", "-107.385, 98.1954, 139.296, 0.29" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-88.8408, 77.9413, 122.213, 0.07", "-92.7965, 82.7214, 127.82, 0.29", "-95.8058, 87.4877, 133.997, 0.29", "-99.9809, 92.5935, 139.138, 0.29", "-104.982, 98.6133, 142.084, 0.29", "-111.172, 103.302, 145.187, 0.29" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-32.7425, -9.78226, 17.5122, 0.74", "-35.1572, -10.9036, 17.6233, 0.74", "-37.363, -11.9278, 17.7249, 0.74", "-39.0686, -12.7198, 17.8034, 0.74", "-41.6909, -13.9375, 17.9241, 0.74", "-44.3646, -15.179, 18.0471, 0.74", "-46.2344, -16.0472, 18.1332, 0.88" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-32.7425, -9.78226, 17.5122, 0.81", "-31.7653, -11.6224, 18.2364, 0.81", "-30.9401, -13.2184, 18.7987, 0.59", "-30.4007, -14.3319, 19.2012, 0.59", "-29.6316, -16.0929, 19.8809, 0.44", "-29.1476, -17.3259, 20.3927, 0.44", "-28.7197, -18.6218, 20.9443, 0.44", "-28.4531, -19.8507, 21.4651, 0.44", "-28.3763, -20.739, 21.8274, 0.44", "-28.39, -21.7285, 22.2545, 0.44", "-28.4533, -22.5281, 22.6087, 0.44", "-28.5809, -24.0986, 23.2911, 0.44", "-28.6824, -25.5617, 23.8979, 0.44", "-28.6935, -26.7968, 24.3774, 0.44", "-28.565, -28.1292, 24.834, 0.44", "-28.3634, -29.2175, 25.1823, 0.59", "-28.0815, -30.244, 25.5242, 0.59", "-27.7193, -31.2446, 25.8864, 0.59", "-27.0925, -32.7619, 26.4571, 0.59", "-26.1101, -35.109, 27.3766, 0.29", "-25.6962, -36.2192, 27.8366, 0.29", "-25.3732, -37.2685, 28.3077, 0.29", "-25.1403, -38.2202, 28.8923, 0.44", "-25.0195, -38.888, 29.3496, 0.44", "-24.9645, -39.406, 29.7443, 0.44", "-24.9087, -40.3339, 30.5157, 0.44", "-24.8509, -41.5077, 31.4663, 0.44", "-24.6863, -44.5601, 33.8279, 0.15", "-24.5187, -45.8986, 34.8587, 0.07", "-24.3613, -46.5879, 35.3734, 0.07", "-24.1242, -47.2525, 35.839, 0.22", "-23.6306, -48.2674, 36.5004, 0.22", "-23.4824, -48.5336, 36.645, 0.22", "-22.999, -49.3845, 37.0119, 0.22", "-22.7132, -50.037, 37.3739, 0.22", "-22.6234, -50.5772, 37.6653, 0.22", "-22.7484, -51.7246, 38.2969, 0.22", "-23.1742, -52.8644, 38.942, 0.22", "-23.5101, -53.3391, 39.1997, 0.22", "-24.5577, -54.2475, 39.6803, 0.22", "-25.7607, -54.9106, 40.029, 0.22", "-26.4782, -55.1076, 40.1299, 0.22", "-27.0748, -55.1368, 40.1321, 0.22", "-28.7172, -54.8425, 39.9827, 0.22", "-29.6123, -54.456, 39.8153, 0.22", "-30.3534, -53.7887, 39.5781, 0.22", "-31.0807, -52.8158, 39.2593, 0.22", "-29.5367, -61.6127, 43.8768, 0.22", "-28.9843, -70.7059, 48.131, 0.22", "-29.4712, -79.7754, 52.4434, 0.22", "-29.4273, -87.9799, 58.255, 0.22", "-29.0831, -96.7265, 63.2016, 0.22", "-28.1875, -105.135, 68.642, 0.22", "-25.7863, -114.245, 72.1515, 0.22", "-22.5078, -123.346, 74.8951, 0.22", "-18.6447, -132.249, 77.5206, 0.22", "-14.6168, -140.979, 80.4635, 0.22", "-10.667, -149.447, 84.1751, 0.22" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "22.7162, 133.509, -7.07749, 0.59", "22.6715, 135.927, -8.73344, 0.59", "22.6823, 136.576, -9.10292, 0.59", "22.7046, 137.334, -9.52406, 0.37", "22.7138, 137.675, -9.70585, 0.15", "22.7282, 138.15, -9.94914, 0.15", "22.7689, 139.498, -10.5913, 0.15", "22.8131, 141.493, -11.3643, 0.07", "22.8363, 142.448, -11.7129, 0.07", "22.8669, 143.113, -11.9488, 0.07", "22.8989, 143.94, -12.233, 0.07", "22.9167, 144.996, -12.5759, 0.07", "22.9157, 146.13, -12.9343, 0.07", "22.9079, 147.952, -13.5554, 0.07", "22.9053, 148.721, -13.8182, 0.07", "22.9082, 149.496, -14.0984, 0.07", "22.9102, 149.949, -14.2657, 0.15", "22.9145, 150.73, -14.5718, 0.15", "22.9024, 151.352, -14.8044, 0.15", "22.8723, 151.849, -14.9935, 0.15", "22.8101, 152.348, -15.1912, 0.15", "22.6575, 153.328, -15.5665, 0.15", "22.5467, 154.004, -15.813, 0.15", "22.3903, 154.985, -16.1311, 0.15", "22.2088, 156.205, -16.5099, 0.15", "22.0724, 157.066, -16.7604, 0.15", "21.9888, 157.577, -16.8953, 0.15", "21.807, 158.79, -17.1931, 0.15", "21.6848, 159.786, -17.4033, 0.15", "21.5861, 160.781, -17.5748, 0.15", "21.5047, 161.665, -17.6919, 0.15", "21.4704, 162.249, -17.7673, 0.15", "21.3908, 163.893, -17.9728, 0.22", "21.3546, 164.63, -18.0596, 0.22", "21.2556, 166.594, -18.2798, 0.22", "21.2452, 166.857, -18.3204, 0.22", "21.2293, 167.502, -18.442, 0.22", "21.2196, 167.864, -18.5183, 0.22", "21.2061, 168.384, -18.6351, 0.22", "21.144, 170.0, -19.0543, 0.22", "21.0209, 172.415, -19.8893, 0.29", "20.9676, 173.366, -20.2485, 0.22", "20.9063, 174.522, -20.7068, 0.22", "20.8563, 175.763, -21.2173, 0.22", "20.8032, 177.898, -22.1117, 0.22", "20.8237, 180.289, -23.1377, 0.15", "20.8465, 181.071, -23.4661, 0.15", "20.8762, 181.92, -23.8411, 0.15", "20.907, 182.83, -24.2438, 0.15", "20.9528, 184.469, -24.953, 0.15", "21.0295, 187.287, -26.1184, 0.15", "21.0701, 188.541, -26.5975, 0.15", "21.1369, 190.371, -27.3143, 0.15", "21.1912, 191.525, -27.7611, 0.15", "21.2606, 192.613, -28.1737, 0.15", "21.3593, 193.68, -28.5789, 0.15", "21.5503, 195.333, -29.1827, 0.15", "21.7018, 196.484, -29.5906, 0.15", "21.8323, 197.887, -30.0666, 0.15", "21.8485, 198.215, -30.1889, 0.15", "21.8346, 199.799, -30.8057, 0.15", "21.75, 200.816, -31.216, 0.15", "21.5305, 202.098, -31.7435, 0.15", "20.9733, 204.355, -32.6615, 0.15", "20.4807, 205.774, -33.2219, 0.15", "19.8162, 207.248, -33.7661, 0.15", "19.2843, 208.176, -34.0604, 0.15", "18.6772, 209.12, -34.2982, 0.15", "18.0324, 210.038, -34.4623, 0.15", "16.8487, 211.628, -34.5691, 0.15", "15.9421, 212.838, -34.5351, 0.15", "14.9391, 214.279, -34.4236, 0.15", "13.8835, 216.049, -34.2141, 0.15", "13.4725, 216.853, -34.1003, 0.15", "12.8197, 218.397, -33.8582, 0.15", "12.3842, 219.655, -33.6689, 0.15", "11.6638, 221.97, -33.3706, 0.15", "11.0025, 224.123, -33.1658, 0.15", "10.8393, 224.638, -33.1322, 0.15", "10.4658, 225.836, -33.0908, 0.15", "9.65471, 228.619, -33.0785, 0.15", "9.14165, 230.497, -33.0939, 0.15", "8.5861, 232.86, -33.144, 0.15", "8.30776, 234.261, -33.2133, 0.15", "7.94928, 236.736, -33.3707, 0.07", "7.84007, 238.456, -33.5218, 0.07", "7.8912, 239.445, -33.6418, 0.07", "8.26969, 241.67, -34.0186, 0.07", "8.53197, 242.563, -34.2225, 0.07", "8.90627, 243.522, -34.5133, 0.07", "9.41, 244.572, -34.9751, 0.07", "9.80498, 245.337, -35.3923, 0.07", "10.3854, 246.387, -36.0823, 0.07", "10.7501, 246.98, -36.5195, 0.07", "11.2213, 247.81, -37.0929, 0.07", "11.9476, 249.227, -38.0085, 0.07", "12.3492, 250.049, -38.5005, 0.07", "12.972, 251.343, -39.2271, 0.07", "13.5429, 252.583, -39.8691, 0.07", "14.2698, 254.289, -40.6904, 0.07", "14.6809, 255.396, -41.2004, 0.07", "15.1475, 257.121, -41.9312, 0.07", "15.3286, 258.095, -42.3111, 0.07", "15.4509, 259.63, -42.8243, 0.07", "15.4418, 261.144, -43.3002, 0.07", "15.314, 262.979, -43.8294, 0.07", "15.0266, 265.345, -44.4754, 0.07", "14.8416, 266.51, -44.7944, 0.07", "14.545, 268.683, -45.4411, 0.07", "14.4288, 269.859, -45.8182, 0.07", "14.4055, 271.014, -46.1997, 0.07", "14.4628, 272.253, -46.6476, 0.07", "14.5777, 273.392, -47.1133, 0.07", "14.8664, 275.51, -48.0855, 0.07", "15.0438, 276.431, -48.5373, 0.07", "15.7673, 279.77, -50.159, 0.07", "15.9413, 280.51, -50.5143, 0.07" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "22.7162, 133.509, -7.07749, 0.07", "23.7547, 136.955, -6.77894, 0.07", "24.075, 138.194, -6.68116, 0.07", "24.5298, 140.131, -6.58163, 0.07", "24.9906, 142.125, -6.49125, 0.07", "25.7182, 145.364, -6.35618, 0.22", "26.0999, 147.119, -6.28763, 0.22", "26.5295, 149.406, -6.19264, 0.22", "27.0347, 152.323, -6.12147, 0.07", "27.3565, 154.18, -6.07592, 0.07", "27.5577, 155.257, -6.05731, 0.07", "27.6672, 155.868, -6.03815, 0.07", "28.0228, 157.88, -5.8816, 0.15", "28.3355, 159.744, -5.69633, 0.15", "28.5528, 161.236, -5.52374, 0.15", "28.7623, 163.115, -5.32054, 0.15", "28.9948, 165.817, -5.05181, 0.15", "29.0239, 166.9, -4.962, 0.15", "28.9649, 168.272, -4.89972, 0.15", "28.8803, 169.353, -4.88724, 0.15", "28.7612, 170.641, -4.91791, 0.15", "28.634, 172.653, -5.02824, 0.15", "28.5823, 176.053, -5.35328, 0.07", "28.6786, 179.132, -5.71162, 0.07", "28.8337, 181.097, -5.94535, 0.07", "28.962, 182.117, -6.08241, 0.07", "29.3909, 184.627, -6.44637, 0.07", "30.0114, 187.545, -6.89334, 0.07", "30.8028, 190.626, -7.38002, 0.07", "31.1761, 192.015, -7.58688, 0.07", "31.8062, 194.67, -7.94225, 0.07", "32.0121, 195.833, -8.04209, 0.07", "32.074, 196.404, -8.06135, 0.07", "32.1299, 197.646, -8.02191, 0.07", "32.143, 198.583, -7.96233, 0.07", "32.179, 201.764, -7.73075, 0.07", "32.2568, 204.791, -7.49539, 0.07", "32.3379, 206.59, -7.36781, 0.07", "32.5383, 210.678, -7.07696, 0.07", "32.7171, 213.676, -6.8599, 0.07", "32.8116, 214.9, -6.77353, 0.07", "32.9323, 215.978, -6.70715, 0.07", "33.2392, 217.764, -6.67287, 0.07" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "28.8516, 32.9919, 18.3908, 0.37", "30.5699, 33.3705, 17.8725, 0.37", "32.308, 33.8412, 17.4321, 0.37", "33.2664, 34.1373, 17.2504, 0.52", "34.9297, 34.6782, 16.9958, 0.96", "36.3697, 35.1425, 16.8536, 0.96", "37.7501, 35.5315, 16.7481, 0.96", "38.731, 35.8041, 16.7169, 0.74", "39.6504, 36.0297, 16.7339, 0.44", "40.5198, 36.218, 16.755, 0.44", "41.6773, 36.4787, 16.7751, 0.44", "42.9261, 36.8059, 16.7235, 0.44", "44.1402, 37.1665, 16.5884, 0.52", "45.4919, 37.6551, 16.3426, 0.52", "47.8892, 38.7145, 15.7413, 0.96", "49.2489, 39.4266, 15.3373, 1.18", "50.3685, 40.0726, 14.9485, 0.59", "50.9553, 40.4342, 14.7282, 0.59", "51.9144, 41.0262, 14.3331, 0.59", "52.8559, 41.5759, 13.8997, 0.59", "53.3309, 41.8029, 13.6638, 0.59", "54.4557, 42.2329, 13.1501, 0.29", "55.729, 42.6456, 12.6664, 0.29", "56.2648, 42.7963, 12.4933, 0.22", "57.13, 43.0118, 12.2642, 0.22", "58.2718, 43.3276, 12.019, 0.22", "59.5537, 43.8233, 11.7183, 0.22", "61.5635, 44.6548, 11.2736, 0.07", "62.7731, 45.1688, 11.0245, 0.07", "63.9185, 45.6641, 10.7925, 0.07", "66.4632, 46.8023, 10.2917, 0.07", "69.607, 48.3914, 9.65176, 0.07", "78.741, 53.9815, 7.29763, 0.07", "88.9453, 57.5963, 5.5592, 0.07", "99.7376, 59.469, 5.07562, 0.07", "110.471, 60.7021, 6.9444, 0.07", "120.782, 61.4212, 10.6036, 0.07", "131.004, 61.544, 14.5661, 0.07", "141.86, 60.5362, 15.7274, 0.07", "152.598, 60.5492, 17.9438, 0.07", "163.027, 60.5643, 21.329, 0.07", "173.735, 60.1799, 23.6552, 0.07", "184.695, 60.2266, 23.9451, 0.07" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "28.8516, 32.9919, 18.3908, 1.55", "30.0497, 34.1276, 18.7978, 1.55", "31.4312, 35.7345, 19.4478, 1.33", "32.5816, 37.4017, 20.4444, 1.11", "33.4055, 38.8209, 21.5055, 0.81", "34.368, 40.6392, 23.0316, 0.81", "35.0773, 42.0442, 24.3184, 0.81", "35.7076, 43.4015, 25.8975, 0.74", "36.5536, 45.4308, 28.8621, 0.88", "36.8518, 46.2301, 30.2601, 0.88", "36.9302, 46.4274, 30.6567, 0.88", "37.1115, 46.7196, 31.3147, 0.74", "37.762, 47.2878, 32.6116, 0.52", "38.4198, 47.7725, 33.4003, 0.37", "38.8988, 48.3632, 33.6633, 0.37", "39.6935, 49.4854, 34.0097, 0.37", "40.6162, 50.723, 34.4589, 0.59", "41.1811, 51.4552, 34.7537, 0.59", "42.4042, 53.0159, 35.4568, 0.59", "43.673, 54.4782, 36.2408, 0.59", "44.5105, 55.1787, 36.7787, 0.29", "46.2352, 55.8777, 37.902, 0.15", "46.9375, 56.0011, 38.3584, 0.15", "47.5019, 55.9858, 38.7073, 0.15", "48.2051, 55.8039, 39.1424, 0.15", "49.5412, 55.2025, 39.9258, 0.15", "50.6779, 54.5733, 40.6102, 0.15", "57.7109, 63.9778, 47.4509, 0.15", "66.5145, 70.02, 55.8588, 0.15", "73.2725, 75.8149, 66.1278, 0.15", "81.7673, 82.6137, 74.2714, 0.15", "88.569, 90.0295, 83.4062, 0.15", "96.297, 95.2025, 93.317, 0.15", "102.045, 101.758, 103.742, 0.15", "109.092, 107.686, 113.737, 0.15", "114.89, 115.407, 123.301, 0.15", "122.567, 122.859, 131.683, 0.15", "131.306, 131.276, 137.804, 0.15" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-142.572, -175.778, -152.468, 0.07", "-142.601, -176.774, -151.83, 0.07", "-142.56, -177.802, -151.258, 0.07", "-142.484, -178.571, -150.938, 0.07", "-142.372, -179.306, -150.72, 0.07", "-142.139, -180.408, -150.472, 0.07", "-141.795, -181.646, -150.25, 0.07", "-141.432, -182.638, -150.176, 0.07", "-140.979, -183.875, -150.167, 0.07", "-140.687, -184.863, -150.189, 0.07", "-140.498, -185.723, -150.251, 0.07", "-140.399, -186.87, -150.375, 0.07", "-140.501, -188.307, -150.564, 0.07", "-140.811, -189.772, -150.798, 0.07", "-141.348, -191.507, -151.098, 0.07", "-141.867, -192.844, -151.378, 0.07", "-142.731, -194.708, -151.841, 0.07", "-143.499, -196.177, -152.27, 0.07", "-144.094, -197.274, -152.638, 0.07", "-144.565, -198.153, -152.958, 0.07", "-144.809, -198.61, -153.128, 0.07", "-145.309, -199.588, -153.47, 0.07", "-145.872, -200.802, -153.922, 0.07", "-146.245, -201.67, -154.244, 0.07", "-146.624, -202.517, -154.514, 0.07", "-146.946, -203.182, -154.706, 0.07" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-142.572, -175.778, -152.468, 0.07", "-143.609, -175.24, -153.195, 0.07", "-144.68, -174.597, -154.056, 0.07", "-145.255, -174.226, -154.554, 0.07", "-146.094, -173.642, -155.321, 0.07", "-146.824, -173.073, -156.155, 0.07", "-147.458, -172.522, -157.03, 0.07", "-147.999, -171.948, -158.006, 0.07", "-148.243, -171.657, -158.522, 0.07", "-148.392, -171.471, -158.867, 0.07", "-149.222, -170.457, -160.855, 0.07", "-149.666, -169.97, -161.775, 0.07", "-150.164, -169.477, -162.669, 0.07", "-150.571, -169.124, -163.296, 0.07", "-151.13, -168.692, -164.135, 0.07", "-151.51, -168.419, -164.637, 0.07", "-152.331, -167.846, -165.687, 0.07", "-152.926, -167.404, -166.639, 0.07", "-153.641, -166.784, -168.189, 0.07", "-154.219, -166.18, -169.875, 0.07", "-154.57, -165.674, -171.395, 0.07", "-154.852, -164.974, -173.57, 0.07", "-154.934, -164.534, -175.044, 0.07", "-154.934, -164.352, -175.642, 0.07", "-154.872, -164.022, -176.65, 0.07", "-154.765, -163.554, -177.982, 0.07", "-154.71, -163.283, -178.809, 0.07" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "170.001, -70.4276, 72.8784, 0.29", "180.93, -70.9676, 78.1644, 0.29", "191.914, -71.0254, 83.3622, 0.29", "203.453, -69.7232, 86.9443, 0.29", "214.541, -69.9285, 91.9147, 0.29", "226.019, -69.3849, 95.8667, 0.29", "237.456, -68.1711, 99.7923, 0.29" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "170.001, -70.4276, 72.8784, 0.07", "180.733, -71.0753, 78.8623, 0.29" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-107.385, 98.1954, 139.296, 0.29", "-112.937, 108.401, 146.147, 0.29" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-107.385, 98.1954, 139.296, 0.07", "-112.363, 103.109, 143.545, 0.29" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-46.2344, -16.0472, 18.1332, 0.22", "-48.0051, -17.1052, 16.304, 0.22", "-49.4161, -17.4219, 15.5897, 0.29", "-49.9733, -17.487, 15.3852, 0.29", "-50.6069, -17.5314, 15.1901, 0.29", "-51.6656, -17.5616, 14.9148, 0.29", "-54.234, -17.5342, 14.2876, 0.29", "-56.9096, -17.3362, 13.7819, 0.29", "-58.8985, -17.1467, 13.4652, 0.29", "-60.4359, -17.0022, 13.2254, 0.29", "-62.6808, -16.8595, 12.8796, 0.29", "-64.4011, -16.8293, 12.5859, 0.29", "-65.6687, -16.88, 12.306, 0.29", "-67.3129, -17.0526, 11.8573, 0.29", "-69.1792, -17.36, 11.2898, 0.29", "-70.5187, -17.6627, 10.8398, 0.29", "-72.1432, -18.1803, 10.2254, 0.07", "-72.8294, -18.4591, 9.95242, 0.07", "-73.3485, -18.6969, 9.723, 0.07", "-74.081, -19.0682, 9.27885, 0.07", "-84.2256, -18.2915, 6.39129, 0.07", "-93.9308, -17.4393, 2.27581, 0.07", "-104.193, -16.7194, -0.180668, 0.07", "-113.936, -17.8339, -4.14063, 0.07", "-123.273, -17.1177, -9.05643, 0.07", "-132.002, -14.9735, -14.6295, 0.07", "-140.935, -11.2675, -18.9101, 0.07", "-150.788, -8.14129, -21.1442, 0.07", "-160.696, -4.90319, -22.933, 0.07", "-170.955, -3.12764, -24.7889, 0.07" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-46.2344, -16.0472, 18.1332, 0.88", "-46.2219, -16.9415, 18.7408, 0.88", "-46.2543, -18.6094, 19.8552, 0.88", "-46.4364, -19.6584, 20.6419, 0.88", "-46.732, -20.3756, 21.2807, 1.11", "-47.3047, -21.0987, 22.075, 1.11", "-47.9268, -21.6756, 22.7867, 1.11", "-48.277, -21.8969, 23.1112, 0.74", "-49.9876, -22.7339, 24.4852, 0.88", "-51.6243, -23.3717, 25.6941, 0.88", "-53.7679, -24.043, 27.1792, 1.03", "-55.1955, -24.3977, 28.1067, 0.81", "-56.293, -24.6239, 28.7923, 0.81" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-10.667, -149.447, 84.1751, 0.29", "-10.7165, -158.08, 85.6206, 0.29", "-9.06726, -166.56, 87.032, 0.29", "-8.04018, -175.234, 87.5966, 0.29", "-7.33263, -183.92, 86.7865, 0.29", "-6.9029, -192.653, 86.3699, 0.29" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-10.667, -149.447, 84.1751, 0.07", "-8.78977, -158.253, 89.7863, 0.29", "-6.15762, -167.096, 95.0214, 0.29" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "33.2392, 217.764, -6.67287, 0.15", "32.7886, 220.649, -7.17125, 0.15", "32.5023, 222.205, -7.45649, 0.15", "32.199, 223.99, -7.77002, 0.15", "31.9066, 225.759, -8.09327, 0.15", "31.5834, 227.917, -8.5393, 0.15", "31.1475, 231.06, -9.28974, 0.15", "30.7653, 233.87, -10.0423, 0.15", "30.5647, 235.595, -10.5555, 0.15", "30.4548, 236.743, -10.9317, 0.15", "30.3241, 239.063, -11.8247, 0.15", "30.3464, 240.507, -12.4714, 0.15", "30.4304, 241.149, -12.8067, 0.15", "30.7892, 242.642, -13.6771, 0.15", "31.1518, 243.776, -14.3871, 0.15", "31.5866, 244.852, -15.1023, 0.15", "31.9302, 245.593, -15.6101, 0.15", "32.5215, 247.035, -16.5789, 0.15", "32.8354, 248.055, -17.2801, 0.15", "32.9546, 248.747, -17.7478, 0.15", "33.0455, 250.42, -18.7455, 0.15", "33.0398, 251.054, -19.0546, 0.15", "32.9573, 253.276, -19.9664, 0.15", "32.923, 254.75, -20.4968, 0.15", "32.9865, 256.234, -21.0415, 0.15", "33.2122, 257.738, -21.6062, 0.15", "33.8452, 259.956, -22.5075, 0.15", "34.1163, 260.608, -22.8109, 0.15", "35.0137, 262.239, -23.6759, 0.15", "35.8547, 263.651, -24.5467, 0.15", "36.7307, 265.158, -25.6016, 0.15", "37.4038, 266.515, -26.6322, 0.15", "37.8757, 267.816, -27.632, 0.15", "38.0532, 268.41, -28.0826, 0.15", "38.3161, 269.902, -29.1267, 0.15", "38.3548, 270.942, -29.7609, 0.15", "38.2204, 272.262, -30.511, 0.15", "37.9225, 274.057, -31.4374, 0.15" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "33.2392, 217.764, -6.67287, 0.07", "34.5649, 220.136, -6.81663, 0.07", "35.0274, 221.072, -6.9504, 0.07", "35.6066, 222.444, -7.2756, 0.07", "36.0464, 223.667, -7.67309, 0.07", "36.4307, 225.024, -8.26257, 0.07", "36.6576, 225.949, -8.73236, 0.07", "36.7952, 226.903, -9.32558, 0.07", "36.8961, 227.968, -10.0882, 0.07", "36.9252, 228.848, -10.8131, 0.07", "36.9384, 230.664, -12.4695, 0.07", "36.923, 231.172, -12.94, 0.07" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "184.695, 60.2266, 23.9451, 0.22", "196.792, 62.4116, 24.2243, 0.22", "208.288, 66.3755, 22.4104, 0.22", "219.996, 70.1203, 22.1453, 0.22", "232.081, 72.3874, 22.0971, 0.22", "243.924, 75.4527, 23.3237, 0.22", "255.96, 77.8508, 24.0799, 0.22", "267.812, 81.0883, 23.6198, 0.22", "279.738, 84.0313, 23.0955, 0.22", "291.908, 85.6658, 22.4564, 0.22" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "184.695, 60.2266, 23.9451, 0.07", "195.881, 62.3783, 23.9755, 0.22", "206.478, 66.3535, 22.6917, 0.22", "217.483, 68.6127, 20.8084, 0.22", "228.441, 69.9913, 18.0229, 0.22" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "131.306, 131.276, 137.804, 0.22", "138.563, 138.276, 146.368, 0.22", "145.217, 144.626, 155.876, 0.22", "152.167, 150.515, 165.468, 0.22" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "131.306, 131.276, 137.804, 0.07", "135.536, 135.169, 142.659, 0.22", "139.108, 138.914, 148.119, 0.22", "142.055, 142.905, 153.775, 0.22", "145.359, 146.567, 159.456, 0.22" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-170.955, -3.12764, -24.7889, 0.22", "-180.562, -3.14811, -28.469, 0.22", "-189.57, -3.61094, -33.417, 0.22" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-170.955, -3.12764, -24.7889, 0.07", "-180.405, -2.6545, -28.3474, 0.22", "-189.585, -1.19647, -32.3192, 0.22", "-198.52, 2.2393, -35.5638, 0.22", "-206.375, 7.75889, -38.7281, 0.22" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-56.293, -24.6239, 28.7923, 0.74", "-57.7373, -24.3051, 29.5528, 0.74", "-59.2756, -23.8373, 30.3515, 0.74", "-60.5285, -23.3642, 30.9952, 0.74", "-61.411, -22.9577, 31.4515, 0.37", "-62.4853, -22.4345, 31.9906, 0.37", "-63.9179, -21.7444, 32.6773, 0.52", "-64.8151, -21.2947, 33.0773, 0.52", "-65.8819, -20.8341, 33.5019, 0.66", "-67.4406, -20.3327, 34.0433, 0.66", "-68.59, -20.1292, 34.4082, 0.66", "-69.63, -20.1042, 34.7079, 0.66", "-71.3335, -20.2501, 35.1665, 0.66", "-72.9226, -20.4629, 35.5773, 0.66", "-73.7922, -20.592, 35.8003, 0.66", "-74.8071, -20.7834, 36.0429, 0.81", "-76.6497, -21.1674, 36.3943, 0.44", "-77.851, -21.4266, 36.5361, 0.44", "-79.331, -21.7701, 36.5645, 0.44", "-80.1982, -21.9682, 36.4798, 0.44", "-81.8335, -22.3711, 36.1875, 0.44", "-83.5626, -22.8798, 35.7056, 0.44", "-84.517, -23.224, 35.3044, 0.44", "-85.5169, -23.6229, 34.7855, 0.44", "-86.3028, -23.933, 34.3117, 0.44", "-87.1491, -24.1342, 33.7945, 0.44", "-88.3997, -24.125, 33.0492, 0.37", "-89.3424, -23.9795, 32.5677, 0.37", "-90.1013, -23.7807, 32.1859, 0.37", "-90.763, -23.5395, 31.8367, 0.37", "-92.6564, -22.6427, 30.7701, 0.22", "-93.7593, -22.066, 30.1237, 0.22", "-95.1488, -21.1993, 29.3254, 0.07", "-96.1867, -20.4886, 28.7745, 0.07", "-96.7923, -20.0343, 28.4582, 0.07", "-97.7041, -19.3232, 28.0072, 0.07", "-108.668, -18.9632, 28.4493, 0.07", "-119.543, -19.5341, 29.8438, 0.07", "-130.323, -20.4744, 31.6951, 0.07", "-140.464, -20.3667, 35.8993, 0.07", "-150.511, -21.9939, 40.0143, 0.07", "-160.169, -25.0195, 44.2678, 0.07", "-170.639, -27.256, 46.7006, 0.07" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-56.293, -24.6239, 28.7923, 0.37", "-58.1744, -26.8996, 29.4191, 0.37", "-58.8136, -27.6729, 29.6321, 0.37", "-59.86, -28.9385, 29.9807, 0.37", "-60.7266, -29.9867, 30.2694, 0.37", "-61.4522, -30.8644, 30.5111, 0.37", "-68.8732, -39.3325, 33.3733, 0.37", "-75.0376, -47.975, 38.0935, 0.37", "-80.6482, -57.0065, 42.7758, 0.37", "-86.7188, -65.164, 48.3949, 0.37", "-92.4694, -73.2375, 54.4547, 0.37", "-97.5927, -80.3185, 62.1087, 0.37", "-102.247, -86.5361, 70.7489, 0.37", "-106.942, -91.296, 80.2501, 0.37", "-111.013, -96.7433, 89.6692, 0.37", "-116.033, -100.089, 99.5984, 0.37" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "152.167, 150.515, 165.468, 0.29", "157.339, 154.909, 171.919, 0.29" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "152.167, 150.515, 165.468, 0.07", "157.286, 154.911, 171.913, 0.29", "162.824, 158.179, 178.674, 0.29", "168.835, 160.527, 185.414, 0.29", "174.95, 161.332, 192.415, 0.29", "181.373, 161.112, 199.18, 0.29", "188.886, 161.117, 204.714, 0.29" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-170.639, -27.256, 46.7006, 0.22", "-182.261, -27.5614, 48.448, 0.22", "-193.937, -27.2279, 49.7847, 0.22" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-170.639, -27.256, 46.7006, 0.07", "-181.309, -27.3308, 48.6383, 0.22", "-192.063, -26.9405, 49.9881, 0.22", "-202.437, -27.4312, 53.1144, 0.22" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-116.033, -100.089, 99.5984, 0.29", "-122.645, -108.477, 107.406, 0.29", "-129.608, -116.69, 115.096, 0.29" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-116.033, -100.089, 99.5984, 0.07", "-120.124, -105.058, 104.727, 0.29", "-125.016, -110.08, 109.037, 0.29", "-130.52, -114.69, 113.061, 0.29", "-135.231, -120.851, 115.814, 0.29", "-139.263, -126.368, 120.401, 0.29", "-143.91, -131.286, 125.086, 0.29", "-149.543, -135.748, 129.098, 0.29", "-154.086, -141.095, 133.399, 0.29", "-157.346, -147.033, 138.074, 0.29" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-202.437, -27.4312, 53.1144, 0.29", "-212.671, -27.4458, 55.1435, 0.29", "-223.04, -28.1616, 56.0502, 0.29", "-232.803, -31.6777, 57.1339, 0.29", "-242.411, -35.5927, 58.2359, 0.29", "-252.147, -39.0493, 56.7818, 0.29", "-261.588, -43.4869, 56.9437, 0.29" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-202.437, -27.4312, 53.1144, 0.07", "-211.017, -27.3993, 54.9758, 0.29" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_70", "dend_51", "dend_24", "dend_5", "dend_0", "dend_74", "dend_71", "dend_61", "dend_52", "dend_48", "dend_25", "dend_9", "dend_6", "dend_4", "dend_1", "dend_76", "dend_75", "dend_73", "dend_72", "dend_67", "dend_62", "dend_56", "dend_53", "dend_50", "dend_49", "dend_43", "dend_26", "dend_19", "dend_10", "dend_8", "dend_7", "dend_3", "dend_2", "dend_69", "dend_68", "dend_66", "dend_63", "dend_60", "dend_57", "dend_55", "dend_54", "dend_45", "dend_44", "dend_30", "dend_27", "dend_23", "dend_20", "dend_16", "dend_11", "dend_65", "dend_64", "dend_59", "dend_58", "dend_47", "dend_46", "dend_40", "dend_31", "dend_29", "dend_28", "dend_22", "dend_21", "dend_18", "dend_17", "dend_13", "dend_12", "dend_42", "dend_41", "dend_35", "dend_32", "dend_15", "dend_14", "dend_39", "dend_36", "dend_34", "dend_33", "dend_38", "dend_37" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_70", "dend_51", "dend_24", "dend_5", "dend_0", "dend_74", "dend_71", "dend_61", "dend_52", "dend_48", "dend_25", "dend_9", "dend_6", "dend_4", "dend_1", "dend_76", "dend_75", "dend_73", "dend_72", "dend_67", "dend_62", "dend_56", "dend_53", "dend_50", "dend_49", "dend_43", "dend_26", "dend_19", "dend_10", "dend_8", "dend_7", "dend_3", "dend_2", "dend_69", "dend_68", "dend_66", "dend_63", "dend_60", "dend_57", "dend_55", "dend_54", "dend_45", "dend_44", "dend_30", "dend_27", "dend_23", "dend_20", "dend_16", "dend_11", "dend_65", "dend_64", "dend_59", "dend_58", "dend_47", "dend_46", "dend_40", "dend_31", "dend_29", "dend_28", "dend_22", "dend_21", "dend_18", "dend_17", "dend_13", "dend_12", "dend_42", "dend_41", "dend_35", "dend_32", "dend_15", "dend_14", "dend_39", "dend_36", "dend_34", "dend_33", "dend_38", "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_24", "dend_24", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_73", "dend_73", "dend_72", "dend_72", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_50", "dend_50", "dend_49", "dend_49", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_10", "dend_10", "dend_10", "dend_8", "dend_8", "dend_7", "dend_7", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_68", "dend_68", "dend_68", "dend_68", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_55", "dend_55", "dend_54", "dend_54", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_47", "dend_46", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.13603E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.13603E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.04239E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bSTUT213_L6_LBC_9961376dfe_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_70, id: dend_70, parent: soma_0
create dend_70
public dend_70
// Section: dend_51, id: dend_51, parent: soma_0
create dend_51
public dend_51
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_74, id: dend_74, parent: dend_70
create dend_74
public dend_74
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_61, id: dend_61, parent: dend_51
create dend_61
public dend_61
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_48, id: dend_48, parent: dend_24
create dend_48
public dend_48
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_76, id: dend_76, parent: dend_74
create dend_76
public dend_76
// Section: dend_75, id: dend_75, parent: dend_74
create dend_75
public dend_75
// Section: dend_73, id: dend_73, parent: dend_71
create dend_73
public dend_73
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_67, id: dend_67, parent: dend_61
create dend_67
public dend_67
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_56, id: dend_56, parent: dend_52
create dend_56
public dend_56
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_43, id: dend_43, parent: dend_25
create dend_43
public dend_43
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_19, id: dend_19, parent: dend_9
create dend_19
public dend_19
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_69, id: dend_69, parent: dend_67
create dend_69
public dend_69
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_66, id: dend_66, parent: dend_62
create dend_66
public dend_66
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_23, id: dend_23, parent: dend_19
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_16, id: dend_16, parent: dend_10
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_40, id: dend_40, parent: dend_30
create dend_40
public dend_40
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_35, id: dend_35, parent: dend_31
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_70, dend_51, dend_24, dend_5, dend_0, dend_74, dend_71, dend_61, dend_52, dend_48, dend_25, dend_9, dend_6, dend_4, dend_1, dend_76, dend_75, dend_73, dend_72, dend_67, dend_62, dend_56, dend_53, dend_50, dend_49, dend_43, dend_26, dend_19, dend_10, dend_8, dend_7, dend_3, dend_2, dend_69, dend_68, dend_66, dend_63, dend_60, dend_57, dend_55, dend_54, dend_45, dend_44, dend_30, dend_27, dend_23, dend_20, dend_16, dend_11, dend_65, dend_64, dend_59, dend_58, dend_47, dend_46, dend_40, dend_31, dend_29, dend_28, dend_22, dend_21, dend_18, dend_17, dend_13, dend_12, dend_42, dend_41, dend_35, dend_32, dend_15, dend_14, dend_39, dend_36, dend_34, dend_33, dend_38, dend_37]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_70, dend_51, dend_24, dend_5, dend_0, dend_74, dend_71, dend_61, dend_52, dend_48, dend_25, dend_9, dend_6, dend_4, dend_1, dend_76, dend_75, dend_73, dend_72, dend_67, dend_62, dend_56, dend_53, dend_50, dend_49, dend_43, dend_26, dend_19, dend_10, dend_8, dend_7, dend_3, dend_2, dend_69, dend_68, dend_66, dend_63, dend_60, dend_57, dend_55, dend_54, dend_45, dend_44, dend_30, dend_27, dend_23, dend_20, dend_16, dend_11, dend_65, dend_64, dend_59, dend_58, dend_47, dend_46, dend_40, dend_31, dend_29, dend_28, dend_22, dend_21, dend_18, dend_17, dend_13, dend_12, dend_42, dend_41, dend_35, dend_32, dend_15, dend_14, dend_39, dend_36, dend_34, dend_33, dend_38, dend_37]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_54
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_51, dend_51, dend_51, dend_51, dend_51, dend_24, dend_24, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_73, dend_73, dend_72, dend_72, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_49, dend_49, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_10, dend_10, dend_10, dend_8, dend_8, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_60, dend_60, dend_57, dend_57, dend_57, dend_55, dend_55, dend_54, dend_54, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_47, dend_46, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_39, dend_39, dend_36, dend_36, dend_36, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_70(0), soma_0(0.4500009122195697)
    connect dend_51(0), soma_0(0.4500009122195697)
    connect dend_24(0), soma_0(0.4500009122195697)
    connect dend_5(0), soma_0(0.4500009122195697)
    connect dend_0(0), soma_0(0.4500009122195697)
    connect axon_0(0), soma_0(1.0)
    connect dend_74(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_61(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_48(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_76(0), dend_74(1.0)
    connect dend_75(0), dend_74(1.0)
    connect dend_73(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_67(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_56(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_43(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_19(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_69(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_66(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_23(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_16(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_40(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_35(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -5.84291, 11.3612, 2.23641, 5.89494 ) }
    soma_0 { pt3dadd( -5.19407, 10.0003, 1.99661, 10.2773 ) }
    soma_0 { pt3dadd( -4.54524, 8.63944, 1.7568, 13.3265 ) }
    soma_0 { pt3dadd( -3.8964, 7.27857, 1.517, 15.2194 ) }
    soma_0 { pt3dadd( -3.24756, 5.91771, 1.2772, 16.1615 ) }
    soma_0 { pt3dadd( -2.59873, 4.55684, 1.0374, 16.5543 ) }
    soma_0 { pt3dadd( -1.94989, 3.19598, 0.797597, 16.4314 ) }
    soma_0 { pt3dadd( -1.30106, 1.83511, 0.557795, 16.0873 ) }
    soma_0 { pt3dadd( -0.65222, 0.47425, 0.317993, 15.3318 ) }
    soma_0 { pt3dadd( -0.00338354, -0.886615, 0.0781916, 14.6262 ) }
    soma_0 { pt3dadd( 0.645453, -2.24748, -0.16161, 13.9141 ) }
    soma_0 { pt3dadd( 1.29429, -3.60834, -0.401412, 12.634 ) }
    soma_0 { pt3dadd( 1.94312, -4.96921, -0.641214, 10.4536 ) }
    soma_0 { pt3dadd( 2.59196, -6.33007, -0.881015, 8.87258 ) }
    soma_0 { pt3dadd( 3.2408, -7.69094, -1.12082, 7.42349 ) }
    soma_0 { pt3dadd( 3.88963, -9.0518, -1.36062, 6.11203 ) }
    soma_0 { pt3dadd( 4.53847, -10.4127, -1.60042, 4.82754 ) }
    soma_0 { pt3dadd( 5.18731, -11.7735, -1.84022, 4.18986 ) }
    soma_0 { pt3dadd( 5.83614, -13.1344, -2.08002, 4.58127 ) }
    soma_0 { pt3dadd( 6.48498, -14.4953, -2.31983, 4.2655 ) }
    soma_0 { pt3dadd( 7.13381, -15.8561, -2.55963, 2.83368 ) }
    // Section: dend_70, id: dend_70, parent: soma_0 (entry count 21/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 9.13926, -15.777, -1.39701, 1.62 ) }
    dend_70 { pt3dadd( 10.7033, -16.1868, -0.605933, 1.62 ) }
    dend_70 { pt3dadd( 11.9686, -16.5243, 0.0728854, 1.62 ) }
    dend_70 { pt3dadd( 13.3828, -16.9094, 0.888633, 1.25 ) }
    dend_70 { pt3dadd( 15.0014, -17.3947, 1.87347, 1.25 ) }
    dend_70 { pt3dadd( 17.2632, -18.1599, 3.26959, 1.25 ) }
    dend_70 { pt3dadd( 18.5138, -18.6331, 4.03065, 1.4 ) }
    dend_70 { pt3dadd( 20.1776, -19.3113, 5.11846, 1.4 ) }
    dend_70 { pt3dadd( 21.1251, -19.8117, 5.7707, 1.4 ) }
    dend_70 { pt3dadd( 22.2117, -20.5706, 6.51303, 1.62 ) }
    dend_70 { pt3dadd( 22.9123, -21.1879, 6.90882, 1.62 ) }
    dend_70 { pt3dadd( 24.1748, -22.3707, 7.44807, 1.62 ) }
    dend_70 { pt3dadd( 25.2636, -23.3239, 7.82914, 1.62 ) }
    dend_70 { pt3dadd( 26.6424, -24.4466, 8.26029, 1.62 ) }
    dend_70 { pt3dadd( 27.7017, -25.2894, 8.55665, 1.62 ) }
    dend_70 { pt3dadd( 29.7562, -26.8401, 9.09191, 1.11 ) }
    dend_70 { pt3dadd( 31.9587, -28.3876, 9.65764, 1.4 ) }
    dend_70 { pt3dadd( 34.3321, -29.9195, 10.2364, 1.4 ) }
    dend_70 { pt3dadd( 35.7072, -30.6867, 10.5451, 1.4 ) }
    // Section: dend_51, id: dend_51, parent: soma_0 (entry count 40/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 6.56926, -15.977, -4.34701, 2.65 ) }
    dend_51 { pt3dadd( 8.12656, -18.9906, -4.5644, 2.73 ) }
    dend_51 { pt3dadd( 9.42242, -21.4982, -4.74528, 2.43 ) }
    dend_51 { pt3dadd( 10.7017, -23.9738, -4.92386, 2.43 ) }
    dend_51 { pt3dadd( 12.0039, -26.4937, -5.10564, 2.65 ) }
    dend_51 { pt3dadd( 12.8284, -28.0891, -5.22072, 2.65 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 46/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -4.59074, -4.41702, 12.953, 2.36 ) }
    dend_24 { pt3dadd( -6.96385, -5.28756, 13.3131, 2.36 ) }
    dend_24 { pt3dadd( -9.43025, -6.19231, 13.6873, 2.36 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 49/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 3.27926, 9.99302, 3.25299, 2.21 ) }
    dend_5 { pt3dadd( 4.58246, 11.2769, 4.66659, 2.21 ) }
    dend_5 { pt3dadd( 6.04752, 12.7202, 6.25577, 2.21 ) }
    dend_5 { pt3dadd( 7.07014, 13.7277, 7.36503, 2.21 ) }
    dend_5 { pt3dadd( 8.31249, 14.9517, 8.71262, 2.21 ) }
    dend_5 { pt3dadd( 9.38042, 16.0038, 9.87102, 2.21 ) }
    dend_5 { pt3dadd( 10.9742, 17.574, 11.5998, 2.14 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 56/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -8.53074, 9.25302, 1.90299, 1.47 ) }
    dend_0 { pt3dadd( -8.77792, 10.1682, 1.90299, 1.47 ) }
    dend_0 { pt3dadd( -9.01783, 11.1053, 1.90299, 1.47 ) }
    dend_0 { pt3dadd( -9.19561, 12.0321, 1.90299, 1.62 ) }
    dend_0 { pt3dadd( -9.33224, 12.8257, 1.90299, 1.84 ) }
    dend_0 { pt3dadd( -9.40173, 13.2882, 1.90299, 1.84 ) }
    dend_0 { pt3dadd( -9.53265, 14.3408, 1.90521, 1.84 ) }
    dend_0 { pt3dadd( -9.55235, 14.7012, 1.90646, 1.84 ) }
    dend_0 { pt3dadd( -9.54865, 16.0107, 1.9121, 1.4 ) }
    dend_0 { pt3dadd( -9.50155, 17.1151, 1.91732, 1.4 ) }
    dend_0 { pt3dadd( -9.45065, 17.7036, 1.92015, 1.25 ) }
    dend_0 { pt3dadd( -9.2331, 19.731, 1.9298, 1.69 ) }
    dend_0 { pt3dadd( -9.11887, 20.6814, 1.93542, 1.69 ) }
    dend_0 { pt3dadd( -8.97837, 21.9589, 1.97721, 1.69 ) }
    dend_0 { pt3dadd( -8.89302, 23.0941, 2.04058, 1.33 ) }
    dend_0 { pt3dadd( -8.84627, 24.2155, 2.12504, 1.33 ) }
    dend_0 { pt3dadd( -8.87111, 24.9106, 2.18894, 1.33 ) }
    dend_0 { pt3dadd( -9.03081, 25.998, 2.33637, 0.81 ) }
    dend_0 { pt3dadd( -9.34909, 27.2581, 2.54243, 0.81 ) }
    dend_0 { pt3dadd( -9.62695, 28.193, 2.70993, 0.81 ) }
    dend_0 { pt3dadd( -9.77855, 28.8187, 2.78995, 0.96 ) }
    dend_0 { pt3dadd( -9.99695, 30.0189, 2.83779, 0.96 ) }
    dend_0 { pt3dadd( -10.1676, 31.5177, 2.72572, 1.25 ) }
    dend_0 { pt3dadd( -10.2209, 32.3939, 2.55623, 1.25 ) }
    dend_0 { pt3dadd( -10.2807, 33.6763, 2.20709, 1.25 ) }
    dend_0 { pt3dadd( -10.4278, 36.1448, 1.47141, 0.88 ) }
    dend_0 { pt3dadd( -10.5262, 37.3254, 1.09691, 0.88 ) }
    dend_0 { pt3dadd( -10.6944, 38.8158, 0.608847, 1.03 ) }
    dend_0 { pt3dadd( -10.8466, 39.765, 0.321891, 1.25 ) }
    dend_0 { pt3dadd( -11.3759, 42.1316, -0.270805, 1.11 ) }
    dend_0 { pt3dadd( -11.8146, 43.5776, -0.536261, 0.88 ) }
    dend_0 { pt3dadd( -12.0074, 44.1245, -0.600221, 0.88 ) }
    dend_0 { pt3dadd( -12.4164, 45.3581, -0.68177, 1.11 ) }
    dend_0 { pt3dadd( -12.8889, 47.0391, -0.826803, 0.66 ) }
    dend_0 { pt3dadd( -13.0018, 47.5733, -0.903734, 0.66 ) }
    dend_0 { pt3dadd( -13.1008, 48.3407, -1.04958, 0.66 ) }
    dend_0 { pt3dadd( -13.2484, 49.8709, -1.36436, 0.88 ) }
    dend_0 { pt3dadd( -13.3041, 50.4025, -1.47951, 0.88 ) }
    dend_0 { pt3dadd( -13.5329, 52.2308, -1.89559, 0.59 ) }
    dend_0 { pt3dadd( -13.6653, 53.2567, -2.13496, 0.52 ) }
    dend_0 { pt3dadd( -14.1878, 57.3995, -3.00112, 0.59 ) }
    dend_0 { pt3dadd( -14.2511, 58.0097, -3.10744, 0.52 ) }
    dend_0 { pt3dadd( -14.3412, 59.0789, -3.27521, 0.37 ) }
    dend_0 { pt3dadd( -14.3724, 59.7313, -3.37944, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( -14.3758, 61.0375, -3.57884, 0.44 ) }
    dend_0 { pt3dadd( -14.3069, 61.9303, -3.77872, 0.44 ) }
    dend_0 { pt3dadd( -14.0203, 63.2154, -4.31415, 0.29 ) }
    dend_0 { pt3dadd( -13.7297, 64.3939, -4.91139, 0.29 ) }
    dend_0 { pt3dadd( -13.5528, 65.1385, -5.35145, 0.29 ) }
    dend_0 { pt3dadd( -13.499, 65.4659, -5.57542, 0.44 ) }
    dend_0 { pt3dadd( -13.5081, 65.7909, -5.84256, 0.74 ) }
    dend_0 { pt3dadd( -13.6496, 66.3841, -6.3888, 0.74 ) }
    dend_0 { pt3dadd( -13.8518, 66.8186, -6.80783, 0.74 ) }
    dend_0 { pt3dadd( -14.1456, 67.3925, -7.25896, 0.74 ) }
    dend_0 { pt3dadd( -14.2244, 67.5742, -7.37581, 0.37 ) }
    dend_0 { pt3dadd( -14.2963, 68.128, -7.72143, 0.37 ) }
    dend_0 { pt3dadd( -14.2955, 68.3464, -7.87098, 0.37 ) }
    dend_0 { pt3dadd( -14.2702, 68.8011, -8.2, 0.37 ) }
    dend_0 { pt3dadd( -14.2591, 69.305, -8.58884, 0.37 ) }
    dend_0 { pt3dadd( -14.284, 69.954, -9.08355, 0.37 ) }
    dend_0 { pt3dadd( -14.4663, 71.8, -10.5541, 0.37 ) }
    dend_0 { pt3dadd( -14.6704, 73.2406, -11.7282, 0.37 ) }
    dend_0 { pt3dadd( -14.7635, 73.79, -12.1912, 0.22 ) }
    dend_0 { pt3dadd( -14.9592, 74.6966, -12.9718, 0.22 ) }
    dend_0 { pt3dadd( -15.2219, 75.6545, -13.7695, 0.22 ) }
    dend_0 { pt3dadd( -15.4298, 76.6201, -14.5177, 0.44 ) }
    dend_0 { pt3dadd( -15.4736, 76.947, -14.7337, 0.44 ) }
    dend_0 { pt3dadd( -15.4753, 77.5722, -15.1018, 0.44 ) }
    dend_0 { pt3dadd( -15.3875, 78.3136, -15.5067, 0.44 ) }
    dend_0 { pt3dadd( -15.0759, 79.7131, -16.204, 0.44 ) }
    dend_0 { pt3dadd( -14.3937, 82.0622, -17.2729, 0.29 ) }
    dend_0 { pt3dadd( -14.1733, 82.7635, -17.537, 0.37 ) }
    dend_0 { pt3dadd( -14.0123, 83.2483, -17.7009, 0.37 ) }
    dend_0 { pt3dadd( -13.6348, 84.3109, -18.0127, 0.37 ) }
    dend_0 { pt3dadd( -13.4275, 84.8719, -18.1599, 0.37 ) }
    dend_0 { pt3dadd( -13.2708, 85.3902, -18.2673, 0.37 ) }
    dend_0 { pt3dadd( -13.2541, 85.9671, -18.3089, 0.22 ) }
    dend_0 { pt3dadd( -13.2864, 86.37, -18.3171, 0.22 ) }
    dend_0 { pt3dadd( -13.3259, 86.622, -18.3071, 0.29 ) }
    dend_0 { pt3dadd( -13.4823, 87.347, -18.2479, 0.29 ) }
    dend_0 { pt3dadd( -13.7591, 88.5352, -18.1352, 0.29 ) }
    dend_0 { pt3dadd( -14.2556, 90.6849, -17.9919, 0.59 ) }
    dend_0 { pt3dadd( -14.465, 91.6119, -17.9717, 0.37 ) }
    dend_0 { pt3dadd( -14.6415, 92.3638, -17.9825, 0.22 ) }
    dend_0 { pt3dadd( -14.8101, 93.04, -18.0138, 0.22 ) }
    dend_0 { pt3dadd( -15.1255, 94.0923, -18.0976, 0.22 ) }
    dend_0 { pt3dadd( -15.8234, 95.7917, -18.3127, 0.37 ) }
    dend_0 { pt3dadd( -16.185, 96.473, -18.4734, 0.37 ) }
    dend_0 { pt3dadd( -16.5683, 97.0883, -18.6706, 0.37 ) }
    dend_0 { pt3dadd( -16.9195, 97.6022, -18.877, 0.37 ) }
    dend_0 { pt3dadd( -17.7023, 98.637, -19.3025, 0.37 ) }
    dend_0 { pt3dadd( -18.555, 99.6444, -19.698, 0.15 ) }
    dend_0 { pt3dadd( -19.2622, 100.424, -19.941, 0.15 ) }
    dend_0 { pt3dadd( -19.3419, 100.524, -19.9697, 0.29 ) }
    dend_0 { pt3dadd( -19.7353, 101.111, -20.1461, 0.29 ) }
    dend_0 { pt3dadd( -20.149, 101.887, -20.3887, 0.29 ) }
    dend_0 { pt3dadd( -20.4361, 102.622, -20.6276, 0.29 ) }
    dend_0 { pt3dadd( -20.6738, 103.421, -20.8554, 0.29 ) }
    dend_0 { pt3dadd( -21.0348, 104.887, -21.1576, 0.37 ) }
    dend_0 { pt3dadd( -21.1876, 105.655, -21.3168, 0.22 ) }
    dend_0 { pt3dadd( -21.2862, 106.262, -21.4147, 0.15 ) }
    dend_0 { pt3dadd( -21.3734, 106.933, -21.5108, 0.15 ) }
    dend_0 { pt3dadd( -21.5136, 108.54, -21.6729, 0.15 ) }
    dend_0 { pt3dadd( -21.656, 110.686, -21.7782, 0.29 ) }
    dend_0 { pt3dadd( -21.6799, 111.299, -21.7687, 0.22 ) }
    dend_0 { pt3dadd( -21.715, 112.599, -21.7107, 0.22 ) }
    dend_0 { pt3dadd( -21.724, 112.97, -21.6851, 0.29 ) }
    dend_0 { pt3dadd( -21.724, 113.547, -21.6106, 0.29 ) }
    dend_0 { pt3dadd( -21.7025, 114.384, -21.4648, 0.29 ) }
    dend_0 { pt3dadd( -21.6716, 115.245, -21.2933, 0.29 ) }
    dend_0 { pt3dadd( -21.6601, 115.582, -21.231, 0.29 ) }
    dend_0 { pt3dadd( -21.5779, 117.188, -20.9969, 0.29 ) }
    dend_0 { pt3dadd( -21.481, 119.101, -20.7345, 0.29 ) }
    dend_0 { pt3dadd( -21.4556, 119.655, -20.6584, 0.29 ) }
    dend_0 { pt3dadd( -21.4385, 120.151, -20.5928, 0.29 ) }
    dend_0 { pt3dadd( -21.4387, 121.939, -20.4424, 0.29 ) }
    dend_0 { pt3dadd( -21.4665, 123.512, -20.3983, 0.44 ) }
    dend_0 { pt3dadd( -21.5064, 124.352, -20.4223, 0.44 ) }
    dend_0 { pt3dadd( -21.5633, 125.392, -20.4935, 0.29 ) }
    dend_0 { pt3dadd( -21.6609, 126.829, -20.6163, 0.29 ) }
    dend_0 { pt3dadd( -21.8769, 129.248, -20.8641, 0.44 ) }
    dend_0 { pt3dadd( -21.9805, 130.124, -20.9802, 0.29 ) }
    dend_0 { pt3dadd( -22.2325, 131.88, -21.2747, 0.29 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 79/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 7.13381, -15.8561, -2.55963, 0.944631 ) }
    axon_0 { pt3dadd( 13.5893, -29.3959, -2.55963, 0.944631 ) }
    axon_0 { pt3dadd( 20.0449, -42.9357, -2.55963, 0.944631 ) }
    // Section: dend_74, id: dend_74, parent: dend_70 (entry count 82/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 35.7072, -30.6867, 10.5451, 1.33 ) }
    dend_74 { pt3dadd( 36.9662, -30.7211, 10.0868, 1.33 ) }
    dend_74 { pt3dadd( 37.9713, -30.8283, 9.7647, 1.33 ) }
    dend_74 { pt3dadd( 39.6495, -31.1485, 9.19365, 0.96 ) }
    dend_74 { pt3dadd( 40.665, -31.4492, 8.8072, 0.96 ) }
    dend_74 { pt3dadd( 41.0814, -31.62, 8.61997, 1.11 ) }
    dend_74 { pt3dadd( 41.683, -31.9781, 8.29496, 1.11 ) }
    dend_74 { pt3dadd( 42.3694, -32.6164, 7.81236, 0.88 ) }
    dend_74 { pt3dadd( 42.7667, -33.2156, 7.43741, 0.52 ) }
    dend_74 { pt3dadd( 43.1076, -33.8694, 7.00429, 0.52 ) }
    dend_74 { pt3dadd( 43.3844, -34.4397, 6.55418, 0.52 ) }
    dend_74 { pt3dadd( 43.8252, -35.3168, 5.81135, 1.03 ) }
    dend_74 { pt3dadd( 44.0951, -35.7944, 5.37971, 1.4 ) }
    dend_74 { pt3dadd( 44.4877, -36.3695, 4.84259, 1.4 ) }
    dend_74 { pt3dadd( 45.4885, -37.5713, 3.7309, 1.11 ) }
    dend_74 { pt3dadd( 46.0869, -38.1596, 3.19713, 0.66 ) }
    dend_74 { pt3dadd( 46.6552, -38.6345, 2.79506, 0.66 ) }
    dend_74 { pt3dadd( 47.445, -39.1883, 2.38053, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_74 { pt3dadd( 48.0784, -39.5989, 2.12412, 1.55 ) }
    dend_74 { pt3dadd( 48.5698, -39.905, 1.98602, 1.55 ) }
    dend_74 { pt3dadd( 49.2725, -40.3169, 1.88312, 1.55 ) }
    dend_74 { pt3dadd( 49.8931, -40.6652, 1.79064, 1.55 ) }
    dend_74 { pt3dadd( 50.9102, -41.2338, 1.57292, 1.25 ) }
    dend_74 { pt3dadd( 51.7807, -41.7453, 1.31872, 1.25 ) }
    dend_74 { pt3dadd( 52.3286, -42.0895, 1.10166, 1.25 ) }
    dend_74 { pt3dadd( 53.0054, -42.5473, 0.753541, 0.81 ) }
    dend_74 { pt3dadd( 53.8304, -43.1153, 0.266843, 0.66 ) }
    dend_74 { pt3dadd( 54.2474, -43.4086, 6.79553E-4, 0.66 ) }
    dend_74 { pt3dadd( 54.5465, -43.6294, -0.186115, 0.66 ) }
    dend_74 { pt3dadd( 54.8408, -43.8393, -0.318074, 0.66 ) }
    dend_74 { pt3dadd( 55.171, -44.0503, -0.41169, 0.66 ) }
    dend_74 { pt3dadd( 56.0954, -44.6305, -0.600325, 0.66 ) }
    dend_74 { pt3dadd( 56.518, -44.8896, -0.633247, 1.11 ) }
    dend_74 { pt3dadd( 57.3467, -45.3823, -0.645761, 1.47 ) }
    dend_74 { pt3dadd( 58.1926, -45.8761, -0.627768, 1.99 ) }
    dend_74 { pt3dadd( 59.0879, -46.414, -0.595685, 1.99 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 18/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 35.7072, -30.6867, 10.5451, 1.11 ) }
    dend_71 { pt3dadd( 36.5347, -31.2063, 12.0824, 1.11 ) }
    dend_71 { pt3dadd( 37.8365, -32.0275, 14.3135, 1.25 ) }
    dend_71 { pt3dadd( 38.7439, -32.5402, 15.8135, 1.25 ) }
    dend_71 { pt3dadd( 39.7012, -33.0037, 17.3712, 0.74 ) }
    dend_71 { pt3dadd( 40.1025, -33.1362, 18.011, 0.59 ) }
    dend_71 { pt3dadd( 40.5181, -33.1872, 18.6514, 0.59 ) }
    dend_71 { pt3dadd( 40.8248, -33.1582, 19.1923, 0.59 ) }
    dend_71 { pt3dadd( 41.2974, -32.9107, 20.0206, 0.44 ) }
    dend_71 { pt3dadd( 41.6064, -32.6521, 20.5665, 0.44 ) }
    dend_71 { pt3dadd( 42.3772, -31.8508, 21.9059, 0.44 ) }
    dend_71 { pt3dadd( 43.1608, -30.9232, 23.286, 0.44 ) }
    dend_71 { pt3dadd( 44.322, -29.4367, 25.2925, 0.44 ) }
    dend_71 { pt3dadd( 44.9694, -28.6001, 26.3455, 0.52 ) }
    dend_71 { pt3dadd( 45.4448, -28.0508, 27.0392, 0.52 ) }
    dend_71 { pt3dadd( 45.8555, -27.6905, 27.5302, 0.52 ) }
    dend_71 { pt3dadd( 46.4766, -27.4006, 28.0443, 0.52 ) }
    dend_71 { pt3dadd( 46.9028, -27.3514, 28.2988, 0.52 ) }
    dend_71 { pt3dadd( 47.1569, -27.375, 28.4243, 0.52 ) }
    dend_71 { pt3dadd( 48.0134, -27.6049, 28.8885, 0.52 ) }
    dend_71 { pt3dadd( 49.8287, -28.3, 29.9512, 0.52 ) }
    dend_71 { pt3dadd( 51.4637, -29.0656, 30.9488, 0.81 ) }
    dend_71 { pt3dadd( 52.3665, -29.5717, 31.5108, 1.03 ) }
    dend_71 { pt3dadd( 52.975, -29.9548, 31.8879, 1.03 ) }
    dend_71 { pt3dadd( 53.3988, -30.2295, 32.1306, 1.33 ) }
    dend_71 { pt3dadd( 53.8091, -30.4809, 32.3263, 1.33 ) }
    dend_71 { pt3dadd( 54.0274, -30.6026, 32.4042, 1.33 ) }
    dend_71 { pt3dadd( 55.0678, -31.0315, 32.6674, 0.59 ) }
    dend_71 { pt3dadd( 55.7257, -31.2417, 32.8111, 0.59 ) }
    dend_71 { pt3dadd( 57.0917, -31.565, 33.1114, 0.59 ) }
    dend_71 { pt3dadd( 58.385, -31.8089, 33.4244, 0.59 ) }
    dend_71 { pt3dadd( 59.1526, -31.9394, 33.6424, 0.59 ) }
    dend_71 { pt3dadd( 59.8886, -32.0746, 33.8893, 0.37 ) }
    dend_71 { pt3dadd( 60.9268, -32.2945, 34.324, 0.37 ) }
    dend_71 { pt3dadd( 61.1698, -32.4039, 34.4478, 0.37 ) }
    dend_71 { pt3dadd( 61.4341, -32.6806, 34.6009, 0.37 ) }
    dend_71 { pt3dadd( 61.8667, -33.3497, 34.7765, 0.37 ) }
    dend_71 { pt3dadd( 62.3484, -34.097, 34.8743, 0.37 ) }
    dend_71 { pt3dadd( 62.6995, -34.6198, 34.923, 0.74 ) }
    dend_71 { pt3dadd( 63.549, -35.6893, 34.9883, 1.18 ) }
    dend_71 { pt3dadd( 64.3971, -36.6151, 35.066, 0.52 ) }
    dend_71 { pt3dadd( 65.249, -37.4064, 35.1832, 0.52 ) }
    dend_71 { pt3dadd( 66.2393, -38.1777, 35.3928, 0.81 ) }
    dend_71 { pt3dadd( 66.8503, -38.5731, 35.6138, 0.81 ) }
    dend_71 { pt3dadd( 67.7822, -39.0607, 36.0995, 1.11 ) }
    dend_71 { pt3dadd( 68.1177, -39.1829, 36.3331, 1.11 ) }
    dend_71 { pt3dadd( 68.7278, -39.3297, 36.8542, 1.11 ) }
    dend_71 { pt3dadd( 69.2863, -39.4081, 37.3872, 1.11 ) }
    dend_71 { pt3dadd( 70.1052, -39.4485, 38.1606, 0.66 ) }
    dend_71 { pt3dadd( 70.4472, -39.4335, 38.4175, 0.66 ) }
    dend_71 { pt3dadd( 70.932, -39.3742, 38.7115, 0.66 ) }
    dend_71 { pt3dadd( 71.455, -39.3035, 38.9601, 0.66 ) }
    dend_71 { pt3dadd( 71.8975, -39.2553, 39.1269, 0.66 ) }
    dend_71 { pt3dadd( 72.6298, -39.2025, 39.3722, 0.15 ) }
    dend_71 { pt3dadd( 73.5855, -39.2015, 39.7254, 0.37 ) }
    dend_71 { pt3dadd( 73.8608, -39.2823, 39.9387, 0.37 ) }
    dend_71 { pt3dadd( 74.1908, -39.6617, 40.6629, 0.37 ) }
    dend_71 { pt3dadd( 74.3318, -39.9232, 41.1177, 0.37 ) }
    dend_71 { pt3dadd( 74.3977, -40.1376, 41.4709, 0.37 ) }
    dend_71 { pt3dadd( 74.4457, -40.5997, 42.2043, 0.37 ) }
    dend_71 { pt3dadd( 74.3897, -41.5801, 43.7571, 0.59 ) }
    dend_71 { pt3dadd( 74.2744, -42.3336, 45.0052, 0.59 ) }
    dend_71 { pt3dadd( 81.081, -45.8032, 50.9217, 0.59 ) }
    dend_71 { pt3dadd( 88.0687, -49.2689, 56.6256, 0.59 ) }
    dend_71 { pt3dadd( 94.6668, -53.6403, 62.1691, 0.59 ) }
    dend_71 { pt3dadd( 100.167, -57.9152, 68.8654, 0.59 ) }
    dend_71 { pt3dadd( 105.863, -62.2928, 75.3279, 0.59 ) }
    dend_71 { pt3dadd( 109.759, -68.0568, 82.0345, 0.59 ) }
    dend_71 { pt3dadd( 114.045, -74.7888, 87.4824, 0.59 ) }
    dend_71 { pt3dadd( 119.854, -80.3951, 92.7921, 0.59 ) }
    dend_71 { pt3dadd( 126.207, -83.7705, 99.2437, 0.59 ) }
    // Section: dend_61, id: dend_61, parent: dend_51 (entry count 89/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 12.8284, -28.0891, -5.22072, 1.55 ) }
    dend_61 { pt3dadd( 11.9033, -29.4645, -8.61015, 1.55 ) }
    dend_61 { pt3dadd( 10.723, -31.0409, -12.4615, 1.55 ) }
    dend_61 { pt3dadd( 9.97438, -31.9373, -14.5228, 1.84 ) }
    dend_61 { pt3dadd( 9.54944, -32.4179, -15.5061, 1.84 ) }
    dend_61 { pt3dadd( 9.01614, -33.0265, -16.602, 1.84 ) }
    dend_61 { pt3dadd( 8.62895, -33.4727, -17.2923, 1.84 ) }
    dend_61 { pt3dadd( 8.03636, -34.0487, -18.1086, 1.84 ) }
    dend_61 { pt3dadd( 7.15192, -34.9424, -18.9104, 1.84 ) }
    dend_61 { pt3dadd( 6.14188, -36.0043, -19.6452, 1.84 ) }
    dend_61 { pt3dadd( 5.40946, -36.7725, -20.0772, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_61 { pt3dadd( 4.31841, -38.0078, -20.5914, 1.18 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 1/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 12.8284, -28.0891, -5.22072, 1.25 ) }
    dend_52 { pt3dadd( 14.601, -29.9985, -5.31236, 1.25 ) }
    dend_52 { pt3dadd( 16.6889, -32.2475, -5.4203, 1.18 ) }
    dend_52 { pt3dadd( 18.0829, -33.7492, -5.49238, 1.03 ) }
    dend_52 { pt3dadd( 20.0798, -35.9001, -5.59561, 1.25 ) }
    dend_52 { pt3dadd( 22.7961, -38.826, -5.73604, 2.73 ) }
    // Section: dend_48, id: dend_48, parent: dend_24 (entry count 7/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -9.43025, -6.19231, 13.6873, 1.11 ) }
    dend_48 { pt3dadd( -8.86934, -7.56318, 13.7915, 1.11 ) }
    dend_48 { pt3dadd( -8.48617, -8.4905, 13.8543, 1.11 ) }
    dend_48 { pt3dadd( -7.94465, -9.81374, 13.9383, 1.03 ) }
    dend_48 { pt3dadd( -7.72857, -10.3554, 13.9719, 1.03 ) }
    dend_48 { pt3dadd( -7.41166, -11.1941, 14.0225, 1.03 ) }
    dend_48 { pt3dadd( -6.90266, -12.6392, 14.1073, 1.18 ) }
    dend_48 { pt3dadd( -6.65417, -13.3293, 14.1732, 1.18 ) }
    dend_48 { pt3dadd( -6.53089, -13.6909, 14.2215, 1.18 ) }
    dend_48 { pt3dadd( -6.32028, -14.3444, 14.3325, 1.03 ) }
    dend_48 { pt3dadd( -6.05871, -15.1962, 14.5028, 1.03 ) }
    dend_48 { pt3dadd( -5.91624, -15.6666, 14.6113, 1.03 ) }
    dend_48 { pt3dadd( -5.59156, -16.7894, 14.9057, 0.74 ) }
    dend_48 { pt3dadd( -5.37555, -17.4739, 15.084, 0.74 ) }
    dend_48 { pt3dadd( -5.16272, -18.1222, 15.2804, 0.74 ) }
    dend_48 { pt3dadd( -4.9715, -18.7021, 15.4811, 0.74 ) }
    dend_48 { pt3dadd( -4.84032, -19.0874, 15.62, 0.88 ) }
    dend_48 { pt3dadd( -4.56389, -19.8633, 15.8996, 0.88 ) }
    dend_48 { pt3dadd( -4.37539, -20.354, 16.0836, 0.88 ) }
    dend_48 { pt3dadd( -3.74562, -21.8577, 16.7154, 0.88 ) }
    dend_48 { pt3dadd( -3.46989, -22.4469, 16.9798, 0.88 ) }
    dend_48 { pt3dadd( -3.06391, -23.221, 17.3373, 0.88 ) }
    dend_48 { pt3dadd( -2.79381, -23.7572, 17.5739, 0.88 ) }
    dend_48 { pt3dadd( -2.37241, -24.6771, 17.952, 0.66 ) }
    dend_48 { pt3dadd( -2.14535, -25.2851, 18.1672, 0.44 ) }
    dend_48 { pt3dadd( -1.95397, -25.939, 18.3285, 0.44 ) }
    dend_48 { pt3dadd( -1.82297, -26.4874, 18.4385, 0.44 ) }
    dend_48 { pt3dadd( -1.53847, -27.7539, 18.6639, 0.44 ) }
    dend_48 { pt3dadd( -1.39568, -28.3138, 18.7469, 0.44 ) }
    dend_48 { pt3dadd( -1.22861, -28.8424, 18.8266, 0.44 ) }
    dend_48 { pt3dadd( -0.820333, -29.7195, 19.0595, 0.44 ) }
    dend_48 { pt3dadd( -0.495563, -30.1708, 19.2457, 0.44 ) }
    dend_48 { pt3dadd( 0.244764, -30.8146, 19.6359, 0.44 ) }
    dend_48 { pt3dadd( 0.863322, -31.1706, 19.943, 0.44 ) }
    dend_48 { pt3dadd( 1.38358, -31.429, 20.1983, 0.44 ) }
    dend_48 { pt3dadd( 2.25373, -31.8056, 20.6326, 0.07 ) }
    dend_48 { pt3dadd( 2.66435, -31.9551, 20.8624, 0.07 ) }
    dend_48 { pt3dadd( 3.46221, -32.2288, 21.3597, 0.07 ) }
    dend_48 { pt3dadd( 3.88604, -32.3543, 21.6658, 0.07 ) }
    dend_48 { pt3dadd( 6.18107, -37.7514, 22.2201, 0.07 ) }
    dend_48 { pt3dadd( 8.52495, -43.076, 23.146, 0.07 ) }
    dend_48 { pt3dadd( 11.3394, -48.2439, 23.4207, 0.07 ) }
    dend_48 { pt3dadd( 14.5575, -53.1491, 23.9551, 0.07 ) }
    dend_48 { pt3dadd( 18.7578, -57.1312, 25.0521, 0.07 ) }
    dend_48 { pt3dadd( 22.3841, -61.7727, 24.9596, 0.07 ) }
    dend_48 { pt3dadd( 25.7782, -66.569, 25.3828, 0.07 ) }
    dend_48 { pt3dadd( 29.1446, -71.3702, 24.818, 0.07 ) }
    dend_48 { pt3dadd( 32.806, -75.6585, 23.1131, 0.07 ) }
    dend_48 { pt3dadd( 36.2834, -80.0854, 21.3771, 0.07 ) }
    dend_48 { pt3dadd( 39.5583, -84.7426, 19.8641, 0.07 ) }
    dend_48 { pt3dadd( 43.1315, -89.3029, 18.7969, 0.07 ) }
    dend_48 { pt3dadd( 47.1358, -93.5831, 18.2065, 0.07 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 59/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -9.43025, -6.19231, 13.6873, 1.55 ) }
    dend_25 { pt3dadd( -11.1271, -6.0966, 14.6031, 1.55 ) }
    dend_25 { pt3dadd( -12.8217, -6.1201, 15.5529, 1.55 ) }
    dend_25 { pt3dadd( -14.8581, -6.14832, 16.6944, 1.55 ) }
    dend_25 { pt3dadd( -15.7855, -6.16118, 17.2142, 1.55 ) }
    dend_25 { pt3dadd( -16.9213, -6.17693, 17.8508, 1.55 ) }
    dend_25 { pt3dadd( -19.043, -6.20634, 19.0401, 1.55 ) }
    dend_25 { pt3dadd( -20.9088, -6.36215, 20.0624, 1.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 67/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 10.9742, 17.574, 11.5998, 2.14 ) }
    dend_9 { pt3dadd( 13.3998, 20.2182, 12.1822, 2.14 ) }
    dend_9 { pt3dadd( 15.5176, 22.247, 12.7699, 2.14 ) }
    dend_9 { pt3dadd( 17.8307, 24.4628, 13.4119, 2.43 ) }
    dend_9 { pt3dadd( 19.3402, 25.9088, 13.8308, 2.43 ) }
    dend_9 { pt3dadd( 20.0726, 26.6103, 14.034, 2.43 ) }
    dend_9 { pt3dadd( 22.4475, 28.8853, 14.6931, 2.28 ) }
    dend_9 { pt3dadd( 25.3577, 31.2651, 15.6066, 2.28 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 75/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 10.9742, 17.574, 11.5998, 0.81 ) }
    dend_6 { pt3dadd( 12.7385, 17.089, 11.9592, 0.81 ) }
    dend_6 { pt3dadd( 13.8841, 16.8054, 12.2812, 0.81 ) }
    dend_6 { pt3dadd( 14.9119, 16.5855, 12.7647, 0.81 ) }
    dend_6 { pt3dadd( 16.0845, 16.3792, 13.6468, 0.66 ) }
    dend_6 { pt3dadd( 16.8481, 16.2806, 14.4135, 0.66 ) }
    dend_6 { pt3dadd( 17.1759, 16.2494, 14.7763, 0.66 ) }
    dend_6 { pt3dadd( 17.5746, 16.2359, 15.3352, 0.96 ) }
    dend_6 { pt3dadd( 18.4732, 16.2699, 16.6662, 1.33 ) }
    dend_6 { pt3dadd( 19.2322, 16.3447, 17.7404, 1.77 ) }
    dend_6 { pt3dadd( 20.0263, 16.4221, 18.6904, 1.33 ) }
    dend_6 { pt3dadd( 20.6516, 16.4368, 19.2126, 0.44 ) }
    dend_6 { pt3dadd( 21.5094, 16.4259, 19.7242, 0.44 ) }
    dend_6 { pt3dadd( 22.0556, 16.4237, 19.9808, 0.44 ) }
    dend_6 { pt3dadd( 22.8685, 16.4536, 20.2702, 0.44 ) }
    dend_6 { pt3dadd( 24.2452, 16.5635, 20.7203, 0.44 ) }
    dend_6 { pt3dadd( 25.2332, 16.6656, 21.0469, 0.44 ) }
    dend_6 { pt3dadd( 27.07, 16.8758, 21.7706, 0.66 ) }
    dend_6 { pt3dadd( 27.9903, 16.9757, 22.2033, 0.66 ) }
    dend_6 { pt3dadd( 28.9778, 17.0714, 22.7444, 0.66 ) }
    dend_6 { pt3dadd( 29.7188, 17.1295, 23.23, 0.44 ) }
    dend_6 { pt3dadd( 30.1921, 17.1436, 23.6306, 0.44 ) }
    dend_6 { pt3dadd( 30.9614, 17.0787, 24.4666, 0.44 ) }
    dend_6 { pt3dadd( 31.2705, 16.9407, 24.9613, 1.11 ) }
    dend_6 { pt3dadd( 31.4776, 16.8108, 25.3727, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_6 { pt3dadd( 31.6382, 16.7023, 25.7504, 1.11 ) }
    dend_6 { pt3dadd( 31.8678, 16.5936, 26.3317, 1.4 ) }
    dend_6 { pt3dadd( 32.0807, 16.604, 26.9242, 1.77 ) }
    dend_6 { pt3dadd( 32.4389, 16.9617, 28.0772, 1.77 ) }
    dend_6 { pt3dadd( 32.7103, 17.4331, 29.033, 0.59 ) }
    dend_6 { pt3dadd( 32.8207, 17.6839, 29.4334, 0.59 ) }
    dend_6 { pt3dadd( 32.9806, 18.0903, 29.9895, 0.59 ) }
    dend_6 { pt3dadd( 33.2726, 18.8114, 30.8263, 0.59 ) }
    dend_6 { pt3dadd( 33.8665, 20.1946, 32.2419, 0.81 ) }
    dend_6 { pt3dadd( 33.9845, 20.4553, 32.4885, 0.81 ) }
    dend_6 { pt3dadd( 34.1368, 20.7571, 32.8058, 0.81 ) }
    dend_6 { pt3dadd( 34.2894, 20.9967, 33.0964, 0.81 ) }
    dend_6 { pt3dadd( 34.7184, 21.4781, 33.7902, 0.52 ) }
    dend_6 { pt3dadd( 35.1042, 21.7468, 34.2582, 0.29 ) }
    dend_6 { pt3dadd( 35.3231, 21.8539, 34.4008, 0.29 ) }
    dend_6 { pt3dadd( 35.8257, 22.0464, 34.7016, 0.29 ) }
    dend_6 { pt3dadd( 36.7464, 22.3297, 35.2145, 0.29 ) }
    dend_6 { pt3dadd( 43.8643, 25.9694, 40.6839, 0.29 ) }
    dend_6 { pt3dadd( 51.2195, 30.3164, 45.2481, 0.29 ) }
    dend_6 { pt3dadd( 59.5227, 34.3802, 48.1412, 0.29 ) }
    dend_6 { pt3dadd( 67.6595, 38.6127, 51.2565, 0.29 ) }
    dend_6 { pt3dadd( 75.2959, 43.9909, 53.8231, 0.29 ) }
    dend_6 { pt3dadd( 82.4108, 50.4469, 55.0582, 0.29 ) }
    dend_6 { pt3dadd( 89.3745, 57.1782, 55.2099, 0.29 ) }
    dend_6 { pt3dadd( 94.6865, 65.0182, 57.2454, 0.29 ) }
    dend_6 { pt3dadd( 98.0501, 73.8706, 59.2823, 0.29 ) }
    dend_6 { pt3dadd( 102.247, 82.242, 61.759, 0.29 ) }
    dend_6 { pt3dadd( 106.632, 90.6132, 63.8847, 0.29 ) }
    dend_6 { pt3dadd( 112.221, 98.433, 65.0844, 0.29 ) }
    dend_6 { pt3dadd( 118.82, 104.943, 67.8946, 0.29 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 30/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -22.2325, 131.88, -21.2747, 0.29 ) }
    dend_4 { pt3dadd( -21.6682, 133.235, -23.5172, 0.29 ) }
    dend_4 { pt3dadd( -21.4238, 133.759, -24.4696, 0.29 ) }
    dend_4 { pt3dadd( -21.1869, 134.216, -25.2063, 0.15 ) }
    dend_4 { pt3dadd( -20.8992, 134.77, -25.9907, 0.22 ) }
    dend_4 { pt3dadd( -20.1157, 136.224, -27.9373, 0.29 ) }
    dend_4 { pt3dadd( -19.3464, 137.605, -29.6191, 0.29 ) }
    dend_4 { pt3dadd( -18.8082, 138.54, -30.5983, 0.29 ) }
    dend_4 { pt3dadd( -17.9714, 140.049, -31.9776, 0.22 ) }
    dend_4 { pt3dadd( -16.9742, 141.923, -33.4207, 0.22 ) }
    dend_4 { pt3dadd( -16.7195, 142.421, -33.7324, 0.22 ) }
    dend_4 { pt3dadd( -15.7306, 144.498, -34.6349, 0.15 ) }
    dend_4 { pt3dadd( -15.1499, 145.841, -35.1045, 0.15 ) }
    dend_4 { pt3dadd( -14.686, 146.985, -35.4571, 0.07 ) }
    dend_4 { pt3dadd( -13.7655, 149.42, -36.1529, 0.07 ) }
    dend_4 { pt3dadd( -13.373, 150.508, -36.4182, 0.07 ) }
    dend_4 { pt3dadd( -12.2519, 153.735, -37.1192, 0.07 ) }
    dend_4 { pt3dadd( -11.7502, 155.237, -37.4262, 0.22 ) }
    dend_4 { pt3dadd( -11.4404, 156.189, -37.6124, 0.22 ) }
    dend_4 { pt3dadd( -11.016, 157.557, -37.8872, 0.22 ) }
    dend_4 { pt3dadd( -10.7147, 158.569, -38.1072, 0.22 ) }
    dend_4 { pt3dadd( -10.0154, 160.934, -38.6657, 0.22 ) }
    dend_4 { pt3dadd( -9.67775, 162.099, -38.9508, 0.22 ) }
    dend_4 { pt3dadd( -9.21554, 163.546, -39.3293, 0.22 ) }
    dend_4 { pt3dadd( -8.78046, 164.756, -39.7286, 0.15 ) }
    dend_4 { pt3dadd( -8.33764, 165.847, -40.1937, 0.15 ) }
    dend_4 { pt3dadd( -7.8068, 166.991, -40.7799, 0.15 ) }
    dend_4 { pt3dadd( -7.44534, 167.696, -41.1866, 0.15 ) }
    dend_4 { pt3dadd( -6.51173, 169.41, -42.202, 0.15 ) }
    dend_4 { pt3dadd( -5.8186, 170.713, -43.0903, 0.15 ) }
    dend_4 { pt3dadd( -5.39059, 171.628, -43.7191, 0.15 ) }
    dend_4 { pt3dadd( -4.97588, 172.697, -44.442, 0.15 ) }
    dend_4 { pt3dadd( -4.62202, 173.866, -45.2117, 0.15 ) }
    dend_4 { pt3dadd( -4.30202, 175.322, -46.1022, 0.15 ) }
    dend_4 { pt3dadd( -3.96086, 177.814, -47.4021, 0.15 ) }
    dend_4 { pt3dadd( -3.8807, 178.998, -47.9252, 0.15 ) }
    dend_4 { pt3dadd( -3.83421, 180.733, -48.5917, 0.07 ) }
    dend_4 { pt3dadd( -3.84607, 181.939, -49.0188, 0.07 ) }
    dend_4 { pt3dadd( -3.89753, 182.987, -49.3906, 0.07 ) }
    dend_4 { pt3dadd( -3.98916, 184.534, -49.9056, 0.07 ) }
    dend_4 { pt3dadd( -4.03483, 185.752, -50.2559, 0.07 ) }
    dend_4 { pt3dadd( -4.06634, 187.365, -50.7377, 0.07 ) }
    dend_4 { pt3dadd( -4.09727, 189.661, -51.4403, 0.07 ) }
    dend_4 { pt3dadd( -4.04075, 191.45, -51.9626, 0.07 ) }
    dend_4 { pt3dadd( -3.87523, 193.329, -52.4654, 0.07 ) }
    dend_4 { pt3dadd( -3.43191, 196.207, -53.1661, 0.07 ) }
    dend_4 { pt3dadd( -2.93136, 198.478, -53.6436, 0.07 ) }
    dend_4 { pt3dadd( -2.2948, 200.777, -54.0367, 0.07 ) }
    dend_4 { pt3dadd( -1.53713, 202.947, -54.3861, 0.07 ) }
    dend_4 { pt3dadd( -0.742274, 204.776, -54.753, 0.07 ) }
    dend_4 { pt3dadd( 0.395834, 206.927, -55.4059, 0.07 ) }
    dend_4 { pt3dadd( 1.30541, 208.224, -56.0044, 0.07 ) }
    dend_4 { pt3dadd( 1.69854, 208.679, -56.3615, 0.07 ) }
    dend_4 { pt3dadd( 2.79997, 209.783, -57.7256, 0.07 ) }
    dend_4 { pt3dadd( 4.11058, 211.031, -59.8775, 0.07 ) }
    dend_4 { pt3dadd( 4.90107, 211.779, -61.5047, 0.07 ) }
    dend_4 { pt3dadd( 5.65759, 212.539, -63.4351, 0.07 ) }
    dend_4 { pt3dadd( 6.8759, 213.967, -67.1791, 0.07 ) }
    dend_4 { pt3dadd( 7.28903, 214.58, -68.7104, 0.07 ) }
    dend_4 { pt3dadd( 7.44947, 214.887, -69.4487, 0.07 ) }
    dend_4 { pt3dadd( 7.68901, 215.611, -71.0924, 0.07 ) }
    dend_4 { pt3dadd( 7.78657, 216.294, -72.5745, 0.07 ) }
    dend_4 { pt3dadd( 7.75581, 216.8, -73.5732, 0.07 ) }
    dend_4 { pt3dadd( 7.7457, 217.341, -74.3359, 0.07 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 94/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -22.2325, 131.88, -21.2747, 0.07 ) }
    dend_1 { pt3dadd( -22.5001, 134.218, -21.4323, 0.07 ) }
    dend_1 { pt3dadd( -22.6998, 135.851, -21.5037, 0.15 ) }
    dend_1 { pt3dadd( -22.8888, 137.764, -21.5539, 0.15 ) }
    dend_1 { pt3dadd( -23.2602, 141.133, -21.6135, 0.15 ) }
    dend_1 { pt3dadd( -23.4554, 142.658, -21.6147, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_1 { pt3dadd( -23.7464, 144.86, -21.5707, 0.07 ) }
    dend_1 { pt3dadd( -23.8184, 145.409, -21.5267, 0.07 ) }
    dend_1 { pt3dadd( -24.3171, 148.364, -21.0806, 0.07 ) }
    dend_1 { pt3dadd( -24.7456, 150.769, -20.6601, 0.07 ) }
    dend_1 { pt3dadd( -25.1564, 153.022, -20.1938, 0.07 ) }
    dend_1 { pt3dadd( -25.4541, 154.549, -19.8509, 0.07 ) }
    dend_1 { pt3dadd( -25.89, 156.648, -19.3403, 0.07 ) }
    dend_1 { pt3dadd( -26.4481, 159.062, -18.6465, 0.07 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 8/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 20.0449, -42.9357, -2.55963, 0.287701 ) }
    axon_1 { pt3dadd( 26.5004, -56.4755, -2.55963, 0.287701 ) }
    axon_1 { pt3dadd( 32.9559, -70.0153, -2.55963, 0.287701 ) }
    // Section: dend_76, id: dend_76, parent: dend_74 (entry count 11/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 59.0879, -46.414, -0.595685, 0.29 ) }
    dend_76 { pt3dadd( 61.1707, -46.2327, -1.0421, 0.29 ) }
    dend_76 { pt3dadd( 62.9736, -46.0813, -1.40341, 0.44 ) }
    dend_76 { pt3dadd( 64.6348, -46.0245, -1.70875, 0.44 ) }
    dend_76 { pt3dadd( 68.0126, -46.1436, -2.28177, 0.44 ) }
    dend_76 { pt3dadd( 68.6581, -46.1888, -2.4115, 0.44 ) }
    dend_76 { pt3dadd( 70.2485, -46.3801, -2.75386, 0.44 ) }
    dend_76 { pt3dadd( 71.3141, -46.5689, -3.02256, 0.44 ) }
    dend_76 { pt3dadd( 73.7517, -47.2358, -3.62777, 0.44 ) }
    dend_76 { pt3dadd( 75.6469, -47.9267, -4.05886, 0.44 ) }
    dend_76 { pt3dadd( 77.5302, -48.7724, -4.45656, 0.29 ) }
    dend_76 { pt3dadd( 79.8665, -49.9246, -4.98633, 0.29 ) }
    dend_76 { pt3dadd( 81.2973, -50.6982, -5.32551, 0.29 ) }
    dend_76 { pt3dadd( 84.3792, -52.4882, -6.01895, 0.29 ) }
    dend_76 { pt3dadd( 86.1256, -53.5445, -6.393, 0.29 ) }
    dend_76 { pt3dadd( 87.5556, -54.4092, -6.66325, 0.22 ) }
    dend_76 { pt3dadd( 88.835, -55.1831, -6.85199, 0.22 ) }
    dend_76 { pt3dadd( 90.2318, -55.9771, -7.02355, 0.22 ) }
    dend_76 { pt3dadd( 92.5284, -57.2078, -7.25251, 0.22 ) }
    dend_76 { pt3dadd( 94.2871, -58.0356, -7.36685, 0.22 ) }
    dend_76 { pt3dadd( 95.1809, -58.4207, -7.38732, 0.22 ) }
    dend_76 { pt3dadd( 95.9335, -58.6937, -7.39656, 0.22 ) }
    dend_76 { pt3dadd( 97.3826, -59.1418, -7.38493, 0.22 ) }
    dend_76 { pt3dadd( 97.9473, -59.3045, -7.36781, 0.07 ) }
    dend_76 { pt3dadd( 98.6423, -59.4982, -7.37396, 0.07 ) }
    dend_76 { pt3dadd( 99.6583, -59.7718, -7.4429, 0.07 ) }
    dend_76 { pt3dadd( 101.954, -60.3983, -7.68669, 0.07 ) }
    dend_76 { pt3dadd( 102.868, -60.6537, -7.82137, 0.07 ) }
    dend_76 { pt3dadd( 106.858, -61.7033, -8.62187, 0.07 ) }
    dend_76 { pt3dadd( 109.103, -62.2498, -9.18437, 0.07 ) }
    dend_76 { pt3dadd( 111.533, -62.8162, -9.91567, 0.07 ) }
    dend_76 { pt3dadd( 112.592, -63.0569, -10.2972, 0.07 ) }
    dend_76 { pt3dadd( 114.314, -63.4536, -11.0706, 0.07 ) }
    dend_76 { pt3dadd( 115.942, -63.8391, -11.9819, 0.15 ) }
    dend_76 { pt3dadd( 117.194, -64.1756, -12.8635, 0.15 ) }
    dend_76 { pt3dadd( 117.732, -64.3637, -13.2594, 0.15 ) }
    dend_76 { pt3dadd( 118.038, -64.499, -13.4778, 0.15 ) }
    dend_76 { pt3dadd( 119.83, -65.2453, -14.668, 0.15 ) }
    dend_76 { pt3dadd( 121.602, -65.9051, -15.7336, 0.15 ) }
    dend_76 { pt3dadd( 122.832, -66.3149, -16.384, 0.15 ) }
    dend_76 { pt3dadd( 123.758, -66.5627, -16.7692, 0.15 ) }
    dend_76 { pt3dadd( 127.59, -67.3288, -18.1541, 0.07 ) }
    dend_76 { pt3dadd( 130.391, -67.704, -19.0131, 0.07 ) }
    dend_76 { pt3dadd( 131.698, -67.7839, -19.3397, 0.07 ) }
    dend_76 { pt3dadd( 132.953, -67.8248, -19.5976, 0.07 ) }
    dend_76 { pt3dadd( 136.7, -67.8226, -20.2908, 0.07 ) }
    dend_76 { pt3dadd( 138.415, -67.7923, -20.5557, 0.07 ) }
    dend_76 { pt3dadd( 139.477, -67.7955, -20.6746, 0.07 ) }
    dend_76 { pt3dadd( 141.357, -67.9463, -20.8531, 0.07 ) }
    dend_76 { pt3dadd( 142.722, -68.1562, -20.9871, 0.07 ) }
    dend_76 { pt3dadd( 144.416, -68.5464, -21.1358, 0.07 ) }
    dend_76 { pt3dadd( 145.794, -68.9999, -21.1839, 0.07 ) }
    dend_76 { pt3dadd( 149.162, -70.3927, -21.0817, 0.07 ) }
    dend_76 { pt3dadd( 151.743, -71.6032, -20.9066, 0.07 ) }
    dend_76 { pt3dadd( 153.33, -72.4392, -20.7453, 0.07 ) }
    dend_76 { pt3dadd( 156.185, -74.1021, -20.3711, 0.07 ) }
    dend_76 { pt3dadd( 160.177, -76.6828, -19.7117, 0.07 ) }
    dend_76 { pt3dadd( 162.592, -78.3236, -19.2317, 0.07 ) }
    dend_76 { pt3dadd( 164.755, -79.8241, -18.6911, 0.07 ) }
    dend_76 { pt3dadd( 166.829, -81.2168, -18.0713, 0.07 ) }
    dend_76 { pt3dadd( 168.983, -82.5437, -17.3635, 0.07 ) }
    dend_76 { pt3dadd( 170.831, -83.5321, -16.7209, 0.07 ) }
    dend_76 { pt3dadd( 172.783, -84.3767, -16.0214, 0.07 ) }
    dend_76 { pt3dadd( 174.402, -84.9137, -15.4051, 0.07 ) }
    dend_76 { pt3dadd( 176.193, -85.3064, -14.6604, 0.07 ) }
    dend_76 { pt3dadd( 177.731, -85.4532, -13.9928, 0.07 ) }
    dend_76 { pt3dadd( 180.716, -85.504, -12.6203, 0.07 ) }
    dend_76 { pt3dadd( 181.35, -85.5014, -12.3131, 0.07 ) }
    dend_76 { pt3dadd( 182.573, -85.5475, -11.714, 0.07 ) }
    dend_76 { pt3dadd( 185.013, -85.7855, -10.5037, 0.07 ) }
    dend_76 { pt3dadd( 187.278, -86.2111, -9.2741, 0.07 ) }
    dend_76 { pt3dadd( 189.591, -86.8122, -7.74386, 0.07 ) }
    dend_76 { pt3dadd( 190.365, -87.077, -7.12672, 0.07 ) }
    dend_76 { pt3dadd( 192.422, -87.9775, -5.31675, 0.07 ) }
    dend_76 { pt3dadd( 194.013, -88.8163, -3.77211, 0.07 ) }
    dend_76 { pt3dadd( 196.186, -90.1816, -1.34814, 0.07 ) }
    dend_76 { pt3dadd( 198.007, -91.4175, 0.846114, 0.07 ) }
    dend_76 { pt3dadd( 198.935, -92.0702, 2.02715, 0.07 ) }
    dend_76 { pt3dadd( 199.719, -92.6102, 3.08531, 0.07 ) }
    dend_76 { pt3dadd( 201.337, -93.6965, 5.51946, 0.07 ) }
    dend_76 { pt3dadd( 202.957, -94.7505, 8.03839, 0.07 ) }
    dend_76 { pt3dadd( 203.768, -95.1943, 9.19713, 0.07 ) }
    // Section: dend_75, id: dend_75, parent: dend_74 (entry count 93/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 59.0879, -46.414, -0.595685, 2.5 ) }
    dend_75 { pt3dadd( 59.111, -46.7625, -1.0717, 2.5 ) }
    dend_75 { pt3dadd( 59.1957, -47.9158, -2.55738, 0.52 ) }
    dend_75 { pt3dadd( 59.2409, -48.3701, -3.02428, 0.52 ) }
    dend_75 { pt3dadd( 59.3322, -49.0368, -3.67595, 0.52 ) }
    dend_75 { pt3dadd( 59.3889, -49.5617, -4.14471, 0.52 ) }
    dend_75 { pt3dadd( 59.4312, -50.2581, -4.74105, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_75 { pt3dadd( 59.4415, -50.6155, -5.02694, 0.52 ) }
    dend_75 { pt3dadd( 59.4564, -52.4308, -6.3649, 0.52 ) }
    dend_75 { pt3dadd( 59.4625, -53.4043, -6.97552, 0.37 ) }
    dend_75 { pt3dadd( 59.4756, -54.6428, -7.67954, 0.52 ) }
    dend_75 { pt3dadd( 59.5023, -55.6741, -8.24168, 0.52 ) }
    dend_75 { pt3dadd( 59.5185, -56.815, -8.8412, 0.52 ) }
    dend_75 { pt3dadd( 59.5229, -57.6223, -9.27793, 0.52 ) }
    dend_75 { pt3dadd( 59.4945, -60.3619, -10.8011, 0.37 ) }
    dend_75 { pt3dadd( 59.4865, -61.0505, -11.1881, 0.37 ) }
    dend_75 { pt3dadd( 59.4987, -61.7179, -11.5935, 0.07 ) }
    dend_75 { pt3dadd( 59.5268, -62.4455, -12.0582, 0.22 ) }
    dend_75 { pt3dadd( 59.5326, -63.7704, -12.9963, 0.22 ) }
    dend_75 { pt3dadd( 59.4936, -64.578, -13.6372, 0.07 ) }
    dend_75 { pt3dadd( 59.47, -64.9283, -13.9397, 0.07 ) }
    dend_75 { pt3dadd( 59.4422, -65.6777, -14.579, 0.22 ) }
    dend_75 { pt3dadd( 59.444, -66.0795, -14.9102, 0.22 ) }
    dend_75 { pt3dadd( 59.5147, -67.2947, -15.8574, 0.22 ) }
    dend_75 { pt3dadd( 59.636, -68.4469, -16.6665, 0.22 ) }
    dend_75 { pt3dadd( 59.8609, -69.9675, -17.6873, 0.44 ) }
    dend_75 { pt3dadd( 59.9816, -70.7519, -18.1978, 0.44 ) }
    dend_75 { pt3dadd( 60.0707, -71.3104, -18.5519, 0.44 ) }
    dend_75 { pt3dadd( 60.1534, -71.7659, -18.8423, 0.44 ) }
    dend_75 { pt3dadd( 60.2779, -72.3151, -19.1739, 0.44 ) }
    dend_75 { pt3dadd( 60.399, -72.8666, -19.5123, 0.44 ) }
    dend_75 { pt3dadd( 60.4951, -73.425, -19.8522, 0.44 ) }
    dend_75 { pt3dadd( 60.5865, -74.0534, -20.2233, 0.44 ) }
    dend_75 { pt3dadd( 60.6983, -74.8641, -20.6969, 0.44 ) }
    dend_75 { pt3dadd( 61.069, -77.6345, -22.2958, 0.37 ) }
    dend_75 { pt3dadd( 61.1438, -78.1516, -22.5856, 0.15 ) }
    dend_75 { pt3dadd( 61.2446, -78.7316, -22.8952, 0.15 ) }
    dend_75 { pt3dadd( 61.3833, -79.3739, -23.2147, 0.15 ) }
    dend_75 { pt3dadd( 61.4994, -79.8224, -23.4043, 0.15 ) }
    dend_75 { pt3dadd( 61.5689, -80.0576, -23.4917, 0.15 ) }
    dend_75 { pt3dadd( 61.9158, -81.1491, -23.8541, 0.15 ) }
    dend_75 { pt3dadd( 62.0919, -81.6871, -24.0291, 0.15 ) }
    dend_75 { pt3dadd( 62.5006, -82.9617, -24.3947, 0.15 ) }
    dend_75 { pt3dadd( 63.0095, -84.686, -24.8002, 0.15 ) }
    dend_75 { pt3dadd( 63.3128, -85.7409, -25.0373, 0.15 ) }
    dend_75 { pt3dadd( 63.5397, -86.5459, -25.2041, 0.15 ) }
    dend_75 { pt3dadd( 63.7407, -87.2928, -25.3371, 0.15 ) }
    dend_75 { pt3dadd( 64.0663, -88.5637, -25.5265, 0.15 ) }
    dend_75 { pt3dadd( 64.3022, -89.6514, -25.6388, 0.15 ) }
    // Section: dend_73, id: dend_73, parent: dend_71 (entry count 42/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 126.207, -83.7705, 99.2437, 0.29 ) }
    dend_73 { pt3dadd( 132.557, -83.1478, 104.465, 0.29 ) }
    dend_73 { pt3dadd( 139.487, -83.6336, 108.906, 0.29 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 45/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 126.207, -83.7705, 99.2437, 0.07 ) }
    dend_72 { pt3dadd( 127.708, -96.6085, 101.914, 0.29 ) }
    dend_72 { pt3dadd( 127.554, -109.005, 106.443, 0.29 ) }
    // Section: dend_67, id: dend_67, parent: dend_61 (entry count 48/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 4.31841, -38.0078, -20.5914, 0.66 ) }
    dend_67 { pt3dadd( 2.01263, -39.7843, -18.6011, 0.66 ) }
    dend_67 { pt3dadd( 1.85199, -39.9236, -18.4825, 0.66 ) }
    dend_67 { pt3dadd( 1.0237, -40.8137, -17.838, 0.37 ) }
    dend_67 { pt3dadd( 0.185972, -41.9679, -17.1429, 0.37 ) }
    dend_67 { pt3dadd( -0.601163, -43.3468, -16.4348, 0.37 ) }
    dend_67 { pt3dadd( -1.04181, -44.3154, -15.9981, 0.37 ) }
    dend_67 { pt3dadd( -1.41675, -45.4509, -15.6769, 0.37 ) }
    dend_67 { pt3dadd( -1.6097, -46.9084, -15.318, 0.37 ) }
    dend_67 { pt3dadd( -1.56836, -48.333, -14.985, 0.59 ) }
    dend_67 { pt3dadd( -1.38935, -49.4482, -14.7236, 0.59 ) }
    dend_67 { pt3dadd( -1.11193, -50.5423, -14.4441, 0.59 ) }
    dend_67 { pt3dadd( -0.784763, -51.6332, -14.1432, 0.59 ) }
    dend_67 { pt3dadd( 0.0776882, -54.401, -13.3455, 0.59 ) }
    dend_67 { pt3dadd( 0.40802, -55.5654, -13.0106, 0.44 ) }
    dend_67 { pt3dadd( 0.665486, -56.5153, -12.7295, 0.44 ) }
    dend_67 { pt3dadd( 0.920486, -57.4934, -12.4428, 0.44 ) }
    dend_67 { pt3dadd( 1.22416, -58.5669, -12.1535, 0.44 ) }
    dend_67 { pt3dadd( 1.58092, -59.7917, -11.8407, 0.44 ) }
    dend_67 { pt3dadd( 1.96791, -61.2378, -11.5078, 0.44 ) }
    dend_67 { pt3dadd( 2.1793, -62.1156, -11.3146, 0.44 ) }
    dend_67 { pt3dadd( 2.36135, -62.9649, -11.1315, 0.44 ) }
    dend_67 { pt3dadd( 2.72308, -64.7805, -10.7013, 0.44 ) }
    dend_67 { pt3dadd( 2.98194, -66.0892, -10.2972, 0.59 ) }
    dend_67 { pt3dadd( 3.26692, -67.5076, -9.7797, 0.59 ) }
    dend_67 { pt3dadd( 3.55339, -68.9455, -9.20574, 0.59 ) }
    dend_67 { pt3dadd( 3.9901, -71.2326, -8.25494, 0.44 ) }
    dend_67 { pt3dadd( 4.28524, -72.8932, -7.57027, 0.15 ) }
    dend_67 { pt3dadd( 4.57907, -74.7147, -6.85626, 0.15 ) }
    dend_67 { pt3dadd( 4.75106, -75.6176, -6.54991, 0.37 ) }
    dend_67 { pt3dadd( 4.95497, -76.5733, -6.27874, 0.37 ) }
    dend_67 { pt3dadd( 5.17548, -77.6138, -6.05614, 0.37 ) }
    dend_67 { pt3dadd( 5.49974, -79.2445, -5.8571, 0.37 ) }
    dend_67 { pt3dadd( 5.82756, -81.0415, -5.84687, 0.37 ) }
    dend_67 { pt3dadd( 6.08114, -82.7797, -5.94939, 0.37 ) }
    dend_67 { pt3dadd( 6.27943, -84.5122, -6.08639, 0.37 ) }
    dend_67 { pt3dadd( 6.33341, -85.6099, -6.17792, 0.37 ) }
    dend_67 { pt3dadd( 6.32106, -88.308, -6.40603, 0.37 ) }
    dend_67 { pt3dadd( 6.2368, -90.406, -6.59292, 0.07 ) }
    dend_67 { pt3dadd( 6.14706, -91.5882, -6.70378, 0.07 ) }
    dend_67 { pt3dadd( 5.99329, -92.9468, -6.82612, 0.07 ) }
    dend_67 { pt3dadd( 5.61829, -95.661, -7.0315, 0.07 ) }
    dend_67 { pt3dadd( 5.50495, -96.4163, -7.08271, 0.22 ) }
    dend_67 { pt3dadd( 5.36997, -97.1684, -7.13004, 0.22 ) }
    dend_67 { pt3dadd( 5.18028, -98.251, -7.21393, 0.22 ) }
    dend_67 { pt3dadd( 5.07457, -99.0601, -7.31688, 0.22 ) }
    dend_67 { pt3dadd( 4.94818, -100.687, -7.59629, 0.22 ) }
    dend_67 { pt3dadd( 4.96082, -103.299, -8.0571, 0.22 ) }
    dend_67 { pt3dadd( 4.993, -104.203, -8.1998, 0.22 ) }
    dend_67 { pt3dadd( 5.07969, -105.278, -8.32615, 0.22 ) }
    dend_67 { pt3dadd( 5.21145, -106.14, -8.375, 0.22 ) }
    dend_67 { pt3dadd( 5.43131, -107.108, -8.34863, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_67 { pt3dadd( 5.86676, -108.584, -8.13594, 0.29 ) }
    dend_67 { pt3dadd( 6.13792, -109.413, -7.88278, 0.29 ) }
    dend_67 { pt3dadd( 6.60483, -110.946, -7.21711, 0.29 ) }
    dend_67 { pt3dadd( 6.84969, -111.943, -6.71741, 0.29 ) }
    dend_67 { pt3dadd( 7.10403, -113.231, -6.03947, 0.29 ) }
    dend_67 { pt3dadd( 7.25995, -114.184, -5.52667, 0.29 ) }
    dend_67 { pt3dadd( 7.47173, -115.787, -4.7083, 0.29 ) }
    dend_67 { pt3dadd( 7.67266, -117.829, -3.72974, 0.29 ) }
    dend_67 { pt3dadd( 7.75545, -119.474, -3.00213, 0.15 ) }
    dend_67 { pt3dadd( 7.76829, -120.198, -2.72383, 0.15 ) }
    dend_67 { pt3dadd( 7.77489, -120.895, -2.49343, 0.15 ) }
    dend_67 { pt3dadd( 7.78247, -122.748, -2.04697, 0.15 ) }
    dend_67 { pt3dadd( 7.77993, -124.633, -1.6973, 0.15 ) }
    dend_67 { pt3dadd( 7.78197, -125.949, -1.52245, 0.15 ) }
    dend_67 { pt3dadd( 7.79412, -127.47, -1.33879, 0.15 ) }
    dend_67 { pt3dadd( 7.79796, -128.687, -1.20731, 0.15 ) }
    dend_67 { pt3dadd( 7.79548, -130.889, -1.00793, 0.15 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 17/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 4.31841, -38.0078, -20.5914, 0.52 ) }
    dend_62 { pt3dadd( 4.04781, -38.7384, -21.5314, 0.52 ) }
    dend_62 { pt3dadd( 3.96138, -39.2675, -22.1643, 0.52 ) }
    dend_62 { pt3dadd( 3.88041, -40.463, -23.5745, 0.74 ) }
    dend_62 { pt3dadd( 3.79868, -41.4982, -24.8366, 0.74 ) }
    dend_62 { pt3dadd( 3.71692, -42.0667, -25.5541, 0.74 ) }
    dend_62 { pt3dadd( 3.42152, -43.3224, -27.1996, 0.74 ) }
    dend_62 { pt3dadd( 3.20093, -44.1722, -28.2228, 0.74 ) }
    dend_62 { pt3dadd( 2.9809, -44.8079, -28.9467, 0.74 ) }
    dend_62 { pt3dadd( 2.61198, -45.434, -29.6274, 0.74 ) }
    dend_62 { pt3dadd( 1.86839, -46.1799, -30.4684, 1.4 ) }
    dend_62 { pt3dadd( 1.13424, -46.7245, -31.089, 1.4 ) }
    dend_62 { pt3dadd( 0.214979, -47.2793, -31.67, 1.4 ) }
    dend_62 { pt3dadd( -0.627753, -47.7601, -32.1335, 1.69 ) }
    dend_62 { pt3dadd( -2.64959, -48.8832, -33.1538, 1.69 ) }
    dend_62 { pt3dadd( -4.45028, -49.9499, -34.0207, 1.69 ) }
    dend_62 { pt3dadd( -5.49919, -50.6206, -34.5156, 1.69 ) }
    dend_62 { pt3dadd( -7.10306, -51.7728, -35.3216, 1.11 ) }
    dend_62 { pt3dadd( -8.20693, -52.6747, -35.9395, 0.88 ) }
    dend_62 { pt3dadd( -8.67053, -53.1503, -36.2356, 0.88 ) }
    dend_62 { pt3dadd( -9.53335, -54.3798, -36.9648, 0.88 ) }
    dend_62 { pt3dadd( -9.86715, -55.0775, -37.4028, 0.88 ) }
    dend_62 { pt3dadd( -10.26, -56.1425, -38.1332, 0.88 ) }
    dend_62 { pt3dadd( -10.5538, -57.0526, -38.8157, 1.18 ) }
    dend_62 { pt3dadd( -10.8805, -57.9313, -39.5283, 1.18 ) }
    dend_62 { pt3dadd( -11.6078, -59.349, -40.8849, 1.47 ) }
    dend_62 { pt3dadd( -12.0332, -59.9119, -41.513, 1.47 ) }
    dend_62 { pt3dadd( -12.4657, -60.3206, -42.0563, 1.47 ) }
    dend_62 { pt3dadd( -13.3674, -60.9358, -43.024, 1.18 ) }
    dend_62 { pt3dadd( -14.1833, -61.4194, -43.8635, 1.18 ) }
    dend_62 { pt3dadd( -15.1245, -62.0002, -44.8732, 1.18 ) }
    dend_62 { pt3dadd( -15.8483, -62.4741, -45.6736, 0.74 ) }
    dend_62 { pt3dadd( -16.7571, -63.1388, -46.7319, 0.74 ) }
    dend_62 { pt3dadd( -17.1546, -63.4573, -47.2427, 0.74 ) }
    dend_62 { pt3dadd( -18.5136, -64.588, -49.0993, 0.74 ) }
    dend_62 { pt3dadd( -19.6251, -65.5749, -50.6328, 0.74 ) }
    dend_62 { pt3dadd( -19.8557, -65.7961, -50.9474, 0.74 ) }
    dend_62 { pt3dadd( -20.9656, -66.8814, -52.4091, 0.74 ) }
    dend_62 { pt3dadd( -22.0032, -67.9612, -53.6757, 0.74 ) }
    dend_62 { pt3dadd( -23.053, -69.0958, -54.9159, 0.74 ) }
    dend_62 { pt3dadd( -23.8199, -69.8607, -55.6735, 0.74 ) }
    dend_62 { pt3dadd( -24.5048, -70.543, -56.2449, 0.15 ) }
    dend_62 { pt3dadd( -25.0657, -71.1319, -56.7231, 0.15 ) }
    dend_62 { pt3dadd( -25.7076, -71.9058, -57.3205, 0.15 ) }
    dend_62 { pt3dadd( -26.2291, -72.5923, -57.7987, 0.15 ) }
    dend_62 { pt3dadd( -27.129, -73.8342, -58.721, 0.15 ) }
    dend_62 { pt3dadd( -27.758, -74.6522, -59.4304, 0.15 ) }
    dend_62 { pt3dadd( -29.2113, -76.402, -61.0639, 0.52 ) }
    dend_62 { pt3dadd( -30.1682, -77.4705, -62.0761, 0.52 ) }
    dend_62 { pt3dadd( -30.6747, -77.9775, -62.6028, 0.52 ) }
    dend_62 { pt3dadd( -31.4401, -78.6694, -63.3755, 0.52 ) }
    dend_62 { pt3dadd( -32.4109, -79.3968, -64.312, 0.52 ) }
    dend_62 { pt3dadd( -33.6455, -80.0809, -65.3659, 0.52 ) }
    dend_62 { pt3dadd( -34.4945, -80.4117, -65.9695, 0.52 ) }
    dend_62 { pt3dadd( -35.7697, -80.7639, -66.8202, 0.52 ) }
    dend_62 { pt3dadd( -36.8618, -81.021, -67.5434, 0.44 ) }
    dend_62 { pt3dadd( -38.4007, -81.3513, -68.4818, 0.44 ) }
    dend_62 { pt3dadd( -39.8777, -81.6789, -69.3475, 0.44 ) }
    dend_62 { pt3dadd( -40.7002, -81.871, -69.8098, 0.44 ) }
    dend_62 { pt3dadd( -42.4399, -82.3997, -70.7547, 0.44 ) }
    dend_62 { pt3dadd( -43.547, -82.8332, -71.3231, 0.44 ) }
    dend_62 { pt3dadd( -45.1868, -83.6555, -72.1421, 0.29 ) }
    dend_62 { pt3dadd( -46.299, -84.3422, -72.6929, 0.29 ) }
    dend_62 { pt3dadd( -47.4888, -85.1618, -73.2692, 0.29 ) }
    dend_62 { pt3dadd( -48.9111, -86.2351, -73.9438, 0.29 ) }
    dend_62 { pt3dadd( -49.8009, -86.9424, -74.3497, 0.29 ) }
    dend_62 { pt3dadd( -50.8978, -87.859, -74.8673, 0.29 ) }
    dend_62 { pt3dadd( -51.824, -88.6349, -75.3115, 0.29 ) }
    dend_62 { pt3dadd( -52.361, -89.0796, -75.5554, 0.29 ) }
    dend_62 { pt3dadd( -53.1667, -89.7326, -75.9268, 0.29 ) }
    dend_62 { pt3dadd( -54.3501, -90.6562, -76.5369, 0.29 ) }
    dend_62 { pt3dadd( -55.0862, -91.2288, -76.9579, 0.29 ) }
    dend_62 { pt3dadd( -56.5397, -92.3868, -77.8644, 0.29 ) }
    dend_62 { pt3dadd( -57.8538, -93.4862, -78.7238, 0.29 ) }
    dend_62 { pt3dadd( -59.0067, -94.5619, -79.497, 0.29 ) }
    dend_62 { pt3dadd( -60.3214, -95.8755, -80.3899, 0.07 ) }
    dend_62 { pt3dadd( -60.7814, -96.3798, -80.7573, 0.07 ) }
    dend_62 { pt3dadd( -61.2535, -96.9345, -81.1751, 0.07 ) }
    dend_62 { pt3dadd( -61.6467, -97.4575, -81.558, 0.07 ) }
    dend_62 { pt3dadd( -63.0942, -99.4836, -82.9358, 0.07 ) }
    dend_62 { pt3dadd( -64.1817, -101.081, -83.8644, 0.22 ) }
    dend_62 { pt3dadd( -65.3879, -102.896, -84.7875, 0.22 ) }
    dend_62 { pt3dadd( -65.9197, -103.742, -85.2581, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_62 { pt3dadd( -66.5313, -104.779, -85.9204, 0.22 ) }
    dend_62 { pt3dadd( -66.9423, -105.567, -86.4681, 0.22 ) }
    dend_62 { pt3dadd( -67.2937, -106.388, -87.0957, 0.22 ) }
    dend_62 { pt3dadd( -67.564, -107.132, -87.6759, 0.22 ) }
    dend_62 { pt3dadd( -68.2822, -109.062, -89.1297, 0.22 ) }
    dend_62 { pt3dadd( -68.6822, -110.059, -90.0191, 0.22 ) }
    dend_62 { pt3dadd( -68.8454, -110.414, -90.3791, 0.22 ) }
    dend_62 { pt3dadd( -69.1404, -110.976, -90.9802, 0.22 ) }
    dend_62 { pt3dadd( -69.5727, -111.655, -91.7129, 0.22 ) }
    dend_62 { pt3dadd( -70.101, -112.35, -92.4396, 0.22 ) }
    dend_62 { pt3dadd( -70.8718, -113.249, -93.2855, 0.22 ) }
    dend_62 { pt3dadd( -71.2782, -113.719, -93.6856, 0.22 ) }
    dend_62 { pt3dadd( -71.8994, -114.464, -94.2824, 0.22 ) }
    dend_62 { pt3dadd( -72.8366, -115.671, -95.1721, 0.22 ) }
    dend_62 { pt3dadd( -73.3569, -116.353, -95.6358, 0.22 ) }
    dend_62 { pt3dadd( -73.8326, -116.982, -96.0516, 0.22 ) }
    dend_62 { pt3dadd( -74.8224, -118.272, -96.8512, 0.22 ) }
    dend_62 { pt3dadd( -75.662, -119.231, -97.47, 0.22 ) }
    dend_62 { pt3dadd( -76.4377, -120.003, -97.9704, 0.22 ) }
    dend_62 { pt3dadd( -77.5215, -120.976, -98.6177, 0.22 ) }
    dend_62 { pt3dadd( -78.3939, -121.672, -99.0976, 0.22 ) }
    dend_62 { pt3dadd( -79.0415, -122.139, -99.4445, 0.22 ) }
    dend_62 { pt3dadd( -82.4621, -124.42, -101.288, 0.22 ) }
    dend_62 { pt3dadd( -83.5485, -125.129, -101.854, 0.22 ) }
    dend_62 { pt3dadd( -85.3258, -126.279, -102.79, 0.22 ) }
    dend_62 { pt3dadd( -87.0476, -127.448, -103.741, 0.22 ) }
    dend_62 { pt3dadd( -88.3916, -128.394, -104.494, 0.22 ) }
    dend_62 { pt3dadd( -89.5264, -129.249, -105.175, 0.22 ) }
    dend_62 { pt3dadd( -90.8173, -130.319, -106.068, 0.22 ) }
    dend_62 { pt3dadd( -91.6672, -131.083, -106.746, 0.22 ) }
    dend_62 { pt3dadd( -92.8316, -132.194, -107.736, 0.22 ) }
    dend_62 { pt3dadd( -93.2941, -132.652, -108.142, 0.22 ) }
    dend_62 { pt3dadd( -94.2465, -133.609, -108.996, 0.22 ) }
    dend_62 { pt3dadd( -95.2719, -134.568, -109.935, 0.22 ) }
    dend_62 { pt3dadd( -96.0121, -135.195, -110.647, 0.22 ) }
    dend_62 { pt3dadd( -97.4227, -136.242, -111.89, 0.22 ) }
    dend_62 { pt3dadd( -98.2755, -136.807, -112.646, 0.22 ) }
    dend_62 { pt3dadd( -99.3755, -137.481, -113.563, 0.22 ) }
    dend_62 { pt3dadd( -100.944, -138.432, -114.795, 0.22 ) }
    dend_62 { pt3dadd( -102.356, -139.325, -115.927, 0.22 ) }
    dend_62 { pt3dadd( -103.801, -140.316, -117.112, 0.07 ) }
    dend_62 { pt3dadd( -104.967, -141.198, -118.086, 0.07 ) }
    dend_62 { pt3dadd( -106.088, -142.135, -119.001, 0.07 ) }
    dend_62 { pt3dadd( -107.01, -142.987, -119.689, 0.07 ) }
    dend_62 { pt3dadd( -108.078, -144.189, -120.452, 0.07 ) }
    dend_62 { pt3dadd( -109.108, -145.521, -121.129, 0.07 ) }
    dend_62 { pt3dadd( -109.765, -146.445, -121.553, 0.07 ) }
    dend_62 { pt3dadd( -110.543, -147.609, -122.008, 0.07 ) }
    dend_62 { pt3dadd( -111.13, -148.538, -122.359, 0.07 ) }
    dend_62 { pt3dadd( -112.083, -150.002, -122.837, 0.07 ) }
    dend_62 { pt3dadd( -113.076, -151.547, -123.338, 0.07 ) }
    dend_62 { pt3dadd( -113.752, -152.587, -123.781, 0.07 ) }
    dend_62 { pt3dadd( -114.423, -153.614, -124.274, 0.07 ) }
    dend_62 { pt3dadd( -115.313, -154.964, -124.957, 0.07 ) }
    dend_62 { pt3dadd( -116.592, -156.936, -125.972, 0.07 ) }
    dend_62 { pt3dadd( -117.85, -158.92, -127.005, 0.07 ) }
    dend_62 { pt3dadd( -119.086, -160.887, -128.076, 0.07 ) }
    dend_62 { pt3dadd( -119.793, -162.013, -128.708, 0.07 ) }
    dend_62 { pt3dadd( -120.33, -162.857, -129.185, 0.07 ) }
    dend_62 { pt3dadd( -121.298, -164.537, -130.109, 0.07 ) }
    dend_62 { pt3dadd( -121.607, -165.1, -130.4, 0.07 ) }
    dend_62 { pt3dadd( -122.335, -166.392, -131.041, 0.07 ) }
    dend_62 { pt3dadd( -122.874, -167.302, -131.484, 0.07 ) }
    dend_62 { pt3dadd( -123.7, -168.665, -132.198, 0.07 ) }
    dend_62 { pt3dadd( -125.261, -171.159, -133.591, 0.07 ) }
    dend_62 { pt3dadd( -126.077, -172.389, -134.332, 0.07 ) }
    dend_62 { pt3dadd( -127.539, -174.577, -135.655, 0.15 ) }
    dend_62 { pt3dadd( -128.707, -176.352, -136.685, 0.15 ) }
    // Section: dend_56, id: dend_56, parent: dend_52 (entry count 68/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 22.7961, -38.826, -5.73604, 0.52 ) }
    dend_56 { pt3dadd( 24.6788, -38.8322, -4.26373, 0.52 ) }
    dend_56 { pt3dadd( 27.3663, -38.6956, -2.00759, 1.25 ) }
    dend_56 { pt3dadd( 29.4522, -38.5252, -0.216741, 1.33 ) }
    dend_56 { pt3dadd( 30.5816, -38.4108, 0.761966, 1.11 ) }
    dend_56 { pt3dadd( 31.6538, -38.2868, 1.67213, 1.11 ) }
    dend_56 { pt3dadd( 33.0056, -38.1362, 2.78007, 1.11 ) }
    dend_56 { pt3dadd( 33.7898, -37.9683, 3.44756, 1.11 ) }
    dend_56 { pt3dadd( 34.2895, -37.861, 3.83863, 1.11 ) }
    dend_56 { pt3dadd( 34.6121, -37.8779, 4.06748, 1.11 ) }
    dend_56 { pt3dadd( 35.3751, -38.1736, 4.42478, 0.81 ) }
    dend_56 { pt3dadd( 36.0592, -38.6525, 4.61213, 0.81 ) }
    dend_56 { pt3dadd( 36.5801, -39.0875, 4.67576, 0.96 ) }
    dend_56 { pt3dadd( 37.7609, -40.0881, 4.74992, 0.96 ) }
    dend_56 { pt3dadd( 38.3534, -40.5566, 4.7733, 0.96 ) }
    dend_56 { pt3dadd( 39.1712, -41.0722, 4.85293, 0.81 ) }
    dend_56 { pt3dadd( 39.4526, -41.1715, 4.90644, 0.81 ) }
    dend_56 { pt3dadd( 40.1283, -41.2632, 5.09616, 0.81 ) }
    dend_56 { pt3dadd( 41.3573, -41.3135, 5.55365, 0.81 ) }
    dend_56 { pt3dadd( 41.866, -41.307, 5.77002, 0.81 ) }
    dend_56 { pt3dadd( 43.2496, -41.2566, 6.41944, 0.81 ) }
    dend_56 { pt3dadd( 44.8719, -41.1822, 7.25324, 0.81 ) }
    dend_56 { pt3dadd( 46.7378, -41.1239, 8.2271, 0.96 ) }
    dend_56 { pt3dadd( 48.3804, -41.1232, 9.08727, 0.96 ) }
    dend_56 { pt3dadd( 49.8304, -41.1496, 9.87052, 1.11 ) }
    dend_56 { pt3dadd( 50.573, -41.1604, 10.2787, 1.11 ) }
    dend_56 { pt3dadd( 50.9617, -41.1534, 10.4976, 1.11 ) }
    dend_56 { pt3dadd( 51.7429, -41.1, 10.9961, 0.37 ) }
    dend_56 { pt3dadd( 52.3487, -40.9881, 11.4517, 0.37 ) }
    dend_56 { pt3dadd( 52.7036, -40.8644, 11.7769, 0.37 ) }
    dend_56 { pt3dadd( 53.0022, -40.6918, 12.1543, 0.37 ) }
    dend_56 { pt3dadd( 53.3158, -40.4802, 12.5962, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_56 { pt3dadd( 53.6144, -40.2806, 12.9949, 0.52 ) }
    dend_56 { pt3dadd( 54.24, -39.9893, 13.6664, 0.52 ) }
    dend_56 { pt3dadd( 54.4615, -39.9445, 13.8379, 0.52 ) }
    dend_56 { pt3dadd( 54.9775, -39.9765, 14.1007, 0.52 ) }
    dend_56 { pt3dadd( 55.4662, -40.2132, 14.2576, 0.52 ) }
    dend_56 { pt3dadd( 56.1942, -40.8339, 14.4088, 0.52 ) }
    dend_56 { pt3dadd( 57.2786, -41.9789, 14.6165, 0.52 ) }
    dend_56 { pt3dadd( 57.9061, -42.7072, 14.7455, 1.11 ) }
    dend_56 { pt3dadd( 58.2336, -43.119, 14.8598, 1.11 ) }
    dend_56 { pt3dadd( 59.3215, -44.647, 15.6683, 1.11 ) }
    dend_56 { pt3dadd( 59.7517, -45.3288, 16.2692, 0.66 ) }
    dend_56 { pt3dadd( 59.976, -45.7367, 16.7886, 0.66 ) }
    dend_56 { pt3dadd( 60.225, -46.2475, 17.6422, 0.66 ) }
    dend_56 { pt3dadd( 60.5782, -46.9807, 19.0835, 0.81 ) }
    dend_56 { pt3dadd( 61.1179, -48.0611, 21.4532, 1.11 ) }
    dend_56 { pt3dadd( 61.422, -48.6321, 22.8514, 1.11 ) }
    dend_56 { pt3dadd( 61.6031, -48.9971, 23.6874, 1.11 ) }
    dend_56 { pt3dadd( 61.7433, -49.2647, 24.1953, 1.11 ) }
    dend_56 { pt3dadd( 61.9538, -49.6299, 24.7518, 1.11 ) }
    dend_56 { pt3dadd( 62.3502, -50.0048, 25.1658, 1.11 ) }
    dend_56 { pt3dadd( 62.9653, -50.287, 25.4274, 0.66 ) }
    dend_56 { pt3dadd( 63.8289, -50.4417, 25.6819, 0.37 ) }
    dend_56 { pt3dadd( 65.0528, -50.4743, 25.9876, 0.37 ) }
    dend_56 { pt3dadd( 65.3801, -50.4582, 26.0536, 0.37 ) }
    dend_56 { pt3dadd( 67.4623, -50.3018, 26.4199, 0.74 ) }
    dend_56 { pt3dadd( 68.5481, -50.2343, 26.6288, 0.37 ) }
    dend_56 { pt3dadd( 69.7581, -50.1778, 26.882, 0.37 ) }
    dend_56 { pt3dadd( 71.1525, -50.1067, 27.199, 0.37 ) }
    dend_56 { pt3dadd( 72.6548, -50.0709, 27.5381, 0.44 ) }
    dend_56 { pt3dadd( 73.4688, -50.1238, 27.7088, 0.44 ) }
    dend_56 { pt3dadd( 75.0142, -50.3922, 28.0004, 0.44 ) }
    dend_56 { pt3dadd( 75.9827, -50.5854, 28.1305, 0.44 ) }
    dend_56 { pt3dadd( 77.2463, -50.8362, 28.2632, 0.44 ) }
    dend_56 { pt3dadd( 78.0769, -50.9751, 28.3575, 0.22 ) }
    dend_56 { pt3dadd( 79.3984, -51.1606, 28.5105, 0.22 ) }
    dend_56 { pt3dadd( 80.0466, -51.225, 28.5607, 0.22 ) }
    dend_56 { pt3dadd( 81.6202, -51.3471, 28.5624, 0.07 ) }
    dend_56 { pt3dadd( 82.915, -51.4782, 28.5251, 0.07 ) }
    dend_56 { pt3dadd( 85.2657, -51.796, 28.4228, 0.07 ) }
    dend_56 { pt3dadd( 92.6734, -53.1703, 33.8482, 0.07 ) }
    dend_56 { pt3dadd( 99.5931, -55.6041, 39.5395, 0.07 ) }
    dend_56 { pt3dadd( 106.981, -58.9622, 44.0492, 0.07 ) }
    dend_56 { pt3dadd( 115.188, -61.4911, 47.5773, 0.07 ) }
    dend_56 { pt3dadd( 122.728, -65.4068, 51.3205, 0.07 ) }
    dend_56 { pt3dadd( 131.271, -67.813, 54.0445, 0.07 ) }
    dend_56 { pt3dadd( 140.082, -68.6997, 56.8332, 0.07 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 46/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 22.7961, -38.826, -5.73604, 1.4 ) }
    dend_53 { pt3dadd( 22.3135, -41.3814, -6.03348, 1.4 ) }
    dend_53 { pt3dadd( 21.9984, -43.0858, -6.1807, 1.25 ) }
    dend_53 { pt3dadd( 21.5127, -45.33, -6.32682, 0.88 ) }
    dend_53 { pt3dadd( 21.2203, -46.5221, -6.37104, 0.88 ) }
    dend_53 { pt3dadd( 20.7123, -48.2667, -6.39135, 1.18 ) }
    dend_53 { pt3dadd( 20.2366, -49.7279, -6.38373, 1.69 ) }
    dend_53 { pt3dadd( 19.7277, -51.1535, -6.32552, 2.14 ) }
    dend_53 { pt3dadd( 19.274, -52.2449, -6.2335, 2.14 ) }
    dend_53 { pt3dadd( 18.1148, -54.6293, -6.00363, 2.43 ) }
    dend_53 { pt3dadd( 16.9267, -56.7808, -5.77208, 2.06 ) }
    dend_53 { pt3dadd( 16.2481, -57.8751, -5.63915, 2.06 ) }
    dend_53 { pt3dadd( 15.0209, -59.7573, -5.37618, 2.28 ) }
    dend_53 { pt3dadd( 13.9248, -61.3991, -5.12076, 2.28 ) }
    dend_53 { pt3dadd( 13.1032, -62.6876, -4.90532, 2.28 ) }
    dend_53 { pt3dadd( 12.2935, -63.9724, -4.66395, 1.69 ) }
    dend_53 { pt3dadd( 11.3398, -65.6098, -4.33514, 1.55 ) }
    dend_53 { pt3dadd( 10.6623, -66.8558, -4.07348, 1.55 ) }
    dend_53 { pt3dadd( 9.83795, -68.4695, -3.71927, 1.33 ) }
    dend_53 { pt3dadd( 9.10244, -70.0672, -3.3135, 1.33 ) }
    dend_53 { pt3dadd( 8.66104, -71.0898, -3.0319, 0.44 ) }
    dend_53 { pt3dadd( 8.43309, -71.6678, -2.86515, 0.44 ) }
    dend_53 { pt3dadd( 8.10897, -72.5671, -2.58365, 0.44 ) }
    dend_53 { pt3dadd( 7.57431, -74.2779, -2.0039, 0.44 ) }
    dend_53 { pt3dadd( 6.93273, -76.9136, -1.04732, 0.44 ) }
    dend_53 { pt3dadd( 6.78066, -77.6047, -0.787731, 0.44 ) }
    dend_53 { pt3dadd( 6.52691, -78.7747, -0.342455, 0.37 ) }
    dend_53 { pt3dadd( 6.299, -79.6598, -0.00669645, 0.37 ) }
    dend_53 { pt3dadd( 5.84204, -81.3008, 0.561245, 0.37 ) }
    dend_53 { pt3dadd( 5.39659, -82.6577, 0.960414, 0.37 ) }
    dend_53 { pt3dadd( 4.74894, -84.2418, 1.33242, 0.37 ) }
    dend_53 { pt3dadd( 4.2418, -85.3959, 1.57299, 0.37 ) }
    dend_53 { pt3dadd( 3.3804, -87.2728, 1.92455, 0.37 ) }
    dend_53 { pt3dadd( 2.17421, -89.7289, 2.36217, 0.37 ) }
    dend_53 { pt3dadd( 1.03625, -91.8365, 2.7552, 0.37 ) }
    dend_53 { pt3dadd( -0.053581, -93.8955, 3.19717, 0.44 ) }
    dend_53 { pt3dadd( -0.793564, -95.5006, 3.56403, 0.44 ) }
    dend_53 { pt3dadd( -1.28797, -96.7789, 3.87561, 0.44 ) }
    dend_53 { pt3dadd( -1.52936, -97.5473, 4.08985, 0.44 ) }
    dend_53 { pt3dadd( -1.9884, -99.3295, 4.65227, 0.44 ) }
    dend_53 { pt3dadd( -2.52422, -101.891, 5.52603, 0.44 ) }
    dend_53 { pt3dadd( -3.10822, -104.907, 6.63217, 0.44 ) }
    dend_53 { pt3dadd( -3.39205, -106.29, 7.15113, 0.44 ) }
    dend_53 { pt3dadd( -3.80259, -108.122, 7.82788, 0.37 ) }
    dend_53 { pt3dadd( -4.0567, -109.214, 8.21705, 0.37 ) }
    dend_53 { pt3dadd( -4.4113, -110.656, 8.7205, 0.37 ) }
    dend_53 { pt3dadd( -4.91977, -112.404, 9.34517, 0.66 ) }
    dend_53 { pt3dadd( -5.29366, -113.407, 9.73289, 0.66 ) }
    dend_53 { pt3dadd( -5.88844, -114.659, 10.217, 1.11 ) }
    dend_53 { pt3dadd( -6.17118, -115.143, 10.4002, 0.52 ) }
    dend_53 { pt3dadd( -6.46829, -115.618, 10.5751, 0.52 ) }
    dend_53 { pt3dadd( -7.23785, -116.973, 10.9738, 0.52 ) }
    dend_53 { pt3dadd( -7.53348, -117.547, 11.1155, 0.52 ) }
    dend_53 { pt3dadd( -7.78426, -118.052, 11.2337, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_53 { pt3dadd( -8.66248, -119.893, 11.6364, 0.59 ) }
    dend_53 { pt3dadd( -9.26482, -121.21, 11.9005, 0.59 ) }
    dend_53 { pt3dadd( -10.8236, -124.707, 12.5404, 0.59 ) }
    dend_53 { pt3dadd( -12.6427, -128.864, 13.216, 0.37 ) }
    dend_53 { pt3dadd( -13.0366, -129.806, 13.3605, 0.37 ) }
    dend_53 { pt3dadd( -13.5651, -131.06, 13.5496, 0.37 ) }
    dend_53 { pt3dadd( -14.3463, -132.851, 13.8269, 0.37 ) }
    dend_53 { pt3dadd( -15.1221, -134.473, 14.1082, 0.37 ) }
    dend_53 { pt3dadd( -15.8198, -135.827, 14.3723, 0.37 ) }
    dend_53 { pt3dadd( -16.1938, -136.527, 14.5158, 0.37 ) }
    dend_53 { pt3dadd( -16.8691, -137.724, 14.7839, 0.37 ) }
    dend_53 { pt3dadd( -17.8525, -139.31, 15.1858, 0.37 ) }
    dend_53 { pt3dadd( -18.7508, -140.619, 15.5593, 0.37 ) }
    dend_53 { pt3dadd( -20.0149, -142.414, 16.0988, 0.37 ) }
    dend_53 { pt3dadd( -20.6573, -143.39, 16.359, 0.37 ) }
    dend_53 { pt3dadd( -20.9046, -143.814, 16.4499, 0.37 ) }
    dend_53 { pt3dadd( -21.1793, -144.388, 16.539, 0.37 ) }
    dend_53 { pt3dadd( -21.6521, -145.502, 16.6724, 0.37 ) }
    dend_53 { pt3dadd( -22.1229, -146.775, 16.7915, 0.37 ) }
    dend_53 { pt3dadd( -23.0072, -149.45, 16.993, 0.37 ) }
    dend_53 { pt3dadd( -23.4821, -151.086, 17.0981, 0.37 ) }
    dend_53 { pt3dadd( -24.3749, -154.429, 17.3895, 0.37 ) }
    dend_53 { pt3dadd( -24.8644, -156.427, 17.5932, 0.37 ) }
    dend_53 { pt3dadd( -25.2438, -158.121, 17.803, 0.37 ) }
    dend_53 { pt3dadd( -25.9032, -161.207, 18.2195, 0.07 ) }
    dend_53 { pt3dadd( -26.2123, -162.722, 18.4576, 0.07 ) }
    dend_53 { pt3dadd( -26.7786, -165.483, 18.9409, 0.07 ) }
    dend_53 { pt3dadd( -26.9497, -166.273, 19.1062, 0.07 ) }
    dend_53 { pt3dadd( -27.1877, -167.367, 19.3817, 0.07 ) }
    dend_53 { pt3dadd( -29.4428, -177.805, 22.7287, 0.07 ) }
    dend_53 { pt3dadd( -30.7625, -188.49, 25.7805, 0.07 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 31/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 47.1358, -93.5831, 18.2065, 0.22 ) }
    dend_50 { pt3dadd( 50.6648, -102.002, 17.569, 0.22 ) }
    dend_50 { pt3dadd( 54.5017, -110.133, 15.8665, 0.22 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 34/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 47.1358, -93.5831, 18.2065, 0.07 ) }
    dend_49 { pt3dadd( 53.867, -100.991, 19.9903, 0.22 ) }
    dend_49 { pt3dadd( 59.2388, -109.595, 20.6919, 0.22 ) }
    // Section: dend_43, id: dend_43, parent: dend_25 (entry count 37/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -20.9088, -6.36215, 20.0624, 0.29 ) }
    dend_43 { pt3dadd( -22.2776, -7.51932, 20.6118, 0.29 ) }
    dend_43 { pt3dadd( -22.9158, -7.82578, 20.9723, 0.66 ) }
    dend_43 { pt3dadd( -23.5247, -8.06589, 21.3325, 0.66 ) }
    dend_43 { pt3dadd( -24.5087, -8.38074, 21.9051, 0.66 ) }
    dend_43 { pt3dadd( -24.9989, -8.49278, 22.1924, 0.66 ) }
    dend_43 { pt3dadd( -26.4945, -8.66572, 23.129, 0.66 ) }
    dend_43 { pt3dadd( -27.2037, -8.71786, 23.6397, 0.44 ) }
    dend_43 { pt3dadd( -27.5105, -8.70914, 23.9066, 0.44 ) }
    dend_43 { pt3dadd( -27.7867, -8.61679, 24.2383, 0.44 ) }
    dend_43 { pt3dadd( -28.0442, -8.33217, 24.7128, 0.44 ) }
    dend_43 { pt3dadd( -28.3222, -7.88421, 25.3334, 0.44 ) }
    dend_43 { pt3dadd( -28.642, -7.11442, 26.2971, 0.52 ) }
    dend_43 { pt3dadd( -28.8085, -6.54369, 26.9571, 0.52 ) }
    dend_43 { pt3dadd( -28.9242, -5.98431, 27.5667, 0.52 ) }
    dend_43 { pt3dadd( -29.2521, -3.98527, 29.6522, 0.66 ) }
    dend_43 { pt3dadd( -29.3866, -3.19658, 30.4736, 0.66 ) }
    dend_43 { pt3dadd( -29.5327, -2.57658, 31.1098, 0.66 ) }
    dend_43 { pt3dadd( -29.7297, -1.79027, 31.871, 0.66 ) }
    dend_43 { pt3dadd( -29.8744, -1.17765, 32.444, 0.52 ) }
    dend_43 { pt3dadd( -29.9485, -0.759383, 32.8122, 0.29 ) }
    dend_43 { pt3dadd( -29.8555, 0.17354, 33.3889, 0.29 ) }
    dend_43 { pt3dadd( -29.8744, 1.23171, 34.0612, 0.29 ) }
    dend_43 { pt3dadd( -34.0576, 7.31134, 41.0838, 0.29 ) }
    dend_43 { pt3dadd( -38.7956, 12.8355, 48.212, 0.29 ) }
    dend_43 { pt3dadd( -43.3594, 17.5517, 56.0035, 0.29 ) }
    dend_43 { pt3dadd( -47.4992, 24.0695, 62.6485, 0.29 ) }
    dend_43 { pt3dadd( -50.5864, 30.1387, 70.2256, 0.29 ) }
    dend_43 { pt3dadd( -52.9529, 36.2687, 78.0102, 0.29 ) }
    dend_43 { pt3dadd( -56.8086, 42.0953, 85.4238, 0.29 ) }
    dend_43 { pt3dadd( -63.1404, 47.4832, 91.3107, 0.29 ) }
    dend_43 { pt3dadd( -68.3955, 53.2653, 97.8475, 0.29 ) }
    dend_43 { pt3dadd( -74.6284, 58.4645, 104.003, 0.29 ) }
    dend_43 { pt3dadd( -80.4257, 65.484, 108.574, 0.29 ) }
    dend_43 { pt3dadd( -84.7462, 72.3213, 114.768, 0.29 ) }
    dend_43 { pt3dadd( -88.8408, 77.9413, 122.213, 0.29 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 73/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -20.9088, -6.36215, 20.0624, 1.11 ) }
    dend_26 { pt3dadd( -22.266, -7.38228, 18.9794, 1.11 ) }
    dend_26 { pt3dadd( -23.3244, -7.9908, 18.309, 1.11 ) }
    dend_26 { pt3dadd( -24.0386, -8.31835, 17.9505, 1.25 ) }
    dend_26 { pt3dadd( -25.517, -8.88287, 17.3601, 1.25 ) }
    dend_26 { pt3dadd( -26.6665, -9.24158, 17.0269, 1.25 ) }
    dend_26 { pt3dadd( -27.8791, -9.58392, 16.7889, 1.11 ) }
    dend_26 { pt3dadd( -29.1432, -9.81834, 16.7077, 0.88 ) }
    dend_26 { pt3dadd( -29.9979, -9.90951, 16.7434, 0.88 ) }
    dend_26 { pt3dadd( -30.6483, -9.92566, 16.8243, 0.88 ) }
    dend_26 { pt3dadd( -31.8017, -9.85546, 17.1349, 0.88 ) }
    dend_26 { pt3dadd( -32.7425, -9.78226, 17.5122, 0.88 ) }
    // Section: dend_19, id: dend_19, parent: dend_9 (entry count 85/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 25.3577, 31.2651, 15.6066, 1.55 ) }
    dend_19 { pt3dadd( 25.4543, 32.7223, 15.3507, 1.55 ) }
    dend_19 { pt3dadd( 25.4822, 33.3045, 15.2306, 1.55 ) }
    dend_19 { pt3dadd( 25.5289, 34.6401, 14.9406, 1.77 ) }
    dend_19 { pt3dadd( 25.5511, 35.3745, 14.7832, 1.77 ) }
    dend_19 { pt3dadd( 25.5726, 36.4198, 14.5633, 2.06 ) }
    dend_19 { pt3dadd( 25.5767, 37.0551, 14.4377, 2.06 ) }
    dend_19 { pt3dadd( 25.5641, 37.8695, 14.2682, 1.55 ) }
    dend_19 { pt3dadd( 25.5393, 38.7387, 14.079, 1.55 ) }
    dend_19 { pt3dadd( 25.5147, 39.4842, 13.9009, 1.84 ) }
    dend_19 { pt3dadd( 25.5114, 39.9009, 13.783, 1.84 ) }
    dend_19 { pt3dadd( 25.5123, 41.1904, 13.4227, 1.92 ) }
    dend_19 { pt3dadd( 25.5218, 42.2057, 13.1519, 1.92 ) }
    dend_19 { pt3dadd( 25.5302, 42.7248, 13.0282, 1.92 ) }
    dend_19 { pt3dadd( 25.5528, 43.4922, 12.8739, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_19 { pt3dadd( 25.6075, 44.529, 12.7313, 1.4 ) }
    dend_19 { pt3dadd( 25.6664, 45.2171, 12.6958, 1.4 ) }
    dend_19 { pt3dadd( 25.739, 45.89, 12.7383, 1.55 ) }
    dend_19 { pt3dadd( 25.811, 46.6465, 12.8786, 1.55 ) }
    dend_19 { pt3dadd( 25.8358, 47.1051, 12.9967, 1.55 ) }
    dend_19 { pt3dadd( 25.8419, 47.7186, 13.1683, 1.25 ) }
    dend_19 { pt3dadd( 25.8186, 48.3389, 13.3123, 0.59 ) }
    dend_19 { pt3dadd( 25.7939, 48.7254, 13.3269, 0.88 ) }
    dend_19 { pt3dadd( 25.7575, 49.1563, 13.2702, 1.25 ) }
    dend_19 { pt3dadd( 25.6825, 49.826, 13.091, 1.25 ) }
    dend_19 { pt3dadd( 25.5302, 50.8505, 12.732, 1.62 ) }
    dend_19 { pt3dadd( 25.3291, 52.0215, 12.2494, 1.62 ) }
    dend_19 { pt3dadd( 25.0939, 53.3456, 11.6594, 1.18 ) }
    dend_19 { pt3dadd( 24.9572, 54.1007, 11.3088, 1.18 ) }
    dend_19 { pt3dadd( 24.8679, 54.641, 11.0498, 0.74 ) }
    dend_19 { pt3dadd( 24.7822, 55.2554, 10.7551, 1.03 ) }
    dend_19 { pt3dadd( 24.7471, 55.6319, 10.5906, 1.84 ) }
    dend_19 { pt3dadd( 24.7382, 56.1474, 10.4356, 2.21 ) }
    dend_19 { pt3dadd( 24.7547, 56.6694, 10.37, 2.21 ) }
    dend_19 { pt3dadd( 24.772, 57.1704, 10.3398, 2.21 ) }
    dend_19 { pt3dadd( 24.7839, 57.7533, 10.3178, 2.21 ) }
    dend_19 { pt3dadd( 24.7784, 58.7206, 10.2684, 2.21 ) }
    dend_19 { pt3dadd( 24.739, 59.7985, 10.1986, 1.99 ) }
    dend_19 { pt3dadd( 24.6582, 60.9442, 10.0967, 1.11 ) }
    dend_19 { pt3dadd( 24.5484, 61.9568, 9.97092, 1.33 ) }
    dend_19 { pt3dadd( 24.4527, 62.5316, 9.88162, 1.33 ) }
    dend_19 { pt3dadd( 24.2992, 63.27, 9.74176, 1.33 ) }
    dend_19 { pt3dadd( 24.2346, 63.5451, 9.6776, 1.33 ) }
    dend_19 { pt3dadd( 24.155, 63.9471, 9.56065, 0.96 ) }
    dend_19 { pt3dadd( 24.1361, 64.4192, 9.39828, 0.74 ) }
    dend_19 { pt3dadd( 24.1882, 64.6947, 9.3032, 0.59 ) }
    dend_19 { pt3dadd( 24.2929, 65.0669, 9.19245, 0.66 ) }
    dend_19 { pt3dadd( 24.4294, 65.6416, 9.04534, 0.66 ) }
    dend_19 { pt3dadd( 24.4644, 66.0685, 8.93773, 0.66 ) }
    dend_19 { pt3dadd( 24.4339, 66.6014, 8.81584, 0.66 ) }
    dend_19 { pt3dadd( 24.3166, 67.2749, 8.64717, 0.96 ) }
    dend_19 { pt3dadd( 24.1998, 67.752, 8.52314, 0.96 ) }
    dend_19 { pt3dadd( 23.9854, 68.4907, 8.33416, 1.25 ) }
    dend_19 { pt3dadd( 23.717, 69.3755, 8.12452, 1.25 ) }
    dend_19 { pt3dadd( 23.4885, 70.1382, 7.96371, 1.4 ) }
    dend_19 { pt3dadd( 23.3219, 70.7617, 7.84943, 1.4 ) }
    dend_19 { pt3dadd( 23.0997, 71.675, 7.70278, 1.18 ) }
    dend_19 { pt3dadd( 22.9851, 72.201, 7.62811, 1.18 ) }
    dend_19 { pt3dadd( 22.7894, 73.2529, 7.504, 1.55 ) }
    dend_19 { pt3dadd( 22.6188, 74.4208, 7.38668, 1.55 ) }
    dend_19 { pt3dadd( 22.5178, 75.3017, 7.30667, 0.81 ) }
    dend_19 { pt3dadd( 22.452, 76.045, 7.24293, 0.66 ) }
    dend_19 { pt3dadd( 22.4378, 76.2751, 7.21874, 0.66 ) }
    dend_19 { pt3dadd( 22.437, 76.6275, 7.17292, 0.66 ) }
    dend_19 { pt3dadd( 22.456, 77.0342, 7.09, 0.66 ) }
    dend_19 { pt3dadd( 22.4687, 77.2581, 7.03362, 0.66 ) }
    dend_19 { pt3dadd( 22.4778, 77.6807, 6.91651, 0.66 ) }
    dend_19 { pt3dadd( 22.463, 78.5043, 6.67621, 0.66 ) }
    dend_19 { pt3dadd( 22.3208, 80.5449, 6.04299, 0.81 ) }
    dend_19 { pt3dadd( 22.2239, 81.3799, 5.77167, 1.03 ) }
    dend_19 { pt3dadd( 22.1107, 82.1201, 5.52261, 1.18 ) }
    dend_19 { pt3dadd( 22.0189, 82.6755, 5.33044, 1.18 ) }
    dend_19 { pt3dadd( 21.9273, 83.2071, 5.1492, 1.18 ) }
    dend_19 { pt3dadd( 21.8479, 83.6313, 4.9985, 1.03 ) }
    dend_19 { pt3dadd( 21.794, 83.9105, 4.90265, 1.03 ) }
    dend_19 { pt3dadd( 21.7748, 84.558, 4.756, 0.96 ) }
    dend_19 { pt3dadd( 21.8125, 84.8547, 4.68652, 0.59 ) }
    dend_19 { pt3dadd( 21.9, 85.2267, 4.58699, 0.59 ) }
    dend_19 { pt3dadd( 21.9762, 85.4912, 4.50725, 0.59 ) }
    dend_19 { pt3dadd( 22.0493, 85.7194, 4.42692, 0.59 ) }
    dend_19 { pt3dadd( 22.3878, 86.7479, 4.01828, 0.59 ) }
    dend_19 { pt3dadd( 22.5202, 87.2037, 3.80355, 0.66 ) }
    dend_19 { pt3dadd( 22.6237, 87.6737, 3.55707, 0.81 ) }
    dend_19 { pt3dadd( 22.6818, 88.0926, 3.31918, 0.81 ) }
    dend_19 { pt3dadd( 22.7033, 88.4062, 3.13749, 0.81 ) }
    dend_19 { pt3dadd( 22.6994, 88.6452, 3.01014, 0.81 ) }
    dend_19 { pt3dadd( 22.6759, 89.2581, 2.75113, 0.81 ) }
    dend_19 { pt3dadd( 22.6707, 89.5591, 2.65477, 0.81 ) }
    dend_19 { pt3dadd( 22.658, 90.0131, 2.50962, 0.66 ) }
    dend_19 { pt3dadd( 22.6402, 90.4075, 2.3847, 0.44 ) }
    dend_19 { pt3dadd( 22.5921, 91.1641, 2.15376, 0.44 ) }
    dend_19 { pt3dadd( 22.5328, 92.463, 1.78898, 0.52 ) }
    dend_19 { pt3dadd( 22.5306, 92.7726, 1.7117, 0.52 ) }
    dend_19 { pt3dadd( 22.5422, 93.5161, 1.5371, 0.52 ) }
    dend_19 { pt3dadd( 22.5483, 93.8716, 1.45946, 0.59 ) }
    dend_19 { pt3dadd( 22.5247, 94.2646, 1.38783, 0.59 ) }
    dend_19 { pt3dadd( 22.43, 94.9228, 1.29575, 0.59 ) }
    dend_19 { pt3dadd( 22.3912, 95.1187, 1.2789, 0.59 ) }
    dend_19 { pt3dadd( 22.3048, 95.651, 1.2496, 0.59 ) }
    dend_19 { pt3dadd( 22.2664, 96.0801, 1.23076, 0.59 ) }
    dend_19 { pt3dadd( 22.2439, 97.1531, 1.10953, 0.59 ) }
    dend_19 { pt3dadd( 22.2633, 97.9428, 0.968684, 0.37 ) }
    dend_19 { pt3dadd( 22.2919, 98.5004, 0.835793, 0.37 ) }
    dend_19 { pt3dadd( 22.3242, 98.9384, 0.713641, 0.37 ) }
    dend_19 { pt3dadd( 22.4085, 99.7574, 0.457835, 0.37 ) }
    dend_19 { pt3dadd( 22.5202, 100.585, 0.183863, 0.37 ) }
    dend_19 { pt3dadd( 22.6032, 101.095, 0.0136226, 0.37 ) }
    dend_19 { pt3dadd( 22.6438, 101.402, -0.0969255, 0.37 ) }
    dend_19 { pt3dadd( 22.6607, 101.684, -0.20365, 0.37 ) }
    dend_19 { pt3dadd( 22.6572, 101.93, -0.293497, 0.37 ) }
    dend_19 { pt3dadd( 22.6305, 102.284, -0.409692, 0.37 ) }
    dend_19 { pt3dadd( 22.561, 103.045, -0.624498, 0.37 ) }
    dend_19 { pt3dadd( 22.484, 104.138, -0.925087, 0.52 ) }
    dend_19 { pt3dadd( 22.4512, 104.807, -1.10714, 0.52 ) }
    dend_19 { pt3dadd( 22.4365, 105.173, -1.20475, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_19 { pt3dadd( 22.4238, 105.519, -1.29655, 0.52 ) }
    dend_19 { pt3dadd( 22.3777, 106.227, -1.46514, 0.44 ) }
    dend_19 { pt3dadd( 22.3453, 106.576, -1.526, 0.44 ) }
    dend_19 { pt3dadd( 22.3179, 106.861, -1.54527, 0.44 ) }
    dend_19 { pt3dadd( 22.2793, 107.415, -1.56214, 0.44 ) }
    dend_19 { pt3dadd( 22.2495, 108.034, -1.60896, 0.44 ) }
    dend_19 { pt3dadd( 22.2014, 108.867, -1.70492, 0.44 ) }
    dend_19 { pt3dadd( 22.1699, 109.32, -1.7881, 0.44 ) }
    dend_19 { pt3dadd( 22.1234, 109.978, -1.93762, 0.44 ) }
    dend_19 { pt3dadd( 22.0779, 110.811, -2.15091, 0.44 ) }
    dend_19 { pt3dadd( 22.0433, 111.922, -2.47215, 0.44 ) }
    dend_19 { pt3dadd( 22.0328, 113.285, -2.90056, 0.44 ) }
    dend_19 { pt3dadd( 22.0693, 114.377, -3.28127, 0.44 ) }
    dend_19 { pt3dadd( 22.1134, 115.074, -3.54166, 0.44 ) }
    dend_19 { pt3dadd( 22.1606, 115.571, -3.73479, 0.44 ) }
    dend_19 { pt3dadd( 22.2502, 116.258, -3.99689, 0.44 ) }
    dend_19 { pt3dadd( 22.3037, 116.596, -4.11566, 0.44 ) }
    dend_19 { pt3dadd( 22.4172, 117.212, -4.32816, 0.44 ) }
    dend_19 { pt3dadd( 22.4971, 117.631, -4.41423, 0.44 ) }
    dend_19 { pt3dadd( 22.5647, 118.036, -4.45854, 0.44 ) }
    dend_19 { pt3dadd( 22.6246, 118.501, -4.47801, 0.44 ) }
    dend_19 { pt3dadd( 22.6679, 119.031, -4.50434, 0.44 ) }
    dend_19 { pt3dadd( 22.7337, 120.179, -4.57819, 0.44 ) }
    dend_19 { pt3dadd( 22.7992, 121.537, -4.65267, 0.59 ) }
    dend_19 { pt3dadd( 22.8374, 122.156, -4.68481, 0.59 ) }
    dend_19 { pt3dadd( 22.9497, 123.534, -4.76098, 0.59 ) }
    dend_19 { pt3dadd( 23.1104, 125.226, -4.85617, 0.44 ) }
    dend_19 { pt3dadd( 23.1817, 125.962, -4.90199, 0.37 ) }
    dend_19 { pt3dadd( 23.2065, 126.381, -4.94137, 0.37 ) }
    dend_19 { pt3dadd( 23.2092, 126.956, -5.04253, 0.29 ) }
    dend_19 { pt3dadd( 23.2066, 127.233, -5.09673, 0.29 ) }
    dend_19 { pt3dadd( 23.2032, 127.492, -5.15182, 0.29 ) }
    dend_19 { pt3dadd( 23.1951, 127.866, -5.23156, 0.29 ) }
    dend_19 { pt3dadd( 23.1411, 128.681, -5.42994, 0.29 ) }
    dend_19 { pt3dadd( 23.0332, 129.766, -5.75036, 0.52 ) }
    dend_19 { pt3dadd( 22.9948, 130.132, -5.8692, 0.52 ) }
    dend_19 { pt3dadd( 22.9559, 130.63, -6.03155, 0.52 ) }
    dend_19 { pt3dadd( 22.9251, 131.134, -6.20194, 0.52 ) }
    dend_19 { pt3dadd( 22.8902, 131.714, -6.41079, 0.52 ) }
    dend_19 { pt3dadd( 22.8546, 132.379, -6.66326, 0.44 ) }
    dend_19 { pt3dadd( 22.8205, 132.7, -6.77698, 0.37 ) }
    dend_19 { pt3dadd( 22.7162, 133.509, -7.07749, 0.37 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 42/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 25.3577, 31.2651, 15.6066, 1.55 ) }
    dend_10 { pt3dadd( 27.6082, 32.3773, 17.4, 1.55 ) }
    dend_10 { pt3dadd( 28.4688, 32.8027, 18.0858, 1.55 ) }
    dend_10 { pt3dadd( 28.8516, 32.9919, 18.3908, 1.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 46/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 118.82, 104.943, 67.8946, 0.29 ) }
    dend_8 { pt3dadd( 129.869, 114.262, 73.0848, 0.29 ) }
    dend_8 { pt3dadd( 142.279, 122.654, 76.4628, 0.29 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 49/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 118.82, 104.943, 67.8946, 0.07 ) }
    dend_7 { pt3dadd( 127.96, 112.154, 72.8606, 0.29 ) }
    dend_7 { pt3dadd( 136.055, 119.954, 78.6773, 0.29 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 52/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -26.4481, 159.062, -18.6465, 0.22 ) }
    dend_3 { pt3dadd( -28.2607, 159.144, -17.7925, 0.22 ) }
    dend_3 { pt3dadd( -29.6274, 159.237, -17.2067, 0.22 ) }
    dend_3 { pt3dadd( -30.9173, 159.346, -16.6808, 0.22 ) }
    dend_3 { pt3dadd( -32.0247, 159.439, -16.2294, 0.22 ) }
    dend_3 { pt3dadd( -33.565, 159.568, -15.6014, 0.22 ) }
    dend_3 { pt3dadd( -35.9808, 159.772, -14.6165, 0.07 ) }
    dend_3 { pt3dadd( -38.2318, 160.034, -13.8133, 0.07 ) }
    dend_3 { pt3dadd( -39.1995, 160.15, -13.4825, 0.07 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 61/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -26.4481, 159.062, -18.6465, 0.07 ) }
    dend_2 { pt3dadd( -26.7588, 159.951, -18.6411, 0.07 ) }
    dend_2 { pt3dadd( -27.0226, 160.651, -18.6357, 0.07 ) }
    dend_2 { pt3dadd( -27.9062, 163.074, -18.7386, 0.07 ) }
    dend_2 { pt3dadd( -28.5286, 164.819, -18.858, 0.07 ) }
    dend_2 { pt3dadd( -28.8946, 165.904, -18.9462, 0.07 ) }
    dend_2 { pt3dadd( -29.5173, 167.973, -19.1618, 0.07 ) }
    dend_2 { pt3dadd( -29.7839, 169.014, -19.3054, 0.07 ) }
    dend_2 { pt3dadd( -30.0873, 170.584, -19.5613, 0.07 ) }
    dend_2 { pt3dadd( -30.2294, 171.651, -19.7713, 0.07 ) }
    dend_2 { pt3dadd( -30.323, 172.823, -20.0398, 0.07 ) }
    dend_2 { pt3dadd( -30.3348, 174.131, -20.3754, 0.07 ) }
    dend_2 { pt3dadd( -30.198, 175.357, -20.7262, 0.07 ) }
    dend_2 { pt3dadd( -29.9905, 176.466, -21.0307, 0.07 ) }
    // Section: dend_69, id: dend_69, parent: dend_67 (entry count 75/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 7.79548, -130.889, -1.00793, 0.07 ) }
    dend_69 { pt3dadd( 7.52739, -132.562, -1.15506, 0.07 ) }
    dend_69 { pt3dadd( 7.39952, -134.055, -1.3021, 0.07 ) }
    dend_69 { pt3dadd( 7.26926, -135.576, -1.45188, 0.07 ) }
    dend_69 { pt3dadd( 7.0877, -137.697, -1.66066, 0.07 ) }
    dend_69 { pt3dadd( 6.88424, -140.073, -1.89462, 0.07 ) }
    dend_69 { pt3dadd( 6.70935, -142.115, -2.09572, 0.07 ) }
    dend_69 { pt3dadd( 6.64922, -143.779, -2.29346, 0.07 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 83/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 7.79548, -130.889, -1.00793, 0.07 ) }
    dend_68 { pt3dadd( 9.45422, -131.874, -0.756896, 0.07 ) }
    dend_68 { pt3dadd( 10.558, -132.529, -0.589853, 0.07 ) }
    dend_68 { pt3dadd( 10.9414, -132.756, -0.531824, 0.07 ) }
    dend_68 { pt3dadd( 11.9468, -133.353, -0.379661, 0.07 ) }
    // Section: dend_66, id: dend_66, parent: dend_62 (entry count 88/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -128.707, -176.352, -136.685, 0.15 ) }
    dend_66 { pt3dadd( -129.951, -177.582, -136.934, 0.15 ) }
    dend_66 { pt3dadd( -131.108, -178.813, -137.232, 0.15 ) }
    dend_66 { pt3dadd( -132.465, -180.289, -137.62, 0.15 ) }
    dend_66 { pt3dadd( -134.337, -182.466, -138.271, 0.15 ) }
    dend_66 { pt3dadd( -135.296, -183.607, -138.697, 0.15 ) }
    dend_66 { pt3dadd( -136.78, -185.376, -139.424, 0.15 ) }
    dend_66 { pt3dadd( -137.618, -186.359, -139.87, 0.15 ) }
    dend_66 { pt3dadd( -137.976, -186.766, -140.067, 0.15 ) }
    dend_66 { pt3dadd( -141.489, -190.578, -142.007, 0.15 ) }
    dend_66 { pt3dadd( -143.418, -192.561, -143.019, 0.15 ) }
    dend_66 { pt3dadd( -144.396, -193.514, -143.491, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_66 { pt3dadd( -146.695, -195.751, -144.593, 0.15 ) }
    dend_66 { pt3dadd( -147.446, -196.498, -144.949, 0.15 ) }
    dend_66 { pt3dadd( -148.62, -197.711, -145.504, 0.07 ) }
    dend_66 { pt3dadd( -149.919, -199.127, -146.122, 0.07 ) }
    dend_66 { pt3dadd( -150.955, -200.429, -146.664, 0.07 ) }
    dend_66 { pt3dadd( -152.288, -202.462, -147.601, 0.07 ) }
    dend_66 { pt3dadd( -152.81, -203.459, -148.097, 0.07 ) }
    dend_66 { pt3dadd( -153.497, -204.934, -148.827, 0.07 ) }
    dend_66 { pt3dadd( -153.908, -205.943, -149.345, 0.07 ) }
    dend_66 { pt3dadd( -154.418, -207.296, -150.145, 0.22 ) }
    dend_66 { pt3dadd( -154.731, -208.123, -150.673, 0.22 ) }
    dend_66 { pt3dadd( -155.366, -209.619, -151.64, 0.22 ) }
    dend_66 { pt3dadd( -155.7, -210.442, -152.187, 0.22 ) }
    dend_66 { pt3dadd( -156.176, -211.709, -152.986, 0.22 ) }
    dend_66 { pt3dadd( -156.604, -212.88, -153.775, 0.22 ) }
    dend_66 { pt3dadd( -156.876, -213.678, -154.32, 0.22 ) }
    dend_66 { pt3dadd( -157.082, -214.339, -154.779, 0.22 ) }
    dend_66 { pt3dadd( -157.338, -215.349, -155.496, 0.22 ) }
    dend_66 { pt3dadd( -157.584, -216.436, -156.23, 0.22 ) }
    dend_66 { pt3dadd( -158.118, -218.761, -157.601, 0.22 ) }
    dend_66 { pt3dadd( -158.326, -219.685, -158.079, 0.22 ) }
    dend_66 { pt3dadd( -158.458, -220.329, -158.417, 0.22 ) }
    dend_66 { pt3dadd( -158.549, -220.828, -158.679, 0.22 ) }
    dend_66 { pt3dadd( -158.613, -221.385, -159.008, 0.22 ) }
    dend_66 { pt3dadd( -158.691, -222.435, -159.642, 0.22 ) }
    dend_66 { pt3dadd( -158.748, -223.349, -160.123, 0.22 ) }
    dend_66 { pt3dadd( -158.794, -224.199, -160.535, 0.22 ) }
    dend_66 { pt3dadd( -158.819, -224.859, -160.864, 0.22 ) }
    dend_66 { pt3dadd( -158.928, -227.683, -162.323, 0.07 ) }
    dend_66 { pt3dadd( -158.975, -229.121, -163.089, 0.07 ) }
    dend_66 { pt3dadd( -159.023, -230.616, -163.839, 0.07 ) }
    dend_66 { pt3dadd( -159.067, -232.345, -164.681, 0.07 ) }
    dend_66 { pt3dadd( -159.139, -235.116, -165.969, 0.07 ) }
    dend_66 { pt3dadd( -159.216, -236.965, -166.794, 0.07 ) }
    dend_66 { pt3dadd( -159.32, -238.28, -167.322, 0.07 ) }
    dend_66 { pt3dadd( -159.45, -239.849, -168.019, 0.07 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 36/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -128.707, -176.352, -136.685, 0.15 ) }
    dend_63 { pt3dadd( -129.935, -176.121, -138.256, 0.15 ) }
    dend_63 { pt3dadd( -131.173, -175.85, -139.717, 0.15 ) }
    dend_63 { pt3dadd( -132.084, -175.615, -140.67, 0.15 ) }
    dend_63 { pt3dadd( -132.935, -175.371, -141.498, 0.07 ) }
    dend_63 { pt3dadd( -133.779, -175.112, -142.319, 0.07 ) }
    dend_63 { pt3dadd( -134.259, -174.958, -142.793, 0.07 ) }
    dend_63 { pt3dadd( -134.905, -174.725, -143.397, 0.07 ) }
    dend_63 { pt3dadd( -136.138, -174.305, -144.464, 0.07 ) }
    dend_63 { pt3dadd( -136.74, -174.129, -145.001, 0.15 ) }
    dend_63 { pt3dadd( -137.482, -173.94, -145.668, 0.15 ) }
    dend_63 { pt3dadd( -138.333, -173.783, -146.565, 0.15 ) }
    dend_63 { pt3dadd( -138.698, -173.754, -146.999, 0.15 ) }
    dend_63 { pt3dadd( -139.11, -173.788, -147.551, 0.15 ) }
    dend_63 { pt3dadd( -139.608, -173.961, -148.246, 0.15 ) }
    dend_63 { pt3dadd( -139.799, -174.046, -148.513, 0.15 ) }
    dend_63 { pt3dadd( -140.875, -174.611, -149.96, 0.15 ) }
    dend_63 { pt3dadd( -141.288, -174.864, -150.528, 0.15 ) }
    dend_63 { pt3dadd( -141.87, -175.228, -151.365, 0.15 ) }
    dend_63 { pt3dadd( -142.572, -175.778, -152.468, 0.15 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 56/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 140.082, -68.6997, 56.8332, 0.22 ) }
    dend_60 { pt3dadd( 147.159, -70.3688, 60.2906, 0.22 ) }
    dend_60 { pt3dadd( 153.926, -71.5793, 64.4803, 0.22 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 59/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 140.082, -68.6997, 56.8332, 0.07 ) }
    dend_57 { pt3dadd( 150.048, -71.0459, 61.8878, 0.22 ) }
    dend_57 { pt3dadd( 160.209, -71.3762, 67.0846, 0.22 ) }
    dend_57 { pt3dadd( 170.001, -70.4276, 72.8784, 0.22 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 63/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -30.7625, -188.49, 25.7805, 0.22 ) }
    dend_55 { pt3dadd( -33.6098, -197.074, 28.0784, 0.22 ) }
    dend_55 { pt3dadd( -37.653, -205.429, 29.0388, 0.22 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 66/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -30.7625, -188.49, 25.7805, 0.07 ) }
    dend_54 { pt3dadd( -33.4795, -198.891, 29.3551, 0.22 ) }
    dend_54 { pt3dadd( -35.9347, -209.055, 33.7126, 0.22 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 69/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -88.8408, 77.9413, 122.213, 0.29 ) }
    dend_45 { pt3dadd( -92.4156, 82.4859, 127.983, 0.29 ) }
    dend_45 { pt3dadd( -97.2667, 87.5294, 132.197, 0.29 ) }
    dend_45 { pt3dadd( -102.393, 92.6541, 135.964, 0.29 ) }
    dend_45 { pt3dadd( -107.385, 98.1954, 139.296, 0.29 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 74/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -88.8408, 77.9413, 122.213, 0.07 ) }
    dend_44 { pt3dadd( -92.7965, 82.7214, 127.82, 0.29 ) }
    dend_44 { pt3dadd( -95.8058, 87.4877, 133.997, 0.29 ) }
    dend_44 { pt3dadd( -99.9809, 92.5935, 139.138, 0.29 ) }
    dend_44 { pt3dadd( -104.982, 98.6133, 142.084, 0.29 ) }
    dend_44 { pt3dadd( -111.172, 103.302, 145.187, 0.29 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 80/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -32.7425, -9.78226, 17.5122, 0.74 ) }
    dend_30 { pt3dadd( -35.1572, -10.9036, 17.6233, 0.74 ) }
    dend_30 { pt3dadd( -37.363, -11.9278, 17.7249, 0.74 ) }
    dend_30 { pt3dadd( -39.0686, -12.7198, 17.8034, 0.74 ) }
    dend_30 { pt3dadd( -41.6909, -13.9375, 17.9241, 0.74 ) }
    dend_30 { pt3dadd( -44.3646, -15.179, 18.0471, 0.74 ) }
    dend_30 { pt3dadd( -46.2344, -16.0472, 18.1332, 0.88 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 87/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -32.7425, -9.78226, 17.5122, 0.81 ) }
    dend_27 { pt3dadd( -31.7653, -11.6224, 18.2364, 0.81 ) }
    dend_27 { pt3dadd( -30.9401, -13.2184, 18.7987, 0.59 ) }
    dend_27 { pt3dadd( -30.4007, -14.3319, 19.2012, 0.59 ) }
    dend_27 { pt3dadd( -29.6316, -16.0929, 19.8809, 0.44 ) }
    dend_27 { pt3dadd( -29.1476, -17.3259, 20.3927, 0.44 ) }
    dend_27 { pt3dadd( -28.7197, -18.6218, 20.9443, 0.44 ) }
    dend_27 { pt3dadd( -28.4531, -19.8507, 21.4651, 0.44 ) }
    dend_27 { pt3dadd( -28.3763, -20.739, 21.8274, 0.44 ) }
    dend_27 { pt3dadd( -28.39, -21.7285, 22.2545, 0.44 ) }
    dend_27 { pt3dadd( -28.4533, -22.5281, 22.6087, 0.44 ) }
    dend_27 { pt3dadd( -28.5809, -24.0986, 23.2911, 0.44 ) }
    dend_27 { pt3dadd( -28.6824, -25.5617, 23.8979, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_27 { pt3dadd( -28.6935, -26.7968, 24.3774, 0.44 ) }
    dend_27 { pt3dadd( -28.565, -28.1292, 24.834, 0.44 ) }
    dend_27 { pt3dadd( -28.3634, -29.2175, 25.1823, 0.59 ) }
    dend_27 { pt3dadd( -28.0815, -30.244, 25.5242, 0.59 ) }
    dend_27 { pt3dadd( -27.7193, -31.2446, 25.8864, 0.59 ) }
    dend_27 { pt3dadd( -27.0925, -32.7619, 26.4571, 0.59 ) }
    dend_27 { pt3dadd( -26.1101, -35.109, 27.3766, 0.29 ) }
    dend_27 { pt3dadd( -25.6962, -36.2192, 27.8366, 0.29 ) }
    dend_27 { pt3dadd( -25.3732, -37.2685, 28.3077, 0.29 ) }
    dend_27 { pt3dadd( -25.1403, -38.2202, 28.8923, 0.44 ) }
    dend_27 { pt3dadd( -25.0195, -38.888, 29.3496, 0.44 ) }
    dend_27 { pt3dadd( -24.9645, -39.406, 29.7443, 0.44 ) }
    dend_27 { pt3dadd( -24.9087, -40.3339, 30.5157, 0.44 ) }
    dend_27 { pt3dadd( -24.8509, -41.5077, 31.4663, 0.44 ) }
    dend_27 { pt3dadd( -24.6863, -44.5601, 33.8279, 0.15 ) }
    dend_27 { pt3dadd( -24.5187, -45.8986, 34.8587, 0.07 ) }
    dend_27 { pt3dadd( -24.3613, -46.5879, 35.3734, 0.07 ) }
    dend_27 { pt3dadd( -24.1242, -47.2525, 35.839, 0.22 ) }
    dend_27 { pt3dadd( -23.6306, -48.2674, 36.5004, 0.22 ) }
    dend_27 { pt3dadd( -23.4824, -48.5336, 36.645, 0.22 ) }
    dend_27 { pt3dadd( -22.999, -49.3845, 37.0119, 0.22 ) }
    dend_27 { pt3dadd( -22.7132, -50.037, 37.3739, 0.22 ) }
    dend_27 { pt3dadd( -22.6234, -50.5772, 37.6653, 0.22 ) }
    dend_27 { pt3dadd( -22.7484, -51.7246, 38.2969, 0.22 ) }
    dend_27 { pt3dadd( -23.1742, -52.8644, 38.942, 0.22 ) }
    dend_27 { pt3dadd( -23.5101, -53.3391, 39.1997, 0.22 ) }
    dend_27 { pt3dadd( -24.5577, -54.2475, 39.6803, 0.22 ) }
    dend_27 { pt3dadd( -25.7607, -54.9106, 40.029, 0.22 ) }
    dend_27 { pt3dadd( -26.4782, -55.1076, 40.1299, 0.22 ) }
    dend_27 { pt3dadd( -27.0748, -55.1368, 40.1321, 0.22 ) }
    dend_27 { pt3dadd( -28.7172, -54.8425, 39.9827, 0.22 ) }
    dend_27 { pt3dadd( -29.6123, -54.456, 39.8153, 0.22 ) }
    dend_27 { pt3dadd( -30.3534, -53.7887, 39.5781, 0.22 ) }
    dend_27 { pt3dadd( -31.0807, -52.8158, 39.2593, 0.22 ) }
    dend_27 { pt3dadd( -29.5367, -61.6127, 43.8768, 0.22 ) }
    dend_27 { pt3dadd( -28.9843, -70.7059, 48.131, 0.22 ) }
    dend_27 { pt3dadd( -29.4712, -79.7754, 52.4434, 0.22 ) }
    dend_27 { pt3dadd( -29.4273, -87.9799, 58.255, 0.22 ) }
    dend_27 { pt3dadd( -29.0831, -96.7265, 63.2016, 0.22 ) }
    dend_27 { pt3dadd( -28.1875, -105.135, 68.642, 0.22 ) }
    dend_27 { pt3dadd( -25.7863, -114.245, 72.1515, 0.22 ) }
    dend_27 { pt3dadd( -22.5078, -123.346, 74.8951, 0.22 ) }
    dend_27 { pt3dadd( -18.6447, -132.249, 77.5206, 0.22 ) }
    dend_27 { pt3dadd( -14.6168, -140.979, 80.4635, 0.22 ) }
    dend_27 { pt3dadd( -10.667, -149.447, 84.1751, 0.22 ) }
    // Section: dend_23, id: dend_23, parent: dend_19 (entry count 45/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 22.7162, 133.509, -7.07749, 0.59 ) }
    dend_23 { pt3dadd( 22.6715, 135.927, -8.73344, 0.59 ) }
    dend_23 { pt3dadd( 22.6823, 136.576, -9.10292, 0.59 ) }
    dend_23 { pt3dadd( 22.7046, 137.334, -9.52406, 0.37 ) }
    dend_23 { pt3dadd( 22.7138, 137.675, -9.70585, 0.15 ) }
    dend_23 { pt3dadd( 22.7282, 138.15, -9.94914, 0.15 ) }
    dend_23 { pt3dadd( 22.7689, 139.498, -10.5913, 0.15 ) }
    dend_23 { pt3dadd( 22.8131, 141.493, -11.3643, 0.07 ) }
    dend_23 { pt3dadd( 22.8363, 142.448, -11.7129, 0.07 ) }
    dend_23 { pt3dadd( 22.8669, 143.113, -11.9488, 0.07 ) }
    dend_23 { pt3dadd( 22.8989, 143.94, -12.233, 0.07 ) }
    dend_23 { pt3dadd( 22.9167, 144.996, -12.5759, 0.07 ) }
    dend_23 { pt3dadd( 22.9157, 146.13, -12.9343, 0.07 ) }
    dend_23 { pt3dadd( 22.9079, 147.952, -13.5554, 0.07 ) }
    dend_23 { pt3dadd( 22.9053, 148.721, -13.8182, 0.07 ) }
    dend_23 { pt3dadd( 22.9082, 149.496, -14.0984, 0.07 ) }
    dend_23 { pt3dadd( 22.9102, 149.949, -14.2657, 0.15 ) }
    dend_23 { pt3dadd( 22.9145, 150.73, -14.5718, 0.15 ) }
    dend_23 { pt3dadd( 22.9024, 151.352, -14.8044, 0.15 ) }
    dend_23 { pt3dadd( 22.8723, 151.849, -14.9935, 0.15 ) }
    dend_23 { pt3dadd( 22.8101, 152.348, -15.1912, 0.15 ) }
    dend_23 { pt3dadd( 22.6575, 153.328, -15.5665, 0.15 ) }
    dend_23 { pt3dadd( 22.5467, 154.004, -15.813, 0.15 ) }
    dend_23 { pt3dadd( 22.3903, 154.985, -16.1311, 0.15 ) }
    dend_23 { pt3dadd( 22.2088, 156.205, -16.5099, 0.15 ) }
    dend_23 { pt3dadd( 22.0724, 157.066, -16.7604, 0.15 ) }
    dend_23 { pt3dadd( 21.9888, 157.577, -16.8953, 0.15 ) }
    dend_23 { pt3dadd( 21.807, 158.79, -17.1931, 0.15 ) }
    dend_23 { pt3dadd( 21.6848, 159.786, -17.4033, 0.15 ) }
    dend_23 { pt3dadd( 21.5861, 160.781, -17.5748, 0.15 ) }
    dend_23 { pt3dadd( 21.5047, 161.665, -17.6919, 0.15 ) }
    dend_23 { pt3dadd( 21.4704, 162.249, -17.7673, 0.15 ) }
    dend_23 { pt3dadd( 21.3908, 163.893, -17.9728, 0.22 ) }
    dend_23 { pt3dadd( 21.3546, 164.63, -18.0596, 0.22 ) }
    dend_23 { pt3dadd( 21.2556, 166.594, -18.2798, 0.22 ) }
    dend_23 { pt3dadd( 21.2452, 166.857, -18.3204, 0.22 ) }
    dend_23 { pt3dadd( 21.2293, 167.502, -18.442, 0.22 ) }
    dend_23 { pt3dadd( 21.2196, 167.864, -18.5183, 0.22 ) }
    dend_23 { pt3dadd( 21.2061, 168.384, -18.6351, 0.22 ) }
    dend_23 { pt3dadd( 21.144, 170.0, -19.0543, 0.22 ) }
    dend_23 { pt3dadd( 21.0209, 172.415, -19.8893, 0.29 ) }
    dend_23 { pt3dadd( 20.9676, 173.366, -20.2485, 0.22 ) }
    dend_23 { pt3dadd( 20.9063, 174.522, -20.7068, 0.22 ) }
    dend_23 { pt3dadd( 20.8563, 175.763, -21.2173, 0.22 ) }
    dend_23 { pt3dadd( 20.8032, 177.898, -22.1117, 0.22 ) }
    dend_23 { pt3dadd( 20.8237, 180.289, -23.1377, 0.15 ) }
    dend_23 { pt3dadd( 20.8465, 181.071, -23.4661, 0.15 ) }
    dend_23 { pt3dadd( 20.8762, 181.92, -23.8411, 0.15 ) }
    dend_23 { pt3dadd( 20.907, 182.83, -24.2438, 0.15 ) }
    dend_23 { pt3dadd( 20.9528, 184.469, -24.953, 0.15 ) }
    dend_23 { pt3dadd( 21.0295, 187.287, -26.1184, 0.15 ) }
    dend_23 { pt3dadd( 21.0701, 188.541, -26.5975, 0.15 ) }
    dend_23 { pt3dadd( 21.1369, 190.371, -27.3143, 0.15 ) }
    dend_23 { pt3dadd( 21.1912, 191.525, -27.7611, 0.15 ) }
    dend_23 { pt3dadd( 21.2606, 192.613, -28.1737, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_23 { pt3dadd( 21.3593, 193.68, -28.5789, 0.15 ) }
    dend_23 { pt3dadd( 21.5503, 195.333, -29.1827, 0.15 ) }
    dend_23 { pt3dadd( 21.7018, 196.484, -29.5906, 0.15 ) }
    dend_23 { pt3dadd( 21.8323, 197.887, -30.0666, 0.15 ) }
    dend_23 { pt3dadd( 21.8485, 198.215, -30.1889, 0.15 ) }
    dend_23 { pt3dadd( 21.8346, 199.799, -30.8057, 0.15 ) }
    dend_23 { pt3dadd( 21.75, 200.816, -31.216, 0.15 ) }
    dend_23 { pt3dadd( 21.5305, 202.098, -31.7435, 0.15 ) }
    dend_23 { pt3dadd( 20.9733, 204.355, -32.6615, 0.15 ) }
    dend_23 { pt3dadd( 20.4807, 205.774, -33.2219, 0.15 ) }
    dend_23 { pt3dadd( 19.8162, 207.248, -33.7661, 0.15 ) }
    dend_23 { pt3dadd( 19.2843, 208.176, -34.0604, 0.15 ) }
    dend_23 { pt3dadd( 18.6772, 209.12, -34.2982, 0.15 ) }
    dend_23 { pt3dadd( 18.0324, 210.038, -34.4623, 0.15 ) }
    dend_23 { pt3dadd( 16.8487, 211.628, -34.5691, 0.15 ) }
    dend_23 { pt3dadd( 15.9421, 212.838, -34.5351, 0.15 ) }
    dend_23 { pt3dadd( 14.9391, 214.279, -34.4236, 0.15 ) }
    dend_23 { pt3dadd( 13.8835, 216.049, -34.2141, 0.15 ) }
    dend_23 { pt3dadd( 13.4725, 216.853, -34.1003, 0.15 ) }
    dend_23 { pt3dadd( 12.8197, 218.397, -33.8582, 0.15 ) }
    dend_23 { pt3dadd( 12.3842, 219.655, -33.6689, 0.15 ) }
    dend_23 { pt3dadd( 11.6638, 221.97, -33.3706, 0.15 ) }
    dend_23 { pt3dadd( 11.0025, 224.123, -33.1658, 0.15 ) }
    dend_23 { pt3dadd( 10.8393, 224.638, -33.1322, 0.15 ) }
    dend_23 { pt3dadd( 10.4658, 225.836, -33.0908, 0.15 ) }
    dend_23 { pt3dadd( 9.65471, 228.619, -33.0785, 0.15 ) }
    dend_23 { pt3dadd( 9.14165, 230.497, -33.0939, 0.15 ) }
    dend_23 { pt3dadd( 8.5861, 232.86, -33.144, 0.15 ) }
    dend_23 { pt3dadd( 8.30776, 234.261, -33.2133, 0.15 ) }
    dend_23 { pt3dadd( 7.94928, 236.736, -33.3707, 0.07 ) }
    dend_23 { pt3dadd( 7.84007, 238.456, -33.5218, 0.07 ) }
    dend_23 { pt3dadd( 7.8912, 239.445, -33.6418, 0.07 ) }
    dend_23 { pt3dadd( 8.26969, 241.67, -34.0186, 0.07 ) }
    dend_23 { pt3dadd( 8.53197, 242.563, -34.2225, 0.07 ) }
    dend_23 { pt3dadd( 8.90627, 243.522, -34.5133, 0.07 ) }
    dend_23 { pt3dadd( 9.41, 244.572, -34.9751, 0.07 ) }
    dend_23 { pt3dadd( 9.80498, 245.337, -35.3923, 0.07 ) }
    dend_23 { pt3dadd( 10.3854, 246.387, -36.0823, 0.07 ) }
    dend_23 { pt3dadd( 10.7501, 246.98, -36.5195, 0.07 ) }
    dend_23 { pt3dadd( 11.2213, 247.81, -37.0929, 0.07 ) }
    dend_23 { pt3dadd( 11.9476, 249.227, -38.0085, 0.07 ) }
    dend_23 { pt3dadd( 12.3492, 250.049, -38.5005, 0.07 ) }
    dend_23 { pt3dadd( 12.972, 251.343, -39.2271, 0.07 ) }
    dend_23 { pt3dadd( 13.5429, 252.583, -39.8691, 0.07 ) }
    dend_23 { pt3dadd( 14.2698, 254.289, -40.6904, 0.07 ) }
    dend_23 { pt3dadd( 14.6809, 255.396, -41.2004, 0.07 ) }
    dend_23 { pt3dadd( 15.1475, 257.121, -41.9312, 0.07 ) }
    dend_23 { pt3dadd( 15.3286, 258.095, -42.3111, 0.07 ) }
    dend_23 { pt3dadd( 15.4509, 259.63, -42.8243, 0.07 ) }
    dend_23 { pt3dadd( 15.4418, 261.144, -43.3002, 0.07 ) }
    dend_23 { pt3dadd( 15.314, 262.979, -43.8294, 0.07 ) }
    dend_23 { pt3dadd( 15.0266, 265.345, -44.4754, 0.07 ) }
    dend_23 { pt3dadd( 14.8416, 266.51, -44.7944, 0.07 ) }
    dend_23 { pt3dadd( 14.545, 268.683, -45.4411, 0.07 ) }
    dend_23 { pt3dadd( 14.4288, 269.859, -45.8182, 0.07 ) }
    dend_23 { pt3dadd( 14.4055, 271.014, -46.1997, 0.07 ) }
    dend_23 { pt3dadd( 14.4628, 272.253, -46.6476, 0.07 ) }
    dend_23 { pt3dadd( 14.5777, 273.392, -47.1133, 0.07 ) }
    dend_23 { pt3dadd( 14.8664, 275.51, -48.0855, 0.07 ) }
    dend_23 { pt3dadd( 15.0438, 276.431, -48.5373, 0.07 ) }
    dend_23 { pt3dadd( 15.7673, 279.77, -50.159, 0.07 ) }
    dend_23 { pt3dadd( 15.9413, 280.51, -50.5143, 0.07 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 62/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 22.7162, 133.509, -7.07749, 0.07 ) }
    dend_20 { pt3dadd( 23.7547, 136.955, -6.77894, 0.07 ) }
    dend_20 { pt3dadd( 24.075, 138.194, -6.68116, 0.07 ) }
    dend_20 { pt3dadd( 24.5298, 140.131, -6.58163, 0.07 ) }
    dend_20 { pt3dadd( 24.9906, 142.125, -6.49125, 0.07 ) }
    dend_20 { pt3dadd( 25.7182, 145.364, -6.35618, 0.22 ) }
    dend_20 { pt3dadd( 26.0999, 147.119, -6.28763, 0.22 ) }
    dend_20 { pt3dadd( 26.5295, 149.406, -6.19264, 0.22 ) }
    dend_20 { pt3dadd( 27.0347, 152.323, -6.12147, 0.07 ) }
    dend_20 { pt3dadd( 27.3565, 154.18, -6.07592, 0.07 ) }
    dend_20 { pt3dadd( 27.5577, 155.257, -6.05731, 0.07 ) }
    dend_20 { pt3dadd( 27.6672, 155.868, -6.03815, 0.07 ) }
    dend_20 { pt3dadd( 28.0228, 157.88, -5.8816, 0.15 ) }
    dend_20 { pt3dadd( 28.3355, 159.744, -5.69633, 0.15 ) }
    dend_20 { pt3dadd( 28.5528, 161.236, -5.52374, 0.15 ) }
    dend_20 { pt3dadd( 28.7623, 163.115, -5.32054, 0.15 ) }
    dend_20 { pt3dadd( 28.9948, 165.817, -5.05181, 0.15 ) }
    dend_20 { pt3dadd( 29.0239, 166.9, -4.962, 0.15 ) }
    dend_20 { pt3dadd( 28.9649, 168.272, -4.89972, 0.15 ) }
    dend_20 { pt3dadd( 28.8803, 169.353, -4.88724, 0.15 ) }
    dend_20 { pt3dadd( 28.7612, 170.641, -4.91791, 0.15 ) }
    dend_20 { pt3dadd( 28.634, 172.653, -5.02824, 0.15 ) }
    dend_20 { pt3dadd( 28.5823, 176.053, -5.35328, 0.07 ) }
    dend_20 { pt3dadd( 28.6786, 179.132, -5.71162, 0.07 ) }
    dend_20 { pt3dadd( 28.8337, 181.097, -5.94535, 0.07 ) }
    dend_20 { pt3dadd( 28.962, 182.117, -6.08241, 0.07 ) }
    dend_20 { pt3dadd( 29.3909, 184.627, -6.44637, 0.07 ) }
    dend_20 { pt3dadd( 30.0114, 187.545, -6.89334, 0.07 ) }
    dend_20 { pt3dadd( 30.8028, 190.626, -7.38002, 0.07 ) }
    dend_20 { pt3dadd( 31.1761, 192.015, -7.58688, 0.07 ) }
    dend_20 { pt3dadd( 31.8062, 194.67, -7.94225, 0.07 ) }
    dend_20 { pt3dadd( 32.0121, 195.833, -8.04209, 0.07 ) }
    dend_20 { pt3dadd( 32.074, 196.404, -8.06135, 0.07 ) }
    dend_20 { pt3dadd( 32.1299, 197.646, -8.02191, 0.07 ) }
    dend_20 { pt3dadd( 32.143, 198.583, -7.96233, 0.07 ) }
    dend_20 { pt3dadd( 32.179, 201.764, -7.73075, 0.07 ) }
    dend_20 { pt3dadd( 32.2568, 204.791, -7.49539, 0.07 ) }
    dend_20 { pt3dadd( 32.3379, 206.59, -7.36781, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_20 { pt3dadd( 32.5383, 210.678, -7.07696, 0.07 ) }
    dend_20 { pt3dadd( 32.7171, 213.676, -6.8599, 0.07 ) }
    dend_20 { pt3dadd( 32.8116, 214.9, -6.77353, 0.07 ) }
    dend_20 { pt3dadd( 32.9323, 215.978, -6.70715, 0.07 ) }
    dend_20 { pt3dadd( 33.2392, 217.764, -6.67287, 0.07 ) }
    // Section: dend_16, id: dend_16, parent: dend_10 (entry count 5/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 28.8516, 32.9919, 18.3908, 0.37 ) }
    dend_16 { pt3dadd( 30.5699, 33.3705, 17.8725, 0.37 ) }
    dend_16 { pt3dadd( 32.308, 33.8412, 17.4321, 0.37 ) }
    dend_16 { pt3dadd( 33.2664, 34.1373, 17.2504, 0.52 ) }
    dend_16 { pt3dadd( 34.9297, 34.6782, 16.9958, 0.96 ) }
    dend_16 { pt3dadd( 36.3697, 35.1425, 16.8536, 0.96 ) }
    dend_16 { pt3dadd( 37.7501, 35.5315, 16.7481, 0.96 ) }
    dend_16 { pt3dadd( 38.731, 35.8041, 16.7169, 0.74 ) }
    dend_16 { pt3dadd( 39.6504, 36.0297, 16.7339, 0.44 ) }
    dend_16 { pt3dadd( 40.5198, 36.218, 16.755, 0.44 ) }
    dend_16 { pt3dadd( 41.6773, 36.4787, 16.7751, 0.44 ) }
    dend_16 { pt3dadd( 42.9261, 36.8059, 16.7235, 0.44 ) }
    dend_16 { pt3dadd( 44.1402, 37.1665, 16.5884, 0.52 ) }
    dend_16 { pt3dadd( 45.4919, 37.6551, 16.3426, 0.52 ) }
    dend_16 { pt3dadd( 47.8892, 38.7145, 15.7413, 0.96 ) }
    dend_16 { pt3dadd( 49.2489, 39.4266, 15.3373, 1.18 ) }
    dend_16 { pt3dadd( 50.3685, 40.0726, 14.9485, 0.59 ) }
    dend_16 { pt3dadd( 50.9553, 40.4342, 14.7282, 0.59 ) }
    dend_16 { pt3dadd( 51.9144, 41.0262, 14.3331, 0.59 ) }
    dend_16 { pt3dadd( 52.8559, 41.5759, 13.8997, 0.59 ) }
    dend_16 { pt3dadd( 53.3309, 41.8029, 13.6638, 0.59 ) }
    dend_16 { pt3dadd( 54.4557, 42.2329, 13.1501, 0.29 ) }
    dend_16 { pt3dadd( 55.729, 42.6456, 12.6664, 0.29 ) }
    dend_16 { pt3dadd( 56.2648, 42.7963, 12.4933, 0.22 ) }
    dend_16 { pt3dadd( 57.13, 43.0118, 12.2642, 0.22 ) }
    dend_16 { pt3dadd( 58.2718, 43.3276, 12.019, 0.22 ) }
    dend_16 { pt3dadd( 59.5537, 43.8233, 11.7183, 0.22 ) }
    dend_16 { pt3dadd( 61.5635, 44.6548, 11.2736, 0.07 ) }
    dend_16 { pt3dadd( 62.7731, 45.1688, 11.0245, 0.07 ) }
    dend_16 { pt3dadd( 63.9185, 45.6641, 10.7925, 0.07 ) }
    dend_16 { pt3dadd( 66.4632, 46.8023, 10.2917, 0.07 ) }
    dend_16 { pt3dadd( 69.607, 48.3914, 9.65176, 0.07 ) }
    dend_16 { pt3dadd( 78.741, 53.9815, 7.29763, 0.07 ) }
    dend_16 { pt3dadd( 88.9453, 57.5963, 5.5592, 0.07 ) }
    dend_16 { pt3dadd( 99.7376, 59.469, 5.07562, 0.07 ) }
    dend_16 { pt3dadd( 110.471, 60.7021, 6.9444, 0.07 ) }
    dend_16 { pt3dadd( 120.782, 61.4212, 10.6036, 0.07 ) }
    dend_16 { pt3dadd( 131.004, 61.544, 14.5661, 0.07 ) }
    dend_16 { pt3dadd( 141.86, 60.5362, 15.7274, 0.07 ) }
    dend_16 { pt3dadd( 152.598, 60.5492, 17.9438, 0.07 ) }
    dend_16 { pt3dadd( 163.027, 60.5643, 21.329, 0.07 ) }
    dend_16 { pt3dadd( 173.735, 60.1799, 23.6552, 0.07 ) }
    dend_16 { pt3dadd( 184.695, 60.2266, 23.9451, 0.07 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 48/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 28.8516, 32.9919, 18.3908, 1.55 ) }
    dend_11 { pt3dadd( 30.0497, 34.1276, 18.7978, 1.55 ) }
    dend_11 { pt3dadd( 31.4312, 35.7345, 19.4478, 1.33 ) }
    dend_11 { pt3dadd( 32.5816, 37.4017, 20.4444, 1.11 ) }
    dend_11 { pt3dadd( 33.4055, 38.8209, 21.5055, 0.81 ) }
    dend_11 { pt3dadd( 34.368, 40.6392, 23.0316, 0.81 ) }
    dend_11 { pt3dadd( 35.0773, 42.0442, 24.3184, 0.81 ) }
    dend_11 { pt3dadd( 35.7076, 43.4015, 25.8975, 0.74 ) }
    dend_11 { pt3dadd( 36.5536, 45.4308, 28.8621, 0.88 ) }
    dend_11 { pt3dadd( 36.8518, 46.2301, 30.2601, 0.88 ) }
    dend_11 { pt3dadd( 36.9302, 46.4274, 30.6567, 0.88 ) }
    dend_11 { pt3dadd( 37.1115, 46.7196, 31.3147, 0.74 ) }
    dend_11 { pt3dadd( 37.762, 47.2878, 32.6116, 0.52 ) }
    dend_11 { pt3dadd( 38.4198, 47.7725, 33.4003, 0.37 ) }
    dend_11 { pt3dadd( 38.8988, 48.3632, 33.6633, 0.37 ) }
    dend_11 { pt3dadd( 39.6935, 49.4854, 34.0097, 0.37 ) }
    dend_11 { pt3dadd( 40.6162, 50.723, 34.4589, 0.59 ) }
    dend_11 { pt3dadd( 41.1811, 51.4552, 34.7537, 0.59 ) }
    dend_11 { pt3dadd( 42.4042, 53.0159, 35.4568, 0.59 ) }
    dend_11 { pt3dadd( 43.673, 54.4782, 36.2408, 0.59 ) }
    dend_11 { pt3dadd( 44.5105, 55.1787, 36.7787, 0.29 ) }
    dend_11 { pt3dadd( 46.2352, 55.8777, 37.902, 0.15 ) }
    dend_11 { pt3dadd( 46.9375, 56.0011, 38.3584, 0.15 ) }
    dend_11 { pt3dadd( 47.5019, 55.9858, 38.7073, 0.15 ) }
    dend_11 { pt3dadd( 48.2051, 55.8039, 39.1424, 0.15 ) }
    dend_11 { pt3dadd( 49.5412, 55.2025, 39.9258, 0.15 ) }
    dend_11 { pt3dadd( 50.6779, 54.5733, 40.6102, 0.15 ) }
    dend_11 { pt3dadd( 57.7109, 63.9778, 47.4509, 0.15 ) }
    dend_11 { pt3dadd( 66.5145, 70.02, 55.8588, 0.15 ) }
    dend_11 { pt3dadd( 73.2725, 75.8149, 66.1278, 0.15 ) }
    dend_11 { pt3dadd( 81.7673, 82.6137, 74.2714, 0.15 ) }
    dend_11 { pt3dadd( 88.569, 90.0295, 83.4062, 0.15 ) }
    dend_11 { pt3dadd( 96.297, 95.2025, 93.317, 0.15 ) }
    dend_11 { pt3dadd( 102.045, 101.758, 103.742, 0.15 ) }
    dend_11 { pt3dadd( 109.092, 107.686, 113.737, 0.15 ) }
    dend_11 { pt3dadd( 114.89, 115.407, 123.301, 0.15 ) }
    dend_11 { pt3dadd( 122.567, 122.859, 131.683, 0.15 ) }
    dend_11 { pt3dadd( 131.306, 131.276, 137.804, 0.15 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 86/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -142.572, -175.778, -152.468, 0.07 ) }
    dend_65 { pt3dadd( -142.601, -176.774, -151.83, 0.07 ) }
    dend_65 { pt3dadd( -142.56, -177.802, -151.258, 0.07 ) }
    dend_65 { pt3dadd( -142.484, -178.571, -150.938, 0.07 ) }
    dend_65 { pt3dadd( -142.372, -179.306, -150.72, 0.07 ) }
    dend_65 { pt3dadd( -142.139, -180.408, -150.472, 0.07 ) }
    dend_65 { pt3dadd( -141.795, -181.646, -150.25, 0.07 ) }
    dend_65 { pt3dadd( -141.432, -182.638, -150.176, 0.07 ) }
    dend_65 { pt3dadd( -140.979, -183.875, -150.167, 0.07 ) }
    dend_65 { pt3dadd( -140.687, -184.863, -150.189, 0.07 ) }
    dend_65 { pt3dadd( -140.498, -185.723, -150.251, 0.07 ) }
    dend_65 { pt3dadd( -140.399, -186.87, -150.375, 0.07 ) }
    dend_65 { pt3dadd( -140.501, -188.307, -150.564, 0.07 ) }
    dend_65 { pt3dadd( -140.811, -189.772, -150.798, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_65 { pt3dadd( -141.348, -191.507, -151.098, 0.07 ) }
    dend_65 { pt3dadd( -141.867, -192.844, -151.378, 0.07 ) }
    dend_65 { pt3dadd( -142.731, -194.708, -151.841, 0.07 ) }
    dend_65 { pt3dadd( -143.499, -196.177, -152.27, 0.07 ) }
    dend_65 { pt3dadd( -144.094, -197.274, -152.638, 0.07 ) }
    dend_65 { pt3dadd( -144.565, -198.153, -152.958, 0.07 ) }
    dend_65 { pt3dadd( -144.809, -198.61, -153.128, 0.07 ) }
    dend_65 { pt3dadd( -145.309, -199.588, -153.47, 0.07 ) }
    dend_65 { pt3dadd( -145.872, -200.802, -153.922, 0.07 ) }
    dend_65 { pt3dadd( -146.245, -201.67, -154.244, 0.07 ) }
    dend_65 { pt3dadd( -146.624, -202.517, -154.514, 0.07 ) }
    dend_65 { pt3dadd( -146.946, -203.182, -154.706, 0.07 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 12/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -142.572, -175.778, -152.468, 0.07 ) }
    dend_64 { pt3dadd( -143.609, -175.24, -153.195, 0.07 ) }
    dend_64 { pt3dadd( -144.68, -174.597, -154.056, 0.07 ) }
    dend_64 { pt3dadd( -145.255, -174.226, -154.554, 0.07 ) }
    dend_64 { pt3dadd( -146.094, -173.642, -155.321, 0.07 ) }
    dend_64 { pt3dadd( -146.824, -173.073, -156.155, 0.07 ) }
    dend_64 { pt3dadd( -147.458, -172.522, -157.03, 0.07 ) }
    dend_64 { pt3dadd( -147.999, -171.948, -158.006, 0.07 ) }
    dend_64 { pt3dadd( -148.243, -171.657, -158.522, 0.07 ) }
    dend_64 { pt3dadd( -148.392, -171.471, -158.867, 0.07 ) }
    dend_64 { pt3dadd( -149.222, -170.457, -160.855, 0.07 ) }
    dend_64 { pt3dadd( -149.666, -169.97, -161.775, 0.07 ) }
    dend_64 { pt3dadd( -150.164, -169.477, -162.669, 0.07 ) }
    dend_64 { pt3dadd( -150.571, -169.124, -163.296, 0.07 ) }
    dend_64 { pt3dadd( -151.13, -168.692, -164.135, 0.07 ) }
    dend_64 { pt3dadd( -151.51, -168.419, -164.637, 0.07 ) }
    dend_64 { pt3dadd( -152.331, -167.846, -165.687, 0.07 ) }
    dend_64 { pt3dadd( -152.926, -167.404, -166.639, 0.07 ) }
    dend_64 { pt3dadd( -153.641, -166.784, -168.189, 0.07 ) }
    dend_64 { pt3dadd( -154.219, -166.18, -169.875, 0.07 ) }
    dend_64 { pt3dadd( -154.57, -165.674, -171.395, 0.07 ) }
    dend_64 { pt3dadd( -154.852, -164.974, -173.57, 0.07 ) }
    dend_64 { pt3dadd( -154.934, -164.534, -175.044, 0.07 ) }
    dend_64 { pt3dadd( -154.934, -164.352, -175.642, 0.07 ) }
    dend_64 { pt3dadd( -154.872, -164.022, -176.65, 0.07 ) }
    dend_64 { pt3dadd( -154.765, -163.554, -177.982, 0.07 ) }
    dend_64 { pt3dadd( -154.71, -163.283, -178.809, 0.07 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 39/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 170.001, -70.4276, 72.8784, 0.29 ) }
    dend_59 { pt3dadd( 180.93, -70.9676, 78.1644, 0.29 ) }
    dend_59 { pt3dadd( 191.914, -71.0254, 83.3622, 0.29 ) }
    dend_59 { pt3dadd( 203.453, -69.7232, 86.9443, 0.29 ) }
    dend_59 { pt3dadd( 214.541, -69.9285, 91.9147, 0.29 ) }
    dend_59 { pt3dadd( 226.019, -69.3849, 95.8667, 0.29 ) }
    dend_59 { pt3dadd( 237.456, -68.1711, 99.7923, 0.29 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 46/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 170.001, -70.4276, 72.8784, 0.07 ) }
    dend_58 { pt3dadd( 180.733, -71.0753, 78.8623, 0.29 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 48/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -107.385, 98.1954, 139.296, 0.29 ) }
    dend_47 { pt3dadd( -112.937, 108.401, 146.147, 0.29 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 50/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -107.385, 98.1954, 139.296, 0.07 ) }
    dend_46 { pt3dadd( -112.363, 103.109, 143.545, 0.29 ) }
    // Section: dend_40, id: dend_40, parent: dend_30 (entry count 52/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -46.2344, -16.0472, 18.1332, 0.22 ) }
    dend_40 { pt3dadd( -48.0051, -17.1052, 16.304, 0.22 ) }
    dend_40 { pt3dadd( -49.4161, -17.4219, 15.5897, 0.29 ) }
    dend_40 { pt3dadd( -49.9733, -17.487, 15.3852, 0.29 ) }
    dend_40 { pt3dadd( -50.6069, -17.5314, 15.1901, 0.29 ) }
    dend_40 { pt3dadd( -51.6656, -17.5616, 14.9148, 0.29 ) }
    dend_40 { pt3dadd( -54.234, -17.5342, 14.2876, 0.29 ) }
    dend_40 { pt3dadd( -56.9096, -17.3362, 13.7819, 0.29 ) }
    dend_40 { pt3dadd( -58.8985, -17.1467, 13.4652, 0.29 ) }
    dend_40 { pt3dadd( -60.4359, -17.0022, 13.2254, 0.29 ) }
    dend_40 { pt3dadd( -62.6808, -16.8595, 12.8796, 0.29 ) }
    dend_40 { pt3dadd( -64.4011, -16.8293, 12.5859, 0.29 ) }
    dend_40 { pt3dadd( -65.6687, -16.88, 12.306, 0.29 ) }
    dend_40 { pt3dadd( -67.3129, -17.0526, 11.8573, 0.29 ) }
    dend_40 { pt3dadd( -69.1792, -17.36, 11.2898, 0.29 ) }
    dend_40 { pt3dadd( -70.5187, -17.6627, 10.8398, 0.29 ) }
    dend_40 { pt3dadd( -72.1432, -18.1803, 10.2254, 0.07 ) }
    dend_40 { pt3dadd( -72.8294, -18.4591, 9.95242, 0.07 ) }
    dend_40 { pt3dadd( -73.3485, -18.6969, 9.723, 0.07 ) }
    dend_40 { pt3dadd( -74.081, -19.0682, 9.27885, 0.07 ) }
    dend_40 { pt3dadd( -84.2256, -18.2915, 6.39129, 0.07 ) }
    dend_40 { pt3dadd( -93.9308, -17.4393, 2.27581, 0.07 ) }
    dend_40 { pt3dadd( -104.193, -16.7194, -0.180668, 0.07 ) }
    dend_40 { pt3dadd( -113.936, -17.8339, -4.14063, 0.07 ) }
    dend_40 { pt3dadd( -123.273, -17.1177, -9.05643, 0.07 ) }
    dend_40 { pt3dadd( -132.002, -14.9735, -14.6295, 0.07 ) }
    dend_40 { pt3dadd( -140.935, -11.2675, -18.9101, 0.07 ) }
    dend_40 { pt3dadd( -150.788, -8.14129, -21.1442, 0.07 ) }
    dend_40 { pt3dadd( -160.696, -4.90319, -22.933, 0.07 ) }
    dend_40 { pt3dadd( -170.955, -3.12764, -24.7889, 0.07 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 82/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -46.2344, -16.0472, 18.1332, 0.88 ) }
    dend_31 { pt3dadd( -46.2219, -16.9415, 18.7408, 0.88 ) }
    dend_31 { pt3dadd( -46.2543, -18.6094, 19.8552, 0.88 ) }
    dend_31 { pt3dadd( -46.4364, -19.6584, 20.6419, 0.88 ) }
    dend_31 { pt3dadd( -46.732, -20.3756, 21.2807, 1.11 ) }
    dend_31 { pt3dadd( -47.3047, -21.0987, 22.075, 1.11 ) }
    dend_31 { pt3dadd( -47.9268, -21.6756, 22.7867, 1.11 ) }
    dend_31 { pt3dadd( -48.277, -21.8969, 23.1112, 0.74 ) }
    dend_31 { pt3dadd( -49.9876, -22.7339, 24.4852, 0.88 ) }
    dend_31 { pt3dadd( -51.6243, -23.3717, 25.6941, 0.88 ) }
    dend_31 { pt3dadd( -53.7679, -24.043, 27.1792, 1.03 ) }
    dend_31 { pt3dadd( -55.1955, -24.3977, 28.1067, 0.81 ) }
    dend_31 { pt3dadd( -56.293, -24.6239, 28.7923, 0.81 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 95/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -10.667, -149.447, 84.1751, 0.29 ) }
    dend_29 { pt3dadd( -10.7165, -158.08, 85.6206, 0.29 ) }
    dend_29 { pt3dadd( -9.06726, -166.56, 87.032, 0.29 ) }
    dend_29 { pt3dadd( -8.04018, -175.234, 87.5966, 0.29 ) }
    dend_29 { pt3dadd( -7.33263, -183.92, 86.7865, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_29 { pt3dadd( -6.9029, -192.653, 86.3699, 0.29 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 1/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -10.667, -149.447, 84.1751, 0.07 ) }
    dend_28 { pt3dadd( -8.78977, -158.253, 89.7863, 0.29 ) }
    dend_28 { pt3dadd( -6.15762, -167.096, 95.0214, 0.29 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 4/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 33.2392, 217.764, -6.67287, 0.15 ) }
    dend_22 { pt3dadd( 32.7886, 220.649, -7.17125, 0.15 ) }
    dend_22 { pt3dadd( 32.5023, 222.205, -7.45649, 0.15 ) }
    dend_22 { pt3dadd( 32.199, 223.99, -7.77002, 0.15 ) }
    dend_22 { pt3dadd( 31.9066, 225.759, -8.09327, 0.15 ) }
    dend_22 { pt3dadd( 31.5834, 227.917, -8.5393, 0.15 ) }
    dend_22 { pt3dadd( 31.1475, 231.06, -9.28974, 0.15 ) }
    dend_22 { pt3dadd( 30.7653, 233.87, -10.0423, 0.15 ) }
    dend_22 { pt3dadd( 30.5647, 235.595, -10.5555, 0.15 ) }
    dend_22 { pt3dadd( 30.4548, 236.743, -10.9317, 0.15 ) }
    dend_22 { pt3dadd( 30.3241, 239.063, -11.8247, 0.15 ) }
    dend_22 { pt3dadd( 30.3464, 240.507, -12.4714, 0.15 ) }
    dend_22 { pt3dadd( 30.4304, 241.149, -12.8067, 0.15 ) }
    dend_22 { pt3dadd( 30.7892, 242.642, -13.6771, 0.15 ) }
    dend_22 { pt3dadd( 31.1518, 243.776, -14.3871, 0.15 ) }
    dend_22 { pt3dadd( 31.5866, 244.852, -15.1023, 0.15 ) }
    dend_22 { pt3dadd( 31.9302, 245.593, -15.6101, 0.15 ) }
    dend_22 { pt3dadd( 32.5215, 247.035, -16.5789, 0.15 ) }
    dend_22 { pt3dadd( 32.8354, 248.055, -17.2801, 0.15 ) }
    dend_22 { pt3dadd( 32.9546, 248.747, -17.7478, 0.15 ) }
    dend_22 { pt3dadd( 33.0455, 250.42, -18.7455, 0.15 ) }
    dend_22 { pt3dadd( 33.0398, 251.054, -19.0546, 0.15 ) }
    dend_22 { pt3dadd( 32.9573, 253.276, -19.9664, 0.15 ) }
    dend_22 { pt3dadd( 32.923, 254.75, -20.4968, 0.15 ) }
    dend_22 { pt3dadd( 32.9865, 256.234, -21.0415, 0.15 ) }
    dend_22 { pt3dadd( 33.2122, 257.738, -21.6062, 0.15 ) }
    dend_22 { pt3dadd( 33.8452, 259.956, -22.5075, 0.15 ) }
    dend_22 { pt3dadd( 34.1163, 260.608, -22.8109, 0.15 ) }
    dend_22 { pt3dadd( 35.0137, 262.239, -23.6759, 0.15 ) }
    dend_22 { pt3dadd( 35.8547, 263.651, -24.5467, 0.15 ) }
    dend_22 { pt3dadd( 36.7307, 265.158, -25.6016, 0.15 ) }
    dend_22 { pt3dadd( 37.4038, 266.515, -26.6322, 0.15 ) }
    dend_22 { pt3dadd( 37.8757, 267.816, -27.632, 0.15 ) }
    dend_22 { pt3dadd( 38.0532, 268.41, -28.0826, 0.15 ) }
    dend_22 { pt3dadd( 38.3161, 269.902, -29.1267, 0.15 ) }
    dend_22 { pt3dadd( 38.3548, 270.942, -29.7609, 0.15 ) }
    dend_22 { pt3dadd( 38.2204, 272.262, -30.511, 0.15 ) }
    dend_22 { pt3dadd( 37.9225, 274.057, -31.4374, 0.15 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 42/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 33.2392, 217.764, -6.67287, 0.07 ) }
    dend_21 { pt3dadd( 34.5649, 220.136, -6.81663, 0.07 ) }
    dend_21 { pt3dadd( 35.0274, 221.072, -6.9504, 0.07 ) }
    dend_21 { pt3dadd( 35.6066, 222.444, -7.2756, 0.07 ) }
    dend_21 { pt3dadd( 36.0464, 223.667, -7.67309, 0.07 ) }
    dend_21 { pt3dadd( 36.4307, 225.024, -8.26257, 0.07 ) }
    dend_21 { pt3dadd( 36.6576, 225.949, -8.73236, 0.07 ) }
    dend_21 { pt3dadd( 36.7952, 226.903, -9.32558, 0.07 ) }
    dend_21 { pt3dadd( 36.8961, 227.968, -10.0882, 0.07 ) }
    dend_21 { pt3dadd( 36.9252, 228.848, -10.8131, 0.07 ) }
    dend_21 { pt3dadd( 36.9384, 230.664, -12.4695, 0.07 ) }
    dend_21 { pt3dadd( 36.923, 231.172, -12.94, 0.07 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 54/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 184.695, 60.2266, 23.9451, 0.22 ) }
    dend_18 { pt3dadd( 196.792, 62.4116, 24.2243, 0.22 ) }
    dend_18 { pt3dadd( 208.288, 66.3755, 22.4104, 0.22 ) }
    dend_18 { pt3dadd( 219.996, 70.1203, 22.1453, 0.22 ) }
    dend_18 { pt3dadd( 232.081, 72.3874, 22.0971, 0.22 ) }
    dend_18 { pt3dadd( 243.924, 75.4527, 23.3237, 0.22 ) }
    dend_18 { pt3dadd( 255.96, 77.8508, 24.0799, 0.22 ) }
    dend_18 { pt3dadd( 267.812, 81.0883, 23.6198, 0.22 ) }
    dend_18 { pt3dadd( 279.738, 84.0313, 23.0955, 0.22 ) }
    dend_18 { pt3dadd( 291.908, 85.6658, 22.4564, 0.22 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 64/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 184.695, 60.2266, 23.9451, 0.07 ) }
    dend_17 { pt3dadd( 195.881, 62.3783, 23.9755, 0.22 ) }
    dend_17 { pt3dadd( 206.478, 66.3535, 22.6917, 0.22 ) }
    dend_17 { pt3dadd( 217.483, 68.6127, 20.8084, 0.22 ) }
    dend_17 { pt3dadd( 228.441, 69.9913, 18.0229, 0.22 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 69/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 131.306, 131.276, 137.804, 0.22 ) }
    dend_13 { pt3dadd( 138.563, 138.276, 146.368, 0.22 ) }
    dend_13 { pt3dadd( 145.217, 144.626, 155.876, 0.22 ) }
    dend_13 { pt3dadd( 152.167, 150.515, 165.468, 0.22 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 73/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 131.306, 131.276, 137.804, 0.07 ) }
    dend_12 { pt3dadd( 135.536, 135.169, 142.659, 0.22 ) }
    dend_12 { pt3dadd( 139.108, 138.914, 148.119, 0.22 ) }
    dend_12 { pt3dadd( 142.055, 142.905, 153.775, 0.22 ) }
    dend_12 { pt3dadd( 145.359, 146.567, 159.456, 0.22 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 78/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -170.955, -3.12764, -24.7889, 0.22 ) }
    dend_42 { pt3dadd( -180.562, -3.14811, -28.469, 0.22 ) }
    dend_42 { pt3dadd( -189.57, -3.61094, -33.417, 0.22 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 81/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -170.955, -3.12764, -24.7889, 0.07 ) }
    dend_41 { pt3dadd( -180.405, -2.6545, -28.3474, 0.22 ) }
    dend_41 { pt3dadd( -189.585, -1.19647, -32.3192, 0.22 ) }
    dend_41 { pt3dadd( -198.52, 2.2393, -35.5638, 0.22 ) }
    dend_41 { pt3dadd( -206.375, 7.75889, -38.7281, 0.22 ) }
    // Section: dend_35, id: dend_35, parent: dend_31 (entry count 86/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -56.293, -24.6239, 28.7923, 0.74 ) }
    dend_35 { pt3dadd( -57.7373, -24.3051, 29.5528, 0.74 ) }
    dend_35 { pt3dadd( -59.2756, -23.8373, 30.3515, 0.74 ) }
    dend_35 { pt3dadd( -60.5285, -23.3642, 30.9952, 0.74 ) }
    dend_35 { pt3dadd( -61.411, -22.9577, 31.4515, 0.37 ) }
    dend_35 { pt3dadd( -62.4853, -22.4345, 31.9906, 0.37 ) }
    dend_35 { pt3dadd( -63.9179, -21.7444, 32.6773, 0.52 ) }
    dend_35 { pt3dadd( -64.8151, -21.2947, 33.0773, 0.52 ) }
    dend_35 { pt3dadd( -65.8819, -20.8341, 33.5019, 0.66 ) }
    dend_35 { pt3dadd( -67.4406, -20.3327, 34.0433, 0.66 ) }
    dend_35 { pt3dadd( -68.59, -20.1292, 34.4082, 0.66 ) }
    dend_35 { pt3dadd( -69.63, -20.1042, 34.7079, 0.66 ) }
    dend_35 { pt3dadd( -71.3335, -20.2501, 35.1665, 0.66 ) }
    dend_35 { pt3dadd( -72.9226, -20.4629, 35.5773, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_35 { pt3dadd( -73.7922, -20.592, 35.8003, 0.66 ) }
    dend_35 { pt3dadd( -74.8071, -20.7834, 36.0429, 0.81 ) }
    dend_35 { pt3dadd( -76.6497, -21.1674, 36.3943, 0.44 ) }
    dend_35 { pt3dadd( -77.851, -21.4266, 36.5361, 0.44 ) }
    dend_35 { pt3dadd( -79.331, -21.7701, 36.5645, 0.44 ) }
    dend_35 { pt3dadd( -80.1982, -21.9682, 36.4798, 0.44 ) }
    dend_35 { pt3dadd( -81.8335, -22.3711, 36.1875, 0.44 ) }
    dend_35 { pt3dadd( -83.5626, -22.8798, 35.7056, 0.44 ) }
    dend_35 { pt3dadd( -84.517, -23.224, 35.3044, 0.44 ) }
    dend_35 { pt3dadd( -85.5169, -23.6229, 34.7855, 0.44 ) }
    dend_35 { pt3dadd( -86.3028, -23.933, 34.3117, 0.44 ) }
    dend_35 { pt3dadd( -87.1491, -24.1342, 33.7945, 0.44 ) }
    dend_35 { pt3dadd( -88.3997, -24.125, 33.0492, 0.37 ) }
    dend_35 { pt3dadd( -89.3424, -23.9795, 32.5677, 0.37 ) }
    dend_35 { pt3dadd( -90.1013, -23.7807, 32.1859, 0.37 ) }
    dend_35 { pt3dadd( -90.763, -23.5395, 31.8367, 0.37 ) }
    dend_35 { pt3dadd( -92.6564, -22.6427, 30.7701, 0.22 ) }
    dend_35 { pt3dadd( -93.7593, -22.066, 30.1237, 0.22 ) }
    dend_35 { pt3dadd( -95.1488, -21.1993, 29.3254, 0.07 ) }
    dend_35 { pt3dadd( -96.1867, -20.4886, 28.7745, 0.07 ) }
    dend_35 { pt3dadd( -96.7923, -20.0343, 28.4582, 0.07 ) }
    dend_35 { pt3dadd( -97.7041, -19.3232, 28.0072, 0.07 ) }
    dend_35 { pt3dadd( -108.668, -18.9632, 28.4493, 0.07 ) }
    dend_35 { pt3dadd( -119.543, -19.5341, 29.8438, 0.07 ) }
    dend_35 { pt3dadd( -130.323, -20.4744, 31.6951, 0.07 ) }
    dend_35 { pt3dadd( -140.464, -20.3667, 35.8993, 0.07 ) }
    dend_35 { pt3dadd( -150.511, -21.9939, 40.0143, 0.07 ) }
    dend_35 { pt3dadd( -160.169, -25.0195, 44.2678, 0.07 ) }
    dend_35 { pt3dadd( -170.639, -27.256, 46.7006, 0.07 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 29/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -56.293, -24.6239, 28.7923, 0.37 ) }
    dend_32 { pt3dadd( -58.1744, -26.8996, 29.4191, 0.37 ) }
    dend_32 { pt3dadd( -58.8136, -27.6729, 29.6321, 0.37 ) }
    dend_32 { pt3dadd( -59.86, -28.9385, 29.9807, 0.37 ) }
    dend_32 { pt3dadd( -60.7266, -29.9867, 30.2694, 0.37 ) }
    dend_32 { pt3dadd( -61.4522, -30.8644, 30.5111, 0.37 ) }
    dend_32 { pt3dadd( -68.8732, -39.3325, 33.3733, 0.37 ) }
    dend_32 { pt3dadd( -75.0376, -47.975, 38.0935, 0.37 ) }
    dend_32 { pt3dadd( -80.6482, -57.0065, 42.7758, 0.37 ) }
    dend_32 { pt3dadd( -86.7188, -65.164, 48.3949, 0.37 ) }
    dend_32 { pt3dadd( -92.4694, -73.2375, 54.4547, 0.37 ) }
    dend_32 { pt3dadd( -97.5927, -80.3185, 62.1087, 0.37 ) }
    dend_32 { pt3dadd( -102.247, -86.5361, 70.7489, 0.37 ) }
    dend_32 { pt3dadd( -106.942, -91.296, 80.2501, 0.37 ) }
    dend_32 { pt3dadd( -111.013, -96.7433, 89.6692, 0.37 ) }
    dend_32 { pt3dadd( -116.033, -100.089, 99.5984, 0.37 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 45/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 152.167, 150.515, 165.468, 0.29 ) }
    dend_15 { pt3dadd( 157.339, 154.909, 171.919, 0.29 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 47/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 152.167, 150.515, 165.468, 0.07 ) }
    dend_14 { pt3dadd( 157.286, 154.911, 171.913, 0.29 ) }
    dend_14 { pt3dadd( 162.824, 158.179, 178.674, 0.29 ) }
    dend_14 { pt3dadd( 168.835, 160.527, 185.414, 0.29 ) }
    dend_14 { pt3dadd( 174.95, 161.332, 192.415, 0.29 ) }
    dend_14 { pt3dadd( 181.373, 161.112, 199.18, 0.29 ) }
    dend_14 { pt3dadd( 188.886, 161.117, 204.714, 0.29 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 54/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -170.639, -27.256, 46.7006, 0.22 ) }
    dend_39 { pt3dadd( -182.261, -27.5614, 48.448, 0.22 ) }
    dend_39 { pt3dadd( -193.937, -27.2279, 49.7847, 0.22 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 57/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -170.639, -27.256, 46.7006, 0.07 ) }
    dend_36 { pt3dadd( -181.309, -27.3308, 48.6383, 0.22 ) }
    dend_36 { pt3dadd( -192.063, -26.9405, 49.9881, 0.22 ) }
    dend_36 { pt3dadd( -202.437, -27.4312, 53.1144, 0.22 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 61/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -116.033, -100.089, 99.5984, 0.29 ) }
    dend_34 { pt3dadd( -122.645, -108.477, 107.406, 0.29 ) }
    dend_34 { pt3dadd( -129.608, -116.69, 115.096, 0.29 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 64/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -116.033, -100.089, 99.5984, 0.07 ) }
    dend_33 { pt3dadd( -120.124, -105.058, 104.727, 0.29 ) }
    dend_33 { pt3dadd( -125.016, -110.08, 109.037, 0.29 ) }
    dend_33 { pt3dadd( -130.52, -114.69, 113.061, 0.29 ) }
    dend_33 { pt3dadd( -135.231, -120.851, 115.814, 0.29 ) }
    dend_33 { pt3dadd( -139.263, -126.368, 120.401, 0.29 ) }
    dend_33 { pt3dadd( -143.91, -131.286, 125.086, 0.29 ) }
    dend_33 { pt3dadd( -149.543, -135.748, 129.098, 0.29 ) }
    dend_33 { pt3dadd( -154.086, -141.095, 133.399, 0.29 ) }
    dend_33 { pt3dadd( -157.346, -147.033, 138.074, 0.29 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 74/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -202.437, -27.4312, 53.1144, 0.29 ) }
    dend_38 { pt3dadd( -212.671, -27.4458, 55.1435, 0.29 ) }
    dend_38 { pt3dadd( -223.04, -28.1616, 56.0502, 0.29 ) }
    dend_38 { pt3dadd( -232.803, -31.6777, 57.1339, 0.29 ) }
    dend_38 { pt3dadd( -242.411, -35.5927, 58.2359, 0.29 ) }
    dend_38 { pt3dadd( -252.147, -39.0493, 56.7818, 0.29 ) }
    dend_38 { pt3dadd( -261.588, -43.4869, 56.9437, 0.29 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 81/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -202.437, -27.4312, 53.1144, 0.07 ) }
    dend_37 { pt3dadd( -211.017, -27.3993, 54.9758, 0.29 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_70, dend_51, dend_24, dend_5, dend_0, dend_74, dend_71, dend_61, dend_52, dend_48, dend_25, dend_9, dend_6, dend_4, dend_1, dend_76, dend_75, dend_73, dend_72, dend_67, dend_62, dend_56, dend_53, dend_50, dend_49, dend_43, dend_26, dend_19, dend_10, dend_8, dend_7, dend_3, dend_2, dend_69, dend_68, dend_66, dend_63, dend_60, dend_57, dend_55, dend_54, dend_45, dend_44, dend_30, dend_27, dend_23, dend_20, dend_16, dend_11, dend_65, dend_64, dend_59, dend_58, dend_47, dend_46, dend_40, dend_31, dend_29, dend_28, dend_22, dend_21, dend_18, dend_17, dend_13, dend_12, dend_42, dend_41, dend_35, dend_32, dend_15, dend_14, dend_39, dend_36, dend_34, dend_33, dend_38, dend_37]}
    ModelViewParmSubset_2 = new SectionList()
    dend_70 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_70, dend_51, dend_24, dend_5, dend_0, dend_74, dend_71, dend_61, dend_52, dend_48, dend_25, dend_9, dend_6, dend_4, dend_1, dend_76, dend_75, dend_73, dend_72, dend_67, dend_62, dend_56, dend_53, dend_50, dend_49, dend_43, dend_26, dend_19, dend_10, dend_8, dend_7, dend_3, dend_2, dend_69, dend_68, dend_66, dend_63, dend_60, dend_57, dend_55, dend_54, dend_45, dend_44, dend_30, dend_27, dend_23, dend_20, dend_16, dend_11, dend_65, dend_64, dend_59, dend_58, dend_47, dend_46, dend_40, dend_31, dend_29, dend_28, dend_22, dend_21, dend_18, dend_17, dend_13, dend_12, dend_42, dend_41, dend_35, dend_32, dend_15, dend_14, dend_39, dend_36, dend_34, dend_33, dend_38, dend_37]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_73 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_71 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_48 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_6 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_4 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_76 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_75 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_67 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_62 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_56 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_53 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_43 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_19 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_66 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_44 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_27 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_23 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_20 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_16 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_11 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_59 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_40 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_29 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_22 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_18 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_17 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_41 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_35 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_32 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_14 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_33 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_38 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_24 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_5 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_51 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_25 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_52 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_26 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_70 OneSecGrp_SectionRef_2.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_9 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_61 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_10 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_30 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_31 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_74 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_50 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_49 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_68 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_69 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_1 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_3 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_2 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_60 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_73 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_42 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_7 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_45 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_57 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_8 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_72 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_55 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_39 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_46 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_54 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_34 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_47 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_58 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_36 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_28 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_37 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_21 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_12 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_13 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_15 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_63 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_65 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_64 OneSecGrp_SectionRef_54.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_51, dend_51, dend_51, dend_51, dend_51, dend_24, dend_24, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_73, dend_73, dend_72, dend_72, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_49, dend_49, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_10, dend_10, dend_10, dend_8, dend_8, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_60, dend_60, dend_57, dend_57, dend_57, dend_55, dend_55, dend_54, dend_54, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_47, dend_46, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_39, dend_39, dend_36, dend_36, dend_36, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 4.13603E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 4.13603E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 1.04239E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 7
    dend_71 nseg = 7
    dend_48 nseg = 5
    dend_6 nseg = 9
    dend_4 nseg = 5
    dend_76 nseg = 9
    dend_75 nseg = 3
    dend_67 nseg = 5
    dend_62 nseg = 11
    dend_56 nseg = 7
    dend_53 nseg = 9
    dend_43 nseg = 7
    dend_19 nseg = 5
    dend_66 nseg = 5
    dend_44 nseg = 3
    dend_27 nseg = 9
    dend_23 nseg = 9
    dend_20 nseg = 5
    dend_16 nseg = 9
    dend_11 nseg = 9
    dend_59 nseg = 3
    dend_40 nseg = 7
    dend_29 nseg = 3
    dend_22 nseg = 3
    dend_18 nseg = 5
    dend_17 nseg = 3
    dend_41 nseg = 3
    dend_35 nseg = 7
    dend_32 nseg = 7
    dend_14 nseg = 3
    dend_33 nseg = 3
    dend_38 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bSTUT213_L6_LBC_9961376dfe_0_0


