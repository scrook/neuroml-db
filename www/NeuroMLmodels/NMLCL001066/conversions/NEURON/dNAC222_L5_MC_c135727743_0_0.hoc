// Cell: dNAC222_L5_MC_c135727743_0_0
/*
{
  "id" : "dNAC222_L5_MC_c135727743_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-10.7304, -0.873466, 0.0, 2.87054", "-9.6745, -0.74567, 0.0, 5.00777", "-8.61857, -0.617875, 0.0, 6.72434", "-7.56263, -0.490079, 0.0, 8.00365", "-6.5067, -0.362283, 0.0, 9.09761", "-5.45077, -0.234487, 0.0, 10.1793", "-4.39483, -0.106692, 0.0, 11.1366", "-3.3389, 0.021104, 0.0, 11.7855", "-2.28296, 0.1489, 0.0, 12.3612", "-1.22703, 0.276695, 0.0, 12.8218", "-0.171095, 0.404491, 0.0, 12.9777", "0.884839, 0.532287, 0.0, 12.7621", "1.94077, 0.660083, 0.0, 12.4756", "2.99671, 0.787878, 0.0, 12.1076", "4.05264, 0.915674, 0.0, 11.5969", "5.10858, 1.04347, 0.0, 10.956", "6.16451, 1.17127, 0.0, 10.0344", "7.22044, 1.29906, 0.0, 8.74098", "8.27638, 1.42686, 0.0, 7.28149", "9.33231, 1.55465, 0.0, 5.39697", "10.3882, 1.68245, 0.0, 3.02868" ]
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-9.48889, 0.163969, 10.77, 1.25", "-9.48889, 0.163969, 10.77, 1.25", "-10.6339, 0.0332863, 12.4145, 1.18", "-11.5894, 0.0353454, 14.0201, 1.33", "-12.7218, 0.203593, 16.3429, 1.55", "-13.7315, 0.574917, 18.922, 1.77", "-14.3934, 1.01261, 21.0075, 1.92", "-14.757, 1.53089, 22.7114, 1.92", "-14.984, 2.4364, 24.8584, 1.55", "-15.0307, 3.38983, 26.762, 1.33", "-14.911, 4.42021, 28.4451, 1.4", "-14.701, 5.34397, 29.6975, 1.55", "-14.39, 6.43395, 30.9883, 1.84", "-14.0409, 7.619, 32.2794, 2.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999999322079115
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "6.08109, -2.81603, -7.15, 4.06", "6.08109, -2.81603, -7.15, 4.06", "6.04352, -3.81353, -7.39915, 2.43", "5.92708, -5.2472, -7.79818, 2.58", "5.74808, -7.19068, -8.38082, 2.58", "5.62909, -8.48266, -8.76815, 2.8", "5.54368, -9.41003, -9.04617, 3.02", "5.38827, -11.1173, -9.5812, 3.02", "5.22577, -12.9468, -10.2058, 3.32", "5.03245, -14.57, -10.8115, 4.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999999322079115
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "10.6111, 1.81397, -10.71, 2.21", "10.6111, 1.81397, -10.71, 2.21", "12.22, 2.23168, -11.2474, 1.55", "13.9571, 2.55178, -11.8882, 1.03", "14.9754, 2.65604, -12.3138, 1.18", "16.412, 2.70578, -13.0072, 1.62", "17.438, 2.68222, -13.5973, 1.99", "18.5271, 2.53823, -14.4026, 1.84", "19.765, 2.17846, -15.5555, 1.11", "20.7199, 1.73521, -16.5824, 1.25", "21.4844, 1.26875, -17.4726, 1.25", "22.4004, 0.579672, -18.5385, 1.47", "23.4324, -0.297644, -19.6364, 1.4", "24.077, -0.889952, -20.2171, 1.25", "25.0132, -1.79033, -20.9015, 1.03", "26.1253, -2.90124, -21.5138, 1.03", "27.1008, -3.91079, -21.9034, 1.33", "28.2326, -5.24177, -22.2197, 1.25", "29.0319, -6.37157, -22.3797, 1.33", "29.7207, -7.55652, -22.5217, 1.62", "30.1899, -8.49177, -22.6451, 1.7", "30.2867, -8.70586, -22.6811, 1.7", "31.0178, -10.3655, -23.1386, 1.18", "31.5223, -11.4187, -23.6177, 1.03", "31.9638, -12.0915, -24.1333, 0.74", "32.5107, -12.6688, -24.8632, 0.96", "33.1953, -13.1706, -25.8297, 1.03", "33.9437, -13.6159, -26.8863, 1.4", "34.6793, -13.9228, -27.9185, 1.55", "35.643, -14.2309, -29.3397, 1.33", "36.4321, -14.4559, -30.5974, 0.96", "37.0505, -14.6129, -31.6422, 0.96" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999999322079115,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "8.9411, 5.27397, -0.18, 2.21", "8.9411, 5.27397, -0.18, 2.21", "10.2207, 6.08473, 0.32814, 1.55", "11.6704, 6.87883, 0.994865, 1.92", "12.9184, 7.48403, 1.62979, 1.84", "14.0451, 7.98511, 2.26783, 1.62", "15.3837, 8.5651, 3.16406, 1.7", "16.6815, 9.06321, 4.11255, 1.55", "17.7658, 9.41039, 4.97645, 1.7", "19.0633, 9.76945, 6.06625, 1.99", "20.2099, 10.0856, 7.0168, 1.47", "22.4234, 10.7501, 8.77964, 1.7", "23.3811, 11.0587, 9.54625, 1.84", "24.6745, 11.484, 10.552, 1.7", "26.0139, 11.9336, 11.5514, 1.47", "27.1458, 12.3174, 12.3319, 1.77", "28.6756, 12.825, 13.2128, 2.73" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999999322079115
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-10.6189, -2.11603, 7.6, 1.99", "-10.6189, -2.11603, 7.6, 1.99", "-11.6844, -2.33944, 6.38071, 1.84", "-12.7819, -2.52218, 5.20671, 1.92", "-13.5523, -2.63944, 4.41059, 1.92", "-14.6598, -2.81596, 3.32952, 1.77", "-16.2143, -3.10903, 1.91362, 1.7", "-17.9011, -3.45691, 0.490449, 1.47", "-19.4282, -3.80288, -0.688909, 1.18", "-20.7421, -4.13263, -1.59854, 1.47", "-22.228, -4.57786, -2.49562, 1.47", "-23.701, -5.08589, -3.2797, 1.33", "-24.6726, -5.45467, -3.75953, 1.55", "-25.9767, -5.97832, -4.43344, 1.62", "-27.2228, -6.46906, -5.07515, 2.58", "-29.2257, -7.23325, -6.11166, 1.33", "-30.412, -7.693, -6.71688, 1.47", "-31.9213, -8.30244, -7.43531, 1.33", "-33.7282, -9.10402, -8.13998, 1.62", "-34.8922, -9.68826, -8.46308, 1.7", "-36.8656, -10.8186, -8.76696, 1.55", "-38.7717, -12.0497, -8.76643, 1.11", "-39.9487, -12.884, -8.63143, 1.55", "-41.6176, -14.1075, -8.23633, 1.4", "-43.1102, -15.1575, -7.73168, 1.25", "-44.1524, -15.8255, -7.34163, 1.55", "-45.1608, -16.3674, -6.92455, 1.99", "-46.5516, -16.9562, -6.39235, 1.33", "-48.1729, -17.5045, -5.89437, 1.11", "-49.6879, -17.9176, -5.54387, 1.4", "-50.9551, -18.2268, -5.32964, 1.25", "-52.503, -18.622, -5.16471, 1.11", "-54.04, -19.0884, -5.09884, 1.33", "-54.9864, -19.481, -5.14288, 1.7", "-56.6151, -20.4371, -5.52186, 1.33", "-57.4626, -21.0784, -5.885, 1.62", "-58.272, -21.7877, -6.31528, 1.99", "-59.1298, -22.647, -6.89874, 1.92", "-60.3462, -24.0221, -7.90946, 1.33", "-61.1961, -25.1221, -8.7532, 1.47", "-61.7951, -26.0589, -9.55363, 1.99" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999999322079115,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "10.3882, 1.68245, 0.0, 0.710031", "25.2795, 3.4847, 0.0, 0.710031", "40.1709, 5.28695, 0.0, 0.710031" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-14.0409, 7.619, 32.2794, 1.4", "-13.5244, 8.64538, 33.567, 1.4", "-12.648, 10.1982, 35.2511, 1.4", "-11.9673, 11.3061, 36.2894, 1.33", "-11.157, 12.5291, 37.3341, 1.11", "-10.2447, 13.7132, 38.2855, 0.52", "-9.64028, 14.395, 38.8409, 0.37", "-8.87624, 15.0932, 39.3196, 0.88", "-8.05532, 15.6688, 39.6651, 1.62", "-7.56168, 15.8503, 39.8842, 1.62", "-6.66549, 15.4021, 41.0133, 0.44", "-6.35843, 14.9321, 41.851, 0.44", "-6.08222, 14.3111, 42.8955, 0.44", "-5.82529, 13.6642, 44.0204, 0.74", "-5.45709, 12.7607, 45.6547, 1.11", "-5.12199, 12.0933, 47.0416, 1.25", "-4.82399, 11.8076, 47.9157, 1.25", "-4.26599, 11.7836, 48.6801, 0.44", "-3.51676, 11.9712, 49.2297, 0.44", "-2.53017, 12.2671, 49.747, 0.59", "-1.42912, 12.5867, 50.2057, 0.88", "0.65529, 13.1639, 51.0251, 0.52", "1.55773, 13.388, 51.3961, 0.52", "2.77532, 13.6409, 51.9262, 0.74", "3.98165, 13.8109, 52.4754, 0.88", "5.45462, 13.9255, 53.2212, 0.52", "6.41644, 13.9569, 53.7336, 0.96", "7.48646, 14.0119, 54.3116, 1.62", "8.39701, 14.1205, 54.7912, 1.03", "9.86633, 14.4545, 55.4861, 0.52", "11.0228, 14.845, 56.0009, 1.4", "12.2084, 15.376, 56.4906, 2.21", "13.6604, 16.1564, 57.0652, 0.29", "14.1921, 16.4821, 57.2818, 0.29", "15.4262, 17.3096, 57.8303, 0.29", "16.4106, 18.0295, 58.3286, 0.44", "17.3008, 18.6815, 58.8949, 0.96", "18.382, 19.4003, 59.7726, 1.33", "19.524, 20.0328, 60.8026, 1.77", "20.5962, 20.5349, 61.8286, 1.33", "21.7241, 20.9839, 63.0276, 0.96", "23.2212, 21.4902, 64.7343, 0.59", "24.3885, 21.8149, 66.2677, 0.37", "25.0156, 21.9687, 67.2683, 0.66", "25.3099, 22.0427, 67.8941, 0.66", "25.6257, 22.1532, 68.7108, 0.66", "25.7261, 22.2186, 68.9764, 0.66", "26.1569, 22.6782, 70.1078, 0.66", "26.6526, 23.3768, 71.4672, 0.52", "27.3375, 24.4908, 73.4316, 1.18", "27.6819, 25.1248, 74.3965, 1.47", "28.3009, 26.3961, 76.101, 0.44", "28.5999, 27.101, 76.975, 0.44", "28.8397, 27.8675, 77.8942, 0.44", "28.9672, 28.5218, 78.6859, 0.96", "29.0718, 29.6656, 80.0751, 1.62", "29.0878, 30.6614, 81.2881, 1.77", "29.0704, 31.4929, 82.2488, 1.18", "29.1072, 33.1241, 84.0643, 0.74", "29.2019, 33.9608, 85.0049, 0.74", "29.3994, 34.8351, 86.0572, 0.59", "29.7818, 35.7484, 87.2875, 0.44", "30.2641, 36.5278, 88.4166, 0.29", "31.0445, 37.5052, 89.8625, 0.81", "31.7236, 38.2569, 90.9494, 1.7", "32.1861, 38.7656, 91.6983, 1.7", "32.8262, 39.5358, 92.8312, 0.44", "33.3998, 40.2978, 93.9278, 0.44", "33.813, 40.9646, 94.7977, 0.44", "34.2122, 41.7622, 95.6397, 1.11", "34.3924, 42.1693, 96.0039, 1.11", "34.8775, 43.4824, 97.0416, 0.29", "35.0874, 44.2039, 97.5513, 0.29", "35.3012, 44.9756, 98.0577, 0.29", "35.4443, 45.5332, 98.4233, 1.18", "35.6942, 46.3143, 98.955, 1.47" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-14.0409, 7.619, 32.2794, 0.81", "-15.4964, 7.76154, 32.4722, 0.81", "-16.7098, 7.93467, 32.6416, 0.81", "-17.8813, 8.16228, 32.7929, 0.96", "-19.2996, 8.46524, 32.9581, 1.25", "-20.8611, 8.78779, 33.0947, 1.62", "-22.1947, 9.0501, 33.2182, 1.62", "-23.3382, 9.29214, 33.335, 1.62", "-25.289, 9.75719, 33.5361, 1.18", "-26.673, 10.1325, 33.668, 1.4", "-28.4764, 10.6594, 33.8688, 1.33", "-30.2996, 11.2283, 34.1386, 0.96", "-31.5031, 11.6175, 34.3434, 0.96", "-32.9626, 12.0943, 34.5977, 1.62", "-34.4208, 12.5701, 34.8548, 2.14", "-35.7069, 12.9895, 35.0692, 2.14", "-37.4676, 13.5981, 35.3733, 0.96", "-38.4622, 13.9372, 35.5154, 1.4", "-40.0948, 14.4345, 35.7264, 1.92", "-41.461, 14.7869, 35.8733, 2.06", "-42.7059, 15.0335, 35.9309, 2.06" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "5.03245, -14.57, -10.8115, 2.58", "5.94527, -15.7231, -11.1553, 2.58", "6.95527, -16.9932, -11.5275, 1.4", "8.02477, -18.2767, -11.9125, 1.47", "9.151, -19.6034, -12.3204, 1.47", "10.1558, -20.7754, -12.6734, 1.47", "10.9059, -21.6567, -12.9317, 1.47", "11.7282, -22.6254, -13.2147, 1.7", "13.018, -24.1663, -13.6255, 1.18", "13.6298, -24.951, -13.7994, 1.47", "14.2899, -25.9062, -13.9554, 1.7", "15.1515, -27.3327, -14.0664, 1.7", "15.6275, -28.2094, -14.0715, 1.77", "16.3468, -29.7282, -13.9775, 1.25", "16.8924, -31.0947, -13.7885, 1.55", "17.4347, -32.6009, -13.5169, 1.4", "17.9186, -34.0132, -13.2417, 1.7", "18.3741, -35.3577, -12.9592, 1.7", "18.9311, -36.9821, -12.5954, 1.47", "19.5003, -38.5687, -12.2069, 1.4", "19.94, -39.7315, -11.9188, 1.55", "20.7323, -41.7391, -11.4464, 1.25", "21.2953, -43.1937, -11.1585, 1.55", "21.7421, -44.415, -10.9238, 1.99", "22.0236, -45.1279, -10.7873, 1.99" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "5.03245, -14.57, -10.8115, 1.7", "3.68236, -16.2437, -11.5056, 1.7", "2.90051, -17.2635, -11.809, 1.62", "1.85041, -18.6734, -12.0523, 1.4", "1.13348, -19.6638, -12.1044, 1.7", "0.34576, -20.8039, -12.0351, 1.84", "-0.386841, -21.8836, -11.8725, 1.7", "-1.37411, -23.3722, -11.5177, 2.21", "-2.52655, -25.0166, -10.9954, 1.62", "-3.48775, -26.2799, -10.5561, 1.47", "-4.49802, -27.4691, -10.1133, 1.62", "-5.22542, -28.2367, -9.87207, 1.7", "-6.55263, -29.4945, -9.64979, 1.47", "-7.52416, -30.3339, -9.64565, 1.62", "-8.66229, -31.221, -9.73584, 1.62", "-9.40636, -31.749, -9.82842, 1.7", "-11.1668, -32.9489, -10.0498, 1.47", "-12.4509, -33.8518, -10.1595, 1.84", "-13.4494, -34.6052, -10.1802, 2.21", "-14.7381, -35.6417, -10.212, 1.7", "-15.8476, -36.5617, -10.2764, 1.7", "-16.892, -37.4414, -10.3988, 1.47", "-17.6493, -38.0667, -10.5319, 1.55", "-18.8906, -39.1467, -10.8561, 1.33", "-19.8692, -40.0996, -11.2241, 1.47", "-20.9949, -41.3673, -11.8158, 1.25", "-21.7832, -42.4338, -12.3777, 1.33", "-22.7396, -43.9988, -13.3509, 0.96", "-23.1347, -44.8549, -13.9602, 1.33", "-23.4066, -45.7499, -14.6619, 1.62", "-23.5122, -46.4895, -15.2929, 1.62", "-23.5269, -47.6051, -16.3213, 1.25", "-23.493, -48.6528, -17.3429, 1.25", "-23.4717, -49.7165, -18.4309, 1.4", "-23.5301, -50.5082, -19.207, 1.47", "-23.7116, -51.655, -20.2627, 1.47", "-23.9321, -52.6042, -21.0867, 1.47", "-24.221, -53.6184, -21.9356, 1.7", "-24.417, -54.283, -22.4745, 1.84", "-24.9373, -55.8335, -23.7113, 1.33", "-25.3103, -56.8561, -24.5311, 1.4", "-25.7057, -57.7866, -25.3079, 1.55", "-26.1868, -58.7685, -26.1854, 1.99", "-26.7181, -59.6596, -26.9984, 2.06", "-27.6691, -60.9814, -28.1144, 1.47", "-28.702, -62.2082, -28.9897, 1.7", "-29.8316, -63.4889, -29.6535, 1.33", "-30.8141, -64.615, -30.0183, 1.33", "-32.2481, -66.3131, -30.3407, 1.11", "-33.434, -67.8459, -30.5121, 1.4", "-34.4336, -69.3843, -30.6306, 1.25", "-35.1171, -70.6762, -30.7467, 1.33", "-35.6138, -71.9707, -30.9823, 1.33", "-35.9716, -73.4605, -31.4619, 1.25", "-36.1853, -74.889, -32.1272, 1.25", "-36.3324, -76.359, -32.9918, 1.25", "-36.4277, -77.6907, -33.9411, 1.4", "-36.4885, -79.1132, -35.0999, 1.84", "-36.4887, -80.3552, -36.1899, 1.18", "-36.4607, -81.4222, -37.1273, 1.18" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "37.0505, -14.6129, -31.6422, 0.52", "38.2778, -15.1356, -32.2249, 0.52", "39.0028, -15.4776, -32.545, 0.52", "39.8168, -15.8652, -32.9085, 0.52", "40.8204, -16.2902, -33.3729, 0.96", "41.6902, -16.5966, -33.7592, 0.52", "42.6266, -16.8354, -34.1517, 0.81", "43.3845, -16.9512, -34.4962, 0.81", "44.359, -16.9177, -34.8759, 0.74", "45.4888, -16.4014, -35.1993, 0.88", "46.1276, -15.6259, -35.3043, 0.74", "46.7172, -14.5194, -35.3896, 0.74", "47.437, -12.8165, -35.4708, 0.59", "47.9096, -11.5418, -35.5398, 1.03", "48.4682, -9.8561, -35.6609, 0.81", "48.8523, -8.54681, -35.8282, 0.96", "49.1803, -7.46338, -36.0773, 0.96", "49.7769, -5.82821, -36.6436, 0.66", "50.3096, -4.73462, -37.1781, 0.66", "50.7874, -3.9674, -37.6741, 0.74", "51.6365, -2.92251, -38.4862, 0.81", "52.5683, -1.99573, -39.3028, 0.59", "53.3781, -1.34913, -39.904, 1.03", "54.293, -0.796285, -40.4168, 1.11", "55.2892, -0.367827, -40.7144, 0.81", "56.2991, -0.0749442, -40.8168, 0.88", "57.1757, 0.0712613, -40.7702, 0.74", "58.3047, 0.135134, -40.5832, 0.74", "59.8722, 0.0830078, -40.1911, 0.88", "61.4327, -0.122476, -39.6651, 0.74", "62.5936, -0.424083, -39.1983, 0.66", "63.6963, -0.851286, -38.7042, 0.59", "64.9447, -1.45805, -38.1226, 0.74", "65.7324, -1.90581, -37.7655, 0.81", "66.7982, -2.57568, -37.2776, 0.66", "68.1731, -3.45134, -36.6502, 0.59", "69.191, -4.03846, -36.2107, 1.11", "70.508, -4.65, -35.727, 1.03", "71.3653, -4.95509, -35.5069, 1.03", "72.5744, -5.26059, -35.3427, 1.11", "74.1074, -5.48474, -35.3365, 0.81", "75.4286, -5.55445, -35.4781, 0.81", "77.047, -5.53885, -35.798, 0.66", "78.8703, -5.36815, -36.2916, 0.74", "79.7789, -5.2084, -36.5771, 1.18", "80.9076, -4.89243, -36.9729, 1.18", "81.8169, -4.4843, -37.2878, 1.18", "82.4811, -4.05342, -37.4768, 1.18", "83.6042, -3.09812, -37.7093, 0.52", "84.4308, -2.25951, -37.8432, 0.52", "85.2493, -1.32061, -38.0052, 0.66", "86.457, 0.143312, -38.333, 0.81", "87.5698, 1.48123, -38.7827, 0.59", "88.1588, 2.10341, -39.071, 0.59", "89.039, 2.86447, -39.5904, 0.81", "89.6117, 3.2581, -39.9811, 0.81", "90.6136, 3.80764, -40.7714, 0.66", "91.468, 4.1752, -41.5245, 0.59", "92.6379, 4.59567, -42.5789, 0.52", "93.1597, 4.75002, -43.0207, 0.66", "94.0346, 4.98148, -43.7094, 0.59", "95.0747, 5.27354, -44.5, 0.44", "96.082, 5.603, -45.2559, 0.74", "96.759, 5.89099, -45.7058, 0.88", "97.98, 6.57297, -46.3494, 0.44", "98.9223, 7.15764, -46.661, 0.44", "99.6572, 7.64754, -46.8008, 0.44", "100.288, 8.13073, -46.854, 0.52", "101.894, 9.58199, -46.8687, 0.29", "103.207, 10.933, -46.8266, 0.22", "104.282, 12.0922, -46.7446, 0.22", "104.763, 12.5788, -46.6995, 0.22", "105.501, 13.3011, -46.6385, 0.22", "105.99, 13.7606, -46.6092, 0.22", "106.958, 14.5617, -46.6092, 0.22", "108.034, 15.3473, -46.6092, 0.37", "108.899, 15.9262, -46.6092, 0.37", "118.127, 18.9647, -48.9783, 0.37" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "37.0505, -14.6129, -31.6422, 0.66", "37.3097, -15.4878, -31.7694, 0.66", "37.6331, -16.6829, -32.1276, 0.59", "37.7912, -17.2869, -32.3938, 0.96", "37.9172, -17.8076, -32.6982, 1.4", "38.0976, -18.5091, -33.2053, 1.4", "38.4045, -19.6344, -34.1166, 0.81", "38.7262, -20.8008, -35.1991, 0.96", "38.8998, -21.427, -35.852, 1.11", "39.1005, -22.0896, -36.6043, 1.11", "39.3812, -22.9271, -37.64, 0.74", "39.739, -23.8383, -38.8894, 1.03", "40.0486, -24.4869, -39.8856, 1.03" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "28.6756, 12.825, 13.2128, 1.92", "28.7978, 14.0533, 12.8595, 1.92", "28.9348, 15.9664, 12.2462, 0.96", "29.018, 17.2142, 11.842, 1.47", "29.1454, 18.9492, 11.2702, 1.11", "29.267, 20.5622, 10.7552, 1.25", "29.3807, 22.142, 10.2753, 1.4", "29.435, 23.2438, 9.94584, 1.4", "29.4659, 24.3774, 9.63459, 1.4", "29.5091, 25.6171, 9.36127, 1.33", "29.5672, 26.9346, 9.12178, 1.84", "29.623, 28.0389, 8.98953, 1.47", "29.6842, 29.0446, 8.91702, 1.03", "29.7812, 30.3043, 8.85773, 1.33", "29.9475, 31.9859, 8.79217, 1.47", "30.119, 33.2171, 8.76031, 1.47", "30.4719, 35.0601, 8.71367, 1.47", "30.7628, 36.2064, 8.68685, 1.33", "31.0819, 37.3121, 8.6623, 1.11", "31.3369, 38.0709, 8.64835, 1.33", "31.8182, 39.3077, 8.6385, 0.88", "32.1722, 40.0587, 8.65118, 1.11", "32.6512, 40.8641, 8.63519, 1.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "28.6756, 12.825, 13.2128, 1.11", "30.7922, 12.8341, 13.2609, 1.11", "32.3363, 12.8143, 13.437, 0.88", "33.1291, 12.7594, 13.6089, 1.33", "34.3594, 12.674, 13.8758, 1.7", "35.8934, 12.5677, 14.2085, 1.11", "36.9761, 12.4926, 14.4433, 1.11", "38.327, 12.3896, 14.9204, 1.03", "39.8313, 12.196, 15.5914, 1.03" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-61.7951, -26.0589, -9.55363, 0.74", "-62.5669, -27.4357, -9.60345, 0.74", "-63.2724, -28.539, -9.6882, 0.88", "-63.7594, -29.2461, -9.69562, 0.81", "-64.0078, -29.6085, -9.69196, 1.18", "-64.84, -30.8656, -9.68769, 1.25", "-65.3002, -31.5757, -9.68801, 1.55", "-66.1343, -32.8131, -9.69127, 1.18", "-67.1365, -34.2901, -9.64055, 0.96", "-68.0451, -35.5918, -9.52836, 1.25", "-68.6925, -36.5098, -9.40482, 0.96", "-69.5812, -37.7837, -9.1762, 0.59", "-70.0724, -38.4431, -9.05611, 0.88", "-70.851, -39.4243, -8.90296, 1.33", "-71.4916, -40.2185, -8.82965, 1.33", "-72.4278, -41.4148, -8.78215, 1.18", "-73.1389, -42.4598, -8.78742, 0.74", "-73.7765, -43.6812, -8.86925, 0.96", "-74.1204, -44.6467, -8.99622, 1.25", "-74.4528, -46.328, -9.31903, 0.88", "-74.5312, -47.5618, -9.5699, 0.88", "-74.5136, -48.8994, -9.81339, 1.03", "-74.4755, -49.955, -9.96359, 0.66", "-74.3862, -50.8296, -10.0535, 0.81", "-74.2976, -51.5039, -10.1037, 0.96", "-74.2073, -52.3592, -10.1514, 0.88", "-74.2538, -53.9365, -10.1529, 1.11", "-74.4753, -54.7338, -10.1652, 0.88" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-61.7951, -26.0589, -9.55363, 1.18", "-63.5598, -26.2289, -9.89768, 1.18", "-65.3465, -26.4802, -10.089, 0.88", "-67.0206, -26.7218, -10.1744, 1.11", "-68.4197, -26.8996, -10.2337, 1.33", "-70.1979, -27.0821, -10.3703, 0.74", "-71.9756, -27.2401, -10.5805, 0.96", "-73.2857, -27.4196, -10.7816, 0.88", "-74.7554, -27.6339, -11.0605, 0.66", "-75.8481, -27.7839, -11.3096, 1.11", "-77.2512, -27.994, -11.7273, 1.62", "-78.2223, -28.1716, -12.159, 1.4", "-79.0522, -28.3675, -12.67, 1.03", "-79.7476, -28.5691, -13.1723, 0.96", "-80.6625, -28.896, -13.8678, 0.96", "-81.62, -29.2543, -14.5436, 1.18", "-82.646, -29.6605, -15.2205, 1.47", "-83.815, -30.1479, -15.9659, 0.96", "-84.9195, -30.6151, -16.6748, 1.03", "-86.4443, -31.2707, -17.6639, 0.88", "-87.4532, -31.6837, -18.3047, 0.88", "-88.4349, -32.0804, -18.9072, 0.59", "-89.8907, -32.7232, -19.7725, 0.88", "-91.0487, -33.3254, -20.4416, 1.11", "-91.9066, -33.8246, -20.9339, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "40.1709, 5.28695, 0.0, 0.15", "55.0622, 7.0892, 0.0, 0.15", "69.9535, 8.89145, 0.0, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "35.6942, 46.3143, 98.955, 0.37", "34.9024, 47.104, 101.576, 0.37", "34.4525, 47.4574, 102.881, 0.37", "33.7978, 47.8849, 104.875, 0.88", "33.5379, 48.0387, 105.821, 0.88", "32.997, 48.3379, 108.219, 0.52", "32.7458, 48.4886, 109.722, 0.74", "32.6144, 48.5608, 111.078, 0.74", "32.5723, 48.625, 112.719, 1.03", "32.6438, 48.677, 114.783, 1.18", "32.7716, 48.6853, 116.771, 1.18", "33.0638, 48.6183, 120.26, 0.96", "33.2232, 48.5693, 122.651, 0.66", "33.2862, 48.5645, 124.419, 0.52", "33.2587, 48.624, 126.909, 0.52", "33.1289, 48.7283, 129.271, 0.52", "32.9974, 48.8366, 130.737, 0.52", "32.7793, 48.9615, 132.297, 0.37", "32.6048, 49.0492, 133.191, 0.81", "32.141, 49.3167, 135.162, 0.37", "31.7433, 49.6688, 136.68, 0.37", "31.4499, 50.2007, 138.1, 0.88" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "35.6942, 46.3143, 98.955, 0.37", "36.6096, 46.7696, 100.295, 0.37", "37.2627, 47.1545, 101.325, 0.37", "37.891, 47.6208, 102.467, 1.03", "38.8489, 48.4903, 104.469, 1.62", "39.376, 49.0341, 105.69, 0.52", "39.8779, 49.5385, 106.852, 0.37", "40.1008, 49.8014, 107.48, 0.37", "40.5427, 50.2394, 108.952, 0.29", "40.6767, 50.3293, 109.446, 0.29", "40.9155, 50.3942, 110.241, 0.29", "41.3282, 50.4239, 111.461, 0.52", "41.9907, 50.4379, 113.019, 0.88", "43.4444, 50.5168, 115.814, 1.62", "43.9768, 50.5839, 116.718, 1.99", "45.1731, 50.8288, 118.607, 0.66", "46.2961, 51.1635, 120.231, 0.59", "47.1312, 51.5078, 121.335, 1.55", "48.311, 52.0785, 122.697, 0.44", "49.8041, 52.9129, 124.192, 0.44", "50.3582, 53.2696, 124.732, 0.74", "51.1051, 53.8275, 125.463, 0.74", "51.9373, 54.5058, 126.347, 0.37", "52.9267, 55.3501, 127.711, 0.52", "53.3646, 55.6906, 128.434, 0.52", "53.5189, 55.7793, 128.709, 0.52", "53.7804, 55.8835, 129.174, 0.59", "54.2514, 56.022, 129.99, 0.59", "54.9781, 56.233, 131.121, 0.59", "55.6883, 56.5048, 132.12, 0.59", "56.5232, 56.9324, 133.134, 0.44", "57.2698, 57.3927, 133.924, 0.74", "58.3104, 58.1303, 134.907, 0.44", "59.0717, 58.78, 135.631, 1.03", "59.6298, 59.3467, 136.199, 1.77", "60.7078, 60.6096, 137.393, 0.44", "61.5474, 61.6897, 138.348, 0.22", "62.2908, 62.6769, 139.15, 1.03", "63.5711, 64.3573, 140.418, 0.37", "64.4864, 65.5224, 141.287, 0.96", "65.1088, 66.2675, 141.878, 0.96", "65.8079, 67.0033, 142.547, 1.03", "66.9804, 68.0517, 143.686, 0.37", "67.6336, 68.5218, 144.345, 0.37", "68.4189, 68.9967, 145.184, 0.81", "69.1457, 69.4185, 146.118, 1.47", "70.035, 69.9864, 147.611, 0.81", "70.8088, 70.5821, 149.389, 1.11", "71.3344, 71.0966, 151.045, 1.7", "71.7798, 71.6507, 152.927, 0.52", "72.0549, 72.09, 154.5, 0.52", "72.2543, 72.5129, 156.073, 0.52", "72.444, 72.9227, 157.653, 0.52", "72.6697, 73.1876, 158.866, 0.52", "73.2306, 73.4886, 160.875, 0.81", "73.5445, 73.558, 161.645, 0.81", "74.5895, 73.7004, 163.488, 0.81", "75.7468, 73.8858, 165.108, 0.59", "77.2093, 74.2354, 166.884, 0.44", "78.0465, 74.5539, 167.836, 1.03", "78.9953, 75.0642, 168.839, 0.44", "79.9713, 75.7258, 169.853, 0.96", "81.019, 76.5538, 170.889, 0.59", "81.9278, 77.3455, 171.814, 1.11", "82.9618, 78.2902, 172.951, 0.52", "83.6546, 78.8788, 173.71, 0.29", "84.2242, 79.3001, 174.301, 0.81", "84.8646, 79.6969, 174.912, 0.81", "86.0732, 80.3025, 175.903, 0.37", "87.5838, 80.9728, 176.935, 0.81", "88.2524, 81.2568, 177.312, 1.03", "90.1967, 82.1695, 178.298, 0.37", "90.8231, 82.5126, 178.614, 0.37", "91.8046, 83.1533, 179.09, 0.88", "92.5121, 83.6748, 179.397, 0.37", "93.6207, 84.5364, 179.818, 0.96", "95.1581, 85.7304, 180.365, 0.59", "96.4746, 86.6887, 180.749, 0.59", "97.9046, 87.7043, 181.115, 0.81", "98.7497, 88.2991, 181.281, 0.81", "99.8409, 89.0244, 181.403, 1.11", "100.952, 89.7175, 181.356, 0.52", "102.015, 90.3207, 181.149, 0.52", "102.724, 90.6946, 180.926, 0.74", "103.596, 91.1332, 180.601, 0.88", "104.751, 91.7643, 180.079, 0.52", "105.743, 92.3933, 179.536, 1.18", "106.4, 92.9207, 179.118, 1.18", "107.099, 93.6404, 178.556, 0.22", "107.516, 94.1079, 178.167, 0.22", "108.175, 94.8588, 177.558, 0.22", "108.661, 95.3962, 177.141, 0.96", "109.135, 95.8568, 176.786, 1.55", "110.584, 97.0789, 175.738, 0.44", "111.861, 98.0072, 174.88, 1.03", "113.002, 98.7301, 174.17, 0.74", "114.212, 99.3902, 173.518, 0.37", "115.472, 99.9998, 172.896, 0.29", "116.34, 100.39, 172.502, 0.29", "117.221, 100.768, 172.137, 0.88", "117.958, 101.081, 171.789, 1.11", "118.9, 101.427, 171.23, 0.22", "119.532, 101.565, 170.763, 0.22", "120.055, 101.59, 170.285, 0.22", "120.629, 101.548, 169.698, 0.22", "121.195, 101.445, 169.073, 0.74", "122.038, 101.276, 168.063, 1.18", "123.095, 101.115, 166.618, 0.37", "123.874, 101.068, 165.451, 0.37", "124.341, 101.084, 164.721, 0.88", "124.748, 101.139, 164.022, 0.88", "125.496, 101.295, 162.622, 0.29", "126.418, 101.501, 160.878, 0.59", "127.092, 101.62, 159.683, 0.59", "127.46, 101.64, 159.141, 0.59", "128.454, 101.636, 157.847, 0.59", "129.1, 101.617, 157.11, 1.33", "130.483, 101.523, 155.839, 0.52", "131.775, 101.412, 154.882, 1.4", "133.433, 101.252, 153.776, 0.44", "134.585, 101.147, 153.061, 0.88", "135.58, 101.064, 152.51, 0.22", "136.575, 100.961, 151.981, 0.22", "137.943, 100.805, 151.265, 0.44", "139.137, 100.595, 150.626, 0.15", "139.438, 100.5, 150.451, 0.29", "140.082, 100.197, 150.119, 0.15", "140.651, 99.8345, 149.842, 0.59" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-42.7059, 15.0335, 35.9309, 0.66", "-43.3168, 15.412, 34.5052, 0.66", "-43.7461, 15.6256, 33.4703, 0.44", "-44.2827, 15.8471, 32.1947, 0.88", "-45.0911, 16.1221, 30.4802, 1.11", "-46.0185, 16.4206, 28.5879, 1.33", "-46.9534, 16.7348, 26.6821, 1.03", "-47.6383, 17.0223, 25.1148, 1.33", "-48.05, 17.212, 24.0087, 1.33", "-48.4982, 17.4308, 22.6823, 0.44", "-48.8522, 17.5967, 21.5673, 0.44", "-49.0825, 17.7089, 20.8113, 0.81", "-49.6833, 18.0509, 18.8493, 0.81", "-50.1497, 18.3812, 17.5284, 0.81", "-50.3512, 18.5281, 17.0463, 0.81", "-51.0586, 19.0011, 15.7127, 0.88", "-52.0638, 19.5663, 14.5042, 1.4", "-53.1856, 20.1337, 13.6937, 1.7", "-55.0541, 21.0273, 12.9333, 0.44", "-55.672, 21.3221, 12.7827, 0.96", "-56.7827, 21.8484, 12.5915, 1.18", "-58.0631, 22.4417, 12.4303, 1.11", "-59.3038, 22.9669, 12.2519, 1.47", "-60.2938, 23.3276, 12.0145, 1.47", "-61.6135, 23.7091, 11.518, 0.81", "-62.7628, 24.0094, 10.9843, 0.52", "-63.8103, 24.2749, 10.4129, 0.52", "-64.9561, 24.557, 9.74837, 0.96", "-66.1216, 24.8459, 9.08187, 0.37", "-66.8546, 25.0204, 8.71018, 0.81", "-67.9922, 25.2776, 8.21657, 0.96", "-68.9169, 25.5011, 7.89254, 1.47", "-69.8464, 25.7377, 7.64215, 0.96", "-70.8114, 26.0135, 7.44145, 0.44", "-71.6886, 26.2915, 7.26178, 0.44", "-72.4956, 26.5843, 7.05898, 0.74", "-73.5523, 27.0125, 6.75015, 1.25", "-74.2627, 27.3224, 6.53162, 1.25", "-75.7155, 28.0276, 6.09818, 0.44", "-76.6735, 28.5548, 5.86052, 0.81", "-77.6544, 29.1539, 5.68187, 0.88", "-78.9935, 29.9901, 5.57334, 0.96", "-79.6482, 30.3691, 5.57864, 0.59", "-80.7111, 30.9396, 5.6538, 0.29", "-81.6113, 31.3883, 5.75794, 0.59", "-82.7441, 31.939, 5.94509, 0.96", "-84.0495, 32.5466, 6.2212, 0.66", "-86.027, 33.4315, 6.68903, 0.44", "-87.021, 33.8526, 6.91676, 0.81", "-88.3221, 34.3473, 7.17618, 2.14" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-42.7059, 15.0335, 35.9309, 0.44", "-43.6658, 16.4794, 36.4801, 0.44", "-44.5898, 17.5627, 36.9835, 0.44", "-45.3905, 18.3594, 37.3714, 1.18", "-46.0732, 18.943, 37.6951, 0.96", "-47.2742, 19.8029, 38.2485, 0.74", "-48.381, 20.4516, 38.7479, 0.88", "-50.0446, 21.1305, 39.5248, 0.44", "-50.7375, 21.3435, 39.8419, 0.81", "-51.6858, 21.6227, 40.2772, 1.25", "-52.8444, 22.0221, 40.78, 1.33", "-54.2336, 22.6225, 41.3512, 1.03", "-55.5313, 23.3249, 41.8683, 0.52", "-56.314, 23.8204, 42.1599, 1.11", "-57.6699, 24.7554, 42.6876, 1.55", "-59.0886, 25.8382, 43.2314, 1.84", "-59.938, 26.5372, 43.5454, 1.11", "-60.7199, 27.1681, 43.8058, 0.29", "-61.796, 27.9627, 44.1422, 0.37", "-62.9035, 28.6844, 44.448, 0.29", "-63.8624, 29.2474, 44.6977, 1.33", "-65.1651, 30.0342, 45.0411, 0.44", "-66.2952, 30.7908, 45.3669, 0.44", "-67.1092, 31.419, 45.6103, 1.03", "-68.2839, 32.408, 45.9661, 1.84", "-69.1549, 33.1267, 46.2202, 1.92", "-71.0912, 34.672, 46.8983, 0.44", "-71.8145, 35.2618, 47.1972, 0.44", "-72.4556, 35.8095, 47.5048, 0.44", "-73.2179, 36.4869, 47.9106, 0.44", "-74.0253, 37.2466, 48.4177, 0.59", "-75.0354, 38.213, 49.0902, 1.11", "-76.3161, 39.4078, 49.9532, 0.44", "-77.1687, 40.1658, 50.4852, 0.44", "-77.869, 40.7807, 50.9058, 0.29", "-78.9061, 41.6807, 51.4543, 0.66", "-80.1282, 42.698, 51.9859, 0.88", "-80.7987, 43.1886, 52.2021, 1.62", "-81.7981, 43.7757, 52.4361, 2.43", "-82.2428, 43.9845, 52.5153, 2.43", "-83.8911, 44.6014, 52.7885, 0.74", "-85.3151, 45.0722, 53.049, 0.29", "-86.3094, 45.4024, 53.261, 0.29", "-87.5433, 45.8416, 53.546, 0.59", "-88.8859, 46.3504, 53.8306, 0.29", "-90.1022, 46.8396, 54.0365, 0.96", "-91.4404, 47.4375, 54.1422, 0.22", "-92.3487, 47.8723, 54.1144, 1.03", "-93.8108, 48.6065, 53.9143, 0.22", "-95.0188, 49.2274, 53.6094, 0.22", "-95.7549, 49.5876, 53.3294, 0.88", "-97.379, 50.2973, 52.5742, 0.37", "-98.3482, 50.6521, 52.0993, 1.11", "-99.1164, 50.9181, 51.7351, 1.03", "-100.657, 51.4873, 51.058, 0.29", "-101.878, 51.9936, 50.573, 0.22", "-102.694, 52.3857, 50.2532, 0.81", "-103.59, 52.9322, 49.9367, 1.25", "-105.316, 54.4532, 49.4924, 0.37", "-105.98, 55.2966, 49.4797, 0.37", "-106.42, 56.0633, 49.6557, 0.37", "-106.691, 56.6394, 49.8957, 0.74", "-107.187, 57.8844, 50.592, 1.47", "-107.802, 59.639, 51.7305, 0.59", "-108.255, 60.9906, 52.7033, 0.37", "-108.584, 61.9422, 53.3944, 0.29", "-108.999, 63.1216, 54.2169, 0.66", "-109.491, 64.5058, 55.0979, 0.22", "-109.764, 65.3576, 55.5465, 0.22", "-110.004, 66.3809, 55.9554, 0.22", "-110.05, 66.8949, 56.083, 0.52", "-109.945, 67.8428, 56.1949, 1.03", "-109.757, 68.5584, 56.2154, 0.37", "-109.38, 69.5877, 56.1955, 0.29", "-108.958, 70.6007, 56.2059, 0.44", "-108.559, 71.6212, 56.2379, 0.52", "-107.862, 73.732, 56.3375, 0.22", "-107.683, 74.4052, 56.3782, 0.44", "-107.526, 75.3267, 56.4229, 1.03", "-107.44, 76.7401, 56.4927, 0.52", "-107.493, 78.2031, 56.564, 0.22", "-107.602, 79.0753, 56.6181, 0.66", "-107.764, 79.7983, 56.6654, 0.44", "-108.129, 81.2024, 56.7488, 0.22", "-108.459, 82.4, 56.8112, 0.22", "-108.673, 83.2635, 56.8442, 0.37", "-108.848, 84.0755, 56.902, 0.96", "-109.045, 85.0103, 57.0147, 0.59", "-109.341, 86.5286, 57.254, 0.29", "-109.459, 87.1636, 57.3881, 0.29", "-109.675, 88.2904, 57.6391, 0.88", "-109.998, 89.7872, 58.0282, 0.22", "-110.21, 90.6524, 58.2655, 0.52", "-110.554, 91.8898, 58.6282, 0.29", "-110.855, 92.7836, 58.8977, 0.88", "-111.271, 93.7976, 59.1744, 1.47", "-112.254, 95.7105, 59.7372, 0.15", "-112.774, 96.5882, 60.0136, 0.15", "-113.129, 97.1108, 60.1865, 0.81", "-113.68, 97.8075, 60.4591, 1.11", "-114.975, 99.2041, 61.0967, 0.22", "-116.195, 100.321, 61.6926, 0.22", "-116.613, 100.65, 61.8878, 0.22", "-117.203, 101.113, 62.1588, 0.88", "-117.946, 101.709, 62.4777, 0.88", "-119.196, 102.736, 62.9499, 0.22", "-119.889, 103.339, 63.1872, 0.52", "-120.257, 103.69, 63.3025, 1.03", "-121.567, 105.023, 63.7203, 0.44", "-122.227, 105.743, 63.9321, 0.22", "-122.859, 106.493, 64.1208, 0.44", "-124.018, 108.02, 64.4271, 0.22", "-124.538, 108.772, 64.5316, 0.74", "-124.963, 109.484, 64.5609, 1.11", "-125.51, 110.773, 64.4163, 0.22", "-125.777, 112.062, 64.046, 0.29", "-125.8, 113.19, 63.5406, 0.22", "-125.657, 114.454, 62.7707, 0.37", "-125.373, 115.726, 61.8803, 0.29", "-124.949, 116.931, 60.9597, 0.22", "-124.551, 117.773, 60.2821, 0.88", "-124.046, 118.728, 59.5462, 0.22", "-123.447, 119.867, 58.7633, 0.22", "-122.966, 120.871, 58.1807, 0.22", "-122.602, 121.707, 57.7825, 0.22", "-122.331, 122.386, 57.5266, 1.18", "-121.76, 123.861, 57.0649, 0.15", "-121.446, 124.682, 56.8714, 0.29", "-121.14, 125.583, 56.7442, 0.07", "-120.913, 126.497, 56.6525, 0.74", "-120.849, 126.861, 56.6236, 0.74" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "22.0236, -45.1279, -10.7873, 0.88", "21.1848, -47.1894, -11.3644, 0.88", "20.4514, -48.766, -11.8954, 0.74", "19.7773, -50.0327, -12.2993, 0.88", "19.0452, -51.2362, -12.664, 1.18", "18.4304, -52.1592, -12.9417, 0.88", "17.8264, -53.0599, -13.1998, 0.74", "17.1292, -54.0367, -13.4866, 0.96", "16.4779, -54.9747, -13.7044, 0.81", "16.0087, -55.772, -13.8239, 0.66", "15.5376, -56.8168, -13.9355, 0.88", "15.1522, -57.845, -14.0468, 0.88", "14.6755, -59.2986, -14.2193, 0.88", "14.4989, -59.9518, -14.3106, 0.74", "14.1712, -61.4225, -14.596, 0.59", "13.9541, -62.5359, -14.8476, 0.59", "13.717, -63.5292, -15.1034, 1.03", "13.3584, -64.6635, -15.467, 1.03", "12.8752, -65.9136, -15.9468, 0.74", "12.5213, -66.7706, -16.2865, 0.74", "12.1436, -67.6373, -16.6401, 0.81", "11.559, -68.9074, -17.1678, 0.66", "11.0703, -69.8817, -17.5425, 0.74", "10.5168, -70.9133, -17.8651, 0.88", "10.0939, -71.6417, -18.0457, 1.25", "9.67887, -72.3335, -18.1304, 1.25", "9.03794, -73.4404, -18.1381, 0.88", "8.49759, -74.5552, -17.9967, 0.81", "8.04578, -75.6054, -17.6878, 0.88", "7.76756, -76.3061, -17.3673, 0.88", "7.36949, -77.4345, -16.6966, 0.59", "7.21757, -77.9774, -16.3115, 1.03", "6.98282, -79.1718, -15.3701, 0.59", "6.84187, -80.2025, -14.5061, 0.81", "6.71795, -81.1347, -13.7165, 1.11", "6.56999, -82.3078, -12.7359, 0.66", "6.45257, -83.4541, -11.7959, 0.66", "6.37574, -84.5569, -10.8928, 0.59", "6.34911, -85.5269, -10.1261, 0.44", "6.37917, -86.3346, -9.54781, 0.59", "6.46186, -87.0682, -9.07983, 0.81", "6.71479, -88.5514, -8.29373, 0.59", "6.97139, -89.6548, -7.85888, 0.74", "7.17086, -90.2776, -7.67636, 0.81", "7.49681, -91.0041, -7.51199, 0.74", "8.04597, -91.9196, -7.29299, 0.88", "8.90544, -93.0737, -6.96583, 0.52", "9.62379, -93.9404, -6.6815, 0.59", "10.1753, -94.6088, -6.38827, 0.59", "10.8303, -95.3984, -5.91958, 0.81", "11.596, -96.3256, -5.24957, 0.66", "12.2377, -97.1737, -4.56858, 0.88", "12.7084, -97.8942, -3.98431, 0.96", "13.2902, -99.0089, -3.15001, 0.66", "13.7202, -100.116, -2.46889, 0.88", "14.0457, -101.25, -1.91417, 0.66", "14.3676, -102.703, -1.39541, 0.88", "14.6325, -104.12, -1.03183, 1.18", "14.8301, -105.309, -0.851259, 1.33", "15.0681, -107.071, -0.765959, 0.59", "15.1575, -108.092, -0.794338, 0.59", "15.1829, -109.16, -0.876792, 0.88", "15.1312, -109.975, -0.940653, 0.88", "14.924, -111.364, -0.986341, 0.74", "14.6132, -112.892, -0.932353, 0.88", "14.4312, -113.726, -0.824504, 0.66", "14.1673, -114.959, -0.572579, 0.81", "13.7662, -116.623, -0.133743, 0.74", "13.4492, -117.782, 0.206618, 0.66", "13.141, -118.799, 0.535519, 0.66", "12.8067, -119.874, 0.855584, 0.59", "12.5192, -120.852, 1.06786, 1.03", "12.1598, -122.27, 1.26624, 0.88", "11.9905, -123.089, 1.31906, 1.03", "11.8056, -124.152, 1.32742, 1.03", "11.6325, -125.614, 1.28532, 0.74", "11.5589, -127.202, 1.18207, 0.96", "11.631, -128.518, 1.06756, 0.81", "11.8678, -129.912, 0.918522, 0.66", "12.1577, -130.923, 0.82835, 0.66", "12.7184, -132.234, 0.762078, 0.74", "13.1406, -132.938, 0.779056, 1.11", "13.6183, -133.542, 0.853665, 0.88", "14.2729, -134.201, 1.00035, 1.03", "15.5742, -135.312, 1.39283, 0.74", "16.7473, -136.223, 1.81719, 0.74", "17.8334, -137.048, 2.26636, 0.88", "18.7224, -137.766, 2.69385, 1.03", "19.5608, -138.535, 3.17056, 0.66", "20.1864, -139.276, 3.62332, 0.81", "20.394, -139.667, 3.84379, 0.81", "20.7784, -141.042, 4.55353, 0.59", "20.9339, -142.303, 5.13393, 1.11", "20.9916, -143.382, 5.61112, 0.81", "21.0467, -144.792, 6.21724, 0.59", "21.1203, -146.007, 6.7186, 0.59", "21.1961, -146.883, 7.08494, 0.88", "21.314, -147.912, 7.49847, 1.33", "21.5534, -149.632, 8.17169, 0.74", "21.7462, -150.85, 8.68048, 0.74", "21.9171, -151.719, 9.06627, 0.52", "22.1488, -152.656, 9.51961, 1.11", "22.3995, -153.562, 10.0031, 0.88", "22.7257, -154.755, 10.7023, 0.59", "22.9292, -155.699, 11.2898, 0.59", "23.0985, -157.001, 12.1698, 0.88", "23.1074, -158.102, 12.9536, 0.88", "23.0306, -158.703, 13.372, 1.18", "22.8284, -159.464, 13.8829, 1.25", "22.4205, -160.536, 14.5262, 0.96", "21.9573, -161.516, 15.0624, 1.47", "21.2787, -162.761, 15.7366, 1.4", "20.7891, -163.667, 16.2499, 1.4", "20.2209, -164.839, 16.9321, 0.74", "19.759, -165.934, 17.5909, 0.59", "19.3818, -166.96, 18.216, 1.25", "18.9692, -168.167, 18.9865, 0.81", "18.4767, -169.688, 19.9987, 0.66", "18.1825, -170.567, 20.5882, 0.74", "17.9014, -171.393, 21.0879, 1.4", "17.5827, -172.486, 21.6438, 1.03", "17.3823, -173.697, 22.0905, 0.66", "17.3713, -174.839, 22.3849, 0.52", "17.5241, -175.951, 22.5829, 0.88", "17.8741, -177.401, 22.8025, 1.47", "18.3354, -178.811, 23.0282, 0.96", "19.003, -180.434, 23.3322, 0.81", "19.6985, -181.85, 23.685, 0.66", "20.2648, -182.841, 24.073, 0.66", "20.8328, -183.738, 24.621, 0.59", "21.3861, -184.618, 25.3925, 0.59", "21.8081, -185.326, 26.1897, 0.96", "22.2576, -186.126, 27.2803, 1.18", "22.7576, -186.957, 28.5382, 0.88", "23.18, -187.647, 29.5991, 0.74", "23.6162, -188.343, 30.6573, 0.88", "23.9916, -188.964, 31.5621, 1.03", "24.5096, -189.867, 32.832, 0.74", "24.9924, -190.785, 34.0349, 0.96", "25.3443, -191.525, 34.9563, 0.66", "25.5123, -191.891, 35.4262, 0.66", "25.9887, -192.889, 36.8463, 1.03", "26.2651, -193.471, 37.8062, 1.25", "26.5758, -194.126, 39.0513, 0.96", "26.862, -194.736, 40.3525, 0.81", "27.0221, -195.039, 41.0209, 0.81", "27.1801, -195.281, 41.4928, 0.81", "27.5738, -195.742, 42.2236, 0.81", "28.238, -196.37, 43.0305, 0.59", "28.8923, -196.906, 43.5934, 0.96", "29.6339, -197.464, 44.0973, 0.66", "30.7113, -198.243, 44.7295, 0.29", "31.4623, -198.804, 45.1384, 0.81", "32.2565, -199.443, 45.5837, 1.03", "33.1374, -200.253, 46.1833, 0.88", "33.7418, -200.919, 46.703, 0.88", "34.6304, -202.346, 47.7692, 0.44", "34.899, -203.128, 48.3021, 0.66", "35.0953, -204.432, 49.0882, 0.44", "35.0873, -205.964, 49.9238, 0.88", "34.9699, -207.044, 50.511, 1.25", "34.6384, -208.952, 51.6134, 0.74", "34.3647, -210.201, 52.3627, 0.81", "34.0953, -211.372, 53.0888, 1.03", "33.7593, -212.604, 53.8939, 0.81", "33.3727, -213.764, 54.7156, 0.66", "32.8115, -215.051, 55.7765, 1.11", "32.3536, -215.856, 56.6006, 1.4", "31.6608, -216.837, 57.7658, 0.44", "30.7634, -217.924, 59.2243, 0.44", "30.2508, -218.507, 60.0826, 0.81", "29.5407, -219.238, 61.2505, 0.66", "28.8872, -219.889, 62.3413, 1.25", "28.3914, -220.419, 63.2448, 1.77", "27.7869, -221.205, 64.5723, 1.25", "27.2128, -222.21, 66.2243, 0.59", "26.7706, -223.258, 68.0149, 0.44", "26.6453, -223.751, 68.9141, 0.88", "26.6317, -224.425, 70.2029, 0.44", "26.8002, -224.878, 71.1634, 0.44", "27.1918, -225.24, 72.0547, 0.59", "28.0458, -225.71, 73.3185, 0.37", "28.8317, -226.074, 74.3478, 0.52", "29.5535, -226.438, 75.3418, 0.29", "30.1926, -226.835, 76.2978, 0.81", "30.893, -227.488, 77.4834, 1.77", "31.6359, -228.572, 79.0538, 0.37", "32.072, -229.624, 80.3447, 0.52", "32.3392, -230.764, 81.6144, 1.18", "32.407, -231.6, 82.4808, 1.18", "32.3137, -232.912, 83.7146, 0.37", "32.0595, -233.96, 84.6341, 0.37", "31.7383, -234.786, 85.3443, 1.03", "31.4707, -235.352, 85.8571, 1.03", "31.0434, -236.146, 86.6264, 0.44", "30.5029, -237.089, 87.5384, 0.44", "30.0123, -237.924, 88.3378, 0.37", "29.4275, -239.005, 89.2603, 0.88", "28.9276, -240.003, 89.9429, 1.7", "28.5946, -240.716, 90.2887, 1.03", "27.8142, -242.454, 90.7776, 0.29", "27.5712, -243.02, 90.8208, 1.18", "27.1876, -243.904, 90.7366, 1.77", "26.481, -245.49, 90.3911, 0.15", "25.9752, -246.602, 90.0504, 0.74", "25.5176, -247.604, 89.7012, 0.22", "25.2005, -248.32, 89.4116, 0.52", "24.7487, -249.35, 88.9925, 1.18", "24.3874, -250.195, 88.6497, 0.22", "24.1007, -250.925, 88.3984, 0.15", "23.8486, -251.647, 88.1744, 0.81", "23.5148, -252.682, 87.8396, 0.15", "23.2777, -253.4, 87.6262, 0.74" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "22.0236, -45.1279, -10.7873, 0.96", "22.6411, -46.8153, -11.223, 0.96", "22.9335, -47.8486, -11.4812, 0.96", "23.1873, -48.8973, -11.7263, 1.11", "23.4793, -50.11, -12.0305, 1.11", "23.9121, -51.7166, -12.4347, 1.33", "24.4018, -53.2882, -12.8524, 1.11", "24.7861, -54.4254, -13.2201, 1.11", "25.1535, -55.3326, -13.55, 1.18", "25.8123, -56.5797, -14.0315, 1.18", "26.5158, -57.5963, -14.4638, 1.18", "27.2356, -58.4683, -14.864, 1.11", "28.1835, -59.5403, -15.3161, 1.4", "29.1373, -60.6696, -15.6996, 1.25", "29.8969, -61.7042, -15.8945, 1.18", "30.6073, -62.9754, -15.8916, 1.18", "31.0278, -64.0011, -15.7517, 1.11", "31.5028, -65.5432, -15.3518, 1.33", "31.8692, -66.9528, -14.898, 1.18", "32.2411, -68.4021, -14.3606, 1.33", "32.5803, -69.6996, -13.8725, 1.03", "32.8322, -70.5903, -13.5524, 1.11", "33.1625, -71.5579, -13.2801, 1.55", "33.6013, -72.6891, -13.087, 1.47", "34.2517, -74.274, -12.9499, 1.18", "34.6953, -75.3739, -12.9159, 1.18", "35.0109, -76.244, -12.8726, 1.18", "35.3759, -77.4468, -12.7088, 1.11", "35.6217, -78.3694, -12.5742, 1.11", "35.8838, -79.5744, -12.3509, 1.62", "36.0425, -80.4382, -12.1814, 1.03", "36.2896, -81.7863, -11.8233, 1.18", "36.6136, -83.6133, -11.1341, 1.92" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-36.4607, -81.4222, -37.1273, 0.66", "-36.957, -83.1049, -37.6782, 0.66", "-37.3182, -84.0241, -38.0165, 0.88", "-37.7726, -84.9501, -38.3385, 0.66", "-38.339, -86.0377, -38.6452, 0.44", "-38.919, -87.1813, -38.8538, 0.44", "-39.3924, -88.1319, -38.9429, 0.74", "-39.9543, -89.2234, -38.8559, 0.81", "-40.5492, -90.5475, -38.5493, 0.59", "-40.8825, -91.5089, -38.2236, 0.59", "-41.2778, -93.035, -37.5776, 0.29", "-41.4531, -93.965, -37.0938, 0.29", "-41.5617, -95.1119, -36.4164, 0.22", "-41.5731, -96.13, -35.7548, 0.22", "-41.5237, -97.266, -35.0031, 0.15", "-41.4876, -97.8793, -34.6068, 0.15", "-41.4033, -98.8614, -33.9701, 0.15", "-41.2929, -99.8863, -33.3214, 0.22", "-41.2304, -100.772, -32.7711, 0.22", "-42.3939, -110.695, -32.3444, 0.22", "-44.8984, -120.374, -32.1281, 0.22", "-47.3422, -129.949, -33.6607, 0.22", "-47.7558, -139.939, -33.5132, 0.22", "-46.4468, -149.725, -31.9272, 0.22", "-46.7734, -159.283, -29.0046, 0.22", "-48.1935, -168.947, -26.8566, 0.22", "-48.3281, -178.688, -24.6003, 0.22", "-48.6874, -188.645, -23.7468, 0.22", "-48.0874, -198.264, -21.0789, 0.22", "-45.8432, -207.417, -17.7344, 0.22", "-42.523, -215.406, -12.7186, 0.22", "-38.005, -221.587, -6.28679, 0.22" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-36.4607, -81.4222, -37.1273, 1.11", "-36.8345, -82.2096, -36.9225, 1.11", "-37.5755, -83.6106, -36.7902, 0.81", "-38.4343, -85.107, -36.8641, 1.11", "-39.1172, -86.2608, -37.0264, 1.11", "-39.8696, -87.6065, -37.2871, 0.88", "-40.5034, -88.8523, -37.5859, 1.11", "-41.0541, -90.112, -38.0287, 1.11", "-41.4973, -91.3046, -38.5823, 1.11", "-41.8292, -92.348, -39.1422, 1.18", "-42.1961, -93.8392, -39.9667, 0.96", "-42.4276, -95.0434, -40.6169, 1.11", "-42.6489, -96.2537, -41.2466, 0.81", "-42.8844, -97.3679, -41.7989, 1.11", "-43.2398, -98.7623, -42.4721, 1.11", "-43.5698, -99.863, -42.9732, 1.4", "-43.8025, -100.509, -43.2346, 1.7", "-44.2302, -101.583, -43.5526, 1.47", "-44.9226, -103.268, -43.8444, 1.47", "-45.1654, -103.849, -43.8769, 1.55", "-45.7486, -105.28, -43.8618, 1.03", "-46.1889, -106.419, -43.8453, 0.88", "-46.7454, -107.962, -43.8813, 1.18", "-47.1871, -109.255, -43.9695, 0.88", "-47.6344, -110.571, -44.1567, 0.96", "-48.2235, -112.122, -44.4689, 0.88", "-48.8313, -113.5, -44.8233, 0.74", "-49.42, -114.771, -45.2055, 0.96", "-49.8708, -115.764, -45.5462, 1.03", "-50.4272, -117.081, -46.0206, 0.74", "-51.059, -118.813, -46.6195, 0.66", "-51.3357, -119.627, -46.8522, 0.66", "-51.6109, -120.473, -47.0481, 0.74", "-51.9022, -121.462, -47.2327, 0.81", "-52.1907, -122.483, -47.3957, 0.81", "-52.5467, -123.772, -47.587, 0.74", "-52.798, -124.84, -47.7553, 0.66", "-52.9319, -125.433, -47.8516, 0.66", "-53.2477, -126.643, -48.0522, 1.11", "-53.7071, -128.076, -48.2779, 0.29", "-54.1089, -129.156, -48.4142, 0.29", "-56.412, -138.65, -50.5497, 0.29", "-57.5318, -147.731, -54.5841, 0.29", "-59.6224, -156.137, -59.5806, 0.29", "-62.111, -164.162, -65.0041, 0.29", "-63.9788, -172.867, -69.5594, 0.29", "-63.9616, -181.966, -73.7058, 0.29", "-65.4802, -191.115, -77.4467, 0.29", "-67.1602, -200.72, -79.6626, 0.29", "-70.4825, -210.014, -81.2734, 0.29", "-74.974, -218.781, -82.9908, 0.29", "-80.2814, -226.723, -85.9524, 0.29", "-86.6816, -234.179, -87.8077, 0.29" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "118.127, 18.9647, -48.9783, 0.15", "126.666, 23.3995, -51.7015, 0.15", "134.169, 27.8331, -56.6059, 0.15", "141.933, 33.2817, -59.7733, 0.15" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "118.127, 18.9647, -48.9783, 0.15", "127.746, 21.6032, -49.6912, 0.15", "137.323, 24.1992, -48.4466, 0.15", "146.482, 27.7682, -46.612, 0.15", "154.845, 31.9679, -43.0857, 0.15", "162.781, 35.7913, -38.3537, 0.15", "170.401, 40.2193, -33.6279, 0.15", "178.055, 45.2466, -29.6096, 0.15", "185.869, 49.2743, -24.8434, 0.15", "192.725, 53.3321, -18.7998, 0.15", "200.097, 55.9191, -12.5578, 0.15", "208.447, 57.5645, -7.30723, 0.15", "217.292, 59.7765, -3.19807, 0.15", "225.221, 62.4538, 2.27541, 0.15", "233.507, 66.6082, 6.02705, 0.15", "241.02, 71.5762, 10.3717, 0.15", "249.198, 74.8398, 15.1113, 0.15" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "40.0486, -24.4869, -39.8856, 0.22", "38.9191, -24.6425, -40.7709, 0.22", "38.1532, -24.7971, -41.4002, 0.22", "37.342, -25.0168, -42.1082, 0.29", "36.4819, -25.3395, -42.9174, 0.22", "35.991, -25.5777, -43.4051, 0.22", "35.6178, -25.8137, -43.7796, 0.22", "35.3486, -26.0799, -44.0264, 0.22", "35.1161, -26.4263, -44.2586, 0.22", "34.9085, -26.9622, -44.5462, 0.22", "34.8228, -27.3762, -44.7248, 0.22", "34.6811, -28.2222, -44.9991, 0.22", "34.5262, -29.0419, -45.2027, 0.22", "28.2579, -33.0693, -51.8726, 0.22", "21.5442, -37.88, -57.5103, 0.22", "14.4821, -43.2035, -62.1779, 0.22", "7.07914, -48.0633, -66.8232, 0.22", "0.64651, -54.4323, -71.0725, 0.22", "-5.20079, -61.2941, -75.3998, 0.22", "-11.275, -68.5178, -78.7045, 0.22", "-15.9801, -76.0229, -83.3451, 0.22", "-19.78, -84.3799, -87.3103, 0.22", "-22.5835, -92.589, -92.2853, 0.22", "-26.6789, -100.838, -96.1796, 0.22", "-31.7971, -109.021, -98.7968, 0.22", "-37.9144, -115.884, -102.73, 0.22", "-45.0796, -122.438, -105.123, 0.22", "-50.7065, -130.199, -107.967, 0.22", "-55.3863, -138.751, -110.193, 0.22" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "40.0486, -24.4869, -39.8856, 0.74", "39.9858, -25.4826, -39.9371, 0.74", "39.7761, -26.4828, -40.0344, 0.59", "39.5679, -27.1915, -40.1171, 0.59", "39.3237, -27.8856, -40.2038, 0.59", "38.9978, -28.8622, -40.3198, 0.66", "38.7609, -29.7218, -40.4385, 0.81", "38.5326, -30.5422, -40.6086, 0.81", "38.3807, -31.2014, -40.784, 1.03", "38.1522, -32.3237, -41.1077, 0.74", "37.9967, -33.4472, -41.4565, 0.74", "37.925, -34.8024, -41.9059, 0.66", "37.9572, -35.9001, -42.2829, 0.66", "38.0789, -36.9099, -42.661, 1.4" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "32.6512, 40.8641, 8.63519, 0.22", "34.3941, 42.0135, 8.11694, 0.22", "34.8904, 42.3269, 7.93838, 0.37", "35.473, 42.6834, 7.69908, 0.66", "36.3035, 43.1606, 7.28503, 0.52", "36.7778, 43.4028, 7.00422, 0.74", "37.7736, 43.8462, 6.3754, 0.59", "38.6694, 44.1811, 5.7629, 0.81", "39.8655, 44.6057, 4.92402, 1.11", "40.9449, 45.0149, 4.15665, 0.29", "41.9658, 45.4753, 3.42398, 0.29", "42.7626, 45.9815, 2.8613, 0.37", "43.5276, 46.627, 2.3376, 0.74", "44.3655, 47.5258, 1.74923, 0.81", "45.1695, 48.5838, 1.13074, 0.74", "45.8199, 49.5995, 0.565806, 1.03", "46.8248, 51.368, -0.47078, 0.44", "47.2448, 52.1634, -1.01876, 0.44", "47.7193, 53.0493, -1.82306, 0.29", "48.0606, 53.5752, -2.55577, 0.29", "48.4682, 53.9889, -3.55639, 0.44", "48.8186, 54.1573, -4.46598, 0.44", "49.1525, 54.1796, -5.3363, 0.44", "49.7221, 54.1827, -6.75073, 0.59", "50.1486, 54.235, -7.77226, 0.59", "50.3194, 54.3189, -8.21384, 0.59", "50.6584, 54.7799, -9.3603, 0.52", "50.7659, 55.1771, -9.94749, 0.52", "50.8702, 55.973, -10.8367, 0.66", "50.9399, 56.8992, -11.722, 0.88", "51.0142, 58.0811, -12.8137, 0.29", "51.0636, 58.8075, -13.5224, 0.29", "51.143, 59.6675, -14.4651, 0.29", "51.2343, 60.2382, -15.2191, 0.29", "51.3535, 60.6551, -16.0015, 0.29", "51.4823, 60.9541, -16.7721, 0.29", "51.6365, 61.1926, -17.5139, 0.29", "51.8275, 61.4847, -18.381, 0.29", "51.9372, 61.7534, -18.9683, 0.29", "52.1078, 62.6096, -20.1799, 0.29", "52.1414, 63.1175, -20.712, 0.66", "52.1049, 63.9669, -21.4911, 0.44", "52.0197, 65.1392, -22.4239, 0.37", "51.9871, 66.3146, -23.262, 0.29", "52.0508, 67.5696, -24.0789, 0.29", "52.2592, 68.8092, -24.8091, 0.96", "52.5946, 70.1238, -25.6137, 0.22", "52.7957, 70.8114, -26.0699, 0.66", "53.1399, 71.8155, -26.734, 0.29", "53.5114, 72.5811, -27.2423, 0.22", "54.2306, 73.6177, -27.9268, 0.22", "55.0131, 74.444, -28.3955, 0.22", "55.8851, 75.2589, -28.8398, 0.22", "56.233, 75.5892, -29.0504, 0.22", "56.6047, 76.0281, -29.3592, 0.22", "57.1273, 76.7154, -29.9272, 0.37", "57.8666, 77.71, -30.9347, 0.37", "60.8496, 85.0885, -36.9894, 0.37", "63.817, 93.5877, -41.3434, 0.37", "67.1679, 102.738, -43.5893, 0.37" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "32.6512, 40.8641, 8.63519, 1.25", "32.9347, 41.9829, 9.37411, 1.25", "33.1672, 43.3295, 10.2318, 0.88", "33.3889, 44.7444, 11.0766, 0.81", "33.5524, 45.7754, 11.6325, 0.88", "33.7143, 46.7698, 12.112, 0.74", "33.9163, 48.1024, 12.6712, 0.88", "34.0438, 49.0961, 13.0128, 1.03", "34.1454, 49.9935, 13.2936, 0.88", "34.2922, 51.216, 13.6684, 1.03", "34.5523, 53.0112, 14.2563, 1.03", "34.8506, 54.6455, 14.8722, 0.81", "35.0261, 55.4969, 15.2533, 0.66", "35.2186, 56.422, 15.7363, 0.88", "35.4018, 57.298, 16.2787, 0.88", "35.6883, 58.4255, 17.098, 1.4", "36.0611, 59.4807, 17.9996, 1.25", "36.5283, 60.3753, 18.8855, 1.4", "37.2703, 61.3955, 19.9184, 0.59", "37.6944, 61.834, 20.357, 0.59", "38.298, 62.3549, 20.8192, 0.52", "39.0768, 62.9614, 21.2736, 1.11", "40.0627, 63.7054, 21.7508, 1.4", "41.2334, 64.6195, 22.2686, 1.11", "42.4564, 65.6777, 22.7697, 0.96", "43.482, 66.7134, 23.2007, 0.59", "44.0693, 67.4097, 23.4876, 0.59", "44.6318, 68.2258, 23.8646, 0.96", "45.166, 69.1752, 24.3776, 1.62", "45.6788, 70.2222, 25.07, 1.47", "46.1598, 71.2016, 25.8684, 1.33", "46.5089, 71.8495, 26.5348, 1.47", "47.3255, 73.2089, 28.2031, 0.59", "47.7796, 73.9539, 29.1894, 0.74", "48.2913, 74.7749, 30.3876, 1.18", "48.8947, 75.714, 31.9242, 1.47", "49.4378, 76.473, 33.2783, 1.55", "49.7954, 76.8755, 34.0559, 1.55" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "39.8313, 12.196, 15.5914, 1.62", "40.6116, 12.3631, 15.8276, 1.62", "41.7785, 12.6912, 15.9105, 1.84", "43.4933, 13.2026, 15.8338, 0.88", "44.2296, 13.416, 15.7884, 0.66", "45.5885, 13.8125, 15.7546, 0.96", "46.8025, 14.173, 15.7987, 0.74", "48.0501, 14.627, 15.8756, 1.03", "49.6366, 15.2777, 15.9826, 0.66", "50.5553, 15.677, 16.0808, 1.33", "51.6598, 16.1222, 16.2589, 1.47", "52.9205, 16.5682, 16.4703, 0.96", "54.3089, 16.9765, 16.6931, 1.03", "55.7631, 17.2723, 16.8661, 0.81", "56.9021, 17.3621, 16.9063, 0.96", "58.3926, 17.28, 16.8368, 1.11", "59.8331, 17.0431, 16.707, 1.11", "61.319, 16.6575, 16.5648, 1.33", "62.6145, 16.2265, 16.4712, 0.88", "64.0327, 15.7199, 16.4416, 0.88", "65.6487, 15.1667, 16.4928, 0.59", "66.7167, 14.8928, 16.6162, 0.88", "67.7765, 14.7451, 16.8442, 1.03", "68.985, 14.7196, 17.1728, 0.74", "70.0997, 14.8188, 17.5247, 0.96", "70.9941, 14.9922, 17.8405, 1.25", "72.7328, 15.4788, 18.4585, 0.66", "73.8004, 15.8486, 18.7828, 1.11", "74.4746, 16.1236, 18.9282, 1.11", "75.8242, 16.7057, 19.1094, 0.74", "77.409, 17.3837, 19.1816, 0.52", "78.6175, 17.8602, 19.1421, 0.88", "79.8575, 18.2481, 19.0141, 0.66", "81.7556, 18.7062, 18.8268, 0.44", "82.5296, 18.8576, 18.7901, 0.96", "83.338, 18.9819, 18.7937, 1.11", "84.6347, 19.1701, 18.9253, 0.96", "86.0776, 19.4082, 19.2393, 1.33", "87.8866, 19.7939, 19.9018, 0.44", "88.8308, 20.0641, 20.4568, 0.66", "89.5144, 20.3107, 20.9636, 1.18", "90.8269, 20.8502, 22.0352, 0.96", "91.4681, 21.1333, 22.5663, 0.74", "92.5409, 21.5955, 23.3543, 0.29", "94.5378, 22.2967, 24.4455, 0.52", "95.6418, 22.5345, 24.8271, 0.81", "97.3152, 22.6887, 25.1552, 0.88", "98.4324, 22.6909, 25.1847, 1.11", "100.048, 22.6314, 25.0151, 1.11", "101.685, 22.5151, 24.6249, 0.74", "103.041, 22.3797, 24.1635, 0.59", "103.745, 22.2782, 23.9107, 0.37", "105.035, 22.0358, 23.5338, 0.37", "105.761, 21.8879, 23.4104, 0.37", "106.686, 21.7087, 23.4221, 0.66", "107.439, 21.5755, 23.5734, 0.88", "108.984, 21.357, 24.1036, 0.74", "110.432, 21.1705, 24.7145, 0.59", "111.137, 21.0826, 25.0583, 0.88", "112.461, 20.9253, 25.7387, 0.66", "113.513, 20.8125, 26.3006, 0.96", "114.758, 20.6711, 26.9973, 1.4", "116.796, 20.3918, 28.2467, 0.37", "117.766, 20.2455, 28.8682, 0.37", "118.834, 20.0501, 29.5955, 0.88", "119.496, 19.9016, 30.058, 1.25", "120.572, 19.6462, 30.808, 1.33", "121.963, 19.3233, 31.8147, 0.74", "123.207, 19.0788, 32.7789, 0.88", "124.343, 18.9215, 33.6818, 0.37", "124.92, 18.8946, 34.1671, 0.52", "126.074, 18.9449, 35.1648, 0.22", "126.579, 19.0138, 35.583, 0.22", "127.231, 19.1619, 36.0973, 0.29", "128.054, 19.4028, 36.6634, 0.44", "129.115, 19.7662, 37.2749, 0.44", "130.171, 20.1431, 37.8197, 1.03", "131.222, 20.5292, 38.3124, 1.47", "132.54, 21.0237, 38.8343, 1.7", "134.893, 21.9963, 39.5186, 0.37", "136.463, 22.7491, 39.8296, 0.37", "137.542, 23.3598, 39.9752, 0.66", "138.473, 24.002, 40.0417, 1.03", "139.621, 24.9321, 40.0658, 1.03", "141.081, 26.269, 39.9872, 0.74", "142.315, 27.533, 39.8486, 0.44", "143.046, 28.3242, 39.7608, 0.96", "144.245, 29.6121, 39.5979, 1.55", "145.446, 30.7717, 39.4311, 0.37", "146.361, 31.506, 39.3325, 0.88", "147.077, 31.9802, 39.2806, 1.03", "148.851, 33.0026, 39.1484, 0.37", "150.138, 33.6926, 39.0592, 0.59", "151.78, 34.5501, 38.9808, 0.59", "153.664, 35.5839, 38.8754, 0.44", "154.609, 36.1473, 38.8069, 1.18", "155.317, 36.6147, 38.7222, 1.4", "157.184, 37.9813, 38.3953, 0.29", "157.906, 38.5779, 38.2635, 0.59", "159.049, 39.6204, 38.0553, 1.25", "160.289, 40.8067, 37.815, 0.44", "161.167, 41.6417, 37.6516, 0.88", "162.095, 42.5068, 37.4817, 1.4", "163.005, 43.3377, 37.3222, 1.4", "164.559, 44.7246, 37.0915, 0.52", "165.337, 45.3891, 37.01, 0.37", "166.345, 46.2097, 36.9391, 0.66", "167.254, 46.9073, 36.8968, 1.03", "167.845, 47.3537, 36.875, 1.4", "168.705, 48.026, 36.8463, 0.66", "169.807, 48.9251, 36.8559, 0.44", "170.872, 49.8014, 36.9107, 0.59", "172.595, 51.2337, 37.0641, 0.44", "173.203, 51.7567, 37.1278, 0.59", "174.459, 52.872, 37.2782, 0.52", "175.582, 53.8882, 37.3975, 0.44", "176.164, 54.4444, 37.4736, 0.96", "176.66, 54.9295, 37.5643, 1.18", "177.385, 55.6218, 37.7462, 0.59", "178.044, 56.202, 37.9083, 0.37", "179.195, 57.1211, 38.1522, 0.96", "180.633, 58.1651, 38.3564, 0.88", "181.934, 59.0523, 38.5022, 0.52", "183.3, 59.9337, 38.6306, 0.29", "184.286, 60.5346, 38.7077, 0.29", "185.334, 61.1478, 38.7445, 0.74", "186.597, 61.8572, 38.7471, 0.52", "187.501, 62.3357, 38.6874, 0.74", "188.26, 62.7137, 38.6139, 1.25", "189.068, 63.0711, 38.5399, 1.25", "190.736, 63.7149, 38.4526, 0.59", "191.552, 63.9728, 38.4316, 0.88", "192.584, 64.21, 38.4297, 1.18", "193.773, 64.3459, 38.4517, 0.88", "195.144, 64.3389, 38.5165, 0.29", "195.834, 64.244, 38.5908, 0.37", "196.545, 64.0909, 38.7442, 0.44", "197.373, 63.9107, 38.9942, 0.22", "198.31, 63.721, 39.2738, 0.29", "198.817, 63.6409, 39.4033, 1.03", "200.19, 63.5229, 39.6285, 1.62", "202.1, 63.4716, 39.8368, 0.74", "203.518, 63.4764, 39.9179, 0.52", "205.253, 63.4975, 39.8579, 0.88", "206.303, 63.5023, 39.6717, 1.18", "207.702, 63.4888, 39.3482, 1.18", "209.001, 63.4297, 39.0327, 0.29", "210.027, 63.3175, 38.8323, 0.29", "211.472, 63.0795, 38.787, 0.96", "212.983, 62.7664, 39.1252, 1.18", "214.91, 62.3761, 39.7828, 0.44", "216.439, 62.15, 40.3009, 1.03", "217.748, 62.0544, 40.6999, 0.37", "218.892, 62.0798, 41.0667, 1.33", "220.694, 62.3275, 41.6237, 0.22", "221.957, 62.6253, 41.9473, 1.55", "224.198, 63.3887, 42.2376, 0.29", "224.783, 63.6223, 42.2745, 0.88", "225.807, 64.0518, 42.307, 1.4", "227.522, 64.7894, 42.4021, 0.44", "228.285, 65.0904, 42.4926, 0.44", "229.397, 65.4565, 42.7219, 0.96", "230.582, 65.7702, 43.0564, 0.44", "231.611, 66.0077, 43.3412, 0.44", "232.755, 66.2228, 43.7075, 0.44", "233.849, 66.3971, 44.1648, 0.44", "235.082, 66.5892, 44.7973, 0.37", "236.0, 66.7195, 45.3387, 1.18", "236.613, 66.7795, 45.7357, 1.18", "238.463, 66.8291, 46.9662, 0.37", "239.623, 66.7879, 47.6677, 0.74", "240.763, 66.7037, 48.2547, 0.96", "241.663, 66.5898, 48.6202, 0.29", "242.773, 66.4503, 48.8996, 0.22", "243.649, 66.3626, 48.9996, 0.88", "245.721, 66.2341, 49.0299, 0.22", "247.237, 66.2011, 49.0578, 0.81", "247.748, 66.2185, 49.0928, 1.11", "249.307, 66.4416, 49.3463, 0.29", "249.994, 66.6284, 49.5353, 0.44", "251.408, 67.1276, 50.1728, 0.29", "252.446, 67.5335, 50.8649, 0.59", "253.084, 67.7793, 51.3772, 0.22", "253.642, 67.9515, 51.842, 0.22", "254.151, 68.0476, 52.2762, 0.74", "255.512, 68.2386, 53.3964, 0.37", "256.426, 68.3237, 54.0731, 1.33", "257.229, 68.3567, 54.653, 1.77", "258.647, 68.3285, 55.7226, 0.29", "259.461, 68.2526, 56.3493, 1.18" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "39.8313, 12.196, 15.5914, 0.74", "40.3949, 12.5725, 16.9188, 0.74", "41.1775, 12.9154, 18.7967, 0.74", "41.7794, 13.0479, 20.4437, 0.74", "42.2899, 13.0879, 22.2129, 0.74", "42.5456, 13.0489, 23.5297, 0.74", "42.7287, 12.9708, 25.0702, 1.03", "42.799, 12.8151, 26.9541, 1.18", "42.7313, 12.587, 29.1111, 0.74", "42.5884, 12.3966, 30.7606, 0.74", "42.3163, 12.1554, 32.7985, 0.52", "42.1223, 12.0013, 34.0431, 0.52", "41.8819, 11.8019, 35.6649, 0.52", "41.7358, 11.6196, 36.8788, 0.52", "41.66, 11.4174, 37.818, 0.52", "41.5609, 10.701, 39.9314, 0.52", "41.5031, 9.88506, 41.5052, 1.03", "41.4085, 8.71726, 42.9693, 1.03", "41.2858, 7.58308, 43.9223, 0.66", "41.1322, 6.31557, 44.6526, 0.96", "40.9322, 4.66242, 45.3269, 1.25", "40.6959, 2.68211, 45.862, 0.66", "40.5508, 1.31497, 46.1483, 0.37", "40.4319, 0.305762, 46.3167, 0.52", "40.2499, -0.844073, 46.5136, 0.44", "39.9279, -2.29071, 46.8601, 0.88", "39.718, -2.94569, 47.1056, 0.88", "38.981, -4.61568, 47.9777, 0.44", "38.5597, -5.39409, 48.4266, 0.22", "38.0105, -6.38537, 48.9789, 0.22", "37.3905, -7.55581, 49.5981, 0.44", "37.0409, -8.26195, 49.9606, 1.33", "36.5801, -9.23357, 50.4978, 1.11", "36.1585, -10.0795, 51.0176, 0.81", "35.5177, -11.3708, 51.9134, 0.37", "34.9359, -12.5715, 52.8027, 0.29", "34.3492, -13.7551, 53.6771, 0.88", "33.781, -14.8349, 54.489, 0.88", "33.0648, -16.0964, 55.4176, 1.11", "32.2156, -17.4883, 56.3943, 0.37", "31.7897, -18.1481, 56.8083, 0.37", "31.0617, -19.3161, 57.3391, 0.29", "30.5662, -20.1897, 57.5623, 1.03", "30.0313, -21.2726, 57.6268, 0.22", "29.7813, -21.925, 57.5643, 0.37", "29.5587, -22.6386, 57.4225, 1.18", "29.3191, -23.6081, 57.2068, 1.92", "29.1363, -24.7834, 56.9595, 0.37", "29.0817, -25.9098, 56.7577, 0.15", "29.1358, -27.2599, 56.5696, 0.22", "29.2793, -28.8393, 56.5179, 0.22", "29.3813, -29.9479, 56.5573, 0.22", "29.4696, -30.9801, 56.6399, 1.18", "29.5341, -32.2718, 56.7876, 1.99", "29.5112, -33.3716, 56.9475, 1.25", "29.2268, -36.1857, 57.3684, 0.37", "28.9433, -37.9402, 57.6599, 0.22", "28.8139, -38.4916, 57.7544, 0.66", "28.4621, -39.634, 57.9396, 1.03", "27.9835, -40.9199, 58.1379, 0.29", "27.5583, -41.9345, 58.2856, 0.29", "27.1128, -42.9416, 58.4027, 1.18", "26.783, -43.7847, 58.4867, 1.18", "26.2159, -45.4574, 58.6199, 0.29", "25.9345, -46.4358, 58.6688, 0.29", "25.6389, -47.6022, 58.6878, 0.81", "25.3859, -48.7113, 58.6652, 0.29", "25.1012, -50.0045, 58.5578, 0.29", "24.9412, -50.7296, 58.4517, 0.29", "24.7041, -51.7037, 58.2332, 0.29", "24.4082, -52.7131, 57.938, 0.29", "24.0415, -53.8383, 57.5827, 0.59", "23.6278, -55.0556, 57.2117, 1.33", "23.1569, -56.4911, 56.8885, 1.4", "22.844, -57.5669, 56.684, 1.4", "22.2933, -59.8806, 56.402, 0.59", "21.9733, -61.7431, 56.3081, 0.52", "21.8045, -63.4354, 56.3701, 0.81", "21.75, -65.6296, 56.6311, 0.29", "21.7919, -66.5137, 56.7915, 0.81", "21.925, -67.9864, 57.1082, 1.11", "22.053, -69.1439, 57.3446, 1.25", "22.261, -71.3445, 57.6919, 0.37", "22.3467, -72.5894, 57.8059, 0.59", "22.4012, -73.8083, 57.8161, 1.33", "22.4244, -75.2344, 57.7648, 0.96", "22.3988, -76.8371, 57.5934, 0.37", "22.3684, -77.5619, 57.4907, 0.37", "22.2731, -78.8862, 57.2733, 0.59", "22.0667, -80.7607, 56.939, 0.37", "21.8842, -82.0668, 56.6894, 0.37", "21.687, -83.4426, 56.3961, 0.81", "21.4947, -84.7467, 56.0815, 1.11", "21.2429, -86.2933, 55.6156, 0.66", "20.9254, -87.984, 54.98, 0.37", "20.738, -88.7984, 54.6203, 0.52", "20.3902, -90.1362, 53.9451, 0.81", "20.0389, -91.3827, 53.2483, 0.81", "19.7014, -92.4614, 52.5946, 1.11", "19.3581, -93.4722, 51.967, 1.47", "18.8724, -94.8108, 51.2114, 1.4", "18.2308, -96.5358, 50.3162, 0.29", "18.0375, -97.0391, 50.0692, 0.29", "17.7513, -97.7725, 49.7026, 0.66", "17.3426, -98.7831, 49.1661, 1.03", "16.6995, -100.212, 48.3677, 0.37", "16.1389, -101.315, 47.714, 0.37", "15.5924, -102.188, 47.1658, 0.66", "14.9363, -103.082, 46.5669, 1.33", "14.3203, -103.8, 46.0636, 1.33", "13.2795, -104.852, 45.318, 0.37", "12.5681, -105.569, 44.9005, 0.37", "11.784, -106.425, 44.5685, 0.37", "11.4205, -106.857, 44.463, 0.81", "10.9636, -107.456, 44.3824, 1.47", "10.352, -108.337, 44.3042, 1.47", "9.17206, -110.103, 44.19, 0.29", "8.54044, -111.028, 44.1232, 0.37", "7.60033, -112.386, 44.0035, 0.29", "7.18733, -113.013, 43.9278, 0.81", "6.80272, -113.623, 43.8406, 1.18", "6.08341, -114.78, 43.65, 0.44", "5.41132, -115.868, 43.4152, 0.37", "4.84323, -116.889, 43.1709, 1.25", "3.99542, -118.678, 42.73, 0.29", "3.7235, -119.298, 42.5823, 0.74", "3.41699, -120.041, 42.4308, 1.11", "2.89, -121.379, 42.1857, 0.29", "2.48337, -122.308, 42.0573, 0.88", "2.05706, -123.163, 41.957, 0.37", "1.50369, -124.182, 41.8522, 0.22", "1.09053, -124.985, 41.8034, 0.66", "0.688605, -125.857, 41.784, 1.33", "-0.0867287, -127.854, 41.8163, 0.96", "-0.408148, -128.919, 41.8508, 0.96", "-0.700851, -130.475, 41.9562, 0.52", "-0.816324, -131.923, 42.094, 0.66", "-0.819722, -133.13, 42.2543, 0.29", "-0.745055, -134.188, 42.4272, 0.44", "-0.606425, -135.19, 42.6165, 0.44", "-0.339927, -137.147, 43.0133, 0.44", "-0.270074, -137.97, 43.1842, 0.59", "-0.315321, -139.257, 43.4343, 0.29", "-0.484722, -140.257, 43.6396, 0.29", "-0.778524, -141.285, 43.8549, 0.22", "-1.06895, -142.05, 44.026, 0.22", "-1.49005, -142.99, 44.2491, 0.88", "-2.1474, -144.337, 44.6132, 0.29", "-2.71125, -145.348, 44.904, 0.22", "-3.2229, -146.174, 45.2026, 0.74", "-3.87822, -147.189, 45.6457, 0.22", "-4.27796, -147.822, 45.9698, 0.88", "-4.71589, -148.548, 46.3637, 0.88", "-5.29161, -149.508, 46.9421, 0.29", "-5.89376, -150.462, 47.5402, 0.29", "-6.33571, -151.173, 47.9835, 0.15", "-6.9094, -152.096, 48.5486, 0.81", "-7.57927, -153.158, 49.1572, 0.37", "-8.33658, -154.296, 49.7721, 0.29", "-8.96065, -155.176, 50.2153, 0.96", "-9.72878, -156.195, 50.662, 0.29", "-10.6301, -157.324, 51.1177, 0.59", "-11.4546, -158.251, 51.4643, 0.22", "-12.2341, -159.016, 51.6619, 0.52", "-12.7221, -159.46, 51.7083, 0.22", "-13.3, -159.942, 51.7066, 0.22", "-13.691, -160.242, 51.6729, 0.22", "-14.5496, -160.884, 51.547, 0.88", "-15.8669, -161.818, 51.3612, 0.22", "-16.6046, -162.272, 51.2761, 0.22", "-17.5418, -162.734, 51.2198, 0.74", "-18.3781, -163.051, 51.2017, 1.03", "-19.3261, -163.335, 51.2208, 1.25", "-20.9988, -163.768, 51.3363, 0.44", "-22.9275, -164.225, 51.5558, 0.22", "-24.1925, -164.529, 51.643, 0.22", "-25.1194, -164.786, 51.6692, 0.74", "-26.1671, -165.199, 51.6427, 0.15", "-26.8949, -165.604, 51.5265, 0.15", "-27.4945, -166.111, 51.2519, 0.44", "-28.4408, -167.286, 50.4018, 0.22", "-28.9328, -168.048, 49.7259, 0.96", "-29.4524, -169.031, 48.6976, 0.22", "-29.8244, -169.845, 47.7089, 0.15", "-30.2077, -170.719, 46.5474, 0.15", "-30.4872, -171.383, 45.5866, 0.22", "-30.7754, -172.098, 44.4628, 0.22", "-31.0195, -172.753, 43.2538, 0.22", "-31.1533, -173.175, 42.3138, 0.22" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-74.4753, -54.7338, -10.1652, 0.29", "-76.1701, -55.5274, -9.95995, 0.29", "-76.96, -55.9703, -9.70224, 0.29", "-77.3312, -56.2085, -9.55136, 0.88", "-77.6363, -56.4215, -9.42334, 0.88", "-78.2116, -56.888, -9.17834, 0.74", "-79.1457, -57.7312, -8.77717, 0.37", "-80.4386, -59.2614, -8.13155, 0.37", "-80.7482, -59.7016, -7.93657, 0.74", "-81.3419, -60.657, -7.46842, 0.81", "-82.0667, -61.8754, -6.79191, 0.59", "-82.4525, -62.5378, -6.38233, 0.81", "-82.9504, -63.455, -5.71856, 0.29", "-83.4384, -64.3943, -4.91869, 0.37", "-83.824, -65.1424, -3.94234, 0.59", "-83.9965, -65.5481, -3.03622, 0.59", "-84.0484, -65.7131, -2.46517, 0.66", "-84.0756, -66.0216, -1.17921, 0.66", "-84.0288, -66.2209, -0.385128, 0.66", "-83.7803, -66.5875, 0.856903, 0.66", "-83.087, -67.3024, 2.87976, 0.66", "-82.5376, -67.7881, 4.05806, 0.96", "-82.0266, -68.2033, 4.96958, 1.11", "-81.2804, -68.775, 6.10926, 0.59", "-80.2411, -69.5279, 7.49492, 0.22", "-79.6382, -69.9427, 8.16168, 0.52", "-79.0059, -70.3971, 8.75077, 0.66", "-78.1712, -71.1191, 9.45334, 0.29", "-77.6096, -71.7641, 9.90102, 0.88", "-77.4179, -72.1412, 10.0596, 1.55", "-77.1496, -73.2154, 10.2666, 0.59", "-76.9274, -74.6887, 10.3601, 0.22", "-76.7817, -76.005, 10.3299, 0.22", "-76.7196, -76.6242, 10.2767, 0.74", "-76.5947, -77.558, 10.2026, 1.55", "-76.5076, -78.0029, 10.1879, 1.55", "-76.2829, -78.7914, 10.2061, 0.74", "-75.8484, -79.8689, 10.332, 0.22", "-75.6003, -80.3741, 10.4232, 0.88", "-75.0742, -81.3373, 10.6148, 1.62", "-74.5293, -82.2252, 10.7928, 0.96", "-73.7776, -83.3392, 11.027, 0.44", "-72.8975, -84.5239, 11.286, 0.52", "-71.949, -85.674, 11.5366, 0.22", "-71.7373, -85.9167, 11.5931, 0.22", "-71.4406, -86.2624, 11.6683, 0.22", "-71.1603, -86.5965, 11.7386, 0.22", "-70.9397, -86.8726, 11.7738, 0.44", "-70.3069, -87.708, 11.7511, 0.88", "-69.4837, -88.8365, 11.5542, 0.22", "-68.9073, -89.6537, 11.3075, 0.29", "-68.3522, -90.4743, 10.9717, 0.29", "-67.8381, -91.2846, 10.5778, 0.29", "-67.2848, -92.1936, 10.0917, 0.29", "-66.7516, -93.0998, 9.57372, 0.29", "-66.2745, -93.8801, 9.11193, 0.59", "-65.8315, -94.5877, 8.73615, 0.81", "-65.23, -95.5587, 8.30291, 1.4", "-64.6795, -96.4652, 8.00847, 0.59", "-64.2142, -97.2586, 7.8337, 0.29", "-63.8335, -97.9365, 7.77019, 0.44", "-63.4452, -98.6314, 7.76525, 0.44", "-62.8524, -99.6417, 7.76966, 0.37", "-62.4151, -100.356, 7.7709, 1.33", "-61.9983, -101.035, 7.76242, 1.84", "-61.2295, -102.388, 7.73048, 0.29", "-60.8503, -103.126, 7.70788, 0.59", "-60.1427, -104.603, 7.63441, 0.22", "-59.9175, -105.122, 7.57539, 0.74", "-59.676, -105.717, 7.44289, 1.11", "-59.1601, -107.117, 7.04065, 0.22", "-58.9646, -107.661, 6.85707, 0.15", "-58.6791, -108.481, 6.56344, 0.88", "-58.2522, -109.713, 6.12438, 0.37", "-57.8631, -110.826, 5.69613, 0.74", "-57.3924, -112.123, 5.15071, 0.15", "-57.1064, -112.829, 4.81925, 0.15", "-56.83, -113.484, 4.51092, 0.74", "-56.5713, -114.068, 4.26474, 0.88" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-74.4753, -54.7338, -10.1652, 0.29", "-74.3252, -55.9295, -10.7129, 0.29", "-74.298, -56.4767, -10.9889, 0.74", "-74.3303, -57.0886, -11.2973, 0.88", "-74.4909, -58.1332, -11.7843, 0.52", "-74.7891, -59.103, -12.1678, 0.52", "-75.2569, -60.2625, -12.5103, 0.74", "-75.6599, -60.9871, -12.6373, 0.88", "-76.1525, -61.7663, -12.695, 0.96", "-76.6888, -62.6265, -12.7223, 0.96", "-77.5409, -64.0782, -12.7417, 0.74", "-78.0548, -65.0464, -12.7472, 0.74", "-78.5703, -66.1774, -12.7645, 0.81", "-78.8706, -66.9754, -12.8204, 0.81", "-79.3282, -68.4442, -12.9918, 0.52", "-79.5695, -69.4008, -13.1402, 0.88", "-79.7928, -70.5191, -13.3115, 0.66", "-79.9541, -71.4062, -13.4387, 0.96", "-80.1366, -72.4348, -13.5623, 1.18", "-80.3607, -73.7046, -13.7015, 0.59", "-80.5244, -74.7797, -13.8258, 0.52", "-80.6086, -75.9043, -14.0034, 0.96", "-80.5692, -76.9724, -14.2703, 0.74", "-80.4139, -78.0268, -14.6112, 0.59", "-80.0846, -79.2232, -15.1058, 0.59", "-79.7011, -80.2219, -15.6174, 0.44", "-79.2915, -81.1886, -16.2179, 0.37", "-78.9296, -82.0504, -16.8442, 0.66", "-78.638, -82.8313, -17.5147, 0.88", "-78.4085, -83.6674, -18.3556, 0.44", "-78.3513, -84.3898, -19.3204, 0.66", "-78.4252, -85.0274, -20.4384, 0.66", "-78.5646, -85.5089, -21.4696, 0.81", "-78.8467, -86.2189, -23.1703, 0.52", "-79.0428, -86.6812, -24.3954, 0.52", "-79.3621, -87.4792, -26.7318, 0.52", "-79.4976, -87.9201, -28.2903, 0.52", "-79.5415, -88.2441, -29.6507, 0.52", "-79.5209, -88.621, -31.3222, 0.44", "-79.4369, -88.8952, -32.5326, 0.44", "-79.2941, -89.1693, -33.7357, 0.66", "-79.0022, -89.5548, -35.4055, 0.81", "-78.8988, -89.6321, -35.9476, 0.52" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-91.9066, -33.8246, -20.9339, 0.29", "-92.7832, -32.3425, -20.9339, 0.29", "-93.2453, -31.561, -20.9339, 0.22", "-93.7357, -30.7319, -20.9339, 0.22", "-94.2473, -29.8669, -20.9339, 0.22", "-99.4378, -21.4586, -22.4704, 0.22", "-104.283, -12.7525, -23.3232, 0.22", "-109.22, -4.20042, -24.9013, 0.22", "-113.997, 4.01113, -28.0235, 0.22", "-117.708, 12.1177, -32.5525, 0.22", "-119.506, 21.4069, -35.7893, 0.22", "-120.717, 30.8209, -38.9377, 0.22", "-120.818, 40.7617, -40.0191, 0.22", "-119.296, 50.6451, -40.0579, 0.22", "-117.461, 60.3511, -38.4995, 0.22", "-114.54, 69.8258, -37.1963, 0.22", "-110.852, 79.1027, -36.619, 0.22", "-107.204, 88.208, -34.6719, 0.22", "-103.198, 97.3314, -33.8269, 0.22", "-98.9447, 106.356, -34.5136, 0.22", "-94.35, 115.212, -33.8373, 0.22", "-90.4591, 124.39, -33.0476, 0.22", "-87.5482, 133.949, -32.6404, 0.22", "-83.7623, 143.168, -31.8211, 0.22", "-79.4026, 152.142, -31.1409, 0.22", "-75.63, 161.339, -30.0553, 0.22", "-72.6315, 170.877, -30.269, 0.22", "-68.9433, 180.111, -31.331, 0.22", "-66.7133, 189.84, -30.7383, 0.22", "-65.4913, 199.637, -29.1421, 0.22", "-65.6204, 209.456, -27.2585, 0.22", "-66.8855, 219.256, -25.7189, 0.22", "-68.7653, 229.025, -24.7065, 0.22", "-69.8913, 238.96, -24.4956, 0.22", "-72.4567, 248.467, -26.2347, 0.22" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-91.9066, -33.8246, -20.9339, 0.96", "-92.8978, -34.2279, -20.8968, 0.96", "-93.5262, -34.4702, -20.8646, 0.88", "-95.345, -35.0184, -20.6986, 0.52", "-96.7716, -35.3123, -20.4751, 0.37", "-97.549, -35.4029, -20.295, 0.59", "-98.6091, -35.4904, -20.0116, 0.52", "-99.2436, -35.5071, -19.8137, 0.74", "-100.538, -35.5488, -19.3229, 0.44", "-101.644, -35.6154, -18.7951, 0.44", "-102.97, -35.742, -18.1086, 0.29", "-103.848, -35.8209, -17.6538, 0.29", "-104.772, -35.8586, -17.2136, 0.22", "-105.935, -35.8534, -16.7139, 0.29", "-106.573, -35.8431, -16.4762, 0.29", "-107.87, -35.7635, -16.0486, 0.29", "-109.168, -35.5798, -15.6321, 0.29", "-110.425, -35.274, -15.2247, 0.22", "-111.574, -34.8763, -14.8674, 0.22", "-112.279, -34.5676, -14.6748, 0.29", "-112.63, -34.4008, -14.5871, 0.29", "-122.41, -35.3184, -12.7112, 0.29", "-131.828, -36.9585, -9.77724, 0.29", "-140.898, -38.1509, -5.73802, 0.29", "-149.963, -41.0127, -2.63399, 0.29" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-88.3221, 34.3473, 7.17618, 0.59", "-88.52, 34.8994, 6.28686, 0.59", "-88.7231, 35.4229, 5.36178, 0.44", "-88.9852, 36.142, 4.12945, 0.29", "-89.0747, 36.7565, 3.22204, 0.29", "-89.0392, 37.0833, 2.80384, 0.29", "-88.9851, 37.2679, 2.56935, 0.29", "-88.85, 37.5629, 2.15686, 0.29", "-88.6125, 37.9591, 1.56833, 0.29", "-88.0595, 38.7931, 0.349854, 0.29", "-87.613, 39.4204, -0.594457, 0.22", "-87.135, 40.0741, -1.62733, 0.59", "-86.5257, 41.0039, -3.12829, 1.03", "-86.1898, 41.5812, -4.14946, 1.03", "-85.8924, 42.1864, -5.35865, 0.29", "-85.6914, 42.7795, -6.66468, 0.44", "-85.6054, 43.228, -7.6255, 0.88", "-85.5691, 43.8778, -8.80109, 0.29", "-85.6273, 44.4665, -9.68592, 0.29", "-85.7998, 44.948, -10.3591, 0.66", "-86.0729, 45.3589, -10.8919, 0.88", "-86.5463, 45.865, -11.4704, 0.59", "-87.4574, 46.6843, -12.2702, 0.44", "-88.0896, 47.1696, -12.6619, 0.29", "-89.2991, 47.9735, -13.213, 0.22", "-89.8164, 48.2373, -13.3944, 0.22", "-90.7516, 48.5751, -13.6524, 0.59", "-91.7893, 48.8083, -13.8899, 0.29", "-93.3123, 48.9749, -14.1657, 0.22", "-94.2532, 49.018, -14.3194, 0.22", "-95.3227, 49.0217, -14.4837, 0.44", "-96.3441, 48.9604, -14.6591, 0.44", "-97.4281, 48.819, -14.8686, 0.74", "-98.4025, 48.6148, -15.0895, 0.44", "-99.3503, 48.3415, -15.343, 0.37", "-100.389, 47.9868, -15.6554, 0.96", "-101.77, 47.4368, -16.1113, 0.22", "-102.723, 46.9962, -16.461, 0.74", "-103.418, 46.6461, -16.7211, 0.22", "-104.086, 46.3252, -16.9356, 0.22", "-104.425, 46.1787, -17.007, 0.22", "-104.804, 46.0358, -17.0759, 0.22", "-105.558, 45.8365, -17.201, 0.22", "-106.452, 45.6838, -17.3647, 0.44", "-107.679, 45.5208, -17.6226, 0.74", "-108.885, 45.3559, -17.9242, 0.29", "-109.903, 45.1523, -18.2339, 0.44", "-111.057, 44.8146, -18.6586, 0.37", "-111.974, 44.4536, -19.051, 0.81", "-112.684, 44.1143, -19.406, 0.66", "-113.419, 43.7263, -19.8055, 1.03", "-114.599, 43.0891, -20.4675, 0.29", "-115.585, 42.5918, -20.9871, 0.52", "-117.014, 41.9462, -21.704, 0.37", "-117.813, 41.6641, -22.059, 0.37", "-119.005, 41.4004, -22.5045, 0.29", "-119.855, 41.3208, -22.766, 0.29", "-120.923, 41.3573, -23.0416, 0.52", "-121.442, 41.4252, -23.1478, 0.52", "-122.008, 41.5473, -23.2481, 0.22", "-122.656, 41.7339, -23.3733, 0.59", "-123.713, 42.1358, -23.6094, 0.29", "-124.063, 42.3028, -23.7026, 0.29", "-125.002, 42.8309, -24.0643, 0.22", "-125.665, 43.226, -24.3976, 0.37", "-126.342, 43.6551, -24.7927, 0.52", "-126.724, 43.9262, -25.0457, 0.29", "-127.217, 44.3498, -25.4225, 0.44", "-127.994, 45.0795, -26.0931, 0.22", "-128.54, 45.6665, -26.6497, 0.15", "-128.977, 46.1151, -27.0782, 0.29", "-137.108, 49.5962, -31.7447, 0.29", "-144.901, 53.6917, -36.4876, 0.29" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-88.3221, 34.3473, 7.17618, 1.55", "-89.5784, 34.592, 6.99543, 1.55", "-90.7209, 34.872, 6.89001, 0.81", "-91.9271, 35.2627, 6.78691, 0.37", "-93.241, 35.7518, 6.6707, 0.59", "-94.0674, 36.0733, 6.57361, 0.59", "-94.9347, 36.4021, 6.43742, 0.59", "-95.8886, 36.7958, 6.21286, 0.29", "-96.7933, 37.1852, 5.91061, 0.22", "-97.068, 37.2938, 5.7773, 0.22", "-97.7709, 37.5152, 5.26832, 0.22", "-98.5977, 37.7119, 4.56076, 0.44", "-99.3204, 37.8786, 3.92671, 1.25", "-99.9407, 38.0333, 3.40427, 1.4", "-101.061, 38.3454, 2.55742, 0.66", "-101.873, 38.6376, 2.01314, 0.88", "-102.832, 39.0841, 1.48372, 1.47", "-104.09, 39.792, 1.00611, 0.37", "-104.919, 40.3214, 0.829047, 0.29", "-105.427, 40.6786, 0.765367, 0.88", "-106.047, 41.1582, 0.720401, 0.88", "-106.911, 41.8641, 0.653687, 0.44", "-108.253, 43.0384, 0.511366, 0.44", "-109.359, 44.0502, 0.346723, 0.52", "-110.226, 44.8863, 0.201842, 0.22", "-110.749, 45.4274, 0.10569, 0.22", "-111.368, 46.1481, -0.0220912, 0.22", "-112.014, 47.0372, -0.169153, 0.44", "-112.425, 47.7164, -0.233307, 0.22", "-112.752, 48.2713, -0.243692, 0.74", "-113.148, 48.9337, -0.209849, 1.33", "-113.654, 49.7404, -0.165945, 1.03", "-114.354, 50.8214, -0.117133, 0.37", "-115.215, 52.0361, -0.160349, 0.74", "-116.159, 53.2115, -0.281463, 0.22", "-116.492, 53.5724, -0.33391, 0.52", "-117.357, 54.3667, -0.473357, 1.03", "-117.907, 54.7765, -0.563179, 1.03", "-119.28, 55.5742, -0.840371, 0.22", "-120.435, 56.0797, -1.11083, 0.22", "-121.348, 56.344, -1.29434, 0.37", "-122.108, 56.4597, -1.41873, 0.44", "-123.001, 56.4619, -1.48647, 0.22", "-124.127, 56.318, -1.47726, 0.22", "-124.574, 56.2148, -1.44082, 0.37", "-125.51, 55.9485, -1.37719, 0.88", "-126.397, 55.6779, -1.34046, 0.96", "-127.832, 55.2386, -1.2513, 1.33", "-129.481, 54.772, -1.09851, 0.44", "-130.289, 54.5602, -0.988929, 0.22", "-131.249, 54.307, -0.863675, 0.81", "-132.147, 54.0575, -0.764933, 1.25" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "36.6136, -83.6133, -11.1341, 1.7", "36.4376, -84.4924, -11.7624, 1.7", "36.2102, -85.6597, -12.4589, 0.81", "35.9916, -87.0734, -13.0855, 0.81", "35.8815, -88.1663, -13.4641, 0.88", "35.8051, -89.735, -13.8714, 0.59", "35.7921, -90.5595, -13.9936, 0.88", "35.8252, -91.4612, -14.0093, 0.96", "35.963, -92.9051, -13.8186, 0.74", "36.0687, -93.7801, -13.593, 0.88", "36.244, -95.3024, -13.0522, 0.74", "36.4165, -96.8479, -12.4294, 0.81", "36.496, -97.6763, -12.0988, 0.81", "36.5705, -98.4889, -11.7603, 0.52", "36.6713, -99.5988, -11.3299, 0.52", "36.8014, -100.677, -10.9147, 1.03", "37.0046, -101.693, -10.5121, 1.55", "37.3926, -102.932, -10.0142, 1.4", "37.8631, -103.973, -9.53195, 1.25", "38.5499, -105.198, -8.93566, 0.88", "39.3269, -106.436, -8.37622, 0.52", "40.0441, -107.531, -7.92019, 0.66", "40.7581, -108.648, -7.53498, 0.96", "41.5358, -109.921, -7.22703, 0.96", "42.2503, -111.137, -7.12163, 0.59", "42.8437, -112.172, -7.16557, 1.11", "43.4083, -113.293, -7.39379, 0.59", "44.0721, -114.816, -7.8785, 0.88", "44.4604, -115.765, -8.2614, 1.18", "44.8558, -116.708, -8.69035, 1.11", "45.1241, -117.297, -8.95693, 1.33", "45.6691, -118.442, -9.3836, 0.96", "46.0976, -119.342, -9.64402, 1.25", "46.6564, -120.487, -9.87164, 1.33", "47.0422, -121.287, -10.0401, 1.11", "47.5194, -122.272, -10.2951, 0.44", "48.0329, -123.227, -10.6107, 1.33", "48.5044, -123.896, -10.8965, 1.18", "49.5188, -124.982, -11.5238, 0.88", "50.6764, -125.929, -12.215, 1.11", "51.5855, -126.524, -12.7456, 1.55", "52.3632, -126.949, -13.185, 1.92", "53.907, -127.69, -14.0545, 0.88", "55.0527, -128.158, -14.6408, 0.66", "56.0675, -128.503, -15.0958, 0.52", "56.6961, -128.693, -15.3523, 0.52", "57.6516, -128.966, -15.7764, 0.81", "58.5158, -129.19, -16.2367, 0.66", "59.7376, -129.49, -16.9916, 0.96", "60.6212, -129.695, -17.5551, 0.96", "62.0136, -129.998, -18.3712, 0.81", "63.3142, -130.304, -19.04, 1.03", "64.8732, -130.733, -19.704, 0.81", "66.1273, -131.16, -20.0992, 0.59", "67.0957, -131.559, -20.3052, 0.74", "68.7528, -132.368, -20.456, 1.11", "69.754, -132.977, -20.4284, 0.96", "70.5867, -133.598, -20.3208, 1.33", "71.2898, -134.227, -20.1645, 1.11", "72.1409, -135.08, -19.8957, 0.66", "72.9679, -135.962, -19.5676, 0.66", "73.8521, -137.025, -19.0672, 0.74", "74.4947, -137.943, -18.533, 0.96", "74.8208, -138.58, -18.1321, 1.11", "75.2464, -139.743, -17.4428, 1.11", "75.4977, -140.753, -16.9256, 0.88", "75.7081, -141.868, -16.4779, 0.74", "75.8972, -142.768, -16.2655, 0.96", "76.3613, -144.312, -16.2542, 0.44", "76.9763, -145.755, -16.4876, 0.66", "77.548, -146.803, -16.7792, 1.11", "77.9818, -147.417, -16.9466, 1.25", "78.9504, -148.499, -17.1592, 0.66", "79.8872, -149.406, -17.2143, 0.96", "80.6568, -150.123, -17.171, 0.44", "81.5655, -151.005, -17.0059, 0.44", "82.9291, -152.402, -16.6832, 0.59", "83.9564, -153.538, -16.4292, 0.44", "84.832, -154.6, -16.2206, 0.96", "85.9065, -155.911, -16.0648, 0.37", "86.661, -156.777, -16.0389, 0.96", "87.2302, -157.371, -16.1049, 0.96", "87.8638, -157.994, -16.2892, 0.59", "88.712, -158.783, -16.6216, 1.03", "90.2066, -160.102, -17.2851, 0.52", "91.2962, -161.054, -17.7883, 0.66", "92.4669, -162.122, -18.354, 0.44", "93.32, -162.993, -18.7515, 0.66", "93.8435, -163.633, -18.9904, 1.11", "94.3372, -164.344, -19.2017, 1.11", "94.9251, -165.348, -19.4359, 0.81", "95.4122, -166.174, -19.6007, 0.81", "96.2033, -167.305, -19.7896, 0.59", "96.9131, -168.242, -19.9311, 0.66", "97.8709, -169.386, -20.1268, 0.52", "98.3872, -169.914, -20.2275, 0.52", "99.4211, -170.723, -20.401, 0.74", "100.432, -171.288, -20.5212, 1.11" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "36.6136, -83.6133, -11.1341, 1.03", "36.7449, -84.3521, -10.4133, 1.03", "37.0651, -85.4557, -9.30661, 1.03", "37.6839, -86.9639, -7.86647, 1.25", "38.2205, -87.9988, -6.93929, 1.25", "38.8975, -89.0832, -6.028, 1.47", "39.7664, -90.3157, -5.03449, 1.4", "40.3835, -91.0584, -4.47902, 1.25", "41.4356, -92.2362, -3.70617, 1.03", "42.2208, -93.0897, -3.19085, 1.03", "42.9862, -93.9335, -2.6763, 0.96", "43.8381, -94.939, -2.04257, 1.11", "44.4547, -95.7807, -1.51873, 0.74", "45.0273, -96.6767, -0.928607, 1.03", "45.612, -97.6988, -0.198502, 1.47", "46.2178, -98.8659, 0.653012, 1.92", "46.772, -99.9473, 1.44144, 1.47", "47.4476, -101.204, 2.35788, 1.84", "48.3273, -102.776, 3.48877, 1.03", "48.8124, -103.641, 4.07151, 1.11", "49.3719, -104.623, 4.68817, 1.4", "50.1822, -105.921, 5.45865, 1.18", "50.9648, -106.976, 6.04629, 1.03", "51.9153, -108.036, 6.57881, 0.81", "52.713, -108.817, 6.92726, 0.66", "53.6864, -109.701, 7.23556, 0.66", "54.699, -110.563, 7.42611, 1.18", "55.8412, -111.522, 7.45503, 1.33", "57.1018, -112.572, 7.28943, 0.52", "57.8202, -113.192, 7.09607, 0.96", "58.7927, -114.1, 6.70042, 1.62", "59.6238, -114.955, 6.23952, 1.47", "60.5422, -115.948, 5.61648, 1.03", "61.1432, -116.608, 5.1422, 1.55", "62.3162, -117.865, 4.12494, 0.74", "63.2359, -118.817, 3.32671, 1.25", "63.7588, -119.357, 2.88858, 1.33", "64.7569, -120.382, 2.10258, 0.66", "65.4688, -121.073, 1.58855, 0.96", "66.3486, -121.899, 0.972856, 1.62", "66.8624, -122.361, 0.61808, 1.99", "68.3114, -123.584, -0.310173, 0.66", "69.1483, -124.257, -0.82197, 1.11", "69.8167, -124.797, -1.27497, 1.33", "70.741, -125.575, -1.99929, 0.59", "71.2975, -126.096, -2.52699, 1.11", "72.1332, -126.99, -3.52658, 0.44", "72.5888, -127.553, -4.23964, 0.59", "73.399, -128.74, -5.83216, 0.81", "73.8199, -129.466, -6.82899, 0.59", "74.1818, -130.151, -7.75301, 0.59", "74.5224, -130.87, -8.6682, 0.59", "75.0218, -132.076, -10.0625, 1.03", "75.2953, -132.742, -10.7479, 0.88", "75.6952, -133.743, -11.5776, 1.03", "76.0769, -134.815, -12.2954, 0.52", "76.3802, -135.886, -12.8216, 0.52", "76.6092, -136.996, -13.1856, 0.74", "76.6942, -137.582, -13.3181, 0.88", "76.8748, -139.046, -13.6035, 0.66", "76.9908, -139.913, -13.7798, 1.18", "77.1954, -141.061, -14.08, 0.66", "77.4939, -142.189, -14.4593, 0.66", "77.8677, -143.188, -14.8721, 0.88", "78.3127, -144.123, -15.309, 0.74", "79.0417, -145.373, -15.922, 0.59", "79.7016, -146.38, -16.3614, 0.59", "80.2493, -147.189, -16.6398, 0.52", "80.7631, -147.971, -16.8289, 0.44", "81.1606, -148.65, -16.9516, 0.59", "81.6621, -149.695, -17.1339, 1.03", "82.189, -151.16, -17.4599, 0.74", "82.5826, -152.509, -17.9079, 0.52", "82.7918, -153.186, -18.2642, 0.37", "83.1926, -154.212, -19.1456, 0.52", "83.6334, -154.957, -20.1272, 0.52", "84.1406, -155.536, -21.2197, 0.66", "84.7382, -156.029, -22.4519, 0.74", "85.3787, -156.475, -23.7236, 0.52", "86.1277, -156.981, -25.178, 0.88", "86.778, -157.452, -26.405, 0.59", "87.1272, -157.755, -27.1086, 0.52", "87.2992, -157.957, -27.5383, 0.52", "87.6286, -158.579, -28.7199, 0.66", "87.8441, -159.113, -29.6676, 0.52", "88.098, -159.592, -30.5505, 0.81", "88.5053, -160.072, -31.5669, 0.66", "89.037, -160.399, -32.4822, 0.81", "89.7659, -160.682, -33.5, 0.59", "90.7909, -160.951, -34.7185, 0.88", "91.8811, -161.231, -35.8354, 0.52", "92.8916, -161.501, -36.7663, 0.88", "94.1639, -161.863, -37.8894, 0.44", "95.1299, -162.139, -38.739, 0.74", "95.7688, -162.3, -39.3381, 0.52", "97.1087, -162.639, -40.7536, 0.44", "97.7008, -162.82, -41.5026, 0.37", "98.428, -163.082, -42.6259, 0.37", "98.8362, -163.294, -43.3806, 0.29", "99.4165, -163.664, -44.4941, 0.29", "99.7128, -163.908, -45.0484, 0.29", "100.048, -164.251, -45.6198, 0.29", "100.483, -164.868, -46.1459, 0.29", "101.286, -166.132, -46.8025, 0.29", "101.837, -166.945, -47.0971, 0.22", "102.408, -167.798, -47.3308, 0.22", "102.89, -168.49, -47.4851, 0.22", "103.652, -169.572, -47.6698, 0.22", "104.017, -170.074, -47.7352, 0.22", "104.735, -170.902, -47.8558, 0.22", "110.556, -177.921, -51.9606, 0.22", "115.247, -186.33, -54.6597, 0.22" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "38.0789, -36.9099, -42.661, 0.29", "36.6087, -36.7643, -41.9622, 0.29", "35.1292, -36.6153, -41.1752, 0.22", "34.0153, -36.5224, -40.4615, 0.29", "32.9898, -36.4639, -39.6135, 0.29", "32.5305, -36.4569, -39.1137, 0.29", "32.2745, -36.4654, -38.7238, 0.29", "31.9452, -36.4808, -37.988, 0.29", "31.7676, -36.5476, -37.1602, 0.29", "31.6524, -36.6481, -36.1181, 0.29", "31.6703, -36.7785, -35.1991, 0.52", "31.7634, -36.9838, -34.0191, 0.52", "25.8574, -37.1353, -25.9509, 0.52", "18.6513, -37.7762, -19.0472, 0.52" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "38.0789, -36.9099, -42.661, 0.81", "37.8607, -38.6506, -43.7196, 0.81", "37.702, -39.6445, -44.325, 0.81", "37.5191, -40.8203, -44.9875, 0.81", "37.3437, -41.9811, -45.5979, 0.59", "37.1657, -43.0836, -46.1196, 0.59", "37.0283, -44.026, -46.5274, 1.18", "36.9597, -44.5599, -46.7127, 1.4", "36.8826, -45.6272, -47.0189, 0.22", "36.8849, -46.0707, -47.1012, 0.22", "36.9638, -47.2211, -47.0931, 0.37", "37.0835, -48.4172, -46.7407, 0.22", "37.1757, -49.2093, -46.2763, 0.22", "37.2315, -50.3663, -45.3337, 0.29", "37.1616, -51.1958, -44.4433, 0.29", "37.076, -51.8442, -43.5976, 0.29", "36.9829, -52.2582, -42.9028, 0.29", "36.8715, -52.5167, -42.3777, 0.29", "36.5865, -52.9534, -41.4703, 0.22", "36.2653, -53.3285, -40.8794, 0.22", "35.731, -63.3112, -41.1262, 0.22", "34.9403, -73.2678, -40.6359, 0.22", "32.602, -82.9568, -39.8266, 0.22", "30.2848, -92.6803, -39.5355, 0.22" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "67.1679, 102.738, -43.5893, 0.15", "71.2924, 109.635, -49.5418, 0.15", "75.8063, 116.832, -54.8163, 0.15", "78.6911, 123.792, -61.392, 0.15" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "67.1679, 102.738, -43.5893, 0.15", "70.79, 109.955, -49.4887, 0.15", "74.8076, 117.922, -54.0028, 0.15", "77.8621, 126.254, -58.6131, 0.15" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "49.7954, 76.8755, 34.0559, 1.18", "50.6599, 76.3658, 34.6956, 1.18", "52.0372, 75.5536, 35.7149, 0.66" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "49.7954, 76.8755, 34.0559, 0.66", "49.5732, 77.9791, 34.2528, 0.66", "49.5289, 79.1339, 34.4147, 0.29", "49.6004, 79.7576, 34.4812, 0.29", "49.7073, 80.257, 34.5229, 0.29", "49.8339, 80.78, 34.5814, 0.66", "49.9811, 81.3944, 34.6573, 0.96", "50.2647, 82.4934, 34.7851, 0.29", "50.5261, 83.5009, 34.8842, 0.52", "50.7223, 84.3344, 34.949, 0.22", "50.8995, 85.4034, 35.0085, 0.66", "50.9473, 85.876, 35.0271, 0.74", "50.9964, 87.2863, 35.0602, 0.52", "50.9855, 88.0402, 35.0897, 0.81", "50.9616, 89.2492, 35.1824, 1.18", "50.9833, 90.8658, 35.3448, 0.37", "51.0194, 91.3737, 35.403, 0.96", "51.1243, 92.157, 35.5458, 1.55", "51.3665, 93.3208, 35.846, 0.66", "51.6465, 94.4711, 36.2489, 0.22", "51.7878, 95.0005, 36.5035, 0.22", "51.9074, 95.4437, 36.7652, 0.96", "52.1373, 96.3902, 37.3857, 1.4", "52.3009, 97.0951, 37.9149, 0.74", "52.5644, 98.3347, 38.8526, 0.52", "52.7526, 99.31, 39.5402, 0.37", "52.9016, 100.099, 40.0624, 0.37", "52.9982, 100.553, 40.3637, 0.66", "53.2253, 101.513, 40.9377, 0.88", "53.6262, 103.201, 41.8321, 0.29", "53.8918, 104.299, 42.2913, 0.96", "54.0045, 104.791, 42.4482, 1.47", "54.2471, 105.941, 42.7413, 1.7", "54.5378, 107.461, 43.0529, 0.44", "54.6545, 108.204, 43.1811, 0.44", "54.7743, 109.143, 43.3475, 0.29", "54.8326, 110.039, 43.5323, 0.96", "54.8396, 110.715, 43.665, 1.25", "54.7981, 111.647, 43.8274, 1.25", "54.652, 113.118, 44.1134, 0.22", "54.5509, 113.76, 44.2435, 0.96", "54.2005, 115.249, 44.5766, 0.15", "53.918, 116.296, 44.8308, 0.22", "53.6997, 117.107, 45.0258, 0.22", "53.5285, 117.728, 45.1694, 1.03", "53.2298, 118.806, 45.3967, 1.92", "52.8074, 120.386, 45.7281, 1.47", "52.337, 122.247, 46.1169, 0.44", "51.9811, 123.671, 46.4271, 0.22", "51.754, 124.626, 46.6382, 0.22", "51.4461, 125.988, 46.938, 0.29", "51.163, 127.269, 47.2041, 0.22", "50.9294, 128.202, 47.3683, 1.25" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-78.8988, -89.6321, -35.9476, 0.22", "-79.596, -88.4486, -35.1531, 0.22", "-80.2166, -87.3952, -34.446, 0.22", "-80.8368, -86.3426, -33.7393, 0.22", "-81.3563, -85.4608, -33.1474, 0.15", "-81.7997, -84.7083, -32.6422, 0.15", "-81.9474, -84.4576, -32.4739, 0.15", "-86.1032, -76.8904, -27.4274, 0.15", "-90.1946, -69.5756, -21.9727, 0.15", "-94.7217, -62.219, -16.9342, 0.15", "-99.4855, -54.4359, -12.8442, 0.15", "-103.583, -46.4542, -8.42809, 0.15", "-109.245, -39.1832, -4.54453, 0.15", "-115.157, -31.634, -1.70545, 0.15", "-120.769, -23.6436, 0.450886, 0.15" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-78.8988, -89.6321, -35.9476, 0.29", "-79.9031, -88.8746, -36.3121, 0.29", "-80.8173, -88.185, -36.6439, 0.29", "-81.8513, -87.4051, -37.0192, 0.15", "-89.3573, -81.1471, -39.14, 0.15", "-97.1694, -74.9121, -39.4482, 0.15", "-105.813, -70.3852, -41.639, 0.15", "-115.339, -67.3431, -41.7274, 0.15", "-124.111, -62.6532, -42.7537, 0.15", "-132.565, -57.3857, -43.6393, 0.15" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-144.901, 53.6917, -36.4876, 0.15", "-151.933, 57.6898, -42.3668, 0.15", "-158.786, 60.3643, -49.141, 0.15", "-165.836, 64.248, -55.0752, 0.15" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-144.901, 53.6917, -36.4876, 0.15", "-152.782, 55.5898, -42.3435, 0.15", "-160.31, 57.9704, -48.4797, 0.15", "-167.42, 60.7457, -54.9416, 0.15" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-132.147, 54.0575, -0.764933, 0.22", "-132.733, 53.2518, -1.61229, 0.22", "-133.139, 52.9277, -2.14311, 0.22", "-133.47, 52.7305, -2.52093, 0.22", "-133.895, 52.5007, -2.9909, 0.22", "-134.274, 52.2891, -3.4013, 0.74", "-135.159, 51.7383, -4.38555, 0.29", "-135.835, 51.3314, -5.12953, 0.29", "-136.402, 51.0071, -5.73853, 0.22", "-136.996, 50.6647, -6.33404, 0.59", "-137.579, 50.3022, -6.91357, 0.66", "-138.105, 49.9045, -7.4909, 0.22", "-138.671, 49.3265, -8.22778, 0.22", "-138.861, 49.074, -8.52565, 0.22", "-139.076, 48.6918, -8.97899, 0.22", "-139.294, 48.1336, -9.62168, 0.22", "-139.407, 47.4183, -10.4629, 0.44", "-139.359, 46.8209, -11.1406, 0.88", "-139.217, 46.3351, -11.6515, 0.96", "-138.952, 45.6743, -12.2797, 0.52", "-138.725, 45.2189, -12.6703, 0.15", "-138.244, 44.405, -13.2678, 0.44", "-137.941, 43.9573, -13.5789, 0.44", "-137.745, 43.7003, -13.7655, 0.22", "-137.496, 43.4021, -14.0231, 0.22", "-137.3, 43.1788, -14.2472, 0.22", "-136.873, 42.6378, -14.8593, 0.29", "-136.532, 42.1187, -15.4769, 0.29", "-136.247, 41.6019, -16.0824, 0.29", "-135.974, 40.9816, -16.784, 0.66", "-135.725, 40.2476, -17.6141, 0.81", "-135.517, 39.4503, -18.4839, 0.59", "-135.384, 38.8086, -19.1148, 0.59", "-135.249, 38.1158, -19.7302, 0.81", "-135.072, 37.0833, -20.5724, 0.29", "-134.945, 36.1909, -21.2221, 0.29", "-134.881, 35.524, -21.6441, 0.66", "-134.819, 34.5703, -22.1417, 0.29", "-134.761, 33.351, -22.656, 0.22", "-134.76, 32.8459, -22.8243, 0.22", "-134.835, 32.0809, -22.9881, 0.22", "-135.06, 31.0246, -23.0892, 0.29", "-135.423, 29.9445, -23.082, 0.22", "-135.736, 29.2007, -22.9909, 0.22", "-136.021, 28.5364, -22.8527, 0.22", "-136.312, 27.7409, -22.6616, 0.22", "-136.63, 26.8241, -22.4039, 0.29", "-136.888, 26.0719, -22.1464, 0.22", "-137.155, 25.2955, -21.8251, 0.22", "-137.438, 24.3959, -21.4048, 0.37", "-137.52, 23.8797, -21.1537, 0.22", "-139.839, 15.1119, -25.3668, 0.22" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-132.147, 54.0575, -0.764933, 0.15", "-133.504, 53.8168, -0.630012, 0.15", "-134.072, 53.706, -0.567232, 0.15", "-134.841, 53.5353, -0.481184, 0.15", "-135.92, 53.2957, -0.36038, 0.22", "-136.579, 53.1493, -0.286535, 0.15", "-137.545, 52.9346, -0.178287, 0.15", "-138.047, 52.7946, -0.118512, 0.37", "-138.609, 52.632, -0.0404338, 0.37" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "100.432, -171.288, -20.5212, 0.29", "101.085, -170.523, -20.8337, 0.29", "101.81, -169.674, -21.1807, 0.29", "102.703, -168.63, -21.6074, 0.15", "103.376, -167.842, -21.9294, 0.15", "103.86, -167.276, -22.1608, 0.22", "104.186, -166.893, -22.317, 0.22", "109.836, -158.699, -23.2798, 0.22", "116.803, -151.55, -23.8796, 0.22", "122.93, -143.945, -26.0309, 0.22", "130.353, -137.757, -28.5979, 0.22", "138.078, -131.531, -29.8463, 0.22", "145.326, -124.641, -29.8484, 0.22", "153.178, -118.473, -29.3011, 0.22", "160.866, -112.533, -26.9319, 0.22", "167.671, -105.629, -24.4744, 0.22", "174.842, -99.7416, -20.7447, 0.22" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "100.432, -171.288, -20.5212, 0.81", "101.395, -171.742, -20.5236, 0.81", "102.371, -172.24, -20.592, 0.81", "103.665, -172.952, -20.7202, 0.74", "104.821, -173.658, -20.8491, 0.52", "105.919, -174.462, -21.0148, 1.03", "106.818, -175.246, -21.2134, 0.74", "107.537, -176.074, -21.503, 0.59", "108.216, -177.119, -21.9081, 0.44", "108.632, -177.964, -22.2477, 0.52", "109.237, -179.503, -22.8071, 0.44", "109.685, -180.774, -23.2092, 0.88", "110.203, -182.286, -23.639, 0.66", "110.504, -183.15, -23.8583, 0.66", "110.896, -184.197, -24.129, 0.81", "111.25, -185.005, -24.3479, 0.66", "111.734, -185.904, -24.614, 0.96", "112.297, -186.839, -24.9512, 0.44", "113.038, -187.973, -25.4874, 0.66", "113.534, -188.695, -25.9065, 0.74", "114.16, -189.564, -26.5049, 0.52", "114.868, -190.501, -27.2403, 0.74", "115.549, -191.382, -27.9736, 0.88", "116.378, -192.396, -28.8539, 0.44", "116.753, -192.814, -29.2238, 0.66", "117.45, -193.503, -29.8523, 0.52", "118.244, -194.163, -30.4972, 0.59", "118.852, -194.615, -30.9321, 0.66", "119.656, -195.165, -31.4399, 0.66", "120.311, -195.63, -31.8592, 0.74", "121.257, -196.382, -32.4928, 0.44", "122.11, -197.199, -33.1033, 0.37", "122.847, -198.156, -33.7227, 0.37", "123.004, -198.896, -34.0644, 0.74", "122.523, -199.872, -34.2837, 0.81", "121.955, -200.674, -34.3637, 0.59", "120.925, -201.97, -34.3619, 0.22", "119.916, -203.201, -34.2764, 0.22", "119.023, -204.333, -34.1326, 0.22", "118.085, -205.688, -33.8726, 0.22", "117.508, -206.786, -33.564, 0.22", "117.125, -207.747, -33.2576, 0.22", "116.908, -208.93, -32.8243, 0.22", "116.96, -210.128, -32.3382, 0.22", "117.155, -210.857, -32.0093, 0.44", "117.536, -211.602, -31.6478, 0.59", "122.319, -220.311, -32.7819, 0.59", "125.894, -229.649, -32.837, 0.59", "129.62, -238.919, -32.3762, 0.59" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "30.2848, -92.6803, -39.5355, 0.15", "28.1862, -102.457, -39.6418, 0.15", "25.6675, -112.049, -40.9332, 0.15", "21.4848, -121.129, -41.1184, 0.15", "18.4182, -130.63, -41.685, 0.15", "15.4311, -140.126, -42.6486, 0.15" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "30.2848, -92.6803, -39.5355, 0.15", "29.8628, -102.571, -38.1233, 0.15", "29.8797, -112.391, -36.2345, 0.15", "28.6558, -122.305, -35.7889, 0.15", "29.0747, -132.292, -35.4656, 0.15", "30.6474, -142.163, -35.7424, 0.15", "33.4488, -151.71, -34.7399, 0.15", "34.3295, -161.464, -32.7125, 0.15" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "78.6911, 123.792, -61.392, 0.15", "83.2449, 130.288, -67.4794, 0.15", "87.2744, 136.126, -74.5284, 0.15", "90.742, 142.325, -81.5677, 0.15" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "78.6911, 123.792, -61.392, 0.15", "81.5305, 131.503, -67.0906, 0.15" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "77.8621, 126.254, -58.6131, 0.15", "76.0341, 135.467, -62.0428, 0.15" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "77.8621, 126.254, -58.6131, 0.15", "85.5152, 130.338, -63.5882, 0.15" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "52.0372, 75.5536, 35.7149, 0.29", "51.9894, 74.5653, 36.5646, 0.29", "52.0006, 73.8387, 37.1768, 0.52", "51.9953, 73.0435, 37.8103, 0.22", "51.9825, 72.409, 38.2876, 0.22", "51.9645, 71.7933, 38.7339, 0.44", "51.9379, 70.8062, 39.4442, 0.88", "51.9248, 70.262, 39.8451, 0.88", "51.8382, 68.9133, 40.8335, 0.22", "51.705, 68.0436, 41.4591, 1.11", "51.4771, 67.119, 42.1182, 0.88", "51.0992, 65.9579, 42.9236, 0.22", "50.9514, 65.5587, 43.2156, 0.22", "50.6857, 64.8388, 43.8093, 0.29", "50.3464, 63.9342, 44.6888, 0.22", "50.1429, 63.4496, 45.2414, 0.74", "49.7899, 62.7485, 46.1735, 1.11", "48.98, 61.4201, 48.1284, 0.22", "48.5504, 60.787, 49.1871, 0.44", "47.9662, 59.9764, 50.7457, 0.96", "47.5356, 59.4581, 51.8917, 1.55", "47.0314, 58.8954, 53.2487, 0.74", "46.72, 58.5418, 54.1703, 0.29", "46.2384, 57.9698, 55.8163, 0.29", "45.8477, 57.4515, 57.4917, 0.59", "45.5717, 57.0507, 59.1739, 0.59", "45.4134, 56.8417, 60.3719, 0.59", "45.2497, 56.6977, 61.7473, 0.81", "45.0807, 56.6785, 63.1359, 0.81", "44.8629, 56.8094, 64.7524, 0.96", "44.5724, 57.1415, 66.9549, 0.74", "44.4095, 57.4356, 68.4198, 0.96", "44.3106, 57.7018, 69.6362, 0.96", "44.2314, 58.0834, 71.4217, 0.66", "44.2861, 58.3324, 72.6851, 0.66", "44.4647, 58.5263, 73.7091, 0.66", "44.6404, 58.6549, 74.2941, 0.66", "45.1393, 59.0374, 75.7431, 1.11", "45.3742, 59.308, 76.5712, 1.11", "45.5785, 59.6746, 77.5391, 0.29", "45.736, 60.1095, 78.5203, 0.29", "45.8737, 60.5742, 79.5157, 0.59", "46.0732, 61.1752, 80.8096, 0.88", "46.4675, 62.1297, 82.9754, 0.22", "46.6972, 62.5742, 84.0871, 0.22", "46.9575, 62.9859, 85.1603, 1.18", "47.3482, 63.5219, 86.4953, 1.55", "47.7421, 64.026, 87.7041, 0.81", "48.3576, 64.8218, 89.5903, 0.37", "49.0885, 65.7784, 92.0308, 0.74", "49.457, 66.2572, 93.3748, 0.44", "49.7424, 66.6017, 94.5051, 0.44", "49.9358, 66.7883, 95.2911, 0.44", "50.169, 66.9492, 96.3205, 0.74", "50.4735, 67.0555, 97.721, 0.74", "50.9145, 67.0729, 100.078, 0.44", "51.1935, 67.0475, 101.757, 0.74", "51.4566, 67.0402, 103.822, 0.52", "51.5166, 67.1009, 105.007, 0.52", "51.4747, 67.1558, 105.615, 0.52", "51.0862, 67.3025, 107.063, 0.52", "50.7544, 67.3763, 107.784, 0.52", "49.7682, 67.5843, 109.451, 1.11", "48.3372, 67.9137, 111.461, 0.44", "47.2387, 68.1783, 112.867, 1.18", "45.8959, 68.5135, 114.531, 0.22", "45.2094, 68.6791, 115.337, 0.22", "44.5858, 68.8071, 116.044, 0.81", "43.5143, 69.017, 117.225, 1.47", "42.6821, 69.1998, 118.128, 0.66", "41.5147, 69.5281, 119.422, 0.22", "40.8195, 69.7491, 120.225, 0.59", "39.0534, 70.2306, 122.325, 0.07", "38.3115, 70.3794, 123.251, 0.74" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "52.0372, 75.5536, 35.7149, 0.29", "52.7567, 74.8895, 35.8891, 0.29", "53.6472, 74.2191, 36.0778, 0.81", "54.1769, 73.9168, 36.1927, 0.52", "54.8771, 73.5683, 36.3469, 0.81", "56.3041, 72.9203, 36.7, 0.37", "57.1679, 72.5466, 36.9702, 0.22", "57.8482, 72.2867, 37.2544, 0.22", "59.1296, 71.8449, 37.8836, 0.22", "59.6376, 71.6924, 38.1296, 0.88", "60.3492, 71.5234, 38.4788, 0.74", "61.5433, 71.2978, 39.0886, 0.52", "62.7128, 71.0973, 39.6284, 1.25", "63.4572, 70.9889, 39.913, 1.62", "65.1468, 70.8714, 40.3359, 0.22", "65.9283, 70.8971, 40.4308, 0.15", "66.5569, 70.9875, 40.4326, 0.37", "67.8444, 71.3115, 40.331, 0.22", "68.4774, 71.5284, 40.2611, 0.29", "69.4058, 71.902, 40.1852, 0.59", "70.525, 72.3713, 40.142, 0.96", "71.8552, 72.8841, 40.1601, 0.15", "72.5373, 73.1475, 40.2417, 0.15", "73.223, 73.4165, 40.4344, 0.15", "74.0394, 73.714, 40.7857, 0.59", "74.5996, 73.9062, 41.1117, 0.59", "75.7935, 74.2924, 41.9207, 0.22", "76.9499, 74.6144, 42.7727, 0.44", "78.0401, 74.8963, 43.6015, 0.96", "78.894, 75.1188, 44.2552, 1.25", "80.5552, 75.5313, 45.4676, 0.22", "81.4455, 75.7449, 46.0748, 0.22", "82.2638, 75.9361, 46.5562, 0.22", "82.9147, 76.0646, 46.8637, 0.22", "83.8788, 76.2136, 47.2436, 0.74", "85.0202, 76.3331, 47.6607, 0.22", "85.6175, 76.3529, 47.9291, 0.22", "86.2874, 76.3469, 48.4283, 0.22", "86.9802, 76.3346, 49.135, 0.22", "87.2946, 76.3209, 49.5342, 0.88", "87.7972, 76.2987, 50.2813, 0.96", "89.1312, 76.2913, 52.4772, 0.29", "90.4601, 76.3002, 54.7331, 0.52", "90.8708, 76.3062, 55.4463, 0.96", "91.3058, 76.3198, 56.2004, 0.66", "91.925, 76.3435, 57.2324, 0.22", "92.2192, 76.355, 57.6921, 0.22", "92.5752, 76.3557, 58.1828, 0.22", "92.7688, 76.3381, 58.4525, 0.66", "93.4221, 76.2576, 59.4177, 0.96", "94.8988, 76.0497, 61.6342, 0.22", "95.6874, 75.922, 62.7914, 0.81", "96.3032, 75.8079, 63.6368, 1.11", "97.6378, 75.5527, 65.3054, 0.15", "98.5567, 75.4014, 66.3075, 0.22", "99.1434, 75.3229, 66.8459, 0.81", "99.8235, 75.2441, 67.3411, 0.88", "100.748, 75.1908, 67.921, 0.37", "102.266, 75.2264, 68.7615, 0.22", "103.8, 75.3863, 69.549, 0.22", "104.414, 75.4988, 69.8801, 0.88", "105.085, 75.6992, 70.3072, 1.33", "106.508, 76.3612, 71.4775, 0.15", "107.076, 76.7535, 72.1119, 0.44", "107.816, 77.3937, 73.1701, 0.22", "108.211, 77.7691, 73.8538, 0.37", "108.781, 78.3402, 75.1299, 0.37", "109.233, 78.8502, 76.5795, 0.74", "109.67, 79.4035, 78.6378, 0.44", "109.878, 79.6559, 79.8236, 0.44", "109.951, 79.7402, 80.3079, 0.44", "110.212, 79.9953, 82.1406, 0.66", "110.408, 80.1346, 83.4913, 0.66", "110.601, 80.2315, 85.0207, 0.52", "110.665, 80.3185, 86.5197, 1.03" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "50.9294, 128.202, 47.3683, 0.07", "49.7365, 128.667, 47.4688, 0.07", "48.8114, 129.074, 47.4582, 0.29", "47.8446, 129.586, 47.3863, 0.07", "47.3829, 129.831, 47.352, 0.37", "45.9221, 130.604, 47.2434, 0.07", "44.9897, 131.098, 47.1741, 0.07", "43.9575, 131.706, 47.0365, 0.59", "42.8624, 132.432, 46.7912, 0.07" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "50.9294, 128.202, 47.3683, 0.29", "51.1969, 129.456, 47.7318, 0.29", "51.5454, 130.68, 48.0824, 0.44", "51.8593, 131.773, 48.2845, 0.22", "52.0825, 132.604, 48.351, 0.29", "52.3365, 133.604, 48.368, 0.66", "52.6427, 134.872, 48.3324, 1.11", "52.9369, 136.047, 48.2199, 0.22", "53.3636, 137.678, 47.9623, 0.22", "53.6788, 138.902, 47.7785, 0.88", "53.9833, 140.165, 47.6424, 0.29", "54.1151, 140.708, 47.6241, 0.74", "54.3412, 141.6, 47.6969, 1.33", "54.5518, 142.239, 47.882, 0.88", "55.2559, 143.965, 48.8577, 0.22", "55.5482, 144.616, 49.3794, 0.29", "55.8029, 145.158, 49.9106, 0.29", "56.092, 145.77, 50.5933, 0.81", "56.3177, 146.29, 51.247, 1.33", "56.6063, 147.201, 52.4333, 0.15", "56.7479, 147.948, 53.3424, 0.15", "56.8042, 148.435, 53.8909, 0.74", "56.8545, 149.241, 54.6952, 1.18", "56.8656, 150.643, 55.8677, 0.22", "56.8143, 151.995, 56.7816, 0.59", "56.7946, 153.281, 57.4244, 0.29", "56.8026, 153.973, 57.6875, 1.25", "56.8302, 154.782, 57.9255, 1.84", "56.9415, 156.417, 58.3023, 0.37", "57.0641, 157.629, 58.5558, 0.96", "57.285, 159.225, 58.8554, 0.22", "57.4678, 160.361, 59.0901, 0.52", "57.5698, 160.943, 59.2302, 0.52", "57.8475, 162.383, 59.652, 0.15", "58.1153, 163.512, 60.0962, 0.44" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-132.565, -57.3857, -43.6393, 0.15", "-140.964, -52.2361, -45.3514, 0.15", "-148.49, -45.9313, -47.2505, 0.15" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-132.565, -57.3857, -43.6393, 0.15", "-141.183, -52.3446, -44.1924, 0.15", "-148.447, -45.4776, -43.8905, 0.15", "-154.937, -37.8752, -44.1637, 0.15", "-161.644, -30.479, -44.7222, 0.15", "-167.779, -22.7687, -46.4285, 0.15", "-173.109, -14.3983, -47.6662, 0.15" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_52", "dend_41", "dend_30", "dend_11", "dend_0", "dend_62", "dend_53", "dend_45", "dend_42", "dend_38", "dend_31", "dend_15", "dend_12", "dend_4", "dend_1", "dend_64", "dend_63", "dend_55", "dend_54", "dend_51", "dend_46", "dend_44", "dend_43", "dend_40", "dend_39", "dend_37", "dend_32", "dend_23", "dend_16", "dend_14", "dend_13", "dend_10", "dend_5", "dend_3", "dend_2", "dend_59", "dend_56", "dend_48", "dend_47", "dend_36", "dend_33", "dend_27", "dend_24", "dend_20", "dend_17", "dend_9", "dend_6", "dend_61", "dend_60", "dend_58", "dend_57", "dend_50", "dend_49", "dend_35", "dend_34", "dend_29", "dend_28", "dend_26", "dend_25", "dend_22", "dend_21", "dend_19", "dend_18", "dend_8", "dend_7" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_52", "dend_41", "dend_30", "dend_11", "dend_0", "dend_62", "dend_53", "dend_45", "dend_42", "dend_38", "dend_31", "dend_15", "dend_12", "dend_4", "dend_1", "dend_64", "dend_63", "dend_55", "dend_54", "dend_51", "dend_46", "dend_44", "dend_43", "dend_40", "dend_39", "dend_37", "dend_32", "dend_23", "dend_16", "dend_14", "dend_13", "dend_10", "dend_5", "dend_3", "dend_2", "dend_59", "dend_56", "dend_48", "dend_47", "dend_36", "dend_33", "dend_27", "dend_24", "dend_20", "dend_17", "dend_9", "dend_6", "dend_61", "dend_60", "dend_58", "dend_57", "dend_50", "dend_49", "dend_35", "dend_34", "dend_29", "dend_28", "dend_26", "dend_25", "dend_22", "dend_21", "dend_19", "dend_18", "dend_8", "dend_7" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_27", "dend_24" ]
  }, {
    "name" : "ModelViewParmSubset_6",
    "groups" : [ ],
    "sections" : [ "dend_28", "dend_26", "dend_25" ]
  }, {
    "name" : "ModelViewParmSubset_7",
    "groups" : [ ],
    "sections" : [ "dend_61", "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_28", "dend_26", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L5_MC_c135727743_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_52, id: dend_52, parent: soma_0
create dend_52
public dend_52
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_62, id: dend_62, parent: dend_52
create dend_62
public dend_62
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_45, id: dend_45, parent: dend_41
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_38, id: dend_38, parent: dend_30
create dend_38
public dend_38
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_51, id: dend_51, parent: dend_45
create dend_51
public dend_51
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_31
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_23, id: dend_23, parent: dend_15
create dend_23
public dend_23
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_4
create dend_10
public dend_10
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_59, id: dend_59, parent: dend_55
create dend_59
public dend_59
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_36, id: dend_36, parent: dend_32
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_27, id: dend_27, parent: dend_23
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_16
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_52, dend_41, dend_30, dend_11, dend_0, dend_62, dend_53, dend_45, dend_42, dend_38, dend_31, dend_15, dend_12, dend_4, dend_1, dend_64, dend_63, dend_55, dend_54, dend_51, dend_46, dend_44, dend_43, dend_40, dend_39, dend_37, dend_32, dend_23, dend_16, dend_14, dend_13, dend_10, dend_5, dend_3, dend_2, dend_59, dend_56, dend_48, dend_47, dend_36, dend_33, dend_27, dend_24, dend_20, dend_17, dend_9, dend_6, dend_61, dend_60, dend_58, dend_57, dend_50, dend_49, dend_35, dend_34, dend_29, dend_28, dend_26, dend_25, dend_22, dend_21, dend_19, dend_18, dend_8, dend_7]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_52, dend_41, dend_30, dend_11, dend_0, dend_62, dend_53, dend_45, dend_42, dend_38, dend_31, dend_15, dend_12, dend_4, dend_1, dend_64, dend_63, dend_55, dend_54, dend_51, dend_46, dend_44, dend_43, dend_40, dend_39, dend_37, dend_32, dend_23, dend_16, dend_14, dend_13, dend_10, dend_5, dend_3, dend_2, dend_59, dend_56, dend_48, dend_47, dend_36, dend_33, dend_27, dend_24, dend_20, dend_17, dend_9, dend_6, dend_61, dend_60, dend_58, dend_57, dend_50, dend_49, dend_35, dend_34, dend_29, dend_28, dend_26, dend_25, dend_22, dend_21, dend_19, dend_18, dend_8, dend_7]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_27, dend_24]}
objref ModelViewParmSubset_5
// Group: {name=ModelViewParmSubset_6, groups=[], sections=[dend_28, dend_26, dend_25]}
objref ModelViewParmSubset_6
// Group: {name=ModelViewParmSubset_7, groups=[], sections=[dend_61, dend_60]}
objref ModelViewParmSubset_7
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_67
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_28, dend_26, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_52(0), soma_0(0.44999999322079115)
    connect dend_41(0), soma_0(0.44999999322079115)
    connect dend_30(0), soma_0(0.44999999322079115)
    connect dend_11(0), soma_0(0.44999999322079115)
    connect dend_0(0), soma_0(0.44999999322079115)
    connect axon_0(0), soma_0(1.0)
    connect dend_62(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_45(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_38(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_51(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_23(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_10(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_59(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_36(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_27(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -10.7304, -0.873466, 0.0, 2.87054 ) }
    soma_0 { pt3dadd( -9.6745, -0.74567, 0.0, 5.00777 ) }
    soma_0 { pt3dadd( -8.61857, -0.617875, 0.0, 6.72434 ) }
    soma_0 { pt3dadd( -7.56263, -0.490079, 0.0, 8.00365 ) }
    soma_0 { pt3dadd( -6.5067, -0.362283, 0.0, 9.09761 ) }
    soma_0 { pt3dadd( -5.45077, -0.234487, 0.0, 10.1793 ) }
    soma_0 { pt3dadd( -4.39483, -0.106692, 0.0, 11.1366 ) }
    soma_0 { pt3dadd( -3.3389, 0.021104, 0.0, 11.7855 ) }
    soma_0 { pt3dadd( -2.28296, 0.1489, 0.0, 12.3612 ) }
    soma_0 { pt3dadd( -1.22703, 0.276695, 0.0, 12.8218 ) }
    soma_0 { pt3dadd( -0.171095, 0.404491, 0.0, 12.9777 ) }
    soma_0 { pt3dadd( 0.884839, 0.532287, 0.0, 12.7621 ) }
    soma_0 { pt3dadd( 1.94077, 0.660083, 0.0, 12.4756 ) }
    soma_0 { pt3dadd( 2.99671, 0.787878, 0.0, 12.1076 ) }
    soma_0 { pt3dadd( 4.05264, 0.915674, 0.0, 11.5969 ) }
    soma_0 { pt3dadd( 5.10858, 1.04347, 0.0, 10.956 ) }
    soma_0 { pt3dadd( 6.16451, 1.17127, 0.0, 10.0344 ) }
    soma_0 { pt3dadd( 7.22044, 1.29906, 0.0, 8.74098 ) }
    soma_0 { pt3dadd( 8.27638, 1.42686, 0.0, 7.28149 ) }
    soma_0 { pt3dadd( 9.33231, 1.55465, 0.0, 5.39697 ) }
    soma_0 { pt3dadd( 10.3882, 1.68245, 0.0, 3.02868 ) }
    // Section: dend_52, id: dend_52, parent: soma_0 (entry count 21/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -9.48889, 0.163969, 10.77, 1.25 ) }
    dend_52 { pt3dadd( -9.48889, 0.163969, 10.77, 1.25 ) }
    dend_52 { pt3dadd( -10.6339, 0.0332863, 12.4145, 1.18 ) }
    dend_52 { pt3dadd( -11.5894, 0.0353454, 14.0201, 1.33 ) }
    dend_52 { pt3dadd( -12.7218, 0.203593, 16.3429, 1.55 ) }
    dend_52 { pt3dadd( -13.7315, 0.574917, 18.922, 1.77 ) }
    dend_52 { pt3dadd( -14.3934, 1.01261, 21.0075, 1.92 ) }
    dend_52 { pt3dadd( -14.757, 1.53089, 22.7114, 1.92 ) }
    dend_52 { pt3dadd( -14.984, 2.4364, 24.8584, 1.55 ) }
    dend_52 { pt3dadd( -15.0307, 3.38983, 26.762, 1.33 ) }
    dend_52 { pt3dadd( -14.911, 4.42021, 28.4451, 1.4 ) }
    dend_52 { pt3dadd( -14.701, 5.34397, 29.6975, 1.55 ) }
    dend_52 { pt3dadd( -14.39, 6.43395, 30.9883, 1.84 ) }
    dend_52 { pt3dadd( -14.0409, 7.619, 32.2794, 2.29 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 35/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 6.08109, -2.81603, -7.15, 4.06 ) }
    dend_41 { pt3dadd( 6.08109, -2.81603, -7.15, 4.06 ) }
    dend_41 { pt3dadd( 6.04352, -3.81353, -7.39915, 2.43 ) }
    dend_41 { pt3dadd( 5.92708, -5.2472, -7.79818, 2.58 ) }
    dend_41 { pt3dadd( 5.74808, -7.19068, -8.38082, 2.58 ) }
    dend_41 { pt3dadd( 5.62909, -8.48266, -8.76815, 2.8 ) }
    dend_41 { pt3dadd( 5.54368, -9.41003, -9.04617, 3.02 ) }
    dend_41 { pt3dadd( 5.38827, -11.1173, -9.5812, 3.02 ) }
    dend_41 { pt3dadd( 5.22577, -12.9468, -10.2058, 3.32 ) }
    dend_41 { pt3dadd( 5.03245, -14.57, -10.8115, 4.06 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 45/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 10.6111, 1.81397, -10.71, 2.21 ) }
    dend_30 { pt3dadd( 10.6111, 1.81397, -10.71, 2.21 ) }
    dend_30 { pt3dadd( 12.22, 2.23168, -11.2474, 1.55 ) }
    dend_30 { pt3dadd( 13.9571, 2.55178, -11.8882, 1.03 ) }
    dend_30 { pt3dadd( 14.9754, 2.65604, -12.3138, 1.18 ) }
    dend_30 { pt3dadd( 16.412, 2.70578, -13.0072, 1.62 ) }
    dend_30 { pt3dadd( 17.438, 2.68222, -13.5973, 1.99 ) }
    dend_30 { pt3dadd( 18.5271, 2.53823, -14.4026, 1.84 ) }
    dend_30 { pt3dadd( 19.765, 2.17846, -15.5555, 1.11 ) }
    dend_30 { pt3dadd( 20.7199, 1.73521, -16.5824, 1.25 ) }
    dend_30 { pt3dadd( 21.4844, 1.26875, -17.4726, 1.25 ) }
    dend_30 { pt3dadd( 22.4004, 0.579672, -18.5385, 1.47 ) }
    dend_30 { pt3dadd( 23.4324, -0.297644, -19.6364, 1.4 ) }
    dend_30 { pt3dadd( 24.077, -0.889952, -20.2171, 1.25 ) }
    dend_30 { pt3dadd( 25.0132, -1.79033, -20.9015, 1.03 ) }
    dend_30 { pt3dadd( 26.1253, -2.90124, -21.5138, 1.03 ) }
    dend_30 { pt3dadd( 27.1008, -3.91079, -21.9034, 1.33 ) }
    dend_30 { pt3dadd( 28.2326, -5.24177, -22.2197, 1.25 ) }
    dend_30 { pt3dadd( 29.0319, -6.37157, -22.3797, 1.33 ) }
    dend_30 { pt3dadd( 29.7207, -7.55652, -22.5217, 1.62 ) }
    dend_30 { pt3dadd( 30.1899, -8.49177, -22.6451, 1.7 ) }
    dend_30 { pt3dadd( 30.2867, -8.70586, -22.6811, 1.7 ) }
    dend_30 { pt3dadd( 31.0178, -10.3655, -23.1386, 1.18 ) }
    dend_30 { pt3dadd( 31.5223, -11.4187, -23.6177, 1.03 ) }
    dend_30 { pt3dadd( 31.9638, -12.0915, -24.1333, 0.74 ) }
    dend_30 { pt3dadd( 32.5107, -12.6688, -24.8632, 0.96 ) }
    dend_30 { pt3dadd( 33.1953, -13.1706, -25.8297, 1.03 ) }
    dend_30 { pt3dadd( 33.9437, -13.6159, -26.8863, 1.4 ) }
    dend_30 { pt3dadd( 34.6793, -13.9228, -27.9185, 1.55 ) }
    dend_30 { pt3dadd( 35.643, -14.2309, -29.3397, 1.33 ) }
    dend_30 { pt3dadd( 36.4321, -14.4559, -30.5974, 0.96 ) }
    dend_30 { pt3dadd( 37.0505, -14.6129, -31.6422, 0.96 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 77/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 8.9411, 5.27397, -0.18, 2.21 ) }
    dend_11 { pt3dadd( 8.9411, 5.27397, -0.18, 2.21 ) }
    dend_11 { pt3dadd( 10.2207, 6.08473, 0.32814, 1.55 ) }
    dend_11 { pt3dadd( 11.6704, 6.87883, 0.994865, 1.92 ) }
    dend_11 { pt3dadd( 12.9184, 7.48403, 1.62979, 1.84 ) }
    dend_11 { pt3dadd( 14.0451, 7.98511, 2.26783, 1.62 ) }
    dend_11 { pt3dadd( 15.3837, 8.5651, 3.16406, 1.7 ) }
    dend_11 { pt3dadd( 16.6815, 9.06321, 4.11255, 1.55 ) }
    dend_11 { pt3dadd( 17.7658, 9.41039, 4.97645, 1.7 ) }
    dend_11 { pt3dadd( 19.0633, 9.76945, 6.06625, 1.99 ) }
    dend_11 { pt3dadd( 20.2099, 10.0856, 7.0168, 1.47 ) }
    dend_11 { pt3dadd( 22.4234, 10.7501, 8.77964, 1.7 ) }
    dend_11 { pt3dadd( 23.3811, 11.0587, 9.54625, 1.84 ) }
    dend_11 { pt3dadd( 24.6745, 11.484, 10.552, 1.7 ) }
    dend_11 { pt3dadd( 26.0139, 11.9336, 11.5514, 1.47 ) }
    dend_11 { pt3dadd( 27.1458, 12.3174, 12.3319, 1.77 ) }
    dend_11 { pt3dadd( 28.6756, 12.825, 13.2128, 2.73 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 94/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -10.6189, -2.11603, 7.6, 1.99 ) }
    dend_0 { pt3dadd( -10.6189, -2.11603, 7.6, 1.99 ) }
    dend_0 { pt3dadd( -11.6844, -2.33944, 6.38071, 1.84 ) }
    dend_0 { pt3dadd( -12.7819, -2.52218, 5.20671, 1.92 ) }
    dend_0 { pt3dadd( -13.5523, -2.63944, 4.41059, 1.92 ) }
    dend_0 { pt3dadd( -14.6598, -2.81596, 3.32952, 1.77 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( -16.2143, -3.10903, 1.91362, 1.7 ) }
    dend_0 { pt3dadd( -17.9011, -3.45691, 0.490449, 1.47 ) }
    dend_0 { pt3dadd( -19.4282, -3.80288, -0.688909, 1.18 ) }
    dend_0 { pt3dadd( -20.7421, -4.13263, -1.59854, 1.47 ) }
    dend_0 { pt3dadd( -22.228, -4.57786, -2.49562, 1.47 ) }
    dend_0 { pt3dadd( -23.701, -5.08589, -3.2797, 1.33 ) }
    dend_0 { pt3dadd( -24.6726, -5.45467, -3.75953, 1.55 ) }
    dend_0 { pt3dadd( -25.9767, -5.97832, -4.43344, 1.62 ) }
    dend_0 { pt3dadd( -27.2228, -6.46906, -5.07515, 2.58 ) }
    dend_0 { pt3dadd( -29.2257, -7.23325, -6.11166, 1.33 ) }
    dend_0 { pt3dadd( -30.412, -7.693, -6.71688, 1.47 ) }
    dend_0 { pt3dadd( -31.9213, -8.30244, -7.43531, 1.33 ) }
    dend_0 { pt3dadd( -33.7282, -9.10402, -8.13998, 1.62 ) }
    dend_0 { pt3dadd( -34.8922, -9.68826, -8.46308, 1.7 ) }
    dend_0 { pt3dadd( -36.8656, -10.8186, -8.76696, 1.55 ) }
    dend_0 { pt3dadd( -38.7717, -12.0497, -8.76643, 1.11 ) }
    dend_0 { pt3dadd( -39.9487, -12.884, -8.63143, 1.55 ) }
    dend_0 { pt3dadd( -41.6176, -14.1075, -8.23633, 1.4 ) }
    dend_0 { pt3dadd( -43.1102, -15.1575, -7.73168, 1.25 ) }
    dend_0 { pt3dadd( -44.1524, -15.8255, -7.34163, 1.55 ) }
    dend_0 { pt3dadd( -45.1608, -16.3674, -6.92455, 1.99 ) }
    dend_0 { pt3dadd( -46.5516, -16.9562, -6.39235, 1.33 ) }
    dend_0 { pt3dadd( -48.1729, -17.5045, -5.89437, 1.11 ) }
    dend_0 { pt3dadd( -49.6879, -17.9176, -5.54387, 1.4 ) }
    dend_0 { pt3dadd( -50.9551, -18.2268, -5.32964, 1.25 ) }
    dend_0 { pt3dadd( -52.503, -18.622, -5.16471, 1.11 ) }
    dend_0 { pt3dadd( -54.04, -19.0884, -5.09884, 1.33 ) }
    dend_0 { pt3dadd( -54.9864, -19.481, -5.14288, 1.7 ) }
    dend_0 { pt3dadd( -56.6151, -20.4371, -5.52186, 1.33 ) }
    dend_0 { pt3dadd( -57.4626, -21.0784, -5.885, 1.62 ) }
    dend_0 { pt3dadd( -58.272, -21.7877, -6.31528, 1.99 ) }
    dend_0 { pt3dadd( -59.1298, -22.647, -6.89874, 1.92 ) }
    dend_0 { pt3dadd( -60.3462, -24.0221, -7.90946, 1.33 ) }
    dend_0 { pt3dadd( -61.1961, -25.1221, -8.7532, 1.47 ) }
    dend_0 { pt3dadd( -61.7951, -26.0589, -9.55363, 1.99 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 35/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 10.3882, 1.68245, 0.0, 0.710031 ) }
    axon_0 { pt3dadd( 25.2795, 3.4847, 0.0, 0.710031 ) }
    axon_0 { pt3dadd( 40.1709, 5.28695, 0.0, 0.710031 ) }
    // Section: dend_62, id: dend_62, parent: dend_52 (entry count 38/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -14.0409, 7.619, 32.2794, 1.4 ) }
    dend_62 { pt3dadd( -13.5244, 8.64538, 33.567, 1.4 ) }
    dend_62 { pt3dadd( -12.648, 10.1982, 35.2511, 1.4 ) }
    dend_62 { pt3dadd( -11.9673, 11.3061, 36.2894, 1.33 ) }
    dend_62 { pt3dadd( -11.157, 12.5291, 37.3341, 1.11 ) }
    dend_62 { pt3dadd( -10.2447, 13.7132, 38.2855, 0.52 ) }
    dend_62 { pt3dadd( -9.64028, 14.395, 38.8409, 0.37 ) }
    dend_62 { pt3dadd( -8.87624, 15.0932, 39.3196, 0.88 ) }
    dend_62 { pt3dadd( -8.05532, 15.6688, 39.6651, 1.62 ) }
    dend_62 { pt3dadd( -7.56168, 15.8503, 39.8842, 1.62 ) }
    dend_62 { pt3dadd( -6.66549, 15.4021, 41.0133, 0.44 ) }
    dend_62 { pt3dadd( -6.35843, 14.9321, 41.851, 0.44 ) }
    dend_62 { pt3dadd( -6.08222, 14.3111, 42.8955, 0.44 ) }
    dend_62 { pt3dadd( -5.82529, 13.6642, 44.0204, 0.74 ) }
    dend_62 { pt3dadd( -5.45709, 12.7607, 45.6547, 1.11 ) }
    dend_62 { pt3dadd( -5.12199, 12.0933, 47.0416, 1.25 ) }
    dend_62 { pt3dadd( -4.82399, 11.8076, 47.9157, 1.25 ) }
    dend_62 { pt3dadd( -4.26599, 11.7836, 48.6801, 0.44 ) }
    dend_62 { pt3dadd( -3.51676, 11.9712, 49.2297, 0.44 ) }
    dend_62 { pt3dadd( -2.53017, 12.2671, 49.747, 0.59 ) }
    dend_62 { pt3dadd( -1.42912, 12.5867, 50.2057, 0.88 ) }
    dend_62 { pt3dadd( 0.65529, 13.1639, 51.0251, 0.52 ) }
    dend_62 { pt3dadd( 1.55773, 13.388, 51.3961, 0.52 ) }
    dend_62 { pt3dadd( 2.77532, 13.6409, 51.9262, 0.74 ) }
    dend_62 { pt3dadd( 3.98165, 13.8109, 52.4754, 0.88 ) }
    dend_62 { pt3dadd( 5.45462, 13.9255, 53.2212, 0.52 ) }
    dend_62 { pt3dadd( 6.41644, 13.9569, 53.7336, 0.96 ) }
    dend_62 { pt3dadd( 7.48646, 14.0119, 54.3116, 1.62 ) }
    dend_62 { pt3dadd( 8.39701, 14.1205, 54.7912, 1.03 ) }
    dend_62 { pt3dadd( 9.86633, 14.4545, 55.4861, 0.52 ) }
    dend_62 { pt3dadd( 11.0228, 14.845, 56.0009, 1.4 ) }
    dend_62 { pt3dadd( 12.2084, 15.376, 56.4906, 2.21 ) }
    dend_62 { pt3dadd( 13.6604, 16.1564, 57.0652, 0.29 ) }
    dend_62 { pt3dadd( 14.1921, 16.4821, 57.2818, 0.29 ) }
    dend_62 { pt3dadd( 15.4262, 17.3096, 57.8303, 0.29 ) }
    dend_62 { pt3dadd( 16.4106, 18.0295, 58.3286, 0.44 ) }
    dend_62 { pt3dadd( 17.3008, 18.6815, 58.8949, 0.96 ) }
    dend_62 { pt3dadd( 18.382, 19.4003, 59.7726, 1.33 ) }
    dend_62 { pt3dadd( 19.524, 20.0328, 60.8026, 1.77 ) }
    dend_62 { pt3dadd( 20.5962, 20.5349, 61.8286, 1.33 ) }
    dend_62 { pt3dadd( 21.7241, 20.9839, 63.0276, 0.96 ) }
    dend_62 { pt3dadd( 23.2212, 21.4902, 64.7343, 0.59 ) }
    dend_62 { pt3dadd( 24.3885, 21.8149, 66.2677, 0.37 ) }
    dend_62 { pt3dadd( 25.0156, 21.9687, 67.2683, 0.66 ) }
    dend_62 { pt3dadd( 25.3099, 22.0427, 67.8941, 0.66 ) }
    dend_62 { pt3dadd( 25.6257, 22.1532, 68.7108, 0.66 ) }
    dend_62 { pt3dadd( 25.7261, 22.2186, 68.9764, 0.66 ) }
    dend_62 { pt3dadd( 26.1569, 22.6782, 70.1078, 0.66 ) }
    dend_62 { pt3dadd( 26.6526, 23.3768, 71.4672, 0.52 ) }
    dend_62 { pt3dadd( 27.3375, 24.4908, 73.4316, 1.18 ) }
    dend_62 { pt3dadd( 27.6819, 25.1248, 74.3965, 1.47 ) }
    dend_62 { pt3dadd( 28.3009, 26.3961, 76.101, 0.44 ) }
    dend_62 { pt3dadd( 28.5999, 27.101, 76.975, 0.44 ) }
    dend_62 { pt3dadd( 28.8397, 27.8675, 77.8942, 0.44 ) }
    dend_62 { pt3dadd( 28.9672, 28.5218, 78.6859, 0.96 ) }
    dend_62 { pt3dadd( 29.0718, 29.6656, 80.0751, 1.62 ) }
    dend_62 { pt3dadd( 29.0878, 30.6614, 81.2881, 1.77 ) }
    dend_62 { pt3dadd( 29.0704, 31.4929, 82.2488, 1.18 ) }
    dend_62 { pt3dadd( 29.1072, 33.1241, 84.0643, 0.74 ) }
    dend_62 { pt3dadd( 29.2019, 33.9608, 85.0049, 0.74 ) }
    dend_62 { pt3dadd( 29.3994, 34.8351, 86.0572, 0.59 ) }
    dend_62 { pt3dadd( 29.7818, 35.7484, 87.2875, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_62 { pt3dadd( 30.2641, 36.5278, 88.4166, 0.29 ) }
    dend_62 { pt3dadd( 31.0445, 37.5052, 89.8625, 0.81 ) }
    dend_62 { pt3dadd( 31.7236, 38.2569, 90.9494, 1.7 ) }
    dend_62 { pt3dadd( 32.1861, 38.7656, 91.6983, 1.7 ) }
    dend_62 { pt3dadd( 32.8262, 39.5358, 92.8312, 0.44 ) }
    dend_62 { pt3dadd( 33.3998, 40.2978, 93.9278, 0.44 ) }
    dend_62 { pt3dadd( 33.813, 40.9646, 94.7977, 0.44 ) }
    dend_62 { pt3dadd( 34.2122, 41.7622, 95.6397, 1.11 ) }
    dend_62 { pt3dadd( 34.3924, 42.1693, 96.0039, 1.11 ) }
    dend_62 { pt3dadd( 34.8775, 43.4824, 97.0416, 0.29 ) }
    dend_62 { pt3dadd( 35.0874, 44.2039, 97.5513, 0.29 ) }
    dend_62 { pt3dadd( 35.3012, 44.9756, 98.0577, 0.29 ) }
    dend_62 { pt3dadd( 35.4443, 45.5332, 98.4233, 1.18 ) }
    dend_62 { pt3dadd( 35.6942, 46.3143, 98.955, 1.47 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 14/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -14.0409, 7.619, 32.2794, 0.81 ) }
    dend_53 { pt3dadd( -15.4964, 7.76154, 32.4722, 0.81 ) }
    dend_53 { pt3dadd( -16.7098, 7.93467, 32.6416, 0.81 ) }
    dend_53 { pt3dadd( -17.8813, 8.16228, 32.7929, 0.96 ) }
    dend_53 { pt3dadd( -19.2996, 8.46524, 32.9581, 1.25 ) }
    dend_53 { pt3dadd( -20.8611, 8.78779, 33.0947, 1.62 ) }
    dend_53 { pt3dadd( -22.1947, 9.0501, 33.2182, 1.62 ) }
    dend_53 { pt3dadd( -23.3382, 9.29214, 33.335, 1.62 ) }
    dend_53 { pt3dadd( -25.289, 9.75719, 33.5361, 1.18 ) }
    dend_53 { pt3dadd( -26.673, 10.1325, 33.668, 1.4 ) }
    dend_53 { pt3dadd( -28.4764, 10.6594, 33.8688, 1.33 ) }
    dend_53 { pt3dadd( -30.2996, 11.2283, 34.1386, 0.96 ) }
    dend_53 { pt3dadd( -31.5031, 11.6175, 34.3434, 0.96 ) }
    dend_53 { pt3dadd( -32.9626, 12.0943, 34.5977, 1.62 ) }
    dend_53 { pt3dadd( -34.4208, 12.5701, 34.8548, 2.14 ) }
    dend_53 { pt3dadd( -35.7069, 12.9895, 35.0692, 2.14 ) }
    dend_53 { pt3dadd( -37.4676, 13.5981, 35.3733, 0.96 ) }
    dend_53 { pt3dadd( -38.4622, 13.9372, 35.5154, 1.4 ) }
    dend_53 { pt3dadd( -40.0948, 14.4345, 35.7264, 1.92 ) }
    dend_53 { pt3dadd( -41.461, 14.7869, 35.8733, 2.06 ) }
    dend_53 { pt3dadd( -42.7059, 15.0335, 35.9309, 2.06 ) }
    // Section: dend_45, id: dend_45, parent: dend_41 (entry count 35/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 5.03245, -14.57, -10.8115, 2.58 ) }
    dend_45 { pt3dadd( 5.94527, -15.7231, -11.1553, 2.58 ) }
    dend_45 { pt3dadd( 6.95527, -16.9932, -11.5275, 1.4 ) }
    dend_45 { pt3dadd( 8.02477, -18.2767, -11.9125, 1.47 ) }
    dend_45 { pt3dadd( 9.151, -19.6034, -12.3204, 1.47 ) }
    dend_45 { pt3dadd( 10.1558, -20.7754, -12.6734, 1.47 ) }
    dend_45 { pt3dadd( 10.9059, -21.6567, -12.9317, 1.47 ) }
    dend_45 { pt3dadd( 11.7282, -22.6254, -13.2147, 1.7 ) }
    dend_45 { pt3dadd( 13.018, -24.1663, -13.6255, 1.18 ) }
    dend_45 { pt3dadd( 13.6298, -24.951, -13.7994, 1.47 ) }
    dend_45 { pt3dadd( 14.2899, -25.9062, -13.9554, 1.7 ) }
    dend_45 { pt3dadd( 15.1515, -27.3327, -14.0664, 1.7 ) }
    dend_45 { pt3dadd( 15.6275, -28.2094, -14.0715, 1.77 ) }
    dend_45 { pt3dadd( 16.3468, -29.7282, -13.9775, 1.25 ) }
    dend_45 { pt3dadd( 16.8924, -31.0947, -13.7885, 1.55 ) }
    dend_45 { pt3dadd( 17.4347, -32.6009, -13.5169, 1.4 ) }
    dend_45 { pt3dadd( 17.9186, -34.0132, -13.2417, 1.7 ) }
    dend_45 { pt3dadd( 18.3741, -35.3577, -12.9592, 1.7 ) }
    dend_45 { pt3dadd( 18.9311, -36.9821, -12.5954, 1.47 ) }
    dend_45 { pt3dadd( 19.5003, -38.5687, -12.2069, 1.4 ) }
    dend_45 { pt3dadd( 19.94, -39.7315, -11.9188, 1.55 ) }
    dend_45 { pt3dadd( 20.7323, -41.7391, -11.4464, 1.25 ) }
    dend_45 { pt3dadd( 21.2953, -43.1937, -11.1585, 1.55 ) }
    dend_45 { pt3dadd( 21.7421, -44.415, -10.9238, 1.99 ) }
    dend_45 { pt3dadd( 22.0236, -45.1279, -10.7873, 1.99 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 60/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 5.03245, -14.57, -10.8115, 1.7 ) }
    dend_42 { pt3dadd( 3.68236, -16.2437, -11.5056, 1.7 ) }
    dend_42 { pt3dadd( 2.90051, -17.2635, -11.809, 1.62 ) }
    dend_42 { pt3dadd( 1.85041, -18.6734, -12.0523, 1.4 ) }
    dend_42 { pt3dadd( 1.13348, -19.6638, -12.1044, 1.7 ) }
    dend_42 { pt3dadd( 0.34576, -20.8039, -12.0351, 1.84 ) }
    dend_42 { pt3dadd( -0.386841, -21.8836, -11.8725, 1.7 ) }
    dend_42 { pt3dadd( -1.37411, -23.3722, -11.5177, 2.21 ) }
    dend_42 { pt3dadd( -2.52655, -25.0166, -10.9954, 1.62 ) }
    dend_42 { pt3dadd( -3.48775, -26.2799, -10.5561, 1.47 ) }
    dend_42 { pt3dadd( -4.49802, -27.4691, -10.1133, 1.62 ) }
    dend_42 { pt3dadd( -5.22542, -28.2367, -9.87207, 1.7 ) }
    dend_42 { pt3dadd( -6.55263, -29.4945, -9.64979, 1.47 ) }
    dend_42 { pt3dadd( -7.52416, -30.3339, -9.64565, 1.62 ) }
    dend_42 { pt3dadd( -8.66229, -31.221, -9.73584, 1.62 ) }
    dend_42 { pt3dadd( -9.40636, -31.749, -9.82842, 1.7 ) }
    dend_42 { pt3dadd( -11.1668, -32.9489, -10.0498, 1.47 ) }
    dend_42 { pt3dadd( -12.4509, -33.8518, -10.1595, 1.84 ) }
    dend_42 { pt3dadd( -13.4494, -34.6052, -10.1802, 2.21 ) }
    dend_42 { pt3dadd( -14.7381, -35.6417, -10.212, 1.7 ) }
    dend_42 { pt3dadd( -15.8476, -36.5617, -10.2764, 1.7 ) }
    dend_42 { pt3dadd( -16.892, -37.4414, -10.3988, 1.47 ) }
    dend_42 { pt3dadd( -17.6493, -38.0667, -10.5319, 1.55 ) }
    dend_42 { pt3dadd( -18.8906, -39.1467, -10.8561, 1.33 ) }
    dend_42 { pt3dadd( -19.8692, -40.0996, -11.2241, 1.47 ) }
    dend_42 { pt3dadd( -20.9949, -41.3673, -11.8158, 1.25 ) }
    dend_42 { pt3dadd( -21.7832, -42.4338, -12.3777, 1.33 ) }
    dend_42 { pt3dadd( -22.7396, -43.9988, -13.3509, 0.96 ) }
    dend_42 { pt3dadd( -23.1347, -44.8549, -13.9602, 1.33 ) }
    dend_42 { pt3dadd( -23.4066, -45.7499, -14.6619, 1.62 ) }
    dend_42 { pt3dadd( -23.5122, -46.4895, -15.2929, 1.62 ) }
    dend_42 { pt3dadd( -23.5269, -47.6051, -16.3213, 1.25 ) }
    dend_42 { pt3dadd( -23.493, -48.6528, -17.3429, 1.25 ) }
    dend_42 { pt3dadd( -23.4717, -49.7165, -18.4309, 1.4 ) }
    dend_42 { pt3dadd( -23.5301, -50.5082, -19.207, 1.47 ) }
    dend_42 { pt3dadd( -23.7116, -51.655, -20.2627, 1.47 ) }
    dend_42 { pt3dadd( -23.9321, -52.6042, -21.0867, 1.47 ) }
    dend_42 { pt3dadd( -24.221, -53.6184, -21.9356, 1.7 ) }
    dend_42 { pt3dadd( -24.417, -54.283, -22.4745, 1.84 ) }
    dend_42 { pt3dadd( -24.9373, -55.8335, -23.7113, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_42 { pt3dadd( -25.3103, -56.8561, -24.5311, 1.4 ) }
    dend_42 { pt3dadd( -25.7057, -57.7866, -25.3079, 1.55 ) }
    dend_42 { pt3dadd( -26.1868, -58.7685, -26.1854, 1.99 ) }
    dend_42 { pt3dadd( -26.7181, -59.6596, -26.9984, 2.06 ) }
    dend_42 { pt3dadd( -27.6691, -60.9814, -28.1144, 1.47 ) }
    dend_42 { pt3dadd( -28.702, -62.2082, -28.9897, 1.7 ) }
    dend_42 { pt3dadd( -29.8316, -63.4889, -29.6535, 1.33 ) }
    dend_42 { pt3dadd( -30.8141, -64.615, -30.0183, 1.33 ) }
    dend_42 { pt3dadd( -32.2481, -66.3131, -30.3407, 1.11 ) }
    dend_42 { pt3dadd( -33.434, -67.8459, -30.5121, 1.4 ) }
    dend_42 { pt3dadd( -34.4336, -69.3843, -30.6306, 1.25 ) }
    dend_42 { pt3dadd( -35.1171, -70.6762, -30.7467, 1.33 ) }
    dend_42 { pt3dadd( -35.6138, -71.9707, -30.9823, 1.33 ) }
    dend_42 { pt3dadd( -35.9716, -73.4605, -31.4619, 1.25 ) }
    dend_42 { pt3dadd( -36.1853, -74.889, -32.1272, 1.25 ) }
    dend_42 { pt3dadd( -36.3324, -76.359, -32.9918, 1.25 ) }
    dend_42 { pt3dadd( -36.4277, -77.6907, -33.9411, 1.4 ) }
    dend_42 { pt3dadd( -36.4885, -79.1132, -35.0999, 1.84 ) }
    dend_42 { pt3dadd( -36.4887, -80.3552, -36.1899, 1.18 ) }
    dend_42 { pt3dadd( -36.4607, -81.4222, -37.1273, 1.18 ) }
    // Section: dend_38, id: dend_38, parent: dend_30 (entry count 20/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 37.0505, -14.6129, -31.6422, 0.52 ) }
    dend_38 { pt3dadd( 38.2778, -15.1356, -32.2249, 0.52 ) }
    dend_38 { pt3dadd( 39.0028, -15.4776, -32.545, 0.52 ) }
    dend_38 { pt3dadd( 39.8168, -15.8652, -32.9085, 0.52 ) }
    dend_38 { pt3dadd( 40.8204, -16.2902, -33.3729, 0.96 ) }
    dend_38 { pt3dadd( 41.6902, -16.5966, -33.7592, 0.52 ) }
    dend_38 { pt3dadd( 42.6266, -16.8354, -34.1517, 0.81 ) }
    dend_38 { pt3dadd( 43.3845, -16.9512, -34.4962, 0.81 ) }
    dend_38 { pt3dadd( 44.359, -16.9177, -34.8759, 0.74 ) }
    dend_38 { pt3dadd( 45.4888, -16.4014, -35.1993, 0.88 ) }
    dend_38 { pt3dadd( 46.1276, -15.6259, -35.3043, 0.74 ) }
    dend_38 { pt3dadd( 46.7172, -14.5194, -35.3896, 0.74 ) }
    dend_38 { pt3dadd( 47.437, -12.8165, -35.4708, 0.59 ) }
    dend_38 { pt3dadd( 47.9096, -11.5418, -35.5398, 1.03 ) }
    dend_38 { pt3dadd( 48.4682, -9.8561, -35.6609, 0.81 ) }
    dend_38 { pt3dadd( 48.8523, -8.54681, -35.8282, 0.96 ) }
    dend_38 { pt3dadd( 49.1803, -7.46338, -36.0773, 0.96 ) }
    dend_38 { pt3dadd( 49.7769, -5.82821, -36.6436, 0.66 ) }
    dend_38 { pt3dadd( 50.3096, -4.73462, -37.1781, 0.66 ) }
    dend_38 { pt3dadd( 50.7874, -3.9674, -37.6741, 0.74 ) }
    dend_38 { pt3dadd( 51.6365, -2.92251, -38.4862, 0.81 ) }
    dend_38 { pt3dadd( 52.5683, -1.99573, -39.3028, 0.59 ) }
    dend_38 { pt3dadd( 53.3781, -1.34913, -39.904, 1.03 ) }
    dend_38 { pt3dadd( 54.293, -0.796285, -40.4168, 1.11 ) }
    dend_38 { pt3dadd( 55.2892, -0.367827, -40.7144, 0.81 ) }
    dend_38 { pt3dadd( 56.2991, -0.0749442, -40.8168, 0.88 ) }
    dend_38 { pt3dadd( 57.1757, 0.0712613, -40.7702, 0.74 ) }
    dend_38 { pt3dadd( 58.3047, 0.135134, -40.5832, 0.74 ) }
    dend_38 { pt3dadd( 59.8722, 0.0830078, -40.1911, 0.88 ) }
    dend_38 { pt3dadd( 61.4327, -0.122476, -39.6651, 0.74 ) }
    dend_38 { pt3dadd( 62.5936, -0.424083, -39.1983, 0.66 ) }
    dend_38 { pt3dadd( 63.6963, -0.851286, -38.7042, 0.59 ) }
    dend_38 { pt3dadd( 64.9447, -1.45805, -38.1226, 0.74 ) }
    dend_38 { pt3dadd( 65.7324, -1.90581, -37.7655, 0.81 ) }
    dend_38 { pt3dadd( 66.7982, -2.57568, -37.2776, 0.66 ) }
    dend_38 { pt3dadd( 68.1731, -3.45134, -36.6502, 0.59 ) }
    dend_38 { pt3dadd( 69.191, -4.03846, -36.2107, 1.11 ) }
    dend_38 { pt3dadd( 70.508, -4.65, -35.727, 1.03 ) }
    dend_38 { pt3dadd( 71.3653, -4.95509, -35.5069, 1.03 ) }
    dend_38 { pt3dadd( 72.5744, -5.26059, -35.3427, 1.11 ) }
    dend_38 { pt3dadd( 74.1074, -5.48474, -35.3365, 0.81 ) }
    dend_38 { pt3dadd( 75.4286, -5.55445, -35.4781, 0.81 ) }
    dend_38 { pt3dadd( 77.047, -5.53885, -35.798, 0.66 ) }
    dend_38 { pt3dadd( 78.8703, -5.36815, -36.2916, 0.74 ) }
    dend_38 { pt3dadd( 79.7789, -5.2084, -36.5771, 1.18 ) }
    dend_38 { pt3dadd( 80.9076, -4.89243, -36.9729, 1.18 ) }
    dend_38 { pt3dadd( 81.8169, -4.4843, -37.2878, 1.18 ) }
    dend_38 { pt3dadd( 82.4811, -4.05342, -37.4768, 1.18 ) }
    dend_38 { pt3dadd( 83.6042, -3.09812, -37.7093, 0.52 ) }
    dend_38 { pt3dadd( 84.4308, -2.25951, -37.8432, 0.52 ) }
    dend_38 { pt3dadd( 85.2493, -1.32061, -38.0052, 0.66 ) }
    dend_38 { pt3dadd( 86.457, 0.143312, -38.333, 0.81 ) }
    dend_38 { pt3dadd( 87.5698, 1.48123, -38.7827, 0.59 ) }
    dend_38 { pt3dadd( 88.1588, 2.10341, -39.071, 0.59 ) }
    dend_38 { pt3dadd( 89.039, 2.86447, -39.5904, 0.81 ) }
    dend_38 { pt3dadd( 89.6117, 3.2581, -39.9811, 0.81 ) }
    dend_38 { pt3dadd( 90.6136, 3.80764, -40.7714, 0.66 ) }
    dend_38 { pt3dadd( 91.468, 4.1752, -41.5245, 0.59 ) }
    dend_38 { pt3dadd( 92.6379, 4.59567, -42.5789, 0.52 ) }
    dend_38 { pt3dadd( 93.1597, 4.75002, -43.0207, 0.66 ) }
    dend_38 { pt3dadd( 94.0346, 4.98148, -43.7094, 0.59 ) }
    dend_38 { pt3dadd( 95.0747, 5.27354, -44.5, 0.44 ) }
    dend_38 { pt3dadd( 96.082, 5.603, -45.2559, 0.74 ) }
    dend_38 { pt3dadd( 96.759, 5.89099, -45.7058, 0.88 ) }
    dend_38 { pt3dadd( 97.98, 6.57297, -46.3494, 0.44 ) }
    dend_38 { pt3dadd( 98.9223, 7.15764, -46.661, 0.44 ) }
    dend_38 { pt3dadd( 99.6572, 7.64754, -46.8008, 0.44 ) }
    dend_38 { pt3dadd( 100.288, 8.13073, -46.854, 0.52 ) }
    dend_38 { pt3dadd( 101.894, 9.58199, -46.8687, 0.29 ) }
    dend_38 { pt3dadd( 103.207, 10.933, -46.8266, 0.22 ) }
    dend_38 { pt3dadd( 104.282, 12.0922, -46.7446, 0.22 ) }
    dend_38 { pt3dadd( 104.763, 12.5788, -46.6995, 0.22 ) }
    dend_38 { pt3dadd( 105.501, 13.3011, -46.6385, 0.22 ) }
    dend_38 { pt3dadd( 105.99, 13.7606, -46.6092, 0.22 ) }
    dend_38 { pt3dadd( 106.958, 14.5617, -46.6092, 0.22 ) }
    dend_38 { pt3dadd( 108.034, 15.3473, -46.6092, 0.37 ) }
    dend_38 { pt3dadd( 108.899, 15.9262, -46.6092, 0.37 ) }
    dend_38 { pt3dadd( 118.127, 18.9647, -48.9783, 0.37 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 98/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 37.0505, -14.6129, -31.6422, 0.66 ) }
    dend_31 { pt3dadd( 37.3097, -15.4878, -31.7694, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_31 { pt3dadd( 37.6331, -16.6829, -32.1276, 0.59 ) }
    dend_31 { pt3dadd( 37.7912, -17.2869, -32.3938, 0.96 ) }
    dend_31 { pt3dadd( 37.9172, -17.8076, -32.6982, 1.4 ) }
    dend_31 { pt3dadd( 38.0976, -18.5091, -33.2053, 1.4 ) }
    dend_31 { pt3dadd( 38.4045, -19.6344, -34.1166, 0.81 ) }
    dend_31 { pt3dadd( 38.7262, -20.8008, -35.1991, 0.96 ) }
    dend_31 { pt3dadd( 38.8998, -21.427, -35.852, 1.11 ) }
    dend_31 { pt3dadd( 39.1005, -22.0896, -36.6043, 1.11 ) }
    dend_31 { pt3dadd( 39.3812, -22.9271, -37.64, 0.74 ) }
    dend_31 { pt3dadd( 39.739, -23.8383, -38.8894, 1.03 ) }
    dend_31 { pt3dadd( 40.0486, -24.4869, -39.8856, 1.03 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 11/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 28.6756, 12.825, 13.2128, 1.92 ) }
    dend_15 { pt3dadd( 28.7978, 14.0533, 12.8595, 1.92 ) }
    dend_15 { pt3dadd( 28.9348, 15.9664, 12.2462, 0.96 ) }
    dend_15 { pt3dadd( 29.018, 17.2142, 11.842, 1.47 ) }
    dend_15 { pt3dadd( 29.1454, 18.9492, 11.2702, 1.11 ) }
    dend_15 { pt3dadd( 29.267, 20.5622, 10.7552, 1.25 ) }
    dend_15 { pt3dadd( 29.3807, 22.142, 10.2753, 1.4 ) }
    dend_15 { pt3dadd( 29.435, 23.2438, 9.94584, 1.4 ) }
    dend_15 { pt3dadd( 29.4659, 24.3774, 9.63459, 1.4 ) }
    dend_15 { pt3dadd( 29.5091, 25.6171, 9.36127, 1.33 ) }
    dend_15 { pt3dadd( 29.5672, 26.9346, 9.12178, 1.84 ) }
    dend_15 { pt3dadd( 29.623, 28.0389, 8.98953, 1.47 ) }
    dend_15 { pt3dadd( 29.6842, 29.0446, 8.91702, 1.03 ) }
    dend_15 { pt3dadd( 29.7812, 30.3043, 8.85773, 1.33 ) }
    dend_15 { pt3dadd( 29.9475, 31.9859, 8.79217, 1.47 ) }
    dend_15 { pt3dadd( 30.119, 33.2171, 8.76031, 1.47 ) }
    dend_15 { pt3dadd( 30.4719, 35.0601, 8.71367, 1.47 ) }
    dend_15 { pt3dadd( 30.7628, 36.2064, 8.68685, 1.33 ) }
    dend_15 { pt3dadd( 31.0819, 37.3121, 8.6623, 1.11 ) }
    dend_15 { pt3dadd( 31.3369, 38.0709, 8.64835, 1.33 ) }
    dend_15 { pt3dadd( 31.8182, 39.3077, 8.6385, 0.88 ) }
    dend_15 { pt3dadd( 32.1722, 40.0587, 8.65118, 1.11 ) }
    dend_15 { pt3dadd( 32.6512, 40.8641, 8.63519, 1.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 34/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 28.6756, 12.825, 13.2128, 1.11 ) }
    dend_12 { pt3dadd( 30.7922, 12.8341, 13.2609, 1.11 ) }
    dend_12 { pt3dadd( 32.3363, 12.8143, 13.437, 0.88 ) }
    dend_12 { pt3dadd( 33.1291, 12.7594, 13.6089, 1.33 ) }
    dend_12 { pt3dadd( 34.3594, 12.674, 13.8758, 1.7 ) }
    dend_12 { pt3dadd( 35.8934, 12.5677, 14.2085, 1.11 ) }
    dend_12 { pt3dadd( 36.9761, 12.4926, 14.4433, 1.11 ) }
    dend_12 { pt3dadd( 38.327, 12.3896, 14.9204, 1.03 ) }
    dend_12 { pt3dadd( 39.8313, 12.196, 15.5914, 1.03 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 43/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -61.7951, -26.0589, -9.55363, 0.74 ) }
    dend_4 { pt3dadd( -62.5669, -27.4357, -9.60345, 0.74 ) }
    dend_4 { pt3dadd( -63.2724, -28.539, -9.6882, 0.88 ) }
    dend_4 { pt3dadd( -63.7594, -29.2461, -9.69562, 0.81 ) }
    dend_4 { pt3dadd( -64.0078, -29.6085, -9.69196, 1.18 ) }
    dend_4 { pt3dadd( -64.84, -30.8656, -9.68769, 1.25 ) }
    dend_4 { pt3dadd( -65.3002, -31.5757, -9.68801, 1.55 ) }
    dend_4 { pt3dadd( -66.1343, -32.8131, -9.69127, 1.18 ) }
    dend_4 { pt3dadd( -67.1365, -34.2901, -9.64055, 0.96 ) }
    dend_4 { pt3dadd( -68.0451, -35.5918, -9.52836, 1.25 ) }
    dend_4 { pt3dadd( -68.6925, -36.5098, -9.40482, 0.96 ) }
    dend_4 { pt3dadd( -69.5812, -37.7837, -9.1762, 0.59 ) }
    dend_4 { pt3dadd( -70.0724, -38.4431, -9.05611, 0.88 ) }
    dend_4 { pt3dadd( -70.851, -39.4243, -8.90296, 1.33 ) }
    dend_4 { pt3dadd( -71.4916, -40.2185, -8.82965, 1.33 ) }
    dend_4 { pt3dadd( -72.4278, -41.4148, -8.78215, 1.18 ) }
    dend_4 { pt3dadd( -73.1389, -42.4598, -8.78742, 0.74 ) }
    dend_4 { pt3dadd( -73.7765, -43.6812, -8.86925, 0.96 ) }
    dend_4 { pt3dadd( -74.1204, -44.6467, -8.99622, 1.25 ) }
    dend_4 { pt3dadd( -74.4528, -46.328, -9.31903, 0.88 ) }
    dend_4 { pt3dadd( -74.5312, -47.5618, -9.5699, 0.88 ) }
    dend_4 { pt3dadd( -74.5136, -48.8994, -9.81339, 1.03 ) }
    dend_4 { pt3dadd( -74.4755, -49.955, -9.96359, 0.66 ) }
    dend_4 { pt3dadd( -74.3862, -50.8296, -10.0535, 0.81 ) }
    dend_4 { pt3dadd( -74.2976, -51.5039, -10.1037, 0.96 ) }
    dend_4 { pt3dadd( -74.2073, -52.3592, -10.1514, 0.88 ) }
    dend_4 { pt3dadd( -74.2538, -53.9365, -10.1529, 1.11 ) }
    dend_4 { pt3dadd( -74.4753, -54.7338, -10.1652, 0.88 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 71/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -61.7951, -26.0589, -9.55363, 1.18 ) }
    dend_1 { pt3dadd( -63.5598, -26.2289, -9.89768, 1.18 ) }
    dend_1 { pt3dadd( -65.3465, -26.4802, -10.089, 0.88 ) }
    dend_1 { pt3dadd( -67.0206, -26.7218, -10.1744, 1.11 ) }
    dend_1 { pt3dadd( -68.4197, -26.8996, -10.2337, 1.33 ) }
    dend_1 { pt3dadd( -70.1979, -27.0821, -10.3703, 0.74 ) }
    dend_1 { pt3dadd( -71.9756, -27.2401, -10.5805, 0.96 ) }
    dend_1 { pt3dadd( -73.2857, -27.4196, -10.7816, 0.88 ) }
    dend_1 { pt3dadd( -74.7554, -27.6339, -11.0605, 0.66 ) }
    dend_1 { pt3dadd( -75.8481, -27.7839, -11.3096, 1.11 ) }
    dend_1 { pt3dadd( -77.2512, -27.994, -11.7273, 1.62 ) }
    dend_1 { pt3dadd( -78.2223, -28.1716, -12.159, 1.4 ) }
    dend_1 { pt3dadd( -79.0522, -28.3675, -12.67, 1.03 ) }
    dend_1 { pt3dadd( -79.7476, -28.5691, -13.1723, 0.96 ) }
    dend_1 { pt3dadd( -80.6625, -28.896, -13.8678, 0.96 ) }
    dend_1 { pt3dadd( -81.62, -29.2543, -14.5436, 1.18 ) }
    dend_1 { pt3dadd( -82.646, -29.6605, -15.2205, 1.47 ) }
    dend_1 { pt3dadd( -83.815, -30.1479, -15.9659, 0.96 ) }
    dend_1 { pt3dadd( -84.9195, -30.6151, -16.6748, 1.03 ) }
    dend_1 { pt3dadd( -86.4443, -31.2707, -17.6639, 0.88 ) }
    dend_1 { pt3dadd( -87.4532, -31.6837, -18.3047, 0.88 ) }
    dend_1 { pt3dadd( -88.4349, -32.0804, -18.9072, 0.59 ) }
    dend_1 { pt3dadd( -89.8907, -32.7232, -19.7725, 0.88 ) }
    dend_1 { pt3dadd( -91.0487, -33.3254, -20.4416, 1.11 ) }
    dend_1 { pt3dadd( -91.9066, -33.8246, -20.9339, 1.11 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 96/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 40.1709, 5.28695, 0.0, 0.15 ) }
    axon_1 { pt3dadd( 55.0622, 7.0892, 0.0, 0.15 ) }
    axon_1 { pt3dadd( 69.9535, 8.89145, 0.0, 0.15 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 99/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 35.6942, 46.3143, 98.955, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_64 { pt3dadd( 34.9024, 47.104, 101.576, 0.37 ) }
    dend_64 { pt3dadd( 34.4525, 47.4574, 102.881, 0.37 ) }
    dend_64 { pt3dadd( 33.7978, 47.8849, 104.875, 0.88 ) }
    dend_64 { pt3dadd( 33.5379, 48.0387, 105.821, 0.88 ) }
    dend_64 { pt3dadd( 32.997, 48.3379, 108.219, 0.52 ) }
    dend_64 { pt3dadd( 32.7458, 48.4886, 109.722, 0.74 ) }
    dend_64 { pt3dadd( 32.6144, 48.5608, 111.078, 0.74 ) }
    dend_64 { pt3dadd( 32.5723, 48.625, 112.719, 1.03 ) }
    dend_64 { pt3dadd( 32.6438, 48.677, 114.783, 1.18 ) }
    dend_64 { pt3dadd( 32.7716, 48.6853, 116.771, 1.18 ) }
    dend_64 { pt3dadd( 33.0638, 48.6183, 120.26, 0.96 ) }
    dend_64 { pt3dadd( 33.2232, 48.5693, 122.651, 0.66 ) }
    dend_64 { pt3dadd( 33.2862, 48.5645, 124.419, 0.52 ) }
    dend_64 { pt3dadd( 33.2587, 48.624, 126.909, 0.52 ) }
    dend_64 { pt3dadd( 33.1289, 48.7283, 129.271, 0.52 ) }
    dend_64 { pt3dadd( 32.9974, 48.8366, 130.737, 0.52 ) }
    dend_64 { pt3dadd( 32.7793, 48.9615, 132.297, 0.37 ) }
    dend_64 { pt3dadd( 32.6048, 49.0492, 133.191, 0.81 ) }
    dend_64 { pt3dadd( 32.141, 49.3167, 135.162, 0.37 ) }
    dend_64 { pt3dadd( 31.7433, 49.6688, 136.68, 0.37 ) }
    dend_64 { pt3dadd( 31.4499, 50.2007, 138.1, 0.88 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 21/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 35.6942, 46.3143, 98.955, 0.37 ) }
    dend_63 { pt3dadd( 36.6096, 46.7696, 100.295, 0.37 ) }
    dend_63 { pt3dadd( 37.2627, 47.1545, 101.325, 0.37 ) }
    dend_63 { pt3dadd( 37.891, 47.6208, 102.467, 1.03 ) }
    dend_63 { pt3dadd( 38.8489, 48.4903, 104.469, 1.62 ) }
    dend_63 { pt3dadd( 39.376, 49.0341, 105.69, 0.52 ) }
    dend_63 { pt3dadd( 39.8779, 49.5385, 106.852, 0.37 ) }
    dend_63 { pt3dadd( 40.1008, 49.8014, 107.48, 0.37 ) }
    dend_63 { pt3dadd( 40.5427, 50.2394, 108.952, 0.29 ) }
    dend_63 { pt3dadd( 40.6767, 50.3293, 109.446, 0.29 ) }
    dend_63 { pt3dadd( 40.9155, 50.3942, 110.241, 0.29 ) }
    dend_63 { pt3dadd( 41.3282, 50.4239, 111.461, 0.52 ) }
    dend_63 { pt3dadd( 41.9907, 50.4379, 113.019, 0.88 ) }
    dend_63 { pt3dadd( 43.4444, 50.5168, 115.814, 1.62 ) }
    dend_63 { pt3dadd( 43.9768, 50.5839, 116.718, 1.99 ) }
    dend_63 { pt3dadd( 45.1731, 50.8288, 118.607, 0.66 ) }
    dend_63 { pt3dadd( 46.2961, 51.1635, 120.231, 0.59 ) }
    dend_63 { pt3dadd( 47.1312, 51.5078, 121.335, 1.55 ) }
    dend_63 { pt3dadd( 48.311, 52.0785, 122.697, 0.44 ) }
    dend_63 { pt3dadd( 49.8041, 52.9129, 124.192, 0.44 ) }
    dend_63 { pt3dadd( 50.3582, 53.2696, 124.732, 0.74 ) }
    dend_63 { pt3dadd( 51.1051, 53.8275, 125.463, 0.74 ) }
    dend_63 { pt3dadd( 51.9373, 54.5058, 126.347, 0.37 ) }
    dend_63 { pt3dadd( 52.9267, 55.3501, 127.711, 0.52 ) }
    dend_63 { pt3dadd( 53.3646, 55.6906, 128.434, 0.52 ) }
    dend_63 { pt3dadd( 53.5189, 55.7793, 128.709, 0.52 ) }
    dend_63 { pt3dadd( 53.7804, 55.8835, 129.174, 0.59 ) }
    dend_63 { pt3dadd( 54.2514, 56.022, 129.99, 0.59 ) }
    dend_63 { pt3dadd( 54.9781, 56.233, 131.121, 0.59 ) }
    dend_63 { pt3dadd( 55.6883, 56.5048, 132.12, 0.59 ) }
    dend_63 { pt3dadd( 56.5232, 56.9324, 133.134, 0.44 ) }
    dend_63 { pt3dadd( 57.2698, 57.3927, 133.924, 0.74 ) }
    dend_63 { pt3dadd( 58.3104, 58.1303, 134.907, 0.44 ) }
    dend_63 { pt3dadd( 59.0717, 58.78, 135.631, 1.03 ) }
    dend_63 { pt3dadd( 59.6298, 59.3467, 136.199, 1.77 ) }
    dend_63 { pt3dadd( 60.7078, 60.6096, 137.393, 0.44 ) }
    dend_63 { pt3dadd( 61.5474, 61.6897, 138.348, 0.22 ) }
    dend_63 { pt3dadd( 62.2908, 62.6769, 139.15, 1.03 ) }
    dend_63 { pt3dadd( 63.5711, 64.3573, 140.418, 0.37 ) }
    dend_63 { pt3dadd( 64.4864, 65.5224, 141.287, 0.96 ) }
    dend_63 { pt3dadd( 65.1088, 66.2675, 141.878, 0.96 ) }
    dend_63 { pt3dadd( 65.8079, 67.0033, 142.547, 1.03 ) }
    dend_63 { pt3dadd( 66.9804, 68.0517, 143.686, 0.37 ) }
    dend_63 { pt3dadd( 67.6336, 68.5218, 144.345, 0.37 ) }
    dend_63 { pt3dadd( 68.4189, 68.9967, 145.184, 0.81 ) }
    dend_63 { pt3dadd( 69.1457, 69.4185, 146.118, 1.47 ) }
    dend_63 { pt3dadd( 70.035, 69.9864, 147.611, 0.81 ) }
    dend_63 { pt3dadd( 70.8088, 70.5821, 149.389, 1.11 ) }
    dend_63 { pt3dadd( 71.3344, 71.0966, 151.045, 1.7 ) }
    dend_63 { pt3dadd( 71.7798, 71.6507, 152.927, 0.52 ) }
    dend_63 { pt3dadd( 72.0549, 72.09, 154.5, 0.52 ) }
    dend_63 { pt3dadd( 72.2543, 72.5129, 156.073, 0.52 ) }
    dend_63 { pt3dadd( 72.444, 72.9227, 157.653, 0.52 ) }
    dend_63 { pt3dadd( 72.6697, 73.1876, 158.866, 0.52 ) }
    dend_63 { pt3dadd( 73.2306, 73.4886, 160.875, 0.81 ) }
    dend_63 { pt3dadd( 73.5445, 73.558, 161.645, 0.81 ) }
    dend_63 { pt3dadd( 74.5895, 73.7004, 163.488, 0.81 ) }
    dend_63 { pt3dadd( 75.7468, 73.8858, 165.108, 0.59 ) }
    dend_63 { pt3dadd( 77.2093, 74.2354, 166.884, 0.44 ) }
    dend_63 { pt3dadd( 78.0465, 74.5539, 167.836, 1.03 ) }
    dend_63 { pt3dadd( 78.9953, 75.0642, 168.839, 0.44 ) }
    dend_63 { pt3dadd( 79.9713, 75.7258, 169.853, 0.96 ) }
    dend_63 { pt3dadd( 81.019, 76.5538, 170.889, 0.59 ) }
    dend_63 { pt3dadd( 81.9278, 77.3455, 171.814, 1.11 ) }
    dend_63 { pt3dadd( 82.9618, 78.2902, 172.951, 0.52 ) }
    dend_63 { pt3dadd( 83.6546, 78.8788, 173.71, 0.29 ) }
    dend_63 { pt3dadd( 84.2242, 79.3001, 174.301, 0.81 ) }
    dend_63 { pt3dadd( 84.8646, 79.6969, 174.912, 0.81 ) }
    dend_63 { pt3dadd( 86.0732, 80.3025, 175.903, 0.37 ) }
    dend_63 { pt3dadd( 87.5838, 80.9728, 176.935, 0.81 ) }
    dend_63 { pt3dadd( 88.2524, 81.2568, 177.312, 1.03 ) }
    dend_63 { pt3dadd( 90.1967, 82.1695, 178.298, 0.37 ) }
    dend_63 { pt3dadd( 90.8231, 82.5126, 178.614, 0.37 ) }
    dend_63 { pt3dadd( 91.8046, 83.1533, 179.09, 0.88 ) }
    dend_63 { pt3dadd( 92.5121, 83.6748, 179.397, 0.37 ) }
    dend_63 { pt3dadd( 93.6207, 84.5364, 179.818, 0.96 ) }
    dend_63 { pt3dadd( 95.1581, 85.7304, 180.365, 0.59 ) }
    dend_63 { pt3dadd( 96.4746, 86.6887, 180.749, 0.59 ) }
    dend_63 { pt3dadd( 97.9046, 87.7043, 181.115, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_63 { pt3dadd( 98.7497, 88.2991, 181.281, 0.81 ) }
    dend_63 { pt3dadd( 99.8409, 89.0244, 181.403, 1.11 ) }
    dend_63 { pt3dadd( 100.952, 89.7175, 181.356, 0.52 ) }
    dend_63 { pt3dadd( 102.015, 90.3207, 181.149, 0.52 ) }
    dend_63 { pt3dadd( 102.724, 90.6946, 180.926, 0.74 ) }
    dend_63 { pt3dadd( 103.596, 91.1332, 180.601, 0.88 ) }
    dend_63 { pt3dadd( 104.751, 91.7643, 180.079, 0.52 ) }
    dend_63 { pt3dadd( 105.743, 92.3933, 179.536, 1.18 ) }
    dend_63 { pt3dadd( 106.4, 92.9207, 179.118, 1.18 ) }
    dend_63 { pt3dadd( 107.099, 93.6404, 178.556, 0.22 ) }
    dend_63 { pt3dadd( 107.516, 94.1079, 178.167, 0.22 ) }
    dend_63 { pt3dadd( 108.175, 94.8588, 177.558, 0.22 ) }
    dend_63 { pt3dadd( 108.661, 95.3962, 177.141, 0.96 ) }
    dend_63 { pt3dadd( 109.135, 95.8568, 176.786, 1.55 ) }
    dend_63 { pt3dadd( 110.584, 97.0789, 175.738, 0.44 ) }
    dend_63 { pt3dadd( 111.861, 98.0072, 174.88, 1.03 ) }
    dend_63 { pt3dadd( 113.002, 98.7301, 174.17, 0.74 ) }
    dend_63 { pt3dadd( 114.212, 99.3902, 173.518, 0.37 ) }
    dend_63 { pt3dadd( 115.472, 99.9998, 172.896, 0.29 ) }
    dend_63 { pt3dadd( 116.34, 100.39, 172.502, 0.29 ) }
    dend_63 { pt3dadd( 117.221, 100.768, 172.137, 0.88 ) }
    dend_63 { pt3dadd( 117.958, 101.081, 171.789, 1.11 ) }
    dend_63 { pt3dadd( 118.9, 101.427, 171.23, 0.22 ) }
    dend_63 { pt3dadd( 119.532, 101.565, 170.763, 0.22 ) }
    dend_63 { pt3dadd( 120.055, 101.59, 170.285, 0.22 ) }
    dend_63 { pt3dadd( 120.629, 101.548, 169.698, 0.22 ) }
    dend_63 { pt3dadd( 121.195, 101.445, 169.073, 0.74 ) }
    dend_63 { pt3dadd( 122.038, 101.276, 168.063, 1.18 ) }
    dend_63 { pt3dadd( 123.095, 101.115, 166.618, 0.37 ) }
    dend_63 { pt3dadd( 123.874, 101.068, 165.451, 0.37 ) }
    dend_63 { pt3dadd( 124.341, 101.084, 164.721, 0.88 ) }
    dend_63 { pt3dadd( 124.748, 101.139, 164.022, 0.88 ) }
    dend_63 { pt3dadd( 125.496, 101.295, 162.622, 0.29 ) }
    dend_63 { pt3dadd( 126.418, 101.501, 160.878, 0.59 ) }
    dend_63 { pt3dadd( 127.092, 101.62, 159.683, 0.59 ) }
    dend_63 { pt3dadd( 127.46, 101.64, 159.141, 0.59 ) }
    dend_63 { pt3dadd( 128.454, 101.636, 157.847, 0.59 ) }
    dend_63 { pt3dadd( 129.1, 101.617, 157.11, 1.33 ) }
    dend_63 { pt3dadd( 130.483, 101.523, 155.839, 0.52 ) }
    dend_63 { pt3dadd( 131.775, 101.412, 154.882, 1.4 ) }
    dend_63 { pt3dadd( 133.433, 101.252, 153.776, 0.44 ) }
    dend_63 { pt3dadd( 134.585, 101.147, 153.061, 0.88 ) }
    dend_63 { pt3dadd( 135.58, 101.064, 152.51, 0.22 ) }
    dend_63 { pt3dadd( 136.575, 100.961, 151.981, 0.22 ) }
    dend_63 { pt3dadd( 137.943, 100.805, 151.265, 0.44 ) }
    dend_63 { pt3dadd( 139.137, 100.595, 150.626, 0.15 ) }
    dend_63 { pt3dadd( 139.438, 100.5, 150.451, 0.29 ) }
    dend_63 { pt3dadd( 140.082, 100.197, 150.119, 0.15 ) }
    dend_63 { pt3dadd( 140.651, 99.8345, 149.842, 0.59 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 49/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -42.7059, 15.0335, 35.9309, 0.66 ) }
    dend_55 { pt3dadd( -43.3168, 15.412, 34.5052, 0.66 ) }
    dend_55 { pt3dadd( -43.7461, 15.6256, 33.4703, 0.44 ) }
    dend_55 { pt3dadd( -44.2827, 15.8471, 32.1947, 0.88 ) }
    dend_55 { pt3dadd( -45.0911, 16.1221, 30.4802, 1.11 ) }
    dend_55 { pt3dadd( -46.0185, 16.4206, 28.5879, 1.33 ) }
    dend_55 { pt3dadd( -46.9534, 16.7348, 26.6821, 1.03 ) }
    dend_55 { pt3dadd( -47.6383, 17.0223, 25.1148, 1.33 ) }
    dend_55 { pt3dadd( -48.05, 17.212, 24.0087, 1.33 ) }
    dend_55 { pt3dadd( -48.4982, 17.4308, 22.6823, 0.44 ) }
    dend_55 { pt3dadd( -48.8522, 17.5967, 21.5673, 0.44 ) }
    dend_55 { pt3dadd( -49.0825, 17.7089, 20.8113, 0.81 ) }
    dend_55 { pt3dadd( -49.6833, 18.0509, 18.8493, 0.81 ) }
    dend_55 { pt3dadd( -50.1497, 18.3812, 17.5284, 0.81 ) }
    dend_55 { pt3dadd( -50.3512, 18.5281, 17.0463, 0.81 ) }
    dend_55 { pt3dadd( -51.0586, 19.0011, 15.7127, 0.88 ) }
    dend_55 { pt3dadd( -52.0638, 19.5663, 14.5042, 1.4 ) }
    dend_55 { pt3dadd( -53.1856, 20.1337, 13.6937, 1.7 ) }
    dend_55 { pt3dadd( -55.0541, 21.0273, 12.9333, 0.44 ) }
    dend_55 { pt3dadd( -55.672, 21.3221, 12.7827, 0.96 ) }
    dend_55 { pt3dadd( -56.7827, 21.8484, 12.5915, 1.18 ) }
    dend_55 { pt3dadd( -58.0631, 22.4417, 12.4303, 1.11 ) }
    dend_55 { pt3dadd( -59.3038, 22.9669, 12.2519, 1.47 ) }
    dend_55 { pt3dadd( -60.2938, 23.3276, 12.0145, 1.47 ) }
    dend_55 { pt3dadd( -61.6135, 23.7091, 11.518, 0.81 ) }
    dend_55 { pt3dadd( -62.7628, 24.0094, 10.9843, 0.52 ) }
    dend_55 { pt3dadd( -63.8103, 24.2749, 10.4129, 0.52 ) }
    dend_55 { pt3dadd( -64.9561, 24.557, 9.74837, 0.96 ) }
    dend_55 { pt3dadd( -66.1216, 24.8459, 9.08187, 0.37 ) }
    dend_55 { pt3dadd( -66.8546, 25.0204, 8.71018, 0.81 ) }
    dend_55 { pt3dadd( -67.9922, 25.2776, 8.21657, 0.96 ) }
    dend_55 { pt3dadd( -68.9169, 25.5011, 7.89254, 1.47 ) }
    dend_55 { pt3dadd( -69.8464, 25.7377, 7.64215, 0.96 ) }
    dend_55 { pt3dadd( -70.8114, 26.0135, 7.44145, 0.44 ) }
    dend_55 { pt3dadd( -71.6886, 26.2915, 7.26178, 0.44 ) }
    dend_55 { pt3dadd( -72.4956, 26.5843, 7.05898, 0.74 ) }
    dend_55 { pt3dadd( -73.5523, 27.0125, 6.75015, 1.25 ) }
    dend_55 { pt3dadd( -74.2627, 27.3224, 6.53162, 1.25 ) }
    dend_55 { pt3dadd( -75.7155, 28.0276, 6.09818, 0.44 ) }
    dend_55 { pt3dadd( -76.6735, 28.5548, 5.86052, 0.81 ) }
    dend_55 { pt3dadd( -77.6544, 29.1539, 5.68187, 0.88 ) }
    dend_55 { pt3dadd( -78.9935, 29.9901, 5.57334, 0.96 ) }
    dend_55 { pt3dadd( -79.6482, 30.3691, 5.57864, 0.59 ) }
    dend_55 { pt3dadd( -80.7111, 30.9396, 5.6538, 0.29 ) }
    dend_55 { pt3dadd( -81.6113, 31.3883, 5.75794, 0.59 ) }
    dend_55 { pt3dadd( -82.7441, 31.939, 5.94509, 0.96 ) }
    dend_55 { pt3dadd( -84.0495, 32.5466, 6.2212, 0.66 ) }
    dend_55 { pt3dadd( -86.027, 33.4315, 6.68903, 0.44 ) }
    dend_55 { pt3dadd( -87.021, 33.8526, 6.91676, 0.81 ) }
    dend_55 { pt3dadd( -88.3221, 34.3473, 7.17618, 2.14 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 99/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -42.7059, 15.0335, 35.9309, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_54 { pt3dadd( -43.6658, 16.4794, 36.4801, 0.44 ) }
    dend_54 { pt3dadd( -44.5898, 17.5627, 36.9835, 0.44 ) }
    dend_54 { pt3dadd( -45.3905, 18.3594, 37.3714, 1.18 ) }
    dend_54 { pt3dadd( -46.0732, 18.943, 37.6951, 0.96 ) }
    dend_54 { pt3dadd( -47.2742, 19.8029, 38.2485, 0.74 ) }
    dend_54 { pt3dadd( -48.381, 20.4516, 38.7479, 0.88 ) }
    dend_54 { pt3dadd( -50.0446, 21.1305, 39.5248, 0.44 ) }
    dend_54 { pt3dadd( -50.7375, 21.3435, 39.8419, 0.81 ) }
    dend_54 { pt3dadd( -51.6858, 21.6227, 40.2772, 1.25 ) }
    dend_54 { pt3dadd( -52.8444, 22.0221, 40.78, 1.33 ) }
    dend_54 { pt3dadd( -54.2336, 22.6225, 41.3512, 1.03 ) }
    dend_54 { pt3dadd( -55.5313, 23.3249, 41.8683, 0.52 ) }
    dend_54 { pt3dadd( -56.314, 23.8204, 42.1599, 1.11 ) }
    dend_54 { pt3dadd( -57.6699, 24.7554, 42.6876, 1.55 ) }
    dend_54 { pt3dadd( -59.0886, 25.8382, 43.2314, 1.84 ) }
    dend_54 { pt3dadd( -59.938, 26.5372, 43.5454, 1.11 ) }
    dend_54 { pt3dadd( -60.7199, 27.1681, 43.8058, 0.29 ) }
    dend_54 { pt3dadd( -61.796, 27.9627, 44.1422, 0.37 ) }
    dend_54 { pt3dadd( -62.9035, 28.6844, 44.448, 0.29 ) }
    dend_54 { pt3dadd( -63.8624, 29.2474, 44.6977, 1.33 ) }
    dend_54 { pt3dadd( -65.1651, 30.0342, 45.0411, 0.44 ) }
    dend_54 { pt3dadd( -66.2952, 30.7908, 45.3669, 0.44 ) }
    dend_54 { pt3dadd( -67.1092, 31.419, 45.6103, 1.03 ) }
    dend_54 { pt3dadd( -68.2839, 32.408, 45.9661, 1.84 ) }
    dend_54 { pt3dadd( -69.1549, 33.1267, 46.2202, 1.92 ) }
    dend_54 { pt3dadd( -71.0912, 34.672, 46.8983, 0.44 ) }
    dend_54 { pt3dadd( -71.8145, 35.2618, 47.1972, 0.44 ) }
    dend_54 { pt3dadd( -72.4556, 35.8095, 47.5048, 0.44 ) }
    dend_54 { pt3dadd( -73.2179, 36.4869, 47.9106, 0.44 ) }
    dend_54 { pt3dadd( -74.0253, 37.2466, 48.4177, 0.59 ) }
    dend_54 { pt3dadd( -75.0354, 38.213, 49.0902, 1.11 ) }
    dend_54 { pt3dadd( -76.3161, 39.4078, 49.9532, 0.44 ) }
    dend_54 { pt3dadd( -77.1687, 40.1658, 50.4852, 0.44 ) }
    dend_54 { pt3dadd( -77.869, 40.7807, 50.9058, 0.29 ) }
    dend_54 { pt3dadd( -78.9061, 41.6807, 51.4543, 0.66 ) }
    dend_54 { pt3dadd( -80.1282, 42.698, 51.9859, 0.88 ) }
    dend_54 { pt3dadd( -80.7987, 43.1886, 52.2021, 1.62 ) }
    dend_54 { pt3dadd( -81.7981, 43.7757, 52.4361, 2.43 ) }
    dend_54 { pt3dadd( -82.2428, 43.9845, 52.5153, 2.43 ) }
    dend_54 { pt3dadd( -83.8911, 44.6014, 52.7885, 0.74 ) }
    dend_54 { pt3dadd( -85.3151, 45.0722, 53.049, 0.29 ) }
    dend_54 { pt3dadd( -86.3094, 45.4024, 53.261, 0.29 ) }
    dend_54 { pt3dadd( -87.5433, 45.8416, 53.546, 0.59 ) }
    dend_54 { pt3dadd( -88.8859, 46.3504, 53.8306, 0.29 ) }
    dend_54 { pt3dadd( -90.1022, 46.8396, 54.0365, 0.96 ) }
    dend_54 { pt3dadd( -91.4404, 47.4375, 54.1422, 0.22 ) }
    dend_54 { pt3dadd( -92.3487, 47.8723, 54.1144, 1.03 ) }
    dend_54 { pt3dadd( -93.8108, 48.6065, 53.9143, 0.22 ) }
    dend_54 { pt3dadd( -95.0188, 49.2274, 53.6094, 0.22 ) }
    dend_54 { pt3dadd( -95.7549, 49.5876, 53.3294, 0.88 ) }
    dend_54 { pt3dadd( -97.379, 50.2973, 52.5742, 0.37 ) }
    dend_54 { pt3dadd( -98.3482, 50.6521, 52.0993, 1.11 ) }
    dend_54 { pt3dadd( -99.1164, 50.9181, 51.7351, 1.03 ) }
    dend_54 { pt3dadd( -100.657, 51.4873, 51.058, 0.29 ) }
    dend_54 { pt3dadd( -101.878, 51.9936, 50.573, 0.22 ) }
    dend_54 { pt3dadd( -102.694, 52.3857, 50.2532, 0.81 ) }
    dend_54 { pt3dadd( -103.59, 52.9322, 49.9367, 1.25 ) }
    dend_54 { pt3dadd( -105.316, 54.4532, 49.4924, 0.37 ) }
    dend_54 { pt3dadd( -105.98, 55.2966, 49.4797, 0.37 ) }
    dend_54 { pt3dadd( -106.42, 56.0633, 49.6557, 0.37 ) }
    dend_54 { pt3dadd( -106.691, 56.6394, 49.8957, 0.74 ) }
    dend_54 { pt3dadd( -107.187, 57.8844, 50.592, 1.47 ) }
    dend_54 { pt3dadd( -107.802, 59.639, 51.7305, 0.59 ) }
    dend_54 { pt3dadd( -108.255, 60.9906, 52.7033, 0.37 ) }
    dend_54 { pt3dadd( -108.584, 61.9422, 53.3944, 0.29 ) }
    dend_54 { pt3dadd( -108.999, 63.1216, 54.2169, 0.66 ) }
    dend_54 { pt3dadd( -109.491, 64.5058, 55.0979, 0.22 ) }
    dend_54 { pt3dadd( -109.764, 65.3576, 55.5465, 0.22 ) }
    dend_54 { pt3dadd( -110.004, 66.3809, 55.9554, 0.22 ) }
    dend_54 { pt3dadd( -110.05, 66.8949, 56.083, 0.52 ) }
    dend_54 { pt3dadd( -109.945, 67.8428, 56.1949, 1.03 ) }
    dend_54 { pt3dadd( -109.757, 68.5584, 56.2154, 0.37 ) }
    dend_54 { pt3dadd( -109.38, 69.5877, 56.1955, 0.29 ) }
    dend_54 { pt3dadd( -108.958, 70.6007, 56.2059, 0.44 ) }
    dend_54 { pt3dadd( -108.559, 71.6212, 56.2379, 0.52 ) }
    dend_54 { pt3dadd( -107.862, 73.732, 56.3375, 0.22 ) }
    dend_54 { pt3dadd( -107.683, 74.4052, 56.3782, 0.44 ) }
    dend_54 { pt3dadd( -107.526, 75.3267, 56.4229, 1.03 ) }
    dend_54 { pt3dadd( -107.44, 76.7401, 56.4927, 0.52 ) }
    dend_54 { pt3dadd( -107.493, 78.2031, 56.564, 0.22 ) }
    dend_54 { pt3dadd( -107.602, 79.0753, 56.6181, 0.66 ) }
    dend_54 { pt3dadd( -107.764, 79.7983, 56.6654, 0.44 ) }
    dend_54 { pt3dadd( -108.129, 81.2024, 56.7488, 0.22 ) }
    dend_54 { pt3dadd( -108.459, 82.4, 56.8112, 0.22 ) }
    dend_54 { pt3dadd( -108.673, 83.2635, 56.8442, 0.37 ) }
    dend_54 { pt3dadd( -108.848, 84.0755, 56.902, 0.96 ) }
    dend_54 { pt3dadd( -109.045, 85.0103, 57.0147, 0.59 ) }
    dend_54 { pt3dadd( -109.341, 86.5286, 57.254, 0.29 ) }
    dend_54 { pt3dadd( -109.459, 87.1636, 57.3881, 0.29 ) }
    dend_54 { pt3dadd( -109.675, 88.2904, 57.6391, 0.88 ) }
    dend_54 { pt3dadd( -109.998, 89.7872, 58.0282, 0.22 ) }
    dend_54 { pt3dadd( -110.21, 90.6524, 58.2655, 0.52 ) }
    dend_54 { pt3dadd( -110.554, 91.8898, 58.6282, 0.29 ) }
    dend_54 { pt3dadd( -110.855, 92.7836, 58.8977, 0.88 ) }
    dend_54 { pt3dadd( -111.271, 93.7976, 59.1744, 1.47 ) }
    dend_54 { pt3dadd( -112.254, 95.7105, 59.7372, 0.15 ) }
    dend_54 { pt3dadd( -112.774, 96.5882, 60.0136, 0.15 ) }
    dend_54 { pt3dadd( -113.129, 97.1108, 60.1865, 0.81 ) }
    dend_54 { pt3dadd( -113.68, 97.8075, 60.4591, 1.11 ) }
    dend_54 { pt3dadd( -114.975, 99.2041, 61.0967, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_54 { pt3dadd( -116.195, 100.321, 61.6926, 0.22 ) }
    dend_54 { pt3dadd( -116.613, 100.65, 61.8878, 0.22 ) }
    dend_54 { pt3dadd( -117.203, 101.113, 62.1588, 0.88 ) }
    dend_54 { pt3dadd( -117.946, 101.709, 62.4777, 0.88 ) }
    dend_54 { pt3dadd( -119.196, 102.736, 62.9499, 0.22 ) }
    dend_54 { pt3dadd( -119.889, 103.339, 63.1872, 0.52 ) }
    dend_54 { pt3dadd( -120.257, 103.69, 63.3025, 1.03 ) }
    dend_54 { pt3dadd( -121.567, 105.023, 63.7203, 0.44 ) }
    dend_54 { pt3dadd( -122.227, 105.743, 63.9321, 0.22 ) }
    dend_54 { pt3dadd( -122.859, 106.493, 64.1208, 0.44 ) }
    dend_54 { pt3dadd( -124.018, 108.02, 64.4271, 0.22 ) }
    dend_54 { pt3dadd( -124.538, 108.772, 64.5316, 0.74 ) }
    dend_54 { pt3dadd( -124.963, 109.484, 64.5609, 1.11 ) }
    dend_54 { pt3dadd( -125.51, 110.773, 64.4163, 0.22 ) }
    dend_54 { pt3dadd( -125.777, 112.062, 64.046, 0.29 ) }
    dend_54 { pt3dadd( -125.8, 113.19, 63.5406, 0.22 ) }
    dend_54 { pt3dadd( -125.657, 114.454, 62.7707, 0.37 ) }
    dend_54 { pt3dadd( -125.373, 115.726, 61.8803, 0.29 ) }
    dend_54 { pt3dadd( -124.949, 116.931, 60.9597, 0.22 ) }
    dend_54 { pt3dadd( -124.551, 117.773, 60.2821, 0.88 ) }
    dend_54 { pt3dadd( -124.046, 118.728, 59.5462, 0.22 ) }
    dend_54 { pt3dadd( -123.447, 119.867, 58.7633, 0.22 ) }
    dend_54 { pt3dadd( -122.966, 120.871, 58.1807, 0.22 ) }
    dend_54 { pt3dadd( -122.602, 121.707, 57.7825, 0.22 ) }
    dend_54 { pt3dadd( -122.331, 122.386, 57.5266, 1.18 ) }
    dend_54 { pt3dadd( -121.76, 123.861, 57.0649, 0.15 ) }
    dend_54 { pt3dadd( -121.446, 124.682, 56.8714, 0.29 ) }
    dend_54 { pt3dadd( -121.14, 125.583, 56.7442, 0.07 ) }
    dend_54 { pt3dadd( -120.913, 126.497, 56.6525, 0.74 ) }
    dend_54 { pt3dadd( -120.849, 126.861, 56.6236, 0.74 ) }
    // Section: dend_51, id: dend_51, parent: dend_45 (entry count 30/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 22.0236, -45.1279, -10.7873, 0.88 ) }
    dend_51 { pt3dadd( 21.1848, -47.1894, -11.3644, 0.88 ) }
    dend_51 { pt3dadd( 20.4514, -48.766, -11.8954, 0.74 ) }
    dend_51 { pt3dadd( 19.7773, -50.0327, -12.2993, 0.88 ) }
    dend_51 { pt3dadd( 19.0452, -51.2362, -12.664, 1.18 ) }
    dend_51 { pt3dadd( 18.4304, -52.1592, -12.9417, 0.88 ) }
    dend_51 { pt3dadd( 17.8264, -53.0599, -13.1998, 0.74 ) }
    dend_51 { pt3dadd( 17.1292, -54.0367, -13.4866, 0.96 ) }
    dend_51 { pt3dadd( 16.4779, -54.9747, -13.7044, 0.81 ) }
    dend_51 { pt3dadd( 16.0087, -55.772, -13.8239, 0.66 ) }
    dend_51 { pt3dadd( 15.5376, -56.8168, -13.9355, 0.88 ) }
    dend_51 { pt3dadd( 15.1522, -57.845, -14.0468, 0.88 ) }
    dend_51 { pt3dadd( 14.6755, -59.2986, -14.2193, 0.88 ) }
    dend_51 { pt3dadd( 14.4989, -59.9518, -14.3106, 0.74 ) }
    dend_51 { pt3dadd( 14.1712, -61.4225, -14.596, 0.59 ) }
    dend_51 { pt3dadd( 13.9541, -62.5359, -14.8476, 0.59 ) }
    dend_51 { pt3dadd( 13.717, -63.5292, -15.1034, 1.03 ) }
    dend_51 { pt3dadd( 13.3584, -64.6635, -15.467, 1.03 ) }
    dend_51 { pt3dadd( 12.8752, -65.9136, -15.9468, 0.74 ) }
    dend_51 { pt3dadd( 12.5213, -66.7706, -16.2865, 0.74 ) }
    dend_51 { pt3dadd( 12.1436, -67.6373, -16.6401, 0.81 ) }
    dend_51 { pt3dadd( 11.559, -68.9074, -17.1678, 0.66 ) }
    dend_51 { pt3dadd( 11.0703, -69.8817, -17.5425, 0.74 ) }
    dend_51 { pt3dadd( 10.5168, -70.9133, -17.8651, 0.88 ) }
    dend_51 { pt3dadd( 10.0939, -71.6417, -18.0457, 1.25 ) }
    dend_51 { pt3dadd( 9.67887, -72.3335, -18.1304, 1.25 ) }
    dend_51 { pt3dadd( 9.03794, -73.4404, -18.1381, 0.88 ) }
    dend_51 { pt3dadd( 8.49759, -74.5552, -17.9967, 0.81 ) }
    dend_51 { pt3dadd( 8.04578, -75.6054, -17.6878, 0.88 ) }
    dend_51 { pt3dadd( 7.76756, -76.3061, -17.3673, 0.88 ) }
    dend_51 { pt3dadd( 7.36949, -77.4345, -16.6966, 0.59 ) }
    dend_51 { pt3dadd( 7.21757, -77.9774, -16.3115, 1.03 ) }
    dend_51 { pt3dadd( 6.98282, -79.1718, -15.3701, 0.59 ) }
    dend_51 { pt3dadd( 6.84187, -80.2025, -14.5061, 0.81 ) }
    dend_51 { pt3dadd( 6.71795, -81.1347, -13.7165, 1.11 ) }
    dend_51 { pt3dadd( 6.56999, -82.3078, -12.7359, 0.66 ) }
    dend_51 { pt3dadd( 6.45257, -83.4541, -11.7959, 0.66 ) }
    dend_51 { pt3dadd( 6.37574, -84.5569, -10.8928, 0.59 ) }
    dend_51 { pt3dadd( 6.34911, -85.5269, -10.1261, 0.44 ) }
    dend_51 { pt3dadd( 6.37917, -86.3346, -9.54781, 0.59 ) }
    dend_51 { pt3dadd( 6.46186, -87.0682, -9.07983, 0.81 ) }
    dend_51 { pt3dadd( 6.71479, -88.5514, -8.29373, 0.59 ) }
    dend_51 { pt3dadd( 6.97139, -89.6548, -7.85888, 0.74 ) }
    dend_51 { pt3dadd( 7.17086, -90.2776, -7.67636, 0.81 ) }
    dend_51 { pt3dadd( 7.49681, -91.0041, -7.51199, 0.74 ) }
    dend_51 { pt3dadd( 8.04597, -91.9196, -7.29299, 0.88 ) }
    dend_51 { pt3dadd( 8.90544, -93.0737, -6.96583, 0.52 ) }
    dend_51 { pt3dadd( 9.62379, -93.9404, -6.6815, 0.59 ) }
    dend_51 { pt3dadd( 10.1753, -94.6088, -6.38827, 0.59 ) }
    dend_51 { pt3dadd( 10.8303, -95.3984, -5.91958, 0.81 ) }
    dend_51 { pt3dadd( 11.596, -96.3256, -5.24957, 0.66 ) }
    dend_51 { pt3dadd( 12.2377, -97.1737, -4.56858, 0.88 ) }
    dend_51 { pt3dadd( 12.7084, -97.8942, -3.98431, 0.96 ) }
    dend_51 { pt3dadd( 13.2902, -99.0089, -3.15001, 0.66 ) }
    dend_51 { pt3dadd( 13.7202, -100.116, -2.46889, 0.88 ) }
    dend_51 { pt3dadd( 14.0457, -101.25, -1.91417, 0.66 ) }
    dend_51 { pt3dadd( 14.3676, -102.703, -1.39541, 0.88 ) }
    dend_51 { pt3dadd( 14.6325, -104.12, -1.03183, 1.18 ) }
    dend_51 { pt3dadd( 14.8301, -105.309, -0.851259, 1.33 ) }
    dend_51 { pt3dadd( 15.0681, -107.071, -0.765959, 0.59 ) }
    dend_51 { pt3dadd( 15.1575, -108.092, -0.794338, 0.59 ) }
    dend_51 { pt3dadd( 15.1829, -109.16, -0.876792, 0.88 ) }
    dend_51 { pt3dadd( 15.1312, -109.975, -0.940653, 0.88 ) }
    dend_51 { pt3dadd( 14.924, -111.364, -0.986341, 0.74 ) }
    dend_51 { pt3dadd( 14.6132, -112.892, -0.932353, 0.88 ) }
    dend_51 { pt3dadd( 14.4312, -113.726, -0.824504, 0.66 ) }
    dend_51 { pt3dadd( 14.1673, -114.959, -0.572579, 0.81 ) }
    dend_51 { pt3dadd( 13.7662, -116.623, -0.133743, 0.74 ) }
    dend_51 { pt3dadd( 13.4492, -117.782, 0.206618, 0.66 ) }
    dend_51 { pt3dadd( 13.141, -118.799, 0.535519, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_51 { pt3dadd( 12.8067, -119.874, 0.855584, 0.59 ) }
    dend_51 { pt3dadd( 12.5192, -120.852, 1.06786, 1.03 ) }
    dend_51 { pt3dadd( 12.1598, -122.27, 1.26624, 0.88 ) }
    dend_51 { pt3dadd( 11.9905, -123.089, 1.31906, 1.03 ) }
    dend_51 { pt3dadd( 11.8056, -124.152, 1.32742, 1.03 ) }
    dend_51 { pt3dadd( 11.6325, -125.614, 1.28532, 0.74 ) }
    dend_51 { pt3dadd( 11.5589, -127.202, 1.18207, 0.96 ) }
    dend_51 { pt3dadd( 11.631, -128.518, 1.06756, 0.81 ) }
    dend_51 { pt3dadd( 11.8678, -129.912, 0.918522, 0.66 ) }
    dend_51 { pt3dadd( 12.1577, -130.923, 0.82835, 0.66 ) }
    dend_51 { pt3dadd( 12.7184, -132.234, 0.762078, 0.74 ) }
    dend_51 { pt3dadd( 13.1406, -132.938, 0.779056, 1.11 ) }
    dend_51 { pt3dadd( 13.6183, -133.542, 0.853665, 0.88 ) }
    dend_51 { pt3dadd( 14.2729, -134.201, 1.00035, 1.03 ) }
    dend_51 { pt3dadd( 15.5742, -135.312, 1.39283, 0.74 ) }
    dend_51 { pt3dadd( 16.7473, -136.223, 1.81719, 0.74 ) }
    dend_51 { pt3dadd( 17.8334, -137.048, 2.26636, 0.88 ) }
    dend_51 { pt3dadd( 18.7224, -137.766, 2.69385, 1.03 ) }
    dend_51 { pt3dadd( 19.5608, -138.535, 3.17056, 0.66 ) }
    dend_51 { pt3dadd( 20.1864, -139.276, 3.62332, 0.81 ) }
    dend_51 { pt3dadd( 20.394, -139.667, 3.84379, 0.81 ) }
    dend_51 { pt3dadd( 20.7784, -141.042, 4.55353, 0.59 ) }
    dend_51 { pt3dadd( 20.9339, -142.303, 5.13393, 1.11 ) }
    dend_51 { pt3dadd( 20.9916, -143.382, 5.61112, 0.81 ) }
    dend_51 { pt3dadd( 21.0467, -144.792, 6.21724, 0.59 ) }
    dend_51 { pt3dadd( 21.1203, -146.007, 6.7186, 0.59 ) }
    dend_51 { pt3dadd( 21.1961, -146.883, 7.08494, 0.88 ) }
    dend_51 { pt3dadd( 21.314, -147.912, 7.49847, 1.33 ) }
    dend_51 { pt3dadd( 21.5534, -149.632, 8.17169, 0.74 ) }
    dend_51 { pt3dadd( 21.7462, -150.85, 8.68048, 0.74 ) }
    dend_51 { pt3dadd( 21.9171, -151.719, 9.06627, 0.52 ) }
    dend_51 { pt3dadd( 22.1488, -152.656, 9.51961, 1.11 ) }
    dend_51 { pt3dadd( 22.3995, -153.562, 10.0031, 0.88 ) }
    dend_51 { pt3dadd( 22.7257, -154.755, 10.7023, 0.59 ) }
    dend_51 { pt3dadd( 22.9292, -155.699, 11.2898, 0.59 ) }
    dend_51 { pt3dadd( 23.0985, -157.001, 12.1698, 0.88 ) }
    dend_51 { pt3dadd( 23.1074, -158.102, 12.9536, 0.88 ) }
    dend_51 { pt3dadd( 23.0306, -158.703, 13.372, 1.18 ) }
    dend_51 { pt3dadd( 22.8284, -159.464, 13.8829, 1.25 ) }
    dend_51 { pt3dadd( 22.4205, -160.536, 14.5262, 0.96 ) }
    dend_51 { pt3dadd( 21.9573, -161.516, 15.0624, 1.47 ) }
    dend_51 { pt3dadd( 21.2787, -162.761, 15.7366, 1.4 ) }
    dend_51 { pt3dadd( 20.7891, -163.667, 16.2499, 1.4 ) }
    dend_51 { pt3dadd( 20.2209, -164.839, 16.9321, 0.74 ) }
    dend_51 { pt3dadd( 19.759, -165.934, 17.5909, 0.59 ) }
    dend_51 { pt3dadd( 19.3818, -166.96, 18.216, 1.25 ) }
    dend_51 { pt3dadd( 18.9692, -168.167, 18.9865, 0.81 ) }
    dend_51 { pt3dadd( 18.4767, -169.688, 19.9987, 0.66 ) }
    dend_51 { pt3dadd( 18.1825, -170.567, 20.5882, 0.74 ) }
    dend_51 { pt3dadd( 17.9014, -171.393, 21.0879, 1.4 ) }
    dend_51 { pt3dadd( 17.5827, -172.486, 21.6438, 1.03 ) }
    dend_51 { pt3dadd( 17.3823, -173.697, 22.0905, 0.66 ) }
    dend_51 { pt3dadd( 17.3713, -174.839, 22.3849, 0.52 ) }
    dend_51 { pt3dadd( 17.5241, -175.951, 22.5829, 0.88 ) }
    dend_51 { pt3dadd( 17.8741, -177.401, 22.8025, 1.47 ) }
    dend_51 { pt3dadd( 18.3354, -178.811, 23.0282, 0.96 ) }
    dend_51 { pt3dadd( 19.003, -180.434, 23.3322, 0.81 ) }
    dend_51 { pt3dadd( 19.6985, -181.85, 23.685, 0.66 ) }
    dend_51 { pt3dadd( 20.2648, -182.841, 24.073, 0.66 ) }
    dend_51 { pt3dadd( 20.8328, -183.738, 24.621, 0.59 ) }
    dend_51 { pt3dadd( 21.3861, -184.618, 25.3925, 0.59 ) }
    dend_51 { pt3dadd( 21.8081, -185.326, 26.1897, 0.96 ) }
    dend_51 { pt3dadd( 22.2576, -186.126, 27.2803, 1.18 ) }
    dend_51 { pt3dadd( 22.7576, -186.957, 28.5382, 0.88 ) }
    dend_51 { pt3dadd( 23.18, -187.647, 29.5991, 0.74 ) }
    dend_51 { pt3dadd( 23.6162, -188.343, 30.6573, 0.88 ) }
    dend_51 { pt3dadd( 23.9916, -188.964, 31.5621, 1.03 ) }
    dend_51 { pt3dadd( 24.5096, -189.867, 32.832, 0.74 ) }
    dend_51 { pt3dadd( 24.9924, -190.785, 34.0349, 0.96 ) }
    dend_51 { pt3dadd( 25.3443, -191.525, 34.9563, 0.66 ) }
    dend_51 { pt3dadd( 25.5123, -191.891, 35.4262, 0.66 ) }
    dend_51 { pt3dadd( 25.9887, -192.889, 36.8463, 1.03 ) }
    dend_51 { pt3dadd( 26.2651, -193.471, 37.8062, 1.25 ) }
    dend_51 { pt3dadd( 26.5758, -194.126, 39.0513, 0.96 ) }
    dend_51 { pt3dadd( 26.862, -194.736, 40.3525, 0.81 ) }
    dend_51 { pt3dadd( 27.0221, -195.039, 41.0209, 0.81 ) }
    dend_51 { pt3dadd( 27.1801, -195.281, 41.4928, 0.81 ) }
    dend_51 { pt3dadd( 27.5738, -195.742, 42.2236, 0.81 ) }
    dend_51 { pt3dadd( 28.238, -196.37, 43.0305, 0.59 ) }
    dend_51 { pt3dadd( 28.8923, -196.906, 43.5934, 0.96 ) }
    dend_51 { pt3dadd( 29.6339, -197.464, 44.0973, 0.66 ) }
    dend_51 { pt3dadd( 30.7113, -198.243, 44.7295, 0.29 ) }
    dend_51 { pt3dadd( 31.4623, -198.804, 45.1384, 0.81 ) }
    dend_51 { pt3dadd( 32.2565, -199.443, 45.5837, 1.03 ) }
    dend_51 { pt3dadd( 33.1374, -200.253, 46.1833, 0.88 ) }
    dend_51 { pt3dadd( 33.7418, -200.919, 46.703, 0.88 ) }
    dend_51 { pt3dadd( 34.6304, -202.346, 47.7692, 0.44 ) }
    dend_51 { pt3dadd( 34.899, -203.128, 48.3021, 0.66 ) }
    dend_51 { pt3dadd( 35.0953, -204.432, 49.0882, 0.44 ) }
    dend_51 { pt3dadd( 35.0873, -205.964, 49.9238, 0.88 ) }
    dend_51 { pt3dadd( 34.9699, -207.044, 50.511, 1.25 ) }
    dend_51 { pt3dadd( 34.6384, -208.952, 51.6134, 0.74 ) }
    dend_51 { pt3dadd( 34.3647, -210.201, 52.3627, 0.81 ) }
    dend_51 { pt3dadd( 34.0953, -211.372, 53.0888, 1.03 ) }
    dend_51 { pt3dadd( 33.7593, -212.604, 53.8939, 0.81 ) }
    dend_51 { pt3dadd( 33.3727, -213.764, 54.7156, 0.66 ) }
    dend_51 { pt3dadd( 32.8115, -215.051, 55.7765, 1.11 ) }
    dend_51 { pt3dadd( 32.3536, -215.856, 56.6006, 1.4 ) }
    dend_51 { pt3dadd( 31.6608, -216.837, 57.7658, 0.44 ) }
    dend_51 { pt3dadd( 30.7634, -217.924, 59.2243, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_51 { pt3dadd( 30.2508, -218.507, 60.0826, 0.81 ) }
    dend_51 { pt3dadd( 29.5407, -219.238, 61.2505, 0.66 ) }
    dend_51 { pt3dadd( 28.8872, -219.889, 62.3413, 1.25 ) }
    dend_51 { pt3dadd( 28.3914, -220.419, 63.2448, 1.77 ) }
    dend_51 { pt3dadd( 27.7869, -221.205, 64.5723, 1.25 ) }
    dend_51 { pt3dadd( 27.2128, -222.21, 66.2243, 0.59 ) }
    dend_51 { pt3dadd( 26.7706, -223.258, 68.0149, 0.44 ) }
    dend_51 { pt3dadd( 26.6453, -223.751, 68.9141, 0.88 ) }
    dend_51 { pt3dadd( 26.6317, -224.425, 70.2029, 0.44 ) }
    dend_51 { pt3dadd( 26.8002, -224.878, 71.1634, 0.44 ) }
    dend_51 { pt3dadd( 27.1918, -225.24, 72.0547, 0.59 ) }
    dend_51 { pt3dadd( 28.0458, -225.71, 73.3185, 0.37 ) }
    dend_51 { pt3dadd( 28.8317, -226.074, 74.3478, 0.52 ) }
    dend_51 { pt3dadd( 29.5535, -226.438, 75.3418, 0.29 ) }
    dend_51 { pt3dadd( 30.1926, -226.835, 76.2978, 0.81 ) }
    dend_51 { pt3dadd( 30.893, -227.488, 77.4834, 1.77 ) }
    dend_51 { pt3dadd( 31.6359, -228.572, 79.0538, 0.37 ) }
    dend_51 { pt3dadd( 32.072, -229.624, 80.3447, 0.52 ) }
    dend_51 { pt3dadd( 32.3392, -230.764, 81.6144, 1.18 ) }
    dend_51 { pt3dadd( 32.407, -231.6, 82.4808, 1.18 ) }
    dend_51 { pt3dadd( 32.3137, -232.912, 83.7146, 0.37 ) }
    dend_51 { pt3dadd( 32.0595, -233.96, 84.6341, 0.37 ) }
    dend_51 { pt3dadd( 31.7383, -234.786, 85.3443, 1.03 ) }
    dend_51 { pt3dadd( 31.4707, -235.352, 85.8571, 1.03 ) }
    dend_51 { pt3dadd( 31.0434, -236.146, 86.6264, 0.44 ) }
    dend_51 { pt3dadd( 30.5029, -237.089, 87.5384, 0.44 ) }
    dend_51 { pt3dadd( 30.0123, -237.924, 88.3378, 0.37 ) }
    dend_51 { pt3dadd( 29.4275, -239.005, 89.2603, 0.88 ) }
    dend_51 { pt3dadd( 28.9276, -240.003, 89.9429, 1.7 ) }
    dend_51 { pt3dadd( 28.5946, -240.716, 90.2887, 1.03 ) }
    dend_51 { pt3dadd( 27.8142, -242.454, 90.7776, 0.29 ) }
    dend_51 { pt3dadd( 27.5712, -243.02, 90.8208, 1.18 ) }
    dend_51 { pt3dadd( 27.1876, -243.904, 90.7366, 1.77 ) }
    dend_51 { pt3dadd( 26.481, -245.49, 90.3911, 0.15 ) }
    dend_51 { pt3dadd( 25.9752, -246.602, 90.0504, 0.74 ) }
    dend_51 { pt3dadd( 25.5176, -247.604, 89.7012, 0.22 ) }
    dend_51 { pt3dadd( 25.2005, -248.32, 89.4116, 0.52 ) }
    dend_51 { pt3dadd( 24.7487, -249.35, 88.9925, 1.18 ) }
    dend_51 { pt3dadd( 24.3874, -250.195, 88.6497, 0.22 ) }
    dend_51 { pt3dadd( 24.1007, -250.925, 88.3984, 0.15 ) }
    dend_51 { pt3dadd( 23.8486, -251.647, 88.1744, 0.81 ) }
    dend_51 { pt3dadd( 23.5148, -252.682, 87.8396, 0.15 ) }
    dend_51 { pt3dadd( 23.2777, -253.4, 87.6262, 0.74 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 43/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 22.0236, -45.1279, -10.7873, 0.96 ) }
    dend_46 { pt3dadd( 22.6411, -46.8153, -11.223, 0.96 ) }
    dend_46 { pt3dadd( 22.9335, -47.8486, -11.4812, 0.96 ) }
    dend_46 { pt3dadd( 23.1873, -48.8973, -11.7263, 1.11 ) }
    dend_46 { pt3dadd( 23.4793, -50.11, -12.0305, 1.11 ) }
    dend_46 { pt3dadd( 23.9121, -51.7166, -12.4347, 1.33 ) }
    dend_46 { pt3dadd( 24.4018, -53.2882, -12.8524, 1.11 ) }
    dend_46 { pt3dadd( 24.7861, -54.4254, -13.2201, 1.11 ) }
    dend_46 { pt3dadd( 25.1535, -55.3326, -13.55, 1.18 ) }
    dend_46 { pt3dadd( 25.8123, -56.5797, -14.0315, 1.18 ) }
    dend_46 { pt3dadd( 26.5158, -57.5963, -14.4638, 1.18 ) }
    dend_46 { pt3dadd( 27.2356, -58.4683, -14.864, 1.11 ) }
    dend_46 { pt3dadd( 28.1835, -59.5403, -15.3161, 1.4 ) }
    dend_46 { pt3dadd( 29.1373, -60.6696, -15.6996, 1.25 ) }
    dend_46 { pt3dadd( 29.8969, -61.7042, -15.8945, 1.18 ) }
    dend_46 { pt3dadd( 30.6073, -62.9754, -15.8916, 1.18 ) }
    dend_46 { pt3dadd( 31.0278, -64.0011, -15.7517, 1.11 ) }
    dend_46 { pt3dadd( 31.5028, -65.5432, -15.3518, 1.33 ) }
    dend_46 { pt3dadd( 31.8692, -66.9528, -14.898, 1.18 ) }
    dend_46 { pt3dadd( 32.2411, -68.4021, -14.3606, 1.33 ) }
    dend_46 { pt3dadd( 32.5803, -69.6996, -13.8725, 1.03 ) }
    dend_46 { pt3dadd( 32.8322, -70.5903, -13.5524, 1.11 ) }
    dend_46 { pt3dadd( 33.1625, -71.5579, -13.2801, 1.55 ) }
    dend_46 { pt3dadd( 33.6013, -72.6891, -13.087, 1.47 ) }
    dend_46 { pt3dadd( 34.2517, -74.274, -12.9499, 1.18 ) }
    dend_46 { pt3dadd( 34.6953, -75.3739, -12.9159, 1.18 ) }
    dend_46 { pt3dadd( 35.0109, -76.244, -12.8726, 1.18 ) }
    dend_46 { pt3dadd( 35.3759, -77.4468, -12.7088, 1.11 ) }
    dend_46 { pt3dadd( 35.6217, -78.3694, -12.5742, 1.11 ) }
    dend_46 { pt3dadd( 35.8838, -79.5744, -12.3509, 1.62 ) }
    dend_46 { pt3dadd( 36.0425, -80.4382, -12.1814, 1.03 ) }
    dend_46 { pt3dadd( 36.2896, -81.7863, -11.8233, 1.18 ) }
    dend_46 { pt3dadd( 36.6136, -83.6133, -11.1341, 1.92 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 76/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -36.4607, -81.4222, -37.1273, 0.66 ) }
    dend_44 { pt3dadd( -36.957, -83.1049, -37.6782, 0.66 ) }
    dend_44 { pt3dadd( -37.3182, -84.0241, -38.0165, 0.88 ) }
    dend_44 { pt3dadd( -37.7726, -84.9501, -38.3385, 0.66 ) }
    dend_44 { pt3dadd( -38.339, -86.0377, -38.6452, 0.44 ) }
    dend_44 { pt3dadd( -38.919, -87.1813, -38.8538, 0.44 ) }
    dend_44 { pt3dadd( -39.3924, -88.1319, -38.9429, 0.74 ) }
    dend_44 { pt3dadd( -39.9543, -89.2234, -38.8559, 0.81 ) }
    dend_44 { pt3dadd( -40.5492, -90.5475, -38.5493, 0.59 ) }
    dend_44 { pt3dadd( -40.8825, -91.5089, -38.2236, 0.59 ) }
    dend_44 { pt3dadd( -41.2778, -93.035, -37.5776, 0.29 ) }
    dend_44 { pt3dadd( -41.4531, -93.965, -37.0938, 0.29 ) }
    dend_44 { pt3dadd( -41.5617, -95.1119, -36.4164, 0.22 ) }
    dend_44 { pt3dadd( -41.5731, -96.13, -35.7548, 0.22 ) }
    dend_44 { pt3dadd( -41.5237, -97.266, -35.0031, 0.15 ) }
    dend_44 { pt3dadd( -41.4876, -97.8793, -34.6068, 0.15 ) }
    dend_44 { pt3dadd( -41.4033, -98.8614, -33.9701, 0.15 ) }
    dend_44 { pt3dadd( -41.2929, -99.8863, -33.3214, 0.22 ) }
    dend_44 { pt3dadd( -41.2304, -100.772, -32.7711, 0.22 ) }
    dend_44 { pt3dadd( -42.3939, -110.695, -32.3444, 0.22 ) }
    dend_44 { pt3dadd( -44.8984, -120.374, -32.1281, 0.22 ) }
    dend_44 { pt3dadd( -47.3422, -129.949, -33.6607, 0.22 ) }
    dend_44 { pt3dadd( -47.7558, -139.939, -33.5132, 0.22 ) }
    dend_44 { pt3dadd( -46.4468, -149.725, -31.9272, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_44 { pt3dadd( -46.7734, -159.283, -29.0046, 0.22 ) }
    dend_44 { pt3dadd( -48.1935, -168.947, -26.8566, 0.22 ) }
    dend_44 { pt3dadd( -48.3281, -178.688, -24.6003, 0.22 ) }
    dend_44 { pt3dadd( -48.6874, -188.645, -23.7468, 0.22 ) }
    dend_44 { pt3dadd( -48.0874, -198.264, -21.0789, 0.22 ) }
    dend_44 { pt3dadd( -45.8432, -207.417, -17.7344, 0.22 ) }
    dend_44 { pt3dadd( -42.523, -215.406, -12.7186, 0.22 ) }
    dend_44 { pt3dadd( -38.005, -221.587, -6.28679, 0.22 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 8/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -36.4607, -81.4222, -37.1273, 1.11 ) }
    dend_43 { pt3dadd( -36.8345, -82.2096, -36.9225, 1.11 ) }
    dend_43 { pt3dadd( -37.5755, -83.6106, -36.7902, 0.81 ) }
    dend_43 { pt3dadd( -38.4343, -85.107, -36.8641, 1.11 ) }
    dend_43 { pt3dadd( -39.1172, -86.2608, -37.0264, 1.11 ) }
    dend_43 { pt3dadd( -39.8696, -87.6065, -37.2871, 0.88 ) }
    dend_43 { pt3dadd( -40.5034, -88.8523, -37.5859, 1.11 ) }
    dend_43 { pt3dadd( -41.0541, -90.112, -38.0287, 1.11 ) }
    dend_43 { pt3dadd( -41.4973, -91.3046, -38.5823, 1.11 ) }
    dend_43 { pt3dadd( -41.8292, -92.348, -39.1422, 1.18 ) }
    dend_43 { pt3dadd( -42.1961, -93.8392, -39.9667, 0.96 ) }
    dend_43 { pt3dadd( -42.4276, -95.0434, -40.6169, 1.11 ) }
    dend_43 { pt3dadd( -42.6489, -96.2537, -41.2466, 0.81 ) }
    dend_43 { pt3dadd( -42.8844, -97.3679, -41.7989, 1.11 ) }
    dend_43 { pt3dadd( -43.2398, -98.7623, -42.4721, 1.11 ) }
    dend_43 { pt3dadd( -43.5698, -99.863, -42.9732, 1.4 ) }
    dend_43 { pt3dadd( -43.8025, -100.509, -43.2346, 1.7 ) }
    dend_43 { pt3dadd( -44.2302, -101.583, -43.5526, 1.47 ) }
    dend_43 { pt3dadd( -44.9226, -103.268, -43.8444, 1.47 ) }
    dend_43 { pt3dadd( -45.1654, -103.849, -43.8769, 1.55 ) }
    dend_43 { pt3dadd( -45.7486, -105.28, -43.8618, 1.03 ) }
    dend_43 { pt3dadd( -46.1889, -106.419, -43.8453, 0.88 ) }
    dend_43 { pt3dadd( -46.7454, -107.962, -43.8813, 1.18 ) }
    dend_43 { pt3dadd( -47.1871, -109.255, -43.9695, 0.88 ) }
    dend_43 { pt3dadd( -47.6344, -110.571, -44.1567, 0.96 ) }
    dend_43 { pt3dadd( -48.2235, -112.122, -44.4689, 0.88 ) }
    dend_43 { pt3dadd( -48.8313, -113.5, -44.8233, 0.74 ) }
    dend_43 { pt3dadd( -49.42, -114.771, -45.2055, 0.96 ) }
    dend_43 { pt3dadd( -49.8708, -115.764, -45.5462, 1.03 ) }
    dend_43 { pt3dadd( -50.4272, -117.081, -46.0206, 0.74 ) }
    dend_43 { pt3dadd( -51.059, -118.813, -46.6195, 0.66 ) }
    dend_43 { pt3dadd( -51.3357, -119.627, -46.8522, 0.66 ) }
    dend_43 { pt3dadd( -51.6109, -120.473, -47.0481, 0.74 ) }
    dend_43 { pt3dadd( -51.9022, -121.462, -47.2327, 0.81 ) }
    dend_43 { pt3dadd( -52.1907, -122.483, -47.3957, 0.81 ) }
    dend_43 { pt3dadd( -52.5467, -123.772, -47.587, 0.74 ) }
    dend_43 { pt3dadd( -52.798, -124.84, -47.7553, 0.66 ) }
    dend_43 { pt3dadd( -52.9319, -125.433, -47.8516, 0.66 ) }
    dend_43 { pt3dadd( -53.2477, -126.643, -48.0522, 1.11 ) }
    dend_43 { pt3dadd( -53.7071, -128.076, -48.2779, 0.29 ) }
    dend_43 { pt3dadd( -54.1089, -129.156, -48.4142, 0.29 ) }
    dend_43 { pt3dadd( -56.412, -138.65, -50.5497, 0.29 ) }
    dend_43 { pt3dadd( -57.5318, -147.731, -54.5841, 0.29 ) }
    dend_43 { pt3dadd( -59.6224, -156.137, -59.5806, 0.29 ) }
    dend_43 { pt3dadd( -62.111, -164.162, -65.0041, 0.29 ) }
    dend_43 { pt3dadd( -63.9788, -172.867, -69.5594, 0.29 ) }
    dend_43 { pt3dadd( -63.9616, -181.966, -73.7058, 0.29 ) }
    dend_43 { pt3dadd( -65.4802, -191.115, -77.4467, 0.29 ) }
    dend_43 { pt3dadd( -67.1602, -200.72, -79.6626, 0.29 ) }
    dend_43 { pt3dadd( -70.4825, -210.014, -81.2734, 0.29 ) }
    dend_43 { pt3dadd( -74.974, -218.781, -82.9908, 0.29 ) }
    dend_43 { pt3dadd( -80.2814, -226.723, -85.9524, 0.29 ) }
    dend_43 { pt3dadd( -86.6816, -234.179, -87.8077, 0.29 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 61/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 118.127, 18.9647, -48.9783, 0.15 ) }
    dend_40 { pt3dadd( 126.666, 23.3995, -51.7015, 0.15 ) }
    dend_40 { pt3dadd( 134.169, 27.8331, -56.6059, 0.15 ) }
    dend_40 { pt3dadd( 141.933, 33.2817, -59.7733, 0.15 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 65/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 118.127, 18.9647, -48.9783, 0.15 ) }
    dend_39 { pt3dadd( 127.746, 21.6032, -49.6912, 0.15 ) }
    dend_39 { pt3dadd( 137.323, 24.1992, -48.4466, 0.15 ) }
    dend_39 { pt3dadd( 146.482, 27.7682, -46.612, 0.15 ) }
    dend_39 { pt3dadd( 154.845, 31.9679, -43.0857, 0.15 ) }
    dend_39 { pt3dadd( 162.781, 35.7913, -38.3537, 0.15 ) }
    dend_39 { pt3dadd( 170.401, 40.2193, -33.6279, 0.15 ) }
    dend_39 { pt3dadd( 178.055, 45.2466, -29.6096, 0.15 ) }
    dend_39 { pt3dadd( 185.869, 49.2743, -24.8434, 0.15 ) }
    dend_39 { pt3dadd( 192.725, 53.3321, -18.7998, 0.15 ) }
    dend_39 { pt3dadd( 200.097, 55.9191, -12.5578, 0.15 ) }
    dend_39 { pt3dadd( 208.447, 57.5645, -7.30723, 0.15 ) }
    dend_39 { pt3dadd( 217.292, 59.7765, -3.19807, 0.15 ) }
    dend_39 { pt3dadd( 225.221, 62.4538, 2.27541, 0.15 ) }
    dend_39 { pt3dadd( 233.507, 66.6082, 6.02705, 0.15 ) }
    dend_39 { pt3dadd( 241.02, 71.5762, 10.3717, 0.15 ) }
    dend_39 { pt3dadd( 249.198, 74.8398, 15.1113, 0.15 ) }
    // Section: dend_37, id: dend_37, parent: dend_31 (entry count 82/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 40.0486, -24.4869, -39.8856, 0.22 ) }
    dend_37 { pt3dadd( 38.9191, -24.6425, -40.7709, 0.22 ) }
    dend_37 { pt3dadd( 38.1532, -24.7971, -41.4002, 0.22 ) }
    dend_37 { pt3dadd( 37.342, -25.0168, -42.1082, 0.29 ) }
    dend_37 { pt3dadd( 36.4819, -25.3395, -42.9174, 0.22 ) }
    dend_37 { pt3dadd( 35.991, -25.5777, -43.4051, 0.22 ) }
    dend_37 { pt3dadd( 35.6178, -25.8137, -43.7796, 0.22 ) }
    dend_37 { pt3dadd( 35.3486, -26.0799, -44.0264, 0.22 ) }
    dend_37 { pt3dadd( 35.1161, -26.4263, -44.2586, 0.22 ) }
    dend_37 { pt3dadd( 34.9085, -26.9622, -44.5462, 0.22 ) }
    dend_37 { pt3dadd( 34.8228, -27.3762, -44.7248, 0.22 ) }
    dend_37 { pt3dadd( 34.6811, -28.2222, -44.9991, 0.22 ) }
    dend_37 { pt3dadd( 34.5262, -29.0419, -45.2027, 0.22 ) }
    dend_37 { pt3dadd( 28.2579, -33.0693, -51.8726, 0.22 ) }
    dend_37 { pt3dadd( 21.5442, -37.88, -57.5103, 0.22 ) }
    dend_37 { pt3dadd( 14.4821, -43.2035, -62.1779, 0.22 ) }
    dend_37 { pt3dadd( 7.07914, -48.0633, -66.8232, 0.22 ) }
    dend_37 { pt3dadd( 0.64651, -54.4323, -71.0725, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_37 { pt3dadd( -5.20079, -61.2941, -75.3998, 0.22 ) }
    dend_37 { pt3dadd( -11.275, -68.5178, -78.7045, 0.22 ) }
    dend_37 { pt3dadd( -15.9801, -76.0229, -83.3451, 0.22 ) }
    dend_37 { pt3dadd( -19.78, -84.3799, -87.3103, 0.22 ) }
    dend_37 { pt3dadd( -22.5835, -92.589, -92.2853, 0.22 ) }
    dend_37 { pt3dadd( -26.6789, -100.838, -96.1796, 0.22 ) }
    dend_37 { pt3dadd( -31.7971, -109.021, -98.7968, 0.22 ) }
    dend_37 { pt3dadd( -37.9144, -115.884, -102.73, 0.22 ) }
    dend_37 { pt3dadd( -45.0796, -122.438, -105.123, 0.22 ) }
    dend_37 { pt3dadd( -50.7065, -130.199, -107.967, 0.22 ) }
    dend_37 { pt3dadd( -55.3863, -138.751, -110.193, 0.22 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 11/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 40.0486, -24.4869, -39.8856, 0.74 ) }
    dend_32 { pt3dadd( 39.9858, -25.4826, -39.9371, 0.74 ) }
    dend_32 { pt3dadd( 39.7761, -26.4828, -40.0344, 0.59 ) }
    dend_32 { pt3dadd( 39.5679, -27.1915, -40.1171, 0.59 ) }
    dend_32 { pt3dadd( 39.3237, -27.8856, -40.2038, 0.59 ) }
    dend_32 { pt3dadd( 38.9978, -28.8622, -40.3198, 0.66 ) }
    dend_32 { pt3dadd( 38.7609, -29.7218, -40.4385, 0.81 ) }
    dend_32 { pt3dadd( 38.5326, -30.5422, -40.6086, 0.81 ) }
    dend_32 { pt3dadd( 38.3807, -31.2014, -40.784, 1.03 ) }
    dend_32 { pt3dadd( 38.1522, -32.3237, -41.1077, 0.74 ) }
    dend_32 { pt3dadd( 37.9967, -33.4472, -41.4565, 0.74 ) }
    dend_32 { pt3dadd( 37.925, -34.8024, -41.9059, 0.66 ) }
    dend_32 { pt3dadd( 37.9572, -35.9001, -42.2829, 0.66 ) }
    dend_32 { pt3dadd( 38.0789, -36.9099, -42.661, 1.4 ) }
    // Section: dend_23, id: dend_23, parent: dend_15 (entry count 25/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 32.6512, 40.8641, 8.63519, 0.22 ) }
    dend_23 { pt3dadd( 34.3941, 42.0135, 8.11694, 0.22 ) }
    dend_23 { pt3dadd( 34.8904, 42.3269, 7.93838, 0.37 ) }
    dend_23 { pt3dadd( 35.473, 42.6834, 7.69908, 0.66 ) }
    dend_23 { pt3dadd( 36.3035, 43.1606, 7.28503, 0.52 ) }
    dend_23 { pt3dadd( 36.7778, 43.4028, 7.00422, 0.74 ) }
    dend_23 { pt3dadd( 37.7736, 43.8462, 6.3754, 0.59 ) }
    dend_23 { pt3dadd( 38.6694, 44.1811, 5.7629, 0.81 ) }
    dend_23 { pt3dadd( 39.8655, 44.6057, 4.92402, 1.11 ) }
    dend_23 { pt3dadd( 40.9449, 45.0149, 4.15665, 0.29 ) }
    dend_23 { pt3dadd( 41.9658, 45.4753, 3.42398, 0.29 ) }
    dend_23 { pt3dadd( 42.7626, 45.9815, 2.8613, 0.37 ) }
    dend_23 { pt3dadd( 43.5276, 46.627, 2.3376, 0.74 ) }
    dend_23 { pt3dadd( 44.3655, 47.5258, 1.74923, 0.81 ) }
    dend_23 { pt3dadd( 45.1695, 48.5838, 1.13074, 0.74 ) }
    dend_23 { pt3dadd( 45.8199, 49.5995, 0.565806, 1.03 ) }
    dend_23 { pt3dadd( 46.8248, 51.368, -0.47078, 0.44 ) }
    dend_23 { pt3dadd( 47.2448, 52.1634, -1.01876, 0.44 ) }
    dend_23 { pt3dadd( 47.7193, 53.0493, -1.82306, 0.29 ) }
    dend_23 { pt3dadd( 48.0606, 53.5752, -2.55577, 0.29 ) }
    dend_23 { pt3dadd( 48.4682, 53.9889, -3.55639, 0.44 ) }
    dend_23 { pt3dadd( 48.8186, 54.1573, -4.46598, 0.44 ) }
    dend_23 { pt3dadd( 49.1525, 54.1796, -5.3363, 0.44 ) }
    dend_23 { pt3dadd( 49.7221, 54.1827, -6.75073, 0.59 ) }
    dend_23 { pt3dadd( 50.1486, 54.235, -7.77226, 0.59 ) }
    dend_23 { pt3dadd( 50.3194, 54.3189, -8.21384, 0.59 ) }
    dend_23 { pt3dadd( 50.6584, 54.7799, -9.3603, 0.52 ) }
    dend_23 { pt3dadd( 50.7659, 55.1771, -9.94749, 0.52 ) }
    dend_23 { pt3dadd( 50.8702, 55.973, -10.8367, 0.66 ) }
    dend_23 { pt3dadd( 50.9399, 56.8992, -11.722, 0.88 ) }
    dend_23 { pt3dadd( 51.0142, 58.0811, -12.8137, 0.29 ) }
    dend_23 { pt3dadd( 51.0636, 58.8075, -13.5224, 0.29 ) }
    dend_23 { pt3dadd( 51.143, 59.6675, -14.4651, 0.29 ) }
    dend_23 { pt3dadd( 51.2343, 60.2382, -15.2191, 0.29 ) }
    dend_23 { pt3dadd( 51.3535, 60.6551, -16.0015, 0.29 ) }
    dend_23 { pt3dadd( 51.4823, 60.9541, -16.7721, 0.29 ) }
    dend_23 { pt3dadd( 51.6365, 61.1926, -17.5139, 0.29 ) }
    dend_23 { pt3dadd( 51.8275, 61.4847, -18.381, 0.29 ) }
    dend_23 { pt3dadd( 51.9372, 61.7534, -18.9683, 0.29 ) }
    dend_23 { pt3dadd( 52.1078, 62.6096, -20.1799, 0.29 ) }
    dend_23 { pt3dadd( 52.1414, 63.1175, -20.712, 0.66 ) }
    dend_23 { pt3dadd( 52.1049, 63.9669, -21.4911, 0.44 ) }
    dend_23 { pt3dadd( 52.0197, 65.1392, -22.4239, 0.37 ) }
    dend_23 { pt3dadd( 51.9871, 66.3146, -23.262, 0.29 ) }
    dend_23 { pt3dadd( 52.0508, 67.5696, -24.0789, 0.29 ) }
    dend_23 { pt3dadd( 52.2592, 68.8092, -24.8091, 0.96 ) }
    dend_23 { pt3dadd( 52.5946, 70.1238, -25.6137, 0.22 ) }
    dend_23 { pt3dadd( 52.7957, 70.8114, -26.0699, 0.66 ) }
    dend_23 { pt3dadd( 53.1399, 71.8155, -26.734, 0.29 ) }
    dend_23 { pt3dadd( 53.5114, 72.5811, -27.2423, 0.22 ) }
    dend_23 { pt3dadd( 54.2306, 73.6177, -27.9268, 0.22 ) }
    dend_23 { pt3dadd( 55.0131, 74.444, -28.3955, 0.22 ) }
    dend_23 { pt3dadd( 55.8851, 75.2589, -28.8398, 0.22 ) }
    dend_23 { pt3dadd( 56.233, 75.5892, -29.0504, 0.22 ) }
    dend_23 { pt3dadd( 56.6047, 76.0281, -29.3592, 0.22 ) }
    dend_23 { pt3dadd( 57.1273, 76.7154, -29.9272, 0.37 ) }
    dend_23 { pt3dadd( 57.8666, 77.71, -30.9347, 0.37 ) }
    dend_23 { pt3dadd( 60.8496, 85.0885, -36.9894, 0.37 ) }
    dend_23 { pt3dadd( 63.817, 93.5877, -41.3434, 0.37 ) }
    dend_23 { pt3dadd( 67.1679, 102.738, -43.5893, 0.37 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 85/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 32.6512, 40.8641, 8.63519, 1.25 ) }
    dend_16 { pt3dadd( 32.9347, 41.9829, 9.37411, 1.25 ) }
    dend_16 { pt3dadd( 33.1672, 43.3295, 10.2318, 0.88 ) }
    dend_16 { pt3dadd( 33.3889, 44.7444, 11.0766, 0.81 ) }
    dend_16 { pt3dadd( 33.5524, 45.7754, 11.6325, 0.88 ) }
    dend_16 { pt3dadd( 33.7143, 46.7698, 12.112, 0.74 ) }
    dend_16 { pt3dadd( 33.9163, 48.1024, 12.6712, 0.88 ) }
    dend_16 { pt3dadd( 34.0438, 49.0961, 13.0128, 1.03 ) }
    dend_16 { pt3dadd( 34.1454, 49.9935, 13.2936, 0.88 ) }
    dend_16 { pt3dadd( 34.2922, 51.216, 13.6684, 1.03 ) }
    dend_16 { pt3dadd( 34.5523, 53.0112, 14.2563, 1.03 ) }
    dend_16 { pt3dadd( 34.8506, 54.6455, 14.8722, 0.81 ) }
    dend_16 { pt3dadd( 35.0261, 55.4969, 15.2533, 0.66 ) }
    dend_16 { pt3dadd( 35.2186, 56.422, 15.7363, 0.88 ) }
    dend_16 { pt3dadd( 35.4018, 57.298, 16.2787, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_16 { pt3dadd( 35.6883, 58.4255, 17.098, 1.4 ) }
    dend_16 { pt3dadd( 36.0611, 59.4807, 17.9996, 1.25 ) }
    dend_16 { pt3dadd( 36.5283, 60.3753, 18.8855, 1.4 ) }
    dend_16 { pt3dadd( 37.2703, 61.3955, 19.9184, 0.59 ) }
    dend_16 { pt3dadd( 37.6944, 61.834, 20.357, 0.59 ) }
    dend_16 { pt3dadd( 38.298, 62.3549, 20.8192, 0.52 ) }
    dend_16 { pt3dadd( 39.0768, 62.9614, 21.2736, 1.11 ) }
    dend_16 { pt3dadd( 40.0627, 63.7054, 21.7508, 1.4 ) }
    dend_16 { pt3dadd( 41.2334, 64.6195, 22.2686, 1.11 ) }
    dend_16 { pt3dadd( 42.4564, 65.6777, 22.7697, 0.96 ) }
    dend_16 { pt3dadd( 43.482, 66.7134, 23.2007, 0.59 ) }
    dend_16 { pt3dadd( 44.0693, 67.4097, 23.4876, 0.59 ) }
    dend_16 { pt3dadd( 44.6318, 68.2258, 23.8646, 0.96 ) }
    dend_16 { pt3dadd( 45.166, 69.1752, 24.3776, 1.62 ) }
    dend_16 { pt3dadd( 45.6788, 70.2222, 25.07, 1.47 ) }
    dend_16 { pt3dadd( 46.1598, 71.2016, 25.8684, 1.33 ) }
    dend_16 { pt3dadd( 46.5089, 71.8495, 26.5348, 1.47 ) }
    dend_16 { pt3dadd( 47.3255, 73.2089, 28.2031, 0.59 ) }
    dend_16 { pt3dadd( 47.7796, 73.9539, 29.1894, 0.74 ) }
    dend_16 { pt3dadd( 48.2913, 74.7749, 30.3876, 1.18 ) }
    dend_16 { pt3dadd( 48.8947, 75.714, 31.9242, 1.47 ) }
    dend_16 { pt3dadd( 49.4378, 76.473, 33.2783, 1.55 ) }
    dend_16 { pt3dadd( 49.7954, 76.8755, 34.0559, 1.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 23/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 39.8313, 12.196, 15.5914, 1.62 ) }
    dend_14 { pt3dadd( 40.6116, 12.3631, 15.8276, 1.62 ) }
    dend_14 { pt3dadd( 41.7785, 12.6912, 15.9105, 1.84 ) }
    dend_14 { pt3dadd( 43.4933, 13.2026, 15.8338, 0.88 ) }
    dend_14 { pt3dadd( 44.2296, 13.416, 15.7884, 0.66 ) }
    dend_14 { pt3dadd( 45.5885, 13.8125, 15.7546, 0.96 ) }
    dend_14 { pt3dadd( 46.8025, 14.173, 15.7987, 0.74 ) }
    dend_14 { pt3dadd( 48.0501, 14.627, 15.8756, 1.03 ) }
    dend_14 { pt3dadd( 49.6366, 15.2777, 15.9826, 0.66 ) }
    dend_14 { pt3dadd( 50.5553, 15.677, 16.0808, 1.33 ) }
    dend_14 { pt3dadd( 51.6598, 16.1222, 16.2589, 1.47 ) }
    dend_14 { pt3dadd( 52.9205, 16.5682, 16.4703, 0.96 ) }
    dend_14 { pt3dadd( 54.3089, 16.9765, 16.6931, 1.03 ) }
    dend_14 { pt3dadd( 55.7631, 17.2723, 16.8661, 0.81 ) }
    dend_14 { pt3dadd( 56.9021, 17.3621, 16.9063, 0.96 ) }
    dend_14 { pt3dadd( 58.3926, 17.28, 16.8368, 1.11 ) }
    dend_14 { pt3dadd( 59.8331, 17.0431, 16.707, 1.11 ) }
    dend_14 { pt3dadd( 61.319, 16.6575, 16.5648, 1.33 ) }
    dend_14 { pt3dadd( 62.6145, 16.2265, 16.4712, 0.88 ) }
    dend_14 { pt3dadd( 64.0327, 15.7199, 16.4416, 0.88 ) }
    dend_14 { pt3dadd( 65.6487, 15.1667, 16.4928, 0.59 ) }
    dend_14 { pt3dadd( 66.7167, 14.8928, 16.6162, 0.88 ) }
    dend_14 { pt3dadd( 67.7765, 14.7451, 16.8442, 1.03 ) }
    dend_14 { pt3dadd( 68.985, 14.7196, 17.1728, 0.74 ) }
    dend_14 { pt3dadd( 70.0997, 14.8188, 17.5247, 0.96 ) }
    dend_14 { pt3dadd( 70.9941, 14.9922, 17.8405, 1.25 ) }
    dend_14 { pt3dadd( 72.7328, 15.4788, 18.4585, 0.66 ) }
    dend_14 { pt3dadd( 73.8004, 15.8486, 18.7828, 1.11 ) }
    dend_14 { pt3dadd( 74.4746, 16.1236, 18.9282, 1.11 ) }
    dend_14 { pt3dadd( 75.8242, 16.7057, 19.1094, 0.74 ) }
    dend_14 { pt3dadd( 77.409, 17.3837, 19.1816, 0.52 ) }
    dend_14 { pt3dadd( 78.6175, 17.8602, 19.1421, 0.88 ) }
    dend_14 { pt3dadd( 79.8575, 18.2481, 19.0141, 0.66 ) }
    dend_14 { pt3dadd( 81.7556, 18.7062, 18.8268, 0.44 ) }
    dend_14 { pt3dadd( 82.5296, 18.8576, 18.7901, 0.96 ) }
    dend_14 { pt3dadd( 83.338, 18.9819, 18.7937, 1.11 ) }
    dend_14 { pt3dadd( 84.6347, 19.1701, 18.9253, 0.96 ) }
    dend_14 { pt3dadd( 86.0776, 19.4082, 19.2393, 1.33 ) }
    dend_14 { pt3dadd( 87.8866, 19.7939, 19.9018, 0.44 ) }
    dend_14 { pt3dadd( 88.8308, 20.0641, 20.4568, 0.66 ) }
    dend_14 { pt3dadd( 89.5144, 20.3107, 20.9636, 1.18 ) }
    dend_14 { pt3dadd( 90.8269, 20.8502, 22.0352, 0.96 ) }
    dend_14 { pt3dadd( 91.4681, 21.1333, 22.5663, 0.74 ) }
    dend_14 { pt3dadd( 92.5409, 21.5955, 23.3543, 0.29 ) }
    dend_14 { pt3dadd( 94.5378, 22.2967, 24.4455, 0.52 ) }
    dend_14 { pt3dadd( 95.6418, 22.5345, 24.8271, 0.81 ) }
    dend_14 { pt3dadd( 97.3152, 22.6887, 25.1552, 0.88 ) }
    dend_14 { pt3dadd( 98.4324, 22.6909, 25.1847, 1.11 ) }
    dend_14 { pt3dadd( 100.048, 22.6314, 25.0151, 1.11 ) }
    dend_14 { pt3dadd( 101.685, 22.5151, 24.6249, 0.74 ) }
    dend_14 { pt3dadd( 103.041, 22.3797, 24.1635, 0.59 ) }
    dend_14 { pt3dadd( 103.745, 22.2782, 23.9107, 0.37 ) }
    dend_14 { pt3dadd( 105.035, 22.0358, 23.5338, 0.37 ) }
    dend_14 { pt3dadd( 105.761, 21.8879, 23.4104, 0.37 ) }
    dend_14 { pt3dadd( 106.686, 21.7087, 23.4221, 0.66 ) }
    dend_14 { pt3dadd( 107.439, 21.5755, 23.5734, 0.88 ) }
    dend_14 { pt3dadd( 108.984, 21.357, 24.1036, 0.74 ) }
    dend_14 { pt3dadd( 110.432, 21.1705, 24.7145, 0.59 ) }
    dend_14 { pt3dadd( 111.137, 21.0826, 25.0583, 0.88 ) }
    dend_14 { pt3dadd( 112.461, 20.9253, 25.7387, 0.66 ) }
    dend_14 { pt3dadd( 113.513, 20.8125, 26.3006, 0.96 ) }
    dend_14 { pt3dadd( 114.758, 20.6711, 26.9973, 1.4 ) }
    dend_14 { pt3dadd( 116.796, 20.3918, 28.2467, 0.37 ) }
    dend_14 { pt3dadd( 117.766, 20.2455, 28.8682, 0.37 ) }
    dend_14 { pt3dadd( 118.834, 20.0501, 29.5955, 0.88 ) }
    dend_14 { pt3dadd( 119.496, 19.9016, 30.058, 1.25 ) }
    dend_14 { pt3dadd( 120.572, 19.6462, 30.808, 1.33 ) }
    dend_14 { pt3dadd( 121.963, 19.3233, 31.8147, 0.74 ) }
    dend_14 { pt3dadd( 123.207, 19.0788, 32.7789, 0.88 ) }
    dend_14 { pt3dadd( 124.343, 18.9215, 33.6818, 0.37 ) }
    dend_14 { pt3dadd( 124.92, 18.8946, 34.1671, 0.52 ) }
    dend_14 { pt3dadd( 126.074, 18.9449, 35.1648, 0.22 ) }
    dend_14 { pt3dadd( 126.579, 19.0138, 35.583, 0.22 ) }
    dend_14 { pt3dadd( 127.231, 19.1619, 36.0973, 0.29 ) }
    dend_14 { pt3dadd( 128.054, 19.4028, 36.6634, 0.44 ) }
    dend_14 { pt3dadd( 129.115, 19.7662, 37.2749, 0.44 ) }
    dend_14 { pt3dadd( 130.171, 20.1431, 37.8197, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_14 { pt3dadd( 131.222, 20.5292, 38.3124, 1.47 ) }
    dend_14 { pt3dadd( 132.54, 21.0237, 38.8343, 1.7 ) }
    dend_14 { pt3dadd( 134.893, 21.9963, 39.5186, 0.37 ) }
    dend_14 { pt3dadd( 136.463, 22.7491, 39.8296, 0.37 ) }
    dend_14 { pt3dadd( 137.542, 23.3598, 39.9752, 0.66 ) }
    dend_14 { pt3dadd( 138.473, 24.002, 40.0417, 1.03 ) }
    dend_14 { pt3dadd( 139.621, 24.9321, 40.0658, 1.03 ) }
    dend_14 { pt3dadd( 141.081, 26.269, 39.9872, 0.74 ) }
    dend_14 { pt3dadd( 142.315, 27.533, 39.8486, 0.44 ) }
    dend_14 { pt3dadd( 143.046, 28.3242, 39.7608, 0.96 ) }
    dend_14 { pt3dadd( 144.245, 29.6121, 39.5979, 1.55 ) }
    dend_14 { pt3dadd( 145.446, 30.7717, 39.4311, 0.37 ) }
    dend_14 { pt3dadd( 146.361, 31.506, 39.3325, 0.88 ) }
    dend_14 { pt3dadd( 147.077, 31.9802, 39.2806, 1.03 ) }
    dend_14 { pt3dadd( 148.851, 33.0026, 39.1484, 0.37 ) }
    dend_14 { pt3dadd( 150.138, 33.6926, 39.0592, 0.59 ) }
    dend_14 { pt3dadd( 151.78, 34.5501, 38.9808, 0.59 ) }
    dend_14 { pt3dadd( 153.664, 35.5839, 38.8754, 0.44 ) }
    dend_14 { pt3dadd( 154.609, 36.1473, 38.8069, 1.18 ) }
    dend_14 { pt3dadd( 155.317, 36.6147, 38.7222, 1.4 ) }
    dend_14 { pt3dadd( 157.184, 37.9813, 38.3953, 0.29 ) }
    dend_14 { pt3dadd( 157.906, 38.5779, 38.2635, 0.59 ) }
    dend_14 { pt3dadd( 159.049, 39.6204, 38.0553, 1.25 ) }
    dend_14 { pt3dadd( 160.289, 40.8067, 37.815, 0.44 ) }
    dend_14 { pt3dadd( 161.167, 41.6417, 37.6516, 0.88 ) }
    dend_14 { pt3dadd( 162.095, 42.5068, 37.4817, 1.4 ) }
    dend_14 { pt3dadd( 163.005, 43.3377, 37.3222, 1.4 ) }
    dend_14 { pt3dadd( 164.559, 44.7246, 37.0915, 0.52 ) }
    dend_14 { pt3dadd( 165.337, 45.3891, 37.01, 0.37 ) }
    dend_14 { pt3dadd( 166.345, 46.2097, 36.9391, 0.66 ) }
    dend_14 { pt3dadd( 167.254, 46.9073, 36.8968, 1.03 ) }
    dend_14 { pt3dadd( 167.845, 47.3537, 36.875, 1.4 ) }
    dend_14 { pt3dadd( 168.705, 48.026, 36.8463, 0.66 ) }
    dend_14 { pt3dadd( 169.807, 48.9251, 36.8559, 0.44 ) }
    dend_14 { pt3dadd( 170.872, 49.8014, 36.9107, 0.59 ) }
    dend_14 { pt3dadd( 172.595, 51.2337, 37.0641, 0.44 ) }
    dend_14 { pt3dadd( 173.203, 51.7567, 37.1278, 0.59 ) }
    dend_14 { pt3dadd( 174.459, 52.872, 37.2782, 0.52 ) }
    dend_14 { pt3dadd( 175.582, 53.8882, 37.3975, 0.44 ) }
    dend_14 { pt3dadd( 176.164, 54.4444, 37.4736, 0.96 ) }
    dend_14 { pt3dadd( 176.66, 54.9295, 37.5643, 1.18 ) }
    dend_14 { pt3dadd( 177.385, 55.6218, 37.7462, 0.59 ) }
    dend_14 { pt3dadd( 178.044, 56.202, 37.9083, 0.37 ) }
    dend_14 { pt3dadd( 179.195, 57.1211, 38.1522, 0.96 ) }
    dend_14 { pt3dadd( 180.633, 58.1651, 38.3564, 0.88 ) }
    dend_14 { pt3dadd( 181.934, 59.0523, 38.5022, 0.52 ) }
    dend_14 { pt3dadd( 183.3, 59.9337, 38.6306, 0.29 ) }
    dend_14 { pt3dadd( 184.286, 60.5346, 38.7077, 0.29 ) }
    dend_14 { pt3dadd( 185.334, 61.1478, 38.7445, 0.74 ) }
    dend_14 { pt3dadd( 186.597, 61.8572, 38.7471, 0.52 ) }
    dend_14 { pt3dadd( 187.501, 62.3357, 38.6874, 0.74 ) }
    dend_14 { pt3dadd( 188.26, 62.7137, 38.6139, 1.25 ) }
    dend_14 { pt3dadd( 189.068, 63.0711, 38.5399, 1.25 ) }
    dend_14 { pt3dadd( 190.736, 63.7149, 38.4526, 0.59 ) }
    dend_14 { pt3dadd( 191.552, 63.9728, 38.4316, 0.88 ) }
    dend_14 { pt3dadd( 192.584, 64.21, 38.4297, 1.18 ) }
    dend_14 { pt3dadd( 193.773, 64.3459, 38.4517, 0.88 ) }
    dend_14 { pt3dadd( 195.144, 64.3389, 38.5165, 0.29 ) }
    dend_14 { pt3dadd( 195.834, 64.244, 38.5908, 0.37 ) }
    dend_14 { pt3dadd( 196.545, 64.0909, 38.7442, 0.44 ) }
    dend_14 { pt3dadd( 197.373, 63.9107, 38.9942, 0.22 ) }
    dend_14 { pt3dadd( 198.31, 63.721, 39.2738, 0.29 ) }
    dend_14 { pt3dadd( 198.817, 63.6409, 39.4033, 1.03 ) }
    dend_14 { pt3dadd( 200.19, 63.5229, 39.6285, 1.62 ) }
    dend_14 { pt3dadd( 202.1, 63.4716, 39.8368, 0.74 ) }
    dend_14 { pt3dadd( 203.518, 63.4764, 39.9179, 0.52 ) }
    dend_14 { pt3dadd( 205.253, 63.4975, 39.8579, 0.88 ) }
    dend_14 { pt3dadd( 206.303, 63.5023, 39.6717, 1.18 ) }
    dend_14 { pt3dadd( 207.702, 63.4888, 39.3482, 1.18 ) }
    dend_14 { pt3dadd( 209.001, 63.4297, 39.0327, 0.29 ) }
    dend_14 { pt3dadd( 210.027, 63.3175, 38.8323, 0.29 ) }
    dend_14 { pt3dadd( 211.472, 63.0795, 38.787, 0.96 ) }
    dend_14 { pt3dadd( 212.983, 62.7664, 39.1252, 1.18 ) }
    dend_14 { pt3dadd( 214.91, 62.3761, 39.7828, 0.44 ) }
    dend_14 { pt3dadd( 216.439, 62.15, 40.3009, 1.03 ) }
    dend_14 { pt3dadd( 217.748, 62.0544, 40.6999, 0.37 ) }
    dend_14 { pt3dadd( 218.892, 62.0798, 41.0667, 1.33 ) }
    dend_14 { pt3dadd( 220.694, 62.3275, 41.6237, 0.22 ) }
    dend_14 { pt3dadd( 221.957, 62.6253, 41.9473, 1.55 ) }
    dend_14 { pt3dadd( 224.198, 63.3887, 42.2376, 0.29 ) }
    dend_14 { pt3dadd( 224.783, 63.6223, 42.2745, 0.88 ) }
    dend_14 { pt3dadd( 225.807, 64.0518, 42.307, 1.4 ) }
    dend_14 { pt3dadd( 227.522, 64.7894, 42.4021, 0.44 ) }
    dend_14 { pt3dadd( 228.285, 65.0904, 42.4926, 0.44 ) }
    dend_14 { pt3dadd( 229.397, 65.4565, 42.7219, 0.96 ) }
    dend_14 { pt3dadd( 230.582, 65.7702, 43.0564, 0.44 ) }
    dend_14 { pt3dadd( 231.611, 66.0077, 43.3412, 0.44 ) }
    dend_14 { pt3dadd( 232.755, 66.2228, 43.7075, 0.44 ) }
    dend_14 { pt3dadd( 233.849, 66.3971, 44.1648, 0.44 ) }
    dend_14 { pt3dadd( 235.082, 66.5892, 44.7973, 0.37 ) }
    dend_14 { pt3dadd( 236.0, 66.7195, 45.3387, 1.18 ) }
    dend_14 { pt3dadd( 236.613, 66.7795, 45.7357, 1.18 ) }
    dend_14 { pt3dadd( 238.463, 66.8291, 46.9662, 0.37 ) }
    dend_14 { pt3dadd( 239.623, 66.7879, 47.6677, 0.74 ) }
    dend_14 { pt3dadd( 240.763, 66.7037, 48.2547, 0.96 ) }
    dend_14 { pt3dadd( 241.663, 66.5898, 48.6202, 0.29 ) }
    dend_14 { pt3dadd( 242.773, 66.4503, 48.8996, 0.22 ) }
    dend_14 { pt3dadd( 243.649, 66.3626, 48.9996, 0.88 ) }
    dend_14 { pt3dadd( 245.721, 66.2341, 49.0299, 0.22 ) }
    dend_14 { pt3dadd( 247.237, 66.2011, 49.0578, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_14 { pt3dadd( 247.748, 66.2185, 49.0928, 1.11 ) }
    dend_14 { pt3dadd( 249.307, 66.4416, 49.3463, 0.29 ) }
    dend_14 { pt3dadd( 249.994, 66.6284, 49.5353, 0.44 ) }
    dend_14 { pt3dadd( 251.408, 67.1276, 50.1728, 0.29 ) }
    dend_14 { pt3dadd( 252.446, 67.5335, 50.8649, 0.59 ) }
    dend_14 { pt3dadd( 253.084, 67.7793, 51.3772, 0.22 ) }
    dend_14 { pt3dadd( 253.642, 67.9515, 51.842, 0.22 ) }
    dend_14 { pt3dadd( 254.151, 68.0476, 52.2762, 0.74 ) }
    dend_14 { pt3dadd( 255.512, 68.2386, 53.3964, 0.37 ) }
    dend_14 { pt3dadd( 256.426, 68.3237, 54.0731, 1.33 ) }
    dend_14 { pt3dadd( 257.229, 68.3567, 54.653, 1.77 ) }
    dend_14 { pt3dadd( 258.647, 68.3285, 55.7226, 0.29 ) }
    dend_14 { pt3dadd( 259.461, 68.2526, 56.3493, 1.18 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 13/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 39.8313, 12.196, 15.5914, 0.74 ) }
    dend_13 { pt3dadd( 40.3949, 12.5725, 16.9188, 0.74 ) }
    dend_13 { pt3dadd( 41.1775, 12.9154, 18.7967, 0.74 ) }
    dend_13 { pt3dadd( 41.7794, 13.0479, 20.4437, 0.74 ) }
    dend_13 { pt3dadd( 42.2899, 13.0879, 22.2129, 0.74 ) }
    dend_13 { pt3dadd( 42.5456, 13.0489, 23.5297, 0.74 ) }
    dend_13 { pt3dadd( 42.7287, 12.9708, 25.0702, 1.03 ) }
    dend_13 { pt3dadd( 42.799, 12.8151, 26.9541, 1.18 ) }
    dend_13 { pt3dadd( 42.7313, 12.587, 29.1111, 0.74 ) }
    dend_13 { pt3dadd( 42.5884, 12.3966, 30.7606, 0.74 ) }
    dend_13 { pt3dadd( 42.3163, 12.1554, 32.7985, 0.52 ) }
    dend_13 { pt3dadd( 42.1223, 12.0013, 34.0431, 0.52 ) }
    dend_13 { pt3dadd( 41.8819, 11.8019, 35.6649, 0.52 ) }
    dend_13 { pt3dadd( 41.7358, 11.6196, 36.8788, 0.52 ) }
    dend_13 { pt3dadd( 41.66, 11.4174, 37.818, 0.52 ) }
    dend_13 { pt3dadd( 41.5609, 10.701, 39.9314, 0.52 ) }
    dend_13 { pt3dadd( 41.5031, 9.88506, 41.5052, 1.03 ) }
    dend_13 { pt3dadd( 41.4085, 8.71726, 42.9693, 1.03 ) }
    dend_13 { pt3dadd( 41.2858, 7.58308, 43.9223, 0.66 ) }
    dend_13 { pt3dadd( 41.1322, 6.31557, 44.6526, 0.96 ) }
    dend_13 { pt3dadd( 40.9322, 4.66242, 45.3269, 1.25 ) }
    dend_13 { pt3dadd( 40.6959, 2.68211, 45.862, 0.66 ) }
    dend_13 { pt3dadd( 40.5508, 1.31497, 46.1483, 0.37 ) }
    dend_13 { pt3dadd( 40.4319, 0.305762, 46.3167, 0.52 ) }
    dend_13 { pt3dadd( 40.2499, -0.844073, 46.5136, 0.44 ) }
    dend_13 { pt3dadd( 39.9279, -2.29071, 46.8601, 0.88 ) }
    dend_13 { pt3dadd( 39.718, -2.94569, 47.1056, 0.88 ) }
    dend_13 { pt3dadd( 38.981, -4.61568, 47.9777, 0.44 ) }
    dend_13 { pt3dadd( 38.5597, -5.39409, 48.4266, 0.22 ) }
    dend_13 { pt3dadd( 38.0105, -6.38537, 48.9789, 0.22 ) }
    dend_13 { pt3dadd( 37.3905, -7.55581, 49.5981, 0.44 ) }
    dend_13 { pt3dadd( 37.0409, -8.26195, 49.9606, 1.33 ) }
    dend_13 { pt3dadd( 36.5801, -9.23357, 50.4978, 1.11 ) }
    dend_13 { pt3dadd( 36.1585, -10.0795, 51.0176, 0.81 ) }
    dend_13 { pt3dadd( 35.5177, -11.3708, 51.9134, 0.37 ) }
    dend_13 { pt3dadd( 34.9359, -12.5715, 52.8027, 0.29 ) }
    dend_13 { pt3dadd( 34.3492, -13.7551, 53.6771, 0.88 ) }
    dend_13 { pt3dadd( 33.781, -14.8349, 54.489, 0.88 ) }
    dend_13 { pt3dadd( 33.0648, -16.0964, 55.4176, 1.11 ) }
    dend_13 { pt3dadd( 32.2156, -17.4883, 56.3943, 0.37 ) }
    dend_13 { pt3dadd( 31.7897, -18.1481, 56.8083, 0.37 ) }
    dend_13 { pt3dadd( 31.0617, -19.3161, 57.3391, 0.29 ) }
    dend_13 { pt3dadd( 30.5662, -20.1897, 57.5623, 1.03 ) }
    dend_13 { pt3dadd( 30.0313, -21.2726, 57.6268, 0.22 ) }
    dend_13 { pt3dadd( 29.7813, -21.925, 57.5643, 0.37 ) }
    dend_13 { pt3dadd( 29.5587, -22.6386, 57.4225, 1.18 ) }
    dend_13 { pt3dadd( 29.3191, -23.6081, 57.2068, 1.92 ) }
    dend_13 { pt3dadd( 29.1363, -24.7834, 56.9595, 0.37 ) }
    dend_13 { pt3dadd( 29.0817, -25.9098, 56.7577, 0.15 ) }
    dend_13 { pt3dadd( 29.1358, -27.2599, 56.5696, 0.22 ) }
    dend_13 { pt3dadd( 29.2793, -28.8393, 56.5179, 0.22 ) }
    dend_13 { pt3dadd( 29.3813, -29.9479, 56.5573, 0.22 ) }
    dend_13 { pt3dadd( 29.4696, -30.9801, 56.6399, 1.18 ) }
    dend_13 { pt3dadd( 29.5341, -32.2718, 56.7876, 1.99 ) }
    dend_13 { pt3dadd( 29.5112, -33.3716, 56.9475, 1.25 ) }
    dend_13 { pt3dadd( 29.2268, -36.1857, 57.3684, 0.37 ) }
    dend_13 { pt3dadd( 28.9433, -37.9402, 57.6599, 0.22 ) }
    dend_13 { pt3dadd( 28.8139, -38.4916, 57.7544, 0.66 ) }
    dend_13 { pt3dadd( 28.4621, -39.634, 57.9396, 1.03 ) }
    dend_13 { pt3dadd( 27.9835, -40.9199, 58.1379, 0.29 ) }
    dend_13 { pt3dadd( 27.5583, -41.9345, 58.2856, 0.29 ) }
    dend_13 { pt3dadd( 27.1128, -42.9416, 58.4027, 1.18 ) }
    dend_13 { pt3dadd( 26.783, -43.7847, 58.4867, 1.18 ) }
    dend_13 { pt3dadd( 26.2159, -45.4574, 58.6199, 0.29 ) }
    dend_13 { pt3dadd( 25.9345, -46.4358, 58.6688, 0.29 ) }
    dend_13 { pt3dadd( 25.6389, -47.6022, 58.6878, 0.81 ) }
    dend_13 { pt3dadd( 25.3859, -48.7113, 58.6652, 0.29 ) }
    dend_13 { pt3dadd( 25.1012, -50.0045, 58.5578, 0.29 ) }
    dend_13 { pt3dadd( 24.9412, -50.7296, 58.4517, 0.29 ) }
    dend_13 { pt3dadd( 24.7041, -51.7037, 58.2332, 0.29 ) }
    dend_13 { pt3dadd( 24.4082, -52.7131, 57.938, 0.29 ) }
    dend_13 { pt3dadd( 24.0415, -53.8383, 57.5827, 0.59 ) }
    dend_13 { pt3dadd( 23.6278, -55.0556, 57.2117, 1.33 ) }
    dend_13 { pt3dadd( 23.1569, -56.4911, 56.8885, 1.4 ) }
    dend_13 { pt3dadd( 22.844, -57.5669, 56.684, 1.4 ) }
    dend_13 { pt3dadd( 22.2933, -59.8806, 56.402, 0.59 ) }
    dend_13 { pt3dadd( 21.9733, -61.7431, 56.3081, 0.52 ) }
    dend_13 { pt3dadd( 21.8045, -63.4354, 56.3701, 0.81 ) }
    dend_13 { pt3dadd( 21.75, -65.6296, 56.6311, 0.29 ) }
    dend_13 { pt3dadd( 21.7919, -66.5137, 56.7915, 0.81 ) }
    dend_13 { pt3dadd( 21.925, -67.9864, 57.1082, 1.11 ) }
    dend_13 { pt3dadd( 22.053, -69.1439, 57.3446, 1.25 ) }
    dend_13 { pt3dadd( 22.261, -71.3445, 57.6919, 0.37 ) }
    dend_13 { pt3dadd( 22.3467, -72.5894, 57.8059, 0.59 ) }
    dend_13 { pt3dadd( 22.4012, -73.8083, 57.8161, 1.33 ) }
    dend_13 { pt3dadd( 22.4244, -75.2344, 57.7648, 0.96 ) }
    dend_13 { pt3dadd( 22.3988, -76.8371, 57.5934, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_13 { pt3dadd( 22.3684, -77.5619, 57.4907, 0.37 ) }
    dend_13 { pt3dadd( 22.2731, -78.8862, 57.2733, 0.59 ) }
    dend_13 { pt3dadd( 22.0667, -80.7607, 56.939, 0.37 ) }
    dend_13 { pt3dadd( 21.8842, -82.0668, 56.6894, 0.37 ) }
    dend_13 { pt3dadd( 21.687, -83.4426, 56.3961, 0.81 ) }
    dend_13 { pt3dadd( 21.4947, -84.7467, 56.0815, 1.11 ) }
    dend_13 { pt3dadd( 21.2429, -86.2933, 55.6156, 0.66 ) }
    dend_13 { pt3dadd( 20.9254, -87.984, 54.98, 0.37 ) }
    dend_13 { pt3dadd( 20.738, -88.7984, 54.6203, 0.52 ) }
    dend_13 { pt3dadd( 20.3902, -90.1362, 53.9451, 0.81 ) }
    dend_13 { pt3dadd( 20.0389, -91.3827, 53.2483, 0.81 ) }
    dend_13 { pt3dadd( 19.7014, -92.4614, 52.5946, 1.11 ) }
    dend_13 { pt3dadd( 19.3581, -93.4722, 51.967, 1.47 ) }
    dend_13 { pt3dadd( 18.8724, -94.8108, 51.2114, 1.4 ) }
    dend_13 { pt3dadd( 18.2308, -96.5358, 50.3162, 0.29 ) }
    dend_13 { pt3dadd( 18.0375, -97.0391, 50.0692, 0.29 ) }
    dend_13 { pt3dadd( 17.7513, -97.7725, 49.7026, 0.66 ) }
    dend_13 { pt3dadd( 17.3426, -98.7831, 49.1661, 1.03 ) }
    dend_13 { pt3dadd( 16.6995, -100.212, 48.3677, 0.37 ) }
    dend_13 { pt3dadd( 16.1389, -101.315, 47.714, 0.37 ) }
    dend_13 { pt3dadd( 15.5924, -102.188, 47.1658, 0.66 ) }
    dend_13 { pt3dadd( 14.9363, -103.082, 46.5669, 1.33 ) }
    dend_13 { pt3dadd( 14.3203, -103.8, 46.0636, 1.33 ) }
    dend_13 { pt3dadd( 13.2795, -104.852, 45.318, 0.37 ) }
    dend_13 { pt3dadd( 12.5681, -105.569, 44.9005, 0.37 ) }
    dend_13 { pt3dadd( 11.784, -106.425, 44.5685, 0.37 ) }
    dend_13 { pt3dadd( 11.4205, -106.857, 44.463, 0.81 ) }
    dend_13 { pt3dadd( 10.9636, -107.456, 44.3824, 1.47 ) }
    dend_13 { pt3dadd( 10.352, -108.337, 44.3042, 1.47 ) }
    dend_13 { pt3dadd( 9.17206, -110.103, 44.19, 0.29 ) }
    dend_13 { pt3dadd( 8.54044, -111.028, 44.1232, 0.37 ) }
    dend_13 { pt3dadd( 7.60033, -112.386, 44.0035, 0.29 ) }
    dend_13 { pt3dadd( 7.18733, -113.013, 43.9278, 0.81 ) }
    dend_13 { pt3dadd( 6.80272, -113.623, 43.8406, 1.18 ) }
    dend_13 { pt3dadd( 6.08341, -114.78, 43.65, 0.44 ) }
    dend_13 { pt3dadd( 5.41132, -115.868, 43.4152, 0.37 ) }
    dend_13 { pt3dadd( 4.84323, -116.889, 43.1709, 1.25 ) }
    dend_13 { pt3dadd( 3.99542, -118.678, 42.73, 0.29 ) }
    dend_13 { pt3dadd( 3.7235, -119.298, 42.5823, 0.74 ) }
    dend_13 { pt3dadd( 3.41699, -120.041, 42.4308, 1.11 ) }
    dend_13 { pt3dadd( 2.89, -121.379, 42.1857, 0.29 ) }
    dend_13 { pt3dadd( 2.48337, -122.308, 42.0573, 0.88 ) }
    dend_13 { pt3dadd( 2.05706, -123.163, 41.957, 0.37 ) }
    dend_13 { pt3dadd( 1.50369, -124.182, 41.8522, 0.22 ) }
    dend_13 { pt3dadd( 1.09053, -124.985, 41.8034, 0.66 ) }
    dend_13 { pt3dadd( 0.688605, -125.857, 41.784, 1.33 ) }
    dend_13 { pt3dadd( -0.0867287, -127.854, 41.8163, 0.96 ) }
    dend_13 { pt3dadd( -0.408148, -128.919, 41.8508, 0.96 ) }
    dend_13 { pt3dadd( -0.700851, -130.475, 41.9562, 0.52 ) }
    dend_13 { pt3dadd( -0.816324, -131.923, 42.094, 0.66 ) }
    dend_13 { pt3dadd( -0.819722, -133.13, 42.2543, 0.29 ) }
    dend_13 { pt3dadd( -0.745055, -134.188, 42.4272, 0.44 ) }
    dend_13 { pt3dadd( -0.606425, -135.19, 42.6165, 0.44 ) }
    dend_13 { pt3dadd( -0.339927, -137.147, 43.0133, 0.44 ) }
    dend_13 { pt3dadd( -0.270074, -137.97, 43.1842, 0.59 ) }
    dend_13 { pt3dadd( -0.315321, -139.257, 43.4343, 0.29 ) }
    dend_13 { pt3dadd( -0.484722, -140.257, 43.6396, 0.29 ) }
    dend_13 { pt3dadd( -0.778524, -141.285, 43.8549, 0.22 ) }
    dend_13 { pt3dadd( -1.06895, -142.05, 44.026, 0.22 ) }
    dend_13 { pt3dadd( -1.49005, -142.99, 44.2491, 0.88 ) }
    dend_13 { pt3dadd( -2.1474, -144.337, 44.6132, 0.29 ) }
    dend_13 { pt3dadd( -2.71125, -145.348, 44.904, 0.22 ) }
    dend_13 { pt3dadd( -3.2229, -146.174, 45.2026, 0.74 ) }
    dend_13 { pt3dadd( -3.87822, -147.189, 45.6457, 0.22 ) }
    dend_13 { pt3dadd( -4.27796, -147.822, 45.9698, 0.88 ) }
    dend_13 { pt3dadd( -4.71589, -148.548, 46.3637, 0.88 ) }
    dend_13 { pt3dadd( -5.29161, -149.508, 46.9421, 0.29 ) }
    dend_13 { pt3dadd( -5.89376, -150.462, 47.5402, 0.29 ) }
    dend_13 { pt3dadd( -6.33571, -151.173, 47.9835, 0.15 ) }
    dend_13 { pt3dadd( -6.9094, -152.096, 48.5486, 0.81 ) }
    dend_13 { pt3dadd( -7.57927, -153.158, 49.1572, 0.37 ) }
    dend_13 { pt3dadd( -8.33658, -154.296, 49.7721, 0.29 ) }
    dend_13 { pt3dadd( -8.96065, -155.176, 50.2153, 0.96 ) }
    dend_13 { pt3dadd( -9.72878, -156.195, 50.662, 0.29 ) }
    dend_13 { pt3dadd( -10.6301, -157.324, 51.1177, 0.59 ) }
    dend_13 { pt3dadd( -11.4546, -158.251, 51.4643, 0.22 ) }
    dend_13 { pt3dadd( -12.2341, -159.016, 51.6619, 0.52 ) }
    dend_13 { pt3dadd( -12.7221, -159.46, 51.7083, 0.22 ) }
    dend_13 { pt3dadd( -13.3, -159.942, 51.7066, 0.22 ) }
    dend_13 { pt3dadd( -13.691, -160.242, 51.6729, 0.22 ) }
    dend_13 { pt3dadd( -14.5496, -160.884, 51.547, 0.88 ) }
    dend_13 { pt3dadd( -15.8669, -161.818, 51.3612, 0.22 ) }
    dend_13 { pt3dadd( -16.6046, -162.272, 51.2761, 0.22 ) }
    dend_13 { pt3dadd( -17.5418, -162.734, 51.2198, 0.74 ) }
    dend_13 { pt3dadd( -18.3781, -163.051, 51.2017, 1.03 ) }
    dend_13 { pt3dadd( -19.3261, -163.335, 51.2208, 1.25 ) }
    dend_13 { pt3dadd( -20.9988, -163.768, 51.3363, 0.44 ) }
    dend_13 { pt3dadd( -22.9275, -164.225, 51.5558, 0.22 ) }
    dend_13 { pt3dadd( -24.1925, -164.529, 51.643, 0.22 ) }
    dend_13 { pt3dadd( -25.1194, -164.786, 51.6692, 0.74 ) }
    dend_13 { pt3dadd( -26.1671, -165.199, 51.6427, 0.15 ) }
    dend_13 { pt3dadd( -26.8949, -165.604, 51.5265, 0.15 ) }
    dend_13 { pt3dadd( -27.4945, -166.111, 51.2519, 0.44 ) }
    dend_13 { pt3dadd( -28.4408, -167.286, 50.4018, 0.22 ) }
    dend_13 { pt3dadd( -28.9328, -168.048, 49.7259, 0.96 ) }
    dend_13 { pt3dadd( -29.4524, -169.031, 48.6976, 0.22 ) }
    dend_13 { pt3dadd( -29.8244, -169.845, 47.7089, 0.15 ) }
    dend_13 { pt3dadd( -30.2077, -170.719, 46.5474, 0.15 ) }
    dend_13 { pt3dadd( -30.4872, -171.383, 45.5866, 0.22 ) }
    dend_13 { pt3dadd( -30.7754, -172.098, 44.4628, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_13 { pt3dadd( -31.0195, -172.753, 43.2538, 0.22 ) }
    dend_13 { pt3dadd( -31.1533, -173.175, 42.3138, 0.22 ) }
    // Section: dend_10, id: dend_10, parent: dend_4 (entry count 2/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -74.4753, -54.7338, -10.1652, 0.29 ) }
    dend_10 { pt3dadd( -76.1701, -55.5274, -9.95995, 0.29 ) }
    dend_10 { pt3dadd( -76.96, -55.9703, -9.70224, 0.29 ) }
    dend_10 { pt3dadd( -77.3312, -56.2085, -9.55136, 0.88 ) }
    dend_10 { pt3dadd( -77.6363, -56.4215, -9.42334, 0.88 ) }
    dend_10 { pt3dadd( -78.2116, -56.888, -9.17834, 0.74 ) }
    dend_10 { pt3dadd( -79.1457, -57.7312, -8.77717, 0.37 ) }
    dend_10 { pt3dadd( -80.4386, -59.2614, -8.13155, 0.37 ) }
    dend_10 { pt3dadd( -80.7482, -59.7016, -7.93657, 0.74 ) }
    dend_10 { pt3dadd( -81.3419, -60.657, -7.46842, 0.81 ) }
    dend_10 { pt3dadd( -82.0667, -61.8754, -6.79191, 0.59 ) }
    dend_10 { pt3dadd( -82.4525, -62.5378, -6.38233, 0.81 ) }
    dend_10 { pt3dadd( -82.9504, -63.455, -5.71856, 0.29 ) }
    dend_10 { pt3dadd( -83.4384, -64.3943, -4.91869, 0.37 ) }
    dend_10 { pt3dadd( -83.824, -65.1424, -3.94234, 0.59 ) }
    dend_10 { pt3dadd( -83.9965, -65.5481, -3.03622, 0.59 ) }
    dend_10 { pt3dadd( -84.0484, -65.7131, -2.46517, 0.66 ) }
    dend_10 { pt3dadd( -84.0756, -66.0216, -1.17921, 0.66 ) }
    dend_10 { pt3dadd( -84.0288, -66.2209, -0.385128, 0.66 ) }
    dend_10 { pt3dadd( -83.7803, -66.5875, 0.856903, 0.66 ) }
    dend_10 { pt3dadd( -83.087, -67.3024, 2.87976, 0.66 ) }
    dend_10 { pt3dadd( -82.5376, -67.7881, 4.05806, 0.96 ) }
    dend_10 { pt3dadd( -82.0266, -68.2033, 4.96958, 1.11 ) }
    dend_10 { pt3dadd( -81.2804, -68.775, 6.10926, 0.59 ) }
    dend_10 { pt3dadd( -80.2411, -69.5279, 7.49492, 0.22 ) }
    dend_10 { pt3dadd( -79.6382, -69.9427, 8.16168, 0.52 ) }
    dend_10 { pt3dadd( -79.0059, -70.3971, 8.75077, 0.66 ) }
    dend_10 { pt3dadd( -78.1712, -71.1191, 9.45334, 0.29 ) }
    dend_10 { pt3dadd( -77.6096, -71.7641, 9.90102, 0.88 ) }
    dend_10 { pt3dadd( -77.4179, -72.1412, 10.0596, 1.55 ) }
    dend_10 { pt3dadd( -77.1496, -73.2154, 10.2666, 0.59 ) }
    dend_10 { pt3dadd( -76.9274, -74.6887, 10.3601, 0.22 ) }
    dend_10 { pt3dadd( -76.7817, -76.005, 10.3299, 0.22 ) }
    dend_10 { pt3dadd( -76.7196, -76.6242, 10.2767, 0.74 ) }
    dend_10 { pt3dadd( -76.5947, -77.558, 10.2026, 1.55 ) }
    dend_10 { pt3dadd( -76.5076, -78.0029, 10.1879, 1.55 ) }
    dend_10 { pt3dadd( -76.2829, -78.7914, 10.2061, 0.74 ) }
    dend_10 { pt3dadd( -75.8484, -79.8689, 10.332, 0.22 ) }
    dend_10 { pt3dadd( -75.6003, -80.3741, 10.4232, 0.88 ) }
    dend_10 { pt3dadd( -75.0742, -81.3373, 10.6148, 1.62 ) }
    dend_10 { pt3dadd( -74.5293, -82.2252, 10.7928, 0.96 ) }
    dend_10 { pt3dadd( -73.7776, -83.3392, 11.027, 0.44 ) }
    dend_10 { pt3dadd( -72.8975, -84.5239, 11.286, 0.52 ) }
    dend_10 { pt3dadd( -71.949, -85.674, 11.5366, 0.22 ) }
    dend_10 { pt3dadd( -71.7373, -85.9167, 11.5931, 0.22 ) }
    dend_10 { pt3dadd( -71.4406, -86.2624, 11.6683, 0.22 ) }
    dend_10 { pt3dadd( -71.1603, -86.5965, 11.7386, 0.22 ) }
    dend_10 { pt3dadd( -70.9397, -86.8726, 11.7738, 0.44 ) }
    dend_10 { pt3dadd( -70.3069, -87.708, 11.7511, 0.88 ) }
    dend_10 { pt3dadd( -69.4837, -88.8365, 11.5542, 0.22 ) }
    dend_10 { pt3dadd( -68.9073, -89.6537, 11.3075, 0.29 ) }
    dend_10 { pt3dadd( -68.3522, -90.4743, 10.9717, 0.29 ) }
    dend_10 { pt3dadd( -67.8381, -91.2846, 10.5778, 0.29 ) }
    dend_10 { pt3dadd( -67.2848, -92.1936, 10.0917, 0.29 ) }
    dend_10 { pt3dadd( -66.7516, -93.0998, 9.57372, 0.29 ) }
    dend_10 { pt3dadd( -66.2745, -93.8801, 9.11193, 0.59 ) }
    dend_10 { pt3dadd( -65.8315, -94.5877, 8.73615, 0.81 ) }
    dend_10 { pt3dadd( -65.23, -95.5587, 8.30291, 1.4 ) }
    dend_10 { pt3dadd( -64.6795, -96.4652, 8.00847, 0.59 ) }
    dend_10 { pt3dadd( -64.2142, -97.2586, 7.8337, 0.29 ) }
    dend_10 { pt3dadd( -63.8335, -97.9365, 7.77019, 0.44 ) }
    dend_10 { pt3dadd( -63.4452, -98.6314, 7.76525, 0.44 ) }
    dend_10 { pt3dadd( -62.8524, -99.6417, 7.76966, 0.37 ) }
    dend_10 { pt3dadd( -62.4151, -100.356, 7.7709, 1.33 ) }
    dend_10 { pt3dadd( -61.9983, -101.035, 7.76242, 1.84 ) }
    dend_10 { pt3dadd( -61.2295, -102.388, 7.73048, 0.29 ) }
    dend_10 { pt3dadd( -60.8503, -103.126, 7.70788, 0.59 ) }
    dend_10 { pt3dadd( -60.1427, -104.603, 7.63441, 0.22 ) }
    dend_10 { pt3dadd( -59.9175, -105.122, 7.57539, 0.74 ) }
    dend_10 { pt3dadd( -59.676, -105.717, 7.44289, 1.11 ) }
    dend_10 { pt3dadd( -59.1601, -107.117, 7.04065, 0.22 ) }
    dend_10 { pt3dadd( -58.9646, -107.661, 6.85707, 0.15 ) }
    dend_10 { pt3dadd( -58.6791, -108.481, 6.56344, 0.88 ) }
    dend_10 { pt3dadd( -58.2522, -109.713, 6.12438, 0.37 ) }
    dend_10 { pt3dadd( -57.8631, -110.826, 5.69613, 0.74 ) }
    dend_10 { pt3dadd( -57.3924, -112.123, 5.15071, 0.15 ) }
    dend_10 { pt3dadd( -57.1064, -112.829, 4.81925, 0.15 ) }
    dend_10 { pt3dadd( -56.83, -113.484, 4.51092, 0.74 ) }
    dend_10 { pt3dadd( -56.5713, -114.068, 4.26474, 0.88 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 81/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -74.4753, -54.7338, -10.1652, 0.29 ) }
    dend_5 { pt3dadd( -74.3252, -55.9295, -10.7129, 0.29 ) }
    dend_5 { pt3dadd( -74.298, -56.4767, -10.9889, 0.74 ) }
    dend_5 { pt3dadd( -74.3303, -57.0886, -11.2973, 0.88 ) }
    dend_5 { pt3dadd( -74.4909, -58.1332, -11.7843, 0.52 ) }
    dend_5 { pt3dadd( -74.7891, -59.103, -12.1678, 0.52 ) }
    dend_5 { pt3dadd( -75.2569, -60.2625, -12.5103, 0.74 ) }
    dend_5 { pt3dadd( -75.6599, -60.9871, -12.6373, 0.88 ) }
    dend_5 { pt3dadd( -76.1525, -61.7663, -12.695, 0.96 ) }
    dend_5 { pt3dadd( -76.6888, -62.6265, -12.7223, 0.96 ) }
    dend_5 { pt3dadd( -77.5409, -64.0782, -12.7417, 0.74 ) }
    dend_5 { pt3dadd( -78.0548, -65.0464, -12.7472, 0.74 ) }
    dend_5 { pt3dadd( -78.5703, -66.1774, -12.7645, 0.81 ) }
    dend_5 { pt3dadd( -78.8706, -66.9754, -12.8204, 0.81 ) }
    dend_5 { pt3dadd( -79.3282, -68.4442, -12.9918, 0.52 ) }
    dend_5 { pt3dadd( -79.5695, -69.4008, -13.1402, 0.88 ) }
    dend_5 { pt3dadd( -79.7928, -70.5191, -13.3115, 0.66 ) }
    dend_5 { pt3dadd( -79.9541, -71.4062, -13.4387, 0.96 ) }
    dend_5 { pt3dadd( -80.1366, -72.4348, -13.5623, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_5 { pt3dadd( -80.3607, -73.7046, -13.7015, 0.59 ) }
    dend_5 { pt3dadd( -80.5244, -74.7797, -13.8258, 0.52 ) }
    dend_5 { pt3dadd( -80.6086, -75.9043, -14.0034, 0.96 ) }
    dend_5 { pt3dadd( -80.5692, -76.9724, -14.2703, 0.74 ) }
    dend_5 { pt3dadd( -80.4139, -78.0268, -14.6112, 0.59 ) }
    dend_5 { pt3dadd( -80.0846, -79.2232, -15.1058, 0.59 ) }
    dend_5 { pt3dadd( -79.7011, -80.2219, -15.6174, 0.44 ) }
    dend_5 { pt3dadd( -79.2915, -81.1886, -16.2179, 0.37 ) }
    dend_5 { pt3dadd( -78.9296, -82.0504, -16.8442, 0.66 ) }
    dend_5 { pt3dadd( -78.638, -82.8313, -17.5147, 0.88 ) }
    dend_5 { pt3dadd( -78.4085, -83.6674, -18.3556, 0.44 ) }
    dend_5 { pt3dadd( -78.3513, -84.3898, -19.3204, 0.66 ) }
    dend_5 { pt3dadd( -78.4252, -85.0274, -20.4384, 0.66 ) }
    dend_5 { pt3dadd( -78.5646, -85.5089, -21.4696, 0.81 ) }
    dend_5 { pt3dadd( -78.8467, -86.2189, -23.1703, 0.52 ) }
    dend_5 { pt3dadd( -79.0428, -86.6812, -24.3954, 0.52 ) }
    dend_5 { pt3dadd( -79.3621, -87.4792, -26.7318, 0.52 ) }
    dend_5 { pt3dadd( -79.4976, -87.9201, -28.2903, 0.52 ) }
    dend_5 { pt3dadd( -79.5415, -88.2441, -29.6507, 0.52 ) }
    dend_5 { pt3dadd( -79.5209, -88.621, -31.3222, 0.44 ) }
    dend_5 { pt3dadd( -79.4369, -88.8952, -32.5326, 0.44 ) }
    dend_5 { pt3dadd( -79.2941, -89.1693, -33.7357, 0.66 ) }
    dend_5 { pt3dadd( -79.0022, -89.5548, -35.4055, 0.81 ) }
    dend_5 { pt3dadd( -78.8988, -89.6321, -35.9476, 0.52 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 24/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -91.9066, -33.8246, -20.9339, 0.29 ) }
    dend_3 { pt3dadd( -92.7832, -32.3425, -20.9339, 0.29 ) }
    dend_3 { pt3dadd( -93.2453, -31.561, -20.9339, 0.22 ) }
    dend_3 { pt3dadd( -93.7357, -30.7319, -20.9339, 0.22 ) }
    dend_3 { pt3dadd( -94.2473, -29.8669, -20.9339, 0.22 ) }
    dend_3 { pt3dadd( -99.4378, -21.4586, -22.4704, 0.22 ) }
    dend_3 { pt3dadd( -104.283, -12.7525, -23.3232, 0.22 ) }
    dend_3 { pt3dadd( -109.22, -4.20042, -24.9013, 0.22 ) }
    dend_3 { pt3dadd( -113.997, 4.01113, -28.0235, 0.22 ) }
    dend_3 { pt3dadd( -117.708, 12.1177, -32.5525, 0.22 ) }
    dend_3 { pt3dadd( -119.506, 21.4069, -35.7893, 0.22 ) }
    dend_3 { pt3dadd( -120.717, 30.8209, -38.9377, 0.22 ) }
    dend_3 { pt3dadd( -120.818, 40.7617, -40.0191, 0.22 ) }
    dend_3 { pt3dadd( -119.296, 50.6451, -40.0579, 0.22 ) }
    dend_3 { pt3dadd( -117.461, 60.3511, -38.4995, 0.22 ) }
    dend_3 { pt3dadd( -114.54, 69.8258, -37.1963, 0.22 ) }
    dend_3 { pt3dadd( -110.852, 79.1027, -36.619, 0.22 ) }
    dend_3 { pt3dadd( -107.204, 88.208, -34.6719, 0.22 ) }
    dend_3 { pt3dadd( -103.198, 97.3314, -33.8269, 0.22 ) }
    dend_3 { pt3dadd( -98.9447, 106.356, -34.5136, 0.22 ) }
    dend_3 { pt3dadd( -94.35, 115.212, -33.8373, 0.22 ) }
    dend_3 { pt3dadd( -90.4591, 124.39, -33.0476, 0.22 ) }
    dend_3 { pt3dadd( -87.5482, 133.949, -32.6404, 0.22 ) }
    dend_3 { pt3dadd( -83.7623, 143.168, -31.8211, 0.22 ) }
    dend_3 { pt3dadd( -79.4026, 152.142, -31.1409, 0.22 ) }
    dend_3 { pt3dadd( -75.63, 161.339, -30.0553, 0.22 ) }
    dend_3 { pt3dadd( -72.6315, 170.877, -30.269, 0.22 ) }
    dend_3 { pt3dadd( -68.9433, 180.111, -31.331, 0.22 ) }
    dend_3 { pt3dadd( -66.7133, 189.84, -30.7383, 0.22 ) }
    dend_3 { pt3dadd( -65.4913, 199.637, -29.1421, 0.22 ) }
    dend_3 { pt3dadd( -65.6204, 209.456, -27.2585, 0.22 ) }
    dend_3 { pt3dadd( -66.8855, 219.256, -25.7189, 0.22 ) }
    dend_3 { pt3dadd( -68.7653, 229.025, -24.7065, 0.22 ) }
    dend_3 { pt3dadd( -69.8913, 238.96, -24.4956, 0.22 ) }
    dend_3 { pt3dadd( -72.4567, 248.467, -26.2347, 0.22 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 59/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -91.9066, -33.8246, -20.9339, 0.96 ) }
    dend_2 { pt3dadd( -92.8978, -34.2279, -20.8968, 0.96 ) }
    dend_2 { pt3dadd( -93.5262, -34.4702, -20.8646, 0.88 ) }
    dend_2 { pt3dadd( -95.345, -35.0184, -20.6986, 0.52 ) }
    dend_2 { pt3dadd( -96.7716, -35.3123, -20.4751, 0.37 ) }
    dend_2 { pt3dadd( -97.549, -35.4029, -20.295, 0.59 ) }
    dend_2 { pt3dadd( -98.6091, -35.4904, -20.0116, 0.52 ) }
    dend_2 { pt3dadd( -99.2436, -35.5071, -19.8137, 0.74 ) }
    dend_2 { pt3dadd( -100.538, -35.5488, -19.3229, 0.44 ) }
    dend_2 { pt3dadd( -101.644, -35.6154, -18.7951, 0.44 ) }
    dend_2 { pt3dadd( -102.97, -35.742, -18.1086, 0.29 ) }
    dend_2 { pt3dadd( -103.848, -35.8209, -17.6538, 0.29 ) }
    dend_2 { pt3dadd( -104.772, -35.8586, -17.2136, 0.22 ) }
    dend_2 { pt3dadd( -105.935, -35.8534, -16.7139, 0.29 ) }
    dend_2 { pt3dadd( -106.573, -35.8431, -16.4762, 0.29 ) }
    dend_2 { pt3dadd( -107.87, -35.7635, -16.0486, 0.29 ) }
    dend_2 { pt3dadd( -109.168, -35.5798, -15.6321, 0.29 ) }
    dend_2 { pt3dadd( -110.425, -35.274, -15.2247, 0.22 ) }
    dend_2 { pt3dadd( -111.574, -34.8763, -14.8674, 0.22 ) }
    dend_2 { pt3dadd( -112.279, -34.5676, -14.6748, 0.29 ) }
    dend_2 { pt3dadd( -112.63, -34.4008, -14.5871, 0.29 ) }
    dend_2 { pt3dadd( -122.41, -35.3184, -12.7112, 0.29 ) }
    dend_2 { pt3dadd( -131.828, -36.9585, -9.77724, 0.29 ) }
    dend_2 { pt3dadd( -140.898, -38.1509, -5.73802, 0.29 ) }
    dend_2 { pt3dadd( -149.963, -41.0127, -2.63399, 0.29 ) }
    // Section: dend_59, id: dend_59, parent: dend_55 (entry count 84/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -88.3221, 34.3473, 7.17618, 0.59 ) }
    dend_59 { pt3dadd( -88.52, 34.8994, 6.28686, 0.59 ) }
    dend_59 { pt3dadd( -88.7231, 35.4229, 5.36178, 0.44 ) }
    dend_59 { pt3dadd( -88.9852, 36.142, 4.12945, 0.29 ) }
    dend_59 { pt3dadd( -89.0747, 36.7565, 3.22204, 0.29 ) }
    dend_59 { pt3dadd( -89.0392, 37.0833, 2.80384, 0.29 ) }
    dend_59 { pt3dadd( -88.9851, 37.2679, 2.56935, 0.29 ) }
    dend_59 { pt3dadd( -88.85, 37.5629, 2.15686, 0.29 ) }
    dend_59 { pt3dadd( -88.6125, 37.9591, 1.56833, 0.29 ) }
    dend_59 { pt3dadd( -88.0595, 38.7931, 0.349854, 0.29 ) }
    dend_59 { pt3dadd( -87.613, 39.4204, -0.594457, 0.22 ) }
    dend_59 { pt3dadd( -87.135, 40.0741, -1.62733, 0.59 ) }
    dend_59 { pt3dadd( -86.5257, 41.0039, -3.12829, 1.03 ) }
    dend_59 { pt3dadd( -86.1898, 41.5812, -4.14946, 1.03 ) }
    dend_59 { pt3dadd( -85.8924, 42.1864, -5.35865, 0.29 ) }
    dend_59 { pt3dadd( -85.6914, 42.7795, -6.66468, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_59 { pt3dadd( -85.6054, 43.228, -7.6255, 0.88 ) }
    dend_59 { pt3dadd( -85.5691, 43.8778, -8.80109, 0.29 ) }
    dend_59 { pt3dadd( -85.6273, 44.4665, -9.68592, 0.29 ) }
    dend_59 { pt3dadd( -85.7998, 44.948, -10.3591, 0.66 ) }
    dend_59 { pt3dadd( -86.0729, 45.3589, -10.8919, 0.88 ) }
    dend_59 { pt3dadd( -86.5463, 45.865, -11.4704, 0.59 ) }
    dend_59 { pt3dadd( -87.4574, 46.6843, -12.2702, 0.44 ) }
    dend_59 { pt3dadd( -88.0896, 47.1696, -12.6619, 0.29 ) }
    dend_59 { pt3dadd( -89.2991, 47.9735, -13.213, 0.22 ) }
    dend_59 { pt3dadd( -89.8164, 48.2373, -13.3944, 0.22 ) }
    dend_59 { pt3dadd( -90.7516, 48.5751, -13.6524, 0.59 ) }
    dend_59 { pt3dadd( -91.7893, 48.8083, -13.8899, 0.29 ) }
    dend_59 { pt3dadd( -93.3123, 48.9749, -14.1657, 0.22 ) }
    dend_59 { pt3dadd( -94.2532, 49.018, -14.3194, 0.22 ) }
    dend_59 { pt3dadd( -95.3227, 49.0217, -14.4837, 0.44 ) }
    dend_59 { pt3dadd( -96.3441, 48.9604, -14.6591, 0.44 ) }
    dend_59 { pt3dadd( -97.4281, 48.819, -14.8686, 0.74 ) }
    dend_59 { pt3dadd( -98.4025, 48.6148, -15.0895, 0.44 ) }
    dend_59 { pt3dadd( -99.3503, 48.3415, -15.343, 0.37 ) }
    dend_59 { pt3dadd( -100.389, 47.9868, -15.6554, 0.96 ) }
    dend_59 { pt3dadd( -101.77, 47.4368, -16.1113, 0.22 ) }
    dend_59 { pt3dadd( -102.723, 46.9962, -16.461, 0.74 ) }
    dend_59 { pt3dadd( -103.418, 46.6461, -16.7211, 0.22 ) }
    dend_59 { pt3dadd( -104.086, 46.3252, -16.9356, 0.22 ) }
    dend_59 { pt3dadd( -104.425, 46.1787, -17.007, 0.22 ) }
    dend_59 { pt3dadd( -104.804, 46.0358, -17.0759, 0.22 ) }
    dend_59 { pt3dadd( -105.558, 45.8365, -17.201, 0.22 ) }
    dend_59 { pt3dadd( -106.452, 45.6838, -17.3647, 0.44 ) }
    dend_59 { pt3dadd( -107.679, 45.5208, -17.6226, 0.74 ) }
    dend_59 { pt3dadd( -108.885, 45.3559, -17.9242, 0.29 ) }
    dend_59 { pt3dadd( -109.903, 45.1523, -18.2339, 0.44 ) }
    dend_59 { pt3dadd( -111.057, 44.8146, -18.6586, 0.37 ) }
    dend_59 { pt3dadd( -111.974, 44.4536, -19.051, 0.81 ) }
    dend_59 { pt3dadd( -112.684, 44.1143, -19.406, 0.66 ) }
    dend_59 { pt3dadd( -113.419, 43.7263, -19.8055, 1.03 ) }
    dend_59 { pt3dadd( -114.599, 43.0891, -20.4675, 0.29 ) }
    dend_59 { pt3dadd( -115.585, 42.5918, -20.9871, 0.52 ) }
    dend_59 { pt3dadd( -117.014, 41.9462, -21.704, 0.37 ) }
    dend_59 { pt3dadd( -117.813, 41.6641, -22.059, 0.37 ) }
    dend_59 { pt3dadd( -119.005, 41.4004, -22.5045, 0.29 ) }
    dend_59 { pt3dadd( -119.855, 41.3208, -22.766, 0.29 ) }
    dend_59 { pt3dadd( -120.923, 41.3573, -23.0416, 0.52 ) }
    dend_59 { pt3dadd( -121.442, 41.4252, -23.1478, 0.52 ) }
    dend_59 { pt3dadd( -122.008, 41.5473, -23.2481, 0.22 ) }
    dend_59 { pt3dadd( -122.656, 41.7339, -23.3733, 0.59 ) }
    dend_59 { pt3dadd( -123.713, 42.1358, -23.6094, 0.29 ) }
    dend_59 { pt3dadd( -124.063, 42.3028, -23.7026, 0.29 ) }
    dend_59 { pt3dadd( -125.002, 42.8309, -24.0643, 0.22 ) }
    dend_59 { pt3dadd( -125.665, 43.226, -24.3976, 0.37 ) }
    dend_59 { pt3dadd( -126.342, 43.6551, -24.7927, 0.52 ) }
    dend_59 { pt3dadd( -126.724, 43.9262, -25.0457, 0.29 ) }
    dend_59 { pt3dadd( -127.217, 44.3498, -25.4225, 0.44 ) }
    dend_59 { pt3dadd( -127.994, 45.0795, -26.0931, 0.22 ) }
    dend_59 { pt3dadd( -128.54, 45.6665, -26.6497, 0.15 ) }
    dend_59 { pt3dadd( -128.977, 46.1151, -27.0782, 0.29 ) }
    dend_59 { pt3dadd( -137.108, 49.5962, -31.7447, 0.29 ) }
    dend_59 { pt3dadd( -144.901, 53.6917, -36.4876, 0.29 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 57/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -88.3221, 34.3473, 7.17618, 1.55 ) }
    dend_56 { pt3dadd( -89.5784, 34.592, 6.99543, 1.55 ) }
    dend_56 { pt3dadd( -90.7209, 34.872, 6.89001, 0.81 ) }
    dend_56 { pt3dadd( -91.9271, 35.2627, 6.78691, 0.37 ) }
    dend_56 { pt3dadd( -93.241, 35.7518, 6.6707, 0.59 ) }
    dend_56 { pt3dadd( -94.0674, 36.0733, 6.57361, 0.59 ) }
    dend_56 { pt3dadd( -94.9347, 36.4021, 6.43742, 0.59 ) }
    dend_56 { pt3dadd( -95.8886, 36.7958, 6.21286, 0.29 ) }
    dend_56 { pt3dadd( -96.7933, 37.1852, 5.91061, 0.22 ) }
    dend_56 { pt3dadd( -97.068, 37.2938, 5.7773, 0.22 ) }
    dend_56 { pt3dadd( -97.7709, 37.5152, 5.26832, 0.22 ) }
    dend_56 { pt3dadd( -98.5977, 37.7119, 4.56076, 0.44 ) }
    dend_56 { pt3dadd( -99.3204, 37.8786, 3.92671, 1.25 ) }
    dend_56 { pt3dadd( -99.9407, 38.0333, 3.40427, 1.4 ) }
    dend_56 { pt3dadd( -101.061, 38.3454, 2.55742, 0.66 ) }
    dend_56 { pt3dadd( -101.873, 38.6376, 2.01314, 0.88 ) }
    dend_56 { pt3dadd( -102.832, 39.0841, 1.48372, 1.47 ) }
    dend_56 { pt3dadd( -104.09, 39.792, 1.00611, 0.37 ) }
    dend_56 { pt3dadd( -104.919, 40.3214, 0.829047, 0.29 ) }
    dend_56 { pt3dadd( -105.427, 40.6786, 0.765367, 0.88 ) }
    dend_56 { pt3dadd( -106.047, 41.1582, 0.720401, 0.88 ) }
    dend_56 { pt3dadd( -106.911, 41.8641, 0.653687, 0.44 ) }
    dend_56 { pt3dadd( -108.253, 43.0384, 0.511366, 0.44 ) }
    dend_56 { pt3dadd( -109.359, 44.0502, 0.346723, 0.52 ) }
    dend_56 { pt3dadd( -110.226, 44.8863, 0.201842, 0.22 ) }
    dend_56 { pt3dadd( -110.749, 45.4274, 0.10569, 0.22 ) }
    dend_56 { pt3dadd( -111.368, 46.1481, -0.0220912, 0.22 ) }
    dend_56 { pt3dadd( -112.014, 47.0372, -0.169153, 0.44 ) }
    dend_56 { pt3dadd( -112.425, 47.7164, -0.233307, 0.22 ) }
    dend_56 { pt3dadd( -112.752, 48.2713, -0.243692, 0.74 ) }
    dend_56 { pt3dadd( -113.148, 48.9337, -0.209849, 1.33 ) }
    dend_56 { pt3dadd( -113.654, 49.7404, -0.165945, 1.03 ) }
    dend_56 { pt3dadd( -114.354, 50.8214, -0.117133, 0.37 ) }
    dend_56 { pt3dadd( -115.215, 52.0361, -0.160349, 0.74 ) }
    dend_56 { pt3dadd( -116.159, 53.2115, -0.281463, 0.22 ) }
    dend_56 { pt3dadd( -116.492, 53.5724, -0.33391, 0.52 ) }
    dend_56 { pt3dadd( -117.357, 54.3667, -0.473357, 1.03 ) }
    dend_56 { pt3dadd( -117.907, 54.7765, -0.563179, 1.03 ) }
    dend_56 { pt3dadd( -119.28, 55.5742, -0.840371, 0.22 ) }
    dend_56 { pt3dadd( -120.435, 56.0797, -1.11083, 0.22 ) }
    dend_56 { pt3dadd( -121.348, 56.344, -1.29434, 0.37 ) }
    dend_56 { pt3dadd( -122.108, 56.4597, -1.41873, 0.44 ) }
    dend_56 { pt3dadd( -123.001, 56.4619, -1.48647, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_56 { pt3dadd( -124.127, 56.318, -1.47726, 0.22 ) }
    dend_56 { pt3dadd( -124.574, 56.2148, -1.44082, 0.37 ) }
    dend_56 { pt3dadd( -125.51, 55.9485, -1.37719, 0.88 ) }
    dend_56 { pt3dadd( -126.397, 55.6779, -1.34046, 0.96 ) }
    dend_56 { pt3dadd( -127.832, 55.2386, -1.2513, 1.33 ) }
    dend_56 { pt3dadd( -129.481, 54.772, -1.09851, 0.44 ) }
    dend_56 { pt3dadd( -130.289, 54.5602, -0.988929, 0.22 ) }
    dend_56 { pt3dadd( -131.249, 54.307, -0.863675, 0.81 ) }
    dend_56 { pt3dadd( -132.147, 54.0575, -0.764933, 1.25 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 9/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 36.6136, -83.6133, -11.1341, 1.7 ) }
    dend_48 { pt3dadd( 36.4376, -84.4924, -11.7624, 1.7 ) }
    dend_48 { pt3dadd( 36.2102, -85.6597, -12.4589, 0.81 ) }
    dend_48 { pt3dadd( 35.9916, -87.0734, -13.0855, 0.81 ) }
    dend_48 { pt3dadd( 35.8815, -88.1663, -13.4641, 0.88 ) }
    dend_48 { pt3dadd( 35.8051, -89.735, -13.8714, 0.59 ) }
    dend_48 { pt3dadd( 35.7921, -90.5595, -13.9936, 0.88 ) }
    dend_48 { pt3dadd( 35.8252, -91.4612, -14.0093, 0.96 ) }
    dend_48 { pt3dadd( 35.963, -92.9051, -13.8186, 0.74 ) }
    dend_48 { pt3dadd( 36.0687, -93.7801, -13.593, 0.88 ) }
    dend_48 { pt3dadd( 36.244, -95.3024, -13.0522, 0.74 ) }
    dend_48 { pt3dadd( 36.4165, -96.8479, -12.4294, 0.81 ) }
    dend_48 { pt3dadd( 36.496, -97.6763, -12.0988, 0.81 ) }
    dend_48 { pt3dadd( 36.5705, -98.4889, -11.7603, 0.52 ) }
    dend_48 { pt3dadd( 36.6713, -99.5988, -11.3299, 0.52 ) }
    dend_48 { pt3dadd( 36.8014, -100.677, -10.9147, 1.03 ) }
    dend_48 { pt3dadd( 37.0046, -101.693, -10.5121, 1.55 ) }
    dend_48 { pt3dadd( 37.3926, -102.932, -10.0142, 1.4 ) }
    dend_48 { pt3dadd( 37.8631, -103.973, -9.53195, 1.25 ) }
    dend_48 { pt3dadd( 38.5499, -105.198, -8.93566, 0.88 ) }
    dend_48 { pt3dadd( 39.3269, -106.436, -8.37622, 0.52 ) }
    dend_48 { pt3dadd( 40.0441, -107.531, -7.92019, 0.66 ) }
    dend_48 { pt3dadd( 40.7581, -108.648, -7.53498, 0.96 ) }
    dend_48 { pt3dadd( 41.5358, -109.921, -7.22703, 0.96 ) }
    dend_48 { pt3dadd( 42.2503, -111.137, -7.12163, 0.59 ) }
    dend_48 { pt3dadd( 42.8437, -112.172, -7.16557, 1.11 ) }
    dend_48 { pt3dadd( 43.4083, -113.293, -7.39379, 0.59 ) }
    dend_48 { pt3dadd( 44.0721, -114.816, -7.8785, 0.88 ) }
    dend_48 { pt3dadd( 44.4604, -115.765, -8.2614, 1.18 ) }
    dend_48 { pt3dadd( 44.8558, -116.708, -8.69035, 1.11 ) }
    dend_48 { pt3dadd( 45.1241, -117.297, -8.95693, 1.33 ) }
    dend_48 { pt3dadd( 45.6691, -118.442, -9.3836, 0.96 ) }
    dend_48 { pt3dadd( 46.0976, -119.342, -9.64402, 1.25 ) }
    dend_48 { pt3dadd( 46.6564, -120.487, -9.87164, 1.33 ) }
    dend_48 { pt3dadd( 47.0422, -121.287, -10.0401, 1.11 ) }
    dend_48 { pt3dadd( 47.5194, -122.272, -10.2951, 0.44 ) }
    dend_48 { pt3dadd( 48.0329, -123.227, -10.6107, 1.33 ) }
    dend_48 { pt3dadd( 48.5044, -123.896, -10.8965, 1.18 ) }
    dend_48 { pt3dadd( 49.5188, -124.982, -11.5238, 0.88 ) }
    dend_48 { pt3dadd( 50.6764, -125.929, -12.215, 1.11 ) }
    dend_48 { pt3dadd( 51.5855, -126.524, -12.7456, 1.55 ) }
    dend_48 { pt3dadd( 52.3632, -126.949, -13.185, 1.92 ) }
    dend_48 { pt3dadd( 53.907, -127.69, -14.0545, 0.88 ) }
    dend_48 { pt3dadd( 55.0527, -128.158, -14.6408, 0.66 ) }
    dend_48 { pt3dadd( 56.0675, -128.503, -15.0958, 0.52 ) }
    dend_48 { pt3dadd( 56.6961, -128.693, -15.3523, 0.52 ) }
    dend_48 { pt3dadd( 57.6516, -128.966, -15.7764, 0.81 ) }
    dend_48 { pt3dadd( 58.5158, -129.19, -16.2367, 0.66 ) }
    dend_48 { pt3dadd( 59.7376, -129.49, -16.9916, 0.96 ) }
    dend_48 { pt3dadd( 60.6212, -129.695, -17.5551, 0.96 ) }
    dend_48 { pt3dadd( 62.0136, -129.998, -18.3712, 0.81 ) }
    dend_48 { pt3dadd( 63.3142, -130.304, -19.04, 1.03 ) }
    dend_48 { pt3dadd( 64.8732, -130.733, -19.704, 0.81 ) }
    dend_48 { pt3dadd( 66.1273, -131.16, -20.0992, 0.59 ) }
    dend_48 { pt3dadd( 67.0957, -131.559, -20.3052, 0.74 ) }
    dend_48 { pt3dadd( 68.7528, -132.368, -20.456, 1.11 ) }
    dend_48 { pt3dadd( 69.754, -132.977, -20.4284, 0.96 ) }
    dend_48 { pt3dadd( 70.5867, -133.598, -20.3208, 1.33 ) }
    dend_48 { pt3dadd( 71.2898, -134.227, -20.1645, 1.11 ) }
    dend_48 { pt3dadd( 72.1409, -135.08, -19.8957, 0.66 ) }
    dend_48 { pt3dadd( 72.9679, -135.962, -19.5676, 0.66 ) }
    dend_48 { pt3dadd( 73.8521, -137.025, -19.0672, 0.74 ) }
    dend_48 { pt3dadd( 74.4947, -137.943, -18.533, 0.96 ) }
    dend_48 { pt3dadd( 74.8208, -138.58, -18.1321, 1.11 ) }
    dend_48 { pt3dadd( 75.2464, -139.743, -17.4428, 1.11 ) }
    dend_48 { pt3dadd( 75.4977, -140.753, -16.9256, 0.88 ) }
    dend_48 { pt3dadd( 75.7081, -141.868, -16.4779, 0.74 ) }
    dend_48 { pt3dadd( 75.8972, -142.768, -16.2655, 0.96 ) }
    dend_48 { pt3dadd( 76.3613, -144.312, -16.2542, 0.44 ) }
    dend_48 { pt3dadd( 76.9763, -145.755, -16.4876, 0.66 ) }
    dend_48 { pt3dadd( 77.548, -146.803, -16.7792, 1.11 ) }
    dend_48 { pt3dadd( 77.9818, -147.417, -16.9466, 1.25 ) }
    dend_48 { pt3dadd( 78.9504, -148.499, -17.1592, 0.66 ) }
    dend_48 { pt3dadd( 79.8872, -149.406, -17.2143, 0.96 ) }
    dend_48 { pt3dadd( 80.6568, -150.123, -17.171, 0.44 ) }
    dend_48 { pt3dadd( 81.5655, -151.005, -17.0059, 0.44 ) }
    dend_48 { pt3dadd( 82.9291, -152.402, -16.6832, 0.59 ) }
    dend_48 { pt3dadd( 83.9564, -153.538, -16.4292, 0.44 ) }
    dend_48 { pt3dadd( 84.832, -154.6, -16.2206, 0.96 ) }
    dend_48 { pt3dadd( 85.9065, -155.911, -16.0648, 0.37 ) }
    dend_48 { pt3dadd( 86.661, -156.777, -16.0389, 0.96 ) }
    dend_48 { pt3dadd( 87.2302, -157.371, -16.1049, 0.96 ) }
    dend_48 { pt3dadd( 87.8638, -157.994, -16.2892, 0.59 ) }
    dend_48 { pt3dadd( 88.712, -158.783, -16.6216, 1.03 ) }
    dend_48 { pt3dadd( 90.2066, -160.102, -17.2851, 0.52 ) }
    dend_48 { pt3dadd( 91.2962, -161.054, -17.7883, 0.66 ) }
    dend_48 { pt3dadd( 92.4669, -162.122, -18.354, 0.44 ) }
    dend_48 { pt3dadd( 93.32, -162.993, -18.7515, 0.66 ) }
    dend_48 { pt3dadd( 93.8435, -163.633, -18.9904, 1.11 ) }
    dend_48 { pt3dadd( 94.3372, -164.344, -19.2017, 1.11 ) }
    dend_48 { pt3dadd( 94.9251, -165.348, -19.4359, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_48 { pt3dadd( 95.4122, -166.174, -19.6007, 0.81 ) }
    dend_48 { pt3dadd( 96.2033, -167.305, -19.7896, 0.59 ) }
    dend_48 { pt3dadd( 96.9131, -168.242, -19.9311, 0.66 ) }
    dend_48 { pt3dadd( 97.8709, -169.386, -20.1268, 0.52 ) }
    dend_48 { pt3dadd( 98.3872, -169.914, -20.2275, 0.52 ) }
    dend_48 { pt3dadd( 99.4211, -170.723, -20.401, 0.74 ) }
    dend_48 { pt3dadd( 100.432, -171.288, -20.5212, 1.11 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 7/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 36.6136, -83.6133, -11.1341, 1.03 ) }
    dend_47 { pt3dadd( 36.7449, -84.3521, -10.4133, 1.03 ) }
    dend_47 { pt3dadd( 37.0651, -85.4557, -9.30661, 1.03 ) }
    dend_47 { pt3dadd( 37.6839, -86.9639, -7.86647, 1.25 ) }
    dend_47 { pt3dadd( 38.2205, -87.9988, -6.93929, 1.25 ) }
    dend_47 { pt3dadd( 38.8975, -89.0832, -6.028, 1.47 ) }
    dend_47 { pt3dadd( 39.7664, -90.3157, -5.03449, 1.4 ) }
    dend_47 { pt3dadd( 40.3835, -91.0584, -4.47902, 1.25 ) }
    dend_47 { pt3dadd( 41.4356, -92.2362, -3.70617, 1.03 ) }
    dend_47 { pt3dadd( 42.2208, -93.0897, -3.19085, 1.03 ) }
    dend_47 { pt3dadd( 42.9862, -93.9335, -2.6763, 0.96 ) }
    dend_47 { pt3dadd( 43.8381, -94.939, -2.04257, 1.11 ) }
    dend_47 { pt3dadd( 44.4547, -95.7807, -1.51873, 0.74 ) }
    dend_47 { pt3dadd( 45.0273, -96.6767, -0.928607, 1.03 ) }
    dend_47 { pt3dadd( 45.612, -97.6988, -0.198502, 1.47 ) }
    dend_47 { pt3dadd( 46.2178, -98.8659, 0.653012, 1.92 ) }
    dend_47 { pt3dadd( 46.772, -99.9473, 1.44144, 1.47 ) }
    dend_47 { pt3dadd( 47.4476, -101.204, 2.35788, 1.84 ) }
    dend_47 { pt3dadd( 48.3273, -102.776, 3.48877, 1.03 ) }
    dend_47 { pt3dadd( 48.8124, -103.641, 4.07151, 1.11 ) }
    dend_47 { pt3dadd( 49.3719, -104.623, 4.68817, 1.4 ) }
    dend_47 { pt3dadd( 50.1822, -105.921, 5.45865, 1.18 ) }
    dend_47 { pt3dadd( 50.9648, -106.976, 6.04629, 1.03 ) }
    dend_47 { pt3dadd( 51.9153, -108.036, 6.57881, 0.81 ) }
    dend_47 { pt3dadd( 52.713, -108.817, 6.92726, 0.66 ) }
    dend_47 { pt3dadd( 53.6864, -109.701, 7.23556, 0.66 ) }
    dend_47 { pt3dadd( 54.699, -110.563, 7.42611, 1.18 ) }
    dend_47 { pt3dadd( 55.8412, -111.522, 7.45503, 1.33 ) }
    dend_47 { pt3dadd( 57.1018, -112.572, 7.28943, 0.52 ) }
    dend_47 { pt3dadd( 57.8202, -113.192, 7.09607, 0.96 ) }
    dend_47 { pt3dadd( 58.7927, -114.1, 6.70042, 1.62 ) }
    dend_47 { pt3dadd( 59.6238, -114.955, 6.23952, 1.47 ) }
    dend_47 { pt3dadd( 60.5422, -115.948, 5.61648, 1.03 ) }
    dend_47 { pt3dadd( 61.1432, -116.608, 5.1422, 1.55 ) }
    dend_47 { pt3dadd( 62.3162, -117.865, 4.12494, 0.74 ) }
    dend_47 { pt3dadd( 63.2359, -118.817, 3.32671, 1.25 ) }
    dend_47 { pt3dadd( 63.7588, -119.357, 2.88858, 1.33 ) }
    dend_47 { pt3dadd( 64.7569, -120.382, 2.10258, 0.66 ) }
    dend_47 { pt3dadd( 65.4688, -121.073, 1.58855, 0.96 ) }
    dend_47 { pt3dadd( 66.3486, -121.899, 0.972856, 1.62 ) }
    dend_47 { pt3dadd( 66.8624, -122.361, 0.61808, 1.99 ) }
    dend_47 { pt3dadd( 68.3114, -123.584, -0.310173, 0.66 ) }
    dend_47 { pt3dadd( 69.1483, -124.257, -0.82197, 1.11 ) }
    dend_47 { pt3dadd( 69.8167, -124.797, -1.27497, 1.33 ) }
    dend_47 { pt3dadd( 70.741, -125.575, -1.99929, 0.59 ) }
    dend_47 { pt3dadd( 71.2975, -126.096, -2.52699, 1.11 ) }
    dend_47 { pt3dadd( 72.1332, -126.99, -3.52658, 0.44 ) }
    dend_47 { pt3dadd( 72.5888, -127.553, -4.23964, 0.59 ) }
    dend_47 { pt3dadd( 73.399, -128.74, -5.83216, 0.81 ) }
    dend_47 { pt3dadd( 73.8199, -129.466, -6.82899, 0.59 ) }
    dend_47 { pt3dadd( 74.1818, -130.151, -7.75301, 0.59 ) }
    dend_47 { pt3dadd( 74.5224, -130.87, -8.6682, 0.59 ) }
    dend_47 { pt3dadd( 75.0218, -132.076, -10.0625, 1.03 ) }
    dend_47 { pt3dadd( 75.2953, -132.742, -10.7479, 0.88 ) }
    dend_47 { pt3dadd( 75.6952, -133.743, -11.5776, 1.03 ) }
    dend_47 { pt3dadd( 76.0769, -134.815, -12.2954, 0.52 ) }
    dend_47 { pt3dadd( 76.3802, -135.886, -12.8216, 0.52 ) }
    dend_47 { pt3dadd( 76.6092, -136.996, -13.1856, 0.74 ) }
    dend_47 { pt3dadd( 76.6942, -137.582, -13.3181, 0.88 ) }
    dend_47 { pt3dadd( 76.8748, -139.046, -13.6035, 0.66 ) }
    dend_47 { pt3dadd( 76.9908, -139.913, -13.7798, 1.18 ) }
    dend_47 { pt3dadd( 77.1954, -141.061, -14.08, 0.66 ) }
    dend_47 { pt3dadd( 77.4939, -142.189, -14.4593, 0.66 ) }
    dend_47 { pt3dadd( 77.8677, -143.188, -14.8721, 0.88 ) }
    dend_47 { pt3dadd( 78.3127, -144.123, -15.309, 0.74 ) }
    dend_47 { pt3dadd( 79.0417, -145.373, -15.922, 0.59 ) }
    dend_47 { pt3dadd( 79.7016, -146.38, -16.3614, 0.59 ) }
    dend_47 { pt3dadd( 80.2493, -147.189, -16.6398, 0.52 ) }
    dend_47 { pt3dadd( 80.7631, -147.971, -16.8289, 0.44 ) }
    dend_47 { pt3dadd( 81.1606, -148.65, -16.9516, 0.59 ) }
    dend_47 { pt3dadd( 81.6621, -149.695, -17.1339, 1.03 ) }
    dend_47 { pt3dadd( 82.189, -151.16, -17.4599, 0.74 ) }
    dend_47 { pt3dadd( 82.5826, -152.509, -17.9079, 0.52 ) }
    dend_47 { pt3dadd( 82.7918, -153.186, -18.2642, 0.37 ) }
    dend_47 { pt3dadd( 83.1926, -154.212, -19.1456, 0.52 ) }
    dend_47 { pt3dadd( 83.6334, -154.957, -20.1272, 0.52 ) }
    dend_47 { pt3dadd( 84.1406, -155.536, -21.2197, 0.66 ) }
    dend_47 { pt3dadd( 84.7382, -156.029, -22.4519, 0.74 ) }
    dend_47 { pt3dadd( 85.3787, -156.475, -23.7236, 0.52 ) }
    dend_47 { pt3dadd( 86.1277, -156.981, -25.178, 0.88 ) }
    dend_47 { pt3dadd( 86.778, -157.452, -26.405, 0.59 ) }
    dend_47 { pt3dadd( 87.1272, -157.755, -27.1086, 0.52 ) }
    dend_47 { pt3dadd( 87.2992, -157.957, -27.5383, 0.52 ) }
    dend_47 { pt3dadd( 87.6286, -158.579, -28.7199, 0.66 ) }
    dend_47 { pt3dadd( 87.8441, -159.113, -29.6676, 0.52 ) }
    dend_47 { pt3dadd( 88.098, -159.592, -30.5505, 0.81 ) }
    dend_47 { pt3dadd( 88.5053, -160.072, -31.5669, 0.66 ) }
    dend_47 { pt3dadd( 89.037, -160.399, -32.4822, 0.81 ) }
    dend_47 { pt3dadd( 89.7659, -160.682, -33.5, 0.59 ) }
    dend_47 { pt3dadd( 90.7909, -160.951, -34.7185, 0.88 ) }
    dend_47 { pt3dadd( 91.8811, -161.231, -35.8354, 0.52 ) }
    dend_47 { pt3dadd( 92.8916, -161.501, -36.7663, 0.88 ) }
    dend_47 { pt3dadd( 94.1639, -161.863, -37.8894, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_47 { pt3dadd( 95.1299, -162.139, -38.739, 0.74 ) }
    dend_47 { pt3dadd( 95.7688, -162.3, -39.3381, 0.52 ) }
    dend_47 { pt3dadd( 97.1087, -162.639, -40.7536, 0.44 ) }
    dend_47 { pt3dadd( 97.7008, -162.82, -41.5026, 0.37 ) }
    dend_47 { pt3dadd( 98.428, -163.082, -42.6259, 0.37 ) }
    dend_47 { pt3dadd( 98.8362, -163.294, -43.3806, 0.29 ) }
    dend_47 { pt3dadd( 99.4165, -163.664, -44.4941, 0.29 ) }
    dend_47 { pt3dadd( 99.7128, -163.908, -45.0484, 0.29 ) }
    dend_47 { pt3dadd( 100.048, -164.251, -45.6198, 0.29 ) }
    dend_47 { pt3dadd( 100.483, -164.868, -46.1459, 0.29 ) }
    dend_47 { pt3dadd( 101.286, -166.132, -46.8025, 0.29 ) }
    dend_47 { pt3dadd( 101.837, -166.945, -47.0971, 0.22 ) }
    dend_47 { pt3dadd( 102.408, -167.798, -47.3308, 0.22 ) }
    dend_47 { pt3dadd( 102.89, -168.49, -47.4851, 0.22 ) }
    dend_47 { pt3dadd( 103.652, -169.572, -47.6698, 0.22 ) }
    dend_47 { pt3dadd( 104.017, -170.074, -47.7352, 0.22 ) }
    dend_47 { pt3dadd( 104.735, -170.902, -47.8558, 0.22 ) }
    dend_47 { pt3dadd( 110.556, -177.921, -51.9606, 0.22 ) }
    dend_47 { pt3dadd( 115.247, -186.33, -54.6597, 0.22 ) }
    // Section: dend_36, id: dend_36, parent: dend_32 (entry count 19/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 38.0789, -36.9099, -42.661, 0.29 ) }
    dend_36 { pt3dadd( 36.6087, -36.7643, -41.9622, 0.29 ) }
    dend_36 { pt3dadd( 35.1292, -36.6153, -41.1752, 0.22 ) }
    dend_36 { pt3dadd( 34.0153, -36.5224, -40.4615, 0.29 ) }
    dend_36 { pt3dadd( 32.9898, -36.4639, -39.6135, 0.29 ) }
    dend_36 { pt3dadd( 32.5305, -36.4569, -39.1137, 0.29 ) }
    dend_36 { pt3dadd( 32.2745, -36.4654, -38.7238, 0.29 ) }
    dend_36 { pt3dadd( 31.9452, -36.4808, -37.988, 0.29 ) }
    dend_36 { pt3dadd( 31.7676, -36.5476, -37.1602, 0.29 ) }
    dend_36 { pt3dadd( 31.6524, -36.6481, -36.1181, 0.29 ) }
    dend_36 { pt3dadd( 31.6703, -36.7785, -35.1991, 0.52 ) }
    dend_36 { pt3dadd( 31.7634, -36.9838, -34.0191, 0.52 ) }
    dend_36 { pt3dadd( 25.8574, -37.1353, -25.9509, 0.52 ) }
    dend_36 { pt3dadd( 18.6513, -37.7762, -19.0472, 0.52 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 33/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 38.0789, -36.9099, -42.661, 0.81 ) }
    dend_33 { pt3dadd( 37.8607, -38.6506, -43.7196, 0.81 ) }
    dend_33 { pt3dadd( 37.702, -39.6445, -44.325, 0.81 ) }
    dend_33 { pt3dadd( 37.5191, -40.8203, -44.9875, 0.81 ) }
    dend_33 { pt3dadd( 37.3437, -41.9811, -45.5979, 0.59 ) }
    dend_33 { pt3dadd( 37.1657, -43.0836, -46.1196, 0.59 ) }
    dend_33 { pt3dadd( 37.0283, -44.026, -46.5274, 1.18 ) }
    dend_33 { pt3dadd( 36.9597, -44.5599, -46.7127, 1.4 ) }
    dend_33 { pt3dadd( 36.8826, -45.6272, -47.0189, 0.22 ) }
    dend_33 { pt3dadd( 36.8849, -46.0707, -47.1012, 0.22 ) }
    dend_33 { pt3dadd( 36.9638, -47.2211, -47.0931, 0.37 ) }
    dend_33 { pt3dadd( 37.0835, -48.4172, -46.7407, 0.22 ) }
    dend_33 { pt3dadd( 37.1757, -49.2093, -46.2763, 0.22 ) }
    dend_33 { pt3dadd( 37.2315, -50.3663, -45.3337, 0.29 ) }
    dend_33 { pt3dadd( 37.1616, -51.1958, -44.4433, 0.29 ) }
    dend_33 { pt3dadd( 37.076, -51.8442, -43.5976, 0.29 ) }
    dend_33 { pt3dadd( 36.9829, -52.2582, -42.9028, 0.29 ) }
    dend_33 { pt3dadd( 36.8715, -52.5167, -42.3777, 0.29 ) }
    dend_33 { pt3dadd( 36.5865, -52.9534, -41.4703, 0.22 ) }
    dend_33 { pt3dadd( 36.2653, -53.3285, -40.8794, 0.22 ) }
    dend_33 { pt3dadd( 35.731, -63.3112, -41.1262, 0.22 ) }
    dend_33 { pt3dadd( 34.9403, -73.2678, -40.6359, 0.22 ) }
    dend_33 { pt3dadd( 32.602, -82.9568, -39.8266, 0.22 ) }
    dend_33 { pt3dadd( 30.2848, -92.6803, -39.5355, 0.22 ) }
    // Section: dend_27, id: dend_27, parent: dend_23 (entry count 57/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 67.1679, 102.738, -43.5893, 0.15 ) }
    dend_27 { pt3dadd( 71.2924, 109.635, -49.5418, 0.15 ) }
    dend_27 { pt3dadd( 75.8063, 116.832, -54.8163, 0.15 ) }
    dend_27 { pt3dadd( 78.6911, 123.792, -61.392, 0.15 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 61/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 67.1679, 102.738, -43.5893, 0.15 ) }
    dend_24 { pt3dadd( 70.79, 109.955, -49.4887, 0.15 ) }
    dend_24 { pt3dadd( 74.8076, 117.922, -54.0028, 0.15 ) }
    dend_24 { pt3dadd( 77.8621, 126.254, -58.6131, 0.15 ) }
    // Section: dend_20, id: dend_20, parent: dend_16 (entry count 65/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 49.7954, 76.8755, 34.0559, 1.18 ) }
    dend_20 { pt3dadd( 50.6599, 76.3658, 34.6956, 1.18 ) }
    dend_20 { pt3dadd( 52.0372, 75.5536, 35.7149, 0.66 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 68/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 49.7954, 76.8755, 34.0559, 0.66 ) }
    dend_17 { pt3dadd( 49.5732, 77.9791, 34.2528, 0.66 ) }
    dend_17 { pt3dadd( 49.5289, 79.1339, 34.4147, 0.29 ) }
    dend_17 { pt3dadd( 49.6004, 79.7576, 34.4812, 0.29 ) }
    dend_17 { pt3dadd( 49.7073, 80.257, 34.5229, 0.29 ) }
    dend_17 { pt3dadd( 49.8339, 80.78, 34.5814, 0.66 ) }
    dend_17 { pt3dadd( 49.9811, 81.3944, 34.6573, 0.96 ) }
    dend_17 { pt3dadd( 50.2647, 82.4934, 34.7851, 0.29 ) }
    dend_17 { pt3dadd( 50.5261, 83.5009, 34.8842, 0.52 ) }
    dend_17 { pt3dadd( 50.7223, 84.3344, 34.949, 0.22 ) }
    dend_17 { pt3dadd( 50.8995, 85.4034, 35.0085, 0.66 ) }
    dend_17 { pt3dadd( 50.9473, 85.876, 35.0271, 0.74 ) }
    dend_17 { pt3dadd( 50.9964, 87.2863, 35.0602, 0.52 ) }
    dend_17 { pt3dadd( 50.9855, 88.0402, 35.0897, 0.81 ) }
    dend_17 { pt3dadd( 50.9616, 89.2492, 35.1824, 1.18 ) }
    dend_17 { pt3dadd( 50.9833, 90.8658, 35.3448, 0.37 ) }
    dend_17 { pt3dadd( 51.0194, 91.3737, 35.403, 0.96 ) }
    dend_17 { pt3dadd( 51.1243, 92.157, 35.5458, 1.55 ) }
    dend_17 { pt3dadd( 51.3665, 93.3208, 35.846, 0.66 ) }
    dend_17 { pt3dadd( 51.6465, 94.4711, 36.2489, 0.22 ) }
    dend_17 { pt3dadd( 51.7878, 95.0005, 36.5035, 0.22 ) }
    dend_17 { pt3dadd( 51.9074, 95.4437, 36.7652, 0.96 ) }
    dend_17 { pt3dadd( 52.1373, 96.3902, 37.3857, 1.4 ) }
    dend_17 { pt3dadd( 52.3009, 97.0951, 37.9149, 0.74 ) }
    dend_17 { pt3dadd( 52.5644, 98.3347, 38.8526, 0.52 ) }
    dend_17 { pt3dadd( 52.7526, 99.31, 39.5402, 0.37 ) }
    dend_17 { pt3dadd( 52.9016, 100.099, 40.0624, 0.37 ) }
    dend_17 { pt3dadd( 52.9982, 100.553, 40.3637, 0.66 ) }
    dend_17 { pt3dadd( 53.2253, 101.513, 40.9377, 0.88 ) }
    dend_17 { pt3dadd( 53.6262, 103.201, 41.8321, 0.29 ) }
    dend_17 { pt3dadd( 53.8918, 104.299, 42.2913, 0.96 ) }
    dend_17 { pt3dadd( 54.0045, 104.791, 42.4482, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_17 { pt3dadd( 54.2471, 105.941, 42.7413, 1.7 ) }
    dend_17 { pt3dadd( 54.5378, 107.461, 43.0529, 0.44 ) }
    dend_17 { pt3dadd( 54.6545, 108.204, 43.1811, 0.44 ) }
    dend_17 { pt3dadd( 54.7743, 109.143, 43.3475, 0.29 ) }
    dend_17 { pt3dadd( 54.8326, 110.039, 43.5323, 0.96 ) }
    dend_17 { pt3dadd( 54.8396, 110.715, 43.665, 1.25 ) }
    dend_17 { pt3dadd( 54.7981, 111.647, 43.8274, 1.25 ) }
    dend_17 { pt3dadd( 54.652, 113.118, 44.1134, 0.22 ) }
    dend_17 { pt3dadd( 54.5509, 113.76, 44.2435, 0.96 ) }
    dend_17 { pt3dadd( 54.2005, 115.249, 44.5766, 0.15 ) }
    dend_17 { pt3dadd( 53.918, 116.296, 44.8308, 0.22 ) }
    dend_17 { pt3dadd( 53.6997, 117.107, 45.0258, 0.22 ) }
    dend_17 { pt3dadd( 53.5285, 117.728, 45.1694, 1.03 ) }
    dend_17 { pt3dadd( 53.2298, 118.806, 45.3967, 1.92 ) }
    dend_17 { pt3dadd( 52.8074, 120.386, 45.7281, 1.47 ) }
    dend_17 { pt3dadd( 52.337, 122.247, 46.1169, 0.44 ) }
    dend_17 { pt3dadd( 51.9811, 123.671, 46.4271, 0.22 ) }
    dend_17 { pt3dadd( 51.754, 124.626, 46.6382, 0.22 ) }
    dend_17 { pt3dadd( 51.4461, 125.988, 46.938, 0.29 ) }
    dend_17 { pt3dadd( 51.163, 127.269, 47.2041, 0.22 ) }
    dend_17 { pt3dadd( 50.9294, 128.202, 47.3683, 1.25 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 21/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -78.8988, -89.6321, -35.9476, 0.22 ) }
    dend_9 { pt3dadd( -79.596, -88.4486, -35.1531, 0.22 ) }
    dend_9 { pt3dadd( -80.2166, -87.3952, -34.446, 0.22 ) }
    dend_9 { pt3dadd( -80.8368, -86.3426, -33.7393, 0.22 ) }
    dend_9 { pt3dadd( -81.3563, -85.4608, -33.1474, 0.15 ) }
    dend_9 { pt3dadd( -81.7997, -84.7083, -32.6422, 0.15 ) }
    dend_9 { pt3dadd( -81.9474, -84.4576, -32.4739, 0.15 ) }
    dend_9 { pt3dadd( -86.1032, -76.8904, -27.4274, 0.15 ) }
    dend_9 { pt3dadd( -90.1946, -69.5756, -21.9727, 0.15 ) }
    dend_9 { pt3dadd( -94.7217, -62.219, -16.9342, 0.15 ) }
    dend_9 { pt3dadd( -99.4855, -54.4359, -12.8442, 0.15 ) }
    dend_9 { pt3dadd( -103.583, -46.4542, -8.42809, 0.15 ) }
    dend_9 { pt3dadd( -109.245, -39.1832, -4.54453, 0.15 ) }
    dend_9 { pt3dadd( -115.157, -31.634, -1.70545, 0.15 ) }
    dend_9 { pt3dadd( -120.769, -23.6436, 0.450886, 0.15 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 36/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -78.8988, -89.6321, -35.9476, 0.29 ) }
    dend_6 { pt3dadd( -79.9031, -88.8746, -36.3121, 0.29 ) }
    dend_6 { pt3dadd( -80.8173, -88.185, -36.6439, 0.29 ) }
    dend_6 { pt3dadd( -81.8513, -87.4051, -37.0192, 0.15 ) }
    dend_6 { pt3dadd( -89.3573, -81.1471, -39.14, 0.15 ) }
    dend_6 { pt3dadd( -97.1694, -74.9121, -39.4482, 0.15 ) }
    dend_6 { pt3dadd( -105.813, -70.3852, -41.639, 0.15 ) }
    dend_6 { pt3dadd( -115.339, -67.3431, -41.7274, 0.15 ) }
    dend_6 { pt3dadd( -124.111, -62.6532, -42.7537, 0.15 ) }
    dend_6 { pt3dadd( -132.565, -57.3857, -43.6393, 0.15 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 46/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -144.901, 53.6917, -36.4876, 0.15 ) }
    dend_61 { pt3dadd( -151.933, 57.6898, -42.3668, 0.15 ) }
    dend_61 { pt3dadd( -158.786, 60.3643, -49.141, 0.15 ) }
    dend_61 { pt3dadd( -165.836, 64.248, -55.0752, 0.15 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 50/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -144.901, 53.6917, -36.4876, 0.15 ) }
    dend_60 { pt3dadd( -152.782, 55.5898, -42.3435, 0.15 ) }
    dend_60 { pt3dadd( -160.31, 57.9704, -48.4797, 0.15 ) }
    dend_60 { pt3dadd( -167.42, 60.7457, -54.9416, 0.15 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 54/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -132.147, 54.0575, -0.764933, 0.22 ) }
    dend_58 { pt3dadd( -132.733, 53.2518, -1.61229, 0.22 ) }
    dend_58 { pt3dadd( -133.139, 52.9277, -2.14311, 0.22 ) }
    dend_58 { pt3dadd( -133.47, 52.7305, -2.52093, 0.22 ) }
    dend_58 { pt3dadd( -133.895, 52.5007, -2.9909, 0.22 ) }
    dend_58 { pt3dadd( -134.274, 52.2891, -3.4013, 0.74 ) }
    dend_58 { pt3dadd( -135.159, 51.7383, -4.38555, 0.29 ) }
    dend_58 { pt3dadd( -135.835, 51.3314, -5.12953, 0.29 ) }
    dend_58 { pt3dadd( -136.402, 51.0071, -5.73853, 0.22 ) }
    dend_58 { pt3dadd( -136.996, 50.6647, -6.33404, 0.59 ) }
    dend_58 { pt3dadd( -137.579, 50.3022, -6.91357, 0.66 ) }
    dend_58 { pt3dadd( -138.105, 49.9045, -7.4909, 0.22 ) }
    dend_58 { pt3dadd( -138.671, 49.3265, -8.22778, 0.22 ) }
    dend_58 { pt3dadd( -138.861, 49.074, -8.52565, 0.22 ) }
    dend_58 { pt3dadd( -139.076, 48.6918, -8.97899, 0.22 ) }
    dend_58 { pt3dadd( -139.294, 48.1336, -9.62168, 0.22 ) }
    dend_58 { pt3dadd( -139.407, 47.4183, -10.4629, 0.44 ) }
    dend_58 { pt3dadd( -139.359, 46.8209, -11.1406, 0.88 ) }
    dend_58 { pt3dadd( -139.217, 46.3351, -11.6515, 0.96 ) }
    dend_58 { pt3dadd( -138.952, 45.6743, -12.2797, 0.52 ) }
    dend_58 { pt3dadd( -138.725, 45.2189, -12.6703, 0.15 ) }
    dend_58 { pt3dadd( -138.244, 44.405, -13.2678, 0.44 ) }
    dend_58 { pt3dadd( -137.941, 43.9573, -13.5789, 0.44 ) }
    dend_58 { pt3dadd( -137.745, 43.7003, -13.7655, 0.22 ) }
    dend_58 { pt3dadd( -137.496, 43.4021, -14.0231, 0.22 ) }
    dend_58 { pt3dadd( -137.3, 43.1788, -14.2472, 0.22 ) }
    dend_58 { pt3dadd( -136.873, 42.6378, -14.8593, 0.29 ) }
    dend_58 { pt3dadd( -136.532, 42.1187, -15.4769, 0.29 ) }
    dend_58 { pt3dadd( -136.247, 41.6019, -16.0824, 0.29 ) }
    dend_58 { pt3dadd( -135.974, 40.9816, -16.784, 0.66 ) }
    dend_58 { pt3dadd( -135.725, 40.2476, -17.6141, 0.81 ) }
    dend_58 { pt3dadd( -135.517, 39.4503, -18.4839, 0.59 ) }
    dend_58 { pt3dadd( -135.384, 38.8086, -19.1148, 0.59 ) }
    dend_58 { pt3dadd( -135.249, 38.1158, -19.7302, 0.81 ) }
    dend_58 { pt3dadd( -135.072, 37.0833, -20.5724, 0.29 ) }
    dend_58 { pt3dadd( -134.945, 36.1909, -21.2221, 0.29 ) }
    dend_58 { pt3dadd( -134.881, 35.524, -21.6441, 0.66 ) }
    dend_58 { pt3dadd( -134.819, 34.5703, -22.1417, 0.29 ) }
    dend_58 { pt3dadd( -134.761, 33.351, -22.656, 0.22 ) }
    dend_58 { pt3dadd( -134.76, 32.8459, -22.8243, 0.22 ) }
    dend_58 { pt3dadd( -134.835, 32.0809, -22.9881, 0.22 ) }
    dend_58 { pt3dadd( -135.06, 31.0246, -23.0892, 0.29 ) }
    dend_58 { pt3dadd( -135.423, 29.9445, -23.082, 0.22 ) }
    dend_58 { pt3dadd( -135.736, 29.2007, -22.9909, 0.22 ) }
    dend_58 { pt3dadd( -136.021, 28.5364, -22.8527, 0.22 ) }
    dend_58 { pt3dadd( -136.312, 27.7409, -22.6616, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_58 { pt3dadd( -136.63, 26.8241, -22.4039, 0.29 ) }
    dend_58 { pt3dadd( -136.888, 26.0719, -22.1464, 0.22 ) }
    dend_58 { pt3dadd( -137.155, 25.2955, -21.8251, 0.22 ) }
    dend_58 { pt3dadd( -137.438, 24.3959, -21.4048, 0.37 ) }
    dend_58 { pt3dadd( -137.52, 23.8797, -21.1537, 0.22 ) }
    dend_58 { pt3dadd( -139.839, 15.1119, -25.3668, 0.22 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 6/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -132.147, 54.0575, -0.764933, 0.15 ) }
    dend_57 { pt3dadd( -133.504, 53.8168, -0.630012, 0.15 ) }
    dend_57 { pt3dadd( -134.072, 53.706, -0.567232, 0.15 ) }
    dend_57 { pt3dadd( -134.841, 53.5353, -0.481184, 0.15 ) }
    dend_57 { pt3dadd( -135.92, 53.2957, -0.36038, 0.22 ) }
    dend_57 { pt3dadd( -136.579, 53.1493, -0.286535, 0.15 ) }
    dend_57 { pt3dadd( -137.545, 52.9346, -0.178287, 0.15 ) }
    dend_57 { pt3dadd( -138.047, 52.7946, -0.118512, 0.37 ) }
    dend_57 { pt3dadd( -138.609, 52.632, -0.0404338, 0.37 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 15/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 100.432, -171.288, -20.5212, 0.29 ) }
    dend_50 { pt3dadd( 101.085, -170.523, -20.8337, 0.29 ) }
    dend_50 { pt3dadd( 101.81, -169.674, -21.1807, 0.29 ) }
    dend_50 { pt3dadd( 102.703, -168.63, -21.6074, 0.15 ) }
    dend_50 { pt3dadd( 103.376, -167.842, -21.9294, 0.15 ) }
    dend_50 { pt3dadd( 103.86, -167.276, -22.1608, 0.22 ) }
    dend_50 { pt3dadd( 104.186, -166.893, -22.317, 0.22 ) }
    dend_50 { pt3dadd( 109.836, -158.699, -23.2798, 0.22 ) }
    dend_50 { pt3dadd( 116.803, -151.55, -23.8796, 0.22 ) }
    dend_50 { pt3dadd( 122.93, -143.945, -26.0309, 0.22 ) }
    dend_50 { pt3dadd( 130.353, -137.757, -28.5979, 0.22 ) }
    dend_50 { pt3dadd( 138.078, -131.531, -29.8463, 0.22 ) }
    dend_50 { pt3dadd( 145.326, -124.641, -29.8484, 0.22 ) }
    dend_50 { pt3dadd( 153.178, -118.473, -29.3011, 0.22 ) }
    dend_50 { pt3dadd( 160.866, -112.533, -26.9319, 0.22 ) }
    dend_50 { pt3dadd( 167.671, -105.629, -24.4744, 0.22 ) }
    dend_50 { pt3dadd( 174.842, -99.7416, -20.7447, 0.22 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 32/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 100.432, -171.288, -20.5212, 0.81 ) }
    dend_49 { pt3dadd( 101.395, -171.742, -20.5236, 0.81 ) }
    dend_49 { pt3dadd( 102.371, -172.24, -20.592, 0.81 ) }
    dend_49 { pt3dadd( 103.665, -172.952, -20.7202, 0.74 ) }
    dend_49 { pt3dadd( 104.821, -173.658, -20.8491, 0.52 ) }
    dend_49 { pt3dadd( 105.919, -174.462, -21.0148, 1.03 ) }
    dend_49 { pt3dadd( 106.818, -175.246, -21.2134, 0.74 ) }
    dend_49 { pt3dadd( 107.537, -176.074, -21.503, 0.59 ) }
    dend_49 { pt3dadd( 108.216, -177.119, -21.9081, 0.44 ) }
    dend_49 { pt3dadd( 108.632, -177.964, -22.2477, 0.52 ) }
    dend_49 { pt3dadd( 109.237, -179.503, -22.8071, 0.44 ) }
    dend_49 { pt3dadd( 109.685, -180.774, -23.2092, 0.88 ) }
    dend_49 { pt3dadd( 110.203, -182.286, -23.639, 0.66 ) }
    dend_49 { pt3dadd( 110.504, -183.15, -23.8583, 0.66 ) }
    dend_49 { pt3dadd( 110.896, -184.197, -24.129, 0.81 ) }
    dend_49 { pt3dadd( 111.25, -185.005, -24.3479, 0.66 ) }
    dend_49 { pt3dadd( 111.734, -185.904, -24.614, 0.96 ) }
    dend_49 { pt3dadd( 112.297, -186.839, -24.9512, 0.44 ) }
    dend_49 { pt3dadd( 113.038, -187.973, -25.4874, 0.66 ) }
    dend_49 { pt3dadd( 113.534, -188.695, -25.9065, 0.74 ) }
    dend_49 { pt3dadd( 114.16, -189.564, -26.5049, 0.52 ) }
    dend_49 { pt3dadd( 114.868, -190.501, -27.2403, 0.74 ) }
    dend_49 { pt3dadd( 115.549, -191.382, -27.9736, 0.88 ) }
    dend_49 { pt3dadd( 116.378, -192.396, -28.8539, 0.44 ) }
    dend_49 { pt3dadd( 116.753, -192.814, -29.2238, 0.66 ) }
    dend_49 { pt3dadd( 117.45, -193.503, -29.8523, 0.52 ) }
    dend_49 { pt3dadd( 118.244, -194.163, -30.4972, 0.59 ) }
    dend_49 { pt3dadd( 118.852, -194.615, -30.9321, 0.66 ) }
    dend_49 { pt3dadd( 119.656, -195.165, -31.4399, 0.66 ) }
    dend_49 { pt3dadd( 120.311, -195.63, -31.8592, 0.74 ) }
    dend_49 { pt3dadd( 121.257, -196.382, -32.4928, 0.44 ) }
    dend_49 { pt3dadd( 122.11, -197.199, -33.1033, 0.37 ) }
    dend_49 { pt3dadd( 122.847, -198.156, -33.7227, 0.37 ) }
    dend_49 { pt3dadd( 123.004, -198.896, -34.0644, 0.74 ) }
    dend_49 { pt3dadd( 122.523, -199.872, -34.2837, 0.81 ) }
    dend_49 { pt3dadd( 121.955, -200.674, -34.3637, 0.59 ) }
    dend_49 { pt3dadd( 120.925, -201.97, -34.3619, 0.22 ) }
    dend_49 { pt3dadd( 119.916, -203.201, -34.2764, 0.22 ) }
    dend_49 { pt3dadd( 119.023, -204.333, -34.1326, 0.22 ) }
    dend_49 { pt3dadd( 118.085, -205.688, -33.8726, 0.22 ) }
    dend_49 { pt3dadd( 117.508, -206.786, -33.564, 0.22 ) }
    dend_49 { pt3dadd( 117.125, -207.747, -33.2576, 0.22 ) }
    dend_49 { pt3dadd( 116.908, -208.93, -32.8243, 0.22 ) }
    dend_49 { pt3dadd( 116.96, -210.128, -32.3382, 0.22 ) }
    dend_49 { pt3dadd( 117.155, -210.857, -32.0093, 0.44 ) }
    dend_49 { pt3dadd( 117.536, -211.602, -31.6478, 0.59 ) }
    dend_49 { pt3dadd( 122.319, -220.311, -32.7819, 0.59 ) }
    dend_49 { pt3dadd( 125.894, -229.649, -32.837, 0.59 ) }
    dend_49 { pt3dadd( 129.62, -238.919, -32.3762, 0.59 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 81/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 30.2848, -92.6803, -39.5355, 0.15 ) }
    dend_35 { pt3dadd( 28.1862, -102.457, -39.6418, 0.15 ) }
    dend_35 { pt3dadd( 25.6675, -112.049, -40.9332, 0.15 ) }
    dend_35 { pt3dadd( 21.4848, -121.129, -41.1184, 0.15 ) }
    dend_35 { pt3dadd( 18.4182, -130.63, -41.685, 0.15 ) }
    dend_35 { pt3dadd( 15.4311, -140.126, -42.6486, 0.15 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 87/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 30.2848, -92.6803, -39.5355, 0.15 ) }
    dend_34 { pt3dadd( 29.8628, -102.571, -38.1233, 0.15 ) }
    dend_34 { pt3dadd( 29.8797, -112.391, -36.2345, 0.15 ) }
    dend_34 { pt3dadd( 28.6558, -122.305, -35.7889, 0.15 ) }
    dend_34 { pt3dadd( 29.0747, -132.292, -35.4656, 0.15 ) }
    dend_34 { pt3dadd( 30.6474, -142.163, -35.7424, 0.15 ) }
    dend_34 { pt3dadd( 33.4488, -151.71, -34.7399, 0.15 ) }
    dend_34 { pt3dadd( 34.3295, -161.464, -32.7125, 0.15 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 95/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 78.6911, 123.792, -61.392, 0.15 ) }
    dend_29 { pt3dadd( 83.2449, 130.288, -67.4794, 0.15 ) }
    dend_29 { pt3dadd( 87.2744, 136.126, -74.5284, 0.15 ) }
    dend_29 { pt3dadd( 90.742, 142.325, -81.5677, 0.15 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 99/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 78.6911, 123.792, -61.392, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_28 { pt3dadd( 81.5305, 131.503, -67.0906, 0.15 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 1/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 77.8621, 126.254, -58.6131, 0.15 ) }
    dend_26 { pt3dadd( 76.0341, 135.467, -62.0428, 0.15 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 3/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 77.8621, 126.254, -58.6131, 0.15 ) }
    dend_25 { pt3dadd( 85.5152, 130.338, -63.5882, 0.15 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 5/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 52.0372, 75.5536, 35.7149, 0.29 ) }
    dend_22 { pt3dadd( 51.9894, 74.5653, 36.5646, 0.29 ) }
    dend_22 { pt3dadd( 52.0006, 73.8387, 37.1768, 0.52 ) }
    dend_22 { pt3dadd( 51.9953, 73.0435, 37.8103, 0.22 ) }
    dend_22 { pt3dadd( 51.9825, 72.409, 38.2876, 0.22 ) }
    dend_22 { pt3dadd( 51.9645, 71.7933, 38.7339, 0.44 ) }
    dend_22 { pt3dadd( 51.9379, 70.8062, 39.4442, 0.88 ) }
    dend_22 { pt3dadd( 51.9248, 70.262, 39.8451, 0.88 ) }
    dend_22 { pt3dadd( 51.8382, 68.9133, 40.8335, 0.22 ) }
    dend_22 { pt3dadd( 51.705, 68.0436, 41.4591, 1.11 ) }
    dend_22 { pt3dadd( 51.4771, 67.119, 42.1182, 0.88 ) }
    dend_22 { pt3dadd( 51.0992, 65.9579, 42.9236, 0.22 ) }
    dend_22 { pt3dadd( 50.9514, 65.5587, 43.2156, 0.22 ) }
    dend_22 { pt3dadd( 50.6857, 64.8388, 43.8093, 0.29 ) }
    dend_22 { pt3dadd( 50.3464, 63.9342, 44.6888, 0.22 ) }
    dend_22 { pt3dadd( 50.1429, 63.4496, 45.2414, 0.74 ) }
    dend_22 { pt3dadd( 49.7899, 62.7485, 46.1735, 1.11 ) }
    dend_22 { pt3dadd( 48.98, 61.4201, 48.1284, 0.22 ) }
    dend_22 { pt3dadd( 48.5504, 60.787, 49.1871, 0.44 ) }
    dend_22 { pt3dadd( 47.9662, 59.9764, 50.7457, 0.96 ) }
    dend_22 { pt3dadd( 47.5356, 59.4581, 51.8917, 1.55 ) }
    dend_22 { pt3dadd( 47.0314, 58.8954, 53.2487, 0.74 ) }
    dend_22 { pt3dadd( 46.72, 58.5418, 54.1703, 0.29 ) }
    dend_22 { pt3dadd( 46.2384, 57.9698, 55.8163, 0.29 ) }
    dend_22 { pt3dadd( 45.8477, 57.4515, 57.4917, 0.59 ) }
    dend_22 { pt3dadd( 45.5717, 57.0507, 59.1739, 0.59 ) }
    dend_22 { pt3dadd( 45.4134, 56.8417, 60.3719, 0.59 ) }
    dend_22 { pt3dadd( 45.2497, 56.6977, 61.7473, 0.81 ) }
    dend_22 { pt3dadd( 45.0807, 56.6785, 63.1359, 0.81 ) }
    dend_22 { pt3dadd( 44.8629, 56.8094, 64.7524, 0.96 ) }
    dend_22 { pt3dadd( 44.5724, 57.1415, 66.9549, 0.74 ) }
    dend_22 { pt3dadd( 44.4095, 57.4356, 68.4198, 0.96 ) }
    dend_22 { pt3dadd( 44.3106, 57.7018, 69.6362, 0.96 ) }
    dend_22 { pt3dadd( 44.2314, 58.0834, 71.4217, 0.66 ) }
    dend_22 { pt3dadd( 44.2861, 58.3324, 72.6851, 0.66 ) }
    dend_22 { pt3dadd( 44.4647, 58.5263, 73.7091, 0.66 ) }
    dend_22 { pt3dadd( 44.6404, 58.6549, 74.2941, 0.66 ) }
    dend_22 { pt3dadd( 45.1393, 59.0374, 75.7431, 1.11 ) }
    dend_22 { pt3dadd( 45.3742, 59.308, 76.5712, 1.11 ) }
    dend_22 { pt3dadd( 45.5785, 59.6746, 77.5391, 0.29 ) }
    dend_22 { pt3dadd( 45.736, 60.1095, 78.5203, 0.29 ) }
    dend_22 { pt3dadd( 45.8737, 60.5742, 79.5157, 0.59 ) }
    dend_22 { pt3dadd( 46.0732, 61.1752, 80.8096, 0.88 ) }
    dend_22 { pt3dadd( 46.4675, 62.1297, 82.9754, 0.22 ) }
    dend_22 { pt3dadd( 46.6972, 62.5742, 84.0871, 0.22 ) }
    dend_22 { pt3dadd( 46.9575, 62.9859, 85.1603, 1.18 ) }
    dend_22 { pt3dadd( 47.3482, 63.5219, 86.4953, 1.55 ) }
    dend_22 { pt3dadd( 47.7421, 64.026, 87.7041, 0.81 ) }
    dend_22 { pt3dadd( 48.3576, 64.8218, 89.5903, 0.37 ) }
    dend_22 { pt3dadd( 49.0885, 65.7784, 92.0308, 0.74 ) }
    dend_22 { pt3dadd( 49.457, 66.2572, 93.3748, 0.44 ) }
    dend_22 { pt3dadd( 49.7424, 66.6017, 94.5051, 0.44 ) }
    dend_22 { pt3dadd( 49.9358, 66.7883, 95.2911, 0.44 ) }
    dend_22 { pt3dadd( 50.169, 66.9492, 96.3205, 0.74 ) }
    dend_22 { pt3dadd( 50.4735, 67.0555, 97.721, 0.74 ) }
    dend_22 { pt3dadd( 50.9145, 67.0729, 100.078, 0.44 ) }
    dend_22 { pt3dadd( 51.1935, 67.0475, 101.757, 0.74 ) }
    dend_22 { pt3dadd( 51.4566, 67.0402, 103.822, 0.52 ) }
    dend_22 { pt3dadd( 51.5166, 67.1009, 105.007, 0.52 ) }
    dend_22 { pt3dadd( 51.4747, 67.1558, 105.615, 0.52 ) }
    dend_22 { pt3dadd( 51.0862, 67.3025, 107.063, 0.52 ) }
    dend_22 { pt3dadd( 50.7544, 67.3763, 107.784, 0.52 ) }
    dend_22 { pt3dadd( 49.7682, 67.5843, 109.451, 1.11 ) }
    dend_22 { pt3dadd( 48.3372, 67.9137, 111.461, 0.44 ) }
    dend_22 { pt3dadd( 47.2387, 68.1783, 112.867, 1.18 ) }
    dend_22 { pt3dadd( 45.8959, 68.5135, 114.531, 0.22 ) }
    dend_22 { pt3dadd( 45.2094, 68.6791, 115.337, 0.22 ) }
    dend_22 { pt3dadd( 44.5858, 68.8071, 116.044, 0.81 ) }
    dend_22 { pt3dadd( 43.5143, 69.017, 117.225, 1.47 ) }
    dend_22 { pt3dadd( 42.6821, 69.1998, 118.128, 0.66 ) }
    dend_22 { pt3dadd( 41.5147, 69.5281, 119.422, 0.22 ) }
    dend_22 { pt3dadd( 40.8195, 69.7491, 120.225, 0.59 ) }
    dend_22 { pt3dadd( 39.0534, 70.2306, 122.325, 0.07 ) }
    dend_22 { pt3dadd( 38.3115, 70.3794, 123.251, 0.74 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 79/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 52.0372, 75.5536, 35.7149, 0.29 ) }
    dend_21 { pt3dadd( 52.7567, 74.8895, 35.8891, 0.29 ) }
    dend_21 { pt3dadd( 53.6472, 74.2191, 36.0778, 0.81 ) }
    dend_21 { pt3dadd( 54.1769, 73.9168, 36.1927, 0.52 ) }
    dend_21 { pt3dadd( 54.8771, 73.5683, 36.3469, 0.81 ) }
    dend_21 { pt3dadd( 56.3041, 72.9203, 36.7, 0.37 ) }
    dend_21 { pt3dadd( 57.1679, 72.5466, 36.9702, 0.22 ) }
    dend_21 { pt3dadd( 57.8482, 72.2867, 37.2544, 0.22 ) }
    dend_21 { pt3dadd( 59.1296, 71.8449, 37.8836, 0.22 ) }
    dend_21 { pt3dadd( 59.6376, 71.6924, 38.1296, 0.88 ) }
    dend_21 { pt3dadd( 60.3492, 71.5234, 38.4788, 0.74 ) }
    dend_21 { pt3dadd( 61.5433, 71.2978, 39.0886, 0.52 ) }
    dend_21 { pt3dadd( 62.7128, 71.0973, 39.6284, 1.25 ) }
    dend_21 { pt3dadd( 63.4572, 70.9889, 39.913, 1.62 ) }
    dend_21 { pt3dadd( 65.1468, 70.8714, 40.3359, 0.22 ) }
    dend_21 { pt3dadd( 65.9283, 70.8971, 40.4308, 0.15 ) }
    dend_21 { pt3dadd( 66.5569, 70.9875, 40.4326, 0.37 ) }
    dend_21 { pt3dadd( 67.8444, 71.3115, 40.331, 0.22 ) }
    dend_21 { pt3dadd( 68.4774, 71.5284, 40.2611, 0.29 ) }
    dend_21 { pt3dadd( 69.4058, 71.902, 40.1852, 0.59 ) }
    dend_21 { pt3dadd( 70.525, 72.3713, 40.142, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_21 { pt3dadd( 71.8552, 72.8841, 40.1601, 0.15 ) }
    dend_21 { pt3dadd( 72.5373, 73.1475, 40.2417, 0.15 ) }
    dend_21 { pt3dadd( 73.223, 73.4165, 40.4344, 0.15 ) }
    dend_21 { pt3dadd( 74.0394, 73.714, 40.7857, 0.59 ) }
    dend_21 { pt3dadd( 74.5996, 73.9062, 41.1117, 0.59 ) }
    dend_21 { pt3dadd( 75.7935, 74.2924, 41.9207, 0.22 ) }
    dend_21 { pt3dadd( 76.9499, 74.6144, 42.7727, 0.44 ) }
    dend_21 { pt3dadd( 78.0401, 74.8963, 43.6015, 0.96 ) }
    dend_21 { pt3dadd( 78.894, 75.1188, 44.2552, 1.25 ) }
    dend_21 { pt3dadd( 80.5552, 75.5313, 45.4676, 0.22 ) }
    dend_21 { pt3dadd( 81.4455, 75.7449, 46.0748, 0.22 ) }
    dend_21 { pt3dadd( 82.2638, 75.9361, 46.5562, 0.22 ) }
    dend_21 { pt3dadd( 82.9147, 76.0646, 46.8637, 0.22 ) }
    dend_21 { pt3dadd( 83.8788, 76.2136, 47.2436, 0.74 ) }
    dend_21 { pt3dadd( 85.0202, 76.3331, 47.6607, 0.22 ) }
    dend_21 { pt3dadd( 85.6175, 76.3529, 47.9291, 0.22 ) }
    dend_21 { pt3dadd( 86.2874, 76.3469, 48.4283, 0.22 ) }
    dend_21 { pt3dadd( 86.9802, 76.3346, 49.135, 0.22 ) }
    dend_21 { pt3dadd( 87.2946, 76.3209, 49.5342, 0.88 ) }
    dend_21 { pt3dadd( 87.7972, 76.2987, 50.2813, 0.96 ) }
    dend_21 { pt3dadd( 89.1312, 76.2913, 52.4772, 0.29 ) }
    dend_21 { pt3dadd( 90.4601, 76.3002, 54.7331, 0.52 ) }
    dend_21 { pt3dadd( 90.8708, 76.3062, 55.4463, 0.96 ) }
    dend_21 { pt3dadd( 91.3058, 76.3198, 56.2004, 0.66 ) }
    dend_21 { pt3dadd( 91.925, 76.3435, 57.2324, 0.22 ) }
    dend_21 { pt3dadd( 92.2192, 76.355, 57.6921, 0.22 ) }
    dend_21 { pt3dadd( 92.5752, 76.3557, 58.1828, 0.22 ) }
    dend_21 { pt3dadd( 92.7688, 76.3381, 58.4525, 0.66 ) }
    dend_21 { pt3dadd( 93.4221, 76.2576, 59.4177, 0.96 ) }
    dend_21 { pt3dadd( 94.8988, 76.0497, 61.6342, 0.22 ) }
    dend_21 { pt3dadd( 95.6874, 75.922, 62.7914, 0.81 ) }
    dend_21 { pt3dadd( 96.3032, 75.8079, 63.6368, 1.11 ) }
    dend_21 { pt3dadd( 97.6378, 75.5527, 65.3054, 0.15 ) }
    dend_21 { pt3dadd( 98.5567, 75.4014, 66.3075, 0.22 ) }
    dend_21 { pt3dadd( 99.1434, 75.3229, 66.8459, 0.81 ) }
    dend_21 { pt3dadd( 99.8235, 75.2441, 67.3411, 0.88 ) }
    dend_21 { pt3dadd( 100.748, 75.1908, 67.921, 0.37 ) }
    dend_21 { pt3dadd( 102.266, 75.2264, 68.7615, 0.22 ) }
    dend_21 { pt3dadd( 103.8, 75.3863, 69.549, 0.22 ) }
    dend_21 { pt3dadd( 104.414, 75.4988, 69.8801, 0.88 ) }
    dend_21 { pt3dadd( 105.085, 75.6992, 70.3072, 1.33 ) }
    dend_21 { pt3dadd( 106.508, 76.3612, 71.4775, 0.15 ) }
    dend_21 { pt3dadd( 107.076, 76.7535, 72.1119, 0.44 ) }
    dend_21 { pt3dadd( 107.816, 77.3937, 73.1701, 0.22 ) }
    dend_21 { pt3dadd( 108.211, 77.7691, 73.8538, 0.37 ) }
    dend_21 { pt3dadd( 108.781, 78.3402, 75.1299, 0.37 ) }
    dend_21 { pt3dadd( 109.233, 78.8502, 76.5795, 0.74 ) }
    dend_21 { pt3dadd( 109.67, 79.4035, 78.6378, 0.44 ) }
    dend_21 { pt3dadd( 109.878, 79.6559, 79.8236, 0.44 ) }
    dend_21 { pt3dadd( 109.951, 79.7402, 80.3079, 0.44 ) }
    dend_21 { pt3dadd( 110.212, 79.9953, 82.1406, 0.66 ) }
    dend_21 { pt3dadd( 110.408, 80.1346, 83.4913, 0.66 ) }
    dend_21 { pt3dadd( 110.601, 80.2315, 85.0207, 0.52 ) }
    dend_21 { pt3dadd( 110.665, 80.3185, 86.5197, 1.03 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 54/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 50.9294, 128.202, 47.3683, 0.07 ) }
    dend_19 { pt3dadd( 49.7365, 128.667, 47.4688, 0.07 ) }
    dend_19 { pt3dadd( 48.8114, 129.074, 47.4582, 0.29 ) }
    dend_19 { pt3dadd( 47.8446, 129.586, 47.3863, 0.07 ) }
    dend_19 { pt3dadd( 47.3829, 129.831, 47.352, 0.37 ) }
    dend_19 { pt3dadd( 45.9221, 130.604, 47.2434, 0.07 ) }
    dend_19 { pt3dadd( 44.9897, 131.098, 47.1741, 0.07 ) }
    dend_19 { pt3dadd( 43.9575, 131.706, 47.0365, 0.59 ) }
    dend_19 { pt3dadd( 42.8624, 132.432, 46.7912, 0.07 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 63/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 50.9294, 128.202, 47.3683, 0.29 ) }
    dend_18 { pt3dadd( 51.1969, 129.456, 47.7318, 0.29 ) }
    dend_18 { pt3dadd( 51.5454, 130.68, 48.0824, 0.44 ) }
    dend_18 { pt3dadd( 51.8593, 131.773, 48.2845, 0.22 ) }
    dend_18 { pt3dadd( 52.0825, 132.604, 48.351, 0.29 ) }
    dend_18 { pt3dadd( 52.3365, 133.604, 48.368, 0.66 ) }
    dend_18 { pt3dadd( 52.6427, 134.872, 48.3324, 1.11 ) }
    dend_18 { pt3dadd( 52.9369, 136.047, 48.2199, 0.22 ) }
    dend_18 { pt3dadd( 53.3636, 137.678, 47.9623, 0.22 ) }
    dend_18 { pt3dadd( 53.6788, 138.902, 47.7785, 0.88 ) }
    dend_18 { pt3dadd( 53.9833, 140.165, 47.6424, 0.29 ) }
    dend_18 { pt3dadd( 54.1151, 140.708, 47.6241, 0.74 ) }
    dend_18 { pt3dadd( 54.3412, 141.6, 47.6969, 1.33 ) }
    dend_18 { pt3dadd( 54.5518, 142.239, 47.882, 0.88 ) }
    dend_18 { pt3dadd( 55.2559, 143.965, 48.8577, 0.22 ) }
    dend_18 { pt3dadd( 55.5482, 144.616, 49.3794, 0.29 ) }
    dend_18 { pt3dadd( 55.8029, 145.158, 49.9106, 0.29 ) }
    dend_18 { pt3dadd( 56.092, 145.77, 50.5933, 0.81 ) }
    dend_18 { pt3dadd( 56.3177, 146.29, 51.247, 1.33 ) }
    dend_18 { pt3dadd( 56.6063, 147.201, 52.4333, 0.15 ) }
    dend_18 { pt3dadd( 56.7479, 147.948, 53.3424, 0.15 ) }
    dend_18 { pt3dadd( 56.8042, 148.435, 53.8909, 0.74 ) }
    dend_18 { pt3dadd( 56.8545, 149.241, 54.6952, 1.18 ) }
    dend_18 { pt3dadd( 56.8656, 150.643, 55.8677, 0.22 ) }
    dend_18 { pt3dadd( 56.8143, 151.995, 56.7816, 0.59 ) }
    dend_18 { pt3dadd( 56.7946, 153.281, 57.4244, 0.29 ) }
    dend_18 { pt3dadd( 56.8026, 153.973, 57.6875, 1.25 ) }
    dend_18 { pt3dadd( 56.8302, 154.782, 57.9255, 1.84 ) }
    dend_18 { pt3dadd( 56.9415, 156.417, 58.3023, 0.37 ) }
    dend_18 { pt3dadd( 57.0641, 157.629, 58.5558, 0.96 ) }
    dend_18 { pt3dadd( 57.285, 159.225, 58.8554, 0.22 ) }
    dend_18 { pt3dadd( 57.4678, 160.361, 59.0901, 0.52 ) }
    dend_18 { pt3dadd( 57.5698, 160.943, 59.2302, 0.52 ) }
    dend_18 { pt3dadd( 57.8475, 162.383, 59.652, 0.15 ) }
    dend_18 { pt3dadd( 58.1153, 163.512, 60.0962, 0.44 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 98/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -132.565, -57.3857, -43.6393, 0.15 ) }
    dend_8 { pt3dadd( -140.964, -52.2361, -45.3514, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_8 { pt3dadd( -148.49, -45.9313, -47.2505, 0.15 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 1/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -132.565, -57.3857, -43.6393, 0.15 ) }
    dend_7 { pt3dadd( -141.183, -52.3446, -44.1924, 0.15 ) }
    dend_7 { pt3dadd( -148.447, -45.4776, -43.8905, 0.15 ) }
    dend_7 { pt3dadd( -154.937, -37.8752, -44.1637, 0.15 ) }
    dend_7 { pt3dadd( -161.644, -30.479, -44.7222, 0.15 ) }
    dend_7 { pt3dadd( -167.779, -22.7687, -46.4285, 0.15 ) }
    dend_7 { pt3dadd( -173.109, -14.3983, -47.6662, 0.15 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_52, dend_41, dend_30, dend_11, dend_0, dend_62, dend_53, dend_45, dend_42, dend_38, dend_31, dend_15, dend_12, dend_4, dend_1, dend_64, dend_63, dend_55, dend_54, dend_51, dend_46, dend_44, dend_43, dend_40, dend_39, dend_37, dend_32, dend_23, dend_16, dend_14, dend_13, dend_10, dend_5, dend_3, dend_2, dend_59, dend_56, dend_48, dend_47, dend_36, dend_33, dend_27, dend_24, dend_20, dend_17, dend_9, dend_6, dend_61, dend_60, dend_58, dend_57, dend_50, dend_49, dend_35, dend_34, dend_29, dend_28, dend_26, dend_25, dend_22, dend_21, dend_19, dend_18, dend_8, dend_7]}
    ModelViewParmSubset_2 = new SectionList()
    dend_52 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_52, dend_41, dend_30, dend_11, dend_0, dend_62, dend_53, dend_45, dend_42, dend_38, dend_31, dend_15, dend_12, dend_4, dend_1, dend_64, dend_63, dend_55, dend_54, dend_51, dend_46, dend_44, dend_43, dend_40, dend_39, dend_37, dend_32, dend_23, dend_16, dend_14, dend_13, dend_10, dend_5, dend_3, dend_2, dend_59, dend_56, dend_48, dend_47, dend_36, dend_33, dend_27, dend_24, dend_20, dend_17, dend_9, dend_6, dend_61, dend_60, dend_58, dend_57, dend_50, dend_49, dend_35, dend_34, dend_29, dend_28, dend_26, dend_25, dend_22, dend_21, dend_19, dend_18, dend_8, dend_7]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_62 ModelViewParmSubset_3.append()
    dend_53 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_64 ModelViewParmSubset_3.append()
    dend_63 ModelViewParmSubset_3.append()
    dend_55 ModelViewParmSubset_3.append()
    dend_54 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_10 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_59 ModelViewParmSubset_3.append()
    dend_56 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_61 ModelViewParmSubset_3.append()
    dend_60 ModelViewParmSubset_3.append()
    dend_58 ModelViewParmSubset_3.append()
    dend_57 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_27, dend_24]}
    ModelViewParmSubset_5 = new SectionList()
    dend_27 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()

    // Group: {name=ModelViewParmSubset_6, groups=[], sections=[dend_28, dend_26, dend_25]}
    ModelViewParmSubset_6 = new SectionList()
    dend_28 ModelViewParmSubset_6.append()
    dend_26 ModelViewParmSubset_6.append()
    dend_25 ModelViewParmSubset_6.append()

    // Group: {name=ModelViewParmSubset_7, groups=[], sections=[dend_61, dend_60]}
    ModelViewParmSubset_7 = new SectionList()
    dend_61 ModelViewParmSubset_7.append()
    dend_60 ModelViewParmSubset_7.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_30 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_62 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_42 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_38 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_64 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_63 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_55 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_54 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_51 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_46 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_44 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_43 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_39 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_37 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_23 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_16 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_14 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_13 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_10 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_5 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_3 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_2 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_59 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_56 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_48 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_47 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_33 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_17 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_9 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_6 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_58 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_50 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_49 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_35 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_34 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_22 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_21 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_18 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_7 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_41 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_52 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_11 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_12 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_45 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_15 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_53 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_31 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_32 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_4 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_1 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_36 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_20 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_19 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_40 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_57 OneSecGrp_SectionRef_54.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_29 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_8 OneSecGrp_SectionRef_67.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_28, dend_26, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    axon_0 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_18 all.append()
    dend_18 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_30 nseg = 3
    dend_0 nseg = 3
    dend_62 nseg = 5
    dend_42 nseg = 5
    dend_38 nseg = 5
    dend_64 nseg = 3
    dend_63 nseg = 9
    dend_55 nseg = 3
    dend_54 nseg = 9
    dend_51 nseg = 13
    dend_46 nseg = 3
    dend_44 nseg = 7
    dend_43 nseg = 9
    dend_39 nseg = 7
    dend_37 nseg = 9
    dend_23 nseg = 5
    dend_16 nseg = 3
    dend_14 nseg = 13
    dend_13 nseg = 13
    dend_10 nseg = 5
    dend_5 nseg = 3
    dend_3 nseg = 15
    dend_2 nseg = 3
    dend_59 nseg = 5
    dend_56 nseg = 3
    dend_48 nseg = 7
    dend_47 nseg = 9
    dend_33 nseg = 3
    dend_17 nseg = 3
    dend_9 nseg = 5
    dend_6 nseg = 3
    dend_58 nseg = 3
    dend_50 nseg = 5
    dend_49 nseg = 5
    dend_35 nseg = 3
    dend_34 nseg = 3
    dend_22 nseg = 5
    dend_21 nseg = 5
    dend_18 nseg = 3
    dend_7 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L5_MC_c135727743_0_0


