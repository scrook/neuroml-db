// Cell: cACint209_L1_SLAC_76ffc1f69e_0_0
/*
{
  "id" : "cACint209_L1_SLAC_76ffc1f69e_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.95362, -7.37234, 0.0, 2.57935", "1.79658, -6.6872, 0.0, 4.36142", "1.63955, -6.00206, 0.0, 6.30827", "1.48252, -5.31692, 0.0, 8.15998", "1.32548, -4.63178, 0.0, 8.93707", "1.16845, -3.94664, 0.0, 9.51751", "1.01142, -3.2615, 0.0, 9.99574", "0.854383, -2.57637, 0.0, 10.4311", "0.697349, -1.89123, 0.0, 10.5327", "0.540315, -1.20609, 0.0, 10.6236", "0.383282, -0.52095, 0.0, 10.6564", "0.226248, 0.164189, 0.0, 10.5076", "0.0692145, 0.849328, 0.0, 10.3564", "-0.0878191, 1.53447, 0.0, 10.1753", "-0.244853, 2.2196, 0.0, 9.88723", "-0.401886, 2.90474, 0.0, 9.46371", "-0.55892, 3.58988, 0.0, 9.04164", "-0.715954, 4.27502, 0.0, 8.63833", "-0.872987, 4.96016, 0.0, 7.99123", "-1.03002, 5.6453, 0.0, 6.49138", "-1.18705, 6.33044, 0.0, 3.64698" ]
  }, {
    "name" : "dend_119",
    "id" : "dend_119",
    "points3d" : [ "-0.173755, 5.70496, -4.33, 2.06", "-0.193948, 5.77901, -4.35955, 2.06", "-0.527002, 7.00038, -4.84688, 1.4", "-0.827491, 8.10233, -5.28657, 1.03", "-1.19004, 9.43188, -5.81707, 1.54", "-1.47343, 10.4711, -6.23173, 1.69" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999998628918314
  }, {
    "name" : "dend_116",
    "id" : "dend_116",
    "points3d" : [ "-4.34375, 0.918214, -5.83, 0.95", "-4.69695, 0.370921, -6.57045, 0.81", "-5.1961, -0.434859, -7.53887, 0.81", "-5.83523, -1.3514, -8.66188, 0.88", "-6.39016, -2.10124, -9.66243, 1.03", "-7.04621, -3.01953, -11.0342, 1.03", "-7.57332, -3.74385, -12.2441, 0.73", "-7.81469, -4.09001, -12.8459, 0.73", "-8.27088, -4.62335, -13.9677, 0.81", "-8.64873, -4.88195, -14.8451, 0.81", "-9.23253, -5.1949, -16.1858, 0.81", "-9.49375, -5.32539, -16.6997, 0.59", "-9.8934, -5.54155, -17.348, 0.59", "-10.4867, -5.91139, -18.2115, 0.59", "-11.115, -6.36182, -19.0667, 0.59", "-12.3001, -7.1988, -20.7379, 0.59", "-12.8833, -7.59109, -21.7366, 0.59", "-13.001, -7.65755, -22.3436, 0.59", "-13.0326, -7.67121, -22.8642, 0.59", "-12.8916, -7.46641, -24.2606, 0.59", "-12.5896, -7.00855, -25.6448, 0.59", "-12.2331, -6.45391, -26.8636, 0.59", "-11.4741, -5.46403, -28.912, 0.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999998628918314
  }, {
    "name" : "dend_109",
    "id" : "dend_109",
    "points3d" : [ "2.46625, -5.3753, -12.23, 1.03", "3.75655, -6.37008, -12.2075, 1.03", "5.04245, -7.38552, -12.1681, 0.88", "5.72359, -7.92679, -12.1183, 0.88", "6.4613, -8.491, -12.0422, 0.88", "7.46082, -9.21544, -11.9204, 1.03", "8.39989, -9.86764, -11.7993, 0.95", "9.09927, -10.355, -11.6947, 0.95", "10.0259, -11.0286, -11.5468, 0.81", "10.8685, -11.6462, -11.4026, 0.73", "11.4772, -12.0891, -11.2924, 0.73", "12.3277, -12.6959, -11.1353, 0.81", "13.7039, -13.6553, -10.9204, 0.88", "14.5604, -14.2854, -10.8044, 1.47" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999998628918314
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "1.24625, -0.240041, 13.22, 5.51", "1.79456, -0.676971, 13.4226, 5.51", "4.19816, -2.59232, 14.3108, 4.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999998628918314
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-2.48375, -6.55404, -4.31, 3.16", "-2.48375, -6.55404, -4.31, 3.16", "-3.64242, -8.05534, -4.51712, 1.98", "-4.70104, -9.427, -4.70637, 2.28", "-6.55804, -11.8331, -5.03832, 1.98", "-7.56333, -13.1357, -5.21803, 2.2" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999998628918314
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-4.56375, 4.25971, -0.9, 1.69", "-4.80021, 4.38002, -0.889539, 1.62", "-6.08947, 5.09506, -0.719367, 0.88", "-7.13625, 5.6954, -0.541026, 0.88", "-8.20581, 6.316, -0.30618, 0.88", "-9.25958, 6.88586, -0.0435481, 0.73", "-10.1839, 7.35852, 0.186906, 0.73", "-10.962, 7.77004, 0.409497, 0.73", "-11.6899, 8.17254, 0.641933, 1.1", "-12.2794, 8.50976, 0.830611, 1.1", "-13.2153, 9.09915, 1.17681, 0.59", "-14.0037, 9.65141, 1.4741, 0.59", "-14.9017, 10.3529, 1.78296, 0.81", "-15.6247, 11.0098, 2.02018, 0.81", "-16.3809, 11.8074, 2.2682, 0.88", "-17.5376, 13.1602, 2.62551, 0.37", "-18.4514, 14.2796, 2.90142, 0.37", "-19.3078, 15.2474, 3.13267, 0.37", "-20.3428, 16.262, 3.34947, 0.37", "-21.2871, 17.0631, 3.5067, 0.66", "-21.9243, 17.5356, 3.58395, 0.51", "-22.9886, 18.24, 3.65406, 0.51", "-24.5779, 19.1726, 3.71142, 0.51", "-25.9084, 19.908, 3.71431, 0.51", "-26.7879, 20.3881, 3.71031, 0.51", "-27.4221, 20.7529, 3.70242, 0.51", "-28.1285, 21.2012, 3.68971, 0.95", "-29.7281, 22.3328, 3.64157, 0.73", "-31.1782, 23.4877, 3.58999, 0.51", "-32.2362, 24.3741, 3.54784, 0.59", "-32.8954, 24.9269, 3.5205, 0.59", "-33.0237, 25.0315, 3.51537, 0.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999998628918314
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-1.18705, 6.33044, 0.0, 0.754234", "-4.53815, 20.9513, 0.0, 0.754234", "-7.88925, 35.5722, 0.0, 0.754234" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_121",
    "id" : "dend_121",
    "points3d" : [ "-1.47343, 10.4711, -6.23173, 0.73", "-1.25223, 11.7495, -7.56405, 0.73", "-0.854589, 12.6612, -8.44888, 0.81", "-0.564013, 13.3274, -9.09548, 1.03", "-0.226359, 14.1016, -9.84682, 1.47", "0.382665, 15.498, -11.202, 1.18", "0.926377, 16.7446, -12.4119, 0.95", "1.75216, 17.9576, -13.5644, 1.18" ],
    "parent" : "dend_119",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_120",
    "id" : "dend_120",
    "points3d" : [ "-1.47343, 10.4711, -6.23173, 0.51", "-0.556863, 11.4189, -5.01736, 0.51", "-0.172632, 11.9173, -4.39299, 0.51", "0.226046, 12.5899, -3.48778, 0.66", "0.47777, 13.1198, -2.78924, 0.66", "0.712897, 13.6671, -2.09505, 0.37", "1.01304, 14.3679, -1.25911, 0.22", "1.27678, 15.1598, -0.395379, 0.51", "1.61999, 16.5005, 0.836874, 0.51", "1.71787, 16.9615, 1.15536, 0.51", "1.87263, 17.6653, 1.49403, 0.51", "2.10822, 18.6797, 1.81111, 0.66", "2.36995, 19.6838, 2.01413, 0.51", "2.55291, 20.3454, 2.09724, 0.51", "2.95242, 21.6805, 2.1981, 0.51", "3.547, 23.378, 2.32496, 0.66", "4.12941, 24.8578, 2.50656, 0.66", "4.59537, 25.905, 2.74841, 0.66", "4.92885, 26.5478, 2.97833, 0.66", "5.3971, 27.3508, 3.34701, 0.66", "6.15742, 28.5649, 4.00042, 1.1", "7.06177, 30.0014, 4.89492, 0.66", "7.9824, 31.5279, 5.85169, 0.66", "8.56483, 32.6091, 6.46212, 0.66", "8.97458, 33.4796, 6.89885, 0.66", "9.46039, 34.6758, 7.41016, 0.66", "10.1451, 36.6561, 8.10015, 0.66", "10.5793, 38.1195, 8.55622, 0.66", "11.018, 39.809, 9.04759, 0.66", "11.2756, 40.8805, 9.36908, 0.51", "11.5827, 42.0611, 9.7387, 0.51", "12.0336, 43.5998, 10.2535, 0.51", "12.7777, 45.8096, 11.0026, 0.66", "13.2053, 46.9386, 11.4327, 0.51", "13.5845, 47.8873, 11.8076, 0.51", "14.1638, 49.3804, 12.3825, 0.51", "14.3622, 49.9369, 12.5687, 0.51", "14.4976, 50.3432, 12.6667, 0.51", "14.6892, 50.9869, 12.7715, 0.51", "15.0187, 52.3335, 13.0074, 0.51", "15.2501, 53.6258, 13.2296, 0.66", "15.4059, 54.7323, 13.4367, 0.66", "15.5464, 55.6124, 13.6241, 0.51", "15.7128, 56.4036, 13.8158, 0.66", "15.8953, 57.0614, 14.0038, 0.44", "16.185, 57.95, 14.2782, 0.44", "16.579, 59.2335, 14.6296, 0.51", "16.8539, 60.3719, 14.915, 0.44", "17.0107, 61.3463, 15.1444, 1.1", "17.1249, 62.4877, 15.429, 0.66", "17.1923, 63.611, 15.7273, 0.88", "17.2695, 65.1203, 16.2054, 0.37", "17.3417, 66.2637, 16.6365, 0.37", "17.4047, 67.0589, 16.9845, 0.44", "17.5368, 68.1608, 17.5336, 0.59", "17.672, 68.8103, 17.8821, 0.81", "18.1386, 70.2912, 18.7291, 0.51", "18.4369, 71.1529, 19.2145, 0.51", "18.5646, 71.5517, 19.4036, 1.03", "18.857, 72.5905, 19.8239, 0.51", "19.0486, 73.3642, 20.0806, 0.37", "19.2049, 74.0723, 20.3062, 0.37", "19.4424, 75.2407, 20.6384, 0.37", "19.539, 75.9113, 20.8308, 0.66", "19.7471, 77.8925, 21.458, 0.22", "19.8128, 79.0007, 21.8416, 0.22", "19.8511, 79.9599, 22.1944, 0.22", "19.8973, 80.343, 22.3345, 0.73", "20.1388, 81.4364, 22.6839, 0.22", "20.2517, 81.9447, 22.8082, 0.22", "20.3069, 82.3886, 22.871, 0.22", "20.391, 83.0034, 22.9179, 0.22", "20.6409, 84.6751, 22.8857, 0.59", "20.7742, 85.81, 22.8393, 0.22", "20.8268, 86.3618, 22.8105, 0.22", "20.8721, 87.2847, 22.7435, 0.22", "20.9101, 88.913, 22.6016, 0.66", "20.9304, 90.4175, 22.4547, 0.22", "20.9212, 91.9821, 22.3087, 0.22", "20.9359, 92.7629, 22.2415, 0.22", "20.9596, 93.4277, 22.1933, 0.22", "21.0253, 94.8971, 22.1263, 0.51", "21.0637, 95.9904, 22.1349, 0.29", "21.1018, 96.5425, 22.1351, 0.29", "21.1742, 97.166, 22.0921, 0.29", "21.3108, 98.0676, 21.9995, 0.29", "21.4742, 99.0303, 21.8787, 0.29", "21.7058, 100.73, 21.6139, 0.59", "21.8972, 102.334, 21.264, 0.59", "22.0441, 103.505, 20.9719, 0.59", "22.2008, 104.601, 20.6827, 0.95", "22.2878, 105.131, 20.5383, 1.18", "22.5381, 106.285, 20.1882, 0.51", "22.8306, 107.489, 19.7653, 0.51", "23.0229, 108.263, 19.5011, 0.51", "23.2829, 109.305, 19.1125, 0.51", "23.4495, 109.922, 18.8612, 0.73", "24.0706, 111.99, 18.0172, 0.15", "24.4071, 113.046, 17.5692, 0.51", "24.6533, 114.002, 17.201, 0.51", "24.8453, 115.217, 16.731, 0.51", "24.8836, 116.076, 16.4243, 0.51", "24.8324, 116.94, 16.1661, 0.51", "24.6483, 118.031, 15.9182, 0.29", "24.3503, 119.599, 15.6309, 0.22", "24.1788, 120.665, 15.4179, 0.22", "24.1373, 121.25, 15.2588, 0.22", "24.272, 121.815, 14.9519, 0.22", "24.5299, 122.282, 14.6128, 0.22", "24.7178, 122.546, 14.4051, 0.22", "25.4757, 123.534, 13.6058, 1.03", "26.2191, 124.542, 12.8367, 0.81", "26.8826, 125.534, 12.116, 0.29", "27.3301, 126.26, 11.6065, 0.29", "27.6695, 126.856, 11.2171, 0.29", "27.9716, 127.44, 10.8644, 0.88", "28.3132, 128.205, 10.4513, 0.51", "28.6351, 128.951, 10.0849, 0.88", "29.2472, 130.712, 9.17155, 0.22", "29.5411, 131.544, 8.7072, 0.22", "29.7039, 131.996, 8.44511, 0.22", "29.8995, 132.57, 8.10081, 0.51", "30.0303, 133.041, 7.82826, 0.44", "30.2577, 134.827, 6.91005, 0.73" ],
    "parent" : "dend_119",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_118",
    "id" : "dend_118",
    "points3d" : [ "-11.4741, -5.46403, -28.912, 0.66", "-11.5429, -5.50059, -29.5831, 0.66", "-11.5285, -5.57556, -32.3882, 0.66", "-11.4216, -5.60739, -33.9647, 0.66", "-11.2312, -5.68948, -36.3205, 0.66", "-11.1399, -5.75683, -38.0362, 0.66", "-11.1206, -5.8473, -39.7166, 0.66", "-11.1141, -5.9941, -41.2123, 0.66", "-11.1034, -6.18786, -42.5765, 0.66", "-11.0948, -6.40759, -44.0077, 0.66", "-11.15, -6.77488, -46.2803, 0.66", "-11.2488, -7.07052, -47.938, 0.66", "-11.3491, -7.36629, -49.502, 0.66", "-11.4651, -7.56371, -50.8141, 0.66", "-11.4865, -7.58248, -51.57, 0.66", "-11.308, -7.29349, -52.447, 0.66", "-11.086, -6.85236, -53.0686, 0.66", "-10.9002, -6.28633, -53.7057, 0.66", "-10.7141, -5.2667, -54.7694, 0.51", "-10.6572, -4.54339, -55.5298, 0.51", "-10.5451, -3.1341, -57.1777, 0.88", "-10.4274, -2.48225, -58.238, 0.59", "-10.2615, -1.9777, -59.3883, 0.59", "-10.0668, -1.66552, -60.5014, 0.59", "-9.87434, -1.51641, -61.3106, 0.59", "-9.35935, -1.26819, -63.1456, 0.88", "-8.07708, -0.808166, -67.2926, 0.88", "-7.4787, -0.629001, -69.0031, 0.88", "-6.63117, -0.358128, -71.2135, 0.66", "-6.00259, -0.12069, -72.7954, 0.44", "-5.52073, 0.135142, -74.0348, 0.81", "-4.59356, 0.847094, -76.4399, 0.81", "-4.00918, 1.48144, -77.8787, 0.81", "-3.37646, 2.28995, -79.4124, 0.51", "-2.92325, 2.88958, -80.5366, 0.51", "-2.43341, 3.48709, -81.8976, 0.59", "-2.30452, 3.58733, -82.2439, 0.59", "-1.83268, 3.76599, -83.4196, 0.59", "-1.37483, 3.79823, -84.73, 0.51", "-0.771319, 3.64123, -86.7213, 0.29", "-0.497742, 3.48962, -87.8288, 0.29", "-0.188399, 3.24205, -89.2911, 0.29", "-0.0518259, 3.11839, -90.0219, 0.44", "0.452818, 2.6731, -92.9535, 0.44", "0.821938, 2.39891, -95.1979, 0.44", "1.09767, 2.24448, -96.6968, 0.44", "1.43293, 2.01281, -98.2587, 0.44", "1.57918, 1.88016, -98.8071, 0.44", "1.86684, 1.60786, -99.543, 0.44", "2.35005, 1.22174, -100.235, 0.44", "2.91131, 0.841794, -100.814, 0.81", "4.09687, 0.0794517, -101.887, 0.37", "4.67369, -0.305158, -102.445, 0.95", "5.06574, -0.554165, -102.922, 0.95", "5.55727, -0.82556, -103.591, 0.95", "6.56113, -1.29, -105.005, 0.29", "7.23638, -1.55964, -106.062, 0.29", "7.98284, -1.84953, -107.398, 0.66", "9.0015, -2.34255, -109.651, 0.95", "9.28118, -2.51615, -110.385, 0.81", "9.45435, -2.63508, -110.876, 0.51", "9.84791, -2.86377, -112.008, 0.29", "10.4259, -3.155, -113.467, 0.29", "10.796, -3.37382, -114.27, 0.22", "11.0365, -3.53905, -114.729, 0.22", "11.767, -4.04548, -116.06, 0.51", "12.7205, -4.65421, -117.687, 0.15", "13.8612, -5.2399, -119.455, 0.66", "14.2739, -5.40545, -120.101, 0.37", "15.1394, -5.6945, -121.442, 0.59", "15.8907, -5.9086, -122.577, 0.59", "16.2458, -5.97912, -123.081, 0.59", "17.5222, -6.0629, -124.657, 0.73", "19.0053, -5.88206, -126.396, 0.51", "20.4028, -5.47998, -127.996, 0.15", "21.0509, -5.13199, -128.749, 0.15", "21.66, -4.6604, -129.465, 0.15", "22.2091, -4.07637, -130.158, 0.81", "23.5153, -2.05894, -132.005, 0.22", "23.8312, -1.25539, -132.594, 0.51", "24.2787, 1.04404, -134.08, 0.07", "24.3389, 1.87729, -134.584, 0.37", "24.3422, 2.928, -135.2, 0.15", "24.2793, 3.79336, -135.656, 0.15", "24.0874, 5.10724, -136.152, 0.15", "23.9084, 5.95579, -136.465, 0.15", "23.671, 6.60558, -136.638, 0.44" ],
    "parent" : "dend_116",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_117",
    "id" : "dend_117",
    "points3d" : [ "-11.4741, -5.46403, -28.912, 0.37", "-12.2706, -4.63029, -29.4275, 0.37", "-12.7565, -4.01938, -29.8198, 0.37", "-12.972, -3.72253, -30.0301, 0.37", "-13.6441, -2.76346, -30.7193, 0.37", "-14.1587, -2.02069, -31.2233, 0.37", "-14.627, -1.31768, -31.734, 0.37", "-15.1105, -0.594415, -32.3313, 0.37", "-15.9128, 0.646651, -33.3985, 0.37", "-16.7299, 1.90857, -34.5305, 0.37", "-17.8223, 3.59161, -36.0461, 0.88", "-18.7294, 4.8985, -37.2595, 0.88", "-19.927, 6.48664, -38.7775, 0.66", "-20.3987, 7.07438, -39.3494, 0.88", "-21.7136, 8.59559, -40.9335, 0.59", "-22.1337, 9.00365, -41.4303, 0.73", "-22.7287, 9.4749, -42.1524, 0.44", "-23.0709, 9.71047, -42.5502, 0.29", "-23.5754, 10.0414, -43.1748, 0.66", "-24.5213, 10.6849, -44.4296, 0.37", "-25.5526, 11.4836, -45.8756, 0.66", "-26.6676, 12.5079, -47.474, 0.37", "-26.9164, 12.7827, -47.8704, 0.37", "-27.3937, 13.3613, -48.6612, 0.51", "-27.9653, 14.1046, -49.5796, 0.59", "-28.6172, 15.0092, -50.5394, 0.66", "-29.1261, 15.7529, -51.2182, 0.66", "-30.2688, 17.2329, -52.4264, 0.66", "-30.6715, 17.6778, -52.8324, 0.37", "-31.0537, 18.0705, -53.2538, 0.37", "-31.41, 18.4447, -53.6771, 0.88", "-31.7106, 18.7829, -54.0821, 0.88", "-32.4443, 19.7069, -55.2483, 0.22", "-33.241, 20.8566, -56.5497, 0.59", "-33.8689, 21.882, -57.7497, 0.59", "-34.2815, 22.611, -58.6584, 0.95", "-35.0144, 23.8984, -60.404, 0.59", "-35.7528, 25.1084, -62.2386, 0.59", "-36.1951, 25.8051, -63.4774, 0.95", "-36.875, 26.7928, -65.4875, 0.51", "-37.5611, 27.6172, -67.3544, 1.18", "-38.0384, 28.103, -68.5826, 0.29", "-38.5645, 28.5822, -69.7434, 0.29", "-39.2721, 29.2152, -71.1007, 0.59", "-39.7219, 29.6553, -71.8889, 0.59", "-40.486, 30.4923, -72.9505, 0.37", "-41.1495, 31.2483, -73.8141, 0.37", "-42.033, 32.255, -74.9593, 0.37", "-42.6812, 32.9915, -75.765, 1.1", "-43.7338, 34.1315, -77.1079, 0.59", "-43.9743, 34.3695, -77.4715, 1.25", "-45.2864, 35.4638, -79.7077, 0.37", "-45.8782, 35.8484, -80.7284, 0.37", "-46.2989, 36.0527, -81.4247, 0.37", "-47.1693, 36.3822, -82.7503, 0.51", "-48.1076, 36.6848, -83.8456, 0.51", "-48.7935, 36.9292, -84.4692, 0.51", "-49.3449, 37.1567, -84.7971, 0.51", "-50.0768, 37.4655, -85.107, 0.51", "-50.775, 37.7376, -85.3595, 0.51", "-52.3778, 38.3732, -85.8854, 0.81", "-53.011, 38.6292, -86.122, 0.51", "-53.3314, 38.7467, -86.2621, 1.03", "-54.7422, 39.1848, -86.93, 0.29", "-56.5382, 39.6898, -87.8399, 0.59", "-57.6487, 39.9989, -88.4147, 0.59", "-58.7925, 40.2837, -89.0642, 0.59", "-59.3393, 40.3892, -89.4004, 0.59", "-59.9924, 40.4898, -89.8122, 0.88", "-61.1849, 40.6582, -90.5674, 0.51", "-61.9119, 40.7717, -91.0248, 0.95", "-63.1656, 41.0033, -91.8088, 0.51", "-64.6687, 41.413, -92.9251, 0.15", "-65.0546, 41.5705, -93.2622, 0.15", "-65.8102, 42.0157, -94.0552, 0.15", "-66.5997, 42.6334, -94.9924, 0.15", "-66.9528, 42.9988, -95.4694, 0.95", "-67.8491, 44.2593, -96.8006, 0.51", "-68.2118, 44.8702, -97.351, 0.29", "-68.9825, 46.1239, -98.4431, 0.59", "-69.4691, 46.878, -99.0869, 0.22", "-70.0652, 47.717, -99.7513, 0.37", "-71.142, 49.1295, -100.774, 0.37", "-71.5954, 49.6978, -101.142, 0.88", "-72.2733, 50.5583, -101.682, 0.22", "-72.8652, 51.3646, -102.151, 0.44", "-73.3668, 52.0807, -102.599, 0.88", "-74.0392, 53.037, -103.193, 0.29", "-74.7455, 53.998, -103.852, 0.59", "-75.0479, 54.3935, -104.192, 0.59", "-75.6018, 55.0783, -105.014, 0.22", "-76.1374, 55.6472, -105.924, 0.22", "-76.4951, 55.9879, -106.584, 0.22", "-77.0058, 56.4159, -107.455, 0.66", "-78.0639, 57.2317, -109.018, 0.22", "-79.783, 58.5376, -111.604, 0.22", "-80.8853, 59.3522, -113.254, 0.22", "-81.8254, 60.0663, -114.678, 0.22", "-82.7872, 60.8422, -116.214, 0.22", "-83.6879, 61.6083, -117.632, 0.22" ],
    "parent" : "dend_116",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_115",
    "id" : "dend_115",
    "points3d" : [ "14.5604, -14.2854, -10.8044, 0.37", "15.644, -15.2748, -10.7875, 0.37", "16.8003, -16.3227, -10.7115, 0.51", "17.4887, -16.9504, -10.6481, 0.51", "18.0335, -17.4737, -10.5897, 0.73", "18.7175, -18.1472, -10.4925, 0.51", "19.2548, -18.6931, -10.4084, 0.37", "19.8628, -19.3239, -10.2898, 0.37", "20.1984, -19.7345, -10.2395, 0.73", "20.6471, -20.391, -10.1776, 0.73", "21.3284, -21.6238, -10.0932, 0.73", "21.7531, -22.654, -10.0499, 0.44", "22.0565, -23.5821, -10.0326, 0.73", "22.4473, -25.0464, -10.0633, 0.51", "22.5658, -25.5677, -10.0769, 0.73", "22.749, -26.4783, -10.1074, 0.73", "22.9615, -27.6459, -10.1581, 0.44", "23.0722, -28.1887, -10.1779, 0.44", "23.3766, -29.3514, -10.252, 0.73", "23.6898, -30.3183, -10.331, 0.37", "23.9046, -30.9159, -10.3966, 0.59", "24.1648, -31.6041, -10.5117, 0.37", "24.5451, -32.6474, -10.7284, 0.44", "24.909, -33.7138, -10.9768, 0.44", "25.1864, -34.5042, -11.1767, 0.95", "25.4262, -35.1517, -11.3541, 0.95", "25.8733, -36.2599, -11.6209, 0.51", "26.2958, -37.2514, -11.7767, 0.51", "26.6977, -38.1483, -11.8227, 0.59", "27.1587, -39.1415, -11.7991, 0.59", "27.5342, -39.8785, -11.775, 0.59", "28.1334, -40.9849, -11.6974, 0.59", "29.0414, -42.6853, -11.5146, 0.59", "29.6974, -44.0226, -11.3684, 0.59", "30.1357, -45.0129, -11.274, 0.59", "30.5304, -46.0281, -11.2056, 0.81", "30.8524, -46.9885, -11.1931, 0.44", "31.1272, -47.9313, -11.2525, 0.44", "31.5004, -49.3139, -11.4175, 0.44", "31.8061, -50.4564, -11.5983, 0.44", "32.0741, -51.3924, -11.7526, 0.59", "32.532, -52.7956, -11.9861, 0.44", "32.9749, -53.8346, -12.1951, 0.51", "33.4988, -54.8529, -12.4063, 0.51", "34.6007, -56.7339, -12.7792, 0.81", "35.1874, -57.6947, -12.9691, 0.44", "35.7982, -58.684, -13.1991, 0.73", "36.8439, -60.4423, -13.6442, 0.22", "37.0963, -60.9131, -13.8119, 0.22", "37.6345, -62.0599, -14.2613, 1.54", "38.3445, -63.748, -14.9623, 0.88", "39.0908, -65.6482, -15.7289, 0.59", "39.5015, -66.7083, -16.1394, 0.59", "40.4471, -69.1375, -17.0234, 0.37", "41.1202, -70.735, -17.5915, 0.44", "41.5328, -71.6156, -17.9329, 0.44", "42.0828, -72.6211, -18.3209, 0.37", "42.5328, -73.3456, -18.6113, 0.37", "42.9152, -73.9471, -18.8914, 1.18", "43.6499, -75.1875, -19.4801, 0.88", "44.4632, -76.6281, -20.2955, 0.51", "44.7083, -77.0777, -20.5508, 0.51", "45.2961, -78.1746, -21.1781, 0.81", "45.749, -79.0346, -21.6534, 0.88", "46.1969, -79.8884, -22.1051, 0.51", "46.7256, -80.8911, -22.5653, 0.73", "47.1232, -81.6866, -22.8547, 0.22", "47.5104, -82.4984, -23.1452, 0.81", "47.9776, -83.5039, -23.4781, 1.03", "48.5161, -84.7185, -23.8398, 0.51", "48.9564, -85.829, -24.1134, 0.88", "49.349, -86.897, -24.3166, 0.44", "49.649, -87.7075, -24.4468, 0.44", "50.0124, -88.6066, -24.5508, 0.44", "50.6984, -90.0755, -24.708, 0.44", "51.4145, -91.4063, -24.8641, 0.29", "52.0123, -92.416, -25.0364, 0.29", "52.5836, -93.287, -25.2529, 0.95", "53.1503, -94.0932, -25.4892, 1.03", "53.8717, -95.0716, -25.8168, 0.29", "54.3086, -95.6569, -26.036, 0.29", "54.8226, -96.4694, -26.3231, 0.29", "55.2699, -97.3776, -26.5686, 0.73", "55.6013, -98.1763, -26.711, 0.73", "55.9944, -99.2383, -26.8564, 0.29", "56.3556, -100.269, -26.9458, 1.69", "56.7983, -101.469, -27.031, 0.66", "57.0695, -102.113, -27.0352, 0.51", "57.617, -103.226, -26.9897, 0.29", "58.1333, -104.121, -26.9519, 0.44", "58.5246, -104.746, -26.9283, 0.44", "59.0211, -105.549, -26.8656, 0.66", "59.8303, -106.885, -26.687, 0.22", "60.3336, -107.809, -26.5159, 1.32", "61.1521, -109.563, -26.0786, 0.07", "61.6182, -110.737, -25.732, 1.1", "62.0019, -111.957, -25.3415, 0.15", "62.1802, -112.933, -25.0221, 0.15", "62.2124, -113.799, -24.747, 0.81", "62.1075, -114.736, -24.3216, 0.22", "62.0255, -115.087, -24.0889, 0.22", "61.8662, -115.677, -23.6268, 0.29", "61.6258, -116.755, -22.7033, 0.66", "61.5447, -117.256, -22.2576, 0.29", "61.3836, -119.381, -20.2869, 1.54", "61.3964, -120.866, -18.8501, 0.37", "61.4099, -121.04, -18.6844, 0.37", "61.5402, -121.954, -17.8673, 1.18", "61.741, -122.845, -17.1638, 1.1", "62.0366, -123.903, -16.4509, 0.15", "62.3169, -124.794, -15.9645, 0.15", "62.6313, -125.834, -15.4386, 0.73", "62.9352, -127.044, -14.8071, 0.22", "63.1916, -128.461, -14.0433, 0.88", "63.3606, -129.649, -13.3692, 0.44", "63.4563, -130.446, -12.9073, 0.44", "63.5182, -130.958, -12.615, 0.44", "63.6392, -132.113, -11.9236, 1.25", "63.7378, -133.477, -11.0884, 0.44", "63.7752, -134.466, -10.504, 0.44", "63.7943, -135.005, -10.2193, 0.44", "63.8226, -135.657, -9.89499, 0.29", "63.8519, -136.301, -9.57057, 0.29", "63.9077, -137.213, -9.1262, 0.66", "63.9636, -138.083, -8.70895, 0.07", "63.9766, -138.553, -8.47587, 0.07", "63.9637, -139.14, -8.16192, 0.07", "63.9081, -139.892, -7.73343, 1.25" ],
    "parent" : "dend_109",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_110",
    "id" : "dend_110",
    "points3d" : [ "14.5604, -14.2854, -10.8044, 0.66", "15.6939, -14.6676, -11.0648, 0.66", "17.1746, -15.1041, -11.3645, 0.44", "19.0804, -15.6079, -11.7162, 0.81", "20.7693, -16.0465, -11.995, 0.73", "22.1143, -16.4243, -12.2089, 0.73", "23.1586, -16.7504, -12.3918, 0.88", "24.2533, -17.0946, -12.6031, 0.88", "25.7977, -17.584, -12.9085, 0.66", "27.2463, -18.0657, -13.2351, 1.03", "28.6303, -18.5528, -13.5665, 0.81", "29.9214, -19.0077, -13.9026, 0.88", "31.5838, -19.5568, -14.3856, 0.59", "32.3287, -19.8009, -14.6193, 0.66", "32.8605, -19.9618, -14.7965, 0.66", "33.8153, -20.187, -15.1268, 0.88", "35.3149, -20.3965, -15.6018, 0.66", "36.6471, -20.4774, -15.9398, 1.03" ],
    "parent" : "dend_109",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "4.19816, -2.59232, 14.3108, 3.38", "3.377, -3.70065, 15.5969, 3.38", "2.33208, -4.79524, 16.8887, 3.16", "1.31706, -5.74958, 17.9522, 3.16", "-0.156868, -7.13539, 19.4967, 2.79", "-1.33726, -8.24522, 20.7335, 2.5", "-2.46876, -9.30908, 21.9192, 2.72", "-3.61436, -10.1209, 22.9605, 2.86", "-4.56113, -10.6463, 23.6812, 3.45" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "4.19816, -2.59232, 14.3108, 0.73", "4.92815, -0.587777, 15.1026, 0.73", "5.05826, -0.00874202, 15.3712, 0.81", "5.17718, 0.685757, 15.7035, 0.81", "5.2927, 1.50038, 16.0935, 0.95", "5.43197, 2.60355, 16.6013, 1.1", "5.62873, 3.95166, 17.2475, 0.73", "5.83455, 5.54156, 18.0517, 0.51", "6.04772, 6.65238, 18.6488, 0.51", "6.30387, 7.5291, 19.1677, 0.51", "6.61091, 8.13952, 19.6282, 1.03", "7.37475, 9.05731, 20.5215, 0.73", "8.12061, 9.66368, 21.2373, 0.73", "8.83086, 9.96882, 21.8254, 0.59", "9.56688, 10.1082, 22.3945, 0.59", "10.7484, 10.1277, 23.2786, 0.59", "10.8213, 10.1185, 23.3343, 0.59" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-7.56333, -13.1357, -5.21803, 1.98", "-8.67898, -14.132, -4.96863, 1.98", "-9.7602, -15.0976, -4.72692, 1.98" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-7.56333, -13.1357, -5.21803, 0.59", "-8.68934, -13.277, -6.19829, 0.59", "-9.73873, -13.3505, -7.0434, 0.59", "-10.947, -13.3996, -7.8908, 0.37", "-11.6117, -13.4099, -8.29896, 0.37", "-12.0344, -13.379, -8.51083, 0.37", "-12.567, -13.3074, -8.75049, 0.37", "-12.9717, -13.2086, -8.89937, 0.37", "-13.8095, -12.9242, -9.13079, 1.03", "-14.9202, -12.4529, -9.37048, 0.51", "-16.4731, -11.6166, -9.69265, 0.81", "-17.2439, -11.0434, -9.88378, 0.37", "-17.5059, -10.7789, -9.95901, 0.37", "-17.8252, -10.3641, -10.0521, 0.37", "-18.0984, -9.93003, -10.1409, 0.37", "-18.6613, -8.87973, -10.3718, 0.81", "-19.3428, -7.41028, -10.8037, 0.44", "-19.7493, -6.43654, -11.1514, 0.66", "-20.3813, -4.87581, -11.792, 0.22", "-20.9986, -3.42966, -12.5019, 0.73", "-21.4388, -2.46979, -13.0756, 0.59", "-21.9909, -1.33488, -13.8675, 0.59", "-22.3832, -0.55382, -14.5117, 0.81", "-22.5922, -0.155785, -14.8706, 1.1", "-23.2278, 0.949084, -15.911, 0.37", "-23.7486, 1.72197, -16.6026, 0.37", "-24.1208, 2.22875, -16.9944, 0.66", "-25.1358, 3.65574, -17.8994, 0.37", "-25.5994, 4.34824, -18.2751, 0.73", "-26.0299, 5.06033, -18.6124, 0.66", "-26.3586, 5.61704, -18.8321, 0.88", "-26.9965, 6.65765, -19.1956, 0.88", "-27.822, 7.89012, -19.7202, 0.37", "-28.2353, 8.45038, -19.975, 0.37", "-28.7778, 9.11271, -20.3298, 0.37", "-30.1445, 10.633, -21.24, 0.22", "-30.6025, 11.1113, -21.5546, 0.81", "-32.2076, 12.6958, -22.6551, 0.66", "-33.0527, 13.5276, -23.2691, 0.22", "-33.5688, 14.113, -23.6976, 0.22", "-34.0095, 14.7551, -24.1411, 0.88", "-34.216, 15.3268, -24.4959, 0.44", "-34.3054, 16.0648, -24.8628, 0.44", "-34.2525, 16.7684, -25.1028, 0.44", "-34.1152, 17.741, -25.3837, 0.81", "-34.0267, 18.448, -25.548, 1.03", "-33.9748, 19.5847, -25.757, 0.51", "-34.0279, 20.8495, -25.9303, 0.22", "-34.1182, 21.823, -26.0428, 0.22", "-34.2921, 23.1876, -26.2098, 0.81", "-34.4537, 24.3644, -26.3734, 0.51", "-34.6913, 25.9967, -26.6109, 0.81", "-34.9372, 27.5848, -26.8493, 0.44", "-35.1404, 28.8601, -27.0903, 0.44", "-35.3474, 29.8199, -27.3094, 0.44", "-35.6288, 30.7547, -27.6386, 0.73", "-35.9568, 31.3614, -28.0266, 0.44", "-36.357, 31.7196, -28.4491, 0.44", "-36.8917, 32.0, -28.9153, 0.44", "-37.9971, 32.4521, -29.7493, 0.66", "-39.5417, 33.0106, -30.7774, 0.37", "-40.9014, 33.4151, -31.6081, 0.59", "-41.5139, 33.5676, -31.9851, 0.44", "-42.4774, 33.7965, -32.5489, 0.07", "-42.8446, 33.9011, -32.756, 0.07", "-43.1461, 34.0235, -32.9416, 0.07", "-43.7026, 34.3849, -33.3735, 0.37", "-44.2892, 34.8701, -34.0234, 0.37", "-44.7218, 35.2605, -34.6088, 0.37", "-45.1914, 35.7142, -35.3029, 1.18", "-45.7306, 36.2556, -36.0923, 1.03", "-46.8232, 37.3513, -37.5924, 0.15", "-47.3659, 37.8804, -38.2496, 0.66", "-47.6643, 38.1283, -38.5277, 0.81", "-48.1535, 38.4487, -38.8936, 0.81", "-48.5604, 38.6672, -39.1608, 0.44", "-49.2222, 39.0098, -39.6568, 0.29", "-49.8587, 39.3859, -40.2364, 0.29", "-50.8003, 40.0785, -41.2672, 0.29", "-51.5722, 40.6729, -42.2066, 1.25", "-52.3938, 41.3547, -43.3406, 1.25", "-53.5083, 42.4038, -45.1155, 0.15", "-53.9601, 42.9103, -45.9746, 0.15", "-54.3943, 43.4826, -46.9581, 0.51" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-33.0237, 25.0315, 3.51537, 0.59", "-33.7082, 25.3994, 3.62783, 0.59", "-34.9109, 25.971, 3.79961, 0.59", "-36.4071, 26.6699, 3.98613, 0.81", "-37.3218, 27.1304, 4.08671, 0.66", "-38.3314, 27.696, 4.18626, 0.88", "-40.0486, 28.762, 4.36515, 0.44", "-41.4169, 29.6569, 4.4998, 0.44", "-42.6021, 30.4469, 4.60186, 0.44", "-43.9581, 31.4109, 4.71721, 0.44", "-45.2333, 32.3591, 4.81412, 0.73", "-46.1958, 33.1219, 4.84776, 0.73", "-47.2103, 33.9919, 4.85893, 0.37", "-47.8872, 34.5841, 4.84703, 0.37", "-48.5037, 35.1214, 4.8105, 0.37", "-49.36, 35.8519, 4.69817, 0.88", "-50.5736, 36.9066, 4.46943, 0.59", "-51.4719, 37.7719, 4.25575, 0.59", "-52.2514, 38.6858, 4.04238, 0.59", "-52.9269, 39.631, 3.86844, 0.59", "-53.7906, 40.9657, 3.69581, 0.59", "-54.3995, 41.9673, 3.58467, 0.37", "-55.0031, 43.0224, 3.5196, 0.37", "-55.6047, 44.1472, 3.496, 0.95", "-56.6255, 46.1563, 3.50675, 0.59", "-57.2514, 47.3538, 3.49272, 0.59", "-58.1055, 48.9263, 3.44554, 0.59", "-58.7209, 50.022, 3.34591, 0.59", "-59.5885, 51.5515, 3.12037, 0.44", "-60.1231, 52.5177, 2.93096, 1.03", "-60.9732, 54.2288, 2.45989, 0.51", "-61.267, 54.8733, 2.22566, 0.73", "-61.8211, 56.1688, 1.66714, 0.44", "-62.2447, 57.2596, 1.11817, 0.81", "-62.6144, 58.3894, 0.560298, 0.66", "-63.0166, 59.7678, -0.0773945, 0.95", "-63.6193, 62.0087, -1.02085, 0.59", "-64.0229, 63.5098, -1.63267, 0.59", "-64.507, 65.1915, -2.29309, 0.66", "-65.1575, 67.282, -3.12471, 0.51", "-65.7466, 68.9827, -3.81324, 0.51", "-66.2096, 70.0484, -4.25501, 0.81", "-66.6556, 70.7991, -4.60576, 0.81", "-67.3731, 71.6308, -5.09874, 0.59", "-68.2303, 72.3228, -5.6459, 0.59", "-69.3737, 72.9918, -6.36584, 0.66", "-70.9334, 73.704, -7.33612, 0.51", "-72.0592, 74.1486, -7.99255, 0.51", "-72.7118, 74.4035, -8.39139, 0.95", "-73.4401, 74.7117, -8.83032, 0.51", "-74.1529, 75.0757, -9.23239, 0.88", "-75.2603, 75.8114, -9.81126, 0.88", "-76.6064, 76.9478, -10.5218, 0.88", "-77.9261, 78.1921, -11.2887, 0.59", "-78.6027, 78.8353, -11.7194, 0.73", "-79.3775, 79.5152, -12.2501, 0.73", "-80.3544, 80.3324, -12.9959, 0.51", "-81.2393, 81.0824, -13.7695, 0.81", "-81.9443, 81.7074, -14.5491, 0.81", "-82.7431, 82.4345, -15.5578, 0.73", "-83.5534, 83.2204, -16.7134, 0.29", "-84.4622, 84.1412, -18.0825, 0.81", "-85.2, 84.9479, -19.2613, 1.03", "-86.3967, 86.4147, -21.1783, 1.03", "-87.0512, 87.345, -22.2618, 0.66", "-87.5082, 88.073, -23.0415, 0.66", "-87.9257, 88.7576, -23.7143, 0.66", "-88.3748, 89.4452, -24.4135, 0.29", "-88.7666, 90.0242, -25.0722, 0.88", "-89.4692, 91.0414, -26.3629, 0.51", "-89.8427, 91.5835, -27.1336, 0.51", "-90.2374, 92.1398, -27.9864, 0.51", "-91.1355, 93.4049, -29.9711, 0.51", "-91.7508, 94.286, -31.2279, 0.51", "-91.9358, 94.5715, -31.6162, 0.51", "-92.2551, 95.0856, -32.2706, 0.51", "-92.9025, 96.0391, -33.4393, 0.37", "-93.4416, 96.7335, -34.301, 0.73", "-94.0257, 97.4296, -35.1861, 0.95", "-94.8121, 98.3722, -36.4563, 0.95", "-95.3552, 99.0744, -37.4888, 0.95", "-95.7985, 99.7482, -38.5649, 1.1", "-96.245, 100.658, -40.1104, 0.73", "-96.5865, 101.453, -41.5387, 0.37", "-96.7925, 101.908, -42.4108, 0.37", "-96.835, 102.014, -42.6095, 1.03", "-97.1789, 102.837, -44.2823, 0.44", "-97.6432, 103.843, -46.4537, 1.1", "-98.328, 105.013, -49.0783, 0.37", "-98.8811, 105.783, -50.8771, 0.37", "-99.2978, 106.351, -52.2257, 1.03", "-99.8605, 107.169, -54.1856, 0.15", "-100.006, 107.367, -54.6531, 0.15", "-100.219, 107.613, -55.1989, 0.15", "-100.789, 108.187, -56.3139, 1.1", "-101.853, 109.066, -57.8985, 1.4", "-103.318, 109.995, -59.4423, 0.66", "-104.461, 110.553, -60.3326, 0.37", "-105.728, 110.984, -61.1252, 0.37", "-106.973, 111.286, -61.7489, 0.66", "-107.918, 111.454, -62.1133, 0.66", "-109.3, 111.655, -62.5905, 1.03", "-110.765, 111.9, -63.0498, 0.66", "-111.951, 112.182, -63.5111, 0.66", "-113.054, 112.551, -64.0094, 1.54", "-114.32, 113.109, -64.6355, 0.81", "-115.93, 114.027, -65.4569, 0.51", "-116.974, 114.738, -65.9963, 0.59", "-118.189, 115.667, -66.5057, 0.59", "-118.836, 116.165, -66.6239, 0.59", "-119.314, 116.483, -66.5168, 0.59", "-119.793, 116.719, -66.2588, 0.81", "-120.645, 117.026, -65.6428, 0.81", "-122.239, 117.46, -64.4973, 0.66", "-123.477, 117.791, -63.613, 0.51", "-124.391, 118.071, -62.9579, 0.51", "-125.727, 118.56, -62.0196, 0.88", "-126.877, 119.034, -61.2684, 0.88", "-127.763, 119.438, -60.7952, 0.88", "-128.71, 119.884, -60.453, 0.59", "-130.03, 120.459, -60.2055, 0.59", "-130.761, 120.763, -60.1659, 0.59", "-132.346, 121.433, -60.3956, 0.29", "-133.484, 121.884, -60.8205, 0.66", "-135.017, 122.398, -61.5906, 0.66", "-136.236, 122.728, -62.3307, 0.66", "-136.994, 122.869, -62.8274, 0.66", "-138.091, 122.993, -63.5343, 0.66", "-139.589, 123.058, -64.4348, 0.66", "-140.851, 123.073, -65.1305, 0.66", "-142.215, 123.029, -65.7651, 1.03", "-144.012, 122.855, -66.5106, 0.22", "-145.201, 122.656, -66.9628, 0.07", "-146.393, 122.367, -67.3256, 0.66" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-33.0237, 25.0315, 3.51537, 0.95", "-32.6929, 25.8477, 3.32016, 0.95", "-32.3462, 26.8145, 3.00387, 0.22", "-32.0658, 27.6808, 2.67907, 0.22", "-31.8914, 28.2817, 2.4253, 0.22", "-31.7426, 28.9627, 2.13561, 0.22", "-31.6437, 29.8071, 1.79544, 1.18", "-31.6589, 31.1908, 1.24562, 0.15", "-31.7132, 31.7025, 1.04972, 0.15", "-31.7772, 32.2321, 0.844699, 0.15", "-31.9206, 33.3331, 0.371445, 0.95", "-32.0744, 34.5704, -0.212022, 0.15", "-32.1215, 35.1093, -0.476391, 0.29", "-32.1168, 35.9142, -0.866396, 0.29", "-31.968, 36.9116, -1.34937, 0.29", "-31.5403, 38.2337, -2.01167, 0.44", "-31.1385, 38.9839, -2.43518, 0.44", "-30.5427, 39.9246, -3.00363, 0.73", "-30.1498, 40.5518, -3.41886, 0.81", "-29.6122, 41.4678, -4.03545, 0.51", "-29.2941, 42.1702, -4.58207, 0.51", "-29.0384, 43.0745, -5.39381, 1.54", "-28.951, 44.1328, -6.53959, 0.51", "-29.093, 45.0702, -7.71421, 0.51", "-29.2327, 45.4337, -8.20934, 0.88", "-30.0968, 46.7334, -10.0904, 0.81", "-30.6356, 47.3001, -10.9514, 0.07", "-31.3287, 47.7986, -11.8156, 0.88", "-32.003, 48.1216, -12.5187, 0.07", "-32.4521, 48.2606, -12.906, 0.44", "-33.779, 48.4568, -13.9022, 0.07", "-34.3344, 48.4621, -14.2588, 0.66", "-35.5125, 48.3616, -15.0045, 0.22", "-36.0732, 48.2717, -15.3769, 0.95", "-36.8244, 48.0883, -15.9435, 0.95", "-38.1506, 47.6451, -17.0065, 0.07", "-38.9917, 47.2645, -17.6961, 0.07", "-39.7889, 46.8834, -18.3865, 0.59", "-40.3765, 46.5925, -18.912, 0.07", "-40.8581, 46.3434, -19.366, 0.51", "-41.268, 46.0799, -19.7614, 0.07", "-41.5764, 45.7956, -20.0725, 0.51" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-7.88925, 35.5722, 0.0, 0.489566", "-11.2403, 50.1931, 0.0, 0.489566", "-14.5914, 64.814, 0.0, 0.489566" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_129",
    "id" : "dend_129",
    "points3d" : [ "1.75216, 17.9576, -13.5644, 0.44", "1.96844, 18.9423, -13.2637, 0.44", "2.10433, 20.1743, -12.8531, 0.44", "2.08763, 21.7, -12.298, 0.44", "1.98742, 22.8027, -11.8728, 0.44", "1.82012, 24.4371, -11.2521, 0.66", "1.72419, 25.2424, -10.9561, 0.66", "1.50183, 26.5221, -10.4562, 0.66", "1.1108, 27.9687, -9.81607, 0.66", "0.643003, 29.2909, -9.15183, 0.81", "0.292033, 30.244, -8.62916, 0.59", "0.0873498, 30.9037, -8.22366, 0.29", "-0.038107, 31.4812, -7.879, 0.29", "-0.364576, 33.6278, -6.61763, 0.51", "-0.506427, 34.7316, -5.98268, 0.88", "-0.611072, 35.4521, -5.56368, 0.95", "-0.965553, 37.4303, -4.42119, 0.66", "-1.26506, 38.9017, -3.58794, 0.44", "-1.52036, 40.0554, -2.9518, 0.44", "-1.81144, 41.3392, -2.24682, 0.44", "-2.03195, 42.2558, -1.71455, 1.32", "-2.18969, 42.8483, -1.32286, 1.32", "-2.59617, 44.2679, -0.292174, 0.37", "-2.768, 45.0261, 0.284966, 0.44", "-2.86888, 46.0447, 1.03531, 0.66", "-2.86483, 46.5777, 1.43447, 0.66", "-2.78768, 47.2746, 1.92993, 0.66", "-2.60191, 48.15, 2.52625, 0.73", "-2.35832, 48.9106, 2.95524, 0.73", "-2.09027, 49.8618, 3.35827, 0.81" ],
    "parent" : "dend_121",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_122",
    "id" : "dend_122",
    "points3d" : [ "1.75216, 17.9576, -13.5644, 0.66", "2.29175, 18.5351, -13.6467, 0.66", "3.41942, 20.0812, -13.7407, 0.59", "3.97889, 20.9704, -13.763, 0.51", "4.58489, 21.971, -13.7705, 0.51", "5.22097, 23.0501, -13.7748, 0.51", "5.88698, 24.1723, -13.7771, 0.51", "6.70591, 25.6842, -13.7551, 0.81", "7.16999, 26.5974, -13.7397, 0.81", "7.75714, 27.7192, -13.7414, 0.66", "8.17361, 28.4344, -13.755, 0.66", "8.76715, 29.3795, -13.788, 0.66", "9.35543, 30.2666, -13.8473, 0.66", "10.3876, 31.773, -13.9945, 0.29", "11.1231, 32.86, -14.1644, 0.66", "12.0663, 34.2554, -14.4466, 0.44", "12.4027, 34.7289, -14.5579, 0.51", "12.8863, 35.3845, -14.7329, 0.51", "13.2612, 35.8552, -14.8686, 0.59", "14.4975, 37.2626, -15.3134, 0.88", "15.3309, 38.1647, -15.6126, 1.1", "16.1009, 38.9929, -15.8836, 1.25", "16.8371, 39.7503, -16.1042, 0.44", "17.5364, 40.4527, -16.2755, 0.88", "18.5207, 41.4997, -16.4762, 0.29", "19.1459, 42.2416, -16.5776, 0.29", "20.1204, 43.5603, -16.7241, 0.44", "21.0604, 45.0155, -16.8454, 0.59", "21.6171, 45.9322, -16.8568, 0.95", "22.4245, 47.2893, -16.7834, 0.66", "23.0272, 48.2824, -16.634, 0.66", "23.6409, 49.2303, -16.4602, 0.66", "24.3089, 50.1427, -16.286, 0.66", "25.4256, 51.4971, -16.0726, 1.1", "26.1398, 52.2473, -15.9903, 0.51", "26.8287, 52.8936, -15.982, 0.51", "28.0138, 54.0413, -16.0442, 0.95", "29.3596, 55.4766, -16.2793, 0.59", "29.8571, 56.102, -16.4263, 0.37", "30.2991, 56.814, -16.6753, 0.73", "30.8499, 57.909, -17.1046, 0.95", "31.397, 59.2101, -17.6725, 1.1", "31.6825, 59.9375, -17.968, 1.1", "31.8771, 60.4601, -18.1766, 1.25", "32.8084, 62.7546, -19.0713, 0.51", "33.3994, 64.075, -19.5909, 0.81", "34.0726, 65.3657, -20.0746, 0.37", "34.7116, 66.4048, -20.4365, 0.37", "35.142, 67.0301, -20.6325, 0.88", "35.7453, 67.814, -20.8545, 0.51", "36.7169, 68.8957, -21.124, 0.37", "37.9536, 70.0588, -21.4315, 0.37", "39.5287, 71.4245, -21.8159, 0.37", "40.3569, 72.1255, -22.0448, 0.44", "41.0047, 72.6386, -22.2016, 0.81", "42.2004, 73.5012, -22.4248, 0.44", "43.2238, 74.1572, -22.5714, 0.51", "43.9935, 74.6108, -22.6645, 0.73", "44.6691, 75.0252, -22.7851, 1.1", "46.0421, 76.0295, -23.2129, 0.66", "47.0522, 76.9641, -23.8316, 0.51", "47.4867, 77.4583, -24.2508, 0.51", "47.9831, 78.0847, -24.8482, 0.88", "49.0292, 79.426, -26.3006, 0.44", "49.9162, 80.5313, -27.6439, 0.88", "50.8709, 81.6909, -29.2459, 0.44", "51.3454, 82.2767, -30.072, 0.44", "51.9248, 82.9696, -31.0225, 0.66", "52.9032, 84.0793, -32.4958, 1.03", "53.7613, 84.9274, -33.554, 0.37", "54.7266, 85.7973, -34.604, 0.37", "55.0904, 86.1029, -34.9897, 0.37", "55.6904, 86.6041, -35.6407, 0.37", "56.2247, 87.0591, -36.2489, 0.81", "57.2325, 87.9729, -37.3304, 0.51", "57.6059, 88.3509, -37.7172, 0.95", "58.6139, 89.3063, -38.6131, 1.03" ],
    "parent" : "dend_121",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_114",
    "id" : "dend_114",
    "points3d" : [ "36.6471, -20.4774, -15.9398, 0.73", "37.1403, -20.8465, -16.2386, 0.73", "38.0953, -21.5278, -16.8039, 0.59", "39.2066, -22.298, -17.4116, 0.66", "40.449, -23.1075, -18.0362, 0.51", "41.383, -23.6796, -18.5023, 0.51", "42.524, -24.3454, -19.0802, 0.66", "43.8989, -25.0857, -19.732, 0.59", "44.8736, -25.5579, -20.1537, 0.59", "45.7614, -25.9488, -20.5134, 0.51", "46.9384, -26.4444, -20.9402, 0.37", "47.7317, -26.7682, -21.2328, 0.51", "48.961, -27.2758, -21.7488, 0.59", "49.91, -27.698, -22.1679, 0.37", "50.7085, -28.0872, -22.5612, 0.22", "51.5567, -28.5156, -23.0132, 0.81", "52.7969, -29.1407, -23.7058, 0.66", "53.9825, -29.7084, -24.422, 0.66", "54.9007, -30.1201, -25.0105, 0.44", "55.9525, -30.5642, -25.6716, 1.03", "57.1418, -31.0406, -26.381, 0.44", "58.267, -31.4704, -26.9923, 0.44", "59.4142, -31.8839, -27.5156, 0.44", "60.2161, -32.1439, -27.8219, 1.1", "61.6606, -32.5646, -28.2912, 0.51", "62.6436, -32.8399, -28.5433, 0.44", "63.8649, -33.205, -28.7857, 0.51", "64.5676, -33.4275, -28.8932, 0.51", "65.8181, -33.8668, -29.0429, 0.88", "66.6704, -34.1843, -29.144, 0.37", "67.3131, -34.4306, -29.211, 0.22", "68.2388, -34.7953, -29.3663, 0.66", "68.9862, -35.1277, -29.5296, 0.66", "69.8587, -35.6086, -29.7654, 0.29", "70.3327, -35.9299, -29.9258, 0.29", "71.3185, -36.6423, -30.3269, 0.81", "72.6273, -37.5663, -30.8881, 0.22", "73.2535, -37.9879, -31.1588, 0.44", "74.1521, -38.5743, -31.5523, 1.1", "75.0244, -39.1572, -31.9171, 0.51", "76.1979, -39.9846, -32.3548, 0.66", "77.0983, -40.6502, -32.635, 0.37", "77.4509, -40.9135, -32.7048, 0.37", "78.1283, -41.4044, -32.7983, 0.37", "79.1092, -42.1038, -32.8502, 1.03", "79.9964, -42.774, -32.8157, 0.29", "80.9357, -43.5526, -32.7161, 0.81", "82.0209, -44.5341, -32.568, 0.44", "82.806, -45.3066, -32.4399, 0.44", "83.9241, -46.4668, -32.2183, 0.51", "84.6566, -47.2407, -32.0633, 0.51", "85.0998, -47.721, -31.9688, 0.51", "85.7301, -48.4106, -31.8478, 0.51", "86.3084, -49.0319, -31.7497, 0.51", "87.0236, -49.7926, -31.6462, 0.51", "87.7775, -50.5625, -31.5366, 0.59", "88.4478, -51.2302, -31.4324, 0.59", "88.9982, -51.7582, -31.3647, 0.22", "89.6586, -52.3557, -31.3038, 0.66", "90.265, -52.8834, -31.2643, 0.66", "91.055, -53.5924, -31.2357, 0.22", "92.1187, -54.4959, -31.1851, 0.37", "93.0282, -55.2007, -31.1403, 0.07", "93.6982, -55.6845, -31.1104, 0.07", "94.1994, -56.0075, -31.0939, 0.07", "94.9412, -56.4052, -31.0742, 0.88", "96.7206, -57.2054, -31.0987, 0.29", "97.2752, -57.4181, -31.1137, 0.07", "97.7423, -57.582, -31.1292, 0.73", "98.9603, -57.9925, -31.2, 0.22", "100.081, -58.3737, -31.3197, 0.66", "101.4, -58.8251, -31.5135, 0.29", "102.101, -59.0738, -31.6432, 0.29", "103.613, -59.5944, -31.889, 0.95", "105.21, -60.1233, -32.0615, 0.22", "106.412, -60.5102, -32.1209, 0.22", "107.041, -60.7151, -32.1258, 0.22", "107.743, -60.9332, -32.1048, 0.22", "109.085, -61.3412, -32.076, 0.81", "110.564, -61.7911, -32.0475, 0.15", "111.934, -62.21, -32.0208, 0.95", "112.932, -62.5243, -32.0016, 0.15", "114.18, -62.9387, -32.0138, 0.81", "115.457, -63.3857, -32.0838, 0.37", "116.013, -63.5887, -32.149, 0.37", "116.993, -63.9373, -32.3361, 0.66", "117.735, -64.1863, -32.4934, 0.22", "118.082, -64.2984, -32.5645, 0.22", "118.684, -64.476, -32.6998, 0.22", "119.124, -64.5708, -32.8139, 0.59", "120.16, -64.7221, -33.1126, 0.29", "120.792, -64.7931, -33.301, 1.03", "121.776, -64.9312, -33.6074, 0.22", "122.708, -65.1201, -33.8938, 0.95", "124.03, -65.4749, -34.3308, 0.22", "124.672, -65.6928, -34.5487, 0.44", "125.366, -65.9608, -34.8138, 0.44", "126.102, -66.289, -35.1383, 0.22", "126.749, -66.6227, -35.449, 0.66", "127.769, -67.2848, -35.9577, 0.37", "128.486, -67.8212, -36.3063, 0.37", "129.47, -68.5638, -36.7806, 0.37", "129.964, -68.8956, -37.0017, 0.95", "130.525, -69.2157, -37.2208, 0.66", "131.393, -69.6918, -37.5224, 0.22", "132.084, -70.1043, -37.7527, 0.22", "132.686, -70.4918, -37.9922, 0.22", "133.469, -71.0434, -38.3192, 0.81", "134.413, -71.7628, -38.8327, 0.15", "134.939, -72.2082, -39.2044, 0.95", "135.805, -73.0566, -39.9393, 0.73", "136.409, -73.7583, -40.6271, 0.07", "136.785, -74.2501, -41.1324, 0.88", "137.447, -75.2187, -42.1415, 0.22", "137.867, -75.8597, -42.847, 0.22", "138.191, -76.3316, -43.4066, 1.18", "139.125, -77.7297, -45.0841, 0.22", "139.33, -78.0776, -45.511, 0.59", "139.484, -78.3932, -45.9159, 0.59", "139.793, -79.1569, -46.8454, 0.37", "140.01, -79.7972, -47.5628, 0.37", "140.092, -80.1405, -47.889, 0.07", "140.199, -81.0641, -48.4461, 0.07", "140.256, -81.6782, -48.741, 0.88", "140.396, -82.6158, -49.1095, 0.15", "140.525, -83.1894, -49.265, 0.15", "140.882, -84.2013, -49.4664, 0.29", "141.29, -85.1693, -49.6315, 0.07", "141.527, -85.6548, -49.6921, 0.07", "142.005, -86.5321, -49.8089, 0.07", "142.342, -87.1207, -49.8994, 0.07", "142.902, -87.9614, -50.062, 1.1" ],
    "parent" : "dend_110",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_111",
    "id" : "dend_111",
    "points3d" : [ "36.6471, -20.4774, -15.9398, 0.51", "36.4734, -20.852, -16.8576, 0.51", "36.38, -21.6776, -19.0363, 0.59", "36.4437, -22.0408, -20.1806, 0.81", "36.6242, -22.3401, -21.3131, 0.81", "36.673, -22.3881, -21.5147, 0.81", "36.954, -22.5885, -22.3981, 0.44", "37.7967, -22.9128, -24.166, 0.51", "38.4275, -23.0103, -25.0997, 0.51", "39.2264, -23.0795, -26.1369, 0.51", "39.768, -23.0972, -26.7851, 0.51", "40.5886, -23.1017, -27.7588, 0.59", "40.9179, -23.0919, -28.1319, 0.59", "41.7795, -23.0581, -28.9639, 1.32" ],
    "parent" : "dend_110",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-4.56113, -10.6463, 23.6812, 2.57", "-4.36646, -11.6693, 23.7334, 2.57", "-4.0701, -13.2266, 23.813, 1.62" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-4.56113, -10.6463, 23.6812, 2.28", "-5.90763, -10.3756, 23.4878, 2.28", "-7.18009, -10.1458, 23.2881, 1.69", "-8.54097, -9.92371, 23.1094, 1.4", "-9.87358, -9.75904, 22.9583, 1.03", "-11.1161, -9.71183, 22.8631, 0.81", "-12.5563, -9.79333, 22.8455, 0.88", "-13.4224, -9.97435, 22.9278, 1.03", "-14.2776, -10.2403, 23.1146, 1.03", "-15.0858, -10.5192, 23.3829, 1.32", "-16.6063, -11.1232, 24.0466, 0.81", "-17.9828, -11.7498, 24.8185, 0.95", "-19.0281, -12.3167, 25.5242, 0.95", "-19.5274, -12.6154, 25.8977, 0.95", "-20.3158, -13.0886, 26.5345, 1.25" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "10.8213, 10.1185, 23.3343, 0.66", "11.6941, 10.6138, 22.9028, 0.66", "13.6991, 11.7518, 21.9115, 0.66", "14.8504, 12.4051, 21.3423, 0.73", "15.6535, 12.8609, 20.9452, 0.59", "17.3135, 13.803, 20.1245, 0.73", "18.3777, 14.4071, 19.5983, 0.88" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "10.8213, 10.1185, 23.3343, 0.66", "10.9333, 10.6672, 23.4849, 0.66", "11.0943, 11.4557, 23.7013, 0.66", "11.1121, 11.5433, 23.7253, 0.66" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-9.7602, -15.0976, -4.72692, 1.84", "-10.8016, -16.6296, -3.09227, 1.84", "-11.6478, -17.8745, -1.76399, 1.91", "-12.0714, -18.4977, -1.09906, 2.06" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-9.7602, -15.0976, -4.72692, 0.22", "-11.3396, -15.4647, -4.88804, 0.22", "-12.155, -15.6784, -4.96758, 0.22", "-13.0132, -15.9012, -5.07369, 0.29", "-13.8394, -16.0743, -5.17635, 0.29", "-14.6991, -16.2239, -5.3254, 0.59", "-15.568, -16.3499, -5.48949, 0.44", "-16.9365, -16.4923, -5.78137, 0.81", "-17.9615, -16.5737, -6.01476, 0.59", "-19.4041, -16.6766, -6.33873, 0.59", "-20.9482, -16.7823, -6.69237, 0.66", "-22.1611, -16.8468, -6.9898, 0.59", "-23.3835, -16.8811, -7.29495, 0.44", "-24.2461, -16.8879, -7.51781, 0.44", "-25.4282, -16.9376, -7.81654, 0.59", "-26.3201, -17.0516, -8.05242, 0.59", "-27.3652, -17.2679, -8.34788, 0.51", "-28.1665, -17.4997, -8.66227, 0.51", "-28.6499, -17.6606, -8.88265, 0.51", "-29.2821, -17.8896, -9.19929, 0.73", "-30.2997, -18.3179, -9.74016, 0.51", "-31.2513, -18.7854, -10.2909, 0.51", "-32.0439, -19.2528, -10.8263, 0.51", "-33.0256, -19.8931, -11.5884, 0.59", "-33.6708, -20.3145, -12.1366, 0.59", "-34.3897, -20.75, -12.8498, 0.51", "-35.1073, -21.1643, -13.5826, 0.51", "-35.8513, -21.5991, -14.3662, 0.73", "-36.9397, -22.1772, -15.5184, 0.95", "-38.4046, -22.799, -17.1215, 0.44", "-39.9865, -23.2536, -18.8354, 0.95", "-40.9092, -23.3953, -19.8029, 0.95", "-41.9262, -23.4088, -20.7916, 0.59", "-43.1819, -23.2271, -21.9552, 0.44", "-44.6769, -22.7398, -23.2679, 0.51", "-45.8003, -22.1319, -24.1957, 0.51", "-46.3736, -21.7116, -24.6432, 0.51", "-47.0827, -21.0592, -25.2277, 0.44", "-47.7328, -20.3609, -25.7966, 0.44", "-48.3351, -19.6699, -26.3308, 0.44", "-48.7775, -19.1187, -26.7652, 0.59", "-49.0859, -18.7122, -27.1022, 0.59", "-49.9017, -17.7226, -28.0664, 1.18", "-50.6857, -16.804, -29.0764, 1.47", "-51.25, -16.1447, -29.8666, 1.1", "-52.0889, -15.1484, -31.0848, 0.51", "-52.3598, -14.8267, -31.4703, 0.88", "-53.3451, -13.6681, -32.7971, 0.51", "-53.9455, -12.9993, -33.5786, 0.59", "-54.7364, -12.247, -34.517, 0.81", "-55.207, -11.8881, -35.0558, 1.1", "-56.1531, -11.3564, -35.942, 0.51", "-57.1638, -10.8753, -36.8065, 0.95", "-58.0888, -10.4943, -37.4858, 0.95", "-58.6988, -10.2869, -37.8651, 0.66", "-59.6639, -10.0157, -38.3836, 0.44", "-61.3156, -9.6438, -39.2626, 0.37", "-62.2953, -9.49454, -39.7329, 0.37", "-63.1661, -9.41124, -40.1113, 0.37", "-63.7529, -9.35558, -40.3484, 0.37", "-64.3877, -9.2958, -40.6094, 0.37", "-65.4889, -9.20681, -41.0269, 1.03", "-66.3954, -9.02963, -41.3743, 0.37", "-66.9281, -8.79299, -41.5923, 0.22", "-67.5948, -8.37512, -41.8784, 0.22", "-67.8791, -8.16052, -41.982, 0.22", "-68.6621, -7.50596, -42.2271, 1.54", "-70.4031, -5.95082, -42.6823, 0.66", "-71.9247, -4.55691, -43.044, 0.66", "-72.6008, -3.97117, -43.1758, 0.81", "-73.9839, -2.85625, -43.402, 0.44", "-74.4869, -2.48182, -43.4652, 0.44", "-74.9766, -2.1654, -43.4982, 0.66", "-75.7116, -1.76619, -43.4756, 0.29", "-77.1952, -1.06858, -43.3854, 0.66", "-77.8933, -0.768821, -43.3628, 0.22", "-79.1503, -0.256525, -43.411, 0.51", "-80.3215, 0.230447, -43.5118, 0.29", "-81.2092, 0.600596, -43.6222, 0.29", "-82.8309, 1.27345, -43.9118, 0.88", "-84.1418, 1.77646, -44.2721, 0.07", "-85.3246, 2.16245, -44.679, 0.07", "-86.2198, 2.42398, -45.0839, 0.73", "-86.8589, 2.60562, -45.4176, 0.29", "-87.6438, 2.86052, -45.9267, 0.88", "-88.7617, 3.36892, -46.9283, 0.44", "-89.4045, 3.82612, -47.8322, 0.73", "-90.184, 4.69425, -49.383, 0.29", "-90.472, 5.17946, -50.1432, 0.29", "-91.0138, 6.45143, -52.0277, 1.1", "-91.4126, 8.03093, -54.1817, 0.22", "-91.5292, 9.37218, -55.8585, 0.22", "-91.503, 9.83912, -56.4315, 0.88", "-91.3168, 10.675, -57.4647, 0.07" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_131",
    "id" : "dend_131",
    "points3d" : [ "-2.09027, 49.8618, 3.35827, 0.95", "-2.34506, 51.1492, 3.55298, 0.95", "-2.63303, 52.5234, 3.66337, 0.66", "-2.81389, 53.4704, 3.70591, 0.66", "-2.98061, 54.3598, 3.67427, 0.66", "-3.10878, 55.0887, 3.61815, 0.66", "-3.29708, 56.3797, 3.46547, 0.59", "-3.44809, 57.4714, 3.29593, 0.88", "-3.53311, 58.1478, 3.19114, 0.88", "-3.69688, 59.6924, 2.99323, 0.51", "-3.73788, 60.4403, 2.94411, 0.51", "-3.76977, 61.4768, 2.93679, 0.66", "-3.81154, 62.6363, 3.0037, 0.37", "-3.85057, 63.7799, 3.07978, 0.44", "-3.88942, 64.9925, 3.15495, 0.73", "-3.93905, 66.3499, 3.24578, 0.88", "-3.97494, 66.8912, 3.26256, 0.88", "-4.06317, 67.8727, 3.25469, 1.25", "-4.19625, 69.8879, 3.1013, 0.51", "-4.203, 70.5508, 3.01236, 0.44", "-4.1536, 71.301, 2.90822, 0.44", "-4.0685, 72.0396, 2.78677, 0.44", "-3.92889, 72.7615, 2.65432, 0.44", "-3.67057, 73.8618, 2.4496, 0.73", "-3.38118, 75.1504, 2.18741, 0.73", "-3.04866, 76.526, 1.86429, 0.73", "-2.72342, 77.9174, 1.50971, 0.73", "-2.51461, 78.9939, 1.22527, 0.81", "-2.36263, 79.9833, 0.933554, 0.88", "-2.15255, 81.6674, 0.419761, 0.37", "-2.04287, 82.5937, 0.17364, 0.37", "-1.94405, 83.4222, -0.0133076, 0.37", "-1.82816, 84.4275, -0.15173, 0.37", "-1.72428, 85.6437, -0.2778, 0.73", "-1.6535, 86.7831, -0.374179, 0.73", "-1.72304, 88.0897, -0.440525, 0.73", "-1.87442, 88.9371, -0.511283, 0.73", "-2.22515, 90.2535, -0.72543, 0.73", "-2.71856, 91.3043, -1.01974, 0.73", "-3.12887, 91.9351, -1.21954, 0.73", "-4.29466, 93.4189, -1.76355, 0.22", "-4.99194, 94.2349, -2.09069, 0.73", "-5.82778, 95.244, -2.48756, 0.59", "-7.10491, 97.012, -3.19351, 0.22", "-7.60347, 97.9418, -3.56389, 0.29", "-7.85102, 98.8135, -3.92113, 0.29", "-7.85988, 99.5927, -4.23562, 0.29", "-7.76561, 100.638, -4.61084, 0.59", "-7.60643, 102.001, -5.1114, 0.59", "-7.45381, 103.287, -5.69874, 0.37", "-7.41158, 103.871, -6.04938, 0.37", "-7.37585, 104.716, -6.63041, 0.37", "-7.39267, 105.751, -7.37886, 0.81", "-7.49745, 106.738, -8.08778, 0.37", "-7.70461, 107.762, -8.77897, 0.66", "-8.00354, 109.002, -9.58427, 0.88", "-8.23545, 110.12, -10.3048, 0.29", "-8.31401, 110.636, -10.6375, 0.29", "-8.38879, 111.258, -11.0485, 0.29", "-8.48061, 111.984, -11.5331, 0.29", "-8.6562, 113.044, -12.3353, 0.81", "-9.03061, 114.682, -13.7205, 0.22", "-9.27685, 115.676, -14.615, 0.88", "-9.47174, 116.536, -15.4117, 0.88", "-9.61389, 117.288, -16.1413, 1.25", "-9.93215, 118.969, -17.8766, 0.51", "-10.1798, 119.982, -18.9565, 0.51", "-10.4337, 120.86, -19.9111, 0.81", "-10.7328, 121.916, -21.0691, 0.59", "-10.9387, 122.841, -22.1207, 0.37", "-11.0608, 123.568, -23.0505, 0.73", "-11.1574, 124.123, -23.8611, 0.73", "-11.3795, 125.251, -25.7364, 0.37", "-11.4861, 125.754, -26.6342, 0.37", "-11.6393, 126.708, -28.4466, 0.95", "-11.7105, 127.781, -30.5398, 0.95", "-11.6402, 128.788, -32.553, 0.22", "-11.5526, 129.44, -34.0108, 0.81", "-11.532, 129.657, -34.5379, 0.81", "-11.5313, 130.338, -36.2165, 0.37", "-11.5402, 130.665, -37.0566, 0.37", "-11.5079, 130.942, -37.81, 0.37", "-11.2056, 131.963, -40.9067, 1.1", "-10.9909, 132.56, -42.9873, 0.73", "-10.8098, 133.025, -44.9271, 1.25", "-10.6535, 133.468, -47.1002, 1.25", "-10.5164, 133.832, -49.2131, 0.81", "-10.4401, 133.978, -50.3244, 0.37", "-10.3241, 134.04, -51.1096, 0.37", "-10.1036, 134.03, -52.1853, 0.59", "-9.88734, 133.948, -53.0747, 0.59", "-9.73537, 133.892, -53.7397, 0.59", "-9.4862, 133.906, -55.314, 1.25", "-9.23294, 134.041, -56.7968, 1.25", "-8.87528, 134.296, -58.2315, 0.88", "-8.36279, 134.678, -60.0279, 0.44", "-8.19231, 134.77, -60.5052, 0.44", "-7.82439, 134.894, -61.3544, 0.44", "-7.51472, 134.959, -61.8967, 0.44", "-6.90145, 135.145, -62.9497, 0.66" ],
    "parent" : "dend_129",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_130",
    "id" : "dend_130",
    "points3d" : [ "-2.09027, 49.8618, 3.35827, 0.15", "-1.07016, 48.7519, 3.63728, 0.15", "-0.695037, 48.2626, 3.74078, 0.15", "0.24037, 47.0425, 3.99885, 0.15", "0.972219, 46.0879, 4.20077, 0.15", "2.01864, 44.723, 4.48947, 0.15", "2.55564, 44.0226, 4.63762, 0.22", "2.96097, 43.2915, 4.73722, 0.73" ],
    "parent" : "dend_129",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_124",
    "id" : "dend_124",
    "points3d" : [ "58.6139, 89.3063, -38.6131, 0.95", "60.7056, 90.6236, -44.4301, 0.95", "61.3223, 90.8964, -45.6724, 0.73", "61.6638, 91.0227, -46.2182, 1.03", "62.5166, 91.3418, -47.3611, 0.59", "62.9253, 91.5017, -47.8589, 0.59", "63.4658, 91.7095, -48.5268, 0.59", "64.6279, 92.1026, -49.5335, 0.88", "65.9268, 92.5416, -50.6794, 0.88", "66.7796, 92.8225, -51.4884, 0.95", "67.963, 93.1987, -52.6936, 1.03", "69.5528, 93.7965, -54.5391, 0.81", "69.9793, 93.9921, -55.1198, 1.1" ],
    "parent" : "dend_122",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_123",
    "id" : "dend_123",
    "points3d" : [ "58.6139, 89.3063, -38.6131, 0.22", "58.9498, 87.2658, -37.05, 0.22", "59.089, 86.8873, -36.7239, 0.22", "59.387, 86.2682, -36.245, 0.22", "59.8933, 85.3403, -35.5412, 0.22", "60.112, 84.9882, -35.2392, 0.22", "60.5842, 84.3133, -34.6355, 0.22", "61.3444, 83.4462, -33.8716, 0.29", "61.962, 82.8078, -33.2507, 0.29", "62.7971, 82.0237, -32.3985, 0.37", "63.7925, 81.1688, -31.4089, 0.07", "64.2459, 80.7454, -30.9392, 0.37" ],
    "parent" : "dend_122",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_113",
    "id" : "dend_113",
    "points3d" : [ "41.7795, -23.0581, -28.9639, 0.37", "42.437, -22.7213, -29.5208, 0.37", "43.2215, -22.3983, -30.3111, 0.37", "44.1999, -22.0901, -31.3961, 1.03", "45.0726, -21.885, -32.3803, 0.15", "45.7118, -21.7845, -33.1234, 0.15", "45.8479, -21.767, -33.2858, 0.88", "46.9012, -21.6809, -34.6208, 0.51", "47.2935, -21.6267, -35.1288, 0.51", "47.6363, -21.5458, -35.62, 0.37", "48.4204, -21.2562, -36.8918, 0.37", "48.9587, -20.9765, -37.8262, 0.37", "49.6278, -20.5476, -39.0008, 0.44", "50.3711, -20.0234, -40.3369, 0.37", "50.781, -19.743, -41.165, 0.37", "50.9901, -19.6162, -41.6182, 0.37", "51.1052, -19.5761, -41.8527, 0.37", "51.2569, -19.5751, -42.1146, 0.37", "52.3684, -19.8125, -43.6483, 0.37", "52.8473, -19.9052, -44.278, 0.37", "53.1775, -19.9365, -44.6955, 1.1", "54.226, -19.8792, -46.1311, 0.51", "54.9466, -19.7298, -47.27, 0.37", "55.3743, -19.5711, -47.9987, 0.88", "56.1737, -19.0676, -49.5949, 0.44", "56.4294, -18.8149, -50.2943, 0.51", "56.7628, -18.2529, -51.7104, 0.51", "57.1148, -17.2768, -53.9678, 0.51", "57.1795, -17.0222, -54.529, 0.88", "57.3302, -16.447, -55.8363, 1.1", "57.583, -15.8655, -57.2626, 0.51", "58.0867, -15.2639, -58.9016, 0.37", "58.56, -14.9865, -59.7568, 0.37", "58.765, -14.9239, -59.991, 0.73", "59.4461, -14.824, -60.6189, 0.37", "60.4822, -14.7326, -61.4325, 0.22", "62.0505, -14.6032, -62.5111, 0.15", "63.1324, -14.5187, -63.2236, 1.25", "65.0479, -14.3367, -64.598, 0.22", "66.1665, -14.1969, -65.4712, 0.22", "66.8605, -14.0639, -66.05, 0.59", "67.6279, -13.8598, -66.7276, 0.66", "68.7182, -13.4803, -67.6788, 0.07", "69.9148, -12.9688, -68.5469, 0.81", "70.5527, -12.6561, -68.8775, 0.81", "71.5301, -12.1018, -69.2853, 0.44", "72.5726, -11.4627, -69.7059, 0.29", "73.2299, -11.047, -70.0441, 0.29", "74.225, -10.4328, -70.6938, 0.66", "74.9942, -10.0461, -71.2825, 0.66", "75.994, -9.68015, -72.1009, 0.07", "77.153, -9.4168, -73.0777, 0.81", "78.9512, -9.19042, -74.6168, 0.07", "80.1802, -9.12358, -75.6614, 0.22", "81.1089, -9.13146, -76.4113, 0.22", "82.2862, -9.15802, -77.2169, 0.22", "83.1445, -9.16258, -77.6527, 0.51", "84.5428, -9.05935, -78.0, 0.81", "84.9864, -8.9781, -78.0184, 0.29", "85.8354, -8.74835, -77.9603, 0.73", "86.8992, -8.35211, -77.7511, 0.07", "87.2072, -8.2093, -77.6494, 0.73", "88.8073, -7.32415, -76.8641, 0.07", "89.5216, -6.86915, -76.4115, 0.07", "89.819, -6.64871, -76.1972, 0.66", "90.9277, -5.6298, -75.2495, 0.15", "91.2012, -5.24817, -74.9109, 0.44", "91.5548, -4.64627, -74.4047, 0.07", "91.6718, -4.3343, -74.1687, 0.07", "91.7617, -3.95873, -73.8906, 0.07", "91.862, -3.30605, -73.4551, 0.51", "91.7151, -1.26614, -72.3761, 0.07" ],
    "parent" : "dend_111",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_112",
    "id" : "dend_112",
    "points3d" : [ "41.7795, -23.0581, -28.9639, 0.66", "42.6835, -24.0376, -31.461, 0.66", "43.3946, -25.0706, -33.5769, 0.37", "43.6319, -25.5676, -34.4087, 0.37", "43.844, -26.3158, -35.548, 0.66", "43.9478, -27.5928, -37.454, 0.37", "43.9054, -27.9389, -37.9606, 0.37", "43.7057, -28.3373, -38.4456, 0.37", "43.2993, -28.9042, -39.1802, 0.37", "42.8264, -29.4744, -40.0587, 0.66", "42.472, -29.9261, -41.1477, 0.81", "42.3067, -30.1714, -42.0286, 0.51", "42.0997, -30.4634, -43.5406, 0.51", "41.9786, -30.646, -44.5834, 0.51", "41.8612, -30.8624, -45.6995, 1.54", "41.5055, -31.8017, -49.6495, 0.59", "41.4178, -32.078, -50.6228, 0.59", "41.3369, -32.3653, -51.517, 0.59", "41.2238, -32.8177, -52.7177, 0.73", "41.2126, -33.3893, -54.0378, 0.66", "41.3325, -33.8418, -54.9991, 0.66", "41.5713, -34.1868, -55.6577, 0.66", "42.1885, -34.6962, -56.7908, 0.66", "43.0376, -35.0877, -57.9905, 0.66", "44.4529, -35.4173, -59.7252, 0.22", "44.9081, -35.4696, -60.192, 0.81", "46.3736, -35.5528, -61.5329, 0.37", "47.3011, -35.5865, -62.3129, 0.37", "48.4422, -35.6312, -63.2009, 0.81", "49.8289, -35.739, -64.1929, 0.07", "51.0216, -35.911, -64.9797, 0.81", "51.8686, -36.113, -65.511, 0.88", "52.4389, -36.3076, -65.867, 0.88", "53.5421, -36.796, -66.5669, 0.44", "55.3829, -37.824, -67.8191, 0.44", "56.0676, -38.2898, -68.352, 0.44", "56.6724, -38.7854, -68.9391, 1.1", "57.6547, -39.7735, -70.0163, 0.37", "57.9734, -40.1675, -70.4252, 1.03", "58.4094, -40.8791, -71.1076, 0.81", "58.7715, -41.6897, -71.8208, 0.51", "59.1165, -42.579, -72.548, 0.88", "59.444, -43.5067, -73.258, 0.88", "59.7868, -44.5323, -73.9874, 0.37", "60.1963, -45.7557, -74.8313, 0.22", "60.3644, -46.2445, -75.1379, 0.22", "60.606, -46.929, -75.5605, 0.22", "60.9081, -47.7735, -76.0811, 1.18", "61.4648, -49.4761, -77.1314, 0.15", "61.5901, -49.944, -77.3749, 0.15", "61.7295, -50.6503, -77.6763, 0.81", "61.9646, -51.8562, -78.1828, 0.15", "62.0345, -52.2935, -78.3494, 0.95", "62.1468, -53.3251, -78.6169, 0.07", "62.129, -54.4936, -78.7678, 0.07", "62.0666, -55.3954, -78.8465, 0.44" ],
    "parent" : "dend_111",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-4.0701, -13.2266, 23.813, 1.4", "-4.04622, -14.1897, 23.6092, 1.4", "-3.99468, -16.2681, 23.1693, 1.4", "-3.97061, -17.2388, 22.9639, 1.54", "-3.94647, -18.2121, 22.7579, 1.54", "-3.90029, -20.0742, 22.3638, 2.28" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-4.0701, -13.2266, 23.813, 0.95", "-3.73697, -13.8605, 25.9249, 0.95", "-3.48899, -14.4852, 27.3584, 0.95", "-3.17225, -15.3189, 28.8749, 0.59", "-3.00622, -15.7067, 29.4907, 0.37", "-2.74154, -16.2045, 30.3093, 0.37", "-2.51954, -16.5229, 30.8835, 0.81", "-1.97706, -17.134, 31.8772, 0.29", "-1.64456, -17.3554, 32.3003, 0.29", "-1.19305, -17.5058, 32.7511, 0.66", "-0.222735, -17.6857, 33.7522, 0.37", "0.396227, -17.7533, 34.4989, 0.29", "0.915009, -17.7557, 35.3383, 0.29", "1.04443, -17.734, 35.6458, 0.29", "1.1712, -17.7074, 36.1596, 0.44", "1.34071, -17.7785, 37.3545, 0.66", "1.47523, -18.1081, 38.6126, 0.37", "1.54821, -18.1948, 38.8946, 0.15", "1.77548, -18.2368, 39.1864, 0.15", "2.23542, -18.2484, 39.5608, 0.15", "3.16658, -18.2536, 40.0875, 0.37", "3.91185, -18.2616, 40.4123, 0.37", "4.76225, -18.2723, 40.7329, 0.37", "5.90988, -18.3104, 41.1575, 0.37", "6.7526, -18.3631, 41.4689, 0.37", "7.99372, -18.4621, 41.9288, 0.37", "8.62622, -18.4972, 42.1805, 0.37" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-20.3158, -13.0886, 26.5345, 0.66", "-19.7879, -12.5228, 27.0805, 0.66", "-19.0538, -11.7499, 27.9633, 1.18", "-18.4004, -11.1045, 28.7683, 0.73", "-17.5695, -10.3316, 29.9024, 1.1", "-16.8855, -9.73979, 30.95, 0.37", "-16.2761, -9.25148, 31.9469, 0.88", "-15.5553, -8.77277, 33.3406, 0.51", "-15.3609, -8.68728, 33.7604, 0.81", "-14.8076, -8.58017, 34.9806, 0.66", "-14.3975, -8.62652, 35.8557, 0.66", "-14.2805, -8.67126, 36.0582, 0.66", "-13.8351, -8.86962, 36.5949, 0.66", "-13.2477, -9.00615, 37.0123, 0.66", "-12.5678, -9.02222, 37.3341, 0.29", "-12.28, -8.97294, 37.4102, 0.29", "-11.6109, -8.7222, 37.5052, 0.29", "-10.9695, -8.3265, 37.5193, 0.37", "-10.5404, -7.8591, 37.4394, 0.29", "-10.2372, -7.11606, 37.2328, 0.29", "-10.1311, -6.46021, 37.029, 0.29", "-10.0979, -5.74763, 36.7973, 0.29", "-10.129, -5.17552, 36.6021, 0.29", "-10.3463, -4.21617, 36.2522, 0.29", "-10.6241, -3.61719, 36.0036, 0.29" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-20.3158, -13.0886, 26.5345, 1.1", "-21.0127, -12.7692, 26.9766, 1.1", "-21.7158, -12.3573, 27.3622, 1.1", "-22.5255, -11.8064, 27.7421, 1.1", "-23.283, -11.2642, 28.0437, 1.1", "-24.404, -10.4782, 28.4277, 1.1", "-25.4519, -9.77958, 28.7929, 0.73", "-26.7966, -9.00615, 29.2639, 0.95", "-27.9164, -8.4868, 29.6943, 0.95", "-28.9963, -8.14282, 30.1368, 0.95", "-29.9278, -8.00155, 30.5398, 0.95", "-30.9188, -8.00339, 30.9865, 0.95", "-32.1505, -8.12795, 31.5972, 1.1", "-33.6193, -8.33848, 32.3702, 0.81", "-35.0884, -8.51065, 33.1752, 0.73", "-35.8634, -8.54404, 33.5908, 0.73", "-36.7793, -8.47351, 34.0167, 0.73", "-37.8414, -8.24013, 34.3816, 0.81", "-38.7734, -7.91879, 34.651, 0.95", "-39.7425, -7.46886, 34.8775, 0.95", "-40.3738, -7.12098, 35.0164, 0.95", "-41.4393, -6.56817, 35.261, 0.81", "-43.46, -5.78674, 35.7024, 0.81" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "18.3777, 14.4071, 19.5983, 0.37", "19.1095, 15.7284, 19.6003, 0.37", "19.8621, 17.1501, 19.6026, 0.37", "20.2603, 17.8988, 19.6092, 0.37", "20.7, 18.6978, 19.6027, 0.73", "21.4817, 20.0963, 19.5609, 0.37", "21.9558, 20.9581, 19.5248, 0.59", "22.4113, 21.8137, 19.457, 0.44", "22.9587, 22.9382, 19.3462, 0.44", "23.4085, 23.9674, 19.2611, 0.44", "23.7015, 24.7674, 19.2052, 0.44", "23.9189, 25.4938, 19.1643, 0.44", "24.2323, 26.5487, 19.0903, 0.66", "24.6078, 27.86, 18.945, 0.66", "24.9591, 29.1483, 18.7722, 0.95", "25.2963, 30.3742, 18.6112, 0.44", "25.574, 31.3146, 18.5074, 0.66", "25.8684, 32.29, 18.4126, 0.44", "26.3161, 33.7635, 18.3162, 0.37", "26.8275, 35.4959, 18.2333, 0.44", "27.5097, 37.7646, 18.16, 0.44", "28.0229, 39.4701, 18.1577, 0.81", "28.4122, 40.8478, 18.2048, 0.59", "28.7053, 41.9908, 18.2952, 0.37", "28.9508, 42.9769, 18.4222, 0.37", "29.2172, 44.0452, 18.6002, 0.37", "29.3745, 44.6995, 18.7212, 0.44", "29.5633, 45.6944, 18.885, 0.44", "29.6283, 46.1382, 18.958, 0.73", "29.7269, 47.6064, 19.1719, 0.44", "29.7177, 49.1515, 19.4084, 1.1", "29.5548, 51.1585, 19.7257, 0.22", "29.3126, 52.8393, 20.0003, 0.88", "29.0533, 54.0839, 20.2027, 0.66", "28.4241, 56.1836, 20.5249, 0.22", "27.9555, 57.2804, 20.6741, 0.22", "27.3188, 58.4026, 20.8165, 0.22", "26.717, 59.2247, 20.937, 0.51", "26.2868, 59.6813, 21.0106, 0.15", "25.3942, 60.4615, 21.1277, 0.59", "24.536, 61.0354, 21.2176, 0.15", "24.0012, 61.3306, 21.2493, 0.88", "23.557, 61.5288, 21.2613, 0.07", "22.757, 61.8029, 21.2613, 0.44" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "18.3777, 14.4071, 19.5983, 0.73", "19.7535, 14.6947, 21.4887, 0.73", "20.7182, 14.9493, 22.8291, 0.59", "21.2066, 15.0592, 23.4729, 0.59", "21.8293, 15.1837, 24.2538, 0.59", "22.7794, 15.3653, 25.3636, 0.73", "23.6499, 15.5545, 26.3347, 0.88", "23.7712, 15.5869, 26.4525, 0.88", "24.487, 15.8289, 27.1749, 0.66", "24.7551, 15.9194, 27.4601, 0.66", "25.1911, 16.0192, 27.9399, 0.66", "25.8368, 16.0601, 28.6826, 0.66", "26.5251, 16.0285, 29.5231, 0.66", "27.4191, 16.0133, 30.5838, 0.44", "28.1903, 16.015, 31.4148, 0.44", "29.078, 16.0053, 32.2905, 0.73", "30.046, 15.9781, 33.119, 0.73", "31.9976, 15.9146, 34.5184, 0.44", "33.584, 15.9022, 35.4739, 0.44", "35.1109, 15.9855, 36.2392, 0.44", "36.1168, 16.0866, 36.6933, 0.44", "37.676, 16.3077, 37.2927, 0.44", "38.6168, 16.4453, 37.5701, 0.44", "39.1758, 16.5211, 37.6789, 0.73", "40.2021, 16.6457, 37.8445, 0.22" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "11.1121, 11.5433, 23.7253, 0.22", "10.0546, 12.1219, 23.4548, 0.22", "9.17531, 12.6278, 23.2535, 0.22", "8.10379, 13.2809, 23.0345, 0.88", "7.17702, 13.8553, 22.8598, 0.44", "6.04947, 14.5717, 22.6623, 0.44", "5.24459, 15.098, 22.5322, 0.81", "4.48594, 15.6446, 22.4681, 0.81", "3.7554, 16.2743, 22.4931, 0.44", "3.26292, 16.8486, 22.6414, 0.22", "2.96471, 17.4083, 22.8947, 0.22", "2.78873, 18.1136, 23.3731, 0.73", "2.6794, 19.0768, 24.1753, 0.44", "2.62889, 20.3658, 25.4619, 0.59", "2.58032, 21.2745, 26.5112, 0.81", "2.50897, 21.6569, 27.0704, 1.1", "2.17259, 22.4024, 28.5745, 0.81", "1.88561, 22.6682, 29.423, 0.81", "1.44463, 22.8189, 30.3011, 0.81", "0.625139, 22.9202, 31.5216, 1.25", "-0.797498, 22.9542, 33.4208, 0.51", "-1.70148, 22.8926, 34.5639, 0.51", "-2.5672, 22.7544, 35.5473, 0.51", "-3.14964, 22.6163, 36.1969, 0.22", "-3.79761, 22.4384, 36.8781, 0.07" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "11.1121, 11.5433, 23.7253, 0.95", "11.0637, 11.171, 24.0918, 0.95", "10.9268, 10.6577, 24.5957, 1.1", "10.6285, 9.89252, 25.3817, 1.1", "10.2839, 9.13996, 26.2302, 0.51", "9.91888, 8.37707, 27.1446, 0.51", "9.59306, 7.69407, 27.9984, 0.51", "9.46271, 7.47758, 28.2744, 0.51", "9.25582, 7.15683, 28.6989, 0.51", "9.12328, 6.87679, 29.1969, 0.51", "9.14624, 6.76202, 29.4771, 0.51", "9.35839, 6.41034, 30.3776, 0.51", "9.45925, 6.27093, 30.7626, 0.51", "9.6265, 5.97866, 31.5571, 0.73", "9.76148, 5.51569, 32.9581, 0.73", "9.68959, 5.40455, 33.5802, 0.73", "9.42678, 5.48544, 34.2615, 0.73", "9.16099, 5.67918, 34.6222, 0.73", "8.73626, 5.98204, 35.0428, 0.73", "7.84602, 6.53562, 35.6869, 0.44", "6.99291, 6.99368, 36.1767, 0.37", "6.44149, 7.2753, 36.4817, 0.37", "5.85087, 7.57073, 36.8239, 0.66", "4.78613, 7.98431, 37.5115, 0.37", "3.92208, 8.09651, 38.1841, 0.37", "3.54957, 8.02017, 38.4998, 0.66", "3.12109, 7.81523, 38.8767, 0.22", "2.64736, 7.47834, 39.2482, 0.81", "1.66822, 6.60219, 39.9557, 0.15", "0.745942, 5.64885, 40.5215, 0.95", "0.370532, 5.25944, 40.7165, 0.95", "-0.0458424, 4.8629, 40.8826, 0.95", "-1.32975, 3.69084, 41.3277, 0.22", "-2.26428, 2.84647, 41.5941, 0.22", "-3.20189, 1.92945, 41.7634, 0.51", "-3.89873, 1.22395, 41.8388, 0.29", "-4.78171, 0.352116, 41.938, 0.22" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-12.0714, -18.4977, -1.09906, 1.47", "-12.16, -20.7755, -1.63733, 1.47", "-12.2565, -23.2562, -2.22352, 1.54", "-12.3225, -24.9503, -2.62385, 1.54", "-12.3818, -26.475, -2.98415, 1.76", "-12.4372, -27.8992, -3.32069, 1.98" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-12.0714, -18.4977, -1.09906, 0.81", "-12.5312, -19.0822, -0.0843636, 0.81", "-13.0385, -19.6922, 0.898249, 0.81", "-13.5191, -20.1854, 1.68527, 0.81", "-14.2182, -20.903, 2.83031, 0.81", "-15.19, -21.9004, 4.42184, 0.95", "-15.7004, -22.4242, 5.25759, 0.81", "-15.9693, -22.7469, 5.68825, 0.81", "-16.4267, -23.3182, 6.3618, 1.1" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_128",
    "id" : "dend_128",
    "points3d" : [ "69.9793, 93.9921, -55.1198, 0.88", "70.6423, 94.4321, -56.2539, 0.88", "72.0472, 95.3657, -58.5722, 0.51", "72.7256, 95.853, -59.7776, 0.81", "73.5605, 96.5379, -61.409, 0.51", "73.9254, 96.8795, -62.1739, 0.44", "74.2273, 97.1798, -62.8504, 0.44", "74.3999, 97.3372, -63.2354, 0.73", "75.1108, 97.9206, -64.8038, 1.1", "75.4264, 98.1228, -65.5539, 1.1", "75.8189, 98.297, -66.5421, 0.73", "76.3491, 98.4296, -67.695, 0.73", "77.0709, 98.5268, -68.9339, 0.44", "77.4217, 98.5403, -69.4254, 0.88", "78.6559, 98.4924, -70.7664, 0.51", "79.8164, 98.3951, -71.7861, 0.73", "80.5676, 98.3173, -72.3761, 0.29", "81.4497, 98.2657, -73.0389, 0.29", "82.2021, 98.2807, -73.6037, 0.29", "82.9244, 98.3069, -74.1402, 0.29", "83.8838, 98.3481, -74.8373, 0.88", "85.2091, 98.3601, -75.8062, 0.44", "86.2129, 98.3799, -76.6314, 0.44", "86.713, 98.4096, -77.0803, 0.73", "87.4985, 98.4855, -77.8533, 0.22", "88.4459, 98.5816, -78.9022, 0.22", "89.0886, 98.6237, -79.6262, 1.03", "90.7209, 98.647, -81.3491, 0.22", "92.1857, 98.5701, -82.837, 1.18", "93.4749, 98.447, -84.1183, 0.59", "94.5573, 98.3023, -85.2397, 0.88", "95.3113, 98.1478, -86.0099, 0.29", "95.853, 97.9919, -86.5256, 1.03", "96.4213, 97.7689, -87.0265, 0.51", "96.8679, 97.574, -87.3656, 0.88", "98.9653, 96.7314, -88.8486, 0.22", "99.5483, 96.5408, -89.3108, 0.22", "100.596, 96.2988, -90.2896, 0.95", "102.202, 96.1611, -92.0066, 0.95", "102.963, 96.2105, -92.8661, 0.51", "103.682, 96.3288, -93.7694, 0.51", "104.706, 96.5873, -95.1198, 0.51", "105.046, 96.6522, -95.6216, 0.51", "105.976, 96.7538, -97.1918, 0.29", "106.328, 96.7325, -97.8338, 0.66", "107.143, 96.4861, -99.4695, 0.37", "107.367, 96.3487, -99.9179, 1.03", "108.147, 95.6796, -101.504, 0.44", "108.772, 95.0932, -102.769, 0.66", "109.563, 94.3227, -104.327, 0.07", "109.92, 94.0061, -104.969, 0.51", "110.945, 93.2283, -106.544, 0.51", "112.043, 92.5102, -108.033, 0.51", "113.467, 91.6755, -109.694, 0.88", "113.997, 91.3984, -110.237, 0.44", "114.772, 91.0461, -110.94, 0.73", "115.57, 90.7256, -111.617, 0.29", "116.014, 90.5543, -111.905, 0.29", "116.794, 90.2571, -112.194, 0.66" ],
    "parent" : "dend_124",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_125",
    "id" : "dend_125",
    "points3d" : [ "69.9793, 93.9921, -55.1198, 0.44", "72.5446, 94.8063, -55.0182, 0.44", "73.7487, 95.2593, -55.1043, 0.44", "75.6186, 96.0455, -55.3552, 0.44", "76.9112, 96.6415, -55.569, 0.95", "78.1374, 97.2425, -55.7845, 0.37", "79.0498, 97.7236, -55.9417, 0.37", "79.9744, 98.2667, -56.1038, 0.37", "80.6132, 98.6739, -56.3385, 0.37", "81.2893, 99.1407, -56.6855, 0.37", "82.1368, 99.7383, -57.135, 0.66", "83.2988, 100.55, -57.6768, 0.29", "84.3285, 101.241, -58.1204, 0.73", "85.6193, 102.119, -58.6895, 0.73", "86.0519, 102.45, -58.9079, 0.73", "86.9127, 103.202, -59.3916, 0.37", "87.3527, 103.594, -59.6474, 0.44", "87.6557, 103.855, -59.8088, 0.44", "88.1485, 104.259, -60.0552, 0.44", "89.0148, 104.881, -60.4982, 0.44", "89.9956, 105.459, -60.9949, 0.73", "91.3304, 106.121, -61.6485, 0.44", "91.9297, 106.364, -61.9182, 1.03", "93.7777, 106.974, -62.6703, 0.44", "95.8463, 107.506, -63.4493, 0.51", "97.2375, 107.78, -63.9214, 0.44", "97.9316, 107.884, -64.1352, 0.44", "99.0102, 108.003, -64.3764, 0.44", "99.5814, 108.037, -64.4739, 0.44", "100.314, 108.042, -64.5365, 0.44", "101.225, 108.035, -64.5797, 0.73", "102.077, 108.031, -64.6445, 0.44", "103.845, 108.025, -64.8708, 0.81", "105.085, 107.996, -65.1097, 0.51", "105.437, 107.979, -65.201, 0.51", "105.995, 107.965, -65.3577, 0.51", "106.827, 107.984, -65.5855, 0.51", "107.642, 108.069, -65.799, 0.51", "108.254, 108.16, -65.9399, 0.51", "109.494, 108.311, -66.1446, 0.51", "110.964, 108.444, -66.3813, 0.22", "112.335, 108.527, -66.6342, 0.22", "113.897, 108.597, -66.9339, 0.51", "115.095, 108.662, -67.1619, 0.73", "115.962, 108.703, -67.3463, 0.51", "117.279, 108.712, -67.684, 0.51", "118.72, 108.606, -68.1426, 0.73", "119.397, 108.482, -68.41, 1.03" ],
    "parent" : "dend_124",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "-3.90029, -20.0742, 22.3638, 1.32", "-3.48291, -21.2515, 21.7488, 1.32", "-3.12236, -22.2684, 21.2175, 0.73", "-2.68638, -23.4981, 20.5751, 0.88", "-2.02728, -25.357, 19.6039, 1.1" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-3.90029, -20.0742, 22.3638, 0.88", "-2.88307, -20.6154, 23.5142, 0.88", "-1.852, -21.0376, 24.5235, 1.03", "-1.10964, -21.2871, 25.1478, 1.18", "-0.278618, -21.5373, 25.7481, 1.18", "0.349473, -21.7265, 26.2018, 1.18", "0.803427, -21.8632, 26.5297, 1.18", "1.4288, -21.9374, 26.9249, 1.18", "2.04159, -21.9361, 27.183, 1.32", "2.71426, -21.9405, 27.3562, 1.47" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "8.62622, -18.4972, 42.1805, 0.22", "9.04629, -19.3127, 42.2287, 0.22", "9.35043, -19.8872, 42.2401, 0.22", "10.0211, -20.9896, 42.2385, 0.22", "10.3921, -21.5689, 42.2313, 0.22", "10.6961, -22.0042, 42.223, 0.22", "11.0155, -22.4258, 42.2134, 0.22", "11.6639, -23.1948, 42.2044, 0.22", "12.2873, -23.8926, 42.205, 0.22", "12.6412, -24.2449, 42.1816, 0.22", "13.1634, -24.6935, 42.1316, 0.22", "13.6903, -25.0899, 42.0873, 0.22", "14.5351, -25.6948, 42.0179, 0.22", "15.14, -26.1249, 41.9709, 0.22", "16.101, -26.8084, 41.8783, 0.22", "16.5268, -27.0955, 41.8294, 0.22", "17.417, -27.6963, 41.6959, 0.22" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "8.62622, -18.4972, 42.1805, 0.22", "9.17545, -18.8606, 42.1749, 0.22", "9.70667, -19.1944, 42.222, 0.22", "10.0218, -19.3577, 42.259, 0.22", "10.8061, -19.6794, 42.3586, 0.22", "11.8047, -20.0086, 42.4874, 0.66", "12.8464, -20.3365, 42.6201, 0.22", "13.6179, -20.6031, 42.7332, 0.22", "14.3105, -20.7969, 42.8224, 0.22", "14.8815, -20.9205, 42.8959, 0.22", "15.3255, -20.9774, 42.9519, 0.22", "16.0039, -21.0167, 43.0328, 0.44", "16.8624, -21.0284, 43.1089, 0.15", "18.5721, -21.1806, 43.1453, 0.15" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-43.46, -5.78674, 35.7024, 0.51", "-43.889, -4.81968, 36.3975, 0.51", "-44.2485, -4.00953, 36.9798, 0.73", "-44.4837, -3.4794, 37.3609, 1.1" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-43.46, -5.78674, 35.7024, 0.95", "-44.4149, -6.31545, 35.145, 0.95", "-44.802, -6.47721, 34.9371, 0.95", "-45.3659, -6.61411, 34.6645, 0.95", "-46.9513, -6.72768, 33.9804, 0.66", "-47.5701, -6.68146, 33.7474, 0.66", "-48.122, -6.60748, 33.5757, 0.66", "-48.7359, -6.47866, 33.4598, 0.66", "-49.6609, -6.29935, 33.3228, 0.66", "-50.3113, -6.19629, 33.22, 0.73", "-50.9203, -6.13946, 33.0859, 0.73", "-52.0727, -6.12394, 32.7796, 0.88", "-53.0115, -6.1667, 32.4747, 0.88", "-54.4899, -6.29107, 31.9284, 0.66", "-55.7727, -6.43032, 31.3958, 0.81", "-57.4557, -6.62317, 30.5926, 0.81", "-58.4158, -6.7219, 30.0551, 0.59", "-59.4267, -6.78541, 29.3251, 0.59", "-59.7351, -6.79596, 29.0386, 0.59", "-60.1917, -6.84009, 28.5128, 0.59", "-60.8908, -7.11295, 27.6766, 0.66", "-61.2957, -7.38629, 27.2194, 0.66", "-62.0786, -7.91809, 26.4981, 0.66", "-62.7155, -8.21834, 26.0639, 0.66", "-64.0687, -8.68539, 25.2616, 0.81", "-65.3638, -9.06603, 24.5392, 0.73", "-66.3394, -9.32138, 24.0552, 0.73", "-66.9958, -9.46545, 23.7621, 0.88", "-68.9982, -9.77223, 22.9534, 0.29", "-70.5211, -9.8993, 22.3641, 0.88", "-71.4566, -9.91457, 22.0335, 0.88", "-72.6559, -9.89412, 21.6814, 0.81", "-73.5008, -9.88754, 21.4629, 0.81", "-74.4988, -9.94551, 21.2291, 0.81", "-75.3667, -10.0943, 21.0497, 0.81", "-76.1479, -10.3003, 20.9407, 0.81", "-76.8541, -10.5505, 20.8975, 0.59", "-78.0703, -11.0757, 20.8944, 0.88", "-79.4308, -11.7562, 20.9874, 0.44", "-80.6733, -12.424, 21.1573, 0.44", "-82.061, -13.2024, 21.4237, 0.44", "-83.3619, -13.9322, 21.768, 0.81", "-84.5464, -14.5985, 22.14, 0.59", "-85.513, -15.1603, 22.4874, 0.59", "-86.4219, -15.7396, 22.8355, 0.59", "-86.9042, -16.108, 23.0272, 0.73", "-88.0922, -17.2571, 23.4234, 0.29", "-88.7176, -17.9991, 23.6219, 0.59", "-89.2232, -18.6993, 23.8155, 0.66", "-89.8557, -19.59, 24.0997, 0.66", "-90.5895, -20.5642, 24.4947, 0.51", "-91.2587, -21.2732, 24.8904, 0.51", "-91.9432, -21.7974, 25.3057, 0.51", "-92.7806, -22.2765, 25.8221, 0.51", "-93.7061, -22.7065, 26.3742, 0.51", "-94.3474, -22.989, 26.7344, 0.51", "-95.2089, -23.3878, 27.1954, 1.25", "-96.3296, -24.0087, 27.7416, 0.81", "-97.1143, -24.5183, 28.0482, 0.37", "-97.4677, -24.7831, 28.1668, 0.37", "-98.4868, -25.6354, 28.4735, 0.73", "-99.1906, -26.2306, 28.6633, 0.37", "-100.245, -27.0896, 28.9085, 0.51", "-101.242, -27.8829, 29.1177, 0.51", "-102.07, -28.4847, 29.2759, 0.22", "-102.909, -29.0275, 29.4324, 0.73", "-103.689, -29.4455, 29.5681, 0.29", "-104.494, -29.8466, 29.678, 0.44" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-12.4372, -27.8992, -3.32069, 0.51", "-11.8513, -29.1556, -4.1779, 0.51", "-11.4527, -29.912, -4.71086, 0.51", "-11.0035, -30.7019, -5.29794, 0.59", "-10.2573, -31.92, -6.21888, 1.1", "-9.57794, -32.9111, -6.98534, 0.59", "-9.13391, -33.5307, -7.46077, 0.59", "-8.8437, -33.9058, -7.77617, 0.59", "-8.2853, -34.5711, -8.40948, 0.95", "-8.02902, -34.8568, -8.6881, 1.18", "-7.34238, -35.5907, -9.42789, 1.18", "-6.3761, -36.686, -10.5358, 0.88", "-5.64142, -37.554, -11.3885, 0.88", "-4.53053, -38.9133, -12.7581, 0.66", "-3.91034, -39.6887, -13.5481, 0.95" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-12.4372, -27.8992, -3.32069, 1.32", "-13.3255, -29.9014, -3.46787, 1.32", "-13.753, -30.8649, -3.5387, 1.54", "-14.0339, -31.4979, -3.58524, 1.54" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-16.4267, -23.3182, 6.3618, 0.66", "-17.248, -22.6162, 6.87358, 0.66", "-18.0162, -22.051, 7.39657, 0.66", "-19.0253, -21.4687, 8.13279, 0.66", "-19.9335, -21.0779, 8.86402, 0.66", "-20.7974, -20.8097, 9.62603, 0.88", "-21.5736, -20.6284, 10.3236, 0.95", "-22.3159, -20.5783, 10.9772, 0.73", "-23.2487, -20.5406, 11.7625, 0.59", "-24.1131, -20.477, 12.4596, 0.59", "-24.6606, -20.3619, 12.8351, 0.59", "-25.3478, -20.1152, 13.2379, 0.51", "-26.1903, -19.6843, 13.6985, 0.51", "-27.6076, -18.7359, 14.5432, 0.37", "-28.2365, -18.2557, 14.9559, 0.37", "-29.1388, -17.5725, 15.5906, 0.37", "-30.2038, -16.8387, 16.3971, 1.1", "-30.8823, -16.4577, 16.9699, 1.4", "-32.2684, -15.9242, 18.1838, 0.73", "-32.9451, -15.7946, 18.7505, 0.59", "-33.8767, -15.7129, 19.4541, 0.44", "-34.7864, -15.6721, 20.0931, 0.44", "-35.8249, -15.6392, 20.7577, 0.44", "-36.7662, -15.6305, 21.3192, 0.44", "-37.7179, -15.6428, 21.8309, 0.29", "-38.2735, -15.6248, 22.1288, 0.29", "-39.3335, -15.5406, 22.7968, 0.29", "-40.198, -15.488, 23.4913, 0.59", "-40.6392, -15.5047, 23.9417, 0.59", "-40.9695, -15.5604, 24.327, 0.59", "-41.3812, -15.671, 24.8072, 0.59", "-42.2587, -15.9369, 25.7118, 0.59", "-43.1721, -16.1294, 26.3454, 0.59", "-44.0325, -16.2187, 26.8184, 0.59", "-44.5493, -16.2428, 27.0874, 0.59", "-45.2524, -16.238, 27.4528, 0.59", "-46.1104, -16.1735, 27.8794, 0.59", "-48.3028, -15.8323, 28.8662, 0.37", "-49.7484, -15.5026, 29.5153, 0.37", "-50.8333, -15.2005, 30.0143, 0.59", "-51.906, -14.905, 30.5746, 0.59", "-52.3009, -14.8034, 30.8161, 0.59", "-52.9089, -14.6521, 31.3075, 0.59", "-53.2998, -14.5674, 31.889, 0.59", "-53.4389, -14.5899, 32.1848, 0.59", "-53.6997, -14.8856, 33.0187, 0.59", "-53.8788, -15.1752, 33.5343, 0.59", "-54.2113, -15.6976, 34.3501, 0.59", "-54.5965, -16.307, 35.2388, 0.66", "-54.9313, -16.8508, 35.9637, 0.66", "-55.2801, -17.4278, 36.687, 0.66", "-55.7093, -18.0973, 37.1456, 0.37", "-55.4921, -17.8078, 37.0727, 0.37", "-55.1761, -17.3713, 37.0263, 0.37", "-54.6299, -16.5668, 36.9837, 0.73", "-54.0567, -15.7226, 36.9384, 0.37", "-53.616, -15.0666, 36.9004, 0.37", "-52.7666, -13.9542, 36.8826, 0.22" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-16.4267, -23.3182, 6.3618, 0.66", "-17.6635, -24.1566, 7.22521, 0.66", "-18.7185, -25.0113, 7.95995, 0.66", "-19.1666, -25.457, 8.3118, 0.66", "-19.517, -25.9136, 8.66717, 0.66", "-19.9583, -26.8033, 9.36774, 0.66", "-20.0486, -27.1731, 9.66135, 0.66", "-20.0233, -27.5906, 9.93974, 0.66", "-19.9007, -28.2412, 10.4851, 0.66", "-19.7073, -29.0087, 11.2427, 0.66", "-19.4604, -29.8392, 12.1733, 0.66", "-19.1743, -30.8111, 13.3889, 0.66", "-18.9697, -31.7076, 14.5746, 1.03", "-18.7449, -33.5293, 17.0941, 1.47", "-18.7513, -33.9852, 17.7348, 1.47", "-18.9558, -35.2248, 19.4803, 0.81", "-19.1678, -35.925, 20.4676, 0.81", "-19.3909, -36.4562, 21.2001, 0.95", "-19.6392, -36.9135, 21.829, 1.18", "-20.0478, -37.5052, 22.3928, 0.95", "-20.3734, -37.8807, 22.7076, 0.95", "-20.7223, -38.1895, 22.8852, 0.95", "-21.3425, -38.897, 23.1227, 1.03" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_127",
    "id" : "dend_127",
    "points3d" : [ "119.397, 108.482, -68.41, 0.81", "121.033, 107.774, -70.3688, 0.81", "121.812, 107.36, -71.2444, 0.51", "122.374, 107.017, -71.8211, 0.37", "123.041, 106.61, -72.5045, 0.29", "123.59, 106.275, -73.0669, 0.29", "124.167, 105.924, -73.6578, 0.44", "124.563, 105.653, -73.919, 0.44", "125.484, 104.896, -74.4599, 0.51" ],
    "parent" : "dend_125",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_126",
    "id" : "dend_126",
    "points3d" : [ "119.397, 108.482, -68.41, 0.44", "120.267, 109.196, -69.0144, 0.44", "120.87, 109.732, -69.421, 0.73", "121.919, 110.664, -70.1282, 0.29", "122.706, 111.364, -70.6584, 0.22", "123.762, 112.302, -71.37, 0.15", "124.024, 112.535, -71.5466, 0.15", "124.579, 113.006, -71.9809, 0.44" ],
    "parent" : "dend_125",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "-2.02728, -25.357, 19.6039, 1.32", "-1.22649, -26.7301, 18.9377, 1.32", "-0.392236, -28.1605, 18.2437, 0.88", "0.149789, -29.0899, 17.7928, 1.1", "0.870213, -30.3251, 17.1935, 1.4" ],
    "parent" : "dend_82",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "-2.02728, -25.357, 19.6039, 0.66", "-1.04379, -25.4105, 18.0789, 0.66", "-0.144867, -25.4593, 16.6851, 0.73", "0.72076, -25.5064, 15.3429, 0.73", "1.47631, -25.5474, 14.1714, 0.95" ],
    "parent" : "dend_82",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "2.71426, -21.9405, 27.3562, 0.44", "3.86072, -22.1759, 26.8792, 0.44", "5.30496, -22.472, 26.3075, 0.81", "6.6585, -22.7461, 25.7971, 0.59", "8.33264, -23.1024, 25.1994, 0.44", "9.69294, -23.416, 24.7267, 0.44", "10.365, -23.5891, 24.4993, 0.44", "11.0394, -23.8052, 24.3025, 0.44", "11.4441, -23.9554, 24.2031, 0.44", "12.2564, -24.2815, 24.0395, 0.44", "13.0171, -24.5766, 23.9201, 0.44", "13.5747, -24.7861, 23.8831, 0.44", "14.2109, -25.0281, 23.9068, 0.66", "15.0252, -25.355, 24.0271, 0.44", "15.6783, -25.6631, 24.1429, 0.44", "16.4066, -26.0378, 24.3248, 0.44", "17.5873, -26.6821, 24.6579, 0.88", "18.2497, -27.05, 24.8522, 0.88", "19.0823, -27.5212, 25.1053, 0.88", "20.4273, -28.3057, 25.5154, 0.66", "21.2174, -28.7715, 25.7489, 0.66", "22.2174, -29.3222, 26.0125, 0.66", "22.7786, -29.5844, 26.1096, 0.66", "23.3884, -29.7599, 26.2253, 0.66", "23.7925, -29.7631, 26.3071, 0.66", "24.136, -29.6587, 26.4082, 0.73", "24.3981, -29.5478, 26.4725, 0.73", "24.6722, -29.479, 26.5461, 0.73", "25.139, -29.6291, 26.6364, 0.73", "25.7698, -29.9147, 26.7483, 0.51", "26.244, -30.1372, 26.83, 0.51", "26.859, -30.4313, 26.9588, 0.51", "28.1073, -31.0578, 27.1936, 0.66", "29.4739, -31.7786, 27.4466, 0.59", "30.456, -32.3212, 27.624, 0.59", "31.4899, -32.901, 27.8173, 0.73", "32.4407, -33.4018, 27.9951, 0.73", "33.8953, -34.0598, 28.2601, 0.95" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "2.71426, -21.9405, 27.3562, 0.73", "4.20759, -22.8261, 28.3584, 0.73", "4.75007, -23.0823, 28.816, 0.73", "5.4559, -23.4138, 29.4839, 0.66", "5.93167, -23.6614, 29.9831, 0.59", "6.80507, -24.1951, 30.9877, 0.73", "7.2899, -24.5938, 31.6014, 0.95", "7.9557, -25.254, 32.4478, 1.1", "8.16528, -25.488, 32.7385, 1.1", "8.47431, -25.855, 33.1641, 1.1", "8.73023, -26.2023, 33.5284, 1.1", "9.38865, -27.2909, 34.3201, 0.88", "9.88585, -28.1177, 34.7928, 1.1", "10.4591, -28.9312, 35.1757, 0.59", "10.8509, -29.3709, 35.4024, 0.88" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-44.4837, -3.4794, 37.3609, 0.22", "-43.2915, -3.71865, 37.4857, 0.22", "-42.1763, -4.06135, 37.5385, 0.22", "-41.3498, -4.42603, 37.5503, 0.22", "-40.493, -4.9526, 37.558, 0.22", "-39.8436, -5.35169, 37.5638, 0.22", "-39.1766, -5.76165, 37.5698, 0.22", "-38.5246, -6.32101, 37.5635, 0.22", "-37.9936, -6.93214, 37.5128, 0.22", "-37.4734, -7.70859, 37.4392, 0.51" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-44.4837, -3.4794, 37.3609, 0.95", "-45.1748, -3.65913, 37.3304, 0.95", "-46.1434, -3.91103, 37.2876, 0.59", "-46.7994, -4.08163, 37.2587, 0.22", "-47.1825, -4.18127, 37.2418, 0.73" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-104.494, -29.8466, 29.678, 0.95", "-104.933, -28.9369, 29.686, 0.95", "-105.88, -27.4218, 29.6841, 0.15", "-106.339, -26.7442, 29.6796, 0.15", "-106.794, -26.0626, 29.6594, 0.15", "-107.202, -25.4264, 29.6325, 0.29", "-107.637, -24.7179, 29.5973, 0.15", "-107.939, -24.319, 29.5659, 0.15", "-108.326, -23.983, 29.4973, 0.07", "-108.761, -23.6581, 29.4349, 0.15", "-109.038, -23.4231, 29.4013, 0.15", "-109.15, -23.0642, 29.3338, 0.51" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-104.494, -29.8466, 29.678, 0.73", "-104.644, -30.5838, 29.4951, 0.73", "-104.94, -31.3803, 29.3042, 0.81", "-105.237, -31.9886, 29.1998, 0.37", "-105.858, -33.0163, 29.1023, 0.51", "-106.288, -33.563, 29.0759, 0.29", "-106.785, -34.1096, 29.0409, 0.29", "-107.319, -34.6115, 29.0166, 0.29", "-107.827, -35.0416, 29.0055, 0.29", "-108.856, -35.8857, 29.0089, 1.03", "-109.951, -36.804, 29.0864, 0.37", "-110.757, -37.5094, 29.2001, 0.37", "-111.151, -37.8589, 29.2695, 0.37", "-111.916, -38.5009, 29.4187, 0.37", "-112.708, -39.0979, 29.5689, 0.37", "-113.555, -39.6755, 29.7553, 0.37", "-114.462, -40.2971, 30.0003, 0.37", "-115.13, -40.7516, 30.1982, 1.03", "-115.683, -41.077, 30.3712, 1.03", "-117.077, -41.8027, 30.8772, 0.37", "-117.554, -42.0298, 31.0536, 0.37", "-118.263, -42.3591, 31.3169, 0.37", "-118.927, -42.6693, 31.6236, 1.1", "-120.513, -43.3717, 32.4608, 0.22", "-121.475, -43.7707, 33.0473, 0.22", "-122.28, -44.0397, 33.6148, 0.22", "-122.915, -44.2176, 34.0644, 0.22", "-123.959, -44.4278, 34.7953, 1.03", "-124.325, -44.4823, 35.0638, 1.03", "-124.977, -44.6265, 35.5562, 0.73", "-125.539, -44.6807, 35.9824, 0.73" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-3.91034, -39.6887, -13.5481, 0.44", "-3.99154, -40.5922, -14.5584, 0.44", "-4.04333, -41.4854, -15.5549, 0.44", "-4.05545, -42.5723, -16.6978, 0.44", "-4.02863, -43.3482, -17.4776, 0.44", "-3.96235, -44.2936, -18.3735, 0.44", "-3.87977, -45.4574, -19.4291, 0.73", "-3.86713, -46.2802, -20.1144, 0.73", "-3.84044, -46.9271, -20.5996, 0.88", "-3.7172, -47.7832, -21.2033, 0.59", "-3.59061, -48.3277, -21.5659, 1.1", "-3.0551, -50.1147, -22.6786, 0.66", "-2.80021, -50.9206, -23.1774, 0.95", "-2.56136, -51.7362, -23.6913, 0.95", "-2.27322, -52.8115, -24.4153, 0.37", "-2.11373, -53.3894, -24.7983, 0.37", "-1.97824, -53.8037, -25.1172, 0.73", "-1.49328, -55.0324, -26.1966, 0.44", "-1.3427, -55.4028, -26.5484, 0.44", "-1.17914, -55.8038, -26.9572, 0.44", "-0.841694, -56.6878, -27.9826, 0.95", "-0.328033, -58.1938, -29.8581, 0.51", "-0.198068, -58.6427, -30.4191, 0.51", "-0.0803367, -59.1141, -30.9768, 0.88", "0.0724862, -59.9473, -31.8957, 0.88", "0.204761, -61.2478, -33.1782, 0.73", "0.204192, -61.8644, -33.7001, 0.59", "0.219079, -62.7267, -34.2882, 0.44", "0.298617, -63.3299, -34.7187, 0.44", "0.464504, -63.99, -35.2051, 1.03", "0.617157, -64.4041, -35.4921, 1.32", "1.3932, -65.919, -36.5696, 0.44", "2.07363, -67.0455, -37.4661, 0.66", "2.7509, -67.9984, -38.3374, 0.66", "3.04519, -68.4058, -38.7299, 0.66", "3.33895, -68.8475, -39.158, 0.88", "3.67386, -69.5053, -39.7256, 0.88", "3.86348, -70.0848, -40.1442, 0.88", "4.08175, -71.3194, -40.9459, 0.66", "4.17598, -72.2247, -41.5157, 0.73", "4.26629, -73.2214, -42.1406, 0.73", "4.40032, -74.4142, -42.8946, 0.95", "4.56366, -75.7081, -43.6969, 0.15", "4.69282, -76.7794, -44.342, 0.37", "4.82225, -77.9483, -45.0313, 0.95", "4.93184, -78.6845, -45.4591, 0.95", "5.21207, -80.0385, -46.2378, 0.22", "5.371, -80.629, -46.5945, 0.22", "5.69513, -81.6898, -47.2081, 1.47", "6.16908, -83.2045, -48.0604, 0.59", "6.60636, -84.704, -48.8773, 0.37", "6.97307, -86.2209, -49.7096, 0.44", "7.15905, -87.3378, -50.2841, 0.44", "7.22459, -88.3009, -50.7614, 0.44", "7.16994, -88.8967, -51.0282, 0.44", "6.89993, -89.7725, -51.3514, 0.44", "6.39726, -90.8088, -51.6879, 1.03", "5.71387, -92.0007, -52.0072, 1.03", "4.94822, -93.2656, -52.2965, 0.29", "3.93867, -94.9373, -52.6909, 0.37", "3.32137, -96.0368, -52.9405, 0.37", "2.62165, -97.453, -53.2539, 1.03", "2.12494, -98.7119, -53.5311, 0.37", "1.87011, -99.5964, -53.7546, 1.25", "1.61372, -101.034, -54.1681, 0.44", "1.56625, -101.768, -54.4055, 0.44", "1.6127, -102.78, -54.7894, 0.44", "1.75403, -103.915, -55.2866, 0.44", "1.92098, -104.838, -55.7391, 0.59", "2.15967, -106.026, -56.3359, 1.18", "2.35972, -106.962, -56.8141, 1.18", "2.72178, -108.599, -57.6483, 0.29", "2.94819, -109.547, -58.164, 0.29", "3.18087, -110.357, -58.6473, 0.29", "3.48558, -111.049, -59.1324, 0.88", "4.14359, -112.023, -60.0919, 0.88", "4.62046, -112.539, -60.8032, 0.29", "5.26986, -113.092, -61.7977, 0.29", "5.83291, -113.509, -62.7404, 0.29", "6.48985, -113.954, -64.1212, 1.32", "7.2553, -114.399, -66.2164, 0.51", "7.60341, -114.56, -67.4368, 0.51", "7.80026, -114.638, -68.2902, 0.51", "7.95112, -114.702, -69.08, 0.51", "8.20003, -114.848, -70.852, 0.51", "8.28909, -114.983, -72.3793, 0.51", "8.26561, -115.053, -73.0965, 0.51", "8.16643, -115.168, -73.999, 0.51", "8.03667, -115.383, -74.9902, 0.51", "7.98928, -115.513, -75.416, 0.51", "7.9236, -115.961, -76.3512, 0.51", "7.88349, -116.756, -77.7589, 0.51", "7.88176, -117.302, -78.6815, 0.51", "7.92091, -118.019, -79.8325, 0.81", "8.0229, -118.802, -81.0222, 0.95", "8.39056, -120.453, -83.4119, 0.29", "8.74662, -121.573, -84.9279, 1.03", "9.22957, -122.795, -86.3995, 1.4", "9.70997, -123.935, -87.6222, 0.66", "9.92044, -124.441, -88.1253, 0.95", "10.1758, -125.072, -88.6701, 0.07", "10.3222, -125.428, -88.9441, 0.44", "10.7162, -126.391, -89.552, 0.07", "10.844, -126.669, -89.6946, 0.66", "11.6204, -128.286, -90.4828, 0.07", "11.8743, -128.844, -90.8285, 0.44" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-3.91034, -39.6887, -13.5481, 0.37", "-3.12441, -40.4096, -13.5465, 0.37", "-2.50787, -41.08, -13.562, 0.59", "-1.94962, -41.7474, -13.6115, 0.59", "-1.34661, -42.4744, -13.6239, 0.59", "-1.01104, -42.8863, -13.6184, 0.59", "-0.383619, -43.6707, -13.5968, 0.81", "0.205629, -44.444, -13.5542, 0.81", "0.855711, -45.3558, -13.477, 0.59", "1.64523, -46.5348, -13.3425, 0.73", "2.38023, -47.6859, -13.1612, 0.73", "2.87886, -48.4852, -13.0128, 0.73", "3.70842, -49.836, -12.6997, 0.51", "4.33462, -50.854, -12.4397, 0.37", "4.72905, -51.4921, -12.2691, 0.73", "5.48179, -52.7474, -12.0008, 0.37", "6.10811, -53.8433, -11.7996, 0.81", "6.60931, -54.7737, -11.6953, 0.29", "7.06616, -55.6652, -11.672, 0.66", "7.46025, -56.4751, -11.7543, 0.66", "8.01798, -57.6712, -11.9532, 0.44", "8.49507, -58.7378, -12.1969, 0.44", "8.95153, -59.7816, -12.4638, 0.44", "9.4082, -60.8009, -12.6944, 0.44", "10.0481, -62.149, -12.9667, 0.81", "10.6698, -63.3407, -13.1242, 0.81", "10.9965, -63.8943, -13.1379, 0.88", "11.2792, -64.3495, -13.0967, 1.1", "12.1737, -65.9627, -12.7193, 0.44", "12.6509, -67.0013, -12.3649, 0.37", "12.9979, -67.8886, -11.9959, 0.37", "13.2756, -68.7109, -11.64, 0.37", "13.5367, -69.6417, -11.2345, 0.37", "13.8359, -71.082, -10.6244, 1.1", "13.9855, -72.1701, -10.1888, 0.37", "14.0802, -72.9543, -9.87559, 0.73", "14.2167, -73.8886, -9.55668, 0.44", "14.3661, -74.6016, -9.38262, 0.44", "14.5451, -75.1505, -9.31842, 0.44", "14.7579, -75.5723, -9.31688, 0.44", "15.1643, -76.26, -9.36195, 0.44", "15.357, -76.6302, -9.39224, 0.44", "15.9719, -78.1866, -9.62202, 0.81", "16.1816, -78.8637, -9.70977, 1.03", "16.3852, -79.6582, -9.7971, 1.03", "16.7067, -81.1514, -9.93138, 0.59", "16.9696, -82.5963, -10.0111, 0.37", "17.2374, -84.2539, -10.0347, 0.37", "17.4247, -85.6563, -9.99603, 0.37", "17.5617, -86.7399, -9.97124, 0.37", "17.7673, -87.99, -9.95188, 0.37", "17.9819, -88.9424, -9.93251, 0.37", "18.3938, -90.2598, -9.8824, 0.66", "18.8788, -91.5196, -9.77771, 0.66", "19.1991, -92.2738, -9.70998, 0.66", "19.8133, -93.679, -9.59487, 0.44", "20.0942, -94.2963, -9.57489, 0.95", "20.6378, -95.4547, -9.60215, 0.95", "21.1862, -96.6051, -9.6762, 0.22", "21.4544, -97.187, -9.75845, 0.22", "21.7496, -97.9274, -9.90969, 0.81", "22.0957, -99.0054, -10.1842, 0.37", "22.2071, -99.4261, -10.3039, 0.66", "22.2968, -99.9181, -10.4524, 0.88", "22.5229, -101.341, -10.9276, 0.51", "22.7111, -102.532, -11.2855, 0.29", "22.8064, -103.115, -11.4169, 0.29", "22.8837, -103.643, -11.4935, 0.29", "23.0076, -104.491, -11.6161, 0.88" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-14.0339, -31.4979, -3.58524, 0.44", "-13.2185, -32.0977, -3.30388, 0.44", "-12.171, -32.9013, -2.96633, 0.44", "-11.7029, -33.2869, -2.81193, 0.66", "-10.743, -34.14, -2.46529, 0.51", "-10.1328, -34.6927, -2.2144, 0.51", "-9.90162, -34.893, -2.11609, 0.51", "-9.49102, -35.1924, -1.9298, 0.51", "-9.08285, -35.3798, -1.7016, 0.51", "-8.45043, -35.5336, -1.30533, 0.59", "-7.86315, -35.5874, -0.932309, 0.59", "-7.27806, -35.6079, -0.569302, 0.88", "-5.87118, -35.6728, 0.299257, 0.59", "-4.42773, -35.7682, 1.17713, 0.59", "-3.77497, -35.842, 1.54877, 0.59", "-3.14356, -35.9941, 1.90586, 0.59", "-2.77882, -36.1768, 2.13321, 0.59", "-2.11521, -36.7591, 2.61517, 0.81", "-1.75189, -37.2816, 2.91833, 0.81", "-1.44178, -37.9276, 3.29389, 1.1", "-0.972953, -39.062, 4.01105, 0.59", "-0.588017, -40.0476, 4.74647, 0.95", "-0.407962, -40.4446, 5.0895, 0.95", "-0.244989, -40.7282, 5.3782, 0.95", "0.619509, -41.9304, 6.84951, 0.73", "0.825323, -42.1513, 7.16339, 0.73", "1.52711, -42.7069, 8.05139, 0.73", "2.31817, -43.1887, 8.89578, 0.88", "2.95793, -43.5021, 9.5039, 0.88", "3.6838, -43.7936, 10.1088, 0.88", "4.2588, -43.973, 10.5311, 0.88", "5.06538, -44.2217, 11.1103, 0.66", "6.08045, -44.5582, 11.7997, 0.66", "6.48726, -44.7076, 12.0891, 0.66", "6.77437, -44.8188, 12.2979, 1.1", "8.14034, -45.2775, 13.2702, 0.81", "8.52139, -45.3621, 13.5381, 0.66", "9.11323, -45.4068, 13.9264, 0.66", "9.36315, -45.404, 14.0818, 0.66", "9.8397, -45.3894, 14.3632, 0.66", "10.6228, -45.3359, 14.801, 0.66", "11.3624, -45.2738, 15.2058, 0.66", "12.1448, -45.2488, 15.6594, 0.66", "12.629, -45.2749, 15.9944, 0.66", "13.0014, -45.3355, 16.3161, 0.66", "13.3944, -45.467, 16.7429, 0.66", "14.0579, -45.7939, 17.5821, 0.66", "14.5293, -46.0771, 18.2279, 0.81", "15.3883, -46.6212, 19.3667, 0.81", "16.1681, -47.0815, 20.3285, 0.81", "16.7629, -47.4275, 21.0085, 0.44", "16.9608, -47.549, 21.2016, 0.44", "17.2695, -47.774, 21.4284, 0.44", "18.0405, -48.3794, 21.7833, 0.44", "18.5107, -48.7706, 21.9247, 0.44", "19.1183, -49.2756, 22.0799, 0.51", "19.842, -49.8859, 22.2745, 0.73", "20.9873, -50.9513, 22.6895, 0.88", "22.1936, -52.1881, 23.2173, 0.51", "22.8303, -52.8535, 23.5828, 0.51", "23.5806, -53.5938, 24.0771, 0.51", "24.3587, -54.2565, 24.6418, 0.51", "25.3415, -54.9312, 25.4071, 0.51", "25.7402, -55.1375, 25.7286, 0.88", "27.1612, -55.6864, 26.838, 0.66", "27.6287, -55.8158, 27.1359, 0.66", "28.2416, -55.9127, 27.5296, 0.66", "29.1591, -55.9452, 28.0855, 0.66", "29.7152, -55.9303, 28.427, 0.51", "30.4163, -55.9094, 28.8702, 0.51", "31.4764, -55.9267, 29.5978, 0.81", "33.1879, -55.9948, 30.8839, 0.81", "33.9925, -56.0377, 31.5589, 0.81", "34.8365, -56.0787, 32.3691, 0.81", "35.2887, -56.0854, 32.8566, 0.81", "35.975, -56.047, 33.6933, 0.81" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-14.0339, -31.4979, -3.58524, 1.25", "-14.1728, -33.3535, -4.2174, 1.25", "-14.2657, -34.5953, -4.64046, 1.25", "-14.3978, -36.3606, -5.24187, 1.32", "-14.4956, -37.6671, -5.68695, 1.47", "-14.5325, -38.1597, -5.85478, 1.76", "-14.6231, -39.3711, -6.26749, 2.06" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-21.3425, -38.897, 23.1227, 0.88", "-21.7098, -40.0259, 23.0979, 0.88", "-22.0956, -41.1732, 23.2173, 0.95", "-22.4146, -41.893, 23.4176, 0.95", "-22.9191, -42.7703, 23.8804, 0.81", "-23.1708, -43.1124, 24.1043, 0.88", "-23.9333, -44.0102, 24.7397, 0.88", "-24.602, -44.6671, 25.3437, 1.18", "-25.4874, -45.5274, 26.3436, 1.1", "-26.4842, -46.5607, 27.6875, 0.22", "-27.0385, -47.1876, 28.5456, 0.22", "-27.3521, -47.5765, 29.0765, 0.88", "-28.0463, -48.6389, 30.426, 0.73", "-28.5061, -49.765, 31.6984, 0.51", "-28.5764, -50.1899, 32.0946, 0.51", "-28.5872, -50.787, 32.5965, 0.51", "-28.5457, -51.5208, 33.1921, 0.51", "-28.4728, -52.6972, 34.1077, 0.59", "-28.4737, -53.5894, 34.7134, 0.59", "-28.6113, -54.2411, 35.1363, 0.66", "-28.9115, -54.7104, 35.4443, 0.66", "-29.1854, -54.9311, 35.5752, 0.66", "-29.969, -55.4274, 35.8392, 0.66", "-30.907, -55.9585, 36.0885, 0.88", "-32.1138, -56.605, 36.3879, 0.51", "-33.3996, -57.2852, 36.6987, 0.37", "-34.6367, -58.0152, 37.0058, 0.37", "-35.4812, -58.5837, 37.2743, 0.66", "-36.2513, -59.2383, 37.5887, 0.51", "-36.7576, -59.7939, 37.8547, 0.59", "-37.1336, -60.341, 38.1081, 0.59", "-37.4602, -60.9503, 38.409, 0.59", "-37.8572, -61.8741, 38.8308, 0.59", "-38.2761, -63.0306, 39.2637, 0.59", "-38.4805, -63.749, 39.4736, 0.59", "-38.7365, -64.9306, 39.7221, 0.66", "-38.858, -65.7243, 39.834, 0.66", "-38.9741, -66.6432, 39.9302, 0.66", "-39.0531, -67.4635, 40.0273, 0.51", "-39.0933, -68.5844, 40.2197, 0.51", "-39.0336, -69.8481, 40.4712, 0.51", "-38.7675, -72.0014, 40.93, 0.44", "-38.4973, -73.3024, 41.2327, 0.81", "-38.0773, -74.8249, 41.5931, 0.81", "-37.5656, -76.4012, 41.9702, 0.37", "-37.1103, -77.6314, 42.2543, 0.37", "-36.8362, -78.3189, 42.3819, 0.37", "-36.281, -79.4992, 42.5717, 0.29", "-35.9181, -80.19, 42.622, 0.29", "-35.6543, -80.6621, 42.5881, 0.29", "-35.3274, -81.2859, 42.466, 0.29", "-34.5973, -82.9096, 42.0506, 0.29" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-21.3425, -38.897, 23.1227, 0.29", "-22.013, -38.9823, 23.9883, 0.29", "-22.5285, -39.1533, 24.5877, 0.51", "-23.3247, -39.5159, 25.4355, 0.51", "-23.8565, -39.7605, 25.9494, 0.51", "-24.7962, -40.156, 26.7921, 0.51", "-25.7167, -40.5113, 27.587, 0.51", "-26.5086, -40.7628, 28.248, 0.51", "-27.1905, -41.0105, 28.7946, 0.51", "-27.6261, -41.2314, 29.1691, 0.51", "-27.9533, -41.4217, 29.526, 0.51", "-28.0975, -41.4855, 29.7784, 0.51", "-28.246, -41.458, 30.2807, 0.51", "-28.3292, -41.4218, 30.8766, 0.51", "-28.4062, -41.4971, 32.0075, 0.51", "-28.3986, -41.7405, 32.6798, 0.51", "-28.3683, -42.049, 33.0569, 0.51", "-28.3635, -42.4682, 33.3733, 0.51", "-28.4035, -43.1372, 33.7248, 0.51", "-28.4243, -43.8109, 34.0662, 0.51", "-28.3685, -44.8484, 34.5474, 0.51", "-28.2253, -45.6281, 34.941, 0.51", "-27.975, -46.3532, 35.364, 0.51", "-27.6543, -46.9175, 35.7861, 0.59", "-27.0068, -47.7413, 36.6186, 0.37", "-26.6679, -48.1037, 37.0784, 0.37", "-26.1798, -48.5853, 37.8182, 0.51", "-25.6974, -49.0172, 38.612, 0.51", "-25.1315, -49.4079, 39.4123, 0.59", "-25.8875, -49.2752, 39.3959, 0.59", "-26.5134, -49.2515, 39.6732, 0.59", "-27.4085, -49.2521, 40.0724, 0.37", "-28.5153, -49.334, 40.5405, 0.37", "-29.8963, -49.5005, 41.0838, 0.37", "-30.673, -49.6416, 41.4208, 0.37", "-31.2795, -49.7736, 41.7088, 0.37", "-32.0363, -49.9691, 42.0934, 0.37", "-33.256, -50.2835, 42.7651, 0.37", "-34.3043, -50.4987, 43.3302, 0.73", "-35.8371, -50.851, 44.1757, 0.73", "-36.5429, -50.9941, 44.5525, 0.59", "-37.8416, -51.1798, 45.239, 0.51", "-39.0668, -51.2173, 45.843, 0.29", "-40.5983, -51.0428, 46.5074, 0.15" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "0.870213, -30.3251, 17.1935, 0.73", "0.567016, -31.4491, 17.1437, 0.73", "0.405962, -32.0538, 17.0935, 0.81", "0.142324, -33.3196, 16.9372, 1.18", "-0.0904301, -34.9061, 16.7578, 0.81", "-0.197751, -35.88, 16.6468, 1.18", "-0.377625, -37.9592, 16.4172, 0.88", "-0.441023, -38.9395, 16.3202, 1.1", "-0.543031, -40.8317, 16.1236, 1.1", "-0.659737, -42.299, 15.9396, 1.18", "-0.867603, -44.0306, 15.6799, 1.1", "-1.04226, -45.0717, 15.5321, 1.1", "-1.30495, -46.3768, 15.376, 1.1", "-1.68624, -47.9324, 15.1766, 1.18", "-2.36965, -50.0396, 14.8868, 1.18", "-2.72426, -50.9272, 14.7328, 1.18", "-3.01876, -51.5603, 14.6134, 1.18", "-3.57603, -52.6278, 14.3752, 1.18" ],
    "parent" : "dend_86",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "0.870213, -30.3251, 17.1935, 0.51", "1.53053, -30.1873, 16.9519, 0.51", "3.01949, -29.9824, 16.3587, 0.51", "3.9932, -29.9087, 15.8858, 0.51", "4.63791, -29.9305, 15.496, 0.51", "5.17843, -30.0063, 15.1212, 0.51", "5.7241, -30.1593, 14.7113, 0.51", "6.3466, -30.5409, 14.1524, 0.51", "6.90076, -31.0512, 13.591, 0.51", "7.61695, -31.8219, 12.8624, 0.51", "7.8165, -32.039, 12.6763, 0.51", "8.62289, -32.8275, 12.0249, 0.51", "9.59543, -33.6114, 11.3429, 0.51", "10.4558, -34.1339, 10.8492, 0.51", "11.0233, -34.3818, 10.5824, 0.51", "11.6137, -34.5646, 10.342, 0.51", "12.4436, -34.7871, 10.0358, 0.51", "13.4678, -35.0619, 9.65503, 0.51", "14.2393, -35.2971, 9.39864, 0.51", "14.9761, -35.5502, 9.15946, 0.51", "15.6542, -35.7966, 8.93199, 0.51", "16.8331, -36.2475, 8.52419, 0.51", "18.365, -36.8479, 7.99649, 0.51", "20.0202, -37.4863, 7.43973, 0.51", "20.7811, -37.7669, 7.17309, 0.51", "21.5038, -38.0103, 6.88898, 0.51", "22.2126, -38.2229, 6.59408, 0.51", "22.6191, -38.3344, 6.43163, 0.81", "23.4584, -38.5771, 6.15359, 0.59", "24.0056, -38.7892, 5.99011, 0.59", "24.7895, -39.1699, 5.81615, 0.59", "25.548, -39.6129, 5.67616, 0.59", "26.7208, -40.3823, 5.43482, 0.51", "27.4172, -40.8829, 5.28389, 0.51", "28.3409, -41.582, 5.08618, 0.51", "29.2728, -42.3022, 4.85562, 0.51", "30.4092, -43.1521, 4.54676, 1.18", "31.5798, -43.9803, 4.16614, 0.59", "32.4103, -44.5428, 3.85503, 0.44", "33.1168, -44.9945, 3.54739, 0.44", "33.9512, -45.4972, 3.1465, 0.44", "34.521, -45.828, 2.83974, 0.44", "35.1323, -46.1557, 2.53984, 0.44", "35.5774, -46.3733, 2.3582, 0.73", "36.2923, -46.6891, 2.10368, 0.73", "37.2102, -47.0818, 1.83814, 0.51", "38.6269, -47.6741, 1.54823, 0.51", "39.5203, -48.0796, 1.40408, 0.51", "40.5641, -48.5946, 1.27902, 0.51", "41.2215, -48.9379, 1.21851, 0.51", "41.7342, -49.22, 1.20179, 0.51", "42.3801, -49.5879, 1.10492, 0.44", "43.4135, -50.2025, 0.809656, 0.44", "44.2191, -50.6957, 0.472217, 0.44", "44.8657, -51.1151, 0.1606, 0.44", "45.7758, -51.7379, -0.288688, 0.44", "47.8445, -53.2377, -1.25545, 1.25", "48.8821, -54.012, -1.68441, 0.51", "50.0589, -54.8503, -2.06502, 0.51", "50.7076, -55.2981, -2.19071, 0.51", "51.5109, -55.8517, -2.22972, 0.51", "52.4755, -56.549, -2.12895, 0.51", "53.1236, -57.049, -1.95887, 0.51", "54.1453, -57.8749, -1.6581, 0.81", "55.1666, -58.7484, -1.38103, 0.37", "56.0742, -59.548, -1.17559, 1.1", "57.0655, -60.4822, -1.00277, 0.29", "57.9324, -61.4045, -0.928681, 0.29", "58.4823, -62.115, -0.925729, 0.95", "59.329, -63.4188, -0.947362, 0.22", "59.9092, -64.3876, -0.997333, 0.51", "60.3722, -65.1679, -1.06562, 0.88", "61.1163, -66.3888, -1.2414, 0.51", "62.0787, -67.942, -1.52872, 0.81", "63.3872, -70.0438, -1.98355, 0.07", "64.1938, -71.3158, -2.30676, 1.1", "64.9587, -72.4859, -2.63057, 0.59", "65.8461, -73.7093, -3.00456, 0.59", "66.228, -74.1672, -3.15553, 0.29", "66.6138, -74.5896, -3.33155, 0.29", "67.3491, -75.38, -3.72939, 0.22", "68.096, -76.184, -4.11535, 1.03", "69.1329, -77.3008, -4.61836, 0.15", "69.8944, -78.0895, -4.96286, 0.44", "70.5499, -78.7174, -5.24724, 0.44", "71.0317, -79.1735, -5.46098, 0.22", "71.6853, -79.8252, -5.75183, 0.44", "72.2187, -80.3891, -5.98881, 0.73", "72.5869, -80.795, -6.136, 1.03", "73.1416, -81.381, -6.31211, 1.03", "74.3153, -82.4818, -6.53275, 0.22", "74.9051, -83.0037, -6.5692, 0.29", "75.4236, -83.4458, -6.55183, 0.29", "76.0001, -83.8926, -6.50133, 0.29", "76.7178, -84.3885, -6.42091, 0.29", "77.3347, -84.7475, -6.36709, 0.29", "78.2811, -85.1776, -6.34177, 0.29", "79.1161, -85.5055, -6.37844, 0.73", "80.4436, -85.9586, -6.49896, 0.73", "81.3688, -86.2232, -6.59569, 1.03", "82.9683, -86.614, -6.78308, 1.03", "84.4754, -86.9503, -7.00802, 0.59", "85.8527, -87.2229, -7.23128, 0.73", "86.8716, -87.4158, -7.38941, 0.29", "88.4352, -87.7326, -7.60034, 0.29", "89.6364, -87.9781, -7.74238, 0.59", "91.0273, -88.2734, -7.8304, 0.29" ],
    "parent" : "dend_86",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "1.47631, -25.5474, 14.1714, 0.73", "2.16256, -26.0006, 13.9576, 0.73", "2.63335, -26.4257, 13.7217, 0.73", "3.17245, -27.0833, 13.4091, 0.88", "3.78597, -27.8544, 12.9821, 0.29", "4.25826, -28.4041, 12.6303, 0.95", "5.19633, -29.4155, 11.8812, 0.59", "6.01403, -30.3745, 11.0798, 0.66", "6.77875, -31.2602, 10.1509, 0.44", "7.59097, -32.0826, 9.02413, 0.44", "8.23891, -32.6059, 8.12056, 0.66", "8.94748, -33.0799, 7.1195, 0.66", "9.99763, -33.6911, 5.66757, 0.73", "11.1532, -34.3007, 4.13251, 0.73", "12.0564, -34.759, 3.0126, 0.44", "12.7502, -35.1718, 2.25073, 0.73", "13.4861, -35.6914, 1.55842, 0.44", "14.1781, -36.2144, 1.07173, 0.44", "14.7584, -36.663, 0.788644, 0.44", "15.548, -37.2946, 0.508157, 0.44", "16.28, -37.8561, 0.228491, 1.18", "17.9968, -39.0249, -0.516419, 0.29", "19.2538, -39.7198, -1.12773, 0.29", "20.4021, -40.2278, -1.7154, 0.29", "21.0857, -40.4958, -2.09231, 0.29", "22.8803, -41.1824, -3.20316, 0.66", "23.5958, -41.4508, -3.66809, 0.66", "25.4654, -42.1231, -4.86398, 0.66", "26.9256, -42.6891, -5.8311, 0.15", "27.9303, -43.1149, -6.50431, 0.81", "29.3234, -43.7655, -7.3771, 0.22", "30.2106, -44.1934, -7.85313, 0.22", "31.2483, -44.682, -8.37898, 0.22", "32.6478, -45.3403, -9.00038, 0.44", "33.6293, -45.8022, -9.36939, 0.15", "34.6292, -46.2566, -9.66577, 0.51", "35.8923, -46.8471, -9.95826, 0.07", "37.1216, -47.4724, -10.2575, 0.88", "38.0761, -48.0338, -10.5022, 0.88", "39.6644, -49.0786, -10.887, 0.07", "41.1068, -50.1873, -11.3014, 0.66", "42.259, -51.2189, -11.7221, 0.07", "43.09, -52.0681, -12.1064, 0.95", "43.861, -52.9094, -12.5524, 0.07", "44.4423, -53.5612, -12.9806, 0.59", "45.3379, -54.6821, -13.7822, 0.22", "45.9304, -55.534, -14.3949, 0.22", "46.5024, -56.4943, -15.0775, 0.95", "47.0452, -57.4383, -15.7365, 0.15", "47.4058, -58.0714, -16.2029, 0.15", "47.7264, -58.6871, -16.677, 0.15", "47.9427, -59.1309, -17.0114, 0.15", "48.2316, -59.9521, -17.591, 0.88" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "1.47631, -25.5474, 14.1714, 0.29", "2.19854, -26.543, 13.692, 0.29", "2.98064, -27.7994, 13.0289, 0.29", "3.58641, -28.8337, 12.4844, 0.29", "4.26516, -30.0308, 11.7798, 0.44", "4.49101, -30.3672, 11.4608, 0.44", "4.74627, -30.7124, 11.0609, 0.44", "5.19837, -31.2915, 10.2238, 0.44", "5.51026, -31.7125, 9.55804, 0.44", "5.94347, -32.3837, 8.55576, 0.73", "7.14596, -34.3856, 5.70407, 0.29", "7.40478, -34.8139, 5.08917, 0.29", "7.81329, -35.4872, 4.17295, 0.81", "8.34881, -36.4101, 3.02793, 0.37", "8.70876, -37.0561, 2.29155, 0.37", "9.09913, -37.7244, 1.62836, 0.37", "9.6059, -38.4923, 0.930586, 0.37", "10.1421, -39.1144, 0.282318, 0.73", "10.9177, -39.8193, -0.559664, 0.29", "11.4858, -40.2467, -1.15331, 0.73", "12.188, -40.7517, -1.94163, 0.73", "13.0752, -41.4819, -2.9608, 0.73", "13.4153, -41.8012, -3.39185, 0.37", "13.6763, -42.0544, -3.77307, 0.29", "14.1683, -42.5719, -4.51893, 0.29", "14.4979, -42.9931, -5.08636, 0.29", "15.1238, -43.8831, -6.17704, 0.95", "15.7096, -44.7087, -7.15302, 0.95", "16.173, -45.3549, -7.96283, 0.51", "16.465, -45.7601, -8.46133, 0.88", "17.189, -46.8319, -9.67083, 0.51", "17.5039, -47.3964, -10.246, 0.22", "17.8045, -48.1766, -10.9649, 0.22", "18.0485, -49.1606, -11.7238, 0.81", "18.14, -49.7501, -12.1641, 0.81", "18.1883, -50.366, -12.6103, 0.07", "18.2042, -51.0591, -13.0684, 1.03", "18.1986, -52.4536, -13.9596, 0.15", "18.2098, -53.6643, -14.7245, 1.03", "18.226, -54.246, -15.0707, 1.25", "18.2573, -54.9531, -15.4897, 0.44", "18.2807, -55.3429, -15.7134, 0.44", "18.3368, -56.1515, -16.1095, 0.44", "18.4281, -57.4, -16.5968, 0.44", "18.5919, -58.976, -17.1156, 0.07", "18.7225, -60.0706, -17.4584, 0.07", "18.8799, -61.2416, -17.8321, 1.4", "19.0726, -62.7783, -18.3147, 0.07", "19.1315, -63.373, -18.4878, 0.07", "19.2174, -64.1401, -18.6523, 0.44" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "33.8953, -34.0598, 28.2601, 0.37", "34.6404, -34.7335, 28.2498, 0.37", "35.2932, -35.2982, 28.2358, 0.37", "35.9559, -35.882, 28.2539, 0.37", "36.9638, -36.8046, 28.306, 0.37", "37.5422, -37.3608, 28.3743, 0.37", "38.3532, -38.1456, 28.4961, 0.37", "38.9305, -38.6863, 28.6104, 0.37", "39.7325, -39.3964, 28.8015, 0.66", "40.3725, -39.9274, 28.9705, 0.81", "41.4389, -40.7652, 29.2973, 0.81", "42.2615, -41.371, 29.5664, 0.44", "43.1816, -42.0037, 29.8675, 0.59", "43.7281, -42.3513, 30.0197, 0.59", "44.4839, -42.7903, 30.1814, 0.59", "45.3698, -43.2659, 30.3271, 0.81", "46.5731, -43.9182, 30.4421, 0.44", "47.1931, -44.3238, 30.4823, 0.44", "47.7915, -44.8323, 30.5177, 0.88", "48.2429, -45.3149, 30.5788, 0.88", "48.6641, -45.8533, 30.6938, 0.88", "49.3375, -46.8178, 30.9451, 0.37", "50.1067, -48.0014, 31.2869, 0.22", "50.8519, -49.1758, 31.6618, 0.81", "51.5465, -50.2612, 32.0358, 1.54", "52.4342, -51.5612, 32.4891, 0.88", "52.9618, -52.2463, 32.7338, 0.88", "53.3933, -52.6896, 32.899, 0.88", "54.3545, -53.3704, 33.185, 0.88", "54.9826, -53.6449, 33.3121, 0.88", "55.9835, -53.8683, 33.4419, 0.44", "56.7652, -53.9282, 33.5494, 0.44", "57.6585, -53.9223, 33.7347, 0.44", "58.8395, -53.858, 34.033, 1.18", "59.6801, -53.7691, 34.2713, 1.18", "60.6661, -53.6468, 34.5839, 0.51", "61.7391, -53.5126, 34.9722, 0.51", "62.723, -53.4221, 35.3697, 0.59", "63.6665, -53.3798, 35.7904, 1.84" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "33.8953, -34.0598, 28.2601, 0.29", "34.2646, -34.7917, 29.2206, 0.29", "34.7729, -35.745, 30.4434, 0.81", "35.2311, -36.6713, 31.604, 0.59", "35.562, -37.4328, 32.5394, 0.44", "35.6864, -37.803, 32.9855, 0.44", "35.9276, -38.8085, 34.0761, 0.44", "35.9488, -39.0346, 34.2962, 0.44", "35.8872, -39.5136, 34.7243, 0.44", "35.7295, -39.9111, 35.1081, 0.44", "35.2859, -40.5799, 35.8594, 1.1", "34.6713, -41.3343, 36.8067, 0.29", "34.1612, -41.856, 37.5621, 0.29", "33.906, -42.1658, 38.0898, 0.29", "33.8471, -42.4865, 38.6657, 0.29", "34.1226, -42.8311, 39.0318, 0.29", "34.649, -43.2882, 39.2745, 0.29", "35.1495, -43.6789, 39.3933, 0.29", "35.6783, -44.1005, 39.4842, 0.29", "36.4005, -44.7062, 39.5736, 0.29", "37.3388, -45.5628, 39.6488, 0.29", "37.8386, -46.0642, 39.6792, 0.22", "38.8794, -47.1688, 39.6959, 0.22" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "10.8509, -29.3709, 35.4024, 0.15", "12.1986, -29.3406, 35.549, 0.15", "13.3615, -29.3623, 35.7616, 0.81", "13.7859, -29.3652, 35.8845, 1.1", "14.8937, -29.3489, 36.249, 0.29", "15.5741, -29.3151, 36.5145, 0.73", "16.6832, -29.2406, 36.9674, 0.44", "17.497, -29.2063, 37.3751, 0.44", "18.6355, -29.1467, 38.039, 1.18", "18.9064, -29.1314, 38.1939, 1.18", "20.4563, -29.0507, 39.013, 0.66", "20.9396, -29.0372, 39.232, 0.66", "21.8404, -29.0939, 39.5387, 0.66", "22.6956, -29.2238, 39.79, 0.66", "23.9088, -29.4845, 40.0708, 0.66", "24.8385, -29.7232, 40.221, 0.59", "26.0636, -30.0726, 40.3767, 0.81", "28.133, -30.6864, 40.605, 0.51", "29.8886, -31.2246, 40.7464, 0.37", "31.3795, -31.6929, 40.8382, 0.22", "33.475, -32.3591, 40.9837, 0.22" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "10.8509, -29.3709, 35.4024, 0.81", "11.2346, -30.2324, 36.1516, 0.81", "11.5517, -30.7489, 36.6129, 0.37", "12.0352, -31.4393, 37.2101, 0.66", "12.4763, -32.0947, 37.6945, 0.66", "13.0716, -33.0722, 38.3074, 0.29", "13.4994, -33.7487, 38.7265, 0.29", "13.8216, -34.1619, 38.9786, 0.29", "14.4371, -34.8225, 39.399, 0.29", "15.3498, -35.6263, 39.9074, 0.44", "16.0811, -36.1439, 40.2705, 0.59", "16.9401, -36.5137, 40.6982, 0.44", "17.5046, -36.4223, 40.9894, 0.44", "17.9962, -35.9718, 41.2801, 0.44", "18.4798, -35.293, 41.6106, 0.73", "18.9817, -34.3347, 42.0212, 0.29", "19.1442, -33.8493, 42.2021, 0.29", "18.6031, -33.6626, 42.2638, 0.29", "18.0871, -33.5776, 42.3006, 0.29", "17.296, -33.5238, 42.3444, 0.29", "16.335, -33.5035, 42.3809, 0.29", "14.8645, -33.5186, 42.405, 0.29", "14.1115, -33.5376, 42.4182, 0.29", "13.0289, -33.5744, 42.4377, 0.29", "11.9901, -33.6127, 42.4566, 0.29", "10.7353, -33.6354, 42.4786, 0.29", "9.63187, -33.6491, 42.4989, 0.29", "8.53749, -33.6549, 42.5193, 0.29", "7.69421, -33.6457, 42.5337, 0.29", "6.74276, -33.612, 42.5458, 0.29", "5.41151, -33.5835, 42.5473, 0.29" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-37.4734, -7.70859, 37.4392, 0.22", "-38.208, -7.64261, 37.5322, 0.22", "-38.9778, -7.34849, 37.6278, 0.22", "-39.2961, -7.14546, 37.6676, 0.22", "-39.683, -6.78465, 37.7193, 0.22", "-40.3008, -6.05464, 37.8099, 0.22", "-40.8751, -5.30109, 37.8998, 0.22", "-41.1076, -4.91929, 37.941, 0.22", "-41.3902, -4.3875, 37.9829, 0.22", "-41.6388, -3.79367, 38.0153, 0.22", "-41.7639, -3.35945, 38.0256, 0.22", "-41.8063, -2.96355, 38.0079, 0.22", "-41.2832, -3.09314, 38.0772, 0.22", "-40.5102, -3.5345, 38.1966, 0.22" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-37.4734, -7.70859, 37.4392, 0.22", "-36.9328, -8.76054, 37.5047, 0.22", "-36.3952, -9.65225, 37.559, 0.22", "-35.9732, -10.3013, 37.5981, 0.22", "-35.4984, -11.0245, 37.64, 0.22", "-35.0192, -11.7764, 37.6822, 0.22", "-34.3912, -12.8239, 37.7379, 0.22", "-34.0335, -13.3952, 37.7658, 0.22", "-33.9206, -13.572, 37.7763, 0.22", "-33.6814, -13.952, 37.7982, 0.22", "-33.4968, -14.2723, 37.8206, 0.22", "-33.2448, -14.8197, 37.8664, 0.29", "-33.0532, -15.4766, 37.9284, 0.22", "-32.8976, -16.2881, 38.0135, 0.22" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-47.1825, -4.18127, 37.2418, 0.29", "-48.3896, -3.4324, 37.1585, 0.29", "-48.7776, -3.26641, 37.1524, 0.66", "-49.5057, -3.04441, 37.1576, 0.29", "-50.0797, -2.95244, 37.1686, 0.44", "-51.0744, -2.79307, 37.1877, 0.15", "-51.6481, -2.70115, 37.1987, 0.15", "-52.6589, -2.68254, 37.2952, 0.15", "-53.1493, -2.71416, 37.3452, 0.15", "-54.1307, -2.87579, 37.4553, 0.44" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-47.1825, -4.18127, 37.2418, 0.29", "-47.9453, -4.62932, 37.2418, 0.29", "-48.6793, -5.06046, 37.2418, 0.29", "-49.2148, -5.37497, 37.2418, 0.29" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "35.975, -56.047, 33.6933, 0.81", "36.1394, -57.0907, 33.6788, 0.81", "36.3062, -58.3264, 33.57, 0.81", "36.4932, -59.9178, 33.3544, 0.59", "36.6343, -60.9389, 33.193, 0.59", "36.8895, -62.2599, 32.9778, 0.59", "37.0695, -62.9803, 32.8711, 0.59", "37.3271, -63.8454, 32.7266, 0.59", "37.5412, -64.4949, 32.6088, 0.59", "37.8649, -65.4543, 32.4887, 0.59", "38.268, -66.5086, 32.4309, 0.59", "38.6191, -67.3547, 32.4896, 0.59", "38.8604, -67.9041, 32.578, 0.37", "39.4239, -69.195, 32.8834, 0.37", "39.8083, -70.1476, 33.1711, 0.37", "40.1695, -71.2227, 33.5477, 0.66", "40.494, -72.498, 34.0794, 0.29", "40.6458, -73.344, 34.5161, 0.29", "40.7348, -74.2255, 35.101, 0.29", "40.7691, -74.9277, 35.6876, 0.29", "40.716, -75.2678, 36.0399, 0.29", "40.26, -75.8416, 36.9046, 0.95", "39.4845, -76.1349, 37.7425, 0.29", "38.6156, -76.2088, 38.4502, 0.07" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "35.975, -56.047, 33.6933, 0.66", "34.5894, -56.5494, 33.5008, 0.66", "33.7975, -56.9189, 33.3698, 0.73", "33.0983, -57.239, 33.2581, 0.73", "32.5743, -57.4624, 33.18, 0.44", "31.3406, -58.0149, 33.0724, 0.22", "30.6317, -58.3412, 33.005, 0.22", "29.9387, -58.6514, 32.8856, 0.22", "29.14, -59.0136, 32.7512, 0.22", "28.5982, -59.2456, 32.6752, 0.66", "27.4223, -59.7064, 32.5438, 0.22", "26.6542, -59.9856, 32.4917, 0.22", "25.9644, -60.2114, 32.4347, 0.22", "24.9857, -60.5024, 32.3345, 0.22", "24.6341, -60.6179, 32.2871, 0.22", "23.7984, -60.878, 32.1387, 0.22" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-14.6231, -39.3711, -6.26749, 0.44", "-15.604, -40.3018, -5.85581, 0.44", "-16.7198, -41.3292, -5.4117, 0.44", "-17.446, -42.007, -5.13732, 0.59", "-18.2456, -42.7853, -4.7854, 0.51", "-19.1533, -43.6624, -4.36094, 0.44", "-20.556, -44.9673, -3.6861, 0.51", "-20.9908, -45.3453, -3.47411, 0.51", "-21.9408, -46.0997, -3.01792, 0.51", "-23.3215, -47.0971, -2.27848, 0.66", "-23.7695, -47.3968, -1.98249, 0.66", "-24.3427, -47.7443, -1.55102, 0.66", "-25.0922, -48.1351, -0.968102, 0.66", "-25.718, -48.4099, -0.492964, 0.66", "-26.8022, -48.778, 0.280166, 0.81", "-28.4865, -49.2704, 1.38391, 0.95", "-29.8815, -49.715, 2.29427, 0.81", "-30.7699, -50.0152, 2.88007, 0.81", "-31.5589, -50.294, 3.40874, 0.81", "-32.1557, -50.5159, 3.80359, 0.51", "-32.5741, -50.6821, 4.05015, 0.51", "-33.6964, -51.1807, 4.66084, 0.73", "-35.1741, -51.9604, 5.54692, 1.03", "-35.811, -52.3675, 5.97935, 1.03", "-36.2219, -52.6747, 6.28259, 1.18", "-36.929, -53.2435, 6.82762, 0.88", "-37.5666, -53.7515, 7.31138, 1.18" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-14.6231, -39.3711, -6.26749, 1.91", "-14.7494, -40.3567, -7.77763, 1.91", "-14.7759, -40.5634, -8.09438, 1.91" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_92",
    "id" : "dend_92",
    "points3d" : [ "-3.57603, -52.6278, 14.3752, 0.81", "-3.61477, -53.6191, 14.1048, 0.81", "-3.65598, -54.6734, 13.8172, 0.81", "-3.69338, -55.6304, 13.5562, 0.88", "-3.75342, -57.1667, 13.1371, 1.32", "-3.81131, -58.6477, 12.7331, 1.25", "-3.85389, -59.7372, 12.4359, 1.25" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_89",
    "id" : "dend_89",
    "points3d" : [ "-3.57603, -52.6278, 14.3752, 0.51", "-3.11911, -53.0807, 14.3177, 0.51", "-2.48203, -53.7661, 14.2175, 0.51", "-1.85197, -54.4889, 14.1001, 1.03", "-1.13554, -55.3503, 13.9316, 0.29", "-0.314353, -56.3492, 13.6706, 0.88", "0.763709, -57.6143, 13.2489, 0.51", "1.32597, -58.2779, 12.9888, 0.51", "1.75308, -58.7787, 12.7684, 0.51", "2.76343, -59.9224, 12.2161, 0.81", "3.56447, -60.7391, 11.789, 0.59", "4.70237, -61.7822, 11.2099, 0.37", "5.22727, -62.2379, 10.9621, 0.37", "5.56182, -62.5258, 10.8281, 0.37", "6.18503, -63.0413, 10.6098, 0.73", "7.05966, -63.7524, 10.3811, 0.51", "7.57444, -64.1922, 10.3068, 0.51", "8.21371, -64.7943, 10.2643, 0.51", "9.08227, -65.6497, 10.1952, 1.32" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "63.6665, -53.3798, 35.7904, 1.25", "64.6898, -52.991, 34.5321, 1.25", "65.769, -52.6196, 33.3139, 0.44", "66.2394, -52.4509, 32.7657, 0.81", "67.1601, -52.103, 31.6411, 0.44", "67.4868, -51.9796, 31.2422, 0.44", "67.8539, -51.8409, 30.7937, 0.44", "68.8153, -51.4707, 29.6507, 0.44", "69.8215, -51.0864, 28.4924, 0.44", "70.5668, -50.8122, 27.56, 0.44" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "63.6665, -53.3798, 35.7904, 0.59", "65.0041, -54.1576, 36.0805, 0.59", "65.7753, -54.5141, 36.2619, 0.66", "66.5783, -54.8851, 36.4546, 0.81", "67.3747, -55.248, 36.6348, 0.51", "68.0862, -55.5584, 36.7864, 0.29", "68.7083, -55.8138, 36.9073, 0.29", "69.529, -56.1005, 37.0483, 0.29", "70.0861, -56.3062, 37.1113, 0.29", "70.8528, -56.6322, 37.1701, 0.29", "72.1641, -57.2701, 37.2643, 0.66", "73.0027, -57.7291, 37.3135, 0.07", "73.5454, -58.0409, 37.3286, 0.07", "74.1744, -58.3978, 37.317, 0.73", "74.81, -58.7452, 37.2951, 0.73" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "5.41151, -33.5835, 42.5473, 0.15", "4.1429, -33.5171, 42.5237, 0.15", "2.66862, -33.3569, 42.5, 0.15", "1.57461, -33.2019, 42.4832, 0.15", "0.781443, -33.0744, 42.4657, 0.15", "0.0484649, -32.9546, 42.4488, 0.15", "-0.687557, -32.849, 42.4365, 0.15", "-1.41626, -32.7751, 42.4539, 0.15", "-0.887989, -32.8023, 42.4288, 0.15", "-0.18668, -32.8175, 42.3895, 0.15", "0.948782, -32.8315, 42.3236, 0.15", "2.11101, -32.8537, 42.2575, 0.15", "3.67733, -32.9235, 42.1738, 0.15", "4.50029, -32.9978, 42.1343, 0.15" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "5.41151, -33.5835, 42.5473, 0.22", "4.51165, -32.6711, 42.4006, 0.22", "3.90732, -32.2112, 42.3253, 0.22", "3.14996, -31.775, 42.2497, 0.22", "2.49014, -31.47, 42.199, 0.22", "1.71281, -31.1107, 42.1392, 0.22", "0.982537, -30.7731, 42.083, 0.22", "0.174915, -30.5255, 42.0552, 0.22", "-0.532349, -30.3835, 42.0308, 0.22", "-1.75842, -30.2554, 41.9907, 0.59" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-49.2148, -5.37497, 37.2418, 0.44", "-48.9362, -5.29315, 37.231, 0.44", "-48.3081, -5.14761, 37.1726, 0.22", "-47.7802, -5.06902, 37.1059, 0.22", "-46.6447, -5.01526, 36.9066, 0.22", "-45.9625, -4.98296, 36.7869, 0.22", "-45.5968, -4.96565, 36.7227, 0.22", "-45.0616, -4.93803, 36.6004, 0.22", "-44.6079, -4.90822, 36.4714, 0.22", "-43.9248, -5.02076, 36.1903, 0.22" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-49.2148, -5.37497, 37.2418, 0.22", "-49.984, -5.81577, 37.1037, 0.22", "-50.4753, -6.01549, 37.0445, 0.22", "-51.1618, -6.28433, 36.9736, 0.22", "-51.7228, -6.51384, 36.9165, 0.22", "-52.1932, -6.71621, 36.8677, 0.22", "-53.0084, -7.07627, 36.7808, 0.22", "-54.0554, -7.41212, 36.6969, 0.29", "-54.3466, -7.4251, 36.6914, 0.29", "-53.7212, -7.64728, 36.6575, 0.29", "-53.1698, -8.0213, 36.6133, 0.29", "-52.4025, -8.68173, 36.5419, 0.29", "-52.0978, -8.93565, 36.5144, 0.29", "-51.46, -9.08757, 36.4842, 0.29", "-51.8822, -9.17157, 36.4876, 0.29", "-52.5467, -9.39231, 36.486, 0.29", "-53.3674, -9.68754, 36.4821, 0.29", "-53.9746, -9.88162, 36.4817, 0.29", "-54.834, -10.0922, 36.4817, 0.29", "-55.6227, -10.2058, 36.4817, 0.44" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-37.5666, -53.7515, 7.31138, 0.59", "-38.4762, -54.4438, 6.74001, 0.59", "-39.4094, -55.2432, 6.1343, 0.59", "-39.8653, -55.6523, 5.84423, 0.59", "-40.8916, -56.5735, 5.23634, 0.37", "-41.79, -57.3248, 4.75737, 0.51", "-42.1735, -57.6296, 4.57462, 0.73", "-43.1966, -58.3821, 4.17753, 0.51", "-43.5753, -58.6617, 4.05474, 0.51", "-44.2316, -59.1685, 3.85671, 0.51", "-45.1513, -59.9564, 3.61644, 0.44", "-45.8275, -60.5998, 3.45042, 0.59", "-46.3448, -61.1853, 3.30153, 0.59", "-46.7543, -61.7589, 3.16992, 0.59", "-47.0215, -62.2872, 3.06304, 0.59", "-47.2188, -62.8379, 2.97042, 0.59", "-47.459, -63.7891, 2.87611, 0.59", "-47.6071, -64.4451, 2.80914, 0.59", "-47.7989, -65.1754, 2.71984, 0.59", "-48.3031, -66.7946, 2.48154, 0.73", "-48.6694, -67.7101, 2.33017, 0.73", "-49.3341, -69.1144, 2.10286, 0.37", "-49.8922, -70.1403, 1.91474, 0.37", "-50.9447, -71.8484, 1.5739, 0.88", "-51.8992, -73.1809, 1.23238, 0.51", "-52.9123, -74.3631, 0.841295, 0.44", "-53.6118, -75.0293, 0.576952, 0.44", "-54.5647, -75.7587, 0.220871, 0.44", "-55.3726, -76.285, -0.0666096, 0.73", "-56.9832, -77.193, -0.678193, 0.59", "-57.6826, -77.5631, -0.97761, 0.59", "-58.4254, -77.9924, -1.35834, 0.81", "-59.3846, -78.6107, -1.9071, 0.66", "-59.8727, -78.988, -2.21765, 0.66", "-60.38, -79.4551, -2.62063, 0.51", "-60.6798, -79.756, -2.88956, 0.51", "-61.1113, -80.1676, -3.30126, 0.73", "-61.4116, -80.4018, -3.5749, 0.95", "-62.4082, -80.9594, -4.30642, 0.51", "-63.4047, -81.371, -4.84278, 0.44", "-64.2084, -81.6291, -5.1792, 0.44", "-64.8167, -81.8017, -5.38167, 0.95", "-65.8544, -82.1013, -5.63986, 0.95", "-67.1852, -82.5749, -5.82827, 0.22", "-68.4249, -83.1308, -5.82016, 0.51", "-68.9031, -83.3824, -5.77566, 0.51", "-69.572, -83.7987, -5.68142, 0.81", "-70.5283, -84.4653, -5.52793, 0.51", "-71.632, -85.3084, -5.33206, 1.18", "-73.8501, -87.0333, -4.93322, 0.29", "-74.8, -87.7883, -4.75861, 0.88", "-76.2723, -88.9902, -4.48884, 0.29", "-76.6319, -89.3112, -4.42567, 0.29", "-77.0806, -89.7511, -4.36658, 0.88", "-77.8073, -90.5756, -4.30428, 0.51", "-78.3086, -91.2911, -4.30182, 0.51", "-78.8924, -92.193, -4.34255, 0.29", "-79.9715, -93.8075, -4.47557, 0.59", "-80.7395, -94.908, -4.55451, 0.37", "-81.3581, -95.7734, -4.6101, 0.66", "-81.9866, -96.6844, -4.66019, 0.66", "-82.6759, -97.6858, -4.68674, 0.95", "-83.4759, -98.8851, -4.65949, 0.51", "-84.008, -99.639, -4.61701, 0.51", "-84.4297, -100.243, -4.57264, 0.51", "-85.3656, -101.508, -4.46354, 1.69", "-86.6273, -103.133, -4.30387, 0.29", "-87.5135, -104.257, -4.24061, 0.51", "-88.334, -105.319, -4.25114, 0.15", "-88.8674, -106.006, -4.30037, 0.15", "-89.9357, -107.349, -4.44027, 0.88", "-90.4795, -108.01, -4.50299, 1.18", "-91.0451, -108.697, -4.56382, 1.18", "-91.8958, -109.757, -4.61624, 0.59", "-92.7757, -111.021, -4.58403, 0.66", "-93.3631, -111.959, -4.50963, 0.95", "-94.2223, -113.486, -4.36802, 0.37", "-94.5435, -114.067, -4.29697, 0.07", "-94.7337, -114.401, -4.23618, 0.73", "-95.4783, -115.619, -3.94629, 0.22", "-95.7916, -116.118, -3.82147, 0.22", "-96.2451, -116.903, -3.6469, 1.03", "-96.5982, -117.66, -3.57993, 1.03" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-37.5666, -53.7515, 7.31138, 0.73", "-39.391, -54.364, 8.37591, 0.73", "-39.8501, -54.5885, 8.69471, 0.73", "-40.6454, -55.1002, 9.28881, 1.03", "-41.8449, -56.1087, 10.3309, 0.37", "-42.2537, -56.5042, 10.7379, 0.44", "-42.7271, -57.0016, 11.2683, 0.66", "-43.3961, -57.9706, 12.1972, 0.81", "-43.6403, -58.5055, 12.7807, 0.81", "-43.7813, -59.2189, 13.6522, 0.81", "-43.7745, -59.7117, 14.3246, 0.81", "-43.8085, -60.0159, 14.8837, 0.81", "-43.9759, -60.2073, 15.4972, 0.81", "-44.709, -60.2569, 16.3895, 0.88", "-45.1382, -60.2222, 16.6899, 0.88", "-45.8563, -60.1471, 17.004, 0.88", "-46.6434, -60.0965, 17.2768, 0.88", "-47.2593, -60.0677, 17.4429, 0.59", "-47.767, -60.0453, 17.5538, 0.59", "-48.4306, -59.9992, 17.6602, 0.59", "-49.3142, -59.9398, 17.7941, 0.59", "-50.7927, -59.9149, 18.0548, 0.59", "-51.8531, -60.0, 18.3094, 0.59", "-52.2759, -60.0937, 18.4398, 0.59", "-52.8289, -60.3802, 18.7068, 0.81", "-53.1506, -60.7365, 18.975, 0.81", "-53.8043, -61.8925, 19.7174, 0.44", "-54.1061, -62.5682, 20.1007, 0.44", "-54.3109, -62.9996, 20.3273, 0.66", "-54.8089, -63.8934, 20.71, 0.81", "-55.3673, -64.7789, 21.0048, 0.59", "-56.1031, -65.7223, 21.1723, 0.81", "-56.8115, -66.5438, 21.192, 0.51", "-57.384, -67.2346, 21.1688, 0.81", "-58.0308, -68.1211, 21.1567, 0.51", "-58.3702, -68.7039, 21.1865, 0.95", "-58.9548, -69.9723, 21.3263, 0.37", "-59.505, -71.3422, 21.5439, 0.44", "-59.9234, -72.3471, 21.7657, 0.44", "-60.6141, -73.7877, 22.2221, 0.88", "-61.5384, -75.4392, 22.9628, 0.51", "-61.8054, -75.8571, 23.1962, 0.51", "-62.0217, -76.1652, 23.4183, 0.51", "-62.7838, -77.0997, 24.2283, 0.88", "-63.5627, -77.9205, 25.0588, 0.66", "-64.1577, -78.4761, 25.7131, 0.66", "-64.4743, -78.7624, 26.0847, 0.66", "-65.0963, -79.3106, 26.8761, 0.88", "-65.5176, -79.6708, 27.435, 1.03", "-66.0328, -80.0614, 28.1208, 1.03", "-66.8221, -80.5362, 29.0409, 1.03", "-67.919, -80.9997, 29.9967, 0.51", "-68.8486, -81.3042, 30.5906, 0.51", "-69.33, -81.4561, 30.8229, 0.51", "-70.1341, -81.7182, 31.1579, 0.51", "-71.0752, -82.0306, 31.4791, 0.51", "-72.0417, -82.3094, 31.7612, 0.29", "-72.8051, -82.5242, 31.9997, 0.29", "-74.0885, -82.9754, 32.4425, 0.29", "-74.6996, -83.2122, 32.6638, 0.29", "-75.1711, -83.3981, 32.8329, 0.66", "-76.1116, -83.7965, 33.1538, 1.1", "-77.0091, -84.2595, 33.4714, 0.29", "-77.9702, -84.8149, 33.7907, 0.44", "-79.1044, -85.5359, 34.1089, 0.37", "-79.817, -86.0328, 34.2987, 0.37", "-81.0189, -86.9792, 34.6313, 1.03", "-82.6434, -88.4451, 35.1019, 0.29", "-82.9758, -88.7743, 35.2085, 0.29", "-83.8357, -89.6915, 35.5533, 0.44" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-14.7759, -40.5634, -8.09438, 0.51", "-14.998, -41.3011, -8.67046, 0.51", "-15.2032, -42.1751, -9.34749, 0.59", "-15.4698, -43.3052, -10.2249, 0.73", "-15.6675, -44.0944, -10.8337, 0.73", "-15.9803, -45.2394, -11.6842, 0.95", "-16.2574, -46.1718, -12.3483, 1.03", "-16.6816, -47.5057, -13.3271, 1.03", "-16.9358, -48.34, -13.9345, 1.03", "-17.1834, -49.2464, -14.5516, 1.03", "-17.3976, -49.9655, -15.0011, 1.18", "-17.7651, -50.9728, -15.5885, 1.4" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-14.7759, -40.5634, -8.09438, 0.29", "-16.606, -41.5221, -9.31119, 0.29", "-17.8167, -42.1912, -10.1366, 0.37", "-19.813, -43.3845, -11.4562, 0.66", "-20.8815, -44.0779, -12.1215, 0.37", "-21.9249, -44.8203, -12.716, 0.37", "-22.9909, -45.617, -13.2877, 0.51", "-24.0034, -46.4347, -13.8004, 0.66", "-24.6787, -47.056, -14.1148, 0.66", "-25.5991, -48.0326, -14.5084, 0.44", "-27.0594, -49.7551, -15.1123, 0.44", "-28.0999, -51.1357, -15.5088, 0.51", "-28.973, -52.436, -15.8672, 0.51", "-29.5921, -53.4724, -16.1298, 0.51", "-30.1246, -54.4456, -16.3704, 0.51", "-30.5552, -55.3085, -16.5671, 0.51", "-31.0094, -56.2592, -16.7039, 0.51", "-31.5534, -57.3509, -16.7851, 0.51", "-32.3259, -58.715, -16.7981, 0.51", "-32.9516, -59.7022, -16.8007, 1.18", "-33.7395, -60.8643, -16.8734, 0.95", "-34.6539, -62.1963, -17.0623, 0.37", "-35.3885, -63.2882, -17.3327, 0.37", "-36.1501, -64.4698, -17.7692, 0.37", "-36.7171, -65.3976, -18.2618, 0.66", "-37.5262, -66.8708, -19.2001, 1.03", "-38.0311, -67.8981, -19.9522, 0.73", "-38.5038, -68.8158, -20.7, 0.81", "-39.0236, -69.6908, -21.4582, 0.95", "-39.6276, -70.5883, -22.3808, 0.81", "-40.2093, -71.3327, -23.1871, 0.59", "-41.0333, -72.2093, -24.1763, 0.66", "-41.9321, -73.0184, -25.2062, 0.29", "-42.7438, -73.635, -26.1008, 1.25", "-44.7773, -74.9733, -28.2632, 0.59", "-45.458, -75.3723, -28.9717, 0.37", "-46.2992, -75.8188, -29.8073, 0.44", "-47.4374, -76.4025, -30.8251, 1.54", "-49.0283, -77.2633, -32.0993, 0.51", "-49.7913, -77.6999, -32.5397, 0.37", "-50.1671, -77.9278, -32.6876, 0.37", "-50.6572, -78.2775, -32.8904, 0.37", "-51.9468, -79.3687, -33.4443, 1.25", "-52.6071, -80.0018, -33.7583, 1.54", "-53.9759, -81.4582, -34.5359, 0.22", "-54.9126, -82.4891, -35.1559, 0.88", "-55.8154, -83.3979, -35.7985, 0.22", "-56.5142, -84.0452, -36.3065, 0.22", "-57.1171, -84.58, -36.7684, 0.22", "-57.8778, -85.2281, -37.3319, 1.62", "-58.4376, -85.6683, -37.7014, 1.98", "-60.4573, -87.1073, -38.8256, 0.22", "-61.9418, -88.1164, -39.5252, 0.73", "-63.1098, -88.9118, -40.0136, 0.37", "-64.2094, -89.6699, -40.4411, 0.37", "-64.9366, -90.1922, -40.7305, 1.32", "-65.6437, -90.7469, -40.9952, 1.32", "-67.0081, -91.9649, -41.5669, 0.29", "-67.8755, -92.7736, -41.9269, 0.22", "-68.5622, -93.4451, -42.1948, 0.22", "-69.301, -94.2441, -42.4965, 1.1", "-69.8476, -94.9043, -42.779, 1.1", "-71.2897, -96.8137, -43.7766, 0.73" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_94",
    "id" : "dend_94",
    "points3d" : [ "-3.85389, -59.7372, 12.4359, 0.81", "-4.1046, -60.5014, 12.0641, 0.81", "-4.28623, -61.2728, 11.6946, 0.81", "-4.39984, -62.373, 11.1845, 0.88", "-4.41264, -63.3286, 10.8095, 1.1", "-4.3377, -64.3831, 10.4572, 1.1", "-4.17303, -65.423, 10.144, 0.73", "-3.98683, -66.0702, 9.97809, 0.95", "-3.59907, -67.0871, 9.76361, 1.18", "-3.16358, -67.9353, 9.61147, 1.18", "-2.77148, -68.5635, 9.53974, 1.18", "-2.0321, -69.6285, 9.51768, 1.18", "-1.63164, -70.197, 9.53012, 1.54" ],
    "parent" : "dend_92",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_93",
    "id" : "dend_93",
    "points3d" : [ "-3.85389, -59.7372, 12.4359, 0.88", "-4.69913, -59.7753, 12.5454, 0.88", "-5.97223, -59.8245, 12.7282, 0.88", "-7.16459, -59.8594, 12.8995, 0.73", "-8.03908, -59.8662, 13.0204, 0.59", "-9.0189, -59.8636, 13.1467, 0.73", "-10.6103, -59.8817, 13.3362, 0.44", "-11.2155, -59.8977, 13.3948, 0.44", "-11.9436, -59.954, 13.4633, 0.44", "-12.7047, -60.0732, 13.5267, 0.44", "-13.6413, -60.2841, 13.6023, 0.66", "-14.7716, -60.613, 13.6797, 0.51", "-15.7724, -60.9387, 13.7279, 0.51", "-16.6726, -61.2624, 13.7904, 0.81", "-17.4983, -61.6005, 13.8612, 0.51", "-18.6176, -62.0983, 13.9681, 0.88", "-19.8125, -62.6606, 14.0888, 0.44", "-20.4589, -62.9781, 14.1674, 0.44", "-21.3125, -63.4109, 14.3267, 0.44", "-22.0513, -63.7855, 14.4972, 0.44", "-23.1076, -64.3247, 14.7718, 0.73", "-24.0227, -64.7686, 15.0199, 0.37", "-25.1188, -65.2433, 15.3688, 0.88", "-26.3118, -65.6926, 15.7652, 0.95", "-27.2669, -66.0083, 16.0447, 0.59", "-28.016, -66.2656, 16.2404, 0.95", "-28.904, -66.6144, 16.4355, 0.59", "-30.1335, -67.1804, 16.6942, 0.59", "-30.9172, -67.6654, 16.8366, 0.59", "-32.0415, -68.6003, 17.013, 0.95", "-32.9654, -69.5759, 17.1811, 0.59", "-33.5683, -70.3377, 17.2978, 0.73", "-34.3403, -71.481, 17.4489, 1.03", "-35.0252, -72.6674, 17.5739, 0.66", "-35.3787, -73.3868, 17.6569, 0.66", "-35.7188, -74.1835, 17.7568, 0.66", "-36.0696, -75.0391, 17.8407, 0.66", "-36.346, -75.757, 17.8831, 0.88", "-36.6878, -76.6874, 17.9026, 0.44", "-37.1281, -77.8988, 17.9155, 1.54", "-37.7349, -79.6527, 17.9206, 0.51", "-38.1286, -80.8502, 17.9444, 0.37", "-38.6779, -82.4697, 18.0002, 0.66", "-39.1502, -83.753, 18.0916, 0.29", "-39.6558, -84.9589, 18.2294, 0.66", "-40.0821, -85.9213, 18.3602, 0.66", "-40.5511, -86.9087, 18.5271, 0.66", "-40.8588, -87.5127, 18.6647, 0.37", "-41.3497, -88.3455, 18.9577, 0.51", "-41.7043, -88.8272, 19.238, 0.73" ],
    "parent" : "dend_92",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_91",
    "id" : "dend_91",
    "points3d" : [ "9.08227, -65.6497, 10.1952, 0.66", "9.5488, -67.1196, 9.72848, 0.66", "9.66227, -67.7268, 9.5654, 0.51", "9.74503, -68.2043, 9.45873, 0.51", "9.87208, -68.702, 9.35903, 0.51", "10.1068, -69.405, 9.23615, 0.51", "10.4184, -70.187, 9.12065, 0.37", "10.6255, -70.6652, 9.07533, 0.37", "11.0198, -71.4782, 9.00994, 0.66", "11.7109, -72.8094, 8.90693, 0.29", "12.2716, -73.8281, 8.83527, 0.29", "12.9898, -75.0649, 8.76196, 0.66", "13.4552, -75.8418, 8.70251, 0.29", "14.0005, -76.762, 8.62171, 0.95", "14.5999, -77.8167, 8.52147, 0.15", "14.919, -78.4008, 8.46539, 0.81", "15.1937, -78.907, 8.40279, 0.88", "15.7606, -79.9538, 8.24852, 0.29", "16.1275, -80.6569, 8.13593, 0.29", "16.4875, -81.3559, 8.01812, 0.51", "16.9321, -82.2455, 7.87239, 0.51", "17.1753, -82.7605, 7.78748, 0.15", "17.2872, -83.0205, 7.73837, 0.15", "17.4821, -83.5969, 7.52962, 0.15", "17.5454, -83.8157, 7.38767, 0.15", "17.6049, -83.9974, 7.24475, 0.15", "17.745, -84.3667, 6.94559, 0.15", "18.0933, -85.1799, 6.31258, 0.22", "18.7621, -86.5451, 5.34694, 0.66", "19.2216, -87.4136, 4.79213, 0.88", "19.7496, -88.3673, 4.27267, 0.22", "20.1213, -89.0228, 3.97716, 0.22", "20.3099, -89.3587, 3.85127, 0.81", "20.9574, -90.4832, 3.56184, 0.22", "21.5201, -91.3781, 3.39901, 1.4", "22.1542, -92.3367, 3.22372, 1.4", "22.5769, -92.9843, 3.04868, 1.47", "23.4951, -94.4848, 2.47001, 0.07", "24.0119, -95.4115, 2.03629, 1.54", "24.777, -96.9329, 1.11707, 0.73", "25.1955, -97.8698, 0.431815, 0.66", "25.737, -99.2439, -0.695728, 1.32", "26.2085, -100.543, -1.83113, 0.88", "26.3572, -101.007, -2.24517, 1.54", "26.7288, -102.332, -3.41915, 1.47", "27.1615, -104.079, -4.85657, 0.29", "27.2874, -104.557, -5.20699, 0.29", "27.5879, -105.547, -5.82352, 1.1", "27.9818, -106.76, -6.47376, 0.44", "28.1687, -107.369, -6.76742, 0.88", "28.4031, -108.294, -7.14453, 0.88", "28.4979, -108.705, -7.30135, 0.88", "28.822, -110.07, -7.82778, 0.07", "28.9879, -110.692, -8.07684, 0.07", "29.1435, -111.239, -8.30234, 0.51", "29.5734, -112.692, -8.92741, 0.15", "29.7794, -113.347, -9.21095, 0.81", "29.9377, -113.784, -9.40278, 0.22", "30.4001, -114.794, -9.81554, 0.66" ],
    "parent" : "dend_89",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_90",
    "id" : "dend_90",
    "points3d" : [ "9.08227, -65.6497, 10.1952, 0.37", "9.35111, -66.3861, 10.9912, 0.37", "9.88501, -67.2753, 11.874, 0.37", "10.8075, -68.4843, 13.0652, 0.37", "11.1761, -68.945, 13.4912, 0.37", "11.472, -69.325, 13.8149, 0.37", "12.0168, -70.0349, 14.3824, 0.37", "12.8566, -71.0781, 15.1252, 0.44", "13.398, -71.6321, 15.5044, 0.44", "13.857, -72.0257, 15.8118, 0.44", "14.5384, -72.5768, 16.3068, 0.44", "14.7385, -72.7536, 16.4735, 0.66", "15.3241, -73.411, 17.0154, 0.66", "15.7449, -73.9883, 17.3872, 0.37", "16.2555, -74.7356, 17.7551, 0.88", "16.5803, -75.2791, 18.0093, 0.88", "16.7764, -75.7154, 18.2154, 1.18", "17.2201, -77.1703, 18.8549, 0.15", "17.4169, -78.217, 19.2601, 0.29", "17.5119, -79.2012, 19.6499, 1.25", "17.5655, -80.8247, 20.3416, 0.81", "17.5553, -82.4255, 21.1463, 0.81", "17.5374, -83.5047, 21.7512, 0.81", "17.5167, -84.3854, 22.3232, 0.44", "17.5427, -85.8276, 23.3466, 0.59", "17.6549, -86.678, 24.0046, 0.81", "18.0463, -87.9221, 25.0187, 0.37", "18.2991, -88.3601, 25.4077, 0.37", "18.9425, -89.1255, 26.1112, 0.66", "19.5985, -89.7296, 26.5926, 0.66", "20.6713, -90.5685, 27.0575, 0.22", "21.4749, -91.1834, 27.2847, 1.32", "22.3922, -91.9474, 27.4372, 0.44", "23.2359, -92.7902, 27.5877, 0.59", "24.1351, -93.9054, 27.7346, 0.44", "24.5139, -94.5003, 27.8154, 0.66", "25.2113, -95.75, 27.9726, 0.37", "25.6658, -96.652, 28.1258, 0.37", "26.2411, -97.9213, 28.437, 0.37", "26.5584, -98.5795, 28.6597, 0.37", "26.8752, -99.1078, 28.9121, 0.37", "27.4622, -99.8773, 29.3094, 0.37", "27.8483, -100.319, 29.524, 0.73", "28.2112, -100.72, 29.6909, 1.1", "28.7695, -101.362, 29.8824, 1.4", "29.6947, -102.585, 30.1849, 0.51", "30.0006, -103.078, 30.2763, 0.51", "30.371, -103.974, 30.402, 0.66", "30.6786, -105.18, 30.5125, 0.51", "30.7696, -105.822, 30.5485, 0.66", "30.8416, -106.499, 30.5853, 0.66", "30.9173, -107.039, 30.6377, 0.66", "31.1887, -108.022, 30.9178, 0.29", "31.4579, -108.623, 31.2269, 0.29", "31.6565, -108.964, 31.4809, 0.29", "32.2749, -109.872, 32.2696, 0.29", "32.9039, -110.657, 33.0568, 0.73", "33.6354, -111.419, 33.9569, 0.37", "34.2221, -111.918, 34.6893, 0.37", "34.8517, -112.395, 35.5471, 0.51", "35.0823, -112.57, 35.9144, 0.51", "35.3367, -112.798, 36.4466, 0.51", "35.5327, -113.031, 37.0628, 0.51", "35.6544, -113.377, 37.9959, 0.51", "35.6318, -113.556, 38.4111, 0.51", "35.4342, -114.135, 39.622, 0.37", "35.1998, -114.667, 40.6212, 0.66", "35.0104, -115.068, 41.2353, 0.66", "34.7612, -115.661, 41.9531, 0.22", "34.6775, -115.914, 42.2039, 0.66" ],
    "parent" : "dend_89",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-17.7651, -50.9728, -15.5885, 0.66", "-18.3989, -51.4148, -15.8297, 0.66", "-19.4138, -52.1718, -16.1949, 0.37", "-20.1254, -52.7405, -16.449, 0.73", "-21.0891, -53.5615, -16.7843, 0.51", "-21.8159, -54.2002, -17.04, 0.51", "-22.3969, -54.7091, -17.2498, 0.51", "-23.058, -55.2916, -17.5286, 0.59", "-23.6319, -55.8021, -17.7874, 0.59", "-24.1583, -56.2939, -18.0647, 0.59", "-25.267, -57.383, -18.687, 0.88", "-25.9083, -57.9877, -19.0689, 0.73", "-26.9935, -58.8824, -19.752, 0.88", "-27.4381, -59.2075, -20.0388, 0.95", "-28.0418, -59.6255, -20.4279, 0.95", "-28.7919, -60.1269, -20.8875, 0.59", "-30.2387, -61.0374, -21.713, 0.22", "-31.4389, -61.7652, -22.2828, 0.29", "-32.6304, -62.4763, -22.7429, 0.37", "-33.7423, -63.1657, -23.1117, 0.37", "-34.8149, -63.8687, -23.4042, 0.37", "-35.9516, -64.6795, -23.657, 0.37", "-37.2167, -65.6623, -23.8289, 0.37", "-37.9647, -66.2675, -23.8787, 0.37", "-38.9538, -67.0855, -23.8816, 0.37", "-40.1641, -68.1014, -23.8036, 0.44", "-41.079, -68.9011, -23.7549, 0.44", "-41.6353, -69.4036, -23.7126, 0.44", "-42.0698, -69.7785, -23.674, 0.44", "-42.8884, -70.3999, -23.7099, 0.29", "-43.5926, -70.8665, -23.8635, 0.29", "-44.9493, -71.7271, -24.3723, 0.51", "-45.7509, -72.2309, -24.7886, 0.73", "-46.5128, -72.6882, -25.2347, 0.73", "-49.1539, -74.1711, -26.8912, 0.73", "-50.0037, -74.623, -27.4374, 0.73", "-50.965, -75.1247, -28.0496, 0.73", "-51.8266, -75.5782, -28.5404, 0.73", "-52.6465, -76.0419, -28.9929, 0.44", "-53.3345, -76.4778, -29.337, 0.44", "-54.3366, -77.187, -29.7032, 0.44", "-55.3933, -77.9742, -30.0825, 0.37", "-56.3219, -78.7375, -30.4518, 0.95", "-57.4296, -79.7771, -30.9111, 0.66", "-58.3028, -80.6981, -31.3166, 0.37", "-58.9411, -81.3998, -31.6185, 0.22", "-59.2408, -81.7423, -31.7717, 0.22", "-59.829, -82.4382, -32.0914, 0.22", "-60.523, -83.1779, -32.4782, 0.37", "-61.5933, -84.1157, -33.0728, 0.44", "-62.1766, -84.5321, -33.4267, 0.44", "-62.8724, -84.9505, -33.8675, 1.18", "-63.8178, -85.4525, -34.4649, 0.73", "-64.8772, -85.9613, -35.1763, 0.37", "-65.6942, -86.3533, -35.7905, 0.37", "-66.3133, -86.6724, -36.344, 0.37", "-66.9393, -87.0073, -36.9691, 0.44", "-67.2268, -87.1666, -37.2658, 0.44", "-68.0566, -87.6906, -38.1796, 0.66", "-68.6466, -88.1675, -38.8652, 1.25", "-69.8979, -89.247, -40.2419, 0.22", "-70.0738, -89.3889, -40.4287, 0.22", "-70.4539, -89.6684, -40.8429, 0.22", "-71.1841, -90.1748, -41.6575, 0.44", "-71.7352, -90.5718, -42.3401, 0.29", "-72.5965, -91.2622, -43.5095, 1.54", "-73.6283, -92.2068, -45.0432, 0.22", "-74.4277, -92.9926, -46.3504, 0.88", "-74.9804, -93.5181, -47.2681, 0.88", "-75.7066, -94.159, -48.4928, 0.88", "-76.3167, -94.6622, -49.5328, 0.59", "-77.0976, -95.2167, -50.82, 0.59", "-77.9675, -95.7252, -52.0842, 0.81", "-78.5945, -96.0187, -52.8529, 0.44", "-79.3723, -96.3312, -53.6912, 0.44", "-80.443, -96.7213, -54.7215, 1.69", "-82.2743, -97.3798, -56.4007, 0.37", "-82.8544, -97.6158, -56.887, 0.07", "-83.4583, -97.9168, -57.3591, 0.73", "-84.4938, -98.6026, -58.1483, 0.37", "-84.981, -99.0209, -58.4941, 0.37", "-85.66, -99.7709, -58.9823, 0.66", "-86.3196, -100.734, -59.6378, 0.59", "-86.582, -101.152, -59.9601, 0.59", "-86.9285, -101.733, -60.423, 0.59", "-87.3595, -102.46, -61.0481, 0.59", "-88.0115, -103.513, -62.096, 1.18", "-89.0947, -105.141, -63.9045, 0.37", "-89.4485, -105.646, -64.4607, 0.15", "-89.9674, -106.362, -65.2245, 0.73", "-90.8208, -107.485, -66.4458, 0.37", "-91.6475, -108.557, -67.5675, 0.73", "-92.0533, -109.099, -68.0963, 1.25", "-92.8741, -110.193, -69.0314, 0.07", "-93.2396, -110.693, -69.4904, 0.44" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-17.7651, -50.9728, -15.5885, 1.18", "-17.7534, -52.3473, -16.0912, 1.18", "-17.6451, -53.6461, -16.4952, 0.95", "-17.486, -54.8513, -16.8287, 0.95", "-17.3536, -55.637, -17.0144, 0.95", "-17.2343, -56.2252, -17.1462, 0.95", "-16.8766, -57.7191, -17.4528, 1.03", "-16.5141, -59.0583, -17.7148, 0.95", "-16.3316, -59.6585, -17.8219, 1.03", "-15.8835, -60.9879, -18.0566, 0.95", "-15.2417, -62.7745, -18.3818, 1.1", "-14.4902, -64.8216, -18.7927, 0.95", "-13.9262, -66.365, -19.1457, 0.95" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_96",
    "id" : "dend_96",
    "points3d" : [ "-1.63164, -70.197, 9.53012, 0.73", "0.053758, -72.1199, 10.5195, 0.73", "0.49171, -72.7192, 10.7405, 0.88", "0.80286, -73.2738, 10.8719, 0.95", "1.15381, -74.0164, 11.0029, 0.95", "1.55563, -75.1048, 11.1486, 0.95", "1.93017, -76.2234, 11.2842, 1.25", "2.11868, -76.9954, 11.3075, 1.25", "2.38078, -78.3616, 11.3533, 0.88", "2.44435, -78.7372, 11.3678, 1.1", "2.79305, -80.9589, 11.4664, 0.66", "2.92825, -81.7648, 11.5328, 0.95", "3.15585, -82.979, 11.6777, 0.95", "3.2934, -83.716, 11.7861, 0.95", "3.43016, -84.5112, 11.9189, 0.95", "3.56228, -85.5197, 12.0833, 1.32", "3.74706, -87.2091, 12.3523, 0.95", "3.82385, -87.9621, 12.4435, 0.95", "3.97745, -89.2638, 12.5575, 0.95", "4.15488, -90.4833, 12.5864, 0.95", "4.30376, -91.4607, 12.5879, 0.95", "4.55024, -93.3193, 12.5981, 0.66", "4.68384, -94.6612, 12.6243, 0.66", "4.78267, -95.937, 12.6964, 0.66", "4.8975, -97.4823, 12.8459, 0.81", "5.02764, -99.1304, 13.0782, 0.88", "5.12581, -100.689, 13.4151, 0.88", "5.1616, -102.008, 13.7808, 0.88", "5.16528, -102.656, 14.0061, 0.88", "5.13036, -103.645, 14.3728, 0.88", "5.01275, -105.35, 14.993, 0.88", "4.85811, -107.249, 15.5541, 0.88", "4.80422, -107.965, 15.7292, 1.18", "4.65946, -109.521, 16.0873, 1.18", "4.48209, -111.0, 16.38, 0.95", "4.25987, -112.436, 16.5795, 1.18", "4.03905, -113.813, 16.5924, 1.18", "3.90597, -114.919, 16.4679, 1.18", "3.84355, -115.749, 16.3039, 1.18", "3.81519, -116.86, 15.9833, 1.18", "3.8553, -118.342, 15.4915, 1.18", "4.01557, -120.611, 14.6874, 0.73", "4.12475, -121.486, 14.3614, 0.81", "4.26357, -122.356, 14.0475, 0.81", "4.43236, -123.318, 13.6921, 0.81", "4.64204, -124.383, 13.3409, 0.88", "4.9969, -125.91, 12.911, 0.88", "5.33881, -127.179, 12.6935, 1.1", "5.58703, -127.951, 12.5669, 1.62" ],
    "parent" : "dend_94",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_95",
    "id" : "dend_95",
    "points3d" : [ "-1.63164, -70.197, 9.53012, 1.1", "-2.20074, -70.6975, 8.97544, 1.1", "-3.32844, -71.5594, 8.05582, 0.51", "-4.16493, -72.1758, 7.40446, 0.37", "-4.98329, -72.8038, 6.78431, 0.29", "-5.58564, -73.3188, 6.29565, 0.29", "-5.96988, -73.6874, 5.94686, 0.29", "-6.41189, -74.1558, 5.53696, 0.44", "-7.00646, -74.867, 4.92187, 0.51", "-7.28066, -75.2544, 4.57424, 0.51", "-7.79206, -76.067, 3.71561, 0.59", "-8.10558, -76.6022, 3.11304, 0.66", "-8.30738, -76.9552, 2.72287, 0.66", "-8.70817, -77.6331, 1.98466, 0.88", "-9.17125, -78.3307, 1.21967, 0.88", "-10.0027, -79.4613, -0.0628268, 0.44", "-10.3579, -79.9157, -0.563096, 0.51", "-10.8046, -80.4852, -1.15566, 0.81", "-11.314, -81.1781, -1.8789, 0.59", "-11.775, -81.8942, -2.62986, 0.88", "-12.17, -82.7051, -3.53068, 0.59", "-12.2531, -82.9829, -3.88794, 0.59", "-12.2814, -83.1994, -4.27727, 0.37", "-12.2362, -83.565, -5.27989, 0.37", "-12.1109, -83.7701, -6.07542, 0.37", "-11.8443, -83.9932, -7.06236, 0.73", "-11.5751, -84.2273, -7.98883, 0.59", "-11.4516, -84.4254, -8.57098, 0.59", "-11.4275, -84.6377, -8.9595, 0.59", "-11.5344, -85.0727, -9.33873, 0.59", "-11.7422, -85.7415, -9.7172, 0.59", "-12.098, -86.8512, -10.1886, 0.44", "-12.4291, -87.8114, -10.5281, 0.29", "-12.6889, -88.424, -10.7152, 0.29", "-12.961, -88.9411, -10.8672, 0.29", "-13.7438, -90.1967, -11.2241, 0.88", "-14.1387, -90.7535, -11.3489, 0.88", "-14.8474, -91.692, -11.5067, 0.66", "-15.9384, -93.0107, -11.6907, 0.15", "-16.5154, -93.6342, -11.7573, 0.88", "-17.019, -94.1215, -11.8101, 0.51", "-18.0435, -95.0297, -12.0057, 1.4", "-19.0688, -95.8969, -12.3608, 0.29", "-19.8223, -96.5182, -12.7541, 0.07", "-20.2361, -96.8563, -13.0373, 0.07", "-21.1538, -97.5991, -13.7513, 1.18", "-22.6665, -98.7994, -15.0889, 0.15", "-23.3926, -99.3599, -15.8331, 0.15", "-23.8546, -99.7137, -16.3581, 0.15", "-24.3231, -100.095, -16.9512, 0.15", "-24.7142, -100.422, -17.4655, 0.59", "-25.1823, -100.813, -18.0263, 1.03" ],
    "parent" : "dend_94",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-13.9262, -66.365, -19.1457, 0.73", "-13.3479, -67.5881, -19.2892, 0.73", "-12.7688, -68.8128, -19.433, 0.81", "-12.0509, -70.3311, -19.6111, 1.1" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-13.9262, -66.365, -19.1457, 0.37", "-13.0016, -66.6174, -20.1186, 0.37", "-12.1578, -66.9424, -21.0463, 0.37", "-11.6723, -67.1962, -21.6014, 0.95", "-9.94017, -68.3351, -23.6672, 0.66", "-9.4388, -68.7435, -24.3242, 0.66", "-9.20137, -68.9721, -24.6584, 0.66", "-8.77099, -69.6098, -25.4805, 0.73", "-8.47506, -70.2297, -26.2501, 0.51", "-8.32524, -70.6396, -26.7143, 0.51", "-8.16203, -71.3165, -27.317, 0.51", "-8.09879, -71.5681, -27.5916, 0.51", "-7.9322, -72.2394, -28.4281, 0.51", "-7.7994, -72.8677, -29.2743, 0.66", "-7.71344, -73.3715, -30.0226, 0.88", "-7.6077, -74.0264, -31.0715, 1.25", "-7.35282, -75.5901, -33.7875, 0.66", "-7.18876, -76.3328, -35.2557, 0.66", "-7.10403, -76.6492, -35.912, 0.66", "-6.96228, -77.002, -36.6321, 0.66", "-6.8947, -77.1057, -36.8363, 0.66", "-6.5306, -77.4499, -37.4653, 0.66", "-5.1396, -78.355, -38.7522, 0.66", "-4.32184, -78.8096, -39.3198, 0.81", "-2.98398, -79.5974, -40.2733, 0.29", "-2.418, -79.9739, -40.6872, 0.29", "-1.63557, -80.5614, -41.3467, 1.32", "-0.950878, -81.1759, -42.099, 0.37", "-0.640635, -81.5336, -42.5464, 1.1", "0.00596593, -82.6032, -43.913, 0.29", "0.113767, -83.0179, -44.3998, 0.66", "0.238202, -84.2219, -45.7612, 0.66", "0.188516, -85.3321, -46.8939, 0.66", "0.0243289, -86.4039, -47.9514, 1.32", "-0.13774, -87.3614, -48.8185, 0.15", "-0.177107, -88.1245, -49.2453, 0.15" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_100",
    "id" : "dend_100",
    "points3d" : [ "5.58703, -127.951, 12.5669, 1.18", "5.73858, -129.056, 12.8453, 1.18", "5.97423, -130.27, 13.2292, 0.95", "6.10593, -130.812, 13.434, 0.95", "6.19942, -131.233, 13.5992, 0.95", "6.30524, -131.785, 13.8133, 0.95", "6.45564, -132.691, 14.1618, 0.95", "6.61163, -133.528, 14.4899, 0.95", "6.87902, -134.89, 15.0041, 0.73", "6.98211, -135.429, 15.1931, 0.81", "7.06894, -136.011, 15.3795, 0.88", "7.24962, -137.705, 15.8082, 0.66", "7.32137, -138.531, 15.9851, 0.66", "7.3838, -139.417, 16.1453, 0.73", "7.45566, -140.451, 16.3034, 0.88", "7.60715, -142.037, 16.5405, 0.95", "7.7156, -143.25, 16.7052, 1.03" ],
    "parent" : "dend_96",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_97",
    "id" : "dend_97",
    "points3d" : [ "5.58703, -127.951, 12.5669, 0.88", "6.11319, -128.781, 12.3532, 0.88", "7.04701, -130.536, 11.9367, 0.73", "7.46597, -131.641, 11.7027, 0.73", "7.70755, -132.444, 11.5292, 0.73", "7.89104, -133.073, 11.3634, 0.73", "8.02757, -133.502, 11.2374, 0.73", "8.33783, -134.476, 10.9298, 0.73", "8.81073, -135.95, 10.4666, 0.66", "9.05168, -136.591, 10.2651, 0.73", "9.73903, -138.069, 9.79396, 0.73", "10.2744, -139.064, 9.47476, 0.73", "10.848, -140.039, 9.16638, 0.44", "11.2944, -140.776, 8.92642, 0.44", "11.8072, -141.662, 8.64798, 0.44", "12.2451, -142.693, 8.35011, 0.95", "12.44, -143.785, 8.02419, 0.51", "12.3987, -144.415, 7.78416, 0.51", "12.1789, -145.346, 7.35064, 0.51", "11.9852, -145.919, 7.04585, 1.03", "11.5899, -146.924, 6.433, 0.66", "11.2873, -147.791, 5.82782, 0.66", "11.1779, -148.265, 5.46013, 0.66", "11.1718, -148.678, 5.12689, 0.66", "11.3016, -149.227, 4.69827, 0.95", "11.8387, -150.359, 3.91622, 0.66", "12.5327, -151.483, 3.29822, 0.66", "12.6503, -151.658, 3.22312, 0.95", "13.1815, -152.464, 2.96626, 0.37", "13.5773, -153.107, 2.81499, 0.88", "14.41, -154.58, 2.59473, 0.29", "14.8894, -155.476, 2.54546, 0.81", "15.201, -156.106, 2.55672, 1.1", "15.7798, -157.351, 2.60672, 0.51", "16.1301, -158.164, 2.65683, 0.66", "16.5043, -159.073, 2.70196, 0.66", "16.8164, -159.864, 2.7329, 0.37", "17.3039, -160.988, 2.71136, 0.29", "17.6648, -161.708, 2.66813, 0.29", "18.1565, -162.521, 2.58742, 0.59", "19.3118, -164.115, 2.37488, 0.37", "19.9342, -164.878, 2.23638, 0.37", "20.79, -165.862, 2.02094, 0.66", "21.5635, -166.758, 1.81406, 0.66", "22.2831, -167.575, 1.61883, 0.29", "22.8082, -168.139, 1.48199, 0.29", "23.6074, -168.908, 1.30792, 1.32", "24.404, -169.659, 1.16175, 0.81", "25.336, -170.68, 1.07194, 1.4" ],
    "parent" : "dend_96",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-12.0509, -70.3311, -19.6111, 1.18", "-11.8625, -71.2618, -19.6751, 1.18", "-11.4647, -72.8286, -19.717, 0.95", "-11.2802, -73.5024, -19.7372, 0.95", "-11.1253, -74.0946, -19.7552, 0.95", "-10.8914, -75.1517, -19.7862, 0.66", "-10.7583, -75.8746, -19.8008, 0.66", "-10.5942, -77.0378, -19.8055, 1.25", "-10.4274, -78.1746, -19.7875, 1.25", "-10.3087, -78.7815, -19.7743, 1.25", "-10.0664, -79.7303, -19.7498, 0.88", "-9.86256, -80.3445, -19.7323, 0.88", "-9.53433, -81.1112, -19.7117, 0.88", "-8.95957, -82.2574, -19.7036, 0.88", "-8.46898, -83.144, -19.6995, 0.88", "-8.01601, -83.969, -19.691, 0.95", "-7.60181, -84.8211, -19.6541, 0.95", "-6.91184, -86.5486, -19.5314, 0.59", "-6.5545, -87.773, -19.4131, 0.59", "-6.29796, -89.1435, -19.2499, 0.88", "-6.16121, -90.4677, -19.09, 0.59", "-6.08081, -92.2541, -18.9094, 0.88", "-6.07745, -93.0588, -18.8406, 0.88", "-6.11562, -94.5104, -18.7404, 0.95", "-6.18413, -96.7969, -18.6767, 1.54", "-6.17798, -98.3929, -18.7034, 0.44", "-6.10345, -99.5505, -18.7812, 0.44", "-5.99098, -100.382, -18.8623, 0.73", "-5.79622, -101.489, -18.9541, 0.59", "-5.5749, -102.658, -19.0098, 0.73", "-5.24766, -104.116, -19.0304, 1.03", "-4.96082, -105.083, -19.0228, 0.73", "-4.69956, -105.819, -18.9755, 0.95", "-4.26374, -106.887, -18.8177, 0.88", "-3.54976, -108.351, -18.4187, 0.81", "-3.0856, -109.152, -18.1035, 0.73", "-2.32876, -110.291, -17.5643, 0.81", "-1.62196, -111.259, -17.0339, 0.81", "-0.732351, -112.448, -16.433, 0.88", "0.17105, -113.525, -15.8311, 0.73", "0.760993, -114.159, -15.4189, 0.73", "1.49759, -114.967, -14.8352, 0.73", "2.33469, -115.934, -14.1008, 0.88", "3.4279, -117.24, -13.3251, 1.03" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-12.0509, -70.3311, -19.6111, 0.59", "-12.7815, -71.6784, -21.5437, 0.59", "-13.2784, -72.5041, -22.7574, 0.59", "-13.6083, -72.9453, -23.4378, 0.59", "-13.8121, -73.164, -23.7921, 0.88", "-14.3606, -73.6618, -24.6471, 0.59", "-15.0489, -74.2518, -25.6766, 0.66", "-15.6921, -74.802, -26.5119, 0.44", "-16.3, -75.3422, -27.2377, 0.95", "-17.0052, -76.0087, -28.0394, 0.44", "-17.7665, -76.7593, -28.8703, 0.51", "-18.1287, -77.1131, -29.2449, 0.51", "-18.7347, -77.7616, -29.8057, 0.81", "-19.4409, -78.5997, -30.3939, 0.37", "-19.7906, -79.0406, -30.6753, 0.37", "-20.1077, -79.4465, -30.9119, 0.37", "-20.6954, -80.1574, -31.342, 0.37", "-21.2146, -80.7286, -31.7816, 1.1", "-22.0322, -81.61, -32.6813, 0.73", "-22.4508, -82.0692, -33.2482, 0.44", "-22.941, -82.6044, -34.0417, 0.59", "-23.5298, -83.2511, -35.1502, 0.66", "-24.1761, -84.0155, -36.5698, 0.88", "-24.7183, -84.7285, -38.0387, 1.03", "-25.0411, -85.2432, -39.2452, 0.73", "-25.286, -85.6974, -40.4801, 0.73", "-25.4135, -85.9906, -41.4717, 0.73", "-25.4604, -86.1621, -42.1748, 0.73", "-25.469, -86.3861, -43.1831, 0.73", "-25.3791, -86.6518, -44.2691, 0.73", "-25.2493, -86.8469, -44.8319, 0.73", "-25.0864, -87.1114, -45.3067, 0.73", "-24.9007, -87.6338, -45.9594, 0.59", "-24.9064, -87.884, -46.1849, 0.59", "-25.2286, -88.849, -46.8872, 0.44", "-25.6194, -89.5194, -47.3299, 0.37", "-25.8473, -89.8651, -47.6098, 0.37", "-26.4057, -90.7281, -48.3573, 0.44", "-26.774, -91.2956, -48.9549, 0.81", "-27.2608, -91.9866, -49.8843, 0.81", "-27.8837, -92.7462, -51.2131, 0.95", "-28.7194, -93.747, -53.1053, 0.66", "-28.974, -94.0575, -53.6828, 0.66", "-29.4853, -94.7526, -54.8899, 0.66", "-29.8024, -95.1607, -55.5283, 0.66", "-30.7597, -96.2609, -56.8994, 0.44", "-31.661, -97.2149, -57.7393, 0.44", "-32.2771, -97.8333, -58.1063, 0.44", "-32.7381, -98.2824, -58.3398, 1.03", "-33.7826, -99.3047, -58.7847, 0.37", "-34.9773, -100.473, -59.2757, 0.51", "-35.8761, -101.339, -59.6911, 0.44", "-36.6401, -102.087, -60.1193, 0.44", "-37.6079, -103.043, -60.7537, 0.44", "-38.4002, -103.812, -61.3711, 0.44", "-39.1039, -104.497, -62.008, 0.95", "-39.8993, -105.227, -62.7881, 1.18", "-40.4865, -105.741, -63.3589, 0.95", "-41.2058, -106.35, -64.0202, 0.37", "-42.0672, -107.096, -64.7773, 0.81", "-42.5421, -107.512, -65.1732, 0.81", "-43.1291, -108.116, -65.6604, 0.73", "-43.8454, -109.108, -66.3844, 0.15", "-44.0715, -109.607, -66.7797, 0.15", "-44.12, -110.084, -67.1817, 0.15", "-44.1109, -110.391, -67.437, 0.15", "-43.921, -111.591, -68.5086, 1.62", "-43.4897, -112.968, -69.8818, 0.07", "-43.0073, -113.974, -70.9722, 0.88", "-42.4536, -114.922, -72.0287, 0.29" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_102",
    "id" : "dend_102",
    "points3d" : [ "7.7156, -143.25, 16.7052, 0.37", "8.13559, -144.288, 16.7692, 0.37", "8.54502, -145.395, 16.8452, 0.37", "9.00726, -146.693, 16.9356, 0.37", "9.58734, -148.243, 17.0377, 0.51", "10.2163, -149.665, 17.0953, 0.66", "10.941, -151.119, 17.1282, 0.66", "11.3821, -151.925, 17.1298, 0.66", "11.7971, -152.584, 17.1144, 0.66", "12.3285, -153.279, 17.0649, 0.66", "13.6018, -154.7, 16.8848, 0.37", "14.2276, -155.341, 16.7752, 0.37", "14.9119, -155.988, 16.6361, 1.1", "15.3756, -156.414, 16.5397, 1.1", "16.6429, -157.614, 16.2685, 0.44", "17.6275, -158.655, 16.054, 0.44", "18.4435, -159.676, 15.8828, 0.66" ],
    "parent" : "dend_100",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_101",
    "id" : "dend_101",
    "points3d" : [ "7.7156, -143.25, 16.7052, 1.1", "7.74909, -143.859, 17.1524, 1.1", "7.69972, -144.898, 17.8216, 0.95", "7.60733, -146.206, 18.5792, 0.95", "7.57811, -147.006, 19.0413, 0.95", "7.59094, -147.634, 19.4524, 0.95", "7.63766, -148.642, 20.1322, 0.81", "7.72288, -150.06, 21.0609, 0.88", "7.75238, -150.66, 21.4221, 0.88", "7.83006, -151.817, 22.0637, 1.1", "8.14582, -153.725, 23.0354, 0.88", "8.30676, -154.299, 23.351, 0.81", "8.59091, -155.023, 23.7483, 0.95", "8.97424, -155.891, 24.2179, 0.73", "9.22866, -156.513, 24.5495, 0.73", "9.79495, -158.2, 25.3669, 0.22", "10.274, -159.961, 26.1556, 0.88", "10.4997, -161.006, 26.6455, 0.59", "10.7127, -162.228, 27.2425, 0.59", "10.808, -162.925, 27.6174, 0.59", "10.8893, -163.771, 28.151, 0.73", "10.9308, -164.23, 28.5054, 0.73", "11.1916, -164.894, 29.0308, 0.95", "11.4235, -165.171, 29.2954, 1.03", "12.3046, -165.938, 30.0251, 0.66", "13.3239, -166.764, 30.8176, 1.03", "13.8919, -167.273, 31.3736, 1.03", "14.8857, -168.288, 32.5552, 0.29", "15.3404, -168.853, 33.2369, 0.29", "15.6063, -169.374, 33.8738, 0.66", "15.7579, -170.145, 34.8291, 0.81", "15.5949, -171.795, 37.1659, 0.51", "15.3956, -172.208, 37.9341, 0.51", "15.1239, -172.401, 38.5877, 0.73", "14.506, -172.536, 39.7531, 0.73", "14.1285, -172.529, 40.3856, 0.73", "13.6709, -172.388, 41.1599, 0.73", "13.444, -172.198, 41.6633, 0.73", "13.241, -171.791, 42.9341, 0.73", "13.3746, -171.715, 43.459, 0.73", "14.1326, -171.927, 44.1986, 0.73", "14.7812, -172.187, 44.6623, 0.73", "15.3337, -172.419, 44.9495, 0.73", "16.4713, -172.84, 45.445, 0.37", "17.2206, -173.077, 45.7065, 0.37", "18.2762, -173.344, 46.0248, 0.95", "19.1499, -173.506, 46.2388, 0.95", "20.2938, -173.671, 46.4816, 0.59", "21.0914, -173.713, 46.629, 0.29", "21.4679, -173.698, 46.6924, 0.15", "21.8472, -173.649, 46.7357, 0.15", "22.5707, -173.481, 46.7813, 0.15", "23.18, -173.312, 46.7665, 0.15", "23.9993, -173.101, 46.7377, 0.15" ],
    "parent" : "dend_100",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_99",
    "id" : "dend_99",
    "points3d" : [ "25.336, -170.68, 1.07194, 0.73", "26.0726, -171.645, -0.101554, 0.73", "26.6011, -172.259, -0.916447, 0.44", "27.2379, -172.898, -1.83149, 0.37", "27.7898, -173.388, -2.57918, 1.18", "28.511, -173.945, -3.46346, 0.44", "28.8614, -174.183, -3.86296, 0.73", "29.8132, -174.752, -4.74322, 0.29", "30.2007, -174.948, -5.05414, 0.29", "30.4265, -175.053, -5.2316, 0.73", "30.9842, -175.28, -5.68685, 0.29", "31.5914, -175.512, -6.21441, 0.66", "32.1567, -175.748, -6.71852, 1.03", "33.1798, -176.214, -7.60299, 1.18", "34.1335, -176.675, -8.451, 0.29", "34.9007, -177.05, -9.11917, 0.29", "35.3975, -177.292, -9.5666, 0.29", "35.696, -177.428, -9.8272, 0.95", "36.2292, -177.635, -10.283, 0.95", "37.2276, -177.894, -10.957, 0.22", "37.7793, -178.008, -11.2418, 0.66" ],
    "parent" : "dend_97",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_98",
    "id" : "dend_98",
    "points3d" : [ "25.336, -170.68, 1.07194, 0.59", "25.4874, -171.717, 0.59166, 0.59", "25.6759, -173.137, -0.00174422, 0.44", "25.7929, -173.95, -0.310649, 0.44", "25.9345, -174.8, -0.60798, 0.44", "26.1209, -175.692, -0.910472, 0.44", "26.3054, -176.446, -1.15739, 0.44", "26.4681, -177.021, -1.2995, 0.95", "26.6349, -177.568, -1.40209, 0.95", "26.8151, -178.058, -1.49258, 0.95", "27.2725, -178.988, -1.64974, 0.22", "27.5153, -179.351, -1.70611, 0.22", "27.9856, -179.914, -1.80387, 0.22", "28.4119, -180.35, -1.88729, 0.22", "28.7973, -180.716, -1.98794, 0.88", "29.3782, -181.252, -2.17458, 0.88", "30.0297, -181.826, -2.39484, 0.51", "30.4254, -182.18, -2.53521, 0.81", "31.0064, -182.74, -2.76738, 0.81", "31.8697, -183.68, -3.16952, 0.37", "32.4984, -184.479, -3.49034, 0.22", "32.9112, -185.08, -3.73371, 0.22", "33.4061, -185.859, -4.03878, 0.88", "34.0121, -186.867, -4.41668, 0.29", "34.341, -187.451, -4.61978, 0.29", "34.8559, -188.454, -4.90887, 0.66", "35.1481, -189.045, -5.07629, 0.29", "35.4878, -189.734, -5.271, 0.59", "35.8554, -190.43, -5.45917, 0.15", "36.1175, -190.89, -5.55941, 0.15", "36.4897, -191.551, -5.6841, 0.44", "36.808, -192.164, -5.78939, 0.07", "36.9961, -192.56, -5.80358, 0.07", "37.1063, -192.806, -5.79617, 0.07", "37.3807, -193.413, -5.74269, 0.66", "37.7201, -194.176, -5.67465, 0.88", "37.9743, -194.72, -5.62588, 0.88", "38.6555, -196.222, -5.5785, 0.29", "38.7798, -196.468, -5.58321, 0.29", "39.3173, -197.403, -5.63916, 0.88", "39.8891, -198.294, -5.72461, 0.07", "40.4851, -199.168, -5.88405, 1.18", "41.2985, -200.345, -6.20138, 0.07", "41.84, -201.132, -6.48181, 0.07", "42.3384, -201.884, -6.74944, 1.18", "42.7062, -202.455, -6.95082, 1.18", "43.3043, -203.467, -7.2668, 0.29", "43.6835, -204.214, -7.51674, 0.66", "43.857, -204.638, -7.65448, 0.66", "44.0648, -205.382, -7.90762, 0.15", "44.1325, -205.733, -8.02748, 0.15", "44.227, -206.37, -8.22769, 0.81", "44.3815, -207.559, -8.54604, 0.37", "44.4284, -208.175, -8.73898, 0.37", "44.4326, -208.669, -8.91136, 0.37", "44.4003, -209.088, -9.07551, 0.37", "44.3393, -209.557, -9.26316, 0.37" ],
    "parent" : "dend_97",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "3.4279, -117.24, -13.3251, 0.66", "3.92798, -118.274, -13.1005, 0.66", "4.80769, -120.216, -12.7331, 0.44", "5.27032, -121.328, -12.5343, 0.44", "5.71666, -122.489, -12.4334, 0.44", "6.16133, -123.753, -12.4301, 0.59", "6.48484, -124.792, -12.5216, 0.59", "6.65321, -125.432, -12.6648, 0.59", "6.92477, -126.623, -13.0708, 0.81", "7.37657, -128.462, -13.789, 0.81", "7.64915, -129.356, -14.1947, 0.88", "8.16468, -130.775, -14.9347, 0.44", "8.39685, -131.324, -15.2319, 0.44", "8.73023, -132.007, -15.5789, 0.59", "9.45622, -133.253, -16.1203, 0.44", "10.0952, -134.179, -16.3352, 0.44", "10.7991, -135.037, -16.4147, 0.66", "11.274, -135.548, -16.3888, 0.66", "11.7265, -136.062, -16.3203, 0.66", "12.2058, -136.707, -16.1924, 0.66", "12.6718, -137.456, -16.0128, 0.66", "13.0332, -138.049, -15.8611, 0.66", "13.2794, -138.471, -15.7461, 0.66", "13.9543, -139.736, -15.44, 0.44", "14.4817, -140.779, -15.1971, 0.44", "14.9237, -141.725, -14.9496, 0.44", "15.2901, -142.625, -14.6665, 0.44", "15.892, -144.312, -14.0566, 0.51", "16.1337, -145.067, -13.7352, 0.51", "16.5089, -146.354, -13.1244, 0.66", "16.8574, -147.783, -12.4207, 0.73", "17.1912, -149.56, -11.5517, 0.44", "17.3178, -150.587, -11.0832, 0.59", "17.4396, -152.195, -10.4512, 0.59", "17.4779, -152.898, -10.2001, 0.59", "17.5454, -154.297, -9.762, 0.37", "17.5951, -154.954, -9.56053, 0.51", "17.8002, -156.718, -9.04389, 0.22", "18.0113, -158.163, -8.63555, 0.37", "18.331, -159.917, -8.14818, 0.37", "18.5174, -160.763, -7.88727, 0.37", "18.9401, -162.363, -7.42649, 0.29", "19.1929, -163.227, -7.19311, 0.29", "19.6049, -164.519, -6.83773, 0.59", "20.0054, -165.776, -6.52402, 0.44", "20.3314, -166.898, -6.26373, 0.73", "20.7031, -168.408, -5.87989, 1.1", "21.0822, -170.191, -5.4297, 0.15", "21.3212, -171.489, -5.05724, 0.15", "21.4711, -172.462, -4.78361, 1.25", "21.7, -174.465, -4.27549, 0.15", "21.8057, -175.73, -4.00998, 0.22", "21.8677, -176.855, -3.81416, 0.95", "21.9111, -178.107, -3.7119, 0.22", "21.9372, -178.966, -3.72535, 0.22", "21.9966, -180.168, -3.77259, 0.37", "22.0962, -181.638, -3.8944, 0.44", "22.2219, -183.078, -3.98909, 0.81", "22.3478, -184.712, -4.0301, 0.37", "22.4667, -186.507, -3.97245, 0.37", "22.5949, -188.314, -3.79823, 0.44", "22.6538, -188.919, -3.70458, 0.44", "22.8188, -190.113, -3.47898, 0.44", "23.0757, -191.602, -3.20497, 0.51", "23.2339, -192.446, -3.06454, 0.22", "23.365, -193.173, -2.94376, 0.22", "23.5738, -194.293, -2.79926, 0.59", "23.9838, -196.159, -2.58344, 0.29", "24.2302, -197.009, -2.46399, 0.29", "24.8548, -198.776, -2.13967, 0.29", "25.3646, -200.148, -1.83886, 0.15", "25.6374, -200.956, -1.60996, 0.66", "25.9084, -201.923, -1.24675, 0.95", "26.3451, -203.686, -0.366993, 0.29", "26.4915, -204.233, -0.0626128, 0.37", "26.6367, -204.67, 0.223137, 0.37", "26.9261, -205.474, 0.815187, 0.37", "27.2072, -206.397, 1.54441, 0.37", "27.357, -207.096, 2.12936, 0.37", "27.4157, -207.677, 2.57097, 0.95", "27.5924, -208.859, 3.4931, 0.51", "27.7446, -209.471, 4.00794, 0.51", "27.9196, -209.968, 4.43622, 0.73", "28.2395, -210.811, 5.14222, 0.59", "28.55, -211.934, 5.95173, 1.18", "28.7032, -213.089, 6.63246, 0.59", "28.7435, -214.304, 7.18292, 0.59", "28.747, -214.858, 7.37773, 0.44", "28.7343, -215.505, 7.57749, 0.44", "28.644, -217.3, 8.01011, 0.73", "28.551, -218.475, 8.27235, 0.44", "28.5004, -218.99, 8.35885, 0.44", "28.3894, -220.174, 8.545, 0.44", "28.2302, -222.2, 8.89658, 0.66", "28.1327, -223.903, 9.21757, 0.29", "28.0888, -224.921, 9.43937, 0.29", "28.0342, -226.083, 9.72581, 1.03", "27.9089, -227.878, 10.1952, 0.37", "27.8713, -228.313, 10.3104, 0.37", "27.8433, -228.797, 10.4359, 0.37", "27.8085, -230.061, 10.8048, 1.03", "27.8214, -231.157, 11.1096, 0.29", "27.8482, -231.733, 11.2878, 0.29", "27.9547, -232.664, 11.5626, 0.51", "28.154, -233.883, 11.9169, 0.15", "28.2791, -234.445, 12.07, 0.88", "28.7024, -236.016, 12.4497, 0.15", "28.8619, -236.607, 12.591, 0.15", "28.9253, -236.876, 12.6572, 0.37", "29.0168, -237.377, 12.7723, 0.22", "29.0896, -237.944, 12.8825, 0.59", "29.2093, -239.014, 13.0563, 0.22", "29.3139, -240.156, 13.2828, 0.88", "29.3715, -240.819, 13.4043, 0.15", "29.4746, -242.088, 13.6426, 0.66", "29.5631, -243.205, 13.8612, 0.15", "29.6262, -244.065, 14.0337, 0.81", "29.7457, -245.558, 14.3257, 0.15" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "3.4279, -117.24, -13.3251, 0.44", "3.72467, -118.638, -13.7977, 0.44", "3.93739, -120.191, -14.36, 0.44", "4.10364, -122.121, -15.0395, 0.44", "4.15275, -122.863, -15.3294, 0.44", "4.18944, -123.803, -15.6905, 0.44", "4.2066, -124.429, -15.919, 0.59", "4.25965, -125.955, -16.4269, 0.44", "4.28823, -127.042, -16.753, 0.59", "4.36312, -128.971, -17.2589, 0.37", "4.45289, -130.575, -17.6459, 0.44", "4.5655, -132.169, -17.941, 0.95", "4.78165, -134.5, -18.2349, 0.37", "4.86868, -135.244, -18.2798, 0.37", "5.04253, -136.61, -18.2825, 0.37", "5.13733, -137.436, -18.2159, 1.18", "5.29998, -139.096, -17.9719, 0.88", "5.39797, -140.807, -17.6312, 0.37", "5.41059, -142.107, -17.3655, 0.37", "5.40295, -143.656, -17.0502, 0.59", "5.40232, -145.363, -16.7268, 0.44", "5.46818, -147.117, -16.4709, 0.59", "5.57154, -148.539, -16.3839, 0.59", "5.69884, -149.853, -16.4683, 0.59", "5.73943, -150.22, -16.5463, 0.59", "5.90617, -151.274, -16.9409, 0.59", "6.17996, -152.503, -17.5554, 0.44", "6.43315, -153.497, -18.0954, 0.44", "6.81969, -154.975, -18.8333, 0.73", "7.02851, -155.802, -19.169, 0.73", "7.17692, -156.496, -19.4144, 0.73", "7.35777, -157.559, -19.7265, 0.73", "7.50022, -158.624, -19.9441, 0.81", "7.69843, -160.197, -20.1745, 0.73", "7.869, -161.623, -20.3446, 0.95", "8.07433, -163.395, -20.5989, 0.66", "8.21984, -164.572, -20.7976, 0.66", "8.48373, -166.436, -21.1457, 0.59", "8.65754, -167.538, -21.3698, 0.59", "8.75328, -168.185, -21.5029, 0.73", "8.89756, -169.309, -21.7529, 0.73", "9.03154, -170.398, -21.9962, 0.73", "9.11451, -171.151, -22.1562, 0.73", "9.22568, -172.127, -22.3181, 0.73", "9.44864, -174.242, -22.584, 0.66", "9.534, -175.537, -22.7284, 0.66", "9.54791, -176.356, -22.81, 0.66", "9.52234, -177.865, -22.9607, 0.44", "9.52287, -179.507, -23.1202, 0.73", "9.58277, -181.027, -23.2599, 1.03", "9.76076, -183.08, -23.4452, 0.59", "9.89097, -184.383, -23.562, 0.59", "9.95521, -184.989, -23.621, 0.66", "10.1224, -186.548, -23.7897, 0.88", "10.2235, -187.623, -23.913, 1.1", "10.3895, -188.724, -23.9565, 1.32" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_108",
    "id" : "dend_108",
    "points3d" : [ "18.4435, -159.676, 15.8828, 0.44", "18.1939, -160.296, 15.093, 0.44", "17.8034, -161.063, 14.0959, 0.73", "17.4748, -161.683, 13.3158, 0.37", "17.2623, -162.1, 12.8136, 0.66", "16.7849, -163.149, 11.605, 0.66", "16.5965, -163.637, 11.0681, 0.66", "16.2299, -164.702, 10.0238, 0.66", "16.0605, -165.284, 9.54173, 0.44", "15.9813, -165.596, 9.34201, 0.44", "15.8375, -166.327, 8.97654, 0.44", "15.7384, -166.955, 8.7661, 0.66", "15.5139, -168.255, 8.45792, 0.66", "15.2819, -169.373, 8.23942, 0.95", "14.8417, -170.984, 7.92365, 0.44", "14.6767, -171.482, 7.82673, 0.44", "14.3379, -172.429, 7.64539, 0.44", "13.7905, -173.974, 7.35343, 0.81", "13.337, -175.345, 7.04454, 0.44", "13.0484, -176.244, 6.80565, 0.66", "12.8166, -177.064, 6.55898, 0.95", "12.54, -178.316, 6.15056, 0.22", "12.3934, -179.377, 5.77599, 0.88", "12.3187, -180.89, 5.23476, 0.29", "12.3212, -181.103, 5.16112, 0.66", "12.3669, -182.264, 4.76527, 0.29", "12.3741, -183.002, 4.5202, 0.29", "12.3422, -183.442, 4.3733, 0.29", "12.2119, -184.298, 4.10101, 0.29", "11.9851, -185.217, 3.83153, 0.29", "11.6983, -185.963, 3.61354, 1.32", "10.4007, -188.347, 2.89993, 0.07", "9.71043, -189.363, 2.59208, 0.29", "9.16348, -190.026, 2.39494, 0.59", "8.29527, -190.915, 2.12736, 1.32", "6.91011, -192.158, 1.77356, 0.51", "5.4284, -193.354, 1.4478, 0.22", "4.59111, -193.986, 1.30134, 0.37", "3.55131, -194.819, 1.12263, 0.66", "2.63897, -195.611, 0.953586, 0.37", "2.02478, -196.211, 0.81093, 1.18", "1.42704, -196.913, 0.630497, 0.73", "0.792476, -197.811, 0.410723, 1.32", "0.109, -198.958, 0.13735, 0.29", "-0.188862, -199.542, -0.032216, 0.73", "-0.660993, -200.615, -0.430158, 0.37", "-1.13904, -201.933, -1.02216, 0.15", "-1.47851, -202.912, -1.50515, 0.15", "-1.73538, -203.708, -1.93303, 1.03", "-2.0647, -205.054, -2.68243, 1.03", "-2.28632, -206.165, -3.37214, 0.51", "-2.34148, -206.936, -3.91801, 0.51" ],
    "parent" : "dend_102",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_103",
    "id" : "dend_103",
    "points3d" : [ "18.4435, -159.676, 15.8828, 0.81", "19.199, -160.838, 16.0068, 0.81", "19.4889, -161.291, 16.067, 0.73", "19.703, -161.662, 16.1274, 0.73", "20.0536, -162.338, 16.2325, 0.95", "20.5071, -163.185, 16.3099, 1.18", "21.5353, -164.996, 16.4047, 0.44", "21.7532, -165.418, 16.4291, 0.44", "22.3013, -166.481, 16.4857, 1.1", "23.1536, -168.082, 16.5565, 0.15", "23.8281, -169.276, 16.5845, 0.81", "24.3038, -170.087, 16.5601, 1.1" ],
    "parent" : "dend_102",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "10.3895, -188.724, -23.9565, 0.51", "10.1854, -190.616, -24.4261, 0.51", "10.0473, -192.007, -24.7819, 0.66", "9.99739, -192.594, -24.9202, 0.81", "9.8946, -193.788, -25.1604, 0.81", "9.78081, -194.907, -25.3337, 0.95", "9.67095, -196.035, -25.4669, 0.37", "9.63967, -196.895, -25.5303, 0.81", "9.62884, -197.671, -25.5416, 0.44", "9.58998, -198.617, -25.4937, 0.81", "9.52924, -199.509, -25.3914, 0.59", "9.43868, -200.66, -25.2304, 0.88", "9.37435, -201.844, -25.1015, 0.44", "9.35111, -202.837, -25.0239, 0.59", "9.36812, -203.999, -24.9684, 0.59", "9.45, -205.589, -24.9363, 0.59", "9.51375, -206.492, -24.9324, 0.59", "9.59591, -208.172, -24.9553, 0.44", "9.63118, -209.286, -24.9898, 0.44", "9.64336, -210.354, -25.0472, 0.44", "9.63195, -211.417, -25.1326, 0.66", "9.60571, -212.57, -25.2381, 1.18", "9.51368, -214.475, -25.4171, 0.44", "9.41219, -215.443, -25.507, 0.44", "9.17088, -216.874, -25.6675, 1.18", "8.89109, -218.089, -25.8344, 0.66" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "10.3895, -188.724, -23.9565, 0.81", "11.5059, -189.541, -23.8352, 0.81", "12.3138, -190.117, -23.7764, 0.81", "13.083, -190.672, -23.7964, 0.88", "13.9819, -191.314, -23.9062, 0.59", "15.0805, -192.105, -24.092, 0.66", "16.2972, -192.999, -24.3273, 0.29", "17.1984, -193.657, -24.5398, 1.1", "18.5249, -194.61, -24.8375, 0.29", "19.5584, -195.361, -25.0601, 0.37", "20.0464, -195.751, -25.1497, 0.51", "20.6781, -196.308, -25.2309, 1.1", "21.687, -197.245, -25.2758, 0.37", "22.9457, -198.477, -25.1057, 0.37", "23.4862, -199.001, -24.9383, 0.66", "24.4062, -199.881, -24.5146, 0.29", "24.8812, -200.321, -24.2654, 0.29", "25.3472, -200.75, -23.9847, 0.29", "25.8952, -201.251, -23.6325, 0.29", "26.8325, -202.09, -23.0387, 1.03", "27.9354, -203.029, -22.3362, 0.44", "28.4044, -203.419, -22.0254, 0.73", "29.1461, -204.089, -21.4934, 0.44", "29.6002, -204.575, -21.1044, 0.73", "30.3307, -205.55, -20.3915, 0.44", "30.6621, -206.095, -20.0288, 0.51", "31.1634, -207.007, -19.4693, 0.44", "31.6455, -207.886, -18.952, 0.51", "32.3387, -209.094, -18.2646, 0.66", "33.1683, -210.502, -17.4945, 0.37", "33.6595, -211.295, -17.1002, 0.37", "34.2906, -212.248, -16.6513, 0.37", "34.8587, -212.992, -16.3176, 0.37", "35.5075, -213.729, -15.9894, 0.73", "35.847, -214.065, -15.8418, 0.73", "36.2962, -214.467, -15.6307, 0.81", "37.3106, -215.331, -15.0701, 0.22", "38.2524, -216.137, -14.5063, 0.51", "38.7503, -216.58, -14.1863, 0.51", "39.4081, -217.209, -13.7606, 0.51", "40.0111, -217.798, -13.3835, 0.29", "40.9824, -218.723, -12.8368, 0.81", "41.5098, -219.183, -12.5861, 0.81", "41.922, -219.532, -12.3902, 1.03", "42.9572, -220.39, -11.8331, 0.15", "43.8036, -221.088, -11.357, 0.15", "44.5884, -221.73, -10.896, 0.22", "45.4333, -222.393, -10.4362, 0.44", "46.5323, -223.197, -9.85769, 0.44", "47.6576, -223.968, -9.31584, 0.66", "48.1266, -224.28, -9.11305, 0.95", "49.4905, -225.266, -8.60643, 0.15", "50.4021, -225.973, -8.33647, 0.15", "51.2403, -226.629, -8.16443, 0.29", "52.2309, -227.36, -8.04251, 0.29", "53.1105, -227.933, -7.9502, 0.29", "54.3424, -228.648, -7.70979, 0.29", "55.0701, -229.044, -7.50044, 0.29", "55.5178, -229.298, -7.31973, 0.29", "55.901, -229.519, -7.14903, 0.29", "56.6752, -229.981, -6.79494, 0.66", "58.0932, -230.863, -6.23754, 0.29", "58.8131, -231.333, -5.99967, 0.29", "59.9019, -232.105, -5.70874, 0.59", "60.636, -232.676, -5.55652, 0.59", "61.4548, -233.353, -5.43491, 1.18", "63.3815, -234.993, -5.26295, 0.22", "63.6868, -235.252, -5.26208, 1.03", "64.4235, -235.844, -5.27834, 0.66", "65.0498, -236.296, -5.31538, 0.66", "65.7039, -236.702, -5.37233, 0.66", "66.6647, -237.185, -5.46162, 0.95", "67.7345, -237.607, -5.52276, 0.66", "68.7994, -237.941, -5.50036, 0.29", "70.1821, -238.325, -5.38947, 0.29", "71.157, -238.591, -5.26504, 0.29", "72.1385, -238.885, -5.08849, 0.51", "73.6609, -239.399, -4.73221, 0.51", "75.1814, -239.992, -4.31066, 0.29", "76.3028, -240.537, -3.94554, 0.51", "76.8675, -240.886, -3.72381, 0.51", "77.6397, -241.47, -3.38624, 0.73", "78.0821, -241.852, -3.17118, 0.95", "79.1579, -242.852, -2.6139, 0.37", "79.9517, -243.635, -2.17108, 0.29", "80.7041, -244.357, -1.73738, 0.29", "81.6059, -245.212, -1.19639, 0.59", "82.7297, -246.278, -0.482289, 0.22", "83.0794, -246.615, -0.245104, 0.59", "83.8314, -247.354, 0.299568, 0.22", "84.1703, -247.666, 0.508973, 0.22" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_105",
    "id" : "dend_105",
    "points3d" : [ "24.3038, -170.087, 16.5601, 0.73", "24.1409, -171.154, 17.0167, 0.73", "24.1559, -172.799, 17.6776, 1.25", "24.3437, -174.048, 18.0467, 0.59", "24.5081, -174.703, 18.2218, 0.59", "24.8415, -175.762, 18.5426, 1.1", "25.1094, -176.554, 18.8597, 1.1", "25.7431, -177.973, 19.5139, 0.66", "26.5508, -179.424, 20.2344, 0.51", "27.0757, -180.26, 20.69, 1.03", "27.9758, -181.703, 21.5246, 1.69", "29.148, -183.73, 22.8076, 0.66", "29.5191, -184.447, 23.2817, 0.66", "29.8695, -185.167, 23.7657, 0.73", "30.397, -186.349, 24.5565, 1.1", "30.8189, -187.414, 25.1391, 0.59", "31.1323, -188.316, 25.493, 0.59", "31.2999, -189.028, 25.6881, 0.88", "31.4367, -190.162, 25.9632, 0.88", "31.5008, -191.247, 26.1809, 0.51", "31.515, -192.072, 26.274, 0.51", "31.4991, -192.893, 26.3244, 0.51", "31.3931, -194.674, 26.3507, 0.88", "31.2677, -195.861, 26.3327, 0.44", "31.1264, -196.762, 26.2904, 0.44", "30.8816, -198.227, 26.1644, 0.81", "30.7071, -199.532, 26.0212, 0.81", "30.6987, -199.827, 25.9786, 0.81", "30.7548, -200.291, 25.9174, 0.81", "30.854, -200.743, 25.8884, 0.81", "31.0881, -201.541, 25.8887, 0.66", "31.4163, -202.642, 25.9689, 0.66", "31.8429, -204.259, 26.1142, 0.66", "32.1256, -205.536, 26.1972, 0.66", "32.3474, -206.805, 26.2915, 0.66", "32.4876, -207.93, 26.4331, 0.66", "32.6074, -209.763, 26.7407, 0.81", "32.5862, -210.971, 26.9864, 0.95", "32.4611, -212.228, 27.2918, 0.44", "32.3, -213.59, 27.62, 0.81", "32.1266, -215.178, 28.001, 0.81", "32.0742, -215.705, 28.111, 0.59", "32.02, -216.54, 28.2325, 0.59", "31.938, -218.006, 28.347, 0.51", "31.8599, -219.202, 28.368, 0.51", "31.7951, -220.25, 28.3292, 0.51", "31.749, -221.375, 28.286, 0.51", "31.6853, -222.969, 28.3016, 0.51", "31.6148, -224.557, 28.3817, 0.51", "31.5223, -225.845, 28.4956, 0.51", "31.4313, -227.223, 28.6932, 0.51", "31.4102, -228.48, 28.9469, 0.51", "31.4377, -229.353, 29.1554, 0.73", "31.4991, -230.065, 29.3445, 0.73", "31.7924, -232.233, 29.9331, 0.29", "32.0764, -233.741, 30.3093, 0.66", "32.4184, -235.215, 30.6176, 0.29", "32.4986, -235.5, 30.6681, 0.88", "32.7717, -236.31, 30.7805, 0.88", "33.1927, -237.45, 30.9149, 1.18", "33.4412, -238.099, 30.9702, 1.18", "33.954, -239.563, 31.027, 0.51", "34.2966, -240.533, 31.0136, 0.66", "34.7623, -241.711, 30.9965, 0.66", "35.157, -242.696, 30.9657, 0.66", "35.7149, -244.045, 30.9054, 0.66", "36.3796, -245.661, 30.8192, 0.66", "36.9366, -246.984, 30.7291, 0.66", "37.4667, -248.264, 30.665, 0.95" ],
    "parent" : "dend_103",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_104",
    "id" : "dend_104",
    "points3d" : [ "24.3038, -170.087, 16.5601, 0.88", "25.1917, -170.052, 16.6613, 0.88", "26.4301, -169.936, 16.7611, 0.15", "26.9351, -169.856, 16.7856, 0.44", "27.7681, -169.685, 16.8058, 0.29", "28.116, -169.582, 16.8087, 0.29", "28.6273, -169.43, 16.8131, 0.29", "29.0915, -169.258, 16.8032, 0.29", "29.4237, -169.048, 16.7275, 0.29", "29.5666, -168.877, 16.6782, 0.59", "29.8944, -168.007, 16.4789, 0.22" ],
    "parent" : "dend_103",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "8.89109, -218.089, -25.8344, 0.44", "9.18643, -219.278, -25.8047, 0.44", "9.49366, -220.757, -25.7804, 0.44", "9.70962, -222.024, -25.7756, 0.44", "9.8311, -223.162, -25.7784, 0.44", "9.91112, -224.309, -25.8051, 0.81", "9.96649, -225.759, -25.8833, 0.51", "9.94806, -227.45, -26.0191, 0.37", "9.90179, -228.955, -26.1741, 0.51", "9.83178, -230.66, -26.3792, 1.03", "9.72534, -232.105, -26.5302, 0.51", "9.59499, -233.439, -26.6502, 0.37", "9.51087, -234.274, -26.7317, 0.37", "9.45417, -234.856, -26.7879, 0.37", "9.34257, -235.913, -26.8871, 0.59", "9.18618, -237.406, -27.0134, 0.73", "9.05432, -238.37, -27.1037, 0.73", "8.83394, -239.861, -27.2617, 0.73", "8.60514, -241.314, -27.4501, 0.51", "8.33526, -242.913, -27.6551, 0.37", "8.12079, -244.078, -27.7958, 0.59", "7.83092, -245.493, -27.9586, 0.29", "7.62605, -246.484, -28.0218, 0.29", "7.43389, -247.45, -28.0073, 0.29", "7.22842, -248.67, -27.9554, 0.29", "7.11823, -249.664, -27.9099, 0.37", "7.06315, -250.633, -27.861, 0.66", "7.06339, -251.824, -27.7908, 0.44", "7.09238, -252.668, -27.77, 0.44", "7.18609, -253.965, -27.8178, 0.44", "7.33087, -255.231, -27.8975, 0.44", "7.40352, -255.711, -27.9265, 0.73", "7.45483, -256.018, -27.9295, 0.51", "7.57162, -256.698, -27.9185, 0.81", "7.93816, -258.653, -27.8992, 0.37", "8.16794, -259.799, -27.873, 0.37", "8.38236, -260.778, -27.8639, 1.03", "8.77952, -262.335, -27.8677, 0.22", "9.08499, -263.376, -27.8791, 0.51", "9.59491, -264.908, -27.9393, 0.29", "9.80658, -265.517, -27.9963, 0.29", "10.0702, -266.321, -28.1221, 0.29", "10.3109, -267.122, -28.2735, 0.29", "10.5604, -268.031, -28.472, 0.59", "10.8026, -268.979, -28.6551, 0.81", "11.1629, -270.398, -28.9025, 0.51", "11.2916, -270.915, -28.9911, 0.51", "11.4534, -271.561, -29.0944, 0.51", "11.6051, -272.114, -29.1746, 0.66", "12.1889, -274.221, -29.4306, 0.37", "12.3446, -274.894, -29.4663, 0.37", "12.4309, -275.57, -29.4838, 0.59", "12.4525, -276.614, -29.5072, 0.22", "12.4217, -277.095, -29.5159, 0.59", "12.2627, -278.3, -29.5302, 0.44", "11.9517, -279.902, -29.5363, 1.18", "11.5283, -282.093, -29.5153, 0.37", "11.295, -283.431, -29.4937, 0.37", "11.1824, -284.028, -29.4815, 0.37", "10.9634, -285.132, -29.4371, 0.37", "10.7201, -286.476, -29.3761, 0.66", "10.4935, -287.937, -29.3084, 0.51", "10.3443, -289.041, -29.2264, 1.1", "10.1095, -290.89, -29.0883, 0.44", "9.9259, -292.22, -28.9857, 0.44", "9.81308, -292.93, -28.9299, 0.44", "9.66586, -293.719, -28.873, 0.44", "9.51813, -294.353, -28.8466, 0.66", "9.30308, -295.305, -28.8023, 0.95" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "8.89109, -218.089, -25.8344, 0.51", "8.60106, -219.182, -26.0168, 0.51", "8.35593, -220.281, -26.3034, 0.51", "8.18154, -221.209, -26.5812, 0.29", "7.98458, -222.122, -26.8806, 0.59", "7.7073, -223.255, -27.2756, 0.22", "7.51358, -223.989, -27.5315, 0.66", "7.19846, -225.084, -27.969, 0.22", "7.0638, -225.502, -28.1489, 0.59", "6.76001, -226.352, -28.5172, 0.59", "6.4423, -227.213, -28.8968, 0.29", "6.16673, -227.941, -29.1916, 0.88", "5.54353, -229.47, -29.7363, 0.37", "5.34668, -229.934, -29.8997, 0.37", "5.21311, -230.269, -30.0217, 0.37", "4.89217, -231.105, -30.3231, 0.51", "4.55864, -231.863, -30.5846, 0.22", "4.2514, -232.455, -30.7906, 0.81", "3.61031, -233.552, -31.1842, 0.07", "3.22761, -234.163, -31.4102, 0.66", "2.47317, -235.329, -31.8353, 0.22", "1.77978, -236.389, -32.2147, 0.29", "1.41394, -236.966, -32.4295, 0.29", "0.946954, -237.704, -32.6961, 0.29", "0.617298, -238.186, -32.8505, 0.29", "0.407631, -238.485, -32.9443, 0.29", "0.0402839, -239.062, -33.1195, 0.29", "-0.147954, -239.389, -33.2054, 0.29", "-0.488354, -240.033, -33.3611, 0.29", "-0.927071, -240.907, -33.5593, 0.29", "-1.49853, -242.182, -33.8436, 0.59", "-1.98317, -243.3, -34.0687, 0.29", "-2.4889, -244.408, -34.2897, 0.44", "-3.06051, -245.628, -34.5372, 0.07", "-3.23656, -246.016, -34.6156, 0.07", "-3.73024, -247.124, -34.8285, 0.81", "-4.47996, -248.735, -35.1723, 0.22", "-4.99713, -249.819, -35.4537, 0.29", "-5.21629, -250.263, -35.6183, 0.29", "-5.50355, -250.82, -35.8838, 0.29", "-5.87683, -251.51, -36.267, 1.03", "-6.56874, -252.75, -37.0758, 0.22", "-7.12508, -253.766, -37.8308, 0.37", "-7.64595, -254.656, -38.5349, 0.95", "-8.27648, -255.563, -39.3026, 0.22", "-8.77507, -256.195, -39.9855, 0.22", "-9.30893, -256.8, -40.761, 0.22", "-9.85897, -257.393, -41.572, 0.51", "-10.1519, -257.723, -42.0278, 0.81", "-10.5215, -258.221, -42.6186, 0.95", "-11.7759, -260.289, -44.8421, 0.51", "-11.8936, -260.544, -45.0768, 0.51", "-12.1719, -261.27, -45.6917, 0.15", "-12.3291, -261.787, -46.0786, 0.15", "-12.6793, -263.178, -46.9961, 0.15", "-12.9239, -264.23, -47.5336, 0.51", "-13.2128, -265.147, -47.7279, 0.88" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_107",
    "id" : "dend_107",
    "points3d" : [ "37.4667, -248.264, 30.665, 1.25", "37.4607, -249.519, 30.8346, 1.25", "37.4507, -249.935, 30.8948, 1.25", "37.365, -250.97, 31.0472, 0.95", "37.2767, -251.653, 31.1467, 0.73", "37.1715, -252.365, 31.2433, 0.73", "37.1077, -252.882, 31.31, 0.51", "37.069, -253.31, 31.3596, 0.51", "37.0881, -253.993, 31.3848, 0.51", "37.1213, -254.341, 31.3704, 0.73", "37.1936, -255.168, 31.2897, 0.59", "37.2359, -255.769, 31.2049, 0.59", "37.2636, -256.742, 31.0738, 0.81", "37.2106, -257.895, 30.9289, 0.95", "37.0493, -259.114, 30.7913, 0.59", "36.889, -259.848, 30.73, 0.59", "36.6436, -260.732, 30.6806, 0.95", "36.2778, -261.985, 30.6482, 0.59", "35.9751, -263.065, 30.668, 0.59", "35.8519, -263.802, 30.7348, 0.59", "35.8499, -264.261, 30.7806, 0.59", "35.9204, -265.094, 30.8431, 0.29", "36.0403, -266.152, 30.8771, 0.29", "36.135, -266.863, 30.8612, 0.59", "36.2772, -268.004, 30.7688, 0.81", "36.3902, -268.998, 30.6461, 0.81", "36.4233, -269.808, 30.5059, 0.81", "36.3619, -270.637, 30.3611, 0.59", "36.1277, -271.959, 30.1339, 0.66", "35.9839, -272.589, 30.0413, 0.66", "35.744, -273.575, 29.9369, 0.81", "35.5716, -274.425, 29.9096, 0.44", "35.4226, -275.42, 29.9271, 0.44", "35.296, -276.16, 29.9744, 0.73", "35.1161, -276.884, 30.0391, 0.73", "34.8839, -277.685, 30.1217, 0.73", "34.6902, -278.329, 30.1916, 0.73", "34.4786, -279.162, 30.252, 0.73", "34.1316, -280.844, 30.2963, 0.88", "33.973, -281.862, 30.2827, 0.37", "33.8923, -282.525, 30.2369, 0.37", "33.7431, -283.773, 30.143, 0.37", "33.5245, -285.19, 30.0914, 0.37", "33.2679, -286.685, 30.0806, 1.03", "33.0135, -288.212, 30.1072, 0.37", "32.789, -289.519, 30.1536, 0.66", "32.5436, -290.947, 30.2294, 0.29", "32.2103, -293.032, 30.4313, 0.66", "32.1039, -293.62, 30.5324, 0.66", "32.0207, -293.979, 30.6227, 0.66", "31.6926, -295.15, 30.9835, 0.66", "31.3393, -296.473, 31.4327, 0.22", "31.085, -297.604, 31.7732, 0.59", "30.8401, -298.794, 32.0987, 0.44", "30.4765, -300.247, 32.498, 0.44", "30.2375, -301.166, 32.7336, 0.44", "30.0294, -301.955, 32.9058, 0.44", "29.8139, -302.981, 33.0501, 0.44", "29.7005, -303.879, 33.0916, 0.44", "29.6654, -305.171, 33.0356, 0.95", "29.7184, -306.332, 32.8899, 0.44", "29.8058, -307.216, 32.7467, 0.29", "29.9728, -308.471, 32.4842, 0.59", "30.056, -308.958, 32.3745, 0.59", "30.1885, -309.569, 32.2129, 0.59", "30.382, -310.287, 32.0118, 0.37", "30.7125, -311.623, 31.6764, 0.66", "30.9522, -312.762, 31.4885, 0.29", "31.0481, -313.224, 31.4363, 0.66", "31.3321, -314.359, 31.3542, 0.22", "31.5825, -315.284, 31.3061, 0.59", "31.8456, -316.211, 31.2655, 0.66", "32.2779, -317.586, 31.2277, 0.81", "32.4897, -318.139, 31.2095, 0.81", "32.9255, -319.092, 31.1596, 0.37", "33.3206, -319.857, 31.0788, 0.37", "33.8511, -320.779, 30.8951, 0.51", "34.4466, -321.667, 30.6066, 0.51", "35.0459, -322.521, 30.2692, 0.81", "35.5391, -323.267, 29.9546, 0.51", "36.0033, -324.009, 29.6378, 0.81", "36.5366, -324.917, 29.2578, 0.81", "37.4676, -326.586, 28.5219, 0.44", "37.8632, -327.364, 28.1741, 0.22", "38.2737, -328.267, 27.7901, 0.22", "38.5095, -328.821, 27.5573, 0.22", "39.0523, -330.1, 27.0822, 0.22" ],
    "parent" : "dend_105",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_106",
    "id" : "dend_106",
    "points3d" : [ "37.4667, -248.264, 30.665, 0.73", "38.1524, -248.772, 30.7646, 0.73", "39.1025, -249.457, 30.8322, 0.59", "39.3983, -249.669, 30.8428, 0.81", "40.4246, -250.451, 30.9252, 0.44", "41.285, -251.169, 31.0154, 0.44", "41.9631, -251.797, 31.0975, 0.44", "42.7566, -252.722, 31.247, 0.73", "43.3226, -253.515, 31.3266, 0.51", "44.0134, -254.564, 31.4066, 0.51", "44.4135, -255.191, 31.456, 0.51", "44.8657, -255.876, 31.5243, 0.22", "45.6597, -257.087, 31.6605, 1.32", "46.572, -258.534, 31.8375, 0.29", "46.9294, -259.112, 31.8951, 0.29", "47.4994, -260.103, 31.9783, 0.59", "47.9817, -261.061, 32.0806, 0.29", "48.2023, -261.617, 32.1631, 0.29", "48.4501, -262.39, 32.2932, 0.29", "48.6336, -263.037, 32.4159, 0.29", "48.9879, -264.34, 32.6373, 1.54", "49.4189, -266.014, 32.8969, 1.1", "49.7653, -267.496, 33.1187, 0.37", "50.0612, -268.728, 33.2929, 0.37", "50.405, -269.885, 33.4409, 0.37", "50.6046, -270.388, 33.4955, 0.37", "51.0306, -271.36, 33.6128, 0.37", "51.7443, -272.947, 33.8397, 0.59", "52.0013, -273.486, 33.9224, 0.59", "52.6509, -274.815, 34.2019, 0.29", "53.4462, -276.367, 34.5846, 0.59", "54.1544, -277.668, 34.9567, 0.37", "54.6156, -278.46, 35.2177, 0.37", "55.0444, -279.126, 35.5035, 0.37", "55.457, -279.768, 35.8471, 0.88", "56.1916, -281.019, 36.5442, 0.22", "56.6114, -281.763, 36.9284, 0.22", "56.8931, -282.262, 37.1499, 0.59", "57.5504, -283.447, 37.635, 0.81", "58.2541, -284.626, 38.0657, 1.03", "59.4417, -286.319, 38.602, 0.29", "60.2803, -287.318, 38.9157, 0.59", "60.9681, -288.061, 39.123, 0.59", "61.7521, -288.868, 39.3145, 0.44", "62.6706, -289.832, 39.4739, 0.44", "63.6702, -290.881, 39.6166, 0.44", "64.351, -291.583, 39.724, 0.44", "65.1493, -292.451, 39.8667, 0.44", "65.8586, -293.336, 40.0106, 0.44", "66.2418, -293.983, 40.1047, 0.44", "66.6629, -295.035, 40.2284, 0.44", "66.9203, -296.027, 40.3147, 0.29", "67.0592, -297.083, 40.3739, 0.29", "67.1188, -297.814, 40.4111, 0.29", "67.1371, -298.663, 40.4581, 0.29", "67.0959, -299.789, 40.5227, 0.29", "67.0048, -300.41, 40.5567, 0.29", "66.6804, -301.591, 40.6035, 0.29" ],
    "parent" : "dend_105",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "9.30308, -295.305, -28.8023, 0.37", "9.61698, -296.989, -28.4869, 0.37", "9.80393, -298.097, -28.2635, 0.37", "9.89042, -298.696, -28.1508, 0.51", "10.0213, -299.467, -27.9953, 0.51", "10.2348, -300.525, -27.7778, 0.51", "10.4828, -301.649, -27.5484, 0.22", "10.721, -302.66, -27.3753, 0.22", "11.0281, -304.039, -27.1358, 0.95", "11.3123, -305.533, -26.8232, 0.22", "11.39, -306.056, -26.6967, 0.22", "11.4513, -306.589, -26.5655, 0.51", "11.6103, -308.432, -26.1884, 0.29", "11.6348, -309.301, -26.0659, 0.29", "11.5891, -310.477, -25.9335, 0.81", "11.4491, -311.903, -25.8162, 0.22", "11.1806, -313.937, -25.7301, 0.22", "10.9732, -315.331, -25.7156, 0.81", "10.7414, -316.823, -25.7562, 0.22", "10.6192, -317.612, -25.809, 0.22", "10.4481, -318.582, -25.9093, 0.95", "10.1641, -320.018, -26.0404, 0.29", "10.0668, -320.518, -26.0581, 0.29", "9.95913, -321.222, -26.0377, 0.29", "9.89336, -321.895, -25.9737, 0.29", "9.83034, -322.541, -25.8943, 0.44", "9.72861, -323.543, -25.7274, 0.15", "9.52534, -325.166, -25.4164, 0.44", "9.24457, -326.994, -25.0789, 0.15", "9.02625, -328.364, -24.8361, 0.81", "8.93181, -329.032, -24.7181, 0.81", "8.80953, -330.103, -24.5269, 0.81", "8.58405, -332.175, -24.1705, 0.15", "8.48016, -333.117, -23.9847, 0.15", "8.33854, -334.121, -23.7422, 0.44", "8.05363, -335.739, -23.3259, 0.22", "7.9214, -336.395, -23.1123, 0.44", "7.74996, -337.042, -22.8212, 0.81", "7.49228, -337.818, -22.3731, 0.44", "6.95513, -339.202, -21.4824, 0.22", "6.66072, -339.802, -21.0469, 0.22", "6.13188, -340.672, -20.3451, 0.81", "5.39039, -341.79, -19.4022, 0.22", "5.10558, -342.215, -19.0224, 0.37" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "9.30308, -295.305, -28.8023, 0.22", "7.70447, -295.396, -29.1379, 0.22", "6.41874, -295.513, -29.3333, 0.22", "5.60367, -295.663, -29.4295, 0.22", "4.7227, -295.88, -29.5211, 0.22", "3.51891, -296.225, -29.6343, 0.22", "2.18156, -296.646, -29.7469, 0.22", "0.6709, -297.215, -29.7612, 0.22", "-1.15248, -297.99, -29.6944, 0.22", "-1.73128, -298.259, -29.6618, 0.22", "-2.31742, -298.557, -29.6222, 0.44", "-3.31849, -299.129, -29.5366, 0.22", "-4.19708, -299.674, -29.4362, 0.22", "-5.11265, -300.233, -29.2885, 0.22", "-5.69444, -300.521, -29.1575, 0.44" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_119", "dend_116", "dend_109", "dend_42", "dend_3", "dend_0", "dend_121", "dend_120", "dend_118", "dend_117", "dend_115", "dend_110", "dend_50", "dend_43", "dend_5", "dend_4", "dend_2", "dend_1", "dend_129", "dend_122", "dend_114", "dend_111", "dend_66", "dend_51", "dend_47", "dend_44", "dend_7", "dend_6", "dend_131", "dend_130", "dend_124", "dend_123", "dend_113", "dend_112", "dend_70", "dend_67", "dend_65", "dend_52", "dend_49", "dend_48", "dend_46", "dend_45", "dend_13", "dend_8", "dend_128", "dend_125", "dend_82", "dend_71", "dend_69", "dend_68", "dend_56", "dend_53", "dend_39", "dend_14", "dend_12", "dend_9", "dend_127", "dend_126", "dend_86", "dend_83", "dend_77", "dend_72", "dend_62", "dend_57", "dend_55", "dend_54", "dend_41", "dend_40", "dend_36", "dend_15", "dend_11", "dend_10", "dend_88", "dend_87", "dend_85", "dend_84", "dend_79", "dend_78", "dend_76", "dend_73", "dend_64", "dend_63", "dend_61", "dend_58", "dend_38", "dend_37", "dend_33", "dend_16", "dend_92", "dend_89", "dend_81", "dend_80", "dend_75", "dend_74", "dend_60", "dend_59", "dend_35", "dend_34", "dend_18", "dend_17", "dend_94", "dend_93", "dend_91", "dend_90", "dend_32", "dend_19", "dend_96", "dend_95", "dend_21", "dend_20", "dend_100", "dend_97", "dend_23", "dend_22", "dend_102", "dend_101", "dend_99", "dend_98", "dend_31", "dend_24", "dend_108", "dend_103", "dend_26", "dend_25", "dend_105", "dend_104", "dend_28", "dend_27", "dend_107", "dend_106", "dend_30", "dend_29" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_119", "dend_116", "dend_109", "dend_42", "dend_3", "dend_0", "dend_121", "dend_120", "dend_118", "dend_117", "dend_115", "dend_110", "dend_50", "dend_43", "dend_5", "dend_4", "dend_2", "dend_1", "dend_129", "dend_122", "dend_114", "dend_111", "dend_66", "dend_51", "dend_47", "dend_44", "dend_7", "dend_6", "dend_131", "dend_130", "dend_124", "dend_123", "dend_113", "dend_112", "dend_70", "dend_67", "dend_65", "dend_52", "dend_49", "dend_48", "dend_46", "dend_45", "dend_13", "dend_8", "dend_128", "dend_125", "dend_82", "dend_71", "dend_69", "dend_68", "dend_56", "dend_53", "dend_39", "dend_14", "dend_12", "dend_9", "dend_127", "dend_126", "dend_86", "dend_83", "dend_77", "dend_72", "dend_62", "dend_57", "dend_55", "dend_54", "dend_41", "dend_40", "dend_36", "dend_15", "dend_11", "dend_10", "dend_88", "dend_87", "dend_85", "dend_84", "dend_79", "dend_78", "dend_76", "dend_73", "dend_64", "dend_63", "dend_61", "dend_58", "dend_38", "dend_37", "dend_33", "dend_16", "dend_92", "dend_89", "dend_81", "dend_80", "dend_75", "dend_74", "dend_60", "dend_59", "dend_35", "dend_34", "dend_18", "dend_17", "dend_94", "dend_93", "dend_91", "dend_90", "dend_32", "dend_19", "dend_96", "dend_95", "dend_21", "dend_20", "dend_100", "dend_97", "dend_23", "dend_22", "dend_102", "dend_101", "dend_99", "dend_98", "dend_31", "dend_24", "dend_108", "dend_103", "dend_26", "dend_25", "dend_105", "dend_104", "dend_28", "dend_27", "dend_107", "dend_106", "dend_30", "dend_29" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_119", "dend_116", "dend_109", "dend_42", "dend_3", "dend_0", "axon_0", "dend_121", "dend_120", "dend_118", "dend_117", "dend_115", "dend_110", "dend_50", "dend_43", "dend_5", "dend_4", "dend_2", "dend_1", "axon_1", "dend_129", "dend_122", "dend_114", "dend_111", "dend_66", "dend_51", "dend_47", "dend_44", "dend_7", "dend_6", "dend_131", "dend_130", "dend_124", "dend_123", "dend_113", "dend_112", "dend_70", "dend_67", "dend_65", "dend_52", "dend_49", "dend_48", "dend_46", "dend_45", "dend_13", "dend_8", "dend_128", "dend_125", "dend_82", "dend_71", "dend_69", "dend_68", "dend_56", "dend_53", "dend_39", "dend_14", "dend_12", "dend_9", "dend_127", "dend_126", "dend_86", "dend_83", "dend_77", "dend_72", "dend_62", "dend_57", "dend_55", "dend_54", "dend_41", "dend_40", "dend_36", "dend_15", "dend_11", "dend_10", "dend_88", "dend_87", "dend_85", "dend_84", "dend_79", "dend_78", "dend_76", "dend_73", "dend_64", "dend_63", "dend_61", "dend_58", "dend_38", "dend_37", "dend_33", "dend_16", "dend_92", "dend_89", "dend_81", "dend_80", "dend_75", "dend_74", "dend_60", "dend_59", "dend_35", "dend_34", "dend_18", "dend_17", "dend_94", "dend_93", "dend_91", "dend_90", "dend_32", "dend_19", "dend_96", "dend_95", "dend_21", "dend_20", "dend_100", "dend_97", "dend_23", "dend_22", "dend_102", "dend_101", "dend_99", "dend_98", "dend_31", "dend_24", "dend_108", "dend_103", "dend_26", "dend_25", "dend_105", "dend_104", "dend_28", "dend_27", "dend_107", "dend_106", "dend_30", "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_120" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_118" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_117" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_115" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_122" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_114" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_131" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_113" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_112" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_128" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_125" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_100",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_101",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_103",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_105",
    "groups" : [ ],
    "sections" : [ "dend_93" ]
  }, {
    "name" : "OneSecGrp_SectionRef_106",
    "groups" : [ ],
    "sections" : [ "dend_91" ]
  }, {
    "name" : "OneSecGrp_SectionRef_107",
    "groups" : [ ],
    "sections" : [ "dend_90" ]
  }, {
    "name" : "OneSecGrp_SectionRef_108",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_110",
    "groups" : [ ],
    "sections" : [ "dend_96" ]
  }, {
    "name" : "OneSecGrp_SectionRef_111",
    "groups" : [ ],
    "sections" : [ "dend_95" ]
  }, {
    "name" : "OneSecGrp_SectionRef_113",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_115",
    "groups" : [ ],
    "sections" : [ "dend_97" ]
  }, {
    "name" : "OneSecGrp_SectionRef_116",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_117",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_119",
    "groups" : [ ],
    "sections" : [ "dend_101" ]
  }, {
    "name" : "OneSecGrp_SectionRef_121",
    "groups" : [ ],
    "sections" : [ "dend_98" ]
  }, {
    "name" : "OneSecGrp_SectionRef_122",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_123",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_124",
    "groups" : [ ],
    "sections" : [ "dend_108" ]
  }, {
    "name" : "OneSecGrp_SectionRef_127",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_128",
    "groups" : [ ],
    "sections" : [ "dend_105" ]
  }, {
    "name" : "OneSecGrp_SectionRef_130",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_131",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_132",
    "groups" : [ ],
    "sections" : [ "dend_107" ]
  }, {
    "name" : "OneSecGrp_SectionRef_133",
    "groups" : [ ],
    "sections" : [ "dend_106" ]
  }, {
    "name" : "OneSecGrp_SectionRef_134",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_119" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_109" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_121" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_116" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_110" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_129" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_111" ]
  }, {
    "name" : "OneSecGrp_SectionRef_102",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_130" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_109",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_92" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_112",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_98",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_93",
    "groups" : [ ],
    "sections" : [ "dend_89" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_104",
    "groups" : [ ],
    "sections" : [ "dend_94" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_99",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_97",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_96",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_94",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_95",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_123" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_124" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_114",
    "groups" : [ ],
    "sections" : [ "dend_100" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_118",
    "groups" : [ ],
    "sections" : [ "dend_102" ]
  }, {
    "name" : "OneSecGrp_SectionRef_125",
    "groups" : [ ],
    "sections" : [ "dend_103" ]
  }, {
    "name" : "OneSecGrp_SectionRef_129",
    "groups" : [ ],
    "sections" : [ "dend_104" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_126" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_127" ]
  }, {
    "name" : "OneSecGrp_SectionRef_120",
    "groups" : [ ],
    "sections" : [ "dend_99" ]
  }, {
    "name" : "OneSecGrp_SectionRef_126",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_135",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88", "dend_89", "dend_90", "dend_91", "dend_92", "dend_93", "dend_94", "dend_95", "dend_96", "dend_97", "dend_98", "dend_99", "dend_100", "dend_101", "dend_102", "dend_103", "dend_104", "dend_105", "dend_106", "dend_107", "dend_108", "dend_109", "dend_110", "dend_111", "dend_112", "dend_113", "dend_114", "dend_115", "dend_116", "dend_117", "dend_118", "dend_119", "dend_120", "dend_121", "dend_122", "dend_123", "dend_124", "dend_125", "dend_126", "dend_127", "dend_128", "dend_129", "dend_130", "dend_131" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_42", "dend_42", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_66", "dend_66", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_44", "dend_44", "dend_44", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_130", "dend_130", "dend_130", "dend_130", "dend_130", "dend_130", "dend_130", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_82", "dend_82", "dend_82", "dend_82", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_56", "dend_56", "dend_56", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_14", "dend_14", "dend_14", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_86", "dend_86", "dend_86", "dend_86", "dend_83", "dend_83", "dend_83", "dend_83", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_57", "dend_57", "dend_57", "dend_57", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_58", "dend_58", "dend_58", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_16", "dend_16", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L1_SLAC_76ffc1f69e_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_119, id: dend_119, parent: soma_0
create dend_119
public dend_119
// Section: dend_116, id: dend_116, parent: soma_0
create dend_116
public dend_116
// Section: dend_109, id: dend_109, parent: soma_0
create dend_109
public dend_109
// Section: dend_42, id: dend_42, parent: soma_0
create dend_42
public dend_42
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_121, id: dend_121, parent: dend_119
create dend_121
public dend_121
// Section: dend_120, id: dend_120, parent: dend_119
create dend_120
public dend_120
// Section: dend_118, id: dend_118, parent: dend_116
create dend_118
public dend_118
// Section: dend_117, id: dend_117, parent: dend_116
create dend_117
public dend_117
// Section: dend_115, id: dend_115, parent: dend_109
create dend_115
public dend_115
// Section: dend_110, id: dend_110, parent: dend_109
create dend_110
public dend_110
// Section: dend_50, id: dend_50, parent: dend_42
create dend_50
public dend_50
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_129, id: dend_129, parent: dend_121
create dend_129
public dend_129
// Section: dend_122, id: dend_122, parent: dend_121
create dend_122
public dend_122
// Section: dend_114, id: dend_114, parent: dend_110
create dend_114
public dend_114
// Section: dend_111, id: dend_111, parent: dend_110
create dend_111
public dend_111
// Section: dend_66, id: dend_66, parent: dend_50
create dend_66
public dend_66
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_47, id: dend_47, parent: dend_43
create dend_47
public dend_47
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_131, id: dend_131, parent: dend_129
create dend_131
public dend_131
// Section: dend_130, id: dend_130, parent: dend_129
create dend_130
public dend_130
// Section: dend_124, id: dend_124, parent: dend_122
create dend_124
public dend_124
// Section: dend_123, id: dend_123, parent: dend_122
create dend_123
public dend_123
// Section: dend_113, id: dend_113, parent: dend_111
create dend_113
public dend_113
// Section: dend_112, id: dend_112, parent: dend_111
create dend_112
public dend_112
// Section: dend_70, id: dend_70, parent: dend_66
create dend_70
public dend_70
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_65, id: dend_65, parent: dend_51
create dend_65
public dend_65
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_13, id: dend_13, parent: dend_7
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_128, id: dend_128, parent: dend_124
create dend_128
public dend_128
// Section: dend_125, id: dend_125, parent: dend_124
create dend_125
public dend_125
// Section: dend_82, id: dend_82, parent: dend_70
create dend_82
public dend_82
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_69, id: dend_69, parent: dend_67
create dend_69
public dend_69
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_56, id: dend_56, parent: dend_52
create dend_56
public dend_56
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_39, id: dend_39, parent: dend_13
create dend_39
public dend_39
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_12, id: dend_12, parent: dend_8
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_127, id: dend_127, parent: dend_125
create dend_127
public dend_127
// Section: dend_126, id: dend_126, parent: dend_125
create dend_126
public dend_126
// Section: dend_86, id: dend_86, parent: dend_82
create dend_86
public dend_86
// Section: dend_83, id: dend_83, parent: dend_82
create dend_83
public dend_83
// Section: dend_77, id: dend_77, parent: dend_71
create dend_77
public dend_77
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_62, id: dend_62, parent: dend_56
create dend_62
public dend_62
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_36, id: dend_36, parent: dend_14
create dend_36
public dend_36
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_88, id: dend_88, parent: dend_86
create dend_88
public dend_88
// Section: dend_87, id: dend_87, parent: dend_86
create dend_87
public dend_87
// Section: dend_85, id: dend_85, parent: dend_83
create dend_85
public dend_85
// Section: dend_84, id: dend_84, parent: dend_83
create dend_84
public dend_84
// Section: dend_79, id: dend_79, parent: dend_77
create dend_79
public dend_79
// Section: dend_78, id: dend_78, parent: dend_77
create dend_78
public dend_78
// Section: dend_76, id: dend_76, parent: dend_72
create dend_76
public dend_76
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_61, id: dend_61, parent: dend_57
create dend_61
public dend_61
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_33, id: dend_33, parent: dend_15
create dend_33
public dend_33
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_92, id: dend_92, parent: dend_88
create dend_92
public dend_92
// Section: dend_89, id: dend_89, parent: dend_88
create dend_89
public dend_89
// Section: dend_81, id: dend_81, parent: dend_79
create dend_81
public dend_81
// Section: dend_80, id: dend_80, parent: dend_79
create dend_80
public dend_80
// Section: dend_75, id: dend_75, parent: dend_73
create dend_75
public dend_75
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_94, id: dend_94, parent: dend_92
create dend_94
public dend_94
// Section: dend_93, id: dend_93, parent: dend_92
create dend_93
public dend_93
// Section: dend_91, id: dend_91, parent: dend_89
create dend_91
public dend_91
// Section: dend_90, id: dend_90, parent: dend_89
create dend_90
public dend_90
// Section: dend_32, id: dend_32, parent: dend_18
create dend_32
public dend_32
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_96, id: dend_96, parent: dend_94
create dend_96
public dend_96
// Section: dend_95, id: dend_95, parent: dend_94
create dend_95
public dend_95
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_100, id: dend_100, parent: dend_96
create dend_100
public dend_100
// Section: dend_97, id: dend_97, parent: dend_96
create dend_97
public dend_97
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_102, id: dend_102, parent: dend_100
create dend_102
public dend_102
// Section: dend_101, id: dend_101, parent: dend_100
create dend_101
public dend_101
// Section: dend_99, id: dend_99, parent: dend_97
create dend_99
public dend_99
// Section: dend_98, id: dend_98, parent: dend_97
create dend_98
public dend_98
// Section: dend_31, id: dend_31, parent: dend_23
create dend_31
public dend_31
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_108, id: dend_108, parent: dend_102
create dend_108
public dend_108
// Section: dend_103, id: dend_103, parent: dend_102
create dend_103
public dend_103
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_105, id: dend_105, parent: dend_103
create dend_105
public dend_105
// Section: dend_104, id: dend_104, parent: dend_103
create dend_104
public dend_104
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_107, id: dend_107, parent: dend_105
create dend_107
public dend_107
// Section: dend_106, id: dend_106, parent: dend_105
create dend_106
public dend_106
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_119, dend_116, dend_109, dend_42, dend_3, dend_0, dend_121, dend_120, dend_118, dend_117, dend_115, dend_110, dend_50, dend_43, dend_5, dend_4, dend_2, dend_1, dend_129, dend_122, dend_114, dend_111, dend_66, dend_51, dend_47, dend_44, dend_7, dend_6, dend_131, dend_130, dend_124, dend_123, dend_113, dend_112, dend_70, dend_67, dend_65, dend_52, dend_49, dend_48, dend_46, dend_45, dend_13, dend_8, dend_128, dend_125, dend_82, dend_71, dend_69, dend_68, dend_56, dend_53, dend_39, dend_14, dend_12, dend_9, dend_127, dend_126, dend_86, dend_83, dend_77, dend_72, dend_62, dend_57, dend_55, dend_54, dend_41, dend_40, dend_36, dend_15, dend_11, dend_10, dend_88, dend_87, dend_85, dend_84, dend_79, dend_78, dend_76, dend_73, dend_64, dend_63, dend_61, dend_58, dend_38, dend_37, dend_33, dend_16, dend_92, dend_89, dend_81, dend_80, dend_75, dend_74, dend_60, dend_59, dend_35, dend_34, dend_18, dend_17, dend_94, dend_93, dend_91, dend_90, dend_32, dend_19, dend_96, dend_95, dend_21, dend_20, dend_100, dend_97, dend_23, dend_22, dend_102, dend_101, dend_99, dend_98, dend_31, dend_24, dend_108, dend_103, dend_26, dend_25, dend_105, dend_104, dend_28, dend_27, dend_107, dend_106, dend_30, dend_29]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_119, dend_116, dend_109, dend_42, dend_3, dend_0, dend_121, dend_120, dend_118, dend_117, dend_115, dend_110, dend_50, dend_43, dend_5, dend_4, dend_2, dend_1, dend_129, dend_122, dend_114, dend_111, dend_66, dend_51, dend_47, dend_44, dend_7, dend_6, dend_131, dend_130, dend_124, dend_123, dend_113, dend_112, dend_70, dend_67, dend_65, dend_52, dend_49, dend_48, dend_46, dend_45, dend_13, dend_8, dend_128, dend_125, dend_82, dend_71, dend_69, dend_68, dend_56, dend_53, dend_39, dend_14, dend_12, dend_9, dend_127, dend_126, dend_86, dend_83, dend_77, dend_72, dend_62, dend_57, dend_55, dend_54, dend_41, dend_40, dend_36, dend_15, dend_11, dend_10, dend_88, dend_87, dend_85, dend_84, dend_79, dend_78, dend_76, dend_73, dend_64, dend_63, dend_61, dend_58, dend_38, dend_37, dend_33, dend_16, dend_92, dend_89, dend_81, dend_80, dend_75, dend_74, dend_60, dend_59, dend_35, dend_34, dend_18, dend_17, dend_94, dend_93, dend_91, dend_90, dend_32, dend_19, dend_96, dend_95, dend_21, dend_20, dend_100, dend_97, dend_23, dend_22, dend_102, dend_101, dend_99, dend_98, dend_31, dend_24, dend_108, dend_103, dend_26, dend_25, dend_105, dend_104, dend_28, dend_27, dend_107, dend_106, dend_30, dend_29]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_119, dend_116, dend_109, dend_42, dend_3, dend_0, axon_0, dend_121, dend_120, dend_118, dend_117, dend_115, dend_110, dend_50, dend_43, dend_5, dend_4, dend_2, dend_1, axon_1, dend_129, dend_122, dend_114, dend_111, dend_66, dend_51, dend_47, dend_44, dend_7, dend_6, dend_131, dend_130, dend_124, dend_123, dend_113, dend_112, dend_70, dend_67, dend_65, dend_52, dend_49, dend_48, dend_46, dend_45, dend_13, dend_8, dend_128, dend_125, dend_82, dend_71, dend_69, dend_68, dend_56, dend_53, dend_39, dend_14, dend_12, dend_9, dend_127, dend_126, dend_86, dend_83, dend_77, dend_72, dend_62, dend_57, dend_55, dend_54, dend_41, dend_40, dend_36, dend_15, dend_11, dend_10, dend_88, dend_87, dend_85, dend_84, dend_79, dend_78, dend_76, dend_73, dend_64, dend_63, dend_61, dend_58, dend_38, dend_37, dend_33, dend_16, dend_92, dend_89, dend_81, dend_80, dend_75, dend_74, dend_60, dend_59, dend_35, dend_34, dend_18, dend_17, dend_94, dend_93, dend_91, dend_90, dend_32, dend_19, dend_96, dend_95, dend_21, dend_20, dend_100, dend_97, dend_23, dend_22, dend_102, dend_101, dend_99, dend_98, dend_31, dend_24, dend_108, dend_103, dend_26, dend_25, dend_105, dend_104, dend_28, dend_27, dend_107, dend_106, dend_30, dend_29]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_120]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_118]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_117]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_115]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_122]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_114]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_131]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_113]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_112]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_128]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_125]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_100
// Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_101
// Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_103
// Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_93]}
objref OneSecGrp_SectionRef_105
// Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_91]}
objref OneSecGrp_SectionRef_106
// Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_90]}
objref OneSecGrp_SectionRef_107
// Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_108
// Group: {name=OneSecGrp_SectionRef_110, groups=[], sections=[dend_96]}
objref OneSecGrp_SectionRef_110
// Group: {name=OneSecGrp_SectionRef_111, groups=[], sections=[dend_95]}
objref OneSecGrp_SectionRef_111
// Group: {name=OneSecGrp_SectionRef_113, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_113
// Group: {name=OneSecGrp_SectionRef_115, groups=[], sections=[dend_97]}
objref OneSecGrp_SectionRef_115
// Group: {name=OneSecGrp_SectionRef_116, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_116
// Group: {name=OneSecGrp_SectionRef_117, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_117
// Group: {name=OneSecGrp_SectionRef_119, groups=[], sections=[dend_101]}
objref OneSecGrp_SectionRef_119
// Group: {name=OneSecGrp_SectionRef_121, groups=[], sections=[dend_98]}
objref OneSecGrp_SectionRef_121
// Group: {name=OneSecGrp_SectionRef_122, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_122
// Group: {name=OneSecGrp_SectionRef_123, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_123
// Group: {name=OneSecGrp_SectionRef_124, groups=[], sections=[dend_108]}
objref OneSecGrp_SectionRef_124
// Group: {name=OneSecGrp_SectionRef_127, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_127
// Group: {name=OneSecGrp_SectionRef_128, groups=[], sections=[dend_105]}
objref OneSecGrp_SectionRef_128
// Group: {name=OneSecGrp_SectionRef_130, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_130
// Group: {name=OneSecGrp_SectionRef_131, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_131
// Group: {name=OneSecGrp_SectionRef_132, groups=[], sections=[dend_107]}
objref OneSecGrp_SectionRef_132
// Group: {name=OneSecGrp_SectionRef_133, groups=[], sections=[dend_106]}
objref OneSecGrp_SectionRef_133
// Group: {name=OneSecGrp_SectionRef_134, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_134
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_119]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_109]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_121]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_116]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_110]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_129]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_111]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_102
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_130]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_109, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_109
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_92]}
objref OneSecGrp_SectionRef_92
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_112, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_112
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_98
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_89]}
objref OneSecGrp_SectionRef_93
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_94]}
objref OneSecGrp_SectionRef_104
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_99
// Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_97
// Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_96
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_94
// Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_95
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_123]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_124]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_114, groups=[], sections=[dend_100]}
objref OneSecGrp_SectionRef_114
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_118, groups=[], sections=[dend_102]}
objref OneSecGrp_SectionRef_118
// Group: {name=OneSecGrp_SectionRef_125, groups=[], sections=[dend_103]}
objref OneSecGrp_SectionRef_125
// Group: {name=OneSecGrp_SectionRef_129, groups=[], sections=[dend_104]}
objref OneSecGrp_SectionRef_129
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_126]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_127]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_120, groups=[], sections=[dend_99]}
objref OneSecGrp_SectionRef_120
// Group: {name=OneSecGrp_SectionRef_126, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_126
// Group: {name=OneSecGrp_SectionRef_135, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_135
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104, dend_105, dend_106, dend_107, dend_108, dend_109, dend_110, dend_111, dend_112, dend_113, dend_114, dend_115, dend_116, dend_117, dend_118, dend_119, dend_120, dend_121, dend_122, dend_123, dend_124, dend_125, dend_126, dend_127, dend_128, dend_129, dend_130, dend_131], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_119, dend_119, dend_119, dend_119, dend_119, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_42, dend_42, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_66, dend_66, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_130, dend_130, dend_130, dend_130, dend_130, dend_130, dend_130, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_70, dend_70, dend_70, dend_70, dend_70, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_82, dend_82, dend_82, dend_82, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_86, dend_86, dend_86, dend_86, dend_83, dend_83, dend_83, dend_83, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_57, dend_57, dend_57, dend_57, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_58, dend_58, dend_58, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_16, dend_16, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_119(0), soma_0(0.44999998628918314)
    connect dend_116(0), soma_0(0.44999998628918314)
    connect dend_109(0), soma_0(0.44999998628918314)
    connect dend_42(0), soma_0(0.44999998628918314)
    connect dend_3(0), soma_0(0.44999998628918314)
    connect dend_0(0), soma_0(0.44999998628918314)
    connect axon_0(0), soma_0(1.0)
    connect dend_121(0), dend_119(1.0)
    connect dend_120(0), dend_119(1.0)
    connect dend_118(0), dend_116(1.0)
    connect dend_117(0), dend_116(1.0)
    connect dend_115(0), dend_109(1.0)
    connect dend_110(0), dend_109(1.0)
    connect dend_50(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_129(0), dend_121(1.0)
    connect dend_122(0), dend_121(1.0)
    connect dend_114(0), dend_110(1.0)
    connect dend_111(0), dend_110(1.0)
    connect dend_66(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_47(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_131(0), dend_129(1.0)
    connect dend_130(0), dend_129(1.0)
    connect dend_124(0), dend_122(1.0)
    connect dend_123(0), dend_122(1.0)
    connect dend_113(0), dend_111(1.0)
    connect dend_112(0), dend_111(1.0)
    connect dend_70(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_65(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_13(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_128(0), dend_124(1.0)
    connect dend_125(0), dend_124(1.0)
    connect dend_82(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_69(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_56(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_39(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_12(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_127(0), dend_125(1.0)
    connect dend_126(0), dend_125(1.0)
    connect dend_86(0), dend_82(1.0)
    connect dend_83(0), dend_82(1.0)
    connect dend_77(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_62(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_36(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_88(0), dend_86(1.0)
    connect dend_87(0), dend_86(1.0)
    connect dend_85(0), dend_83(1.0)
    connect dend_84(0), dend_83(1.0)
    connect dend_79(0), dend_77(1.0)
    connect dend_78(0), dend_77(1.0)
    connect dend_76(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_61(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_33(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_92(0), dend_88(1.0)
    connect dend_89(0), dend_88(1.0)
    connect dend_81(0), dend_79(1.0)
    connect dend_80(0), dend_79(1.0)
    connect dend_75(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_94(0), dend_92(1.0)
    connect dend_93(0), dend_92(1.0)
    connect dend_91(0), dend_89(1.0)
    connect dend_90(0), dend_89(1.0)
    connect dend_32(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_96(0), dend_94(1.0)
    connect dend_95(0), dend_94(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_100(0), dend_96(1.0)
    connect dend_97(0), dend_96(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_102(0), dend_100(1.0)
    connect dend_101(0), dend_100(1.0)
    connect dend_99(0), dend_97(1.0)
    connect dend_98(0), dend_97(1.0)
    connect dend_31(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_108(0), dend_102(1.0)
    connect dend_103(0), dend_102(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_105(0), dend_103(1.0)
    connect dend_104(0), dend_103(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_107(0), dend_105(1.0)
    connect dend_106(0), dend_105(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.95362, -7.37234, 0.0, 2.57935 ) }
    soma_0 { pt3dadd( 1.79658, -6.6872, 0.0, 4.36142 ) }
    soma_0 { pt3dadd( 1.63955, -6.00206, 0.0, 6.30827 ) }
    soma_0 { pt3dadd( 1.48252, -5.31692, 0.0, 8.15998 ) }
    soma_0 { pt3dadd( 1.32548, -4.63178, 0.0, 8.93707 ) }
    soma_0 { pt3dadd( 1.16845, -3.94664, 0.0, 9.51751 ) }
    soma_0 { pt3dadd( 1.01142, -3.2615, 0.0, 9.99574 ) }
    soma_0 { pt3dadd( 0.854383, -2.57637, 0.0, 10.4311 ) }
    soma_0 { pt3dadd( 0.697349, -1.89123, 0.0, 10.5327 ) }
    soma_0 { pt3dadd( 0.540315, -1.20609, 0.0, 10.6236 ) }
    soma_0 { pt3dadd( 0.383282, -0.52095, 0.0, 10.6564 ) }
    soma_0 { pt3dadd( 0.226248, 0.164189, 0.0, 10.5076 ) }
    soma_0 { pt3dadd( 0.0692145, 0.849328, 0.0, 10.3564 ) }
    soma_0 { pt3dadd( -0.0878191, 1.53447, 0.0, 10.1753 ) }
    soma_0 { pt3dadd( -0.244853, 2.2196, 0.0, 9.88723 ) }
    soma_0 { pt3dadd( -0.401886, 2.90474, 0.0, 9.46371 ) }
    soma_0 { pt3dadd( -0.55892, 3.58988, 0.0, 9.04164 ) }
    soma_0 { pt3dadd( -0.715954, 4.27502, 0.0, 8.63833 ) }
    soma_0 { pt3dadd( -0.872987, 4.96016, 0.0, 7.99123 ) }
    soma_0 { pt3dadd( -1.03002, 5.6453, 0.0, 6.49138 ) }
    soma_0 { pt3dadd( -1.18705, 6.33044, 0.0, 3.64698 ) }
    // Section: dend_119, id: dend_119, parent: soma_0 (entry count 21/100)
    dend_119 { pt3dclear() }
    dend_119 { pt3dadd( -0.173755, 5.70496, -4.33, 2.06 ) }
    dend_119 { pt3dadd( -0.193948, 5.77901, -4.35955, 2.06 ) }
    dend_119 { pt3dadd( -0.527002, 7.00038, -4.84688, 1.4 ) }
    dend_119 { pt3dadd( -0.827491, 8.10233, -5.28657, 1.03 ) }
    dend_119 { pt3dadd( -1.19004, 9.43188, -5.81707, 1.54 ) }
    dend_119 { pt3dadd( -1.47343, 10.4711, -6.23173, 1.69 ) }
    // Section: dend_116, id: dend_116, parent: soma_0 (entry count 27/100)
    dend_116 { pt3dclear() }
    dend_116 { pt3dadd( -4.34375, 0.918214, -5.83, 0.95 ) }
    dend_116 { pt3dadd( -4.69695, 0.370921, -6.57045, 0.81 ) }
    dend_116 { pt3dadd( -5.1961, -0.434859, -7.53887, 0.81 ) }
    dend_116 { pt3dadd( -5.83523, -1.3514, -8.66188, 0.88 ) }
    dend_116 { pt3dadd( -6.39016, -2.10124, -9.66243, 1.03 ) }
    dend_116 { pt3dadd( -7.04621, -3.01953, -11.0342, 1.03 ) }
    dend_116 { pt3dadd( -7.57332, -3.74385, -12.2441, 0.73 ) }
    dend_116 { pt3dadd( -7.81469, -4.09001, -12.8459, 0.73 ) }
    dend_116 { pt3dadd( -8.27088, -4.62335, -13.9677, 0.81 ) }
    dend_116 { pt3dadd( -8.64873, -4.88195, -14.8451, 0.81 ) }
    dend_116 { pt3dadd( -9.23253, -5.1949, -16.1858, 0.81 ) }
    dend_116 { pt3dadd( -9.49375, -5.32539, -16.6997, 0.59 ) }
    dend_116 { pt3dadd( -9.8934, -5.54155, -17.348, 0.59 ) }
    dend_116 { pt3dadd( -10.4867, -5.91139, -18.2115, 0.59 ) }
    dend_116 { pt3dadd( -11.115, -6.36182, -19.0667, 0.59 ) }
    dend_116 { pt3dadd( -12.3001, -7.1988, -20.7379, 0.59 ) }
    dend_116 { pt3dadd( -12.8833, -7.59109, -21.7366, 0.59 ) }
    dend_116 { pt3dadd( -13.001, -7.65755, -22.3436, 0.59 ) }
    dend_116 { pt3dadd( -13.0326, -7.67121, -22.8642, 0.59 ) }
    dend_116 { pt3dadd( -12.8916, -7.46641, -24.2606, 0.59 ) }
    dend_116 { pt3dadd( -12.5896, -7.00855, -25.6448, 0.59 ) }
    dend_116 { pt3dadd( -12.2331, -6.45391, -26.8636, 0.59 ) }
    dend_116 { pt3dadd( -11.4741, -5.46403, -28.912, 0.66 ) }
    // Section: dend_109, id: dend_109, parent: soma_0 (entry count 50/100)
    dend_109 { pt3dclear() }
    dend_109 { pt3dadd( 2.46625, -5.3753, -12.23, 1.03 ) }
    dend_109 { pt3dadd( 3.75655, -6.37008, -12.2075, 1.03 ) }
    dend_109 { pt3dadd( 5.04245, -7.38552, -12.1681, 0.88 ) }
    dend_109 { pt3dadd( 5.72359, -7.92679, -12.1183, 0.88 ) }
    dend_109 { pt3dadd( 6.4613, -8.491, -12.0422, 0.88 ) }
    dend_109 { pt3dadd( 7.46082, -9.21544, -11.9204, 1.03 ) }
    dend_109 { pt3dadd( 8.39989, -9.86764, -11.7993, 0.95 ) }
    dend_109 { pt3dadd( 9.09927, -10.355, -11.6947, 0.95 ) }
    dend_109 { pt3dadd( 10.0259, -11.0286, -11.5468, 0.81 ) }
    dend_109 { pt3dadd( 10.8685, -11.6462, -11.4026, 0.73 ) }
    dend_109 { pt3dadd( 11.4772, -12.0891, -11.2924, 0.73 ) }
    dend_109 { pt3dadd( 12.3277, -12.6959, -11.1353, 0.81 ) }
    dend_109 { pt3dadd( 13.7039, -13.6553, -10.9204, 0.88 ) }
    dend_109 { pt3dadd( 14.5604, -14.2854, -10.8044, 1.47 ) }
    // Section: dend_42, id: dend_42, parent: soma_0 (entry count 64/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 1.24625, -0.240041, 13.22, 5.51 ) }
    dend_42 { pt3dadd( 1.79456, -0.676971, 13.4226, 5.51 ) }
    dend_42 { pt3dadd( 4.19816, -2.59232, 14.3108, 4.55 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 67/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -2.48375, -6.55404, -4.31, 3.16 ) }
    dend_3 { pt3dadd( -2.48375, -6.55404, -4.31, 3.16 ) }
    dend_3 { pt3dadd( -3.64242, -8.05534, -4.51712, 1.98 ) }
    dend_3 { pt3dadd( -4.70104, -9.427, -4.70637, 2.28 ) }
    dend_3 { pt3dadd( -6.55804, -11.8331, -5.03832, 1.98 ) }
    dend_3 { pt3dadd( -7.56333, -13.1357, -5.21803, 2.2 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 73/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -4.56375, 4.25971, -0.9, 1.69 ) }
    dend_0 { pt3dadd( -4.80021, 4.38002, -0.889539, 1.62 ) }
    dend_0 { pt3dadd( -6.08947, 5.09506, -0.719367, 0.88 ) }
    dend_0 { pt3dadd( -7.13625, 5.6954, -0.541026, 0.88 ) }
    dend_0 { pt3dadd( -8.20581, 6.316, -0.30618, 0.88 ) }
    dend_0 { pt3dadd( -9.25958, 6.88586, -0.0435481, 0.73 ) }
    dend_0 { pt3dadd( -10.1839, 7.35852, 0.186906, 0.73 ) }
    dend_0 { pt3dadd( -10.962, 7.77004, 0.409497, 0.73 ) }
    dend_0 { pt3dadd( -11.6899, 8.17254, 0.641933, 1.1 ) }
    dend_0 { pt3dadd( -12.2794, 8.50976, 0.830611, 1.1 ) }
    dend_0 { pt3dadd( -13.2153, 9.09915, 1.17681, 0.59 ) }
    dend_0 { pt3dadd( -14.0037, 9.65141, 1.4741, 0.59 ) }
    dend_0 { pt3dadd( -14.9017, 10.3529, 1.78296, 0.81 ) }
    dend_0 { pt3dadd( -15.6247, 11.0098, 2.02018, 0.81 ) }
    dend_0 { pt3dadd( -16.3809, 11.8074, 2.2682, 0.88 ) }
    dend_0 { pt3dadd( -17.5376, 13.1602, 2.62551, 0.37 ) }
    dend_0 { pt3dadd( -18.4514, 14.2796, 2.90142, 0.37 ) }
    dend_0 { pt3dadd( -19.3078, 15.2474, 3.13267, 0.37 ) }
    dend_0 { pt3dadd( -20.3428, 16.262, 3.34947, 0.37 ) }
    dend_0 { pt3dadd( -21.2871, 17.0631, 3.5067, 0.66 ) }
    dend_0 { pt3dadd( -21.9243, 17.5356, 3.58395, 0.51 ) }
    dend_0 { pt3dadd( -22.9886, 18.24, 3.65406, 0.51 ) }
    dend_0 { pt3dadd( -24.5779, 19.1726, 3.71142, 0.51 ) }
    dend_0 { pt3dadd( -25.9084, 19.908, 3.71431, 0.51 ) }
    dend_0 { pt3dadd( -26.7879, 20.3881, 3.71031, 0.51 ) }
    dend_0 { pt3dadd( -27.4221, 20.7529, 3.70242, 0.51 ) }
    dend_0 { pt3dadd( -28.1285, 21.2012, 3.68971, 0.95 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( -29.7281, 22.3328, 3.64157, 0.73 ) }
    dend_0 { pt3dadd( -31.1782, 23.4877, 3.58999, 0.51 ) }
    dend_0 { pt3dadd( -32.2362, 24.3741, 3.54784, 0.59 ) }
    dend_0 { pt3dadd( -32.8954, 24.9269, 3.5205, 0.59 ) }
    dend_0 { pt3dadd( -33.0237, 25.0315, 3.51537, 0.59 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 5/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -1.18705, 6.33044, 0.0, 0.754234 ) }
    axon_0 { pt3dadd( -4.53815, 20.9513, 0.0, 0.754234 ) }
    axon_0 { pt3dadd( -7.88925, 35.5722, 0.0, 0.754234 ) }
    // Section: dend_121, id: dend_121, parent: dend_119 (entry count 8/100)
    dend_121 { pt3dclear() }
    dend_121 { pt3dadd( -1.47343, 10.4711, -6.23173, 0.73 ) }
    dend_121 { pt3dadd( -1.25223, 11.7495, -7.56405, 0.73 ) }
    dend_121 { pt3dadd( -0.854589, 12.6612, -8.44888, 0.81 ) }
    dend_121 { pt3dadd( -0.564013, 13.3274, -9.09548, 1.03 ) }
    dend_121 { pt3dadd( -0.226359, 14.1016, -9.84682, 1.47 ) }
    dend_121 { pt3dadd( 0.382665, 15.498, -11.202, 1.18 ) }
    dend_121 { pt3dadd( 0.926377, 16.7446, -12.4119, 0.95 ) }
    dend_121 { pt3dadd( 1.75216, 17.9576, -13.5644, 1.18 ) }
    // Section: dend_120, id: dend_120, parent: dend_119 (entry count 16/100)
    dend_120 { pt3dclear() }
    dend_120 { pt3dadd( -1.47343, 10.4711, -6.23173, 0.51 ) }
    dend_120 { pt3dadd( -0.556863, 11.4189, -5.01736, 0.51 ) }
    dend_120 { pt3dadd( -0.172632, 11.9173, -4.39299, 0.51 ) }
    dend_120 { pt3dadd( 0.226046, 12.5899, -3.48778, 0.66 ) }
    dend_120 { pt3dadd( 0.47777, 13.1198, -2.78924, 0.66 ) }
    dend_120 { pt3dadd( 0.712897, 13.6671, -2.09505, 0.37 ) }
    dend_120 { pt3dadd( 1.01304, 14.3679, -1.25911, 0.22 ) }
    dend_120 { pt3dadd( 1.27678, 15.1598, -0.395379, 0.51 ) }
    dend_120 { pt3dadd( 1.61999, 16.5005, 0.836874, 0.51 ) }
    dend_120 { pt3dadd( 1.71787, 16.9615, 1.15536, 0.51 ) }
    dend_120 { pt3dadd( 1.87263, 17.6653, 1.49403, 0.51 ) }
    dend_120 { pt3dadd( 2.10822, 18.6797, 1.81111, 0.66 ) }
    dend_120 { pt3dadd( 2.36995, 19.6838, 2.01413, 0.51 ) }
    dend_120 { pt3dadd( 2.55291, 20.3454, 2.09724, 0.51 ) }
    dend_120 { pt3dadd( 2.95242, 21.6805, 2.1981, 0.51 ) }
    dend_120 { pt3dadd( 3.547, 23.378, 2.32496, 0.66 ) }
    dend_120 { pt3dadd( 4.12941, 24.8578, 2.50656, 0.66 ) }
    dend_120 { pt3dadd( 4.59537, 25.905, 2.74841, 0.66 ) }
    dend_120 { pt3dadd( 4.92885, 26.5478, 2.97833, 0.66 ) }
    dend_120 { pt3dadd( 5.3971, 27.3508, 3.34701, 0.66 ) }
    dend_120 { pt3dadd( 6.15742, 28.5649, 4.00042, 1.1 ) }
    dend_120 { pt3dadd( 7.06177, 30.0014, 4.89492, 0.66 ) }
    dend_120 { pt3dadd( 7.9824, 31.5279, 5.85169, 0.66 ) }
    dend_120 { pt3dadd( 8.56483, 32.6091, 6.46212, 0.66 ) }
    dend_120 { pt3dadd( 8.97458, 33.4796, 6.89885, 0.66 ) }
    dend_120 { pt3dadd( 9.46039, 34.6758, 7.41016, 0.66 ) }
    dend_120 { pt3dadd( 10.1451, 36.6561, 8.10015, 0.66 ) }
    dend_120 { pt3dadd( 10.5793, 38.1195, 8.55622, 0.66 ) }
    dend_120 { pt3dadd( 11.018, 39.809, 9.04759, 0.66 ) }
    dend_120 { pt3dadd( 11.2756, 40.8805, 9.36908, 0.51 ) }
    dend_120 { pt3dadd( 11.5827, 42.0611, 9.7387, 0.51 ) }
    dend_120 { pt3dadd( 12.0336, 43.5998, 10.2535, 0.51 ) }
    dend_120 { pt3dadd( 12.7777, 45.8096, 11.0026, 0.66 ) }
    dend_120 { pt3dadd( 13.2053, 46.9386, 11.4327, 0.51 ) }
    dend_120 { pt3dadd( 13.5845, 47.8873, 11.8076, 0.51 ) }
    dend_120 { pt3dadd( 14.1638, 49.3804, 12.3825, 0.51 ) }
    dend_120 { pt3dadd( 14.3622, 49.9369, 12.5687, 0.51 ) }
    dend_120 { pt3dadd( 14.4976, 50.3432, 12.6667, 0.51 ) }
    dend_120 { pt3dadd( 14.6892, 50.9869, 12.7715, 0.51 ) }
    dend_120 { pt3dadd( 15.0187, 52.3335, 13.0074, 0.51 ) }
    dend_120 { pt3dadd( 15.2501, 53.6258, 13.2296, 0.66 ) }
    dend_120 { pt3dadd( 15.4059, 54.7323, 13.4367, 0.66 ) }
    dend_120 { pt3dadd( 15.5464, 55.6124, 13.6241, 0.51 ) }
    dend_120 { pt3dadd( 15.7128, 56.4036, 13.8158, 0.66 ) }
    dend_120 { pt3dadd( 15.8953, 57.0614, 14.0038, 0.44 ) }
    dend_120 { pt3dadd( 16.185, 57.95, 14.2782, 0.44 ) }
    dend_120 { pt3dadd( 16.579, 59.2335, 14.6296, 0.51 ) }
    dend_120 { pt3dadd( 16.8539, 60.3719, 14.915, 0.44 ) }
    dend_120 { pt3dadd( 17.0107, 61.3463, 15.1444, 1.1 ) }
    dend_120 { pt3dadd( 17.1249, 62.4877, 15.429, 0.66 ) }
    dend_120 { pt3dadd( 17.1923, 63.611, 15.7273, 0.88 ) }
    dend_120 { pt3dadd( 17.2695, 65.1203, 16.2054, 0.37 ) }
    dend_120 { pt3dadd( 17.3417, 66.2637, 16.6365, 0.37 ) }
    dend_120 { pt3dadd( 17.4047, 67.0589, 16.9845, 0.44 ) }
    dend_120 { pt3dadd( 17.5368, 68.1608, 17.5336, 0.59 ) }
    dend_120 { pt3dadd( 17.672, 68.8103, 17.8821, 0.81 ) }
    dend_120 { pt3dadd( 18.1386, 70.2912, 18.7291, 0.51 ) }
    dend_120 { pt3dadd( 18.4369, 71.1529, 19.2145, 0.51 ) }
    dend_120 { pt3dadd( 18.5646, 71.5517, 19.4036, 1.03 ) }
    dend_120 { pt3dadd( 18.857, 72.5905, 19.8239, 0.51 ) }
    dend_120 { pt3dadd( 19.0486, 73.3642, 20.0806, 0.37 ) }
    dend_120 { pt3dadd( 19.2049, 74.0723, 20.3062, 0.37 ) }
    dend_120 { pt3dadd( 19.4424, 75.2407, 20.6384, 0.37 ) }
    dend_120 { pt3dadd( 19.539, 75.9113, 20.8308, 0.66 ) }
    dend_120 { pt3dadd( 19.7471, 77.8925, 21.458, 0.22 ) }
    dend_120 { pt3dadd( 19.8128, 79.0007, 21.8416, 0.22 ) }
    dend_120 { pt3dadd( 19.8511, 79.9599, 22.1944, 0.22 ) }
    dend_120 { pt3dadd( 19.8973, 80.343, 22.3345, 0.73 ) }
    dend_120 { pt3dadd( 20.1388, 81.4364, 22.6839, 0.22 ) }
    dend_120 { pt3dadd( 20.2517, 81.9447, 22.8082, 0.22 ) }
    dend_120 { pt3dadd( 20.3069, 82.3886, 22.871, 0.22 ) }
    dend_120 { pt3dadd( 20.391, 83.0034, 22.9179, 0.22 ) }
    dend_120 { pt3dadd( 20.6409, 84.6751, 22.8857, 0.59 ) }
    dend_120 { pt3dadd( 20.7742, 85.81, 22.8393, 0.22 ) }
    dend_120 { pt3dadd( 20.8268, 86.3618, 22.8105, 0.22 ) }
    dend_120 { pt3dadd( 20.8721, 87.2847, 22.7435, 0.22 ) }
    dend_120 { pt3dadd( 20.9101, 88.913, 22.6016, 0.66 ) }
    dend_120 { pt3dadd( 20.9304, 90.4175, 22.4547, 0.22 ) }
    dend_120 { pt3dadd( 20.9212, 91.9821, 22.3087, 0.22 ) }
    dend_120 { pt3dadd( 20.9359, 92.7629, 22.2415, 0.22 ) }
    dend_120 { pt3dadd( 20.9596, 93.4277, 22.1933, 0.22 ) }
    dend_120 { pt3dadd( 21.0253, 94.8971, 22.1263, 0.51 ) }
    dend_120 { pt3dadd( 21.0637, 95.9904, 22.1349, 0.29 ) }
    dend_120 { pt3dadd( 21.1018, 96.5425, 22.1351, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_120 { pt3dadd( 21.1742, 97.166, 22.0921, 0.29 ) }
    dend_120 { pt3dadd( 21.3108, 98.0676, 21.9995, 0.29 ) }
    dend_120 { pt3dadd( 21.4742, 99.0303, 21.8787, 0.29 ) }
    dend_120 { pt3dadd( 21.7058, 100.73, 21.6139, 0.59 ) }
    dend_120 { pt3dadd( 21.8972, 102.334, 21.264, 0.59 ) }
    dend_120 { pt3dadd( 22.0441, 103.505, 20.9719, 0.59 ) }
    dend_120 { pt3dadd( 22.2008, 104.601, 20.6827, 0.95 ) }
    dend_120 { pt3dadd( 22.2878, 105.131, 20.5383, 1.18 ) }
    dend_120 { pt3dadd( 22.5381, 106.285, 20.1882, 0.51 ) }
    dend_120 { pt3dadd( 22.8306, 107.489, 19.7653, 0.51 ) }
    dend_120 { pt3dadd( 23.0229, 108.263, 19.5011, 0.51 ) }
    dend_120 { pt3dadd( 23.2829, 109.305, 19.1125, 0.51 ) }
    dend_120 { pt3dadd( 23.4495, 109.922, 18.8612, 0.73 ) }
    dend_120 { pt3dadd( 24.0706, 111.99, 18.0172, 0.15 ) }
    dend_120 { pt3dadd( 24.4071, 113.046, 17.5692, 0.51 ) }
    dend_120 { pt3dadd( 24.6533, 114.002, 17.201, 0.51 ) }
    dend_120 { pt3dadd( 24.8453, 115.217, 16.731, 0.51 ) }
    dend_120 { pt3dadd( 24.8836, 116.076, 16.4243, 0.51 ) }
    dend_120 { pt3dadd( 24.8324, 116.94, 16.1661, 0.51 ) }
    dend_120 { pt3dadd( 24.6483, 118.031, 15.9182, 0.29 ) }
    dend_120 { pt3dadd( 24.3503, 119.599, 15.6309, 0.22 ) }
    dend_120 { pt3dadd( 24.1788, 120.665, 15.4179, 0.22 ) }
    dend_120 { pt3dadd( 24.1373, 121.25, 15.2588, 0.22 ) }
    dend_120 { pt3dadd( 24.272, 121.815, 14.9519, 0.22 ) }
    dend_120 { pt3dadd( 24.5299, 122.282, 14.6128, 0.22 ) }
    dend_120 { pt3dadd( 24.7178, 122.546, 14.4051, 0.22 ) }
    dend_120 { pt3dadd( 25.4757, 123.534, 13.6058, 1.03 ) }
    dend_120 { pt3dadd( 26.2191, 124.542, 12.8367, 0.81 ) }
    dend_120 { pt3dadd( 26.8826, 125.534, 12.116, 0.29 ) }
    dend_120 { pt3dadd( 27.3301, 126.26, 11.6065, 0.29 ) }
    dend_120 { pt3dadd( 27.6695, 126.856, 11.2171, 0.29 ) }
    dend_120 { pt3dadd( 27.9716, 127.44, 10.8644, 0.88 ) }
    dend_120 { pt3dadd( 28.3132, 128.205, 10.4513, 0.51 ) }
    dend_120 { pt3dadd( 28.6351, 128.951, 10.0849, 0.88 ) }
    dend_120 { pt3dadd( 29.2472, 130.712, 9.17155, 0.22 ) }
    dend_120 { pt3dadd( 29.5411, 131.544, 8.7072, 0.22 ) }
    dend_120 { pt3dadd( 29.7039, 131.996, 8.44511, 0.22 ) }
    dend_120 { pt3dadd( 29.8995, 132.57, 8.10081, 0.51 ) }
    dend_120 { pt3dadd( 30.0303, 133.041, 7.82826, 0.44 ) }
    dend_120 { pt3dadd( 30.2577, 134.827, 6.91005, 0.73 ) }
    // Section: dend_118, id: dend_118, parent: dend_116 (entry count 40/100)
    dend_118 { pt3dclear() }
    dend_118 { pt3dadd( -11.4741, -5.46403, -28.912, 0.66 ) }
    dend_118 { pt3dadd( -11.5429, -5.50059, -29.5831, 0.66 ) }
    dend_118 { pt3dadd( -11.5285, -5.57556, -32.3882, 0.66 ) }
    dend_118 { pt3dadd( -11.4216, -5.60739, -33.9647, 0.66 ) }
    dend_118 { pt3dadd( -11.2312, -5.68948, -36.3205, 0.66 ) }
    dend_118 { pt3dadd( -11.1399, -5.75683, -38.0362, 0.66 ) }
    dend_118 { pt3dadd( -11.1206, -5.8473, -39.7166, 0.66 ) }
    dend_118 { pt3dadd( -11.1141, -5.9941, -41.2123, 0.66 ) }
    dend_118 { pt3dadd( -11.1034, -6.18786, -42.5765, 0.66 ) }
    dend_118 { pt3dadd( -11.0948, -6.40759, -44.0077, 0.66 ) }
    dend_118 { pt3dadd( -11.15, -6.77488, -46.2803, 0.66 ) }
    dend_118 { pt3dadd( -11.2488, -7.07052, -47.938, 0.66 ) }
    dend_118 { pt3dadd( -11.3491, -7.36629, -49.502, 0.66 ) }
    dend_118 { pt3dadd( -11.4651, -7.56371, -50.8141, 0.66 ) }
    dend_118 { pt3dadd( -11.4865, -7.58248, -51.57, 0.66 ) }
    dend_118 { pt3dadd( -11.308, -7.29349, -52.447, 0.66 ) }
    dend_118 { pt3dadd( -11.086, -6.85236, -53.0686, 0.66 ) }
    dend_118 { pt3dadd( -10.9002, -6.28633, -53.7057, 0.66 ) }
    dend_118 { pt3dadd( -10.7141, -5.2667, -54.7694, 0.51 ) }
    dend_118 { pt3dadd( -10.6572, -4.54339, -55.5298, 0.51 ) }
    dend_118 { pt3dadd( -10.5451, -3.1341, -57.1777, 0.88 ) }
    dend_118 { pt3dadd( -10.4274, -2.48225, -58.238, 0.59 ) }
    dend_118 { pt3dadd( -10.2615, -1.9777, -59.3883, 0.59 ) }
    dend_118 { pt3dadd( -10.0668, -1.66552, -60.5014, 0.59 ) }
    dend_118 { pt3dadd( -9.87434, -1.51641, -61.3106, 0.59 ) }
    dend_118 { pt3dadd( -9.35935, -1.26819, -63.1456, 0.88 ) }
    dend_118 { pt3dadd( -8.07708, -0.808166, -67.2926, 0.88 ) }
    dend_118 { pt3dadd( -7.4787, -0.629001, -69.0031, 0.88 ) }
    dend_118 { pt3dadd( -6.63117, -0.358128, -71.2135, 0.66 ) }
    dend_118 { pt3dadd( -6.00259, -0.12069, -72.7954, 0.44 ) }
    dend_118 { pt3dadd( -5.52073, 0.135142, -74.0348, 0.81 ) }
    dend_118 { pt3dadd( -4.59356, 0.847094, -76.4399, 0.81 ) }
    dend_118 { pt3dadd( -4.00918, 1.48144, -77.8787, 0.81 ) }
    dend_118 { pt3dadd( -3.37646, 2.28995, -79.4124, 0.51 ) }
    dend_118 { pt3dadd( -2.92325, 2.88958, -80.5366, 0.51 ) }
    dend_118 { pt3dadd( -2.43341, 3.48709, -81.8976, 0.59 ) }
    dend_118 { pt3dadd( -2.30452, 3.58733, -82.2439, 0.59 ) }
    dend_118 { pt3dadd( -1.83268, 3.76599, -83.4196, 0.59 ) }
    dend_118 { pt3dadd( -1.37483, 3.79823, -84.73, 0.51 ) }
    dend_118 { pt3dadd( -0.771319, 3.64123, -86.7213, 0.29 ) }
    dend_118 { pt3dadd( -0.497742, 3.48962, -87.8288, 0.29 ) }
    dend_118 { pt3dadd( -0.188399, 3.24205, -89.2911, 0.29 ) }
    dend_118 { pt3dadd( -0.0518259, 3.11839, -90.0219, 0.44 ) }
    dend_118 { pt3dadd( 0.452818, 2.6731, -92.9535, 0.44 ) }
    dend_118 { pt3dadd( 0.821938, 2.39891, -95.1979, 0.44 ) }
    dend_118 { pt3dadd( 1.09767, 2.24448, -96.6968, 0.44 ) }
    dend_118 { pt3dadd( 1.43293, 2.01281, -98.2587, 0.44 ) }
    dend_118 { pt3dadd( 1.57918, 1.88016, -98.8071, 0.44 ) }
    dend_118 { pt3dadd( 1.86684, 1.60786, -99.543, 0.44 ) }
    dend_118 { pt3dadd( 2.35005, 1.22174, -100.235, 0.44 ) }
    dend_118 { pt3dadd( 2.91131, 0.841794, -100.814, 0.81 ) }
    dend_118 { pt3dadd( 4.09687, 0.0794517, -101.887, 0.37 ) }
    dend_118 { pt3dadd( 4.67369, -0.305158, -102.445, 0.95 ) }
    dend_118 { pt3dadd( 5.06574, -0.554165, -102.922, 0.95 ) }
    dend_118 { pt3dadd( 5.55727, -0.82556, -103.591, 0.95 ) }
    dend_118 { pt3dadd( 6.56113, -1.29, -105.005, 0.29 ) }
    dend_118 { pt3dadd( 7.23638, -1.55964, -106.062, 0.29 ) }
    dend_118 { pt3dadd( 7.98284, -1.84953, -107.398, 0.66 ) }
    dend_118 { pt3dadd( 9.0015, -2.34255, -109.651, 0.95 ) }
    dend_118 { pt3dadd( 9.28118, -2.51615, -110.385, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_118 { pt3dadd( 9.45435, -2.63508, -110.876, 0.51 ) }
    dend_118 { pt3dadd( 9.84791, -2.86377, -112.008, 0.29 ) }
    dend_118 { pt3dadd( 10.4259, -3.155, -113.467, 0.29 ) }
    dend_118 { pt3dadd( 10.796, -3.37382, -114.27, 0.22 ) }
    dend_118 { pt3dadd( 11.0365, -3.53905, -114.729, 0.22 ) }
    dend_118 { pt3dadd( 11.767, -4.04548, -116.06, 0.51 ) }
    dend_118 { pt3dadd( 12.7205, -4.65421, -117.687, 0.15 ) }
    dend_118 { pt3dadd( 13.8612, -5.2399, -119.455, 0.66 ) }
    dend_118 { pt3dadd( 14.2739, -5.40545, -120.101, 0.37 ) }
    dend_118 { pt3dadd( 15.1394, -5.6945, -121.442, 0.59 ) }
    dend_118 { pt3dadd( 15.8907, -5.9086, -122.577, 0.59 ) }
    dend_118 { pt3dadd( 16.2458, -5.97912, -123.081, 0.59 ) }
    dend_118 { pt3dadd( 17.5222, -6.0629, -124.657, 0.73 ) }
    dend_118 { pt3dadd( 19.0053, -5.88206, -126.396, 0.51 ) }
    dend_118 { pt3dadd( 20.4028, -5.47998, -127.996, 0.15 ) }
    dend_118 { pt3dadd( 21.0509, -5.13199, -128.749, 0.15 ) }
    dend_118 { pt3dadd( 21.66, -4.6604, -129.465, 0.15 ) }
    dend_118 { pt3dadd( 22.2091, -4.07637, -130.158, 0.81 ) }
    dend_118 { pt3dadd( 23.5153, -2.05894, -132.005, 0.22 ) }
    dend_118 { pt3dadd( 23.8312, -1.25539, -132.594, 0.51 ) }
    dend_118 { pt3dadd( 24.2787, 1.04404, -134.08, 0.07 ) }
    dend_118 { pt3dadd( 24.3389, 1.87729, -134.584, 0.37 ) }
    dend_118 { pt3dadd( 24.3422, 2.928, -135.2, 0.15 ) }
    dend_118 { pt3dadd( 24.2793, 3.79336, -135.656, 0.15 ) }
    dend_118 { pt3dadd( 24.0874, 5.10724, -136.152, 0.15 ) }
    dend_118 { pt3dadd( 23.9084, 5.95579, -136.465, 0.15 ) }
    dend_118 { pt3dadd( 23.671, 6.60558, -136.638, 0.44 ) }
    // Section: dend_117, id: dend_117, parent: dend_116 (entry count 27/100)
    dend_117 { pt3dclear() }
    dend_117 { pt3dadd( -11.4741, -5.46403, -28.912, 0.37 ) }
    dend_117 { pt3dadd( -12.2706, -4.63029, -29.4275, 0.37 ) }
    dend_117 { pt3dadd( -12.7565, -4.01938, -29.8198, 0.37 ) }
    dend_117 { pt3dadd( -12.972, -3.72253, -30.0301, 0.37 ) }
    dend_117 { pt3dadd( -13.6441, -2.76346, -30.7193, 0.37 ) }
    dend_117 { pt3dadd( -14.1587, -2.02069, -31.2233, 0.37 ) }
    dend_117 { pt3dadd( -14.627, -1.31768, -31.734, 0.37 ) }
    dend_117 { pt3dadd( -15.1105, -0.594415, -32.3313, 0.37 ) }
    dend_117 { pt3dadd( -15.9128, 0.646651, -33.3985, 0.37 ) }
    dend_117 { pt3dadd( -16.7299, 1.90857, -34.5305, 0.37 ) }
    dend_117 { pt3dadd( -17.8223, 3.59161, -36.0461, 0.88 ) }
    dend_117 { pt3dadd( -18.7294, 4.8985, -37.2595, 0.88 ) }
    dend_117 { pt3dadd( -19.927, 6.48664, -38.7775, 0.66 ) }
    dend_117 { pt3dadd( -20.3987, 7.07438, -39.3494, 0.88 ) }
    dend_117 { pt3dadd( -21.7136, 8.59559, -40.9335, 0.59 ) }
    dend_117 { pt3dadd( -22.1337, 9.00365, -41.4303, 0.73 ) }
    dend_117 { pt3dadd( -22.7287, 9.4749, -42.1524, 0.44 ) }
    dend_117 { pt3dadd( -23.0709, 9.71047, -42.5502, 0.29 ) }
    dend_117 { pt3dadd( -23.5754, 10.0414, -43.1748, 0.66 ) }
    dend_117 { pt3dadd( -24.5213, 10.6849, -44.4296, 0.37 ) }
    dend_117 { pt3dadd( -25.5526, 11.4836, -45.8756, 0.66 ) }
    dend_117 { pt3dadd( -26.6676, 12.5079, -47.474, 0.37 ) }
    dend_117 { pt3dadd( -26.9164, 12.7827, -47.8704, 0.37 ) }
    dend_117 { pt3dadd( -27.3937, 13.3613, -48.6612, 0.51 ) }
    dend_117 { pt3dadd( -27.9653, 14.1046, -49.5796, 0.59 ) }
    dend_117 { pt3dadd( -28.6172, 15.0092, -50.5394, 0.66 ) }
    dend_117 { pt3dadd( -29.1261, 15.7529, -51.2182, 0.66 ) }
    dend_117 { pt3dadd( -30.2688, 17.2329, -52.4264, 0.66 ) }
    dend_117 { pt3dadd( -30.6715, 17.6778, -52.8324, 0.37 ) }
    dend_117 { pt3dadd( -31.0537, 18.0705, -53.2538, 0.37 ) }
    dend_117 { pt3dadd( -31.41, 18.4447, -53.6771, 0.88 ) }
    dend_117 { pt3dadd( -31.7106, 18.7829, -54.0821, 0.88 ) }
    dend_117 { pt3dadd( -32.4443, 19.7069, -55.2483, 0.22 ) }
    dend_117 { pt3dadd( -33.241, 20.8566, -56.5497, 0.59 ) }
    dend_117 { pt3dadd( -33.8689, 21.882, -57.7497, 0.59 ) }
    dend_117 { pt3dadd( -34.2815, 22.611, -58.6584, 0.95 ) }
    dend_117 { pt3dadd( -35.0144, 23.8984, -60.404, 0.59 ) }
    dend_117 { pt3dadd( -35.7528, 25.1084, -62.2386, 0.59 ) }
    dend_117 { pt3dadd( -36.1951, 25.8051, -63.4774, 0.95 ) }
    dend_117 { pt3dadd( -36.875, 26.7928, -65.4875, 0.51 ) }
    dend_117 { pt3dadd( -37.5611, 27.6172, -67.3544, 1.18 ) }
    dend_117 { pt3dadd( -38.0384, 28.103, -68.5826, 0.29 ) }
    dend_117 { pt3dadd( -38.5645, 28.5822, -69.7434, 0.29 ) }
    dend_117 { pt3dadd( -39.2721, 29.2152, -71.1007, 0.59 ) }
    dend_117 { pt3dadd( -39.7219, 29.6553, -71.8889, 0.59 ) }
    dend_117 { pt3dadd( -40.486, 30.4923, -72.9505, 0.37 ) }
    dend_117 { pt3dadd( -41.1495, 31.2483, -73.8141, 0.37 ) }
    dend_117 { pt3dadd( -42.033, 32.255, -74.9593, 0.37 ) }
    dend_117 { pt3dadd( -42.6812, 32.9915, -75.765, 1.1 ) }
    dend_117 { pt3dadd( -43.7338, 34.1315, -77.1079, 0.59 ) }
    dend_117 { pt3dadd( -43.9743, 34.3695, -77.4715, 1.25 ) }
    dend_117 { pt3dadd( -45.2864, 35.4638, -79.7077, 0.37 ) }
    dend_117 { pt3dadd( -45.8782, 35.8484, -80.7284, 0.37 ) }
    dend_117 { pt3dadd( -46.2989, 36.0527, -81.4247, 0.37 ) }
    dend_117 { pt3dadd( -47.1693, 36.3822, -82.7503, 0.51 ) }
    dend_117 { pt3dadd( -48.1076, 36.6848, -83.8456, 0.51 ) }
    dend_117 { pt3dadd( -48.7935, 36.9292, -84.4692, 0.51 ) }
    dend_117 { pt3dadd( -49.3449, 37.1567, -84.7971, 0.51 ) }
    dend_117 { pt3dadd( -50.0768, 37.4655, -85.107, 0.51 ) }
    dend_117 { pt3dadd( -50.775, 37.7376, -85.3595, 0.51 ) }
    dend_117 { pt3dadd( -52.3778, 38.3732, -85.8854, 0.81 ) }
    dend_117 { pt3dadd( -53.011, 38.6292, -86.122, 0.51 ) }
    dend_117 { pt3dadd( -53.3314, 38.7467, -86.2621, 1.03 ) }
    dend_117 { pt3dadd( -54.7422, 39.1848, -86.93, 0.29 ) }
    dend_117 { pt3dadd( -56.5382, 39.6898, -87.8399, 0.59 ) }
    dend_117 { pt3dadd( -57.6487, 39.9989, -88.4147, 0.59 ) }
    dend_117 { pt3dadd( -58.7925, 40.2837, -89.0642, 0.59 ) }
    dend_117 { pt3dadd( -59.3393, 40.3892, -89.4004, 0.59 ) }
    dend_117 { pt3dadd( -59.9924, 40.4898, -89.8122, 0.88 ) }
    dend_117 { pt3dadd( -61.1849, 40.6582, -90.5674, 0.51 ) }
    dend_117 { pt3dadd( -61.9119, 40.7717, -91.0248, 0.95 ) }
    dend_117 { pt3dadd( -63.1656, 41.0033, -91.8088, 0.51 ) }
    dend_117 { pt3dadd( -64.6687, 41.413, -92.9251, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_117 { pt3dadd( -65.0546, 41.5705, -93.2622, 0.15 ) }
    dend_117 { pt3dadd( -65.8102, 42.0157, -94.0552, 0.15 ) }
    dend_117 { pt3dadd( -66.5997, 42.6334, -94.9924, 0.15 ) }
    dend_117 { pt3dadd( -66.9528, 42.9988, -95.4694, 0.95 ) }
    dend_117 { pt3dadd( -67.8491, 44.2593, -96.8006, 0.51 ) }
    dend_117 { pt3dadd( -68.2118, 44.8702, -97.351, 0.29 ) }
    dend_117 { pt3dadd( -68.9825, 46.1239, -98.4431, 0.59 ) }
    dend_117 { pt3dadd( -69.4691, 46.878, -99.0869, 0.22 ) }
    dend_117 { pt3dadd( -70.0652, 47.717, -99.7513, 0.37 ) }
    dend_117 { pt3dadd( -71.142, 49.1295, -100.774, 0.37 ) }
    dend_117 { pt3dadd( -71.5954, 49.6978, -101.142, 0.88 ) }
    dend_117 { pt3dadd( -72.2733, 50.5583, -101.682, 0.22 ) }
    dend_117 { pt3dadd( -72.8652, 51.3646, -102.151, 0.44 ) }
    dend_117 { pt3dadd( -73.3668, 52.0807, -102.599, 0.88 ) }
    dend_117 { pt3dadd( -74.0392, 53.037, -103.193, 0.29 ) }
    dend_117 { pt3dadd( -74.7455, 53.998, -103.852, 0.59 ) }
    dend_117 { pt3dadd( -75.0479, 54.3935, -104.192, 0.59 ) }
    dend_117 { pt3dadd( -75.6018, 55.0783, -105.014, 0.22 ) }
    dend_117 { pt3dadd( -76.1374, 55.6472, -105.924, 0.22 ) }
    dend_117 { pt3dadd( -76.4951, 55.9879, -106.584, 0.22 ) }
    dend_117 { pt3dadd( -77.0058, 56.4159, -107.455, 0.66 ) }
    dend_117 { pt3dadd( -78.0639, 57.2317, -109.018, 0.22 ) }
    dend_117 { pt3dadd( -79.783, 58.5376, -111.604, 0.22 ) }
    dend_117 { pt3dadd( -80.8853, 59.3522, -113.254, 0.22 ) }
    dend_117 { pt3dadd( -81.8254, 60.0663, -114.678, 0.22 ) }
    dend_117 { pt3dadd( -82.7872, 60.8422, -116.214, 0.22 ) }
    dend_117 { pt3dadd( -83.6879, 61.6083, -117.632, 0.22 ) }
    // Section: dend_115, id: dend_115, parent: dend_109 (entry count 27/100)
    dend_115 { pt3dclear() }
    dend_115 { pt3dadd( 14.5604, -14.2854, -10.8044, 0.37 ) }
    dend_115 { pt3dadd( 15.644, -15.2748, -10.7875, 0.37 ) }
    dend_115 { pt3dadd( 16.8003, -16.3227, -10.7115, 0.51 ) }
    dend_115 { pt3dadd( 17.4887, -16.9504, -10.6481, 0.51 ) }
    dend_115 { pt3dadd( 18.0335, -17.4737, -10.5897, 0.73 ) }
    dend_115 { pt3dadd( 18.7175, -18.1472, -10.4925, 0.51 ) }
    dend_115 { pt3dadd( 19.2548, -18.6931, -10.4084, 0.37 ) }
    dend_115 { pt3dadd( 19.8628, -19.3239, -10.2898, 0.37 ) }
    dend_115 { pt3dadd( 20.1984, -19.7345, -10.2395, 0.73 ) }
    dend_115 { pt3dadd( 20.6471, -20.391, -10.1776, 0.73 ) }
    dend_115 { pt3dadd( 21.3284, -21.6238, -10.0932, 0.73 ) }
    dend_115 { pt3dadd( 21.7531, -22.654, -10.0499, 0.44 ) }
    dend_115 { pt3dadd( 22.0565, -23.5821, -10.0326, 0.73 ) }
    dend_115 { pt3dadd( 22.4473, -25.0464, -10.0633, 0.51 ) }
    dend_115 { pt3dadd( 22.5658, -25.5677, -10.0769, 0.73 ) }
    dend_115 { pt3dadd( 22.749, -26.4783, -10.1074, 0.73 ) }
    dend_115 { pt3dadd( 22.9615, -27.6459, -10.1581, 0.44 ) }
    dend_115 { pt3dadd( 23.0722, -28.1887, -10.1779, 0.44 ) }
    dend_115 { pt3dadd( 23.3766, -29.3514, -10.252, 0.73 ) }
    dend_115 { pt3dadd( 23.6898, -30.3183, -10.331, 0.37 ) }
    dend_115 { pt3dadd( 23.9046, -30.9159, -10.3966, 0.59 ) }
    dend_115 { pt3dadd( 24.1648, -31.6041, -10.5117, 0.37 ) }
    dend_115 { pt3dadd( 24.5451, -32.6474, -10.7284, 0.44 ) }
    dend_115 { pt3dadd( 24.909, -33.7138, -10.9768, 0.44 ) }
    dend_115 { pt3dadd( 25.1864, -34.5042, -11.1767, 0.95 ) }
    dend_115 { pt3dadd( 25.4262, -35.1517, -11.3541, 0.95 ) }
    dend_115 { pt3dadd( 25.8733, -36.2599, -11.6209, 0.51 ) }
    dend_115 { pt3dadd( 26.2958, -37.2514, -11.7767, 0.51 ) }
    dend_115 { pt3dadd( 26.6977, -38.1483, -11.8227, 0.59 ) }
    dend_115 { pt3dadd( 27.1587, -39.1415, -11.7991, 0.59 ) }
    dend_115 { pt3dadd( 27.5342, -39.8785, -11.775, 0.59 ) }
    dend_115 { pt3dadd( 28.1334, -40.9849, -11.6974, 0.59 ) }
    dend_115 { pt3dadd( 29.0414, -42.6853, -11.5146, 0.59 ) }
    dend_115 { pt3dadd( 29.6974, -44.0226, -11.3684, 0.59 ) }
    dend_115 { pt3dadd( 30.1357, -45.0129, -11.274, 0.59 ) }
    dend_115 { pt3dadd( 30.5304, -46.0281, -11.2056, 0.81 ) }
    dend_115 { pt3dadd( 30.8524, -46.9885, -11.1931, 0.44 ) }
    dend_115 { pt3dadd( 31.1272, -47.9313, -11.2525, 0.44 ) }
    dend_115 { pt3dadd( 31.5004, -49.3139, -11.4175, 0.44 ) }
    dend_115 { pt3dadd( 31.8061, -50.4564, -11.5983, 0.44 ) }
    dend_115 { pt3dadd( 32.0741, -51.3924, -11.7526, 0.59 ) }
    dend_115 { pt3dadd( 32.532, -52.7956, -11.9861, 0.44 ) }
    dend_115 { pt3dadd( 32.9749, -53.8346, -12.1951, 0.51 ) }
    dend_115 { pt3dadd( 33.4988, -54.8529, -12.4063, 0.51 ) }
    dend_115 { pt3dadd( 34.6007, -56.7339, -12.7792, 0.81 ) }
    dend_115 { pt3dadd( 35.1874, -57.6947, -12.9691, 0.44 ) }
    dend_115 { pt3dadd( 35.7982, -58.684, -13.1991, 0.73 ) }
    dend_115 { pt3dadd( 36.8439, -60.4423, -13.6442, 0.22 ) }
    dend_115 { pt3dadd( 37.0963, -60.9131, -13.8119, 0.22 ) }
    dend_115 { pt3dadd( 37.6345, -62.0599, -14.2613, 1.54 ) }
    dend_115 { pt3dadd( 38.3445, -63.748, -14.9623, 0.88 ) }
    dend_115 { pt3dadd( 39.0908, -65.6482, -15.7289, 0.59 ) }
    dend_115 { pt3dadd( 39.5015, -66.7083, -16.1394, 0.59 ) }
    dend_115 { pt3dadd( 40.4471, -69.1375, -17.0234, 0.37 ) }
    dend_115 { pt3dadd( 41.1202, -70.735, -17.5915, 0.44 ) }
    dend_115 { pt3dadd( 41.5328, -71.6156, -17.9329, 0.44 ) }
    dend_115 { pt3dadd( 42.0828, -72.6211, -18.3209, 0.37 ) }
    dend_115 { pt3dadd( 42.5328, -73.3456, -18.6113, 0.37 ) }
    dend_115 { pt3dadd( 42.9152, -73.9471, -18.8914, 1.18 ) }
    dend_115 { pt3dadd( 43.6499, -75.1875, -19.4801, 0.88 ) }
    dend_115 { pt3dadd( 44.4632, -76.6281, -20.2955, 0.51 ) }
    dend_115 { pt3dadd( 44.7083, -77.0777, -20.5508, 0.51 ) }
    dend_115 { pt3dadd( 45.2961, -78.1746, -21.1781, 0.81 ) }
    dend_115 { pt3dadd( 45.749, -79.0346, -21.6534, 0.88 ) }
    dend_115 { pt3dadd( 46.1969, -79.8884, -22.1051, 0.51 ) }
    dend_115 { pt3dadd( 46.7256, -80.8911, -22.5653, 0.73 ) }
    dend_115 { pt3dadd( 47.1232, -81.6866, -22.8547, 0.22 ) }
    dend_115 { pt3dadd( 47.5104, -82.4984, -23.1452, 0.81 ) }
    dend_115 { pt3dadd( 47.9776, -83.5039, -23.4781, 1.03 ) }
    dend_115 { pt3dadd( 48.5161, -84.7185, -23.8398, 0.51 ) }
    dend_115 { pt3dadd( 48.9564, -85.829, -24.1134, 0.88 ) }
    dend_115 { pt3dadd( 49.349, -86.897, -24.3166, 0.44 ) }
    dend_115 { pt3dadd( 49.649, -87.7075, -24.4468, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_115 { pt3dadd( 50.0124, -88.6066, -24.5508, 0.44 ) }
    dend_115 { pt3dadd( 50.6984, -90.0755, -24.708, 0.44 ) }
    dend_115 { pt3dadd( 51.4145, -91.4063, -24.8641, 0.29 ) }
    dend_115 { pt3dadd( 52.0123, -92.416, -25.0364, 0.29 ) }
    dend_115 { pt3dadd( 52.5836, -93.287, -25.2529, 0.95 ) }
    dend_115 { pt3dadd( 53.1503, -94.0932, -25.4892, 1.03 ) }
    dend_115 { pt3dadd( 53.8717, -95.0716, -25.8168, 0.29 ) }
    dend_115 { pt3dadd( 54.3086, -95.6569, -26.036, 0.29 ) }
    dend_115 { pt3dadd( 54.8226, -96.4694, -26.3231, 0.29 ) }
    dend_115 { pt3dadd( 55.2699, -97.3776, -26.5686, 0.73 ) }
    dend_115 { pt3dadd( 55.6013, -98.1763, -26.711, 0.73 ) }
    dend_115 { pt3dadd( 55.9944, -99.2383, -26.8564, 0.29 ) }
    dend_115 { pt3dadd( 56.3556, -100.269, -26.9458, 1.69 ) }
    dend_115 { pt3dadd( 56.7983, -101.469, -27.031, 0.66 ) }
    dend_115 { pt3dadd( 57.0695, -102.113, -27.0352, 0.51 ) }
    dend_115 { pt3dadd( 57.617, -103.226, -26.9897, 0.29 ) }
    dend_115 { pt3dadd( 58.1333, -104.121, -26.9519, 0.44 ) }
    dend_115 { pt3dadd( 58.5246, -104.746, -26.9283, 0.44 ) }
    dend_115 { pt3dadd( 59.0211, -105.549, -26.8656, 0.66 ) }
    dend_115 { pt3dadd( 59.8303, -106.885, -26.687, 0.22 ) }
    dend_115 { pt3dadd( 60.3336, -107.809, -26.5159, 1.32 ) }
    dend_115 { pt3dadd( 61.1521, -109.563, -26.0786, 0.07 ) }
    dend_115 { pt3dadd( 61.6182, -110.737, -25.732, 1.1 ) }
    dend_115 { pt3dadd( 62.0019, -111.957, -25.3415, 0.15 ) }
    dend_115 { pt3dadd( 62.1802, -112.933, -25.0221, 0.15 ) }
    dend_115 { pt3dadd( 62.2124, -113.799, -24.747, 0.81 ) }
    dend_115 { pt3dadd( 62.1075, -114.736, -24.3216, 0.22 ) }
    dend_115 { pt3dadd( 62.0255, -115.087, -24.0889, 0.22 ) }
    dend_115 { pt3dadd( 61.8662, -115.677, -23.6268, 0.29 ) }
    dend_115 { pt3dadd( 61.6258, -116.755, -22.7033, 0.66 ) }
    dend_115 { pt3dadd( 61.5447, -117.256, -22.2576, 0.29 ) }
    dend_115 { pt3dadd( 61.3836, -119.381, -20.2869, 1.54 ) }
    dend_115 { pt3dadd( 61.3964, -120.866, -18.8501, 0.37 ) }
    dend_115 { pt3dadd( 61.4099, -121.04, -18.6844, 0.37 ) }
    dend_115 { pt3dadd( 61.5402, -121.954, -17.8673, 1.18 ) }
    dend_115 { pt3dadd( 61.741, -122.845, -17.1638, 1.1 ) }
    dend_115 { pt3dadd( 62.0366, -123.903, -16.4509, 0.15 ) }
    dend_115 { pt3dadd( 62.3169, -124.794, -15.9645, 0.15 ) }
    dend_115 { pt3dadd( 62.6313, -125.834, -15.4386, 0.73 ) }
    dend_115 { pt3dadd( 62.9352, -127.044, -14.8071, 0.22 ) }
    dend_115 { pt3dadd( 63.1916, -128.461, -14.0433, 0.88 ) }
    dend_115 { pt3dadd( 63.3606, -129.649, -13.3692, 0.44 ) }
    dend_115 { pt3dadd( 63.4563, -130.446, -12.9073, 0.44 ) }
    dend_115 { pt3dadd( 63.5182, -130.958, -12.615, 0.44 ) }
    dend_115 { pt3dadd( 63.6392, -132.113, -11.9236, 1.25 ) }
    dend_115 { pt3dadd( 63.7378, -133.477, -11.0884, 0.44 ) }
    dend_115 { pt3dadd( 63.7752, -134.466, -10.504, 0.44 ) }
    dend_115 { pt3dadd( 63.7943, -135.005, -10.2193, 0.44 ) }
    dend_115 { pt3dadd( 63.8226, -135.657, -9.89499, 0.29 ) }
    dend_115 { pt3dadd( 63.8519, -136.301, -9.57057, 0.29 ) }
    dend_115 { pt3dadd( 63.9077, -137.213, -9.1262, 0.66 ) }
    dend_115 { pt3dadd( 63.9636, -138.083, -8.70895, 0.07 ) }
    dend_115 { pt3dadd( 63.9766, -138.553, -8.47587, 0.07 ) }
    dend_115 { pt3dadd( 63.9637, -139.14, -8.16192, 0.07 ) }
    dend_115 { pt3dadd( 63.9081, -139.892, -7.73343, 1.25 ) }
    // Section: dend_110, id: dend_110, parent: dend_109 (entry count 55/100)
    dend_110 { pt3dclear() }
    dend_110 { pt3dadd( 14.5604, -14.2854, -10.8044, 0.66 ) }
    dend_110 { pt3dadd( 15.6939, -14.6676, -11.0648, 0.66 ) }
    dend_110 { pt3dadd( 17.1746, -15.1041, -11.3645, 0.44 ) }
    dend_110 { pt3dadd( 19.0804, -15.6079, -11.7162, 0.81 ) }
    dend_110 { pt3dadd( 20.7693, -16.0465, -11.995, 0.73 ) }
    dend_110 { pt3dadd( 22.1143, -16.4243, -12.2089, 0.73 ) }
    dend_110 { pt3dadd( 23.1586, -16.7504, -12.3918, 0.88 ) }
    dend_110 { pt3dadd( 24.2533, -17.0946, -12.6031, 0.88 ) }
    dend_110 { pt3dadd( 25.7977, -17.584, -12.9085, 0.66 ) }
    dend_110 { pt3dadd( 27.2463, -18.0657, -13.2351, 1.03 ) }
    dend_110 { pt3dadd( 28.6303, -18.5528, -13.5665, 0.81 ) }
    dend_110 { pt3dadd( 29.9214, -19.0077, -13.9026, 0.88 ) }
    dend_110 { pt3dadd( 31.5838, -19.5568, -14.3856, 0.59 ) }
    dend_110 { pt3dadd( 32.3287, -19.8009, -14.6193, 0.66 ) }
    dend_110 { pt3dadd( 32.8605, -19.9618, -14.7965, 0.66 ) }
    dend_110 { pt3dadd( 33.8153, -20.187, -15.1268, 0.88 ) }
    dend_110 { pt3dadd( 35.3149, -20.3965, -15.6018, 0.66 ) }
    dend_110 { pt3dadd( 36.6471, -20.4774, -15.9398, 1.03 ) }
    // Section: dend_50, id: dend_50, parent: dend_42 (entry count 73/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 4.19816, -2.59232, 14.3108, 3.38 ) }
    dend_50 { pt3dadd( 3.377, -3.70065, 15.5969, 3.38 ) }
    dend_50 { pt3dadd( 2.33208, -4.79524, 16.8887, 3.16 ) }
    dend_50 { pt3dadd( 1.31706, -5.74958, 17.9522, 3.16 ) }
    dend_50 { pt3dadd( -0.156868, -7.13539, 19.4967, 2.79 ) }
    dend_50 { pt3dadd( -1.33726, -8.24522, 20.7335, 2.5 ) }
    dend_50 { pt3dadd( -2.46876, -9.30908, 21.9192, 2.72 ) }
    dend_50 { pt3dadd( -3.61436, -10.1209, 22.9605, 2.86 ) }
    dend_50 { pt3dadd( -4.56113, -10.6463, 23.6812, 3.45 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 82/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 4.19816, -2.59232, 14.3108, 0.73 ) }
    dend_43 { pt3dadd( 4.92815, -0.587777, 15.1026, 0.73 ) }
    dend_43 { pt3dadd( 5.05826, -0.00874202, 15.3712, 0.81 ) }
    dend_43 { pt3dadd( 5.17718, 0.685757, 15.7035, 0.81 ) }
    dend_43 { pt3dadd( 5.2927, 1.50038, 16.0935, 0.95 ) }
    dend_43 { pt3dadd( 5.43197, 2.60355, 16.6013, 1.1 ) }
    dend_43 { pt3dadd( 5.62873, 3.95166, 17.2475, 0.73 ) }
    dend_43 { pt3dadd( 5.83455, 5.54156, 18.0517, 0.51 ) }
    dend_43 { pt3dadd( 6.04772, 6.65238, 18.6488, 0.51 ) }
    dend_43 { pt3dadd( 6.30387, 7.5291, 19.1677, 0.51 ) }
    dend_43 { pt3dadd( 6.61091, 8.13952, 19.6282, 1.03 ) }
    dend_43 { pt3dadd( 7.37475, 9.05731, 20.5215, 0.73 ) }
    dend_43 { pt3dadd( 8.12061, 9.66368, 21.2373, 0.73 ) }
    dend_43 { pt3dadd( 8.83086, 9.96882, 21.8254, 0.59 ) }
    dend_43 { pt3dadd( 9.56688, 10.1082, 22.3945, 0.59 ) }
    dend_43 { pt3dadd( 10.7484, 10.1277, 23.2786, 0.59 ) }
    dend_43 { pt3dadd( 10.8213, 10.1185, 23.3343, 0.59 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 99/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -7.56333, -13.1357, -5.21803, 1.98 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_5 { pt3dadd( -8.67898, -14.132, -4.96863, 1.98 ) }
    dend_5 { pt3dadd( -9.7602, -15.0976, -4.72692, 1.98 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 2/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -7.56333, -13.1357, -5.21803, 0.59 ) }
    dend_4 { pt3dadd( -8.68934, -13.277, -6.19829, 0.59 ) }
    dend_4 { pt3dadd( -9.73873, -13.3505, -7.0434, 0.59 ) }
    dend_4 { pt3dadd( -10.947, -13.3996, -7.8908, 0.37 ) }
    dend_4 { pt3dadd( -11.6117, -13.4099, -8.29896, 0.37 ) }
    dend_4 { pt3dadd( -12.0344, -13.379, -8.51083, 0.37 ) }
    dend_4 { pt3dadd( -12.567, -13.3074, -8.75049, 0.37 ) }
    dend_4 { pt3dadd( -12.9717, -13.2086, -8.89937, 0.37 ) }
    dend_4 { pt3dadd( -13.8095, -12.9242, -9.13079, 1.03 ) }
    dend_4 { pt3dadd( -14.9202, -12.4529, -9.37048, 0.51 ) }
    dend_4 { pt3dadd( -16.4731, -11.6166, -9.69265, 0.81 ) }
    dend_4 { pt3dadd( -17.2439, -11.0434, -9.88378, 0.37 ) }
    dend_4 { pt3dadd( -17.5059, -10.7789, -9.95901, 0.37 ) }
    dend_4 { pt3dadd( -17.8252, -10.3641, -10.0521, 0.37 ) }
    dend_4 { pt3dadd( -18.0984, -9.93003, -10.1409, 0.37 ) }
    dend_4 { pt3dadd( -18.6613, -8.87973, -10.3718, 0.81 ) }
    dend_4 { pt3dadd( -19.3428, -7.41028, -10.8037, 0.44 ) }
    dend_4 { pt3dadd( -19.7493, -6.43654, -11.1514, 0.66 ) }
    dend_4 { pt3dadd( -20.3813, -4.87581, -11.792, 0.22 ) }
    dend_4 { pt3dadd( -20.9986, -3.42966, -12.5019, 0.73 ) }
    dend_4 { pt3dadd( -21.4388, -2.46979, -13.0756, 0.59 ) }
    dend_4 { pt3dadd( -21.9909, -1.33488, -13.8675, 0.59 ) }
    dend_4 { pt3dadd( -22.3832, -0.55382, -14.5117, 0.81 ) }
    dend_4 { pt3dadd( -22.5922, -0.155785, -14.8706, 1.1 ) }
    dend_4 { pt3dadd( -23.2278, 0.949084, -15.911, 0.37 ) }
    dend_4 { pt3dadd( -23.7486, 1.72197, -16.6026, 0.37 ) }
    dend_4 { pt3dadd( -24.1208, 2.22875, -16.9944, 0.66 ) }
    dend_4 { pt3dadd( -25.1358, 3.65574, -17.8994, 0.37 ) }
    dend_4 { pt3dadd( -25.5994, 4.34824, -18.2751, 0.73 ) }
    dend_4 { pt3dadd( -26.0299, 5.06033, -18.6124, 0.66 ) }
    dend_4 { pt3dadd( -26.3586, 5.61704, -18.8321, 0.88 ) }
    dend_4 { pt3dadd( -26.9965, 6.65765, -19.1956, 0.88 ) }
    dend_4 { pt3dadd( -27.822, 7.89012, -19.7202, 0.37 ) }
    dend_4 { pt3dadd( -28.2353, 8.45038, -19.975, 0.37 ) }
    dend_4 { pt3dadd( -28.7778, 9.11271, -20.3298, 0.37 ) }
    dend_4 { pt3dadd( -30.1445, 10.633, -21.24, 0.22 ) }
    dend_4 { pt3dadd( -30.6025, 11.1113, -21.5546, 0.81 ) }
    dend_4 { pt3dadd( -32.2076, 12.6958, -22.6551, 0.66 ) }
    dend_4 { pt3dadd( -33.0527, 13.5276, -23.2691, 0.22 ) }
    dend_4 { pt3dadd( -33.5688, 14.113, -23.6976, 0.22 ) }
    dend_4 { pt3dadd( -34.0095, 14.7551, -24.1411, 0.88 ) }
    dend_4 { pt3dadd( -34.216, 15.3268, -24.4959, 0.44 ) }
    dend_4 { pt3dadd( -34.3054, 16.0648, -24.8628, 0.44 ) }
    dend_4 { pt3dadd( -34.2525, 16.7684, -25.1028, 0.44 ) }
    dend_4 { pt3dadd( -34.1152, 17.741, -25.3837, 0.81 ) }
    dend_4 { pt3dadd( -34.0267, 18.448, -25.548, 1.03 ) }
    dend_4 { pt3dadd( -33.9748, 19.5847, -25.757, 0.51 ) }
    dend_4 { pt3dadd( -34.0279, 20.8495, -25.9303, 0.22 ) }
    dend_4 { pt3dadd( -34.1182, 21.823, -26.0428, 0.22 ) }
    dend_4 { pt3dadd( -34.2921, 23.1876, -26.2098, 0.81 ) }
    dend_4 { pt3dadd( -34.4537, 24.3644, -26.3734, 0.51 ) }
    dend_4 { pt3dadd( -34.6913, 25.9967, -26.6109, 0.81 ) }
    dend_4 { pt3dadd( -34.9372, 27.5848, -26.8493, 0.44 ) }
    dend_4 { pt3dadd( -35.1404, 28.8601, -27.0903, 0.44 ) }
    dend_4 { pt3dadd( -35.3474, 29.8199, -27.3094, 0.44 ) }
    dend_4 { pt3dadd( -35.6288, 30.7547, -27.6386, 0.73 ) }
    dend_4 { pt3dadd( -35.9568, 31.3614, -28.0266, 0.44 ) }
    dend_4 { pt3dadd( -36.357, 31.7196, -28.4491, 0.44 ) }
    dend_4 { pt3dadd( -36.8917, 32.0, -28.9153, 0.44 ) }
    dend_4 { pt3dadd( -37.9971, 32.4521, -29.7493, 0.66 ) }
    dend_4 { pt3dadd( -39.5417, 33.0106, -30.7774, 0.37 ) }
    dend_4 { pt3dadd( -40.9014, 33.4151, -31.6081, 0.59 ) }
    dend_4 { pt3dadd( -41.5139, 33.5676, -31.9851, 0.44 ) }
    dend_4 { pt3dadd( -42.4774, 33.7965, -32.5489, 0.07 ) }
    dend_4 { pt3dadd( -42.8446, 33.9011, -32.756, 0.07 ) }
    dend_4 { pt3dadd( -43.1461, 34.0235, -32.9416, 0.07 ) }
    dend_4 { pt3dadd( -43.7026, 34.3849, -33.3735, 0.37 ) }
    dend_4 { pt3dadd( -44.2892, 34.8701, -34.0234, 0.37 ) }
    dend_4 { pt3dadd( -44.7218, 35.2605, -34.6088, 0.37 ) }
    dend_4 { pt3dadd( -45.1914, 35.7142, -35.3029, 1.18 ) }
    dend_4 { pt3dadd( -45.7306, 36.2556, -36.0923, 1.03 ) }
    dend_4 { pt3dadd( -46.8232, 37.3513, -37.5924, 0.15 ) }
    dend_4 { pt3dadd( -47.3659, 37.8804, -38.2496, 0.66 ) }
    dend_4 { pt3dadd( -47.6643, 38.1283, -38.5277, 0.81 ) }
    dend_4 { pt3dadd( -48.1535, 38.4487, -38.8936, 0.81 ) }
    dend_4 { pt3dadd( -48.5604, 38.6672, -39.1608, 0.44 ) }
    dend_4 { pt3dadd( -49.2222, 39.0098, -39.6568, 0.29 ) }
    dend_4 { pt3dadd( -49.8587, 39.3859, -40.2364, 0.29 ) }
    dend_4 { pt3dadd( -50.8003, 40.0785, -41.2672, 0.29 ) }
    dend_4 { pt3dadd( -51.5722, 40.6729, -42.2066, 1.25 ) }
    dend_4 { pt3dadd( -52.3938, 41.3547, -43.3406, 1.25 ) }
    dend_4 { pt3dadd( -53.5083, 42.4038, -45.1155, 0.15 ) }
    dend_4 { pt3dadd( -53.9601, 42.9103, -45.9746, 0.15 ) }
    dend_4 { pt3dadd( -54.3943, 43.4826, -46.9581, 0.51 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 86/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -33.0237, 25.0315, 3.51537, 0.59 ) }
    dend_2 { pt3dadd( -33.7082, 25.3994, 3.62783, 0.59 ) }
    dend_2 { pt3dadd( -34.9109, 25.971, 3.79961, 0.59 ) }
    dend_2 { pt3dadd( -36.4071, 26.6699, 3.98613, 0.81 ) }
    dend_2 { pt3dadd( -37.3218, 27.1304, 4.08671, 0.66 ) }
    dend_2 { pt3dadd( -38.3314, 27.696, 4.18626, 0.88 ) }
    dend_2 { pt3dadd( -40.0486, 28.762, 4.36515, 0.44 ) }
    dend_2 { pt3dadd( -41.4169, 29.6569, 4.4998, 0.44 ) }
    dend_2 { pt3dadd( -42.6021, 30.4469, 4.60186, 0.44 ) }
    dend_2 { pt3dadd( -43.9581, 31.4109, 4.71721, 0.44 ) }
    dend_2 { pt3dadd( -45.2333, 32.3591, 4.81412, 0.73 ) }
    dend_2 { pt3dadd( -46.1958, 33.1219, 4.84776, 0.73 ) }
    dend_2 { pt3dadd( -47.2103, 33.9919, 4.85893, 0.37 ) }
    dend_2 { pt3dadd( -47.8872, 34.5841, 4.84703, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_2 { pt3dadd( -48.5037, 35.1214, 4.8105, 0.37 ) }
    dend_2 { pt3dadd( -49.36, 35.8519, 4.69817, 0.88 ) }
    dend_2 { pt3dadd( -50.5736, 36.9066, 4.46943, 0.59 ) }
    dend_2 { pt3dadd( -51.4719, 37.7719, 4.25575, 0.59 ) }
    dend_2 { pt3dadd( -52.2514, 38.6858, 4.04238, 0.59 ) }
    dend_2 { pt3dadd( -52.9269, 39.631, 3.86844, 0.59 ) }
    dend_2 { pt3dadd( -53.7906, 40.9657, 3.69581, 0.59 ) }
    dend_2 { pt3dadd( -54.3995, 41.9673, 3.58467, 0.37 ) }
    dend_2 { pt3dadd( -55.0031, 43.0224, 3.5196, 0.37 ) }
    dend_2 { pt3dadd( -55.6047, 44.1472, 3.496, 0.95 ) }
    dend_2 { pt3dadd( -56.6255, 46.1563, 3.50675, 0.59 ) }
    dend_2 { pt3dadd( -57.2514, 47.3538, 3.49272, 0.59 ) }
    dend_2 { pt3dadd( -58.1055, 48.9263, 3.44554, 0.59 ) }
    dend_2 { pt3dadd( -58.7209, 50.022, 3.34591, 0.59 ) }
    dend_2 { pt3dadd( -59.5885, 51.5515, 3.12037, 0.44 ) }
    dend_2 { pt3dadd( -60.1231, 52.5177, 2.93096, 1.03 ) }
    dend_2 { pt3dadd( -60.9732, 54.2288, 2.45989, 0.51 ) }
    dend_2 { pt3dadd( -61.267, 54.8733, 2.22566, 0.73 ) }
    dend_2 { pt3dadd( -61.8211, 56.1688, 1.66714, 0.44 ) }
    dend_2 { pt3dadd( -62.2447, 57.2596, 1.11817, 0.81 ) }
    dend_2 { pt3dadd( -62.6144, 58.3894, 0.560298, 0.66 ) }
    dend_2 { pt3dadd( -63.0166, 59.7678, -0.0773945, 0.95 ) }
    dend_2 { pt3dadd( -63.6193, 62.0087, -1.02085, 0.59 ) }
    dend_2 { pt3dadd( -64.0229, 63.5098, -1.63267, 0.59 ) }
    dend_2 { pt3dadd( -64.507, 65.1915, -2.29309, 0.66 ) }
    dend_2 { pt3dadd( -65.1575, 67.282, -3.12471, 0.51 ) }
    dend_2 { pt3dadd( -65.7466, 68.9827, -3.81324, 0.51 ) }
    dend_2 { pt3dadd( -66.2096, 70.0484, -4.25501, 0.81 ) }
    dend_2 { pt3dadd( -66.6556, 70.7991, -4.60576, 0.81 ) }
    dend_2 { pt3dadd( -67.3731, 71.6308, -5.09874, 0.59 ) }
    dend_2 { pt3dadd( -68.2303, 72.3228, -5.6459, 0.59 ) }
    dend_2 { pt3dadd( -69.3737, 72.9918, -6.36584, 0.66 ) }
    dend_2 { pt3dadd( -70.9334, 73.704, -7.33612, 0.51 ) }
    dend_2 { pt3dadd( -72.0592, 74.1486, -7.99255, 0.51 ) }
    dend_2 { pt3dadd( -72.7118, 74.4035, -8.39139, 0.95 ) }
    dend_2 { pt3dadd( -73.4401, 74.7117, -8.83032, 0.51 ) }
    dend_2 { pt3dadd( -74.1529, 75.0757, -9.23239, 0.88 ) }
    dend_2 { pt3dadd( -75.2603, 75.8114, -9.81126, 0.88 ) }
    dend_2 { pt3dadd( -76.6064, 76.9478, -10.5218, 0.88 ) }
    dend_2 { pt3dadd( -77.9261, 78.1921, -11.2887, 0.59 ) }
    dend_2 { pt3dadd( -78.6027, 78.8353, -11.7194, 0.73 ) }
    dend_2 { pt3dadd( -79.3775, 79.5152, -12.2501, 0.73 ) }
    dend_2 { pt3dadd( -80.3544, 80.3324, -12.9959, 0.51 ) }
    dend_2 { pt3dadd( -81.2393, 81.0824, -13.7695, 0.81 ) }
    dend_2 { pt3dadd( -81.9443, 81.7074, -14.5491, 0.81 ) }
    dend_2 { pt3dadd( -82.7431, 82.4345, -15.5578, 0.73 ) }
    dend_2 { pt3dadd( -83.5534, 83.2204, -16.7134, 0.29 ) }
    dend_2 { pt3dadd( -84.4622, 84.1412, -18.0825, 0.81 ) }
    dend_2 { pt3dadd( -85.2, 84.9479, -19.2613, 1.03 ) }
    dend_2 { pt3dadd( -86.3967, 86.4147, -21.1783, 1.03 ) }
    dend_2 { pt3dadd( -87.0512, 87.345, -22.2618, 0.66 ) }
    dend_2 { pt3dadd( -87.5082, 88.073, -23.0415, 0.66 ) }
    dend_2 { pt3dadd( -87.9257, 88.7576, -23.7143, 0.66 ) }
    dend_2 { pt3dadd( -88.3748, 89.4452, -24.4135, 0.29 ) }
    dend_2 { pt3dadd( -88.7666, 90.0242, -25.0722, 0.88 ) }
    dend_2 { pt3dadd( -89.4692, 91.0414, -26.3629, 0.51 ) }
    dend_2 { pt3dadd( -89.8427, 91.5835, -27.1336, 0.51 ) }
    dend_2 { pt3dadd( -90.2374, 92.1398, -27.9864, 0.51 ) }
    dend_2 { pt3dadd( -91.1355, 93.4049, -29.9711, 0.51 ) }
    dend_2 { pt3dadd( -91.7508, 94.286, -31.2279, 0.51 ) }
    dend_2 { pt3dadd( -91.9358, 94.5715, -31.6162, 0.51 ) }
    dend_2 { pt3dadd( -92.2551, 95.0856, -32.2706, 0.51 ) }
    dend_2 { pt3dadd( -92.9025, 96.0391, -33.4393, 0.37 ) }
    dend_2 { pt3dadd( -93.4416, 96.7335, -34.301, 0.73 ) }
    dend_2 { pt3dadd( -94.0257, 97.4296, -35.1861, 0.95 ) }
    dend_2 { pt3dadd( -94.8121, 98.3722, -36.4563, 0.95 ) }
    dend_2 { pt3dadd( -95.3552, 99.0744, -37.4888, 0.95 ) }
    dend_2 { pt3dadd( -95.7985, 99.7482, -38.5649, 1.1 ) }
    dend_2 { pt3dadd( -96.245, 100.658, -40.1104, 0.73 ) }
    dend_2 { pt3dadd( -96.5865, 101.453, -41.5387, 0.37 ) }
    dend_2 { pt3dadd( -96.7925, 101.908, -42.4108, 0.37 ) }
    dend_2 { pt3dadd( -96.835, 102.014, -42.6095, 1.03 ) }
    dend_2 { pt3dadd( -97.1789, 102.837, -44.2823, 0.44 ) }
    dend_2 { pt3dadd( -97.6432, 103.843, -46.4537, 1.1 ) }
    dend_2 { pt3dadd( -98.328, 105.013, -49.0783, 0.37 ) }
    dend_2 { pt3dadd( -98.8811, 105.783, -50.8771, 0.37 ) }
    dend_2 { pt3dadd( -99.2978, 106.351, -52.2257, 1.03 ) }
    dend_2 { pt3dadd( -99.8605, 107.169, -54.1856, 0.15 ) }
    dend_2 { pt3dadd( -100.006, 107.367, -54.6531, 0.15 ) }
    dend_2 { pt3dadd( -100.219, 107.613, -55.1989, 0.15 ) }
    dend_2 { pt3dadd( -100.789, 108.187, -56.3139, 1.1 ) }
    dend_2 { pt3dadd( -101.853, 109.066, -57.8985, 1.4 ) }
    dend_2 { pt3dadd( -103.318, 109.995, -59.4423, 0.66 ) }
    dend_2 { pt3dadd( -104.461, 110.553, -60.3326, 0.37 ) }
    dend_2 { pt3dadd( -105.728, 110.984, -61.1252, 0.37 ) }
    dend_2 { pt3dadd( -106.973, 111.286, -61.7489, 0.66 ) }
    dend_2 { pt3dadd( -107.918, 111.454, -62.1133, 0.66 ) }
    dend_2 { pt3dadd( -109.3, 111.655, -62.5905, 1.03 ) }
    dend_2 { pt3dadd( -110.765, 111.9, -63.0498, 0.66 ) }
    dend_2 { pt3dadd( -111.951, 112.182, -63.5111, 0.66 ) }
    dend_2 { pt3dadd( -113.054, 112.551, -64.0094, 1.54 ) }
    dend_2 { pt3dadd( -114.32, 113.109, -64.6355, 0.81 ) }
    dend_2 { pt3dadd( -115.93, 114.027, -65.4569, 0.51 ) }
    dend_2 { pt3dadd( -116.974, 114.738, -65.9963, 0.59 ) }
    dend_2 { pt3dadd( -118.189, 115.667, -66.5057, 0.59 ) }
    dend_2 { pt3dadd( -118.836, 116.165, -66.6239, 0.59 ) }
    dend_2 { pt3dadd( -119.314, 116.483, -66.5168, 0.59 ) }
    dend_2 { pt3dadd( -119.793, 116.719, -66.2588, 0.81 ) }
    dend_2 { pt3dadd( -120.645, 117.026, -65.6428, 0.81 ) }
    dend_2 { pt3dadd( -122.239, 117.46, -64.4973, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_2 { pt3dadd( -123.477, 117.791, -63.613, 0.51 ) }
    dend_2 { pt3dadd( -124.391, 118.071, -62.9579, 0.51 ) }
    dend_2 { pt3dadd( -125.727, 118.56, -62.0196, 0.88 ) }
    dend_2 { pt3dadd( -126.877, 119.034, -61.2684, 0.88 ) }
    dend_2 { pt3dadd( -127.763, 119.438, -60.7952, 0.88 ) }
    dend_2 { pt3dadd( -128.71, 119.884, -60.453, 0.59 ) }
    dend_2 { pt3dadd( -130.03, 120.459, -60.2055, 0.59 ) }
    dend_2 { pt3dadd( -130.761, 120.763, -60.1659, 0.59 ) }
    dend_2 { pt3dadd( -132.346, 121.433, -60.3956, 0.29 ) }
    dend_2 { pt3dadd( -133.484, 121.884, -60.8205, 0.66 ) }
    dend_2 { pt3dadd( -135.017, 122.398, -61.5906, 0.66 ) }
    dend_2 { pt3dadd( -136.236, 122.728, -62.3307, 0.66 ) }
    dend_2 { pt3dadd( -136.994, 122.869, -62.8274, 0.66 ) }
    dend_2 { pt3dadd( -138.091, 122.993, -63.5343, 0.66 ) }
    dend_2 { pt3dadd( -139.589, 123.058, -64.4348, 0.66 ) }
    dend_2 { pt3dadd( -140.851, 123.073, -65.1305, 0.66 ) }
    dend_2 { pt3dadd( -142.215, 123.029, -65.7651, 1.03 ) }
    dend_2 { pt3dadd( -144.012, 122.855, -66.5106, 0.22 ) }
    dend_2 { pt3dadd( -145.201, 122.656, -66.9628, 0.07 ) }
    dend_2 { pt3dadd( -146.393, 122.367, -67.3256, 0.66 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 20/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -33.0237, 25.0315, 3.51537, 0.95 ) }
    dend_1 { pt3dadd( -32.6929, 25.8477, 3.32016, 0.95 ) }
    dend_1 { pt3dadd( -32.3462, 26.8145, 3.00387, 0.22 ) }
    dend_1 { pt3dadd( -32.0658, 27.6808, 2.67907, 0.22 ) }
    dend_1 { pt3dadd( -31.8914, 28.2817, 2.4253, 0.22 ) }
    dend_1 { pt3dadd( -31.7426, 28.9627, 2.13561, 0.22 ) }
    dend_1 { pt3dadd( -31.6437, 29.8071, 1.79544, 1.18 ) }
    dend_1 { pt3dadd( -31.6589, 31.1908, 1.24562, 0.15 ) }
    dend_1 { pt3dadd( -31.7132, 31.7025, 1.04972, 0.15 ) }
    dend_1 { pt3dadd( -31.7772, 32.2321, 0.844699, 0.15 ) }
    dend_1 { pt3dadd( -31.9206, 33.3331, 0.371445, 0.95 ) }
    dend_1 { pt3dadd( -32.0744, 34.5704, -0.212022, 0.15 ) }
    dend_1 { pt3dadd( -32.1215, 35.1093, -0.476391, 0.29 ) }
    dend_1 { pt3dadd( -32.1168, 35.9142, -0.866396, 0.29 ) }
    dend_1 { pt3dadd( -31.968, 36.9116, -1.34937, 0.29 ) }
    dend_1 { pt3dadd( -31.5403, 38.2337, -2.01167, 0.44 ) }
    dend_1 { pt3dadd( -31.1385, 38.9839, -2.43518, 0.44 ) }
    dend_1 { pt3dadd( -30.5427, 39.9246, -3.00363, 0.73 ) }
    dend_1 { pt3dadd( -30.1498, 40.5518, -3.41886, 0.81 ) }
    dend_1 { pt3dadd( -29.6122, 41.4678, -4.03545, 0.51 ) }
    dend_1 { pt3dadd( -29.2941, 42.1702, -4.58207, 0.51 ) }
    dend_1 { pt3dadd( -29.0384, 43.0745, -5.39381, 1.54 ) }
    dend_1 { pt3dadd( -28.951, 44.1328, -6.53959, 0.51 ) }
    dend_1 { pt3dadd( -29.093, 45.0702, -7.71421, 0.51 ) }
    dend_1 { pt3dadd( -29.2327, 45.4337, -8.20934, 0.88 ) }
    dend_1 { pt3dadd( -30.0968, 46.7334, -10.0904, 0.81 ) }
    dend_1 { pt3dadd( -30.6356, 47.3001, -10.9514, 0.07 ) }
    dend_1 { pt3dadd( -31.3287, 47.7986, -11.8156, 0.88 ) }
    dend_1 { pt3dadd( -32.003, 48.1216, -12.5187, 0.07 ) }
    dend_1 { pt3dadd( -32.4521, 48.2606, -12.906, 0.44 ) }
    dend_1 { pt3dadd( -33.779, 48.4568, -13.9022, 0.07 ) }
    dend_1 { pt3dadd( -34.3344, 48.4621, -14.2588, 0.66 ) }
    dend_1 { pt3dadd( -35.5125, 48.3616, -15.0045, 0.22 ) }
    dend_1 { pt3dadd( -36.0732, 48.2717, -15.3769, 0.95 ) }
    dend_1 { pt3dadd( -36.8244, 48.0883, -15.9435, 0.95 ) }
    dend_1 { pt3dadd( -38.1506, 47.6451, -17.0065, 0.07 ) }
    dend_1 { pt3dadd( -38.9917, 47.2645, -17.6961, 0.07 ) }
    dend_1 { pt3dadd( -39.7889, 46.8834, -18.3865, 0.59 ) }
    dend_1 { pt3dadd( -40.3765, 46.5925, -18.912, 0.07 ) }
    dend_1 { pt3dadd( -40.8581, 46.3434, -19.366, 0.51 ) }
    dend_1 { pt3dadd( -41.268, 46.0799, -19.7614, 0.07 ) }
    dend_1 { pt3dadd( -41.5764, 45.7956, -20.0725, 0.51 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 62/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -7.88925, 35.5722, 0.0, 0.489566 ) }
    axon_1 { pt3dadd( -11.2403, 50.1931, 0.0, 0.489566 ) }
    axon_1 { pt3dadd( -14.5914, 64.814, 0.0, 0.489566 ) }
    // Section: dend_129, id: dend_129, parent: dend_121 (entry count 65/100)
    dend_129 { pt3dclear() }
    dend_129 { pt3dadd( 1.75216, 17.9576, -13.5644, 0.44 ) }
    dend_129 { pt3dadd( 1.96844, 18.9423, -13.2637, 0.44 ) }
    dend_129 { pt3dadd( 2.10433, 20.1743, -12.8531, 0.44 ) }
    dend_129 { pt3dadd( 2.08763, 21.7, -12.298, 0.44 ) }
    dend_129 { pt3dadd( 1.98742, 22.8027, -11.8728, 0.44 ) }
    dend_129 { pt3dadd( 1.82012, 24.4371, -11.2521, 0.66 ) }
    dend_129 { pt3dadd( 1.72419, 25.2424, -10.9561, 0.66 ) }
    dend_129 { pt3dadd( 1.50183, 26.5221, -10.4562, 0.66 ) }
    dend_129 { pt3dadd( 1.1108, 27.9687, -9.81607, 0.66 ) }
    dend_129 { pt3dadd( 0.643003, 29.2909, -9.15183, 0.81 ) }
    dend_129 { pt3dadd( 0.292033, 30.244, -8.62916, 0.59 ) }
    dend_129 { pt3dadd( 0.0873498, 30.9037, -8.22366, 0.29 ) }
    dend_129 { pt3dadd( -0.038107, 31.4812, -7.879, 0.29 ) }
    dend_129 { pt3dadd( -0.364576, 33.6278, -6.61763, 0.51 ) }
    dend_129 { pt3dadd( -0.506427, 34.7316, -5.98268, 0.88 ) }
    dend_129 { pt3dadd( -0.611072, 35.4521, -5.56368, 0.95 ) }
    dend_129 { pt3dadd( -0.965553, 37.4303, -4.42119, 0.66 ) }
    dend_129 { pt3dadd( -1.26506, 38.9017, -3.58794, 0.44 ) }
    dend_129 { pt3dadd( -1.52036, 40.0554, -2.9518, 0.44 ) }
    dend_129 { pt3dadd( -1.81144, 41.3392, -2.24682, 0.44 ) }
    dend_129 { pt3dadd( -2.03195, 42.2558, -1.71455, 1.32 ) }
    dend_129 { pt3dadd( -2.18969, 42.8483, -1.32286, 1.32 ) }
    dend_129 { pt3dadd( -2.59617, 44.2679, -0.292174, 0.37 ) }
    dend_129 { pt3dadd( -2.768, 45.0261, 0.284966, 0.44 ) }
    dend_129 { pt3dadd( -2.86888, 46.0447, 1.03531, 0.66 ) }
    dend_129 { pt3dadd( -2.86483, 46.5777, 1.43447, 0.66 ) }
    dend_129 { pt3dadd( -2.78768, 47.2746, 1.92993, 0.66 ) }
    dend_129 { pt3dadd( -2.60191, 48.15, 2.52625, 0.73 ) }
    dend_129 { pt3dadd( -2.35832, 48.9106, 2.95524, 0.73 ) }
    dend_129 { pt3dadd( -2.09027, 49.8618, 3.35827, 0.81 ) }
    // Section: dend_122, id: dend_122, parent: dend_121 (entry count 95/100)
    dend_122 { pt3dclear() }
    dend_122 { pt3dadd( 1.75216, 17.9576, -13.5644, 0.66 ) }
    dend_122 { pt3dadd( 2.29175, 18.5351, -13.6467, 0.66 ) }
    dend_122 { pt3dadd( 3.41942, 20.0812, -13.7407, 0.59 ) }
    dend_122 { pt3dadd( 3.97889, 20.9704, -13.763, 0.51 ) }
    dend_122 { pt3dadd( 4.58489, 21.971, -13.7705, 0.51 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_122 { pt3dadd( 5.22097, 23.0501, -13.7748, 0.51 ) }
    dend_122 { pt3dadd( 5.88698, 24.1723, -13.7771, 0.51 ) }
    dend_122 { pt3dadd( 6.70591, 25.6842, -13.7551, 0.81 ) }
    dend_122 { pt3dadd( 7.16999, 26.5974, -13.7397, 0.81 ) }
    dend_122 { pt3dadd( 7.75714, 27.7192, -13.7414, 0.66 ) }
    dend_122 { pt3dadd( 8.17361, 28.4344, -13.755, 0.66 ) }
    dend_122 { pt3dadd( 8.76715, 29.3795, -13.788, 0.66 ) }
    dend_122 { pt3dadd( 9.35543, 30.2666, -13.8473, 0.66 ) }
    dend_122 { pt3dadd( 10.3876, 31.773, -13.9945, 0.29 ) }
    dend_122 { pt3dadd( 11.1231, 32.86, -14.1644, 0.66 ) }
    dend_122 { pt3dadd( 12.0663, 34.2554, -14.4466, 0.44 ) }
    dend_122 { pt3dadd( 12.4027, 34.7289, -14.5579, 0.51 ) }
    dend_122 { pt3dadd( 12.8863, 35.3845, -14.7329, 0.51 ) }
    dend_122 { pt3dadd( 13.2612, 35.8552, -14.8686, 0.59 ) }
    dend_122 { pt3dadd( 14.4975, 37.2626, -15.3134, 0.88 ) }
    dend_122 { pt3dadd( 15.3309, 38.1647, -15.6126, 1.1 ) }
    dend_122 { pt3dadd( 16.1009, 38.9929, -15.8836, 1.25 ) }
    dend_122 { pt3dadd( 16.8371, 39.7503, -16.1042, 0.44 ) }
    dend_122 { pt3dadd( 17.5364, 40.4527, -16.2755, 0.88 ) }
    dend_122 { pt3dadd( 18.5207, 41.4997, -16.4762, 0.29 ) }
    dend_122 { pt3dadd( 19.1459, 42.2416, -16.5776, 0.29 ) }
    dend_122 { pt3dadd( 20.1204, 43.5603, -16.7241, 0.44 ) }
    dend_122 { pt3dadd( 21.0604, 45.0155, -16.8454, 0.59 ) }
    dend_122 { pt3dadd( 21.6171, 45.9322, -16.8568, 0.95 ) }
    dend_122 { pt3dadd( 22.4245, 47.2893, -16.7834, 0.66 ) }
    dend_122 { pt3dadd( 23.0272, 48.2824, -16.634, 0.66 ) }
    dend_122 { pt3dadd( 23.6409, 49.2303, -16.4602, 0.66 ) }
    dend_122 { pt3dadd( 24.3089, 50.1427, -16.286, 0.66 ) }
    dend_122 { pt3dadd( 25.4256, 51.4971, -16.0726, 1.1 ) }
    dend_122 { pt3dadd( 26.1398, 52.2473, -15.9903, 0.51 ) }
    dend_122 { pt3dadd( 26.8287, 52.8936, -15.982, 0.51 ) }
    dend_122 { pt3dadd( 28.0138, 54.0413, -16.0442, 0.95 ) }
    dend_122 { pt3dadd( 29.3596, 55.4766, -16.2793, 0.59 ) }
    dend_122 { pt3dadd( 29.8571, 56.102, -16.4263, 0.37 ) }
    dend_122 { pt3dadd( 30.2991, 56.814, -16.6753, 0.73 ) }
    dend_122 { pt3dadd( 30.8499, 57.909, -17.1046, 0.95 ) }
    dend_122 { pt3dadd( 31.397, 59.2101, -17.6725, 1.1 ) }
    dend_122 { pt3dadd( 31.6825, 59.9375, -17.968, 1.1 ) }
    dend_122 { pt3dadd( 31.8771, 60.4601, -18.1766, 1.25 ) }
    dend_122 { pt3dadd( 32.8084, 62.7546, -19.0713, 0.51 ) }
    dend_122 { pt3dadd( 33.3994, 64.075, -19.5909, 0.81 ) }
    dend_122 { pt3dadd( 34.0726, 65.3657, -20.0746, 0.37 ) }
    dend_122 { pt3dadd( 34.7116, 66.4048, -20.4365, 0.37 ) }
    dend_122 { pt3dadd( 35.142, 67.0301, -20.6325, 0.88 ) }
    dend_122 { pt3dadd( 35.7453, 67.814, -20.8545, 0.51 ) }
    dend_122 { pt3dadd( 36.7169, 68.8957, -21.124, 0.37 ) }
    dend_122 { pt3dadd( 37.9536, 70.0588, -21.4315, 0.37 ) }
    dend_122 { pt3dadd( 39.5287, 71.4245, -21.8159, 0.37 ) }
    dend_122 { pt3dadd( 40.3569, 72.1255, -22.0448, 0.44 ) }
    dend_122 { pt3dadd( 41.0047, 72.6386, -22.2016, 0.81 ) }
    dend_122 { pt3dadd( 42.2004, 73.5012, -22.4248, 0.44 ) }
    dend_122 { pt3dadd( 43.2238, 74.1572, -22.5714, 0.51 ) }
    dend_122 { pt3dadd( 43.9935, 74.6108, -22.6645, 0.73 ) }
    dend_122 { pt3dadd( 44.6691, 75.0252, -22.7851, 1.1 ) }
    dend_122 { pt3dadd( 46.0421, 76.0295, -23.2129, 0.66 ) }
    dend_122 { pt3dadd( 47.0522, 76.9641, -23.8316, 0.51 ) }
    dend_122 { pt3dadd( 47.4867, 77.4583, -24.2508, 0.51 ) }
    dend_122 { pt3dadd( 47.9831, 78.0847, -24.8482, 0.88 ) }
    dend_122 { pt3dadd( 49.0292, 79.426, -26.3006, 0.44 ) }
    dend_122 { pt3dadd( 49.9162, 80.5313, -27.6439, 0.88 ) }
    dend_122 { pt3dadd( 50.8709, 81.6909, -29.2459, 0.44 ) }
    dend_122 { pt3dadd( 51.3454, 82.2767, -30.072, 0.44 ) }
    dend_122 { pt3dadd( 51.9248, 82.9696, -31.0225, 0.66 ) }
    dend_122 { pt3dadd( 52.9032, 84.0793, -32.4958, 1.03 ) }
    dend_122 { pt3dadd( 53.7613, 84.9274, -33.554, 0.37 ) }
    dend_122 { pt3dadd( 54.7266, 85.7973, -34.604, 0.37 ) }
    dend_122 { pt3dadd( 55.0904, 86.1029, -34.9897, 0.37 ) }
    dend_122 { pt3dadd( 55.6904, 86.6041, -35.6407, 0.37 ) }
    dend_122 { pt3dadd( 56.2247, 87.0591, -36.2489, 0.81 ) }
    dend_122 { pt3dadd( 57.2325, 87.9729, -37.3304, 0.51 ) }
    dend_122 { pt3dadd( 57.6059, 88.3509, -37.7172, 0.95 ) }
    dend_122 { pt3dadd( 58.6139, 89.3063, -38.6131, 1.03 ) }
    // Section: dend_114, id: dend_114, parent: dend_110 (entry count 72/100)
    dend_114 { pt3dclear() }
    dend_114 { pt3dadd( 36.6471, -20.4774, -15.9398, 0.73 ) }
    dend_114 { pt3dadd( 37.1403, -20.8465, -16.2386, 0.73 ) }
    dend_114 { pt3dadd( 38.0953, -21.5278, -16.8039, 0.59 ) }
    dend_114 { pt3dadd( 39.2066, -22.298, -17.4116, 0.66 ) }
    dend_114 { pt3dadd( 40.449, -23.1075, -18.0362, 0.51 ) }
    dend_114 { pt3dadd( 41.383, -23.6796, -18.5023, 0.51 ) }
    dend_114 { pt3dadd( 42.524, -24.3454, -19.0802, 0.66 ) }
    dend_114 { pt3dadd( 43.8989, -25.0857, -19.732, 0.59 ) }
    dend_114 { pt3dadd( 44.8736, -25.5579, -20.1537, 0.59 ) }
    dend_114 { pt3dadd( 45.7614, -25.9488, -20.5134, 0.51 ) }
    dend_114 { pt3dadd( 46.9384, -26.4444, -20.9402, 0.37 ) }
    dend_114 { pt3dadd( 47.7317, -26.7682, -21.2328, 0.51 ) }
    dend_114 { pt3dadd( 48.961, -27.2758, -21.7488, 0.59 ) }
    dend_114 { pt3dadd( 49.91, -27.698, -22.1679, 0.37 ) }
    dend_114 { pt3dadd( 50.7085, -28.0872, -22.5612, 0.22 ) }
    dend_114 { pt3dadd( 51.5567, -28.5156, -23.0132, 0.81 ) }
    dend_114 { pt3dadd( 52.7969, -29.1407, -23.7058, 0.66 ) }
    dend_114 { pt3dadd( 53.9825, -29.7084, -24.422, 0.66 ) }
    dend_114 { pt3dadd( 54.9007, -30.1201, -25.0105, 0.44 ) }
    dend_114 { pt3dadd( 55.9525, -30.5642, -25.6716, 1.03 ) }
    dend_114 { pt3dadd( 57.1418, -31.0406, -26.381, 0.44 ) }
    dend_114 { pt3dadd( 58.267, -31.4704, -26.9923, 0.44 ) }
    dend_114 { pt3dadd( 59.4142, -31.8839, -27.5156, 0.44 ) }
    dend_114 { pt3dadd( 60.2161, -32.1439, -27.8219, 1.1 ) }
    dend_114 { pt3dadd( 61.6606, -32.5646, -28.2912, 0.51 ) }
    dend_114 { pt3dadd( 62.6436, -32.8399, -28.5433, 0.44 ) }
    dend_114 { pt3dadd( 63.8649, -33.205, -28.7857, 0.51 ) }
    dend_114 { pt3dadd( 64.5676, -33.4275, -28.8932, 0.51 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_114 { pt3dadd( 65.8181, -33.8668, -29.0429, 0.88 ) }
    dend_114 { pt3dadd( 66.6704, -34.1843, -29.144, 0.37 ) }
    dend_114 { pt3dadd( 67.3131, -34.4306, -29.211, 0.22 ) }
    dend_114 { pt3dadd( 68.2388, -34.7953, -29.3663, 0.66 ) }
    dend_114 { pt3dadd( 68.9862, -35.1277, -29.5296, 0.66 ) }
    dend_114 { pt3dadd( 69.8587, -35.6086, -29.7654, 0.29 ) }
    dend_114 { pt3dadd( 70.3327, -35.9299, -29.9258, 0.29 ) }
    dend_114 { pt3dadd( 71.3185, -36.6423, -30.3269, 0.81 ) }
    dend_114 { pt3dadd( 72.6273, -37.5663, -30.8881, 0.22 ) }
    dend_114 { pt3dadd( 73.2535, -37.9879, -31.1588, 0.44 ) }
    dend_114 { pt3dadd( 74.1521, -38.5743, -31.5523, 1.1 ) }
    dend_114 { pt3dadd( 75.0244, -39.1572, -31.9171, 0.51 ) }
    dend_114 { pt3dadd( 76.1979, -39.9846, -32.3548, 0.66 ) }
    dend_114 { pt3dadd( 77.0983, -40.6502, -32.635, 0.37 ) }
    dend_114 { pt3dadd( 77.4509, -40.9135, -32.7048, 0.37 ) }
    dend_114 { pt3dadd( 78.1283, -41.4044, -32.7983, 0.37 ) }
    dend_114 { pt3dadd( 79.1092, -42.1038, -32.8502, 1.03 ) }
    dend_114 { pt3dadd( 79.9964, -42.774, -32.8157, 0.29 ) }
    dend_114 { pt3dadd( 80.9357, -43.5526, -32.7161, 0.81 ) }
    dend_114 { pt3dadd( 82.0209, -44.5341, -32.568, 0.44 ) }
    dend_114 { pt3dadd( 82.806, -45.3066, -32.4399, 0.44 ) }
    dend_114 { pt3dadd( 83.9241, -46.4668, -32.2183, 0.51 ) }
    dend_114 { pt3dadd( 84.6566, -47.2407, -32.0633, 0.51 ) }
    dend_114 { pt3dadd( 85.0998, -47.721, -31.9688, 0.51 ) }
    dend_114 { pt3dadd( 85.7301, -48.4106, -31.8478, 0.51 ) }
    dend_114 { pt3dadd( 86.3084, -49.0319, -31.7497, 0.51 ) }
    dend_114 { pt3dadd( 87.0236, -49.7926, -31.6462, 0.51 ) }
    dend_114 { pt3dadd( 87.7775, -50.5625, -31.5366, 0.59 ) }
    dend_114 { pt3dadd( 88.4478, -51.2302, -31.4324, 0.59 ) }
    dend_114 { pt3dadd( 88.9982, -51.7582, -31.3647, 0.22 ) }
    dend_114 { pt3dadd( 89.6586, -52.3557, -31.3038, 0.66 ) }
    dend_114 { pt3dadd( 90.265, -52.8834, -31.2643, 0.66 ) }
    dend_114 { pt3dadd( 91.055, -53.5924, -31.2357, 0.22 ) }
    dend_114 { pt3dadd( 92.1187, -54.4959, -31.1851, 0.37 ) }
    dend_114 { pt3dadd( 93.0282, -55.2007, -31.1403, 0.07 ) }
    dend_114 { pt3dadd( 93.6982, -55.6845, -31.1104, 0.07 ) }
    dend_114 { pt3dadd( 94.1994, -56.0075, -31.0939, 0.07 ) }
    dend_114 { pt3dadd( 94.9412, -56.4052, -31.0742, 0.88 ) }
    dend_114 { pt3dadd( 96.7206, -57.2054, -31.0987, 0.29 ) }
    dend_114 { pt3dadd( 97.2752, -57.4181, -31.1137, 0.07 ) }
    dend_114 { pt3dadd( 97.7423, -57.582, -31.1292, 0.73 ) }
    dend_114 { pt3dadd( 98.9603, -57.9925, -31.2, 0.22 ) }
    dend_114 { pt3dadd( 100.081, -58.3737, -31.3197, 0.66 ) }
    dend_114 { pt3dadd( 101.4, -58.8251, -31.5135, 0.29 ) }
    dend_114 { pt3dadd( 102.101, -59.0738, -31.6432, 0.29 ) }
    dend_114 { pt3dadd( 103.613, -59.5944, -31.889, 0.95 ) }
    dend_114 { pt3dadd( 105.21, -60.1233, -32.0615, 0.22 ) }
    dend_114 { pt3dadd( 106.412, -60.5102, -32.1209, 0.22 ) }
    dend_114 { pt3dadd( 107.041, -60.7151, -32.1258, 0.22 ) }
    dend_114 { pt3dadd( 107.743, -60.9332, -32.1048, 0.22 ) }
    dend_114 { pt3dadd( 109.085, -61.3412, -32.076, 0.81 ) }
    dend_114 { pt3dadd( 110.564, -61.7911, -32.0475, 0.15 ) }
    dend_114 { pt3dadd( 111.934, -62.21, -32.0208, 0.95 ) }
    dend_114 { pt3dadd( 112.932, -62.5243, -32.0016, 0.15 ) }
    dend_114 { pt3dadd( 114.18, -62.9387, -32.0138, 0.81 ) }
    dend_114 { pt3dadd( 115.457, -63.3857, -32.0838, 0.37 ) }
    dend_114 { pt3dadd( 116.013, -63.5887, -32.149, 0.37 ) }
    dend_114 { pt3dadd( 116.993, -63.9373, -32.3361, 0.66 ) }
    dend_114 { pt3dadd( 117.735, -64.1863, -32.4934, 0.22 ) }
    dend_114 { pt3dadd( 118.082, -64.2984, -32.5645, 0.22 ) }
    dend_114 { pt3dadd( 118.684, -64.476, -32.6998, 0.22 ) }
    dend_114 { pt3dadd( 119.124, -64.5708, -32.8139, 0.59 ) }
    dend_114 { pt3dadd( 120.16, -64.7221, -33.1126, 0.29 ) }
    dend_114 { pt3dadd( 120.792, -64.7931, -33.301, 1.03 ) }
    dend_114 { pt3dadd( 121.776, -64.9312, -33.6074, 0.22 ) }
    dend_114 { pt3dadd( 122.708, -65.1201, -33.8938, 0.95 ) }
    dend_114 { pt3dadd( 124.03, -65.4749, -34.3308, 0.22 ) }
    dend_114 { pt3dadd( 124.672, -65.6928, -34.5487, 0.44 ) }
    dend_114 { pt3dadd( 125.366, -65.9608, -34.8138, 0.44 ) }
    dend_114 { pt3dadd( 126.102, -66.289, -35.1383, 0.22 ) }
    dend_114 { pt3dadd( 126.749, -66.6227, -35.449, 0.66 ) }
    dend_114 { pt3dadd( 127.769, -67.2848, -35.9577, 0.37 ) }
    dend_114 { pt3dadd( 128.486, -67.8212, -36.3063, 0.37 ) }
    dend_114 { pt3dadd( 129.47, -68.5638, -36.7806, 0.37 ) }
    dend_114 { pt3dadd( 129.964, -68.8956, -37.0017, 0.95 ) }
    dend_114 { pt3dadd( 130.525, -69.2157, -37.2208, 0.66 ) }
    dend_114 { pt3dadd( 131.393, -69.6918, -37.5224, 0.22 ) }
    dend_114 { pt3dadd( 132.084, -70.1043, -37.7527, 0.22 ) }
    dend_114 { pt3dadd( 132.686, -70.4918, -37.9922, 0.22 ) }
    dend_114 { pt3dadd( 133.469, -71.0434, -38.3192, 0.81 ) }
    dend_114 { pt3dadd( 134.413, -71.7628, -38.8327, 0.15 ) }
    dend_114 { pt3dadd( 134.939, -72.2082, -39.2044, 0.95 ) }
    dend_114 { pt3dadd( 135.805, -73.0566, -39.9393, 0.73 ) }
    dend_114 { pt3dadd( 136.409, -73.7583, -40.6271, 0.07 ) }
    dend_114 { pt3dadd( 136.785, -74.2501, -41.1324, 0.88 ) }
    dend_114 { pt3dadd( 137.447, -75.2187, -42.1415, 0.22 ) }
    dend_114 { pt3dadd( 137.867, -75.8597, -42.847, 0.22 ) }
    dend_114 { pt3dadd( 138.191, -76.3316, -43.4066, 1.18 ) }
    dend_114 { pt3dadd( 139.125, -77.7297, -45.0841, 0.22 ) }
    dend_114 { pt3dadd( 139.33, -78.0776, -45.511, 0.59 ) }
    dend_114 { pt3dadd( 139.484, -78.3932, -45.9159, 0.59 ) }
    dend_114 { pt3dadd( 139.793, -79.1569, -46.8454, 0.37 ) }
    dend_114 { pt3dadd( 140.01, -79.7972, -47.5628, 0.37 ) }
    dend_114 { pt3dadd( 140.092, -80.1405, -47.889, 0.07 ) }
    dend_114 { pt3dadd( 140.199, -81.0641, -48.4461, 0.07 ) }
    dend_114 { pt3dadd( 140.256, -81.6782, -48.741, 0.88 ) }
    dend_114 { pt3dadd( 140.396, -82.6158, -49.1095, 0.15 ) }
    dend_114 { pt3dadd( 140.525, -83.1894, -49.265, 0.15 ) }
    dend_114 { pt3dadd( 140.882, -84.2013, -49.4664, 0.29 ) }
    dend_114 { pt3dadd( 141.29, -85.1693, -49.6315, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_114 { pt3dadd( 141.527, -85.6548, -49.6921, 0.07 ) }
    dend_114 { pt3dadd( 142.005, -86.5321, -49.8089, 0.07 ) }
    dend_114 { pt3dadd( 142.342, -87.1207, -49.8994, 0.07 ) }
    dend_114 { pt3dadd( 142.902, -87.9614, -50.062, 1.1 ) }
    // Section: dend_111, id: dend_111, parent: dend_110 (entry count 4/100)
    dend_111 { pt3dclear() }
    dend_111 { pt3dadd( 36.6471, -20.4774, -15.9398, 0.51 ) }
    dend_111 { pt3dadd( 36.4734, -20.852, -16.8576, 0.51 ) }
    dend_111 { pt3dadd( 36.38, -21.6776, -19.0363, 0.59 ) }
    dend_111 { pt3dadd( 36.4437, -22.0408, -20.1806, 0.81 ) }
    dend_111 { pt3dadd( 36.6242, -22.3401, -21.3131, 0.81 ) }
    dend_111 { pt3dadd( 36.673, -22.3881, -21.5147, 0.81 ) }
    dend_111 { pt3dadd( 36.954, -22.5885, -22.3981, 0.44 ) }
    dend_111 { pt3dadd( 37.7967, -22.9128, -24.166, 0.51 ) }
    dend_111 { pt3dadd( 38.4275, -23.0103, -25.0997, 0.51 ) }
    dend_111 { pt3dadd( 39.2264, -23.0795, -26.1369, 0.51 ) }
    dend_111 { pt3dadd( 39.768, -23.0972, -26.7851, 0.51 ) }
    dend_111 { pt3dadd( 40.5886, -23.1017, -27.7588, 0.59 ) }
    dend_111 { pt3dadd( 40.9179, -23.0919, -28.1319, 0.59 ) }
    dend_111 { pt3dadd( 41.7795, -23.0581, -28.9639, 1.32 ) }
    // Section: dend_66, id: dend_66, parent: dend_50 (entry count 18/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -4.56113, -10.6463, 23.6812, 2.57 ) }
    dend_66 { pt3dadd( -4.36646, -11.6693, 23.7334, 2.57 ) }
    dend_66 { pt3dadd( -4.0701, -13.2266, 23.813, 1.62 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 21/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -4.56113, -10.6463, 23.6812, 2.28 ) }
    dend_51 { pt3dadd( -5.90763, -10.3756, 23.4878, 2.28 ) }
    dend_51 { pt3dadd( -7.18009, -10.1458, 23.2881, 1.69 ) }
    dend_51 { pt3dadd( -8.54097, -9.92371, 23.1094, 1.4 ) }
    dend_51 { pt3dadd( -9.87358, -9.75904, 22.9583, 1.03 ) }
    dend_51 { pt3dadd( -11.1161, -9.71183, 22.8631, 0.81 ) }
    dend_51 { pt3dadd( -12.5563, -9.79333, 22.8455, 0.88 ) }
    dend_51 { pt3dadd( -13.4224, -9.97435, 22.9278, 1.03 ) }
    dend_51 { pt3dadd( -14.2776, -10.2403, 23.1146, 1.03 ) }
    dend_51 { pt3dadd( -15.0858, -10.5192, 23.3829, 1.32 ) }
    dend_51 { pt3dadd( -16.6063, -11.1232, 24.0466, 0.81 ) }
    dend_51 { pt3dadd( -17.9828, -11.7498, 24.8185, 0.95 ) }
    dend_51 { pt3dadd( -19.0281, -12.3167, 25.5242, 0.95 ) }
    dend_51 { pt3dadd( -19.5274, -12.6154, 25.8977, 0.95 ) }
    dend_51 { pt3dadd( -20.3158, -13.0886, 26.5345, 1.25 ) }
    // Section: dend_47, id: dend_47, parent: dend_43 (entry count 36/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 10.8213, 10.1185, 23.3343, 0.66 ) }
    dend_47 { pt3dadd( 11.6941, 10.6138, 22.9028, 0.66 ) }
    dend_47 { pt3dadd( 13.6991, 11.7518, 21.9115, 0.66 ) }
    dend_47 { pt3dadd( 14.8504, 12.4051, 21.3423, 0.73 ) }
    dend_47 { pt3dadd( 15.6535, 12.8609, 20.9452, 0.59 ) }
    dend_47 { pt3dadd( 17.3135, 13.803, 20.1245, 0.73 ) }
    dend_47 { pt3dadd( 18.3777, 14.4071, 19.5983, 0.88 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 43/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 10.8213, 10.1185, 23.3343, 0.66 ) }
    dend_44 { pt3dadd( 10.9333, 10.6672, 23.4849, 0.66 ) }
    dend_44 { pt3dadd( 11.0943, 11.4557, 23.7013, 0.66 ) }
    dend_44 { pt3dadd( 11.1121, 11.5433, 23.7253, 0.66 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 47/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -9.7602, -15.0976, -4.72692, 1.84 ) }
    dend_7 { pt3dadd( -10.8016, -16.6296, -3.09227, 1.84 ) }
    dend_7 { pt3dadd( -11.6478, -17.8745, -1.76399, 1.91 ) }
    dend_7 { pt3dadd( -12.0714, -18.4977, -1.09906, 2.06 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 51/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -9.7602, -15.0976, -4.72692, 0.22 ) }
    dend_6 { pt3dadd( -11.3396, -15.4647, -4.88804, 0.22 ) }
    dend_6 { pt3dadd( -12.155, -15.6784, -4.96758, 0.22 ) }
    dend_6 { pt3dadd( -13.0132, -15.9012, -5.07369, 0.29 ) }
    dend_6 { pt3dadd( -13.8394, -16.0743, -5.17635, 0.29 ) }
    dend_6 { pt3dadd( -14.6991, -16.2239, -5.3254, 0.59 ) }
    dend_6 { pt3dadd( -15.568, -16.3499, -5.48949, 0.44 ) }
    dend_6 { pt3dadd( -16.9365, -16.4923, -5.78137, 0.81 ) }
    dend_6 { pt3dadd( -17.9615, -16.5737, -6.01476, 0.59 ) }
    dend_6 { pt3dadd( -19.4041, -16.6766, -6.33873, 0.59 ) }
    dend_6 { pt3dadd( -20.9482, -16.7823, -6.69237, 0.66 ) }
    dend_6 { pt3dadd( -22.1611, -16.8468, -6.9898, 0.59 ) }
    dend_6 { pt3dadd( -23.3835, -16.8811, -7.29495, 0.44 ) }
    dend_6 { pt3dadd( -24.2461, -16.8879, -7.51781, 0.44 ) }
    dend_6 { pt3dadd( -25.4282, -16.9376, -7.81654, 0.59 ) }
    dend_6 { pt3dadd( -26.3201, -17.0516, -8.05242, 0.59 ) }
    dend_6 { pt3dadd( -27.3652, -17.2679, -8.34788, 0.51 ) }
    dend_6 { pt3dadd( -28.1665, -17.4997, -8.66227, 0.51 ) }
    dend_6 { pt3dadd( -28.6499, -17.6606, -8.88265, 0.51 ) }
    dend_6 { pt3dadd( -29.2821, -17.8896, -9.19929, 0.73 ) }
    dend_6 { pt3dadd( -30.2997, -18.3179, -9.74016, 0.51 ) }
    dend_6 { pt3dadd( -31.2513, -18.7854, -10.2909, 0.51 ) }
    dend_6 { pt3dadd( -32.0439, -19.2528, -10.8263, 0.51 ) }
    dend_6 { pt3dadd( -33.0256, -19.8931, -11.5884, 0.59 ) }
    dend_6 { pt3dadd( -33.6708, -20.3145, -12.1366, 0.59 ) }
    dend_6 { pt3dadd( -34.3897, -20.75, -12.8498, 0.51 ) }
    dend_6 { pt3dadd( -35.1073, -21.1643, -13.5826, 0.51 ) }
    dend_6 { pt3dadd( -35.8513, -21.5991, -14.3662, 0.73 ) }
    dend_6 { pt3dadd( -36.9397, -22.1772, -15.5184, 0.95 ) }
    dend_6 { pt3dadd( -38.4046, -22.799, -17.1215, 0.44 ) }
    dend_6 { pt3dadd( -39.9865, -23.2536, -18.8354, 0.95 ) }
    dend_6 { pt3dadd( -40.9092, -23.3953, -19.8029, 0.95 ) }
    dend_6 { pt3dadd( -41.9262, -23.4088, -20.7916, 0.59 ) }
    dend_6 { pt3dadd( -43.1819, -23.2271, -21.9552, 0.44 ) }
    dend_6 { pt3dadd( -44.6769, -22.7398, -23.2679, 0.51 ) }
    dend_6 { pt3dadd( -45.8003, -22.1319, -24.1957, 0.51 ) }
    dend_6 { pt3dadd( -46.3736, -21.7116, -24.6432, 0.51 ) }
    dend_6 { pt3dadd( -47.0827, -21.0592, -25.2277, 0.44 ) }
    dend_6 { pt3dadd( -47.7328, -20.3609, -25.7966, 0.44 ) }
    dend_6 { pt3dadd( -48.3351, -19.6699, -26.3308, 0.44 ) }
    dend_6 { pt3dadd( -48.7775, -19.1187, -26.7652, 0.59 ) }
    dend_6 { pt3dadd( -49.0859, -18.7122, -27.1022, 0.59 ) }
    dend_6 { pt3dadd( -49.9017, -17.7226, -28.0664, 1.18 ) }
    dend_6 { pt3dadd( -50.6857, -16.804, -29.0764, 1.47 ) }
    dend_6 { pt3dadd( -51.25, -16.1447, -29.8666, 1.1 ) }
    dend_6 { pt3dadd( -52.0889, -15.1484, -31.0848, 0.51 ) }
    dend_6 { pt3dadd( -52.3598, -14.8267, -31.4703, 0.88 ) }
    dend_6 { pt3dadd( -53.3451, -13.6681, -32.7971, 0.51 ) }
    dend_6 { pt3dadd( -53.9455, -12.9993, -33.5786, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_6 { pt3dadd( -54.7364, -12.247, -34.517, 0.81 ) }
    dend_6 { pt3dadd( -55.207, -11.8881, -35.0558, 1.1 ) }
    dend_6 { pt3dadd( -56.1531, -11.3564, -35.942, 0.51 ) }
    dend_6 { pt3dadd( -57.1638, -10.8753, -36.8065, 0.95 ) }
    dend_6 { pt3dadd( -58.0888, -10.4943, -37.4858, 0.95 ) }
    dend_6 { pt3dadd( -58.6988, -10.2869, -37.8651, 0.66 ) }
    dend_6 { pt3dadd( -59.6639, -10.0157, -38.3836, 0.44 ) }
    dend_6 { pt3dadd( -61.3156, -9.6438, -39.2626, 0.37 ) }
    dend_6 { pt3dadd( -62.2953, -9.49454, -39.7329, 0.37 ) }
    dend_6 { pt3dadd( -63.1661, -9.41124, -40.1113, 0.37 ) }
    dend_6 { pt3dadd( -63.7529, -9.35558, -40.3484, 0.37 ) }
    dend_6 { pt3dadd( -64.3877, -9.2958, -40.6094, 0.37 ) }
    dend_6 { pt3dadd( -65.4889, -9.20681, -41.0269, 1.03 ) }
    dend_6 { pt3dadd( -66.3954, -9.02963, -41.3743, 0.37 ) }
    dend_6 { pt3dadd( -66.9281, -8.79299, -41.5923, 0.22 ) }
    dend_6 { pt3dadd( -67.5948, -8.37512, -41.8784, 0.22 ) }
    dend_6 { pt3dadd( -67.8791, -8.16052, -41.982, 0.22 ) }
    dend_6 { pt3dadd( -68.6621, -7.50596, -42.2271, 1.54 ) }
    dend_6 { pt3dadd( -70.4031, -5.95082, -42.6823, 0.66 ) }
    dend_6 { pt3dadd( -71.9247, -4.55691, -43.044, 0.66 ) }
    dend_6 { pt3dadd( -72.6008, -3.97117, -43.1758, 0.81 ) }
    dend_6 { pt3dadd( -73.9839, -2.85625, -43.402, 0.44 ) }
    dend_6 { pt3dadd( -74.4869, -2.48182, -43.4652, 0.44 ) }
    dend_6 { pt3dadd( -74.9766, -2.1654, -43.4982, 0.66 ) }
    dend_6 { pt3dadd( -75.7116, -1.76619, -43.4756, 0.29 ) }
    dend_6 { pt3dadd( -77.1952, -1.06858, -43.3854, 0.66 ) }
    dend_6 { pt3dadd( -77.8933, -0.768821, -43.3628, 0.22 ) }
    dend_6 { pt3dadd( -79.1503, -0.256525, -43.411, 0.51 ) }
    dend_6 { pt3dadd( -80.3215, 0.230447, -43.5118, 0.29 ) }
    dend_6 { pt3dadd( -81.2092, 0.600596, -43.6222, 0.29 ) }
    dend_6 { pt3dadd( -82.8309, 1.27345, -43.9118, 0.88 ) }
    dend_6 { pt3dadd( -84.1418, 1.77646, -44.2721, 0.07 ) }
    dend_6 { pt3dadd( -85.3246, 2.16245, -44.679, 0.07 ) }
    dend_6 { pt3dadd( -86.2198, 2.42398, -45.0839, 0.73 ) }
    dend_6 { pt3dadd( -86.8589, 2.60562, -45.4176, 0.29 ) }
    dend_6 { pt3dadd( -87.6438, 2.86052, -45.9267, 0.88 ) }
    dend_6 { pt3dadd( -88.7617, 3.36892, -46.9283, 0.44 ) }
    dend_6 { pt3dadd( -89.4045, 3.82612, -47.8322, 0.73 ) }
    dend_6 { pt3dadd( -90.184, 4.69425, -49.383, 0.29 ) }
    dend_6 { pt3dadd( -90.472, 5.17946, -50.1432, 0.29 ) }
    dend_6 { pt3dadd( -91.0138, 6.45143, -52.0277, 1.1 ) }
    dend_6 { pt3dadd( -91.4126, 8.03093, -54.1817, 0.22 ) }
    dend_6 { pt3dadd( -91.5292, 9.37218, -55.8585, 0.22 ) }
    dend_6 { pt3dadd( -91.503, 9.83912, -56.4315, 0.88 ) }
    dend_6 { pt3dadd( -91.3168, 10.675, -57.4647, 0.07 ) }
    // Section: dend_131, id: dend_131, parent: dend_129 (entry count 45/100)
    dend_131 { pt3dclear() }
    dend_131 { pt3dadd( -2.09027, 49.8618, 3.35827, 0.95 ) }
    dend_131 { pt3dadd( -2.34506, 51.1492, 3.55298, 0.95 ) }
    dend_131 { pt3dadd( -2.63303, 52.5234, 3.66337, 0.66 ) }
    dend_131 { pt3dadd( -2.81389, 53.4704, 3.70591, 0.66 ) }
    dend_131 { pt3dadd( -2.98061, 54.3598, 3.67427, 0.66 ) }
    dend_131 { pt3dadd( -3.10878, 55.0887, 3.61815, 0.66 ) }
    dend_131 { pt3dadd( -3.29708, 56.3797, 3.46547, 0.59 ) }
    dend_131 { pt3dadd( -3.44809, 57.4714, 3.29593, 0.88 ) }
    dend_131 { pt3dadd( -3.53311, 58.1478, 3.19114, 0.88 ) }
    dend_131 { pt3dadd( -3.69688, 59.6924, 2.99323, 0.51 ) }
    dend_131 { pt3dadd( -3.73788, 60.4403, 2.94411, 0.51 ) }
    dend_131 { pt3dadd( -3.76977, 61.4768, 2.93679, 0.66 ) }
    dend_131 { pt3dadd( -3.81154, 62.6363, 3.0037, 0.37 ) }
    dend_131 { pt3dadd( -3.85057, 63.7799, 3.07978, 0.44 ) }
    dend_131 { pt3dadd( -3.88942, 64.9925, 3.15495, 0.73 ) }
    dend_131 { pt3dadd( -3.93905, 66.3499, 3.24578, 0.88 ) }
    dend_131 { pt3dadd( -3.97494, 66.8912, 3.26256, 0.88 ) }
    dend_131 { pt3dadd( -4.06317, 67.8727, 3.25469, 1.25 ) }
    dend_131 { pt3dadd( -4.19625, 69.8879, 3.1013, 0.51 ) }
    dend_131 { pt3dadd( -4.203, 70.5508, 3.01236, 0.44 ) }
    dend_131 { pt3dadd( -4.1536, 71.301, 2.90822, 0.44 ) }
    dend_131 { pt3dadd( -4.0685, 72.0396, 2.78677, 0.44 ) }
    dend_131 { pt3dadd( -3.92889, 72.7615, 2.65432, 0.44 ) }
    dend_131 { pt3dadd( -3.67057, 73.8618, 2.4496, 0.73 ) }
    dend_131 { pt3dadd( -3.38118, 75.1504, 2.18741, 0.73 ) }
    dend_131 { pt3dadd( -3.04866, 76.526, 1.86429, 0.73 ) }
    dend_131 { pt3dadd( -2.72342, 77.9174, 1.50971, 0.73 ) }
    dend_131 { pt3dadd( -2.51461, 78.9939, 1.22527, 0.81 ) }
    dend_131 { pt3dadd( -2.36263, 79.9833, 0.933554, 0.88 ) }
    dend_131 { pt3dadd( -2.15255, 81.6674, 0.419761, 0.37 ) }
    dend_131 { pt3dadd( -2.04287, 82.5937, 0.17364, 0.37 ) }
    dend_131 { pt3dadd( -1.94405, 83.4222, -0.0133076, 0.37 ) }
    dend_131 { pt3dadd( -1.82816, 84.4275, -0.15173, 0.37 ) }
    dend_131 { pt3dadd( -1.72428, 85.6437, -0.2778, 0.73 ) }
    dend_131 { pt3dadd( -1.6535, 86.7831, -0.374179, 0.73 ) }
    dend_131 { pt3dadd( -1.72304, 88.0897, -0.440525, 0.73 ) }
    dend_131 { pt3dadd( -1.87442, 88.9371, -0.511283, 0.73 ) }
    dend_131 { pt3dadd( -2.22515, 90.2535, -0.72543, 0.73 ) }
    dend_131 { pt3dadd( -2.71856, 91.3043, -1.01974, 0.73 ) }
    dend_131 { pt3dadd( -3.12887, 91.9351, -1.21954, 0.73 ) }
    dend_131 { pt3dadd( -4.29466, 93.4189, -1.76355, 0.22 ) }
    dend_131 { pt3dadd( -4.99194, 94.2349, -2.09069, 0.73 ) }
    dend_131 { pt3dadd( -5.82778, 95.244, -2.48756, 0.59 ) }
    dend_131 { pt3dadd( -7.10491, 97.012, -3.19351, 0.22 ) }
    dend_131 { pt3dadd( -7.60347, 97.9418, -3.56389, 0.29 ) }
    dend_131 { pt3dadd( -7.85102, 98.8135, -3.92113, 0.29 ) }
    dend_131 { pt3dadd( -7.85988, 99.5927, -4.23562, 0.29 ) }
    dend_131 { pt3dadd( -7.76561, 100.638, -4.61084, 0.59 ) }
    dend_131 { pt3dadd( -7.60643, 102.001, -5.1114, 0.59 ) }
    dend_131 { pt3dadd( -7.45381, 103.287, -5.69874, 0.37 ) }
    dend_131 { pt3dadd( -7.41158, 103.871, -6.04938, 0.37 ) }
    dend_131 { pt3dadd( -7.37585, 104.716, -6.63041, 0.37 ) }
    dend_131 { pt3dadd( -7.39267, 105.751, -7.37886, 0.81 ) }
    dend_131 { pt3dadd( -7.49745, 106.738, -8.08778, 0.37 ) }
    dend_131 { pt3dadd( -7.70461, 107.762, -8.77897, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_131 { pt3dadd( -8.00354, 109.002, -9.58427, 0.88 ) }
    dend_131 { pt3dadd( -8.23545, 110.12, -10.3048, 0.29 ) }
    dend_131 { pt3dadd( -8.31401, 110.636, -10.6375, 0.29 ) }
    dend_131 { pt3dadd( -8.38879, 111.258, -11.0485, 0.29 ) }
    dend_131 { pt3dadd( -8.48061, 111.984, -11.5331, 0.29 ) }
    dend_131 { pt3dadd( -8.6562, 113.044, -12.3353, 0.81 ) }
    dend_131 { pt3dadd( -9.03061, 114.682, -13.7205, 0.22 ) }
    dend_131 { pt3dadd( -9.27685, 115.676, -14.615, 0.88 ) }
    dend_131 { pt3dadd( -9.47174, 116.536, -15.4117, 0.88 ) }
    dend_131 { pt3dadd( -9.61389, 117.288, -16.1413, 1.25 ) }
    dend_131 { pt3dadd( -9.93215, 118.969, -17.8766, 0.51 ) }
    dend_131 { pt3dadd( -10.1798, 119.982, -18.9565, 0.51 ) }
    dend_131 { pt3dadd( -10.4337, 120.86, -19.9111, 0.81 ) }
    dend_131 { pt3dadd( -10.7328, 121.916, -21.0691, 0.59 ) }
    dend_131 { pt3dadd( -10.9387, 122.841, -22.1207, 0.37 ) }
    dend_131 { pt3dadd( -11.0608, 123.568, -23.0505, 0.73 ) }
    dend_131 { pt3dadd( -11.1574, 124.123, -23.8611, 0.73 ) }
    dend_131 { pt3dadd( -11.3795, 125.251, -25.7364, 0.37 ) }
    dend_131 { pt3dadd( -11.4861, 125.754, -26.6342, 0.37 ) }
    dend_131 { pt3dadd( -11.6393, 126.708, -28.4466, 0.95 ) }
    dend_131 { pt3dadd( -11.7105, 127.781, -30.5398, 0.95 ) }
    dend_131 { pt3dadd( -11.6402, 128.788, -32.553, 0.22 ) }
    dend_131 { pt3dadd( -11.5526, 129.44, -34.0108, 0.81 ) }
    dend_131 { pt3dadd( -11.532, 129.657, -34.5379, 0.81 ) }
    dend_131 { pt3dadd( -11.5313, 130.338, -36.2165, 0.37 ) }
    dend_131 { pt3dadd( -11.5402, 130.665, -37.0566, 0.37 ) }
    dend_131 { pt3dadd( -11.5079, 130.942, -37.81, 0.37 ) }
    dend_131 { pt3dadd( -11.2056, 131.963, -40.9067, 1.1 ) }
    dend_131 { pt3dadd( -10.9909, 132.56, -42.9873, 0.73 ) }
    dend_131 { pt3dadd( -10.8098, 133.025, -44.9271, 1.25 ) }
    dend_131 { pt3dadd( -10.6535, 133.468, -47.1002, 1.25 ) }
    dend_131 { pt3dadd( -10.5164, 133.832, -49.2131, 0.81 ) }
    dend_131 { pt3dadd( -10.4401, 133.978, -50.3244, 0.37 ) }
    dend_131 { pt3dadd( -10.3241, 134.04, -51.1096, 0.37 ) }
    dend_131 { pt3dadd( -10.1036, 134.03, -52.1853, 0.59 ) }
    dend_131 { pt3dadd( -9.88734, 133.948, -53.0747, 0.59 ) }
    dend_131 { pt3dadd( -9.73537, 133.892, -53.7397, 0.59 ) }
    dend_131 { pt3dadd( -9.4862, 133.906, -55.314, 1.25 ) }
    dend_131 { pt3dadd( -9.23294, 134.041, -56.7968, 1.25 ) }
    dend_131 { pt3dadd( -8.87528, 134.296, -58.2315, 0.88 ) }
    dend_131 { pt3dadd( -8.36279, 134.678, -60.0279, 0.44 ) }
    dend_131 { pt3dadd( -8.19231, 134.77, -60.5052, 0.44 ) }
    dend_131 { pt3dadd( -7.82439, 134.894, -61.3544, 0.44 ) }
    dend_131 { pt3dadd( -7.51472, 134.959, -61.8967, 0.44 ) }
    dend_131 { pt3dadd( -6.90145, 135.145, -62.9497, 0.66 ) }
    // Section: dend_130, id: dend_130, parent: dend_129 (entry count 45/100)
    dend_130 { pt3dclear() }
    dend_130 { pt3dadd( -2.09027, 49.8618, 3.35827, 0.15 ) }
    dend_130 { pt3dadd( -1.07016, 48.7519, 3.63728, 0.15 ) }
    dend_130 { pt3dadd( -0.695037, 48.2626, 3.74078, 0.15 ) }
    dend_130 { pt3dadd( 0.24037, 47.0425, 3.99885, 0.15 ) }
    dend_130 { pt3dadd( 0.972219, 46.0879, 4.20077, 0.15 ) }
    dend_130 { pt3dadd( 2.01864, 44.723, 4.48947, 0.15 ) }
    dend_130 { pt3dadd( 2.55564, 44.0226, 4.63762, 0.22 ) }
    dend_130 { pt3dadd( 2.96097, 43.2915, 4.73722, 0.73 ) }
    // Section: dend_124, id: dend_124, parent: dend_122 (entry count 53/100)
    dend_124 { pt3dclear() }
    dend_124 { pt3dadd( 58.6139, 89.3063, -38.6131, 0.95 ) }
    dend_124 { pt3dadd( 60.7056, 90.6236, -44.4301, 0.95 ) }
    dend_124 { pt3dadd( 61.3223, 90.8964, -45.6724, 0.73 ) }
    dend_124 { pt3dadd( 61.6638, 91.0227, -46.2182, 1.03 ) }
    dend_124 { pt3dadd( 62.5166, 91.3418, -47.3611, 0.59 ) }
    dend_124 { pt3dadd( 62.9253, 91.5017, -47.8589, 0.59 ) }
    dend_124 { pt3dadd( 63.4658, 91.7095, -48.5268, 0.59 ) }
    dend_124 { pt3dadd( 64.6279, 92.1026, -49.5335, 0.88 ) }
    dend_124 { pt3dadd( 65.9268, 92.5416, -50.6794, 0.88 ) }
    dend_124 { pt3dadd( 66.7796, 92.8225, -51.4884, 0.95 ) }
    dend_124 { pt3dadd( 67.963, 93.1987, -52.6936, 1.03 ) }
    dend_124 { pt3dadd( 69.5528, 93.7965, -54.5391, 0.81 ) }
    dend_124 { pt3dadd( 69.9793, 93.9921, -55.1198, 1.1 ) }
    // Section: dend_123, id: dend_123, parent: dend_122 (entry count 66/100)
    dend_123 { pt3dclear() }
    dend_123 { pt3dadd( 58.6139, 89.3063, -38.6131, 0.22 ) }
    dend_123 { pt3dadd( 58.9498, 87.2658, -37.05, 0.22 ) }
    dend_123 { pt3dadd( 59.089, 86.8873, -36.7239, 0.22 ) }
    dend_123 { pt3dadd( 59.387, 86.2682, -36.245, 0.22 ) }
    dend_123 { pt3dadd( 59.8933, 85.3403, -35.5412, 0.22 ) }
    dend_123 { pt3dadd( 60.112, 84.9882, -35.2392, 0.22 ) }
    dend_123 { pt3dadd( 60.5842, 84.3133, -34.6355, 0.22 ) }
    dend_123 { pt3dadd( 61.3444, 83.4462, -33.8716, 0.29 ) }
    dend_123 { pt3dadd( 61.962, 82.8078, -33.2507, 0.29 ) }
    dend_123 { pt3dadd( 62.7971, 82.0237, -32.3985, 0.37 ) }
    dend_123 { pt3dadd( 63.7925, 81.1688, -31.4089, 0.07 ) }
    dend_123 { pt3dadd( 64.2459, 80.7454, -30.9392, 0.37 ) }
    // Section: dend_113, id: dend_113, parent: dend_111 (entry count 78/100)
    dend_113 { pt3dclear() }
    dend_113 { pt3dadd( 41.7795, -23.0581, -28.9639, 0.37 ) }
    dend_113 { pt3dadd( 42.437, -22.7213, -29.5208, 0.37 ) }
    dend_113 { pt3dadd( 43.2215, -22.3983, -30.3111, 0.37 ) }
    dend_113 { pt3dadd( 44.1999, -22.0901, -31.3961, 1.03 ) }
    dend_113 { pt3dadd( 45.0726, -21.885, -32.3803, 0.15 ) }
    dend_113 { pt3dadd( 45.7118, -21.7845, -33.1234, 0.15 ) }
    dend_113 { pt3dadd( 45.8479, -21.767, -33.2858, 0.88 ) }
    dend_113 { pt3dadd( 46.9012, -21.6809, -34.6208, 0.51 ) }
    dend_113 { pt3dadd( 47.2935, -21.6267, -35.1288, 0.51 ) }
    dend_113 { pt3dadd( 47.6363, -21.5458, -35.62, 0.37 ) }
    dend_113 { pt3dadd( 48.4204, -21.2562, -36.8918, 0.37 ) }
    dend_113 { pt3dadd( 48.9587, -20.9765, -37.8262, 0.37 ) }
    dend_113 { pt3dadd( 49.6278, -20.5476, -39.0008, 0.44 ) }
    dend_113 { pt3dadd( 50.3711, -20.0234, -40.3369, 0.37 ) }
    dend_113 { pt3dadd( 50.781, -19.743, -41.165, 0.37 ) }
    dend_113 { pt3dadd( 50.9901, -19.6162, -41.6182, 0.37 ) }
    dend_113 { pt3dadd( 51.1052, -19.5761, -41.8527, 0.37 ) }
    dend_113 { pt3dadd( 51.2569, -19.5751, -42.1146, 0.37 ) }
    dend_113 { pt3dadd( 52.3684, -19.8125, -43.6483, 0.37 ) }
    dend_113 { pt3dadd( 52.8473, -19.9052, -44.278, 0.37 ) }
    dend_113 { pt3dadd( 53.1775, -19.9365, -44.6955, 1.1 ) }
    dend_113 { pt3dadd( 54.226, -19.8792, -46.1311, 0.51 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_113 { pt3dadd( 54.9466, -19.7298, -47.27, 0.37 ) }
    dend_113 { pt3dadd( 55.3743, -19.5711, -47.9987, 0.88 ) }
    dend_113 { pt3dadd( 56.1737, -19.0676, -49.5949, 0.44 ) }
    dend_113 { pt3dadd( 56.4294, -18.8149, -50.2943, 0.51 ) }
    dend_113 { pt3dadd( 56.7628, -18.2529, -51.7104, 0.51 ) }
    dend_113 { pt3dadd( 57.1148, -17.2768, -53.9678, 0.51 ) }
    dend_113 { pt3dadd( 57.1795, -17.0222, -54.529, 0.88 ) }
    dend_113 { pt3dadd( 57.3302, -16.447, -55.8363, 1.1 ) }
    dend_113 { pt3dadd( 57.583, -15.8655, -57.2626, 0.51 ) }
    dend_113 { pt3dadd( 58.0867, -15.2639, -58.9016, 0.37 ) }
    dend_113 { pt3dadd( 58.56, -14.9865, -59.7568, 0.37 ) }
    dend_113 { pt3dadd( 58.765, -14.9239, -59.991, 0.73 ) }
    dend_113 { pt3dadd( 59.4461, -14.824, -60.6189, 0.37 ) }
    dend_113 { pt3dadd( 60.4822, -14.7326, -61.4325, 0.22 ) }
    dend_113 { pt3dadd( 62.0505, -14.6032, -62.5111, 0.15 ) }
    dend_113 { pt3dadd( 63.1324, -14.5187, -63.2236, 1.25 ) }
    dend_113 { pt3dadd( 65.0479, -14.3367, -64.598, 0.22 ) }
    dend_113 { pt3dadd( 66.1665, -14.1969, -65.4712, 0.22 ) }
    dend_113 { pt3dadd( 66.8605, -14.0639, -66.05, 0.59 ) }
    dend_113 { pt3dadd( 67.6279, -13.8598, -66.7276, 0.66 ) }
    dend_113 { pt3dadd( 68.7182, -13.4803, -67.6788, 0.07 ) }
    dend_113 { pt3dadd( 69.9148, -12.9688, -68.5469, 0.81 ) }
    dend_113 { pt3dadd( 70.5527, -12.6561, -68.8775, 0.81 ) }
    dend_113 { pt3dadd( 71.5301, -12.1018, -69.2853, 0.44 ) }
    dend_113 { pt3dadd( 72.5726, -11.4627, -69.7059, 0.29 ) }
    dend_113 { pt3dadd( 73.2299, -11.047, -70.0441, 0.29 ) }
    dend_113 { pt3dadd( 74.225, -10.4328, -70.6938, 0.66 ) }
    dend_113 { pt3dadd( 74.9942, -10.0461, -71.2825, 0.66 ) }
    dend_113 { pt3dadd( 75.994, -9.68015, -72.1009, 0.07 ) }
    dend_113 { pt3dadd( 77.153, -9.4168, -73.0777, 0.81 ) }
    dend_113 { pt3dadd( 78.9512, -9.19042, -74.6168, 0.07 ) }
    dend_113 { pt3dadd( 80.1802, -9.12358, -75.6614, 0.22 ) }
    dend_113 { pt3dadd( 81.1089, -9.13146, -76.4113, 0.22 ) }
    dend_113 { pt3dadd( 82.2862, -9.15802, -77.2169, 0.22 ) }
    dend_113 { pt3dadd( 83.1445, -9.16258, -77.6527, 0.51 ) }
    dend_113 { pt3dadd( 84.5428, -9.05935, -78.0, 0.81 ) }
    dend_113 { pt3dadd( 84.9864, -8.9781, -78.0184, 0.29 ) }
    dend_113 { pt3dadd( 85.8354, -8.74835, -77.9603, 0.73 ) }
    dend_113 { pt3dadd( 86.8992, -8.35211, -77.7511, 0.07 ) }
    dend_113 { pt3dadd( 87.2072, -8.2093, -77.6494, 0.73 ) }
    dend_113 { pt3dadd( 88.8073, -7.32415, -76.8641, 0.07 ) }
    dend_113 { pt3dadd( 89.5216, -6.86915, -76.4115, 0.07 ) }
    dend_113 { pt3dadd( 89.819, -6.64871, -76.1972, 0.66 ) }
    dend_113 { pt3dadd( 90.9277, -5.6298, -75.2495, 0.15 ) }
    dend_113 { pt3dadd( 91.2012, -5.24817, -74.9109, 0.44 ) }
    dend_113 { pt3dadd( 91.5548, -4.64627, -74.4047, 0.07 ) }
    dend_113 { pt3dadd( 91.6718, -4.3343, -74.1687, 0.07 ) }
    dend_113 { pt3dadd( 91.7617, -3.95873, -73.8906, 0.07 ) }
    dend_113 { pt3dadd( 91.862, -3.30605, -73.4551, 0.51 ) }
    dend_113 { pt3dadd( 91.7151, -1.26614, -72.3761, 0.07 ) }
    // Section: dend_112, id: dend_112, parent: dend_111 (entry count 50/100)
    dend_112 { pt3dclear() }
    dend_112 { pt3dadd( 41.7795, -23.0581, -28.9639, 0.66 ) }
    dend_112 { pt3dadd( 42.6835, -24.0376, -31.461, 0.66 ) }
    dend_112 { pt3dadd( 43.3946, -25.0706, -33.5769, 0.37 ) }
    dend_112 { pt3dadd( 43.6319, -25.5676, -34.4087, 0.37 ) }
    dend_112 { pt3dadd( 43.844, -26.3158, -35.548, 0.66 ) }
    dend_112 { pt3dadd( 43.9478, -27.5928, -37.454, 0.37 ) }
    dend_112 { pt3dadd( 43.9054, -27.9389, -37.9606, 0.37 ) }
    dend_112 { pt3dadd( 43.7057, -28.3373, -38.4456, 0.37 ) }
    dend_112 { pt3dadd( 43.2993, -28.9042, -39.1802, 0.37 ) }
    dend_112 { pt3dadd( 42.8264, -29.4744, -40.0587, 0.66 ) }
    dend_112 { pt3dadd( 42.472, -29.9261, -41.1477, 0.81 ) }
    dend_112 { pt3dadd( 42.3067, -30.1714, -42.0286, 0.51 ) }
    dend_112 { pt3dadd( 42.0997, -30.4634, -43.5406, 0.51 ) }
    dend_112 { pt3dadd( 41.9786, -30.646, -44.5834, 0.51 ) }
    dend_112 { pt3dadd( 41.8612, -30.8624, -45.6995, 1.54 ) }
    dend_112 { pt3dadd( 41.5055, -31.8017, -49.6495, 0.59 ) }
    dend_112 { pt3dadd( 41.4178, -32.078, -50.6228, 0.59 ) }
    dend_112 { pt3dadd( 41.3369, -32.3653, -51.517, 0.59 ) }
    dend_112 { pt3dadd( 41.2238, -32.8177, -52.7177, 0.73 ) }
    dend_112 { pt3dadd( 41.2126, -33.3893, -54.0378, 0.66 ) }
    dend_112 { pt3dadd( 41.3325, -33.8418, -54.9991, 0.66 ) }
    dend_112 { pt3dadd( 41.5713, -34.1868, -55.6577, 0.66 ) }
    dend_112 { pt3dadd( 42.1885, -34.6962, -56.7908, 0.66 ) }
    dend_112 { pt3dadd( 43.0376, -35.0877, -57.9905, 0.66 ) }
    dend_112 { pt3dadd( 44.4529, -35.4173, -59.7252, 0.22 ) }
    dend_112 { pt3dadd( 44.9081, -35.4696, -60.192, 0.81 ) }
    dend_112 { pt3dadd( 46.3736, -35.5528, -61.5329, 0.37 ) }
    dend_112 { pt3dadd( 47.3011, -35.5865, -62.3129, 0.37 ) }
    dend_112 { pt3dadd( 48.4422, -35.6312, -63.2009, 0.81 ) }
    dend_112 { pt3dadd( 49.8289, -35.739, -64.1929, 0.07 ) }
    dend_112 { pt3dadd( 51.0216, -35.911, -64.9797, 0.81 ) }
    dend_112 { pt3dadd( 51.8686, -36.113, -65.511, 0.88 ) }
    dend_112 { pt3dadd( 52.4389, -36.3076, -65.867, 0.88 ) }
    dend_112 { pt3dadd( 53.5421, -36.796, -66.5669, 0.44 ) }
    dend_112 { pt3dadd( 55.3829, -37.824, -67.8191, 0.44 ) }
    dend_112 { pt3dadd( 56.0676, -38.2898, -68.352, 0.44 ) }
    dend_112 { pt3dadd( 56.6724, -38.7854, -68.9391, 1.1 ) }
    dend_112 { pt3dadd( 57.6547, -39.7735, -70.0163, 0.37 ) }
    dend_112 { pt3dadd( 57.9734, -40.1675, -70.4252, 1.03 ) }
    dend_112 { pt3dadd( 58.4094, -40.8791, -71.1076, 0.81 ) }
    dend_112 { pt3dadd( 58.7715, -41.6897, -71.8208, 0.51 ) }
    dend_112 { pt3dadd( 59.1165, -42.579, -72.548, 0.88 ) }
    dend_112 { pt3dadd( 59.444, -43.5067, -73.258, 0.88 ) }
    dend_112 { pt3dadd( 59.7868, -44.5323, -73.9874, 0.37 ) }
    dend_112 { pt3dadd( 60.1963, -45.7557, -74.8313, 0.22 ) }
    dend_112 { pt3dadd( 60.3644, -46.2445, -75.1379, 0.22 ) }
    dend_112 { pt3dadd( 60.606, -46.929, -75.5605, 0.22 ) }
    dend_112 { pt3dadd( 60.9081, -47.7735, -76.0811, 1.18 ) }
    dend_112 { pt3dadd( 61.4648, -49.4761, -77.1314, 0.15 ) }
    dend_112 { pt3dadd( 61.5901, -49.944, -77.3749, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_112 { pt3dadd( 61.7295, -50.6503, -77.6763, 0.81 ) }
    dend_112 { pt3dadd( 61.9646, -51.8562, -78.1828, 0.15 ) }
    dend_112 { pt3dadd( 62.0345, -52.2935, -78.3494, 0.95 ) }
    dend_112 { pt3dadd( 62.1468, -53.3251, -78.6169, 0.07 ) }
    dend_112 { pt3dadd( 62.129, -54.4936, -78.7678, 0.07 ) }
    dend_112 { pt3dadd( 62.0666, -55.3954, -78.8465, 0.44 ) }
    // Section: dend_70, id: dend_70, parent: dend_66 (entry count 6/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -4.0701, -13.2266, 23.813, 1.4 ) }
    dend_70 { pt3dadd( -4.04622, -14.1897, 23.6092, 1.4 ) }
    dend_70 { pt3dadd( -3.99468, -16.2681, 23.1693, 1.4 ) }
    dend_70 { pt3dadd( -3.97061, -17.2388, 22.9639, 1.54 ) }
    dend_70 { pt3dadd( -3.94647, -18.2121, 22.7579, 1.54 ) }
    dend_70 { pt3dadd( -3.90029, -20.0742, 22.3638, 2.28 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 12/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -4.0701, -13.2266, 23.813, 0.95 ) }
    dend_67 { pt3dadd( -3.73697, -13.8605, 25.9249, 0.95 ) }
    dend_67 { pt3dadd( -3.48899, -14.4852, 27.3584, 0.95 ) }
    dend_67 { pt3dadd( -3.17225, -15.3189, 28.8749, 0.59 ) }
    dend_67 { pt3dadd( -3.00622, -15.7067, 29.4907, 0.37 ) }
    dend_67 { pt3dadd( -2.74154, -16.2045, 30.3093, 0.37 ) }
    dend_67 { pt3dadd( -2.51954, -16.5229, 30.8835, 0.81 ) }
    dend_67 { pt3dadd( -1.97706, -17.134, 31.8772, 0.29 ) }
    dend_67 { pt3dadd( -1.64456, -17.3554, 32.3003, 0.29 ) }
    dend_67 { pt3dadd( -1.19305, -17.5058, 32.7511, 0.66 ) }
    dend_67 { pt3dadd( -0.222735, -17.6857, 33.7522, 0.37 ) }
    dend_67 { pt3dadd( 0.396227, -17.7533, 34.4989, 0.29 ) }
    dend_67 { pt3dadd( 0.915009, -17.7557, 35.3383, 0.29 ) }
    dend_67 { pt3dadd( 1.04443, -17.734, 35.6458, 0.29 ) }
    dend_67 { pt3dadd( 1.1712, -17.7074, 36.1596, 0.44 ) }
    dend_67 { pt3dadd( 1.34071, -17.7785, 37.3545, 0.66 ) }
    dend_67 { pt3dadd( 1.47523, -18.1081, 38.6126, 0.37 ) }
    dend_67 { pt3dadd( 1.54821, -18.1948, 38.8946, 0.15 ) }
    dend_67 { pt3dadd( 1.77548, -18.2368, 39.1864, 0.15 ) }
    dend_67 { pt3dadd( 2.23542, -18.2484, 39.5608, 0.15 ) }
    dend_67 { pt3dadd( 3.16658, -18.2536, 40.0875, 0.37 ) }
    dend_67 { pt3dadd( 3.91185, -18.2616, 40.4123, 0.37 ) }
    dend_67 { pt3dadd( 4.76225, -18.2723, 40.7329, 0.37 ) }
    dend_67 { pt3dadd( 5.90988, -18.3104, 41.1575, 0.37 ) }
    dend_67 { pt3dadd( 6.7526, -18.3631, 41.4689, 0.37 ) }
    dend_67 { pt3dadd( 7.99372, -18.4621, 41.9288, 0.37 ) }
    dend_67 { pt3dadd( 8.62622, -18.4972, 42.1805, 0.37 ) }
    // Section: dend_65, id: dend_65, parent: dend_51 (entry count 39/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -20.3158, -13.0886, 26.5345, 0.66 ) }
    dend_65 { pt3dadd( -19.7879, -12.5228, 27.0805, 0.66 ) }
    dend_65 { pt3dadd( -19.0538, -11.7499, 27.9633, 1.18 ) }
    dend_65 { pt3dadd( -18.4004, -11.1045, 28.7683, 0.73 ) }
    dend_65 { pt3dadd( -17.5695, -10.3316, 29.9024, 1.1 ) }
    dend_65 { pt3dadd( -16.8855, -9.73979, 30.95, 0.37 ) }
    dend_65 { pt3dadd( -16.2761, -9.25148, 31.9469, 0.88 ) }
    dend_65 { pt3dadd( -15.5553, -8.77277, 33.3406, 0.51 ) }
    dend_65 { pt3dadd( -15.3609, -8.68728, 33.7604, 0.81 ) }
    dend_65 { pt3dadd( -14.8076, -8.58017, 34.9806, 0.66 ) }
    dend_65 { pt3dadd( -14.3975, -8.62652, 35.8557, 0.66 ) }
    dend_65 { pt3dadd( -14.2805, -8.67126, 36.0582, 0.66 ) }
    dend_65 { pt3dadd( -13.8351, -8.86962, 36.5949, 0.66 ) }
    dend_65 { pt3dadd( -13.2477, -9.00615, 37.0123, 0.66 ) }
    dend_65 { pt3dadd( -12.5678, -9.02222, 37.3341, 0.29 ) }
    dend_65 { pt3dadd( -12.28, -8.97294, 37.4102, 0.29 ) }
    dend_65 { pt3dadd( -11.6109, -8.7222, 37.5052, 0.29 ) }
    dend_65 { pt3dadd( -10.9695, -8.3265, 37.5193, 0.37 ) }
    dend_65 { pt3dadd( -10.5404, -7.8591, 37.4394, 0.29 ) }
    dend_65 { pt3dadd( -10.2372, -7.11606, 37.2328, 0.29 ) }
    dend_65 { pt3dadd( -10.1311, -6.46021, 37.029, 0.29 ) }
    dend_65 { pt3dadd( -10.0979, -5.74763, 36.7973, 0.29 ) }
    dend_65 { pt3dadd( -10.129, -5.17552, 36.6021, 0.29 ) }
    dend_65 { pt3dadd( -10.3463, -4.21617, 36.2522, 0.29 ) }
    dend_65 { pt3dadd( -10.6241, -3.61719, 36.0036, 0.29 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 64/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -20.3158, -13.0886, 26.5345, 1.1 ) }
    dend_52 { pt3dadd( -21.0127, -12.7692, 26.9766, 1.1 ) }
    dend_52 { pt3dadd( -21.7158, -12.3573, 27.3622, 1.1 ) }
    dend_52 { pt3dadd( -22.5255, -11.8064, 27.7421, 1.1 ) }
    dend_52 { pt3dadd( -23.283, -11.2642, 28.0437, 1.1 ) }
    dend_52 { pt3dadd( -24.404, -10.4782, 28.4277, 1.1 ) }
    dend_52 { pt3dadd( -25.4519, -9.77958, 28.7929, 0.73 ) }
    dend_52 { pt3dadd( -26.7966, -9.00615, 29.2639, 0.95 ) }
    dend_52 { pt3dadd( -27.9164, -8.4868, 29.6943, 0.95 ) }
    dend_52 { pt3dadd( -28.9963, -8.14282, 30.1368, 0.95 ) }
    dend_52 { pt3dadd( -29.9278, -8.00155, 30.5398, 0.95 ) }
    dend_52 { pt3dadd( -30.9188, -8.00339, 30.9865, 0.95 ) }
    dend_52 { pt3dadd( -32.1505, -8.12795, 31.5972, 1.1 ) }
    dend_52 { pt3dadd( -33.6193, -8.33848, 32.3702, 0.81 ) }
    dend_52 { pt3dadd( -35.0884, -8.51065, 33.1752, 0.73 ) }
    dend_52 { pt3dadd( -35.8634, -8.54404, 33.5908, 0.73 ) }
    dend_52 { pt3dadd( -36.7793, -8.47351, 34.0167, 0.73 ) }
    dend_52 { pt3dadd( -37.8414, -8.24013, 34.3816, 0.81 ) }
    dend_52 { pt3dadd( -38.7734, -7.91879, 34.651, 0.95 ) }
    dend_52 { pt3dadd( -39.7425, -7.46886, 34.8775, 0.95 ) }
    dend_52 { pt3dadd( -40.3738, -7.12098, 35.0164, 0.95 ) }
    dend_52 { pt3dadd( -41.4393, -6.56817, 35.261, 0.81 ) }
    dend_52 { pt3dadd( -43.46, -5.78674, 35.7024, 0.81 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 87/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 18.3777, 14.4071, 19.5983, 0.37 ) }
    dend_49 { pt3dadd( 19.1095, 15.7284, 19.6003, 0.37 ) }
    dend_49 { pt3dadd( 19.8621, 17.1501, 19.6026, 0.37 ) }
    dend_49 { pt3dadd( 20.2603, 17.8988, 19.6092, 0.37 ) }
    dend_49 { pt3dadd( 20.7, 18.6978, 19.6027, 0.73 ) }
    dend_49 { pt3dadd( 21.4817, 20.0963, 19.5609, 0.37 ) }
    dend_49 { pt3dadd( 21.9558, 20.9581, 19.5248, 0.59 ) }
    dend_49 { pt3dadd( 22.4113, 21.8137, 19.457, 0.44 ) }
    dend_49 { pt3dadd( 22.9587, 22.9382, 19.3462, 0.44 ) }
    dend_49 { pt3dadd( 23.4085, 23.9674, 19.2611, 0.44 ) }
    dend_49 { pt3dadd( 23.7015, 24.7674, 19.2052, 0.44 ) }
    dend_49 { pt3dadd( 23.9189, 25.4938, 19.1643, 0.44 ) }
    dend_49 { pt3dadd( 24.2323, 26.5487, 19.0903, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_49 { pt3dadd( 24.6078, 27.86, 18.945, 0.66 ) }
    dend_49 { pt3dadd( 24.9591, 29.1483, 18.7722, 0.95 ) }
    dend_49 { pt3dadd( 25.2963, 30.3742, 18.6112, 0.44 ) }
    dend_49 { pt3dadd( 25.574, 31.3146, 18.5074, 0.66 ) }
    dend_49 { pt3dadd( 25.8684, 32.29, 18.4126, 0.44 ) }
    dend_49 { pt3dadd( 26.3161, 33.7635, 18.3162, 0.37 ) }
    dend_49 { pt3dadd( 26.8275, 35.4959, 18.2333, 0.44 ) }
    dend_49 { pt3dadd( 27.5097, 37.7646, 18.16, 0.44 ) }
    dend_49 { pt3dadd( 28.0229, 39.4701, 18.1577, 0.81 ) }
    dend_49 { pt3dadd( 28.4122, 40.8478, 18.2048, 0.59 ) }
    dend_49 { pt3dadd( 28.7053, 41.9908, 18.2952, 0.37 ) }
    dend_49 { pt3dadd( 28.9508, 42.9769, 18.4222, 0.37 ) }
    dend_49 { pt3dadd( 29.2172, 44.0452, 18.6002, 0.37 ) }
    dend_49 { pt3dadd( 29.3745, 44.6995, 18.7212, 0.44 ) }
    dend_49 { pt3dadd( 29.5633, 45.6944, 18.885, 0.44 ) }
    dend_49 { pt3dadd( 29.6283, 46.1382, 18.958, 0.73 ) }
    dend_49 { pt3dadd( 29.7269, 47.6064, 19.1719, 0.44 ) }
    dend_49 { pt3dadd( 29.7177, 49.1515, 19.4084, 1.1 ) }
    dend_49 { pt3dadd( 29.5548, 51.1585, 19.7257, 0.22 ) }
    dend_49 { pt3dadd( 29.3126, 52.8393, 20.0003, 0.88 ) }
    dend_49 { pt3dadd( 29.0533, 54.0839, 20.2027, 0.66 ) }
    dend_49 { pt3dadd( 28.4241, 56.1836, 20.5249, 0.22 ) }
    dend_49 { pt3dadd( 27.9555, 57.2804, 20.6741, 0.22 ) }
    dend_49 { pt3dadd( 27.3188, 58.4026, 20.8165, 0.22 ) }
    dend_49 { pt3dadd( 26.717, 59.2247, 20.937, 0.51 ) }
    dend_49 { pt3dadd( 26.2868, 59.6813, 21.0106, 0.15 ) }
    dend_49 { pt3dadd( 25.3942, 60.4615, 21.1277, 0.59 ) }
    dend_49 { pt3dadd( 24.536, 61.0354, 21.2176, 0.15 ) }
    dend_49 { pt3dadd( 24.0012, 61.3306, 21.2493, 0.88 ) }
    dend_49 { pt3dadd( 23.557, 61.5288, 21.2613, 0.07 ) }
    dend_49 { pt3dadd( 22.757, 61.8029, 21.2613, 0.44 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 31/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 18.3777, 14.4071, 19.5983, 0.73 ) }
    dend_48 { pt3dadd( 19.7535, 14.6947, 21.4887, 0.73 ) }
    dend_48 { pt3dadd( 20.7182, 14.9493, 22.8291, 0.59 ) }
    dend_48 { pt3dadd( 21.2066, 15.0592, 23.4729, 0.59 ) }
    dend_48 { pt3dadd( 21.8293, 15.1837, 24.2538, 0.59 ) }
    dend_48 { pt3dadd( 22.7794, 15.3653, 25.3636, 0.73 ) }
    dend_48 { pt3dadd( 23.6499, 15.5545, 26.3347, 0.88 ) }
    dend_48 { pt3dadd( 23.7712, 15.5869, 26.4525, 0.88 ) }
    dend_48 { pt3dadd( 24.487, 15.8289, 27.1749, 0.66 ) }
    dend_48 { pt3dadd( 24.7551, 15.9194, 27.4601, 0.66 ) }
    dend_48 { pt3dadd( 25.1911, 16.0192, 27.9399, 0.66 ) }
    dend_48 { pt3dadd( 25.8368, 16.0601, 28.6826, 0.66 ) }
    dend_48 { pt3dadd( 26.5251, 16.0285, 29.5231, 0.66 ) }
    dend_48 { pt3dadd( 27.4191, 16.0133, 30.5838, 0.44 ) }
    dend_48 { pt3dadd( 28.1903, 16.015, 31.4148, 0.44 ) }
    dend_48 { pt3dadd( 29.078, 16.0053, 32.2905, 0.73 ) }
    dend_48 { pt3dadd( 30.046, 15.9781, 33.119, 0.73 ) }
    dend_48 { pt3dadd( 31.9976, 15.9146, 34.5184, 0.44 ) }
    dend_48 { pt3dadd( 33.584, 15.9022, 35.4739, 0.44 ) }
    dend_48 { pt3dadd( 35.1109, 15.9855, 36.2392, 0.44 ) }
    dend_48 { pt3dadd( 36.1168, 16.0866, 36.6933, 0.44 ) }
    dend_48 { pt3dadd( 37.676, 16.3077, 37.2927, 0.44 ) }
    dend_48 { pt3dadd( 38.6168, 16.4453, 37.5701, 0.44 ) }
    dend_48 { pt3dadd( 39.1758, 16.5211, 37.6789, 0.73 ) }
    dend_48 { pt3dadd( 40.2021, 16.6457, 37.8445, 0.22 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 56/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 11.1121, 11.5433, 23.7253, 0.22 ) }
    dend_46 { pt3dadd( 10.0546, 12.1219, 23.4548, 0.22 ) }
    dend_46 { pt3dadd( 9.17531, 12.6278, 23.2535, 0.22 ) }
    dend_46 { pt3dadd( 8.10379, 13.2809, 23.0345, 0.88 ) }
    dend_46 { pt3dadd( 7.17702, 13.8553, 22.8598, 0.44 ) }
    dend_46 { pt3dadd( 6.04947, 14.5717, 22.6623, 0.44 ) }
    dend_46 { pt3dadd( 5.24459, 15.098, 22.5322, 0.81 ) }
    dend_46 { pt3dadd( 4.48594, 15.6446, 22.4681, 0.81 ) }
    dend_46 { pt3dadd( 3.7554, 16.2743, 22.4931, 0.44 ) }
    dend_46 { pt3dadd( 3.26292, 16.8486, 22.6414, 0.22 ) }
    dend_46 { pt3dadd( 2.96471, 17.4083, 22.8947, 0.22 ) }
    dend_46 { pt3dadd( 2.78873, 18.1136, 23.3731, 0.73 ) }
    dend_46 { pt3dadd( 2.6794, 19.0768, 24.1753, 0.44 ) }
    dend_46 { pt3dadd( 2.62889, 20.3658, 25.4619, 0.59 ) }
    dend_46 { pt3dadd( 2.58032, 21.2745, 26.5112, 0.81 ) }
    dend_46 { pt3dadd( 2.50897, 21.6569, 27.0704, 1.1 ) }
    dend_46 { pt3dadd( 2.17259, 22.4024, 28.5745, 0.81 ) }
    dend_46 { pt3dadd( 1.88561, 22.6682, 29.423, 0.81 ) }
    dend_46 { pt3dadd( 1.44463, 22.8189, 30.3011, 0.81 ) }
    dend_46 { pt3dadd( 0.625139, 22.9202, 31.5216, 1.25 ) }
    dend_46 { pt3dadd( -0.797498, 22.9542, 33.4208, 0.51 ) }
    dend_46 { pt3dadd( -1.70148, 22.8926, 34.5639, 0.51 ) }
    dend_46 { pt3dadd( -2.5672, 22.7544, 35.5473, 0.51 ) }
    dend_46 { pt3dadd( -3.14964, 22.6163, 36.1969, 0.22 ) }
    dend_46 { pt3dadd( -3.79761, 22.4384, 36.8781, 0.07 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 11.1121, 11.5433, 23.7253, 0.95 ) }
    dend_45 { pt3dadd( 11.0637, 11.171, 24.0918, 0.95 ) }
    dend_45 { pt3dadd( 10.9268, 10.6577, 24.5957, 1.1 ) }
    dend_45 { pt3dadd( 10.6285, 9.89252, 25.3817, 1.1 ) }
    dend_45 { pt3dadd( 10.2839, 9.13996, 26.2302, 0.51 ) }
    dend_45 { pt3dadd( 9.91888, 8.37707, 27.1446, 0.51 ) }
    dend_45 { pt3dadd( 9.59306, 7.69407, 27.9984, 0.51 ) }
    dend_45 { pt3dadd( 9.46271, 7.47758, 28.2744, 0.51 ) }
    dend_45 { pt3dadd( 9.25582, 7.15683, 28.6989, 0.51 ) }
    dend_45 { pt3dadd( 9.12328, 6.87679, 29.1969, 0.51 ) }
    dend_45 { pt3dadd( 9.14624, 6.76202, 29.4771, 0.51 ) }
    dend_45 { pt3dadd( 9.35839, 6.41034, 30.3776, 0.51 ) }
    dend_45 { pt3dadd( 9.45925, 6.27093, 30.7626, 0.51 ) }
    dend_45 { pt3dadd( 9.6265, 5.97866, 31.5571, 0.73 ) }
    dend_45 { pt3dadd( 9.76148, 5.51569, 32.9581, 0.73 ) }
    dend_45 { pt3dadd( 9.68959, 5.40455, 33.5802, 0.73 ) }
    dend_45 { pt3dadd( 9.42678, 5.48544, 34.2615, 0.73 ) }
    dend_45 { pt3dadd( 9.16099, 5.67918, 34.6222, 0.73 ) }
    dend_45 { pt3dadd( 8.73626, 5.98204, 35.0428, 0.73 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_45 { pt3dadd( 7.84602, 6.53562, 35.6869, 0.44 ) }
    dend_45 { pt3dadd( 6.99291, 6.99368, 36.1767, 0.37 ) }
    dend_45 { pt3dadd( 6.44149, 7.2753, 36.4817, 0.37 ) }
    dend_45 { pt3dadd( 5.85087, 7.57073, 36.8239, 0.66 ) }
    dend_45 { pt3dadd( 4.78613, 7.98431, 37.5115, 0.37 ) }
    dend_45 { pt3dadd( 3.92208, 8.09651, 38.1841, 0.37 ) }
    dend_45 { pt3dadd( 3.54957, 8.02017, 38.4998, 0.66 ) }
    dend_45 { pt3dadd( 3.12109, 7.81523, 38.8767, 0.22 ) }
    dend_45 { pt3dadd( 2.64736, 7.47834, 39.2482, 0.81 ) }
    dend_45 { pt3dadd( 1.66822, 6.60219, 39.9557, 0.15 ) }
    dend_45 { pt3dadd( 0.745942, 5.64885, 40.5215, 0.95 ) }
    dend_45 { pt3dadd( 0.370532, 5.25944, 40.7165, 0.95 ) }
    dend_45 { pt3dadd( -0.0458424, 4.8629, 40.8826, 0.95 ) }
    dend_45 { pt3dadd( -1.32975, 3.69084, 41.3277, 0.22 ) }
    dend_45 { pt3dadd( -2.26428, 2.84647, 41.5941, 0.22 ) }
    dend_45 { pt3dadd( -3.20189, 1.92945, 41.7634, 0.51 ) }
    dend_45 { pt3dadd( -3.89873, 1.22395, 41.8388, 0.29 ) }
    dend_45 { pt3dadd( -4.78171, 0.352116, 41.938, 0.22 ) }
    // Section: dend_13, id: dend_13, parent: dend_7 (entry count 18/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -12.0714, -18.4977, -1.09906, 1.47 ) }
    dend_13 { pt3dadd( -12.16, -20.7755, -1.63733, 1.47 ) }
    dend_13 { pt3dadd( -12.2565, -23.2562, -2.22352, 1.54 ) }
    dend_13 { pt3dadd( -12.3225, -24.9503, -2.62385, 1.54 ) }
    dend_13 { pt3dadd( -12.3818, -26.475, -2.98415, 1.76 ) }
    dend_13 { pt3dadd( -12.4372, -27.8992, -3.32069, 1.98 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 24/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -12.0714, -18.4977, -1.09906, 0.81 ) }
    dend_8 { pt3dadd( -12.5312, -19.0822, -0.0843636, 0.81 ) }
    dend_8 { pt3dadd( -13.0385, -19.6922, 0.898249, 0.81 ) }
    dend_8 { pt3dadd( -13.5191, -20.1854, 1.68527, 0.81 ) }
    dend_8 { pt3dadd( -14.2182, -20.903, 2.83031, 0.81 ) }
    dend_8 { pt3dadd( -15.19, -21.9004, 4.42184, 0.95 ) }
    dend_8 { pt3dadd( -15.7004, -22.4242, 5.25759, 0.81 ) }
    dend_8 { pt3dadd( -15.9693, -22.7469, 5.68825, 0.81 ) }
    dend_8 { pt3dadd( -16.4267, -23.3182, 6.3618, 1.1 ) }
    // Section: dend_128, id: dend_128, parent: dend_124 (entry count 33/100)
    dend_128 { pt3dclear() }
    dend_128 { pt3dadd( 69.9793, 93.9921, -55.1198, 0.88 ) }
    dend_128 { pt3dadd( 70.6423, 94.4321, -56.2539, 0.88 ) }
    dend_128 { pt3dadd( 72.0472, 95.3657, -58.5722, 0.51 ) }
    dend_128 { pt3dadd( 72.7256, 95.853, -59.7776, 0.81 ) }
    dend_128 { pt3dadd( 73.5605, 96.5379, -61.409, 0.51 ) }
    dend_128 { pt3dadd( 73.9254, 96.8795, -62.1739, 0.44 ) }
    dend_128 { pt3dadd( 74.2273, 97.1798, -62.8504, 0.44 ) }
    dend_128 { pt3dadd( 74.3999, 97.3372, -63.2354, 0.73 ) }
    dend_128 { pt3dadd( 75.1108, 97.9206, -64.8038, 1.1 ) }
    dend_128 { pt3dadd( 75.4264, 98.1228, -65.5539, 1.1 ) }
    dend_128 { pt3dadd( 75.8189, 98.297, -66.5421, 0.73 ) }
    dend_128 { pt3dadd( 76.3491, 98.4296, -67.695, 0.73 ) }
    dend_128 { pt3dadd( 77.0709, 98.5268, -68.9339, 0.44 ) }
    dend_128 { pt3dadd( 77.4217, 98.5403, -69.4254, 0.88 ) }
    dend_128 { pt3dadd( 78.6559, 98.4924, -70.7664, 0.51 ) }
    dend_128 { pt3dadd( 79.8164, 98.3951, -71.7861, 0.73 ) }
    dend_128 { pt3dadd( 80.5676, 98.3173, -72.3761, 0.29 ) }
    dend_128 { pt3dadd( 81.4497, 98.2657, -73.0389, 0.29 ) }
    dend_128 { pt3dadd( 82.2021, 98.2807, -73.6037, 0.29 ) }
    dend_128 { pt3dadd( 82.9244, 98.3069, -74.1402, 0.29 ) }
    dend_128 { pt3dadd( 83.8838, 98.3481, -74.8373, 0.88 ) }
    dend_128 { pt3dadd( 85.2091, 98.3601, -75.8062, 0.44 ) }
    dend_128 { pt3dadd( 86.2129, 98.3799, -76.6314, 0.44 ) }
    dend_128 { pt3dadd( 86.713, 98.4096, -77.0803, 0.73 ) }
    dend_128 { pt3dadd( 87.4985, 98.4855, -77.8533, 0.22 ) }
    dend_128 { pt3dadd( 88.4459, 98.5816, -78.9022, 0.22 ) }
    dend_128 { pt3dadd( 89.0886, 98.6237, -79.6262, 1.03 ) }
    dend_128 { pt3dadd( 90.7209, 98.647, -81.3491, 0.22 ) }
    dend_128 { pt3dadd( 92.1857, 98.5701, -82.837, 1.18 ) }
    dend_128 { pt3dadd( 93.4749, 98.447, -84.1183, 0.59 ) }
    dend_128 { pt3dadd( 94.5573, 98.3023, -85.2397, 0.88 ) }
    dend_128 { pt3dadd( 95.3113, 98.1478, -86.0099, 0.29 ) }
    dend_128 { pt3dadd( 95.853, 97.9919, -86.5256, 1.03 ) }
    dend_128 { pt3dadd( 96.4213, 97.7689, -87.0265, 0.51 ) }
    dend_128 { pt3dadd( 96.8679, 97.574, -87.3656, 0.88 ) }
    dend_128 { pt3dadd( 98.9653, 96.7314, -88.8486, 0.22 ) }
    dend_128 { pt3dadd( 99.5483, 96.5408, -89.3108, 0.22 ) }
    dend_128 { pt3dadd( 100.596, 96.2988, -90.2896, 0.95 ) }
    dend_128 { pt3dadd( 102.202, 96.1611, -92.0066, 0.95 ) }
    dend_128 { pt3dadd( 102.963, 96.2105, -92.8661, 0.51 ) }
    dend_128 { pt3dadd( 103.682, 96.3288, -93.7694, 0.51 ) }
    dend_128 { pt3dadd( 104.706, 96.5873, -95.1198, 0.51 ) }
    dend_128 { pt3dadd( 105.046, 96.6522, -95.6216, 0.51 ) }
    dend_128 { pt3dadd( 105.976, 96.7538, -97.1918, 0.29 ) }
    dend_128 { pt3dadd( 106.328, 96.7325, -97.8338, 0.66 ) }
    dend_128 { pt3dadd( 107.143, 96.4861, -99.4695, 0.37 ) }
    dend_128 { pt3dadd( 107.367, 96.3487, -99.9179, 1.03 ) }
    dend_128 { pt3dadd( 108.147, 95.6796, -101.504, 0.44 ) }
    dend_128 { pt3dadd( 108.772, 95.0932, -102.769, 0.66 ) }
    dend_128 { pt3dadd( 109.563, 94.3227, -104.327, 0.07 ) }
    dend_128 { pt3dadd( 109.92, 94.0061, -104.969, 0.51 ) }
    dend_128 { pt3dadd( 110.945, 93.2283, -106.544, 0.51 ) }
    dend_128 { pt3dadd( 112.043, 92.5102, -108.033, 0.51 ) }
    dend_128 { pt3dadd( 113.467, 91.6755, -109.694, 0.88 ) }
    dend_128 { pt3dadd( 113.997, 91.3984, -110.237, 0.44 ) }
    dend_128 { pt3dadd( 114.772, 91.0461, -110.94, 0.73 ) }
    dend_128 { pt3dadd( 115.57, 90.7256, -111.617, 0.29 ) }
    dend_128 { pt3dadd( 116.014, 90.5543, -111.905, 0.29 ) }
    dend_128 { pt3dadd( 116.794, 90.2571, -112.194, 0.66 ) }
    // Section: dend_125, id: dend_125, parent: dend_124 (entry count 92/100)
    dend_125 { pt3dclear() }
    dend_125 { pt3dadd( 69.9793, 93.9921, -55.1198, 0.44 ) }
    dend_125 { pt3dadd( 72.5446, 94.8063, -55.0182, 0.44 ) }
    dend_125 { pt3dadd( 73.7487, 95.2593, -55.1043, 0.44 ) }
    dend_125 { pt3dadd( 75.6186, 96.0455, -55.3552, 0.44 ) }
    dend_125 { pt3dadd( 76.9112, 96.6415, -55.569, 0.95 ) }
    dend_125 { pt3dadd( 78.1374, 97.2425, -55.7845, 0.37 ) }
    dend_125 { pt3dadd( 79.0498, 97.7236, -55.9417, 0.37 ) }
    dend_125 { pt3dadd( 79.9744, 98.2667, -56.1038, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_125 { pt3dadd( 80.6132, 98.6739, -56.3385, 0.37 ) }
    dend_125 { pt3dadd( 81.2893, 99.1407, -56.6855, 0.37 ) }
    dend_125 { pt3dadd( 82.1368, 99.7383, -57.135, 0.66 ) }
    dend_125 { pt3dadd( 83.2988, 100.55, -57.6768, 0.29 ) }
    dend_125 { pt3dadd( 84.3285, 101.241, -58.1204, 0.73 ) }
    dend_125 { pt3dadd( 85.6193, 102.119, -58.6895, 0.73 ) }
    dend_125 { pt3dadd( 86.0519, 102.45, -58.9079, 0.73 ) }
    dend_125 { pt3dadd( 86.9127, 103.202, -59.3916, 0.37 ) }
    dend_125 { pt3dadd( 87.3527, 103.594, -59.6474, 0.44 ) }
    dend_125 { pt3dadd( 87.6557, 103.855, -59.8088, 0.44 ) }
    dend_125 { pt3dadd( 88.1485, 104.259, -60.0552, 0.44 ) }
    dend_125 { pt3dadd( 89.0148, 104.881, -60.4982, 0.44 ) }
    dend_125 { pt3dadd( 89.9956, 105.459, -60.9949, 0.73 ) }
    dend_125 { pt3dadd( 91.3304, 106.121, -61.6485, 0.44 ) }
    dend_125 { pt3dadd( 91.9297, 106.364, -61.9182, 1.03 ) }
    dend_125 { pt3dadd( 93.7777, 106.974, -62.6703, 0.44 ) }
    dend_125 { pt3dadd( 95.8463, 107.506, -63.4493, 0.51 ) }
    dend_125 { pt3dadd( 97.2375, 107.78, -63.9214, 0.44 ) }
    dend_125 { pt3dadd( 97.9316, 107.884, -64.1352, 0.44 ) }
    dend_125 { pt3dadd( 99.0102, 108.003, -64.3764, 0.44 ) }
    dend_125 { pt3dadd( 99.5814, 108.037, -64.4739, 0.44 ) }
    dend_125 { pt3dadd( 100.314, 108.042, -64.5365, 0.44 ) }
    dend_125 { pt3dadd( 101.225, 108.035, -64.5797, 0.73 ) }
    dend_125 { pt3dadd( 102.077, 108.031, -64.6445, 0.44 ) }
    dend_125 { pt3dadd( 103.845, 108.025, -64.8708, 0.81 ) }
    dend_125 { pt3dadd( 105.085, 107.996, -65.1097, 0.51 ) }
    dend_125 { pt3dadd( 105.437, 107.979, -65.201, 0.51 ) }
    dend_125 { pt3dadd( 105.995, 107.965, -65.3577, 0.51 ) }
    dend_125 { pt3dadd( 106.827, 107.984, -65.5855, 0.51 ) }
    dend_125 { pt3dadd( 107.642, 108.069, -65.799, 0.51 ) }
    dend_125 { pt3dadd( 108.254, 108.16, -65.9399, 0.51 ) }
    dend_125 { pt3dadd( 109.494, 108.311, -66.1446, 0.51 ) }
    dend_125 { pt3dadd( 110.964, 108.444, -66.3813, 0.22 ) }
    dend_125 { pt3dadd( 112.335, 108.527, -66.6342, 0.22 ) }
    dend_125 { pt3dadd( 113.897, 108.597, -66.9339, 0.51 ) }
    dend_125 { pt3dadd( 115.095, 108.662, -67.1619, 0.73 ) }
    dend_125 { pt3dadd( 115.962, 108.703, -67.3463, 0.51 ) }
    dend_125 { pt3dadd( 117.279, 108.712, -67.684, 0.51 ) }
    dend_125 { pt3dadd( 118.72, 108.606, -68.1426, 0.73 ) }
    dend_125 { pt3dadd( 119.397, 108.482, -68.41, 1.03 ) }
    // Section: dend_82, id: dend_82, parent: dend_70 (entry count 40/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( -3.90029, -20.0742, 22.3638, 1.32 ) }
    dend_82 { pt3dadd( -3.48291, -21.2515, 21.7488, 1.32 ) }
    dend_82 { pt3dadd( -3.12236, -22.2684, 21.2175, 0.73 ) }
    dend_82 { pt3dadd( -2.68638, -23.4981, 20.5751, 0.88 ) }
    dend_82 { pt3dadd( -2.02728, -25.357, 19.6039, 1.1 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 45/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -3.90029, -20.0742, 22.3638, 0.88 ) }
    dend_71 { pt3dadd( -2.88307, -20.6154, 23.5142, 0.88 ) }
    dend_71 { pt3dadd( -1.852, -21.0376, 24.5235, 1.03 ) }
    dend_71 { pt3dadd( -1.10964, -21.2871, 25.1478, 1.18 ) }
    dend_71 { pt3dadd( -0.278618, -21.5373, 25.7481, 1.18 ) }
    dend_71 { pt3dadd( 0.349473, -21.7265, 26.2018, 1.18 ) }
    dend_71 { pt3dadd( 0.803427, -21.8632, 26.5297, 1.18 ) }
    dend_71 { pt3dadd( 1.4288, -21.9374, 26.9249, 1.18 ) }
    dend_71 { pt3dadd( 2.04159, -21.9361, 27.183, 1.32 ) }
    dend_71 { pt3dadd( 2.71426, -21.9405, 27.3562, 1.47 ) }
    // Section: dend_69, id: dend_69, parent: dend_67 (entry count 55/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 8.62622, -18.4972, 42.1805, 0.22 ) }
    dend_69 { pt3dadd( 9.04629, -19.3127, 42.2287, 0.22 ) }
    dend_69 { pt3dadd( 9.35043, -19.8872, 42.2401, 0.22 ) }
    dend_69 { pt3dadd( 10.0211, -20.9896, 42.2385, 0.22 ) }
    dend_69 { pt3dadd( 10.3921, -21.5689, 42.2313, 0.22 ) }
    dend_69 { pt3dadd( 10.6961, -22.0042, 42.223, 0.22 ) }
    dend_69 { pt3dadd( 11.0155, -22.4258, 42.2134, 0.22 ) }
    dend_69 { pt3dadd( 11.6639, -23.1948, 42.2044, 0.22 ) }
    dend_69 { pt3dadd( 12.2873, -23.8926, 42.205, 0.22 ) }
    dend_69 { pt3dadd( 12.6412, -24.2449, 42.1816, 0.22 ) }
    dend_69 { pt3dadd( 13.1634, -24.6935, 42.1316, 0.22 ) }
    dend_69 { pt3dadd( 13.6903, -25.0899, 42.0873, 0.22 ) }
    dend_69 { pt3dadd( 14.5351, -25.6948, 42.0179, 0.22 ) }
    dend_69 { pt3dadd( 15.14, -26.1249, 41.9709, 0.22 ) }
    dend_69 { pt3dadd( 16.101, -26.8084, 41.8783, 0.22 ) }
    dend_69 { pt3dadd( 16.5268, -27.0955, 41.8294, 0.22 ) }
    dend_69 { pt3dadd( 17.417, -27.6963, 41.6959, 0.22 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 72/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 8.62622, -18.4972, 42.1805, 0.22 ) }
    dend_68 { pt3dadd( 9.17545, -18.8606, 42.1749, 0.22 ) }
    dend_68 { pt3dadd( 9.70667, -19.1944, 42.222, 0.22 ) }
    dend_68 { pt3dadd( 10.0218, -19.3577, 42.259, 0.22 ) }
    dend_68 { pt3dadd( 10.8061, -19.6794, 42.3586, 0.22 ) }
    dend_68 { pt3dadd( 11.8047, -20.0086, 42.4874, 0.66 ) }
    dend_68 { pt3dadd( 12.8464, -20.3365, 42.6201, 0.22 ) }
    dend_68 { pt3dadd( 13.6179, -20.6031, 42.7332, 0.22 ) }
    dend_68 { pt3dadd( 14.3105, -20.7969, 42.8224, 0.22 ) }
    dend_68 { pt3dadd( 14.8815, -20.9205, 42.8959, 0.22 ) }
    dend_68 { pt3dadd( 15.3255, -20.9774, 42.9519, 0.22 ) }
    dend_68 { pt3dadd( 16.0039, -21.0167, 43.0328, 0.44 ) }
    dend_68 { pt3dadd( 16.8624, -21.0284, 43.1089, 0.15 ) }
    dend_68 { pt3dadd( 18.5721, -21.1806, 43.1453, 0.15 ) }
    // Section: dend_56, id: dend_56, parent: dend_52 (entry count 86/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -43.46, -5.78674, 35.7024, 0.51 ) }
    dend_56 { pt3dadd( -43.889, -4.81968, 36.3975, 0.51 ) }
    dend_56 { pt3dadd( -44.2485, -4.00953, 36.9798, 0.73 ) }
    dend_56 { pt3dadd( -44.4837, -3.4794, 37.3609, 1.1 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 90/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -43.46, -5.78674, 35.7024, 0.95 ) }
    dend_53 { pt3dadd( -44.4149, -6.31545, 35.145, 0.95 ) }
    dend_53 { pt3dadd( -44.802, -6.47721, 34.9371, 0.95 ) }
    dend_53 { pt3dadd( -45.3659, -6.61411, 34.6645, 0.95 ) }
    dend_53 { pt3dadd( -46.9513, -6.72768, 33.9804, 0.66 ) }
    dend_53 { pt3dadd( -47.5701, -6.68146, 33.7474, 0.66 ) }
    dend_53 { pt3dadd( -48.122, -6.60748, 33.5757, 0.66 ) }
    dend_53 { pt3dadd( -48.7359, -6.47866, 33.4598, 0.66 ) }
    dend_53 { pt3dadd( -49.6609, -6.29935, 33.3228, 0.66 ) }
    dend_53 { pt3dadd( -50.3113, -6.19629, 33.22, 0.73 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_53 { pt3dadd( -50.9203, -6.13946, 33.0859, 0.73 ) }
    dend_53 { pt3dadd( -52.0727, -6.12394, 32.7796, 0.88 ) }
    dend_53 { pt3dadd( -53.0115, -6.1667, 32.4747, 0.88 ) }
    dend_53 { pt3dadd( -54.4899, -6.29107, 31.9284, 0.66 ) }
    dend_53 { pt3dadd( -55.7727, -6.43032, 31.3958, 0.81 ) }
    dend_53 { pt3dadd( -57.4557, -6.62317, 30.5926, 0.81 ) }
    dend_53 { pt3dadd( -58.4158, -6.7219, 30.0551, 0.59 ) }
    dend_53 { pt3dadd( -59.4267, -6.78541, 29.3251, 0.59 ) }
    dend_53 { pt3dadd( -59.7351, -6.79596, 29.0386, 0.59 ) }
    dend_53 { pt3dadd( -60.1917, -6.84009, 28.5128, 0.59 ) }
    dend_53 { pt3dadd( -60.8908, -7.11295, 27.6766, 0.66 ) }
    dend_53 { pt3dadd( -61.2957, -7.38629, 27.2194, 0.66 ) }
    dend_53 { pt3dadd( -62.0786, -7.91809, 26.4981, 0.66 ) }
    dend_53 { pt3dadd( -62.7155, -8.21834, 26.0639, 0.66 ) }
    dend_53 { pt3dadd( -64.0687, -8.68539, 25.2616, 0.81 ) }
    dend_53 { pt3dadd( -65.3638, -9.06603, 24.5392, 0.73 ) }
    dend_53 { pt3dadd( -66.3394, -9.32138, 24.0552, 0.73 ) }
    dend_53 { pt3dadd( -66.9958, -9.46545, 23.7621, 0.88 ) }
    dend_53 { pt3dadd( -68.9982, -9.77223, 22.9534, 0.29 ) }
    dend_53 { pt3dadd( -70.5211, -9.8993, 22.3641, 0.88 ) }
    dend_53 { pt3dadd( -71.4566, -9.91457, 22.0335, 0.88 ) }
    dend_53 { pt3dadd( -72.6559, -9.89412, 21.6814, 0.81 ) }
    dend_53 { pt3dadd( -73.5008, -9.88754, 21.4629, 0.81 ) }
    dend_53 { pt3dadd( -74.4988, -9.94551, 21.2291, 0.81 ) }
    dend_53 { pt3dadd( -75.3667, -10.0943, 21.0497, 0.81 ) }
    dend_53 { pt3dadd( -76.1479, -10.3003, 20.9407, 0.81 ) }
    dend_53 { pt3dadd( -76.8541, -10.5505, 20.8975, 0.59 ) }
    dend_53 { pt3dadd( -78.0703, -11.0757, 20.8944, 0.88 ) }
    dend_53 { pt3dadd( -79.4308, -11.7562, 20.9874, 0.44 ) }
    dend_53 { pt3dadd( -80.6733, -12.424, 21.1573, 0.44 ) }
    dend_53 { pt3dadd( -82.061, -13.2024, 21.4237, 0.44 ) }
    dend_53 { pt3dadd( -83.3619, -13.9322, 21.768, 0.81 ) }
    dend_53 { pt3dadd( -84.5464, -14.5985, 22.14, 0.59 ) }
    dend_53 { pt3dadd( -85.513, -15.1603, 22.4874, 0.59 ) }
    dend_53 { pt3dadd( -86.4219, -15.7396, 22.8355, 0.59 ) }
    dend_53 { pt3dadd( -86.9042, -16.108, 23.0272, 0.73 ) }
    dend_53 { pt3dadd( -88.0922, -17.2571, 23.4234, 0.29 ) }
    dend_53 { pt3dadd( -88.7176, -17.9991, 23.6219, 0.59 ) }
    dend_53 { pt3dadd( -89.2232, -18.6993, 23.8155, 0.66 ) }
    dend_53 { pt3dadd( -89.8557, -19.59, 24.0997, 0.66 ) }
    dend_53 { pt3dadd( -90.5895, -20.5642, 24.4947, 0.51 ) }
    dend_53 { pt3dadd( -91.2587, -21.2732, 24.8904, 0.51 ) }
    dend_53 { pt3dadd( -91.9432, -21.7974, 25.3057, 0.51 ) }
    dend_53 { pt3dadd( -92.7806, -22.2765, 25.8221, 0.51 ) }
    dend_53 { pt3dadd( -93.7061, -22.7065, 26.3742, 0.51 ) }
    dend_53 { pt3dadd( -94.3474, -22.989, 26.7344, 0.51 ) }
    dend_53 { pt3dadd( -95.2089, -23.3878, 27.1954, 1.25 ) }
    dend_53 { pt3dadd( -96.3296, -24.0087, 27.7416, 0.81 ) }
    dend_53 { pt3dadd( -97.1143, -24.5183, 28.0482, 0.37 ) }
    dend_53 { pt3dadd( -97.4677, -24.7831, 28.1668, 0.37 ) }
    dend_53 { pt3dadd( -98.4868, -25.6354, 28.4735, 0.73 ) }
    dend_53 { pt3dadd( -99.1906, -26.2306, 28.6633, 0.37 ) }
    dend_53 { pt3dadd( -100.245, -27.0896, 28.9085, 0.51 ) }
    dend_53 { pt3dadd( -101.242, -27.8829, 29.1177, 0.51 ) }
    dend_53 { pt3dadd( -102.07, -28.4847, 29.2759, 0.22 ) }
    dend_53 { pt3dadd( -102.909, -29.0275, 29.4324, 0.73 ) }
    dend_53 { pt3dadd( -103.689, -29.4455, 29.5681, 0.29 ) }
    dend_53 { pt3dadd( -104.494, -29.8466, 29.678, 0.44 ) }
    // Section: dend_39, id: dend_39, parent: dend_13 (entry count 58/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -12.4372, -27.8992, -3.32069, 0.51 ) }
    dend_39 { pt3dadd( -11.8513, -29.1556, -4.1779, 0.51 ) }
    dend_39 { pt3dadd( -11.4527, -29.912, -4.71086, 0.51 ) }
    dend_39 { pt3dadd( -11.0035, -30.7019, -5.29794, 0.59 ) }
    dend_39 { pt3dadd( -10.2573, -31.92, -6.21888, 1.1 ) }
    dend_39 { pt3dadd( -9.57794, -32.9111, -6.98534, 0.59 ) }
    dend_39 { pt3dadd( -9.13391, -33.5307, -7.46077, 0.59 ) }
    dend_39 { pt3dadd( -8.8437, -33.9058, -7.77617, 0.59 ) }
    dend_39 { pt3dadd( -8.2853, -34.5711, -8.40948, 0.95 ) }
    dend_39 { pt3dadd( -8.02902, -34.8568, -8.6881, 1.18 ) }
    dend_39 { pt3dadd( -7.34238, -35.5907, -9.42789, 1.18 ) }
    dend_39 { pt3dadd( -6.3761, -36.686, -10.5358, 0.88 ) }
    dend_39 { pt3dadd( -5.64142, -37.554, -11.3885, 0.88 ) }
    dend_39 { pt3dadd( -4.53053, -38.9133, -12.7581, 0.66 ) }
    dend_39 { pt3dadd( -3.91034, -39.6887, -13.5481, 0.95 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 73/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -12.4372, -27.8992, -3.32069, 1.32 ) }
    dend_14 { pt3dadd( -13.3255, -29.9014, -3.46787, 1.32 ) }
    dend_14 { pt3dadd( -13.753, -30.8649, -3.5387, 1.54 ) }
    dend_14 { pt3dadd( -14.0339, -31.4979, -3.58524, 1.54 ) }
    // Section: dend_12, id: dend_12, parent: dend_8 (entry count 77/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -16.4267, -23.3182, 6.3618, 0.66 ) }
    dend_12 { pt3dadd( -17.248, -22.6162, 6.87358, 0.66 ) }
    dend_12 { pt3dadd( -18.0162, -22.051, 7.39657, 0.66 ) }
    dend_12 { pt3dadd( -19.0253, -21.4687, 8.13279, 0.66 ) }
    dend_12 { pt3dadd( -19.9335, -21.0779, 8.86402, 0.66 ) }
    dend_12 { pt3dadd( -20.7974, -20.8097, 9.62603, 0.88 ) }
    dend_12 { pt3dadd( -21.5736, -20.6284, 10.3236, 0.95 ) }
    dend_12 { pt3dadd( -22.3159, -20.5783, 10.9772, 0.73 ) }
    dend_12 { pt3dadd( -23.2487, -20.5406, 11.7625, 0.59 ) }
    dend_12 { pt3dadd( -24.1131, -20.477, 12.4596, 0.59 ) }
    dend_12 { pt3dadd( -24.6606, -20.3619, 12.8351, 0.59 ) }
    dend_12 { pt3dadd( -25.3478, -20.1152, 13.2379, 0.51 ) }
    dend_12 { pt3dadd( -26.1903, -19.6843, 13.6985, 0.51 ) }
    dend_12 { pt3dadd( -27.6076, -18.7359, 14.5432, 0.37 ) }
    dend_12 { pt3dadd( -28.2365, -18.2557, 14.9559, 0.37 ) }
    dend_12 { pt3dadd( -29.1388, -17.5725, 15.5906, 0.37 ) }
    dend_12 { pt3dadd( -30.2038, -16.8387, 16.3971, 1.1 ) }
    dend_12 { pt3dadd( -30.8823, -16.4577, 16.9699, 1.4 ) }
    dend_12 { pt3dadd( -32.2684, -15.9242, 18.1838, 0.73 ) }
    dend_12 { pt3dadd( -32.9451, -15.7946, 18.7505, 0.59 ) }
    dend_12 { pt3dadd( -33.8767, -15.7129, 19.4541, 0.44 ) }
    dend_12 { pt3dadd( -34.7864, -15.6721, 20.0931, 0.44 ) }
    dend_12 { pt3dadd( -35.8249, -15.6392, 20.7577, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_12 { pt3dadd( -36.7662, -15.6305, 21.3192, 0.44 ) }
    dend_12 { pt3dadd( -37.7179, -15.6428, 21.8309, 0.29 ) }
    dend_12 { pt3dadd( -38.2735, -15.6248, 22.1288, 0.29 ) }
    dend_12 { pt3dadd( -39.3335, -15.5406, 22.7968, 0.29 ) }
    dend_12 { pt3dadd( -40.198, -15.488, 23.4913, 0.59 ) }
    dend_12 { pt3dadd( -40.6392, -15.5047, 23.9417, 0.59 ) }
    dend_12 { pt3dadd( -40.9695, -15.5604, 24.327, 0.59 ) }
    dend_12 { pt3dadd( -41.3812, -15.671, 24.8072, 0.59 ) }
    dend_12 { pt3dadd( -42.2587, -15.9369, 25.7118, 0.59 ) }
    dend_12 { pt3dadd( -43.1721, -16.1294, 26.3454, 0.59 ) }
    dend_12 { pt3dadd( -44.0325, -16.2187, 26.8184, 0.59 ) }
    dend_12 { pt3dadd( -44.5493, -16.2428, 27.0874, 0.59 ) }
    dend_12 { pt3dadd( -45.2524, -16.238, 27.4528, 0.59 ) }
    dend_12 { pt3dadd( -46.1104, -16.1735, 27.8794, 0.59 ) }
    dend_12 { pt3dadd( -48.3028, -15.8323, 28.8662, 0.37 ) }
    dend_12 { pt3dadd( -49.7484, -15.5026, 29.5153, 0.37 ) }
    dend_12 { pt3dadd( -50.8333, -15.2005, 30.0143, 0.59 ) }
    dend_12 { pt3dadd( -51.906, -14.905, 30.5746, 0.59 ) }
    dend_12 { pt3dadd( -52.3009, -14.8034, 30.8161, 0.59 ) }
    dend_12 { pt3dadd( -52.9089, -14.6521, 31.3075, 0.59 ) }
    dend_12 { pt3dadd( -53.2998, -14.5674, 31.889, 0.59 ) }
    dend_12 { pt3dadd( -53.4389, -14.5899, 32.1848, 0.59 ) }
    dend_12 { pt3dadd( -53.6997, -14.8856, 33.0187, 0.59 ) }
    dend_12 { pt3dadd( -53.8788, -15.1752, 33.5343, 0.59 ) }
    dend_12 { pt3dadd( -54.2113, -15.6976, 34.3501, 0.59 ) }
    dend_12 { pt3dadd( -54.5965, -16.307, 35.2388, 0.66 ) }
    dend_12 { pt3dadd( -54.9313, -16.8508, 35.9637, 0.66 ) }
    dend_12 { pt3dadd( -55.2801, -17.4278, 36.687, 0.66 ) }
    dend_12 { pt3dadd( -55.7093, -18.0973, 37.1456, 0.37 ) }
    dend_12 { pt3dadd( -55.4921, -17.8078, 37.0727, 0.37 ) }
    dend_12 { pt3dadd( -55.1761, -17.3713, 37.0263, 0.37 ) }
    dend_12 { pt3dadd( -54.6299, -16.5668, 36.9837, 0.73 ) }
    dend_12 { pt3dadd( -54.0567, -15.7226, 36.9384, 0.37 ) }
    dend_12 { pt3dadd( -53.616, -15.0666, 36.9004, 0.37 ) }
    dend_12 { pt3dadd( -52.7666, -13.9542, 36.8826, 0.22 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 35/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -16.4267, -23.3182, 6.3618, 0.66 ) }
    dend_9 { pt3dadd( -17.6635, -24.1566, 7.22521, 0.66 ) }
    dend_9 { pt3dadd( -18.7185, -25.0113, 7.95995, 0.66 ) }
    dend_9 { pt3dadd( -19.1666, -25.457, 8.3118, 0.66 ) }
    dend_9 { pt3dadd( -19.517, -25.9136, 8.66717, 0.66 ) }
    dend_9 { pt3dadd( -19.9583, -26.8033, 9.36774, 0.66 ) }
    dend_9 { pt3dadd( -20.0486, -27.1731, 9.66135, 0.66 ) }
    dend_9 { pt3dadd( -20.0233, -27.5906, 9.93974, 0.66 ) }
    dend_9 { pt3dadd( -19.9007, -28.2412, 10.4851, 0.66 ) }
    dend_9 { pt3dadd( -19.7073, -29.0087, 11.2427, 0.66 ) }
    dend_9 { pt3dadd( -19.4604, -29.8392, 12.1733, 0.66 ) }
    dend_9 { pt3dadd( -19.1743, -30.8111, 13.3889, 0.66 ) }
    dend_9 { pt3dadd( -18.9697, -31.7076, 14.5746, 1.03 ) }
    dend_9 { pt3dadd( -18.7449, -33.5293, 17.0941, 1.47 ) }
    dend_9 { pt3dadd( -18.7513, -33.9852, 17.7348, 1.47 ) }
    dend_9 { pt3dadd( -18.9558, -35.2248, 19.4803, 0.81 ) }
    dend_9 { pt3dadd( -19.1678, -35.925, 20.4676, 0.81 ) }
    dend_9 { pt3dadd( -19.3909, -36.4562, 21.2001, 0.95 ) }
    dend_9 { pt3dadd( -19.6392, -36.9135, 21.829, 1.18 ) }
    dend_9 { pt3dadd( -20.0478, -37.5052, 22.3928, 0.95 ) }
    dend_9 { pt3dadd( -20.3734, -37.8807, 22.7076, 0.95 ) }
    dend_9 { pt3dadd( -20.7223, -38.1895, 22.8852, 0.95 ) }
    dend_9 { pt3dadd( -21.3425, -38.897, 23.1227, 1.03 ) }
    // Section: dend_127, id: dend_127, parent: dend_125 (entry count 58/100)
    dend_127 { pt3dclear() }
    dend_127 { pt3dadd( 119.397, 108.482, -68.41, 0.81 ) }
    dend_127 { pt3dadd( 121.033, 107.774, -70.3688, 0.81 ) }
    dend_127 { pt3dadd( 121.812, 107.36, -71.2444, 0.51 ) }
    dend_127 { pt3dadd( 122.374, 107.017, -71.8211, 0.37 ) }
    dend_127 { pt3dadd( 123.041, 106.61, -72.5045, 0.29 ) }
    dend_127 { pt3dadd( 123.59, 106.275, -73.0669, 0.29 ) }
    dend_127 { pt3dadd( 124.167, 105.924, -73.6578, 0.44 ) }
    dend_127 { pt3dadd( 124.563, 105.653, -73.919, 0.44 ) }
    dend_127 { pt3dadd( 125.484, 104.896, -74.4599, 0.51 ) }
    // Section: dend_126, id: dend_126, parent: dend_125 (entry count 67/100)
    dend_126 { pt3dclear() }
    dend_126 { pt3dadd( 119.397, 108.482, -68.41, 0.44 ) }
    dend_126 { pt3dadd( 120.267, 109.196, -69.0144, 0.44 ) }
    dend_126 { pt3dadd( 120.87, 109.732, -69.421, 0.73 ) }
    dend_126 { pt3dadd( 121.919, 110.664, -70.1282, 0.29 ) }
    dend_126 { pt3dadd( 122.706, 111.364, -70.6584, 0.22 ) }
    dend_126 { pt3dadd( 123.762, 112.302, -71.37, 0.15 ) }
    dend_126 { pt3dadd( 124.024, 112.535, -71.5466, 0.15 ) }
    dend_126 { pt3dadd( 124.579, 113.006, -71.9809, 0.44 ) }
    // Section: dend_86, id: dend_86, parent: dend_82 (entry count 75/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( -2.02728, -25.357, 19.6039, 1.32 ) }
    dend_86 { pt3dadd( -1.22649, -26.7301, 18.9377, 1.32 ) }
    dend_86 { pt3dadd( -0.392236, -28.1605, 18.2437, 0.88 ) }
    dend_86 { pt3dadd( 0.149789, -29.0899, 17.7928, 1.1 ) }
    dend_86 { pt3dadd( 0.870213, -30.3251, 17.1935, 1.4 ) }
    // Section: dend_83, id: dend_83, parent: dend_82 (entry count 80/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( -2.02728, -25.357, 19.6039, 0.66 ) }
    dend_83 { pt3dadd( -1.04379, -25.4105, 18.0789, 0.66 ) }
    dend_83 { pt3dadd( -0.144867, -25.4593, 16.6851, 0.73 ) }
    dend_83 { pt3dadd( 0.72076, -25.5064, 15.3429, 0.73 ) }
    dend_83 { pt3dadd( 1.47631, -25.5474, 14.1714, 0.95 ) }
    // Section: dend_77, id: dend_77, parent: dend_71 (entry count 85/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 2.71426, -21.9405, 27.3562, 0.44 ) }
    dend_77 { pt3dadd( 3.86072, -22.1759, 26.8792, 0.44 ) }
    dend_77 { pt3dadd( 5.30496, -22.472, 26.3075, 0.81 ) }
    dend_77 { pt3dadd( 6.6585, -22.7461, 25.7971, 0.59 ) }
    dend_77 { pt3dadd( 8.33264, -23.1024, 25.1994, 0.44 ) }
    dend_77 { pt3dadd( 9.69294, -23.416, 24.7267, 0.44 ) }
    dend_77 { pt3dadd( 10.365, -23.5891, 24.4993, 0.44 ) }
    dend_77 { pt3dadd( 11.0394, -23.8052, 24.3025, 0.44 ) }
    dend_77 { pt3dadd( 11.4441, -23.9554, 24.2031, 0.44 ) }
    dend_77 { pt3dadd( 12.2564, -24.2815, 24.0395, 0.44 ) }
    dend_77 { pt3dadd( 13.0171, -24.5766, 23.9201, 0.44 ) }
    dend_77 { pt3dadd( 13.5747, -24.7861, 23.8831, 0.44 ) }
    dend_77 { pt3dadd( 14.2109, -25.0281, 23.9068, 0.66 ) }
    dend_77 { pt3dadd( 15.0252, -25.355, 24.0271, 0.44 ) }
    dend_77 { pt3dadd( 15.6783, -25.6631, 24.1429, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_77 { pt3dadd( 16.4066, -26.0378, 24.3248, 0.44 ) }
    dend_77 { pt3dadd( 17.5873, -26.6821, 24.6579, 0.88 ) }
    dend_77 { pt3dadd( 18.2497, -27.05, 24.8522, 0.88 ) }
    dend_77 { pt3dadd( 19.0823, -27.5212, 25.1053, 0.88 ) }
    dend_77 { pt3dadd( 20.4273, -28.3057, 25.5154, 0.66 ) }
    dend_77 { pt3dadd( 21.2174, -28.7715, 25.7489, 0.66 ) }
    dend_77 { pt3dadd( 22.2174, -29.3222, 26.0125, 0.66 ) }
    dend_77 { pt3dadd( 22.7786, -29.5844, 26.1096, 0.66 ) }
    dend_77 { pt3dadd( 23.3884, -29.7599, 26.2253, 0.66 ) }
    dend_77 { pt3dadd( 23.7925, -29.7631, 26.3071, 0.66 ) }
    dend_77 { pt3dadd( 24.136, -29.6587, 26.4082, 0.73 ) }
    dend_77 { pt3dadd( 24.3981, -29.5478, 26.4725, 0.73 ) }
    dend_77 { pt3dadd( 24.6722, -29.479, 26.5461, 0.73 ) }
    dend_77 { pt3dadd( 25.139, -29.6291, 26.6364, 0.73 ) }
    dend_77 { pt3dadd( 25.7698, -29.9147, 26.7483, 0.51 ) }
    dend_77 { pt3dadd( 26.244, -30.1372, 26.83, 0.51 ) }
    dend_77 { pt3dadd( 26.859, -30.4313, 26.9588, 0.51 ) }
    dend_77 { pt3dadd( 28.1073, -31.0578, 27.1936, 0.66 ) }
    dend_77 { pt3dadd( 29.4739, -31.7786, 27.4466, 0.59 ) }
    dend_77 { pt3dadd( 30.456, -32.3212, 27.624, 0.59 ) }
    dend_77 { pt3dadd( 31.4899, -32.901, 27.8173, 0.73 ) }
    dend_77 { pt3dadd( 32.4407, -33.4018, 27.9951, 0.73 ) }
    dend_77 { pt3dadd( 33.8953, -34.0598, 28.2601, 0.95 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 23/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 2.71426, -21.9405, 27.3562, 0.73 ) }
    dend_72 { pt3dadd( 4.20759, -22.8261, 28.3584, 0.73 ) }
    dend_72 { pt3dadd( 4.75007, -23.0823, 28.816, 0.73 ) }
    dend_72 { pt3dadd( 5.4559, -23.4138, 29.4839, 0.66 ) }
    dend_72 { pt3dadd( 5.93167, -23.6614, 29.9831, 0.59 ) }
    dend_72 { pt3dadd( 6.80507, -24.1951, 30.9877, 0.73 ) }
    dend_72 { pt3dadd( 7.2899, -24.5938, 31.6014, 0.95 ) }
    dend_72 { pt3dadd( 7.9557, -25.254, 32.4478, 1.1 ) }
    dend_72 { pt3dadd( 8.16528, -25.488, 32.7385, 1.1 ) }
    dend_72 { pt3dadd( 8.47431, -25.855, 33.1641, 1.1 ) }
    dend_72 { pt3dadd( 8.73023, -26.2023, 33.5284, 1.1 ) }
    dend_72 { pt3dadd( 9.38865, -27.2909, 34.3201, 0.88 ) }
    dend_72 { pt3dadd( 9.88585, -28.1177, 34.7928, 1.1 ) }
    dend_72 { pt3dadd( 10.4591, -28.9312, 35.1757, 0.59 ) }
    dend_72 { pt3dadd( 10.8509, -29.3709, 35.4024, 0.88 ) }
    // Section: dend_62, id: dend_62, parent: dend_56 (entry count 38/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -44.4837, -3.4794, 37.3609, 0.22 ) }
    dend_62 { pt3dadd( -43.2915, -3.71865, 37.4857, 0.22 ) }
    dend_62 { pt3dadd( -42.1763, -4.06135, 37.5385, 0.22 ) }
    dend_62 { pt3dadd( -41.3498, -4.42603, 37.5503, 0.22 ) }
    dend_62 { pt3dadd( -40.493, -4.9526, 37.558, 0.22 ) }
    dend_62 { pt3dadd( -39.8436, -5.35169, 37.5638, 0.22 ) }
    dend_62 { pt3dadd( -39.1766, -5.76165, 37.5698, 0.22 ) }
    dend_62 { pt3dadd( -38.5246, -6.32101, 37.5635, 0.22 ) }
    dend_62 { pt3dadd( -37.9936, -6.93214, 37.5128, 0.22 ) }
    dend_62 { pt3dadd( -37.4734, -7.70859, 37.4392, 0.51 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 48/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -44.4837, -3.4794, 37.3609, 0.95 ) }
    dend_57 { pt3dadd( -45.1748, -3.65913, 37.3304, 0.95 ) }
    dend_57 { pt3dadd( -46.1434, -3.91103, 37.2876, 0.59 ) }
    dend_57 { pt3dadd( -46.7994, -4.08163, 37.2587, 0.22 ) }
    dend_57 { pt3dadd( -47.1825, -4.18127, 37.2418, 0.73 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 53/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -104.494, -29.8466, 29.678, 0.95 ) }
    dend_55 { pt3dadd( -104.933, -28.9369, 29.686, 0.95 ) }
    dend_55 { pt3dadd( -105.88, -27.4218, 29.6841, 0.15 ) }
    dend_55 { pt3dadd( -106.339, -26.7442, 29.6796, 0.15 ) }
    dend_55 { pt3dadd( -106.794, -26.0626, 29.6594, 0.15 ) }
    dend_55 { pt3dadd( -107.202, -25.4264, 29.6325, 0.29 ) }
    dend_55 { pt3dadd( -107.637, -24.7179, 29.5973, 0.15 ) }
    dend_55 { pt3dadd( -107.939, -24.319, 29.5659, 0.15 ) }
    dend_55 { pt3dadd( -108.326, -23.983, 29.4973, 0.07 ) }
    dend_55 { pt3dadd( -108.761, -23.6581, 29.4349, 0.15 ) }
    dend_55 { pt3dadd( -109.038, -23.4231, 29.4013, 0.15 ) }
    dend_55 { pt3dadd( -109.15, -23.0642, 29.3338, 0.51 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 65/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -104.494, -29.8466, 29.678, 0.73 ) }
    dend_54 { pt3dadd( -104.644, -30.5838, 29.4951, 0.73 ) }
    dend_54 { pt3dadd( -104.94, -31.3803, 29.3042, 0.81 ) }
    dend_54 { pt3dadd( -105.237, -31.9886, 29.1998, 0.37 ) }
    dend_54 { pt3dadd( -105.858, -33.0163, 29.1023, 0.51 ) }
    dend_54 { pt3dadd( -106.288, -33.563, 29.0759, 0.29 ) }
    dend_54 { pt3dadd( -106.785, -34.1096, 29.0409, 0.29 ) }
    dend_54 { pt3dadd( -107.319, -34.6115, 29.0166, 0.29 ) }
    dend_54 { pt3dadd( -107.827, -35.0416, 29.0055, 0.29 ) }
    dend_54 { pt3dadd( -108.856, -35.8857, 29.0089, 1.03 ) }
    dend_54 { pt3dadd( -109.951, -36.804, 29.0864, 0.37 ) }
    dend_54 { pt3dadd( -110.757, -37.5094, 29.2001, 0.37 ) }
    dend_54 { pt3dadd( -111.151, -37.8589, 29.2695, 0.37 ) }
    dend_54 { pt3dadd( -111.916, -38.5009, 29.4187, 0.37 ) }
    dend_54 { pt3dadd( -112.708, -39.0979, 29.5689, 0.37 ) }
    dend_54 { pt3dadd( -113.555, -39.6755, 29.7553, 0.37 ) }
    dend_54 { pt3dadd( -114.462, -40.2971, 30.0003, 0.37 ) }
    dend_54 { pt3dadd( -115.13, -40.7516, 30.1982, 1.03 ) }
    dend_54 { pt3dadd( -115.683, -41.077, 30.3712, 1.03 ) }
    dend_54 { pt3dadd( -117.077, -41.8027, 30.8772, 0.37 ) }
    dend_54 { pt3dadd( -117.554, -42.0298, 31.0536, 0.37 ) }
    dend_54 { pt3dadd( -118.263, -42.3591, 31.3169, 0.37 ) }
    dend_54 { pt3dadd( -118.927, -42.6693, 31.6236, 1.1 ) }
    dend_54 { pt3dadd( -120.513, -43.3717, 32.4608, 0.22 ) }
    dend_54 { pt3dadd( -121.475, -43.7707, 33.0473, 0.22 ) }
    dend_54 { pt3dadd( -122.28, -44.0397, 33.6148, 0.22 ) }
    dend_54 { pt3dadd( -122.915, -44.2176, 34.0644, 0.22 ) }
    dend_54 { pt3dadd( -123.959, -44.4278, 34.7953, 1.03 ) }
    dend_54 { pt3dadd( -124.325, -44.4823, 35.0638, 1.03 ) }
    dend_54 { pt3dadd( -124.977, -44.6265, 35.5562, 0.73 ) }
    dend_54 { pt3dadd( -125.539, -44.6807, 35.9824, 0.73 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 96/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -3.91034, -39.6887, -13.5481, 0.44 ) }
    dend_41 { pt3dadd( -3.99154, -40.5922, -14.5584, 0.44 ) }
    dend_41 { pt3dadd( -4.04333, -41.4854, -15.5549, 0.44 ) }
    dend_41 { pt3dadd( -4.05545, -42.5723, -16.6978, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_41 { pt3dadd( -4.02863, -43.3482, -17.4776, 0.44 ) }
    dend_41 { pt3dadd( -3.96235, -44.2936, -18.3735, 0.44 ) }
    dend_41 { pt3dadd( -3.87977, -45.4574, -19.4291, 0.73 ) }
    dend_41 { pt3dadd( -3.86713, -46.2802, -20.1144, 0.73 ) }
    dend_41 { pt3dadd( -3.84044, -46.9271, -20.5996, 0.88 ) }
    dend_41 { pt3dadd( -3.7172, -47.7832, -21.2033, 0.59 ) }
    dend_41 { pt3dadd( -3.59061, -48.3277, -21.5659, 1.1 ) }
    dend_41 { pt3dadd( -3.0551, -50.1147, -22.6786, 0.66 ) }
    dend_41 { pt3dadd( -2.80021, -50.9206, -23.1774, 0.95 ) }
    dend_41 { pt3dadd( -2.56136, -51.7362, -23.6913, 0.95 ) }
    dend_41 { pt3dadd( -2.27322, -52.8115, -24.4153, 0.37 ) }
    dend_41 { pt3dadd( -2.11373, -53.3894, -24.7983, 0.37 ) }
    dend_41 { pt3dadd( -1.97824, -53.8037, -25.1172, 0.73 ) }
    dend_41 { pt3dadd( -1.49328, -55.0324, -26.1966, 0.44 ) }
    dend_41 { pt3dadd( -1.3427, -55.4028, -26.5484, 0.44 ) }
    dend_41 { pt3dadd( -1.17914, -55.8038, -26.9572, 0.44 ) }
    dend_41 { pt3dadd( -0.841694, -56.6878, -27.9826, 0.95 ) }
    dend_41 { pt3dadd( -0.328033, -58.1938, -29.8581, 0.51 ) }
    dend_41 { pt3dadd( -0.198068, -58.6427, -30.4191, 0.51 ) }
    dend_41 { pt3dadd( -0.0803367, -59.1141, -30.9768, 0.88 ) }
    dend_41 { pt3dadd( 0.0724862, -59.9473, -31.8957, 0.88 ) }
    dend_41 { pt3dadd( 0.204761, -61.2478, -33.1782, 0.73 ) }
    dend_41 { pt3dadd( 0.204192, -61.8644, -33.7001, 0.59 ) }
    dend_41 { pt3dadd( 0.219079, -62.7267, -34.2882, 0.44 ) }
    dend_41 { pt3dadd( 0.298617, -63.3299, -34.7187, 0.44 ) }
    dend_41 { pt3dadd( 0.464504, -63.99, -35.2051, 1.03 ) }
    dend_41 { pt3dadd( 0.617157, -64.4041, -35.4921, 1.32 ) }
    dend_41 { pt3dadd( 1.3932, -65.919, -36.5696, 0.44 ) }
    dend_41 { pt3dadd( 2.07363, -67.0455, -37.4661, 0.66 ) }
    dend_41 { pt3dadd( 2.7509, -67.9984, -38.3374, 0.66 ) }
    dend_41 { pt3dadd( 3.04519, -68.4058, -38.7299, 0.66 ) }
    dend_41 { pt3dadd( 3.33895, -68.8475, -39.158, 0.88 ) }
    dend_41 { pt3dadd( 3.67386, -69.5053, -39.7256, 0.88 ) }
    dend_41 { pt3dadd( 3.86348, -70.0848, -40.1442, 0.88 ) }
    dend_41 { pt3dadd( 4.08175, -71.3194, -40.9459, 0.66 ) }
    dend_41 { pt3dadd( 4.17598, -72.2247, -41.5157, 0.73 ) }
    dend_41 { pt3dadd( 4.26629, -73.2214, -42.1406, 0.73 ) }
    dend_41 { pt3dadd( 4.40032, -74.4142, -42.8946, 0.95 ) }
    dend_41 { pt3dadd( 4.56366, -75.7081, -43.6969, 0.15 ) }
    dend_41 { pt3dadd( 4.69282, -76.7794, -44.342, 0.37 ) }
    dend_41 { pt3dadd( 4.82225, -77.9483, -45.0313, 0.95 ) }
    dend_41 { pt3dadd( 4.93184, -78.6845, -45.4591, 0.95 ) }
    dend_41 { pt3dadd( 5.21207, -80.0385, -46.2378, 0.22 ) }
    dend_41 { pt3dadd( 5.371, -80.629, -46.5945, 0.22 ) }
    dend_41 { pt3dadd( 5.69513, -81.6898, -47.2081, 1.47 ) }
    dend_41 { pt3dadd( 6.16908, -83.2045, -48.0604, 0.59 ) }
    dend_41 { pt3dadd( 6.60636, -84.704, -48.8773, 0.37 ) }
    dend_41 { pt3dadd( 6.97307, -86.2209, -49.7096, 0.44 ) }
    dend_41 { pt3dadd( 7.15905, -87.3378, -50.2841, 0.44 ) }
    dend_41 { pt3dadd( 7.22459, -88.3009, -50.7614, 0.44 ) }
    dend_41 { pt3dadd( 7.16994, -88.8967, -51.0282, 0.44 ) }
    dend_41 { pt3dadd( 6.89993, -89.7725, -51.3514, 0.44 ) }
    dend_41 { pt3dadd( 6.39726, -90.8088, -51.6879, 1.03 ) }
    dend_41 { pt3dadd( 5.71387, -92.0007, -52.0072, 1.03 ) }
    dend_41 { pt3dadd( 4.94822, -93.2656, -52.2965, 0.29 ) }
    dend_41 { pt3dadd( 3.93867, -94.9373, -52.6909, 0.37 ) }
    dend_41 { pt3dadd( 3.32137, -96.0368, -52.9405, 0.37 ) }
    dend_41 { pt3dadd( 2.62165, -97.453, -53.2539, 1.03 ) }
    dend_41 { pt3dadd( 2.12494, -98.7119, -53.5311, 0.37 ) }
    dend_41 { pt3dadd( 1.87011, -99.5964, -53.7546, 1.25 ) }
    dend_41 { pt3dadd( 1.61372, -101.034, -54.1681, 0.44 ) }
    dend_41 { pt3dadd( 1.56625, -101.768, -54.4055, 0.44 ) }
    dend_41 { pt3dadd( 1.6127, -102.78, -54.7894, 0.44 ) }
    dend_41 { pt3dadd( 1.75403, -103.915, -55.2866, 0.44 ) }
    dend_41 { pt3dadd( 1.92098, -104.838, -55.7391, 0.59 ) }
    dend_41 { pt3dadd( 2.15967, -106.026, -56.3359, 1.18 ) }
    dend_41 { pt3dadd( 2.35972, -106.962, -56.8141, 1.18 ) }
    dend_41 { pt3dadd( 2.72178, -108.599, -57.6483, 0.29 ) }
    dend_41 { pt3dadd( 2.94819, -109.547, -58.164, 0.29 ) }
    dend_41 { pt3dadd( 3.18087, -110.357, -58.6473, 0.29 ) }
    dend_41 { pt3dadd( 3.48558, -111.049, -59.1324, 0.88 ) }
    dend_41 { pt3dadd( 4.14359, -112.023, -60.0919, 0.88 ) }
    dend_41 { pt3dadd( 4.62046, -112.539, -60.8032, 0.29 ) }
    dend_41 { pt3dadd( 5.26986, -113.092, -61.7977, 0.29 ) }
    dend_41 { pt3dadd( 5.83291, -113.509, -62.7404, 0.29 ) }
    dend_41 { pt3dadd( 6.48985, -113.954, -64.1212, 1.32 ) }
    dend_41 { pt3dadd( 7.2553, -114.399, -66.2164, 0.51 ) }
    dend_41 { pt3dadd( 7.60341, -114.56, -67.4368, 0.51 ) }
    dend_41 { pt3dadd( 7.80026, -114.638, -68.2902, 0.51 ) }
    dend_41 { pt3dadd( 7.95112, -114.702, -69.08, 0.51 ) }
    dend_41 { pt3dadd( 8.20003, -114.848, -70.852, 0.51 ) }
    dend_41 { pt3dadd( 8.28909, -114.983, -72.3793, 0.51 ) }
    dend_41 { pt3dadd( 8.26561, -115.053, -73.0965, 0.51 ) }
    dend_41 { pt3dadd( 8.16643, -115.168, -73.999, 0.51 ) }
    dend_41 { pt3dadd( 8.03667, -115.383, -74.9902, 0.51 ) }
    dend_41 { pt3dadd( 7.98928, -115.513, -75.416, 0.51 ) }
    dend_41 { pt3dadd( 7.9236, -115.961, -76.3512, 0.51 ) }
    dend_41 { pt3dadd( 7.88349, -116.756, -77.7589, 0.51 ) }
    dend_41 { pt3dadd( 7.88176, -117.302, -78.6815, 0.51 ) }
    dend_41 { pt3dadd( 7.92091, -118.019, -79.8325, 0.81 ) }
    dend_41 { pt3dadd( 8.0229, -118.802, -81.0222, 0.95 ) }
    dend_41 { pt3dadd( 8.39056, -120.453, -83.4119, 0.29 ) }
    dend_41 { pt3dadd( 8.74662, -121.573, -84.9279, 1.03 ) }
    dend_41 { pt3dadd( 9.22957, -122.795, -86.3995, 1.4 ) }
    dend_41 { pt3dadd( 9.70997, -123.935, -87.6222, 0.66 ) }
    dend_41 { pt3dadd( 9.92044, -124.441, -88.1253, 0.95 ) }
    dend_41 { pt3dadd( 10.1758, -125.072, -88.6701, 0.07 ) }
    dend_41 { pt3dadd( 10.3222, -125.428, -88.9441, 0.44 ) }
    dend_41 { pt3dadd( 10.7162, -126.391, -89.552, 0.07 ) }
    dend_41 { pt3dadd( 10.844, -126.669, -89.6946, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_41 { pt3dadd( 11.6204, -128.286, -90.4828, 0.07 ) }
    dend_41 { pt3dadd( 11.8743, -128.844, -90.8285, 0.44 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 2/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -3.91034, -39.6887, -13.5481, 0.37 ) }
    dend_40 { pt3dadd( -3.12441, -40.4096, -13.5465, 0.37 ) }
    dend_40 { pt3dadd( -2.50787, -41.08, -13.562, 0.59 ) }
    dend_40 { pt3dadd( -1.94962, -41.7474, -13.6115, 0.59 ) }
    dend_40 { pt3dadd( -1.34661, -42.4744, -13.6239, 0.59 ) }
    dend_40 { pt3dadd( -1.01104, -42.8863, -13.6184, 0.59 ) }
    dend_40 { pt3dadd( -0.383619, -43.6707, -13.5968, 0.81 ) }
    dend_40 { pt3dadd( 0.205629, -44.444, -13.5542, 0.81 ) }
    dend_40 { pt3dadd( 0.855711, -45.3558, -13.477, 0.59 ) }
    dend_40 { pt3dadd( 1.64523, -46.5348, -13.3425, 0.73 ) }
    dend_40 { pt3dadd( 2.38023, -47.6859, -13.1612, 0.73 ) }
    dend_40 { pt3dadd( 2.87886, -48.4852, -13.0128, 0.73 ) }
    dend_40 { pt3dadd( 3.70842, -49.836, -12.6997, 0.51 ) }
    dend_40 { pt3dadd( 4.33462, -50.854, -12.4397, 0.37 ) }
    dend_40 { pt3dadd( 4.72905, -51.4921, -12.2691, 0.73 ) }
    dend_40 { pt3dadd( 5.48179, -52.7474, -12.0008, 0.37 ) }
    dend_40 { pt3dadd( 6.10811, -53.8433, -11.7996, 0.81 ) }
    dend_40 { pt3dadd( 6.60931, -54.7737, -11.6953, 0.29 ) }
    dend_40 { pt3dadd( 7.06616, -55.6652, -11.672, 0.66 ) }
    dend_40 { pt3dadd( 7.46025, -56.4751, -11.7543, 0.66 ) }
    dend_40 { pt3dadd( 8.01798, -57.6712, -11.9532, 0.44 ) }
    dend_40 { pt3dadd( 8.49507, -58.7378, -12.1969, 0.44 ) }
    dend_40 { pt3dadd( 8.95153, -59.7816, -12.4638, 0.44 ) }
    dend_40 { pt3dadd( 9.4082, -60.8009, -12.6944, 0.44 ) }
    dend_40 { pt3dadd( 10.0481, -62.149, -12.9667, 0.81 ) }
    dend_40 { pt3dadd( 10.6698, -63.3407, -13.1242, 0.81 ) }
    dend_40 { pt3dadd( 10.9965, -63.8943, -13.1379, 0.88 ) }
    dend_40 { pt3dadd( 11.2792, -64.3495, -13.0967, 1.1 ) }
    dend_40 { pt3dadd( 12.1737, -65.9627, -12.7193, 0.44 ) }
    dend_40 { pt3dadd( 12.6509, -67.0013, -12.3649, 0.37 ) }
    dend_40 { pt3dadd( 12.9979, -67.8886, -11.9959, 0.37 ) }
    dend_40 { pt3dadd( 13.2756, -68.7109, -11.64, 0.37 ) }
    dend_40 { pt3dadd( 13.5367, -69.6417, -11.2345, 0.37 ) }
    dend_40 { pt3dadd( 13.8359, -71.082, -10.6244, 1.1 ) }
    dend_40 { pt3dadd( 13.9855, -72.1701, -10.1888, 0.37 ) }
    dend_40 { pt3dadd( 14.0802, -72.9543, -9.87559, 0.73 ) }
    dend_40 { pt3dadd( 14.2167, -73.8886, -9.55668, 0.44 ) }
    dend_40 { pt3dadd( 14.3661, -74.6016, -9.38262, 0.44 ) }
    dend_40 { pt3dadd( 14.5451, -75.1505, -9.31842, 0.44 ) }
    dend_40 { pt3dadd( 14.7579, -75.5723, -9.31688, 0.44 ) }
    dend_40 { pt3dadd( 15.1643, -76.26, -9.36195, 0.44 ) }
    dend_40 { pt3dadd( 15.357, -76.6302, -9.39224, 0.44 ) }
    dend_40 { pt3dadd( 15.9719, -78.1866, -9.62202, 0.81 ) }
    dend_40 { pt3dadd( 16.1816, -78.8637, -9.70977, 1.03 ) }
    dend_40 { pt3dadd( 16.3852, -79.6582, -9.7971, 1.03 ) }
    dend_40 { pt3dadd( 16.7067, -81.1514, -9.93138, 0.59 ) }
    dend_40 { pt3dadd( 16.9696, -82.5963, -10.0111, 0.37 ) }
    dend_40 { pt3dadd( 17.2374, -84.2539, -10.0347, 0.37 ) }
    dend_40 { pt3dadd( 17.4247, -85.6563, -9.99603, 0.37 ) }
    dend_40 { pt3dadd( 17.5617, -86.7399, -9.97124, 0.37 ) }
    dend_40 { pt3dadd( 17.7673, -87.99, -9.95188, 0.37 ) }
    dend_40 { pt3dadd( 17.9819, -88.9424, -9.93251, 0.37 ) }
    dend_40 { pt3dadd( 18.3938, -90.2598, -9.8824, 0.66 ) }
    dend_40 { pt3dadd( 18.8788, -91.5196, -9.77771, 0.66 ) }
    dend_40 { pt3dadd( 19.1991, -92.2738, -9.70998, 0.66 ) }
    dend_40 { pt3dadd( 19.8133, -93.679, -9.59487, 0.44 ) }
    dend_40 { pt3dadd( 20.0942, -94.2963, -9.57489, 0.95 ) }
    dend_40 { pt3dadd( 20.6378, -95.4547, -9.60215, 0.95 ) }
    dend_40 { pt3dadd( 21.1862, -96.6051, -9.6762, 0.22 ) }
    dend_40 { pt3dadd( 21.4544, -97.187, -9.75845, 0.22 ) }
    dend_40 { pt3dadd( 21.7496, -97.9274, -9.90969, 0.81 ) }
    dend_40 { pt3dadd( 22.0957, -99.0054, -10.1842, 0.37 ) }
    dend_40 { pt3dadd( 22.2071, -99.4261, -10.3039, 0.66 ) }
    dend_40 { pt3dadd( 22.2968, -99.9181, -10.4524, 0.88 ) }
    dend_40 { pt3dadd( 22.5229, -101.341, -10.9276, 0.51 ) }
    dend_40 { pt3dadd( 22.7111, -102.532, -11.2855, 0.29 ) }
    dend_40 { pt3dadd( 22.8064, -103.115, -11.4169, 0.29 ) }
    dend_40 { pt3dadd( 22.8837, -103.643, -11.4935, 0.29 ) }
    dend_40 { pt3dadd( 23.0076, -104.491, -11.6161, 0.88 ) }
    // Section: dend_36, id: dend_36, parent: dend_14 (entry count 71/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -14.0339, -31.4979, -3.58524, 0.44 ) }
    dend_36 { pt3dadd( -13.2185, -32.0977, -3.30388, 0.44 ) }
    dend_36 { pt3dadd( -12.171, -32.9013, -2.96633, 0.44 ) }
    dend_36 { pt3dadd( -11.7029, -33.2869, -2.81193, 0.66 ) }
    dend_36 { pt3dadd( -10.743, -34.14, -2.46529, 0.51 ) }
    dend_36 { pt3dadd( -10.1328, -34.6927, -2.2144, 0.51 ) }
    dend_36 { pt3dadd( -9.90162, -34.893, -2.11609, 0.51 ) }
    dend_36 { pt3dadd( -9.49102, -35.1924, -1.9298, 0.51 ) }
    dend_36 { pt3dadd( -9.08285, -35.3798, -1.7016, 0.51 ) }
    dend_36 { pt3dadd( -8.45043, -35.5336, -1.30533, 0.59 ) }
    dend_36 { pt3dadd( -7.86315, -35.5874, -0.932309, 0.59 ) }
    dend_36 { pt3dadd( -7.27806, -35.6079, -0.569302, 0.88 ) }
    dend_36 { pt3dadd( -5.87118, -35.6728, 0.299257, 0.59 ) }
    dend_36 { pt3dadd( -4.42773, -35.7682, 1.17713, 0.59 ) }
    dend_36 { pt3dadd( -3.77497, -35.842, 1.54877, 0.59 ) }
    dend_36 { pt3dadd( -3.14356, -35.9941, 1.90586, 0.59 ) }
    dend_36 { pt3dadd( -2.77882, -36.1768, 2.13321, 0.59 ) }
    dend_36 { pt3dadd( -2.11521, -36.7591, 2.61517, 0.81 ) }
    dend_36 { pt3dadd( -1.75189, -37.2816, 2.91833, 0.81 ) }
    dend_36 { pt3dadd( -1.44178, -37.9276, 3.29389, 1.1 ) }
    dend_36 { pt3dadd( -0.972953, -39.062, 4.01105, 0.59 ) }
    dend_36 { pt3dadd( -0.588017, -40.0476, 4.74647, 0.95 ) }
    dend_36 { pt3dadd( -0.407962, -40.4446, 5.0895, 0.95 ) }
    dend_36 { pt3dadd( -0.244989, -40.7282, 5.3782, 0.95 ) }
    dend_36 { pt3dadd( 0.619509, -41.9304, 6.84951, 0.73 ) }
    dend_36 { pt3dadd( 0.825323, -42.1513, 7.16339, 0.73 ) }
    dend_36 { pt3dadd( 1.52711, -42.7069, 8.05139, 0.73 ) }
    dend_36 { pt3dadd( 2.31817, -43.1887, 8.89578, 0.88 ) }
    dend_36 { pt3dadd( 2.95793, -43.5021, 9.5039, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_36 { pt3dadd( 3.6838, -43.7936, 10.1088, 0.88 ) }
    dend_36 { pt3dadd( 4.2588, -43.973, 10.5311, 0.88 ) }
    dend_36 { pt3dadd( 5.06538, -44.2217, 11.1103, 0.66 ) }
    dend_36 { pt3dadd( 6.08045, -44.5582, 11.7997, 0.66 ) }
    dend_36 { pt3dadd( 6.48726, -44.7076, 12.0891, 0.66 ) }
    dend_36 { pt3dadd( 6.77437, -44.8188, 12.2979, 1.1 ) }
    dend_36 { pt3dadd( 8.14034, -45.2775, 13.2702, 0.81 ) }
    dend_36 { pt3dadd( 8.52139, -45.3621, 13.5381, 0.66 ) }
    dend_36 { pt3dadd( 9.11323, -45.4068, 13.9264, 0.66 ) }
    dend_36 { pt3dadd( 9.36315, -45.404, 14.0818, 0.66 ) }
    dend_36 { pt3dadd( 9.8397, -45.3894, 14.3632, 0.66 ) }
    dend_36 { pt3dadd( 10.6228, -45.3359, 14.801, 0.66 ) }
    dend_36 { pt3dadd( 11.3624, -45.2738, 15.2058, 0.66 ) }
    dend_36 { pt3dadd( 12.1448, -45.2488, 15.6594, 0.66 ) }
    dend_36 { pt3dadd( 12.629, -45.2749, 15.9944, 0.66 ) }
    dend_36 { pt3dadd( 13.0014, -45.3355, 16.3161, 0.66 ) }
    dend_36 { pt3dadd( 13.3944, -45.467, 16.7429, 0.66 ) }
    dend_36 { pt3dadd( 14.0579, -45.7939, 17.5821, 0.66 ) }
    dend_36 { pt3dadd( 14.5293, -46.0771, 18.2279, 0.81 ) }
    dend_36 { pt3dadd( 15.3883, -46.6212, 19.3667, 0.81 ) }
    dend_36 { pt3dadd( 16.1681, -47.0815, 20.3285, 0.81 ) }
    dend_36 { pt3dadd( 16.7629, -47.4275, 21.0085, 0.44 ) }
    dend_36 { pt3dadd( 16.9608, -47.549, 21.2016, 0.44 ) }
    dend_36 { pt3dadd( 17.2695, -47.774, 21.4284, 0.44 ) }
    dend_36 { pt3dadd( 18.0405, -48.3794, 21.7833, 0.44 ) }
    dend_36 { pt3dadd( 18.5107, -48.7706, 21.9247, 0.44 ) }
    dend_36 { pt3dadd( 19.1183, -49.2756, 22.0799, 0.51 ) }
    dend_36 { pt3dadd( 19.842, -49.8859, 22.2745, 0.73 ) }
    dend_36 { pt3dadd( 20.9873, -50.9513, 22.6895, 0.88 ) }
    dend_36 { pt3dadd( 22.1936, -52.1881, 23.2173, 0.51 ) }
    dend_36 { pt3dadd( 22.8303, -52.8535, 23.5828, 0.51 ) }
    dend_36 { pt3dadd( 23.5806, -53.5938, 24.0771, 0.51 ) }
    dend_36 { pt3dadd( 24.3587, -54.2565, 24.6418, 0.51 ) }
    dend_36 { pt3dadd( 25.3415, -54.9312, 25.4071, 0.51 ) }
    dend_36 { pt3dadd( 25.7402, -55.1375, 25.7286, 0.88 ) }
    dend_36 { pt3dadd( 27.1612, -55.6864, 26.838, 0.66 ) }
    dend_36 { pt3dadd( 27.6287, -55.8158, 27.1359, 0.66 ) }
    dend_36 { pt3dadd( 28.2416, -55.9127, 27.5296, 0.66 ) }
    dend_36 { pt3dadd( 29.1591, -55.9452, 28.0855, 0.66 ) }
    dend_36 { pt3dadd( 29.7152, -55.9303, 28.427, 0.51 ) }
    dend_36 { pt3dadd( 30.4163, -55.9094, 28.8702, 0.51 ) }
    dend_36 { pt3dadd( 31.4764, -55.9267, 29.5978, 0.81 ) }
    dend_36 { pt3dadd( 33.1879, -55.9948, 30.8839, 0.81 ) }
    dend_36 { pt3dadd( 33.9925, -56.0377, 31.5589, 0.81 ) }
    dend_36 { pt3dadd( 34.8365, -56.0787, 32.3691, 0.81 ) }
    dend_36 { pt3dadd( 35.2887, -56.0854, 32.8566, 0.81 ) }
    dend_36 { pt3dadd( 35.975, -56.047, 33.6933, 0.81 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 47/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -14.0339, -31.4979, -3.58524, 1.25 ) }
    dend_15 { pt3dadd( -14.1728, -33.3535, -4.2174, 1.25 ) }
    dend_15 { pt3dadd( -14.2657, -34.5953, -4.64046, 1.25 ) }
    dend_15 { pt3dadd( -14.3978, -36.3606, -5.24187, 1.32 ) }
    dend_15 { pt3dadd( -14.4956, -37.6671, -5.68695, 1.47 ) }
    dend_15 { pt3dadd( -14.5325, -38.1597, -5.85478, 1.76 ) }
    dend_15 { pt3dadd( -14.6231, -39.3711, -6.26749, 2.06 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 54/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -21.3425, -38.897, 23.1227, 0.88 ) }
    dend_11 { pt3dadd( -21.7098, -40.0259, 23.0979, 0.88 ) }
    dend_11 { pt3dadd( -22.0956, -41.1732, 23.2173, 0.95 ) }
    dend_11 { pt3dadd( -22.4146, -41.893, 23.4176, 0.95 ) }
    dend_11 { pt3dadd( -22.9191, -42.7703, 23.8804, 0.81 ) }
    dend_11 { pt3dadd( -23.1708, -43.1124, 24.1043, 0.88 ) }
    dend_11 { pt3dadd( -23.9333, -44.0102, 24.7397, 0.88 ) }
    dend_11 { pt3dadd( -24.602, -44.6671, 25.3437, 1.18 ) }
    dend_11 { pt3dadd( -25.4874, -45.5274, 26.3436, 1.1 ) }
    dend_11 { pt3dadd( -26.4842, -46.5607, 27.6875, 0.22 ) }
    dend_11 { pt3dadd( -27.0385, -47.1876, 28.5456, 0.22 ) }
    dend_11 { pt3dadd( -27.3521, -47.5765, 29.0765, 0.88 ) }
    dend_11 { pt3dadd( -28.0463, -48.6389, 30.426, 0.73 ) }
    dend_11 { pt3dadd( -28.5061, -49.765, 31.6984, 0.51 ) }
    dend_11 { pt3dadd( -28.5764, -50.1899, 32.0946, 0.51 ) }
    dend_11 { pt3dadd( -28.5872, -50.787, 32.5965, 0.51 ) }
    dend_11 { pt3dadd( -28.5457, -51.5208, 33.1921, 0.51 ) }
    dend_11 { pt3dadd( -28.4728, -52.6972, 34.1077, 0.59 ) }
    dend_11 { pt3dadd( -28.4737, -53.5894, 34.7134, 0.59 ) }
    dend_11 { pt3dadd( -28.6113, -54.2411, 35.1363, 0.66 ) }
    dend_11 { pt3dadd( -28.9115, -54.7104, 35.4443, 0.66 ) }
    dend_11 { pt3dadd( -29.1854, -54.9311, 35.5752, 0.66 ) }
    dend_11 { pt3dadd( -29.969, -55.4274, 35.8392, 0.66 ) }
    dend_11 { pt3dadd( -30.907, -55.9585, 36.0885, 0.88 ) }
    dend_11 { pt3dadd( -32.1138, -56.605, 36.3879, 0.51 ) }
    dend_11 { pt3dadd( -33.3996, -57.2852, 36.6987, 0.37 ) }
    dend_11 { pt3dadd( -34.6367, -58.0152, 37.0058, 0.37 ) }
    dend_11 { pt3dadd( -35.4812, -58.5837, 37.2743, 0.66 ) }
    dend_11 { pt3dadd( -36.2513, -59.2383, 37.5887, 0.51 ) }
    dend_11 { pt3dadd( -36.7576, -59.7939, 37.8547, 0.59 ) }
    dend_11 { pt3dadd( -37.1336, -60.341, 38.1081, 0.59 ) }
    dend_11 { pt3dadd( -37.4602, -60.9503, 38.409, 0.59 ) }
    dend_11 { pt3dadd( -37.8572, -61.8741, 38.8308, 0.59 ) }
    dend_11 { pt3dadd( -38.2761, -63.0306, 39.2637, 0.59 ) }
    dend_11 { pt3dadd( -38.4805, -63.749, 39.4736, 0.59 ) }
    dend_11 { pt3dadd( -38.7365, -64.9306, 39.7221, 0.66 ) }
    dend_11 { pt3dadd( -38.858, -65.7243, 39.834, 0.66 ) }
    dend_11 { pt3dadd( -38.9741, -66.6432, 39.9302, 0.66 ) }
    dend_11 { pt3dadd( -39.0531, -67.4635, 40.0273, 0.51 ) }
    dend_11 { pt3dadd( -39.0933, -68.5844, 40.2197, 0.51 ) }
    dend_11 { pt3dadd( -39.0336, -69.8481, 40.4712, 0.51 ) }
    dend_11 { pt3dadd( -38.7675, -72.0014, 40.93, 0.44 ) }
    dend_11 { pt3dadd( -38.4973, -73.3024, 41.2327, 0.81 ) }
    dend_11 { pt3dadd( -38.0773, -74.8249, 41.5931, 0.81 ) }
    dend_11 { pt3dadd( -37.5656, -76.4012, 41.9702, 0.37 ) }
    dend_11 { pt3dadd( -37.1103, -77.6314, 42.2543, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_11 { pt3dadd( -36.8362, -78.3189, 42.3819, 0.37 ) }
    dend_11 { pt3dadd( -36.281, -79.4992, 42.5717, 0.29 ) }
    dend_11 { pt3dadd( -35.9181, -80.19, 42.622, 0.29 ) }
    dend_11 { pt3dadd( -35.6543, -80.6621, 42.5881, 0.29 ) }
    dend_11 { pt3dadd( -35.3274, -81.2859, 42.466, 0.29 ) }
    dend_11 { pt3dadd( -34.5973, -82.9096, 42.0506, 0.29 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 6/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -21.3425, -38.897, 23.1227, 0.29 ) }
    dend_10 { pt3dadd( -22.013, -38.9823, 23.9883, 0.29 ) }
    dend_10 { pt3dadd( -22.5285, -39.1533, 24.5877, 0.51 ) }
    dend_10 { pt3dadd( -23.3247, -39.5159, 25.4355, 0.51 ) }
    dend_10 { pt3dadd( -23.8565, -39.7605, 25.9494, 0.51 ) }
    dend_10 { pt3dadd( -24.7962, -40.156, 26.7921, 0.51 ) }
    dend_10 { pt3dadd( -25.7167, -40.5113, 27.587, 0.51 ) }
    dend_10 { pt3dadd( -26.5086, -40.7628, 28.248, 0.51 ) }
    dend_10 { pt3dadd( -27.1905, -41.0105, 28.7946, 0.51 ) }
    dend_10 { pt3dadd( -27.6261, -41.2314, 29.1691, 0.51 ) }
    dend_10 { pt3dadd( -27.9533, -41.4217, 29.526, 0.51 ) }
    dend_10 { pt3dadd( -28.0975, -41.4855, 29.7784, 0.51 ) }
    dend_10 { pt3dadd( -28.246, -41.458, 30.2807, 0.51 ) }
    dend_10 { pt3dadd( -28.3292, -41.4218, 30.8766, 0.51 ) }
    dend_10 { pt3dadd( -28.4062, -41.4971, 32.0075, 0.51 ) }
    dend_10 { pt3dadd( -28.3986, -41.7405, 32.6798, 0.51 ) }
    dend_10 { pt3dadd( -28.3683, -42.049, 33.0569, 0.51 ) }
    dend_10 { pt3dadd( -28.3635, -42.4682, 33.3733, 0.51 ) }
    dend_10 { pt3dadd( -28.4035, -43.1372, 33.7248, 0.51 ) }
    dend_10 { pt3dadd( -28.4243, -43.8109, 34.0662, 0.51 ) }
    dend_10 { pt3dadd( -28.3685, -44.8484, 34.5474, 0.51 ) }
    dend_10 { pt3dadd( -28.2253, -45.6281, 34.941, 0.51 ) }
    dend_10 { pt3dadd( -27.975, -46.3532, 35.364, 0.51 ) }
    dend_10 { pt3dadd( -27.6543, -46.9175, 35.7861, 0.59 ) }
    dend_10 { pt3dadd( -27.0068, -47.7413, 36.6186, 0.37 ) }
    dend_10 { pt3dadd( -26.6679, -48.1037, 37.0784, 0.37 ) }
    dend_10 { pt3dadd( -26.1798, -48.5853, 37.8182, 0.51 ) }
    dend_10 { pt3dadd( -25.6974, -49.0172, 38.612, 0.51 ) }
    dend_10 { pt3dadd( -25.1315, -49.4079, 39.4123, 0.59 ) }
    dend_10 { pt3dadd( -25.8875, -49.2752, 39.3959, 0.59 ) }
    dend_10 { pt3dadd( -26.5134, -49.2515, 39.6732, 0.59 ) }
    dend_10 { pt3dadd( -27.4085, -49.2521, 40.0724, 0.37 ) }
    dend_10 { pt3dadd( -28.5153, -49.334, 40.5405, 0.37 ) }
    dend_10 { pt3dadd( -29.8963, -49.5005, 41.0838, 0.37 ) }
    dend_10 { pt3dadd( -30.673, -49.6416, 41.4208, 0.37 ) }
    dend_10 { pt3dadd( -31.2795, -49.7736, 41.7088, 0.37 ) }
    dend_10 { pt3dadd( -32.0363, -49.9691, 42.0934, 0.37 ) }
    dend_10 { pt3dadd( -33.256, -50.2835, 42.7651, 0.37 ) }
    dend_10 { pt3dadd( -34.3043, -50.4987, 43.3302, 0.73 ) }
    dend_10 { pt3dadd( -35.8371, -50.851, 44.1757, 0.73 ) }
    dend_10 { pt3dadd( -36.5429, -50.9941, 44.5525, 0.59 ) }
    dend_10 { pt3dadd( -37.8416, -51.1798, 45.239, 0.51 ) }
    dend_10 { pt3dadd( -39.0668, -51.2173, 45.843, 0.29 ) }
    dend_10 { pt3dadd( -40.5983, -51.0428, 46.5074, 0.15 ) }
    // Section: dend_88, id: dend_88, parent: dend_86 (entry count 50/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( 0.870213, -30.3251, 17.1935, 0.73 ) }
    dend_88 { pt3dadd( 0.567016, -31.4491, 17.1437, 0.73 ) }
    dend_88 { pt3dadd( 0.405962, -32.0538, 17.0935, 0.81 ) }
    dend_88 { pt3dadd( 0.142324, -33.3196, 16.9372, 1.18 ) }
    dend_88 { pt3dadd( -0.0904301, -34.9061, 16.7578, 0.81 ) }
    dend_88 { pt3dadd( -0.197751, -35.88, 16.6468, 1.18 ) }
    dend_88 { pt3dadd( -0.377625, -37.9592, 16.4172, 0.88 ) }
    dend_88 { pt3dadd( -0.441023, -38.9395, 16.3202, 1.1 ) }
    dend_88 { pt3dadd( -0.543031, -40.8317, 16.1236, 1.1 ) }
    dend_88 { pt3dadd( -0.659737, -42.299, 15.9396, 1.18 ) }
    dend_88 { pt3dadd( -0.867603, -44.0306, 15.6799, 1.1 ) }
    dend_88 { pt3dadd( -1.04226, -45.0717, 15.5321, 1.1 ) }
    dend_88 { pt3dadd( -1.30495, -46.3768, 15.376, 1.1 ) }
    dend_88 { pt3dadd( -1.68624, -47.9324, 15.1766, 1.18 ) }
    dend_88 { pt3dadd( -2.36965, -50.0396, 14.8868, 1.18 ) }
    dend_88 { pt3dadd( -2.72426, -50.9272, 14.7328, 1.18 ) }
    dend_88 { pt3dadd( -3.01876, -51.5603, 14.6134, 1.18 ) }
    dend_88 { pt3dadd( -3.57603, -52.6278, 14.3752, 1.18 ) }
    // Section: dend_87, id: dend_87, parent: dend_86 (entry count 68/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( 0.870213, -30.3251, 17.1935, 0.51 ) }
    dend_87 { pt3dadd( 1.53053, -30.1873, 16.9519, 0.51 ) }
    dend_87 { pt3dadd( 3.01949, -29.9824, 16.3587, 0.51 ) }
    dend_87 { pt3dadd( 3.9932, -29.9087, 15.8858, 0.51 ) }
    dend_87 { pt3dadd( 4.63791, -29.9305, 15.496, 0.51 ) }
    dend_87 { pt3dadd( 5.17843, -30.0063, 15.1212, 0.51 ) }
    dend_87 { pt3dadd( 5.7241, -30.1593, 14.7113, 0.51 ) }
    dend_87 { pt3dadd( 6.3466, -30.5409, 14.1524, 0.51 ) }
    dend_87 { pt3dadd( 6.90076, -31.0512, 13.591, 0.51 ) }
    dend_87 { pt3dadd( 7.61695, -31.8219, 12.8624, 0.51 ) }
    dend_87 { pt3dadd( 7.8165, -32.039, 12.6763, 0.51 ) }
    dend_87 { pt3dadd( 8.62289, -32.8275, 12.0249, 0.51 ) }
    dend_87 { pt3dadd( 9.59543, -33.6114, 11.3429, 0.51 ) }
    dend_87 { pt3dadd( 10.4558, -34.1339, 10.8492, 0.51 ) }
    dend_87 { pt3dadd( 11.0233, -34.3818, 10.5824, 0.51 ) }
    dend_87 { pt3dadd( 11.6137, -34.5646, 10.342, 0.51 ) }
    dend_87 { pt3dadd( 12.4436, -34.7871, 10.0358, 0.51 ) }
    dend_87 { pt3dadd( 13.4678, -35.0619, 9.65503, 0.51 ) }
    dend_87 { pt3dadd( 14.2393, -35.2971, 9.39864, 0.51 ) }
    dend_87 { pt3dadd( 14.9761, -35.5502, 9.15946, 0.51 ) }
    dend_87 { pt3dadd( 15.6542, -35.7966, 8.93199, 0.51 ) }
    dend_87 { pt3dadd( 16.8331, -36.2475, 8.52419, 0.51 ) }
    dend_87 { pt3dadd( 18.365, -36.8479, 7.99649, 0.51 ) }
    dend_87 { pt3dadd( 20.0202, -37.4863, 7.43973, 0.51 ) }
    dend_87 { pt3dadd( 20.7811, -37.7669, 7.17309, 0.51 ) }
    dend_87 { pt3dadd( 21.5038, -38.0103, 6.88898, 0.51 ) }
    dend_87 { pt3dadd( 22.2126, -38.2229, 6.59408, 0.51 ) }
    dend_87 { pt3dadd( 22.6191, -38.3344, 6.43163, 0.81 ) }
    dend_87 { pt3dadd( 23.4584, -38.5771, 6.15359, 0.59 ) }
    dend_87 { pt3dadd( 24.0056, -38.7892, 5.99011, 0.59 ) }
    dend_87 { pt3dadd( 24.7895, -39.1699, 5.81615, 0.59 ) }
    dend_87 { pt3dadd( 25.548, -39.6129, 5.67616, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_87 { pt3dadd( 26.7208, -40.3823, 5.43482, 0.51 ) }
    dend_87 { pt3dadd( 27.4172, -40.8829, 5.28389, 0.51 ) }
    dend_87 { pt3dadd( 28.3409, -41.582, 5.08618, 0.51 ) }
    dend_87 { pt3dadd( 29.2728, -42.3022, 4.85562, 0.51 ) }
    dend_87 { pt3dadd( 30.4092, -43.1521, 4.54676, 1.18 ) }
    dend_87 { pt3dadd( 31.5798, -43.9803, 4.16614, 0.59 ) }
    dend_87 { pt3dadd( 32.4103, -44.5428, 3.85503, 0.44 ) }
    dend_87 { pt3dadd( 33.1168, -44.9945, 3.54739, 0.44 ) }
    dend_87 { pt3dadd( 33.9512, -45.4972, 3.1465, 0.44 ) }
    dend_87 { pt3dadd( 34.521, -45.828, 2.83974, 0.44 ) }
    dend_87 { pt3dadd( 35.1323, -46.1557, 2.53984, 0.44 ) }
    dend_87 { pt3dadd( 35.5774, -46.3733, 2.3582, 0.73 ) }
    dend_87 { pt3dadd( 36.2923, -46.6891, 2.10368, 0.73 ) }
    dend_87 { pt3dadd( 37.2102, -47.0818, 1.83814, 0.51 ) }
    dend_87 { pt3dadd( 38.6269, -47.6741, 1.54823, 0.51 ) }
    dend_87 { pt3dadd( 39.5203, -48.0796, 1.40408, 0.51 ) }
    dend_87 { pt3dadd( 40.5641, -48.5946, 1.27902, 0.51 ) }
    dend_87 { pt3dadd( 41.2215, -48.9379, 1.21851, 0.51 ) }
    dend_87 { pt3dadd( 41.7342, -49.22, 1.20179, 0.51 ) }
    dend_87 { pt3dadd( 42.3801, -49.5879, 1.10492, 0.44 ) }
    dend_87 { pt3dadd( 43.4135, -50.2025, 0.809656, 0.44 ) }
    dend_87 { pt3dadd( 44.2191, -50.6957, 0.472217, 0.44 ) }
    dend_87 { pt3dadd( 44.8657, -51.1151, 0.1606, 0.44 ) }
    dend_87 { pt3dadd( 45.7758, -51.7379, -0.288688, 0.44 ) }
    dend_87 { pt3dadd( 47.8445, -53.2377, -1.25545, 1.25 ) }
    dend_87 { pt3dadd( 48.8821, -54.012, -1.68441, 0.51 ) }
    dend_87 { pt3dadd( 50.0589, -54.8503, -2.06502, 0.51 ) }
    dend_87 { pt3dadd( 50.7076, -55.2981, -2.19071, 0.51 ) }
    dend_87 { pt3dadd( 51.5109, -55.8517, -2.22972, 0.51 ) }
    dend_87 { pt3dadd( 52.4755, -56.549, -2.12895, 0.51 ) }
    dend_87 { pt3dadd( 53.1236, -57.049, -1.95887, 0.51 ) }
    dend_87 { pt3dadd( 54.1453, -57.8749, -1.6581, 0.81 ) }
    dend_87 { pt3dadd( 55.1666, -58.7484, -1.38103, 0.37 ) }
    dend_87 { pt3dadd( 56.0742, -59.548, -1.17559, 1.1 ) }
    dend_87 { pt3dadd( 57.0655, -60.4822, -1.00277, 0.29 ) }
    dend_87 { pt3dadd( 57.9324, -61.4045, -0.928681, 0.29 ) }
    dend_87 { pt3dadd( 58.4823, -62.115, -0.925729, 0.95 ) }
    dend_87 { pt3dadd( 59.329, -63.4188, -0.947362, 0.22 ) }
    dend_87 { pt3dadd( 59.9092, -64.3876, -0.997333, 0.51 ) }
    dend_87 { pt3dadd( 60.3722, -65.1679, -1.06562, 0.88 ) }
    dend_87 { pt3dadd( 61.1163, -66.3888, -1.2414, 0.51 ) }
    dend_87 { pt3dadd( 62.0787, -67.942, -1.52872, 0.81 ) }
    dend_87 { pt3dadd( 63.3872, -70.0438, -1.98355, 0.07 ) }
    dend_87 { pt3dadd( 64.1938, -71.3158, -2.30676, 1.1 ) }
    dend_87 { pt3dadd( 64.9587, -72.4859, -2.63057, 0.59 ) }
    dend_87 { pt3dadd( 65.8461, -73.7093, -3.00456, 0.59 ) }
    dend_87 { pt3dadd( 66.228, -74.1672, -3.15553, 0.29 ) }
    dend_87 { pt3dadd( 66.6138, -74.5896, -3.33155, 0.29 ) }
    dend_87 { pt3dadd( 67.3491, -75.38, -3.72939, 0.22 ) }
    dend_87 { pt3dadd( 68.096, -76.184, -4.11535, 1.03 ) }
    dend_87 { pt3dadd( 69.1329, -77.3008, -4.61836, 0.15 ) }
    dend_87 { pt3dadd( 69.8944, -78.0895, -4.96286, 0.44 ) }
    dend_87 { pt3dadd( 70.5499, -78.7174, -5.24724, 0.44 ) }
    dend_87 { pt3dadd( 71.0317, -79.1735, -5.46098, 0.22 ) }
    dend_87 { pt3dadd( 71.6853, -79.8252, -5.75183, 0.44 ) }
    dend_87 { pt3dadd( 72.2187, -80.3891, -5.98881, 0.73 ) }
    dend_87 { pt3dadd( 72.5869, -80.795, -6.136, 1.03 ) }
    dend_87 { pt3dadd( 73.1416, -81.381, -6.31211, 1.03 ) }
    dend_87 { pt3dadd( 74.3153, -82.4818, -6.53275, 0.22 ) }
    dend_87 { pt3dadd( 74.9051, -83.0037, -6.5692, 0.29 ) }
    dend_87 { pt3dadd( 75.4236, -83.4458, -6.55183, 0.29 ) }
    dend_87 { pt3dadd( 76.0001, -83.8926, -6.50133, 0.29 ) }
    dend_87 { pt3dadd( 76.7178, -84.3885, -6.42091, 0.29 ) }
    dend_87 { pt3dadd( 77.3347, -84.7475, -6.36709, 0.29 ) }
    dend_87 { pt3dadd( 78.2811, -85.1776, -6.34177, 0.29 ) }
    dend_87 { pt3dadd( 79.1161, -85.5055, -6.37844, 0.73 ) }
    dend_87 { pt3dadd( 80.4436, -85.9586, -6.49896, 0.73 ) }
    dend_87 { pt3dadd( 81.3688, -86.2232, -6.59569, 1.03 ) }
    dend_87 { pt3dadd( 82.9683, -86.614, -6.78308, 1.03 ) }
    dend_87 { pt3dadd( 84.4754, -86.9503, -7.00802, 0.59 ) }
    dend_87 { pt3dadd( 85.8527, -87.2229, -7.23128, 0.73 ) }
    dend_87 { pt3dadd( 86.8716, -87.4158, -7.38941, 0.29 ) }
    dend_87 { pt3dadd( 88.4352, -87.7326, -7.60034, 0.29 ) }
    dend_87 { pt3dadd( 89.6364, -87.9781, -7.74238, 0.59 ) }
    dend_87 { pt3dadd( 91.0273, -88.2734, -7.8304, 0.29 ) }
    // Section: dend_85, id: dend_85, parent: dend_83 (entry count 75/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( 1.47631, -25.5474, 14.1714, 0.73 ) }
    dend_85 { pt3dadd( 2.16256, -26.0006, 13.9576, 0.73 ) }
    dend_85 { pt3dadd( 2.63335, -26.4257, 13.7217, 0.73 ) }
    dend_85 { pt3dadd( 3.17245, -27.0833, 13.4091, 0.88 ) }
    dend_85 { pt3dadd( 3.78597, -27.8544, 12.9821, 0.29 ) }
    dend_85 { pt3dadd( 4.25826, -28.4041, 12.6303, 0.95 ) }
    dend_85 { pt3dadd( 5.19633, -29.4155, 11.8812, 0.59 ) }
    dend_85 { pt3dadd( 6.01403, -30.3745, 11.0798, 0.66 ) }
    dend_85 { pt3dadd( 6.77875, -31.2602, 10.1509, 0.44 ) }
    dend_85 { pt3dadd( 7.59097, -32.0826, 9.02413, 0.44 ) }
    dend_85 { pt3dadd( 8.23891, -32.6059, 8.12056, 0.66 ) }
    dend_85 { pt3dadd( 8.94748, -33.0799, 7.1195, 0.66 ) }
    dend_85 { pt3dadd( 9.99763, -33.6911, 5.66757, 0.73 ) }
    dend_85 { pt3dadd( 11.1532, -34.3007, 4.13251, 0.73 ) }
    dend_85 { pt3dadd( 12.0564, -34.759, 3.0126, 0.44 ) }
    dend_85 { pt3dadd( 12.7502, -35.1718, 2.25073, 0.73 ) }
    dend_85 { pt3dadd( 13.4861, -35.6914, 1.55842, 0.44 ) }
    dend_85 { pt3dadd( 14.1781, -36.2144, 1.07173, 0.44 ) }
    dend_85 { pt3dadd( 14.7584, -36.663, 0.788644, 0.44 ) }
    dend_85 { pt3dadd( 15.548, -37.2946, 0.508157, 0.44 ) }
    dend_85 { pt3dadd( 16.28, -37.8561, 0.228491, 1.18 ) }
    dend_85 { pt3dadd( 17.9968, -39.0249, -0.516419, 0.29 ) }
    dend_85 { pt3dadd( 19.2538, -39.7198, -1.12773, 0.29 ) }
    dend_85 { pt3dadd( 20.4021, -40.2278, -1.7154, 0.29 ) }
    dend_85 { pt3dadd( 21.0857, -40.4958, -2.09231, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_85 { pt3dadd( 22.8803, -41.1824, -3.20316, 0.66 ) }
    dend_85 { pt3dadd( 23.5958, -41.4508, -3.66809, 0.66 ) }
    dend_85 { pt3dadd( 25.4654, -42.1231, -4.86398, 0.66 ) }
    dend_85 { pt3dadd( 26.9256, -42.6891, -5.8311, 0.15 ) }
    dend_85 { pt3dadd( 27.9303, -43.1149, -6.50431, 0.81 ) }
    dend_85 { pt3dadd( 29.3234, -43.7655, -7.3771, 0.22 ) }
    dend_85 { pt3dadd( 30.2106, -44.1934, -7.85313, 0.22 ) }
    dend_85 { pt3dadd( 31.2483, -44.682, -8.37898, 0.22 ) }
    dend_85 { pt3dadd( 32.6478, -45.3403, -9.00038, 0.44 ) }
    dend_85 { pt3dadd( 33.6293, -45.8022, -9.36939, 0.15 ) }
    dend_85 { pt3dadd( 34.6292, -46.2566, -9.66577, 0.51 ) }
    dend_85 { pt3dadd( 35.8923, -46.8471, -9.95826, 0.07 ) }
    dend_85 { pt3dadd( 37.1216, -47.4724, -10.2575, 0.88 ) }
    dend_85 { pt3dadd( 38.0761, -48.0338, -10.5022, 0.88 ) }
    dend_85 { pt3dadd( 39.6644, -49.0786, -10.887, 0.07 ) }
    dend_85 { pt3dadd( 41.1068, -50.1873, -11.3014, 0.66 ) }
    dend_85 { pt3dadd( 42.259, -51.2189, -11.7221, 0.07 ) }
    dend_85 { pt3dadd( 43.09, -52.0681, -12.1064, 0.95 ) }
    dend_85 { pt3dadd( 43.861, -52.9094, -12.5524, 0.07 ) }
    dend_85 { pt3dadd( 44.4423, -53.5612, -12.9806, 0.59 ) }
    dend_85 { pt3dadd( 45.3379, -54.6821, -13.7822, 0.22 ) }
    dend_85 { pt3dadd( 45.9304, -55.534, -14.3949, 0.22 ) }
    dend_85 { pt3dadd( 46.5024, -56.4943, -15.0775, 0.95 ) }
    dend_85 { pt3dadd( 47.0452, -57.4383, -15.7365, 0.15 ) }
    dend_85 { pt3dadd( 47.4058, -58.0714, -16.2029, 0.15 ) }
    dend_85 { pt3dadd( 47.7264, -58.6871, -16.677, 0.15 ) }
    dend_85 { pt3dadd( 47.9427, -59.1309, -17.0114, 0.15 ) }
    dend_85 { pt3dadd( 48.2316, -59.9521, -17.591, 0.88 ) }
    // Section: dend_84, id: dend_84, parent: dend_83 (entry count 28/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( 1.47631, -25.5474, 14.1714, 0.29 ) }
    dend_84 { pt3dadd( 2.19854, -26.543, 13.692, 0.29 ) }
    dend_84 { pt3dadd( 2.98064, -27.7994, 13.0289, 0.29 ) }
    dend_84 { pt3dadd( 3.58641, -28.8337, 12.4844, 0.29 ) }
    dend_84 { pt3dadd( 4.26516, -30.0308, 11.7798, 0.44 ) }
    dend_84 { pt3dadd( 4.49101, -30.3672, 11.4608, 0.44 ) }
    dend_84 { pt3dadd( 4.74627, -30.7124, 11.0609, 0.44 ) }
    dend_84 { pt3dadd( 5.19837, -31.2915, 10.2238, 0.44 ) }
    dend_84 { pt3dadd( 5.51026, -31.7125, 9.55804, 0.44 ) }
    dend_84 { pt3dadd( 5.94347, -32.3837, 8.55576, 0.73 ) }
    dend_84 { pt3dadd( 7.14596, -34.3856, 5.70407, 0.29 ) }
    dend_84 { pt3dadd( 7.40478, -34.8139, 5.08917, 0.29 ) }
    dend_84 { pt3dadd( 7.81329, -35.4872, 4.17295, 0.81 ) }
    dend_84 { pt3dadd( 8.34881, -36.4101, 3.02793, 0.37 ) }
    dend_84 { pt3dadd( 8.70876, -37.0561, 2.29155, 0.37 ) }
    dend_84 { pt3dadd( 9.09913, -37.7244, 1.62836, 0.37 ) }
    dend_84 { pt3dadd( 9.6059, -38.4923, 0.930586, 0.37 ) }
    dend_84 { pt3dadd( 10.1421, -39.1144, 0.282318, 0.73 ) }
    dend_84 { pt3dadd( 10.9177, -39.8193, -0.559664, 0.29 ) }
    dend_84 { pt3dadd( 11.4858, -40.2467, -1.15331, 0.73 ) }
    dend_84 { pt3dadd( 12.188, -40.7517, -1.94163, 0.73 ) }
    dend_84 { pt3dadd( 13.0752, -41.4819, -2.9608, 0.73 ) }
    dend_84 { pt3dadd( 13.4153, -41.8012, -3.39185, 0.37 ) }
    dend_84 { pt3dadd( 13.6763, -42.0544, -3.77307, 0.29 ) }
    dend_84 { pt3dadd( 14.1683, -42.5719, -4.51893, 0.29 ) }
    dend_84 { pt3dadd( 14.4979, -42.9931, -5.08636, 0.29 ) }
    dend_84 { pt3dadd( 15.1238, -43.8831, -6.17704, 0.95 ) }
    dend_84 { pt3dadd( 15.7096, -44.7087, -7.15302, 0.95 ) }
    dend_84 { pt3dadd( 16.173, -45.3549, -7.96283, 0.51 ) }
    dend_84 { pt3dadd( 16.465, -45.7601, -8.46133, 0.88 ) }
    dend_84 { pt3dadd( 17.189, -46.8319, -9.67083, 0.51 ) }
    dend_84 { pt3dadd( 17.5039, -47.3964, -10.246, 0.22 ) }
    dend_84 { pt3dadd( 17.8045, -48.1766, -10.9649, 0.22 ) }
    dend_84 { pt3dadd( 18.0485, -49.1606, -11.7238, 0.81 ) }
    dend_84 { pt3dadd( 18.14, -49.7501, -12.1641, 0.81 ) }
    dend_84 { pt3dadd( 18.1883, -50.366, -12.6103, 0.07 ) }
    dend_84 { pt3dadd( 18.2042, -51.0591, -13.0684, 1.03 ) }
    dend_84 { pt3dadd( 18.1986, -52.4536, -13.9596, 0.15 ) }
    dend_84 { pt3dadd( 18.2098, -53.6643, -14.7245, 1.03 ) }
    dend_84 { pt3dadd( 18.226, -54.246, -15.0707, 1.25 ) }
    dend_84 { pt3dadd( 18.2573, -54.9531, -15.4897, 0.44 ) }
    dend_84 { pt3dadd( 18.2807, -55.3429, -15.7134, 0.44 ) }
    dend_84 { pt3dadd( 18.3368, -56.1515, -16.1095, 0.44 ) }
    dend_84 { pt3dadd( 18.4281, -57.4, -16.5968, 0.44 ) }
    dend_84 { pt3dadd( 18.5919, -58.976, -17.1156, 0.07 ) }
    dend_84 { pt3dadd( 18.7225, -60.0706, -17.4584, 0.07 ) }
    dend_84 { pt3dadd( 18.8799, -61.2416, -17.8321, 1.4 ) }
    dend_84 { pt3dadd( 19.0726, -62.7783, -18.3147, 0.07 ) }
    dend_84 { pt3dadd( 19.1315, -63.373, -18.4878, 0.07 ) }
    dend_84 { pt3dadd( 19.2174, -64.1401, -18.6523, 0.44 ) }
    // Section: dend_79, id: dend_79, parent: dend_77 (entry count 78/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( 33.8953, -34.0598, 28.2601, 0.37 ) }
    dend_79 { pt3dadd( 34.6404, -34.7335, 28.2498, 0.37 ) }
    dend_79 { pt3dadd( 35.2932, -35.2982, 28.2358, 0.37 ) }
    dend_79 { pt3dadd( 35.9559, -35.882, 28.2539, 0.37 ) }
    dend_79 { pt3dadd( 36.9638, -36.8046, 28.306, 0.37 ) }
    dend_79 { pt3dadd( 37.5422, -37.3608, 28.3743, 0.37 ) }
    dend_79 { pt3dadd( 38.3532, -38.1456, 28.4961, 0.37 ) }
    dend_79 { pt3dadd( 38.9305, -38.6863, 28.6104, 0.37 ) }
    dend_79 { pt3dadd( 39.7325, -39.3964, 28.8015, 0.66 ) }
    dend_79 { pt3dadd( 40.3725, -39.9274, 28.9705, 0.81 ) }
    dend_79 { pt3dadd( 41.4389, -40.7652, 29.2973, 0.81 ) }
    dend_79 { pt3dadd( 42.2615, -41.371, 29.5664, 0.44 ) }
    dend_79 { pt3dadd( 43.1816, -42.0037, 29.8675, 0.59 ) }
    dend_79 { pt3dadd( 43.7281, -42.3513, 30.0197, 0.59 ) }
    dend_79 { pt3dadd( 44.4839, -42.7903, 30.1814, 0.59 ) }
    dend_79 { pt3dadd( 45.3698, -43.2659, 30.3271, 0.81 ) }
    dend_79 { pt3dadd( 46.5731, -43.9182, 30.4421, 0.44 ) }
    dend_79 { pt3dadd( 47.1931, -44.3238, 30.4823, 0.44 ) }
    dend_79 { pt3dadd( 47.7915, -44.8323, 30.5177, 0.88 ) }
    dend_79 { pt3dadd( 48.2429, -45.3149, 30.5788, 0.88 ) }
    dend_79 { pt3dadd( 48.6641, -45.8533, 30.6938, 0.88 ) }
    dend_79 { pt3dadd( 49.3375, -46.8178, 30.9451, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_79 { pt3dadd( 50.1067, -48.0014, 31.2869, 0.22 ) }
    dend_79 { pt3dadd( 50.8519, -49.1758, 31.6618, 0.81 ) }
    dend_79 { pt3dadd( 51.5465, -50.2612, 32.0358, 1.54 ) }
    dend_79 { pt3dadd( 52.4342, -51.5612, 32.4891, 0.88 ) }
    dend_79 { pt3dadd( 52.9618, -52.2463, 32.7338, 0.88 ) }
    dend_79 { pt3dadd( 53.3933, -52.6896, 32.899, 0.88 ) }
    dend_79 { pt3dadd( 54.3545, -53.3704, 33.185, 0.88 ) }
    dend_79 { pt3dadd( 54.9826, -53.6449, 33.3121, 0.88 ) }
    dend_79 { pt3dadd( 55.9835, -53.8683, 33.4419, 0.44 ) }
    dend_79 { pt3dadd( 56.7652, -53.9282, 33.5494, 0.44 ) }
    dend_79 { pt3dadd( 57.6585, -53.9223, 33.7347, 0.44 ) }
    dend_79 { pt3dadd( 58.8395, -53.858, 34.033, 1.18 ) }
    dend_79 { pt3dadd( 59.6801, -53.7691, 34.2713, 1.18 ) }
    dend_79 { pt3dadd( 60.6661, -53.6468, 34.5839, 0.51 ) }
    dend_79 { pt3dadd( 61.7391, -53.5126, 34.9722, 0.51 ) }
    dend_79 { pt3dadd( 62.723, -53.4221, 35.3697, 0.59 ) }
    dend_79 { pt3dadd( 63.6665, -53.3798, 35.7904, 1.84 ) }
    // Section: dend_78, id: dend_78, parent: dend_77 (entry count 17/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 33.8953, -34.0598, 28.2601, 0.29 ) }
    dend_78 { pt3dadd( 34.2646, -34.7917, 29.2206, 0.29 ) }
    dend_78 { pt3dadd( 34.7729, -35.745, 30.4434, 0.81 ) }
    dend_78 { pt3dadd( 35.2311, -36.6713, 31.604, 0.59 ) }
    dend_78 { pt3dadd( 35.562, -37.4328, 32.5394, 0.44 ) }
    dend_78 { pt3dadd( 35.6864, -37.803, 32.9855, 0.44 ) }
    dend_78 { pt3dadd( 35.9276, -38.8085, 34.0761, 0.44 ) }
    dend_78 { pt3dadd( 35.9488, -39.0346, 34.2962, 0.44 ) }
    dend_78 { pt3dadd( 35.8872, -39.5136, 34.7243, 0.44 ) }
    dend_78 { pt3dadd( 35.7295, -39.9111, 35.1081, 0.44 ) }
    dend_78 { pt3dadd( 35.2859, -40.5799, 35.8594, 1.1 ) }
    dend_78 { pt3dadd( 34.6713, -41.3343, 36.8067, 0.29 ) }
    dend_78 { pt3dadd( 34.1612, -41.856, 37.5621, 0.29 ) }
    dend_78 { pt3dadd( 33.906, -42.1658, 38.0898, 0.29 ) }
    dend_78 { pt3dadd( 33.8471, -42.4865, 38.6657, 0.29 ) }
    dend_78 { pt3dadd( 34.1226, -42.8311, 39.0318, 0.29 ) }
    dend_78 { pt3dadd( 34.649, -43.2882, 39.2745, 0.29 ) }
    dend_78 { pt3dadd( 35.1495, -43.6789, 39.3933, 0.29 ) }
    dend_78 { pt3dadd( 35.6783, -44.1005, 39.4842, 0.29 ) }
    dend_78 { pt3dadd( 36.4005, -44.7062, 39.5736, 0.29 ) }
    dend_78 { pt3dadd( 37.3388, -45.5628, 39.6488, 0.29 ) }
    dend_78 { pt3dadd( 37.8386, -46.0642, 39.6792, 0.22 ) }
    dend_78 { pt3dadd( 38.8794, -47.1688, 39.6959, 0.22 ) }
    // Section: dend_76, id: dend_76, parent: dend_72 (entry count 40/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 10.8509, -29.3709, 35.4024, 0.15 ) }
    dend_76 { pt3dadd( 12.1986, -29.3406, 35.549, 0.15 ) }
    dend_76 { pt3dadd( 13.3615, -29.3623, 35.7616, 0.81 ) }
    dend_76 { pt3dadd( 13.7859, -29.3652, 35.8845, 1.1 ) }
    dend_76 { pt3dadd( 14.8937, -29.3489, 36.249, 0.29 ) }
    dend_76 { pt3dadd( 15.5741, -29.3151, 36.5145, 0.73 ) }
    dend_76 { pt3dadd( 16.6832, -29.2406, 36.9674, 0.44 ) }
    dend_76 { pt3dadd( 17.497, -29.2063, 37.3751, 0.44 ) }
    dend_76 { pt3dadd( 18.6355, -29.1467, 38.039, 1.18 ) }
    dend_76 { pt3dadd( 18.9064, -29.1314, 38.1939, 1.18 ) }
    dend_76 { pt3dadd( 20.4563, -29.0507, 39.013, 0.66 ) }
    dend_76 { pt3dadd( 20.9396, -29.0372, 39.232, 0.66 ) }
    dend_76 { pt3dadd( 21.8404, -29.0939, 39.5387, 0.66 ) }
    dend_76 { pt3dadd( 22.6956, -29.2238, 39.79, 0.66 ) }
    dend_76 { pt3dadd( 23.9088, -29.4845, 40.0708, 0.66 ) }
    dend_76 { pt3dadd( 24.8385, -29.7232, 40.221, 0.59 ) }
    dend_76 { pt3dadd( 26.0636, -30.0726, 40.3767, 0.81 ) }
    dend_76 { pt3dadd( 28.133, -30.6864, 40.605, 0.51 ) }
    dend_76 { pt3dadd( 29.8886, -31.2246, 40.7464, 0.37 ) }
    dend_76 { pt3dadd( 31.3795, -31.6929, 40.8382, 0.22 ) }
    dend_76 { pt3dadd( 33.475, -32.3591, 40.9837, 0.22 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 61/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 10.8509, -29.3709, 35.4024, 0.81 ) }
    dend_73 { pt3dadd( 11.2346, -30.2324, 36.1516, 0.81 ) }
    dend_73 { pt3dadd( 11.5517, -30.7489, 36.6129, 0.37 ) }
    dend_73 { pt3dadd( 12.0352, -31.4393, 37.2101, 0.66 ) }
    dend_73 { pt3dadd( 12.4763, -32.0947, 37.6945, 0.66 ) }
    dend_73 { pt3dadd( 13.0716, -33.0722, 38.3074, 0.29 ) }
    dend_73 { pt3dadd( 13.4994, -33.7487, 38.7265, 0.29 ) }
    dend_73 { pt3dadd( 13.8216, -34.1619, 38.9786, 0.29 ) }
    dend_73 { pt3dadd( 14.4371, -34.8225, 39.399, 0.29 ) }
    dend_73 { pt3dadd( 15.3498, -35.6263, 39.9074, 0.44 ) }
    dend_73 { pt3dadd( 16.0811, -36.1439, 40.2705, 0.59 ) }
    dend_73 { pt3dadd( 16.9401, -36.5137, 40.6982, 0.44 ) }
    dend_73 { pt3dadd( 17.5046, -36.4223, 40.9894, 0.44 ) }
    dend_73 { pt3dadd( 17.9962, -35.9718, 41.2801, 0.44 ) }
    dend_73 { pt3dadd( 18.4798, -35.293, 41.6106, 0.73 ) }
    dend_73 { pt3dadd( 18.9817, -34.3347, 42.0212, 0.29 ) }
    dend_73 { pt3dadd( 19.1442, -33.8493, 42.2021, 0.29 ) }
    dend_73 { pt3dadd( 18.6031, -33.6626, 42.2638, 0.29 ) }
    dend_73 { pt3dadd( 18.0871, -33.5776, 42.3006, 0.29 ) }
    dend_73 { pt3dadd( 17.296, -33.5238, 42.3444, 0.29 ) }
    dend_73 { pt3dadd( 16.335, -33.5035, 42.3809, 0.29 ) }
    dend_73 { pt3dadd( 14.8645, -33.5186, 42.405, 0.29 ) }
    dend_73 { pt3dadd( 14.1115, -33.5376, 42.4182, 0.29 ) }
    dend_73 { pt3dadd( 13.0289, -33.5744, 42.4377, 0.29 ) }
    dend_73 { pt3dadd( 11.9901, -33.6127, 42.4566, 0.29 ) }
    dend_73 { pt3dadd( 10.7353, -33.6354, 42.4786, 0.29 ) }
    dend_73 { pt3dadd( 9.63187, -33.6491, 42.4989, 0.29 ) }
    dend_73 { pt3dadd( 8.53749, -33.6549, 42.5193, 0.29 ) }
    dend_73 { pt3dadd( 7.69421, -33.6457, 42.5337, 0.29 ) }
    dend_73 { pt3dadd( 6.74276, -33.612, 42.5458, 0.29 ) }
    dend_73 { pt3dadd( 5.41151, -33.5835, 42.5473, 0.29 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 92/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -37.4734, -7.70859, 37.4392, 0.22 ) }
    dend_64 { pt3dadd( -38.208, -7.64261, 37.5322, 0.22 ) }
    dend_64 { pt3dadd( -38.9778, -7.34849, 37.6278, 0.22 ) }
    dend_64 { pt3dadd( -39.2961, -7.14546, 37.6676, 0.22 ) }
    dend_64 { pt3dadd( -39.683, -6.78465, 37.7193, 0.22 ) }
    dend_64 { pt3dadd( -40.3008, -6.05464, 37.8099, 0.22 ) }
    dend_64 { pt3dadd( -40.8751, -5.30109, 37.8998, 0.22 ) }
    dend_64 { pt3dadd( -41.1076, -4.91929, 37.941, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_64 { pt3dadd( -41.3902, -4.3875, 37.9829, 0.22 ) }
    dend_64 { pt3dadd( -41.6388, -3.79367, 38.0153, 0.22 ) }
    dend_64 { pt3dadd( -41.7639, -3.35945, 38.0256, 0.22 ) }
    dend_64 { pt3dadd( -41.8063, -2.96355, 38.0079, 0.22 ) }
    dend_64 { pt3dadd( -41.2832, -3.09314, 38.0772, 0.22 ) }
    dend_64 { pt3dadd( -40.5102, -3.5345, 38.1966, 0.22 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 6/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -37.4734, -7.70859, 37.4392, 0.22 ) }
    dend_63 { pt3dadd( -36.9328, -8.76054, 37.5047, 0.22 ) }
    dend_63 { pt3dadd( -36.3952, -9.65225, 37.559, 0.22 ) }
    dend_63 { pt3dadd( -35.9732, -10.3013, 37.5981, 0.22 ) }
    dend_63 { pt3dadd( -35.4984, -11.0245, 37.64, 0.22 ) }
    dend_63 { pt3dadd( -35.0192, -11.7764, 37.6822, 0.22 ) }
    dend_63 { pt3dadd( -34.3912, -12.8239, 37.7379, 0.22 ) }
    dend_63 { pt3dadd( -34.0335, -13.3952, 37.7658, 0.22 ) }
    dend_63 { pt3dadd( -33.9206, -13.572, 37.7763, 0.22 ) }
    dend_63 { pt3dadd( -33.6814, -13.952, 37.7982, 0.22 ) }
    dend_63 { pt3dadd( -33.4968, -14.2723, 37.8206, 0.22 ) }
    dend_63 { pt3dadd( -33.2448, -14.8197, 37.8664, 0.29 ) }
    dend_63 { pt3dadd( -33.0532, -15.4766, 37.9284, 0.22 ) }
    dend_63 { pt3dadd( -32.8976, -16.2881, 38.0135, 0.22 ) }
    // Section: dend_61, id: dend_61, parent: dend_57 (entry count 20/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -47.1825, -4.18127, 37.2418, 0.29 ) }
    dend_61 { pt3dadd( -48.3896, -3.4324, 37.1585, 0.29 ) }
    dend_61 { pt3dadd( -48.7776, -3.26641, 37.1524, 0.66 ) }
    dend_61 { pt3dadd( -49.5057, -3.04441, 37.1576, 0.29 ) }
    dend_61 { pt3dadd( -50.0797, -2.95244, 37.1686, 0.44 ) }
    dend_61 { pt3dadd( -51.0744, -2.79307, 37.1877, 0.15 ) }
    dend_61 { pt3dadd( -51.6481, -2.70115, 37.1987, 0.15 ) }
    dend_61 { pt3dadd( -52.6589, -2.68254, 37.2952, 0.15 ) }
    dend_61 { pt3dadd( -53.1493, -2.71416, 37.3452, 0.15 ) }
    dend_61 { pt3dadd( -54.1307, -2.87579, 37.4553, 0.44 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 30/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -47.1825, -4.18127, 37.2418, 0.29 ) }
    dend_58 { pt3dadd( -47.9453, -4.62932, 37.2418, 0.29 ) }
    dend_58 { pt3dadd( -48.6793, -5.06046, 37.2418, 0.29 ) }
    dend_58 { pt3dadd( -49.2148, -5.37497, 37.2418, 0.29 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 34/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 35.975, -56.047, 33.6933, 0.81 ) }
    dend_38 { pt3dadd( 36.1394, -57.0907, 33.6788, 0.81 ) }
    dend_38 { pt3dadd( 36.3062, -58.3264, 33.57, 0.81 ) }
    dend_38 { pt3dadd( 36.4932, -59.9178, 33.3544, 0.59 ) }
    dend_38 { pt3dadd( 36.6343, -60.9389, 33.193, 0.59 ) }
    dend_38 { pt3dadd( 36.8895, -62.2599, 32.9778, 0.59 ) }
    dend_38 { pt3dadd( 37.0695, -62.9803, 32.8711, 0.59 ) }
    dend_38 { pt3dadd( 37.3271, -63.8454, 32.7266, 0.59 ) }
    dend_38 { pt3dadd( 37.5412, -64.4949, 32.6088, 0.59 ) }
    dend_38 { pt3dadd( 37.8649, -65.4543, 32.4887, 0.59 ) }
    dend_38 { pt3dadd( 38.268, -66.5086, 32.4309, 0.59 ) }
    dend_38 { pt3dadd( 38.6191, -67.3547, 32.4896, 0.59 ) }
    dend_38 { pt3dadd( 38.8604, -67.9041, 32.578, 0.37 ) }
    dend_38 { pt3dadd( 39.4239, -69.195, 32.8834, 0.37 ) }
    dend_38 { pt3dadd( 39.8083, -70.1476, 33.1711, 0.37 ) }
    dend_38 { pt3dadd( 40.1695, -71.2227, 33.5477, 0.66 ) }
    dend_38 { pt3dadd( 40.494, -72.498, 34.0794, 0.29 ) }
    dend_38 { pt3dadd( 40.6458, -73.344, 34.5161, 0.29 ) }
    dend_38 { pt3dadd( 40.7348, -74.2255, 35.101, 0.29 ) }
    dend_38 { pt3dadd( 40.7691, -74.9277, 35.6876, 0.29 ) }
    dend_38 { pt3dadd( 40.716, -75.2678, 36.0399, 0.29 ) }
    dend_38 { pt3dadd( 40.26, -75.8416, 36.9046, 0.95 ) }
    dend_38 { pt3dadd( 39.4845, -76.1349, 37.7425, 0.29 ) }
    dend_38 { pt3dadd( 38.6156, -76.2088, 38.4502, 0.07 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 58/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 35.975, -56.047, 33.6933, 0.66 ) }
    dend_37 { pt3dadd( 34.5894, -56.5494, 33.5008, 0.66 ) }
    dend_37 { pt3dadd( 33.7975, -56.9189, 33.3698, 0.73 ) }
    dend_37 { pt3dadd( 33.0983, -57.239, 33.2581, 0.73 ) }
    dend_37 { pt3dadd( 32.5743, -57.4624, 33.18, 0.44 ) }
    dend_37 { pt3dadd( 31.3406, -58.0149, 33.0724, 0.22 ) }
    dend_37 { pt3dadd( 30.6317, -58.3412, 33.005, 0.22 ) }
    dend_37 { pt3dadd( 29.9387, -58.6514, 32.8856, 0.22 ) }
    dend_37 { pt3dadd( 29.14, -59.0136, 32.7512, 0.22 ) }
    dend_37 { pt3dadd( 28.5982, -59.2456, 32.6752, 0.66 ) }
    dend_37 { pt3dadd( 27.4223, -59.7064, 32.5438, 0.22 ) }
    dend_37 { pt3dadd( 26.6542, -59.9856, 32.4917, 0.22 ) }
    dend_37 { pt3dadd( 25.9644, -60.2114, 32.4347, 0.22 ) }
    dend_37 { pt3dadd( 24.9857, -60.5024, 32.3345, 0.22 ) }
    dend_37 { pt3dadd( 24.6341, -60.6179, 32.2871, 0.22 ) }
    dend_37 { pt3dadd( 23.7984, -60.878, 32.1387, 0.22 ) }
    // Section: dend_33, id: dend_33, parent: dend_15 (entry count 74/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -14.6231, -39.3711, -6.26749, 0.44 ) }
    dend_33 { pt3dadd( -15.604, -40.3018, -5.85581, 0.44 ) }
    dend_33 { pt3dadd( -16.7198, -41.3292, -5.4117, 0.44 ) }
    dend_33 { pt3dadd( -17.446, -42.007, -5.13732, 0.59 ) }
    dend_33 { pt3dadd( -18.2456, -42.7853, -4.7854, 0.51 ) }
    dend_33 { pt3dadd( -19.1533, -43.6624, -4.36094, 0.44 ) }
    dend_33 { pt3dadd( -20.556, -44.9673, -3.6861, 0.51 ) }
    dend_33 { pt3dadd( -20.9908, -45.3453, -3.47411, 0.51 ) }
    dend_33 { pt3dadd( -21.9408, -46.0997, -3.01792, 0.51 ) }
    dend_33 { pt3dadd( -23.3215, -47.0971, -2.27848, 0.66 ) }
    dend_33 { pt3dadd( -23.7695, -47.3968, -1.98249, 0.66 ) }
    dend_33 { pt3dadd( -24.3427, -47.7443, -1.55102, 0.66 ) }
    dend_33 { pt3dadd( -25.0922, -48.1351, -0.968102, 0.66 ) }
    dend_33 { pt3dadd( -25.718, -48.4099, -0.492964, 0.66 ) }
    dend_33 { pt3dadd( -26.8022, -48.778, 0.280166, 0.81 ) }
    dend_33 { pt3dadd( -28.4865, -49.2704, 1.38391, 0.95 ) }
    dend_33 { pt3dadd( -29.8815, -49.715, 2.29427, 0.81 ) }
    dend_33 { pt3dadd( -30.7699, -50.0152, 2.88007, 0.81 ) }
    dend_33 { pt3dadd( -31.5589, -50.294, 3.40874, 0.81 ) }
    dend_33 { pt3dadd( -32.1557, -50.5159, 3.80359, 0.51 ) }
    dend_33 { pt3dadd( -32.5741, -50.6821, 4.05015, 0.51 ) }
    dend_33 { pt3dadd( -33.6964, -51.1807, 4.66084, 0.73 ) }
    dend_33 { pt3dadd( -35.1741, -51.9604, 5.54692, 1.03 ) }
    dend_33 { pt3dadd( -35.811, -52.3675, 5.97935, 1.03 ) }
    dend_33 { pt3dadd( -36.2219, -52.6747, 6.28259, 1.18 ) }
    dend_33 { pt3dadd( -36.929, -53.2435, 6.82762, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_33 { pt3dadd( -37.5666, -53.7515, 7.31138, 1.18 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 1/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -14.6231, -39.3711, -6.26749, 1.91 ) }
    dend_16 { pt3dadd( -14.7494, -40.3567, -7.77763, 1.91 ) }
    dend_16 { pt3dadd( -14.7759, -40.5634, -8.09438, 1.91 ) }
    // Section: dend_92, id: dend_92, parent: dend_88 (entry count 4/100)
    dend_92 { pt3dclear() }
    dend_92 { pt3dadd( -3.57603, -52.6278, 14.3752, 0.81 ) }
    dend_92 { pt3dadd( -3.61477, -53.6191, 14.1048, 0.81 ) }
    dend_92 { pt3dadd( -3.65598, -54.6734, 13.8172, 0.81 ) }
    dend_92 { pt3dadd( -3.69338, -55.6304, 13.5562, 0.88 ) }
    dend_92 { pt3dadd( -3.75342, -57.1667, 13.1371, 1.32 ) }
    dend_92 { pt3dadd( -3.81131, -58.6477, 12.7331, 1.25 ) }
    dend_92 { pt3dadd( -3.85389, -59.7372, 12.4359, 1.25 ) }
    // Section: dend_89, id: dend_89, parent: dend_88 (entry count 11/100)
    dend_89 { pt3dclear() }
    dend_89 { pt3dadd( -3.57603, -52.6278, 14.3752, 0.51 ) }
    dend_89 { pt3dadd( -3.11911, -53.0807, 14.3177, 0.51 ) }
    dend_89 { pt3dadd( -2.48203, -53.7661, 14.2175, 0.51 ) }
    dend_89 { pt3dadd( -1.85197, -54.4889, 14.1001, 1.03 ) }
    dend_89 { pt3dadd( -1.13554, -55.3503, 13.9316, 0.29 ) }
    dend_89 { pt3dadd( -0.314353, -56.3492, 13.6706, 0.88 ) }
    dend_89 { pt3dadd( 0.763709, -57.6143, 13.2489, 0.51 ) }
    dend_89 { pt3dadd( 1.32597, -58.2779, 12.9888, 0.51 ) }
    dend_89 { pt3dadd( 1.75308, -58.7787, 12.7684, 0.51 ) }
    dend_89 { pt3dadd( 2.76343, -59.9224, 12.2161, 0.81 ) }
    dend_89 { pt3dadd( 3.56447, -60.7391, 11.789, 0.59 ) }
    dend_89 { pt3dadd( 4.70237, -61.7822, 11.2099, 0.37 ) }
    dend_89 { pt3dadd( 5.22727, -62.2379, 10.9621, 0.37 ) }
    dend_89 { pt3dadd( 5.56182, -62.5258, 10.8281, 0.37 ) }
    dend_89 { pt3dadd( 6.18503, -63.0413, 10.6098, 0.73 ) }
    dend_89 { pt3dadd( 7.05966, -63.7524, 10.3811, 0.51 ) }
    dend_89 { pt3dadd( 7.57444, -64.1922, 10.3068, 0.51 ) }
    dend_89 { pt3dadd( 8.21371, -64.7943, 10.2643, 0.51 ) }
    dend_89 { pt3dadd( 9.08227, -65.6497, 10.1952, 1.32 ) }
    // Section: dend_81, id: dend_81, parent: dend_79 (entry count 30/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( 63.6665, -53.3798, 35.7904, 1.25 ) }
    dend_81 { pt3dadd( 64.6898, -52.991, 34.5321, 1.25 ) }
    dend_81 { pt3dadd( 65.769, -52.6196, 33.3139, 0.44 ) }
    dend_81 { pt3dadd( 66.2394, -52.4509, 32.7657, 0.81 ) }
    dend_81 { pt3dadd( 67.1601, -52.103, 31.6411, 0.44 ) }
    dend_81 { pt3dadd( 67.4868, -51.9796, 31.2422, 0.44 ) }
    dend_81 { pt3dadd( 67.8539, -51.8409, 30.7937, 0.44 ) }
    dend_81 { pt3dadd( 68.8153, -51.4707, 29.6507, 0.44 ) }
    dend_81 { pt3dadd( 69.8215, -51.0864, 28.4924, 0.44 ) }
    dend_81 { pt3dadd( 70.5668, -50.8122, 27.56, 0.44 ) }
    // Section: dend_80, id: dend_80, parent: dend_79 (entry count 40/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( 63.6665, -53.3798, 35.7904, 0.59 ) }
    dend_80 { pt3dadd( 65.0041, -54.1576, 36.0805, 0.59 ) }
    dend_80 { pt3dadd( 65.7753, -54.5141, 36.2619, 0.66 ) }
    dend_80 { pt3dadd( 66.5783, -54.8851, 36.4546, 0.81 ) }
    dend_80 { pt3dadd( 67.3747, -55.248, 36.6348, 0.51 ) }
    dend_80 { pt3dadd( 68.0862, -55.5584, 36.7864, 0.29 ) }
    dend_80 { pt3dadd( 68.7083, -55.8138, 36.9073, 0.29 ) }
    dend_80 { pt3dadd( 69.529, -56.1005, 37.0483, 0.29 ) }
    dend_80 { pt3dadd( 70.0861, -56.3062, 37.1113, 0.29 ) }
    dend_80 { pt3dadd( 70.8528, -56.6322, 37.1701, 0.29 ) }
    dend_80 { pt3dadd( 72.1641, -57.2701, 37.2643, 0.66 ) }
    dend_80 { pt3dadd( 73.0027, -57.7291, 37.3135, 0.07 ) }
    dend_80 { pt3dadd( 73.5454, -58.0409, 37.3286, 0.07 ) }
    dend_80 { pt3dadd( 74.1744, -58.3978, 37.317, 0.73 ) }
    dend_80 { pt3dadd( 74.81, -58.7452, 37.2951, 0.73 ) }
    // Section: dend_75, id: dend_75, parent: dend_73 (entry count 55/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 5.41151, -33.5835, 42.5473, 0.15 ) }
    dend_75 { pt3dadd( 4.1429, -33.5171, 42.5237, 0.15 ) }
    dend_75 { pt3dadd( 2.66862, -33.3569, 42.5, 0.15 ) }
    dend_75 { pt3dadd( 1.57461, -33.2019, 42.4832, 0.15 ) }
    dend_75 { pt3dadd( 0.781443, -33.0744, 42.4657, 0.15 ) }
    dend_75 { pt3dadd( 0.0484649, -32.9546, 42.4488, 0.15 ) }
    dend_75 { pt3dadd( -0.687557, -32.849, 42.4365, 0.15 ) }
    dend_75 { pt3dadd( -1.41626, -32.7751, 42.4539, 0.15 ) }
    dend_75 { pt3dadd( -0.887989, -32.8023, 42.4288, 0.15 ) }
    dend_75 { pt3dadd( -0.18668, -32.8175, 42.3895, 0.15 ) }
    dend_75 { pt3dadd( 0.948782, -32.8315, 42.3236, 0.15 ) }
    dend_75 { pt3dadd( 2.11101, -32.8537, 42.2575, 0.15 ) }
    dend_75 { pt3dadd( 3.67733, -32.9235, 42.1738, 0.15 ) }
    dend_75 { pt3dadd( 4.50029, -32.9978, 42.1343, 0.15 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 69/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 5.41151, -33.5835, 42.5473, 0.22 ) }
    dend_74 { pt3dadd( 4.51165, -32.6711, 42.4006, 0.22 ) }
    dend_74 { pt3dadd( 3.90732, -32.2112, 42.3253, 0.22 ) }
    dend_74 { pt3dadd( 3.14996, -31.775, 42.2497, 0.22 ) }
    dend_74 { pt3dadd( 2.49014, -31.47, 42.199, 0.22 ) }
    dend_74 { pt3dadd( 1.71281, -31.1107, 42.1392, 0.22 ) }
    dend_74 { pt3dadd( 0.982537, -30.7731, 42.083, 0.22 ) }
    dend_74 { pt3dadd( 0.174915, -30.5255, 42.0552, 0.22 ) }
    dend_74 { pt3dadd( -0.532349, -30.3835, 42.0308, 0.22 ) }
    dend_74 { pt3dadd( -1.75842, -30.2554, 41.9907, 0.59 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 79/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -49.2148, -5.37497, 37.2418, 0.44 ) }
    dend_60 { pt3dadd( -48.9362, -5.29315, 37.231, 0.44 ) }
    dend_60 { pt3dadd( -48.3081, -5.14761, 37.1726, 0.22 ) }
    dend_60 { pt3dadd( -47.7802, -5.06902, 37.1059, 0.22 ) }
    dend_60 { pt3dadd( -46.6447, -5.01526, 36.9066, 0.22 ) }
    dend_60 { pt3dadd( -45.9625, -4.98296, 36.7869, 0.22 ) }
    dend_60 { pt3dadd( -45.5968, -4.96565, 36.7227, 0.22 ) }
    dend_60 { pt3dadd( -45.0616, -4.93803, 36.6004, 0.22 ) }
    dend_60 { pt3dadd( -44.6079, -4.90822, 36.4714, 0.22 ) }
    dend_60 { pt3dadd( -43.9248, -5.02076, 36.1903, 0.22 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 89/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -49.2148, -5.37497, 37.2418, 0.22 ) }
    dend_59 { pt3dadd( -49.984, -5.81577, 37.1037, 0.22 ) }
    dend_59 { pt3dadd( -50.4753, -6.01549, 37.0445, 0.22 ) }
    dend_59 { pt3dadd( -51.1618, -6.28433, 36.9736, 0.22 ) }
    dend_59 { pt3dadd( -51.7228, -6.51384, 36.9165, 0.22 ) }
    dend_59 { pt3dadd( -52.1932, -6.71621, 36.8677, 0.22 ) }
    dend_59 { pt3dadd( -53.0084, -7.07627, 36.7808, 0.22 ) }
    dend_59 { pt3dadd( -54.0554, -7.41212, 36.6969, 0.29 ) }
    dend_59 { pt3dadd( -54.3466, -7.4251, 36.6914, 0.29 ) }
    dend_59 { pt3dadd( -53.7212, -7.64728, 36.6575, 0.29 ) }
    dend_59 { pt3dadd( -53.1698, -8.0213, 36.6133, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_59 { pt3dadd( -52.4025, -8.68173, 36.5419, 0.29 ) }
    dend_59 { pt3dadd( -52.0978, -8.93565, 36.5144, 0.29 ) }
    dend_59 { pt3dadd( -51.46, -9.08757, 36.4842, 0.29 ) }
    dend_59 { pt3dadd( -51.8822, -9.17157, 36.4876, 0.29 ) }
    dend_59 { pt3dadd( -52.5467, -9.39231, 36.486, 0.29 ) }
    dend_59 { pt3dadd( -53.3674, -9.68754, 36.4821, 0.29 ) }
    dend_59 { pt3dadd( -53.9746, -9.88162, 36.4817, 0.29 ) }
    dend_59 { pt3dadd( -54.834, -10.0922, 36.4817, 0.29 ) }
    dend_59 { pt3dadd( -55.6227, -10.2058, 36.4817, 0.44 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 9/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -37.5666, -53.7515, 7.31138, 0.59 ) }
    dend_35 { pt3dadd( -38.4762, -54.4438, 6.74001, 0.59 ) }
    dend_35 { pt3dadd( -39.4094, -55.2432, 6.1343, 0.59 ) }
    dend_35 { pt3dadd( -39.8653, -55.6523, 5.84423, 0.59 ) }
    dend_35 { pt3dadd( -40.8916, -56.5735, 5.23634, 0.37 ) }
    dend_35 { pt3dadd( -41.79, -57.3248, 4.75737, 0.51 ) }
    dend_35 { pt3dadd( -42.1735, -57.6296, 4.57462, 0.73 ) }
    dend_35 { pt3dadd( -43.1966, -58.3821, 4.17753, 0.51 ) }
    dend_35 { pt3dadd( -43.5753, -58.6617, 4.05474, 0.51 ) }
    dend_35 { pt3dadd( -44.2316, -59.1685, 3.85671, 0.51 ) }
    dend_35 { pt3dadd( -45.1513, -59.9564, 3.61644, 0.44 ) }
    dend_35 { pt3dadd( -45.8275, -60.5998, 3.45042, 0.59 ) }
    dend_35 { pt3dadd( -46.3448, -61.1853, 3.30153, 0.59 ) }
    dend_35 { pt3dadd( -46.7543, -61.7589, 3.16992, 0.59 ) }
    dend_35 { pt3dadd( -47.0215, -62.2872, 3.06304, 0.59 ) }
    dend_35 { pt3dadd( -47.2188, -62.8379, 2.97042, 0.59 ) }
    dend_35 { pt3dadd( -47.459, -63.7891, 2.87611, 0.59 ) }
    dend_35 { pt3dadd( -47.6071, -64.4451, 2.80914, 0.59 ) }
    dend_35 { pt3dadd( -47.7989, -65.1754, 2.71984, 0.59 ) }
    dend_35 { pt3dadd( -48.3031, -66.7946, 2.48154, 0.73 ) }
    dend_35 { pt3dadd( -48.6694, -67.7101, 2.33017, 0.73 ) }
    dend_35 { pt3dadd( -49.3341, -69.1144, 2.10286, 0.37 ) }
    dend_35 { pt3dadd( -49.8922, -70.1403, 1.91474, 0.37 ) }
    dend_35 { pt3dadd( -50.9447, -71.8484, 1.5739, 0.88 ) }
    dend_35 { pt3dadd( -51.8992, -73.1809, 1.23238, 0.51 ) }
    dend_35 { pt3dadd( -52.9123, -74.3631, 0.841295, 0.44 ) }
    dend_35 { pt3dadd( -53.6118, -75.0293, 0.576952, 0.44 ) }
    dend_35 { pt3dadd( -54.5647, -75.7587, 0.220871, 0.44 ) }
    dend_35 { pt3dadd( -55.3726, -76.285, -0.0666096, 0.73 ) }
    dend_35 { pt3dadd( -56.9832, -77.193, -0.678193, 0.59 ) }
    dend_35 { pt3dadd( -57.6826, -77.5631, -0.97761, 0.59 ) }
    dend_35 { pt3dadd( -58.4254, -77.9924, -1.35834, 0.81 ) }
    dend_35 { pt3dadd( -59.3846, -78.6107, -1.9071, 0.66 ) }
    dend_35 { pt3dadd( -59.8727, -78.988, -2.21765, 0.66 ) }
    dend_35 { pt3dadd( -60.38, -79.4551, -2.62063, 0.51 ) }
    dend_35 { pt3dadd( -60.6798, -79.756, -2.88956, 0.51 ) }
    dend_35 { pt3dadd( -61.1113, -80.1676, -3.30126, 0.73 ) }
    dend_35 { pt3dadd( -61.4116, -80.4018, -3.5749, 0.95 ) }
    dend_35 { pt3dadd( -62.4082, -80.9594, -4.30642, 0.51 ) }
    dend_35 { pt3dadd( -63.4047, -81.371, -4.84278, 0.44 ) }
    dend_35 { pt3dadd( -64.2084, -81.6291, -5.1792, 0.44 ) }
    dend_35 { pt3dadd( -64.8167, -81.8017, -5.38167, 0.95 ) }
    dend_35 { pt3dadd( -65.8544, -82.1013, -5.63986, 0.95 ) }
    dend_35 { pt3dadd( -67.1852, -82.5749, -5.82827, 0.22 ) }
    dend_35 { pt3dadd( -68.4249, -83.1308, -5.82016, 0.51 ) }
    dend_35 { pt3dadd( -68.9031, -83.3824, -5.77566, 0.51 ) }
    dend_35 { pt3dadd( -69.572, -83.7987, -5.68142, 0.81 ) }
    dend_35 { pt3dadd( -70.5283, -84.4653, -5.52793, 0.51 ) }
    dend_35 { pt3dadd( -71.632, -85.3084, -5.33206, 1.18 ) }
    dend_35 { pt3dadd( -73.8501, -87.0333, -4.93322, 0.29 ) }
    dend_35 { pt3dadd( -74.8, -87.7883, -4.75861, 0.88 ) }
    dend_35 { pt3dadd( -76.2723, -88.9902, -4.48884, 0.29 ) }
    dend_35 { pt3dadd( -76.6319, -89.3112, -4.42567, 0.29 ) }
    dend_35 { pt3dadd( -77.0806, -89.7511, -4.36658, 0.88 ) }
    dend_35 { pt3dadd( -77.8073, -90.5756, -4.30428, 0.51 ) }
    dend_35 { pt3dadd( -78.3086, -91.2911, -4.30182, 0.51 ) }
    dend_35 { pt3dadd( -78.8924, -92.193, -4.34255, 0.29 ) }
    dend_35 { pt3dadd( -79.9715, -93.8075, -4.47557, 0.59 ) }
    dend_35 { pt3dadd( -80.7395, -94.908, -4.55451, 0.37 ) }
    dend_35 { pt3dadd( -81.3581, -95.7734, -4.6101, 0.66 ) }
    dend_35 { pt3dadd( -81.9866, -96.6844, -4.66019, 0.66 ) }
    dend_35 { pt3dadd( -82.6759, -97.6858, -4.68674, 0.95 ) }
    dend_35 { pt3dadd( -83.4759, -98.8851, -4.65949, 0.51 ) }
    dend_35 { pt3dadd( -84.008, -99.639, -4.61701, 0.51 ) }
    dend_35 { pt3dadd( -84.4297, -100.243, -4.57264, 0.51 ) }
    dend_35 { pt3dadd( -85.3656, -101.508, -4.46354, 1.69 ) }
    dend_35 { pt3dadd( -86.6273, -103.133, -4.30387, 0.29 ) }
    dend_35 { pt3dadd( -87.5135, -104.257, -4.24061, 0.51 ) }
    dend_35 { pt3dadd( -88.334, -105.319, -4.25114, 0.15 ) }
    dend_35 { pt3dadd( -88.8674, -106.006, -4.30037, 0.15 ) }
    dend_35 { pt3dadd( -89.9357, -107.349, -4.44027, 0.88 ) }
    dend_35 { pt3dadd( -90.4795, -108.01, -4.50299, 1.18 ) }
    dend_35 { pt3dadd( -91.0451, -108.697, -4.56382, 1.18 ) }
    dend_35 { pt3dadd( -91.8958, -109.757, -4.61624, 0.59 ) }
    dend_35 { pt3dadd( -92.7757, -111.021, -4.58403, 0.66 ) }
    dend_35 { pt3dadd( -93.3631, -111.959, -4.50963, 0.95 ) }
    dend_35 { pt3dadd( -94.2223, -113.486, -4.36802, 0.37 ) }
    dend_35 { pt3dadd( -94.5435, -114.067, -4.29697, 0.07 ) }
    dend_35 { pt3dadd( -94.7337, -114.401, -4.23618, 0.73 ) }
    dend_35 { pt3dadd( -95.4783, -115.619, -3.94629, 0.22 ) }
    dend_35 { pt3dadd( -95.7916, -116.118, -3.82147, 0.22 ) }
    dend_35 { pt3dadd( -96.2451, -116.903, -3.6469, 1.03 ) }
    dend_35 { pt3dadd( -96.5982, -117.66, -3.57993, 1.03 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 92/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -37.5666, -53.7515, 7.31138, 0.73 ) }
    dend_34 { pt3dadd( -39.391, -54.364, 8.37591, 0.73 ) }
    dend_34 { pt3dadd( -39.8501, -54.5885, 8.69471, 0.73 ) }
    dend_34 { pt3dadd( -40.6454, -55.1002, 9.28881, 1.03 ) }
    dend_34 { pt3dadd( -41.8449, -56.1087, 10.3309, 0.37 ) }
    dend_34 { pt3dadd( -42.2537, -56.5042, 10.7379, 0.44 ) }
    dend_34 { pt3dadd( -42.7271, -57.0016, 11.2683, 0.66 ) }
    dend_34 { pt3dadd( -43.3961, -57.9706, 12.1972, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_34 { pt3dadd( -43.6403, -58.5055, 12.7807, 0.81 ) }
    dend_34 { pt3dadd( -43.7813, -59.2189, 13.6522, 0.81 ) }
    dend_34 { pt3dadd( -43.7745, -59.7117, 14.3246, 0.81 ) }
    dend_34 { pt3dadd( -43.8085, -60.0159, 14.8837, 0.81 ) }
    dend_34 { pt3dadd( -43.9759, -60.2073, 15.4972, 0.81 ) }
    dend_34 { pt3dadd( -44.709, -60.2569, 16.3895, 0.88 ) }
    dend_34 { pt3dadd( -45.1382, -60.2222, 16.6899, 0.88 ) }
    dend_34 { pt3dadd( -45.8563, -60.1471, 17.004, 0.88 ) }
    dend_34 { pt3dadd( -46.6434, -60.0965, 17.2768, 0.88 ) }
    dend_34 { pt3dadd( -47.2593, -60.0677, 17.4429, 0.59 ) }
    dend_34 { pt3dadd( -47.767, -60.0453, 17.5538, 0.59 ) }
    dend_34 { pt3dadd( -48.4306, -59.9992, 17.6602, 0.59 ) }
    dend_34 { pt3dadd( -49.3142, -59.9398, 17.7941, 0.59 ) }
    dend_34 { pt3dadd( -50.7927, -59.9149, 18.0548, 0.59 ) }
    dend_34 { pt3dadd( -51.8531, -60.0, 18.3094, 0.59 ) }
    dend_34 { pt3dadd( -52.2759, -60.0937, 18.4398, 0.59 ) }
    dend_34 { pt3dadd( -52.8289, -60.3802, 18.7068, 0.81 ) }
    dend_34 { pt3dadd( -53.1506, -60.7365, 18.975, 0.81 ) }
    dend_34 { pt3dadd( -53.8043, -61.8925, 19.7174, 0.44 ) }
    dend_34 { pt3dadd( -54.1061, -62.5682, 20.1007, 0.44 ) }
    dend_34 { pt3dadd( -54.3109, -62.9996, 20.3273, 0.66 ) }
    dend_34 { pt3dadd( -54.8089, -63.8934, 20.71, 0.81 ) }
    dend_34 { pt3dadd( -55.3673, -64.7789, 21.0048, 0.59 ) }
    dend_34 { pt3dadd( -56.1031, -65.7223, 21.1723, 0.81 ) }
    dend_34 { pt3dadd( -56.8115, -66.5438, 21.192, 0.51 ) }
    dend_34 { pt3dadd( -57.384, -67.2346, 21.1688, 0.81 ) }
    dend_34 { pt3dadd( -58.0308, -68.1211, 21.1567, 0.51 ) }
    dend_34 { pt3dadd( -58.3702, -68.7039, 21.1865, 0.95 ) }
    dend_34 { pt3dadd( -58.9548, -69.9723, 21.3263, 0.37 ) }
    dend_34 { pt3dadd( -59.505, -71.3422, 21.5439, 0.44 ) }
    dend_34 { pt3dadd( -59.9234, -72.3471, 21.7657, 0.44 ) }
    dend_34 { pt3dadd( -60.6141, -73.7877, 22.2221, 0.88 ) }
    dend_34 { pt3dadd( -61.5384, -75.4392, 22.9628, 0.51 ) }
    dend_34 { pt3dadd( -61.8054, -75.8571, 23.1962, 0.51 ) }
    dend_34 { pt3dadd( -62.0217, -76.1652, 23.4183, 0.51 ) }
    dend_34 { pt3dadd( -62.7838, -77.0997, 24.2283, 0.88 ) }
    dend_34 { pt3dadd( -63.5627, -77.9205, 25.0588, 0.66 ) }
    dend_34 { pt3dadd( -64.1577, -78.4761, 25.7131, 0.66 ) }
    dend_34 { pt3dadd( -64.4743, -78.7624, 26.0847, 0.66 ) }
    dend_34 { pt3dadd( -65.0963, -79.3106, 26.8761, 0.88 ) }
    dend_34 { pt3dadd( -65.5176, -79.6708, 27.435, 1.03 ) }
    dend_34 { pt3dadd( -66.0328, -80.0614, 28.1208, 1.03 ) }
    dend_34 { pt3dadd( -66.8221, -80.5362, 29.0409, 1.03 ) }
    dend_34 { pt3dadd( -67.919, -80.9997, 29.9967, 0.51 ) }
    dend_34 { pt3dadd( -68.8486, -81.3042, 30.5906, 0.51 ) }
    dend_34 { pt3dadd( -69.33, -81.4561, 30.8229, 0.51 ) }
    dend_34 { pt3dadd( -70.1341, -81.7182, 31.1579, 0.51 ) }
    dend_34 { pt3dadd( -71.0752, -82.0306, 31.4791, 0.51 ) }
    dend_34 { pt3dadd( -72.0417, -82.3094, 31.7612, 0.29 ) }
    dend_34 { pt3dadd( -72.8051, -82.5242, 31.9997, 0.29 ) }
    dend_34 { pt3dadd( -74.0885, -82.9754, 32.4425, 0.29 ) }
    dend_34 { pt3dadd( -74.6996, -83.2122, 32.6638, 0.29 ) }
    dend_34 { pt3dadd( -75.1711, -83.3981, 32.8329, 0.66 ) }
    dend_34 { pt3dadd( -76.1116, -83.7965, 33.1538, 1.1 ) }
    dend_34 { pt3dadd( -77.0091, -84.2595, 33.4714, 0.29 ) }
    dend_34 { pt3dadd( -77.9702, -84.8149, 33.7907, 0.44 ) }
    dend_34 { pt3dadd( -79.1044, -85.5359, 34.1089, 0.37 ) }
    dend_34 { pt3dadd( -79.817, -86.0328, 34.2987, 0.37 ) }
    dend_34 { pt3dadd( -81.0189, -86.9792, 34.6313, 1.03 ) }
    dend_34 { pt3dadd( -82.6434, -88.4451, 35.1019, 0.29 ) }
    dend_34 { pt3dadd( -82.9758, -88.7743, 35.2085, 0.29 ) }
    dend_34 { pt3dadd( -83.8357, -89.6915, 35.5533, 0.44 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 62/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -14.7759, -40.5634, -8.09438, 0.51 ) }
    dend_18 { pt3dadd( -14.998, -41.3011, -8.67046, 0.51 ) }
    dend_18 { pt3dadd( -15.2032, -42.1751, -9.34749, 0.59 ) }
    dend_18 { pt3dadd( -15.4698, -43.3052, -10.2249, 0.73 ) }
    dend_18 { pt3dadd( -15.6675, -44.0944, -10.8337, 0.73 ) }
    dend_18 { pt3dadd( -15.9803, -45.2394, -11.6842, 0.95 ) }
    dend_18 { pt3dadd( -16.2574, -46.1718, -12.3483, 1.03 ) }
    dend_18 { pt3dadd( -16.6816, -47.5057, -13.3271, 1.03 ) }
    dend_18 { pt3dadd( -16.9358, -48.34, -13.9345, 1.03 ) }
    dend_18 { pt3dadd( -17.1834, -49.2464, -14.5516, 1.03 ) }
    dend_18 { pt3dadd( -17.3976, -49.9655, -15.0011, 1.18 ) }
    dend_18 { pt3dadd( -17.7651, -50.9728, -15.5885, 1.4 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 74/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -14.7759, -40.5634, -8.09438, 0.29 ) }
    dend_17 { pt3dadd( -16.606, -41.5221, -9.31119, 0.29 ) }
    dend_17 { pt3dadd( -17.8167, -42.1912, -10.1366, 0.37 ) }
    dend_17 { pt3dadd( -19.813, -43.3845, -11.4562, 0.66 ) }
    dend_17 { pt3dadd( -20.8815, -44.0779, -12.1215, 0.37 ) }
    dend_17 { pt3dadd( -21.9249, -44.8203, -12.716, 0.37 ) }
    dend_17 { pt3dadd( -22.9909, -45.617, -13.2877, 0.51 ) }
    dend_17 { pt3dadd( -24.0034, -46.4347, -13.8004, 0.66 ) }
    dend_17 { pt3dadd( -24.6787, -47.056, -14.1148, 0.66 ) }
    dend_17 { pt3dadd( -25.5991, -48.0326, -14.5084, 0.44 ) }
    dend_17 { pt3dadd( -27.0594, -49.7551, -15.1123, 0.44 ) }
    dend_17 { pt3dadd( -28.0999, -51.1357, -15.5088, 0.51 ) }
    dend_17 { pt3dadd( -28.973, -52.436, -15.8672, 0.51 ) }
    dend_17 { pt3dadd( -29.5921, -53.4724, -16.1298, 0.51 ) }
    dend_17 { pt3dadd( -30.1246, -54.4456, -16.3704, 0.51 ) }
    dend_17 { pt3dadd( -30.5552, -55.3085, -16.5671, 0.51 ) }
    dend_17 { pt3dadd( -31.0094, -56.2592, -16.7039, 0.51 ) }
    dend_17 { pt3dadd( -31.5534, -57.3509, -16.7851, 0.51 ) }
    dend_17 { pt3dadd( -32.3259, -58.715, -16.7981, 0.51 ) }
    dend_17 { pt3dadd( -32.9516, -59.7022, -16.8007, 1.18 ) }
    dend_17 { pt3dadd( -33.7395, -60.8643, -16.8734, 0.95 ) }
    dend_17 { pt3dadd( -34.6539, -62.1963, -17.0623, 0.37 ) }
    dend_17 { pt3dadd( -35.3885, -63.2882, -17.3327, 0.37 ) }
    dend_17 { pt3dadd( -36.1501, -64.4698, -17.7692, 0.37 ) }
    dend_17 { pt3dadd( -36.7171, -65.3976, -18.2618, 0.66 ) }
    dend_17 { pt3dadd( -37.5262, -66.8708, -19.2001, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_17 { pt3dadd( -38.0311, -67.8981, -19.9522, 0.73 ) }
    dend_17 { pt3dadd( -38.5038, -68.8158, -20.7, 0.81 ) }
    dend_17 { pt3dadd( -39.0236, -69.6908, -21.4582, 0.95 ) }
    dend_17 { pt3dadd( -39.6276, -70.5883, -22.3808, 0.81 ) }
    dend_17 { pt3dadd( -40.2093, -71.3327, -23.1871, 0.59 ) }
    dend_17 { pt3dadd( -41.0333, -72.2093, -24.1763, 0.66 ) }
    dend_17 { pt3dadd( -41.9321, -73.0184, -25.2062, 0.29 ) }
    dend_17 { pt3dadd( -42.7438, -73.635, -26.1008, 1.25 ) }
    dend_17 { pt3dadd( -44.7773, -74.9733, -28.2632, 0.59 ) }
    dend_17 { pt3dadd( -45.458, -75.3723, -28.9717, 0.37 ) }
    dend_17 { pt3dadd( -46.2992, -75.8188, -29.8073, 0.44 ) }
    dend_17 { pt3dadd( -47.4374, -76.4025, -30.8251, 1.54 ) }
    dend_17 { pt3dadd( -49.0283, -77.2633, -32.0993, 0.51 ) }
    dend_17 { pt3dadd( -49.7913, -77.6999, -32.5397, 0.37 ) }
    dend_17 { pt3dadd( -50.1671, -77.9278, -32.6876, 0.37 ) }
    dend_17 { pt3dadd( -50.6572, -78.2775, -32.8904, 0.37 ) }
    dend_17 { pt3dadd( -51.9468, -79.3687, -33.4443, 1.25 ) }
    dend_17 { pt3dadd( -52.6071, -80.0018, -33.7583, 1.54 ) }
    dend_17 { pt3dadd( -53.9759, -81.4582, -34.5359, 0.22 ) }
    dend_17 { pt3dadd( -54.9126, -82.4891, -35.1559, 0.88 ) }
    dend_17 { pt3dadd( -55.8154, -83.3979, -35.7985, 0.22 ) }
    dend_17 { pt3dadd( -56.5142, -84.0452, -36.3065, 0.22 ) }
    dend_17 { pt3dadd( -57.1171, -84.58, -36.7684, 0.22 ) }
    dend_17 { pt3dadd( -57.8778, -85.2281, -37.3319, 1.62 ) }
    dend_17 { pt3dadd( -58.4376, -85.6683, -37.7014, 1.98 ) }
    dend_17 { pt3dadd( -60.4573, -87.1073, -38.8256, 0.22 ) }
    dend_17 { pt3dadd( -61.9418, -88.1164, -39.5252, 0.73 ) }
    dend_17 { pt3dadd( -63.1098, -88.9118, -40.0136, 0.37 ) }
    dend_17 { pt3dadd( -64.2094, -89.6699, -40.4411, 0.37 ) }
    dend_17 { pt3dadd( -64.9366, -90.1922, -40.7305, 1.32 ) }
    dend_17 { pt3dadd( -65.6437, -90.7469, -40.9952, 1.32 ) }
    dend_17 { pt3dadd( -67.0081, -91.9649, -41.5669, 0.29 ) }
    dend_17 { pt3dadd( -67.8755, -92.7736, -41.9269, 0.22 ) }
    dend_17 { pt3dadd( -68.5622, -93.4451, -42.1948, 0.22 ) }
    dend_17 { pt3dadd( -69.301, -94.2441, -42.4965, 1.1 ) }
    dend_17 { pt3dadd( -69.8476, -94.9043, -42.779, 1.1 ) }
    dend_17 { pt3dadd( -71.2897, -96.8137, -43.7766, 0.73 ) }
    // Section: dend_94, id: dend_94, parent: dend_92 (entry count 37/100)
    dend_94 { pt3dclear() }
    dend_94 { pt3dadd( -3.85389, -59.7372, 12.4359, 0.81 ) }
    dend_94 { pt3dadd( -4.1046, -60.5014, 12.0641, 0.81 ) }
    dend_94 { pt3dadd( -4.28623, -61.2728, 11.6946, 0.81 ) }
    dend_94 { pt3dadd( -4.39984, -62.373, 11.1845, 0.88 ) }
    dend_94 { pt3dadd( -4.41264, -63.3286, 10.8095, 1.1 ) }
    dend_94 { pt3dadd( -4.3377, -64.3831, 10.4572, 1.1 ) }
    dend_94 { pt3dadd( -4.17303, -65.423, 10.144, 0.73 ) }
    dend_94 { pt3dadd( -3.98683, -66.0702, 9.97809, 0.95 ) }
    dend_94 { pt3dadd( -3.59907, -67.0871, 9.76361, 1.18 ) }
    dend_94 { pt3dadd( -3.16358, -67.9353, 9.61147, 1.18 ) }
    dend_94 { pt3dadd( -2.77148, -68.5635, 9.53974, 1.18 ) }
    dend_94 { pt3dadd( -2.0321, -69.6285, 9.51768, 1.18 ) }
    dend_94 { pt3dadd( -1.63164, -70.197, 9.53012, 1.54 ) }
    // Section: dend_93, id: dend_93, parent: dend_92 (entry count 50/100)
    dend_93 { pt3dclear() }
    dend_93 { pt3dadd( -3.85389, -59.7372, 12.4359, 0.88 ) }
    dend_93 { pt3dadd( -4.69913, -59.7753, 12.5454, 0.88 ) }
    dend_93 { pt3dadd( -5.97223, -59.8245, 12.7282, 0.88 ) }
    dend_93 { pt3dadd( -7.16459, -59.8594, 12.8995, 0.73 ) }
    dend_93 { pt3dadd( -8.03908, -59.8662, 13.0204, 0.59 ) }
    dend_93 { pt3dadd( -9.0189, -59.8636, 13.1467, 0.73 ) }
    dend_93 { pt3dadd( -10.6103, -59.8817, 13.3362, 0.44 ) }
    dend_93 { pt3dadd( -11.2155, -59.8977, 13.3948, 0.44 ) }
    dend_93 { pt3dadd( -11.9436, -59.954, 13.4633, 0.44 ) }
    dend_93 { pt3dadd( -12.7047, -60.0732, 13.5267, 0.44 ) }
    dend_93 { pt3dadd( -13.6413, -60.2841, 13.6023, 0.66 ) }
    dend_93 { pt3dadd( -14.7716, -60.613, 13.6797, 0.51 ) }
    dend_93 { pt3dadd( -15.7724, -60.9387, 13.7279, 0.51 ) }
    dend_93 { pt3dadd( -16.6726, -61.2624, 13.7904, 0.81 ) }
    dend_93 { pt3dadd( -17.4983, -61.6005, 13.8612, 0.51 ) }
    dend_93 { pt3dadd( -18.6176, -62.0983, 13.9681, 0.88 ) }
    dend_93 { pt3dadd( -19.8125, -62.6606, 14.0888, 0.44 ) }
    dend_93 { pt3dadd( -20.4589, -62.9781, 14.1674, 0.44 ) }
    dend_93 { pt3dadd( -21.3125, -63.4109, 14.3267, 0.44 ) }
    dend_93 { pt3dadd( -22.0513, -63.7855, 14.4972, 0.44 ) }
    dend_93 { pt3dadd( -23.1076, -64.3247, 14.7718, 0.73 ) }
    dend_93 { pt3dadd( -24.0227, -64.7686, 15.0199, 0.37 ) }
    dend_93 { pt3dadd( -25.1188, -65.2433, 15.3688, 0.88 ) }
    dend_93 { pt3dadd( -26.3118, -65.6926, 15.7652, 0.95 ) }
    dend_93 { pt3dadd( -27.2669, -66.0083, 16.0447, 0.59 ) }
    dend_93 { pt3dadd( -28.016, -66.2656, 16.2404, 0.95 ) }
    dend_93 { pt3dadd( -28.904, -66.6144, 16.4355, 0.59 ) }
    dend_93 { pt3dadd( -30.1335, -67.1804, 16.6942, 0.59 ) }
    dend_93 { pt3dadd( -30.9172, -67.6654, 16.8366, 0.59 ) }
    dend_93 { pt3dadd( -32.0415, -68.6003, 17.013, 0.95 ) }
    dend_93 { pt3dadd( -32.9654, -69.5759, 17.1811, 0.59 ) }
    dend_93 { pt3dadd( -33.5683, -70.3377, 17.2978, 0.73 ) }
    dend_93 { pt3dadd( -34.3403, -71.481, 17.4489, 1.03 ) }
    dend_93 { pt3dadd( -35.0252, -72.6674, 17.5739, 0.66 ) }
    dend_93 { pt3dadd( -35.3787, -73.3868, 17.6569, 0.66 ) }
    dend_93 { pt3dadd( -35.7188, -74.1835, 17.7568, 0.66 ) }
    dend_93 { pt3dadd( -36.0696, -75.0391, 17.8407, 0.66 ) }
    dend_93 { pt3dadd( -36.346, -75.757, 17.8831, 0.88 ) }
    dend_93 { pt3dadd( -36.6878, -76.6874, 17.9026, 0.44 ) }
    dend_93 { pt3dadd( -37.1281, -77.8988, 17.9155, 1.54 ) }
    dend_93 { pt3dadd( -37.7349, -79.6527, 17.9206, 0.51 ) }
    dend_93 { pt3dadd( -38.1286, -80.8502, 17.9444, 0.37 ) }
    dend_93 { pt3dadd( -38.6779, -82.4697, 18.0002, 0.66 ) }
    dend_93 { pt3dadd( -39.1502, -83.753, 18.0916, 0.29 ) }
    dend_93 { pt3dadd( -39.6558, -84.9589, 18.2294, 0.66 ) }
    dend_93 { pt3dadd( -40.0821, -85.9213, 18.3602, 0.66 ) }
    dend_93 { pt3dadd( -40.5511, -86.9087, 18.5271, 0.66 ) }
    dend_93 { pt3dadd( -40.8588, -87.5127, 18.6647, 0.37 ) }
    dend_93 { pt3dadd( -41.3497, -88.3455, 18.9577, 0.51 ) }
    dend_93 { pt3dadd( -41.7043, -88.8272, 19.238, 0.73 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    // Section: dend_91, id: dend_91, parent: dend_89 (entry count 0/100)
    dend_91 { pt3dclear() }
    dend_91 { pt3dadd( 9.08227, -65.6497, 10.1952, 0.66 ) }
    dend_91 { pt3dadd( 9.5488, -67.1196, 9.72848, 0.66 ) }
    dend_91 { pt3dadd( 9.66227, -67.7268, 9.5654, 0.51 ) }
    dend_91 { pt3dadd( 9.74503, -68.2043, 9.45873, 0.51 ) }
    dend_91 { pt3dadd( 9.87208, -68.702, 9.35903, 0.51 ) }
    dend_91 { pt3dadd( 10.1068, -69.405, 9.23615, 0.51 ) }
    dend_91 { pt3dadd( 10.4184, -70.187, 9.12065, 0.37 ) }
    dend_91 { pt3dadd( 10.6255, -70.6652, 9.07533, 0.37 ) }
    dend_91 { pt3dadd( 11.0198, -71.4782, 9.00994, 0.66 ) }
    dend_91 { pt3dadd( 11.7109, -72.8094, 8.90693, 0.29 ) }
    dend_91 { pt3dadd( 12.2716, -73.8281, 8.83527, 0.29 ) }
    dend_91 { pt3dadd( 12.9898, -75.0649, 8.76196, 0.66 ) }
    dend_91 { pt3dadd( 13.4552, -75.8418, 8.70251, 0.29 ) }
    dend_91 { pt3dadd( 14.0005, -76.762, 8.62171, 0.95 ) }
    dend_91 { pt3dadd( 14.5999, -77.8167, 8.52147, 0.15 ) }
    dend_91 { pt3dadd( 14.919, -78.4008, 8.46539, 0.81 ) }
    dend_91 { pt3dadd( 15.1937, -78.907, 8.40279, 0.88 ) }
    dend_91 { pt3dadd( 15.7606, -79.9538, 8.24852, 0.29 ) }
    dend_91 { pt3dadd( 16.1275, -80.6569, 8.13593, 0.29 ) }
    dend_91 { pt3dadd( 16.4875, -81.3559, 8.01812, 0.51 ) }
    dend_91 { pt3dadd( 16.9321, -82.2455, 7.87239, 0.51 ) }
    dend_91 { pt3dadd( 17.1753, -82.7605, 7.78748, 0.15 ) }
    dend_91 { pt3dadd( 17.2872, -83.0205, 7.73837, 0.15 ) }
    dend_91 { pt3dadd( 17.4821, -83.5969, 7.52962, 0.15 ) }
    dend_91 { pt3dadd( 17.5454, -83.8157, 7.38767, 0.15 ) }
    dend_91 { pt3dadd( 17.6049, -83.9974, 7.24475, 0.15 ) }
    dend_91 { pt3dadd( 17.745, -84.3667, 6.94559, 0.15 ) }
    dend_91 { pt3dadd( 18.0933, -85.1799, 6.31258, 0.22 ) }
    dend_91 { pt3dadd( 18.7621, -86.5451, 5.34694, 0.66 ) }
    dend_91 { pt3dadd( 19.2216, -87.4136, 4.79213, 0.88 ) }
    dend_91 { pt3dadd( 19.7496, -88.3673, 4.27267, 0.22 ) }
    dend_91 { pt3dadd( 20.1213, -89.0228, 3.97716, 0.22 ) }
    dend_91 { pt3dadd( 20.3099, -89.3587, 3.85127, 0.81 ) }
    dend_91 { pt3dadd( 20.9574, -90.4832, 3.56184, 0.22 ) }
    dend_91 { pt3dadd( 21.5201, -91.3781, 3.39901, 1.4 ) }
    dend_91 { pt3dadd( 22.1542, -92.3367, 3.22372, 1.4 ) }
    dend_91 { pt3dadd( 22.5769, -92.9843, 3.04868, 1.47 ) }
    dend_91 { pt3dadd( 23.4951, -94.4848, 2.47001, 0.07 ) }
    dend_91 { pt3dadd( 24.0119, -95.4115, 2.03629, 1.54 ) }
    dend_91 { pt3dadd( 24.777, -96.9329, 1.11707, 0.73 ) }
    dend_91 { pt3dadd( 25.1955, -97.8698, 0.431815, 0.66 ) }
    dend_91 { pt3dadd( 25.737, -99.2439, -0.695728, 1.32 ) }
    dend_91 { pt3dadd( 26.2085, -100.543, -1.83113, 0.88 ) }
    dend_91 { pt3dadd( 26.3572, -101.007, -2.24517, 1.54 ) }
    dend_91 { pt3dadd( 26.7288, -102.332, -3.41915, 1.47 ) }
    dend_91 { pt3dadd( 27.1615, -104.079, -4.85657, 0.29 ) }
    dend_91 { pt3dadd( 27.2874, -104.557, -5.20699, 0.29 ) }
    dend_91 { pt3dadd( 27.5879, -105.547, -5.82352, 1.1 ) }
    dend_91 { pt3dadd( 27.9818, -106.76, -6.47376, 0.44 ) }
    dend_91 { pt3dadd( 28.1687, -107.369, -6.76742, 0.88 ) }
    dend_91 { pt3dadd( 28.4031, -108.294, -7.14453, 0.88 ) }
    dend_91 { pt3dadd( 28.4979, -108.705, -7.30135, 0.88 ) }
    dend_91 { pt3dadd( 28.822, -110.07, -7.82778, 0.07 ) }
    dend_91 { pt3dadd( 28.9879, -110.692, -8.07684, 0.07 ) }
    dend_91 { pt3dadd( 29.1435, -111.239, -8.30234, 0.51 ) }
    dend_91 { pt3dadd( 29.5734, -112.692, -8.92741, 0.15 ) }
    dend_91 { pt3dadd( 29.7794, -113.347, -9.21095, 0.81 ) }
    dend_91 { pt3dadd( 29.9377, -113.784, -9.40278, 0.22 ) }
    dend_91 { pt3dadd( 30.4001, -114.794, -9.81554, 0.66 ) }
    // Section: dend_90, id: dend_90, parent: dend_89 (entry count 59/100)
    dend_90 { pt3dclear() }
    dend_90 { pt3dadd( 9.08227, -65.6497, 10.1952, 0.37 ) }
    dend_90 { pt3dadd( 9.35111, -66.3861, 10.9912, 0.37 ) }
    dend_90 { pt3dadd( 9.88501, -67.2753, 11.874, 0.37 ) }
    dend_90 { pt3dadd( 10.8075, -68.4843, 13.0652, 0.37 ) }
    dend_90 { pt3dadd( 11.1761, -68.945, 13.4912, 0.37 ) }
    dend_90 { pt3dadd( 11.472, -69.325, 13.8149, 0.37 ) }
    dend_90 { pt3dadd( 12.0168, -70.0349, 14.3824, 0.37 ) }
    dend_90 { pt3dadd( 12.8566, -71.0781, 15.1252, 0.44 ) }
    dend_90 { pt3dadd( 13.398, -71.6321, 15.5044, 0.44 ) }
    dend_90 { pt3dadd( 13.857, -72.0257, 15.8118, 0.44 ) }
    dend_90 { pt3dadd( 14.5384, -72.5768, 16.3068, 0.44 ) }
    dend_90 { pt3dadd( 14.7385, -72.7536, 16.4735, 0.66 ) }
    dend_90 { pt3dadd( 15.3241, -73.411, 17.0154, 0.66 ) }
    dend_90 { pt3dadd( 15.7449, -73.9883, 17.3872, 0.37 ) }
    dend_90 { pt3dadd( 16.2555, -74.7356, 17.7551, 0.88 ) }
    dend_90 { pt3dadd( 16.5803, -75.2791, 18.0093, 0.88 ) }
    dend_90 { pt3dadd( 16.7764, -75.7154, 18.2154, 1.18 ) }
    dend_90 { pt3dadd( 17.2201, -77.1703, 18.8549, 0.15 ) }
    dend_90 { pt3dadd( 17.4169, -78.217, 19.2601, 0.29 ) }
    dend_90 { pt3dadd( 17.5119, -79.2012, 19.6499, 1.25 ) }
    dend_90 { pt3dadd( 17.5655, -80.8247, 20.3416, 0.81 ) }
    dend_90 { pt3dadd( 17.5553, -82.4255, 21.1463, 0.81 ) }
    dend_90 { pt3dadd( 17.5374, -83.5047, 21.7512, 0.81 ) }
    dend_90 { pt3dadd( 17.5167, -84.3854, 22.3232, 0.44 ) }
    dend_90 { pt3dadd( 17.5427, -85.8276, 23.3466, 0.59 ) }
    dend_90 { pt3dadd( 17.6549, -86.678, 24.0046, 0.81 ) }
    dend_90 { pt3dadd( 18.0463, -87.9221, 25.0187, 0.37 ) }
    dend_90 { pt3dadd( 18.2991, -88.3601, 25.4077, 0.37 ) }
    dend_90 { pt3dadd( 18.9425, -89.1255, 26.1112, 0.66 ) }
    dend_90 { pt3dadd( 19.5985, -89.7296, 26.5926, 0.66 ) }
    dend_90 { pt3dadd( 20.6713, -90.5685, 27.0575, 0.22 ) }
    dend_90 { pt3dadd( 21.4749, -91.1834, 27.2847, 1.32 ) }
    dend_90 { pt3dadd( 22.3922, -91.9474, 27.4372, 0.44 ) }
    dend_90 { pt3dadd( 23.2359, -92.7902, 27.5877, 0.59 ) }
    dend_90 { pt3dadd( 24.1351, -93.9054, 27.7346, 0.44 ) }
    dend_90 { pt3dadd( 24.5139, -94.5003, 27.8154, 0.66 ) }
    dend_90 { pt3dadd( 25.2113, -95.75, 27.9726, 0.37 ) }
    dend_90 { pt3dadd( 25.6658, -96.652, 28.1258, 0.37 ) }
    dend_90 { pt3dadd( 26.2411, -97.9213, 28.437, 0.37 ) }
    dend_90 { pt3dadd( 26.5584, -98.5795, 28.6597, 0.37 ) }
    dend_90 { pt3dadd( 26.8752, -99.1078, 28.9121, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_90 { pt3dadd( 27.4622, -99.8773, 29.3094, 0.37 ) }
    dend_90 { pt3dadd( 27.8483, -100.319, 29.524, 0.73 ) }
    dend_90 { pt3dadd( 28.2112, -100.72, 29.6909, 1.1 ) }
    dend_90 { pt3dadd( 28.7695, -101.362, 29.8824, 1.4 ) }
    dend_90 { pt3dadd( 29.6947, -102.585, 30.1849, 0.51 ) }
    dend_90 { pt3dadd( 30.0006, -103.078, 30.2763, 0.51 ) }
    dend_90 { pt3dadd( 30.371, -103.974, 30.402, 0.66 ) }
    dend_90 { pt3dadd( 30.6786, -105.18, 30.5125, 0.51 ) }
    dend_90 { pt3dadd( 30.7696, -105.822, 30.5485, 0.66 ) }
    dend_90 { pt3dadd( 30.8416, -106.499, 30.5853, 0.66 ) }
    dend_90 { pt3dadd( 30.9173, -107.039, 30.6377, 0.66 ) }
    dend_90 { pt3dadd( 31.1887, -108.022, 30.9178, 0.29 ) }
    dend_90 { pt3dadd( 31.4579, -108.623, 31.2269, 0.29 ) }
    dend_90 { pt3dadd( 31.6565, -108.964, 31.4809, 0.29 ) }
    dend_90 { pt3dadd( 32.2749, -109.872, 32.2696, 0.29 ) }
    dend_90 { pt3dadd( 32.9039, -110.657, 33.0568, 0.73 ) }
    dend_90 { pt3dadd( 33.6354, -111.419, 33.9569, 0.37 ) }
    dend_90 { pt3dadd( 34.2221, -111.918, 34.6893, 0.37 ) }
    dend_90 { pt3dadd( 34.8517, -112.395, 35.5471, 0.51 ) }
    dend_90 { pt3dadd( 35.0823, -112.57, 35.9144, 0.51 ) }
    dend_90 { pt3dadd( 35.3367, -112.798, 36.4466, 0.51 ) }
    dend_90 { pt3dadd( 35.5327, -113.031, 37.0628, 0.51 ) }
    dend_90 { pt3dadd( 35.6544, -113.377, 37.9959, 0.51 ) }
    dend_90 { pt3dadd( 35.6318, -113.556, 38.4111, 0.51 ) }
    dend_90 { pt3dadd( 35.4342, -114.135, 39.622, 0.37 ) }
    dend_90 { pt3dadd( 35.1998, -114.667, 40.6212, 0.66 ) }
    dend_90 { pt3dadd( 35.0104, -115.068, 41.2353, 0.66 ) }
    dend_90 { pt3dadd( 34.7612, -115.661, 41.9531, 0.22 ) }
    dend_90 { pt3dadd( 34.6775, -115.914, 42.2039, 0.66 ) }
    // Section: dend_32, id: dend_32, parent: dend_18 (entry count 29/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -17.7651, -50.9728, -15.5885, 0.66 ) }
    dend_32 { pt3dadd( -18.3989, -51.4148, -15.8297, 0.66 ) }
    dend_32 { pt3dadd( -19.4138, -52.1718, -16.1949, 0.37 ) }
    dend_32 { pt3dadd( -20.1254, -52.7405, -16.449, 0.73 ) }
    dend_32 { pt3dadd( -21.0891, -53.5615, -16.7843, 0.51 ) }
    dend_32 { pt3dadd( -21.8159, -54.2002, -17.04, 0.51 ) }
    dend_32 { pt3dadd( -22.3969, -54.7091, -17.2498, 0.51 ) }
    dend_32 { pt3dadd( -23.058, -55.2916, -17.5286, 0.59 ) }
    dend_32 { pt3dadd( -23.6319, -55.8021, -17.7874, 0.59 ) }
    dend_32 { pt3dadd( -24.1583, -56.2939, -18.0647, 0.59 ) }
    dend_32 { pt3dadd( -25.267, -57.383, -18.687, 0.88 ) }
    dend_32 { pt3dadd( -25.9083, -57.9877, -19.0689, 0.73 ) }
    dend_32 { pt3dadd( -26.9935, -58.8824, -19.752, 0.88 ) }
    dend_32 { pt3dadd( -27.4381, -59.2075, -20.0388, 0.95 ) }
    dend_32 { pt3dadd( -28.0418, -59.6255, -20.4279, 0.95 ) }
    dend_32 { pt3dadd( -28.7919, -60.1269, -20.8875, 0.59 ) }
    dend_32 { pt3dadd( -30.2387, -61.0374, -21.713, 0.22 ) }
    dend_32 { pt3dadd( -31.4389, -61.7652, -22.2828, 0.29 ) }
    dend_32 { pt3dadd( -32.6304, -62.4763, -22.7429, 0.37 ) }
    dend_32 { pt3dadd( -33.7423, -63.1657, -23.1117, 0.37 ) }
    dend_32 { pt3dadd( -34.8149, -63.8687, -23.4042, 0.37 ) }
    dend_32 { pt3dadd( -35.9516, -64.6795, -23.657, 0.37 ) }
    dend_32 { pt3dadd( -37.2167, -65.6623, -23.8289, 0.37 ) }
    dend_32 { pt3dadd( -37.9647, -66.2675, -23.8787, 0.37 ) }
    dend_32 { pt3dadd( -38.9538, -67.0855, -23.8816, 0.37 ) }
    dend_32 { pt3dadd( -40.1641, -68.1014, -23.8036, 0.44 ) }
    dend_32 { pt3dadd( -41.079, -68.9011, -23.7549, 0.44 ) }
    dend_32 { pt3dadd( -41.6353, -69.4036, -23.7126, 0.44 ) }
    dend_32 { pt3dadd( -42.0698, -69.7785, -23.674, 0.44 ) }
    dend_32 { pt3dadd( -42.8884, -70.3999, -23.7099, 0.29 ) }
    dend_32 { pt3dadd( -43.5926, -70.8665, -23.8635, 0.29 ) }
    dend_32 { pt3dadd( -44.9493, -71.7271, -24.3723, 0.51 ) }
    dend_32 { pt3dadd( -45.7509, -72.2309, -24.7886, 0.73 ) }
    dend_32 { pt3dadd( -46.5128, -72.6882, -25.2347, 0.73 ) }
    dend_32 { pt3dadd( -49.1539, -74.1711, -26.8912, 0.73 ) }
    dend_32 { pt3dadd( -50.0037, -74.623, -27.4374, 0.73 ) }
    dend_32 { pt3dadd( -50.965, -75.1247, -28.0496, 0.73 ) }
    dend_32 { pt3dadd( -51.8266, -75.5782, -28.5404, 0.73 ) }
    dend_32 { pt3dadd( -52.6465, -76.0419, -28.9929, 0.44 ) }
    dend_32 { pt3dadd( -53.3345, -76.4778, -29.337, 0.44 ) }
    dend_32 { pt3dadd( -54.3366, -77.187, -29.7032, 0.44 ) }
    dend_32 { pt3dadd( -55.3933, -77.9742, -30.0825, 0.37 ) }
    dend_32 { pt3dadd( -56.3219, -78.7375, -30.4518, 0.95 ) }
    dend_32 { pt3dadd( -57.4296, -79.7771, -30.9111, 0.66 ) }
    dend_32 { pt3dadd( -58.3028, -80.6981, -31.3166, 0.37 ) }
    dend_32 { pt3dadd( -58.9411, -81.3998, -31.6185, 0.22 ) }
    dend_32 { pt3dadd( -59.2408, -81.7423, -31.7717, 0.22 ) }
    dend_32 { pt3dadd( -59.829, -82.4382, -32.0914, 0.22 ) }
    dend_32 { pt3dadd( -60.523, -83.1779, -32.4782, 0.37 ) }
    dend_32 { pt3dadd( -61.5933, -84.1157, -33.0728, 0.44 ) }
    dend_32 { pt3dadd( -62.1766, -84.5321, -33.4267, 0.44 ) }
    dend_32 { pt3dadd( -62.8724, -84.9505, -33.8675, 1.18 ) }
    dend_32 { pt3dadd( -63.8178, -85.4525, -34.4649, 0.73 ) }
    dend_32 { pt3dadd( -64.8772, -85.9613, -35.1763, 0.37 ) }
    dend_32 { pt3dadd( -65.6942, -86.3533, -35.7905, 0.37 ) }
    dend_32 { pt3dadd( -66.3133, -86.6724, -36.344, 0.37 ) }
    dend_32 { pt3dadd( -66.9393, -87.0073, -36.9691, 0.44 ) }
    dend_32 { pt3dadd( -67.2268, -87.1666, -37.2658, 0.44 ) }
    dend_32 { pt3dadd( -68.0566, -87.6906, -38.1796, 0.66 ) }
    dend_32 { pt3dadd( -68.6466, -88.1675, -38.8652, 1.25 ) }
    dend_32 { pt3dadd( -69.8979, -89.247, -40.2419, 0.22 ) }
    dend_32 { pt3dadd( -70.0738, -89.3889, -40.4287, 0.22 ) }
    dend_32 { pt3dadd( -70.4539, -89.6684, -40.8429, 0.22 ) }
    dend_32 { pt3dadd( -71.1841, -90.1748, -41.6575, 0.44 ) }
    dend_32 { pt3dadd( -71.7352, -90.5718, -42.3401, 0.29 ) }
    dend_32 { pt3dadd( -72.5965, -91.2622, -43.5095, 1.54 ) }
    dend_32 { pt3dadd( -73.6283, -92.2068, -45.0432, 0.22 ) }
    dend_32 { pt3dadd( -74.4277, -92.9926, -46.3504, 0.88 ) }
    dend_32 { pt3dadd( -74.9804, -93.5181, -47.2681, 0.88 ) }
    dend_32 { pt3dadd( -75.7066, -94.159, -48.4928, 0.88 ) }
    dend_32 { pt3dadd( -76.3167, -94.6622, -49.5328, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_32 { pt3dadd( -77.0976, -95.2167, -50.82, 0.59 ) }
    dend_32 { pt3dadd( -77.9675, -95.7252, -52.0842, 0.81 ) }
    dend_32 { pt3dadd( -78.5945, -96.0187, -52.8529, 0.44 ) }
    dend_32 { pt3dadd( -79.3723, -96.3312, -53.6912, 0.44 ) }
    dend_32 { pt3dadd( -80.443, -96.7213, -54.7215, 1.69 ) }
    dend_32 { pt3dadd( -82.2743, -97.3798, -56.4007, 0.37 ) }
    dend_32 { pt3dadd( -82.8544, -97.6158, -56.887, 0.07 ) }
    dend_32 { pt3dadd( -83.4583, -97.9168, -57.3591, 0.73 ) }
    dend_32 { pt3dadd( -84.4938, -98.6026, -58.1483, 0.37 ) }
    dend_32 { pt3dadd( -84.981, -99.0209, -58.4941, 0.37 ) }
    dend_32 { pt3dadd( -85.66, -99.7709, -58.9823, 0.66 ) }
    dend_32 { pt3dadd( -86.3196, -100.734, -59.6378, 0.59 ) }
    dend_32 { pt3dadd( -86.582, -101.152, -59.9601, 0.59 ) }
    dend_32 { pt3dadd( -86.9285, -101.733, -60.423, 0.59 ) }
    dend_32 { pt3dadd( -87.3595, -102.46, -61.0481, 0.59 ) }
    dend_32 { pt3dadd( -88.0115, -103.513, -62.096, 1.18 ) }
    dend_32 { pt3dadd( -89.0947, -105.141, -63.9045, 0.37 ) }
    dend_32 { pt3dadd( -89.4485, -105.646, -64.4607, 0.15 ) }
    dend_32 { pt3dadd( -89.9674, -106.362, -65.2245, 0.73 ) }
    dend_32 { pt3dadd( -90.8208, -107.485, -66.4458, 0.37 ) }
    dend_32 { pt3dadd( -91.6475, -108.557, -67.5675, 0.73 ) }
    dend_32 { pt3dadd( -92.0533, -109.099, -68.0963, 1.25 ) }
    dend_32 { pt3dadd( -92.8741, -110.193, -69.0314, 0.07 ) }
    dend_32 { pt3dadd( -93.2396, -110.693, -69.4904, 0.44 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 24/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -17.7651, -50.9728, -15.5885, 1.18 ) }
    dend_19 { pt3dadd( -17.7534, -52.3473, -16.0912, 1.18 ) }
    dend_19 { pt3dadd( -17.6451, -53.6461, -16.4952, 0.95 ) }
    dend_19 { pt3dadd( -17.486, -54.8513, -16.8287, 0.95 ) }
    dend_19 { pt3dadd( -17.3536, -55.637, -17.0144, 0.95 ) }
    dend_19 { pt3dadd( -17.2343, -56.2252, -17.1462, 0.95 ) }
    dend_19 { pt3dadd( -16.8766, -57.7191, -17.4528, 1.03 ) }
    dend_19 { pt3dadd( -16.5141, -59.0583, -17.7148, 0.95 ) }
    dend_19 { pt3dadd( -16.3316, -59.6585, -17.8219, 1.03 ) }
    dend_19 { pt3dadd( -15.8835, -60.9879, -18.0566, 0.95 ) }
    dend_19 { pt3dadd( -15.2417, -62.7745, -18.3818, 1.1 ) }
    dend_19 { pt3dadd( -14.4902, -64.8216, -18.7927, 0.95 ) }
    dend_19 { pt3dadd( -13.9262, -66.365, -19.1457, 0.95 ) }
    // Section: dend_96, id: dend_96, parent: dend_94 (entry count 37/100)
    dend_96 { pt3dclear() }
    dend_96 { pt3dadd( -1.63164, -70.197, 9.53012, 0.73 ) }
    dend_96 { pt3dadd( 0.053758, -72.1199, 10.5195, 0.73 ) }
    dend_96 { pt3dadd( 0.49171, -72.7192, 10.7405, 0.88 ) }
    dend_96 { pt3dadd( 0.80286, -73.2738, 10.8719, 0.95 ) }
    dend_96 { pt3dadd( 1.15381, -74.0164, 11.0029, 0.95 ) }
    dend_96 { pt3dadd( 1.55563, -75.1048, 11.1486, 0.95 ) }
    dend_96 { pt3dadd( 1.93017, -76.2234, 11.2842, 1.25 ) }
    dend_96 { pt3dadd( 2.11868, -76.9954, 11.3075, 1.25 ) }
    dend_96 { pt3dadd( 2.38078, -78.3616, 11.3533, 0.88 ) }
    dend_96 { pt3dadd( 2.44435, -78.7372, 11.3678, 1.1 ) }
    dend_96 { pt3dadd( 2.79305, -80.9589, 11.4664, 0.66 ) }
    dend_96 { pt3dadd( 2.92825, -81.7648, 11.5328, 0.95 ) }
    dend_96 { pt3dadd( 3.15585, -82.979, 11.6777, 0.95 ) }
    dend_96 { pt3dadd( 3.2934, -83.716, 11.7861, 0.95 ) }
    dend_96 { pt3dadd( 3.43016, -84.5112, 11.9189, 0.95 ) }
    dend_96 { pt3dadd( 3.56228, -85.5197, 12.0833, 1.32 ) }
    dend_96 { pt3dadd( 3.74706, -87.2091, 12.3523, 0.95 ) }
    dend_96 { pt3dadd( 3.82385, -87.9621, 12.4435, 0.95 ) }
    dend_96 { pt3dadd( 3.97745, -89.2638, 12.5575, 0.95 ) }
    dend_96 { pt3dadd( 4.15488, -90.4833, 12.5864, 0.95 ) }
    dend_96 { pt3dadd( 4.30376, -91.4607, 12.5879, 0.95 ) }
    dend_96 { pt3dadd( 4.55024, -93.3193, 12.5981, 0.66 ) }
    dend_96 { pt3dadd( 4.68384, -94.6612, 12.6243, 0.66 ) }
    dend_96 { pt3dadd( 4.78267, -95.937, 12.6964, 0.66 ) }
    dend_96 { pt3dadd( 4.8975, -97.4823, 12.8459, 0.81 ) }
    dend_96 { pt3dadd( 5.02764, -99.1304, 13.0782, 0.88 ) }
    dend_96 { pt3dadd( 5.12581, -100.689, 13.4151, 0.88 ) }
    dend_96 { pt3dadd( 5.1616, -102.008, 13.7808, 0.88 ) }
    dend_96 { pt3dadd( 5.16528, -102.656, 14.0061, 0.88 ) }
    dend_96 { pt3dadd( 5.13036, -103.645, 14.3728, 0.88 ) }
    dend_96 { pt3dadd( 5.01275, -105.35, 14.993, 0.88 ) }
    dend_96 { pt3dadd( 4.85811, -107.249, 15.5541, 0.88 ) }
    dend_96 { pt3dadd( 4.80422, -107.965, 15.7292, 1.18 ) }
    dend_96 { pt3dadd( 4.65946, -109.521, 16.0873, 1.18 ) }
    dend_96 { pt3dadd( 4.48209, -111.0, 16.38, 0.95 ) }
    dend_96 { pt3dadd( 4.25987, -112.436, 16.5795, 1.18 ) }
    dend_96 { pt3dadd( 4.03905, -113.813, 16.5924, 1.18 ) }
    dend_96 { pt3dadd( 3.90597, -114.919, 16.4679, 1.18 ) }
    dend_96 { pt3dadd( 3.84355, -115.749, 16.3039, 1.18 ) }
    dend_96 { pt3dadd( 3.81519, -116.86, 15.9833, 1.18 ) }
    dend_96 { pt3dadd( 3.8553, -118.342, 15.4915, 1.18 ) }
    dend_96 { pt3dadd( 4.01557, -120.611, 14.6874, 0.73 ) }
    dend_96 { pt3dadd( 4.12475, -121.486, 14.3614, 0.81 ) }
    dend_96 { pt3dadd( 4.26357, -122.356, 14.0475, 0.81 ) }
    dend_96 { pt3dadd( 4.43236, -123.318, 13.6921, 0.81 ) }
    dend_96 { pt3dadd( 4.64204, -124.383, 13.3409, 0.88 ) }
    dend_96 { pt3dadd( 4.9969, -125.91, 12.911, 0.88 ) }
    dend_96 { pt3dadd( 5.33881, -127.179, 12.6935, 1.1 ) }
    dend_96 { pt3dadd( 5.58703, -127.951, 12.5669, 1.62 ) }
    // Section: dend_95, id: dend_95, parent: dend_94 (entry count 86/100)
    dend_95 { pt3dclear() }
    dend_95 { pt3dadd( -1.63164, -70.197, 9.53012, 1.1 ) }
    dend_95 { pt3dadd( -2.20074, -70.6975, 8.97544, 1.1 ) }
    dend_95 { pt3dadd( -3.32844, -71.5594, 8.05582, 0.51 ) }
    dend_95 { pt3dadd( -4.16493, -72.1758, 7.40446, 0.37 ) }
    dend_95 { pt3dadd( -4.98329, -72.8038, 6.78431, 0.29 ) }
    dend_95 { pt3dadd( -5.58564, -73.3188, 6.29565, 0.29 ) }
    dend_95 { pt3dadd( -5.96988, -73.6874, 5.94686, 0.29 ) }
    dend_95 { pt3dadd( -6.41189, -74.1558, 5.53696, 0.44 ) }
    dend_95 { pt3dadd( -7.00646, -74.867, 4.92187, 0.51 ) }
    dend_95 { pt3dadd( -7.28066, -75.2544, 4.57424, 0.51 ) }
    dend_95 { pt3dadd( -7.79206, -76.067, 3.71561, 0.59 ) }
    dend_95 { pt3dadd( -8.10558, -76.6022, 3.11304, 0.66 ) }
    dend_95 { pt3dadd( -8.30738, -76.9552, 2.72287, 0.66 ) }
    dend_95 { pt3dadd( -8.70817, -77.6331, 1.98466, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_95 { pt3dadd( -9.17125, -78.3307, 1.21967, 0.88 ) }
    dend_95 { pt3dadd( -10.0027, -79.4613, -0.0628268, 0.44 ) }
    dend_95 { pt3dadd( -10.3579, -79.9157, -0.563096, 0.51 ) }
    dend_95 { pt3dadd( -10.8046, -80.4852, -1.15566, 0.81 ) }
    dend_95 { pt3dadd( -11.314, -81.1781, -1.8789, 0.59 ) }
    dend_95 { pt3dadd( -11.775, -81.8942, -2.62986, 0.88 ) }
    dend_95 { pt3dadd( -12.17, -82.7051, -3.53068, 0.59 ) }
    dend_95 { pt3dadd( -12.2531, -82.9829, -3.88794, 0.59 ) }
    dend_95 { pt3dadd( -12.2814, -83.1994, -4.27727, 0.37 ) }
    dend_95 { pt3dadd( -12.2362, -83.565, -5.27989, 0.37 ) }
    dend_95 { pt3dadd( -12.1109, -83.7701, -6.07542, 0.37 ) }
    dend_95 { pt3dadd( -11.8443, -83.9932, -7.06236, 0.73 ) }
    dend_95 { pt3dadd( -11.5751, -84.2273, -7.98883, 0.59 ) }
    dend_95 { pt3dadd( -11.4516, -84.4254, -8.57098, 0.59 ) }
    dend_95 { pt3dadd( -11.4275, -84.6377, -8.9595, 0.59 ) }
    dend_95 { pt3dadd( -11.5344, -85.0727, -9.33873, 0.59 ) }
    dend_95 { pt3dadd( -11.7422, -85.7415, -9.7172, 0.59 ) }
    dend_95 { pt3dadd( -12.098, -86.8512, -10.1886, 0.44 ) }
    dend_95 { pt3dadd( -12.4291, -87.8114, -10.5281, 0.29 ) }
    dend_95 { pt3dadd( -12.6889, -88.424, -10.7152, 0.29 ) }
    dend_95 { pt3dadd( -12.961, -88.9411, -10.8672, 0.29 ) }
    dend_95 { pt3dadd( -13.7438, -90.1967, -11.2241, 0.88 ) }
    dend_95 { pt3dadd( -14.1387, -90.7535, -11.3489, 0.88 ) }
    dend_95 { pt3dadd( -14.8474, -91.692, -11.5067, 0.66 ) }
    dend_95 { pt3dadd( -15.9384, -93.0107, -11.6907, 0.15 ) }
    dend_95 { pt3dadd( -16.5154, -93.6342, -11.7573, 0.88 ) }
    dend_95 { pt3dadd( -17.019, -94.1215, -11.8101, 0.51 ) }
    dend_95 { pt3dadd( -18.0435, -95.0297, -12.0057, 1.4 ) }
    dend_95 { pt3dadd( -19.0688, -95.8969, -12.3608, 0.29 ) }
    dend_95 { pt3dadd( -19.8223, -96.5182, -12.7541, 0.07 ) }
    dend_95 { pt3dadd( -20.2361, -96.8563, -13.0373, 0.07 ) }
    dend_95 { pt3dadd( -21.1538, -97.5991, -13.7513, 1.18 ) }
    dend_95 { pt3dadd( -22.6665, -98.7994, -15.0889, 0.15 ) }
    dend_95 { pt3dadd( -23.3926, -99.3599, -15.8331, 0.15 ) }
    dend_95 { pt3dadd( -23.8546, -99.7137, -16.3581, 0.15 ) }
    dend_95 { pt3dadd( -24.3231, -100.095, -16.9512, 0.15 ) }
    dend_95 { pt3dadd( -24.7142, -100.422, -17.4655, 0.59 ) }
    dend_95 { pt3dadd( -25.1823, -100.813, -18.0263, 1.03 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 38/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -13.9262, -66.365, -19.1457, 0.73 ) }
    dend_21 { pt3dadd( -13.3479, -67.5881, -19.2892, 0.73 ) }
    dend_21 { pt3dadd( -12.7688, -68.8128, -19.433, 0.81 ) }
    dend_21 { pt3dadd( -12.0509, -70.3311, -19.6111, 1.1 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 42/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -13.9262, -66.365, -19.1457, 0.37 ) }
    dend_20 { pt3dadd( -13.0016, -66.6174, -20.1186, 0.37 ) }
    dend_20 { pt3dadd( -12.1578, -66.9424, -21.0463, 0.37 ) }
    dend_20 { pt3dadd( -11.6723, -67.1962, -21.6014, 0.95 ) }
    dend_20 { pt3dadd( -9.94017, -68.3351, -23.6672, 0.66 ) }
    dend_20 { pt3dadd( -9.4388, -68.7435, -24.3242, 0.66 ) }
    dend_20 { pt3dadd( -9.20137, -68.9721, -24.6584, 0.66 ) }
    dend_20 { pt3dadd( -8.77099, -69.6098, -25.4805, 0.73 ) }
    dend_20 { pt3dadd( -8.47506, -70.2297, -26.2501, 0.51 ) }
    dend_20 { pt3dadd( -8.32524, -70.6396, -26.7143, 0.51 ) }
    dend_20 { pt3dadd( -8.16203, -71.3165, -27.317, 0.51 ) }
    dend_20 { pt3dadd( -8.09879, -71.5681, -27.5916, 0.51 ) }
    dend_20 { pt3dadd( -7.9322, -72.2394, -28.4281, 0.51 ) }
    dend_20 { pt3dadd( -7.7994, -72.8677, -29.2743, 0.66 ) }
    dend_20 { pt3dadd( -7.71344, -73.3715, -30.0226, 0.88 ) }
    dend_20 { pt3dadd( -7.6077, -74.0264, -31.0715, 1.25 ) }
    dend_20 { pt3dadd( -7.35282, -75.5901, -33.7875, 0.66 ) }
    dend_20 { pt3dadd( -7.18876, -76.3328, -35.2557, 0.66 ) }
    dend_20 { pt3dadd( -7.10403, -76.6492, -35.912, 0.66 ) }
    dend_20 { pt3dadd( -6.96228, -77.002, -36.6321, 0.66 ) }
    dend_20 { pt3dadd( -6.8947, -77.1057, -36.8363, 0.66 ) }
    dend_20 { pt3dadd( -6.5306, -77.4499, -37.4653, 0.66 ) }
    dend_20 { pt3dadd( -5.1396, -78.355, -38.7522, 0.66 ) }
    dend_20 { pt3dadd( -4.32184, -78.8096, -39.3198, 0.81 ) }
    dend_20 { pt3dadd( -2.98398, -79.5974, -40.2733, 0.29 ) }
    dend_20 { pt3dadd( -2.418, -79.9739, -40.6872, 0.29 ) }
    dend_20 { pt3dadd( -1.63557, -80.5614, -41.3467, 1.32 ) }
    dend_20 { pt3dadd( -0.950878, -81.1759, -42.099, 0.37 ) }
    dend_20 { pt3dadd( -0.640635, -81.5336, -42.5464, 1.1 ) }
    dend_20 { pt3dadd( 0.00596593, -82.6032, -43.913, 0.29 ) }
    dend_20 { pt3dadd( 0.113767, -83.0179, -44.3998, 0.66 ) }
    dend_20 { pt3dadd( 0.238202, -84.2219, -45.7612, 0.66 ) }
    dend_20 { pt3dadd( 0.188516, -85.3321, -46.8939, 0.66 ) }
    dend_20 { pt3dadd( 0.0243289, -86.4039, -47.9514, 1.32 ) }
    dend_20 { pt3dadd( -0.13774, -87.3614, -48.8185, 0.15 ) }
    dend_20 { pt3dadd( -0.177107, -88.1245, -49.2453, 0.15 ) }
    // Section: dend_100, id: dend_100, parent: dend_96 (entry count 78/100)
    dend_100 { pt3dclear() }
    dend_100 { pt3dadd( 5.58703, -127.951, 12.5669, 1.18 ) }
    dend_100 { pt3dadd( 5.73858, -129.056, 12.8453, 1.18 ) }
    dend_100 { pt3dadd( 5.97423, -130.27, 13.2292, 0.95 ) }
    dend_100 { pt3dadd( 6.10593, -130.812, 13.434, 0.95 ) }
    dend_100 { pt3dadd( 6.19942, -131.233, 13.5992, 0.95 ) }
    dend_100 { pt3dadd( 6.30524, -131.785, 13.8133, 0.95 ) }
    dend_100 { pt3dadd( 6.45564, -132.691, 14.1618, 0.95 ) }
    dend_100 { pt3dadd( 6.61163, -133.528, 14.4899, 0.95 ) }
    dend_100 { pt3dadd( 6.87902, -134.89, 15.0041, 0.73 ) }
    dend_100 { pt3dadd( 6.98211, -135.429, 15.1931, 0.81 ) }
    dend_100 { pt3dadd( 7.06894, -136.011, 15.3795, 0.88 ) }
    dend_100 { pt3dadd( 7.24962, -137.705, 15.8082, 0.66 ) }
    dend_100 { pt3dadd( 7.32137, -138.531, 15.9851, 0.66 ) }
    dend_100 { pt3dadd( 7.3838, -139.417, 16.1453, 0.73 ) }
    dend_100 { pt3dadd( 7.45566, -140.451, 16.3034, 0.88 ) }
    dend_100 { pt3dadd( 7.60715, -142.037, 16.5405, 0.95 ) }
    dend_100 { pt3dadd( 7.7156, -143.25, 16.7052, 1.03 ) }
    // Section: dend_97, id: dend_97, parent: dend_96 (entry count 95/100)
    dend_97 { pt3dclear() }
    dend_97 { pt3dadd( 5.58703, -127.951, 12.5669, 0.88 ) }
    dend_97 { pt3dadd( 6.11319, -128.781, 12.3532, 0.88 ) }
    dend_97 { pt3dadd( 7.04701, -130.536, 11.9367, 0.73 ) }
    dend_97 { pt3dadd( 7.46597, -131.641, 11.7027, 0.73 ) }
    dend_97 { pt3dadd( 7.70755, -132.444, 11.5292, 0.73 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_97 { pt3dadd( 7.89104, -133.073, 11.3634, 0.73 ) }
    dend_97 { pt3dadd( 8.02757, -133.502, 11.2374, 0.73 ) }
    dend_97 { pt3dadd( 8.33783, -134.476, 10.9298, 0.73 ) }
    dend_97 { pt3dadd( 8.81073, -135.95, 10.4666, 0.66 ) }
    dend_97 { pt3dadd( 9.05168, -136.591, 10.2651, 0.73 ) }
    dend_97 { pt3dadd( 9.73903, -138.069, 9.79396, 0.73 ) }
    dend_97 { pt3dadd( 10.2744, -139.064, 9.47476, 0.73 ) }
    dend_97 { pt3dadd( 10.848, -140.039, 9.16638, 0.44 ) }
    dend_97 { pt3dadd( 11.2944, -140.776, 8.92642, 0.44 ) }
    dend_97 { pt3dadd( 11.8072, -141.662, 8.64798, 0.44 ) }
    dend_97 { pt3dadd( 12.2451, -142.693, 8.35011, 0.95 ) }
    dend_97 { pt3dadd( 12.44, -143.785, 8.02419, 0.51 ) }
    dend_97 { pt3dadd( 12.3987, -144.415, 7.78416, 0.51 ) }
    dend_97 { pt3dadd( 12.1789, -145.346, 7.35064, 0.51 ) }
    dend_97 { pt3dadd( 11.9852, -145.919, 7.04585, 1.03 ) }
    dend_97 { pt3dadd( 11.5899, -146.924, 6.433, 0.66 ) }
    dend_97 { pt3dadd( 11.2873, -147.791, 5.82782, 0.66 ) }
    dend_97 { pt3dadd( 11.1779, -148.265, 5.46013, 0.66 ) }
    dend_97 { pt3dadd( 11.1718, -148.678, 5.12689, 0.66 ) }
    dend_97 { pt3dadd( 11.3016, -149.227, 4.69827, 0.95 ) }
    dend_97 { pt3dadd( 11.8387, -150.359, 3.91622, 0.66 ) }
    dend_97 { pt3dadd( 12.5327, -151.483, 3.29822, 0.66 ) }
    dend_97 { pt3dadd( 12.6503, -151.658, 3.22312, 0.95 ) }
    dend_97 { pt3dadd( 13.1815, -152.464, 2.96626, 0.37 ) }
    dend_97 { pt3dadd( 13.5773, -153.107, 2.81499, 0.88 ) }
    dend_97 { pt3dadd( 14.41, -154.58, 2.59473, 0.29 ) }
    dend_97 { pt3dadd( 14.8894, -155.476, 2.54546, 0.81 ) }
    dend_97 { pt3dadd( 15.201, -156.106, 2.55672, 1.1 ) }
    dend_97 { pt3dadd( 15.7798, -157.351, 2.60672, 0.51 ) }
    dend_97 { pt3dadd( 16.1301, -158.164, 2.65683, 0.66 ) }
    dend_97 { pt3dadd( 16.5043, -159.073, 2.70196, 0.66 ) }
    dend_97 { pt3dadd( 16.8164, -159.864, 2.7329, 0.37 ) }
    dend_97 { pt3dadd( 17.3039, -160.988, 2.71136, 0.29 ) }
    dend_97 { pt3dadd( 17.6648, -161.708, 2.66813, 0.29 ) }
    dend_97 { pt3dadd( 18.1565, -162.521, 2.58742, 0.59 ) }
    dend_97 { pt3dadd( 19.3118, -164.115, 2.37488, 0.37 ) }
    dend_97 { pt3dadd( 19.9342, -164.878, 2.23638, 0.37 ) }
    dend_97 { pt3dadd( 20.79, -165.862, 2.02094, 0.66 ) }
    dend_97 { pt3dadd( 21.5635, -166.758, 1.81406, 0.66 ) }
    dend_97 { pt3dadd( 22.2831, -167.575, 1.61883, 0.29 ) }
    dend_97 { pt3dadd( 22.8082, -168.139, 1.48199, 0.29 ) }
    dend_97 { pt3dadd( 23.6074, -168.908, 1.30792, 1.32 ) }
    dend_97 { pt3dadd( 24.404, -169.659, 1.16175, 0.81 ) }
    dend_97 { pt3dadd( 25.336, -170.68, 1.07194, 1.4 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 44/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -12.0509, -70.3311, -19.6111, 1.18 ) }
    dend_23 { pt3dadd( -11.8625, -71.2618, -19.6751, 1.18 ) }
    dend_23 { pt3dadd( -11.4647, -72.8286, -19.717, 0.95 ) }
    dend_23 { pt3dadd( -11.2802, -73.5024, -19.7372, 0.95 ) }
    dend_23 { pt3dadd( -11.1253, -74.0946, -19.7552, 0.95 ) }
    dend_23 { pt3dadd( -10.8914, -75.1517, -19.7862, 0.66 ) }
    dend_23 { pt3dadd( -10.7583, -75.8746, -19.8008, 0.66 ) }
    dend_23 { pt3dadd( -10.5942, -77.0378, -19.8055, 1.25 ) }
    dend_23 { pt3dadd( -10.4274, -78.1746, -19.7875, 1.25 ) }
    dend_23 { pt3dadd( -10.3087, -78.7815, -19.7743, 1.25 ) }
    dend_23 { pt3dadd( -10.0664, -79.7303, -19.7498, 0.88 ) }
    dend_23 { pt3dadd( -9.86256, -80.3445, -19.7323, 0.88 ) }
    dend_23 { pt3dadd( -9.53433, -81.1112, -19.7117, 0.88 ) }
    dend_23 { pt3dadd( -8.95957, -82.2574, -19.7036, 0.88 ) }
    dend_23 { pt3dadd( -8.46898, -83.144, -19.6995, 0.88 ) }
    dend_23 { pt3dadd( -8.01601, -83.969, -19.691, 0.95 ) }
    dend_23 { pt3dadd( -7.60181, -84.8211, -19.6541, 0.95 ) }
    dend_23 { pt3dadd( -6.91184, -86.5486, -19.5314, 0.59 ) }
    dend_23 { pt3dadd( -6.5545, -87.773, -19.4131, 0.59 ) }
    dend_23 { pt3dadd( -6.29796, -89.1435, -19.2499, 0.88 ) }
    dend_23 { pt3dadd( -6.16121, -90.4677, -19.09, 0.59 ) }
    dend_23 { pt3dadd( -6.08081, -92.2541, -18.9094, 0.88 ) }
    dend_23 { pt3dadd( -6.07745, -93.0588, -18.8406, 0.88 ) }
    dend_23 { pt3dadd( -6.11562, -94.5104, -18.7404, 0.95 ) }
    dend_23 { pt3dadd( -6.18413, -96.7969, -18.6767, 1.54 ) }
    dend_23 { pt3dadd( -6.17798, -98.3929, -18.7034, 0.44 ) }
    dend_23 { pt3dadd( -6.10345, -99.5505, -18.7812, 0.44 ) }
    dend_23 { pt3dadd( -5.99098, -100.382, -18.8623, 0.73 ) }
    dend_23 { pt3dadd( -5.79622, -101.489, -18.9541, 0.59 ) }
    dend_23 { pt3dadd( -5.5749, -102.658, -19.0098, 0.73 ) }
    dend_23 { pt3dadd( -5.24766, -104.116, -19.0304, 1.03 ) }
    dend_23 { pt3dadd( -4.96082, -105.083, -19.0228, 0.73 ) }
    dend_23 { pt3dadd( -4.69956, -105.819, -18.9755, 0.95 ) }
    dend_23 { pt3dadd( -4.26374, -106.887, -18.8177, 0.88 ) }
    dend_23 { pt3dadd( -3.54976, -108.351, -18.4187, 0.81 ) }
    dend_23 { pt3dadd( -3.0856, -109.152, -18.1035, 0.73 ) }
    dend_23 { pt3dadd( -2.32876, -110.291, -17.5643, 0.81 ) }
    dend_23 { pt3dadd( -1.62196, -111.259, -17.0339, 0.81 ) }
    dend_23 { pt3dadd( -0.732351, -112.448, -16.433, 0.88 ) }
    dend_23 { pt3dadd( 0.17105, -113.525, -15.8311, 0.73 ) }
    dend_23 { pt3dadd( 0.760993, -114.159, -15.4189, 0.73 ) }
    dend_23 { pt3dadd( 1.49759, -114.967, -14.8352, 0.73 ) }
    dend_23 { pt3dadd( 2.33469, -115.934, -14.1008, 0.88 ) }
    dend_23 { pt3dadd( 3.4279, -117.24, -13.3251, 1.03 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 88/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -12.0509, -70.3311, -19.6111, 0.59 ) }
    dend_22 { pt3dadd( -12.7815, -71.6784, -21.5437, 0.59 ) }
    dend_22 { pt3dadd( -13.2784, -72.5041, -22.7574, 0.59 ) }
    dend_22 { pt3dadd( -13.6083, -72.9453, -23.4378, 0.59 ) }
    dend_22 { pt3dadd( -13.8121, -73.164, -23.7921, 0.88 ) }
    dend_22 { pt3dadd( -14.3606, -73.6618, -24.6471, 0.59 ) }
    dend_22 { pt3dadd( -15.0489, -74.2518, -25.6766, 0.66 ) }
    dend_22 { pt3dadd( -15.6921, -74.802, -26.5119, 0.44 ) }
    dend_22 { pt3dadd( -16.3, -75.3422, -27.2377, 0.95 ) }
    dend_22 { pt3dadd( -17.0052, -76.0087, -28.0394, 0.44 ) }
    dend_22 { pt3dadd( -17.7665, -76.7593, -28.8703, 0.51 ) }
    dend_22 { pt3dadd( -18.1287, -77.1131, -29.2449, 0.51 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_22 { pt3dadd( -18.7347, -77.7616, -29.8057, 0.81 ) }
    dend_22 { pt3dadd( -19.4409, -78.5997, -30.3939, 0.37 ) }
    dend_22 { pt3dadd( -19.7906, -79.0406, -30.6753, 0.37 ) }
    dend_22 { pt3dadd( -20.1077, -79.4465, -30.9119, 0.37 ) }
    dend_22 { pt3dadd( -20.6954, -80.1574, -31.342, 0.37 ) }
    dend_22 { pt3dadd( -21.2146, -80.7286, -31.7816, 1.1 ) }
    dend_22 { pt3dadd( -22.0322, -81.61, -32.6813, 0.73 ) }
    dend_22 { pt3dadd( -22.4508, -82.0692, -33.2482, 0.44 ) }
    dend_22 { pt3dadd( -22.941, -82.6044, -34.0417, 0.59 ) }
    dend_22 { pt3dadd( -23.5298, -83.2511, -35.1502, 0.66 ) }
    dend_22 { pt3dadd( -24.1761, -84.0155, -36.5698, 0.88 ) }
    dend_22 { pt3dadd( -24.7183, -84.7285, -38.0387, 1.03 ) }
    dend_22 { pt3dadd( -25.0411, -85.2432, -39.2452, 0.73 ) }
    dend_22 { pt3dadd( -25.286, -85.6974, -40.4801, 0.73 ) }
    dend_22 { pt3dadd( -25.4135, -85.9906, -41.4717, 0.73 ) }
    dend_22 { pt3dadd( -25.4604, -86.1621, -42.1748, 0.73 ) }
    dend_22 { pt3dadd( -25.469, -86.3861, -43.1831, 0.73 ) }
    dend_22 { pt3dadd( -25.3791, -86.6518, -44.2691, 0.73 ) }
    dend_22 { pt3dadd( -25.2493, -86.8469, -44.8319, 0.73 ) }
    dend_22 { pt3dadd( -25.0864, -87.1114, -45.3067, 0.73 ) }
    dend_22 { pt3dadd( -24.9007, -87.6338, -45.9594, 0.59 ) }
    dend_22 { pt3dadd( -24.9064, -87.884, -46.1849, 0.59 ) }
    dend_22 { pt3dadd( -25.2286, -88.849, -46.8872, 0.44 ) }
    dend_22 { pt3dadd( -25.6194, -89.5194, -47.3299, 0.37 ) }
    dend_22 { pt3dadd( -25.8473, -89.8651, -47.6098, 0.37 ) }
    dend_22 { pt3dadd( -26.4057, -90.7281, -48.3573, 0.44 ) }
    dend_22 { pt3dadd( -26.774, -91.2956, -48.9549, 0.81 ) }
    dend_22 { pt3dadd( -27.2608, -91.9866, -49.8843, 0.81 ) }
    dend_22 { pt3dadd( -27.8837, -92.7462, -51.2131, 0.95 ) }
    dend_22 { pt3dadd( -28.7194, -93.747, -53.1053, 0.66 ) }
    dend_22 { pt3dadd( -28.974, -94.0575, -53.6828, 0.66 ) }
    dend_22 { pt3dadd( -29.4853, -94.7526, -54.8899, 0.66 ) }
    dend_22 { pt3dadd( -29.8024, -95.1607, -55.5283, 0.66 ) }
    dend_22 { pt3dadd( -30.7597, -96.2609, -56.8994, 0.44 ) }
    dend_22 { pt3dadd( -31.661, -97.2149, -57.7393, 0.44 ) }
    dend_22 { pt3dadd( -32.2771, -97.8333, -58.1063, 0.44 ) }
    dend_22 { pt3dadd( -32.7381, -98.2824, -58.3398, 1.03 ) }
    dend_22 { pt3dadd( -33.7826, -99.3047, -58.7847, 0.37 ) }
    dend_22 { pt3dadd( -34.9773, -100.473, -59.2757, 0.51 ) }
    dend_22 { pt3dadd( -35.8761, -101.339, -59.6911, 0.44 ) }
    dend_22 { pt3dadd( -36.6401, -102.087, -60.1193, 0.44 ) }
    dend_22 { pt3dadd( -37.6079, -103.043, -60.7537, 0.44 ) }
    dend_22 { pt3dadd( -38.4002, -103.812, -61.3711, 0.44 ) }
    dend_22 { pt3dadd( -39.1039, -104.497, -62.008, 0.95 ) }
    dend_22 { pt3dadd( -39.8993, -105.227, -62.7881, 1.18 ) }
    dend_22 { pt3dadd( -40.4865, -105.741, -63.3589, 0.95 ) }
    dend_22 { pt3dadd( -41.2058, -106.35, -64.0202, 0.37 ) }
    dend_22 { pt3dadd( -42.0672, -107.096, -64.7773, 0.81 ) }
    dend_22 { pt3dadd( -42.5421, -107.512, -65.1732, 0.81 ) }
    dend_22 { pt3dadd( -43.1291, -108.116, -65.6604, 0.73 ) }
    dend_22 { pt3dadd( -43.8454, -109.108, -66.3844, 0.15 ) }
    dend_22 { pt3dadd( -44.0715, -109.607, -66.7797, 0.15 ) }
    dend_22 { pt3dadd( -44.12, -110.084, -67.1817, 0.15 ) }
    dend_22 { pt3dadd( -44.1109, -110.391, -67.437, 0.15 ) }
    dend_22 { pt3dadd( -43.921, -111.591, -68.5086, 1.62 ) }
    dend_22 { pt3dadd( -43.4897, -112.968, -69.8818, 0.07 ) }
    dend_22 { pt3dadd( -43.0073, -113.974, -70.9722, 0.88 ) }
    dend_22 { pt3dadd( -42.4536, -114.922, -72.0287, 0.29 ) }
    // Section: dend_102, id: dend_102, parent: dend_100 (entry count 58/100)
    dend_102 { pt3dclear() }
    dend_102 { pt3dadd( 7.7156, -143.25, 16.7052, 0.37 ) }
    dend_102 { pt3dadd( 8.13559, -144.288, 16.7692, 0.37 ) }
    dend_102 { pt3dadd( 8.54502, -145.395, 16.8452, 0.37 ) }
    dend_102 { pt3dadd( 9.00726, -146.693, 16.9356, 0.37 ) }
    dend_102 { pt3dadd( 9.58734, -148.243, 17.0377, 0.51 ) }
    dend_102 { pt3dadd( 10.2163, -149.665, 17.0953, 0.66 ) }
    dend_102 { pt3dadd( 10.941, -151.119, 17.1282, 0.66 ) }
    dend_102 { pt3dadd( 11.3821, -151.925, 17.1298, 0.66 ) }
    dend_102 { pt3dadd( 11.7971, -152.584, 17.1144, 0.66 ) }
    dend_102 { pt3dadd( 12.3285, -153.279, 17.0649, 0.66 ) }
    dend_102 { pt3dadd( 13.6018, -154.7, 16.8848, 0.37 ) }
    dend_102 { pt3dadd( 14.2276, -155.341, 16.7752, 0.37 ) }
    dend_102 { pt3dadd( 14.9119, -155.988, 16.6361, 1.1 ) }
    dend_102 { pt3dadd( 15.3756, -156.414, 16.5397, 1.1 ) }
    dend_102 { pt3dadd( 16.6429, -157.614, 16.2685, 0.44 ) }
    dend_102 { pt3dadd( 17.6275, -158.655, 16.054, 0.44 ) }
    dend_102 { pt3dadd( 18.4435, -159.676, 15.8828, 0.66 ) }
    // Section: dend_101, id: dend_101, parent: dend_100 (entry count 75/100)
    dend_101 { pt3dclear() }
    dend_101 { pt3dadd( 7.7156, -143.25, 16.7052, 1.1 ) }
    dend_101 { pt3dadd( 7.74909, -143.859, 17.1524, 1.1 ) }
    dend_101 { pt3dadd( 7.69972, -144.898, 17.8216, 0.95 ) }
    dend_101 { pt3dadd( 7.60733, -146.206, 18.5792, 0.95 ) }
    dend_101 { pt3dadd( 7.57811, -147.006, 19.0413, 0.95 ) }
    dend_101 { pt3dadd( 7.59094, -147.634, 19.4524, 0.95 ) }
    dend_101 { pt3dadd( 7.63766, -148.642, 20.1322, 0.81 ) }
    dend_101 { pt3dadd( 7.72288, -150.06, 21.0609, 0.88 ) }
    dend_101 { pt3dadd( 7.75238, -150.66, 21.4221, 0.88 ) }
    dend_101 { pt3dadd( 7.83006, -151.817, 22.0637, 1.1 ) }
    dend_101 { pt3dadd( 8.14582, -153.725, 23.0354, 0.88 ) }
    dend_101 { pt3dadd( 8.30676, -154.299, 23.351, 0.81 ) }
    dend_101 { pt3dadd( 8.59091, -155.023, 23.7483, 0.95 ) }
    dend_101 { pt3dadd( 8.97424, -155.891, 24.2179, 0.73 ) }
    dend_101 { pt3dadd( 9.22866, -156.513, 24.5495, 0.73 ) }
    dend_101 { pt3dadd( 9.79495, -158.2, 25.3669, 0.22 ) }
    dend_101 { pt3dadd( 10.274, -159.961, 26.1556, 0.88 ) }
    dend_101 { pt3dadd( 10.4997, -161.006, 26.6455, 0.59 ) }
    dend_101 { pt3dadd( 10.7127, -162.228, 27.2425, 0.59 ) }
    dend_101 { pt3dadd( 10.808, -162.925, 27.6174, 0.59 ) }
    dend_101 { pt3dadd( 10.8893, -163.771, 28.151, 0.73 ) }
    dend_101 { pt3dadd( 10.9308, -164.23, 28.5054, 0.73 ) }
    dend_101 { pt3dadd( 11.1916, -164.894, 29.0308, 0.95 ) }
    dend_101 { pt3dadd( 11.4235, -165.171, 29.2954, 1.03 ) }
    dend_101 { pt3dadd( 12.3046, -165.938, 30.0251, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_101 { pt3dadd( 13.3239, -166.764, 30.8176, 1.03 ) }
    dend_101 { pt3dadd( 13.8919, -167.273, 31.3736, 1.03 ) }
    dend_101 { pt3dadd( 14.8857, -168.288, 32.5552, 0.29 ) }
    dend_101 { pt3dadd( 15.3404, -168.853, 33.2369, 0.29 ) }
    dend_101 { pt3dadd( 15.6063, -169.374, 33.8738, 0.66 ) }
    dend_101 { pt3dadd( 15.7579, -170.145, 34.8291, 0.81 ) }
    dend_101 { pt3dadd( 15.5949, -171.795, 37.1659, 0.51 ) }
    dend_101 { pt3dadd( 15.3956, -172.208, 37.9341, 0.51 ) }
    dend_101 { pt3dadd( 15.1239, -172.401, 38.5877, 0.73 ) }
    dend_101 { pt3dadd( 14.506, -172.536, 39.7531, 0.73 ) }
    dend_101 { pt3dadd( 14.1285, -172.529, 40.3856, 0.73 ) }
    dend_101 { pt3dadd( 13.6709, -172.388, 41.1599, 0.73 ) }
    dend_101 { pt3dadd( 13.444, -172.198, 41.6633, 0.73 ) }
    dend_101 { pt3dadd( 13.241, -171.791, 42.9341, 0.73 ) }
    dend_101 { pt3dadd( 13.3746, -171.715, 43.459, 0.73 ) }
    dend_101 { pt3dadd( 14.1326, -171.927, 44.1986, 0.73 ) }
    dend_101 { pt3dadd( 14.7812, -172.187, 44.6623, 0.73 ) }
    dend_101 { pt3dadd( 15.3337, -172.419, 44.9495, 0.73 ) }
    dend_101 { pt3dadd( 16.4713, -172.84, 45.445, 0.37 ) }
    dend_101 { pt3dadd( 17.2206, -173.077, 45.7065, 0.37 ) }
    dend_101 { pt3dadd( 18.2762, -173.344, 46.0248, 0.95 ) }
    dend_101 { pt3dadd( 19.1499, -173.506, 46.2388, 0.95 ) }
    dend_101 { pt3dadd( 20.2938, -173.671, 46.4816, 0.59 ) }
    dend_101 { pt3dadd( 21.0914, -173.713, 46.629, 0.29 ) }
    dend_101 { pt3dadd( 21.4679, -173.698, 46.6924, 0.15 ) }
    dend_101 { pt3dadd( 21.8472, -173.649, 46.7357, 0.15 ) }
    dend_101 { pt3dadd( 22.5707, -173.481, 46.7813, 0.15 ) }
    dend_101 { pt3dadd( 23.18, -173.312, 46.7665, 0.15 ) }
    dend_101 { pt3dadd( 23.9993, -173.101, 46.7377, 0.15 ) }
    // Section: dend_99, id: dend_99, parent: dend_97 (entry count 29/100)
    dend_99 { pt3dclear() }
    dend_99 { pt3dadd( 25.336, -170.68, 1.07194, 0.73 ) }
    dend_99 { pt3dadd( 26.0726, -171.645, -0.101554, 0.73 ) }
    dend_99 { pt3dadd( 26.6011, -172.259, -0.916447, 0.44 ) }
    dend_99 { pt3dadd( 27.2379, -172.898, -1.83149, 0.37 ) }
    dend_99 { pt3dadd( 27.7898, -173.388, -2.57918, 1.18 ) }
    dend_99 { pt3dadd( 28.511, -173.945, -3.46346, 0.44 ) }
    dend_99 { pt3dadd( 28.8614, -174.183, -3.86296, 0.73 ) }
    dend_99 { pt3dadd( 29.8132, -174.752, -4.74322, 0.29 ) }
    dend_99 { pt3dadd( 30.2007, -174.948, -5.05414, 0.29 ) }
    dend_99 { pt3dadd( 30.4265, -175.053, -5.2316, 0.73 ) }
    dend_99 { pt3dadd( 30.9842, -175.28, -5.68685, 0.29 ) }
    dend_99 { pt3dadd( 31.5914, -175.512, -6.21441, 0.66 ) }
    dend_99 { pt3dadd( 32.1567, -175.748, -6.71852, 1.03 ) }
    dend_99 { pt3dadd( 33.1798, -176.214, -7.60299, 1.18 ) }
    dend_99 { pt3dadd( 34.1335, -176.675, -8.451, 0.29 ) }
    dend_99 { pt3dadd( 34.9007, -177.05, -9.11917, 0.29 ) }
    dend_99 { pt3dadd( 35.3975, -177.292, -9.5666, 0.29 ) }
    dend_99 { pt3dadd( 35.696, -177.428, -9.8272, 0.95 ) }
    dend_99 { pt3dadd( 36.2292, -177.635, -10.283, 0.95 ) }
    dend_99 { pt3dadd( 37.2276, -177.894, -10.957, 0.22 ) }
    dend_99 { pt3dadd( 37.7793, -178.008, -11.2418, 0.66 ) }
    // Section: dend_98, id: dend_98, parent: dend_97 (entry count 50/100)
    dend_98 { pt3dclear() }
    dend_98 { pt3dadd( 25.336, -170.68, 1.07194, 0.59 ) }
    dend_98 { pt3dadd( 25.4874, -171.717, 0.59166, 0.59 ) }
    dend_98 { pt3dadd( 25.6759, -173.137, -0.00174422, 0.44 ) }
    dend_98 { pt3dadd( 25.7929, -173.95, -0.310649, 0.44 ) }
    dend_98 { pt3dadd( 25.9345, -174.8, -0.60798, 0.44 ) }
    dend_98 { pt3dadd( 26.1209, -175.692, -0.910472, 0.44 ) }
    dend_98 { pt3dadd( 26.3054, -176.446, -1.15739, 0.44 ) }
    dend_98 { pt3dadd( 26.4681, -177.021, -1.2995, 0.95 ) }
    dend_98 { pt3dadd( 26.6349, -177.568, -1.40209, 0.95 ) }
    dend_98 { pt3dadd( 26.8151, -178.058, -1.49258, 0.95 ) }
    dend_98 { pt3dadd( 27.2725, -178.988, -1.64974, 0.22 ) }
    dend_98 { pt3dadd( 27.5153, -179.351, -1.70611, 0.22 ) }
    dend_98 { pt3dadd( 27.9856, -179.914, -1.80387, 0.22 ) }
    dend_98 { pt3dadd( 28.4119, -180.35, -1.88729, 0.22 ) }
    dend_98 { pt3dadd( 28.7973, -180.716, -1.98794, 0.88 ) }
    dend_98 { pt3dadd( 29.3782, -181.252, -2.17458, 0.88 ) }
    dend_98 { pt3dadd( 30.0297, -181.826, -2.39484, 0.51 ) }
    dend_98 { pt3dadd( 30.4254, -182.18, -2.53521, 0.81 ) }
    dend_98 { pt3dadd( 31.0064, -182.74, -2.76738, 0.81 ) }
    dend_98 { pt3dadd( 31.8697, -183.68, -3.16952, 0.37 ) }
    dend_98 { pt3dadd( 32.4984, -184.479, -3.49034, 0.22 ) }
    dend_98 { pt3dadd( 32.9112, -185.08, -3.73371, 0.22 ) }
    dend_98 { pt3dadd( 33.4061, -185.859, -4.03878, 0.88 ) }
    dend_98 { pt3dadd( 34.0121, -186.867, -4.41668, 0.29 ) }
    dend_98 { pt3dadd( 34.341, -187.451, -4.61978, 0.29 ) }
    dend_98 { pt3dadd( 34.8559, -188.454, -4.90887, 0.66 ) }
    dend_98 { pt3dadd( 35.1481, -189.045, -5.07629, 0.29 ) }
    dend_98 { pt3dadd( 35.4878, -189.734, -5.271, 0.59 ) }
    dend_98 { pt3dadd( 35.8554, -190.43, -5.45917, 0.15 ) }
    dend_98 { pt3dadd( 36.1175, -190.89, -5.55941, 0.15 ) }
    dend_98 { pt3dadd( 36.4897, -191.551, -5.6841, 0.44 ) }
    dend_98 { pt3dadd( 36.808, -192.164, -5.78939, 0.07 ) }
    dend_98 { pt3dadd( 36.9961, -192.56, -5.80358, 0.07 ) }
    dend_98 { pt3dadd( 37.1063, -192.806, -5.79617, 0.07 ) }
    dend_98 { pt3dadd( 37.3807, -193.413, -5.74269, 0.66 ) }
    dend_98 { pt3dadd( 37.7201, -194.176, -5.67465, 0.88 ) }
    dend_98 { pt3dadd( 37.9743, -194.72, -5.62588, 0.88 ) }
    dend_98 { pt3dadd( 38.6555, -196.222, -5.5785, 0.29 ) }
    dend_98 { pt3dadd( 38.7798, -196.468, -5.58321, 0.29 ) }
    dend_98 { pt3dadd( 39.3173, -197.403, -5.63916, 0.88 ) }
    dend_98 { pt3dadd( 39.8891, -198.294, -5.72461, 0.07 ) }
    dend_98 { pt3dadd( 40.4851, -199.168, -5.88405, 1.18 ) }
    dend_98 { pt3dadd( 41.2985, -200.345, -6.20138, 0.07 ) }
    dend_98 { pt3dadd( 41.84, -201.132, -6.48181, 0.07 ) }
    dend_98 { pt3dadd( 42.3384, -201.884, -6.74944, 1.18 ) }
    dend_98 { pt3dadd( 42.7062, -202.455, -6.95082, 1.18 ) }
    dend_98 { pt3dadd( 43.3043, -203.467, -7.2668, 0.29 ) }
    dend_98 { pt3dadd( 43.6835, -204.214, -7.51674, 0.66 ) }
    dend_98 { pt3dadd( 43.857, -204.638, -7.65448, 0.66 ) }
    dend_98 { pt3dadd( 44.0648, -205.382, -7.90762, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    dend_98 { pt3dadd( 44.1325, -205.733, -8.02748, 0.15 ) }
    dend_98 { pt3dadd( 44.227, -206.37, -8.22769, 0.81 ) }
    dend_98 { pt3dadd( 44.3815, -207.559, -8.54604, 0.37 ) }
    dend_98 { pt3dadd( 44.4284, -208.175, -8.73898, 0.37 ) }
    dend_98 { pt3dadd( 44.4326, -208.669, -8.91136, 0.37 ) }
    dend_98 { pt3dadd( 44.4003, -209.088, -9.07551, 0.37 ) }
    dend_98 { pt3dadd( 44.3393, -209.557, -9.26316, 0.37 ) }
    // Section: dend_31, id: dend_31, parent: dend_23 (entry count 7/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 3.4279, -117.24, -13.3251, 0.66 ) }
    dend_31 { pt3dadd( 3.92798, -118.274, -13.1005, 0.66 ) }
    dend_31 { pt3dadd( 4.80769, -120.216, -12.7331, 0.44 ) }
    dend_31 { pt3dadd( 5.27032, -121.328, -12.5343, 0.44 ) }
    dend_31 { pt3dadd( 5.71666, -122.489, -12.4334, 0.44 ) }
    dend_31 { pt3dadd( 6.16133, -123.753, -12.4301, 0.59 ) }
    dend_31 { pt3dadd( 6.48484, -124.792, -12.5216, 0.59 ) }
    dend_31 { pt3dadd( 6.65321, -125.432, -12.6648, 0.59 ) }
    dend_31 { pt3dadd( 6.92477, -126.623, -13.0708, 0.81 ) }
    dend_31 { pt3dadd( 7.37657, -128.462, -13.789, 0.81 ) }
    dend_31 { pt3dadd( 7.64915, -129.356, -14.1947, 0.88 ) }
    dend_31 { pt3dadd( 8.16468, -130.775, -14.9347, 0.44 ) }
    dend_31 { pt3dadd( 8.39685, -131.324, -15.2319, 0.44 ) }
    dend_31 { pt3dadd( 8.73023, -132.007, -15.5789, 0.59 ) }
    dend_31 { pt3dadd( 9.45622, -133.253, -16.1203, 0.44 ) }
    dend_31 { pt3dadd( 10.0952, -134.179, -16.3352, 0.44 ) }
    dend_31 { pt3dadd( 10.7991, -135.037, -16.4147, 0.66 ) }
    dend_31 { pt3dadd( 11.274, -135.548, -16.3888, 0.66 ) }
    dend_31 { pt3dadd( 11.7265, -136.062, -16.3203, 0.66 ) }
    dend_31 { pt3dadd( 12.2058, -136.707, -16.1924, 0.66 ) }
    dend_31 { pt3dadd( 12.6718, -137.456, -16.0128, 0.66 ) }
    dend_31 { pt3dadd( 13.0332, -138.049, -15.8611, 0.66 ) }
    dend_31 { pt3dadd( 13.2794, -138.471, -15.7461, 0.66 ) }
    dend_31 { pt3dadd( 13.9543, -139.736, -15.44, 0.44 ) }
    dend_31 { pt3dadd( 14.4817, -140.779, -15.1971, 0.44 ) }
    dend_31 { pt3dadd( 14.9237, -141.725, -14.9496, 0.44 ) }
    dend_31 { pt3dadd( 15.2901, -142.625, -14.6665, 0.44 ) }
    dend_31 { pt3dadd( 15.892, -144.312, -14.0566, 0.51 ) }
    dend_31 { pt3dadd( 16.1337, -145.067, -13.7352, 0.51 ) }
    dend_31 { pt3dadd( 16.5089, -146.354, -13.1244, 0.66 ) }
    dend_31 { pt3dadd( 16.8574, -147.783, -12.4207, 0.73 ) }
    dend_31 { pt3dadd( 17.1912, -149.56, -11.5517, 0.44 ) }
    dend_31 { pt3dadd( 17.3178, -150.587, -11.0832, 0.59 ) }
    dend_31 { pt3dadd( 17.4396, -152.195, -10.4512, 0.59 ) }
    dend_31 { pt3dadd( 17.4779, -152.898, -10.2001, 0.59 ) }
    dend_31 { pt3dadd( 17.5454, -154.297, -9.762, 0.37 ) }
    dend_31 { pt3dadd( 17.5951, -154.954, -9.56053, 0.51 ) }
    dend_31 { pt3dadd( 17.8002, -156.718, -9.04389, 0.22 ) }
    dend_31 { pt3dadd( 18.0113, -158.163, -8.63555, 0.37 ) }
    dend_31 { pt3dadd( 18.331, -159.917, -8.14818, 0.37 ) }
    dend_31 { pt3dadd( 18.5174, -160.763, -7.88727, 0.37 ) }
    dend_31 { pt3dadd( 18.9401, -162.363, -7.42649, 0.29 ) }
    dend_31 { pt3dadd( 19.1929, -163.227, -7.19311, 0.29 ) }
    dend_31 { pt3dadd( 19.6049, -164.519, -6.83773, 0.59 ) }
    dend_31 { pt3dadd( 20.0054, -165.776, -6.52402, 0.44 ) }
    dend_31 { pt3dadd( 20.3314, -166.898, -6.26373, 0.73 ) }
    dend_31 { pt3dadd( 20.7031, -168.408, -5.87989, 1.1 ) }
    dend_31 { pt3dadd( 21.0822, -170.191, -5.4297, 0.15 ) }
    dend_31 { pt3dadd( 21.3212, -171.489, -5.05724, 0.15 ) }
    dend_31 { pt3dadd( 21.4711, -172.462, -4.78361, 1.25 ) }
    dend_31 { pt3dadd( 21.7, -174.465, -4.27549, 0.15 ) }
    dend_31 { pt3dadd( 21.8057, -175.73, -4.00998, 0.22 ) }
    dend_31 { pt3dadd( 21.8677, -176.855, -3.81416, 0.95 ) }
    dend_31 { pt3dadd( 21.9111, -178.107, -3.7119, 0.22 ) }
    dend_31 { pt3dadd( 21.9372, -178.966, -3.72535, 0.22 ) }
    dend_31 { pt3dadd( 21.9966, -180.168, -3.77259, 0.37 ) }
    dend_31 { pt3dadd( 22.0962, -181.638, -3.8944, 0.44 ) }
    dend_31 { pt3dadd( 22.2219, -183.078, -3.98909, 0.81 ) }
    dend_31 { pt3dadd( 22.3478, -184.712, -4.0301, 0.37 ) }
    dend_31 { pt3dadd( 22.4667, -186.507, -3.97245, 0.37 ) }
    dend_31 { pt3dadd( 22.5949, -188.314, -3.79823, 0.44 ) }
    dend_31 { pt3dadd( 22.6538, -188.919, -3.70458, 0.44 ) }
    dend_31 { pt3dadd( 22.8188, -190.113, -3.47898, 0.44 ) }
    dend_31 { pt3dadd( 23.0757, -191.602, -3.20497, 0.51 ) }
    dend_31 { pt3dadd( 23.2339, -192.446, -3.06454, 0.22 ) }
    dend_31 { pt3dadd( 23.365, -193.173, -2.94376, 0.22 ) }
    dend_31 { pt3dadd( 23.5738, -194.293, -2.79926, 0.59 ) }
    dend_31 { pt3dadd( 23.9838, -196.159, -2.58344, 0.29 ) }
    dend_31 { pt3dadd( 24.2302, -197.009, -2.46399, 0.29 ) }
    dend_31 { pt3dadd( 24.8548, -198.776, -2.13967, 0.29 ) }
    dend_31 { pt3dadd( 25.3646, -200.148, -1.83886, 0.15 ) }
    dend_31 { pt3dadd( 25.6374, -200.956, -1.60996, 0.66 ) }
    dend_31 { pt3dadd( 25.9084, -201.923, -1.24675, 0.95 ) }
    dend_31 { pt3dadd( 26.3451, -203.686, -0.366993, 0.29 ) }
    dend_31 { pt3dadd( 26.4915, -204.233, -0.0626128, 0.37 ) }
    dend_31 { pt3dadd( 26.6367, -204.67, 0.223137, 0.37 ) }
    dend_31 { pt3dadd( 26.9261, -205.474, 0.815187, 0.37 ) }
    dend_31 { pt3dadd( 27.2072, -206.397, 1.54441, 0.37 ) }
    dend_31 { pt3dadd( 27.357, -207.096, 2.12936, 0.37 ) }
    dend_31 { pt3dadd( 27.4157, -207.677, 2.57097, 0.95 ) }
    dend_31 { pt3dadd( 27.5924, -208.859, 3.4931, 0.51 ) }
    dend_31 { pt3dadd( 27.7446, -209.471, 4.00794, 0.51 ) }
    dend_31 { pt3dadd( 27.9196, -209.968, 4.43622, 0.73 ) }
    dend_31 { pt3dadd( 28.2395, -210.811, 5.14222, 0.59 ) }
    dend_31 { pt3dadd( 28.55, -211.934, 5.95173, 1.18 ) }
    dend_31 { pt3dadd( 28.7032, -213.089, 6.63246, 0.59 ) }
    dend_31 { pt3dadd( 28.7435, -214.304, 7.18292, 0.59 ) }
    dend_31 { pt3dadd( 28.747, -214.858, 7.37773, 0.44 ) }
    dend_31 { pt3dadd( 28.7343, -215.505, 7.57749, 0.44 ) }
    dend_31 { pt3dadd( 28.644, -217.3, 8.01011, 0.73 ) }
    dend_31 { pt3dadd( 28.551, -218.475, 8.27235, 0.44 ) }
    dend_31 { pt3dadd( 28.5004, -218.99, 8.35885, 0.44 ) }
    dend_31 { pt3dadd( 28.3894, -220.174, 8.545, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_31 { pt3dadd( 28.2302, -222.2, 8.89658, 0.66 ) }
    dend_31 { pt3dadd( 28.1327, -223.903, 9.21757, 0.29 ) }
    dend_31 { pt3dadd( 28.0888, -224.921, 9.43937, 0.29 ) }
    dend_31 { pt3dadd( 28.0342, -226.083, 9.72581, 1.03 ) }
    dend_31 { pt3dadd( 27.9089, -227.878, 10.1952, 0.37 ) }
    dend_31 { pt3dadd( 27.8713, -228.313, 10.3104, 0.37 ) }
    dend_31 { pt3dadd( 27.8433, -228.797, 10.4359, 0.37 ) }
    dend_31 { pt3dadd( 27.8085, -230.061, 10.8048, 1.03 ) }
    dend_31 { pt3dadd( 27.8214, -231.157, 11.1096, 0.29 ) }
    dend_31 { pt3dadd( 27.8482, -231.733, 11.2878, 0.29 ) }
    dend_31 { pt3dadd( 27.9547, -232.664, 11.5626, 0.51 ) }
    dend_31 { pt3dadd( 28.154, -233.883, 11.9169, 0.15 ) }
    dend_31 { pt3dadd( 28.2791, -234.445, 12.07, 0.88 ) }
    dend_31 { pt3dadd( 28.7024, -236.016, 12.4497, 0.15 ) }
    dend_31 { pt3dadd( 28.8619, -236.607, 12.591, 0.15 ) }
    dend_31 { pt3dadd( 28.9253, -236.876, 12.6572, 0.37 ) }
    dend_31 { pt3dadd( 29.0168, -237.377, 12.7723, 0.22 ) }
    dend_31 { pt3dadd( 29.0896, -237.944, 12.8825, 0.59 ) }
    dend_31 { pt3dadd( 29.2093, -239.014, 13.0563, 0.22 ) }
    dend_31 { pt3dadd( 29.3139, -240.156, 13.2828, 0.88 ) }
    dend_31 { pt3dadd( 29.3715, -240.819, 13.4043, 0.15 ) }
    dend_31 { pt3dadd( 29.4746, -242.088, 13.6426, 0.66 ) }
    dend_31 { pt3dadd( 29.5631, -243.205, 13.8612, 0.15 ) }
    dend_31 { pt3dadd( 29.6262, -244.065, 14.0337, 0.81 ) }
    dend_31 { pt3dadd( 29.7457, -245.558, 14.3257, 0.15 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 25/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 3.4279, -117.24, -13.3251, 0.44 ) }
    dend_24 { pt3dadd( 3.72467, -118.638, -13.7977, 0.44 ) }
    dend_24 { pt3dadd( 3.93739, -120.191, -14.36, 0.44 ) }
    dend_24 { pt3dadd( 4.10364, -122.121, -15.0395, 0.44 ) }
    dend_24 { pt3dadd( 4.15275, -122.863, -15.3294, 0.44 ) }
    dend_24 { pt3dadd( 4.18944, -123.803, -15.6905, 0.44 ) }
    dend_24 { pt3dadd( 4.2066, -124.429, -15.919, 0.59 ) }
    dend_24 { pt3dadd( 4.25965, -125.955, -16.4269, 0.44 ) }
    dend_24 { pt3dadd( 4.28823, -127.042, -16.753, 0.59 ) }
    dend_24 { pt3dadd( 4.36312, -128.971, -17.2589, 0.37 ) }
    dend_24 { pt3dadd( 4.45289, -130.575, -17.6459, 0.44 ) }
    dend_24 { pt3dadd( 4.5655, -132.169, -17.941, 0.95 ) }
    dend_24 { pt3dadd( 4.78165, -134.5, -18.2349, 0.37 ) }
    dend_24 { pt3dadd( 4.86868, -135.244, -18.2798, 0.37 ) }
    dend_24 { pt3dadd( 5.04253, -136.61, -18.2825, 0.37 ) }
    dend_24 { pt3dadd( 5.13733, -137.436, -18.2159, 1.18 ) }
    dend_24 { pt3dadd( 5.29998, -139.096, -17.9719, 0.88 ) }
    dend_24 { pt3dadd( 5.39797, -140.807, -17.6312, 0.37 ) }
    dend_24 { pt3dadd( 5.41059, -142.107, -17.3655, 0.37 ) }
    dend_24 { pt3dadd( 5.40295, -143.656, -17.0502, 0.59 ) }
    dend_24 { pt3dadd( 5.40232, -145.363, -16.7268, 0.44 ) }
    dend_24 { pt3dadd( 5.46818, -147.117, -16.4709, 0.59 ) }
    dend_24 { pt3dadd( 5.57154, -148.539, -16.3839, 0.59 ) }
    dend_24 { pt3dadd( 5.69884, -149.853, -16.4683, 0.59 ) }
    dend_24 { pt3dadd( 5.73943, -150.22, -16.5463, 0.59 ) }
    dend_24 { pt3dadd( 5.90617, -151.274, -16.9409, 0.59 ) }
    dend_24 { pt3dadd( 6.17996, -152.503, -17.5554, 0.44 ) }
    dend_24 { pt3dadd( 6.43315, -153.497, -18.0954, 0.44 ) }
    dend_24 { pt3dadd( 6.81969, -154.975, -18.8333, 0.73 ) }
    dend_24 { pt3dadd( 7.02851, -155.802, -19.169, 0.73 ) }
    dend_24 { pt3dadd( 7.17692, -156.496, -19.4144, 0.73 ) }
    dend_24 { pt3dadd( 7.35777, -157.559, -19.7265, 0.73 ) }
    dend_24 { pt3dadd( 7.50022, -158.624, -19.9441, 0.81 ) }
    dend_24 { pt3dadd( 7.69843, -160.197, -20.1745, 0.73 ) }
    dend_24 { pt3dadd( 7.869, -161.623, -20.3446, 0.95 ) }
    dend_24 { pt3dadd( 8.07433, -163.395, -20.5989, 0.66 ) }
    dend_24 { pt3dadd( 8.21984, -164.572, -20.7976, 0.66 ) }
    dend_24 { pt3dadd( 8.48373, -166.436, -21.1457, 0.59 ) }
    dend_24 { pt3dadd( 8.65754, -167.538, -21.3698, 0.59 ) }
    dend_24 { pt3dadd( 8.75328, -168.185, -21.5029, 0.73 ) }
    dend_24 { pt3dadd( 8.89756, -169.309, -21.7529, 0.73 ) }
    dend_24 { pt3dadd( 9.03154, -170.398, -21.9962, 0.73 ) }
    dend_24 { pt3dadd( 9.11451, -171.151, -22.1562, 0.73 ) }
    dend_24 { pt3dadd( 9.22568, -172.127, -22.3181, 0.73 ) }
    dend_24 { pt3dadd( 9.44864, -174.242, -22.584, 0.66 ) }
    dend_24 { pt3dadd( 9.534, -175.537, -22.7284, 0.66 ) }
    dend_24 { pt3dadd( 9.54791, -176.356, -22.81, 0.66 ) }
    dend_24 { pt3dadd( 9.52234, -177.865, -22.9607, 0.44 ) }
    dend_24 { pt3dadd( 9.52287, -179.507, -23.1202, 0.73 ) }
    dend_24 { pt3dadd( 9.58277, -181.027, -23.2599, 1.03 ) }
    dend_24 { pt3dadd( 9.76076, -183.08, -23.4452, 0.59 ) }
    dend_24 { pt3dadd( 9.89097, -184.383, -23.562, 0.59 ) }
    dend_24 { pt3dadd( 9.95521, -184.989, -23.621, 0.66 ) }
    dend_24 { pt3dadd( 10.1224, -186.548, -23.7897, 0.88 ) }
    dend_24 { pt3dadd( 10.2235, -187.623, -23.913, 1.1 ) }
    dend_24 { pt3dadd( 10.3895, -188.724, -23.9565, 1.32 ) }
    // Section: dend_108, id: dend_108, parent: dend_102 (entry count 81/100)
    dend_108 { pt3dclear() }
    dend_108 { pt3dadd( 18.4435, -159.676, 15.8828, 0.44 ) }
    dend_108 { pt3dadd( 18.1939, -160.296, 15.093, 0.44 ) }
    dend_108 { pt3dadd( 17.8034, -161.063, 14.0959, 0.73 ) }
    dend_108 { pt3dadd( 17.4748, -161.683, 13.3158, 0.37 ) }
    dend_108 { pt3dadd( 17.2623, -162.1, 12.8136, 0.66 ) }
    dend_108 { pt3dadd( 16.7849, -163.149, 11.605, 0.66 ) }
    dend_108 { pt3dadd( 16.5965, -163.637, 11.0681, 0.66 ) }
    dend_108 { pt3dadd( 16.2299, -164.702, 10.0238, 0.66 ) }
    dend_108 { pt3dadd( 16.0605, -165.284, 9.54173, 0.44 ) }
    dend_108 { pt3dadd( 15.9813, -165.596, 9.34201, 0.44 ) }
    dend_108 { pt3dadd( 15.8375, -166.327, 8.97654, 0.44 ) }
    dend_108 { pt3dadd( 15.7384, -166.955, 8.7661, 0.66 ) }
    dend_108 { pt3dadd( 15.5139, -168.255, 8.45792, 0.66 ) }
    dend_108 { pt3dadd( 15.2819, -169.373, 8.23942, 0.95 ) }
    dend_108 { pt3dadd( 14.8417, -170.984, 7.92365, 0.44 ) }
    dend_108 { pt3dadd( 14.6767, -171.482, 7.82673, 0.44 ) }
    dend_108 { pt3dadd( 14.3379, -172.429, 7.64539, 0.44 ) }
    dend_108 { pt3dadd( 13.7905, -173.974, 7.35343, 0.81 ) }
    dend_108 { pt3dadd( 13.337, -175.345, 7.04454, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_42()
}

proc basic_shape_42() {
    dend_108 { pt3dadd( 13.0484, -176.244, 6.80565, 0.66 ) }
    dend_108 { pt3dadd( 12.8166, -177.064, 6.55898, 0.95 ) }
    dend_108 { pt3dadd( 12.54, -178.316, 6.15056, 0.22 ) }
    dend_108 { pt3dadd( 12.3934, -179.377, 5.77599, 0.88 ) }
    dend_108 { pt3dadd( 12.3187, -180.89, 5.23476, 0.29 ) }
    dend_108 { pt3dadd( 12.3212, -181.103, 5.16112, 0.66 ) }
    dend_108 { pt3dadd( 12.3669, -182.264, 4.76527, 0.29 ) }
    dend_108 { pt3dadd( 12.3741, -183.002, 4.5202, 0.29 ) }
    dend_108 { pt3dadd( 12.3422, -183.442, 4.3733, 0.29 ) }
    dend_108 { pt3dadd( 12.2119, -184.298, 4.10101, 0.29 ) }
    dend_108 { pt3dadd( 11.9851, -185.217, 3.83153, 0.29 ) }
    dend_108 { pt3dadd( 11.6983, -185.963, 3.61354, 1.32 ) }
    dend_108 { pt3dadd( 10.4007, -188.347, 2.89993, 0.07 ) }
    dend_108 { pt3dadd( 9.71043, -189.363, 2.59208, 0.29 ) }
    dend_108 { pt3dadd( 9.16348, -190.026, 2.39494, 0.59 ) }
    dend_108 { pt3dadd( 8.29527, -190.915, 2.12736, 1.32 ) }
    dend_108 { pt3dadd( 6.91011, -192.158, 1.77356, 0.51 ) }
    dend_108 { pt3dadd( 5.4284, -193.354, 1.4478, 0.22 ) }
    dend_108 { pt3dadd( 4.59111, -193.986, 1.30134, 0.37 ) }
    dend_108 { pt3dadd( 3.55131, -194.819, 1.12263, 0.66 ) }
    dend_108 { pt3dadd( 2.63897, -195.611, 0.953586, 0.37 ) }
    dend_108 { pt3dadd( 2.02478, -196.211, 0.81093, 1.18 ) }
    dend_108 { pt3dadd( 1.42704, -196.913, 0.630497, 0.73 ) }
    dend_108 { pt3dadd( 0.792476, -197.811, 0.410723, 1.32 ) }
    dend_108 { pt3dadd( 0.109, -198.958, 0.13735, 0.29 ) }
    dend_108 { pt3dadd( -0.188862, -199.542, -0.032216, 0.73 ) }
    dend_108 { pt3dadd( -0.660993, -200.615, -0.430158, 0.37 ) }
    dend_108 { pt3dadd( -1.13904, -201.933, -1.02216, 0.15 ) }
    dend_108 { pt3dadd( -1.47851, -202.912, -1.50515, 0.15 ) }
    dend_108 { pt3dadd( -1.73538, -203.708, -1.93303, 1.03 ) }
    dend_108 { pt3dadd( -2.0647, -205.054, -2.68243, 1.03 ) }
    dend_108 { pt3dadd( -2.28632, -206.165, -3.37214, 0.51 ) }
    dend_108 { pt3dadd( -2.34148, -206.936, -3.91801, 0.51 ) }
    // Section: dend_103, id: dend_103, parent: dend_102 (entry count 33/100)
    dend_103 { pt3dclear() }
    dend_103 { pt3dadd( 18.4435, -159.676, 15.8828, 0.81 ) }
    dend_103 { pt3dadd( 19.199, -160.838, 16.0068, 0.81 ) }
    dend_103 { pt3dadd( 19.4889, -161.291, 16.067, 0.73 ) }
    dend_103 { pt3dadd( 19.703, -161.662, 16.1274, 0.73 ) }
    dend_103 { pt3dadd( 20.0536, -162.338, 16.2325, 0.95 ) }
    dend_103 { pt3dadd( 20.5071, -163.185, 16.3099, 1.18 ) }
    dend_103 { pt3dadd( 21.5353, -164.996, 16.4047, 0.44 ) }
    dend_103 { pt3dadd( 21.7532, -165.418, 16.4291, 0.44 ) }
    dend_103 { pt3dadd( 22.3013, -166.481, 16.4857, 1.1 ) }
    dend_103 { pt3dadd( 23.1536, -168.082, 16.5565, 0.15 ) }
    dend_103 { pt3dadd( 23.8281, -169.276, 16.5845, 0.81 ) }
    dend_103 { pt3dadd( 24.3038, -170.087, 16.5601, 1.1 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 45/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 10.3895, -188.724, -23.9565, 0.51 ) }
    dend_26 { pt3dadd( 10.1854, -190.616, -24.4261, 0.51 ) }
    dend_26 { pt3dadd( 10.0473, -192.007, -24.7819, 0.66 ) }
    dend_26 { pt3dadd( 9.99739, -192.594, -24.9202, 0.81 ) }
    dend_26 { pt3dadd( 9.8946, -193.788, -25.1604, 0.81 ) }
    dend_26 { pt3dadd( 9.78081, -194.907, -25.3337, 0.95 ) }
    dend_26 { pt3dadd( 9.67095, -196.035, -25.4669, 0.37 ) }
    dend_26 { pt3dadd( 9.63967, -196.895, -25.5303, 0.81 ) }
    dend_26 { pt3dadd( 9.62884, -197.671, -25.5416, 0.44 ) }
    dend_26 { pt3dadd( 9.58998, -198.617, -25.4937, 0.81 ) }
    dend_26 { pt3dadd( 9.52924, -199.509, -25.3914, 0.59 ) }
    dend_26 { pt3dadd( 9.43868, -200.66, -25.2304, 0.88 ) }
    dend_26 { pt3dadd( 9.37435, -201.844, -25.1015, 0.44 ) }
    dend_26 { pt3dadd( 9.35111, -202.837, -25.0239, 0.59 ) }
    dend_26 { pt3dadd( 9.36812, -203.999, -24.9684, 0.59 ) }
    dend_26 { pt3dadd( 9.45, -205.589, -24.9363, 0.59 ) }
    dend_26 { pt3dadd( 9.51375, -206.492, -24.9324, 0.59 ) }
    dend_26 { pt3dadd( 9.59591, -208.172, -24.9553, 0.44 ) }
    dend_26 { pt3dadd( 9.63118, -209.286, -24.9898, 0.44 ) }
    dend_26 { pt3dadd( 9.64336, -210.354, -25.0472, 0.44 ) }
    dend_26 { pt3dadd( 9.63195, -211.417, -25.1326, 0.66 ) }
    dend_26 { pt3dadd( 9.60571, -212.57, -25.2381, 1.18 ) }
    dend_26 { pt3dadd( 9.51368, -214.475, -25.4171, 0.44 ) }
    dend_26 { pt3dadd( 9.41219, -215.443, -25.507, 0.44 ) }
    dend_26 { pt3dadd( 9.17088, -216.874, -25.6675, 1.18 ) }
    dend_26 { pt3dadd( 8.89109, -218.089, -25.8344, 0.66 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 71/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 10.3895, -188.724, -23.9565, 0.81 ) }
    dend_25 { pt3dadd( 11.5059, -189.541, -23.8352, 0.81 ) }
    dend_25 { pt3dadd( 12.3138, -190.117, -23.7764, 0.81 ) }
    dend_25 { pt3dadd( 13.083, -190.672, -23.7964, 0.88 ) }
    dend_25 { pt3dadd( 13.9819, -191.314, -23.9062, 0.59 ) }
    dend_25 { pt3dadd( 15.0805, -192.105, -24.092, 0.66 ) }
    dend_25 { pt3dadd( 16.2972, -192.999, -24.3273, 0.29 ) }
    dend_25 { pt3dadd( 17.1984, -193.657, -24.5398, 1.1 ) }
    dend_25 { pt3dadd( 18.5249, -194.61, -24.8375, 0.29 ) }
    dend_25 { pt3dadd( 19.5584, -195.361, -25.0601, 0.37 ) }
    dend_25 { pt3dadd( 20.0464, -195.751, -25.1497, 0.51 ) }
    dend_25 { pt3dadd( 20.6781, -196.308, -25.2309, 1.1 ) }
    dend_25 { pt3dadd( 21.687, -197.245, -25.2758, 0.37 ) }
    dend_25 { pt3dadd( 22.9457, -198.477, -25.1057, 0.37 ) }
    dend_25 { pt3dadd( 23.4862, -199.001, -24.9383, 0.66 ) }
    dend_25 { pt3dadd( 24.4062, -199.881, -24.5146, 0.29 ) }
    dend_25 { pt3dadd( 24.8812, -200.321, -24.2654, 0.29 ) }
    dend_25 { pt3dadd( 25.3472, -200.75, -23.9847, 0.29 ) }
    dend_25 { pt3dadd( 25.8952, -201.251, -23.6325, 0.29 ) }
    dend_25 { pt3dadd( 26.8325, -202.09, -23.0387, 1.03 ) }
    dend_25 { pt3dadd( 27.9354, -203.029, -22.3362, 0.44 ) }
    dend_25 { pt3dadd( 28.4044, -203.419, -22.0254, 0.73 ) }
    dend_25 { pt3dadd( 29.1461, -204.089, -21.4934, 0.44 ) }
    dend_25 { pt3dadd( 29.6002, -204.575, -21.1044, 0.73 ) }
    dend_25 { pt3dadd( 30.3307, -205.55, -20.3915, 0.44 ) }
    dend_25 { pt3dadd( 30.6621, -206.095, -20.0288, 0.51 ) }
    dend_25 { pt3dadd( 31.1634, -207.007, -19.4693, 0.44 ) }
    dend_25 { pt3dadd( 31.6455, -207.886, -18.952, 0.51 ) }
    dend_25 { pt3dadd( 32.3387, -209.094, -18.2646, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_43()
}

proc basic_shape_43() {
    dend_25 { pt3dadd( 33.1683, -210.502, -17.4945, 0.37 ) }
    dend_25 { pt3dadd( 33.6595, -211.295, -17.1002, 0.37 ) }
    dend_25 { pt3dadd( 34.2906, -212.248, -16.6513, 0.37 ) }
    dend_25 { pt3dadd( 34.8587, -212.992, -16.3176, 0.37 ) }
    dend_25 { pt3dadd( 35.5075, -213.729, -15.9894, 0.73 ) }
    dend_25 { pt3dadd( 35.847, -214.065, -15.8418, 0.73 ) }
    dend_25 { pt3dadd( 36.2962, -214.467, -15.6307, 0.81 ) }
    dend_25 { pt3dadd( 37.3106, -215.331, -15.0701, 0.22 ) }
    dend_25 { pt3dadd( 38.2524, -216.137, -14.5063, 0.51 ) }
    dend_25 { pt3dadd( 38.7503, -216.58, -14.1863, 0.51 ) }
    dend_25 { pt3dadd( 39.4081, -217.209, -13.7606, 0.51 ) }
    dend_25 { pt3dadd( 40.0111, -217.798, -13.3835, 0.29 ) }
    dend_25 { pt3dadd( 40.9824, -218.723, -12.8368, 0.81 ) }
    dend_25 { pt3dadd( 41.5098, -219.183, -12.5861, 0.81 ) }
    dend_25 { pt3dadd( 41.922, -219.532, -12.3902, 1.03 ) }
    dend_25 { pt3dadd( 42.9572, -220.39, -11.8331, 0.15 ) }
    dend_25 { pt3dadd( 43.8036, -221.088, -11.357, 0.15 ) }
    dend_25 { pt3dadd( 44.5884, -221.73, -10.896, 0.22 ) }
    dend_25 { pt3dadd( 45.4333, -222.393, -10.4362, 0.44 ) }
    dend_25 { pt3dadd( 46.5323, -223.197, -9.85769, 0.44 ) }
    dend_25 { pt3dadd( 47.6576, -223.968, -9.31584, 0.66 ) }
    dend_25 { pt3dadd( 48.1266, -224.28, -9.11305, 0.95 ) }
    dend_25 { pt3dadd( 49.4905, -225.266, -8.60643, 0.15 ) }
    dend_25 { pt3dadd( 50.4021, -225.973, -8.33647, 0.15 ) }
    dend_25 { pt3dadd( 51.2403, -226.629, -8.16443, 0.29 ) }
    dend_25 { pt3dadd( 52.2309, -227.36, -8.04251, 0.29 ) }
    dend_25 { pt3dadd( 53.1105, -227.933, -7.9502, 0.29 ) }
    dend_25 { pt3dadd( 54.3424, -228.648, -7.70979, 0.29 ) }
    dend_25 { pt3dadd( 55.0701, -229.044, -7.50044, 0.29 ) }
    dend_25 { pt3dadd( 55.5178, -229.298, -7.31973, 0.29 ) }
    dend_25 { pt3dadd( 55.901, -229.519, -7.14903, 0.29 ) }
    dend_25 { pt3dadd( 56.6752, -229.981, -6.79494, 0.66 ) }
    dend_25 { pt3dadd( 58.0932, -230.863, -6.23754, 0.29 ) }
    dend_25 { pt3dadd( 58.8131, -231.333, -5.99967, 0.29 ) }
    dend_25 { pt3dadd( 59.9019, -232.105, -5.70874, 0.59 ) }
    dend_25 { pt3dadd( 60.636, -232.676, -5.55652, 0.59 ) }
    dend_25 { pt3dadd( 61.4548, -233.353, -5.43491, 1.18 ) }
    dend_25 { pt3dadd( 63.3815, -234.993, -5.26295, 0.22 ) }
    dend_25 { pt3dadd( 63.6868, -235.252, -5.26208, 1.03 ) }
    dend_25 { pt3dadd( 64.4235, -235.844, -5.27834, 0.66 ) }
    dend_25 { pt3dadd( 65.0498, -236.296, -5.31538, 0.66 ) }
    dend_25 { pt3dadd( 65.7039, -236.702, -5.37233, 0.66 ) }
    dend_25 { pt3dadd( 66.6647, -237.185, -5.46162, 0.95 ) }
    dend_25 { pt3dadd( 67.7345, -237.607, -5.52276, 0.66 ) }
    dend_25 { pt3dadd( 68.7994, -237.941, -5.50036, 0.29 ) }
    dend_25 { pt3dadd( 70.1821, -238.325, -5.38947, 0.29 ) }
    dend_25 { pt3dadd( 71.157, -238.591, -5.26504, 0.29 ) }
    dend_25 { pt3dadd( 72.1385, -238.885, -5.08849, 0.51 ) }
    dend_25 { pt3dadd( 73.6609, -239.399, -4.73221, 0.51 ) }
    dend_25 { pt3dadd( 75.1814, -239.992, -4.31066, 0.29 ) }
    dend_25 { pt3dadd( 76.3028, -240.537, -3.94554, 0.51 ) }
    dend_25 { pt3dadd( 76.8675, -240.886, -3.72381, 0.51 ) }
    dend_25 { pt3dadd( 77.6397, -241.47, -3.38624, 0.73 ) }
    dend_25 { pt3dadd( 78.0821, -241.852, -3.17118, 0.95 ) }
    dend_25 { pt3dadd( 79.1579, -242.852, -2.6139, 0.37 ) }
    dend_25 { pt3dadd( 79.9517, -243.635, -2.17108, 0.29 ) }
    dend_25 { pt3dadd( 80.7041, -244.357, -1.73738, 0.29 ) }
    dend_25 { pt3dadd( 81.6059, -245.212, -1.19639, 0.59 ) }
    dend_25 { pt3dadd( 82.7297, -246.278, -0.482289, 0.22 ) }
    dend_25 { pt3dadd( 83.0794, -246.615, -0.245104, 0.59 ) }
    dend_25 { pt3dadd( 83.8314, -247.354, 0.299568, 0.22 ) }
    dend_25 { pt3dadd( 84.1703, -247.666, 0.508973, 0.22 ) }
    // Section: dend_105, id: dend_105, parent: dend_103 (entry count 62/100)
    dend_105 { pt3dclear() }
    dend_105 { pt3dadd( 24.3038, -170.087, 16.5601, 0.73 ) }
    dend_105 { pt3dadd( 24.1409, -171.154, 17.0167, 0.73 ) }
    dend_105 { pt3dadd( 24.1559, -172.799, 17.6776, 1.25 ) }
    dend_105 { pt3dadd( 24.3437, -174.048, 18.0467, 0.59 ) }
    dend_105 { pt3dadd( 24.5081, -174.703, 18.2218, 0.59 ) }
    dend_105 { pt3dadd( 24.8415, -175.762, 18.5426, 1.1 ) }
    dend_105 { pt3dadd( 25.1094, -176.554, 18.8597, 1.1 ) }
    dend_105 { pt3dadd( 25.7431, -177.973, 19.5139, 0.66 ) }
    dend_105 { pt3dadd( 26.5508, -179.424, 20.2344, 0.51 ) }
    dend_105 { pt3dadd( 27.0757, -180.26, 20.69, 1.03 ) }
    dend_105 { pt3dadd( 27.9758, -181.703, 21.5246, 1.69 ) }
    dend_105 { pt3dadd( 29.148, -183.73, 22.8076, 0.66 ) }
    dend_105 { pt3dadd( 29.5191, -184.447, 23.2817, 0.66 ) }
    dend_105 { pt3dadd( 29.8695, -185.167, 23.7657, 0.73 ) }
    dend_105 { pt3dadd( 30.397, -186.349, 24.5565, 1.1 ) }
    dend_105 { pt3dadd( 30.8189, -187.414, 25.1391, 0.59 ) }
    dend_105 { pt3dadd( 31.1323, -188.316, 25.493, 0.59 ) }
    dend_105 { pt3dadd( 31.2999, -189.028, 25.6881, 0.88 ) }
    dend_105 { pt3dadd( 31.4367, -190.162, 25.9632, 0.88 ) }
    dend_105 { pt3dadd( 31.5008, -191.247, 26.1809, 0.51 ) }
    dend_105 { pt3dadd( 31.515, -192.072, 26.274, 0.51 ) }
    dend_105 { pt3dadd( 31.4991, -192.893, 26.3244, 0.51 ) }
    dend_105 { pt3dadd( 31.3931, -194.674, 26.3507, 0.88 ) }
    dend_105 { pt3dadd( 31.2677, -195.861, 26.3327, 0.44 ) }
    dend_105 { pt3dadd( 31.1264, -196.762, 26.2904, 0.44 ) }
    dend_105 { pt3dadd( 30.8816, -198.227, 26.1644, 0.81 ) }
    dend_105 { pt3dadd( 30.7071, -199.532, 26.0212, 0.81 ) }
    dend_105 { pt3dadd( 30.6987, -199.827, 25.9786, 0.81 ) }
    dend_105 { pt3dadd( 30.7548, -200.291, 25.9174, 0.81 ) }
    dend_105 { pt3dadd( 30.854, -200.743, 25.8884, 0.81 ) }
    dend_105 { pt3dadd( 31.0881, -201.541, 25.8887, 0.66 ) }
    dend_105 { pt3dadd( 31.4163, -202.642, 25.9689, 0.66 ) }
    dend_105 { pt3dadd( 31.8429, -204.259, 26.1142, 0.66 ) }
    dend_105 { pt3dadd( 32.1256, -205.536, 26.1972, 0.66 ) }
    dend_105 { pt3dadd( 32.3474, -206.805, 26.2915, 0.66 ) }
    dend_105 { pt3dadd( 32.4876, -207.93, 26.4331, 0.66 ) }
    dend_105 { pt3dadd( 32.6074, -209.763, 26.7407, 0.81 ) }
    dend_105 { pt3dadd( 32.5862, -210.971, 26.9864, 0.95 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_44()
}

proc basic_shape_44() {
    dend_105 { pt3dadd( 32.4611, -212.228, 27.2918, 0.44 ) }
    dend_105 { pt3dadd( 32.3, -213.59, 27.62, 0.81 ) }
    dend_105 { pt3dadd( 32.1266, -215.178, 28.001, 0.81 ) }
    dend_105 { pt3dadd( 32.0742, -215.705, 28.111, 0.59 ) }
    dend_105 { pt3dadd( 32.02, -216.54, 28.2325, 0.59 ) }
    dend_105 { pt3dadd( 31.938, -218.006, 28.347, 0.51 ) }
    dend_105 { pt3dadd( 31.8599, -219.202, 28.368, 0.51 ) }
    dend_105 { pt3dadd( 31.7951, -220.25, 28.3292, 0.51 ) }
    dend_105 { pt3dadd( 31.749, -221.375, 28.286, 0.51 ) }
    dend_105 { pt3dadd( 31.6853, -222.969, 28.3016, 0.51 ) }
    dend_105 { pt3dadd( 31.6148, -224.557, 28.3817, 0.51 ) }
    dend_105 { pt3dadd( 31.5223, -225.845, 28.4956, 0.51 ) }
    dend_105 { pt3dadd( 31.4313, -227.223, 28.6932, 0.51 ) }
    dend_105 { pt3dadd( 31.4102, -228.48, 28.9469, 0.51 ) }
    dend_105 { pt3dadd( 31.4377, -229.353, 29.1554, 0.73 ) }
    dend_105 { pt3dadd( 31.4991, -230.065, 29.3445, 0.73 ) }
    dend_105 { pt3dadd( 31.7924, -232.233, 29.9331, 0.29 ) }
    dend_105 { pt3dadd( 32.0764, -233.741, 30.3093, 0.66 ) }
    dend_105 { pt3dadd( 32.4184, -235.215, 30.6176, 0.29 ) }
    dend_105 { pt3dadd( 32.4986, -235.5, 30.6681, 0.88 ) }
    dend_105 { pt3dadd( 32.7717, -236.31, 30.7805, 0.88 ) }
    dend_105 { pt3dadd( 33.1927, -237.45, 30.9149, 1.18 ) }
    dend_105 { pt3dadd( 33.4412, -238.099, 30.9702, 1.18 ) }
    dend_105 { pt3dadd( 33.954, -239.563, 31.027, 0.51 ) }
    dend_105 { pt3dadd( 34.2966, -240.533, 31.0136, 0.66 ) }
    dend_105 { pt3dadd( 34.7623, -241.711, 30.9965, 0.66 ) }
    dend_105 { pt3dadd( 35.157, -242.696, 30.9657, 0.66 ) }
    dend_105 { pt3dadd( 35.7149, -244.045, 30.9054, 0.66 ) }
    dend_105 { pt3dadd( 36.3796, -245.661, 30.8192, 0.66 ) }
    dend_105 { pt3dadd( 36.9366, -246.984, 30.7291, 0.66 ) }
    dend_105 { pt3dadd( 37.4667, -248.264, 30.665, 0.95 ) }
    // Section: dend_104, id: dend_104, parent: dend_103 (entry count 31/100)
    dend_104 { pt3dclear() }
    dend_104 { pt3dadd( 24.3038, -170.087, 16.5601, 0.88 ) }
    dend_104 { pt3dadd( 25.1917, -170.052, 16.6613, 0.88 ) }
    dend_104 { pt3dadd( 26.4301, -169.936, 16.7611, 0.15 ) }
    dend_104 { pt3dadd( 26.9351, -169.856, 16.7856, 0.44 ) }
    dend_104 { pt3dadd( 27.7681, -169.685, 16.8058, 0.29 ) }
    dend_104 { pt3dadd( 28.116, -169.582, 16.8087, 0.29 ) }
    dend_104 { pt3dadd( 28.6273, -169.43, 16.8131, 0.29 ) }
    dend_104 { pt3dadd( 29.0915, -169.258, 16.8032, 0.29 ) }
    dend_104 { pt3dadd( 29.4237, -169.048, 16.7275, 0.29 ) }
    dend_104 { pt3dadd( 29.5666, -168.877, 16.6782, 0.59 ) }
    dend_104 { pt3dadd( 29.8944, -168.007, 16.4789, 0.22 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 42/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 8.89109, -218.089, -25.8344, 0.44 ) }
    dend_28 { pt3dadd( 9.18643, -219.278, -25.8047, 0.44 ) }
    dend_28 { pt3dadd( 9.49366, -220.757, -25.7804, 0.44 ) }
    dend_28 { pt3dadd( 9.70962, -222.024, -25.7756, 0.44 ) }
    dend_28 { pt3dadd( 9.8311, -223.162, -25.7784, 0.44 ) }
    dend_28 { pt3dadd( 9.91112, -224.309, -25.8051, 0.81 ) }
    dend_28 { pt3dadd( 9.96649, -225.759, -25.8833, 0.51 ) }
    dend_28 { pt3dadd( 9.94806, -227.45, -26.0191, 0.37 ) }
    dend_28 { pt3dadd( 9.90179, -228.955, -26.1741, 0.51 ) }
    dend_28 { pt3dadd( 9.83178, -230.66, -26.3792, 1.03 ) }
    dend_28 { pt3dadd( 9.72534, -232.105, -26.5302, 0.51 ) }
    dend_28 { pt3dadd( 9.59499, -233.439, -26.6502, 0.37 ) }
    dend_28 { pt3dadd( 9.51087, -234.274, -26.7317, 0.37 ) }
    dend_28 { pt3dadd( 9.45417, -234.856, -26.7879, 0.37 ) }
    dend_28 { pt3dadd( 9.34257, -235.913, -26.8871, 0.59 ) }
    dend_28 { pt3dadd( 9.18618, -237.406, -27.0134, 0.73 ) }
    dend_28 { pt3dadd( 9.05432, -238.37, -27.1037, 0.73 ) }
    dend_28 { pt3dadd( 8.83394, -239.861, -27.2617, 0.73 ) }
    dend_28 { pt3dadd( 8.60514, -241.314, -27.4501, 0.51 ) }
    dend_28 { pt3dadd( 8.33526, -242.913, -27.6551, 0.37 ) }
    dend_28 { pt3dadd( 8.12079, -244.078, -27.7958, 0.59 ) }
    dend_28 { pt3dadd( 7.83092, -245.493, -27.9586, 0.29 ) }
    dend_28 { pt3dadd( 7.62605, -246.484, -28.0218, 0.29 ) }
    dend_28 { pt3dadd( 7.43389, -247.45, -28.0073, 0.29 ) }
    dend_28 { pt3dadd( 7.22842, -248.67, -27.9554, 0.29 ) }
    dend_28 { pt3dadd( 7.11823, -249.664, -27.9099, 0.37 ) }
    dend_28 { pt3dadd( 7.06315, -250.633, -27.861, 0.66 ) }
    dend_28 { pt3dadd( 7.06339, -251.824, -27.7908, 0.44 ) }
    dend_28 { pt3dadd( 7.09238, -252.668, -27.77, 0.44 ) }
    dend_28 { pt3dadd( 7.18609, -253.965, -27.8178, 0.44 ) }
    dend_28 { pt3dadd( 7.33087, -255.231, -27.8975, 0.44 ) }
    dend_28 { pt3dadd( 7.40352, -255.711, -27.9265, 0.73 ) }
    dend_28 { pt3dadd( 7.45483, -256.018, -27.9295, 0.51 ) }
    dend_28 { pt3dadd( 7.57162, -256.698, -27.9185, 0.81 ) }
    dend_28 { pt3dadd( 7.93816, -258.653, -27.8992, 0.37 ) }
    dend_28 { pt3dadd( 8.16794, -259.799, -27.873, 0.37 ) }
    dend_28 { pt3dadd( 8.38236, -260.778, -27.8639, 1.03 ) }
    dend_28 { pt3dadd( 8.77952, -262.335, -27.8677, 0.22 ) }
    dend_28 { pt3dadd( 9.08499, -263.376, -27.8791, 0.51 ) }
    dend_28 { pt3dadd( 9.59491, -264.908, -27.9393, 0.29 ) }
    dend_28 { pt3dadd( 9.80658, -265.517, -27.9963, 0.29 ) }
    dend_28 { pt3dadd( 10.0702, -266.321, -28.1221, 0.29 ) }
    dend_28 { pt3dadd( 10.3109, -267.122, -28.2735, 0.29 ) }
    dend_28 { pt3dadd( 10.5604, -268.031, -28.472, 0.59 ) }
    dend_28 { pt3dadd( 10.8026, -268.979, -28.6551, 0.81 ) }
    dend_28 { pt3dadd( 11.1629, -270.398, -28.9025, 0.51 ) }
    dend_28 { pt3dadd( 11.2916, -270.915, -28.9911, 0.51 ) }
    dend_28 { pt3dadd( 11.4534, -271.561, -29.0944, 0.51 ) }
    dend_28 { pt3dadd( 11.6051, -272.114, -29.1746, 0.66 ) }
    dend_28 { pt3dadd( 12.1889, -274.221, -29.4306, 0.37 ) }
    dend_28 { pt3dadd( 12.3446, -274.894, -29.4663, 0.37 ) }
    dend_28 { pt3dadd( 12.4309, -275.57, -29.4838, 0.59 ) }
    dend_28 { pt3dadd( 12.4525, -276.614, -29.5072, 0.22 ) }
    dend_28 { pt3dadd( 12.4217, -277.095, -29.5159, 0.59 ) }
    dend_28 { pt3dadd( 12.2627, -278.3, -29.5302, 0.44 ) }
    dend_28 { pt3dadd( 11.9517, -279.902, -29.5363, 1.18 ) }
    dend_28 { pt3dadd( 11.5283, -282.093, -29.5153, 0.37 ) }
    dend_28 { pt3dadd( 11.295, -283.431, -29.4937, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_45()
}

proc basic_shape_45() {
    dend_28 { pt3dadd( 11.1824, -284.028, -29.4815, 0.37 ) }
    dend_28 { pt3dadd( 10.9634, -285.132, -29.4371, 0.37 ) }
    dend_28 { pt3dadd( 10.7201, -286.476, -29.3761, 0.66 ) }
    dend_28 { pt3dadd( 10.4935, -287.937, -29.3084, 0.51 ) }
    dend_28 { pt3dadd( 10.3443, -289.041, -29.2264, 1.1 ) }
    dend_28 { pt3dadd( 10.1095, -290.89, -29.0883, 0.44 ) }
    dend_28 { pt3dadd( 9.9259, -292.22, -28.9857, 0.44 ) }
    dend_28 { pt3dadd( 9.81308, -292.93, -28.9299, 0.44 ) }
    dend_28 { pt3dadd( 9.66586, -293.719, -28.873, 0.44 ) }
    dend_28 { pt3dadd( 9.51813, -294.353, -28.8466, 0.66 ) }
    dend_28 { pt3dadd( 9.30308, -295.305, -28.8023, 0.95 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 11/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 8.89109, -218.089, -25.8344, 0.51 ) }
    dend_27 { pt3dadd( 8.60106, -219.182, -26.0168, 0.51 ) }
    dend_27 { pt3dadd( 8.35593, -220.281, -26.3034, 0.51 ) }
    dend_27 { pt3dadd( 8.18154, -221.209, -26.5812, 0.29 ) }
    dend_27 { pt3dadd( 7.98458, -222.122, -26.8806, 0.59 ) }
    dend_27 { pt3dadd( 7.7073, -223.255, -27.2756, 0.22 ) }
    dend_27 { pt3dadd( 7.51358, -223.989, -27.5315, 0.66 ) }
    dend_27 { pt3dadd( 7.19846, -225.084, -27.969, 0.22 ) }
    dend_27 { pt3dadd( 7.0638, -225.502, -28.1489, 0.59 ) }
    dend_27 { pt3dadd( 6.76001, -226.352, -28.5172, 0.59 ) }
    dend_27 { pt3dadd( 6.4423, -227.213, -28.8968, 0.29 ) }
    dend_27 { pt3dadd( 6.16673, -227.941, -29.1916, 0.88 ) }
    dend_27 { pt3dadd( 5.54353, -229.47, -29.7363, 0.37 ) }
    dend_27 { pt3dadd( 5.34668, -229.934, -29.8997, 0.37 ) }
    dend_27 { pt3dadd( 5.21311, -230.269, -30.0217, 0.37 ) }
    dend_27 { pt3dadd( 4.89217, -231.105, -30.3231, 0.51 ) }
    dend_27 { pt3dadd( 4.55864, -231.863, -30.5846, 0.22 ) }
    dend_27 { pt3dadd( 4.2514, -232.455, -30.7906, 0.81 ) }
    dend_27 { pt3dadd( 3.61031, -233.552, -31.1842, 0.07 ) }
    dend_27 { pt3dadd( 3.22761, -234.163, -31.4102, 0.66 ) }
    dend_27 { pt3dadd( 2.47317, -235.329, -31.8353, 0.22 ) }
    dend_27 { pt3dadd( 1.77978, -236.389, -32.2147, 0.29 ) }
    dend_27 { pt3dadd( 1.41394, -236.966, -32.4295, 0.29 ) }
    dend_27 { pt3dadd( 0.946954, -237.704, -32.6961, 0.29 ) }
    dend_27 { pt3dadd( 0.617298, -238.186, -32.8505, 0.29 ) }
    dend_27 { pt3dadd( 0.407631, -238.485, -32.9443, 0.29 ) }
    dend_27 { pt3dadd( 0.0402839, -239.062, -33.1195, 0.29 ) }
    dend_27 { pt3dadd( -0.147954, -239.389, -33.2054, 0.29 ) }
    dend_27 { pt3dadd( -0.488354, -240.033, -33.3611, 0.29 ) }
    dend_27 { pt3dadd( -0.927071, -240.907, -33.5593, 0.29 ) }
    dend_27 { pt3dadd( -1.49853, -242.182, -33.8436, 0.59 ) }
    dend_27 { pt3dadd( -1.98317, -243.3, -34.0687, 0.29 ) }
    dend_27 { pt3dadd( -2.4889, -244.408, -34.2897, 0.44 ) }
    dend_27 { pt3dadd( -3.06051, -245.628, -34.5372, 0.07 ) }
    dend_27 { pt3dadd( -3.23656, -246.016, -34.6156, 0.07 ) }
    dend_27 { pt3dadd( -3.73024, -247.124, -34.8285, 0.81 ) }
    dend_27 { pt3dadd( -4.47996, -248.735, -35.1723, 0.22 ) }
    dend_27 { pt3dadd( -4.99713, -249.819, -35.4537, 0.29 ) }
    dend_27 { pt3dadd( -5.21629, -250.263, -35.6183, 0.29 ) }
    dend_27 { pt3dadd( -5.50355, -250.82, -35.8838, 0.29 ) }
    dend_27 { pt3dadd( -5.87683, -251.51, -36.267, 1.03 ) }
    dend_27 { pt3dadd( -6.56874, -252.75, -37.0758, 0.22 ) }
    dend_27 { pt3dadd( -7.12508, -253.766, -37.8308, 0.37 ) }
    dend_27 { pt3dadd( -7.64595, -254.656, -38.5349, 0.95 ) }
    dend_27 { pt3dadd( -8.27648, -255.563, -39.3026, 0.22 ) }
    dend_27 { pt3dadd( -8.77507, -256.195, -39.9855, 0.22 ) }
    dend_27 { pt3dadd( -9.30893, -256.8, -40.761, 0.22 ) }
    dend_27 { pt3dadd( -9.85897, -257.393, -41.572, 0.51 ) }
    dend_27 { pt3dadd( -10.1519, -257.723, -42.0278, 0.81 ) }
    dend_27 { pt3dadd( -10.5215, -258.221, -42.6186, 0.95 ) }
    dend_27 { pt3dadd( -11.7759, -260.289, -44.8421, 0.51 ) }
    dend_27 { pt3dadd( -11.8936, -260.544, -45.0768, 0.51 ) }
    dend_27 { pt3dadd( -12.1719, -261.27, -45.6917, 0.15 ) }
    dend_27 { pt3dadd( -12.3291, -261.787, -46.0786, 0.15 ) }
    dend_27 { pt3dadd( -12.6793, -263.178, -46.9961, 0.15 ) }
    dend_27 { pt3dadd( -12.9239, -264.23, -47.5336, 0.51 ) }
    dend_27 { pt3dadd( -13.2128, -265.147, -47.7279, 0.88 ) }
    // Section: dend_107, id: dend_107, parent: dend_105 (entry count 68/100)
    dend_107 { pt3dclear() }
    dend_107 { pt3dadd( 37.4667, -248.264, 30.665, 1.25 ) }
    dend_107 { pt3dadd( 37.4607, -249.519, 30.8346, 1.25 ) }
    dend_107 { pt3dadd( 37.4507, -249.935, 30.8948, 1.25 ) }
    dend_107 { pt3dadd( 37.365, -250.97, 31.0472, 0.95 ) }
    dend_107 { pt3dadd( 37.2767, -251.653, 31.1467, 0.73 ) }
    dend_107 { pt3dadd( 37.1715, -252.365, 31.2433, 0.73 ) }
    dend_107 { pt3dadd( 37.1077, -252.882, 31.31, 0.51 ) }
    dend_107 { pt3dadd( 37.069, -253.31, 31.3596, 0.51 ) }
    dend_107 { pt3dadd( 37.0881, -253.993, 31.3848, 0.51 ) }
    dend_107 { pt3dadd( 37.1213, -254.341, 31.3704, 0.73 ) }
    dend_107 { pt3dadd( 37.1936, -255.168, 31.2897, 0.59 ) }
    dend_107 { pt3dadd( 37.2359, -255.769, 31.2049, 0.59 ) }
    dend_107 { pt3dadd( 37.2636, -256.742, 31.0738, 0.81 ) }
    dend_107 { pt3dadd( 37.2106, -257.895, 30.9289, 0.95 ) }
    dend_107 { pt3dadd( 37.0493, -259.114, 30.7913, 0.59 ) }
    dend_107 { pt3dadd( 36.889, -259.848, 30.73, 0.59 ) }
    dend_107 { pt3dadd( 36.6436, -260.732, 30.6806, 0.95 ) }
    dend_107 { pt3dadd( 36.2778, -261.985, 30.6482, 0.59 ) }
    dend_107 { pt3dadd( 35.9751, -263.065, 30.668, 0.59 ) }
    dend_107 { pt3dadd( 35.8519, -263.802, 30.7348, 0.59 ) }
    dend_107 { pt3dadd( 35.8499, -264.261, 30.7806, 0.59 ) }
    dend_107 { pt3dadd( 35.9204, -265.094, 30.8431, 0.29 ) }
    dend_107 { pt3dadd( 36.0403, -266.152, 30.8771, 0.29 ) }
    dend_107 { pt3dadd( 36.135, -266.863, 30.8612, 0.59 ) }
    dend_107 { pt3dadd( 36.2772, -268.004, 30.7688, 0.81 ) }
    dend_107 { pt3dadd( 36.3902, -268.998, 30.6461, 0.81 ) }
    dend_107 { pt3dadd( 36.4233, -269.808, 30.5059, 0.81 ) }
    dend_107 { pt3dadd( 36.3619, -270.637, 30.3611, 0.59 ) }
    dend_107 { pt3dadd( 36.1277, -271.959, 30.1339, 0.66 ) }
    dend_107 { pt3dadd( 35.9839, -272.589, 30.0413, 0.66 ) }
    dend_107 { pt3dadd( 35.744, -273.575, 29.9369, 0.81 ) }
    dend_107 { pt3dadd( 35.5716, -274.425, 29.9096, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_46()
}

proc basic_shape_46() {
    dend_107 { pt3dadd( 35.4226, -275.42, 29.9271, 0.44 ) }
    dend_107 { pt3dadd( 35.296, -276.16, 29.9744, 0.73 ) }
    dend_107 { pt3dadd( 35.1161, -276.884, 30.0391, 0.73 ) }
    dend_107 { pt3dadd( 34.8839, -277.685, 30.1217, 0.73 ) }
    dend_107 { pt3dadd( 34.6902, -278.329, 30.1916, 0.73 ) }
    dend_107 { pt3dadd( 34.4786, -279.162, 30.252, 0.73 ) }
    dend_107 { pt3dadd( 34.1316, -280.844, 30.2963, 0.88 ) }
    dend_107 { pt3dadd( 33.973, -281.862, 30.2827, 0.37 ) }
    dend_107 { pt3dadd( 33.8923, -282.525, 30.2369, 0.37 ) }
    dend_107 { pt3dadd( 33.7431, -283.773, 30.143, 0.37 ) }
    dend_107 { pt3dadd( 33.5245, -285.19, 30.0914, 0.37 ) }
    dend_107 { pt3dadd( 33.2679, -286.685, 30.0806, 1.03 ) }
    dend_107 { pt3dadd( 33.0135, -288.212, 30.1072, 0.37 ) }
    dend_107 { pt3dadd( 32.789, -289.519, 30.1536, 0.66 ) }
    dend_107 { pt3dadd( 32.5436, -290.947, 30.2294, 0.29 ) }
    dend_107 { pt3dadd( 32.2103, -293.032, 30.4313, 0.66 ) }
    dend_107 { pt3dadd( 32.1039, -293.62, 30.5324, 0.66 ) }
    dend_107 { pt3dadd( 32.0207, -293.979, 30.6227, 0.66 ) }
    dend_107 { pt3dadd( 31.6926, -295.15, 30.9835, 0.66 ) }
    dend_107 { pt3dadd( 31.3393, -296.473, 31.4327, 0.22 ) }
    dend_107 { pt3dadd( 31.085, -297.604, 31.7732, 0.59 ) }
    dend_107 { pt3dadd( 30.8401, -298.794, 32.0987, 0.44 ) }
    dend_107 { pt3dadd( 30.4765, -300.247, 32.498, 0.44 ) }
    dend_107 { pt3dadd( 30.2375, -301.166, 32.7336, 0.44 ) }
    dend_107 { pt3dadd( 30.0294, -301.955, 32.9058, 0.44 ) }
    dend_107 { pt3dadd( 29.8139, -302.981, 33.0501, 0.44 ) }
    dend_107 { pt3dadd( 29.7005, -303.879, 33.0916, 0.44 ) }
    dend_107 { pt3dadd( 29.6654, -305.171, 33.0356, 0.95 ) }
    dend_107 { pt3dadd( 29.7184, -306.332, 32.8899, 0.44 ) }
    dend_107 { pt3dadd( 29.8058, -307.216, 32.7467, 0.29 ) }
    dend_107 { pt3dadd( 29.9728, -308.471, 32.4842, 0.59 ) }
    dend_107 { pt3dadd( 30.056, -308.958, 32.3745, 0.59 ) }
    dend_107 { pt3dadd( 30.1885, -309.569, 32.2129, 0.59 ) }
    dend_107 { pt3dadd( 30.382, -310.287, 32.0118, 0.37 ) }
    dend_107 { pt3dadd( 30.7125, -311.623, 31.6764, 0.66 ) }
    dend_107 { pt3dadd( 30.9522, -312.762, 31.4885, 0.29 ) }
    dend_107 { pt3dadd( 31.0481, -313.224, 31.4363, 0.66 ) }
    dend_107 { pt3dadd( 31.3321, -314.359, 31.3542, 0.22 ) }
    dend_107 { pt3dadd( 31.5825, -315.284, 31.3061, 0.59 ) }
    dend_107 { pt3dadd( 31.8456, -316.211, 31.2655, 0.66 ) }
    dend_107 { pt3dadd( 32.2779, -317.586, 31.2277, 0.81 ) }
    dend_107 { pt3dadd( 32.4897, -318.139, 31.2095, 0.81 ) }
    dend_107 { pt3dadd( 32.9255, -319.092, 31.1596, 0.37 ) }
    dend_107 { pt3dadd( 33.3206, -319.857, 31.0788, 0.37 ) }
    dend_107 { pt3dadd( 33.8511, -320.779, 30.8951, 0.51 ) }
    dend_107 { pt3dadd( 34.4466, -321.667, 30.6066, 0.51 ) }
    dend_107 { pt3dadd( 35.0459, -322.521, 30.2692, 0.81 ) }
    dend_107 { pt3dadd( 35.5391, -323.267, 29.9546, 0.51 ) }
    dend_107 { pt3dadd( 36.0033, -324.009, 29.6378, 0.81 ) }
    dend_107 { pt3dadd( 36.5366, -324.917, 29.2578, 0.81 ) }
    dend_107 { pt3dadd( 37.4676, -326.586, 28.5219, 0.44 ) }
    dend_107 { pt3dadd( 37.8632, -327.364, 28.1741, 0.22 ) }
    dend_107 { pt3dadd( 38.2737, -328.267, 27.7901, 0.22 ) }
    dend_107 { pt3dadd( 38.5095, -328.821, 27.5573, 0.22 ) }
    dend_107 { pt3dadd( 39.0523, -330.1, 27.0822, 0.22 ) }
    // Section: dend_106, id: dend_106, parent: dend_105 (entry count 55/100)
    dend_106 { pt3dclear() }
    dend_106 { pt3dadd( 37.4667, -248.264, 30.665, 0.73 ) }
    dend_106 { pt3dadd( 38.1524, -248.772, 30.7646, 0.73 ) }
    dend_106 { pt3dadd( 39.1025, -249.457, 30.8322, 0.59 ) }
    dend_106 { pt3dadd( 39.3983, -249.669, 30.8428, 0.81 ) }
    dend_106 { pt3dadd( 40.4246, -250.451, 30.9252, 0.44 ) }
    dend_106 { pt3dadd( 41.285, -251.169, 31.0154, 0.44 ) }
    dend_106 { pt3dadd( 41.9631, -251.797, 31.0975, 0.44 ) }
    dend_106 { pt3dadd( 42.7566, -252.722, 31.247, 0.73 ) }
    dend_106 { pt3dadd( 43.3226, -253.515, 31.3266, 0.51 ) }
    dend_106 { pt3dadd( 44.0134, -254.564, 31.4066, 0.51 ) }
    dend_106 { pt3dadd( 44.4135, -255.191, 31.456, 0.51 ) }
    dend_106 { pt3dadd( 44.8657, -255.876, 31.5243, 0.22 ) }
    dend_106 { pt3dadd( 45.6597, -257.087, 31.6605, 1.32 ) }
    dend_106 { pt3dadd( 46.572, -258.534, 31.8375, 0.29 ) }
    dend_106 { pt3dadd( 46.9294, -259.112, 31.8951, 0.29 ) }
    dend_106 { pt3dadd( 47.4994, -260.103, 31.9783, 0.59 ) }
    dend_106 { pt3dadd( 47.9817, -261.061, 32.0806, 0.29 ) }
    dend_106 { pt3dadd( 48.2023, -261.617, 32.1631, 0.29 ) }
    dend_106 { pt3dadd( 48.4501, -262.39, 32.2932, 0.29 ) }
    dend_106 { pt3dadd( 48.6336, -263.037, 32.4159, 0.29 ) }
    dend_106 { pt3dadd( 48.9879, -264.34, 32.6373, 1.54 ) }
    dend_106 { pt3dadd( 49.4189, -266.014, 32.8969, 1.1 ) }
    dend_106 { pt3dadd( 49.7653, -267.496, 33.1187, 0.37 ) }
    dend_106 { pt3dadd( 50.0612, -268.728, 33.2929, 0.37 ) }
    dend_106 { pt3dadd( 50.405, -269.885, 33.4409, 0.37 ) }
    dend_106 { pt3dadd( 50.6046, -270.388, 33.4955, 0.37 ) }
    dend_106 { pt3dadd( 51.0306, -271.36, 33.6128, 0.37 ) }
    dend_106 { pt3dadd( 51.7443, -272.947, 33.8397, 0.59 ) }
    dend_106 { pt3dadd( 52.0013, -273.486, 33.9224, 0.59 ) }
    dend_106 { pt3dadd( 52.6509, -274.815, 34.2019, 0.29 ) }
    dend_106 { pt3dadd( 53.4462, -276.367, 34.5846, 0.59 ) }
    dend_106 { pt3dadd( 54.1544, -277.668, 34.9567, 0.37 ) }
    dend_106 { pt3dadd( 54.6156, -278.46, 35.2177, 0.37 ) }
    dend_106 { pt3dadd( 55.0444, -279.126, 35.5035, 0.37 ) }
    dend_106 { pt3dadd( 55.457, -279.768, 35.8471, 0.88 ) }
    dend_106 { pt3dadd( 56.1916, -281.019, 36.5442, 0.22 ) }
    dend_106 { pt3dadd( 56.6114, -281.763, 36.9284, 0.22 ) }
    dend_106 { pt3dadd( 56.8931, -282.262, 37.1499, 0.59 ) }
    dend_106 { pt3dadd( 57.5504, -283.447, 37.635, 0.81 ) }
    dend_106 { pt3dadd( 58.2541, -284.626, 38.0657, 1.03 ) }
    dend_106 { pt3dadd( 59.4417, -286.319, 38.602, 0.29 ) }
    dend_106 { pt3dadd( 60.2803, -287.318, 38.9157, 0.59 ) }
    dend_106 { pt3dadd( 60.9681, -288.061, 39.123, 0.59 ) }
    dend_106 { pt3dadd( 61.7521, -288.868, 39.3145, 0.44 ) }
    dend_106 { pt3dadd( 62.6706, -289.832, 39.4739, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_47()
}

proc basic_shape_47() {
    dend_106 { pt3dadd( 63.6702, -290.881, 39.6166, 0.44 ) }
    dend_106 { pt3dadd( 64.351, -291.583, 39.724, 0.44 ) }
    dend_106 { pt3dadd( 65.1493, -292.451, 39.8667, 0.44 ) }
    dend_106 { pt3dadd( 65.8586, -293.336, 40.0106, 0.44 ) }
    dend_106 { pt3dadd( 66.2418, -293.983, 40.1047, 0.44 ) }
    dend_106 { pt3dadd( 66.6629, -295.035, 40.2284, 0.44 ) }
    dend_106 { pt3dadd( 66.9203, -296.027, 40.3147, 0.29 ) }
    dend_106 { pt3dadd( 67.0592, -297.083, 40.3739, 0.29 ) }
    dend_106 { pt3dadd( 67.1188, -297.814, 40.4111, 0.29 ) }
    dend_106 { pt3dadd( 67.1371, -298.663, 40.4581, 0.29 ) }
    dend_106 { pt3dadd( 67.0959, -299.789, 40.5227, 0.29 ) }
    dend_106 { pt3dadd( 67.0048, -300.41, 40.5567, 0.29 ) }
    dend_106 { pt3dadd( 66.6804, -301.591, 40.6035, 0.29 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 13/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 9.30308, -295.305, -28.8023, 0.37 ) }
    dend_30 { pt3dadd( 9.61698, -296.989, -28.4869, 0.37 ) }
    dend_30 { pt3dadd( 9.80393, -298.097, -28.2635, 0.37 ) }
    dend_30 { pt3dadd( 9.89042, -298.696, -28.1508, 0.51 ) }
    dend_30 { pt3dadd( 10.0213, -299.467, -27.9953, 0.51 ) }
    dend_30 { pt3dadd( 10.2348, -300.525, -27.7778, 0.51 ) }
    dend_30 { pt3dadd( 10.4828, -301.649, -27.5484, 0.22 ) }
    dend_30 { pt3dadd( 10.721, -302.66, -27.3753, 0.22 ) }
    dend_30 { pt3dadd( 11.0281, -304.039, -27.1358, 0.95 ) }
    dend_30 { pt3dadd( 11.3123, -305.533, -26.8232, 0.22 ) }
    dend_30 { pt3dadd( 11.39, -306.056, -26.6967, 0.22 ) }
    dend_30 { pt3dadd( 11.4513, -306.589, -26.5655, 0.51 ) }
    dend_30 { pt3dadd( 11.6103, -308.432, -26.1884, 0.29 ) }
    dend_30 { pt3dadd( 11.6348, -309.301, -26.0659, 0.29 ) }
    dend_30 { pt3dadd( 11.5891, -310.477, -25.9335, 0.81 ) }
    dend_30 { pt3dadd( 11.4491, -311.903, -25.8162, 0.22 ) }
    dend_30 { pt3dadd( 11.1806, -313.937, -25.7301, 0.22 ) }
    dend_30 { pt3dadd( 10.9732, -315.331, -25.7156, 0.81 ) }
    dend_30 { pt3dadd( 10.7414, -316.823, -25.7562, 0.22 ) }
    dend_30 { pt3dadd( 10.6192, -317.612, -25.809, 0.22 ) }
    dend_30 { pt3dadd( 10.4481, -318.582, -25.9093, 0.95 ) }
    dend_30 { pt3dadd( 10.1641, -320.018, -26.0404, 0.29 ) }
    dend_30 { pt3dadd( 10.0668, -320.518, -26.0581, 0.29 ) }
    dend_30 { pt3dadd( 9.95913, -321.222, -26.0377, 0.29 ) }
    dend_30 { pt3dadd( 9.89336, -321.895, -25.9737, 0.29 ) }
    dend_30 { pt3dadd( 9.83034, -322.541, -25.8943, 0.44 ) }
    dend_30 { pt3dadd( 9.72861, -323.543, -25.7274, 0.15 ) }
    dend_30 { pt3dadd( 9.52534, -325.166, -25.4164, 0.44 ) }
    dend_30 { pt3dadd( 9.24457, -326.994, -25.0789, 0.15 ) }
    dend_30 { pt3dadd( 9.02625, -328.364, -24.8361, 0.81 ) }
    dend_30 { pt3dadd( 8.93181, -329.032, -24.7181, 0.81 ) }
    dend_30 { pt3dadd( 8.80953, -330.103, -24.5269, 0.81 ) }
    dend_30 { pt3dadd( 8.58405, -332.175, -24.1705, 0.15 ) }
    dend_30 { pt3dadd( 8.48016, -333.117, -23.9847, 0.15 ) }
    dend_30 { pt3dadd( 8.33854, -334.121, -23.7422, 0.44 ) }
    dend_30 { pt3dadd( 8.05363, -335.739, -23.3259, 0.22 ) }
    dend_30 { pt3dadd( 7.9214, -336.395, -23.1123, 0.44 ) }
    dend_30 { pt3dadd( 7.74996, -337.042, -22.8212, 0.81 ) }
    dend_30 { pt3dadd( 7.49228, -337.818, -22.3731, 0.44 ) }
    dend_30 { pt3dadd( 6.95513, -339.202, -21.4824, 0.22 ) }
    dend_30 { pt3dadd( 6.66072, -339.802, -21.0469, 0.22 ) }
    dend_30 { pt3dadd( 6.13188, -340.672, -20.3451, 0.81 ) }
    dend_30 { pt3dadd( 5.39039, -341.79, -19.4022, 0.22 ) }
    dend_30 { pt3dadd( 5.10558, -342.215, -19.0224, 0.37 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 57/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 9.30308, -295.305, -28.8023, 0.22 ) }
    dend_29 { pt3dadd( 7.70447, -295.396, -29.1379, 0.22 ) }
    dend_29 { pt3dadd( 6.41874, -295.513, -29.3333, 0.22 ) }
    dend_29 { pt3dadd( 5.60367, -295.663, -29.4295, 0.22 ) }
    dend_29 { pt3dadd( 4.7227, -295.88, -29.5211, 0.22 ) }
    dend_29 { pt3dadd( 3.51891, -296.225, -29.6343, 0.22 ) }
    dend_29 { pt3dadd( 2.18156, -296.646, -29.7469, 0.22 ) }
    dend_29 { pt3dadd( 0.6709, -297.215, -29.7612, 0.22 ) }
    dend_29 { pt3dadd( -1.15248, -297.99, -29.6944, 0.22 ) }
    dend_29 { pt3dadd( -1.73128, -298.259, -29.6618, 0.22 ) }
    dend_29 { pt3dadd( -2.31742, -298.557, -29.6222, 0.44 ) }
    dend_29 { pt3dadd( -3.31849, -299.129, -29.5366, 0.22 ) }
    dend_29 { pt3dadd( -4.19708, -299.674, -29.4362, 0.22 ) }
    dend_29 { pt3dadd( -5.11265, -300.233, -29.2885, 0.22 ) }
    dend_29 { pt3dadd( -5.69444, -300.521, -29.1575, 0.44 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_119, dend_116, dend_109, dend_42, dend_3, dend_0, dend_121, dend_120, dend_118, dend_117, dend_115, dend_110, dend_50, dend_43, dend_5, dend_4, dend_2, dend_1, dend_129, dend_122, dend_114, dend_111, dend_66, dend_51, dend_47, dend_44, dend_7, dend_6, dend_131, dend_130, dend_124, dend_123, dend_113, dend_112, dend_70, dend_67, dend_65, dend_52, dend_49, dend_48, dend_46, dend_45, dend_13, dend_8, dend_128, dend_125, dend_82, dend_71, dend_69, dend_68, dend_56, dend_53, dend_39, dend_14, dend_12, dend_9, dend_127, dend_126, dend_86, dend_83, dend_77, dend_72, dend_62, dend_57, dend_55, dend_54, dend_41, dend_40, dend_36, dend_15, dend_11, dend_10, dend_88, dend_87, dend_85, dend_84, dend_79, dend_78, dend_76, dend_73, dend_64, dend_63, dend_61, dend_58, dend_38, dend_37, dend_33, dend_16, dend_92, dend_89, dend_81, dend_80, dend_75, dend_74, dend_60, dend_59, dend_35, dend_34, dend_18, dend_17, dend_94, dend_93, dend_91, dend_90, dend_32, dend_19, dend_96, dend_95, dend_21, dend_20, dend_100, dend_97, dend_23, dend_22, dend_102, dend_101, dend_99, dend_98, dend_31, dend_24, dend_108, dend_103, dend_26, dend_25, dend_105, dend_104, dend_28, dend_27, dend_107, dend_106, dend_30, dend_29]}
    ModelViewParmSubset_2 = new SectionList()
    dend_119 ModelViewParmSubset_2.append()
    dend_116 ModelViewParmSubset_2.append()
    dend_109 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_121 ModelViewParmSubset_2.append()
    dend_120 ModelViewParmSubset_2.append()
    dend_118 ModelViewParmSubset_2.append()
    dend_117 ModelViewParmSubset_2.append()
    dend_115 ModelViewParmSubset_2.append()
    dend_110 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_129 ModelViewParmSubset_2.append()
    dend_122 ModelViewParmSubset_2.append()
    dend_114 ModelViewParmSubset_2.append()
    dend_111 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_131 ModelViewParmSubset_2.append()
    dend_130 ModelViewParmSubset_2.append()
    dend_124 ModelViewParmSubset_2.append()
    dend_123 ModelViewParmSubset_2.append()
    dend_113 ModelViewParmSubset_2.append()
    dend_112 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_128 ModelViewParmSubset_2.append()
    dend_125 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_127 ModelViewParmSubset_2.append()
    dend_126 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_92 ModelViewParmSubset_2.append()
    dend_89 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_34 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_94 ModelViewParmSubset_2.append()
    dend_93 ModelViewParmSubset_2.append()
    dend_91 ModelViewParmSubset_2.append()
    dend_90 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_96 ModelViewParmSubset_2.append()
    dend_95 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_100 ModelViewParmSubset_2.append()
    dend_97 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_102 ModelViewParmSubset_2.append()
    dend_101 ModelViewParmSubset_2.append()
    dend_99 ModelViewParmSubset_2.append()
    dend_98 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_108 ModelViewParmSubset_2.append()
    dend_103 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_105 ModelViewParmSubset_2.append()
    dend_104 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_107 ModelViewParmSubset_2.append()
    dend_106 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_119, dend_116, dend_109, dend_42, dend_3, dend_0, dend_121, dend_120, dend_118, dend_117, dend_115, dend_110, dend_50, dend_43, dend_5, dend_4, dend_2, dend_1, dend_129, dend_122, dend_114, dend_111, dend_66, dend_51, dend_47, dend_44, dend_7, dend_6, dend_131, dend_130, dend_124, dend_123, dend_113, dend_112, dend_70, dend_67, dend_65, dend_52, dend_49, dend_48, dend_46, dend_45, dend_13, dend_8, dend_128, dend_125, dend_82, dend_71, dend_69, dend_68, dend_56, dend_53, dend_39, dend_14, dend_12, dend_9, dend_127, dend_126, dend_86, dend_83, dend_77, dend_72, dend_62, dend_57, dend_55, dend_54, dend_41, dend_40, dend_36, dend_15, dend_11, dend_10, dend_88, dend_87, dend_85, dend_84, dend_79, dend_78, dend_76, dend_73, dend_64, dend_63, dend_61, dend_58, dend_38, dend_37, dend_33, dend_16, dend_92, dend_89, dend_81, dend_80, dend_75, dend_74, dend_60, dend_59, dend_35, dend_34, dend_18, dend_17, dend_94, dend_93, dend_91, dend_90, dend_32, dend_19, dend_96, dend_95, dend_21, dend_20, dend_100, dend_97, dend_23, dend_22, dend_102, dend_101, dend_99, dend_98, dend_31, dend_24, dend_108, dend_103, dend_26, dend_25, dend_105, dend_104, dend_28, dend_27, dend_107, dend_106, dend_30, dend_29]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_119 ModelViewParmSubset_4.append()
    dend_116 ModelViewParmSubset_4.append()
    dend_109 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_121 ModelViewParmSubset_4.append()
    dend_120 ModelViewParmSubset_4.append()
    dend_118 ModelViewParmSubset_4.append()
    dend_117 ModelViewParmSubset_4.append()
    dend_115 ModelViewParmSubset_4.append()
    dend_110 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_129 ModelViewParmSubset_4.append()
    dend_122 ModelViewParmSubset_4.append()
    dend_114 ModelViewParmSubset_4.append()
    dend_111 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_131 ModelViewParmSubset_4.append()
    dend_130 ModelViewParmSubset_4.append()
    dend_124 ModelViewParmSubset_4.append()
    dend_123 ModelViewParmSubset_4.append()
    dend_113 ModelViewParmSubset_4.append()
    dend_112 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_128 ModelViewParmSubset_4.append()
    dend_125 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_127 ModelViewParmSubset_4.append()
    dend_126 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_62 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_92 ModelViewParmSubset_4.append()
    dend_89 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_94 ModelViewParmSubset_4.append()
    dend_93 ModelViewParmSubset_4.append()
    dend_91 ModelViewParmSubset_4.append()
    dend_90 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_96 ModelViewParmSubset_4.append()
    dend_95 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_100 ModelViewParmSubset_4.append()
    dend_97 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_102 ModelViewParmSubset_4.append()
    dend_101 ModelViewParmSubset_4.append()
    dend_99 ModelViewParmSubset_4.append()
    dend_98 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_108 ModelViewParmSubset_4.append()
    dend_103 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_105 ModelViewParmSubset_4.append()
    dend_104 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_107 ModelViewParmSubset_4.append()
    dend_106 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_119, dend_116, dend_109, dend_42, dend_3, dend_0, axon_0, dend_121, dend_120, dend_118, dend_117, dend_115, dend_110, dend_50, dend_43, dend_5, dend_4, dend_2, dend_1, axon_1, dend_129, dend_122, dend_114, dend_111, dend_66, dend_51, dend_47, dend_44, dend_7, dend_6, dend_131, dend_130, dend_124, dend_123, dend_113, dend_112, dend_70, dend_67, dend_65, dend_52, dend_49, dend_48, dend_46, dend_45, dend_13, dend_8, dend_128, dend_125, dend_82, dend_71, dend_69, dend_68, dend_56, dend_53, dend_39, dend_14, dend_12, dend_9, dend_127, dend_126, dend_86, dend_83, dend_77, dend_72, dend_62, dend_57, dend_55, dend_54, dend_41, dend_40, dend_36, dend_15, dend_11, dend_10, dend_88, dend_87, dend_85, dend_84, dend_79, dend_78, dend_76, dend_73, dend_64, dend_63, dend_61, dend_58, dend_38, dend_37, dend_33, dend_16, dend_92, dend_89, dend_81, dend_80, dend_75, dend_74, dend_60, dend_59, dend_35, dend_34, dend_18, dend_17, dend_94, dend_93, dend_91, dend_90, dend_32, dend_19, dend_96, dend_95, dend_21, dend_20, dend_100, dend_97, dend_23, dend_22, dend_102, dend_101, dend_99, dend_98, dend_31, dend_24, dend_108, dend_103, dend_26, dend_25, dend_105, dend_104, dend_28, dend_27, dend_107, dend_106, dend_30, dend_29]}
    ModelViewParmSubset_5 = new SectionList()
    dend_119 ModelViewParmSubset_5.append()
    dend_116 ModelViewParmSubset_5.append()
    dend_109 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_121 ModelViewParmSubset_5.append()
    dend_120 ModelViewParmSubset_5.append()
    dend_118 ModelViewParmSubset_5.append()
    dend_117 ModelViewParmSubset_5.append()
    dend_115 ModelViewParmSubset_5.append()
    dend_110 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_129 ModelViewParmSubset_5.append()
    dend_122 ModelViewParmSubset_5.append()
    dend_114 ModelViewParmSubset_5.append()
    dend_111 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_131 ModelViewParmSubset_5.append()
    dend_130 ModelViewParmSubset_5.append()
    dend_124 ModelViewParmSubset_5.append()
    dend_123 ModelViewParmSubset_5.append()
    dend_113 ModelViewParmSubset_5.append()
    dend_112 ModelViewParmSubset_5.append()
    dend_70 ModelViewParmSubset_5.append()
    dend_67 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_128 ModelViewParmSubset_5.append()
    dend_125 ModelViewParmSubset_5.append()
    dend_82 ModelViewParmSubset_5.append()
    dend_71 ModelViewParmSubset_5.append()
    dend_69 ModelViewParmSubset_5.append()
    dend_68 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_127 ModelViewParmSubset_5.append()
    dend_126 ModelViewParmSubset_5.append()
    dend_86 ModelViewParmSubset_5.append()
    dend_83 ModelViewParmSubset_5.append()
    dend_77 ModelViewParmSubset_5.append()
    dend_72 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_88 ModelViewParmSubset_5.append()
    dend_87 ModelViewParmSubset_5.append()
    dend_85 ModelViewParmSubset_5.append()
    dend_84 ModelViewParmSubset_5.append()
    dend_79 ModelViewParmSubset_5.append()
    dend_78 ModelViewParmSubset_5.append()
    dend_76 ModelViewParmSubset_5.append()
    dend_73 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_92 ModelViewParmSubset_5.append()
    dend_89 ModelViewParmSubset_5.append()
    dend_81 ModelViewParmSubset_5.append()
    dend_80 ModelViewParmSubset_5.append()
    dend_75 ModelViewParmSubset_5.append()
    dend_74 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_94 ModelViewParmSubset_5.append()
    dend_93 ModelViewParmSubset_5.append()
    dend_91 ModelViewParmSubset_5.append()
    dend_90 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_96 ModelViewParmSubset_5.append()
    dend_95 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_100 ModelViewParmSubset_5.append()
    dend_97 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_102 ModelViewParmSubset_5.append()
    dend_101 ModelViewParmSubset_5.append()
    dend_99 ModelViewParmSubset_5.append()
    dend_98 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_108 ModelViewParmSubset_5.append()
    dend_103 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_105 ModelViewParmSubset_5.append()
    dend_104 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_107 ModelViewParmSubset_5.append()
    dend_106 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_120]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_120 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_118]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_118 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_117]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_117 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_115]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_115 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_4 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_2 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_1 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_122]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_122 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_114]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_114 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_6 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_131]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_131 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_113]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_113 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_112]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_112 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_49 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_128]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_128 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_125]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_125 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_53 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_12 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_41 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_40 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_36 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_11 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_10 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_87 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_85 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_84 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_100 = new SectionList()
    dend_35 OneSecGrp_SectionRef_100.append()

    // Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_101 = new SectionList()
    dend_34 OneSecGrp_SectionRef_101.append()

    // Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_103 = new SectionList()
    dend_17 OneSecGrp_SectionRef_103.append()

    // Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_93]}
    OneSecGrp_SectionRef_105 = new SectionList()
    dend_93 OneSecGrp_SectionRef_105.append()

    // Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_91]}
    OneSecGrp_SectionRef_106 = new SectionList()
    dend_91 OneSecGrp_SectionRef_106.append()

    // Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_90]}
    OneSecGrp_SectionRef_107 = new SectionList()
    dend_90 OneSecGrp_SectionRef_107.append()

    // Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_108 = new SectionList()
    dend_32 OneSecGrp_SectionRef_108.append()

    // Group: {name=OneSecGrp_SectionRef_110, groups=[], sections=[dend_96]}
    OneSecGrp_SectionRef_110 = new SectionList()
    dend_96 OneSecGrp_SectionRef_110.append()

    // Group: {name=OneSecGrp_SectionRef_111, groups=[], sections=[dend_95]}
    OneSecGrp_SectionRef_111 = new SectionList()
    dend_95 OneSecGrp_SectionRef_111.append()

    // Group: {name=OneSecGrp_SectionRef_113, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_113 = new SectionList()
    dend_20 OneSecGrp_SectionRef_113.append()

    // Group: {name=OneSecGrp_SectionRef_115, groups=[], sections=[dend_97]}
    OneSecGrp_SectionRef_115 = new SectionList()
    dend_97 OneSecGrp_SectionRef_115.append()

    // Group: {name=OneSecGrp_SectionRef_116, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_116 = new SectionList()
    dend_23 OneSecGrp_SectionRef_116.append()

    // Group: {name=OneSecGrp_SectionRef_117, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_117 = new SectionList()
    dend_22 OneSecGrp_SectionRef_117.append()

    // Group: {name=OneSecGrp_SectionRef_119, groups=[], sections=[dend_101]}
    OneSecGrp_SectionRef_119 = new SectionList()
    dend_101 OneSecGrp_SectionRef_119.append()

    // Group: {name=OneSecGrp_SectionRef_121, groups=[], sections=[dend_98]}
    OneSecGrp_SectionRef_121 = new SectionList()
    dend_98 OneSecGrp_SectionRef_121.append()

    // Group: {name=OneSecGrp_SectionRef_122, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_122 = new SectionList()
    dend_31 OneSecGrp_SectionRef_122.append()

    // Group: {name=OneSecGrp_SectionRef_123, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_123 = new SectionList()
    dend_24 OneSecGrp_SectionRef_123.append()

    // Group: {name=OneSecGrp_SectionRef_124, groups=[], sections=[dend_108]}
    OneSecGrp_SectionRef_124 = new SectionList()
    dend_108 OneSecGrp_SectionRef_124.append()

    // Group: {name=OneSecGrp_SectionRef_127, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_127 = new SectionList()
    dend_25 OneSecGrp_SectionRef_127.append()

    // Group: {name=OneSecGrp_SectionRef_128, groups=[], sections=[dend_105]}
    OneSecGrp_SectionRef_128 = new SectionList()
    dend_105 OneSecGrp_SectionRef_128.append()

    // Group: {name=OneSecGrp_SectionRef_130, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_130 = new SectionList()
    dend_28 OneSecGrp_SectionRef_130.append()

    // Group: {name=OneSecGrp_SectionRef_131, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_131 = new SectionList()
    dend_27 OneSecGrp_SectionRef_131.append()

    // Group: {name=OneSecGrp_SectionRef_132, groups=[], sections=[dend_107]}
    OneSecGrp_SectionRef_132 = new SectionList()
    dend_107 OneSecGrp_SectionRef_132.append()

    // Group: {name=OneSecGrp_SectionRef_133, groups=[], sections=[dend_106]}
    OneSecGrp_SectionRef_133 = new SectionList()
    dend_106 OneSecGrp_SectionRef_133.append()

    // Group: {name=OneSecGrp_SectionRef_134, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_134 = new SectionList()
    dend_30 OneSecGrp_SectionRef_134.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_42 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_119]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_119 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_3 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_5 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_109]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_109 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_121]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_121 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_7 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_50 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_66 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_43 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_44 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_13 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_8 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_116]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_116 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_70 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_14 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_47 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_82 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_51 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_71 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_110]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_110 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_15 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_16 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_86 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_83 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_39 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_67 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_72 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_9 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_46 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_129]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_129 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_111]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_111 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_102 = new SectionList()
    dend_18 OneSecGrp_SectionRef_102.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_45 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_68 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_65 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_69 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_48 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_130]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_130 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_52 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_88 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_56 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_57 OneSecGrp_SectionRef_67.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_33 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_109, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_109 = new SectionList()
    dend_19 OneSecGrp_SectionRef_109.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_58 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_92]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_92 OneSecGrp_SectionRef_92.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_77 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_112, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_112 = new SectionList()
    dend_21 OneSecGrp_SectionRef_112.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_62 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_76 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_61 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_98 = new SectionList()
    dend_60 OneSecGrp_SectionRef_98.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_73 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_89]}
    OneSecGrp_SectionRef_93 = new SectionList()
    dend_89 OneSecGrp_SectionRef_93.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_64 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_94]}
    OneSecGrp_SectionRef_104 = new SectionList()
    dend_94 OneSecGrp_SectionRef_104.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_63 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_99 = new SectionList()
    dend_59 OneSecGrp_SectionRef_99.append()

    // Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_97 = new SectionList()
    dend_74 OneSecGrp_SectionRef_97.append()

    // Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_96 = new SectionList()
    dend_75 OneSecGrp_SectionRef_96.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_78 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_79 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_37 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_94 = new SectionList()
    dend_81 OneSecGrp_SectionRef_94.append()

    // Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_95 = new SectionList()
    dend_80 OneSecGrp_SectionRef_95.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_38 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_123]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_123 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_124]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_124 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_55 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_114, groups=[], sections=[dend_100]}
    OneSecGrp_SectionRef_114 = new SectionList()
    dend_100 OneSecGrp_SectionRef_114.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_54 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_118, groups=[], sections=[dend_102]}
    OneSecGrp_SectionRef_118 = new SectionList()
    dend_102 OneSecGrp_SectionRef_118.append()

    // Group: {name=OneSecGrp_SectionRef_125, groups=[], sections=[dend_103]}
    OneSecGrp_SectionRef_125 = new SectionList()
    dend_103 OneSecGrp_SectionRef_125.append()

    // Group: {name=OneSecGrp_SectionRef_129, groups=[], sections=[dend_104]}
    OneSecGrp_SectionRef_129 = new SectionList()
    dend_104 OneSecGrp_SectionRef_129.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_126]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_126 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_127]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_127 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_120, groups=[], sections=[dend_99]}
    OneSecGrp_SectionRef_120 = new SectionList()
    dend_99 OneSecGrp_SectionRef_120.append()

    // Group: {name=OneSecGrp_SectionRef_126, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_126 = new SectionList()
    dend_26 OneSecGrp_SectionRef_126.append()

    // Group: {name=OneSecGrp_SectionRef_135, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_135 = new SectionList()
    dend_29 OneSecGrp_SectionRef_135.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104, dend_105, dend_106, dend_107, dend_108, dend_109, dend_110, dend_111, dend_112, dend_113, dend_114, dend_115, dend_116, dend_117, dend_118, dend_119, dend_120, dend_121, dend_122, dend_123, dend_124, dend_125, dend_126, dend_127, dend_128, dend_129, dend_130, dend_131], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()
    dend_89 basal.append()
    dend_90 basal.append()
    dend_91 basal.append()
    dend_92 basal.append()
    dend_93 basal.append()
    dend_94 basal.append()
    dend_95 basal.append()
    dend_96 basal.append()
    dend_97 basal.append()
    dend_98 basal.append()
    dend_99 basal.append()
    dend_100 basal.append()
    dend_101 basal.append()
    dend_102 basal.append()
    dend_103 basal.append()
    dend_104 basal.append()
    dend_105 basal.append()
    dend_106 basal.append()
    dend_107 basal.append()
    dend_108 basal.append()
    dend_109 basal.append()
    dend_110 basal.append()
    dend_111 basal.append()
    dend_112 basal.append()
    dend_113 basal.append()
    dend_114 basal.append()
    dend_115 basal.append()
    dend_116 basal.append()
    dend_117 basal.append()
    dend_118 basal.append()
    dend_119 basal.append()
    dend_120 basal.append()
    dend_121 basal.append()
    dend_122 basal.append()
    dend_123 basal.append()
    dend_124 basal.append()
    dend_125 basal.append()
    dend_126 basal.append()
    dend_127 basal.append()
    dend_128 basal.append()
    dend_129 basal.append()
    dend_130 basal.append()
    dend_131 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_119, dend_119, dend_119, dend_119, dend_119, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_42, dend_42, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_66, dend_66, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_130, dend_130, dend_130, dend_130, dend_130, dend_130, dend_130, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_70, dend_70, dend_70, dend_70, dend_70, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_82, dend_82, dend_82, dend_82, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_86, dend_86, dend_86, dend_86, dend_83, dend_83, dend_83, dend_83, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_57, dend_57, dend_57, dend_57, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_58, dend_58, dend_58, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_16, dend_16, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_120 all.append()
    dend_120 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_130 all.append()
    dend_130 all.append()
    dend_130 all.append()
    dend_130 all.append()
    dend_130 all.append()
    dend_130 all.append()
    dend_130 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_97 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_45()
}

proc subsets_45() {
    dend_99 all.append()
    dend_99 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_46()
}

proc subsets_46() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_47()
}

proc subsets_47() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_48()
}

proc subsets_48() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_49()
}

proc subsets_49() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_50()
}

proc subsets_50() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_51()
}

proc subsets_51() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_52()
}

proc subsets_52() {
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_53()
}

proc subsets_53() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_120 nseg = 7
    dend_118 nseg = 7
    dend_117 nseg = 7
    dend_115 nseg = 7
    dend_4 nseg = 5
    dend_2 nseg = 9
    dend_1 nseg = 3
    dend_122 nseg = 5
    dend_114 nseg = 7
    dend_6 nseg = 5
    dend_131 nseg = 7
    dend_113 nseg = 5
    dend_112 nseg = 3
    dend_49 nseg = 3
    dend_128 nseg = 3
    dend_125 nseg = 3
    dend_53 nseg = 3
    dend_12 nseg = 3
    dend_41 nseg = 7
    dend_40 nseg = 3
    dend_36 nseg = 3
    dend_11 nseg = 3
    dend_10 nseg = 3
    dend_87 nseg = 5
    dend_85 nseg = 3
    dend_84 nseg = 3
    dend_35 nseg = 5
    dend_34 nseg = 3
    dend_17 nseg = 5
    dend_93 nseg = 3
    dend_91 nseg = 3
    dend_90 nseg = 3
    dend_32 nseg = 5
    dend_96 nseg = 3
    dend_95 nseg = 3
    dend_20 nseg = 3
    dend_97 nseg = 3
    dend_23 nseg = 3
    dend_22 nseg = 5
    dend_101 nseg = 3
    dend_98 nseg = 3
    dend_31 nseg = 7
    dend_24 nseg = 3
    dend_108 nseg = 3
    dend_25 nseg = 5
    dend_105 nseg = 5
    dend_28 nseg = 3
    dend_27 nseg = 3
    dend_107 nseg = 5
    dend_106 nseg = 3
    dend_30 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L1_SLAC_76ffc1f69e_0_0


