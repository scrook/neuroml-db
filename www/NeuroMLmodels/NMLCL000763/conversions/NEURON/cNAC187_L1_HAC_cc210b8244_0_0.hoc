// Cell: cNAC187_L1_HAC_cc210b8244_0_0
/*
{
  "id" : "cNAC187_L1_HAC_cc210b8244_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-7.42336, -2.73511, 0.0, 3.5554", "-6.6933, -2.46566, 0.0, 6.55284", "-5.96323, -2.19621, 0.0, 8.16609", "-5.23316, -1.92676, 0.0, 9.69432", "-4.5031, -1.65731, 0.0, 10.5479", "-3.77303, -1.38786, 0.0, 11.3509", "-3.04297, -1.11841, 0.0, 12.1539", "-2.3129, -0.84896, 0.0, 12.74", "-1.58283, -0.579509, 0.0, 13.1304", "-0.852766, -0.310059, 0.0, 13.5181", "-0.1227, -0.0406084, 0.0, 13.684", "0.607366, 0.228842, 0.0, 13.7571", "1.33743, 0.498293, 0.0, 13.4597", "2.0675, 0.767743, 0.0, 12.8255", "2.79756, 1.03719, 0.0, 11.7727", "3.52763, 1.30664, 0.0, 10.7013", "4.2577, 1.57609, 0.0, 9.52247", "4.98776, 1.84555, 0.0, 8.25177", "5.71783, 2.115, 0.0, 6.86803", "6.4479, 2.38445, 0.0, 4.57629", "7.17796, 2.6539, 0.0, 2.70425" ]
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "3.5199, -6.01432, 3.35, 2.96", "3.5199, -6.01432, 3.35, 2.96", "4.20478, -7.50201, 4.19536, 2.05", "4.82021, -8.83883, 4.95499, 2.05", "5.69936, -10.7485, 6.04013, 2.28", "6.4727, -12.4283, 6.99467, 2.28", "6.92665, -13.4143, 7.55498, 2.05" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992435914503
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "4.0399, 5.78568, -3.72, 2.05", "4.0399, 5.78568, -3.72, 2.05", "4.7599, 6.35568, -4.7, 2.05" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992435914503
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-2.6301, -3.80432, -11.02, 1.14", "-3.59347, -4.08023, -11.5639, 1.14", "-5.32754, -4.57686, -12.5428, 0.91", "-6.9839, -5.05124, -13.4779, 0.91", "-7.75963, -5.27341, -13.9159, 1.14", "-9.0405, -5.64025, -14.639, 1.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992435914503
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-7.2001, 0.595674, -1.43, 0.91", "-8.37062, 1.65307, -1.1834, 0.91", "-9.71475, 2.86732, -0.900223, 0.91", "-10.143, 3.25418, -0.810001, 1.14", "-11.4468, 4.43199, -0.53532, 1.14", "-12.1623, 5.07836, -0.384577, 1.14", "-13.3295, 6.13281, -0.138665, 1.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992435914503
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "7.17796, 2.6539, 0.0, 0.46", "21.2501, 7.84761, 0.0, 0.46", "35.3223, 13.0413, 0.0, 0.46" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "6.92665, -13.4143, 7.55498, 0.68", "8.80222, -14.4121, 6.71136, 0.68", "10.3826, -15.1098, 5.99488, 0.68", "12.3023, -15.8117, 5.00014, 0.68", "13.6174, -16.1615, 4.23283, 0.68", "15.0841, -16.3834, 3.2898, 0.68", "16.6045, -16.4773, 2.31222, 0.68", "17.6347, -16.3716, 1.58555, 0.68", "18.9584, -16.0542, 0.700917, 0.91", "20.3805, -15.5837, -0.226702, 0.91", "22.299, -14.8393, -1.39442, 0.68", "23.6687, -14.2349, -2.18287, 0.91", "24.6796, -13.7449, -2.74611, 0.91", "26.5373, -12.8749, -3.69677, 0.91" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "6.92665, -13.4143, 7.55498, 2.05", "7.47915, -14.9944, 8.30974, 2.05", "8.09953, -16.7686, 9.15724, 2.05", "8.29178, -17.3184, 9.41986, 2.05" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "4.7599, 6.35568, -4.7, 1.14", "5.4799, 6.54568, -6.25, 1.14" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "4.7599, 6.35568, -4.7, 0.91", "4.38424, 7.3621, -5.66234, 0.91", "3.85034, 8.58064, -6.89437, 0.68", "3.35588, 9.63481, -7.9933, 0.68", "2.81942, 10.693, -9.14984, 0.68", "2.36884, 11.5562, -10.0751, 0.68", "1.82225, 12.5671, -11.1874, 0.68", "1.22116, 13.4769, -12.3318, 0.91", "0.624629, 14.128, -13.2401, 0.91", "-0.0214131, 14.621, -14.0026, 0.91", "-0.5464, 14.9429, -14.4962, 0.91", "-1.99979, 15.7214, -15.5659, 0.91", "-3.53534, 16.4857, -16.4598, 0.91", "-5.06868, 17.2335, -17.2257, 0.91", "-6.27618, 17.8608, -17.788, 0.91", "-7.22353, 18.3871, -18.2218, 0.91", "-8.70999, 19.2487, -18.9005, 0.91", "-9.42101, 19.6699, -19.1931, 0.91", "-10.2999, 20.2282, -19.5661, 0.91", "-11.7243, 21.073, -20.1569, 0.46", "-12.4853, 21.5036, -20.5022, 0.46", "-13.0994, 21.8021, -20.7914, 0.68", "-14.5413, 22.3977, -21.4818, 0.23", "-15.1855, 22.6091, -21.7524, 0.46", "-17.4623, 23.1568, -22.4315, 0.23" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-9.0405, -5.64025, -14.639, 1.14", "-9.89645, -6.45955, -14.3651, 1.14", "-11.2955, -7.79877, -13.9174, 0.91", "-13.0427, -9.47128, -13.3582, 0.91", "-14.1743, -10.5544, -12.9961, 0.91", "-15.8945, -12.201, -12.4456, 0.91", "-16.7651, -13.0343, -12.167, 0.91" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-9.0405, -5.64025, -14.639, 0.91", "-9.38806, -4.68096, -15.2254, 0.91", "-9.86925, -3.34683, -15.8284, 0.91", "-10.3469, -1.90934, -16.3162, 0.91", "-10.5167, -1.25638, -16.5268, 0.91", "-10.6902, -0.23127, -16.8894, 1.14", "-10.7842, 1.13542, -17.3651, 0.91", "-10.7554, 2.12291, -17.664, 0.91", "-10.6988, 3.18414, -17.9844, 1.14", "-10.6655, 4.6276, -18.4697, 0.91", "-10.6418, 6.05057, -19.1007, 0.68", "-10.6265, 7.61468, -20.0103, 0.68", "-10.6351, 9.31065, -21.2581, 0.91", "-10.7583, 10.8737, -22.6718, 0.68", "-10.9998, 12.2505, -24.0878, 0.68", "-11.4218, 13.7836, -25.7703, 0.91", "-11.8843, 15.1153, -27.3466, 0.91", "-12.2639, 16.0294, -28.5952, 0.91", "-12.8214, 17.2926, -30.5923, 0.91", "-12.9502, 17.589, -31.1239, 0.91", "-13.4052, 18.4352, -32.7464, 0.91" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-13.3295, 6.13281, -0.138665, 1.14", "-14.5226, 6.62304, -1.26113, 1.14", "-15.7237, 7.09782, -2.30813, 1.37", "-16.4918, 7.31995, -2.85643, 1.37", "-17.5954, 7.6099, -3.54487, 1.14", "-18.9811, 7.9869, -4.31666, 0.91", "-19.972, 8.30663, -4.84636, 0.91", "-21.4417, 8.85134, -5.62455, 0.91", "-23.2472, 9.62377, -6.67451, 1.14", "-24.2043, 10.1257, -7.32658, 1.14", "-25.0009, 10.677, -7.99557, 1.14", "-26.1348, 11.7533, -9.20082, 0.68", "-27.042, 12.8846, -10.4728, 1.14", "-27.4953, 13.6955, -11.3866, 1.14", "-27.7987, 14.4645, -12.2377, 0.68", "-28.2505, 15.7094, -13.6993, 0.68", "-28.5259, 16.4704, -14.6392, 0.46", "-28.9535, 17.56, -15.9564, 0.46", "-29.3592, 18.4957, -16.9386, 0.68", "-29.7152, 19.2819, -17.7195, 0.68", "-30.3134, 20.4685, -18.9462, 0.68", "-30.8314, 21.3426, -19.9834, 0.91", "-31.5788, 22.5527, -21.6054, 0.68", "-32.1693, 23.4803, -22.9169, 0.68", "-32.7523, 24.3376, -24.2149, 0.68", "-33.3747, 25.2908, -25.7784, 0.91", "-33.8543, 26.1629, -27.179, 0.91", "-34.2701, 26.9939, -28.6052, 0.68", "-34.4426, 27.3348, -29.3064, 0.68", "-34.5742, 27.6026, -29.9563, 0.91", "-34.9389, 28.5351, -31.9951, 0.68", "-35.2607, 29.8758, -34.1417, 0.68", "-35.2845, 30.6532, -35.0366, 0.91" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-13.3295, 6.13281, -0.138665, 0.68", "-13.1922, 4.89169, 0.780173, 0.68", "-13.095, 3.44027, 1.88654, 0.68", "-13.0807, 2.28654, 2.79455, 0.68", "-13.1453, 1.81974, 3.20726, 0.68", "-13.5615, 0.642663, 4.40849, 0.68", "-14.0688, -0.303259, 5.54638, 0.68", "-14.3867, -0.706417, 6.17518, 0.68", "-14.6819, -0.923383, 6.67952, 0.68", "-15.5444, -1.38903, 8.1584, 0.68", "-16.2479, -1.75821, 9.53712, 0.68", "-16.761, -2.03331, 10.7857, 0.68", "-17.2245, -2.38562, 12.51, 0.68", "-17.3708, -2.64155, 13.8076, 0.68", "-17.4059, -2.86416, 14.9041, 0.68", "-17.2534, -3.19077, 16.5697, 0.46", "-16.9319, -3.45222, 18.1117, 0.46", "-16.5859, -3.62024, 19.126, 0.23", "-16.051, -3.78073, 20.1035, 0.23" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "35.3223, 13.0413, 0.0, 0.46", "49.3944, 18.235, 0.0, 0.46", "63.4666, 23.4287, 0.0, 0.46" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "26.5373, -12.8749, -3.69677, 0.68", "27.4835, -12.1529, -2.67647, 0.68", "29.3316, -10.891, -0.907579, 0.68", "30.64, -10.1056, 0.114422, 0.68", "32.0595, -9.42116, 1.17539, 0.68", "32.9333, -9.07678, 1.8833, 0.68", "33.6645, -8.84439, 2.52495, 0.68", "35.2625, -8.46819, 4.06772, 0.68", "36.4552, -8.2898, 5.4522, 0.46", "38.0565, -8.15828, 7.93715, 0.46", "39.0266, -8.22477, 10.1019, 0.46", "39.52, -8.36192, 11.6051, 0.46", "39.8722, -8.51794, 13.0995, 0.46", "40.2112, -8.68828, 14.9798, 0.46", "40.4655, -8.76125, 16.2388, 0.46", "40.8542, -8.81499, 17.2402, 0.46", "41.701, -9.00702, 18.4866, 0.68", "42.8078, -9.35324, 19.6993, 0.68", "44.1433, -9.85442, 20.8413, 0.68", "45.0601, -10.2394, 21.5037, 0.68", "46.4085, -10.8954, 22.3997, 0.46", "47.3182, -11.3684, 23.0047, 0.46", "47.7556, -11.6363, 23.2978, 0.46", "48.9076, -12.3719, 23.9333, 0.23", "49.6732, -12.7931, 24.3263, 0.46", "51.2542, -13.4759, 25.0778, 0.46", "52.2669, -13.7188, 25.5565, 0.46", "54.2439, -13.6693, 26.5173, 0.46", "55.9538, -13.4435, 27.3489, 0.46", "57.5333, -12.7893, 28.1285, 0.46", "58.228, -11.9125, 28.5091, 0.46", "59.2399, -9.64297, 29.1386, 0.23", "59.8228, -6.937, 29.6498, 0.23" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "26.5373, -12.8749, -3.69677, 0.68", "27.7381, -11.9967, -4.33265, 0.68", "28.7887, -11.2834, -4.93652, 0.68", "30.1192, -10.5812, -5.6346, 0.68", "31.2715, -10.0411, -6.21944, 0.68", "32.6541, -9.43839, -6.93826, 0.46", "33.6343, -9.0223, -7.50207, 0.46", "34.7222, -8.60047, -8.19798, 0.46", "36.4614, -7.92776, -9.38235, 0.46", "37.0634, -7.68519, -9.82927, 0.46", "38.3773, -7.09342, -10.9042, 0.46", "39.5471, -6.44382, -12.0254, 0.46", "41.047, -5.37489, -13.8232, 0.46", "41.7416, -4.74193, -14.8609, 0.68", "42.2015, -4.22269, -15.7148, 0.46", "42.7859, -3.51427, -16.9659, 0.46", "43.4356, -2.60587, -18.4915, 0.46", "43.9666, -1.69196, -20.0512, 0.46", "44.1707, -1.10725, -21.1495, 0.46", "44.333, -0.461766, -22.4754, 0.68", "44.5603, 0.10445, -23.679, 0.68", "45.4404, 1.56049, -26.4283, 0.46", "46.2553, 2.87081, -28.359, 0.46", "46.8924, 3.90474, -29.7062, 0.46", "47.4483, 4.6826, -30.6936, 0.46", "48.3677, 5.77802, -32.0964, 0.46", "49.1362, 6.67503, -33.2792, 0.46", "49.9987, 7.73467, -34.7485, 0.46", "50.5951, 8.50526, -35.7798, 0.46", "51.6007, 9.94626, -37.7129, 0.46", "52.3629, 11.1566, -39.3825, 0.46", "53.1443, 12.5956, -41.4397, 0.46", "53.6334, 13.5745, -42.9003, 0.46", "54.1716, 14.6926, -44.6792, 0.46", "54.2799, 15.0282, -45.1866, 0.46" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "8.29178, -17.3184, 9.41986, 0.91", "8.33873, -18.4664, 10.8263, 0.91", "8.52979, -19.6999, 12.3033, 0.91", "8.758, -21.1733, 14.0675, 0.91", "8.97216, -22.5559, 15.7232, 0.91", "9.15895, -23.7618, 17.1671, 0.91", "9.27973, -24.5416, 18.1009, 0.91", "9.45409, -25.5921, 19.2784, 1.14" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "8.29178, -17.3184, 9.41986, 1.82", "8.13675, -18.8651, 7.44582, 1.82", "8.10404, -19.1913, 7.02941, 1.82" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "5.4799, 6.54568, -6.25, 1.37", "6.31973, 7.38386, -6.28782, 1.37", "7.94704, 9.00799, -6.36111, 1.14", "8.14937, 9.20993, -6.37022, 1.14" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "5.4799, 6.54568, -6.25, 0.46", "5.50234, 6.87154, -6.56082, 0.46", "5.55947, 7.94928, -7.45805, 0.46", "5.67034, 8.99912, -8.40041, 0.46", "5.84002, 10.0192, -9.49555, 0.46", "6.01288, 10.8207, -10.463, 0.46", "6.27363, 11.7944, -11.7918, 0.46", "6.48775, 12.3144, -12.7048, 0.68", "6.96776, 12.6205, -14.3721, 0.68", "7.55287, 12.2995, -15.9261, 0.68", "7.79739, 12.099, -16.4639, 0.91", "8.37029, 11.585, -17.5497, 0.68", "9.01618, 10.9583, -18.7559, 0.68", "9.81479, 10.2865, -20.3041, 0.68", "10.4246, 10.1155, -21.4959, 0.68", "11.0004, 10.4016, -22.7047, 0.68", "11.5615, 10.8426, -23.8847, 0.68", "11.9755, 11.1927, -24.7261, 0.68", "12.6113, 11.6678, -25.8674, 0.68", "13.5956, 12.224, -27.4058, 0.91", "14.759, 12.5786, -29.0096, 0.91", "15.8262, 12.6339, -30.2457, 0.91", "17.299, 12.3345, -31.4588, 0.91", "18.5781, 11.7957, -32.2205, 0.68", "19.8057, 10.9058, -32.7256, 0.91", "20.5758, 10.0666, -32.855, 0.91", "21.4447, 8.73856, -32.7889, 0.91", "22.0089, 7.63658, -32.6726, 0.91", "22.3556, 6.82467, -32.5543, 0.91", "23.1712, 4.83732, -32.3571, 0.68", "23.8806, 3.33959, -32.3089, 0.91", "24.5358, 2.28749, -32.4221, 0.91", "25.5601, 1.34057, -32.887, 0.91", "26.0301, 1.10521, -33.1899, 0.68", "27.5545, 0.735495, -34.4163, 1.14", "28.4947, 0.664946, -35.2742, 0.68", "29.8143, 0.765924, -36.7346, 0.68", "30.9692, 1.05146, -38.3088, 0.91", "31.6096, 1.32634, -39.4106, 0.91", "32.2673, 1.73868, -40.8897, 0.68", "32.3812, 1.83725, -41.2421, 0.68", "32.915, 2.29727, -42.9971, 0.91", "33.4934, 2.65391, -44.5094, 0.91", "33.9347, 2.799, -45.406, 0.91", "34.5297, 2.92275, -46.3294, 0.91", "35.4204, 3.07598, -47.5048, 0.91", "36.6096, 3.25557, -48.8881, 0.91", "38.3028, 3.46213, -50.5112, 0.91", "39.9089, 3.62775, -51.9, 0.91", "40.8968, 3.70733, -52.7095, 0.91", "41.7984, 3.76482, -53.3826, 0.91", "42.9294, 3.81681, -54.1094, 0.91", "44.8082, 3.81968, -55.063, 0.91", "45.7993, 3.72747, -55.3815, 0.91", "46.9879, 3.53029, -55.6171, 0.91", "48.2823, 3.27888, -55.8635, 0.91", "50.7071, 2.8289, -56.3446, 0.91", "52.3787, 2.5411, -56.7263, 0.91", "53.4882, 2.35008, -57.0691, 0.91", "56.0941, 1.90964, -58.2138, 0.68", "57.4762, 1.66166, -59.1304, 0.68", "58.6629, 1.42301, -60.1544, 0.68", "59.7575, 1.11066, -61.2632, 0.68", "61.1446, 0.633651, -62.7734, 0.68", "62.5345, 0.115598, -64.3219, 0.68", "64.4575, -0.67801, -66.3497, 0.68", "65.3627, -1.05326, -67.1834, 0.68", "67.6228, -1.98151, -69.0457, 0.46", "69.5147, -2.76534, -70.4744, 0.68", "70.4985, -3.16881, -71.1357, 0.68", "72.1487, -3.8588, -72.1519, 0.46", "73.0093, -4.20818, -72.6948, 0.46", "74.1476, -4.66222, -73.5838, 0.46", "75.507, -5.20364, -74.8908, 0.46", "76.4641, -5.61312, -75.8852, 0.46", "78.0647, -6.33448, -77.6933, 0.46", "79.1317, -6.83198, -79.0238, 0.46", "80.7871, -7.59236, -81.1572, 0.46", "82.5288, -8.26742, -83.3175, 0.46" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-16.7651, -13.0343, -12.167, 0.68", "-17.2512, -14.4289, -12.6708, 0.68", "-18.0177, -15.8973, -13.0929, 0.68", "-19.2657, -16.9463, -13.0429, 0.68", "-20.1577, -17.1874, -12.7264, 0.68", "-22.2386, -17.4785, -11.7871, 0.68", "-23.661, -17.7262, -11.0952, 0.68", "-25.3129, -17.9373, -10.2813, 0.68", "-26.9256, -18.0859, -9.54908, 0.91", "-27.7926, -18.1244, -9.13592, 0.91", "-29.3637, -18.146, -8.40282, 0.68", "-30.389, -18.1613, -7.87886, 0.68", "-31.9525, -18.4421, -7.16434, 0.68", "-33.2607, -18.9105, -6.82557, 0.91" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-16.7651, -13.0343, -12.167, 0.68", "-15.4859, -13.139, -13.349, 0.68", "-14.2777, -13.1091, -14.4347, 0.68", "-13.13, -12.9793, -15.3815, 0.68", "-12.2349, -12.8352, -16.0935, 0.91", "-10.5607, -12.5646, -17.474, 0.68", "-9.19964, -12.3744, -18.6442, 0.68", "-7.38149, -12.0494, -20.3451, 0.91", "-6.12448, -11.7735, -21.6976, 0.91", "-5.3769, -11.5926, -22.6812, 0.91", "-4.35286, -11.2963, -24.3277, 0.91", "-3.88815, -11.1603, -25.1854, 0.91", "-3.25426, -10.978, -26.5627, 0.91", "-2.54968, -10.8747, -28.4346, 0.91", "-1.84758, -10.8981, -30.2352, 0.91", "-1.08691, -10.9839, -31.8477, 0.91", "0.180211, -11.0469, -33.887, 0.91", "0.656269, -11.0483, -34.4722, 0.91", "2.34459, -11.1083, -36.039, 0.91", "4.44479, -11.2447, -37.6508, 0.91", "6.14066, -11.3291, -38.8932, 0.91", "8.04174, -11.3642, -40.4322, 0.91", "9.51717, -11.2349, -41.8357, 0.91", "10.4656, -11.066, -43.0006, 1.14", "11.2687, -10.8813, -44.376, 1.14", "12.544, -10.5457, -47.2664, 0.68", "13.4861, -10.245, -49.6271, 0.68", "14.087, -10.0345, -51.2703, 0.68", "14.9941, -9.5993, -53.8989, 0.68", "15.7878, -9.12025, -56.0617, 0.68", "16.6771, -8.55978, -58.2438, 0.68", "17.6814, -7.92472, -60.4613, 0.46", "18.7163, -7.30872, -62.3889, 0.46", "19.7954, -6.70743, -64.1076, 0.46", "21.4782, -5.72385, -66.4403, 0.46", "22.6403, -4.88181, -68.1812, 0.46" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-13.4052, 18.4352, -32.7464, 0.46", "-12.4177, 17.9475, -33.5322, 0.46", "-11.6772, 17.7622, -34.3265, 0.46", "-10.952, 17.6936, -35.1006, 0.46", "-9.39775, 17.849, -36.807, 0.46", "-8.13817, 18.1602, -38.362, 0.46", "-7.50035, 18.3799, -39.2461, 0.46", "-6.65262, 18.9414, -40.7555, 0.46", "-6.08429, 19.5149, -42.0011, 0.46", "-5.56965, 20.1643, -43.2507, 0.68", "-5.03476, 20.9723, -44.5576, 0.68", "-4.76251, 21.2861, -45.0626, 0.68", "-4.19853, 21.7742, -45.8759, 0.46", "-3.62308, 22.2789, -46.6403, 0.46", "-2.63143, 23.2386, -47.8657, 0.68", "-2.18697, 23.7648, -48.4516, 0.68", "-1.42849, 24.8888, -49.6221, 0.46", "-0.895309, 25.7011, -50.4283, 0.46", "-0.115453, 27.0257, -51.6865, 0.46", "0.266732, 27.8404, -52.4444, 0.68", "0.859997, 30.1501, -54.6977, 0.46", "0.984019, 31.191, -55.7936, 0.46" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-13.4052, 18.4352, -32.7464, 0.68", "-14.1786, 19.3233, -34.5332, 0.68", "-14.7414, 19.8684, -35.6784, 0.68", "-15.4801, 20.4786, -36.9324, 0.68", "-16.1214, 20.9932, -37.943, 0.68", "-16.6539, 21.4533, -38.8082, 0.68", "-17.1264, 21.9288, -39.6356, 0.68", "-17.8708, 22.6928, -40.7959, 0.68", "-18.7319, 23.5976, -42.0857, 0.68", "-18.8888, 23.7855, -42.3639, 0.46", "-19.2964, 24.382, -43.2197, 0.46", "-19.7365, 25.2638, -44.4841, 0.46", "-19.9389, 25.9248, -45.5566, 0.46", "-19.9209, 26.2087, -46.1869, 0.68", "-19.7565, 26.9011, -47.9555, 0.68", "-19.6474, 27.2739, -49.0656, 0.46", "-19.4749, 27.698, -50.6622, 0.46", "-19.1966, 27.9853, -52.2285, 0.46", "-18.5435, 28.3617, -54.662, 0.46" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "9.45409, -25.5921, 19.2784, 0.68", "10.647, -24.5886, 19.7057, 0.68", "11.8389, -23.4571, 20.1212, 0.68", "12.9004, -22.2977, 20.4863, 0.68", "13.8328, -20.9722, 20.8143, 0.68", "14.5978, -19.7879, 21.041, 0.68", "15.0756, -19.0445, 21.2047, 0.91", "16.1391, -17.3603, 21.6648, 0.91", "16.6672, -16.4433, 21.9662, 0.91", "17.6912, -14.4946, 22.6827, 0.68", "18.2971, -13.4858, 23.1223, 0.68", "19.3491, -12.1554, 23.8866, 0.68", "20.6668, -11.0051, 24.9919, 0.68", "21.5271, -10.4623, 25.8706, 0.68", "22.1187, -10.1636, 26.5324, 0.68", "23.1681, -9.50104, 27.8415, 0.68", "23.9156, -8.62877, 28.8228, 0.68", "24.4774, -6.75133, 29.1913, 0.68", "24.5476, -5.22017, 28.5702, 0.68", "24.5558, -4.27176, 27.9233, 0.68", "24.5387, -1.82947, 25.8961, 0.68", "24.4601, 0.106709, 24.2285, 0.46", "24.2959, 2.02061, 22.4143, 0.46", "24.1273, 3.40758, 20.8299, 0.46", "24.0525, 4.10631, 19.8365, 0.46", "23.9853, 5.00809, 18.2178, 0.46" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "9.45409, -25.5921, 19.2784, 0.68", "9.84643, -26.1557, 20.8031, 0.68", "10.3652, -26.6934, 22.4755, 0.68", "10.877, -27.2537, 24.0723, 0.68", "11.2794, -27.7514, 25.3701, 0.68", "11.5981, -28.1723, 26.3926, 0.46", "12.2196, -28.9977, 28.3022, 0.46", "12.7603, -29.6162, 29.815, 0.46", "13.225, -29.9986, 30.9306, 0.46", "13.7422, -30.3109, 32.0643, 0.46", "14.3148, -30.6127, 33.2974, 0.46", "14.8591, -30.8558, 34.5227, 0.46", "15.4494, -31.0336, 35.7653, 0.46", "16.0892, -31.1214, 37.0939, 0.46", "16.6983, -31.1131, 38.3462, 0.46", "17.3692, -31.0658, 39.8551, 0.46", "18.0093, -31.0556, 41.4342, 0.46", "18.8395, -31.2344, 43.6921, 0.46", "19.399, -31.5509, 45.3597, 0.46", "19.6315, -31.7854, 46.0107, 0.46", "20.1824, -32.5086, 47.4326, 0.46", "20.6287, -33.1713, 48.3815, 0.46", "21.4445, -34.3565, 49.7931, 0.46", "22.2397, -35.358, 51.0075, 0.46", "23.4968, -36.9295, 52.7557, 0.46", "24.4858, -38.1097, 54.0415, 0.46", "25.3099, -38.9627, 54.9879, 0.68", "26.5725, -40.1103, 56.4231, 0.68", "27.8839, -41.1302, 57.8002, 0.68" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "8.10404, -19.1913, 7.02941, 1.82", "8.78563, -20.6209, 6.75187, 1.82", "9.35657, -21.8184, 6.51938, 2.05" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "8.10404, -19.1913, 7.02941, 0.68", "8.03445, -18.7602, 4.40371, 0.68", "7.93395, -18.4247, 2.60323, 0.68", "7.77869, -18.1453, 1.05517, 0.68", "7.47795, -17.7057, -1.27473, 0.68", "7.17482, -17.2429, -3.55889, 0.68", "7.00669, -16.9811, -4.76338, 0.68", "6.78854, -16.6946, -5.86488, 0.68", "6.47915, -16.3286, -7.20343, 0.68", "6.17793, -16.0225, -8.35994, 0.68", "5.95668, -15.8499, -8.98878, 0.68", "5.47377, -15.521, -10.2021, 0.68", "4.80577, -15.1324, -11.8337, 0.68", "4.30268, -14.7376, -13.2953, 0.68" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "8.14937, 9.20993, -6.37022, 0.68", "9.77385, 8.64377, -7.54577, 0.68", "11.4524, 8.09383, -8.72077, 0.68", "13.0406, 7.64784, -9.96443, 0.68", "14.0307, 7.44762, -10.8352, 0.68", "15.0272, 7.39017, -11.7871, 0.68", "16.0161, 7.49359, -12.8162, 0.68", "16.4771, 7.68914, -13.3545, 0.91", "17.619, 8.74214, -14.9644, 0.91", "18.243, 9.68476, -15.961, 0.68", "19.0338, 11.2284, -17.3285, 0.68", "19.5889, 12.427, -18.3182, 0.46", "20.0732, 13.4495, -19.1858, 0.68", "20.4711, 14.2354, -19.8936, 0.46", "21.1604, 15.435, -21.0306, 0.68", "21.9083, 16.5479, -22.2093, 0.46", "22.6339, 17.4597, -23.3397, 0.46", "23.4445, 18.3967, -24.659, 0.68", "23.8778, 18.9148, -25.4624, 0.46", "24.2022, 19.317, -26.1233, 0.46", "24.6252, 19.8276, -26.9779, 0.91", "25.2141, 20.5945, -28.1463, 0.46", "25.8596, 21.4718, -29.2588, 0.46", "26.6362, 22.4023, -30.4775, 0.46", "27.1266, 22.8948, -31.1156, 0.46", "27.9797, 23.5951, -32.0594, 0.46", "28.6712, 24.05, -32.7916, 0.46", "29.7673, 24.5948, -33.8659, 0.46", "31.5063, 25.1961, -35.3596, 0.46", "32.8466, 25.5921, -36.5801, 0.46", "33.716, 25.8781, -37.5997, 0.46", "34.4719, 26.1842, -38.8762, 0.46", "34.9537, 26.4617, -40.0398, 0.46", "35.3568, 26.7968, -41.4868, 0.46", "35.7822, 27.281, -43.5017, 0.46", "36.1796, 27.7906, -45.6981, 0.46", "36.666, 28.7216, -49.3411, 0.68", "36.924, 29.3851, -51.7649, 0.68", "37.084, 29.977, -53.9476, 0.68", "37.1478, 30.508, -55.9849, 0.68", "37.1349, 31.0815, -58.2234, 0.68", "37.0378, 31.8959, -61.2728, 0.68", "36.9341, 32.6477, -63.8281, 0.68" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "8.14937, 9.20993, -6.37022, 1.14", "8.94892, 9.69351, -7.05685, 1.14", "9.56815, 10.0858, -7.59966, 1.14", "10.7005, 10.9144, -8.6103, 0.91", "11.8451, 11.8874, -9.60315, 1.14", "13.2101, 13.0479, -10.7872, 0.91", "14.4773, 14.1251, -11.8863, 1.14", "15.3831, 14.9167, -12.7095, 0.91", "16.2043, 15.6678, -13.4727, 0.68", "17.1777, 16.6546, -14.3072, 1.14" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-33.2607, -18.9105, -6.82557, 0.46", "-34.0974, -20.0372, -5.47548, 0.46", "-34.7807, -20.9893, -4.48984, 0.46", "-35.458, -22.0253, -3.45306, 0.46", "-36.1007, -23.0891, -2.49293, 0.46", "-36.5306, -23.8586, -1.82393, 0.46", "-37.1063, -24.9971, -0.823668, 0.68", "-38.0407, -26.8257, 0.750838, 0.68", "-38.6866, -28.277, 1.95612, 0.23", "-39.1209, -29.4655, 2.94133, 0.46", "-39.5965, -31.0558, 4.26454, 0.46", "-39.9357, -32.3285, 5.3269, 0.46", "-40.1771, -33.2195, 6.09187, 0.46", "-40.4668, -34.2566, 6.90466, 0.46", "-40.6973, -35.0002, 7.40216, 0.46", "-41.0432, -35.9852, 7.95208, 0.46", "-41.5145, -36.9822, 8.29288, 0.46", "-42.1037, -38.0965, 8.50171, 0.46", "-42.7318, -39.3035, 8.64535, 0.46", "-43.4042, -40.5947, 8.74136, 0.46", "-43.8457, -41.4321, 8.80326, 0.46", "-44.6279, -42.8499, 8.90536, 0.46", "-45.4109, -44.2432, 9.10972, 0.46", "-45.7662, -44.8966, 9.26313, 0.46", "-46.5437, -46.4297, 9.71292, 0.46", "-47.1651, -47.7232, 10.2184, 0.23", "-47.7808, -49.0807, 10.8737, 0.68", "-48.4044, -50.4962, 11.6249, 0.23", "-49.1059, -51.9985, 12.4332, 0.23", "-49.7607, -53.5634, 13.1897, 0.46", "-50.3831, -55.2253, 13.9133, 0.23", "-51.0341, -57.2389, 14.626, 0.23", "-51.5344, -58.7965, 15.0489, 0.23", "-52.1529, -60.6786, 15.4023, 0.68", "-52.9995, -63.0746, 15.7226, 0.46", "-53.4781, -64.2871, 15.8278, 0.23", "-54.2108, -66.113, 15.887, 0.68", "-55.2018, -68.7197, 15.8797, 0.23", "-55.6937, -70.1043, 15.9232, 0.46", "-56.2183, -71.631, 16.0067, 0.46", "-56.8297, -73.3553, 16.0314, 0.23", "-57.1311, -74.2017, 16.0089, 0.46", "-57.7004, -75.7874, 15.9219, 0.68", "-59.1763, -79.7958, 15.4796, 0.23", "-59.9123, -81.5979, 15.1714, 0.23", "-60.9967, -84.2407, 14.4758, 0.23", "-61.412, -85.2485, 14.0909, 0.23", "-61.5882, -85.6156, 13.891, 0.46", "-62.2427, -86.814, 12.9546, 0.23", "-62.7051, -87.6896, 12.0637, 0.68", "-63.1418, -88.9678, 10.8313, 0.68", "-63.3933, -90.243, 9.84338, 0.68", "-63.5792, -91.5503, 8.86527, 0.68", "-63.674, -92.4648, 8.20444, 0.68", "-63.7715, -94.238, 7.02579, 0.23", "-63.8379, -96.4649, 5.60036, 0.23", "-63.9092, -99.4, 3.94221, 0.23" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-33.2607, -18.9105, -6.82557, 0.46", "-33.4322, -18.7838, -8.83147, 0.46", "-33.5446, -18.8346, -10.333, 0.46", "-33.6951, -18.998, -11.7815, 0.46", "-33.9543, -19.1975, -13.2911, 0.46", "-34.3194, -19.3645, -14.5586, 0.46", "-34.9129, -19.5642, -15.8625, 0.46", "-35.9147, -19.945, -17.261, 0.46", "-36.7865, -20.2889, -18.1349, 0.46", "-37.8993, -20.6944, -19.001, 0.46", "-39.4911, -21.2567, -20.0959, 0.46", "-41.2416, -21.8775, -21.3117, 0.46", "-42.3988, -22.2945, -22.1756, 0.46", "-43.4021, -22.7628, -23.0876, 0.46", "-44.011, -23.1951, -23.7927, 0.46", "-44.8866, -24.1036, -25.2099, 0.46", "-45.4085, -24.7754, -26.3463, 0.46", "-45.8162, -25.3104, -27.3452, 0.46", "-46.4342, -26.0158, -28.6089, 0.46", "-47.0369, -26.6115, -29.6288, 0.46", "-47.8317, -27.3041, -30.8885, 0.46", "-48.5219, -27.7617, -31.9174, 0.46", "-49.2103, -28.0817, -32.9624, 0.68", "-50.2823, -28.3207, -34.7452, 0.23", "-51.1718, -28.3853, -36.2878, 0.23", "-51.7497, -28.4015, -37.3463, 0.23", "-52.1637, -28.5281, -38.4663, 0.46", "-52.6662, -28.7594, -39.8796, 0.46", "-53.5001, -29.2781, -42.0837, 0.46", "-54.0195, -29.6794, -43.0905, 0.46", "-54.5205, -30.102, -43.7276, 0.46", "-58.3167, -33.1663, -47.529, 0.46", "-62.6032, -36.2299, -50.939, 0.46", "-64.1794, -37.2056, -52.0681, 0.23", "-65.8345, -38.1143, -53.259, 0.23", "-66.8522, -38.5779, -54.0519, 0.23", "-67.8062, -38.9292, -54.7868, 0.23", "-68.9182, -39.2298, -55.6385, 0.46", "-70.1075, -39.619, -56.8961, 0.46", "-70.8345, -39.7689, -57.7269, 0.46", "-72.0838, -39.9654, -59.1801, 0.46", "-72.8354, -40.064, -60.0817, 0.46", "-74.0453, -40.2437, -61.4921, 0.46", "-75.2218, -40.4145, -62.7765, 0.68", "-76.8927, -40.6733, -64.3019, 0.46", "-77.9126, -40.8384, -65.0949, 0.46", "-78.7267, -40.9531, -65.6602, 0.46", "-80.8022, -41.2042, -66.9941, 0.46", "-82.4729, -41.3786, -67.9299, 0.46", "-84.1738, -41.5055, -68.8013, 0.68", "-86.1927, -41.5109, -69.7756, 0.23", "-87.4892, -41.4639, -70.4058, 0.23", "-88.2679, -41.4203, -70.8377, 0.46", "-88.9987, -41.3608, -71.36, 0.46", "-90.2493, -41.3049, -72.3854, 0.23", "-91.6301, -41.3225, -73.9084, 0.23", "-92.0838, -41.3603, -74.5669, 0.91", "-93.3177, -41.5083, -76.5935, 0.68", "-94.614, -41.7374, -78.7485, 0.68", "-95.4633, -41.9282, -80.2159, 0.68", "-97.3916, -42.4497, -83.5182, 0.68", "-99.155, -42.9787, -86.4137, 0.68", "-100.008, -43.2288, -87.7867, 0.68", "-101.636, -43.7551, -90.2864, 0.68", "-103.045, -44.2571, -92.3732, 0.68", "-103.929, -44.58, -93.5766, 0.68", "-105.7, -45.2423, -95.7284, 0.46", "-108.042, -46.1905, -98.41, 0.46", "-110.335, -47.1809, -101.041, 0.46", "-111.663, -47.7332, -102.584, 0.46", "-113.208, -48.342, -104.292, 0.46" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "9.35657, -21.8184, 6.51938, 0.91", "10.1629, -21.6165, 5.0171, 0.91", "10.7796, -21.4061, 3.64996, 0.68", "11.1699, -21.1868, 2.73992, 0.68", "11.6163, -20.852, 1.69127, 0.68", "11.9719, -20.5861, 0.846261, 0.68", "12.5343, -20.219, -0.484296, 0.68", "13.1109, -19.8106, -1.93656, 0.68", "13.5954, -19.37, -3.24861, 0.68", "14.0115, -18.9582, -4.37983, 0.68", "14.5684, -18.3409, -5.81339, 0.68", "15.0269, -17.7814, -6.9241, 0.68", "15.4185, -17.2336, -7.89189, 0.68", "16.0522, -16.2951, -9.36323, 0.68", "16.3965, -15.7911, -10.1283, 0.68", "16.8906, -14.975, -11.228, 0.68", "17.3879, -14.0073, -12.3107, 0.68", "17.8801, -12.9588, -13.3651, 0.68", "18.1829, -12.3552, -13.9789, 0.68", "18.5599, -11.7881, -14.6396, 1.14" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "9.35657, -21.8184, 6.51938, 0.91", "9.12417, -23.203, 5.37936, 0.91", "8.8794, -24.6613, 4.17865, 0.68", "8.70082, -25.7253, 3.30261, 0.68", "8.5132, -26.8431, 2.38225, 0.91", "8.21219, -28.6364, 0.90568, 0.91" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "4.30268, -14.7376, -13.2953, 0.46", "5.7268, -16.8475, -15.3163, 0.46", "6.8229, -19.0153, -17.0377, 0.46", "7.32164, -20.4125, -18.0092, 0.46", "7.54398, -21.3632, -18.5834, 0.46", "7.66037, -22.0085, -18.9341, 0.46", "7.88774, -23.3346, -19.6036, 0.46", "7.9732, -24.7396, -20.1547, 0.46", "7.99941, -25.8075, -20.6232, 0.46", "8.08933, -26.7289, -21.1825, 0.91", "8.35996, -27.776, -22.2861, 0.91", "8.57149, -28.0867, -23.1051, 0.46", "9.08117, -28.1766, -24.9365, 0.46", "9.59783, -27.9233, -26.675, 0.46", "10.011, -27.5587, -28.0448, 0.46", "10.4192, -27.0772, -29.2996, 0.46", "11.0998, -26.0501, -31.3299, 0.46", "11.5582, -25.2684, -32.644, 0.46", "11.988, -24.5109, -33.7282, 0.46", "12.5563, -23.4962, -35.0226, 0.46", "13.2682, -22.3398, -36.4258, 0.46", "13.6607, -21.7036, -37.2057, 0.68", "14.0944, -20.9738, -38.1806, 0.68", "14.5645, -20.2372, -39.4533, 0.68", "14.7541, -19.994, -39.9842, 0.46", "15.3322, -19.3581, -41.7033, 0.46", "15.8911, -18.764, -43.4501, 0.46", "16.6003, -18.0214, -45.7237, 0.46", "17.4576, -17.138, -48.443, 0.68", "18.062, -16.5465, -50.299, 0.68", "18.6539, -16.0121, -51.9488, 0.68", "19.2486, -15.4965, -53.3698, 0.46", "20.1611, -14.7185, -55.1518, 0.46", "20.5893, -14.3468, -55.8993, 0.46", "21.0665, -13.9046, -56.6088, 0.46", "21.7624, -13.3081, -57.5359, 0.46", "23.1542, -12.3038, -59.2243, 0.46", "24.2955, -11.5945, -60.5788, 0.46", "25.5641, -10.8496, -62.1202, 0.46", "26.8794, -10.0818, -63.7888, 0.46", "28.8886, -8.89451, -66.4821, 0.46", "30.659, -7.91042, -68.9162, 0.46", "32.1147, -7.19576, -70.895, 0.46", "33.7907, -6.4804, -73.0457, 0.46", "34.6885, -6.13401, -74.1485, 0.46", "36.4715, -5.45488, -76.3797, 0.46", "37.9665, -4.8847, -78.1519, 0.46", "39.6137, -4.26112, -80.0156, 0.46", "41.6788, -3.51845, -82.1917, 0.23", "43.6264, -2.86341, -84.0817, 0.23", "45.799, -2.17455, -86.1598, 0.23" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "4.30268, -14.7376, -13.2953, 0.68", "4.71896, -16.2451, -15.0774, 0.68", "4.81817, -17.4135, -16.3513, 0.68", "4.77532, -18.1069, -17.0823, 0.68", "4.35158, -18.7632, -17.9097, 0.68", "3.11554, -19.209, -18.8511, 0.68", "1.55672, -19.4139, -19.6552, 0.68", "0.379885, -19.378, -20.0528, 1.14", "-0.452479, -19.3105, -20.3441, 0.91", "-2.36669, -19.024, -21.1319, 0.91", "-3.47118, -18.8073, -21.691, 0.91", "-4.69124, -18.5755, -22.5001, 0.91", "-6.98375, -18.2213, -24.2575, 0.91", "-8.05847, -18.1245, -25.113, 0.68", "-9.12562, -18.0623, -26.0177, 0.68", "-10.1363, -17.996, -26.9821, 0.68", "-11.3547, -17.8311, -28.4982, 0.68", "-12.2329, -17.6621, -29.8127, 0.68", "-12.8203, -17.5341, -30.8777, 0.68", "-13.5422, -17.3972, -32.0787, 0.68", "-14.4396, -17.2021, -33.5318, 0.68", "-15.7185, -16.9113, -35.5292, 0.68", "-17.0392, -16.5646, -37.3568, 0.68", "-18.2477, -16.2074, -38.9277, 0.68", "-19.9354, -15.5942, -40.9241, 0.68", "-20.7975, -15.2314, -41.7703, 0.68", "-22.1912, -14.4303, -42.9554, 0.68", "-23.5781, -13.1876, -44.1536, 0.68", "-24.2313, -12.2729, -44.8545, 0.68", "-24.9135, -11.1333, -45.6949, 0.68", "-25.4263, -10.0974, -46.5514, 0.68", "-26.1894, -8.53821, -47.9574, 0.68", "-26.7378, -7.19043, -49.0878, 0.46", "-27.1961, -5.98159, -50.2375, 0.46", "-27.709, -4.88168, -51.451, 0.46", "-28.2146, -3.97605, -52.7038, 0.46", "-28.3036, -3.84699, -52.9443, 0.68", "-29.0826, -3.03628, -54.8467, 0.46", "-29.8678, -2.29044, -56.5676, 0.46", "-30.517, -1.54772, -58.115, 0.46", "-31.1739, -0.629915, -59.8089, 0.46", "-31.834, 0.19132, -61.3892, 0.46", "-32.5616, 0.898876, -62.8923, 0.46", "-33.1442, 1.2555, -63.8818, 0.68", "-34.4725, 1.73462, -65.5878, 0.68", "-35.1451, 1.88554, -66.3213, 0.46", "-36.6777, 2.146, -67.8199, 0.46", "-37.9829, 2.26796, -68.9736, 0.68", "-40.2462, 2.21178, -70.8463, 0.46", "-42.3389, 1.91527, -72.4773, 0.46", "-42.363, 1.90921, -72.494, 0.68" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "17.1777, 16.6546, -14.3072, 0.91", "18.1695, 17.5806, -15.4986, 0.91", "19.1364, 18.2563, -16.4746, 0.91", "20.5289, 19.0622, -17.7523, 0.91", "21.4573, 19.5822, -18.5774, 0.68", "22.7348, 20.3266, -19.7819, 0.91", "23.8675, 21.0431, -20.8985, 0.91", "25.205, 21.8894, -22.1631, 0.91", "25.89, 22.2844, -22.8007, 0.91", "26.3146, 22.5057, -23.1976, 0.91", "27.2423, 23.1176, -24.1035, 0.91", "27.9788, 23.8572, -24.9858, 0.91", "28.43, 24.9717, -26.021, 0.68" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "17.1777, 16.6546, -14.3072, 0.46", "16.8279, 17.7445, -14.3692, 0.46", "16.3361, 19.2764, -14.4563, 0.46", "15.7099, 21.2281, -14.5673, 0.46" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "18.5599, -11.7881, -14.6396, 0.91", "19.6814, -12.4636, -15.2857, 0.91", "20.9961, -13.3502, -15.8628, 0.46", "22.4821, -14.4829, -16.5779, 0.46", "23.5672, -15.3653, -17.209, 0.46", "24.5882, -16.2045, -17.8581, 0.46", "25.6474, -17.0263, -18.5547, 0.46", "27.0739, -18.1407, -19.5818, 0.46", "28.4294, -19.2013, -20.5209, 0.46", "29.6999, -20.2622, -21.492, 0.46", "30.2204, -20.7224, -21.9622, 0.46", "30.9028, -21.3476, -22.7012, 0.46", "31.8174, -22.0772, -23.7509, 0.46", "32.8301, -22.7827, -25.0134, 0.46", "33.9683, -23.5458, -26.4888, 0.46", "35.0611, -24.2776, -27.8089, 0.46", "35.9919, -24.9552, -28.8251, 0.46", "37.0235, -25.7675, -29.7971, 0.46", "37.9958, -26.5062, -30.4916, 0.46", "38.8684, -27.1152, -31.0079, 0.46", "41.0491, -28.6533, -32.1913, 0.46", "42.685, -29.7325, -33.0707, 0.46", "43.3643, -30.1394, -33.4258, 0.46", "44.0332, -30.5065, -33.8101, 0.91", "46.8087, -31.821, -35.488, 0.46", "48.454, -32.4637, -36.5553, 0.46", "49.7706, -32.9034, -37.5472, 0.46", "50.8651, -33.1734, -38.4274, 0.68", "52.2118, -33.4699, -39.5619, 0.23", "53.4645, -33.7431, -40.6718, 0.23", "54.5448, -33.9501, -41.6012, 0.46", "55.7095, -34.1328, -42.6745, 0.46", "57.2189, -34.4079, -44.2076, 0.46", "58.639, -34.6571, -45.8035, 0.46", "59.8051, -34.8383, -47.2007, 0.46", "60.835, -34.962, -48.4231, 0.46", "61.8525, -35.0932, -49.6663, 0.46", "62.537, -35.1689, -50.4983, 0.68", "64.0956, -35.3784, -52.2991, 0.68", "65.0448, -35.4469, -53.3276, 0.68", "66.7141, -35.4274, -55.0003, 0.91", "68.5968, -35.2245, -56.787, 0.46", "70.8607, -34.9051, -58.88, 0.46", "72.7368, -34.5617, -60.5823, 0.46", "74.3183, -34.2197, -61.9403, 0.46", "76.4491, -33.6397, -63.7109, 0.46", "78.129, -33.024, -65.0873, 0.46" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "18.5599, -11.7881, -14.6396, 0.46", "19.347, -11.3597, -15.4961, 0.46", "20.3419, -10.8637, -16.3721, 0.46", "21.1751, -10.2806, -17.0901, 0.46", "21.6115, -9.81949, -17.4602, 0.46", "22.1481, -9.04435, -18.0292, 0.46", "22.3729, -8.67741, -18.3253, 0.46", "22.8687, -7.85749, -18.9749, 0.46", "23.4504, -6.71909, -19.7892, 0.46", "23.9172, -5.60749, -20.6303, 0.68", "24.4494, -4.22084, -21.8871, 0.46", "24.8976, -3.06992, -22.9426, 0.46", "25.2614, -2.31438, -23.7242, 0.68", "25.9909, -1.24065, -25.1272, 0.68", "26.7453, -0.483819, -26.4727, 0.68", "27.7017, 0.251444, -28.1829, 0.68", "28.5905, 0.925505, -29.797, 0.68", "29.5322, 1.72495, -31.6758, 0.68", "30.4044, 2.61816, -33.6323, 0.68", "30.9242, 3.21292, -34.7616, 0.68", "31.416, 3.96237, -35.7802, 0.68", "31.9398, 5.18033, -37.0905, 0.68", "32.131, 5.80965, -37.6946, 0.68", "32.4072, 6.89831, -38.5743, 0.91", "32.7943, 8.26836, -39.5567, 0.91", "33.5145, 10.0998, -40.8777, 0.68", "34.1744, 11.315, -41.8396, 0.68", "34.9127, 12.2768, -42.7672, 0.68", "35.8251, 13.1904, -43.8292, 0.68", "36.8355, 13.9585, -44.8078, 0.91", "38.1325, 14.6307, -45.6888, 0.68", "39.6328, 15.0007, -46.2933, 0.68", "41.5289, 15.2236, -46.7537, 0.68", "42.8312, 15.2978, -46.9907, 0.68", "46.3652, 15.4194, -47.5852, 0.68", "48.2934, 15.5221, -47.9965, 0.46", "50.0033, 15.7815, -48.4456, 0.46", "51.0211, 16.0589, -48.9221, 0.46", "52.1077, 16.5334, -49.8262, 0.46", "53.0183, 16.9454, -50.7781, 0.46", "54.0821, 17.3793, -51.9277, 0.46", "54.8998, 17.6667, -52.7469, 0.46", "56.4015, 18.0947, -54.0529, 0.46", "57.7338, 18.4086, -54.9908, 0.46", "59.39, 18.7268, -55.8557, 0.46", "61.3728, 19.0579, -56.6196, 0.46", "62.5993, 19.2086, -56.9739, 0.23", "63.1698, 19.291, -57.1229, 0.23", "64.9453, 19.6562, -57.5581, 0.23", "65.853, 19.8938, -57.8274, 0.23", "66.8466, 20.1941, -58.1467, 0.46", "68.856, 20.8249, -58.6744, 0.46", "70.6086, 21.3747, -58.8998, 0.46", "71.8586, 21.7887, -58.8732, 0.68", "73.2117, 22.253, -58.6477, 0.46", "75.3916, 23.044, -58.2652, 0.68", "77.8331, 23.9488, -57.7621, 0.68", "79.7995, 24.7413, -57.3666, 0.68", "81.6277, 25.4711, -57.1511, 0.46", "82.8154, 25.9922, -57.2051, 0.46", "85.9404, 27.5628, -58.0557, 0.68", "86.7805, 28.0175, -58.5602, 0.23", "88.4427, 28.926, -60.0152, 0.23", "89.9677, 29.7718, -61.584, 0.23", "90.9662, 30.3348, -62.7407, 0.23", "91.6445, 30.7448, -63.569, 0.46", "92.8432, 31.5657, -64.9194, 0.46", "93.7386, 32.187, -66.0285, 0.46" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "8.21219, -28.6364, 0.90568, 0.68", "7.05722, -28.6121, 0.393375, 0.68", "5.55137, -28.231, -0.311634, 0.68", "4.77468, -27.863, -0.652095, 0.68", "3.6215, -27.1224, -1.18981, 0.46", "2.57054, -26.335, -1.76153, 0.46", "1.80329, -25.762, -2.23808, 0.46", "1.02374, -25.0963, -2.81516, 0.46", "0.111725, -24.2845, -3.61151, 0.46", "-0.641432, -23.7378, -4.30746, 0.46", "-1.47394, -23.3114, -5.09266, 0.46", "-2.50932, -22.9479, -5.98504, 0.46", "-3.63839, -22.6575, -6.96233, 0.68", "-4.73166, -22.4725, -7.93264, 0.68", "-6.23551, -22.335, -9.26978, 0.46", "-7.0752, -22.3035, -9.95039, 0.46", "-8.84367, -22.2546, -11.2193, 0.46" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "8.21219, -28.6364, 0.90568, 0.46", "8.31838, -29.8344, 1.9869, 0.46", "8.37945, -30.8549, 2.9813, 0.68", "8.36198, -32.084, 4.10322, 0.46", "8.32246, -33.3463, 5.22709, 0.68", "8.29396, -34.4805, 6.17511, 0.46", "8.27393, -35.8853, 7.27633, 0.68", "8.25599, -37.3625, 8.45086, 0.68", "8.19713, -38.7142, 9.46291, 0.46", "8.11248, -39.7706, 10.1177, 0.46", "8.00478, -40.8794, 10.664, 0.68", "7.8674, -42.634, 11.4112, 0.46", "7.77552, -43.8148, 11.8967, 0.46", "7.71058, -44.6814, 12.2836, 0.68", "7.56792, -46.1928, 13.0208, 0.23", "7.43271, -47.2671, 13.5756, 0.23", "7.18998, -48.9575, 14.4645, 0.91", "6.87326, -50.976, 15.5167, 0.68", "6.66971, -52.4694, 16.2954, 0.68", "6.43557, -54.0887, 17.1331, 0.68", "6.3166, -54.9298, 17.5341, 0.68", "6.10521, -56.7339, 18.3223, 0.68", "5.95733, -58.4148, 18.9964, 0.46", "5.8859, -60.4627, 19.8653, 0.46", "5.8676, -62.1161, 20.6314, 0.46", "5.87568, -63.5764, 21.3682, 0.68", "5.90264, -65.3989, 22.3618, 0.23", "5.97143, -67.5901, 23.6818, 0.46", "6.05609, -69.5652, 24.9255, 0.23", "6.08554, -70.9764, 25.8232, 0.68", "6.07739, -72.1794, 26.5923, 0.68", "6.02623, -73.267, 27.293, 0.23", "5.98266, -73.9573, 27.6891, 0.46", "5.85675, -75.7968, 28.5611, 0.46", "5.75865, -77.2704, 29.1862, 0.23", "5.66442, -78.8954, 29.8803, 0.46", "5.57976, -80.2915, 30.4732, 0.23", "5.53862, -81.2082, 30.8355, 0.46", "5.53879, -83.0636, 31.5271, 0.46", "5.70637, -85.6449, 32.4933, 0.46", "5.91361, -87.4373, 33.1474, 0.68", "6.04436, -88.2608, 33.4542, 0.68", "6.34572, -89.852, 34.088, 0.68", "6.64328, -91.1353, 34.6501, 0.68", "7.23009, -93.1136, 35.6403, 0.46", "7.65912, -94.4723, 36.4137, 0.68", "8.16859, -96.0578, 37.4505, 0.23", "8.55569, -97.3374, 38.3728, 0.23", "8.73344, -98.0314, 38.9101, 0.23", "9.07161, -99.6391, 40.1961, 0.23", "9.36127, -101.169, 41.3888, 0.23", "9.63058, -102.719, 42.5208, 0.23", "9.73207, -103.478, 42.9781, 0.68", "9.79925, -103.95, 43.2325, 0.68", "10.015, -105.177, 43.8089, 0.23", "10.2126, -105.993, 44.1083, 0.46", "10.647, -107.332, 44.4962, 0.23", "10.977, -108.233, 44.6707, 0.46", "11.6104, -109.713, 45.0114, 0.23", "12.0903, -110.754, 45.2104, 0.68", "12.646, -111.85, 45.2973, 0.23", "13.1065, -112.701, 45.2733, 0.23", "14.295, -114.755, 45.0495, 0.23", "15.4847, -116.847, 44.6467, 0.23", "16.4858, -118.564, 44.1743, 0.23", "17.9496, -121.037, 43.4023, 0.23", "18.8458, -122.523, 42.8657, 0.23", "19.5709, -123.672, 42.4002, 0.23", "20.3484, -124.854, 41.8418, 0.23", "20.9799, -125.828, 41.2506, 0.23" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "28.43, 24.9717, -26.021, 0.46", "29.6094, 24.7076, -24.4389, 0.46", "30.1934, 24.5326, -23.4244, 0.46", "30.99, 24.294, -22.0411, 0.68", "31.7587, 24.0636, -20.706, 0.46", "32.7662, 23.7618, -18.9566, 0.46", "33.5316, 23.5325, -17.6273, 0.46", "34.1097, 23.253, -16.4777, 0.46" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "28.43, 24.9717, -26.021, 0.68", "28.6749, 25.241, -26.5483, 0.68", "29.5504, 25.9039, -27.9998, 0.91", "30.4448, 26.3562, -29.2997, 0.68", "31.416, 26.6421, -30.5547, 0.68", "32.0451, 26.7693, -31.279, 0.68", "33.1492, 26.9716, -32.497, 0.46", "33.911, 27.0823, -33.2706, 0.46", "34.8637, 27.2107, -34.1537, 0.46", "35.7215, 27.4237, -34.9031, 0.46", "36.5326, 27.8519, -35.6438, 0.68", "37.2906, 28.4317, -36.415, 0.68", "38.1147, 29.2046, -37.3359, 0.46", "38.708, 29.883, -38.0612, 0.46", "39.3448, 30.8068, -38.8831, 0.68", "40.0705, 32.0059, -39.7676, 0.46", "40.8938, 33.2446, -40.5257, 0.46", "41.7127, 34.2719, -40.9531, 0.46", "42.5919, 35.1175, -41.1186, 0.23", "43.8139, 36.1315, -41.1795, 0.23", "45.3167, 37.0976, -40.9474, 0.23", "46.9118, 38.0447, -40.5219, 0.23", "47.8478, 38.6024, -40.1854, 0.23", "49.2636, 39.3762, -39.6271, 0.23", "50.5751, 39.9013, -39.1652, 0.23", "52.9745, 40.5802, -38.4647, 0.23" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-8.84367, -22.2546, -11.2193, 0.68", "-9.82825, -22.1533, -11.0146, 0.68", "-11.3902, -22.2541, -10.739, 0.68", "-12.8427, -22.5421, -10.4928, 0.46", "-14.0127, -22.9061, -10.3268, 0.46", "-14.5695, -23.1374, -10.2666, 0.46", "-15.8503, -23.6695, -10.1609, 0.46", "-17.6142, -24.4024, -10.0426, 0.46", "-18.4398, -24.767, -9.95716, 0.46", "-19.4774, -25.2731, -9.80806, 0.46", "-21.4965, -26.2941, -9.39528, 0.68", "-23.1964, -27.2051, -8.94766, 0.68", "-24.1, -27.7575, -8.65721, 0.46", "-25.2514, -28.6184, -8.21742, 0.46", "-25.7635, -29.1088, -8.00653, 0.46", "-26.3309, -29.7761, -7.76399, 0.46", "-27.452, -31.3344, -7.31321, 0.46", "-28.9767, -33.6462, -6.92504, 0.46", "-29.9799, -35.1785, -6.85372, 0.46", "-30.7726, -36.4233, -6.92182, 0.46", "-31.5249, -37.5964, -7.05457, 0.46", "-32.1268, -38.5415, -7.21774, 0.68", "-33.1895, -40.2132, -7.63379, 0.46", "-33.8111, -41.2361, -7.94447, 0.46", "-34.7934, -42.88, -8.44832, 0.91", "-35.2601, -43.681, -8.66166, 0.91", "-36.1152, -45.0199, -8.95999, 0.46", "-37.0285, -46.2949, -9.25998, 0.46", "-38.0999, -47.5693, -9.54837, 0.46", "-39.1954, -48.6259, -9.87851, 0.46", "-40.7701, -49.8494, -10.4417, 0.68", "-42.5532, -51.0765, -11.2767, 0.46", "-44.0922, -52.0501, -12.2579, 0.46", "-44.7067, -52.4381, -12.7621, 0.68", "-45.8046, -53.189, -13.9084, 0.68", "-46.2771, -53.5566, -14.4466, 0.91", "-47.3223, -54.527, -15.7019, 0.68", "-48.7133, -56.0815, -17.2622, 0.68", "-49.3446, -56.8076, -17.8089, 0.68", "-50.3119, -57.8698, -18.4116, 0.68", "-51.9581, -59.3907, -18.8146, 0.68", "-52.7532, -59.9635, -18.7558, 0.91", "-53.7459, -60.5423, -18.502, 0.91", "-54.9314, -61.1391, -18.079, 0.91", "-56.5104, -61.8468, -17.4523, 0.68", "-58.5661, -62.6315, -16.6142, 0.23", "-59.8539, -63.0711, -16.1454, 0.23", "-61.1174, -63.4888, -15.5837, 0.23", "-62.1156, -63.7998, -15.0451, 0.68" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-8.84367, -22.2546, -11.2193, 0.46", "-9.59562, -21.7964, -11.8479, 0.46", "-10.9061, -21.0403, -12.7518, 0.46", "-11.9674, -20.3931, -13.3913, 0.46", "-13.2074, -19.637, -14.0561, 0.68", "-13.7812, -19.2734, -14.3309, 0.46", "-14.832, -18.6128, -14.7374, 0.46", "-15.6269, -18.097, -14.9444, 0.68", "-16.8157, -17.2137, -15.1333, 0.68", "-17.3864, -16.7427, -15.1901, 0.68", "-18.257, -16.0075, -15.3152, 0.46", "-19.5784, -14.8678, -15.5555, 0.46", "-20.5653, -14.0342, -15.7503, 0.46", "-21.6129, -13.2209, -16.0273, 0.46", "-23.069, -12.1981, -16.5675, 0.23", "-24.4471, -11.2949, -17.1946, 0.23", "-25.3719, -10.6994, -17.6856, 0.23", "-26.5665, -9.95844, -18.4423, 0.46", "-28.4302, -8.93781, -19.7547, 0.23", "-29.8568, -8.20781, -20.8449, 0.23", "-30.1315, -8.0644, -21.0686, 0.46", "-31.0021, -7.56256, -21.8195, 0.46", "-32.0692, -6.86443, -22.7551, 0.46", "-33.3054, -5.91898, -23.7586, 0.46", "-33.9124, -5.43475, -24.1881, 0.68", "-35.3629, -4.25246, -25.1206, 0.68", "-36.7188, -3.15672, -25.9481, 0.68", "-38.4412, -1.8571, -26.8632, 0.68", "-40.1517, -0.539219, -27.765, 0.23", "-41.4445, 0.484966, -28.4191, 0.23", "-42.2575, 1.12005, -28.8352, 0.23", "-42.9978, 1.67942, -29.2039, 0.23", "-44.7169, 2.80281, -29.993, 0.46", "-46.854, 3.91745, -31.1675, 0.46" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_23", "dend_12", "dend_3", "dend_0", "dend_41", "dend_24", "dend_14", "dend_13", "dend_7", "dend_4", "dend_2", "dend_1", "dend_43", "dend_42", "dend_38", "dend_25", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_40", "dend_39", "dend_29", "dend_26", "dend_22", "dend_17", "dend_11", "dend_10", "dend_35", "dend_30", "dend_28", "dend_27", "dend_19", "dend_18", "dend_37", "dend_36", "dend_32", "dend_31", "dend_21", "dend_20", "dend_34", "dend_33" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_23", "dend_12", "dend_3", "dend_0", "dend_41", "dend_24", "dend_14", "dend_13", "dend_7", "dend_4", "dend_2", "dend_1", "dend_43", "dend_42", "dend_38", "dend_25", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_40", "dend_39", "dend_29", "dend_26", "dend_22", "dend_17", "dend_11", "dend_10", "dend_35", "dend_30", "dend_28", "dend_27", "dend_19", "dend_18", "dend_37", "dend_36", "dend_32", "dend_31", "dend_21", "dend_20", "dend_34", "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_12", "dend_12", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_24", "dend_24", "dend_24", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_25", "dend_25", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L1_HAC_cc210b8244_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_12, id: dend_12, parent: soma_0
create dend_12
public dend_12
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_41, id: dend_41, parent: dend_23
create dend_41
public dend_41
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_38, id: dend_38, parent: dend_24
create dend_38
public dend_38
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_29, id: dend_29, parent: dend_25
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_16
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_35, id: dend_35, parent: dend_29
create dend_35
public dend_35
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_23, dend_12, dend_3, dend_0, dend_41, dend_24, dend_14, dend_13, dend_7, dend_4, dend_2, dend_1, dend_43, dend_42, dend_38, dend_25, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_40, dend_39, dend_29, dend_26, dend_22, dend_17, dend_11, dend_10, dend_35, dend_30, dend_28, dend_27, dend_19, dend_18, dend_37, dend_36, dend_32, dend_31, dend_21, dend_20, dend_34, dend_33]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_23, dend_12, dend_3, dend_0, dend_41, dend_24, dend_14, dend_13, dend_7, dend_4, dend_2, dend_1, dend_43, dend_42, dend_38, dend_25, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_40, dend_39, dend_29, dend_26, dend_22, dend_17, dend_11, dend_10, dend_35, dend_30, dend_28, dend_27, dend_19, dend_18, dend_37, dend_36, dend_32, dend_31, dend_21, dend_20, dend_34, dend_33]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_45
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_24, dend_24, dend_24, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_25, dend_25, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_23(0), soma_0(0.49999992435914503)
    connect dend_12(0), soma_0(0.49999992435914503)
    connect dend_3(0), soma_0(0.49999992435914503)
    connect dend_0(0), soma_0(0.49999992435914503)
    connect axon_0(0), soma_0(1.0)
    connect dend_41(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_38(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_29(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_35(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -7.42336, -2.73511, 0.0, 3.5554 ) }
    soma_0 { pt3dadd( -6.6933, -2.46566, 0.0, 6.55284 ) }
    soma_0 { pt3dadd( -5.96323, -2.19621, 0.0, 8.16609 ) }
    soma_0 { pt3dadd( -5.23316, -1.92676, 0.0, 9.69432 ) }
    soma_0 { pt3dadd( -4.5031, -1.65731, 0.0, 10.5479 ) }
    soma_0 { pt3dadd( -3.77303, -1.38786, 0.0, 11.3509 ) }
    soma_0 { pt3dadd( -3.04297, -1.11841, 0.0, 12.1539 ) }
    soma_0 { pt3dadd( -2.3129, -0.84896, 0.0, 12.74 ) }
    soma_0 { pt3dadd( -1.58283, -0.579509, 0.0, 13.1304 ) }
    soma_0 { pt3dadd( -0.852766, -0.310059, 0.0, 13.5181 ) }
    soma_0 { pt3dadd( -0.1227, -0.0406084, 0.0, 13.684 ) }
    soma_0 { pt3dadd( 0.607366, 0.228842, 0.0, 13.7571 ) }
    soma_0 { pt3dadd( 1.33743, 0.498293, 0.0, 13.4597 ) }
    soma_0 { pt3dadd( 2.0675, 0.767743, 0.0, 12.8255 ) }
    soma_0 { pt3dadd( 2.79756, 1.03719, 0.0, 11.7727 ) }
    soma_0 { pt3dadd( 3.52763, 1.30664, 0.0, 10.7013 ) }
    soma_0 { pt3dadd( 4.2577, 1.57609, 0.0, 9.52247 ) }
    soma_0 { pt3dadd( 4.98776, 1.84555, 0.0, 8.25177 ) }
    soma_0 { pt3dadd( 5.71783, 2.115, 0.0, 6.86803 ) }
    soma_0 { pt3dadd( 6.4479, 2.38445, 0.0, 4.57629 ) }
    soma_0 { pt3dadd( 7.17796, 2.6539, 0.0, 2.70425 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 21/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 3.5199, -6.01432, 3.35, 2.96 ) }
    dend_23 { pt3dadd( 3.5199, -6.01432, 3.35, 2.96 ) }
    dend_23 { pt3dadd( 4.20478, -7.50201, 4.19536, 2.05 ) }
    dend_23 { pt3dadd( 4.82021, -8.83883, 4.95499, 2.05 ) }
    dend_23 { pt3dadd( 5.69936, -10.7485, 6.04013, 2.28 ) }
    dend_23 { pt3dadd( 6.4727, -12.4283, 6.99467, 2.28 ) }
    dend_23 { pt3dadd( 6.92665, -13.4143, 7.55498, 2.05 ) }
    // Section: dend_12, id: dend_12, parent: soma_0 (entry count 28/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 4.0399, 5.78568, -3.72, 2.05 ) }
    dend_12 { pt3dadd( 4.0399, 5.78568, -3.72, 2.05 ) }
    dend_12 { pt3dadd( 4.7599, 6.35568, -4.7, 2.05 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 31/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -2.6301, -3.80432, -11.02, 1.14 ) }
    dend_3 { pt3dadd( -3.59347, -4.08023, -11.5639, 1.14 ) }
    dend_3 { pt3dadd( -5.32754, -4.57686, -12.5428, 0.91 ) }
    dend_3 { pt3dadd( -6.9839, -5.05124, -13.4779, 0.91 ) }
    dend_3 { pt3dadd( -7.75963, -5.27341, -13.9159, 1.14 ) }
    dend_3 { pt3dadd( -9.0405, -5.64025, -14.639, 1.59 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 37/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -7.2001, 0.595674, -1.43, 0.91 ) }
    dend_0 { pt3dadd( -8.37062, 1.65307, -1.1834, 0.91 ) }
    dend_0 { pt3dadd( -9.71475, 2.86732, -0.900223, 0.91 ) }
    dend_0 { pt3dadd( -10.143, 3.25418, -0.810001, 1.14 ) }
    dend_0 { pt3dadd( -11.4468, 4.43199, -0.53532, 1.14 ) }
    dend_0 { pt3dadd( -12.1623, 5.07836, -0.384577, 1.14 ) }
    dend_0 { pt3dadd( -13.3295, 6.13281, -0.138665, 1.14 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 44/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 7.17796, 2.6539, 0.0, 0.46 ) }
    axon_0 { pt3dadd( 21.2501, 7.84761, 0.0, 0.46 ) }
    axon_0 { pt3dadd( 35.3223, 13.0413, 0.0, 0.46 ) }
    // Section: dend_41, id: dend_41, parent: dend_23 (entry count 47/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 6.92665, -13.4143, 7.55498, 0.68 ) }
    dend_41 { pt3dadd( 8.80222, -14.4121, 6.71136, 0.68 ) }
    dend_41 { pt3dadd( 10.3826, -15.1098, 5.99488, 0.68 ) }
    dend_41 { pt3dadd( 12.3023, -15.8117, 5.00014, 0.68 ) }
    dend_41 { pt3dadd( 13.6174, -16.1615, 4.23283, 0.68 ) }
    dend_41 { pt3dadd( 15.0841, -16.3834, 3.2898, 0.68 ) }
    dend_41 { pt3dadd( 16.6045, -16.4773, 2.31222, 0.68 ) }
    dend_41 { pt3dadd( 17.6347, -16.3716, 1.58555, 0.68 ) }
    dend_41 { pt3dadd( 18.9584, -16.0542, 0.700917, 0.91 ) }
    dend_41 { pt3dadd( 20.3805, -15.5837, -0.226702, 0.91 ) }
    dend_41 { pt3dadd( 22.299, -14.8393, -1.39442, 0.68 ) }
    dend_41 { pt3dadd( 23.6687, -14.2349, -2.18287, 0.91 ) }
    dend_41 { pt3dadd( 24.6796, -13.7449, -2.74611, 0.91 ) }
    dend_41 { pt3dadd( 26.5373, -12.8749, -3.69677, 0.91 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 61/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 6.92665, -13.4143, 7.55498, 2.05 ) }
    dend_24 { pt3dadd( 7.47915, -14.9944, 8.30974, 2.05 ) }
    dend_24 { pt3dadd( 8.09953, -16.7686, 9.15724, 2.05 ) }
    dend_24 { pt3dadd( 8.29178, -17.3184, 9.41986, 2.05 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 65/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 4.7599, 6.35568, -4.7, 1.14 ) }
    dend_14 { pt3dadd( 5.4799, 6.54568, -6.25, 1.14 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 67/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 4.7599, 6.35568, -4.7, 0.91 ) }
    dend_13 { pt3dadd( 4.38424, 7.3621, -5.66234, 0.91 ) }
    dend_13 { pt3dadd( 3.85034, 8.58064, -6.89437, 0.68 ) }
    dend_13 { pt3dadd( 3.35588, 9.63481, -7.9933, 0.68 ) }
    dend_13 { pt3dadd( 2.81942, 10.693, -9.14984, 0.68 ) }
    dend_13 { pt3dadd( 2.36884, 11.5562, -10.0751, 0.68 ) }
    dend_13 { pt3dadd( 1.82225, 12.5671, -11.1874, 0.68 ) }
    dend_13 { pt3dadd( 1.22116, 13.4769, -12.3318, 0.91 ) }
    dend_13 { pt3dadd( 0.624629, 14.128, -13.2401, 0.91 ) }
    dend_13 { pt3dadd( -0.0214131, 14.621, -14.0026, 0.91 ) }
    dend_13 { pt3dadd( -0.5464, 14.9429, -14.4962, 0.91 ) }
    dend_13 { pt3dadd( -1.99979, 15.7214, -15.5659, 0.91 ) }
    dend_13 { pt3dadd( -3.53534, 16.4857, -16.4598, 0.91 ) }
    dend_13 { pt3dadd( -5.06868, 17.2335, -17.2257, 0.91 ) }
    dend_13 { pt3dadd( -6.27618, 17.8608, -17.788, 0.91 ) }
    dend_13 { pt3dadd( -7.22353, 18.3871, -18.2218, 0.91 ) }
    dend_13 { pt3dadd( -8.70999, 19.2487, -18.9005, 0.91 ) }
    dend_13 { pt3dadd( -9.42101, 19.6699, -19.1931, 0.91 ) }
    dend_13 { pt3dadd( -10.2999, 20.2282, -19.5661, 0.91 ) }
    dend_13 { pt3dadd( -11.7243, 21.073, -20.1569, 0.46 ) }
    dend_13 { pt3dadd( -12.4853, 21.5036, -20.5022, 0.46 ) }
    dend_13 { pt3dadd( -13.0994, 21.8021, -20.7914, 0.68 ) }
    dend_13 { pt3dadd( -14.5413, 22.3977, -21.4818, 0.23 ) }
    dend_13 { pt3dadd( -15.1855, 22.6091, -21.7524, 0.46 ) }
    dend_13 { pt3dadd( -17.4623, 23.1568, -22.4315, 0.23 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 92/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -9.0405, -5.64025, -14.639, 1.14 ) }
    dend_7 { pt3dadd( -9.89645, -6.45955, -14.3651, 1.14 ) }
    dend_7 { pt3dadd( -11.2955, -7.79877, -13.9174, 0.91 ) }
    dend_7 { pt3dadd( -13.0427, -9.47128, -13.3582, 0.91 ) }
    dend_7 { pt3dadd( -14.1743, -10.5544, -12.9961, 0.91 ) }
    dend_7 { pt3dadd( -15.8945, -12.201, -12.4456, 0.91 ) }
    dend_7 { pt3dadd( -16.7651, -13.0343, -12.167, 0.91 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 99/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -9.0405, -5.64025, -14.639, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_4 { pt3dadd( -9.38806, -4.68096, -15.2254, 0.91 ) }
    dend_4 { pt3dadd( -9.86925, -3.34683, -15.8284, 0.91 ) }
    dend_4 { pt3dadd( -10.3469, -1.90934, -16.3162, 0.91 ) }
    dend_4 { pt3dadd( -10.5167, -1.25638, -16.5268, 0.91 ) }
    dend_4 { pt3dadd( -10.6902, -0.23127, -16.8894, 1.14 ) }
    dend_4 { pt3dadd( -10.7842, 1.13542, -17.3651, 0.91 ) }
    dend_4 { pt3dadd( -10.7554, 2.12291, -17.664, 0.91 ) }
    dend_4 { pt3dadd( -10.6988, 3.18414, -17.9844, 1.14 ) }
    dend_4 { pt3dadd( -10.6655, 4.6276, -18.4697, 0.91 ) }
    dend_4 { pt3dadd( -10.6418, 6.05057, -19.1007, 0.68 ) }
    dend_4 { pt3dadd( -10.6265, 7.61468, -20.0103, 0.68 ) }
    dend_4 { pt3dadd( -10.6351, 9.31065, -21.2581, 0.91 ) }
    dend_4 { pt3dadd( -10.7583, 10.8737, -22.6718, 0.68 ) }
    dend_4 { pt3dadd( -10.9998, 12.2505, -24.0878, 0.68 ) }
    dend_4 { pt3dadd( -11.4218, 13.7836, -25.7703, 0.91 ) }
    dend_4 { pt3dadd( -11.8843, 15.1153, -27.3466, 0.91 ) }
    dend_4 { pt3dadd( -12.2639, 16.0294, -28.5952, 0.91 ) }
    dend_4 { pt3dadd( -12.8214, 17.2926, -30.5923, 0.91 ) }
    dend_4 { pt3dadd( -12.9502, 17.589, -31.1239, 0.91 ) }
    dend_4 { pt3dadd( -13.4052, 18.4352, -32.7464, 0.91 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 20/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -13.3295, 6.13281, -0.138665, 1.14 ) }
    dend_2 { pt3dadd( -14.5226, 6.62304, -1.26113, 1.14 ) }
    dend_2 { pt3dadd( -15.7237, 7.09782, -2.30813, 1.37 ) }
    dend_2 { pt3dadd( -16.4918, 7.31995, -2.85643, 1.37 ) }
    dend_2 { pt3dadd( -17.5954, 7.6099, -3.54487, 1.14 ) }
    dend_2 { pt3dadd( -18.9811, 7.9869, -4.31666, 0.91 ) }
    dend_2 { pt3dadd( -19.972, 8.30663, -4.84636, 0.91 ) }
    dend_2 { pt3dadd( -21.4417, 8.85134, -5.62455, 0.91 ) }
    dend_2 { pt3dadd( -23.2472, 9.62377, -6.67451, 1.14 ) }
    dend_2 { pt3dadd( -24.2043, 10.1257, -7.32658, 1.14 ) }
    dend_2 { pt3dadd( -25.0009, 10.677, -7.99557, 1.14 ) }
    dend_2 { pt3dadd( -26.1348, 11.7533, -9.20082, 0.68 ) }
    dend_2 { pt3dadd( -27.042, 12.8846, -10.4728, 1.14 ) }
    dend_2 { pt3dadd( -27.4953, 13.6955, -11.3866, 1.14 ) }
    dend_2 { pt3dadd( -27.7987, 14.4645, -12.2377, 0.68 ) }
    dend_2 { pt3dadd( -28.2505, 15.7094, -13.6993, 0.68 ) }
    dend_2 { pt3dadd( -28.5259, 16.4704, -14.6392, 0.46 ) }
    dend_2 { pt3dadd( -28.9535, 17.56, -15.9564, 0.46 ) }
    dend_2 { pt3dadd( -29.3592, 18.4957, -16.9386, 0.68 ) }
    dend_2 { pt3dadd( -29.7152, 19.2819, -17.7195, 0.68 ) }
    dend_2 { pt3dadd( -30.3134, 20.4685, -18.9462, 0.68 ) }
    dend_2 { pt3dadd( -30.8314, 21.3426, -19.9834, 0.91 ) }
    dend_2 { pt3dadd( -31.5788, 22.5527, -21.6054, 0.68 ) }
    dend_2 { pt3dadd( -32.1693, 23.4803, -22.9169, 0.68 ) }
    dend_2 { pt3dadd( -32.7523, 24.3376, -24.2149, 0.68 ) }
    dend_2 { pt3dadd( -33.3747, 25.2908, -25.7784, 0.91 ) }
    dend_2 { pt3dadd( -33.8543, 26.1629, -27.179, 0.91 ) }
    dend_2 { pt3dadd( -34.2701, 26.9939, -28.6052, 0.68 ) }
    dend_2 { pt3dadd( -34.4426, 27.3348, -29.3064, 0.68 ) }
    dend_2 { pt3dadd( -34.5742, 27.6026, -29.9563, 0.91 ) }
    dend_2 { pt3dadd( -34.9389, 28.5351, -31.9951, 0.68 ) }
    dend_2 { pt3dadd( -35.2607, 29.8758, -34.1417, 0.68 ) }
    dend_2 { pt3dadd( -35.2845, 30.6532, -35.0366, 0.91 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 53/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -13.3295, 6.13281, -0.138665, 0.68 ) }
    dend_1 { pt3dadd( -13.1922, 4.89169, 0.780173, 0.68 ) }
    dend_1 { pt3dadd( -13.095, 3.44027, 1.88654, 0.68 ) }
    dend_1 { pt3dadd( -13.0807, 2.28654, 2.79455, 0.68 ) }
    dend_1 { pt3dadd( -13.1453, 1.81974, 3.20726, 0.68 ) }
    dend_1 { pt3dadd( -13.5615, 0.642663, 4.40849, 0.68 ) }
    dend_1 { pt3dadd( -14.0688, -0.303259, 5.54638, 0.68 ) }
    dend_1 { pt3dadd( -14.3867, -0.706417, 6.17518, 0.68 ) }
    dend_1 { pt3dadd( -14.6819, -0.923383, 6.67952, 0.68 ) }
    dend_1 { pt3dadd( -15.5444, -1.38903, 8.1584, 0.68 ) }
    dend_1 { pt3dadd( -16.2479, -1.75821, 9.53712, 0.68 ) }
    dend_1 { pt3dadd( -16.761, -2.03331, 10.7857, 0.68 ) }
    dend_1 { pt3dadd( -17.2245, -2.38562, 12.51, 0.68 ) }
    dend_1 { pt3dadd( -17.3708, -2.64155, 13.8076, 0.68 ) }
    dend_1 { pt3dadd( -17.4059, -2.86416, 14.9041, 0.68 ) }
    dend_1 { pt3dadd( -17.2534, -3.19077, 16.5697, 0.46 ) }
    dend_1 { pt3dadd( -16.9319, -3.45222, 18.1117, 0.46 ) }
    dend_1 { pt3dadd( -16.5859, -3.62024, 19.126, 0.23 ) }
    dend_1 { pt3dadd( -16.051, -3.78073, 20.1035, 0.23 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 72/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 35.3223, 13.0413, 0.0, 0.46 ) }
    axon_1 { pt3dadd( 49.3944, 18.235, 0.0, 0.46 ) }
    axon_1 { pt3dadd( 63.4666, 23.4287, 0.0, 0.46 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 75/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 26.5373, -12.8749, -3.69677, 0.68 ) }
    dend_43 { pt3dadd( 27.4835, -12.1529, -2.67647, 0.68 ) }
    dend_43 { pt3dadd( 29.3316, -10.891, -0.907579, 0.68 ) }
    dend_43 { pt3dadd( 30.64, -10.1056, 0.114422, 0.68 ) }
    dend_43 { pt3dadd( 32.0595, -9.42116, 1.17539, 0.68 ) }
    dend_43 { pt3dadd( 32.9333, -9.07678, 1.8833, 0.68 ) }
    dend_43 { pt3dadd( 33.6645, -8.84439, 2.52495, 0.68 ) }
    dend_43 { pt3dadd( 35.2625, -8.46819, 4.06772, 0.68 ) }
    dend_43 { pt3dadd( 36.4552, -8.2898, 5.4522, 0.46 ) }
    dend_43 { pt3dadd( 38.0565, -8.15828, 7.93715, 0.46 ) }
    dend_43 { pt3dadd( 39.0266, -8.22477, 10.1019, 0.46 ) }
    dend_43 { pt3dadd( 39.52, -8.36192, 11.6051, 0.46 ) }
    dend_43 { pt3dadd( 39.8722, -8.51794, 13.0995, 0.46 ) }
    dend_43 { pt3dadd( 40.2112, -8.68828, 14.9798, 0.46 ) }
    dend_43 { pt3dadd( 40.4655, -8.76125, 16.2388, 0.46 ) }
    dend_43 { pt3dadd( 40.8542, -8.81499, 17.2402, 0.46 ) }
    dend_43 { pt3dadd( 41.701, -9.00702, 18.4866, 0.68 ) }
    dend_43 { pt3dadd( 42.8078, -9.35324, 19.6993, 0.68 ) }
    dend_43 { pt3dadd( 44.1433, -9.85442, 20.8413, 0.68 ) }
    dend_43 { pt3dadd( 45.0601, -10.2394, 21.5037, 0.68 ) }
    dend_43 { pt3dadd( 46.4085, -10.8954, 22.3997, 0.46 ) }
    dend_43 { pt3dadd( 47.3182, -11.3684, 23.0047, 0.46 ) }
    dend_43 { pt3dadd( 47.7556, -11.6363, 23.2978, 0.46 ) }
    dend_43 { pt3dadd( 48.9076, -12.3719, 23.9333, 0.23 ) }
    dend_43 { pt3dadd( 49.6732, -12.7931, 24.3263, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_43 { pt3dadd( 51.2542, -13.4759, 25.0778, 0.46 ) }
    dend_43 { pt3dadd( 52.2669, -13.7188, 25.5565, 0.46 ) }
    dend_43 { pt3dadd( 54.2439, -13.6693, 26.5173, 0.46 ) }
    dend_43 { pt3dadd( 55.9538, -13.4435, 27.3489, 0.46 ) }
    dend_43 { pt3dadd( 57.5333, -12.7893, 28.1285, 0.46 ) }
    dend_43 { pt3dadd( 58.228, -11.9125, 28.5091, 0.46 ) }
    dend_43 { pt3dadd( 59.2399, -9.64297, 29.1386, 0.23 ) }
    dend_43 { pt3dadd( 59.8228, -6.937, 29.6498, 0.23 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 8/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 26.5373, -12.8749, -3.69677, 0.68 ) }
    dend_42 { pt3dadd( 27.7381, -11.9967, -4.33265, 0.68 ) }
    dend_42 { pt3dadd( 28.7887, -11.2834, -4.93652, 0.68 ) }
    dend_42 { pt3dadd( 30.1192, -10.5812, -5.6346, 0.68 ) }
    dend_42 { pt3dadd( 31.2715, -10.0411, -6.21944, 0.68 ) }
    dend_42 { pt3dadd( 32.6541, -9.43839, -6.93826, 0.46 ) }
    dend_42 { pt3dadd( 33.6343, -9.0223, -7.50207, 0.46 ) }
    dend_42 { pt3dadd( 34.7222, -8.60047, -8.19798, 0.46 ) }
    dend_42 { pt3dadd( 36.4614, -7.92776, -9.38235, 0.46 ) }
    dend_42 { pt3dadd( 37.0634, -7.68519, -9.82927, 0.46 ) }
    dend_42 { pt3dadd( 38.3773, -7.09342, -10.9042, 0.46 ) }
    dend_42 { pt3dadd( 39.5471, -6.44382, -12.0254, 0.46 ) }
    dend_42 { pt3dadd( 41.047, -5.37489, -13.8232, 0.46 ) }
    dend_42 { pt3dadd( 41.7416, -4.74193, -14.8609, 0.68 ) }
    dend_42 { pt3dadd( 42.2015, -4.22269, -15.7148, 0.46 ) }
    dend_42 { pt3dadd( 42.7859, -3.51427, -16.9659, 0.46 ) }
    dend_42 { pt3dadd( 43.4356, -2.60587, -18.4915, 0.46 ) }
    dend_42 { pt3dadd( 43.9666, -1.69196, -20.0512, 0.46 ) }
    dend_42 { pt3dadd( 44.1707, -1.10725, -21.1495, 0.46 ) }
    dend_42 { pt3dadd( 44.333, -0.461766, -22.4754, 0.68 ) }
    dend_42 { pt3dadd( 44.5603, 0.10445, -23.679, 0.68 ) }
    dend_42 { pt3dadd( 45.4404, 1.56049, -26.4283, 0.46 ) }
    dend_42 { pt3dadd( 46.2553, 2.87081, -28.359, 0.46 ) }
    dend_42 { pt3dadd( 46.8924, 3.90474, -29.7062, 0.46 ) }
    dend_42 { pt3dadd( 47.4483, 4.6826, -30.6936, 0.46 ) }
    dend_42 { pt3dadd( 48.3677, 5.77802, -32.0964, 0.46 ) }
    dend_42 { pt3dadd( 49.1362, 6.67503, -33.2792, 0.46 ) }
    dend_42 { pt3dadd( 49.9987, 7.73467, -34.7485, 0.46 ) }
    dend_42 { pt3dadd( 50.5951, 8.50526, -35.7798, 0.46 ) }
    dend_42 { pt3dadd( 51.6007, 9.94626, -37.7129, 0.46 ) }
    dend_42 { pt3dadd( 52.3629, 11.1566, -39.3825, 0.46 ) }
    dend_42 { pt3dadd( 53.1443, 12.5956, -41.4397, 0.46 ) }
    dend_42 { pt3dadd( 53.6334, 13.5745, -42.9003, 0.46 ) }
    dend_42 { pt3dadd( 54.1716, 14.6926, -44.6792, 0.46 ) }
    dend_42 { pt3dadd( 54.2799, 15.0282, -45.1866, 0.46 ) }
    // Section: dend_38, id: dend_38, parent: dend_24 (entry count 43/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 8.29178, -17.3184, 9.41986, 0.91 ) }
    dend_38 { pt3dadd( 8.33873, -18.4664, 10.8263, 0.91 ) }
    dend_38 { pt3dadd( 8.52979, -19.6999, 12.3033, 0.91 ) }
    dend_38 { pt3dadd( 8.758, -21.1733, 14.0675, 0.91 ) }
    dend_38 { pt3dadd( 8.97216, -22.5559, 15.7232, 0.91 ) }
    dend_38 { pt3dadd( 9.15895, -23.7618, 17.1671, 0.91 ) }
    dend_38 { pt3dadd( 9.27973, -24.5416, 18.1009, 0.91 ) }
    dend_38 { pt3dadd( 9.45409, -25.5921, 19.2784, 1.14 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 51/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 8.29178, -17.3184, 9.41986, 1.82 ) }
    dend_25 { pt3dadd( 8.13675, -18.8651, 7.44582, 1.82 ) }
    dend_25 { pt3dadd( 8.10404, -19.1913, 7.02941, 1.82 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 54/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 5.4799, 6.54568, -6.25, 1.37 ) }
    dend_16 { pt3dadd( 6.31973, 7.38386, -6.28782, 1.37 ) }
    dend_16 { pt3dadd( 7.94704, 9.00799, -6.36111, 1.14 ) }
    dend_16 { pt3dadd( 8.14937, 9.20993, -6.37022, 1.14 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 58/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 5.4799, 6.54568, -6.25, 0.46 ) }
    dend_15 { pt3dadd( 5.50234, 6.87154, -6.56082, 0.46 ) }
    dend_15 { pt3dadd( 5.55947, 7.94928, -7.45805, 0.46 ) }
    dend_15 { pt3dadd( 5.67034, 8.99912, -8.40041, 0.46 ) }
    dend_15 { pt3dadd( 5.84002, 10.0192, -9.49555, 0.46 ) }
    dend_15 { pt3dadd( 6.01288, 10.8207, -10.463, 0.46 ) }
    dend_15 { pt3dadd( 6.27363, 11.7944, -11.7918, 0.46 ) }
    dend_15 { pt3dadd( 6.48775, 12.3144, -12.7048, 0.68 ) }
    dend_15 { pt3dadd( 6.96776, 12.6205, -14.3721, 0.68 ) }
    dend_15 { pt3dadd( 7.55287, 12.2995, -15.9261, 0.68 ) }
    dend_15 { pt3dadd( 7.79739, 12.099, -16.4639, 0.91 ) }
    dend_15 { pt3dadd( 8.37029, 11.585, -17.5497, 0.68 ) }
    dend_15 { pt3dadd( 9.01618, 10.9583, -18.7559, 0.68 ) }
    dend_15 { pt3dadd( 9.81479, 10.2865, -20.3041, 0.68 ) }
    dend_15 { pt3dadd( 10.4246, 10.1155, -21.4959, 0.68 ) }
    dend_15 { pt3dadd( 11.0004, 10.4016, -22.7047, 0.68 ) }
    dend_15 { pt3dadd( 11.5615, 10.8426, -23.8847, 0.68 ) }
    dend_15 { pt3dadd( 11.9755, 11.1927, -24.7261, 0.68 ) }
    dend_15 { pt3dadd( 12.6113, 11.6678, -25.8674, 0.68 ) }
    dend_15 { pt3dadd( 13.5956, 12.224, -27.4058, 0.91 ) }
    dend_15 { pt3dadd( 14.759, 12.5786, -29.0096, 0.91 ) }
    dend_15 { pt3dadd( 15.8262, 12.6339, -30.2457, 0.91 ) }
    dend_15 { pt3dadd( 17.299, 12.3345, -31.4588, 0.91 ) }
    dend_15 { pt3dadd( 18.5781, 11.7957, -32.2205, 0.68 ) }
    dend_15 { pt3dadd( 19.8057, 10.9058, -32.7256, 0.91 ) }
    dend_15 { pt3dadd( 20.5758, 10.0666, -32.855, 0.91 ) }
    dend_15 { pt3dadd( 21.4447, 8.73856, -32.7889, 0.91 ) }
    dend_15 { pt3dadd( 22.0089, 7.63658, -32.6726, 0.91 ) }
    dend_15 { pt3dadd( 22.3556, 6.82467, -32.5543, 0.91 ) }
    dend_15 { pt3dadd( 23.1712, 4.83732, -32.3571, 0.68 ) }
    dend_15 { pt3dadd( 23.8806, 3.33959, -32.3089, 0.91 ) }
    dend_15 { pt3dadd( 24.5358, 2.28749, -32.4221, 0.91 ) }
    dend_15 { pt3dadd( 25.5601, 1.34057, -32.887, 0.91 ) }
    dend_15 { pt3dadd( 26.0301, 1.10521, -33.1899, 0.68 ) }
    dend_15 { pt3dadd( 27.5545, 0.735495, -34.4163, 1.14 ) }
    dend_15 { pt3dadd( 28.4947, 0.664946, -35.2742, 0.68 ) }
    dend_15 { pt3dadd( 29.8143, 0.765924, -36.7346, 0.68 ) }
    dend_15 { pt3dadd( 30.9692, 1.05146, -38.3088, 0.91 ) }
    dend_15 { pt3dadd( 31.6096, 1.32634, -39.4106, 0.91 ) }
    dend_15 { pt3dadd( 32.2673, 1.73868, -40.8897, 0.68 ) }
    dend_15 { pt3dadd( 32.3812, 1.83725, -41.2421, 0.68 ) }
    dend_15 { pt3dadd( 32.915, 2.29727, -42.9971, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_15 { pt3dadd( 33.4934, 2.65391, -44.5094, 0.91 ) }
    dend_15 { pt3dadd( 33.9347, 2.799, -45.406, 0.91 ) }
    dend_15 { pt3dadd( 34.5297, 2.92275, -46.3294, 0.91 ) }
    dend_15 { pt3dadd( 35.4204, 3.07598, -47.5048, 0.91 ) }
    dend_15 { pt3dadd( 36.6096, 3.25557, -48.8881, 0.91 ) }
    dend_15 { pt3dadd( 38.3028, 3.46213, -50.5112, 0.91 ) }
    dend_15 { pt3dadd( 39.9089, 3.62775, -51.9, 0.91 ) }
    dend_15 { pt3dadd( 40.8968, 3.70733, -52.7095, 0.91 ) }
    dend_15 { pt3dadd( 41.7984, 3.76482, -53.3826, 0.91 ) }
    dend_15 { pt3dadd( 42.9294, 3.81681, -54.1094, 0.91 ) }
    dend_15 { pt3dadd( 44.8082, 3.81968, -55.063, 0.91 ) }
    dend_15 { pt3dadd( 45.7993, 3.72747, -55.3815, 0.91 ) }
    dend_15 { pt3dadd( 46.9879, 3.53029, -55.6171, 0.91 ) }
    dend_15 { pt3dadd( 48.2823, 3.27888, -55.8635, 0.91 ) }
    dend_15 { pt3dadd( 50.7071, 2.8289, -56.3446, 0.91 ) }
    dend_15 { pt3dadd( 52.3787, 2.5411, -56.7263, 0.91 ) }
    dend_15 { pt3dadd( 53.4882, 2.35008, -57.0691, 0.91 ) }
    dend_15 { pt3dadd( 56.0941, 1.90964, -58.2138, 0.68 ) }
    dend_15 { pt3dadd( 57.4762, 1.66166, -59.1304, 0.68 ) }
    dend_15 { pt3dadd( 58.6629, 1.42301, -60.1544, 0.68 ) }
    dend_15 { pt3dadd( 59.7575, 1.11066, -61.2632, 0.68 ) }
    dend_15 { pt3dadd( 61.1446, 0.633651, -62.7734, 0.68 ) }
    dend_15 { pt3dadd( 62.5345, 0.115598, -64.3219, 0.68 ) }
    dend_15 { pt3dadd( 64.4575, -0.67801, -66.3497, 0.68 ) }
    dend_15 { pt3dadd( 65.3627, -1.05326, -67.1834, 0.68 ) }
    dend_15 { pt3dadd( 67.6228, -1.98151, -69.0457, 0.46 ) }
    dend_15 { pt3dadd( 69.5147, -2.76534, -70.4744, 0.68 ) }
    dend_15 { pt3dadd( 70.4985, -3.16881, -71.1357, 0.68 ) }
    dend_15 { pt3dadd( 72.1487, -3.8588, -72.1519, 0.46 ) }
    dend_15 { pt3dadd( 73.0093, -4.20818, -72.6948, 0.46 ) }
    dend_15 { pt3dadd( 74.1476, -4.66222, -73.5838, 0.46 ) }
    dend_15 { pt3dadd( 75.507, -5.20364, -74.8908, 0.46 ) }
    dend_15 { pt3dadd( 76.4641, -5.61312, -75.8852, 0.46 ) }
    dend_15 { pt3dadd( 78.0647, -6.33448, -77.6933, 0.46 ) }
    dend_15 { pt3dadd( 79.1317, -6.83198, -79.0238, 0.46 ) }
    dend_15 { pt3dadd( 80.7871, -7.59236, -81.1572, 0.46 ) }
    dend_15 { pt3dadd( 82.5288, -8.26742, -83.3175, 0.46 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 37/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -16.7651, -13.0343, -12.167, 0.68 ) }
    dend_9 { pt3dadd( -17.2512, -14.4289, -12.6708, 0.68 ) }
    dend_9 { pt3dadd( -18.0177, -15.8973, -13.0929, 0.68 ) }
    dend_9 { pt3dadd( -19.2657, -16.9463, -13.0429, 0.68 ) }
    dend_9 { pt3dadd( -20.1577, -17.1874, -12.7264, 0.68 ) }
    dend_9 { pt3dadd( -22.2386, -17.4785, -11.7871, 0.68 ) }
    dend_9 { pt3dadd( -23.661, -17.7262, -11.0952, 0.68 ) }
    dend_9 { pt3dadd( -25.3129, -17.9373, -10.2813, 0.68 ) }
    dend_9 { pt3dadd( -26.9256, -18.0859, -9.54908, 0.91 ) }
    dend_9 { pt3dadd( -27.7926, -18.1244, -9.13592, 0.91 ) }
    dend_9 { pt3dadd( -29.3637, -18.146, -8.40282, 0.68 ) }
    dend_9 { pt3dadd( -30.389, -18.1613, -7.87886, 0.68 ) }
    dend_9 { pt3dadd( -31.9525, -18.4421, -7.16434, 0.68 ) }
    dend_9 { pt3dadd( -33.2607, -18.9105, -6.82557, 0.91 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 51/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -16.7651, -13.0343, -12.167, 0.68 ) }
    dend_8 { pt3dadd( -15.4859, -13.139, -13.349, 0.68 ) }
    dend_8 { pt3dadd( -14.2777, -13.1091, -14.4347, 0.68 ) }
    dend_8 { pt3dadd( -13.13, -12.9793, -15.3815, 0.68 ) }
    dend_8 { pt3dadd( -12.2349, -12.8352, -16.0935, 0.91 ) }
    dend_8 { pt3dadd( -10.5607, -12.5646, -17.474, 0.68 ) }
    dend_8 { pt3dadd( -9.19964, -12.3744, -18.6442, 0.68 ) }
    dend_8 { pt3dadd( -7.38149, -12.0494, -20.3451, 0.91 ) }
    dend_8 { pt3dadd( -6.12448, -11.7735, -21.6976, 0.91 ) }
    dend_8 { pt3dadd( -5.3769, -11.5926, -22.6812, 0.91 ) }
    dend_8 { pt3dadd( -4.35286, -11.2963, -24.3277, 0.91 ) }
    dend_8 { pt3dadd( -3.88815, -11.1603, -25.1854, 0.91 ) }
    dend_8 { pt3dadd( -3.25426, -10.978, -26.5627, 0.91 ) }
    dend_8 { pt3dadd( -2.54968, -10.8747, -28.4346, 0.91 ) }
    dend_8 { pt3dadd( -1.84758, -10.8981, -30.2352, 0.91 ) }
    dend_8 { pt3dadd( -1.08691, -10.9839, -31.8477, 0.91 ) }
    dend_8 { pt3dadd( 0.180211, -11.0469, -33.887, 0.91 ) }
    dend_8 { pt3dadd( 0.656269, -11.0483, -34.4722, 0.91 ) }
    dend_8 { pt3dadd( 2.34459, -11.1083, -36.039, 0.91 ) }
    dend_8 { pt3dadd( 4.44479, -11.2447, -37.6508, 0.91 ) }
    dend_8 { pt3dadd( 6.14066, -11.3291, -38.8932, 0.91 ) }
    dend_8 { pt3dadd( 8.04174, -11.3642, -40.4322, 0.91 ) }
    dend_8 { pt3dadd( 9.51717, -11.2349, -41.8357, 0.91 ) }
    dend_8 { pt3dadd( 10.4656, -11.066, -43.0006, 1.14 ) }
    dend_8 { pt3dadd( 11.2687, -10.8813, -44.376, 1.14 ) }
    dend_8 { pt3dadd( 12.544, -10.5457, -47.2664, 0.68 ) }
    dend_8 { pt3dadd( 13.4861, -10.245, -49.6271, 0.68 ) }
    dend_8 { pt3dadd( 14.087, -10.0345, -51.2703, 0.68 ) }
    dend_8 { pt3dadd( 14.9941, -9.5993, -53.8989, 0.68 ) }
    dend_8 { pt3dadd( 15.7878, -9.12025, -56.0617, 0.68 ) }
    dend_8 { pt3dadd( 16.6771, -8.55978, -58.2438, 0.68 ) }
    dend_8 { pt3dadd( 17.6814, -7.92472, -60.4613, 0.46 ) }
    dend_8 { pt3dadd( 18.7163, -7.30872, -62.3889, 0.46 ) }
    dend_8 { pt3dadd( 19.7954, -6.70743, -64.1076, 0.46 ) }
    dend_8 { pt3dadd( 21.4782, -5.72385, -66.4403, 0.46 ) }
    dend_8 { pt3dadd( 22.6403, -4.88181, -68.1812, 0.46 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 87/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -13.4052, 18.4352, -32.7464, 0.46 ) }
    dend_6 { pt3dadd( -12.4177, 17.9475, -33.5322, 0.46 ) }
    dend_6 { pt3dadd( -11.6772, 17.7622, -34.3265, 0.46 ) }
    dend_6 { pt3dadd( -10.952, 17.6936, -35.1006, 0.46 ) }
    dend_6 { pt3dadd( -9.39775, 17.849, -36.807, 0.46 ) }
    dend_6 { pt3dadd( -8.13817, 18.1602, -38.362, 0.46 ) }
    dend_6 { pt3dadd( -7.50035, 18.3799, -39.2461, 0.46 ) }
    dend_6 { pt3dadd( -6.65262, 18.9414, -40.7555, 0.46 ) }
    dend_6 { pt3dadd( -6.08429, 19.5149, -42.0011, 0.46 ) }
    dend_6 { pt3dadd( -5.56965, 20.1643, -43.2507, 0.68 ) }
    dend_6 { pt3dadd( -5.03476, 20.9723, -44.5576, 0.68 ) }
    dend_6 { pt3dadd( -4.76251, 21.2861, -45.0626, 0.68 ) }
    dend_6 { pt3dadd( -4.19853, 21.7742, -45.8759, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_6 { pt3dadd( -3.62308, 22.2789, -46.6403, 0.46 ) }
    dend_6 { pt3dadd( -2.63143, 23.2386, -47.8657, 0.68 ) }
    dend_6 { pt3dadd( -2.18697, 23.7648, -48.4516, 0.68 ) }
    dend_6 { pt3dadd( -1.42849, 24.8888, -49.6221, 0.46 ) }
    dend_6 { pt3dadd( -0.895309, 25.7011, -50.4283, 0.46 ) }
    dend_6 { pt3dadd( -0.115453, 27.0257, -51.6865, 0.46 ) }
    dend_6 { pt3dadd( 0.266732, 27.8404, -52.4444, 0.68 ) }
    dend_6 { pt3dadd( 0.859997, 30.1501, -54.6977, 0.46 ) }
    dend_6 { pt3dadd( 0.984019, 31.191, -55.7936, 0.46 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 9/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -13.4052, 18.4352, -32.7464, 0.68 ) }
    dend_5 { pt3dadd( -14.1786, 19.3233, -34.5332, 0.68 ) }
    dend_5 { pt3dadd( -14.7414, 19.8684, -35.6784, 0.68 ) }
    dend_5 { pt3dadd( -15.4801, 20.4786, -36.9324, 0.68 ) }
    dend_5 { pt3dadd( -16.1214, 20.9932, -37.943, 0.68 ) }
    dend_5 { pt3dadd( -16.6539, 21.4533, -38.8082, 0.68 ) }
    dend_5 { pt3dadd( -17.1264, 21.9288, -39.6356, 0.68 ) }
    dend_5 { pt3dadd( -17.8708, 22.6928, -40.7959, 0.68 ) }
    dend_5 { pt3dadd( -18.7319, 23.5976, -42.0857, 0.68 ) }
    dend_5 { pt3dadd( -18.8888, 23.7855, -42.3639, 0.46 ) }
    dend_5 { pt3dadd( -19.2964, 24.382, -43.2197, 0.46 ) }
    dend_5 { pt3dadd( -19.7365, 25.2638, -44.4841, 0.46 ) }
    dend_5 { pt3dadd( -19.9389, 25.9248, -45.5566, 0.46 ) }
    dend_5 { pt3dadd( -19.9209, 26.2087, -46.1869, 0.68 ) }
    dend_5 { pt3dadd( -19.7565, 26.9011, -47.9555, 0.68 ) }
    dend_5 { pt3dadd( -19.6474, 27.2739, -49.0656, 0.46 ) }
    dend_5 { pt3dadd( -19.4749, 27.698, -50.6622, 0.46 ) }
    dend_5 { pt3dadd( -19.1966, 27.9853, -52.2285, 0.46 ) }
    dend_5 { pt3dadd( -18.5435, 28.3617, -54.662, 0.46 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 28/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 9.45409, -25.5921, 19.2784, 0.68 ) }
    dend_40 { pt3dadd( 10.647, -24.5886, 19.7057, 0.68 ) }
    dend_40 { pt3dadd( 11.8389, -23.4571, 20.1212, 0.68 ) }
    dend_40 { pt3dadd( 12.9004, -22.2977, 20.4863, 0.68 ) }
    dend_40 { pt3dadd( 13.8328, -20.9722, 20.8143, 0.68 ) }
    dend_40 { pt3dadd( 14.5978, -19.7879, 21.041, 0.68 ) }
    dend_40 { pt3dadd( 15.0756, -19.0445, 21.2047, 0.91 ) }
    dend_40 { pt3dadd( 16.1391, -17.3603, 21.6648, 0.91 ) }
    dend_40 { pt3dadd( 16.6672, -16.4433, 21.9662, 0.91 ) }
    dend_40 { pt3dadd( 17.6912, -14.4946, 22.6827, 0.68 ) }
    dend_40 { pt3dadd( 18.2971, -13.4858, 23.1223, 0.68 ) }
    dend_40 { pt3dadd( 19.3491, -12.1554, 23.8866, 0.68 ) }
    dend_40 { pt3dadd( 20.6668, -11.0051, 24.9919, 0.68 ) }
    dend_40 { pt3dadd( 21.5271, -10.4623, 25.8706, 0.68 ) }
    dend_40 { pt3dadd( 22.1187, -10.1636, 26.5324, 0.68 ) }
    dend_40 { pt3dadd( 23.1681, -9.50104, 27.8415, 0.68 ) }
    dend_40 { pt3dadd( 23.9156, -8.62877, 28.8228, 0.68 ) }
    dend_40 { pt3dadd( 24.4774, -6.75133, 29.1913, 0.68 ) }
    dend_40 { pt3dadd( 24.5476, -5.22017, 28.5702, 0.68 ) }
    dend_40 { pt3dadd( 24.5558, -4.27176, 27.9233, 0.68 ) }
    dend_40 { pt3dadd( 24.5387, -1.82947, 25.8961, 0.68 ) }
    dend_40 { pt3dadd( 24.4601, 0.106709, 24.2285, 0.46 ) }
    dend_40 { pt3dadd( 24.2959, 2.02061, 22.4143, 0.46 ) }
    dend_40 { pt3dadd( 24.1273, 3.40758, 20.8299, 0.46 ) }
    dend_40 { pt3dadd( 24.0525, 4.10631, 19.8365, 0.46 ) }
    dend_40 { pt3dadd( 23.9853, 5.00809, 18.2178, 0.46 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 54/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 9.45409, -25.5921, 19.2784, 0.68 ) }
    dend_39 { pt3dadd( 9.84643, -26.1557, 20.8031, 0.68 ) }
    dend_39 { pt3dadd( 10.3652, -26.6934, 22.4755, 0.68 ) }
    dend_39 { pt3dadd( 10.877, -27.2537, 24.0723, 0.68 ) }
    dend_39 { pt3dadd( 11.2794, -27.7514, 25.3701, 0.68 ) }
    dend_39 { pt3dadd( 11.5981, -28.1723, 26.3926, 0.46 ) }
    dend_39 { pt3dadd( 12.2196, -28.9977, 28.3022, 0.46 ) }
    dend_39 { pt3dadd( 12.7603, -29.6162, 29.815, 0.46 ) }
    dend_39 { pt3dadd( 13.225, -29.9986, 30.9306, 0.46 ) }
    dend_39 { pt3dadd( 13.7422, -30.3109, 32.0643, 0.46 ) }
    dend_39 { pt3dadd( 14.3148, -30.6127, 33.2974, 0.46 ) }
    dend_39 { pt3dadd( 14.8591, -30.8558, 34.5227, 0.46 ) }
    dend_39 { pt3dadd( 15.4494, -31.0336, 35.7653, 0.46 ) }
    dend_39 { pt3dadd( 16.0892, -31.1214, 37.0939, 0.46 ) }
    dend_39 { pt3dadd( 16.6983, -31.1131, 38.3462, 0.46 ) }
    dend_39 { pt3dadd( 17.3692, -31.0658, 39.8551, 0.46 ) }
    dend_39 { pt3dadd( 18.0093, -31.0556, 41.4342, 0.46 ) }
    dend_39 { pt3dadd( 18.8395, -31.2344, 43.6921, 0.46 ) }
    dend_39 { pt3dadd( 19.399, -31.5509, 45.3597, 0.46 ) }
    dend_39 { pt3dadd( 19.6315, -31.7854, 46.0107, 0.46 ) }
    dend_39 { pt3dadd( 20.1824, -32.5086, 47.4326, 0.46 ) }
    dend_39 { pt3dadd( 20.6287, -33.1713, 48.3815, 0.46 ) }
    dend_39 { pt3dadd( 21.4445, -34.3565, 49.7931, 0.46 ) }
    dend_39 { pt3dadd( 22.2397, -35.358, 51.0075, 0.46 ) }
    dend_39 { pt3dadd( 23.4968, -36.9295, 52.7557, 0.46 ) }
    dend_39 { pt3dadd( 24.4858, -38.1097, 54.0415, 0.46 ) }
    dend_39 { pt3dadd( 25.3099, -38.9627, 54.9879, 0.68 ) }
    dend_39 { pt3dadd( 26.5725, -40.1103, 56.4231, 0.68 ) }
    dend_39 { pt3dadd( 27.8839, -41.1302, 57.8002, 0.68 ) }
    // Section: dend_29, id: dend_29, parent: dend_25 (entry count 83/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 8.10404, -19.1913, 7.02941, 1.82 ) }
    dend_29 { pt3dadd( 8.78563, -20.6209, 6.75187, 1.82 ) }
    dend_29 { pt3dadd( 9.35657, -21.8184, 6.51938, 2.05 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 86/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 8.10404, -19.1913, 7.02941, 0.68 ) }
    dend_26 { pt3dadd( 8.03445, -18.7602, 4.40371, 0.68 ) }
    dend_26 { pt3dadd( 7.93395, -18.4247, 2.60323, 0.68 ) }
    dend_26 { pt3dadd( 7.77869, -18.1453, 1.05517, 0.68 ) }
    dend_26 { pt3dadd( 7.47795, -17.7057, -1.27473, 0.68 ) }
    dend_26 { pt3dadd( 7.17482, -17.2429, -3.55889, 0.68 ) }
    dend_26 { pt3dadd( 7.00669, -16.9811, -4.76338, 0.68 ) }
    dend_26 { pt3dadd( 6.78854, -16.6946, -5.86488, 0.68 ) }
    dend_26 { pt3dadd( 6.47915, -16.3286, -7.20343, 0.68 ) }
    dend_26 { pt3dadd( 6.17793, -16.0225, -8.35994, 0.68 ) }
    dend_26 { pt3dadd( 5.95668, -15.8499, -8.98878, 0.68 ) }
    dend_26 { pt3dadd( 5.47377, -15.521, -10.2021, 0.68 ) }
    dend_26 { pt3dadd( 4.80577, -15.1324, -11.8337, 0.68 ) }
    dend_26 { pt3dadd( 4.30268, -14.7376, -13.2953, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    // Section: dend_22, id: dend_22, parent: dend_16 (entry count 0/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 8.14937, 9.20993, -6.37022, 0.68 ) }
    dend_22 { pt3dadd( 9.77385, 8.64377, -7.54577, 0.68 ) }
    dend_22 { pt3dadd( 11.4524, 8.09383, -8.72077, 0.68 ) }
    dend_22 { pt3dadd( 13.0406, 7.64784, -9.96443, 0.68 ) }
    dend_22 { pt3dadd( 14.0307, 7.44762, -10.8352, 0.68 ) }
    dend_22 { pt3dadd( 15.0272, 7.39017, -11.7871, 0.68 ) }
    dend_22 { pt3dadd( 16.0161, 7.49359, -12.8162, 0.68 ) }
    dend_22 { pt3dadd( 16.4771, 7.68914, -13.3545, 0.91 ) }
    dend_22 { pt3dadd( 17.619, 8.74214, -14.9644, 0.91 ) }
    dend_22 { pt3dadd( 18.243, 9.68476, -15.961, 0.68 ) }
    dend_22 { pt3dadd( 19.0338, 11.2284, -17.3285, 0.68 ) }
    dend_22 { pt3dadd( 19.5889, 12.427, -18.3182, 0.46 ) }
    dend_22 { pt3dadd( 20.0732, 13.4495, -19.1858, 0.68 ) }
    dend_22 { pt3dadd( 20.4711, 14.2354, -19.8936, 0.46 ) }
    dend_22 { pt3dadd( 21.1604, 15.435, -21.0306, 0.68 ) }
    dend_22 { pt3dadd( 21.9083, 16.5479, -22.2093, 0.46 ) }
    dend_22 { pt3dadd( 22.6339, 17.4597, -23.3397, 0.46 ) }
    dend_22 { pt3dadd( 23.4445, 18.3967, -24.659, 0.68 ) }
    dend_22 { pt3dadd( 23.8778, 18.9148, -25.4624, 0.46 ) }
    dend_22 { pt3dadd( 24.2022, 19.317, -26.1233, 0.46 ) }
    dend_22 { pt3dadd( 24.6252, 19.8276, -26.9779, 0.91 ) }
    dend_22 { pt3dadd( 25.2141, 20.5945, -28.1463, 0.46 ) }
    dend_22 { pt3dadd( 25.8596, 21.4718, -29.2588, 0.46 ) }
    dend_22 { pt3dadd( 26.6362, 22.4023, -30.4775, 0.46 ) }
    dend_22 { pt3dadd( 27.1266, 22.8948, -31.1156, 0.46 ) }
    dend_22 { pt3dadd( 27.9797, 23.5951, -32.0594, 0.46 ) }
    dend_22 { pt3dadd( 28.6712, 24.05, -32.7916, 0.46 ) }
    dend_22 { pt3dadd( 29.7673, 24.5948, -33.8659, 0.46 ) }
    dend_22 { pt3dadd( 31.5063, 25.1961, -35.3596, 0.46 ) }
    dend_22 { pt3dadd( 32.8466, 25.5921, -36.5801, 0.46 ) }
    dend_22 { pt3dadd( 33.716, 25.8781, -37.5997, 0.46 ) }
    dend_22 { pt3dadd( 34.4719, 26.1842, -38.8762, 0.46 ) }
    dend_22 { pt3dadd( 34.9537, 26.4617, -40.0398, 0.46 ) }
    dend_22 { pt3dadd( 35.3568, 26.7968, -41.4868, 0.46 ) }
    dend_22 { pt3dadd( 35.7822, 27.281, -43.5017, 0.46 ) }
    dend_22 { pt3dadd( 36.1796, 27.7906, -45.6981, 0.46 ) }
    dend_22 { pt3dadd( 36.666, 28.7216, -49.3411, 0.68 ) }
    dend_22 { pt3dadd( 36.924, 29.3851, -51.7649, 0.68 ) }
    dend_22 { pt3dadd( 37.084, 29.977, -53.9476, 0.68 ) }
    dend_22 { pt3dadd( 37.1478, 30.508, -55.9849, 0.68 ) }
    dend_22 { pt3dadd( 37.1349, 31.0815, -58.2234, 0.68 ) }
    dend_22 { pt3dadd( 37.0378, 31.8959, -61.2728, 0.68 ) }
    dend_22 { pt3dadd( 36.9341, 32.6477, -63.8281, 0.68 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 43/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 8.14937, 9.20993, -6.37022, 1.14 ) }
    dend_17 { pt3dadd( 8.94892, 9.69351, -7.05685, 1.14 ) }
    dend_17 { pt3dadd( 9.56815, 10.0858, -7.59966, 1.14 ) }
    dend_17 { pt3dadd( 10.7005, 10.9144, -8.6103, 0.91 ) }
    dend_17 { pt3dadd( 11.8451, 11.8874, -9.60315, 1.14 ) }
    dend_17 { pt3dadd( 13.2101, 13.0479, -10.7872, 0.91 ) }
    dend_17 { pt3dadd( 14.4773, 14.1251, -11.8863, 1.14 ) }
    dend_17 { pt3dadd( 15.3831, 14.9167, -12.7095, 0.91 ) }
    dend_17 { pt3dadd( 16.2043, 15.6678, -13.4727, 0.68 ) }
    dend_17 { pt3dadd( 17.1777, 16.6546, -14.3072, 1.14 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 53/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -33.2607, -18.9105, -6.82557, 0.46 ) }
    dend_11 { pt3dadd( -34.0974, -20.0372, -5.47548, 0.46 ) }
    dend_11 { pt3dadd( -34.7807, -20.9893, -4.48984, 0.46 ) }
    dend_11 { pt3dadd( -35.458, -22.0253, -3.45306, 0.46 ) }
    dend_11 { pt3dadd( -36.1007, -23.0891, -2.49293, 0.46 ) }
    dend_11 { pt3dadd( -36.5306, -23.8586, -1.82393, 0.46 ) }
    dend_11 { pt3dadd( -37.1063, -24.9971, -0.823668, 0.68 ) }
    dend_11 { pt3dadd( -38.0407, -26.8257, 0.750838, 0.68 ) }
    dend_11 { pt3dadd( -38.6866, -28.277, 1.95612, 0.23 ) }
    dend_11 { pt3dadd( -39.1209, -29.4655, 2.94133, 0.46 ) }
    dend_11 { pt3dadd( -39.5965, -31.0558, 4.26454, 0.46 ) }
    dend_11 { pt3dadd( -39.9357, -32.3285, 5.3269, 0.46 ) }
    dend_11 { pt3dadd( -40.1771, -33.2195, 6.09187, 0.46 ) }
    dend_11 { pt3dadd( -40.4668, -34.2566, 6.90466, 0.46 ) }
    dend_11 { pt3dadd( -40.6973, -35.0002, 7.40216, 0.46 ) }
    dend_11 { pt3dadd( -41.0432, -35.9852, 7.95208, 0.46 ) }
    dend_11 { pt3dadd( -41.5145, -36.9822, 8.29288, 0.46 ) }
    dend_11 { pt3dadd( -42.1037, -38.0965, 8.50171, 0.46 ) }
    dend_11 { pt3dadd( -42.7318, -39.3035, 8.64535, 0.46 ) }
    dend_11 { pt3dadd( -43.4042, -40.5947, 8.74136, 0.46 ) }
    dend_11 { pt3dadd( -43.8457, -41.4321, 8.80326, 0.46 ) }
    dend_11 { pt3dadd( -44.6279, -42.8499, 8.90536, 0.46 ) }
    dend_11 { pt3dadd( -45.4109, -44.2432, 9.10972, 0.46 ) }
    dend_11 { pt3dadd( -45.7662, -44.8966, 9.26313, 0.46 ) }
    dend_11 { pt3dadd( -46.5437, -46.4297, 9.71292, 0.46 ) }
    dend_11 { pt3dadd( -47.1651, -47.7232, 10.2184, 0.23 ) }
    dend_11 { pt3dadd( -47.7808, -49.0807, 10.8737, 0.68 ) }
    dend_11 { pt3dadd( -48.4044, -50.4962, 11.6249, 0.23 ) }
    dend_11 { pt3dadd( -49.1059, -51.9985, 12.4332, 0.23 ) }
    dend_11 { pt3dadd( -49.7607, -53.5634, 13.1897, 0.46 ) }
    dend_11 { pt3dadd( -50.3831, -55.2253, 13.9133, 0.23 ) }
    dend_11 { pt3dadd( -51.0341, -57.2389, 14.626, 0.23 ) }
    dend_11 { pt3dadd( -51.5344, -58.7965, 15.0489, 0.23 ) }
    dend_11 { pt3dadd( -52.1529, -60.6786, 15.4023, 0.68 ) }
    dend_11 { pt3dadd( -52.9995, -63.0746, 15.7226, 0.46 ) }
    dend_11 { pt3dadd( -53.4781, -64.2871, 15.8278, 0.23 ) }
    dend_11 { pt3dadd( -54.2108, -66.113, 15.887, 0.68 ) }
    dend_11 { pt3dadd( -55.2018, -68.7197, 15.8797, 0.23 ) }
    dend_11 { pt3dadd( -55.6937, -70.1043, 15.9232, 0.46 ) }
    dend_11 { pt3dadd( -56.2183, -71.631, 16.0067, 0.46 ) }
    dend_11 { pt3dadd( -56.8297, -73.3553, 16.0314, 0.23 ) }
    dend_11 { pt3dadd( -57.1311, -74.2017, 16.0089, 0.46 ) }
    dend_11 { pt3dadd( -57.7004, -75.7874, 15.9219, 0.68 ) }
    dend_11 { pt3dadd( -59.1763, -79.7958, 15.4796, 0.23 ) }
    dend_11 { pt3dadd( -59.9123, -81.5979, 15.1714, 0.23 ) }
    dend_11 { pt3dadd( -60.9967, -84.2407, 14.4758, 0.23 ) }
    dend_11 { pt3dadd( -61.412, -85.2485, 14.0909, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_11 { pt3dadd( -61.5882, -85.6156, 13.891, 0.46 ) }
    dend_11 { pt3dadd( -62.2427, -86.814, 12.9546, 0.23 ) }
    dend_11 { pt3dadd( -62.7051, -87.6896, 12.0637, 0.68 ) }
    dend_11 { pt3dadd( -63.1418, -88.9678, 10.8313, 0.68 ) }
    dend_11 { pt3dadd( -63.3933, -90.243, 9.84338, 0.68 ) }
    dend_11 { pt3dadd( -63.5792, -91.5503, 8.86527, 0.68 ) }
    dend_11 { pt3dadd( -63.674, -92.4648, 8.20444, 0.68 ) }
    dend_11 { pt3dadd( -63.7715, -94.238, 7.02579, 0.23 ) }
    dend_11 { pt3dadd( -63.8379, -96.4649, 5.60036, 0.23 ) }
    dend_11 { pt3dadd( -63.9092, -99.4, 3.94221, 0.23 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 10/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -33.2607, -18.9105, -6.82557, 0.46 ) }
    dend_10 { pt3dadd( -33.4322, -18.7838, -8.83147, 0.46 ) }
    dend_10 { pt3dadd( -33.5446, -18.8346, -10.333, 0.46 ) }
    dend_10 { pt3dadd( -33.6951, -18.998, -11.7815, 0.46 ) }
    dend_10 { pt3dadd( -33.9543, -19.1975, -13.2911, 0.46 ) }
    dend_10 { pt3dadd( -34.3194, -19.3645, -14.5586, 0.46 ) }
    dend_10 { pt3dadd( -34.9129, -19.5642, -15.8625, 0.46 ) }
    dend_10 { pt3dadd( -35.9147, -19.945, -17.261, 0.46 ) }
    dend_10 { pt3dadd( -36.7865, -20.2889, -18.1349, 0.46 ) }
    dend_10 { pt3dadd( -37.8993, -20.6944, -19.001, 0.46 ) }
    dend_10 { pt3dadd( -39.4911, -21.2567, -20.0959, 0.46 ) }
    dend_10 { pt3dadd( -41.2416, -21.8775, -21.3117, 0.46 ) }
    dend_10 { pt3dadd( -42.3988, -22.2945, -22.1756, 0.46 ) }
    dend_10 { pt3dadd( -43.4021, -22.7628, -23.0876, 0.46 ) }
    dend_10 { pt3dadd( -44.011, -23.1951, -23.7927, 0.46 ) }
    dend_10 { pt3dadd( -44.8866, -24.1036, -25.2099, 0.46 ) }
    dend_10 { pt3dadd( -45.4085, -24.7754, -26.3463, 0.46 ) }
    dend_10 { pt3dadd( -45.8162, -25.3104, -27.3452, 0.46 ) }
    dend_10 { pt3dadd( -46.4342, -26.0158, -28.6089, 0.46 ) }
    dend_10 { pt3dadd( -47.0369, -26.6115, -29.6288, 0.46 ) }
    dend_10 { pt3dadd( -47.8317, -27.3041, -30.8885, 0.46 ) }
    dend_10 { pt3dadd( -48.5219, -27.7617, -31.9174, 0.46 ) }
    dend_10 { pt3dadd( -49.2103, -28.0817, -32.9624, 0.68 ) }
    dend_10 { pt3dadd( -50.2823, -28.3207, -34.7452, 0.23 ) }
    dend_10 { pt3dadd( -51.1718, -28.3853, -36.2878, 0.23 ) }
    dend_10 { pt3dadd( -51.7497, -28.4015, -37.3463, 0.23 ) }
    dend_10 { pt3dadd( -52.1637, -28.5281, -38.4663, 0.46 ) }
    dend_10 { pt3dadd( -52.6662, -28.7594, -39.8796, 0.46 ) }
    dend_10 { pt3dadd( -53.5001, -29.2781, -42.0837, 0.46 ) }
    dend_10 { pt3dadd( -54.0195, -29.6794, -43.0905, 0.46 ) }
    dend_10 { pt3dadd( -54.5205, -30.102, -43.7276, 0.46 ) }
    dend_10 { pt3dadd( -58.3167, -33.1663, -47.529, 0.46 ) }
    dend_10 { pt3dadd( -62.6032, -36.2299, -50.939, 0.46 ) }
    dend_10 { pt3dadd( -64.1794, -37.2056, -52.0681, 0.23 ) }
    dend_10 { pt3dadd( -65.8345, -38.1143, -53.259, 0.23 ) }
    dend_10 { pt3dadd( -66.8522, -38.5779, -54.0519, 0.23 ) }
    dend_10 { pt3dadd( -67.8062, -38.9292, -54.7868, 0.23 ) }
    dend_10 { pt3dadd( -68.9182, -39.2298, -55.6385, 0.46 ) }
    dend_10 { pt3dadd( -70.1075, -39.619, -56.8961, 0.46 ) }
    dend_10 { pt3dadd( -70.8345, -39.7689, -57.7269, 0.46 ) }
    dend_10 { pt3dadd( -72.0838, -39.9654, -59.1801, 0.46 ) }
    dend_10 { pt3dadd( -72.8354, -40.064, -60.0817, 0.46 ) }
    dend_10 { pt3dadd( -74.0453, -40.2437, -61.4921, 0.46 ) }
    dend_10 { pt3dadd( -75.2218, -40.4145, -62.7765, 0.68 ) }
    dend_10 { pt3dadd( -76.8927, -40.6733, -64.3019, 0.46 ) }
    dend_10 { pt3dadd( -77.9126, -40.8384, -65.0949, 0.46 ) }
    dend_10 { pt3dadd( -78.7267, -40.9531, -65.6602, 0.46 ) }
    dend_10 { pt3dadd( -80.8022, -41.2042, -66.9941, 0.46 ) }
    dend_10 { pt3dadd( -82.4729, -41.3786, -67.9299, 0.46 ) }
    dend_10 { pt3dadd( -84.1738, -41.5055, -68.8013, 0.68 ) }
    dend_10 { pt3dadd( -86.1927, -41.5109, -69.7756, 0.23 ) }
    dend_10 { pt3dadd( -87.4892, -41.4639, -70.4058, 0.23 ) }
    dend_10 { pt3dadd( -88.2679, -41.4203, -70.8377, 0.46 ) }
    dend_10 { pt3dadd( -88.9987, -41.3608, -71.36, 0.46 ) }
    dend_10 { pt3dadd( -90.2493, -41.3049, -72.3854, 0.23 ) }
    dend_10 { pt3dadd( -91.6301, -41.3225, -73.9084, 0.23 ) }
    dend_10 { pt3dadd( -92.0838, -41.3603, -74.5669, 0.91 ) }
    dend_10 { pt3dadd( -93.3177, -41.5083, -76.5935, 0.68 ) }
    dend_10 { pt3dadd( -94.614, -41.7374, -78.7485, 0.68 ) }
    dend_10 { pt3dadd( -95.4633, -41.9282, -80.2159, 0.68 ) }
    dend_10 { pt3dadd( -97.3916, -42.4497, -83.5182, 0.68 ) }
    dend_10 { pt3dadd( -99.155, -42.9787, -86.4137, 0.68 ) }
    dend_10 { pt3dadd( -100.008, -43.2288, -87.7867, 0.68 ) }
    dend_10 { pt3dadd( -101.636, -43.7551, -90.2864, 0.68 ) }
    dend_10 { pt3dadd( -103.045, -44.2571, -92.3732, 0.68 ) }
    dend_10 { pt3dadd( -103.929, -44.58, -93.5766, 0.68 ) }
    dend_10 { pt3dadd( -105.7, -45.2423, -95.7284, 0.46 ) }
    dend_10 { pt3dadd( -108.042, -46.1905, -98.41, 0.46 ) }
    dend_10 { pt3dadd( -110.335, -47.1809, -101.041, 0.46 ) }
    dend_10 { pt3dadd( -111.663, -47.7332, -102.584, 0.46 ) }
    dend_10 { pt3dadd( -113.208, -48.342, -104.292, 0.46 ) }
    // Section: dend_35, id: dend_35, parent: dend_29 (entry count 81/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 9.35657, -21.8184, 6.51938, 0.91 ) }
    dend_35 { pt3dadd( 10.1629, -21.6165, 5.0171, 0.91 ) }
    dend_35 { pt3dadd( 10.7796, -21.4061, 3.64996, 0.68 ) }
    dend_35 { pt3dadd( 11.1699, -21.1868, 2.73992, 0.68 ) }
    dend_35 { pt3dadd( 11.6163, -20.852, 1.69127, 0.68 ) }
    dend_35 { pt3dadd( 11.9719, -20.5861, 0.846261, 0.68 ) }
    dend_35 { pt3dadd( 12.5343, -20.219, -0.484296, 0.68 ) }
    dend_35 { pt3dadd( 13.1109, -19.8106, -1.93656, 0.68 ) }
    dend_35 { pt3dadd( 13.5954, -19.37, -3.24861, 0.68 ) }
    dend_35 { pt3dadd( 14.0115, -18.9582, -4.37983, 0.68 ) }
    dend_35 { pt3dadd( 14.5684, -18.3409, -5.81339, 0.68 ) }
    dend_35 { pt3dadd( 15.0269, -17.7814, -6.9241, 0.68 ) }
    dend_35 { pt3dadd( 15.4185, -17.2336, -7.89189, 0.68 ) }
    dend_35 { pt3dadd( 16.0522, -16.2951, -9.36323, 0.68 ) }
    dend_35 { pt3dadd( 16.3965, -15.7911, -10.1283, 0.68 ) }
    dend_35 { pt3dadd( 16.8906, -14.975, -11.228, 0.68 ) }
    dend_35 { pt3dadd( 17.3879, -14.0073, -12.3107, 0.68 ) }
    dend_35 { pt3dadd( 17.8801, -12.9588, -13.3651, 0.68 ) }
    dend_35 { pt3dadd( 18.1829, -12.3552, -13.9789, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_35 { pt3dadd( 18.5599, -11.7881, -14.6396, 1.14 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 1/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 9.35657, -21.8184, 6.51938, 0.91 ) }
    dend_30 { pt3dadd( 9.12417, -23.203, 5.37936, 0.91 ) }
    dend_30 { pt3dadd( 8.8794, -24.6613, 4.17865, 0.68 ) }
    dend_30 { pt3dadd( 8.70082, -25.7253, 3.30261, 0.68 ) }
    dend_30 { pt3dadd( 8.5132, -26.8431, 2.38225, 0.91 ) }
    dend_30 { pt3dadd( 8.21219, -28.6364, 0.90568, 0.91 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 7/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 4.30268, -14.7376, -13.2953, 0.46 ) }
    dend_28 { pt3dadd( 5.7268, -16.8475, -15.3163, 0.46 ) }
    dend_28 { pt3dadd( 6.8229, -19.0153, -17.0377, 0.46 ) }
    dend_28 { pt3dadd( 7.32164, -20.4125, -18.0092, 0.46 ) }
    dend_28 { pt3dadd( 7.54398, -21.3632, -18.5834, 0.46 ) }
    dend_28 { pt3dadd( 7.66037, -22.0085, -18.9341, 0.46 ) }
    dend_28 { pt3dadd( 7.88774, -23.3346, -19.6036, 0.46 ) }
    dend_28 { pt3dadd( 7.9732, -24.7396, -20.1547, 0.46 ) }
    dend_28 { pt3dadd( 7.99941, -25.8075, -20.6232, 0.46 ) }
    dend_28 { pt3dadd( 8.08933, -26.7289, -21.1825, 0.91 ) }
    dend_28 { pt3dadd( 8.35996, -27.776, -22.2861, 0.91 ) }
    dend_28 { pt3dadd( 8.57149, -28.0867, -23.1051, 0.46 ) }
    dend_28 { pt3dadd( 9.08117, -28.1766, -24.9365, 0.46 ) }
    dend_28 { pt3dadd( 9.59783, -27.9233, -26.675, 0.46 ) }
    dend_28 { pt3dadd( 10.011, -27.5587, -28.0448, 0.46 ) }
    dend_28 { pt3dadd( 10.4192, -27.0772, -29.2996, 0.46 ) }
    dend_28 { pt3dadd( 11.0998, -26.0501, -31.3299, 0.46 ) }
    dend_28 { pt3dadd( 11.5582, -25.2684, -32.644, 0.46 ) }
    dend_28 { pt3dadd( 11.988, -24.5109, -33.7282, 0.46 ) }
    dend_28 { pt3dadd( 12.5563, -23.4962, -35.0226, 0.46 ) }
    dend_28 { pt3dadd( 13.2682, -22.3398, -36.4258, 0.46 ) }
    dend_28 { pt3dadd( 13.6607, -21.7036, -37.2057, 0.68 ) }
    dend_28 { pt3dadd( 14.0944, -20.9738, -38.1806, 0.68 ) }
    dend_28 { pt3dadd( 14.5645, -20.2372, -39.4533, 0.68 ) }
    dend_28 { pt3dadd( 14.7541, -19.994, -39.9842, 0.46 ) }
    dend_28 { pt3dadd( 15.3322, -19.3581, -41.7033, 0.46 ) }
    dend_28 { pt3dadd( 15.8911, -18.764, -43.4501, 0.46 ) }
    dend_28 { pt3dadd( 16.6003, -18.0214, -45.7237, 0.46 ) }
    dend_28 { pt3dadd( 17.4576, -17.138, -48.443, 0.68 ) }
    dend_28 { pt3dadd( 18.062, -16.5465, -50.299, 0.68 ) }
    dend_28 { pt3dadd( 18.6539, -16.0121, -51.9488, 0.68 ) }
    dend_28 { pt3dadd( 19.2486, -15.4965, -53.3698, 0.46 ) }
    dend_28 { pt3dadd( 20.1611, -14.7185, -55.1518, 0.46 ) }
    dend_28 { pt3dadd( 20.5893, -14.3468, -55.8993, 0.46 ) }
    dend_28 { pt3dadd( 21.0665, -13.9046, -56.6088, 0.46 ) }
    dend_28 { pt3dadd( 21.7624, -13.3081, -57.5359, 0.46 ) }
    dend_28 { pt3dadd( 23.1542, -12.3038, -59.2243, 0.46 ) }
    dend_28 { pt3dadd( 24.2955, -11.5945, -60.5788, 0.46 ) }
    dend_28 { pt3dadd( 25.5641, -10.8496, -62.1202, 0.46 ) }
    dend_28 { pt3dadd( 26.8794, -10.0818, -63.7888, 0.46 ) }
    dend_28 { pt3dadd( 28.8886, -8.89451, -66.4821, 0.46 ) }
    dend_28 { pt3dadd( 30.659, -7.91042, -68.9162, 0.46 ) }
    dend_28 { pt3dadd( 32.1147, -7.19576, -70.895, 0.46 ) }
    dend_28 { pt3dadd( 33.7907, -6.4804, -73.0457, 0.46 ) }
    dend_28 { pt3dadd( 34.6885, -6.13401, -74.1485, 0.46 ) }
    dend_28 { pt3dadd( 36.4715, -5.45488, -76.3797, 0.46 ) }
    dend_28 { pt3dadd( 37.9665, -4.8847, -78.1519, 0.46 ) }
    dend_28 { pt3dadd( 39.6137, -4.26112, -80.0156, 0.46 ) }
    dend_28 { pt3dadd( 41.6788, -3.51845, -82.1917, 0.23 ) }
    dend_28 { pt3dadd( 43.6264, -2.86341, -84.0817, 0.23 ) }
    dend_28 { pt3dadd( 45.799, -2.17455, -86.1598, 0.23 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 58/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 4.30268, -14.7376, -13.2953, 0.68 ) }
    dend_27 { pt3dadd( 4.71896, -16.2451, -15.0774, 0.68 ) }
    dend_27 { pt3dadd( 4.81817, -17.4135, -16.3513, 0.68 ) }
    dend_27 { pt3dadd( 4.77532, -18.1069, -17.0823, 0.68 ) }
    dend_27 { pt3dadd( 4.35158, -18.7632, -17.9097, 0.68 ) }
    dend_27 { pt3dadd( 3.11554, -19.209, -18.8511, 0.68 ) }
    dend_27 { pt3dadd( 1.55672, -19.4139, -19.6552, 0.68 ) }
    dend_27 { pt3dadd( 0.379885, -19.378, -20.0528, 1.14 ) }
    dend_27 { pt3dadd( -0.452479, -19.3105, -20.3441, 0.91 ) }
    dend_27 { pt3dadd( -2.36669, -19.024, -21.1319, 0.91 ) }
    dend_27 { pt3dadd( -3.47118, -18.8073, -21.691, 0.91 ) }
    dend_27 { pt3dadd( -4.69124, -18.5755, -22.5001, 0.91 ) }
    dend_27 { pt3dadd( -6.98375, -18.2213, -24.2575, 0.91 ) }
    dend_27 { pt3dadd( -8.05847, -18.1245, -25.113, 0.68 ) }
    dend_27 { pt3dadd( -9.12562, -18.0623, -26.0177, 0.68 ) }
    dend_27 { pt3dadd( -10.1363, -17.996, -26.9821, 0.68 ) }
    dend_27 { pt3dadd( -11.3547, -17.8311, -28.4982, 0.68 ) }
    dend_27 { pt3dadd( -12.2329, -17.6621, -29.8127, 0.68 ) }
    dend_27 { pt3dadd( -12.8203, -17.5341, -30.8777, 0.68 ) }
    dend_27 { pt3dadd( -13.5422, -17.3972, -32.0787, 0.68 ) }
    dend_27 { pt3dadd( -14.4396, -17.2021, -33.5318, 0.68 ) }
    dend_27 { pt3dadd( -15.7185, -16.9113, -35.5292, 0.68 ) }
    dend_27 { pt3dadd( -17.0392, -16.5646, -37.3568, 0.68 ) }
    dend_27 { pt3dadd( -18.2477, -16.2074, -38.9277, 0.68 ) }
    dend_27 { pt3dadd( -19.9354, -15.5942, -40.9241, 0.68 ) }
    dend_27 { pt3dadd( -20.7975, -15.2314, -41.7703, 0.68 ) }
    dend_27 { pt3dadd( -22.1912, -14.4303, -42.9554, 0.68 ) }
    dend_27 { pt3dadd( -23.5781, -13.1876, -44.1536, 0.68 ) }
    dend_27 { pt3dadd( -24.2313, -12.2729, -44.8545, 0.68 ) }
    dend_27 { pt3dadd( -24.9135, -11.1333, -45.6949, 0.68 ) }
    dend_27 { pt3dadd( -25.4263, -10.0974, -46.5514, 0.68 ) }
    dend_27 { pt3dadd( -26.1894, -8.53821, -47.9574, 0.68 ) }
    dend_27 { pt3dadd( -26.7378, -7.19043, -49.0878, 0.46 ) }
    dend_27 { pt3dadd( -27.1961, -5.98159, -50.2375, 0.46 ) }
    dend_27 { pt3dadd( -27.709, -4.88168, -51.451, 0.46 ) }
    dend_27 { pt3dadd( -28.2146, -3.97605, -52.7038, 0.46 ) }
    dend_27 { pt3dadd( -28.3036, -3.84699, -52.9443, 0.68 ) }
    dend_27 { pt3dadd( -29.0826, -3.03628, -54.8467, 0.46 ) }
    dend_27 { pt3dadd( -29.8678, -2.29044, -56.5676, 0.46 ) }
    dend_27 { pt3dadd( -30.517, -1.54772, -58.115, 0.46 ) }
    dend_27 { pt3dadd( -31.1739, -0.629915, -59.8089, 0.46 ) }
    dend_27 { pt3dadd( -31.834, 0.19132, -61.3892, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_27 { pt3dadd( -32.5616, 0.898876, -62.8923, 0.46 ) }
    dend_27 { pt3dadd( -33.1442, 1.2555, -63.8818, 0.68 ) }
    dend_27 { pt3dadd( -34.4725, 1.73462, -65.5878, 0.68 ) }
    dend_27 { pt3dadd( -35.1451, 1.88554, -66.3213, 0.46 ) }
    dend_27 { pt3dadd( -36.6777, 2.146, -67.8199, 0.46 ) }
    dend_27 { pt3dadd( -37.9829, 2.26796, -68.9736, 0.68 ) }
    dend_27 { pt3dadd( -40.2462, 2.21178, -70.8463, 0.46 ) }
    dend_27 { pt3dadd( -42.3389, 1.91527, -72.4773, 0.46 ) }
    dend_27 { pt3dadd( -42.363, 1.90921, -72.494, 0.68 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 9/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 17.1777, 16.6546, -14.3072, 0.91 ) }
    dend_19 { pt3dadd( 18.1695, 17.5806, -15.4986, 0.91 ) }
    dend_19 { pt3dadd( 19.1364, 18.2563, -16.4746, 0.91 ) }
    dend_19 { pt3dadd( 20.5289, 19.0622, -17.7523, 0.91 ) }
    dend_19 { pt3dadd( 21.4573, 19.5822, -18.5774, 0.68 ) }
    dend_19 { pt3dadd( 22.7348, 20.3266, -19.7819, 0.91 ) }
    dend_19 { pt3dadd( 23.8675, 21.0431, -20.8985, 0.91 ) }
    dend_19 { pt3dadd( 25.205, 21.8894, -22.1631, 0.91 ) }
    dend_19 { pt3dadd( 25.89, 22.2844, -22.8007, 0.91 ) }
    dend_19 { pt3dadd( 26.3146, 22.5057, -23.1976, 0.91 ) }
    dend_19 { pt3dadd( 27.2423, 23.1176, -24.1035, 0.91 ) }
    dend_19 { pt3dadd( 27.9788, 23.8572, -24.9858, 0.91 ) }
    dend_19 { pt3dadd( 28.43, 24.9717, -26.021, 0.68 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 22/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 17.1777, 16.6546, -14.3072, 0.46 ) }
    dend_18 { pt3dadd( 16.8279, 17.7445, -14.3692, 0.46 ) }
    dend_18 { pt3dadd( 16.3361, 19.2764, -14.4563, 0.46 ) }
    dend_18 { pt3dadd( 15.7099, 21.2281, -14.5673, 0.46 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 26/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 18.5599, -11.7881, -14.6396, 0.91 ) }
    dend_37 { pt3dadd( 19.6814, -12.4636, -15.2857, 0.91 ) }
    dend_37 { pt3dadd( 20.9961, -13.3502, -15.8628, 0.46 ) }
    dend_37 { pt3dadd( 22.4821, -14.4829, -16.5779, 0.46 ) }
    dend_37 { pt3dadd( 23.5672, -15.3653, -17.209, 0.46 ) }
    dend_37 { pt3dadd( 24.5882, -16.2045, -17.8581, 0.46 ) }
    dend_37 { pt3dadd( 25.6474, -17.0263, -18.5547, 0.46 ) }
    dend_37 { pt3dadd( 27.0739, -18.1407, -19.5818, 0.46 ) }
    dend_37 { pt3dadd( 28.4294, -19.2013, -20.5209, 0.46 ) }
    dend_37 { pt3dadd( 29.6999, -20.2622, -21.492, 0.46 ) }
    dend_37 { pt3dadd( 30.2204, -20.7224, -21.9622, 0.46 ) }
    dend_37 { pt3dadd( 30.9028, -21.3476, -22.7012, 0.46 ) }
    dend_37 { pt3dadd( 31.8174, -22.0772, -23.7509, 0.46 ) }
    dend_37 { pt3dadd( 32.8301, -22.7827, -25.0134, 0.46 ) }
    dend_37 { pt3dadd( 33.9683, -23.5458, -26.4888, 0.46 ) }
    dend_37 { pt3dadd( 35.0611, -24.2776, -27.8089, 0.46 ) }
    dend_37 { pt3dadd( 35.9919, -24.9552, -28.8251, 0.46 ) }
    dend_37 { pt3dadd( 37.0235, -25.7675, -29.7971, 0.46 ) }
    dend_37 { pt3dadd( 37.9958, -26.5062, -30.4916, 0.46 ) }
    dend_37 { pt3dadd( 38.8684, -27.1152, -31.0079, 0.46 ) }
    dend_37 { pt3dadd( 41.0491, -28.6533, -32.1913, 0.46 ) }
    dend_37 { pt3dadd( 42.685, -29.7325, -33.0707, 0.46 ) }
    dend_37 { pt3dadd( 43.3643, -30.1394, -33.4258, 0.46 ) }
    dend_37 { pt3dadd( 44.0332, -30.5065, -33.8101, 0.91 ) }
    dend_37 { pt3dadd( 46.8087, -31.821, -35.488, 0.46 ) }
    dend_37 { pt3dadd( 48.454, -32.4637, -36.5553, 0.46 ) }
    dend_37 { pt3dadd( 49.7706, -32.9034, -37.5472, 0.46 ) }
    dend_37 { pt3dadd( 50.8651, -33.1734, -38.4274, 0.68 ) }
    dend_37 { pt3dadd( 52.2118, -33.4699, -39.5619, 0.23 ) }
    dend_37 { pt3dadd( 53.4645, -33.7431, -40.6718, 0.23 ) }
    dend_37 { pt3dadd( 54.5448, -33.9501, -41.6012, 0.46 ) }
    dend_37 { pt3dadd( 55.7095, -34.1328, -42.6745, 0.46 ) }
    dend_37 { pt3dadd( 57.2189, -34.4079, -44.2076, 0.46 ) }
    dend_37 { pt3dadd( 58.639, -34.6571, -45.8035, 0.46 ) }
    dend_37 { pt3dadd( 59.8051, -34.8383, -47.2007, 0.46 ) }
    dend_37 { pt3dadd( 60.835, -34.962, -48.4231, 0.46 ) }
    dend_37 { pt3dadd( 61.8525, -35.0932, -49.6663, 0.46 ) }
    dend_37 { pt3dadd( 62.537, -35.1689, -50.4983, 0.68 ) }
    dend_37 { pt3dadd( 64.0956, -35.3784, -52.2991, 0.68 ) }
    dend_37 { pt3dadd( 65.0448, -35.4469, -53.3276, 0.68 ) }
    dend_37 { pt3dadd( 66.7141, -35.4274, -55.0003, 0.91 ) }
    dend_37 { pt3dadd( 68.5968, -35.2245, -56.787, 0.46 ) }
    dend_37 { pt3dadd( 70.8607, -34.9051, -58.88, 0.46 ) }
    dend_37 { pt3dadd( 72.7368, -34.5617, -60.5823, 0.46 ) }
    dend_37 { pt3dadd( 74.3183, -34.2197, -61.9403, 0.46 ) }
    dend_37 { pt3dadd( 76.4491, -33.6397, -63.7109, 0.46 ) }
    dend_37 { pt3dadd( 78.129, -33.024, -65.0873, 0.46 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 73/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 18.5599, -11.7881, -14.6396, 0.46 ) }
    dend_36 { pt3dadd( 19.347, -11.3597, -15.4961, 0.46 ) }
    dend_36 { pt3dadd( 20.3419, -10.8637, -16.3721, 0.46 ) }
    dend_36 { pt3dadd( 21.1751, -10.2806, -17.0901, 0.46 ) }
    dend_36 { pt3dadd( 21.6115, -9.81949, -17.4602, 0.46 ) }
    dend_36 { pt3dadd( 22.1481, -9.04435, -18.0292, 0.46 ) }
    dend_36 { pt3dadd( 22.3729, -8.67741, -18.3253, 0.46 ) }
    dend_36 { pt3dadd( 22.8687, -7.85749, -18.9749, 0.46 ) }
    dend_36 { pt3dadd( 23.4504, -6.71909, -19.7892, 0.46 ) }
    dend_36 { pt3dadd( 23.9172, -5.60749, -20.6303, 0.68 ) }
    dend_36 { pt3dadd( 24.4494, -4.22084, -21.8871, 0.46 ) }
    dend_36 { pt3dadd( 24.8976, -3.06992, -22.9426, 0.46 ) }
    dend_36 { pt3dadd( 25.2614, -2.31438, -23.7242, 0.68 ) }
    dend_36 { pt3dadd( 25.9909, -1.24065, -25.1272, 0.68 ) }
    dend_36 { pt3dadd( 26.7453, -0.483819, -26.4727, 0.68 ) }
    dend_36 { pt3dadd( 27.7017, 0.251444, -28.1829, 0.68 ) }
    dend_36 { pt3dadd( 28.5905, 0.925505, -29.797, 0.68 ) }
    dend_36 { pt3dadd( 29.5322, 1.72495, -31.6758, 0.68 ) }
    dend_36 { pt3dadd( 30.4044, 2.61816, -33.6323, 0.68 ) }
    dend_36 { pt3dadd( 30.9242, 3.21292, -34.7616, 0.68 ) }
    dend_36 { pt3dadd( 31.416, 3.96237, -35.7802, 0.68 ) }
    dend_36 { pt3dadd( 31.9398, 5.18033, -37.0905, 0.68 ) }
    dend_36 { pt3dadd( 32.131, 5.80965, -37.6946, 0.68 ) }
    dend_36 { pt3dadd( 32.4072, 6.89831, -38.5743, 0.91 ) }
    dend_36 { pt3dadd( 32.7943, 8.26836, -39.5567, 0.91 ) }
    dend_36 { pt3dadd( 33.5145, 10.0998, -40.8777, 0.68 ) }
    dend_36 { pt3dadd( 34.1744, 11.315, -41.8396, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_36 { pt3dadd( 34.9127, 12.2768, -42.7672, 0.68 ) }
    dend_36 { pt3dadd( 35.8251, 13.1904, -43.8292, 0.68 ) }
    dend_36 { pt3dadd( 36.8355, 13.9585, -44.8078, 0.91 ) }
    dend_36 { pt3dadd( 38.1325, 14.6307, -45.6888, 0.68 ) }
    dend_36 { pt3dadd( 39.6328, 15.0007, -46.2933, 0.68 ) }
    dend_36 { pt3dadd( 41.5289, 15.2236, -46.7537, 0.68 ) }
    dend_36 { pt3dadd( 42.8312, 15.2978, -46.9907, 0.68 ) }
    dend_36 { pt3dadd( 46.3652, 15.4194, -47.5852, 0.68 ) }
    dend_36 { pt3dadd( 48.2934, 15.5221, -47.9965, 0.46 ) }
    dend_36 { pt3dadd( 50.0033, 15.7815, -48.4456, 0.46 ) }
    dend_36 { pt3dadd( 51.0211, 16.0589, -48.9221, 0.46 ) }
    dend_36 { pt3dadd( 52.1077, 16.5334, -49.8262, 0.46 ) }
    dend_36 { pt3dadd( 53.0183, 16.9454, -50.7781, 0.46 ) }
    dend_36 { pt3dadd( 54.0821, 17.3793, -51.9277, 0.46 ) }
    dend_36 { pt3dadd( 54.8998, 17.6667, -52.7469, 0.46 ) }
    dend_36 { pt3dadd( 56.4015, 18.0947, -54.0529, 0.46 ) }
    dend_36 { pt3dadd( 57.7338, 18.4086, -54.9908, 0.46 ) }
    dend_36 { pt3dadd( 59.39, 18.7268, -55.8557, 0.46 ) }
    dend_36 { pt3dadd( 61.3728, 19.0579, -56.6196, 0.46 ) }
    dend_36 { pt3dadd( 62.5993, 19.2086, -56.9739, 0.23 ) }
    dend_36 { pt3dadd( 63.1698, 19.291, -57.1229, 0.23 ) }
    dend_36 { pt3dadd( 64.9453, 19.6562, -57.5581, 0.23 ) }
    dend_36 { pt3dadd( 65.853, 19.8938, -57.8274, 0.23 ) }
    dend_36 { pt3dadd( 66.8466, 20.1941, -58.1467, 0.46 ) }
    dend_36 { pt3dadd( 68.856, 20.8249, -58.6744, 0.46 ) }
    dend_36 { pt3dadd( 70.6086, 21.3747, -58.8998, 0.46 ) }
    dend_36 { pt3dadd( 71.8586, 21.7887, -58.8732, 0.68 ) }
    dend_36 { pt3dadd( 73.2117, 22.253, -58.6477, 0.46 ) }
    dend_36 { pt3dadd( 75.3916, 23.044, -58.2652, 0.68 ) }
    dend_36 { pt3dadd( 77.8331, 23.9488, -57.7621, 0.68 ) }
    dend_36 { pt3dadd( 79.7995, 24.7413, -57.3666, 0.68 ) }
    dend_36 { pt3dadd( 81.6277, 25.4711, -57.1511, 0.46 ) }
    dend_36 { pt3dadd( 82.8154, 25.9922, -57.2051, 0.46 ) }
    dend_36 { pt3dadd( 85.9404, 27.5628, -58.0557, 0.68 ) }
    dend_36 { pt3dadd( 86.7805, 28.0175, -58.5602, 0.23 ) }
    dend_36 { pt3dadd( 88.4427, 28.926, -60.0152, 0.23 ) }
    dend_36 { pt3dadd( 89.9677, 29.7718, -61.584, 0.23 ) }
    dend_36 { pt3dadd( 90.9662, 30.3348, -62.7407, 0.23 ) }
    dend_36 { pt3dadd( 91.6445, 30.7448, -63.569, 0.46 ) }
    dend_36 { pt3dadd( 92.8432, 31.5657, -64.9194, 0.46 ) }
    dend_36 { pt3dadd( 93.7386, 32.187, -66.0285, 0.46 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 41/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 8.21219, -28.6364, 0.90568, 0.68 ) }
    dend_32 { pt3dadd( 7.05722, -28.6121, 0.393375, 0.68 ) }
    dend_32 { pt3dadd( 5.55137, -28.231, -0.311634, 0.68 ) }
    dend_32 { pt3dadd( 4.77468, -27.863, -0.652095, 0.68 ) }
    dend_32 { pt3dadd( 3.6215, -27.1224, -1.18981, 0.46 ) }
    dend_32 { pt3dadd( 2.57054, -26.335, -1.76153, 0.46 ) }
    dend_32 { pt3dadd( 1.80329, -25.762, -2.23808, 0.46 ) }
    dend_32 { pt3dadd( 1.02374, -25.0963, -2.81516, 0.46 ) }
    dend_32 { pt3dadd( 0.111725, -24.2845, -3.61151, 0.46 ) }
    dend_32 { pt3dadd( -0.641432, -23.7378, -4.30746, 0.46 ) }
    dend_32 { pt3dadd( -1.47394, -23.3114, -5.09266, 0.46 ) }
    dend_32 { pt3dadd( -2.50932, -22.9479, -5.98504, 0.46 ) }
    dend_32 { pt3dadd( -3.63839, -22.6575, -6.96233, 0.68 ) }
    dend_32 { pt3dadd( -4.73166, -22.4725, -7.93264, 0.68 ) }
    dend_32 { pt3dadd( -6.23551, -22.335, -9.26978, 0.46 ) }
    dend_32 { pt3dadd( -7.0752, -22.3035, -9.95039, 0.46 ) }
    dend_32 { pt3dadd( -8.84367, -22.2546, -11.2193, 0.46 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 58/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 8.21219, -28.6364, 0.90568, 0.46 ) }
    dend_31 { pt3dadd( 8.31838, -29.8344, 1.9869, 0.46 ) }
    dend_31 { pt3dadd( 8.37945, -30.8549, 2.9813, 0.68 ) }
    dend_31 { pt3dadd( 8.36198, -32.084, 4.10322, 0.46 ) }
    dend_31 { pt3dadd( 8.32246, -33.3463, 5.22709, 0.68 ) }
    dend_31 { pt3dadd( 8.29396, -34.4805, 6.17511, 0.46 ) }
    dend_31 { pt3dadd( 8.27393, -35.8853, 7.27633, 0.68 ) }
    dend_31 { pt3dadd( 8.25599, -37.3625, 8.45086, 0.68 ) }
    dend_31 { pt3dadd( 8.19713, -38.7142, 9.46291, 0.46 ) }
    dend_31 { pt3dadd( 8.11248, -39.7706, 10.1177, 0.46 ) }
    dend_31 { pt3dadd( 8.00478, -40.8794, 10.664, 0.68 ) }
    dend_31 { pt3dadd( 7.8674, -42.634, 11.4112, 0.46 ) }
    dend_31 { pt3dadd( 7.77552, -43.8148, 11.8967, 0.46 ) }
    dend_31 { pt3dadd( 7.71058, -44.6814, 12.2836, 0.68 ) }
    dend_31 { pt3dadd( 7.56792, -46.1928, 13.0208, 0.23 ) }
    dend_31 { pt3dadd( 7.43271, -47.2671, 13.5756, 0.23 ) }
    dend_31 { pt3dadd( 7.18998, -48.9575, 14.4645, 0.91 ) }
    dend_31 { pt3dadd( 6.87326, -50.976, 15.5167, 0.68 ) }
    dend_31 { pt3dadd( 6.66971, -52.4694, 16.2954, 0.68 ) }
    dend_31 { pt3dadd( 6.43557, -54.0887, 17.1331, 0.68 ) }
    dend_31 { pt3dadd( 6.3166, -54.9298, 17.5341, 0.68 ) }
    dend_31 { pt3dadd( 6.10521, -56.7339, 18.3223, 0.68 ) }
    dend_31 { pt3dadd( 5.95733, -58.4148, 18.9964, 0.46 ) }
    dend_31 { pt3dadd( 5.8859, -60.4627, 19.8653, 0.46 ) }
    dend_31 { pt3dadd( 5.8676, -62.1161, 20.6314, 0.46 ) }
    dend_31 { pt3dadd( 5.87568, -63.5764, 21.3682, 0.68 ) }
    dend_31 { pt3dadd( 5.90264, -65.3989, 22.3618, 0.23 ) }
    dend_31 { pt3dadd( 5.97143, -67.5901, 23.6818, 0.46 ) }
    dend_31 { pt3dadd( 6.05609, -69.5652, 24.9255, 0.23 ) }
    dend_31 { pt3dadd( 6.08554, -70.9764, 25.8232, 0.68 ) }
    dend_31 { pt3dadd( 6.07739, -72.1794, 26.5923, 0.68 ) }
    dend_31 { pt3dadd( 6.02623, -73.267, 27.293, 0.23 ) }
    dend_31 { pt3dadd( 5.98266, -73.9573, 27.6891, 0.46 ) }
    dend_31 { pt3dadd( 5.85675, -75.7968, 28.5611, 0.46 ) }
    dend_31 { pt3dadd( 5.75865, -77.2704, 29.1862, 0.23 ) }
    dend_31 { pt3dadd( 5.66442, -78.8954, 29.8803, 0.46 ) }
    dend_31 { pt3dadd( 5.57976, -80.2915, 30.4732, 0.23 ) }
    dend_31 { pt3dadd( 5.53862, -81.2082, 30.8355, 0.46 ) }
    dend_31 { pt3dadd( 5.53879, -83.0636, 31.5271, 0.46 ) }
    dend_31 { pt3dadd( 5.70637, -85.6449, 32.4933, 0.46 ) }
    dend_31 { pt3dadd( 5.91361, -87.4373, 33.1474, 0.68 ) }
    dend_31 { pt3dadd( 6.04436, -88.2608, 33.4542, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_31 { pt3dadd( 6.34572, -89.852, 34.088, 0.68 ) }
    dend_31 { pt3dadd( 6.64328, -91.1353, 34.6501, 0.68 ) }
    dend_31 { pt3dadd( 7.23009, -93.1136, 35.6403, 0.46 ) }
    dend_31 { pt3dadd( 7.65912, -94.4723, 36.4137, 0.68 ) }
    dend_31 { pt3dadd( 8.16859, -96.0578, 37.4505, 0.23 ) }
    dend_31 { pt3dadd( 8.55569, -97.3374, 38.3728, 0.23 ) }
    dend_31 { pt3dadd( 8.73344, -98.0314, 38.9101, 0.23 ) }
    dend_31 { pt3dadd( 9.07161, -99.6391, 40.1961, 0.23 ) }
    dend_31 { pt3dadd( 9.36127, -101.169, 41.3888, 0.23 ) }
    dend_31 { pt3dadd( 9.63058, -102.719, 42.5208, 0.23 ) }
    dend_31 { pt3dadd( 9.73207, -103.478, 42.9781, 0.68 ) }
    dend_31 { pt3dadd( 9.79925, -103.95, 43.2325, 0.68 ) }
    dend_31 { pt3dadd( 10.015, -105.177, 43.8089, 0.23 ) }
    dend_31 { pt3dadd( 10.2126, -105.993, 44.1083, 0.46 ) }
    dend_31 { pt3dadd( 10.647, -107.332, 44.4962, 0.23 ) }
    dend_31 { pt3dadd( 10.977, -108.233, 44.6707, 0.46 ) }
    dend_31 { pt3dadd( 11.6104, -109.713, 45.0114, 0.23 ) }
    dend_31 { pt3dadd( 12.0903, -110.754, 45.2104, 0.68 ) }
    dend_31 { pt3dadd( 12.646, -111.85, 45.2973, 0.23 ) }
    dend_31 { pt3dadd( 13.1065, -112.701, 45.2733, 0.23 ) }
    dend_31 { pt3dadd( 14.295, -114.755, 45.0495, 0.23 ) }
    dend_31 { pt3dadd( 15.4847, -116.847, 44.6467, 0.23 ) }
    dend_31 { pt3dadd( 16.4858, -118.564, 44.1743, 0.23 ) }
    dend_31 { pt3dadd( 17.9496, -121.037, 43.4023, 0.23 ) }
    dend_31 { pt3dadd( 18.8458, -122.523, 42.8657, 0.23 ) }
    dend_31 { pt3dadd( 19.5709, -123.672, 42.4002, 0.23 ) }
    dend_31 { pt3dadd( 20.3484, -124.854, 41.8418, 0.23 ) }
    dend_31 { pt3dadd( 20.9799, -125.828, 41.2506, 0.23 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 28/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 28.43, 24.9717, -26.021, 0.46 ) }
    dend_21 { pt3dadd( 29.6094, 24.7076, -24.4389, 0.46 ) }
    dend_21 { pt3dadd( 30.1934, 24.5326, -23.4244, 0.46 ) }
    dend_21 { pt3dadd( 30.99, 24.294, -22.0411, 0.68 ) }
    dend_21 { pt3dadd( 31.7587, 24.0636, -20.706, 0.46 ) }
    dend_21 { pt3dadd( 32.7662, 23.7618, -18.9566, 0.46 ) }
    dend_21 { pt3dadd( 33.5316, 23.5325, -17.6273, 0.46 ) }
    dend_21 { pt3dadd( 34.1097, 23.253, -16.4777, 0.46 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 36/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 28.43, 24.9717, -26.021, 0.68 ) }
    dend_20 { pt3dadd( 28.6749, 25.241, -26.5483, 0.68 ) }
    dend_20 { pt3dadd( 29.5504, 25.9039, -27.9998, 0.91 ) }
    dend_20 { pt3dadd( 30.4448, 26.3562, -29.2997, 0.68 ) }
    dend_20 { pt3dadd( 31.416, 26.6421, -30.5547, 0.68 ) }
    dend_20 { pt3dadd( 32.0451, 26.7693, -31.279, 0.68 ) }
    dend_20 { pt3dadd( 33.1492, 26.9716, -32.497, 0.46 ) }
    dend_20 { pt3dadd( 33.911, 27.0823, -33.2706, 0.46 ) }
    dend_20 { pt3dadd( 34.8637, 27.2107, -34.1537, 0.46 ) }
    dend_20 { pt3dadd( 35.7215, 27.4237, -34.9031, 0.46 ) }
    dend_20 { pt3dadd( 36.5326, 27.8519, -35.6438, 0.68 ) }
    dend_20 { pt3dadd( 37.2906, 28.4317, -36.415, 0.68 ) }
    dend_20 { pt3dadd( 38.1147, 29.2046, -37.3359, 0.46 ) }
    dend_20 { pt3dadd( 38.708, 29.883, -38.0612, 0.46 ) }
    dend_20 { pt3dadd( 39.3448, 30.8068, -38.8831, 0.68 ) }
    dend_20 { pt3dadd( 40.0705, 32.0059, -39.7676, 0.46 ) }
    dend_20 { pt3dadd( 40.8938, 33.2446, -40.5257, 0.46 ) }
    dend_20 { pt3dadd( 41.7127, 34.2719, -40.9531, 0.46 ) }
    dend_20 { pt3dadd( 42.5919, 35.1175, -41.1186, 0.23 ) }
    dend_20 { pt3dadd( 43.8139, 36.1315, -41.1795, 0.23 ) }
    dend_20 { pt3dadd( 45.3167, 37.0976, -40.9474, 0.23 ) }
    dend_20 { pt3dadd( 46.9118, 38.0447, -40.5219, 0.23 ) }
    dend_20 { pt3dadd( 47.8478, 38.6024, -40.1854, 0.23 ) }
    dend_20 { pt3dadd( 49.2636, 39.3762, -39.6271, 0.23 ) }
    dend_20 { pt3dadd( 50.5751, 39.9013, -39.1652, 0.23 ) }
    dend_20 { pt3dadd( 52.9745, 40.5802, -38.4647, 0.23 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 62/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -8.84367, -22.2546, -11.2193, 0.68 ) }
    dend_34 { pt3dadd( -9.82825, -22.1533, -11.0146, 0.68 ) }
    dend_34 { pt3dadd( -11.3902, -22.2541, -10.739, 0.68 ) }
    dend_34 { pt3dadd( -12.8427, -22.5421, -10.4928, 0.46 ) }
    dend_34 { pt3dadd( -14.0127, -22.9061, -10.3268, 0.46 ) }
    dend_34 { pt3dadd( -14.5695, -23.1374, -10.2666, 0.46 ) }
    dend_34 { pt3dadd( -15.8503, -23.6695, -10.1609, 0.46 ) }
    dend_34 { pt3dadd( -17.6142, -24.4024, -10.0426, 0.46 ) }
    dend_34 { pt3dadd( -18.4398, -24.767, -9.95716, 0.46 ) }
    dend_34 { pt3dadd( -19.4774, -25.2731, -9.80806, 0.46 ) }
    dend_34 { pt3dadd( -21.4965, -26.2941, -9.39528, 0.68 ) }
    dend_34 { pt3dadd( -23.1964, -27.2051, -8.94766, 0.68 ) }
    dend_34 { pt3dadd( -24.1, -27.7575, -8.65721, 0.46 ) }
    dend_34 { pt3dadd( -25.2514, -28.6184, -8.21742, 0.46 ) }
    dend_34 { pt3dadd( -25.7635, -29.1088, -8.00653, 0.46 ) }
    dend_34 { pt3dadd( -26.3309, -29.7761, -7.76399, 0.46 ) }
    dend_34 { pt3dadd( -27.452, -31.3344, -7.31321, 0.46 ) }
    dend_34 { pt3dadd( -28.9767, -33.6462, -6.92504, 0.46 ) }
    dend_34 { pt3dadd( -29.9799, -35.1785, -6.85372, 0.46 ) }
    dend_34 { pt3dadd( -30.7726, -36.4233, -6.92182, 0.46 ) }
    dend_34 { pt3dadd( -31.5249, -37.5964, -7.05457, 0.46 ) }
    dend_34 { pt3dadd( -32.1268, -38.5415, -7.21774, 0.68 ) }
    dend_34 { pt3dadd( -33.1895, -40.2132, -7.63379, 0.46 ) }
    dend_34 { pt3dadd( -33.8111, -41.2361, -7.94447, 0.46 ) }
    dend_34 { pt3dadd( -34.7934, -42.88, -8.44832, 0.91 ) }
    dend_34 { pt3dadd( -35.2601, -43.681, -8.66166, 0.91 ) }
    dend_34 { pt3dadd( -36.1152, -45.0199, -8.95999, 0.46 ) }
    dend_34 { pt3dadd( -37.0285, -46.2949, -9.25998, 0.46 ) }
    dend_34 { pt3dadd( -38.0999, -47.5693, -9.54837, 0.46 ) }
    dend_34 { pt3dadd( -39.1954, -48.6259, -9.87851, 0.46 ) }
    dend_34 { pt3dadd( -40.7701, -49.8494, -10.4417, 0.68 ) }
    dend_34 { pt3dadd( -42.5532, -51.0765, -11.2767, 0.46 ) }
    dend_34 { pt3dadd( -44.0922, -52.0501, -12.2579, 0.46 ) }
    dend_34 { pt3dadd( -44.7067, -52.4381, -12.7621, 0.68 ) }
    dend_34 { pt3dadd( -45.8046, -53.189, -13.9084, 0.68 ) }
    dend_34 { pt3dadd( -46.2771, -53.5566, -14.4466, 0.91 ) }
    dend_34 { pt3dadd( -47.3223, -54.527, -15.7019, 0.68 ) }
    dend_34 { pt3dadd( -48.7133, -56.0815, -17.2622, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_34 { pt3dadd( -49.3446, -56.8076, -17.8089, 0.68 ) }
    dend_34 { pt3dadd( -50.3119, -57.8698, -18.4116, 0.68 ) }
    dend_34 { pt3dadd( -51.9581, -59.3907, -18.8146, 0.68 ) }
    dend_34 { pt3dadd( -52.7532, -59.9635, -18.7558, 0.91 ) }
    dend_34 { pt3dadd( -53.7459, -60.5423, -18.502, 0.91 ) }
    dend_34 { pt3dadd( -54.9314, -61.1391, -18.079, 0.91 ) }
    dend_34 { pt3dadd( -56.5104, -61.8468, -17.4523, 0.68 ) }
    dend_34 { pt3dadd( -58.5661, -62.6315, -16.6142, 0.23 ) }
    dend_34 { pt3dadd( -59.8539, -63.0711, -16.1454, 0.23 ) }
    dend_34 { pt3dadd( -61.1174, -63.4888, -15.5837, 0.23 ) }
    dend_34 { pt3dadd( -62.1156, -63.7998, -15.0451, 0.68 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 11/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -8.84367, -22.2546, -11.2193, 0.46 ) }
    dend_33 { pt3dadd( -9.59562, -21.7964, -11.8479, 0.46 ) }
    dend_33 { pt3dadd( -10.9061, -21.0403, -12.7518, 0.46 ) }
    dend_33 { pt3dadd( -11.9674, -20.3931, -13.3913, 0.46 ) }
    dend_33 { pt3dadd( -13.2074, -19.637, -14.0561, 0.68 ) }
    dend_33 { pt3dadd( -13.7812, -19.2734, -14.3309, 0.46 ) }
    dend_33 { pt3dadd( -14.832, -18.6128, -14.7374, 0.46 ) }
    dend_33 { pt3dadd( -15.6269, -18.097, -14.9444, 0.68 ) }
    dend_33 { pt3dadd( -16.8157, -17.2137, -15.1333, 0.68 ) }
    dend_33 { pt3dadd( -17.3864, -16.7427, -15.1901, 0.68 ) }
    dend_33 { pt3dadd( -18.257, -16.0075, -15.3152, 0.46 ) }
    dend_33 { pt3dadd( -19.5784, -14.8678, -15.5555, 0.46 ) }
    dend_33 { pt3dadd( -20.5653, -14.0342, -15.7503, 0.46 ) }
    dend_33 { pt3dadd( -21.6129, -13.2209, -16.0273, 0.46 ) }
    dend_33 { pt3dadd( -23.069, -12.1981, -16.5675, 0.23 ) }
    dend_33 { pt3dadd( -24.4471, -11.2949, -17.1946, 0.23 ) }
    dend_33 { pt3dadd( -25.3719, -10.6994, -17.6856, 0.23 ) }
    dend_33 { pt3dadd( -26.5665, -9.95844, -18.4423, 0.46 ) }
    dend_33 { pt3dadd( -28.4302, -8.93781, -19.7547, 0.23 ) }
    dend_33 { pt3dadd( -29.8568, -8.20781, -20.8449, 0.23 ) }
    dend_33 { pt3dadd( -30.1315, -8.0644, -21.0686, 0.46 ) }
    dend_33 { pt3dadd( -31.0021, -7.56256, -21.8195, 0.46 ) }
    dend_33 { pt3dadd( -32.0692, -6.86443, -22.7551, 0.46 ) }
    dend_33 { pt3dadd( -33.3054, -5.91898, -23.7586, 0.46 ) }
    dend_33 { pt3dadd( -33.9124, -5.43475, -24.1881, 0.68 ) }
    dend_33 { pt3dadd( -35.3629, -4.25246, -25.1206, 0.68 ) }
    dend_33 { pt3dadd( -36.7188, -3.15672, -25.9481, 0.68 ) }
    dend_33 { pt3dadd( -38.4412, -1.8571, -26.8632, 0.68 ) }
    dend_33 { pt3dadd( -40.1517, -0.539219, -27.765, 0.23 ) }
    dend_33 { pt3dadd( -41.4445, 0.484966, -28.4191, 0.23 ) }
    dend_33 { pt3dadd( -42.2575, 1.12005, -28.8352, 0.23 ) }
    dend_33 { pt3dadd( -42.9978, 1.67942, -29.2039, 0.23 ) }
    dend_33 { pt3dadd( -44.7169, 2.80281, -29.993, 0.46 ) }
    dend_33 { pt3dadd( -46.854, 3.91745, -31.1675, 0.46 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_23, dend_12, dend_3, dend_0, dend_41, dend_24, dend_14, dend_13, dend_7, dend_4, dend_2, dend_1, dend_43, dend_42, dend_38, dend_25, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_40, dend_39, dend_29, dend_26, dend_22, dend_17, dend_11, dend_10, dend_35, dend_30, dend_28, dend_27, dend_19, dend_18, dend_37, dend_36, dend_32, dend_31, dend_21, dend_20, dend_34, dend_33]}
    ModelViewParmSubset_2 = new SectionList()
    dend_23 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_23, dend_12, dend_3, dend_0, dend_41, dend_24, dend_14, dend_13, dend_7, dend_4, dend_2, dend_1, dend_43, dend_42, dend_38, dend_25, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_40, dend_39, dend_29, dend_26, dend_22, dend_17, dend_11, dend_10, dend_35, dend_30, dend_28, dend_27, dend_19, dend_18, dend_37, dend_36, dend_32, dend_31, dend_21, dend_20, dend_34, dend_33]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_2 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_43 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_42 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_15 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_8 OneSecGrp_SectionRef_23.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_40 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_39 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_22 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_11 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_10 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_28 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_27 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_37 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_36 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_31 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_34 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_33 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_12 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_14 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_16 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_3 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_23 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_24 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_25 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_7 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_29 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_17 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_18 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_38 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_30 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_41 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_1 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_13 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_26 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_9 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_4 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_19 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_35 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_21 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_32 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_5 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_6 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_20 OneSecGrp_SectionRef_45.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_24, dend_24, dend_24, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_25, dend_25, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_2 nseg = 3
    dend_43 nseg = 3
    dend_42 nseg = 3
    dend_15 nseg = 7
    dend_8 nseg = 3
    dend_40 nseg = 3
    dend_39 nseg = 3
    dend_22 nseg = 3
    dend_11 nseg = 5
    dend_10 nseg = 7
    dend_28 nseg = 5
    dend_27 nseg = 5
    dend_37 nseg = 5
    dend_36 nseg = 5
    dend_31 nseg = 5
    dend_34 nseg = 3
    dend_33 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L1_HAC_cc210b8244_0_0


