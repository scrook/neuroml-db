// Cell: cNAC187_L6_ChC_d1b33e54c2_0_0
/*
{
  "id" : "cNAC187_L6_ChC_d1b33e54c2_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.699158, -10.4987, 0.384835, 2.69968", "-0.589028, -9.39629, 0.347626, 4.40168", "-0.478898, -8.29387, 0.310418, 6.28323", "-0.368767, -7.19145, 0.273209, 7.64436", "-0.258637, -6.08903, 0.236, 8.5434", "-0.148506, -4.98661, 0.198792, 9.49409", "-0.0383758, -3.88419, 0.161583, 10.6841", "0.0717547, -2.78177, 0.124374, 11.1456", "0.181885, -1.67935, 0.0871655, 11.461", "0.292016, -0.576928, 0.0499568, 11.5573", "0.402146, 0.525493, 0.0127481, 11.5875", "0.512276, 1.62791, -0.0244606, 11.382", "0.622407, 2.73033, -0.0616693, 11.2002", "0.732537, 3.83276, -0.098878, 10.9052", "0.842668, 4.93518, -0.136087, 10.3672", "0.952798, 6.0376, -0.173295, 9.50426", "1.06293, 7.14002, -0.210504, 8.36675", "1.17306, 8.24244, -0.247713, 7.22308", "1.28319, 9.34486, -0.284922, 6.14175", "1.39332, 10.4473, -0.32213, 4.86495", "1.50345, 11.5497, -0.359339, 2.69802" ]
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "0.562386, 11.3987, -3.45834, 0.37", "-0.023191, 12.9858, -3.56991, 0.37", "-0.0947506, 13.4169, -3.6505, 0.74", "-0.0486375, 13.7567, -3.77416, 0.74", "0.33949, 14.8, -4.2445, 0.37", "0.721297, 15.6342, -4.59414, 0.66", "1.16755, 16.4951, -4.96762, 1.33", "1.5879, 17.1371, -5.25892, 1.33", "2.29529, 18.1975, -5.74832, 0.74", "2.8237, 19.0451, -6.11688, 0.74", "3.62892, 20.4464, -6.72498, 1.25", "4.13635, 21.5731, -7.19307, 2.06", "4.39376, 22.4142, -7.50572, 2.06", "4.57109, 23.5534, -7.89208, 1.4", "4.50377, 24.8689, -8.32234, 0.74", "4.20704, 25.7318, -8.60714, 1.11", "3.69073, 26.393, -8.82761, 1.11", "2.94632, 26.9581, -9.00217, 0.81", "1.96593, 27.4354, -9.24276, 0.81", "0.767935, 27.8234, -9.5592, 0.81", "-0.400084, 28.1077, -9.90118, 0.96", "-1.36437, 28.3414, -10.1947, 1.11", "-2.23064, 28.5782, -10.508, 1.11", "-4.11246, 29.2193, -11.3299, 1.11", "-4.66847, 29.4827, -11.6321, 1.11", "-5.56536, 30.1834, -12.2532, 0.59", "-6.09537, 30.9348, -12.702, 0.96", "-6.40884, 31.6285, -12.999, 1.25", "-6.63008, 32.2541, -13.2025, 1.55", "-6.7643, 32.6482, -13.29, 1.55", "-7.24358, 33.8584, -13.5341, 0.74", "-7.99661, 35.3219, -13.8248, 0.96", "-8.62023, 36.2091, -14.0345, 0.66", "-9.13779, 36.7673, -14.1981, 0.66", "-9.96894, 37.4609, -14.4573, 0.81", "-10.6587, 37.9166, -14.6795, 0.96", "-11.5664, 38.406, -14.9953, 1.47", "-12.4027, 38.8285, -15.3026, 1.62", "-13.1923, 39.289, -15.6013, 1.47", "-13.9275, 39.8056, -15.8939, 1.11", "-14.7578, 40.516, -16.2486, 0.81", "-15.7355, 41.5737, -16.7289, 0.66", "-16.2609, 42.3035, -17.0206, 0.81", "-16.9365, 43.5351, -17.457, 1.03", "-17.1977, 44.1768, -17.6774, 1.25", "-17.3836, 44.774, -17.8922, 1.25", "-17.7197, 46.063, -18.4016, 0.96", "-17.9702, 47.0578, -18.851, 0.81", "-18.3193, 48.2853, -19.4806, 0.59", "-18.6072, 49.138, -19.9483, 0.59", "-19.0031, 50.1485, -20.5089, 0.59", "-19.4381, 51.1405, -21.0402, 0.59", "-19.8596, 52.0693, -21.4523, 0.44", "-20.2589, 53.0389, -21.7682, 0.66", "-20.5684, 54.0749, -21.9413, 0.74", "-20.6687, 54.7251, -21.9719, 0.96", "-20.6782, 55.4526, -21.949, 0.96", "-20.5233, 57.0673, -21.9186, 0.52", "-20.3091, 58.3767, -21.9363, 0.59", "-20.0255, 59.8616, -22.0129, 0.59", "-19.8793, 60.6913, -22.0924, 0.96", "-19.7671, 61.6487, -22.2311, 0.96", "-19.7319, 63.3485, -22.5809, 0.66", "-19.91, 64.517, -22.9411, 0.66", "-20.3028, 65.4635, -23.316, 0.96", "-20.757, 66.0375, -23.5651, 1.03", "-21.3368, 66.5009, -23.8016, 1.03", "-22.1075, 66.9225, -24.0859, 1.03", "-23.1463, 67.3185, -24.498, 0.74", "-23.9638, 67.5623, -24.9045, 0.74", "-24.5092, 67.6934, -25.2353, 0.52", "-25.7157, 67.9284, -26.1264, 0.52", "-26.7369, 68.0858, -26.9717, 0.52", "-27.7781, 68.2107, -27.874, 1.11", "-28.3443, 68.2643, -28.3486, 1.4", "-28.9873, 68.3062, -28.8312, 1.4", "-30.0863, 68.3358, -29.5165, 0.81", "-30.7639, 68.3505, -29.7936, 0.59", "-31.7843, 68.4015, -30.0115, 0.44", "-32.8095, 68.5013, -30.0707, 0.44", "-33.849, 68.6686, -30.0403, 0.74", "-34.8423, 68.9477, -29.9626, 1.33", "-36.0504, 69.4974, -29.8924, 0.88", "-36.5859, 69.8651, -29.9673, 0.59", "-36.9176, 70.1874, -30.103, 0.59", "-37.3844, 70.758, -30.4443, 0.74", "-37.9618, 71.5581, -31.0415, 0.96", "-38.7073, 72.5995, -31.9554, 0.59", "-39.4788, 73.6163, -32.9715, 0.59", "-39.8802, 74.1269, -33.4788, 0.81", "-40.3872, 74.7112, -34.0348, 0.96", "-40.8731, 75.1852, -34.451, 1.03", "-41.6961, 75.9059, -34.9783, 0.66", "-41.9482, 76.1343, -35.1091, 0.66", "-42.6252, 76.8529, -35.4352, 0.81", "-43.2225, 77.6308, -35.7869, 0.81", "-43.6767, 78.4337, -36.1325, 0.66", "-44.0467, 79.2888, -36.4853, 0.66", "-44.5074, 80.6187, -37.0241, 0.52", "-44.7708, 81.4491, -37.3715, 0.81", "-44.9647, 82.0683, -37.6416, 0.74", "-45.4335, 83.3968, -38.2144, 0.59", "-45.7195, 84.0461, -38.471, 0.74", "-46.1018, 84.6888, -38.693, 0.96", "-46.692, 85.4608, -38.8689, 0.96", "-47.2086, 86.0569, -38.9537, 0.74", "-47.9237, 86.8313, -39.0122, 1.03", "-48.4399, 87.3736, -38.966, 1.25", "-48.8019, 87.7842, -38.892, 0.81", "-49.5701, 88.7537, -38.6538, 0.59", "-50.0382, 89.4115, -38.4567, 0.66", "-50.4266, 90.0078, -38.2592, 0.66", "-51.434, 91.6584, -37.6716, 0.88", "-51.9447, 92.5038, -37.347, 1.11", "-52.2958, 93.082, -37.1027, 1.03", "-52.7229, 93.7799, -36.7987, 1.25", "-52.8824, 94.0394, -36.6754, 1.25" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "4.19239, 10.1787, -4.39834, 1.11", "4.98125, 10.9954, -4.8988, 1.11", "5.59928, 11.6474, -5.31122, 1.11", "6.5853, 12.7381, -5.96854, 1.11", "7.26162, 13.5237, -6.46339, 0.96", "8.38182, 14.6902, -7.19461, 1.55", "9.35611, 15.6227, -7.7831, 1.62", "9.92988, 16.1126, -8.10442, 1.62", "10.8166, 16.7922, -8.49476, 1.25", "12.3031, 17.814, -8.95109, 0.96", "14.5741, 19.218, -9.36519, 0.88", "15.6401, 19.7885, -9.42988, 1.55", "16.804, 20.3257, -9.40179, 1.84", "18.5498, 21.0471, -9.26504, 1.11", "19.4662, 21.4095, -9.14506, 1.03", "20.4917, 21.8568, -8.94534, 1.25", "21.4836, 22.4179, -8.73743, 0.88", "22.3983, 23.0598, -8.5465, 0.88", "23.255, 23.7609, -8.37017, 0.88", "24.2608, 24.6334, -8.15621, 0.88", "25.1208, 25.4278, -7.87921, 0.96", "26.0108, 26.3175, -7.54667, 0.96", "26.8228, 27.2183, -7.18456, 0.81", "28.018, 28.6254, -6.54647, 1.11", "28.8016, 29.5171, -6.05047, 1.4", "29.7046, 30.4117, -5.37958, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "3.86239, 8.76874, 2.16166, 1.62", "4.42607, 9.14914, 2.66378, 1.62", "5.18936, 9.60468, 3.35119, 1.25", "6.57796, 10.2405, 4.74529, 1.25", "7.31226, 10.5297, 5.53198, 1.25", "8.07844, 10.7349, 6.45098, 1.92", "8.40266, 10.7913, 6.86386, 2.5", "9.10772, 10.8105, 7.83978, 2.5", "10.5661, 10.6303, 10.0101, 1.77", "11.5776, 10.3142, 11.5121, 0.96", "13.0048, 9.71238, 13.6261, 0.88", "13.4128, 9.51739, 14.2401, 0.88", "13.7347, 9.36957, 14.7099, 1.4", "14.0528, 9.24811, 15.1205, 1.4", "15.2134, 8.98684, 16.296, 0.66", "15.7056, 9.01602, 16.6887, 0.66", "16.8746, 9.48218, 17.3806, 0.88", "17.6091, 9.89596, 17.7559, 0.88", "18.5315, 10.5137, 18.1213, 0.74", "19.2191, 11.0368, 18.3273, 1.4", "20.0105, 11.6905, 18.4714, 2.06", "20.7897, 12.314, 18.532, 1.84", "21.7243, 13.0272, 18.4787, 1.18", "22.6966, 13.7155, 18.4493, 1.18", "23.0914, 13.9596, 18.5052, 1.03", "23.7514, 14.2873, 18.7792, 1.03", "24.188, 14.4649, 19.2195, 0.59", "24.5935, 14.653, 19.8689, 0.59", "25.388, 15.0882, 21.487, 0.88", "26.3122, 15.6782, 23.6155, 1.62", "26.7093, 15.9674, 24.5411, 1.62", "27.6334, 16.6967, 26.6818, 0.88", "28.0638, 17.0354, 27.6146, 0.88", "28.4608, 17.3585, 28.3861, 1.47", "28.7398, 17.5885, 28.8286, 1.47", "29.4574, 18.1349, 29.6912, 0.81", "29.8577, 18.3856, 30.0775, 0.59", "30.2858, 18.5889, 30.4148, 0.59", "31.3302, 19.0304, 31.247, 1.25", "32.9725, 19.7481, 32.6166, 0.74", "33.487, 20.0243, 33.0965, 0.29", "33.9449, 20.2915, 33.5816, 0.29", "34.207, 20.4449, 33.898, 0.59", "34.9013, 20.8656, 34.7537, 1.11", "35.252, 21.0522, 35.1734, 1.11", "36.0049, 21.717, 36.0746, 1.11", "36.4301, 22.3219, 36.7911, 0.59", "36.4418, 20.5872, 36.909, 0.59", "36.5874, 18.7985, 37.3476, 0.52", "36.6882, 17.5492, 37.6509, 0.59", "43.1601, 19.6232, 43.4198, 0.59", "49.9476, 22.4925, 48.4362, 0.59", "55.5572, 26.6455, 53.9817, 0.59", "61.1147, 31.6383, 58.8452, 0.59", "67.5768, 36.9958, 61.8461, 0.59", "73.3986, 42.6346, 65.558, 0.59", "79.5412, 47.28, 70.0476, 0.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-3.56761, 6.43874, 1.60166, 1.69", "-3.56761, 6.43874, 1.60166, 1.69", "-3.98235, 6.67039, 1.82627, 1.69", "-4.49606, 6.89942, 2.12992, 1.4", "-4.86857, 7.04341, 2.41727, 1.03", "-5.3845, 7.24993, 2.8631, 0.88", "-5.74258, 7.40537, 3.1936, 0.88", "-6.2015, 7.58471, 3.67269, 0.59", "-6.62437, 7.74188, 4.15812, 0.44", "-7.41045, 8.02501, 5.11906, 0.37", "-7.68287, 8.12337, 5.46395, 0.37", "-8.12824, 8.28774, 6.04114, 0.37", "-9.18733, 8.69796, 7.47766, 1.03", "-9.42939, 8.80276, 7.81757, 1.62", "-15.2731, 9.31351, 11.49, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-3.87761, -1.20126, -14.5883, 0.74", "-4.94475, -1.92269, -14.5811, 0.74", "-6.19989, -2.73777, -14.5744, 1.03", "-7.29771, -3.43666, -14.5912, 1.25", "-8.17556, -4.00384, -14.6142, 1.62", "-8.89492, -4.46077, -14.6368, 1.84", "-9.83821, -5.02467, -14.6431, 1.84", "-10.6737, -5.46531, -14.6052, 1.99", "-11.5517, -5.86431, -14.5216, 2.21", "-12.5775, -6.25132, -14.3732, 2.65", "-13.3052, -6.48079, -14.2566, 2.5", "-14.5347, -6.81993, -14.0697, 1.77", "-15.8369, -7.16213, -13.9138, 1.33", "-16.7223, -7.40099, -13.872, 1.18", "-17.772, -7.69523, -13.9387, 1.11", "-18.518, -7.9309, -14.1495, 1.11", "-19.2865, -8.20782, -14.6189, 1.11", "-20.0207, -8.49462, -15.3392, 1.4", "-20.7514, -8.76426, -16.2703, 1.03", "-21.3669, -8.96553, -17.1724, 0.88", "-22.2828, -9.19628, -18.6504, 0.88", "-23.2724, -9.35658, -20.3958, 1.47", "-24.021, -9.42809, -21.7801, 1.77", "-24.8591, -9.44216, -23.3906, 1.84", "-25.1554, -9.42422, -23.9751, 2.06", "-25.6923, -9.35627, -25.0625, 1.77", "-26.5194, -9.18106, -26.6962, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-5.36761, -2.01126, 9.10166, 2.06", "-5.36761, -2.01126, 9.10166, 2.06", "-6.40408, -1.90768, 9.64988, 2.06", "-7.1833, -1.8667, 10.0307, 2.06", "-9.20521, -1.89746, 10.9709, 1.84", "-10.3308, -2.00131, 11.4791, 1.84", "-11.1919, -2.14557, 11.8638, 1.99", "-12.7415, -2.53494, 12.5541, 1.55", "-14.0022, -2.99758, 13.1015, 1.03", "-15.0214, -3.49316, 13.5101, 0.88", "-16.0109, -4.11356, 13.7971, 1.18", "-16.8106, -4.6788, 13.9717, 1.18", "-17.4236, -5.15213, 14.0731, 1.47", "-18.3334, -5.92563, 14.1524, 1.25", "-19.2291, -6.7192, 14.2707, 1.03", "-20.0369, -7.42625, 14.4516, 1.62", "-20.846, -8.11832, 14.7521, 1.69", "-21.4697, -8.62013, 15.0731, 1.33", "-22.584, -9.44536, 15.8313, 1.03", "-23.9564, -10.2964, 17.0253, 0.88", "-24.916, -10.7487, 18.0885, 1.11", "-25.7475, -10.9743, 19.1803, 1.33", "-26.2659, -10.9972, 19.9477, 1.33", "-26.777, -10.8645, 20.7404, 1.18", "-27.3853, -10.5143, 21.6566, 0.88", "-28.2502, -9.86426, 22.7745, 1.18", "-28.7897, -9.47268, 23.3815, 1.33", "-29.2651, -9.21625, 23.8551, 1.33", "-30.0849, -8.97721, 24.623, 0.59", "-31.2093, -9.0368, 25.5786, 0.52", "-31.7797, -9.38361, 25.9957, 0.59", "-32.5752, -10.464, 26.6235, 0.59", "-33.3412, -11.9497, 27.3872, 0.59", "-33.7383, -12.8354, 27.8333, 1.03", "-34.193, -13.9415, 28.4414, 1.03", "-34.5689, -14.8615, 28.9981, 1.03", "-35.2775, -16.3985, 30.1335, 1.03", "-35.9493, -17.4125, 31.2085, 0.66", "-36.5151, -17.8804, 32.0356, 0.66", "-37.5124, -18.2677, 33.346, 0.74", "-38.2174, -18.3905, 34.2106, 0.81", "-38.8732, -18.436, 34.9849, 0.52", "-40.0617, -18.4533, 36.2779, 0.52", "-40.5709, -18.4902, 36.8372, 0.44", "-41.3119, -18.8161, 37.8227, 0.37", "-41.6683, -19.3207, 38.4005, 0.37", "-41.999, -20.0862, 38.9911, 1.11", "-42.2812, -20.8716, 39.4526, 1.4", "-42.553, -21.906, 39.95, 1.4", "-42.8869, -23.4763, 40.6358, 0.81", "-43.1119, -24.6587, 41.095, 0.29", "-43.3124, -25.4407, 41.4113, 0.29", "-43.5493, -26.0686, 41.6817, 0.29", "-50.0696, -30.4694, 48.9328, 0.29", "-57.9604, -34.9803, 54.5762, 0.29", "-65.1795, -39.4812, 61.0635, 0.29", "-71.8789, -42.5885, 68.8045, 0.29", "-78.5943, -45.8337, 76.4747, 0.29", "-86.3206, -50.6528, 82.0908, 0.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-2.19761, -5.76126, 6.85166, 1.77", "-2.19761, -5.76126, 6.85166, 1.77", "-2.17615, -7.11497, 7.01943, 1.77", "-2.14201, -9.43582, 7.29497, 1.47", "-2.12319, -11.7715, 7.54429, 1.25", "-2.15534, -13.5558, 7.71274, 1.62", "-2.21957, -15.0612, 7.83968, 1.92", "-2.30763, -16.3743, 7.95204, 2.14", "-2.46718, -18.0093, 8.08921, 2.14", "-2.79612, -20.2788, 8.27974, 1.55", "-3.21481, -22.4133, 8.44646, 1.33", "-3.594, -24.0305, 8.58685, 1.55", "-3.87561, -25.0519, 8.67886, 1.92", "-4.27577, -26.2908, 8.83292, 2.21", "-4.57548, -27.1073, 8.95785, 2.5", "-4.92592, -28.071, 9.1372, 2.5", "-5.24806, -29.134, 9.35138, 2.36", "-5.59461, -30.5924, 9.65351, 1.69", "-5.92773, -32.5046, 10.034, 1.25", "-6.09716, -34.2914, 10.377, 1.4", "-6.10433, -35.877, 10.6443, 1.62", "-5.93013, -37.8123, 10.9271, 2.06", "-5.71805, -39.0049, 11.0881, 2.36", "-5.50353, -39.7782, 11.1788, 2.36", "-4.97427, -41.2519, 11.3245, 2.14", "-4.11246, -43.32, 11.5121, 1.62", "-3.35197, -45.0618, 11.6512, 1.25", "-2.57192, -46.8588, 11.8132, 1.03", "-1.73931, -48.8793, 12.0351, 1.03", "-1.1191, -50.5713, 12.2624, 1.03", "-0.443881, -52.7614, 12.6333, 1.03", "-0.149448, -54.0657, 12.9035, 0.96", "-0.060131, -55.0962, 13.1514, 0.96", "-0.181351, -56.0148, 13.3991, 0.96", "-0.738763, -57.2245, 13.8114, 0.96", "-1.28392, -57.8819, 14.0706, 0.88", "-1.85581, -58.3678, 14.2737, 1.18", "-2.77903, -59.0425, 14.5328, 1.18", "-3.67334, -59.6589, 14.7622, 1.33", "-4.70306, -60.3581, 15.0485, 1.33", "-5.58838, -60.9678, 15.3258, 1.4", "-6.53744, -61.6631, 15.6686, 1.55", "-7.44652, -62.3994, 16.0721, 1.55", "-8.47549, -63.4055, 16.6516, 1.84", "-9.09861, -64.1401, 17.0626, 2.14", "-9.70891, -65.0258, 17.5036, 1.99", "-10.5601, -66.6255, 18.2085, 0.88", "-11.1414, -68.1028, 18.7628, 0.88", "-11.6314, -69.8478, 19.3156, 0.81", "-11.9057, -71.3905, 19.6909, 0.74", "-12.1603, -73.3385, 20.1029, 0.74", "-12.285, -75.1582, 20.4315, 1.03", "-12.2802, -76.7932, 20.6425, 1.4", "-12.2246, -77.8106, 20.7199, 1.69", "-12.1095, -78.951, 20.7505, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.44239, -10.0013, -2.20834, 3.39", "1.44239, -10.0013, -2.20834, 3.39", "1.71088, -10.8428, -2.28418, 3.39", "1.92767, -11.5217, -2.37696, 3.02", "2.14718, -12.2091, -2.47089, 3.02", "2.43582, -13.1131, -2.59441, 3.02", "2.74588, -14.084, -2.7271, 3.24", "2.97969, -14.8, -2.83539, 3.54", "3.24516, -15.5715, -2.97939, 3.54" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.50345, 11.5497, -0.359339, 0.88", "2.99451, 26.4754, -0.359339, 0.88", "4.48557, 41.4011, -0.359339, 0.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "-52.8824, 94.0394, -36.6754, 0.44", "-53.8986, 95.0447, -37.3307, 0.44", "-54.3572, 95.5381, -37.6159, 0.37", "-54.5651, 95.816, -37.717, 0.66", "-54.8861, 96.3247, -37.8457, 0.66", "-55.1936, 96.9023, -37.9495, 0.59", "-55.3825, 97.3379, -38.0092, 0.81", "-55.5302, 97.8859, -38.0139, 0.81", "-55.6652, 99.1485, -37.9948, 0.52", "-55.6236, 99.745, -37.988, 0.52", "-55.3952, 100.66, -38.0083, 0.44", "-55.0264, 101.522, -38.0812, 0.44", "-54.5241, 102.346, -38.2141, 0.74", "-54.0762, 102.916, -38.3432, 0.74", "-53.3333, 103.694, -38.5911, 0.44", "-52.7674, 104.235, -38.7591, 0.59", "-52.1979, 104.765, -38.9316, 0.59", "-51.6271, 105.314, -39.1269, 0.59", "-51.1813, 105.798, -39.3149, 0.37", "-50.857, 106.185, -39.4741, 0.37", "-50.3684, 106.795, -39.7361, 0.59", "-49.8862, 107.379, -40.0026, 0.37", "-49.4505, 107.883, -40.2413, 0.81", "-48.9943, 108.391, -40.4951, 0.81", "-48.1605, 109.326, -40.9878, 0.44", "-47.5201, 110.062, -41.3827, 0.44", "-47.0698, 110.571, -41.6836, 0.81", "-46.6134, 111.091, -41.9991, 0.44", "-46.3663, 111.391, -42.1879, 0.59", "-45.7793, 112.153, -42.7029, 0.59", "-45.4332, 112.7, -43.1358, 0.44", "-45.0793, 113.461, -43.7783, 0.44", "-44.8667, 114.112, -44.4129, 0.96", "-44.8031, 114.416, -44.7577, 1.18", "-44.7801, 114.694, -45.1136, 1.18", "-44.8547, 115.42, -46.3892, 0.44", "-44.9991, 115.929, -47.4182, 0.37", "-45.1633, 116.327, -48.4864, 0.66", "-45.2452, 116.488, -48.989, 0.66", "-45.383, 116.725, -49.7931, 0.66", "-45.8706, 117.587, -53.0028, 0.44", "-45.9487, 117.727, -53.5754, 0.44", "-46.33, 118.447, -56.6225, 0.29", "-46.4095, 118.619, -57.2689, 0.29", "-46.494, 118.84, -58.0041, 0.29", "-46.6621, 119.391, -59.5589, 0.74", "-46.8434, 120.186, -61.3108, 0.44", "-46.8772, 120.398, -61.6905, 0.44", "-46.9502, 120.943, -62.3856, 0.37", "-47.0218, 121.521, -63.0, 0.88", "-47.1564, 122.503, -63.7741, 0.29", "-47.2383, 122.909, -64.0, 0.52", "-47.4389, 123.652, -64.334, 0.15", "-47.6527, 124.305, -64.6457, 0.22", "-48.0197, 125.325, -65.139, 0.22", "-48.385, 126.212, -65.5467, 0.22", "-48.7352, 127.046, -65.9039, 0.22", "-49.2809, 128.266, -66.4707, 1.47", "-49.6965, 129.159, -66.933, 0.66", "-49.9513, 129.732, -67.2433, 0.96", "-50.336, 130.683, -67.7516, 0.22", "-50.5776, 131.327, -68.0493, 0.22" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "-52.8824, 94.0394, -36.6754, 0.37", "-52.6629, 96.2958, -36.2789, 0.37", "-52.4442, 97.4123, -36.1897, 0.37", "-52.2583, 98.4712, -36.0026, 0.37", "-52.0936, 100.059, -35.5884, 0.74", "-52.0763, 101.403, -35.1764, 0.29", "-52.224, 102.985, -34.6513, 0.29", "-52.325, 103.728, -34.3915, 0.52", "-52.6715, 105.368, -33.5554, 0.44", "-52.9442, 106.412, -32.9094, 0.29", "-53.1827, 107.324, -32.3057, 0.29", "-53.4148, 108.335, -31.5971, 0.29", "-53.6877, 110.043, -30.447, 0.44", "-53.8244, 111.428, -29.543, 0.44", "-53.8223, 113.187, -28.5199, 0.52", "-53.6617, 114.586, -27.7372, 0.37", "-53.4112, 115.701, -27.126, 0.37", "-53.0111, 116.902, -26.5214, 1.11" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "29.7046, 30.4117, -5.37958, 0.29", "30.5229, 30.3407, -3.63052, 0.29", "31.3221, 30.295, -2.17824, 0.59", "32.1321, 30.2262, -0.902467, 0.74", "32.5843, 30.1877, -0.249818, 0.37", "33.2687, 30.1628, 0.806854, 0.37", "33.6416, 30.1672, 1.42846, 0.66", "33.9148, 30.2155, 1.90764, 0.96", "34.2698, 30.3663, 2.78521, 1.25", "34.743, 30.7387, 4.40743, 0.37", "35.1262, 31.2365, 6.0766, 0.37", "35.2446, 31.4389, 6.65454, 0.37", "35.5193, 31.8883, 7.82938, 0.74", "36.0728, 32.6118, 9.62874, 0.66", "36.5827, 33.1359, 10.8579, 0.52", "37.0391, 33.4379, 11.5782, 0.66", "37.6564, 33.6818, 12.2283, 0.66", "38.5389, 33.914, 12.9411, 0.37", "39.5985, 34.071, 13.6074, 0.52", "40.2008, 34.1034, 13.9282, 0.52", "41.2585, 34.1149, 14.4657, 0.66", "41.8546, 34.0989, 14.7613, 0.88", "42.6522, 34.0777, 15.1349, 0.88", "43.5695, 34.0938, 15.6062, 0.66", "44.7128, 34.1825, 16.2077, 0.29", "45.7143, 34.3225, 16.7177, 0.29", "47.232, 34.6738, 17.4479, 0.88", "47.6523, 34.7908, 17.6448, 0.88", "49.3394, 35.3213, 18.3967, 0.29", "50.6463, 35.7787, 18.9317, 0.29", "51.9013, 36.2567, 19.4001, 0.96", "53.398, 36.8607, 19.9231, 0.29", "54.4871, 37.3073, 20.2969, 0.29", "55.4999, 37.6959, 20.6225, 0.81", "56.3046, 37.9755, 20.8341, 0.81", "57.0195, 38.2107, 21.0184, 0.81", "58.1042, 38.5407, 21.2958, 0.59", "59.3668, 38.8733, 21.6287, 0.29", "60.4777, 39.2097, 21.931, 0.81", "61.5728, 39.5471, 22.239, 0.22", "62.5452, 39.8269, 22.5138, 0.22", "63.1643, 39.9767, 22.6798, 0.52", "64.028, 40.1372, 22.8618, 0.22", "72.0798, 42.8779, 29.4917, 0.22", "79.3419, 46.0141, 36.8216, 0.22", "88.1099, 47.1059, 43.0047, 0.22", "96.8723, 46.2752, 49.2362, 0.22", "105.523, 46.8348, 55.6515, 0.22", "112.241, 46.3194, 64.0723, 0.22" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "29.7046, 30.4117, -5.37958, 0.81", "30.9333, 30.4664, -5.07913, 0.81", "31.5116, 30.4314, -4.97456, 1.03", "33.0347, 30.283, -4.84792, 0.96", "33.8657, 30.2136, -4.82249, 0.96", "34.8328, 30.1788, -4.82077, 0.59", "35.505, 30.192, -4.83238, 0.66", "36.4041, 30.2182, -4.87692, 0.66", "37.4718, 30.3462, -4.98772, 0.59", "38.0274, 30.5115, -5.10314, 0.81", "38.7302, 30.8504, -5.2601, 0.96", "39.3779, 31.2472, -5.40335, 1.25", "39.8469, 31.546, -5.49969, 1.4", "40.439, 31.9065, -5.59522, 1.4", "41.41, 32.3973, -5.7036, 0.59", "41.8052, 32.5267, -5.74332, 0.59", "42.6274, 32.6327, -5.81834, 0.59", "43.526, 32.6101, -5.89119, 1.03", "44.1647, 32.5262, -5.93573, 1.18", "44.7229, 32.4045, -5.94599, 1.18", "45.6286, 32.1487, -5.9139, 0.74", "46.5048, 31.8769, -5.8268, 0.66", "46.9229, 31.7481, -5.76747, 0.96", "47.4691, 31.6036, -5.68442, 0.96", "48.4491, 31.3925, -5.54041, 1.03", "48.9123, 31.3227, -5.47182, 1.03", "50.2006, 31.2739, -5.29287, 0.59", "50.8988, 31.3258, -5.20968, 0.59", "52.1419, 31.5148, -5.09803, 0.59", "52.7486, 31.6515, -5.06537, 0.81", "53.3131, 31.8326, -5.06284, 0.81", "54.4584, 32.2959, -5.11592, 0.37", "55.1753, 32.6147, -5.19214, 0.66", "55.8106, 32.8745, -5.26717, 0.74", "56.2079, 33.0123, -5.32465, 0.74", "56.9818, 33.2003, -5.45879, 0.74", "57.8085, 33.2886, -5.62335, 0.52", "58.9546, 33.259, -5.87446, 0.74", "59.8187, 33.1804, -6.04843, 0.88", "60.2946, 33.1272, -6.11813, 0.96", "60.7705, 33.0775, -6.15698, 1.18", "61.4997, 33.0217, -6.16249, 1.18", "62.06, 33.0241, -6.10985, 0.66", "63.0673, 33.186, -5.89193, 0.59", "63.742, 33.3827, -5.62545, 0.59", "64.195, 33.5532, -5.39149, 0.74", "64.5532, 33.716, -5.16934, 0.74", "64.9097, 33.8955, -4.9182, 0.74", "65.5958, 34.2595, -4.38031, 0.59", "66.5131, 34.7656, -3.58826, 0.96", "66.9504, 34.9996, -3.207, 1.25", "67.1894, 35.1189, -2.98479, 1.25" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "79.5412, 47.28, 70.0476, 0.29", "86.2781, 51.0278, 77.0085, 0.29", "93.9376, 54.9378, 82.8335, 0.29", "101.735, 59.736, 87.7393, 0.29", "108.616, 63.8326, 94.3541, 0.29", "114.962, 69.0828, 100.683, 0.29", "119.864, 74.8211, 107.82, 0.29" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "79.5412, 47.28, 70.0476, 0.29", "86.1154, 50.5316, 76.0704, 0.29", "92.4774, 55.5379, 81.0232, 0.29", "98.0662, 61.6426, 85.6672, 0.29", "103.392, 66.6572, 91.7135, 0.29", "108.706, 72.1362, 97.3541, 0.29" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-26.5194, -9.18106, -26.6962, 0.74", "-27.5011, -10.0602, -27.0114, 0.74", "-28.0421, -10.4274, -27.1423, 0.74", "-28.5087, -10.6749, -27.2499, 0.74", "-29.2692, -10.917, -27.4908, 0.66", "-29.8355, -11.0058, -27.7123, 0.66", "-30.4433, -11.0508, -27.9744, 0.59", "-30.873, -11.0043, -28.148, 1.25", "-31.2274, -10.9328, -28.3066, 1.25", "-32.3128, -10.6902, -28.839, 0.66", "-32.8508, -10.5868, -29.121, 0.66", "-33.1363, -10.571, -29.2857, 0.96", "-33.5489, -10.6325, -29.5412, 0.96", "-33.8303, -10.743, -29.7977, 0.96", "-34.2481, -11.055, -30.4545, 0.74", "-34.4639, -11.3053, -30.9701, 0.52", "-34.6768, -11.6088, -31.618, 0.81", "-34.8127, -11.8289, -32.0989, 1.03", "-35.3039, -12.7017, -34.0665, 1.25", "-35.6371, -13.3117, -35.4935, 0.66", "-35.804, -13.6019, -36.1977, 0.66", "-35.912, -13.7497, -36.5654, 1.11", "-36.0134, -13.843, -36.7838, 1.33", "-36.1656, -13.9494, -36.968, 1.18", "-36.4124, -14.1057, -37.0742, 1.18", "-36.979, -14.4636, -37.2307, 0.59", "-37.5577, -14.8723, -37.4172, 0.52", "-38.0091, -15.237, -37.6125, 0.52", "-38.3779, -15.5825, -37.8545, 0.81", "-38.7334, -15.974, -38.1998, 0.66", "-39.0635, -16.374, -38.6001, 0.66", "-39.2997, -16.685, -38.9485, 1.33", "-39.4572, -16.902, -39.201, 1.33", "-39.9488, -17.5814, -40.0024, 0.66", "-40.3834, -18.1619, -40.6832, 0.52", "-40.5915, -18.4166, -40.9864, 0.52", "-40.8658, -18.7111, -41.2924, 0.96", "-41.0643, -18.9061, -41.4532, 1.18", "-41.2075, -19.0446, -41.5246, 1.18", "-41.5038, -19.3551, -41.5829, 0.81", "-41.9035, -19.8214, -41.588, 0.74", "-42.3913, -20.4574, -41.5424, 0.59", "-42.6356, -20.7763, -41.4962, 0.74", "-42.9632, -21.188, -41.4106, 0.74", "-43.3198, -21.5936, -41.306, 0.59", "-43.6589, -21.9578, -41.1977, 0.44", "-44.0393, -22.3624, -41.0703, 0.44", "-44.4071, -22.7461, -40.9665, 0.44", "-44.7914, -23.1829, -40.8655, 0.44", "-45.4145, -23.97, -40.7164, 0.44", "-45.5653, -24.2012, -40.6816, 0.96", "-45.826, -24.749, -40.646, 1.18", "-45.9758, -25.2303, -40.6511, 0.81", "-46.1146, -26.0129, -40.7375, 0.59", "-46.1529, -26.35, -40.8133, 0.74", "-46.2107, -26.8905, -40.9729, 0.66", "-46.3085, -27.4193, -41.1513, 0.66", "-46.4183, -27.8106, -41.297, 0.81", "-46.6821, -28.5312, -41.5641, 0.59", "-46.9509, -29.1652, -41.7875, 0.52", "-47.1999, -29.7811, -41.9867, 0.81", "-47.4116, -30.3806, -42.1556, 1.4", "-47.4972, -30.7379, -42.2156, 1.69", "-47.5848, -31.4383, -42.2554, 0.52", "-47.6325, -32.0163, -42.2915, 0.44", "-47.6642, -32.597, -42.4063, 0.44", "-47.694, -33.0021, -42.5722, 0.29", "-47.8042, -33.7529, -42.9977, 1.4", "-47.8386, -33.9026, -43.095, 1.4", "-48.2729, -35.2232, -44.1371, 0.52", "-48.5738, -35.9515, -44.7693, 0.52", "-48.7509, -36.3284, -45.1092, 0.52", "-49.0204, -36.8901, -45.614, 0.74", "-49.1966, -37.2672, -45.9412, 0.88", "-49.5549, -38.13, -46.5835, 0.44", "-49.7104, -38.5669, -46.8327, 0.59", "-49.8952, -39.058, -47.0892, 0.59", "-50.1142, -39.5567, -47.3679, 0.37", "-50.2549, -39.8575, -47.5455, 0.59", "-50.5252, -40.3943, -47.8558, 0.81", "-50.7946, -40.8868, -48.0967, 1.18", "-50.9732, -41.19, -48.2479, 1.18", "-51.4797, -41.9439, -48.6696, 0.74" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-26.5194, -9.18106, -26.6962, 0.81", "-27.8392, -7.19136, -25.9514, 0.81", "-28.4135, -6.51878, -25.6022, 0.81", "-29.2484, -5.79043, -25.1126, 0.81", "-30.0965, -5.31193, -24.686, 0.88", "-31.0685, -5.04979, -24.3353, 0.66", "-32.826, -4.8406, -23.8758, 0.59", "-34.0017, -5.04336, -23.7402, 0.59", "-35.0508, -5.34533, -23.8651, 0.59", "-36.4384, -5.85008, -24.3215, 0.74", "-37.9393, -6.43077, -25.1435, 1.03", "-38.4688, -6.63173, -25.4946, 1.62", "-39.1962, -6.87989, -26.0262, 1.92", "-41.5114, -7.60061, -27.6498, 0.88", "-42.4051, -7.85412, -28.2515, 0.66", "-43.7134, -8.22841, -29.09, 0.66", "-45.4709, -8.74481, -30.1555, 0.66", "-46.2529, -8.9627, -30.6002, 0.66", "-47.9635, -9.36976, -31.4392, 0.66", "-49.0611, -9.57286, -31.8909, 0.44", "-50.4681, -9.73355, -32.4703, 0.44", "-51.5165, -9.77566, -32.9259, 0.44", "-52.78, -9.72041, -33.5658, 0.66", "-53.6729, -9.63994, -34.046, 0.66", "-54.7422, -9.48162, -34.6028, 0.66", "-55.6672, -9.31824, -35.0088, 0.66", "-56.7302, -9.07398, -35.3781, 0.44", "-57.4754, -8.87204, -35.6046, 0.74", "-58.5871, -8.55205, -35.9073, 0.74", "-59.5784, -8.2592, -36.1682, 0.74", "-60.4201, -8.0154, -36.3726, 0.74", "-61.3797, -7.74995, -36.5912, 0.37", "-62.7787, -7.49058, -37.0014, 0.37", "-63.3619, -7.48491, -37.249, 0.37", "-63.9566, -7.5967, -37.6141, 0.88", "-64.7308, -7.8408, -38.1661, 1.18", "-65.3591, -8.06435, -38.6809, 1.33", "-66.9603, -8.65818, -40.1165, 0.44", "-68.1257, -9.02294, -41.218, 0.44", "-69.0862, -9.18873, -42.1816, 0.44", "-69.9883, -9.17137, -43.0778, 0.88", "-71.002, -8.9218, -44.0018, 1.03", "-71.4366, -8.7103, -44.3272, 1.03", "-72.6022, -7.90711, -44.8876, 0.44", "-73.3093, -7.38569, -45.1509, 0.44", "-74.1232, -6.85885, -45.3642, 0.44", "-74.7717, -6.53752, -45.5356, 0.59", "-75.8064, -6.19801, -45.7935, 0.59", "-76.827, -6.03001, -46.0935, 0.74", "-78.6275, -6.05659, -46.7049, 0.37", "-79.7264, -6.22711, -47.1673, 0.37", "-81.3102, -6.6809, -47.9661, 0.59", "-81.9163, -6.9261, -48.3282, 0.88", "-83.0579, -7.52399, -49.1532, 0.66", "-83.8145, -7.98245, -49.7603, 0.74", "-84.6084, -8.52311, -50.4216, 0.59", "-85.2882, -9.00417, -51.0331, 0.52", "-85.9257, -9.44995, -51.6041, 0.88", "-87.1235, -10.1682, -52.6529, 0.59", "-87.8408, -10.5105, -53.2498, 0.44", "-88.6568, -10.807, -53.8977, 1.03", "-89.2402, -10.9632, -54.3286, 1.33", "-89.6085, -11.0326, -54.5722, 1.4", "-91.1765, -11.2714, -55.4855, 0.44", "-91.8121, -11.3642, -55.8281, 0.44", "-92.7535, -11.4929, -56.2946, 0.44", "-93.7487, -11.6143, -56.7366, 0.44", "-95.3647, -11.8019, -57.4422, 0.59", "-96.4885, -11.9057, -58.0084, 0.88", "-97.5352, -11.9217, -58.6603, 1.11", "-98.9025, -11.8572, -59.6237, 0.52", "-99.8974, -11.7375, -60.372, 0.52", "-100.735, -11.5931, -61.0238, 1.03", "-102.61, -11.2098, -62.568, 1.25", "-104.816, -10.826, -64.4153, 0.52", "-105.567, -10.7245, -65.0436, 0.59", "-106.563, -10.6403, -65.85, 0.59", "-108.122, -10.5654, -66.9665, 0.44", "-109.185, -10.5521, -67.5841, 0.44", "-110.748, -10.5297, -68.2913, 0.44", "-111.59, -10.4828, -68.6364, 0.44", "-112.776, -10.2504, -69.236, 0.66", "-113.644, -9.92988, -69.7654, 0.88", "-114.12, -9.66415, -70.0773, 0.88", "-115.523, -8.6654, -71.0045, 0.52", "-116.399, -7.91694, -71.5889, 0.52", "-117.649, -6.69074, -72.5166, 0.81", "-118.532, -5.71123, -73.2124, 0.44", "-119.042, -5.09341, -73.642, 0.44", "-119.628, -4.27686, -74.1677, 0.74", "-119.994, -3.65848, -74.5035, 0.96", "-120.74, -2.06958, -75.1533, 0.66", "-121.164, -1.0729, -75.5289, 0.44", "-121.648, 0.0206923, -75.9866, 0.44", "-122.2, 1.05907, -76.5164, 0.44", "-122.454, 1.40883, -76.7399, 0.44", "-123.228, 2.08201, -77.2876, 0.96", "-124.838, 2.66235, -78.1351, 0.66", "-125.869, 2.83493, -78.6247, 0.96", "-126.358, 2.8742, -78.8163, 1.25", "-126.929, 2.89795, -79.0165, 1.25", "-127.839, 2.95273, -79.3113, 1.25", "-129.434, 3.18325, -79.7826, 0.37", "-130.421, 3.49275, -79.9841, 0.37", "-131.092, 3.80272, -80.1308, 0.66", "-131.611, 4.06328, -80.2311, 0.81", "-132.418, 4.46757, -80.3466, 0.81", "-133.66, 5.06254, -80.4167, 0.44", "-134.497, 5.40098, -80.3772, 0.44", "-135.998, 5.86603, -80.2241, 0.44", "-137.645, 6.30387, -79.9834, 0.44", "-138.891, 6.61491, -79.7472, 0.66", "-140.181, 6.91644, -79.4471, 0.96", "-141.475, 7.189, -79.0684, 0.59", "-142.574, 7.43119, -78.7042, 0.44", "-143.71, 7.69158, -78.3151, 0.44", "-144.818, 7.95823, -77.9977, 0.44", "-145.785, 8.1569, -77.842, 0.44", "-146.901, 8.3027, -77.8469, 0.74", "-147.454, 8.33663, -77.9301, 0.74", "-149.019, 8.31907, -78.2886, 0.52", "-149.731, 8.28601, -78.4968, 0.59", "-151.051, 8.21456, -78.9353, 0.44", "-152.047, 8.20201, -79.2694, 0.44", "-153.317, 8.30645, -79.7119, 0.37", "-154.609, 8.51836, -80.121, 0.52", "-155.648, 8.78116, -80.4225, 1.11", "-156.472, 9.05591, -80.6854, 1.25", "-157.461, 9.45223, -81.061, 0.37", "-158.89, 10.0715, -81.7207, 0.37", "-159.86, 10.4812, -82.2523, 0.29", "-160.631, 10.7979, -82.7521, 0.29", "-162.021, 11.3695, -83.7279, 0.59", "-163.128, 11.854, -84.5333, 0.59", "-163.758, 12.1458, -84.9877, 0.29", "-164.257, 12.3925, -85.2989, 0.37", "-165.056, 12.8379, -85.7225, 0.37", "-166.151, 13.4715, -86.1373, 0.44", "-167.065, 13.9991, -86.3249, 0.44", "-167.928, 14.4788, -86.4082, 0.44", "-168.956, 14.9921, -86.4849, 0.37", "-169.366, 15.1615, -86.5114, 0.37", "-170.394, 15.4705, -86.558, 0.88", "-170.98, 15.5943, -86.5828, 1.11", "-172.025, 15.7784, -86.6296, 1.11", "-173.672, 16.0955, -86.6823, 0.37", "-174.959, 16.3944, -86.6963, 0.37", "-175.706, 16.6232, -86.6761, 0.66", "-176.86, 17.1517, -86.6294, 0.66", "-177.796, 17.7368, -86.5849, 0.37", "-178.613, 18.4059, -86.547, 0.52", "-178.925, 18.7155, -86.5338, 0.66", "-179.391, 19.2299, -86.5083, 0.66", "-180.661, 20.6514, -86.4198, 0.37", "-181.246, 21.2477, -86.3453, 0.37", "-181.853, 21.6947, -86.2049, 0.37", "-182.462, 21.9864, -86.0049, 0.88", "-183.416, 22.2853, -85.6383, 0.81", "-183.876, 22.3776, -85.448, 0.81", "-185.021, 22.5312, -84.9452, 0.29", "-186.517, 22.7027, -84.2819, 0.29", "-187.447, 22.8348, -83.7897, 0.52", "-188.58, 23.0536, -83.1534, 0.44", "-189.135, 23.1804, -82.8358, 0.44", "-189.869, 23.3729, -82.3804, 0.81", "-190.739, 23.6671, -81.7934, 0.81", "-192.387, 24.3909, -80.5741, 0.29", "-193.05, 24.7157, -80.0606, 0.44", "-193.671, 25.0243, -79.5389, 0.29", "-194.358, 25.3432, -78.9798, 0.29", "-195.263, 25.7284, -78.3015, 0.29", "-195.962, 26.0035, -77.8387, 0.29", "-196.79, 26.2926, -77.359, 0.59", "-198.378, 26.8142, -76.4245, 0.22", "-199.4, 27.1394, -75.8283, 0.22", "-199.939, 27.2807, -75.5174, 0.52", "-200.431, 27.3628, -75.2307, 0.52" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-86.3206, -50.6528, 82.0908, 0.29", "-92.4249, -54.6682, 87.7794, 0.29", "-97.4841, -60.2773, 93.1357, 0.29", "-102.205, -65.896, 98.7822, 0.29", "-106.548, -72.0895, 104.123, 0.29", "-109.672, -78.9616, 109.487, 0.29", "-113.558, -85.5795, 114.668, 0.29", "-117.474, -92.2028, 119.82, 0.29" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-86.3206, -50.6528, 82.0908, 0.29", "-93.6343, -54.6421, 88.4929, 0.29", "-101.185, -59.6767, 93.7868, 0.29", "-108.07, -65.4647, 99.217, 0.29", "-114.036, -71.8231, 105.08, 0.29", "-119.646, -78.8384, 110.53, 0.29", "-124.463, -86.9723, 115.115, 0.29", "-129.826, -94.1948, 120.543, 0.29" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-12.1095, -78.951, 20.7505, 0.66", "-12.8646, -81.6021, 19.7189, 0.66", "-13.0575, -82.3056, 19.4716, 1.03", "-13.256, -83.0412, 19.3024, 1.03", "-13.6273, -84.4467, 19.1116, 1.03", "-13.8784, -85.5114, 19.0459, 1.03", "-14.1437, -86.8119, 19.0469, 0.81", "-14.3225, -87.9749, 19.2561, 0.81", "-14.4314, -89.6797, 19.716, 1.4", "-14.4237, -90.4099, 19.969, 1.62", "-14.3359, -91.4985, 20.4522, 1.4", "-14.2272, -92.2155, 20.7998, 1.92", "-14.0146, -93.1881, 21.2887, 1.4", "-13.6074, -94.6591, 22.0456, 1.69", "-13.2977, -95.6419, 22.5042, 1.11", "-12.8805, -96.9611, 23.0848, 0.81", "-12.6956, -97.5848, 23.3392, 1.11", "-12.4992, -98.3308, 23.6128, 1.25", "-12.1409, -99.9952, 24.1621, 0.96", "-12.028, -100.841, 24.3968, 0.74", "-11.998, -101.654, 24.5786, 0.81", "-12.1281, -102.895, 24.7558, 0.52", "-12.3337, -103.787, 24.8158, 0.88", "-12.587, -104.544, 24.7796, 0.88", "-12.9292, -105.38, 24.6074, 0.88", "-13.2414, -106.124, 24.3854, 0.66", "-13.5313, -106.923, 24.0583, 0.66", "-13.8213, -108.051, 23.4264, 0.88", "-13.9406, -108.804, 22.9241, 1.33", "-13.9861, -109.382, 22.5195, 1.47", "-14.0072, -109.926, 22.1408, 1.62", "-14.0521, -111.035, 21.4193, 0.74", "-14.135, -112.293, 20.7497, 0.74", "-14.2679, -113.271, 20.3768, 0.74", "-14.4202, -114.049, 20.2123, 0.74", "-14.6577, -115.122, 20.1424, 0.66", "-14.8864, -116.235, 20.2303, 0.66", "-15.1529, -117.84, 20.5788, 0.96", "-15.2312, -118.664, 20.8374, 0.88", "-15.23, -119.403, 21.0958, 0.88", "-15.0926, -120.78, 21.5773, 0.52", "-14.8546, -122.046, 22.0107, 1.18", "-14.714, -122.666, 22.1837, 1.62", "-14.5601, -123.365, 22.3204, 1.62", "-14.3765, -124.355, 22.4828, 0.96", "-14.2716, -125.122, 22.5925, 0.96", "-14.1938, -126.285, 22.7327, 0.66", "-14.2424, -127.817, 22.8652, 0.52", "-14.3936, -129.194, 22.9986, 0.59", "-14.6992, -130.781, 23.169, 0.74", "-14.8145, -131.194, 23.2218, 1.11", "-15.1204, -131.984, 23.3695, 1.25", "-15.7707, -133.252, 23.6818, 0.88", "-16.2002, -133.884, 23.8974, 0.66", "-16.6663, -134.444, 24.1253, 0.66", "-17.1275, -134.94, 24.3311, 0.59", "-18.0409, -135.94, 24.6986, 0.59", "-18.5502, -136.515, 24.8687, 0.44", "-19.1536, -137.263, 25.0122, 0.44", "-19.6457, -137.958, 25.0648, 0.74", "-20.0374, -138.602, 25.0683, 0.74", "-20.3697, -139.216, 25.0343, 0.66", "-20.7897, -140.114, 24.923, 1.03", "-21.1041, -140.828, 24.8394, 1.4", "-21.4409, -141.629, 24.7538, 1.4", "-21.7377, -142.324, 24.6855, 1.47", "-22.2103, -143.424, 24.5967, 0.74", "-22.5761, -144.28, 24.5197, 0.74" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-12.1095, -78.951, 20.7505, 0.44", "-11.4053, -79.5808, 21.127, 0.44", "-10.9931, -80.1116, 21.4008, 0.44", "-10.7103, -80.7815, 21.6853, 0.37", "-10.4241, -82.0687, 22.1179, 0.59", "-10.3898, -82.565, 22.2534, 0.52", "-10.414, -83.1983, 22.4086, 0.44", "-10.625, -84.2073, 22.6851, 0.44", "-10.9163, -85.0503, 22.9659, 0.44", "-11.1572, -85.5585, 23.1869, 0.59", "-11.5069, -86.1388, 23.5574, 0.59", "-11.8412, -86.6346, 24.106, 0.37", "-12.2351, -87.1935, 25.02, 0.59", "-12.5413, -87.635, 25.9462, 0.88", "-12.7259, -87.8848, 26.5558, 0.81", "-13.1008, -88.3624, 27.788, 1.03", "-13.4872, -88.8391, 29.008, 0.88", "-13.8651, -89.2907, 30.0313, 0.44", "-14.2086, -89.7226, 30.7725, 0.44", "-14.4541, -90.0584, 31.1944, 0.66", "-14.8317, -90.5481, 31.6582, 0.66", "-15.2146, -90.9764, 31.9428, 0.66", "-15.8163, -91.5714, 32.22, 0.66", "-16.3505, -92.0793, 32.421, 1.33", "-16.5942, -92.3187, 32.4935, 1.47", "-17.0703, -92.7926, 32.6267, 1.03", "-17.6668, -93.4032, 32.7978, 0.81", "-18.1673, -93.9195, 32.9539, 0.74", "-18.7586, -94.5402, 33.1611, 0.52", "-19.1722, -95.0011, 33.322, 0.44", "-21.1623, -100.854, 37.9719, 0.44", "-22.3469, -107.232, 42.1858, 0.44", "-24.2462, -113.514, 46.2824, 0.44", "-27.829, -119.211, 50.0955, 0.44", "-31.0158, -124.075, 55.1975, 0.44", "-33.3709, -129.072, 60.6128, 0.44", "-35.9944, -134.225, 65.7519, 0.44", "-40.1749, -138.839, 70.3424, 0.44", "-45.8229, -142.659, 73.9961, 0.44" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "3.24516, -15.5715, -2.97939, 1.47", "2.78012, -16.9542, -3.48281, 1.47", "2.28436, -18.7444, -3.96911, 1.33", "1.94182, -20.1782, -4.24016, 1.55", "1.69827, -21.3472, -4.35699, 1.55", "1.46045, -22.5666, -4.32794, 1.77", "1.15019, -24.1346, -4.12822, 1.77", "0.969938, -25.1078, -3.86934, 2.14", "0.807226, -25.9236, -3.56615, 2.58", "0.582745, -26.9679, -3.15227, 2.36", "0.148186, -28.8803, -2.48883, 1.77", "-0.232034, -30.524, -2.08926, 1.47", "-0.522115, -31.897, -1.93368, 1.18", "-0.781924, -33.3519, -1.91502, 1.11", "-0.958325, -34.6427, -2.02587, 1.33", "-1.10429, -36.3992, -2.35701, 1.25", "-1.12334, -37.9345, -2.77033, 1.47", "-1.05641, -39.3109, -3.17289, 1.62", "-0.970081, -40.3449, -3.47374, 2.14", "-0.916523, -41.0588, -3.66833, 2.58", "-0.888896, -42.0854, -3.91473, 2.43", "-0.951995, -43.7371, -4.2635, 2.14", "-1.09728, -45.0689, -4.53357, 1.92", "-1.34843, -46.3872, -4.7982, 1.47", "-1.79627, -48.0117, -5.13974, 1.25", "-2.27267, -49.3503, -5.39136, 1.11", "-2.71125, -50.351, -5.54438, 1.4", "-3.03241, -50.994, -5.6249, 1.55", "-3.54291, -51.9775, -5.70537, 1.18", "-4.03608, -52.9857, -5.7186, 0.88", "-4.48088, -54.0489, -5.72085, 1.18", "-4.83307, -55.0918, -5.71639, 1.03", "-5.12578, -56.0752, -5.70046, 1.03", "-5.48882, -57.535, -5.68331, 1.47", "-5.65561, -58.4637, -5.68423, 1.77", "-5.82045, -59.9257, -5.73227, 1.77", "-5.89807, -61.0489, -5.85052, 2.06" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "3.24516, -15.5715, -2.97939, 1.77", "3.66712, -17.3925, -3.40958, 1.77", "3.85534, -18.304, -3.61231, 1.99", "4.07177, -19.352, -3.84542, 1.99", "4.36708, -20.782, -4.16348, 3.17", "4.5001, -21.4262, -4.30676, 3.76", "4.72772, -22.5284, -4.55192, 4.2", "4.85278, -23.5033, -4.73297, 3.9" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "4.48557, 41.4011, -0.359339, 0.88", "5.97663, 56.3268, -0.359339, 0.88", "7.46769, 71.2525, -0.359339, 0.88" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "-53.0111, 116.902, -26.5214, 0.29", "-53.2293, 117.85, -26.6612, 0.29", "-53.4747, 119.272, -27.1678, 0.29", "-53.6185, 120.546, -27.6945, 0.29", "-53.6951, 121.917, -28.3165, 0.29", "-53.7131, 122.9, -28.8017, 0.29", "-53.7182, 124.516, -29.6021, 0.29", "-53.6437, 127.414, -31.2016, 0.29", "-53.6091, 128.305, -31.7281, 0.37", "-53.5785, 129.379, -32.3906, 0.37", "-53.5687, 130.7, -33.2462, 0.37", "-53.5562, 131.788, -33.9574, 0.22", "-53.5558, 132.921, -34.6724, 0.22", "-53.657, 134.155, -35.2971, 1.03", "-53.702, 134.376, -35.4118, 1.03" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "-53.0111, 116.902, -26.5214, 0.52", "-53.8941, 118.187, -25.9162, 0.52", "-54.2792, 118.863, -25.6179, 0.52", "-54.6494, 119.636, -25.3265, 0.44", "-54.8081, 120.026, -25.2055, 0.59", "-54.9696, 120.495, -25.0848, 0.59", "-55.2544, 121.394, -24.8584, 0.37", "-55.586, 122.55, -24.6536, 0.37", "-55.7709, 123.296, -24.5204, 0.37", "-55.9565, 124.049, -24.3787, 0.37", "-56.16, 124.876, -24.2024, 0.29", "-56.3538, 125.619, -24.0272, 0.29", "-56.594, 126.403, -23.816, 0.81", "-56.7214, 126.718, -23.7201, 0.81", "-56.9549, 127.198, -23.5536, 0.74", "-57.307, 127.803, -23.3573, 0.74", "-57.6564, 128.275, -23.2408, 0.96", "-58.0494, 128.711, -23.1849, 0.96", "-58.3323, 128.997, -23.1899, 0.59", "-58.9124, 129.583, -23.2939, 0.29", "-59.4785, 130.17, -23.4992, 0.29", "-60.1115, 130.85, -23.8107, 0.29", "-60.5575, 131.361, -24.0554, 0.22", "-61.225, 132.157, -24.44, 0.22", "-61.7458, 132.811, -24.7548, 0.74", "-62.3197, 133.593, -25.092, 0.37", "-62.7587, 134.285, -25.3386, 0.37", "-63.1471, 134.971, -25.5559, 0.81", "-63.4247, 135.435, -25.6993, 1.18", "-63.6914, 135.803, -25.7947, 1.18", "-64.3909, 136.593, -25.9907, 0.29", "-65.1354, 137.38, -26.1744, 0.29", "-65.6193, 137.851, -26.2996, 0.29", "-66.1244, 138.301, -26.438, 0.29", "-66.8784, 138.918, -26.628, 0.74", "-67.4326, 139.284, -26.7443, 0.74" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "112.241, 46.3194, 64.0723, 0.29", "121.149, 48.0766, 71.5832, 0.29", "129.745, 49.5806, 79.5015, 0.29", "138.751, 52.3202, 86.5908, 0.29", "146.939, 56.4954, 93.9653, 0.29" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "112.241, 46.3194, 64.0723, 0.29", "123.231, 47.4123, 71.3519, 0.29", "133.84, 50.7981, 78.49, 0.29", "145.347, 55.0996, 83.3946, 0.29", "155.36, 60.6632, 90.0089, 0.29" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "67.1894, 35.1189, -2.98479, 0.44", "68.6275, 35.1392, -3.61581, 0.44", "69.1617, 35.2417, -3.92376, 0.37", "70.1095, 35.5377, -4.51385, 0.59", "70.625, 35.7277, -4.83892, 0.74", "71.9492, 36.2573, -5.64514, 0.37", "73.317, 36.8364, -6.43524, 0.29", "74.127, 37.294, -6.92876, 0.29", "74.709, 37.668, -7.24544, 0.88", "74.923, 37.8252, -7.35681, 1.11", "75.4553, 38.2317, -7.59704, 1.11", "75.9615, 38.5917, -7.72112, 1.18", "76.9044, 39.0913, -7.79322, 0.74", "77.5472, 39.409, -7.81242, 0.59" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "67.1894, 35.1189, -2.98479, 0.29", "68.151, 36.0292, -2.54036, 0.29", "68.6037, 36.4578, -2.31116, 0.29", "69.1835, 37.0068, -2.01759, 0.66", "69.8094, 37.5995, -1.70065, 0.29", "70.2781, 38.0432, -1.46336, 0.29", "71.2173, 38.9326, -0.987773, 0.29", "71.7557, 39.394, -0.660895, 0.29", "79.7683, 46.62, 2.22737, 0.29", "86.6914, 54.4182, 6.2297, 0.29", "92.1896, 63.5682, 9.51709, 0.29", "98.8019, 71.8783, 12.9783, 0.29" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-51.4797, -41.9439, -48.6696, 0.81", "-51.849, -42.8375, -50.1386, 0.81", "-51.9212, -42.9551, -50.3262, 0.81", "-52.8819, -44.2157, -52.1584, 0.37", "-53.1676, -44.5641, -52.6001, 0.52", "-53.4418, -44.9, -53.0066, 0.66", "-53.7536, -45.3012, -53.4745, 0.66", "-54.4507, -46.1265, -54.3473, 0.37", "-54.8958, -46.6362, -54.9072, 0.37", "-55.5878, -47.3995, -55.7405, 0.37", "-56.0152, -47.8628, -56.2725, 0.66", "-56.7009, -48.5963, -57.1098, 1.11", "-57.0244, -48.9346, -57.4761, 1.25", "-58.134, -49.9762, -58.726, 0.22", "-58.6048, -50.3455, -59.2267, 0.29", "-59.0225, -50.6167, -59.6376, 0.59", "-59.4988, -50.8988, -60.0641, 0.81", "-60.0036, -51.2018, -60.526, 0.81", "-61.283, -52.1221, -61.7412, 0.37", "-61.6482, -52.4449, -62.0948, 0.37", "-62.2228, -53.1075, -62.7524, 0.59", "-62.425, -53.4024, -63.0122, 0.81", "-63.1082, -54.6374, -63.9508, 0.44", "-63.5426, -55.5993, -64.5514, 0.44", "-63.8682, -56.4379, -64.9764, 0.37", "-64.2503, -57.49, -65.4765, 0.37", "-64.5366, -58.2646, -65.842, 0.66", "-64.7804, -58.8375, -66.1296, 0.81", "-65.0265, -59.3718, -66.3796, 0.81", "-65.4996, -60.3146, -66.836, 0.29", "-65.78, -60.837, -67.0746, 0.96", "-66.4652, -62.0785, -67.5606, 0.29", "-66.896, -62.8921, -67.847, 0.29", "-67.3174, -63.7131, -68.0843, 0.44", "-67.5582, -64.1704, -68.2041, 0.44", "-67.947, -64.9101, -68.3549, 0.29", "-68.1618, -65.3194, -68.4595, 0.59", "-68.483, -65.9887, -68.6424, 0.59", "-68.7771, -66.6515, -68.8642, 0.52", "-69.263, -67.6424, -69.2568, 0.37", "-69.5809, -68.2578, -69.5288, 0.88", "-70.1816, -69.3998, -70.0673, 0.44", "-70.5135, -70.0555, -70.375, 0.59", "-70.7828, -70.5963, -70.6219, 0.59", "-71.1004, -71.2569, -70.8891, 0.59", "-71.424, -71.9402, -71.1042, 0.37", "-71.6891, -72.4376, -71.2143, 0.37", "-72.1359, -73.1787, -71.2824, 0.29", "-72.3071, -73.4396, -71.278, 0.29", "-72.7407, -74.1032, -71.2058, 0.88", "-73.0269, -74.5629, -71.1199, 1.18", "-73.5167, -75.2868, -70.9374, 0.29", "-73.8851, -75.7874, -70.7994, 0.29", "-74.4449, -76.5262, -70.6436, 0.29", "-74.6992, -76.8765, -70.5932, 0.88", "-74.9463, -77.2306, -70.571, 0.88", "-75.766, -78.4013, -70.6131, 0.22", "-76.048, -78.7977, -70.6741, 0.22", "-76.6827, -79.6391, -70.8595, 0.59", "-76.8265, -79.8214, -70.9124, 0.59", "-77.4109, -80.5475, -71.1397, 0.22", "-77.7467, -80.9679, -71.2838, 0.44", "-78.2086, -81.604, -71.5302, 0.22", "-78.846, -82.4751, -71.857, 0.22" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-51.4797, -41.9439, -48.6696, 0.29", "-52.9387, -42.3903, -48.4498, 0.29", "-53.8243, -42.7256, -48.2852, 0.29", "-54.6877, -43.0917, -48.1408, 0.66", "-55.0962, -43.2899, -48.0816, 0.66", "-56.5236, -44.04, -47.8748, 0.29", "-57.1381, -44.375, -47.7946, 0.29", "-57.5803, -44.662, -47.6967, 0.66", "-57.9952, -44.9582, -47.6004, 0.66", "-59.4078, -46.0093, -47.276, 0.29", "-59.9147, -46.3584, -47.1673, 0.52", "-60.4097, -46.6586, -47.0746, 0.52", "-61.7993, -47.3745, -46.7851, 0.22", "-62.4534, -47.6628, -46.6352, 0.59", "-62.875, -47.8282, -46.5171, 0.74", "-63.7029, -48.1007, -46.272, 0.29", "-64.125, -48.2202, -46.1504, 0.29", "-64.6829, -48.3486, -45.9896, 0.96", "-65.245, -48.4186, -45.869, 0.96", "-66.7758, -48.5967, -45.4871, 0.22" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-22.5761, -144.28, 24.5197, 0.29", "-22.2496, -144.304, 25.4223, 0.29", "-21.4772, -144.418, 27.3698, 0.29", "-20.9292, -144.555, 28.7571, 0.59", "-20.2074, -144.883, 30.6895, 0.66", "-19.1895, -145.563, 33.3804, 0.59", "-18.4951, -146.227, 35.1242, 0.29", "-18.0096, -146.867, 36.124, 0.52", "-17.7487, -147.617, 36.4546, 0.66", "-17.4142, -149.277, 36.4855, 0.37", "-17.0417, -151.408, 36.2477, 0.29", "-16.7777, -153.097, 35.9416, 0.29", "-16.5486, -154.773, 35.5561, 0.29", "-16.3225, -156.295, 35.1809, 0.29", "-15.9726, -158.094, 34.7186, 0.29", "-15.5955, -159.63, 34.3181, 0.29", "-9.79461, -169.548, 42.0612, 0.29", "-4.53089, -177.741, 51.9165, 0.29", "3.3338, -186.282, 59.4777, 0.29" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-22.5761, -144.28, 24.5197, 0.74", "-23.1625, -145.077, 24.166, 0.74", "-23.6713, -145.897, 23.8608, 0.52", "-24.0572, -146.592, 23.6392, 0.52", "-24.6577, -147.859, 23.3105, 0.59", "-24.8992, -148.503, 23.2116, 0.96", "-25.0779, -149.199, 23.1425, 1.18", "-25.1208, -149.79, 23.0652, 1.18", "-25.0724, -150.347, 23.0019, 0.96", "-24.8858, -151.161, 22.8702, 0.66", "-24.4566, -152.315, 22.5076, 0.52", "-23.9823, -153.346, 22.1159, 0.52", "-23.3779, -154.435, 21.6044, 0.29", "-23.1067, -154.843, 21.3663, 0.37", "-22.3561, -155.787, 20.6442, 0.29", "-21.5294, -156.636, 19.7021, 0.29", "-21.3959, -165.914, 17.8306, 0.29" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-5.89807, -61.0489, -5.85052, 0.37", "-8.52593, -62.2432, -4.98184, 0.37", "-9.6598, -62.8771, -4.16756, 0.37", "-10.464, -63.374, -3.44581, 0.37", "-11.0067, -63.7207, -2.94434, 0.37", "-11.6822, -64.1699, -2.28101, 0.59", "-12.3347, -64.6175, -1.6307, 0.74", "-12.8053, -64.9659, -1.01579, 0.52", "-13.1596, -65.2342, -0.546615, 0.59", "-13.4829, -65.5157, -0.158458, 0.74", "-14.0634, -65.9992, 0.423057, 0.52", "-14.4439, -66.2899, 0.734953, 0.52", "-14.8131, -66.5389, 0.986309, 0.74", "-15.2336, -66.802, 1.24812, 0.74", "-15.6375, -67.0599, 1.48899, 0.52", "-16.2255, -67.4296, 1.82929, 0.52" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-5.89807, -61.0489, -5.85052, 0.88", "-6.20248, -62.4245, -5.99232, 0.88", "-6.77844, -64.1581, -6.01763, 0.66", "-7.36182, -65.3866, -5.74084, 0.74", "-7.86124, -66.2058, -5.45512, 0.88", "-8.73277, -67.4457, -4.97925, 0.88", "-9.288, -68.1949, -4.69576, 1.03", "-9.967, -69.0148, -4.31987, 1.03", "-11.5124, -70.9267, -3.4157, 1.03", "-12.391, -72.1281, -2.89923, 1.03", "-13.1123, -73.3402, -2.47339, 0.88", "-13.5152, -74.3786, -2.22809, 0.88", "-13.6524, -75.3485, -2.0755, 0.88", "-13.4459, -77.2308, -1.98367, 1.25", "-13.2556, -77.9163, -1.98239, 1.55", "-12.8742, -78.8844, -1.93232, 1.55", "-12.2383, -80.2349, -1.72229, 1.55", "-11.7862, -81.0821, -1.4806, 1.55", "-10.9123, -82.5597, -0.843127, 1.03", "-10.1998, -83.6264, -0.184092, 1.03", "-9.5896, -84.4721, 0.445894, 0.81", "-8.59399, -85.7369, 1.56557, 0.81", "-7.881, -86.5714, 2.39188, 1.03", "-7.17493, -87.3025, 3.15583, 1.03", "-6.35393, -88.0625, 3.94981, 1.03", "-5.66484, -88.6807, 4.50125, 0.88", "-4.59639, -89.691, 5.2292, 0.88", "-4.05593, -90.2294, 5.5292, 0.96", "-3.43206, -90.9205, 5.83351, 0.96", "-2.5846, -91.9678, 6.20775, 1.33", "-2.13565, -92.5939, 6.37547, 1.62", "-1.76395, -93.1605, 6.51156, 1.62" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "4.85278, -23.5033, -4.73297, 0.66", "3.66066, -27.1219, -2.57707, 0.66", "3.24339, -28.2908, -2.01121, 0.88", "2.49174, -30.5953, -1.0737, 1.03", "2.18604, -31.6928, -0.66513, 1.03", "1.96037, -32.6622, -0.308303, 1.03", "1.73541, -33.8636, 0.14868, 0.37", "1.5544, -35.1464, 0.512397, 0.37", "1.54858, -36.4426, 0.929176, 0.59", "1.85677, -37.5869, 1.41102, 0.81", "2.17297, -38.2559, 1.81798, 0.81", "2.54605, -38.8663, 2.32709, 0.52", "2.88882, -39.3733, 2.84026, 0.81", "3.37199, -40.1094, 3.64113, 1.25", "3.53611, -40.4678, 3.99091, 1.69", "3.66467, -41.0791, 4.45409, 1.69", "3.6111, -42.4887, 5.12698, 0.96", "3.45361, -43.3787, 5.36857, 0.66", "3.29285, -44.0647, 5.49236, 0.81", "2.93345, -45.4976, 5.71845, 0.44", "2.6906, -46.6431, 5.9409, 0.44", "2.55597, -47.5548, 6.16363, 0.44", "2.50574, -48.3941, 6.50523, 0.88", "2.53375, -49.5269, 7.27632, 1.25", "2.64466, -50.6155, 8.25722, 0.66", "2.79547, -51.4594, 9.13358, 0.52", "2.89957, -51.955, 9.6586, 0.52", "3.13633, -53.2265, 10.9451, 0.74", "3.32479, -54.3471, 11.963, 1.25", "3.41023, -54.8209, 12.3232, 1.25", "3.57721, -55.6264, 12.8217, 0.52", "3.83741, -56.657, 13.3108, 0.44", "4.25015, -58.0113, 13.8006, 0.37", "4.55714, -58.8055, 14.004, 0.37", "4.91883, -59.6021, 14.1699, 0.96", "5.21126, -60.1956, 14.2904, 1.33", "6.11678, -61.8198, 14.6558, 0.29", "6.46229, -62.3495, 14.7955, 0.29", "6.82559, -62.8307, 14.9355, 0.29", "6.96056, -63.0095, 14.989, 0.44", "8.61354, -72.7004, 19.0781, 0.44", "11.9993, -82.0137, 22.9722, 0.44", "14.9279, -91.9405, 25.4717, 0.44", "18.0796, -101.597, 28.6615, 0.44", "20.4687, -111.326, 32.2684, 0.44", "22.9374, -121.317, 34.9986, 0.44" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "4.85278, -23.5033, -4.73297, 1.03", "4.83262, -24.812, -5.0437, 1.03", "4.93591, -26.1252, -5.2898, 1.03", "5.1056, -27.0842, -5.42269, 0.96", "5.33266, -27.9963, -5.51668, 0.96", "5.61513, -28.8838, -5.57783, 0.96", "5.83886, -29.4867, -5.57806, 1.18", "6.29538, -30.3212, -5.4221, 1.47", "6.75726, -30.9985, -5.17771, 2.21", "6.94812, -31.2673, -5.04772, 2.21", "7.22404, -31.708, -4.79953, 1.99", "7.65867, -32.5793, -4.28833, 1.33", "7.99612, -33.5446, -3.76061, 0.88", "8.15391, -34.3189, -3.38057, 0.74", "8.19537, -35.0442, -3.09753, 0.74", "8.15297, -35.9066, -2.84716, 1.33", "8.0916, -36.4266, -2.74557, 1.62", "8.00591, -36.991, -2.6858, 1.92", "7.92151, -37.5919, -2.67093, 1.69", "7.83798, -38.7337, -2.68987, 1.33", "7.85771, -39.8897, -2.73683, 1.03", "7.94904, -40.685, -2.78033, 0.88", "8.10909, -41.4212, -2.81599, 1.03", "8.40242, -42.3844, -2.85784, 1.03", "8.77717, -43.3499, -2.90376, 1.03", "9.14854, -44.1686, -2.96693, 1.33", "9.43573, -44.7807, -3.05326, 1.69", "9.7581, -45.5188, -3.21095, 1.47", "9.95044, -46.0312, -3.36396, 1.03", "10.1796, -46.8054, -3.65372, 0.96", "10.3408, -47.5054, -3.97089, 0.96", "10.4855, -48.3577, -4.39772, 1.4", "10.5983, -49.2603, -4.86044, 1.4", "10.6891, -50.0486, -5.26043, 1.55", "10.7512, -50.48, -5.45559, 1.77", "10.9032, -51.3155, -5.77066, 0.96", "11.0824, -52.0745, -5.97467, 0.66", "11.2995, -52.8, -6.05133, 0.66", "11.5824, -53.5112, -6.0065, 0.96", "11.9463, -54.2251, -5.8616, 1.11", "12.1441, -54.5402, -5.76786, 1.4", "12.3289, -54.7917, -5.67844, 1.4", "12.7183, -55.3146, -5.49219, 1.4", "13.1812, -55.9913, -5.29522, 0.66", "13.3899, -56.3486, -5.23744, 0.52", "13.6296, -56.8508, -5.21367, 0.52", "13.9336, -57.6668, -5.21051, 0.81", "14.183, -58.5769, -5.20303, 1.03", "14.295, -59.1746, -5.21181, 1.03", "14.3759, -59.978, -5.22558, 1.03", "14.4266, -60.772, -5.28833, 1.03", "14.4611, -61.5929, -5.39152, 0.88", "14.5226, -62.5893, -5.58562, 1.03", "14.6143, -63.4742, -5.80588, 0.52", "14.7519, -64.308, -6.06416, 0.52", "15.0237, -65.5144, -6.54583, 0.88", "15.1615, -66.0032, -6.78515, 1.11", "15.4032, -66.7725, -7.21867, 0.59", "15.5034, -67.0984, -7.40245, 0.59", "15.6765, -67.838, -7.72579, 0.52", "15.7562, -68.6358, -7.93648, 0.52", "15.6796, -69.2927, -7.95715, 1.11", "15.5175, -69.8499, -7.90837, 1.25", "15.1629, -70.6943, -7.75776, 1.18", "14.7686, -71.5208, -7.57132, 0.52", "14.4767, -72.0985, -7.40069, 0.52", "14.1154, -72.8926, -7.1636, 0.52", "14.005, -73.1913, -7.09479, 0.81", "13.8633, -73.7361, -7.02621, 0.74", "13.7394, -74.4316, -7.03186, 0.74", "13.6356, -75.1154, -7.10702, 1.03", "13.4887, -76.0106, -7.29129, 0.66", "13.3656, -76.5945, -7.45739, 0.52", "13.1658, -77.2595, -7.70545, 1.11", "12.965, -77.8054, -7.99016, 1.11", "12.6583, -78.568, -8.47746, 0.81", "12.3466, -79.3562, -9.05546, 0.66", "12.1425, -79.9075, -9.4762, 0.88", "11.9269, -80.6605, -10.0688, 0.66", "11.7394, -81.6508, -10.9249, 0.59", "11.6816, -82.2982, -11.525, 0.88", "11.675, -82.8642, -12.0707, 1.18", "11.6812, -83.2744, -12.4664, 0.96", "11.6974, -83.8174, -12.9886, 0.96", "11.7094, -84.814, -13.8811, 0.52", "11.6958, -85.1447, -14.1495, 0.81", "11.6527, -85.795, -14.6339, 0.66", "11.5971, -86.2988, -14.9241, 0.66", "11.5032, -86.9332, -15.1666, 0.96", "11.3329, -87.7384, -15.2034, 0.88", "11.1666, -88.4597, -15.0765, 0.88", "11.0155, -89.0924, -14.9243, 0.37", "10.7544, -90.2549, -14.6012, 1.03", "10.6199, -90.8655, -14.4452, 1.03", "10.2866, -92.2093, -14.154, 0.44", "10.0644, -93.1751, -14.0477, 0.44", "9.98952, -93.7279, -14.0996, 0.74", "10.0149, -94.2873, -14.313, 0.74", "10.1731, -95.0509, -14.7759, 0.44", "10.3605, -95.6605, -15.1999, 0.66", "10.6991, -96.5365, -15.8578, 0.44", "11.2207, -97.7922, -16.7933, 0.88", "11.7955, -99.1766, -17.7597, 0.52", "12.0947, -99.8843, -18.2335, 0.74", "12.5047, -100.838, -18.8377, 1.33", "12.7229, -101.383, -19.1573, 1.33", "13.0823, -102.507, -19.7412, 0.74", "13.2407, -103.227, -20.0485, 0.66", "13.3605, -104.249, -20.4317, 0.66", "13.3796, -104.954, -20.7087, 0.81", "13.3274, -105.666, -21.0245, 0.59", "13.2387, -106.14, -21.2426, 1.18", "13.1746, -106.358, -21.3502, 1.18", "12.9039, -107.125, -21.7336, 0.44", "12.6413, -107.799, -22.0079, 0.44", "12.4336, -108.372, -22.1926, 1.03", "12.3187, -108.789, -22.2733, 1.4", "12.1539, -109.698, -22.2596, 0.52", "12.0825, -110.321, -22.1962, 0.52", "12.0655, -111.16, -21.9928, 0.74", "12.074, -111.47, -21.8679, 0.74", "12.0856, -112.103, -21.4971, 0.59", "12.0989, -112.835, -20.9264, 0.96" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "4.85278, -23.5033, -4.73297, 0.88", "9.98833, -23.4547, -8.16055, 0.88", "11.4512, -23.3917, -8.98677, 0.88", "12.9074, -23.3203, -9.66612, 1.03", "13.889, -23.27, -10.0424, 1.33", "14.7904, -23.2309, -10.3481, 1.62", "16.09, -23.1952, -10.7518, 1.84", "17.1953, -23.104, -10.9495, 1.47", "18.5186, -23.0067, -11.3631, 1.18", "19.5001, -22.9049, -12.0893, 0.81", "20.5372, -22.7587, -13.203, 0.81", "21.1906, -22.6813, -14.0136, 1.11", "22.5696, -22.6063, -15.911, 1.33", "24.015, -22.5919, -18.0067, 1.77", "27.3008, -22.7083, -22.8594, 1.47", "28.3594, -22.7828, -24.3756, 1.11", "29.4428, -22.8753, -25.82, 1.11", "30.9036, -23.0033, -27.5166, 0.81", "31.7942, -23.0914, -28.3391, 0.96", "33.2104, -23.1874, -29.2622, 0.88", "34.3758, -23.1013, -29.8251, 0.74", "35.2743, -22.8511, -30.3035, 0.59", "36.4408, -22.2821, -31.0721, 1.03", "37.3117, -21.7437, -31.6834, 1.55", "38.1137, -21.214, -32.259, 1.69", "40.5129, -19.6119, -34.0594, 1.69", "41.254, -19.1386, -34.6423, 1.69", "43.1107, -18.0495, -36.0883, 0.88", "44.162, -17.5281, -36.8512, 0.81", "45.4172, -17.0488, -37.6304, 1.11", "47.0487, -16.6298, -38.4718, 1.18", "48.5254, -16.4731, -39.0383, 0.59", "49.1833, -16.4941, -39.2611, 0.59", "50.7751, -16.8183, -39.665, 0.96", "51.9081, -17.2453, -39.9281, 1.18", "52.8662, -17.7615, -40.1004, 1.18", "53.8367, -18.3913, -40.1929, 1.4", "54.9492, -19.1782, -40.2468, 1.4", "55.9822, -19.8836, -40.2785, 1.11", "56.7138, -20.3142, -40.2792, 1.11", "57.6194, -20.6998, -40.2626, 1.03", "58.8098, -21.0302, -40.2169, 1.03", "59.8506, -21.1863, -40.1568, 1.03", "61.0533, -21.2485, -40.0669, 0.96", "62.7144, -21.202, -39.9366, 0.88", "64.5223, -21.0519, -39.7489, 0.88", "65.7212, -20.889, -39.598, 1.03", "66.664, -20.7312, -39.4911, 1.11", "67.44, -20.5968, -39.4346, 1.18", "68.1447, -20.5077, -39.4715, 1.18", "69.5684, -20.4749, -39.8395, 0.81", "70.5899, -20.5978, -40.3198, 0.74", "71.9259, -20.8927, -41.1153, 1.18", "72.945, -21.1725, -41.7941, 1.4", "75.0189, -21.7869, -43.3089, 1.18", "76.6157, -22.2449, -44.5542, 0.88", "77.8111, -22.537, -45.5657, 0.74", "79.0226, -22.7572, -46.5765, 0.74", "80.1298, -22.8438, -47.4306, 1.11", "81.3144, -22.8026, -48.2907, 1.4", "82.4946, -22.6894, -49.1018, 1.4", "84.1388, -22.5396, -50.2541, 1.11", "85.1047, -22.4942, -50.9737, 0.74", "86.32, -22.5633, -51.9372, 0.66", "87.766, -22.8625, -53.1449, 0.81", "89.2186, -23.3963, -54.3059, 0.74", "90.4265, -23.9729, -55.2564, 1.25", "91.0951, -24.3232, -55.7501, 1.69", "91.9662, -24.7443, -56.3491, 1.69", "92.8712, -25.0616, -56.8519, 1.4", "94.2716, -25.2734, -57.4144, 0.88", "96.3093, -25.1718, -58.0228, 0.81", "97.2329, -25.0391, -58.2481, 0.81", "98.5152, -24.8388, -58.4903, 0.81", "100.154, -24.5934, -58.6904, 0.81", "101.169, -24.4814, -58.7481, 0.81", "102.594, -24.437, -58.7575, 0.81", "103.539, -24.5445, -58.6975, 0.96", "104.982, -24.9621, -58.6518, 0.96", "105.961, -25.4124, -58.7216, 1.18", "106.836, -25.9233, -58.9043, 1.47", "107.733, -26.4934, -59.163, 1.47", "109.044, -27.3331, -59.5971, 0.74", "110.575, -28.2463, -60.1383, 0.74", "112.46, -29.2336, -60.8482, 0.66", "114.229, -30.0453, -61.57, 0.74", "115.338, -30.4635, -62.0264, 0.81", "116.612, -30.8133, -62.5272, 0.81", "117.261, -30.9156, -62.7579, 1.11", "118.821, -30.9707, -63.2684, 1.25", "119.515, -30.9145, -63.5358, 1.62", "120.29, -30.7743, -63.9543, 1.62", "121.815, -30.427, -64.9454, 0.59", "122.771, -30.1965, -65.6402, 0.59", "124.209, -29.8676, -66.7215, 0.88", "126.14, -29.4713, -68.1859, 1.4", "128.084, -29.1467, -69.6078, 0.74", "129.228, -29.009, -70.4054, 0.59", "130.195, -28.9504, -71.0098, 0.81", "131.045, -28.9668, -71.4002, 0.81", "131.842, -29.0419, -71.588, 0.96", "132.651, -29.1287, -71.6428, 0.96", "133.613, -29.211, -71.6509, 0.59", "135.116, -29.2646, -71.6875, 0.59", "136.571, -29.2342, -71.7243, 0.66", "137.424, -29.1673, -71.8178, 1.03", "138.825, -29.0083, -72.0538, 1.03", "140.242, -28.7401, -72.6446, 0.59", "140.961, -28.5451, -73.0812, 0.59", "141.915, -28.2428, -73.7827, 0.59", "143.372, -27.8193, -74.9551, 1.11", "144.024, -27.6753, -75.4878, 1.33", "147.674, -27.087, -78.3399, 1.03", "148.329, -26.9995, -78.8066, 1.4", "149.619, -26.8447, -79.6175, 0.81", "150.914, -26.6956, -80.3029, 0.74", "152.543, -26.5111, -80.958, 0.59", "153.618, -26.3871, -81.2796, 0.59", "155.324, -26.1992, -81.5425, 0.59", "157.346, -25.8908, -81.8469, 0.88", "158.065, -25.7085, -81.9447, 1.25", "158.705, -25.4783, -82.023, 1.55", "159.656, -25.0694, -82.1513, 1.55", "160.429, -24.7242, -82.2761, 1.33", "161.385, -24.2948, -82.4377, 0.66", "162.606, -23.7709, -82.6401, 0.66", "163.427, -23.4534, -82.8508, 0.66", "164.941, -22.8914, -83.4135, 0.66", "165.629, -22.72, -83.9292, 0.66", "166.056, -22.6535, -84.3425, 0.96", "166.567, -22.6098, -84.8914, 0.96", "168.102, -22.5929, -86.5883, 0.74", "169.021, -22.6244, -87.5948, 1.62", "172.676, -22.8313, -91.4314, 0.66", "173.228, -22.8502, -91.9825, 0.66", "174.07, -22.857, -92.7381, 1.11", "175.162, -22.8481, -93.5955, 1.11", "176.262, -22.7971, -94.2745, 0.52", "177.337, -22.6788, -94.7549, 0.52", "178.69, -22.3817, -95.1562, 1.25", "179.735, -22.1062, -95.4728, 0.88", "181.728, -21.4622, -96.0772, 0.44", "182.866, -21.0219, -96.4024, 0.44", "184.553, -20.2836, -96.8535, 0.52", "185.668, -19.7481, -97.1343, 0.88", "186.221, -19.4694, -97.2611, 1.11", "186.699, -19.1978, -97.4256, 1.11", "187.091, -18.9419, -97.6229, 1.11", "188.41, -18.0116, -98.597, 0.52", "188.954, -17.635, -99.1607, 0.52", "189.72, -17.1307, -100.061, 0.81", "191.523, -16.0343, -102.238, 0.81", "192.374, -15.5446, -103.24, 1.11", "192.744, -15.347, -103.631, 1.92", "194.873, -14.3456, -105.484, 0.59", "195.14, -14.2412, -105.658, 0.59", "196.091, -13.9601, -106.017, 0.88", "197.292, -13.7104, -106.199, 0.44", "199.246, -13.3985, -106.386, 0.44", "200.782, -13.2045, -106.489, 0.74", "201.651, -13.1342, -106.576, 0.74", "202.967, -13.1123, -106.919, 0.52", "203.771, -13.1623, -107.297, 0.52", "205.002, -13.3196, -108.106, 0.59", "205.475, -13.3819, -108.469, 0.59", "207.556, -13.5741, -110.172, 0.59", "208.93, -13.6152, -111.292, 0.81", "210.222, -13.557, -112.344, 1.4", "210.908, -13.4461, -112.854, 1.55", "212.477, -12.9317, -113.81, 0.44", "213.136, -12.5918, -114.098, 0.88", "213.933, -12.0742, -114.27, 0.88", "214.797, -11.5049, -114.434, 0.59", "216.135, -10.6824, -114.705, 0.59", "217.049, -10.2256, -115.012, 0.81", "218.102, -9.83053, -115.482, 0.81", "219.513, -9.40585, -116.273, 0.52", "221.134, -8.96962, -117.372, 0.74", "221.683, -8.81744, -117.913, 0.74", "222.922, -8.36328, -119.671, 0.37", "223.45, -8.08066, -120.647, 0.37", "224.158, -7.5439, -122.249, 0.37", "224.696, -6.97567, -123.677, 0.59", "226.13, -5.21229, -127.589, 0.88", "226.807, -4.36596, -129.366, 0.52", "227.067, -4.09249, -129.99, 0.52", "227.684, -3.62432, -131.348, 0.52", "228.221, -3.32356, -132.336, 0.81", "228.96, -3.00236, -133.459, 0.59", "229.624, -2.78076, -134.303, 0.59", "231.853, -2.2161, -137.0, 1.18", "234.503, -1.68014, -140.388, 0.74", "235.147, -1.57772, -141.286, 0.74", "235.74, -1.49691, -142.198, 0.88" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "-53.702, 134.376, -35.4118, 0.29", "-54.9092, 134.231, -35.8329, 0.29", "-55.8799, 134.263, -36.1971, 0.29", "-56.3688, 134.416, -36.4667, 0.59", "-56.9139, 134.727, -36.8248, 0.59", "-57.3561, 135.047, -37.1221, 0.59", "-57.8312, 135.435, -37.4283, 0.44", "-58.1923, 135.886, -37.6871, 0.59", "-58.8285, 136.8, -38.2562, 0.37", "-59.1353, 137.24, -38.5628, 0.29", "-59.4531, 137.641, -38.8656, 0.59", "-59.8052, 138.047, -39.1841, 0.59", "-60.5764, 138.901, -39.8649, 0.29", "-61.2863, 139.723, -40.5266, 0.29", "-61.6102, 140.12, -40.8661, 0.29", "-62.2113, 140.888, -41.6291, 0.29", "-62.5777, 141.372, -42.2039, 0.29", "-62.9553, 141.881, -42.8752, 0.52", "-63.2934, 142.354, -43.5179, 0.66", "-63.7812, 143.105, -44.508, 0.44", "-64.1527, 143.718, -45.3783, 0.59", "-64.5861, 144.437, -46.5929, 0.96", "-64.7624, 144.653, -47.0499, 0.52" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "-53.702, 134.376, -35.4118, 0.66", "-52.5012, 134.472, -35.6257, 0.66", "-51.5418, 134.549, -35.7965, 0.29", "-50.8453, 134.605, -35.9205, 0.44", "-49.9868, 134.674, -36.0733, 0.44" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "-67.4326, 139.284, -26.7443, 0.29", "-67.8741, 139.766, -27.1799, 0.29", "-68.4404, 140.322, -27.7336, 0.59", "-68.8122, 140.689, -28.105, 0.44", "-69.3477, 141.257, -28.6518, 0.88", "-69.586, 141.546, -28.9168, 1.03", "-70.1185, 142.283, -29.5541, 0.52", "-70.2915, 142.552, -29.7852, 0.44", "-70.6257, 143.134, -30.231, 0.66", "-70.8756, 143.611, -30.5691, 0.88", "-71.3442, 144.546, -31.1619, 0.59", "-71.6536, 145.165, -31.5238, 0.74", "-71.9674, 145.795, -31.8612, 0.74", "-72.4104, 146.625, -32.2992, 0.37", "-72.6184, 146.974, -32.4816, 0.37", "-73.1156, 147.711, -32.8529, 0.66", "-73.4673, 148.15, -33.0596, 0.66", "-73.8418, 148.54, -33.2342, 0.52", "-74.3902, 149.02, -33.4296, 0.88", "-74.7681, 149.299, -33.5279, 0.88", "-75.3279, 149.65, -33.6176, 0.52", "-76.004, 150.023, -33.6723, 0.52", "-76.8424, 150.474, -33.6997, 0.88", "-77.3828, 150.776, -33.7013, 0.88", "-78.0529, 151.164, -33.6841, 0.52", "-78.625, 151.508, -33.6634, 0.44", "-79.2755, 151.906, -33.6418, 0.37", "-79.9107, 152.33, -33.6202, 0.37", "-80.5419, 152.795, -33.6071, 0.29", "-81.5672, 153.612, -33.6073, 0.29", "-82.0458, 154.005, -33.6138, 0.29", "-82.5976, 154.446, -33.6222, 1.11" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "-67.4326, 139.284, -26.7443, 0.29", "-68.8367, 138.437, -24.5835, 0.29", "-69.6007, 137.976, -23.4076, 0.29", "-70.1421, 137.65, -22.5744, 0.22", "-70.8328, 137.233, -21.5115, 0.22", "-71.6013, 136.77, -20.3288, 0.22" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "146.939, 56.4954, 93.9653, 0.29", "147.749, 63.0483, 100.708, 0.29", "149.134, 68.7509, 108.1, 0.29", "151.539, 74.1173, 115.481, 0.29", "153.075, 78.1754, 123.861, 0.29" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "146.939, 56.4954, 93.9653, 0.29", "156.877, 55.1663, 98.8359, 0.29", "166.554, 55.8686, 104.323, 0.29", "175.274, 58.3339, 110.813, 0.29" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "77.5472, 39.409, -7.81242, 0.37", "77.8795, 40.0748, -7.37542, 0.37", "78.3411, 41.0454, -6.66994, 0.37", "78.6756, 41.7486, -6.15887, 0.22", "79.3787, 43.2269, -5.08439, 0.22", "79.9147, 44.3536, -4.26545, 0.66", "80.5601, 45.7105, -3.27918, 1.11", "80.7112, 46.0389, -3.00653, 1.11", "84.8128, 54.9998, 1.79526, 1.11", "89.4352, 63.8969, 6.22829, 1.11", "94.8432, 72.0624, 11.1534, 1.11", "100.47, 79.4361, 16.9971, 1.11", "106.803, 87.5181, 20.8371, 1.11", "113.398, 95.3082, 24.8374, 1.11" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "77.5472, 39.409, -7.81242, 0.44", "78.547, 39.6073, -7.87409, 0.44", "79.6167, 39.767, -7.94346, 0.44", "80.7775, 39.8915, -7.94951, 0.74", "81.4882, 39.9502, -7.92994, 1.03", "82.1575, 39.9946, -7.8935, 1.03", "82.6832, 40.0292, -7.88177, 1.03", "83.5564, 40.102, -7.94192, 0.66", "84.739, 40.2693, -8.1366, 0.66", "85.1462, 40.3785, -8.25877, 0.81", "85.754, 40.633, -8.50144, 0.44", "86.9747, 41.3181, -9.0745, 0.44", "88.4161, 42.2951, -9.80148, 0.37", "88.9166, 42.681, -10.0819, 0.37", "89.6852, 43.3065, -10.5383, 0.37", "90.6151, 44.0773, -11.0538, 0.66", "91.1649, 44.5363, -11.3188, 0.66", "91.9586, 45.1593, -11.5816, 0.37", "92.4452, 45.4974, -11.684, 0.37", "93.0653, 45.9115, -11.8029, 0.59", "93.6136, 46.2887, -11.9239, 0.59", "94.1274, 46.6755, -12.1336, 0.44", "94.9819, 47.2745, -12.5672, 0.66", "95.1364, 47.3711, -12.6526, 0.96", "95.7285, 47.6674, -12.9719, 0.96", "96.5931, 47.9929, -13.4404, 1.11", "98.5978, 48.5634, -14.4544, 0.44", "99.7298, 48.8195, -14.9758, 0.44", "100.621, 48.9915, -15.3397, 0.37", "101.719, 49.2134, -15.7769, 0.37", "102.39, 49.3614, -16.0212, 0.29", "103.329, 49.6339, -16.322, 0.22", "103.965, 49.963, -16.5277, 0.59", "104.291, 50.2757, -16.6767, 0.59", "105.201, 51.3642, -17.2803, 0.29", "105.58, 51.8385, -17.5649, 0.37", "106.028, 52.3663, -17.9102, 0.52", "106.517, 52.8323, -18.2973, 0.74", "107.185, 53.3781, -18.9593, 0.96", "108.329, 54.276, -20.3616, 0.29", "108.751, 54.6384, -20.9923, 0.52", "108.929, 54.8226, -21.3209, 0.81", "109.48, 55.5442, -22.5432, 1.11", "110.418, 57.0759, -25.0165, 0.81", "110.801, 57.8699, -26.1908, 0.96", "111.186, 58.8636, -27.5026, 0.66", "111.475, 59.6603, -28.4722, 0.52", "111.794, 60.458, -29.328, 0.52", "111.956, 60.7799, -29.5943, 0.74", "112.466, 61.3516, -29.9293, 0.74", "112.822, 61.6196, -30.0758, 0.96", "113.386, 61.92, -30.2772, 0.96", "114.293, 62.3645, -30.6912, 0.74", "115.17, 62.8364, -31.182, 0.44", "116.099, 63.4924, -31.8851, 0.44", "116.438, 63.8079, -32.2113, 0.96", "117.011, 64.5462, -32.9659, 1.18", "117.747, 65.8306, -34.2545, 0.66", "117.989, 66.3925, -34.8203, 0.66", "118.379, 67.5522, -36.0153, 0.59", "118.523, 68.0115, -36.4581, 0.52", "118.953, 69.2636, -37.5869, 0.52", "119.081, 69.6292, -37.8693, 0.96", "119.375, 70.3823, -38.3745, 0.96", "119.961, 71.7981, -39.1963, 0.59", "120.492, 73.0491, -39.7746, 0.59", "120.836, 73.8629, -40.0992, 0.88", "121.356, 75.046, -40.4666, 0.74", "121.833, 75.9902, -40.7378, 0.74", "122.419, 76.9304, -40.9683, 0.88", "122.801, 77.3828, -41.0929, 0.88", "123.517, 78.02, -41.3868, 0.37", "124.269, 78.5695, -41.7386, 0.37", "125.451, 79.2826, -42.3355, 0.37", "126.271, 79.7471, -42.8039, 0.37", "127.218, 80.2721, -43.4057, 0.37", "127.789, 80.6085, -43.7734, 0.59", "128.5, 81.0547, -44.2178, 0.74", "128.976, 81.3883, -44.5195, 0.74", "129.871, 82.1151, -45.114, 0.44", "130.35, 82.5048, -45.4192, 0.37", "131.785, 83.4943, -46.165, 0.37", "132.476, 83.8746, -46.4728, 0.74", "132.847, 84.0319, -46.6187, 0.74" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "98.8019, 71.8783, 12.9783, 0.29", "104.911, 78.2322, 16.2779, 0.29", "111.147, 85.1386, 17.6845, 0.29" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "98.8019, 71.8783, 12.9783, 0.29", "106.137, 80.3965, 17.0837, 0.29", "113.761, 88.025, 22.2685, 0.29" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-21.3959, -165.914, 17.8306, 0.29", "-18.8762, -175.019, 15.5244, 0.29", "-17.4375, -184.596, 14.6516, 0.29", "-16.5787, -194.024, 12.4261, 0.29", "-16.7755, -203.704, 11.5186, 0.29", "-17.8183, -213.336, 10.6884, 0.29" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-21.3959, -165.914, 17.8306, 0.29", "-22.4624, -171.184, 15.0229, 0.29" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-1.76395, -93.1605, 6.51156, 0.37", "-3.27244, -94.6485, 5.20582, 0.37", "-4.17457, -95.4299, 4.56675, 0.37", "-5.05694, -96.1002, 4.01589, 0.44", "-6.11211, -96.8218, 3.43457, 0.74", "-7.16087, -97.4809, 2.9248, 0.59", "-8.2489, -98.089, 2.47041, 0.59", "-8.89477, -98.3245, 2.31346, 0.74", "-9.95942, -98.5592, 2.15472, 0.88", "-10.6251, -98.6368, 2.11604, 1.18", "-11.2936, -98.6583, 2.12163, 0.59", "-12.3079, -98.6366, 2.15958, 0.44", "-13.3133, -98.5977, 2.19313, 0.52", "-13.7801, -98.5962, 2.19507, 0.74", "-14.5791, -98.6951, 2.19435, 0.74", "-15.1585, -98.8712, 2.16057, 0.59", "-15.7526, -99.1798, 2.09815, 0.59", "-16.5304, -99.7743, 1.98985, 0.59", "-17.3513, -100.608, 1.87122, 0.44", "-18.2768, -101.727, 1.75278, 0.37", "-18.805, -102.486, 1.69644, 1.03", "-19.1547, -103.063, 1.65733, 1.03", "-19.4323, -103.596, 1.62469, 0.96", "-19.8994, -104.709, 1.57225, 0.66", "-20.2516, -105.715, 1.52731, 0.66", "-20.5962, -106.867, 1.45172, 0.88", "-20.7776, -107.577, 1.39818, 1.03", "-20.9923, -108.586, 1.299, 0.88", "-21.2243, -109.885, 1.13793, 0.52", "-21.3777, -110.901, 0.984781, 0.52", "-21.4851, -111.672, 0.846171, 0.96", "-21.5606, -112.175, 0.745793, 0.96", "-21.8016, -113.405, 0.475115, 0.59", "-22.0577, -114.38, 0.246663, 0.66", "-22.3179, -115.103, 0.0664267, 0.81", "-22.7006, -115.978, -0.17141, 0.81", "-22.9541, -116.463, -0.315194, 0.81", "-23.452, -117.341, -0.648388, 0.44", "-23.717, -117.799, -0.856824, 0.81", "-24.0676, -118.46, -1.20596, 0.81", "-24.486, -119.408, -1.74489, 0.52", "-24.7297, -120.182, -2.20586, 0.52", "-25.0118, -121.607, -3.07028, 0.74", "-25.0915, -122.307, -3.48914, 1.11", "-25.1534, -122.955, -3.84961, 1.11", "-25.2393, -123.78, -4.25637, 0.96", "-25.3805, -124.706, -4.65018, 0.59", "-25.6435, -125.846, -5.06039, 0.44", "-26.1028, -127.1, -5.41579, 0.44", "-26.5554, -128.035, -5.64721, 0.44", "-27.0419, -128.907, -5.82581, 0.74", "-27.4067, -129.547, -5.94174, 0.74", "-27.7573, -130.168, -6.033, 0.74", "-28.3661, -131.28, -6.16075, 0.66", "-28.801, -132.111, -6.23473, 0.44", "-29.3503, -133.186, -6.32134, 0.44", "-30.188, -134.682, -6.38906, 0.44", "-30.6474, -135.372, -6.37942, 0.88", "-31.1682, -136.011, -6.31942, 1.18", "-31.5647, -136.42, -6.23832, 1.18", "-32.057, -136.861, -6.11432, 1.03", "-33.4499, -137.928, -5.7383, 0.66", "-34.7244, -138.772, -5.36714, 0.66", "-35.805, -139.462, -5.04671, 1.25", "-36.3786, -139.832, -4.87427, 1.55", "-37.0721, -140.291, -4.66649, 1.03" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-1.76395, -93.1605, 6.51156, 0.74", "-2.38078, -94.2121, 5.69671, 0.74", "-3.10471, -95.4171, 4.74421, 0.74", "-3.4868, -96.1433, 4.26139, 0.74", "-3.85625, -96.9618, 3.78985, 0.81", "-4.55089, -98.8535, 2.88553, 0.52", "-4.98282, -100.37, 2.28142, 0.74", "-5.1383, -101.182, 2.03142, 0.74", "-5.0517, -103.016, 1.81907, 0.74", "-4.75232, -103.94, 1.85556, 0.81", "-4.11692, -105.075, 2.0529, 0.66", "-3.71273, -105.641, 2.20454, 1.11", "-3.28845, -106.193, 2.33924, 1.11", "-2.75057, -106.891, 2.43561, 0.81", "-2.08246, -107.831, 2.41231, 0.81", "-1.48975, -108.742, 2.32999, 0.96", "-0.970917, -109.589, 2.22848, 0.88", "-0.355751, -110.631, 2.11284, 0.96", "0.065708, -111.404, 2.01357, 1.11", "0.519796, -112.365, 1.84907, 1.11", "0.874951, -113.263, 1.65796, 0.74", "1.3045, -114.657, 1.32672, 0.66", "1.47987, -115.384, 1.14635, 0.66", "1.76034, -117.065, 0.748905, 0.66", "1.89568, -118.825, 0.354444, 0.59", "1.88099, -119.842, 0.126048, 0.96", "1.75969, -121.104, -0.160802, 1.18", "1.5982, -122.043, -0.3604, 1.03", "1.36632, -123.147, -0.57285, 0.88", "1.0699, -124.58, -0.794096, 0.74", "0.87015, -125.833, -0.874805, 0.59", "0.733608, -126.897, -0.869757, 0.59", "0.623453, -127.784, -0.791947, 1.4", "0.52168, -128.439, -0.679558, 1.4", "0.258096, -130.119, -0.243966, 0.88", "-0.00855356, -132.103, 0.50439, 0.66", "-0.120107, -132.937, 0.881917, 0.88", "-0.269701, -133.998, 1.39754, 0.88", "-0.531706, -135.649, 2.20996, 0.59", "-0.741595, -136.701, 2.714, 0.81", "-1.16944, -138.436, 3.48916, 0.81", "-1.41127, -139.327, 3.80033, 1.11", "-1.60217, -140.057, 4.00892, 1.11", "-1.84886, -141.104, 4.20708, 0.52", "-2.04146, -142.093, 4.32318, 0.74", "-2.20003, -142.973, 4.37551, 1.03", "-2.28894, -143.709, 4.36857, 1.25", "-2.30601, -144.438, 4.4027, 1.33", "-2.21718, -145.643, 4.61196, 1.03", "-1.98565, -146.778, 4.93115, 0.74", "-1.67561, -147.704, 5.26466, 0.44", "-1.28424, -148.55, 5.62349, 0.29", "-0.560487, -149.719, 6.20542, 0.29", "0.471356, -151.011, 6.96026, 0.29", "1.09241, -151.596, 7.36439, 0.29", "1.69159, -152.01, 7.68018, 0.88", "2.1967, -152.307, 7.91703, 0.88", "3.03822, -152.764, 8.27308, 0.52", "3.42634, -152.968, 8.38773, 0.52", "4.12878, -153.371, 8.57683, 0.52", "4.66256, -153.808, 8.77729, 0.52", "5.34981, -154.611, 9.02328, 0.52", "5.67008, -155.119, 9.1132, 0.88", "6.0082, -155.745, 9.15843, 0.88", "6.42559, -156.508, 9.13041, 1.11", "6.86879, -157.219, 9.07164, 0.66", "7.74862, -158.352, 8.90732, 0.66", "8.1846, -158.759, 8.83548, 0.66", "8.96492, -159.343, 8.75159, 0.66", "9.60197, -159.761, 8.71389, 0.52", "10.6867, -160.469, 8.63481, 0.66", "11.035, -160.702, 8.64478, 0.66", "11.796, -161.231, 8.80497, 0.44", "12.4253, -161.695, 9.04304, 0.44", "13.2952, -162.401, 9.51482, 0.52", "14.3254, -163.312, 10.2492, 0.66", "15.204, -164.145, 10.9617, 0.44", "16.144, -165.056, 11.7897, 0.81", "17.0214, -165.902, 12.536, 0.52", "17.6013, -166.457, 12.9859, 0.74", "18.3095, -167.129, 13.4574, 0.29", "18.6887, -167.494, 13.6311, 0.52", "19.2595, -168.058, 13.7007, 0.59", "20.3507, -169.181, 13.7093, 0.37", "21.1408, -169.999, 13.6293, 0.66", "21.5912, -170.46, 13.5581, 1.03", "22.3136, -171.192, 13.4139, 1.03", "23.1107, -172.005, 13.2957, 0.74", "24.3968, -173.313, 13.2409, 0.52" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "12.0989, -112.835, -20.9264, 0.44", "11.9199, -114.082, -20.9925, 0.44", "11.787, -114.953, -21.0415, 0.81", "11.6754, -115.62, -21.0842, 1.18", "11.5199, -116.511, -21.1487, 0.74", "11.3581, -117.437, -21.2213, 0.44", "11.2152, -118.252, -21.2893, 0.96", "11.0661, -119.094, -21.366, 0.96", "10.9219, -119.894, -21.4461, 1.18", "10.6663, -121.082, -21.5878, 0.74", "10.3818, -122.148, -21.7747, 0.66", "10.1026, -123.006, -21.9803, 0.66", "9.71894, -124.069, -22.3141, 0.66", "9.51964, -124.588, -22.513, 1.03", "9.2338, -125.303, -22.8311, 0.81", "8.83118, -126.434, -23.4237, 0.52", "8.64928, -127.119, -23.7668, 0.44", "8.51269, -127.997, -24.1273, 0.37", "8.4801, -128.508, -24.2789, 0.66", "8.45604, -129.079, -24.3885, 0.66", "8.43385, -130.584, -24.5984, 0.44", "8.38559, -132.102, -24.7431, 0.44", "8.28738, -133.312, -24.8457, 0.66", "8.1259, -134.373, -24.9411, 0.81", "7.86099, -135.515, -25.0953, 0.96", "7.43794, -136.7, -25.3268, 1.11", "7.00031, -137.607, -25.5604, 0.81", "6.58201, -138.395, -25.8365, 0.88", "6.26693, -139.005, -26.0834, 0.66", "5.83614, -139.862, -26.4599, 0.29", "5.30377, -140.96, -26.9508, 0.29", "4.98933, -141.597, -27.224, 0.52", "4.50185, -142.584, -27.6591, 0.52", "4.09373, -143.394, -28.0163, 0.37", "3.70262, -144.122, -28.3401, 0.29", "3.30892, -144.754, -28.6217, 0.29", "3.136, -144.979, -28.7404, 0.88", "2.73036, -145.344, -29.0034, 1.11", "2.22167, -145.646, -29.3065, 0.44", "1.57188, -145.924, -29.6736, 0.37", "0.945818, -146.134, -30.0312, 0.59", "0.387991, -146.285, -30.3588, 0.74", "-0.343801, -146.462, -30.7981, 0.44", "-0.980664, -146.618, -31.1766, 0.37", "-1.40523, -146.74, -31.4236, 0.88", "-1.89808, -146.923, -31.6966, 1.11", "-2.25745, -147.089, -31.8789, 1.11", "-2.63263, -147.272, -32.0458, 1.11", "-3.57043, -147.751, -32.4308, 0.29", "-4.18958, -148.081, -32.683, 0.59", "-4.60127, -148.308, -32.8476, 0.59", "-5.6162, -148.92, -33.2404, 0.29", "-6.23875, -149.341, -33.4698, 0.29", "-6.72784, -149.717, -33.646, 0.52", "-7.29973, -150.207, -33.8525, 0.52", "-7.60233, -150.481, -33.9615, 0.81", "-8.11505, -151.026, -34.152, 0.81", "-8.62411, -151.73, -34.3526, 0.29", "-9.21297, -152.688, -34.5869, 0.29", "-9.53896, -153.25, -34.7093, 1.18" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "12.0989, -112.835, -20.9264, 0.22", "13.0619, -113.455, -20.6339, 0.22", "14.0773, -114.109, -20.3255, 0.22", "15.3032, -114.899, -19.9532, 0.22", "16.1471, -115.442, -19.6969, 0.22", "17.0425, -116.019, -19.425, 0.22", "17.9636, -116.612, -19.1452, 0.22" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "235.74, -1.49691, -142.198, 0.74", "238.898, -3.52798, -143.636, 0.74", "239.749, -4.19196, -143.892, 0.44", "240.374, -4.67175, -144.016, 0.74", "241.361, -5.3621, -144.138, 0.52", "242.7, -6.18369, -144.215, 0.52", "244.15, -6.95245, -144.285, 0.52", "245.231, -7.46368, -144.172, 0.52", "246.359, -7.89662, -144.065, 0.52", "247.799, -8.259, -144.023, 0.52", "249.009, -8.38186, -144.056, 0.74", "250.275, -8.34416, -144.162, 1.03", "250.745, -8.2923, -144.223, 1.4", "251.211, -8.22627, -144.302, 1.4", "253.084, -7.97534, -144.692, 0.44", "253.797, -7.90152, -144.779, 0.74", "254.856, -7.84014, -144.764, 0.74", "255.579, -7.8222, -144.635, 0.96", "256.257, -7.83475, -144.398, 0.96", "257.142, -7.91579, -143.962, 0.96", "259.218, -8.33019, -142.608, 0.66", "260.066, -8.59784, -141.96, 0.81", "260.561, -8.81601, -141.519, 0.81", "261.75, -9.43477, -140.377, 0.52", "262.637, -9.93495, -139.521, 0.52", "263.615, -10.5088, -138.643, 0.52", "264.585, -11.0564, -137.938, 0.52", "265.844, -11.7185, -137.141, 0.44", "266.545, -12.0352, -136.81, 0.96", "267.321, -12.3104, -136.66, 1.11", "268.448, -12.631, -136.714, 0.44", "269.461, -12.9249, -137.017, 0.37", "270.191, -13.1859, -137.406, 0.37", "271.363, -13.6786, -138.275, 0.66", "272.661, -14.2814, -139.436, 0.74", "273.211, -14.5411, -139.989, 0.81", "274.01, -14.9015, -140.873, 0.81", "275.043, -15.3223, -142.071, 0.66", "275.995, -15.6484, -143.118, 0.66", "276.904, -15.9204, -144.029, 0.29", "277.537, -16.0994, -144.607, 0.59", "278.219, -16.2735, -145.182, 0.74", "278.867, -16.4208, -145.718, 0.44", "279.72, -16.5961, -146.386, 0.37", "280.597, -16.7966, -147.053, 0.37", "281.454, -17.0253, -147.671, 0.59", "282.131, -17.2397, -148.146, 0.59", "283.861, -17.9126, -149.564, 0.29", "284.962, -18.4495, -150.6, 0.29", "285.52, -18.7778, -151.199, 0.29", "286.0, -19.0916, -151.731, 0.74", "286.474, -19.4299, -152.278, 0.74", "288.336, -21.0433, -154.549, 0.37", "288.876, -21.6473, -155.261, 0.52", "289.276, -22.1985, -155.895, 0.81", "289.696, -22.8137, -156.647, 0.37", "290.07, -23.3476, -157.383, 0.37" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "235.74, -1.49691, -142.198, 0.88", "236.464, -1.18381, -143.339, 0.88", "236.769, -1.14989, -143.85, 1.25", "237.052, -1.17732, -144.377, 1.25", "237.42, -1.22798, -145.133, 0.59", "238.404, -1.36349, -147.155, 0.59", "239.393, -1.4996, -149.186, 0.96", "239.912, -1.64684, -150.284, 1.11", "240.809, -2.01091, -152.31, 1.25", "241.342, -2.30284, -153.607, 1.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "-82.5976, 154.446, -33.6222, 0.22", "-82.2491, 153.291, -32.6128, 0.22", "-82.032, 152.571, -31.984, 0.22", "-81.5458, 150.958, -30.576, 0.22", "-81.2492, 149.975, -29.7169, 0.22", "-80.9943, 149.129, -28.9786, 0.22" ],
    "parent" : "dend_82",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "-82.5976, 154.446, -33.6222, 0.22", "-83.1862, 155.058, -33.2629, 0.22", "-83.7028, 155.616, -32.9548, 0.22", "-84.1942, 156.148, -32.6617, 0.22", "-84.6643, 156.656, -32.3813, 0.22", "-85.372, 157.422, -31.9592, 0.22", "-85.733, 157.812, -31.7439, 0.37", "-86.0792, 158.245, -31.518, 0.37" ],
    "parent" : "dend_82",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "153.075, 78.1754, 123.861, 0.29", "154.522, 82.0789, 129.248, 0.29" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "153.075, 78.1754, 123.861, 0.29", "154.543, 84.717, 130.903, 0.29" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "175.274, 58.3339, 110.813, 0.29", "178.458, 59.9626, 102.302, 0.29" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "175.274, 58.3339, 110.813, 0.29", "166.799, 58.5576, 111.667, 0.29" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "132.847, 84.0319, -46.6187, 0.37", "132.225, 84.291, -47.0402, 0.37", "131.419, 84.5971, -47.8704, 0.66", "130.958, 84.7471, -48.6235, 0.29", "130.586, 84.8653, -49.3367, 0.29", "130.136, 85.0233, -50.2377, 0.29", "129.17, 85.4109, -52.1876, 0.29", "128.733, 85.5584, -53.1078, 0.81", "127.48, 85.9251, -55.9251, 0.44", "127.072, 86.0369, -56.9315, 0.96", "126.757, 86.1482, -57.8058, 1.18", "126.393, 86.3202, -58.9604, 0.88" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "132.847, 84.0319, -46.6187, 0.37", "134.671, 84.2675, -47.0858, 0.37", "136.851, 84.8233, -47.4714, 0.29", "137.668, 85.0856, -47.5767, 0.66", "138.481, 85.3782, -47.638, 0.66", "139.507, 85.8391, -47.6726, 0.37", "140.938, 86.5396, -47.7112, 0.37", "142.505, 87.4383, -47.6902, 0.81", "143.168, 87.8286, -47.6231, 1.11", "144.111, 88.3751, -47.4734, 1.33", "146.055, 89.5269, -47.0167, 0.44", "147.23, 90.2213, -46.6115, 0.52", "148.807, 91.1695, -45.8909, 1.03", "150.539, 92.2649, -44.9095, 0.52", "151.375, 92.7957, -44.3523, 0.66", "152.25, 93.3634, -43.6636, 0.66", "153.55, 94.2548, -42.4129, 0.44", "154.154, 94.7975, -41.7136, 0.29", "154.832, 95.5404, -40.8899, 0.44", "155.634, 96.4815, -40.0754, 0.66", "156.365, 97.3021, -39.4779, 0.37", "157.242, 98.2955, -38.8716, 0.37", "158.636, 99.9842, -37.9698, 0.29", "159.51, 101.08, -37.3827, 0.29", "160.838, 102.946, -36.346, 0.29", "161.65, 104.202, -35.5445, 0.29", "162.192, 105.147, -34.8244, 1.55", "162.552, 105.899, -34.1363, 1.18", "162.8, 106.622, -33.2186, 0.96", "162.902, 107.7, -31.4649, 0.52", "162.656, 108.848, -29.1456, 0.29", "162.304, 109.522, -27.5914, 0.29", "162.084, 109.834, -26.8357, 0.29", "161.438, 110.716, -24.8102, 0.22", "161.235, 111.01, -24.2135, 0.66", "160.99, 111.41, -23.4999, 0.66", "160.603, 112.255, -22.3098, 0.37", "160.424, 113.154, -21.2663, 0.29", "160.412, 114.125, -20.3828, 0.22", "160.526, 114.998, -19.6299, 0.22", "160.871, 116.281, -18.4371, 0.22", "161.106, 116.84, -17.8967, 0.29", "161.57, 117.639, -17.0764, 0.29", "162.367, 118.796, -15.8343, 0.29", "163.529, 120.288, -14.268, 0.29", "164.298, 121.2, -13.2916, 0.29", "164.981, 121.924, -12.5184, 0.29", "165.912, 122.851, -11.4963, 0.29", "167.416, 124.223, -9.95169, 0.29", "168.668, 125.276, -8.80349, 0.29" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-17.8183, -213.336, 10.6884, 0.29", "-18.042, -224.198, 8.50604, 0.29" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-17.8183, -213.336, 10.6884, 0.29", "-9.6468, -210.388, 16.1422, 0.29" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-37.0721, -140.291, -4.66649, 0.37", "-37.6932, -141.645, -5.05365, 0.37", "-37.9899, -142.291, -5.23862, 0.81" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-37.0721, -140.291, -4.66649, 0.29", "-40.0062, -139.831, -6.35502, 0.29", "-40.8697, -139.697, -6.82407, 0.22", "-42.0301, -139.598, -7.39692, 0.22", "-42.7261, -139.594, -7.70151, 1.47", "-43.2421, -139.591, -7.92735, 1.69", "-43.7352, -139.589, -8.14313, 1.69", "-45.123, -139.558, -8.43772, 0.96", "-46.1188, -139.631, -8.72391, 0.29", "-46.9718, -139.824, -9.03216, 0.29" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "24.3968, -173.313, 13.2409, 0.29", "24.7093, -174.281, 11.5358, 0.29", "24.9818, -175.125, 10.0487, 0.44" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "24.3968, -173.313, 13.2409, 0.29", "24.5342, -170.52, 11.6917, 0.29", "24.5758, -168.802, 9.89827, 0.29", "24.5327, -168.067, 8.3302, 0.29", "24.4908, -167.353, 6.80872, 0.52", "24.3724, -165.335, 2.50533, 0.44", "24.3327, -164.658, 1.06135, 0.29", "24.1357, -164.924, -1.36134, 0.29", "24.0474, -165.2, -2.23381, 0.29", "22.5097, -157.975, -14.9121, 0.29" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-9.53896, -153.25, -34.7093, 0.22", "-9.66304, -154.169, -34.6824, 0.22", "-9.80196, -155.23, -34.5902, 0.22", "-9.94974, -156.611, -34.4545, 0.22", "-10.057, -157.746, -34.3391, 0.22", "-10.1668, -159.209, -34.1942, 0.22", "-10.254, -160.369, -34.0791, 0.22", "-10.3465, -161.723, -33.9574, 0.22", "-10.3744, -162.582, -33.8769, 0.37", "-10.3694, -162.879, -33.8398, 0.37", "-10.3337, -163.714, -33.7091, 0.22" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-9.53896, -153.25, -34.7093, 1.55", "-10.0398, -153.52, -35.2556, 1.55", "-10.3293, -153.73, -35.591, 1.55", "-10.9055, -154.168, -36.2569, 0.29", "-11.7669, -154.81, -37.2086, 0.44", "-11.969, -154.948, -37.4634, 0.44", "-12.7635, -155.394, -38.5699, 0.29", "-13.2386, -155.617, -39.2813, 0.29", "-13.7096, -155.79, -39.9809, 0.29", "-14.2412, -155.921, -40.7337, 0.29", "-15.3442, -156.018, -42.1365, 0.29", "-16.3412, -155.951, -43.319, 0.29", "-16.9816, -155.798, -44.0283, 0.22", "-17.6386, -155.58, -44.7097, 0.22", "-18.1636, -155.386, -45.2216, 0.22", "-18.7606, -155.155, -45.7511, 0.22", "-19.5754, -154.875, -46.3222, 0.22", "-20.1992, -154.626, -46.7218, 0.22", "-20.6182, -154.405, -47.0073, 0.52", "-20.974, -154.169, -47.2696, 0.52" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "241.342, -2.30284, -153.607, 0.81", "244.797, -2.25107, -155.216, 0.81", "247.415, -2.35415, -156.357, 0.88", "249.483, -2.5359, -157.31, 0.37", "250.081, -2.5882, -157.58, 0.37", "251.388, -2.70248, -158.17, 0.66", "252.24, -2.77687, -158.555, 0.74", "252.534, -2.79784, -158.731, 0.74", "254.148, -3.10301, -159.4, 0.37", "254.945, -3.32224, -159.742, 0.66" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "241.342, -2.30284, -153.607, 0.44", "242.615, -1.44076, -154.919, 0.44", "243.514, -0.831955, -155.846, 0.44", "244.011, -0.495544, -156.357, 0.44", "244.986, 0.165431, -157.363, 1.18" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "126.393, 86.3202, -58.9604, 0.96", "125.534, 86.5498, -61.5371, 0.96", "124.506, 86.7263, -64.1057, 0.59", "124.253, 86.773, -64.7189, 0.59", "124.026, 86.83, -65.3035, 0.37", "123.54, 87.01, -66.6605, 0.29", "123.237, 87.15, -67.535, 0.29", "123.028, 87.2975, -68.0912, 0.66", "122.687, 87.7231, -69.1116, 0.22", "122.522, 87.9826, -69.7381, 0.22", "122.322, 88.2973, -70.5449, 0.88", "122.19, 88.488, -71.0342, 0.88", "121.758, 88.984, -72.3634, 0.37", "121.522, 89.1608, -72.9896, 0.96", "121.265, 89.2815, -73.6197, 1.11", "120.787, 89.4537, -74.8347, 0.44", "120.519, 89.5502, -75.5829, 0.37", "120.327, 89.6326, -76.1775, 0.52", "119.556, 90.0241, -78.7173, 0.37", "119.26, 90.2496, -79.9259, 0.96", "119.064, 90.4712, -80.8608, 0.96", "118.884, 90.7155, -81.8102, 0.52", "118.763, 90.8758, -82.526, 1.33", "118.615, 91.0418, -83.396, 1.33", "117.915, 91.6798, -86.9615, 0.52", "117.83, 91.7475, -87.3631, 0.52", "117.635, 91.8774, -88.224, 0.52", "116.751, 92.3397, -91.8682, 0.44", "116.301, 92.5398, -93.5192, 0.59", "116.005, 92.681, -94.4911, 0.59", "115.668, 92.8591, -95.3909, 0.88", "115.54, 92.9416, -95.6917, 1.25", "115.269, 93.1552, -96.1857, 1.47", "114.553, 93.8132, -97.062, 0.29", "113.876, 94.4832, -97.7954, 0.29", "113.598, 94.7619, -98.0779, 0.29", "113.11, 95.2595, -98.5355, 0.29", "112.802, 95.596, -98.8283, 0.29", "112.068, 96.4454, -99.522, 0.29", "111.778, 96.7742, -99.7957, 0.29", "111.378, 97.1507, -100.153, 0.96", "111.115, 97.4086, -100.413, 1.25" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "126.393, 86.3202, -58.9604, 0.15", "127.028, 87.9201, -58.7588, 0.15", "127.376, 88.7967, -58.6483, 0.15", "127.656, 89.5011, -58.5595, 0.81", "127.899, 90.1126, -58.4824, 1.03", "128.219, 90.9185, -58.3808, 1.03" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-37.9899, -142.291, -5.23862, 0.52", "-38.1334, -142.79, -5.54612, 0.52", "-38.3423, -143.597, -5.94811, 0.52", "-38.6407, -144.619, -6.34556, 0.37", "-38.7815, -145.089, -6.51969, 0.52", "-38.9756, -145.721, -6.74449, 0.44", "-39.2014, -146.421, -6.99894, 0.37", "-39.4482, -147.13, -7.22792, 0.29", "-39.7263, -147.876, -7.42172, 0.29", "-40.0724, -148.848, -7.64104, 1.03", "-40.1724, -149.12, -7.70507, 1.18", "-40.4815, -149.895, -7.90942, 0.88", "-40.7011, -150.451, -8.06866, 0.44", "-40.9448, -151.176, -8.28765, 0.37", "-41.0338, -151.605, -8.42046, 0.59", "-41.0669, -152.01, -8.53705, 0.44", "-41.0291, -152.839, -8.77087, 0.44", "-40.9402, -153.431, -8.93045, 0.44", "-40.7627, -154.339, -9.16591, 0.52", "-40.6045, -155.183, -9.37653, 0.66", "-40.5182, -155.878, -9.50416, 0.88", "-40.5086, -156.359, -9.54574, 0.88", "-40.6102, -157.084, -9.5119, 0.52", "-40.8514, -157.701, -9.40543, 0.29", "-41.3026, -158.425, -9.20261, 0.29", "-41.9222, -159.242, -8.98303, 0.29", "-42.3706, -159.779, -8.8797, 0.96", "-42.6559, -160.14, -8.86095, 1.18", "-42.9376, -160.543, -8.87159, 1.18", "-43.3519, -161.31, -8.96618, 0.59", "-43.653, -162.127, -9.08291, 0.52", "-43.8672, -162.928, -9.19058, 0.52", "-44.0932, -163.966, -9.34707, 0.66", "-44.2198, -164.655, -9.44328, 0.66", "-44.3255, -165.399, -9.52961, 0.81", "-44.4143, -166.479, -9.57705, 0.81", "-44.4434, -167.256, -9.47937, 0.81" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-37.9899, -142.291, -5.23862, 0.37", "-38.619, -142.12, -4.77295, 0.37", "-39.474, -141.941, -4.20068, 0.37", "-39.8899, -141.858, -3.94813, 0.37", "-40.8262, -141.661, -3.43207, 0.29", "-41.3891, -141.529, -3.14641, 0.29", "-42.0564, -141.372, -2.80773, 0.29", "-42.7004, -141.238, -2.47548, 0.37", "-43.0327, -141.189, -2.34357, 0.37", "-43.3708, -141.153, -2.24605, 0.29", "-43.753, -141.1, -2.2003, 0.22" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "24.9818, -175.125, 10.0487, 0.22", "24.4862, -175.76, 9.81849, 0.22", "23.7719, -176.675, 9.48682, 0.22", "23.366, -177.196, 9.29829, 0.29", "23.1447, -177.479, 9.19553, 0.29", "22.5713, -178.214, 8.92927, 0.22", "22.1967, -178.694, 8.75527, 0.22", "19.2489, -184.864, 6.66696, 0.22" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "24.9818, -175.125, 10.0487, 0.37", "24.6025, -176.509, 10.3523, 0.37", "24.2395, -177.742, 10.4096, 0.96", "23.775, -179.256, 10.25, 0.59", "23.4489, -180.395, 9.98644, 0.59", "23.1033, -181.604, 9.70707, 0.22", "22.774, -182.755, 9.44094, 0.22", "22.3782, -183.97, 8.98726, 0.22", "22.0627, -184.978, 8.42461, 0.22", "21.7267, -185.993, 7.64421, 0.22", "19.5031, -196.874, 7.07242, 0.22" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "244.986, 0.165431, -157.363, 0.37", "247.481, 1.62908, -163.567, 0.37", "247.901, 1.91111, -164.613, 0.66", "248.215, 2.17813, -165.42, 0.66", "248.362, 2.323, -165.803, 0.96", "248.748, 2.75626, -166.754, 1.11", "249.222, 3.32799, -167.828, 1.11", "249.953, 4.34717, -168.936, 0.81", "250.54, 5.20059, -169.668, 1.4", "250.738, 5.49536, -169.865, 1.4", "251.514, 6.63899, -170.408, 0.37", "252.071, 7.43533, -170.607, 0.37", "252.759, 8.35197, -170.643, 0.37", "253.309, 9.06208, -170.546, 0.66", "253.742, 9.64029, -170.415, 0.66", "254.271, 10.4993, -170.23, 0.29", "254.593, 11.1935, -170.085, 0.52", "254.781, 11.719, -169.992, 0.52", "255.068, 12.6276, -169.883, 0.29", "255.375, 13.579, -169.811, 1.03", "255.882, 15.0138, -169.791, 0.66", "256.225, 15.9301, -169.811, 0.44", "256.354, 16.2565, -169.822, 0.66", "256.756, 17.267, -169.872, 0.37", "256.971, 17.7695, -169.884, 0.52", "257.417, 18.7175, -169.858, 0.37", "257.75, 19.3416, -169.778, 0.37", "258.111, 20.0018, -169.685, 0.37", "258.47, 20.7563, -169.577, 0.37", "258.77, 21.4933, -169.458, 0.96", "258.896, 21.8025, -169.404, 0.96", "259.432, 23.0208, -169.162, 0.29", "259.891, 24.0038, -168.975, 0.29", "260.338, 24.9135, -168.81, 0.29", "260.72, 25.6755, -168.681, 1.11" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "244.986, 0.165431, -157.363, 0.52", "244.264, 3.5159, -160.568, 0.52", "244.198, 3.79797, -160.816, 0.52", "243.853, 5.14317, -161.929, 0.37", "243.756, 5.51968, -162.24, 0.29", "243.464, 6.65869, -163.182, 0.29", "243.215, 7.62701, -163.983, 0.29", "242.933, 8.67356, -164.446, 0.29", "242.808, 9.1215, -164.657, 0.52" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "111.115, 97.4086, -100.413, 0.29", "110.324, 98.3344, -102.254, 0.29", "110.119, 98.4692, -102.85, 0.29", "109.859, 98.5769, -103.706, 0.29", "109.405, 98.7687, -105.255, 0.29", "109.227, 98.8622, -105.839, 0.44", "108.986, 98.9893, -106.631, 0.44", "108.25, 99.2396, -108.966, 0.29", "107.923, 99.3098, -110.096, 0.29", "107.755, 99.3317, -110.77, 0.29", "107.508, 99.3616, -111.802, 0.22" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "111.115, 97.4086, -100.413, 0.22", "110.411, 96.6483, -99.9139, 0.22", "109.819, 96.0875, -99.5054, 0.22", "109.07, 95.4632, -98.9783, 1.4", "108.229, 94.763, -98.3871, 0.22", "107.291, 93.9817, -97.7275, 1.84", "106.47, 93.2973, -97.1497, 0.22", "105.751, 92.7753, -96.5963, 0.22", "105.072, 92.3334, -96.0567, 0.22" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "128.219, 90.9185, -58.3808, 0.74", "128.128, 91.3639, -58.1246, 0.74", "127.956, 92.0628, -57.6962, 0.22", "127.816, 92.4777, -57.4362, 0.22", "127.482, 93.2771, -56.9106, 0.22", "127.17, 93.9619, -56.4003, 1.33", "127.022, 94.2916, -56.1278, 1.33", "126.715, 94.9279, -55.5179, 0.22", "126.482, 95.3533, -55.0514, 0.22", "126.32, 95.6091, -54.7467, 0.22", "125.931, 96.1604, -54.1004, 0.22", "125.667, 96.5595, -53.5836, 0.22", "125.536, 96.8321, -53.244, 0.37", "125.451, 97.128, -52.9007, 0.37", "125.42, 97.4809, -52.5099, 0.37", "125.425, 97.7683, -52.2293, 0.15", "125.417, 98.5987, -51.5166, 0.22", "125.396, 99.2984, -50.9572, 0.22", "125.371, 99.7853, -50.5566, 0.22", "125.266, 100.667, -49.8436, 0.22", "125.139, 101.268, -49.3378, 0.22", "124.929, 102.007, -48.6831, 0.22", "124.835, 102.272, -48.4425, 0.74", "124.39, 103.318, -47.4349, 0.29", "124.095, 103.936, -46.8373, 0.29", "123.797, 104.545, -46.2648, 0.29", "123.599, 104.979, -45.8217, 0.29", "123.417, 105.488, -45.2381, 0.52", "123.275, 105.939, -44.6814, 0.37", "123.121, 106.524, -43.9327, 0.29", "123.089, 106.666, -43.744, 0.37", "122.965, 107.218, -43.0069, 0.37", "122.779, 107.941, -42.0165, 0.37", "122.622, 108.484, -41.2367, 0.22", "122.545, 108.774, -40.7964, 0.22", "122.461, 109.083, -40.3197, 0.74", "122.405, 109.258, -40.0621, 0.88", "122.192, 109.844, -39.3134, 0.59", "121.869, 110.569, -38.5316, 0.81" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "128.219, 90.9185, -58.3808, 0.29", "129.021, 91.2985, -58.845, 0.29", "129.737, 91.5535, -59.4074, 0.29", "130.445, 91.7602, -60.0301, 1.03", "130.778, 91.8483, -60.3406, 1.03", "131.611, 92.022, -61.09, 0.44", "132.252, 92.1331, -61.6324, 0.29", "133.109, 92.2044, -62.3579, 0.96", "133.402, 92.213, -62.5935, 0.96", "134.273, 92.2374, -63.2219, 0.22", "134.948, 92.2816, -63.6594, 0.22", "135.659, 92.3653, -64.0304, 0.22", "136.437, 92.5037, -64.3848, 0.22", "137.34, 92.7283, -64.7517, 0.22", "137.904, 92.9049, -64.9683, 0.52", "138.365, 93.102, -65.1271, 0.29", "138.939, 93.4453, -65.2966, 1.03", "139.312, 93.741, -65.3491, 1.03", "139.634, 94.093, -65.3356, 0.88", "139.951, 94.4891, -65.2683, 0.66", "140.339, 95.025, -65.133, 0.37", "140.722, 95.6152, -64.9339, 0.59", "141.159, 96.3664, -64.6285, 0.29", "141.537, 97.0301, -64.3074, 0.29" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-44.4434, -167.256, -9.47937, 0.74", "-44.9514, -167.898, -9.47026, 0.74", "-45.7913, -168.838, -9.51298, 0.66", "-46.425, -169.449, -9.60554, 0.52", "-47.2811, -170.185, -9.80859, 0.37", "-47.7577, -170.589, -9.94313, 0.74", "-48.1628, -170.932, -10.0438, 1.03", "-48.7162, -171.383, -10.1849, 0.74", "-49.5044, -172.037, -10.3869, 0.52", "-50.3007, -172.775, -10.5646, 0.52", "-50.8387, -173.38, -10.6602, 0.66", "-51.6051, -174.454, -10.7447, 0.88", "-51.8307, -174.843, -10.7563, 1.18", "-52.1337, -175.477, -10.7493, 0.81", "-52.4874, -176.388, -10.7123, 0.52", "-52.7398, -177.168, -10.7005, 0.52", "-53.0174, -178.103, -10.7365, 0.52", "-53.1393, -178.555, -10.7863, 0.52", "-53.384, -179.443, -10.9059, 0.52", "-53.6402, -180.323, -11.0469, 0.52", "-53.8588, -181.065, -11.1956, 1.03", "-54.0274, -181.605, -11.319, 1.25", "-54.2645, -182.275, -11.5129, 0.66", "-54.5256, -182.928, -11.7528, 0.29", "-54.8824, -183.568, -12.1319, 0.29", "-55.0891, -183.478, -12.4218, 0.52", "-55.5844, -182.884, -13.1776, 0.29", "-55.9545, -182.327, -13.7745, 0.29", "-56.3297, -181.64, -14.4086, 0.22", "-56.3961, -181.493, -14.5296, 0.52" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-44.4434, -167.256, -9.47937, 0.22", "-44.5561, -169.325, -9.99813, 0.22", "-44.5915, -170.154, -10.2083, 0.22", "-44.6373, -171.805, -10.5665, 0.22", "-44.6839, -173.672, -10.9147, 0.22", "-44.7217, -175.185, -11.197, 0.22", "-44.7951, -178.121, -11.7448, 0.22", "-44.8737, -179.375, -11.9743, 0.22", "-44.9843, -181.854, -12.4384, 0.22", "-44.9839, -183.241, -12.6777, 0.22" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "260.72, 25.6755, -168.681, 0.29", "261.737, 25.096, -168.759, 0.29", "262.321, 24.7626, -168.804, 0.29" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "260.72, 25.6755, -168.681, 0.37", "261.087, 26.5482, -168.495, 0.37", "261.52, 27.5759, -168.275, 0.37" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_78", "dend_53", "dend_50", "dend_49", "dend_44", "dend_41", "dend_32", "dend_0", "dend_88", "dend_79", "dend_69", "dend_54", "dend_52", "dend_51", "dend_46", "dend_45", "dend_43", "dend_42", "dend_34", "dend_33", "dend_17", "dend_1", "dend_85", "dend_80", "dend_71", "dend_70", "dend_58", "dend_55", "dend_48", "dend_47", "dend_40", "dend_35", "dend_31", "dend_18", "dend_16", "dend_11", "dend_2", "dend_87", "dend_86", "dend_82", "dend_81", "dend_75", "dend_72", "dend_68", "dend_59", "dend_57", "dend_56", "dend_37", "dend_36", "dend_24", "dend_19", "dend_13", "dend_12", "dend_10", "dend_3", "dend_84", "dend_83", "dend_77", "dend_76", "dend_74", "dend_73", "dend_61", "dend_60", "dend_39", "dend_38", "dend_26", "dend_25", "dend_21", "dend_20", "dend_15", "dend_14", "dend_9", "dend_4", "dend_65", "dend_62", "dend_28", "dend_27", "dend_23", "dend_22", "dend_6", "dend_5", "dend_67", "dend_66", "dend_64", "dend_63", "dend_30", "dend_29", "dend_8", "dend_7" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_78", "dend_53", "dend_50", "dend_49", "dend_44", "dend_41", "dend_32", "dend_0", "dend_88", "dend_79", "dend_69", "dend_54", "dend_52", "dend_51", "dend_46", "dend_45", "dend_43", "dend_42", "dend_34", "dend_33", "dend_17", "dend_1", "dend_85", "dend_80", "dend_71", "dend_70", "dend_58", "dend_55", "dend_48", "dend_47", "dend_40", "dend_35", "dend_31", "dend_18", "dend_16", "dend_11", "dend_2", "dend_87", "dend_86", "dend_82", "dend_81", "dend_75", "dend_72", "dend_68", "dend_59", "dend_57", "dend_56", "dend_37", "dend_36", "dend_24", "dend_19", "dend_13", "dend_12", "dend_10", "dend_3", "dend_84", "dend_83", "dend_77", "dend_76", "dend_74", "dend_73", "dend_61", "dend_60", "dend_39", "dend_38", "dend_26", "dend_25", "dend_21", "dend_20", "dend_15", "dend_14", "dend_9", "dend_4", "dend_65", "dend_62", "dend_28", "dend_27", "dend_23", "dend_22", "dend_6", "dend_5", "dend_67", "dend_66", "dend_64", "dend_63", "dend_30", "dend_29", "dend_8", "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_71", "dend_71", "dend_71", "dend_71", "dend_70", "dend_70", "dend_70", "dend_70", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_86", "dend_86", "dend_86", "dend_86", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_75", "dend_75", "dend_75", "dend_75", "dend_72", "dend_72", "dend_72", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_57", "dend_57", "dend_56", "dend_56", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_77", "dend_76", "dend_74", "dend_73", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_39", "dend_38", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_8", "dend_8", "dend_7", "dend_7" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L6_ChC_d1b33e54c2_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_78, id: dend_78, parent: soma_0
create dend_78
public dend_78
// Section: dend_53, id: dend_53, parent: soma_0
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: soma_0
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: soma_0
create dend_49
public dend_49
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_88, id: dend_88, parent: dend_78
create dend_88
public dend_88
// Section: dend_79, id: dend_79, parent: dend_78
create dend_79
public dend_79
// Section: dend_69, id: dend_69, parent: dend_53
create dend_69
public dend_69
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_17, id: dend_17, parent: dend_0
create dend_17
public dend_17
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_85, id: dend_85, parent: dend_79
create dend_85
public dend_85
// Section: dend_80, id: dend_80, parent: dend_79
create dend_80
public dend_80
// Section: dend_71, id: dend_71, parent: dend_69
create dend_71
public dend_71
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_58, id: dend_58, parent: dend_54
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_17
create dend_31
public dend_31
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_1
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_87, id: dend_87, parent: dend_85
create dend_87
public dend_87
// Section: dend_86, id: dend_86, parent: dend_85
create dend_86
public dend_86
// Section: dend_82, id: dend_82, parent: dend_80
create dend_82
public dend_82
// Section: dend_81, id: dend_81, parent: dend_80
create dend_81
public dend_81
// Section: dend_75, id: dend_75, parent: dend_71
create dend_75
public dend_75
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_68, id: dend_68, parent: dend_58
create dend_68
public dend_68
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_24, id: dend_24, parent: dend_18
create dend_24
public dend_24
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_84, id: dend_84, parent: dend_82
create dend_84
public dend_84
// Section: dend_83, id: dend_83, parent: dend_82
create dend_83
public dend_83
// Section: dend_77, id: dend_77, parent: dend_75
create dend_77
public dend_77
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_74, id: dend_74, parent: dend_72
create dend_74
public dend_74
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_9, id: dend_9, parent: dend_3
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_65, id: dend_65, parent: dend_61
create dend_65
public dend_65
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_67, id: dend_67, parent: dend_65
create dend_67
public dend_67
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_92
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_81, dend_81, dend_81, dend_75, dend_75, dend_75, dend_75, dend_72, dend_72, dend_72, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_56, dend_56, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_84, dend_84, dend_84, dend_84, dend_84, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_39, dend_38, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_62, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_8, dend_8, dend_7, dend_7]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_78(0), soma_0(0.49999968585636767)
    connect dend_53(0), soma_0(0.49999968585636767)
    connect dend_50(0), soma_0(0.49999968585636767)
    connect dend_49(0), soma_0(0.49999968585636767)
    connect dend_44(0), soma_0(0.49999968585636767)
    connect dend_41(0), soma_0(0.49999968585636767)
    connect dend_32(0), soma_0(0.49999968585636767)
    connect dend_0(0), soma_0(0.49999968585636767)
    connect axon_0(0), soma_0(1.0)
    connect dend_88(0), dend_78(1.0)
    connect dend_79(0), dend_78(1.0)
    connect dend_69(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_17(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_85(0), dend_79(1.0)
    connect dend_80(0), dend_79(1.0)
    connect dend_71(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_58(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_1(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_87(0), dend_85(1.0)
    connect dend_86(0), dend_85(1.0)
    connect dend_82(0), dend_80(1.0)
    connect dend_81(0), dend_80(1.0)
    connect dend_75(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_68(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_24(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_84(0), dend_82(1.0)
    connect dend_83(0), dend_82(1.0)
    connect dend_77(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_74(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_9(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_65(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_67(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.699158, -10.4987, 0.384835, 2.69968 ) }
    soma_0 { pt3dadd( -0.589028, -9.39629, 0.347626, 4.40168 ) }
    soma_0 { pt3dadd( -0.478898, -8.29387, 0.310418, 6.28323 ) }
    soma_0 { pt3dadd( -0.368767, -7.19145, 0.273209, 7.64436 ) }
    soma_0 { pt3dadd( -0.258637, -6.08903, 0.236, 8.5434 ) }
    soma_0 { pt3dadd( -0.148506, -4.98661, 0.198792, 9.49409 ) }
    soma_0 { pt3dadd( -0.0383758, -3.88419, 0.161583, 10.6841 ) }
    soma_0 { pt3dadd( 0.0717547, -2.78177, 0.124374, 11.1456 ) }
    soma_0 { pt3dadd( 0.181885, -1.67935, 0.0871655, 11.461 ) }
    soma_0 { pt3dadd( 0.292016, -0.576928, 0.0499568, 11.5573 ) }
    soma_0 { pt3dadd( 0.402146, 0.525493, 0.0127481, 11.5875 ) }
    soma_0 { pt3dadd( 0.512276, 1.62791, -0.0244606, 11.382 ) }
    soma_0 { pt3dadd( 0.622407, 2.73033, -0.0616693, 11.2002 ) }
    soma_0 { pt3dadd( 0.732537, 3.83276, -0.098878, 10.9052 ) }
    soma_0 { pt3dadd( 0.842668, 4.93518, -0.136087, 10.3672 ) }
    soma_0 { pt3dadd( 0.952798, 6.0376, -0.173295, 9.50426 ) }
    soma_0 { pt3dadd( 1.06293, 7.14002, -0.210504, 8.36675 ) }
    soma_0 { pt3dadd( 1.17306, 8.24244, -0.247713, 7.22308 ) }
    soma_0 { pt3dadd( 1.28319, 9.34486, -0.284922, 6.14175 ) }
    soma_0 { pt3dadd( 1.39332, 10.4473, -0.32213, 4.86495 ) }
    soma_0 { pt3dadd( 1.50345, 11.5497, -0.359339, 2.69802 ) }
    // Section: dend_78, id: dend_78, parent: soma_0 (entry count 21/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 0.562386, 11.3987, -3.45834, 0.37 ) }
    dend_78 { pt3dadd( -0.023191, 12.9858, -3.56991, 0.37 ) }
    dend_78 { pt3dadd( -0.0947506, 13.4169, -3.6505, 0.74 ) }
    dend_78 { pt3dadd( -0.0486375, 13.7567, -3.77416, 0.74 ) }
    dend_78 { pt3dadd( 0.33949, 14.8, -4.2445, 0.37 ) }
    dend_78 { pt3dadd( 0.721297, 15.6342, -4.59414, 0.66 ) }
    dend_78 { pt3dadd( 1.16755, 16.4951, -4.96762, 1.33 ) }
    dend_78 { pt3dadd( 1.5879, 17.1371, -5.25892, 1.33 ) }
    dend_78 { pt3dadd( 2.29529, 18.1975, -5.74832, 0.74 ) }
    dend_78 { pt3dadd( 2.8237, 19.0451, -6.11688, 0.74 ) }
    dend_78 { pt3dadd( 3.62892, 20.4464, -6.72498, 1.25 ) }
    dend_78 { pt3dadd( 4.13635, 21.5731, -7.19307, 2.06 ) }
    dend_78 { pt3dadd( 4.39376, 22.4142, -7.50572, 2.06 ) }
    dend_78 { pt3dadd( 4.57109, 23.5534, -7.89208, 1.4 ) }
    dend_78 { pt3dadd( 4.50377, 24.8689, -8.32234, 0.74 ) }
    dend_78 { pt3dadd( 4.20704, 25.7318, -8.60714, 1.11 ) }
    dend_78 { pt3dadd( 3.69073, 26.393, -8.82761, 1.11 ) }
    dend_78 { pt3dadd( 2.94632, 26.9581, -9.00217, 0.81 ) }
    dend_78 { pt3dadd( 1.96593, 27.4354, -9.24276, 0.81 ) }
    dend_78 { pt3dadd( 0.767935, 27.8234, -9.5592, 0.81 ) }
    dend_78 { pt3dadd( -0.400084, 28.1077, -9.90118, 0.96 ) }
    dend_78 { pt3dadd( -1.36437, 28.3414, -10.1947, 1.11 ) }
    dend_78 { pt3dadd( -2.23064, 28.5782, -10.508, 1.11 ) }
    dend_78 { pt3dadd( -4.11246, 29.2193, -11.3299, 1.11 ) }
    dend_78 { pt3dadd( -4.66847, 29.4827, -11.6321, 1.11 ) }
    dend_78 { pt3dadd( -5.56536, 30.1834, -12.2532, 0.59 ) }
    dend_78 { pt3dadd( -6.09537, 30.9348, -12.702, 0.96 ) }
    dend_78 { pt3dadd( -6.40884, 31.6285, -12.999, 1.25 ) }
    dend_78 { pt3dadd( -6.63008, 32.2541, -13.2025, 1.55 ) }
    dend_78 { pt3dadd( -6.7643, 32.6482, -13.29, 1.55 ) }
    dend_78 { pt3dadd( -7.24358, 33.8584, -13.5341, 0.74 ) }
    dend_78 { pt3dadd( -7.99661, 35.3219, -13.8248, 0.96 ) }
    dend_78 { pt3dadd( -8.62023, 36.2091, -14.0345, 0.66 ) }
    dend_78 { pt3dadd( -9.13779, 36.7673, -14.1981, 0.66 ) }
    dend_78 { pt3dadd( -9.96894, 37.4609, -14.4573, 0.81 ) }
    dend_78 { pt3dadd( -10.6587, 37.9166, -14.6795, 0.96 ) }
    dend_78 { pt3dadd( -11.5664, 38.406, -14.9953, 1.47 ) }
    dend_78 { pt3dadd( -12.4027, 38.8285, -15.3026, 1.62 ) }
    dend_78 { pt3dadd( -13.1923, 39.289, -15.6013, 1.47 ) }
    dend_78 { pt3dadd( -13.9275, 39.8056, -15.8939, 1.11 ) }
    dend_78 { pt3dadd( -14.7578, 40.516, -16.2486, 0.81 ) }
    dend_78 { pt3dadd( -15.7355, 41.5737, -16.7289, 0.66 ) }
    dend_78 { pt3dadd( -16.2609, 42.3035, -17.0206, 0.81 ) }
    dend_78 { pt3dadd( -16.9365, 43.5351, -17.457, 1.03 ) }
    dend_78 { pt3dadd( -17.1977, 44.1768, -17.6774, 1.25 ) }
    dend_78 { pt3dadd( -17.3836, 44.774, -17.8922, 1.25 ) }
    dend_78 { pt3dadd( -17.7197, 46.063, -18.4016, 0.96 ) }
    dend_78 { pt3dadd( -17.9702, 47.0578, -18.851, 0.81 ) }
    dend_78 { pt3dadd( -18.3193, 48.2853, -19.4806, 0.59 ) }
    dend_78 { pt3dadd( -18.6072, 49.138, -19.9483, 0.59 ) }
    dend_78 { pt3dadd( -19.0031, 50.1485, -20.5089, 0.59 ) }
    dend_78 { pt3dadd( -19.4381, 51.1405, -21.0402, 0.59 ) }
    dend_78 { pt3dadd( -19.8596, 52.0693, -21.4523, 0.44 ) }
    dend_78 { pt3dadd( -20.2589, 53.0389, -21.7682, 0.66 ) }
    dend_78 { pt3dadd( -20.5684, 54.0749, -21.9413, 0.74 ) }
    dend_78 { pt3dadd( -20.6687, 54.7251, -21.9719, 0.96 ) }
    dend_78 { pt3dadd( -20.6782, 55.4526, -21.949, 0.96 ) }
    dend_78 { pt3dadd( -20.5233, 57.0673, -21.9186, 0.52 ) }
    dend_78 { pt3dadd( -20.3091, 58.3767, -21.9363, 0.59 ) }
    dend_78 { pt3dadd( -20.0255, 59.8616, -22.0129, 0.59 ) }
    dend_78 { pt3dadd( -19.8793, 60.6913, -22.0924, 0.96 ) }
    dend_78 { pt3dadd( -19.7671, 61.6487, -22.2311, 0.96 ) }
    dend_78 { pt3dadd( -19.7319, 63.3485, -22.5809, 0.66 ) }
    dend_78 { pt3dadd( -19.91, 64.517, -22.9411, 0.66 ) }
    dend_78 { pt3dadd( -20.3028, 65.4635, -23.316, 0.96 ) }
    dend_78 { pt3dadd( -20.757, 66.0375, -23.5651, 1.03 ) }
    dend_78 { pt3dadd( -21.3368, 66.5009, -23.8016, 1.03 ) }
    dend_78 { pt3dadd( -22.1075, 66.9225, -24.0859, 1.03 ) }
    dend_78 { pt3dadd( -23.1463, 67.3185, -24.498, 0.74 ) }
    dend_78 { pt3dadd( -23.9638, 67.5623, -24.9045, 0.74 ) }
    dend_78 { pt3dadd( -24.5092, 67.6934, -25.2353, 0.52 ) }
    dend_78 { pt3dadd( -25.7157, 67.9284, -26.1264, 0.52 ) }
    dend_78 { pt3dadd( -26.7369, 68.0858, -26.9717, 0.52 ) }
    dend_78 { pt3dadd( -27.7781, 68.2107, -27.874, 1.11 ) }
    dend_78 { pt3dadd( -28.3443, 68.2643, -28.3486, 1.4 ) }
    dend_78 { pt3dadd( -28.9873, 68.3062, -28.8312, 1.4 ) }
    dend_78 { pt3dadd( -30.0863, 68.3358, -29.5165, 0.81 ) }
    dend_78 { pt3dadd( -30.7639, 68.3505, -29.7936, 0.59 ) }
    dend_78 { pt3dadd( -31.7843, 68.4015, -30.0115, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_78 { pt3dadd( -32.8095, 68.5013, -30.0707, 0.44 ) }
    dend_78 { pt3dadd( -33.849, 68.6686, -30.0403, 0.74 ) }
    dend_78 { pt3dadd( -34.8423, 68.9477, -29.9626, 1.33 ) }
    dend_78 { pt3dadd( -36.0504, 69.4974, -29.8924, 0.88 ) }
    dend_78 { pt3dadd( -36.5859, 69.8651, -29.9673, 0.59 ) }
    dend_78 { pt3dadd( -36.9176, 70.1874, -30.103, 0.59 ) }
    dend_78 { pt3dadd( -37.3844, 70.758, -30.4443, 0.74 ) }
    dend_78 { pt3dadd( -37.9618, 71.5581, -31.0415, 0.96 ) }
    dend_78 { pt3dadd( -38.7073, 72.5995, -31.9554, 0.59 ) }
    dend_78 { pt3dadd( -39.4788, 73.6163, -32.9715, 0.59 ) }
    dend_78 { pt3dadd( -39.8802, 74.1269, -33.4788, 0.81 ) }
    dend_78 { pt3dadd( -40.3872, 74.7112, -34.0348, 0.96 ) }
    dend_78 { pt3dadd( -40.8731, 75.1852, -34.451, 1.03 ) }
    dend_78 { pt3dadd( -41.6961, 75.9059, -34.9783, 0.66 ) }
    dend_78 { pt3dadd( -41.9482, 76.1343, -35.1091, 0.66 ) }
    dend_78 { pt3dadd( -42.6252, 76.8529, -35.4352, 0.81 ) }
    dend_78 { pt3dadd( -43.2225, 77.6308, -35.7869, 0.81 ) }
    dend_78 { pt3dadd( -43.6767, 78.4337, -36.1325, 0.66 ) }
    dend_78 { pt3dadd( -44.0467, 79.2888, -36.4853, 0.66 ) }
    dend_78 { pt3dadd( -44.5074, 80.6187, -37.0241, 0.52 ) }
    dend_78 { pt3dadd( -44.7708, 81.4491, -37.3715, 0.81 ) }
    dend_78 { pt3dadd( -44.9647, 82.0683, -37.6416, 0.74 ) }
    dend_78 { pt3dadd( -45.4335, 83.3968, -38.2144, 0.59 ) }
    dend_78 { pt3dadd( -45.7195, 84.0461, -38.471, 0.74 ) }
    dend_78 { pt3dadd( -46.1018, 84.6888, -38.693, 0.96 ) }
    dend_78 { pt3dadd( -46.692, 85.4608, -38.8689, 0.96 ) }
    dend_78 { pt3dadd( -47.2086, 86.0569, -38.9537, 0.74 ) }
    dend_78 { pt3dadd( -47.9237, 86.8313, -39.0122, 1.03 ) }
    dend_78 { pt3dadd( -48.4399, 87.3736, -38.966, 1.25 ) }
    dend_78 { pt3dadd( -48.8019, 87.7842, -38.892, 0.81 ) }
    dend_78 { pt3dadd( -49.5701, 88.7537, -38.6538, 0.59 ) }
    dend_78 { pt3dadd( -50.0382, 89.4115, -38.4567, 0.66 ) }
    dend_78 { pt3dadd( -50.4266, 90.0078, -38.2592, 0.66 ) }
    dend_78 { pt3dadd( -51.434, 91.6584, -37.6716, 0.88 ) }
    dend_78 { pt3dadd( -51.9447, 92.5038, -37.347, 1.11 ) }
    dend_78 { pt3dadd( -52.2958, 93.082, -37.1027, 1.03 ) }
    dend_78 { pt3dadd( -52.7229, 93.7799, -36.7987, 1.25 ) }
    dend_78 { pt3dadd( -52.8824, 94.0394, -36.6754, 1.25 ) }
    // Section: dend_53, id: dend_53, parent: soma_0 (entry count 38/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 4.19239, 10.1787, -4.39834, 1.11 ) }
    dend_53 { pt3dadd( 4.98125, 10.9954, -4.8988, 1.11 ) }
    dend_53 { pt3dadd( 5.59928, 11.6474, -5.31122, 1.11 ) }
    dend_53 { pt3dadd( 6.5853, 12.7381, -5.96854, 1.11 ) }
    dend_53 { pt3dadd( 7.26162, 13.5237, -6.46339, 0.96 ) }
    dend_53 { pt3dadd( 8.38182, 14.6902, -7.19461, 1.55 ) }
    dend_53 { pt3dadd( 9.35611, 15.6227, -7.7831, 1.62 ) }
    dend_53 { pt3dadd( 9.92988, 16.1126, -8.10442, 1.62 ) }
    dend_53 { pt3dadd( 10.8166, 16.7922, -8.49476, 1.25 ) }
    dend_53 { pt3dadd( 12.3031, 17.814, -8.95109, 0.96 ) }
    dend_53 { pt3dadd( 14.5741, 19.218, -9.36519, 0.88 ) }
    dend_53 { pt3dadd( 15.6401, 19.7885, -9.42988, 1.55 ) }
    dend_53 { pt3dadd( 16.804, 20.3257, -9.40179, 1.84 ) }
    dend_53 { pt3dadd( 18.5498, 21.0471, -9.26504, 1.11 ) }
    dend_53 { pt3dadd( 19.4662, 21.4095, -9.14506, 1.03 ) }
    dend_53 { pt3dadd( 20.4917, 21.8568, -8.94534, 1.25 ) }
    dend_53 { pt3dadd( 21.4836, 22.4179, -8.73743, 0.88 ) }
    dend_53 { pt3dadd( 22.3983, 23.0598, -8.5465, 0.88 ) }
    dend_53 { pt3dadd( 23.255, 23.7609, -8.37017, 0.88 ) }
    dend_53 { pt3dadd( 24.2608, 24.6334, -8.15621, 0.88 ) }
    dend_53 { pt3dadd( 25.1208, 25.4278, -7.87921, 0.96 ) }
    dend_53 { pt3dadd( 26.0108, 26.3175, -7.54667, 0.96 ) }
    dend_53 { pt3dadd( 26.8228, 27.2183, -7.18456, 0.81 ) }
    dend_53 { pt3dadd( 28.018, 28.6254, -6.54647, 1.11 ) }
    dend_53 { pt3dadd( 28.8016, 29.5171, -6.05047, 1.4 ) }
    dend_53 { pt3dadd( 29.7046, 30.4117, -5.37958, 2.06 ) }
    // Section: dend_50, id: dend_50, parent: soma_0 (entry count 64/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 3.86239, 8.76874, 2.16166, 1.62 ) }
    dend_50 { pt3dadd( 4.42607, 9.14914, 2.66378, 1.62 ) }
    dend_50 { pt3dadd( 5.18936, 9.60468, 3.35119, 1.25 ) }
    dend_50 { pt3dadd( 6.57796, 10.2405, 4.74529, 1.25 ) }
    dend_50 { pt3dadd( 7.31226, 10.5297, 5.53198, 1.25 ) }
    dend_50 { pt3dadd( 8.07844, 10.7349, 6.45098, 1.92 ) }
    dend_50 { pt3dadd( 8.40266, 10.7913, 6.86386, 2.5 ) }
    dend_50 { pt3dadd( 9.10772, 10.8105, 7.83978, 2.5 ) }
    dend_50 { pt3dadd( 10.5661, 10.6303, 10.0101, 1.77 ) }
    dend_50 { pt3dadd( 11.5776, 10.3142, 11.5121, 0.96 ) }
    dend_50 { pt3dadd( 13.0048, 9.71238, 13.6261, 0.88 ) }
    dend_50 { pt3dadd( 13.4128, 9.51739, 14.2401, 0.88 ) }
    dend_50 { pt3dadd( 13.7347, 9.36957, 14.7099, 1.4 ) }
    dend_50 { pt3dadd( 14.0528, 9.24811, 15.1205, 1.4 ) }
    dend_50 { pt3dadd( 15.2134, 8.98684, 16.296, 0.66 ) }
    dend_50 { pt3dadd( 15.7056, 9.01602, 16.6887, 0.66 ) }
    dend_50 { pt3dadd( 16.8746, 9.48218, 17.3806, 0.88 ) }
    dend_50 { pt3dadd( 17.6091, 9.89596, 17.7559, 0.88 ) }
    dend_50 { pt3dadd( 18.5315, 10.5137, 18.1213, 0.74 ) }
    dend_50 { pt3dadd( 19.2191, 11.0368, 18.3273, 1.4 ) }
    dend_50 { pt3dadd( 20.0105, 11.6905, 18.4714, 2.06 ) }
    dend_50 { pt3dadd( 20.7897, 12.314, 18.532, 1.84 ) }
    dend_50 { pt3dadd( 21.7243, 13.0272, 18.4787, 1.18 ) }
    dend_50 { pt3dadd( 22.6966, 13.7155, 18.4493, 1.18 ) }
    dend_50 { pt3dadd( 23.0914, 13.9596, 18.5052, 1.03 ) }
    dend_50 { pt3dadd( 23.7514, 14.2873, 18.7792, 1.03 ) }
    dend_50 { pt3dadd( 24.188, 14.4649, 19.2195, 0.59 ) }
    dend_50 { pt3dadd( 24.5935, 14.653, 19.8689, 0.59 ) }
    dend_50 { pt3dadd( 25.388, 15.0882, 21.487, 0.88 ) }
    dend_50 { pt3dadd( 26.3122, 15.6782, 23.6155, 1.62 ) }
    dend_50 { pt3dadd( 26.7093, 15.9674, 24.5411, 1.62 ) }
    dend_50 { pt3dadd( 27.6334, 16.6967, 26.6818, 0.88 ) }
    dend_50 { pt3dadd( 28.0638, 17.0354, 27.6146, 0.88 ) }
    dend_50 { pt3dadd( 28.4608, 17.3585, 28.3861, 1.47 ) }
    dend_50 { pt3dadd( 28.7398, 17.5885, 28.8286, 1.47 ) }
    dend_50 { pt3dadd( 29.4574, 18.1349, 29.6912, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_50 { pt3dadd( 29.8577, 18.3856, 30.0775, 0.59 ) }
    dend_50 { pt3dadd( 30.2858, 18.5889, 30.4148, 0.59 ) }
    dend_50 { pt3dadd( 31.3302, 19.0304, 31.247, 1.25 ) }
    dend_50 { pt3dadd( 32.9725, 19.7481, 32.6166, 0.74 ) }
    dend_50 { pt3dadd( 33.487, 20.0243, 33.0965, 0.29 ) }
    dend_50 { pt3dadd( 33.9449, 20.2915, 33.5816, 0.29 ) }
    dend_50 { pt3dadd( 34.207, 20.4449, 33.898, 0.59 ) }
    dend_50 { pt3dadd( 34.9013, 20.8656, 34.7537, 1.11 ) }
    dend_50 { pt3dadd( 35.252, 21.0522, 35.1734, 1.11 ) }
    dend_50 { pt3dadd( 36.0049, 21.717, 36.0746, 1.11 ) }
    dend_50 { pt3dadd( 36.4301, 22.3219, 36.7911, 0.59 ) }
    dend_50 { pt3dadd( 36.4418, 20.5872, 36.909, 0.59 ) }
    dend_50 { pt3dadd( 36.5874, 18.7985, 37.3476, 0.52 ) }
    dend_50 { pt3dadd( 36.6882, 17.5492, 37.6509, 0.59 ) }
    dend_50 { pt3dadd( 43.1601, 19.6232, 43.4198, 0.59 ) }
    dend_50 { pt3dadd( 49.9476, 22.4925, 48.4362, 0.59 ) }
    dend_50 { pt3dadd( 55.5572, 26.6455, 53.9817, 0.59 ) }
    dend_50 { pt3dadd( 61.1147, 31.6383, 58.8452, 0.59 ) }
    dend_50 { pt3dadd( 67.5768, 36.9958, 61.8461, 0.59 ) }
    dend_50 { pt3dadd( 73.3986, 42.6346, 65.558, 0.59 ) }
    dend_50 { pt3dadd( 79.5412, 47.28, 70.0476, 0.59 ) }
    // Section: dend_49, id: dend_49, parent: soma_0 (entry count 21/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -3.56761, 6.43874, 1.60166, 1.69 ) }
    dend_49 { pt3dadd( -3.56761, 6.43874, 1.60166, 1.69 ) }
    dend_49 { pt3dadd( -3.98235, 6.67039, 1.82627, 1.69 ) }
    dend_49 { pt3dadd( -4.49606, 6.89942, 2.12992, 1.4 ) }
    dend_49 { pt3dadd( -4.86857, 7.04341, 2.41727, 1.03 ) }
    dend_49 { pt3dadd( -5.3845, 7.24993, 2.8631, 0.88 ) }
    dend_49 { pt3dadd( -5.74258, 7.40537, 3.1936, 0.88 ) }
    dend_49 { pt3dadd( -6.2015, 7.58471, 3.67269, 0.59 ) }
    dend_49 { pt3dadd( -6.62437, 7.74188, 4.15812, 0.44 ) }
    dend_49 { pt3dadd( -7.41045, 8.02501, 5.11906, 0.37 ) }
    dend_49 { pt3dadd( -7.68287, 8.12337, 5.46395, 0.37 ) }
    dend_49 { pt3dadd( -8.12824, 8.28774, 6.04114, 0.37 ) }
    dend_49 { pt3dadd( -9.18733, 8.69796, 7.47766, 1.03 ) }
    dend_49 { pt3dadd( -9.42939, 8.80276, 7.81757, 1.62 ) }
    dend_49 { pt3dadd( -15.2731, 9.31351, 11.49, 1.62 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 36/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -3.87761, -1.20126, -14.5883, 0.74 ) }
    dend_44 { pt3dadd( -4.94475, -1.92269, -14.5811, 0.74 ) }
    dend_44 { pt3dadd( -6.19989, -2.73777, -14.5744, 1.03 ) }
    dend_44 { pt3dadd( -7.29771, -3.43666, -14.5912, 1.25 ) }
    dend_44 { pt3dadd( -8.17556, -4.00384, -14.6142, 1.62 ) }
    dend_44 { pt3dadd( -8.89492, -4.46077, -14.6368, 1.84 ) }
    dend_44 { pt3dadd( -9.83821, -5.02467, -14.6431, 1.84 ) }
    dend_44 { pt3dadd( -10.6737, -5.46531, -14.6052, 1.99 ) }
    dend_44 { pt3dadd( -11.5517, -5.86431, -14.5216, 2.21 ) }
    dend_44 { pt3dadd( -12.5775, -6.25132, -14.3732, 2.65 ) }
    dend_44 { pt3dadd( -13.3052, -6.48079, -14.2566, 2.5 ) }
    dend_44 { pt3dadd( -14.5347, -6.81993, -14.0697, 1.77 ) }
    dend_44 { pt3dadd( -15.8369, -7.16213, -13.9138, 1.33 ) }
    dend_44 { pt3dadd( -16.7223, -7.40099, -13.872, 1.18 ) }
    dend_44 { pt3dadd( -17.772, -7.69523, -13.9387, 1.11 ) }
    dend_44 { pt3dadd( -18.518, -7.9309, -14.1495, 1.11 ) }
    dend_44 { pt3dadd( -19.2865, -8.20782, -14.6189, 1.11 ) }
    dend_44 { pt3dadd( -20.0207, -8.49462, -15.3392, 1.4 ) }
    dend_44 { pt3dadd( -20.7514, -8.76426, -16.2703, 1.03 ) }
    dend_44 { pt3dadd( -21.3669, -8.96553, -17.1724, 0.88 ) }
    dend_44 { pt3dadd( -22.2828, -9.19628, -18.6504, 0.88 ) }
    dend_44 { pt3dadd( -23.2724, -9.35658, -20.3958, 1.47 ) }
    dend_44 { pt3dadd( -24.021, -9.42809, -21.7801, 1.77 ) }
    dend_44 { pt3dadd( -24.8591, -9.44216, -23.3906, 1.84 ) }
    dend_44 { pt3dadd( -25.1554, -9.42422, -23.9751, 2.06 ) }
    dend_44 { pt3dadd( -25.6923, -9.35627, -25.0625, 1.77 ) }
    dend_44 { pt3dadd( -26.5194, -9.18106, -26.6962, 1.33 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 63/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -5.36761, -2.01126, 9.10166, 2.06 ) }
    dend_41 { pt3dadd( -5.36761, -2.01126, 9.10166, 2.06 ) }
    dend_41 { pt3dadd( -6.40408, -1.90768, 9.64988, 2.06 ) }
    dend_41 { pt3dadd( -7.1833, -1.8667, 10.0307, 2.06 ) }
    dend_41 { pt3dadd( -9.20521, -1.89746, 10.9709, 1.84 ) }
    dend_41 { pt3dadd( -10.3308, -2.00131, 11.4791, 1.84 ) }
    dend_41 { pt3dadd( -11.1919, -2.14557, 11.8638, 1.99 ) }
    dend_41 { pt3dadd( -12.7415, -2.53494, 12.5541, 1.55 ) }
    dend_41 { pt3dadd( -14.0022, -2.99758, 13.1015, 1.03 ) }
    dend_41 { pt3dadd( -15.0214, -3.49316, 13.5101, 0.88 ) }
    dend_41 { pt3dadd( -16.0109, -4.11356, 13.7971, 1.18 ) }
    dend_41 { pt3dadd( -16.8106, -4.6788, 13.9717, 1.18 ) }
    dend_41 { pt3dadd( -17.4236, -5.15213, 14.0731, 1.47 ) }
    dend_41 { pt3dadd( -18.3334, -5.92563, 14.1524, 1.25 ) }
    dend_41 { pt3dadd( -19.2291, -6.7192, 14.2707, 1.03 ) }
    dend_41 { pt3dadd( -20.0369, -7.42625, 14.4516, 1.62 ) }
    dend_41 { pt3dadd( -20.846, -8.11832, 14.7521, 1.69 ) }
    dend_41 { pt3dadd( -21.4697, -8.62013, 15.0731, 1.33 ) }
    dend_41 { pt3dadd( -22.584, -9.44536, 15.8313, 1.03 ) }
    dend_41 { pt3dadd( -23.9564, -10.2964, 17.0253, 0.88 ) }
    dend_41 { pt3dadd( -24.916, -10.7487, 18.0885, 1.11 ) }
    dend_41 { pt3dadd( -25.7475, -10.9743, 19.1803, 1.33 ) }
    dend_41 { pt3dadd( -26.2659, -10.9972, 19.9477, 1.33 ) }
    dend_41 { pt3dadd( -26.777, -10.8645, 20.7404, 1.18 ) }
    dend_41 { pt3dadd( -27.3853, -10.5143, 21.6566, 0.88 ) }
    dend_41 { pt3dadd( -28.2502, -9.86426, 22.7745, 1.18 ) }
    dend_41 { pt3dadd( -28.7897, -9.47268, 23.3815, 1.33 ) }
    dend_41 { pt3dadd( -29.2651, -9.21625, 23.8551, 1.33 ) }
    dend_41 { pt3dadd( -30.0849, -8.97721, 24.623, 0.59 ) }
    dend_41 { pt3dadd( -31.2093, -9.0368, 25.5786, 0.52 ) }
    dend_41 { pt3dadd( -31.7797, -9.38361, 25.9957, 0.59 ) }
    dend_41 { pt3dadd( -32.5752, -10.464, 26.6235, 0.59 ) }
    dend_41 { pt3dadd( -33.3412, -11.9497, 27.3872, 0.59 ) }
    dend_41 { pt3dadd( -33.7383, -12.8354, 27.8333, 1.03 ) }
    dend_41 { pt3dadd( -34.193, -13.9415, 28.4414, 1.03 ) }
    dend_41 { pt3dadd( -34.5689, -14.8615, 28.9981, 1.03 ) }
    dend_41 { pt3dadd( -35.2775, -16.3985, 30.1335, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_41 { pt3dadd( -35.9493, -17.4125, 31.2085, 0.66 ) }
    dend_41 { pt3dadd( -36.5151, -17.8804, 32.0356, 0.66 ) }
    dend_41 { pt3dadd( -37.5124, -18.2677, 33.346, 0.74 ) }
    dend_41 { pt3dadd( -38.2174, -18.3905, 34.2106, 0.81 ) }
    dend_41 { pt3dadd( -38.8732, -18.436, 34.9849, 0.52 ) }
    dend_41 { pt3dadd( -40.0617, -18.4533, 36.2779, 0.52 ) }
    dend_41 { pt3dadd( -40.5709, -18.4902, 36.8372, 0.44 ) }
    dend_41 { pt3dadd( -41.3119, -18.8161, 37.8227, 0.37 ) }
    dend_41 { pt3dadd( -41.6683, -19.3207, 38.4005, 0.37 ) }
    dend_41 { pt3dadd( -41.999, -20.0862, 38.9911, 1.11 ) }
    dend_41 { pt3dadd( -42.2812, -20.8716, 39.4526, 1.4 ) }
    dend_41 { pt3dadd( -42.553, -21.906, 39.95, 1.4 ) }
    dend_41 { pt3dadd( -42.8869, -23.4763, 40.6358, 0.81 ) }
    dend_41 { pt3dadd( -43.1119, -24.6587, 41.095, 0.29 ) }
    dend_41 { pt3dadd( -43.3124, -25.4407, 41.4113, 0.29 ) }
    dend_41 { pt3dadd( -43.5493, -26.0686, 41.6817, 0.29 ) }
    dend_41 { pt3dadd( -50.0696, -30.4694, 48.9328, 0.29 ) }
    dend_41 { pt3dadd( -57.9604, -34.9803, 54.5762, 0.29 ) }
    dend_41 { pt3dadd( -65.1795, -39.4812, 61.0635, 0.29 ) }
    dend_41 { pt3dadd( -71.8789, -42.5885, 68.8045, 0.29 ) }
    dend_41 { pt3dadd( -78.5943, -45.8337, 76.4747, 0.29 ) }
    dend_41 { pt3dadd( -86.3206, -50.6528, 82.0908, 0.29 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 22/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -2.19761, -5.76126, 6.85166, 1.77 ) }
    dend_32 { pt3dadd( -2.19761, -5.76126, 6.85166, 1.77 ) }
    dend_32 { pt3dadd( -2.17615, -7.11497, 7.01943, 1.77 ) }
    dend_32 { pt3dadd( -2.14201, -9.43582, 7.29497, 1.47 ) }
    dend_32 { pt3dadd( -2.12319, -11.7715, 7.54429, 1.25 ) }
    dend_32 { pt3dadd( -2.15534, -13.5558, 7.71274, 1.62 ) }
    dend_32 { pt3dadd( -2.21957, -15.0612, 7.83968, 1.92 ) }
    dend_32 { pt3dadd( -2.30763, -16.3743, 7.95204, 2.14 ) }
    dend_32 { pt3dadd( -2.46718, -18.0093, 8.08921, 2.14 ) }
    dend_32 { pt3dadd( -2.79612, -20.2788, 8.27974, 1.55 ) }
    dend_32 { pt3dadd( -3.21481, -22.4133, 8.44646, 1.33 ) }
    dend_32 { pt3dadd( -3.594, -24.0305, 8.58685, 1.55 ) }
    dend_32 { pt3dadd( -3.87561, -25.0519, 8.67886, 1.92 ) }
    dend_32 { pt3dadd( -4.27577, -26.2908, 8.83292, 2.21 ) }
    dend_32 { pt3dadd( -4.57548, -27.1073, 8.95785, 2.5 ) }
    dend_32 { pt3dadd( -4.92592, -28.071, 9.1372, 2.5 ) }
    dend_32 { pt3dadd( -5.24806, -29.134, 9.35138, 2.36 ) }
    dend_32 { pt3dadd( -5.59461, -30.5924, 9.65351, 1.69 ) }
    dend_32 { pt3dadd( -5.92773, -32.5046, 10.034, 1.25 ) }
    dend_32 { pt3dadd( -6.09716, -34.2914, 10.377, 1.4 ) }
    dend_32 { pt3dadd( -6.10433, -35.877, 10.6443, 1.62 ) }
    dend_32 { pt3dadd( -5.93013, -37.8123, 10.9271, 2.06 ) }
    dend_32 { pt3dadd( -5.71805, -39.0049, 11.0881, 2.36 ) }
    dend_32 { pt3dadd( -5.50353, -39.7782, 11.1788, 2.36 ) }
    dend_32 { pt3dadd( -4.97427, -41.2519, 11.3245, 2.14 ) }
    dend_32 { pt3dadd( -4.11246, -43.32, 11.5121, 1.62 ) }
    dend_32 { pt3dadd( -3.35197, -45.0618, 11.6512, 1.25 ) }
    dend_32 { pt3dadd( -2.57192, -46.8588, 11.8132, 1.03 ) }
    dend_32 { pt3dadd( -1.73931, -48.8793, 12.0351, 1.03 ) }
    dend_32 { pt3dadd( -1.1191, -50.5713, 12.2624, 1.03 ) }
    dend_32 { pt3dadd( -0.443881, -52.7614, 12.6333, 1.03 ) }
    dend_32 { pt3dadd( -0.149448, -54.0657, 12.9035, 0.96 ) }
    dend_32 { pt3dadd( -0.060131, -55.0962, 13.1514, 0.96 ) }
    dend_32 { pt3dadd( -0.181351, -56.0148, 13.3991, 0.96 ) }
    dend_32 { pt3dadd( -0.738763, -57.2245, 13.8114, 0.96 ) }
    dend_32 { pt3dadd( -1.28392, -57.8819, 14.0706, 0.88 ) }
    dend_32 { pt3dadd( -1.85581, -58.3678, 14.2737, 1.18 ) }
    dend_32 { pt3dadd( -2.77903, -59.0425, 14.5328, 1.18 ) }
    dend_32 { pt3dadd( -3.67334, -59.6589, 14.7622, 1.33 ) }
    dend_32 { pt3dadd( -4.70306, -60.3581, 15.0485, 1.33 ) }
    dend_32 { pt3dadd( -5.58838, -60.9678, 15.3258, 1.4 ) }
    dend_32 { pt3dadd( -6.53744, -61.6631, 15.6686, 1.55 ) }
    dend_32 { pt3dadd( -7.44652, -62.3994, 16.0721, 1.55 ) }
    dend_32 { pt3dadd( -8.47549, -63.4055, 16.6516, 1.84 ) }
    dend_32 { pt3dadd( -9.09861, -64.1401, 17.0626, 2.14 ) }
    dend_32 { pt3dadd( -9.70891, -65.0258, 17.5036, 1.99 ) }
    dend_32 { pt3dadd( -10.5601, -66.6255, 18.2085, 0.88 ) }
    dend_32 { pt3dadd( -11.1414, -68.1028, 18.7628, 0.88 ) }
    dend_32 { pt3dadd( -11.6314, -69.8478, 19.3156, 0.81 ) }
    dend_32 { pt3dadd( -11.9057, -71.3905, 19.6909, 0.74 ) }
    dend_32 { pt3dadd( -12.1603, -73.3385, 20.1029, 0.74 ) }
    dend_32 { pt3dadd( -12.285, -75.1582, 20.4315, 1.03 ) }
    dend_32 { pt3dadd( -12.2802, -76.7932, 20.6425, 1.4 ) }
    dend_32 { pt3dadd( -12.2246, -77.8106, 20.7199, 1.69 ) }
    dend_32 { pt3dadd( -12.1095, -78.951, 20.7505, 1.84 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 77/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.44239, -10.0013, -2.20834, 3.39 ) }
    dend_0 { pt3dadd( 1.44239, -10.0013, -2.20834, 3.39 ) }
    dend_0 { pt3dadd( 1.71088, -10.8428, -2.28418, 3.39 ) }
    dend_0 { pt3dadd( 1.92767, -11.5217, -2.37696, 3.02 ) }
    dend_0 { pt3dadd( 2.14718, -12.2091, -2.47089, 3.02 ) }
    dend_0 { pt3dadd( 2.43582, -13.1131, -2.59441, 3.02 ) }
    dend_0 { pt3dadd( 2.74588, -14.084, -2.7271, 3.24 ) }
    dend_0 { pt3dadd( 2.97969, -14.8, -2.83539, 3.54 ) }
    dend_0 { pt3dadd( 3.24516, -15.5715, -2.97939, 3.54 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 86/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.50345, 11.5497, -0.359339, 0.88 ) }
    axon_0 { pt3dadd( 2.99451, 26.4754, -0.359339, 0.88 ) }
    axon_0 { pt3dadd( 4.48557, 41.4011, -0.359339, 0.88 ) }
    // Section: dend_88, id: dend_88, parent: dend_78 (entry count 89/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( -52.8824, 94.0394, -36.6754, 0.44 ) }
    dend_88 { pt3dadd( -53.8986, 95.0447, -37.3307, 0.44 ) }
    dend_88 { pt3dadd( -54.3572, 95.5381, -37.6159, 0.37 ) }
    dend_88 { pt3dadd( -54.5651, 95.816, -37.717, 0.66 ) }
    dend_88 { pt3dadd( -54.8861, 96.3247, -37.8457, 0.66 ) }
    dend_88 { pt3dadd( -55.1936, 96.9023, -37.9495, 0.59 ) }
    dend_88 { pt3dadd( -55.3825, 97.3379, -38.0092, 0.81 ) }
    dend_88 { pt3dadd( -55.5302, 97.8859, -38.0139, 0.81 ) }
    dend_88 { pt3dadd( -55.6652, 99.1485, -37.9948, 0.52 ) }
    dend_88 { pt3dadd( -55.6236, 99.745, -37.988, 0.52 ) }
    dend_88 { pt3dadd( -55.3952, 100.66, -38.0083, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_88 { pt3dadd( -55.0264, 101.522, -38.0812, 0.44 ) }
    dend_88 { pt3dadd( -54.5241, 102.346, -38.2141, 0.74 ) }
    dend_88 { pt3dadd( -54.0762, 102.916, -38.3432, 0.74 ) }
    dend_88 { pt3dadd( -53.3333, 103.694, -38.5911, 0.44 ) }
    dend_88 { pt3dadd( -52.7674, 104.235, -38.7591, 0.59 ) }
    dend_88 { pt3dadd( -52.1979, 104.765, -38.9316, 0.59 ) }
    dend_88 { pt3dadd( -51.6271, 105.314, -39.1269, 0.59 ) }
    dend_88 { pt3dadd( -51.1813, 105.798, -39.3149, 0.37 ) }
    dend_88 { pt3dadd( -50.857, 106.185, -39.4741, 0.37 ) }
    dend_88 { pt3dadd( -50.3684, 106.795, -39.7361, 0.59 ) }
    dend_88 { pt3dadd( -49.8862, 107.379, -40.0026, 0.37 ) }
    dend_88 { pt3dadd( -49.4505, 107.883, -40.2413, 0.81 ) }
    dend_88 { pt3dadd( -48.9943, 108.391, -40.4951, 0.81 ) }
    dend_88 { pt3dadd( -48.1605, 109.326, -40.9878, 0.44 ) }
    dend_88 { pt3dadd( -47.5201, 110.062, -41.3827, 0.44 ) }
    dend_88 { pt3dadd( -47.0698, 110.571, -41.6836, 0.81 ) }
    dend_88 { pt3dadd( -46.6134, 111.091, -41.9991, 0.44 ) }
    dend_88 { pt3dadd( -46.3663, 111.391, -42.1879, 0.59 ) }
    dend_88 { pt3dadd( -45.7793, 112.153, -42.7029, 0.59 ) }
    dend_88 { pt3dadd( -45.4332, 112.7, -43.1358, 0.44 ) }
    dend_88 { pt3dadd( -45.0793, 113.461, -43.7783, 0.44 ) }
    dend_88 { pt3dadd( -44.8667, 114.112, -44.4129, 0.96 ) }
    dend_88 { pt3dadd( -44.8031, 114.416, -44.7577, 1.18 ) }
    dend_88 { pt3dadd( -44.7801, 114.694, -45.1136, 1.18 ) }
    dend_88 { pt3dadd( -44.8547, 115.42, -46.3892, 0.44 ) }
    dend_88 { pt3dadd( -44.9991, 115.929, -47.4182, 0.37 ) }
    dend_88 { pt3dadd( -45.1633, 116.327, -48.4864, 0.66 ) }
    dend_88 { pt3dadd( -45.2452, 116.488, -48.989, 0.66 ) }
    dend_88 { pt3dadd( -45.383, 116.725, -49.7931, 0.66 ) }
    dend_88 { pt3dadd( -45.8706, 117.587, -53.0028, 0.44 ) }
    dend_88 { pt3dadd( -45.9487, 117.727, -53.5754, 0.44 ) }
    dend_88 { pt3dadd( -46.33, 118.447, -56.6225, 0.29 ) }
    dend_88 { pt3dadd( -46.4095, 118.619, -57.2689, 0.29 ) }
    dend_88 { pt3dadd( -46.494, 118.84, -58.0041, 0.29 ) }
    dend_88 { pt3dadd( -46.6621, 119.391, -59.5589, 0.74 ) }
    dend_88 { pt3dadd( -46.8434, 120.186, -61.3108, 0.44 ) }
    dend_88 { pt3dadd( -46.8772, 120.398, -61.6905, 0.44 ) }
    dend_88 { pt3dadd( -46.9502, 120.943, -62.3856, 0.37 ) }
    dend_88 { pt3dadd( -47.0218, 121.521, -63.0, 0.88 ) }
    dend_88 { pt3dadd( -47.1564, 122.503, -63.7741, 0.29 ) }
    dend_88 { pt3dadd( -47.2383, 122.909, -64.0, 0.52 ) }
    dend_88 { pt3dadd( -47.4389, 123.652, -64.334, 0.15 ) }
    dend_88 { pt3dadd( -47.6527, 124.305, -64.6457, 0.22 ) }
    dend_88 { pt3dadd( -48.0197, 125.325, -65.139, 0.22 ) }
    dend_88 { pt3dadd( -48.385, 126.212, -65.5467, 0.22 ) }
    dend_88 { pt3dadd( -48.7352, 127.046, -65.9039, 0.22 ) }
    dend_88 { pt3dadd( -49.2809, 128.266, -66.4707, 1.47 ) }
    dend_88 { pt3dadd( -49.6965, 129.159, -66.933, 0.66 ) }
    dend_88 { pt3dadd( -49.9513, 129.732, -67.2433, 0.96 ) }
    dend_88 { pt3dadd( -50.336, 130.683, -67.7516, 0.22 ) }
    dend_88 { pt3dadd( -50.5776, 131.327, -68.0493, 0.22 ) }
    // Section: dend_79, id: dend_79, parent: dend_78 (entry count 51/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( -52.8824, 94.0394, -36.6754, 0.37 ) }
    dend_79 { pt3dadd( -52.6629, 96.2958, -36.2789, 0.37 ) }
    dend_79 { pt3dadd( -52.4442, 97.4123, -36.1897, 0.37 ) }
    dend_79 { pt3dadd( -52.2583, 98.4712, -36.0026, 0.37 ) }
    dend_79 { pt3dadd( -52.0936, 100.059, -35.5884, 0.74 ) }
    dend_79 { pt3dadd( -52.0763, 101.403, -35.1764, 0.29 ) }
    dend_79 { pt3dadd( -52.224, 102.985, -34.6513, 0.29 ) }
    dend_79 { pt3dadd( -52.325, 103.728, -34.3915, 0.52 ) }
    dend_79 { pt3dadd( -52.6715, 105.368, -33.5554, 0.44 ) }
    dend_79 { pt3dadd( -52.9442, 106.412, -32.9094, 0.29 ) }
    dend_79 { pt3dadd( -53.1827, 107.324, -32.3057, 0.29 ) }
    dend_79 { pt3dadd( -53.4148, 108.335, -31.5971, 0.29 ) }
    dend_79 { pt3dadd( -53.6877, 110.043, -30.447, 0.44 ) }
    dend_79 { pt3dadd( -53.8244, 111.428, -29.543, 0.44 ) }
    dend_79 { pt3dadd( -53.8223, 113.187, -28.5199, 0.52 ) }
    dend_79 { pt3dadd( -53.6617, 114.586, -27.7372, 0.37 ) }
    dend_79 { pt3dadd( -53.4112, 115.701, -27.126, 0.37 ) }
    dend_79 { pt3dadd( -53.0111, 116.902, -26.5214, 1.11 ) }
    // Section: dend_69, id: dend_69, parent: dend_53 (entry count 69/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 29.7046, 30.4117, -5.37958, 0.29 ) }
    dend_69 { pt3dadd( 30.5229, 30.3407, -3.63052, 0.29 ) }
    dend_69 { pt3dadd( 31.3221, 30.295, -2.17824, 0.59 ) }
    dend_69 { pt3dadd( 32.1321, 30.2262, -0.902467, 0.74 ) }
    dend_69 { pt3dadd( 32.5843, 30.1877, -0.249818, 0.37 ) }
    dend_69 { pt3dadd( 33.2687, 30.1628, 0.806854, 0.37 ) }
    dend_69 { pt3dadd( 33.6416, 30.1672, 1.42846, 0.66 ) }
    dend_69 { pt3dadd( 33.9148, 30.2155, 1.90764, 0.96 ) }
    dend_69 { pt3dadd( 34.2698, 30.3663, 2.78521, 1.25 ) }
    dend_69 { pt3dadd( 34.743, 30.7387, 4.40743, 0.37 ) }
    dend_69 { pt3dadd( 35.1262, 31.2365, 6.0766, 0.37 ) }
    dend_69 { pt3dadd( 35.2446, 31.4389, 6.65454, 0.37 ) }
    dend_69 { pt3dadd( 35.5193, 31.8883, 7.82938, 0.74 ) }
    dend_69 { pt3dadd( 36.0728, 32.6118, 9.62874, 0.66 ) }
    dend_69 { pt3dadd( 36.5827, 33.1359, 10.8579, 0.52 ) }
    dend_69 { pt3dadd( 37.0391, 33.4379, 11.5782, 0.66 ) }
    dend_69 { pt3dadd( 37.6564, 33.6818, 12.2283, 0.66 ) }
    dend_69 { pt3dadd( 38.5389, 33.914, 12.9411, 0.37 ) }
    dend_69 { pt3dadd( 39.5985, 34.071, 13.6074, 0.52 ) }
    dend_69 { pt3dadd( 40.2008, 34.1034, 13.9282, 0.52 ) }
    dend_69 { pt3dadd( 41.2585, 34.1149, 14.4657, 0.66 ) }
    dend_69 { pt3dadd( 41.8546, 34.0989, 14.7613, 0.88 ) }
    dend_69 { pt3dadd( 42.6522, 34.0777, 15.1349, 0.88 ) }
    dend_69 { pt3dadd( 43.5695, 34.0938, 15.6062, 0.66 ) }
    dend_69 { pt3dadd( 44.7128, 34.1825, 16.2077, 0.29 ) }
    dend_69 { pt3dadd( 45.7143, 34.3225, 16.7177, 0.29 ) }
    dend_69 { pt3dadd( 47.232, 34.6738, 17.4479, 0.88 ) }
    dend_69 { pt3dadd( 47.6523, 34.7908, 17.6448, 0.88 ) }
    dend_69 { pt3dadd( 49.3394, 35.3213, 18.3967, 0.29 ) }
    dend_69 { pt3dadd( 50.6463, 35.7787, 18.9317, 0.29 ) }
    dend_69 { pt3dadd( 51.9013, 36.2567, 19.4001, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_69 { pt3dadd( 53.398, 36.8607, 19.9231, 0.29 ) }
    dend_69 { pt3dadd( 54.4871, 37.3073, 20.2969, 0.29 ) }
    dend_69 { pt3dadd( 55.4999, 37.6959, 20.6225, 0.81 ) }
    dend_69 { pt3dadd( 56.3046, 37.9755, 20.8341, 0.81 ) }
    dend_69 { pt3dadd( 57.0195, 38.2107, 21.0184, 0.81 ) }
    dend_69 { pt3dadd( 58.1042, 38.5407, 21.2958, 0.59 ) }
    dend_69 { pt3dadd( 59.3668, 38.8733, 21.6287, 0.29 ) }
    dend_69 { pt3dadd( 60.4777, 39.2097, 21.931, 0.81 ) }
    dend_69 { pt3dadd( 61.5728, 39.5471, 22.239, 0.22 ) }
    dend_69 { pt3dadd( 62.5452, 39.8269, 22.5138, 0.22 ) }
    dend_69 { pt3dadd( 63.1643, 39.9767, 22.6798, 0.52 ) }
    dend_69 { pt3dadd( 64.028, 40.1372, 22.8618, 0.22 ) }
    dend_69 { pt3dadd( 72.0798, 42.8779, 29.4917, 0.22 ) }
    dend_69 { pt3dadd( 79.3419, 46.0141, 36.8216, 0.22 ) }
    dend_69 { pt3dadd( 88.1099, 47.1059, 43.0047, 0.22 ) }
    dend_69 { pt3dadd( 96.8723, 46.2752, 49.2362, 0.22 ) }
    dend_69 { pt3dadd( 105.523, 46.8348, 55.6515, 0.22 ) }
    dend_69 { pt3dadd( 112.241, 46.3194, 64.0723, 0.22 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 18/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 29.7046, 30.4117, -5.37958, 0.81 ) }
    dend_54 { pt3dadd( 30.9333, 30.4664, -5.07913, 0.81 ) }
    dend_54 { pt3dadd( 31.5116, 30.4314, -4.97456, 1.03 ) }
    dend_54 { pt3dadd( 33.0347, 30.283, -4.84792, 0.96 ) }
    dend_54 { pt3dadd( 33.8657, 30.2136, -4.82249, 0.96 ) }
    dend_54 { pt3dadd( 34.8328, 30.1788, -4.82077, 0.59 ) }
    dend_54 { pt3dadd( 35.505, 30.192, -4.83238, 0.66 ) }
    dend_54 { pt3dadd( 36.4041, 30.2182, -4.87692, 0.66 ) }
    dend_54 { pt3dadd( 37.4718, 30.3462, -4.98772, 0.59 ) }
    dend_54 { pt3dadd( 38.0274, 30.5115, -5.10314, 0.81 ) }
    dend_54 { pt3dadd( 38.7302, 30.8504, -5.2601, 0.96 ) }
    dend_54 { pt3dadd( 39.3779, 31.2472, -5.40335, 1.25 ) }
    dend_54 { pt3dadd( 39.8469, 31.546, -5.49969, 1.4 ) }
    dend_54 { pt3dadd( 40.439, 31.9065, -5.59522, 1.4 ) }
    dend_54 { pt3dadd( 41.41, 32.3973, -5.7036, 0.59 ) }
    dend_54 { pt3dadd( 41.8052, 32.5267, -5.74332, 0.59 ) }
    dend_54 { pt3dadd( 42.6274, 32.6327, -5.81834, 0.59 ) }
    dend_54 { pt3dadd( 43.526, 32.6101, -5.89119, 1.03 ) }
    dend_54 { pt3dadd( 44.1647, 32.5262, -5.93573, 1.18 ) }
    dend_54 { pt3dadd( 44.7229, 32.4045, -5.94599, 1.18 ) }
    dend_54 { pt3dadd( 45.6286, 32.1487, -5.9139, 0.74 ) }
    dend_54 { pt3dadd( 46.5048, 31.8769, -5.8268, 0.66 ) }
    dend_54 { pt3dadd( 46.9229, 31.7481, -5.76747, 0.96 ) }
    dend_54 { pt3dadd( 47.4691, 31.6036, -5.68442, 0.96 ) }
    dend_54 { pt3dadd( 48.4491, 31.3925, -5.54041, 1.03 ) }
    dend_54 { pt3dadd( 48.9123, 31.3227, -5.47182, 1.03 ) }
    dend_54 { pt3dadd( 50.2006, 31.2739, -5.29287, 0.59 ) }
    dend_54 { pt3dadd( 50.8988, 31.3258, -5.20968, 0.59 ) }
    dend_54 { pt3dadd( 52.1419, 31.5148, -5.09803, 0.59 ) }
    dend_54 { pt3dadd( 52.7486, 31.6515, -5.06537, 0.81 ) }
    dend_54 { pt3dadd( 53.3131, 31.8326, -5.06284, 0.81 ) }
    dend_54 { pt3dadd( 54.4584, 32.2959, -5.11592, 0.37 ) }
    dend_54 { pt3dadd( 55.1753, 32.6147, -5.19214, 0.66 ) }
    dend_54 { pt3dadd( 55.8106, 32.8745, -5.26717, 0.74 ) }
    dend_54 { pt3dadd( 56.2079, 33.0123, -5.32465, 0.74 ) }
    dend_54 { pt3dadd( 56.9818, 33.2003, -5.45879, 0.74 ) }
    dend_54 { pt3dadd( 57.8085, 33.2886, -5.62335, 0.52 ) }
    dend_54 { pt3dadd( 58.9546, 33.259, -5.87446, 0.74 ) }
    dend_54 { pt3dadd( 59.8187, 33.1804, -6.04843, 0.88 ) }
    dend_54 { pt3dadd( 60.2946, 33.1272, -6.11813, 0.96 ) }
    dend_54 { pt3dadd( 60.7705, 33.0775, -6.15698, 1.18 ) }
    dend_54 { pt3dadd( 61.4997, 33.0217, -6.16249, 1.18 ) }
    dend_54 { pt3dadd( 62.06, 33.0241, -6.10985, 0.66 ) }
    dend_54 { pt3dadd( 63.0673, 33.186, -5.89193, 0.59 ) }
    dend_54 { pt3dadd( 63.742, 33.3827, -5.62545, 0.59 ) }
    dend_54 { pt3dadd( 64.195, 33.5532, -5.39149, 0.74 ) }
    dend_54 { pt3dadd( 64.5532, 33.716, -5.16934, 0.74 ) }
    dend_54 { pt3dadd( 64.9097, 33.8955, -4.9182, 0.74 ) }
    dend_54 { pt3dadd( 65.5958, 34.2595, -4.38031, 0.59 ) }
    dend_54 { pt3dadd( 66.5131, 34.7656, -3.58826, 0.96 ) }
    dend_54 { pt3dadd( 66.9504, 34.9996, -3.207, 1.25 ) }
    dend_54 { pt3dadd( 67.1894, 35.1189, -2.98479, 1.25 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 70/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 79.5412, 47.28, 70.0476, 0.29 ) }
    dend_52 { pt3dadd( 86.2781, 51.0278, 77.0085, 0.29 ) }
    dend_52 { pt3dadd( 93.9376, 54.9378, 82.8335, 0.29 ) }
    dend_52 { pt3dadd( 101.735, 59.736, 87.7393, 0.29 ) }
    dend_52 { pt3dadd( 108.616, 63.8326, 94.3541, 0.29 ) }
    dend_52 { pt3dadd( 114.962, 69.0828, 100.683, 0.29 ) }
    dend_52 { pt3dadd( 119.864, 74.8211, 107.82, 0.29 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 77/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 79.5412, 47.28, 70.0476, 0.29 ) }
    dend_51 { pt3dadd( 86.1154, 50.5316, 76.0704, 0.29 ) }
    dend_51 { pt3dadd( 92.4774, 55.5379, 81.0232, 0.29 ) }
    dend_51 { pt3dadd( 98.0662, 61.6426, 85.6672, 0.29 ) }
    dend_51 { pt3dadd( 103.392, 66.6572, 91.7135, 0.29 ) }
    dend_51 { pt3dadd( 108.706, 72.1362, 97.3541, 0.29 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 83/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -26.5194, -9.18106, -26.6962, 0.74 ) }
    dend_46 { pt3dadd( -27.5011, -10.0602, -27.0114, 0.74 ) }
    dend_46 { pt3dadd( -28.0421, -10.4274, -27.1423, 0.74 ) }
    dend_46 { pt3dadd( -28.5087, -10.6749, -27.2499, 0.74 ) }
    dend_46 { pt3dadd( -29.2692, -10.917, -27.4908, 0.66 ) }
    dend_46 { pt3dadd( -29.8355, -11.0058, -27.7123, 0.66 ) }
    dend_46 { pt3dadd( -30.4433, -11.0508, -27.9744, 0.59 ) }
    dend_46 { pt3dadd( -30.873, -11.0043, -28.148, 1.25 ) }
    dend_46 { pt3dadd( -31.2274, -10.9328, -28.3066, 1.25 ) }
    dend_46 { pt3dadd( -32.3128, -10.6902, -28.839, 0.66 ) }
    dend_46 { pt3dadd( -32.8508, -10.5868, -29.121, 0.66 ) }
    dend_46 { pt3dadd( -33.1363, -10.571, -29.2857, 0.96 ) }
    dend_46 { pt3dadd( -33.5489, -10.6325, -29.5412, 0.96 ) }
    dend_46 { pt3dadd( -33.8303, -10.743, -29.7977, 0.96 ) }
    dend_46 { pt3dadd( -34.2481, -11.055, -30.4545, 0.74 ) }
    dend_46 { pt3dadd( -34.4639, -11.3053, -30.9701, 0.52 ) }
    dend_46 { pt3dadd( -34.6768, -11.6088, -31.618, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_46 { pt3dadd( -34.8127, -11.8289, -32.0989, 1.03 ) }
    dend_46 { pt3dadd( -35.3039, -12.7017, -34.0665, 1.25 ) }
    dend_46 { pt3dadd( -35.6371, -13.3117, -35.4935, 0.66 ) }
    dend_46 { pt3dadd( -35.804, -13.6019, -36.1977, 0.66 ) }
    dend_46 { pt3dadd( -35.912, -13.7497, -36.5654, 1.11 ) }
    dend_46 { pt3dadd( -36.0134, -13.843, -36.7838, 1.33 ) }
    dend_46 { pt3dadd( -36.1656, -13.9494, -36.968, 1.18 ) }
    dend_46 { pt3dadd( -36.4124, -14.1057, -37.0742, 1.18 ) }
    dend_46 { pt3dadd( -36.979, -14.4636, -37.2307, 0.59 ) }
    dend_46 { pt3dadd( -37.5577, -14.8723, -37.4172, 0.52 ) }
    dend_46 { pt3dadd( -38.0091, -15.237, -37.6125, 0.52 ) }
    dend_46 { pt3dadd( -38.3779, -15.5825, -37.8545, 0.81 ) }
    dend_46 { pt3dadd( -38.7334, -15.974, -38.1998, 0.66 ) }
    dend_46 { pt3dadd( -39.0635, -16.374, -38.6001, 0.66 ) }
    dend_46 { pt3dadd( -39.2997, -16.685, -38.9485, 1.33 ) }
    dend_46 { pt3dadd( -39.4572, -16.902, -39.201, 1.33 ) }
    dend_46 { pt3dadd( -39.9488, -17.5814, -40.0024, 0.66 ) }
    dend_46 { pt3dadd( -40.3834, -18.1619, -40.6832, 0.52 ) }
    dend_46 { pt3dadd( -40.5915, -18.4166, -40.9864, 0.52 ) }
    dend_46 { pt3dadd( -40.8658, -18.7111, -41.2924, 0.96 ) }
    dend_46 { pt3dadd( -41.0643, -18.9061, -41.4532, 1.18 ) }
    dend_46 { pt3dadd( -41.2075, -19.0446, -41.5246, 1.18 ) }
    dend_46 { pt3dadd( -41.5038, -19.3551, -41.5829, 0.81 ) }
    dend_46 { pt3dadd( -41.9035, -19.8214, -41.588, 0.74 ) }
    dend_46 { pt3dadd( -42.3913, -20.4574, -41.5424, 0.59 ) }
    dend_46 { pt3dadd( -42.6356, -20.7763, -41.4962, 0.74 ) }
    dend_46 { pt3dadd( -42.9632, -21.188, -41.4106, 0.74 ) }
    dend_46 { pt3dadd( -43.3198, -21.5936, -41.306, 0.59 ) }
    dend_46 { pt3dadd( -43.6589, -21.9578, -41.1977, 0.44 ) }
    dend_46 { pt3dadd( -44.0393, -22.3624, -41.0703, 0.44 ) }
    dend_46 { pt3dadd( -44.4071, -22.7461, -40.9665, 0.44 ) }
    dend_46 { pt3dadd( -44.7914, -23.1829, -40.8655, 0.44 ) }
    dend_46 { pt3dadd( -45.4145, -23.97, -40.7164, 0.44 ) }
    dend_46 { pt3dadd( -45.5653, -24.2012, -40.6816, 0.96 ) }
    dend_46 { pt3dadd( -45.826, -24.749, -40.646, 1.18 ) }
    dend_46 { pt3dadd( -45.9758, -25.2303, -40.6511, 0.81 ) }
    dend_46 { pt3dadd( -46.1146, -26.0129, -40.7375, 0.59 ) }
    dend_46 { pt3dadd( -46.1529, -26.35, -40.8133, 0.74 ) }
    dend_46 { pt3dadd( -46.2107, -26.8905, -40.9729, 0.66 ) }
    dend_46 { pt3dadd( -46.3085, -27.4193, -41.1513, 0.66 ) }
    dend_46 { pt3dadd( -46.4183, -27.8106, -41.297, 0.81 ) }
    dend_46 { pt3dadd( -46.6821, -28.5312, -41.5641, 0.59 ) }
    dend_46 { pt3dadd( -46.9509, -29.1652, -41.7875, 0.52 ) }
    dend_46 { pt3dadd( -47.1999, -29.7811, -41.9867, 0.81 ) }
    dend_46 { pt3dadd( -47.4116, -30.3806, -42.1556, 1.4 ) }
    dend_46 { pt3dadd( -47.4972, -30.7379, -42.2156, 1.69 ) }
    dend_46 { pt3dadd( -47.5848, -31.4383, -42.2554, 0.52 ) }
    dend_46 { pt3dadd( -47.6325, -32.0163, -42.2915, 0.44 ) }
    dend_46 { pt3dadd( -47.6642, -32.597, -42.4063, 0.44 ) }
    dend_46 { pt3dadd( -47.694, -33.0021, -42.5722, 0.29 ) }
    dend_46 { pt3dadd( -47.8042, -33.7529, -42.9977, 1.4 ) }
    dend_46 { pt3dadd( -47.8386, -33.9026, -43.095, 1.4 ) }
    dend_46 { pt3dadd( -48.2729, -35.2232, -44.1371, 0.52 ) }
    dend_46 { pt3dadd( -48.5738, -35.9515, -44.7693, 0.52 ) }
    dend_46 { pt3dadd( -48.7509, -36.3284, -45.1092, 0.52 ) }
    dend_46 { pt3dadd( -49.0204, -36.8901, -45.614, 0.74 ) }
    dend_46 { pt3dadd( -49.1966, -37.2672, -45.9412, 0.88 ) }
    dend_46 { pt3dadd( -49.5549, -38.13, -46.5835, 0.44 ) }
    dend_46 { pt3dadd( -49.7104, -38.5669, -46.8327, 0.59 ) }
    dend_46 { pt3dadd( -49.8952, -39.058, -47.0892, 0.59 ) }
    dend_46 { pt3dadd( -50.1142, -39.5567, -47.3679, 0.37 ) }
    dend_46 { pt3dadd( -50.2549, -39.8575, -47.5455, 0.59 ) }
    dend_46 { pt3dadd( -50.5252, -40.3943, -47.8558, 0.81 ) }
    dend_46 { pt3dadd( -50.7946, -40.8868, -48.0967, 1.18 ) }
    dend_46 { pt3dadd( -50.9732, -41.19, -48.2479, 1.18 ) }
    dend_46 { pt3dadd( -51.4797, -41.9439, -48.6696, 0.74 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 66/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -26.5194, -9.18106, -26.6962, 0.81 ) }
    dend_45 { pt3dadd( -27.8392, -7.19136, -25.9514, 0.81 ) }
    dend_45 { pt3dadd( -28.4135, -6.51878, -25.6022, 0.81 ) }
    dend_45 { pt3dadd( -29.2484, -5.79043, -25.1126, 0.81 ) }
    dend_45 { pt3dadd( -30.0965, -5.31193, -24.686, 0.88 ) }
    dend_45 { pt3dadd( -31.0685, -5.04979, -24.3353, 0.66 ) }
    dend_45 { pt3dadd( -32.826, -4.8406, -23.8758, 0.59 ) }
    dend_45 { pt3dadd( -34.0017, -5.04336, -23.7402, 0.59 ) }
    dend_45 { pt3dadd( -35.0508, -5.34533, -23.8651, 0.59 ) }
    dend_45 { pt3dadd( -36.4384, -5.85008, -24.3215, 0.74 ) }
    dend_45 { pt3dadd( -37.9393, -6.43077, -25.1435, 1.03 ) }
    dend_45 { pt3dadd( -38.4688, -6.63173, -25.4946, 1.62 ) }
    dend_45 { pt3dadd( -39.1962, -6.87989, -26.0262, 1.92 ) }
    dend_45 { pt3dadd( -41.5114, -7.60061, -27.6498, 0.88 ) }
    dend_45 { pt3dadd( -42.4051, -7.85412, -28.2515, 0.66 ) }
    dend_45 { pt3dadd( -43.7134, -8.22841, -29.09, 0.66 ) }
    dend_45 { pt3dadd( -45.4709, -8.74481, -30.1555, 0.66 ) }
    dend_45 { pt3dadd( -46.2529, -8.9627, -30.6002, 0.66 ) }
    dend_45 { pt3dadd( -47.9635, -9.36976, -31.4392, 0.66 ) }
    dend_45 { pt3dadd( -49.0611, -9.57286, -31.8909, 0.44 ) }
    dend_45 { pt3dadd( -50.4681, -9.73355, -32.4703, 0.44 ) }
    dend_45 { pt3dadd( -51.5165, -9.77566, -32.9259, 0.44 ) }
    dend_45 { pt3dadd( -52.78, -9.72041, -33.5658, 0.66 ) }
    dend_45 { pt3dadd( -53.6729, -9.63994, -34.046, 0.66 ) }
    dend_45 { pt3dadd( -54.7422, -9.48162, -34.6028, 0.66 ) }
    dend_45 { pt3dadd( -55.6672, -9.31824, -35.0088, 0.66 ) }
    dend_45 { pt3dadd( -56.7302, -9.07398, -35.3781, 0.44 ) }
    dend_45 { pt3dadd( -57.4754, -8.87204, -35.6046, 0.74 ) }
    dend_45 { pt3dadd( -58.5871, -8.55205, -35.9073, 0.74 ) }
    dend_45 { pt3dadd( -59.5784, -8.2592, -36.1682, 0.74 ) }
    dend_45 { pt3dadd( -60.4201, -8.0154, -36.3726, 0.74 ) }
    dend_45 { pt3dadd( -61.3797, -7.74995, -36.5912, 0.37 ) }
    dend_45 { pt3dadd( -62.7787, -7.49058, -37.0014, 0.37 ) }
    dend_45 { pt3dadd( -63.3619, -7.48491, -37.249, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_45 { pt3dadd( -63.9566, -7.5967, -37.6141, 0.88 ) }
    dend_45 { pt3dadd( -64.7308, -7.8408, -38.1661, 1.18 ) }
    dend_45 { pt3dadd( -65.3591, -8.06435, -38.6809, 1.33 ) }
    dend_45 { pt3dadd( -66.9603, -8.65818, -40.1165, 0.44 ) }
    dend_45 { pt3dadd( -68.1257, -9.02294, -41.218, 0.44 ) }
    dend_45 { pt3dadd( -69.0862, -9.18873, -42.1816, 0.44 ) }
    dend_45 { pt3dadd( -69.9883, -9.17137, -43.0778, 0.88 ) }
    dend_45 { pt3dadd( -71.002, -8.9218, -44.0018, 1.03 ) }
    dend_45 { pt3dadd( -71.4366, -8.7103, -44.3272, 1.03 ) }
    dend_45 { pt3dadd( -72.6022, -7.90711, -44.8876, 0.44 ) }
    dend_45 { pt3dadd( -73.3093, -7.38569, -45.1509, 0.44 ) }
    dend_45 { pt3dadd( -74.1232, -6.85885, -45.3642, 0.44 ) }
    dend_45 { pt3dadd( -74.7717, -6.53752, -45.5356, 0.59 ) }
    dend_45 { pt3dadd( -75.8064, -6.19801, -45.7935, 0.59 ) }
    dend_45 { pt3dadd( -76.827, -6.03001, -46.0935, 0.74 ) }
    dend_45 { pt3dadd( -78.6275, -6.05659, -46.7049, 0.37 ) }
    dend_45 { pt3dadd( -79.7264, -6.22711, -47.1673, 0.37 ) }
    dend_45 { pt3dadd( -81.3102, -6.6809, -47.9661, 0.59 ) }
    dend_45 { pt3dadd( -81.9163, -6.9261, -48.3282, 0.88 ) }
    dend_45 { pt3dadd( -83.0579, -7.52399, -49.1532, 0.66 ) }
    dend_45 { pt3dadd( -83.8145, -7.98245, -49.7603, 0.74 ) }
    dend_45 { pt3dadd( -84.6084, -8.52311, -50.4216, 0.59 ) }
    dend_45 { pt3dadd( -85.2882, -9.00417, -51.0331, 0.52 ) }
    dend_45 { pt3dadd( -85.9257, -9.44995, -51.6041, 0.88 ) }
    dend_45 { pt3dadd( -87.1235, -10.1682, -52.6529, 0.59 ) }
    dend_45 { pt3dadd( -87.8408, -10.5105, -53.2498, 0.44 ) }
    dend_45 { pt3dadd( -88.6568, -10.807, -53.8977, 1.03 ) }
    dend_45 { pt3dadd( -89.2402, -10.9632, -54.3286, 1.33 ) }
    dend_45 { pt3dadd( -89.6085, -11.0326, -54.5722, 1.4 ) }
    dend_45 { pt3dadd( -91.1765, -11.2714, -55.4855, 0.44 ) }
    dend_45 { pt3dadd( -91.8121, -11.3642, -55.8281, 0.44 ) }
    dend_45 { pt3dadd( -92.7535, -11.4929, -56.2946, 0.44 ) }
    dend_45 { pt3dadd( -93.7487, -11.6143, -56.7366, 0.44 ) }
    dend_45 { pt3dadd( -95.3647, -11.8019, -57.4422, 0.59 ) }
    dend_45 { pt3dadd( -96.4885, -11.9057, -58.0084, 0.88 ) }
    dend_45 { pt3dadd( -97.5352, -11.9217, -58.6603, 1.11 ) }
    dend_45 { pt3dadd( -98.9025, -11.8572, -59.6237, 0.52 ) }
    dend_45 { pt3dadd( -99.8974, -11.7375, -60.372, 0.52 ) }
    dend_45 { pt3dadd( -100.735, -11.5931, -61.0238, 1.03 ) }
    dend_45 { pt3dadd( -102.61, -11.2098, -62.568, 1.25 ) }
    dend_45 { pt3dadd( -104.816, -10.826, -64.4153, 0.52 ) }
    dend_45 { pt3dadd( -105.567, -10.7245, -65.0436, 0.59 ) }
    dend_45 { pt3dadd( -106.563, -10.6403, -65.85, 0.59 ) }
    dend_45 { pt3dadd( -108.122, -10.5654, -66.9665, 0.44 ) }
    dend_45 { pt3dadd( -109.185, -10.5521, -67.5841, 0.44 ) }
    dend_45 { pt3dadd( -110.748, -10.5297, -68.2913, 0.44 ) }
    dend_45 { pt3dadd( -111.59, -10.4828, -68.6364, 0.44 ) }
    dend_45 { pt3dadd( -112.776, -10.2504, -69.236, 0.66 ) }
    dend_45 { pt3dadd( -113.644, -9.92988, -69.7654, 0.88 ) }
    dend_45 { pt3dadd( -114.12, -9.66415, -70.0773, 0.88 ) }
    dend_45 { pt3dadd( -115.523, -8.6654, -71.0045, 0.52 ) }
    dend_45 { pt3dadd( -116.399, -7.91694, -71.5889, 0.52 ) }
    dend_45 { pt3dadd( -117.649, -6.69074, -72.5166, 0.81 ) }
    dend_45 { pt3dadd( -118.532, -5.71123, -73.2124, 0.44 ) }
    dend_45 { pt3dadd( -119.042, -5.09341, -73.642, 0.44 ) }
    dend_45 { pt3dadd( -119.628, -4.27686, -74.1677, 0.74 ) }
    dend_45 { pt3dadd( -119.994, -3.65848, -74.5035, 0.96 ) }
    dend_45 { pt3dadd( -120.74, -2.06958, -75.1533, 0.66 ) }
    dend_45 { pt3dadd( -121.164, -1.0729, -75.5289, 0.44 ) }
    dend_45 { pt3dadd( -121.648, 0.0206923, -75.9866, 0.44 ) }
    dend_45 { pt3dadd( -122.2, 1.05907, -76.5164, 0.44 ) }
    dend_45 { pt3dadd( -122.454, 1.40883, -76.7399, 0.44 ) }
    dend_45 { pt3dadd( -123.228, 2.08201, -77.2876, 0.96 ) }
    dend_45 { pt3dadd( -124.838, 2.66235, -78.1351, 0.66 ) }
    dend_45 { pt3dadd( -125.869, 2.83493, -78.6247, 0.96 ) }
    dend_45 { pt3dadd( -126.358, 2.8742, -78.8163, 1.25 ) }
    dend_45 { pt3dadd( -126.929, 2.89795, -79.0165, 1.25 ) }
    dend_45 { pt3dadd( -127.839, 2.95273, -79.3113, 1.25 ) }
    dend_45 { pt3dadd( -129.434, 3.18325, -79.7826, 0.37 ) }
    dend_45 { pt3dadd( -130.421, 3.49275, -79.9841, 0.37 ) }
    dend_45 { pt3dadd( -131.092, 3.80272, -80.1308, 0.66 ) }
    dend_45 { pt3dadd( -131.611, 4.06328, -80.2311, 0.81 ) }
    dend_45 { pt3dadd( -132.418, 4.46757, -80.3466, 0.81 ) }
    dend_45 { pt3dadd( -133.66, 5.06254, -80.4167, 0.44 ) }
    dend_45 { pt3dadd( -134.497, 5.40098, -80.3772, 0.44 ) }
    dend_45 { pt3dadd( -135.998, 5.86603, -80.2241, 0.44 ) }
    dend_45 { pt3dadd( -137.645, 6.30387, -79.9834, 0.44 ) }
    dend_45 { pt3dadd( -138.891, 6.61491, -79.7472, 0.66 ) }
    dend_45 { pt3dadd( -140.181, 6.91644, -79.4471, 0.96 ) }
    dend_45 { pt3dadd( -141.475, 7.189, -79.0684, 0.59 ) }
    dend_45 { pt3dadd( -142.574, 7.43119, -78.7042, 0.44 ) }
    dend_45 { pt3dadd( -143.71, 7.69158, -78.3151, 0.44 ) }
    dend_45 { pt3dadd( -144.818, 7.95823, -77.9977, 0.44 ) }
    dend_45 { pt3dadd( -145.785, 8.1569, -77.842, 0.44 ) }
    dend_45 { pt3dadd( -146.901, 8.3027, -77.8469, 0.74 ) }
    dend_45 { pt3dadd( -147.454, 8.33663, -77.9301, 0.74 ) }
    dend_45 { pt3dadd( -149.019, 8.31907, -78.2886, 0.52 ) }
    dend_45 { pt3dadd( -149.731, 8.28601, -78.4968, 0.59 ) }
    dend_45 { pt3dadd( -151.051, 8.21456, -78.9353, 0.44 ) }
    dend_45 { pt3dadd( -152.047, 8.20201, -79.2694, 0.44 ) }
    dend_45 { pt3dadd( -153.317, 8.30645, -79.7119, 0.37 ) }
    dend_45 { pt3dadd( -154.609, 8.51836, -80.121, 0.52 ) }
    dend_45 { pt3dadd( -155.648, 8.78116, -80.4225, 1.11 ) }
    dend_45 { pt3dadd( -156.472, 9.05591, -80.6854, 1.25 ) }
    dend_45 { pt3dadd( -157.461, 9.45223, -81.061, 0.37 ) }
    dend_45 { pt3dadd( -158.89, 10.0715, -81.7207, 0.37 ) }
    dend_45 { pt3dadd( -159.86, 10.4812, -82.2523, 0.29 ) }
    dend_45 { pt3dadd( -160.631, 10.7979, -82.7521, 0.29 ) }
    dend_45 { pt3dadd( -162.021, 11.3695, -83.7279, 0.59 ) }
    dend_45 { pt3dadd( -163.128, 11.854, -84.5333, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_45 { pt3dadd( -163.758, 12.1458, -84.9877, 0.29 ) }
    dend_45 { pt3dadd( -164.257, 12.3925, -85.2989, 0.37 ) }
    dend_45 { pt3dadd( -165.056, 12.8379, -85.7225, 0.37 ) }
    dend_45 { pt3dadd( -166.151, 13.4715, -86.1373, 0.44 ) }
    dend_45 { pt3dadd( -167.065, 13.9991, -86.3249, 0.44 ) }
    dend_45 { pt3dadd( -167.928, 14.4788, -86.4082, 0.44 ) }
    dend_45 { pt3dadd( -168.956, 14.9921, -86.4849, 0.37 ) }
    dend_45 { pt3dadd( -169.366, 15.1615, -86.5114, 0.37 ) }
    dend_45 { pt3dadd( -170.394, 15.4705, -86.558, 0.88 ) }
    dend_45 { pt3dadd( -170.98, 15.5943, -86.5828, 1.11 ) }
    dend_45 { pt3dadd( -172.025, 15.7784, -86.6296, 1.11 ) }
    dend_45 { pt3dadd( -173.672, 16.0955, -86.6823, 0.37 ) }
    dend_45 { pt3dadd( -174.959, 16.3944, -86.6963, 0.37 ) }
    dend_45 { pt3dadd( -175.706, 16.6232, -86.6761, 0.66 ) }
    dend_45 { pt3dadd( -176.86, 17.1517, -86.6294, 0.66 ) }
    dend_45 { pt3dadd( -177.796, 17.7368, -86.5849, 0.37 ) }
    dend_45 { pt3dadd( -178.613, 18.4059, -86.547, 0.52 ) }
    dend_45 { pt3dadd( -178.925, 18.7155, -86.5338, 0.66 ) }
    dend_45 { pt3dadd( -179.391, 19.2299, -86.5083, 0.66 ) }
    dend_45 { pt3dadd( -180.661, 20.6514, -86.4198, 0.37 ) }
    dend_45 { pt3dadd( -181.246, 21.2477, -86.3453, 0.37 ) }
    dend_45 { pt3dadd( -181.853, 21.6947, -86.2049, 0.37 ) }
    dend_45 { pt3dadd( -182.462, 21.9864, -86.0049, 0.88 ) }
    dend_45 { pt3dadd( -183.416, 22.2853, -85.6383, 0.81 ) }
    dend_45 { pt3dadd( -183.876, 22.3776, -85.448, 0.81 ) }
    dend_45 { pt3dadd( -185.021, 22.5312, -84.9452, 0.29 ) }
    dend_45 { pt3dadd( -186.517, 22.7027, -84.2819, 0.29 ) }
    dend_45 { pt3dadd( -187.447, 22.8348, -83.7897, 0.52 ) }
    dend_45 { pt3dadd( -188.58, 23.0536, -83.1534, 0.44 ) }
    dend_45 { pt3dadd( -189.135, 23.1804, -82.8358, 0.44 ) }
    dend_45 { pt3dadd( -189.869, 23.3729, -82.3804, 0.81 ) }
    dend_45 { pt3dadd( -190.739, 23.6671, -81.7934, 0.81 ) }
    dend_45 { pt3dadd( -192.387, 24.3909, -80.5741, 0.29 ) }
    dend_45 { pt3dadd( -193.05, 24.7157, -80.0606, 0.44 ) }
    dend_45 { pt3dadd( -193.671, 25.0243, -79.5389, 0.29 ) }
    dend_45 { pt3dadd( -194.358, 25.3432, -78.9798, 0.29 ) }
    dend_45 { pt3dadd( -195.263, 25.7284, -78.3015, 0.29 ) }
    dend_45 { pt3dadd( -195.962, 26.0035, -77.8387, 0.29 ) }
    dend_45 { pt3dadd( -196.79, 26.2926, -77.359, 0.59 ) }
    dend_45 { pt3dadd( -198.378, 26.8142, -76.4245, 0.22 ) }
    dend_45 { pt3dadd( -199.4, 27.1394, -75.8283, 0.22 ) }
    dend_45 { pt3dadd( -199.939, 27.2807, -75.5174, 0.52 ) }
    dend_45 { pt3dadd( -200.431, 27.3628, -75.2307, 0.52 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 43/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -86.3206, -50.6528, 82.0908, 0.29 ) }
    dend_43 { pt3dadd( -92.4249, -54.6682, 87.7794, 0.29 ) }
    dend_43 { pt3dadd( -97.4841, -60.2773, 93.1357, 0.29 ) }
    dend_43 { pt3dadd( -102.205, -65.896, 98.7822, 0.29 ) }
    dend_43 { pt3dadd( -106.548, -72.0895, 104.123, 0.29 ) }
    dend_43 { pt3dadd( -109.672, -78.9616, 109.487, 0.29 ) }
    dend_43 { pt3dadd( -113.558, -85.5795, 114.668, 0.29 ) }
    dend_43 { pt3dadd( -117.474, -92.2028, 119.82, 0.29 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 51/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -86.3206, -50.6528, 82.0908, 0.29 ) }
    dend_42 { pt3dadd( -93.6343, -54.6421, 88.4929, 0.29 ) }
    dend_42 { pt3dadd( -101.185, -59.6767, 93.7868, 0.29 ) }
    dend_42 { pt3dadd( -108.07, -65.4647, 99.217, 0.29 ) }
    dend_42 { pt3dadd( -114.036, -71.8231, 105.08, 0.29 ) }
    dend_42 { pt3dadd( -119.646, -78.8384, 110.53, 0.29 ) }
    dend_42 { pt3dadd( -124.463, -86.9723, 115.115, 0.29 ) }
    dend_42 { pt3dadd( -129.826, -94.1948, 120.543, 0.29 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 59/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -12.1095, -78.951, 20.7505, 0.66 ) }
    dend_34 { pt3dadd( -12.8646, -81.6021, 19.7189, 0.66 ) }
    dend_34 { pt3dadd( -13.0575, -82.3056, 19.4716, 1.03 ) }
    dend_34 { pt3dadd( -13.256, -83.0412, 19.3024, 1.03 ) }
    dend_34 { pt3dadd( -13.6273, -84.4467, 19.1116, 1.03 ) }
    dend_34 { pt3dadd( -13.8784, -85.5114, 19.0459, 1.03 ) }
    dend_34 { pt3dadd( -14.1437, -86.8119, 19.0469, 0.81 ) }
    dend_34 { pt3dadd( -14.3225, -87.9749, 19.2561, 0.81 ) }
    dend_34 { pt3dadd( -14.4314, -89.6797, 19.716, 1.4 ) }
    dend_34 { pt3dadd( -14.4237, -90.4099, 19.969, 1.62 ) }
    dend_34 { pt3dadd( -14.3359, -91.4985, 20.4522, 1.4 ) }
    dend_34 { pt3dadd( -14.2272, -92.2155, 20.7998, 1.92 ) }
    dend_34 { pt3dadd( -14.0146, -93.1881, 21.2887, 1.4 ) }
    dend_34 { pt3dadd( -13.6074, -94.6591, 22.0456, 1.69 ) }
    dend_34 { pt3dadd( -13.2977, -95.6419, 22.5042, 1.11 ) }
    dend_34 { pt3dadd( -12.8805, -96.9611, 23.0848, 0.81 ) }
    dend_34 { pt3dadd( -12.6956, -97.5848, 23.3392, 1.11 ) }
    dend_34 { pt3dadd( -12.4992, -98.3308, 23.6128, 1.25 ) }
    dend_34 { pt3dadd( -12.1409, -99.9952, 24.1621, 0.96 ) }
    dend_34 { pt3dadd( -12.028, -100.841, 24.3968, 0.74 ) }
    dend_34 { pt3dadd( -11.998, -101.654, 24.5786, 0.81 ) }
    dend_34 { pt3dadd( -12.1281, -102.895, 24.7558, 0.52 ) }
    dend_34 { pt3dadd( -12.3337, -103.787, 24.8158, 0.88 ) }
    dend_34 { pt3dadd( -12.587, -104.544, 24.7796, 0.88 ) }
    dend_34 { pt3dadd( -12.9292, -105.38, 24.6074, 0.88 ) }
    dend_34 { pt3dadd( -13.2414, -106.124, 24.3854, 0.66 ) }
    dend_34 { pt3dadd( -13.5313, -106.923, 24.0583, 0.66 ) }
    dend_34 { pt3dadd( -13.8213, -108.051, 23.4264, 0.88 ) }
    dend_34 { pt3dadd( -13.9406, -108.804, 22.9241, 1.33 ) }
    dend_34 { pt3dadd( -13.9861, -109.382, 22.5195, 1.47 ) }
    dend_34 { pt3dadd( -14.0072, -109.926, 22.1408, 1.62 ) }
    dend_34 { pt3dadd( -14.0521, -111.035, 21.4193, 0.74 ) }
    dend_34 { pt3dadd( -14.135, -112.293, 20.7497, 0.74 ) }
    dend_34 { pt3dadd( -14.2679, -113.271, 20.3768, 0.74 ) }
    dend_34 { pt3dadd( -14.4202, -114.049, 20.2123, 0.74 ) }
    dend_34 { pt3dadd( -14.6577, -115.122, 20.1424, 0.66 ) }
    dend_34 { pt3dadd( -14.8864, -116.235, 20.2303, 0.66 ) }
    dend_34 { pt3dadd( -15.1529, -117.84, 20.5788, 0.96 ) }
    dend_34 { pt3dadd( -15.2312, -118.664, 20.8374, 0.88 ) }
    dend_34 { pt3dadd( -15.23, -119.403, 21.0958, 0.88 ) }
    dend_34 { pt3dadd( -15.0926, -120.78, 21.5773, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_34 { pt3dadd( -14.8546, -122.046, 22.0107, 1.18 ) }
    dend_34 { pt3dadd( -14.714, -122.666, 22.1837, 1.62 ) }
    dend_34 { pt3dadd( -14.5601, -123.365, 22.3204, 1.62 ) }
    dend_34 { pt3dadd( -14.3765, -124.355, 22.4828, 0.96 ) }
    dend_34 { pt3dadd( -14.2716, -125.122, 22.5925, 0.96 ) }
    dend_34 { pt3dadd( -14.1938, -126.285, 22.7327, 0.66 ) }
    dend_34 { pt3dadd( -14.2424, -127.817, 22.8652, 0.52 ) }
    dend_34 { pt3dadd( -14.3936, -129.194, 22.9986, 0.59 ) }
    dend_34 { pt3dadd( -14.6992, -130.781, 23.169, 0.74 ) }
    dend_34 { pt3dadd( -14.8145, -131.194, 23.2218, 1.11 ) }
    dend_34 { pt3dadd( -15.1204, -131.984, 23.3695, 1.25 ) }
    dend_34 { pt3dadd( -15.7707, -133.252, 23.6818, 0.88 ) }
    dend_34 { pt3dadd( -16.2002, -133.884, 23.8974, 0.66 ) }
    dend_34 { pt3dadd( -16.6663, -134.444, 24.1253, 0.66 ) }
    dend_34 { pt3dadd( -17.1275, -134.94, 24.3311, 0.59 ) }
    dend_34 { pt3dadd( -18.0409, -135.94, 24.6986, 0.59 ) }
    dend_34 { pt3dadd( -18.5502, -136.515, 24.8687, 0.44 ) }
    dend_34 { pt3dadd( -19.1536, -137.263, 25.0122, 0.44 ) }
    dend_34 { pt3dadd( -19.6457, -137.958, 25.0648, 0.74 ) }
    dend_34 { pt3dadd( -20.0374, -138.602, 25.0683, 0.74 ) }
    dend_34 { pt3dadd( -20.3697, -139.216, 25.0343, 0.66 ) }
    dend_34 { pt3dadd( -20.7897, -140.114, 24.923, 1.03 ) }
    dend_34 { pt3dadd( -21.1041, -140.828, 24.8394, 1.4 ) }
    dend_34 { pt3dadd( -21.4409, -141.629, 24.7538, 1.4 ) }
    dend_34 { pt3dadd( -21.7377, -142.324, 24.6855, 1.47 ) }
    dend_34 { pt3dadd( -22.2103, -143.424, 24.5967, 0.74 ) }
    dend_34 { pt3dadd( -22.5761, -144.28, 24.5197, 0.74 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 27/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -12.1095, -78.951, 20.7505, 0.44 ) }
    dend_33 { pt3dadd( -11.4053, -79.5808, 21.127, 0.44 ) }
    dend_33 { pt3dadd( -10.9931, -80.1116, 21.4008, 0.44 ) }
    dend_33 { pt3dadd( -10.7103, -80.7815, 21.6853, 0.37 ) }
    dend_33 { pt3dadd( -10.4241, -82.0687, 22.1179, 0.59 ) }
    dend_33 { pt3dadd( -10.3898, -82.565, 22.2534, 0.52 ) }
    dend_33 { pt3dadd( -10.414, -83.1983, 22.4086, 0.44 ) }
    dend_33 { pt3dadd( -10.625, -84.2073, 22.6851, 0.44 ) }
    dend_33 { pt3dadd( -10.9163, -85.0503, 22.9659, 0.44 ) }
    dend_33 { pt3dadd( -11.1572, -85.5585, 23.1869, 0.59 ) }
    dend_33 { pt3dadd( -11.5069, -86.1388, 23.5574, 0.59 ) }
    dend_33 { pt3dadd( -11.8412, -86.6346, 24.106, 0.37 ) }
    dend_33 { pt3dadd( -12.2351, -87.1935, 25.02, 0.59 ) }
    dend_33 { pt3dadd( -12.5413, -87.635, 25.9462, 0.88 ) }
    dend_33 { pt3dadd( -12.7259, -87.8848, 26.5558, 0.81 ) }
    dend_33 { pt3dadd( -13.1008, -88.3624, 27.788, 1.03 ) }
    dend_33 { pt3dadd( -13.4872, -88.8391, 29.008, 0.88 ) }
    dend_33 { pt3dadd( -13.8651, -89.2907, 30.0313, 0.44 ) }
    dend_33 { pt3dadd( -14.2086, -89.7226, 30.7725, 0.44 ) }
    dend_33 { pt3dadd( -14.4541, -90.0584, 31.1944, 0.66 ) }
    dend_33 { pt3dadd( -14.8317, -90.5481, 31.6582, 0.66 ) }
    dend_33 { pt3dadd( -15.2146, -90.9764, 31.9428, 0.66 ) }
    dend_33 { pt3dadd( -15.8163, -91.5714, 32.22, 0.66 ) }
    dend_33 { pt3dadd( -16.3505, -92.0793, 32.421, 1.33 ) }
    dend_33 { pt3dadd( -16.5942, -92.3187, 32.4935, 1.47 ) }
    dend_33 { pt3dadd( -17.0703, -92.7926, 32.6267, 1.03 ) }
    dend_33 { pt3dadd( -17.6668, -93.4032, 32.7978, 0.81 ) }
    dend_33 { pt3dadd( -18.1673, -93.9195, 32.9539, 0.74 ) }
    dend_33 { pt3dadd( -18.7586, -94.5402, 33.1611, 0.52 ) }
    dend_33 { pt3dadd( -19.1722, -95.0011, 33.322, 0.44 ) }
    dend_33 { pt3dadd( -21.1623, -100.854, 37.9719, 0.44 ) }
    dend_33 { pt3dadd( -22.3469, -107.232, 42.1858, 0.44 ) }
    dend_33 { pt3dadd( -24.2462, -113.514, 46.2824, 0.44 ) }
    dend_33 { pt3dadd( -27.829, -119.211, 50.0955, 0.44 ) }
    dend_33 { pt3dadd( -31.0158, -124.075, 55.1975, 0.44 ) }
    dend_33 { pt3dadd( -33.3709, -129.072, 60.6128, 0.44 ) }
    dend_33 { pt3dadd( -35.9944, -134.225, 65.7519, 0.44 ) }
    dend_33 { pt3dadd( -40.1749, -138.839, 70.3424, 0.44 ) }
    dend_33 { pt3dadd( -45.8229, -142.659, 73.9961, 0.44 ) }
    // Section: dend_17, id: dend_17, parent: dend_0 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 3.24516, -15.5715, -2.97939, 1.47 ) }
    dend_17 { pt3dadd( 2.78012, -16.9542, -3.48281, 1.47 ) }
    dend_17 { pt3dadd( 2.28436, -18.7444, -3.96911, 1.33 ) }
    dend_17 { pt3dadd( 1.94182, -20.1782, -4.24016, 1.55 ) }
    dend_17 { pt3dadd( 1.69827, -21.3472, -4.35699, 1.55 ) }
    dend_17 { pt3dadd( 1.46045, -22.5666, -4.32794, 1.77 ) }
    dend_17 { pt3dadd( 1.15019, -24.1346, -4.12822, 1.77 ) }
    dend_17 { pt3dadd( 0.969938, -25.1078, -3.86934, 2.14 ) }
    dend_17 { pt3dadd( 0.807226, -25.9236, -3.56615, 2.58 ) }
    dend_17 { pt3dadd( 0.582745, -26.9679, -3.15227, 2.36 ) }
    dend_17 { pt3dadd( 0.148186, -28.8803, -2.48883, 1.77 ) }
    dend_17 { pt3dadd( -0.232034, -30.524, -2.08926, 1.47 ) }
    dend_17 { pt3dadd( -0.522115, -31.897, -1.93368, 1.18 ) }
    dend_17 { pt3dadd( -0.781924, -33.3519, -1.91502, 1.11 ) }
    dend_17 { pt3dadd( -0.958325, -34.6427, -2.02587, 1.33 ) }
    dend_17 { pt3dadd( -1.10429, -36.3992, -2.35701, 1.25 ) }
    dend_17 { pt3dadd( -1.12334, -37.9345, -2.77033, 1.47 ) }
    dend_17 { pt3dadd( -1.05641, -39.3109, -3.17289, 1.62 ) }
    dend_17 { pt3dadd( -0.970081, -40.3449, -3.47374, 2.14 ) }
    dend_17 { pt3dadd( -0.916523, -41.0588, -3.66833, 2.58 ) }
    dend_17 { pt3dadd( -0.888896, -42.0854, -3.91473, 2.43 ) }
    dend_17 { pt3dadd( -0.951995, -43.7371, -4.2635, 2.14 ) }
    dend_17 { pt3dadd( -1.09728, -45.0689, -4.53357, 1.92 ) }
    dend_17 { pt3dadd( -1.34843, -46.3872, -4.7982, 1.47 ) }
    dend_17 { pt3dadd( -1.79627, -48.0117, -5.13974, 1.25 ) }
    dend_17 { pt3dadd( -2.27267, -49.3503, -5.39136, 1.11 ) }
    dend_17 { pt3dadd( -2.71125, -50.351, -5.54438, 1.4 ) }
    dend_17 { pt3dadd( -3.03241, -50.994, -5.6249, 1.55 ) }
    dend_17 { pt3dadd( -3.54291, -51.9775, -5.70537, 1.18 ) }
    dend_17 { pt3dadd( -4.03608, -52.9857, -5.7186, 0.88 ) }
    dend_17 { pt3dadd( -4.48088, -54.0489, -5.72085, 1.18 ) }
    dend_17 { pt3dadd( -4.83307, -55.0918, -5.71639, 1.03 ) }
    dend_17 { pt3dadd( -5.12578, -56.0752, -5.70046, 1.03 ) }
    dend_17 { pt3dadd( -5.48882, -57.535, -5.68331, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_17 { pt3dadd( -5.65561, -58.4637, -5.68423, 1.77 ) }
    dend_17 { pt3dadd( -5.82045, -59.9257, -5.73227, 1.77 ) }
    dend_17 { pt3dadd( -5.89807, -61.0489, -5.85052, 2.06 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 3/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 3.24516, -15.5715, -2.97939, 1.77 ) }
    dend_1 { pt3dadd( 3.66712, -17.3925, -3.40958, 1.77 ) }
    dend_1 { pt3dadd( 3.85534, -18.304, -3.61231, 1.99 ) }
    dend_1 { pt3dadd( 4.07177, -19.352, -3.84542, 1.99 ) }
    dend_1 { pt3dadd( 4.36708, -20.782, -4.16348, 3.17 ) }
    dend_1 { pt3dadd( 4.5001, -21.4262, -4.30676, 3.76 ) }
    dend_1 { pt3dadd( 4.72772, -22.5284, -4.55192, 4.2 ) }
    dend_1 { pt3dadd( 4.85278, -23.5033, -4.73297, 3.9 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 11/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 4.48557, 41.4011, -0.359339, 0.88 ) }
    axon_1 { pt3dadd( 5.97663, 56.3268, -0.359339, 0.88 ) }
    axon_1 { pt3dadd( 7.46769, 71.2525, -0.359339, 0.88 ) }
    // Section: dend_85, id: dend_85, parent: dend_79 (entry count 14/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( -53.0111, 116.902, -26.5214, 0.29 ) }
    dend_85 { pt3dadd( -53.2293, 117.85, -26.6612, 0.29 ) }
    dend_85 { pt3dadd( -53.4747, 119.272, -27.1678, 0.29 ) }
    dend_85 { pt3dadd( -53.6185, 120.546, -27.6945, 0.29 ) }
    dend_85 { pt3dadd( -53.6951, 121.917, -28.3165, 0.29 ) }
    dend_85 { pt3dadd( -53.7131, 122.9, -28.8017, 0.29 ) }
    dend_85 { pt3dadd( -53.7182, 124.516, -29.6021, 0.29 ) }
    dend_85 { pt3dadd( -53.6437, 127.414, -31.2016, 0.29 ) }
    dend_85 { pt3dadd( -53.6091, 128.305, -31.7281, 0.37 ) }
    dend_85 { pt3dadd( -53.5785, 129.379, -32.3906, 0.37 ) }
    dend_85 { pt3dadd( -53.5687, 130.7, -33.2462, 0.37 ) }
    dend_85 { pt3dadd( -53.5562, 131.788, -33.9574, 0.22 ) }
    dend_85 { pt3dadd( -53.5558, 132.921, -34.6724, 0.22 ) }
    dend_85 { pt3dadd( -53.657, 134.155, -35.2971, 1.03 ) }
    dend_85 { pt3dadd( -53.702, 134.376, -35.4118, 1.03 ) }
    // Section: dend_80, id: dend_80, parent: dend_79 (entry count 29/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( -53.0111, 116.902, -26.5214, 0.52 ) }
    dend_80 { pt3dadd( -53.8941, 118.187, -25.9162, 0.52 ) }
    dend_80 { pt3dadd( -54.2792, 118.863, -25.6179, 0.52 ) }
    dend_80 { pt3dadd( -54.6494, 119.636, -25.3265, 0.44 ) }
    dend_80 { pt3dadd( -54.8081, 120.026, -25.2055, 0.59 ) }
    dend_80 { pt3dadd( -54.9696, 120.495, -25.0848, 0.59 ) }
    dend_80 { pt3dadd( -55.2544, 121.394, -24.8584, 0.37 ) }
    dend_80 { pt3dadd( -55.586, 122.55, -24.6536, 0.37 ) }
    dend_80 { pt3dadd( -55.7709, 123.296, -24.5204, 0.37 ) }
    dend_80 { pt3dadd( -55.9565, 124.049, -24.3787, 0.37 ) }
    dend_80 { pt3dadd( -56.16, 124.876, -24.2024, 0.29 ) }
    dend_80 { pt3dadd( -56.3538, 125.619, -24.0272, 0.29 ) }
    dend_80 { pt3dadd( -56.594, 126.403, -23.816, 0.81 ) }
    dend_80 { pt3dadd( -56.7214, 126.718, -23.7201, 0.81 ) }
    dend_80 { pt3dadd( -56.9549, 127.198, -23.5536, 0.74 ) }
    dend_80 { pt3dadd( -57.307, 127.803, -23.3573, 0.74 ) }
    dend_80 { pt3dadd( -57.6564, 128.275, -23.2408, 0.96 ) }
    dend_80 { pt3dadd( -58.0494, 128.711, -23.1849, 0.96 ) }
    dend_80 { pt3dadd( -58.3323, 128.997, -23.1899, 0.59 ) }
    dend_80 { pt3dadd( -58.9124, 129.583, -23.2939, 0.29 ) }
    dend_80 { pt3dadd( -59.4785, 130.17, -23.4992, 0.29 ) }
    dend_80 { pt3dadd( -60.1115, 130.85, -23.8107, 0.29 ) }
    dend_80 { pt3dadd( -60.5575, 131.361, -24.0554, 0.22 ) }
    dend_80 { pt3dadd( -61.225, 132.157, -24.44, 0.22 ) }
    dend_80 { pt3dadd( -61.7458, 132.811, -24.7548, 0.74 ) }
    dend_80 { pt3dadd( -62.3197, 133.593, -25.092, 0.37 ) }
    dend_80 { pt3dadd( -62.7587, 134.285, -25.3386, 0.37 ) }
    dend_80 { pt3dadd( -63.1471, 134.971, -25.5559, 0.81 ) }
    dend_80 { pt3dadd( -63.4247, 135.435, -25.6993, 1.18 ) }
    dend_80 { pt3dadd( -63.6914, 135.803, -25.7947, 1.18 ) }
    dend_80 { pt3dadd( -64.3909, 136.593, -25.9907, 0.29 ) }
    dend_80 { pt3dadd( -65.1354, 137.38, -26.1744, 0.29 ) }
    dend_80 { pt3dadd( -65.6193, 137.851, -26.2996, 0.29 ) }
    dend_80 { pt3dadd( -66.1244, 138.301, -26.438, 0.29 ) }
    dend_80 { pt3dadd( -66.8784, 138.918, -26.628, 0.74 ) }
    dend_80 { pt3dadd( -67.4326, 139.284, -26.7443, 0.74 ) }
    // Section: dend_71, id: dend_71, parent: dend_69 (entry count 65/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 112.241, 46.3194, 64.0723, 0.29 ) }
    dend_71 { pt3dadd( 121.149, 48.0766, 71.5832, 0.29 ) }
    dend_71 { pt3dadd( 129.745, 49.5806, 79.5015, 0.29 ) }
    dend_71 { pt3dadd( 138.751, 52.3202, 86.5908, 0.29 ) }
    dend_71 { pt3dadd( 146.939, 56.4954, 93.9653, 0.29 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 70/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 112.241, 46.3194, 64.0723, 0.29 ) }
    dend_70 { pt3dadd( 123.231, 47.4123, 71.3519, 0.29 ) }
    dend_70 { pt3dadd( 133.84, 50.7981, 78.49, 0.29 ) }
    dend_70 { pt3dadd( 145.347, 55.0996, 83.3946, 0.29 ) }
    dend_70 { pt3dadd( 155.36, 60.6632, 90.0089, 0.29 ) }
    // Section: dend_58, id: dend_58, parent: dend_54 (entry count 75/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 67.1894, 35.1189, -2.98479, 0.44 ) }
    dend_58 { pt3dadd( 68.6275, 35.1392, -3.61581, 0.44 ) }
    dend_58 { pt3dadd( 69.1617, 35.2417, -3.92376, 0.37 ) }
    dend_58 { pt3dadd( 70.1095, 35.5377, -4.51385, 0.59 ) }
    dend_58 { pt3dadd( 70.625, 35.7277, -4.83892, 0.74 ) }
    dend_58 { pt3dadd( 71.9492, 36.2573, -5.64514, 0.37 ) }
    dend_58 { pt3dadd( 73.317, 36.8364, -6.43524, 0.29 ) }
    dend_58 { pt3dadd( 74.127, 37.294, -6.92876, 0.29 ) }
    dend_58 { pt3dadd( 74.709, 37.668, -7.24544, 0.88 ) }
    dend_58 { pt3dadd( 74.923, 37.8252, -7.35681, 1.11 ) }
    dend_58 { pt3dadd( 75.4553, 38.2317, -7.59704, 1.11 ) }
    dend_58 { pt3dadd( 75.9615, 38.5917, -7.72112, 1.18 ) }
    dend_58 { pt3dadd( 76.9044, 39.0913, -7.79322, 0.74 ) }
    dend_58 { pt3dadd( 77.5472, 39.409, -7.81242, 0.59 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 89/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 67.1894, 35.1189, -2.98479, 0.29 ) }
    dend_55 { pt3dadd( 68.151, 36.0292, -2.54036, 0.29 ) }
    dend_55 { pt3dadd( 68.6037, 36.4578, -2.31116, 0.29 ) }
    dend_55 { pt3dadd( 69.1835, 37.0068, -2.01759, 0.66 ) }
    dend_55 { pt3dadd( 69.8094, 37.5995, -1.70065, 0.29 ) }
    dend_55 { pt3dadd( 70.2781, 38.0432, -1.46336, 0.29 ) }
    dend_55 { pt3dadd( 71.2173, 38.9326, -0.987773, 0.29 ) }
    dend_55 { pt3dadd( 71.7557, 39.394, -0.660895, 0.29 ) }
    dend_55 { pt3dadd( 79.7683, 46.62, 2.22737, 0.29 ) }
    dend_55 { pt3dadd( 86.6914, 54.4182, 6.2297, 0.29 ) }
    dend_55 { pt3dadd( 92.1896, 63.5682, 9.51709, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_55 { pt3dadd( 98.8019, 71.8783, 12.9783, 0.29 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 1/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -51.4797, -41.9439, -48.6696, 0.81 ) }
    dend_48 { pt3dadd( -51.849, -42.8375, -50.1386, 0.81 ) }
    dend_48 { pt3dadd( -51.9212, -42.9551, -50.3262, 0.81 ) }
    dend_48 { pt3dadd( -52.8819, -44.2157, -52.1584, 0.37 ) }
    dend_48 { pt3dadd( -53.1676, -44.5641, -52.6001, 0.52 ) }
    dend_48 { pt3dadd( -53.4418, -44.9, -53.0066, 0.66 ) }
    dend_48 { pt3dadd( -53.7536, -45.3012, -53.4745, 0.66 ) }
    dend_48 { pt3dadd( -54.4507, -46.1265, -54.3473, 0.37 ) }
    dend_48 { pt3dadd( -54.8958, -46.6362, -54.9072, 0.37 ) }
    dend_48 { pt3dadd( -55.5878, -47.3995, -55.7405, 0.37 ) }
    dend_48 { pt3dadd( -56.0152, -47.8628, -56.2725, 0.66 ) }
    dend_48 { pt3dadd( -56.7009, -48.5963, -57.1098, 1.11 ) }
    dend_48 { pt3dadd( -57.0244, -48.9346, -57.4761, 1.25 ) }
    dend_48 { pt3dadd( -58.134, -49.9762, -58.726, 0.22 ) }
    dend_48 { pt3dadd( -58.6048, -50.3455, -59.2267, 0.29 ) }
    dend_48 { pt3dadd( -59.0225, -50.6167, -59.6376, 0.59 ) }
    dend_48 { pt3dadd( -59.4988, -50.8988, -60.0641, 0.81 ) }
    dend_48 { pt3dadd( -60.0036, -51.2018, -60.526, 0.81 ) }
    dend_48 { pt3dadd( -61.283, -52.1221, -61.7412, 0.37 ) }
    dend_48 { pt3dadd( -61.6482, -52.4449, -62.0948, 0.37 ) }
    dend_48 { pt3dadd( -62.2228, -53.1075, -62.7524, 0.59 ) }
    dend_48 { pt3dadd( -62.425, -53.4024, -63.0122, 0.81 ) }
    dend_48 { pt3dadd( -63.1082, -54.6374, -63.9508, 0.44 ) }
    dend_48 { pt3dadd( -63.5426, -55.5993, -64.5514, 0.44 ) }
    dend_48 { pt3dadd( -63.8682, -56.4379, -64.9764, 0.37 ) }
    dend_48 { pt3dadd( -64.2503, -57.49, -65.4765, 0.37 ) }
    dend_48 { pt3dadd( -64.5366, -58.2646, -65.842, 0.66 ) }
    dend_48 { pt3dadd( -64.7804, -58.8375, -66.1296, 0.81 ) }
    dend_48 { pt3dadd( -65.0265, -59.3718, -66.3796, 0.81 ) }
    dend_48 { pt3dadd( -65.4996, -60.3146, -66.836, 0.29 ) }
    dend_48 { pt3dadd( -65.78, -60.837, -67.0746, 0.96 ) }
    dend_48 { pt3dadd( -66.4652, -62.0785, -67.5606, 0.29 ) }
    dend_48 { pt3dadd( -66.896, -62.8921, -67.847, 0.29 ) }
    dend_48 { pt3dadd( -67.3174, -63.7131, -68.0843, 0.44 ) }
    dend_48 { pt3dadd( -67.5582, -64.1704, -68.2041, 0.44 ) }
    dend_48 { pt3dadd( -67.947, -64.9101, -68.3549, 0.29 ) }
    dend_48 { pt3dadd( -68.1618, -65.3194, -68.4595, 0.59 ) }
    dend_48 { pt3dadd( -68.483, -65.9887, -68.6424, 0.59 ) }
    dend_48 { pt3dadd( -68.7771, -66.6515, -68.8642, 0.52 ) }
    dend_48 { pt3dadd( -69.263, -67.6424, -69.2568, 0.37 ) }
    dend_48 { pt3dadd( -69.5809, -68.2578, -69.5288, 0.88 ) }
    dend_48 { pt3dadd( -70.1816, -69.3998, -70.0673, 0.44 ) }
    dend_48 { pt3dadd( -70.5135, -70.0555, -70.375, 0.59 ) }
    dend_48 { pt3dadd( -70.7828, -70.5963, -70.6219, 0.59 ) }
    dend_48 { pt3dadd( -71.1004, -71.2569, -70.8891, 0.59 ) }
    dend_48 { pt3dadd( -71.424, -71.9402, -71.1042, 0.37 ) }
    dend_48 { pt3dadd( -71.6891, -72.4376, -71.2143, 0.37 ) }
    dend_48 { pt3dadd( -72.1359, -73.1787, -71.2824, 0.29 ) }
    dend_48 { pt3dadd( -72.3071, -73.4396, -71.278, 0.29 ) }
    dend_48 { pt3dadd( -72.7407, -74.1032, -71.2058, 0.88 ) }
    dend_48 { pt3dadd( -73.0269, -74.5629, -71.1199, 1.18 ) }
    dend_48 { pt3dadd( -73.5167, -75.2868, -70.9374, 0.29 ) }
    dend_48 { pt3dadd( -73.8851, -75.7874, -70.7994, 0.29 ) }
    dend_48 { pt3dadd( -74.4449, -76.5262, -70.6436, 0.29 ) }
    dend_48 { pt3dadd( -74.6992, -76.8765, -70.5932, 0.88 ) }
    dend_48 { pt3dadd( -74.9463, -77.2306, -70.571, 0.88 ) }
    dend_48 { pt3dadd( -75.766, -78.4013, -70.6131, 0.22 ) }
    dend_48 { pt3dadd( -76.048, -78.7977, -70.6741, 0.22 ) }
    dend_48 { pt3dadd( -76.6827, -79.6391, -70.8595, 0.59 ) }
    dend_48 { pt3dadd( -76.8265, -79.8214, -70.9124, 0.59 ) }
    dend_48 { pt3dadd( -77.4109, -80.5475, -71.1397, 0.22 ) }
    dend_48 { pt3dadd( -77.7467, -80.9679, -71.2838, 0.44 ) }
    dend_48 { pt3dadd( -78.2086, -81.604, -71.5302, 0.22 ) }
    dend_48 { pt3dadd( -78.846, -82.4751, -71.857, 0.22 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 65/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -51.4797, -41.9439, -48.6696, 0.29 ) }
    dend_47 { pt3dadd( -52.9387, -42.3903, -48.4498, 0.29 ) }
    dend_47 { pt3dadd( -53.8243, -42.7256, -48.2852, 0.29 ) }
    dend_47 { pt3dadd( -54.6877, -43.0917, -48.1408, 0.66 ) }
    dend_47 { pt3dadd( -55.0962, -43.2899, -48.0816, 0.66 ) }
    dend_47 { pt3dadd( -56.5236, -44.04, -47.8748, 0.29 ) }
    dend_47 { pt3dadd( -57.1381, -44.375, -47.7946, 0.29 ) }
    dend_47 { pt3dadd( -57.5803, -44.662, -47.6967, 0.66 ) }
    dend_47 { pt3dadd( -57.9952, -44.9582, -47.6004, 0.66 ) }
    dend_47 { pt3dadd( -59.4078, -46.0093, -47.276, 0.29 ) }
    dend_47 { pt3dadd( -59.9147, -46.3584, -47.1673, 0.52 ) }
    dend_47 { pt3dadd( -60.4097, -46.6586, -47.0746, 0.52 ) }
    dend_47 { pt3dadd( -61.7993, -47.3745, -46.7851, 0.22 ) }
    dend_47 { pt3dadd( -62.4534, -47.6628, -46.6352, 0.59 ) }
    dend_47 { pt3dadd( -62.875, -47.8282, -46.5171, 0.74 ) }
    dend_47 { pt3dadd( -63.7029, -48.1007, -46.272, 0.29 ) }
    dend_47 { pt3dadd( -64.125, -48.2202, -46.1504, 0.29 ) }
    dend_47 { pt3dadd( -64.6829, -48.3486, -45.9896, 0.96 ) }
    dend_47 { pt3dadd( -65.245, -48.4186, -45.869, 0.96 ) }
    dend_47 { pt3dadd( -66.7758, -48.5967, -45.4871, 0.22 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 85/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -22.5761, -144.28, 24.5197, 0.29 ) }
    dend_40 { pt3dadd( -22.2496, -144.304, 25.4223, 0.29 ) }
    dend_40 { pt3dadd( -21.4772, -144.418, 27.3698, 0.29 ) }
    dend_40 { pt3dadd( -20.9292, -144.555, 28.7571, 0.59 ) }
    dend_40 { pt3dadd( -20.2074, -144.883, 30.6895, 0.66 ) }
    dend_40 { pt3dadd( -19.1895, -145.563, 33.3804, 0.59 ) }
    dend_40 { pt3dadd( -18.4951, -146.227, 35.1242, 0.29 ) }
    dend_40 { pt3dadd( -18.0096, -146.867, 36.124, 0.52 ) }
    dend_40 { pt3dadd( -17.7487, -147.617, 36.4546, 0.66 ) }
    dend_40 { pt3dadd( -17.4142, -149.277, 36.4855, 0.37 ) }
    dend_40 { pt3dadd( -17.0417, -151.408, 36.2477, 0.29 ) }
    dend_40 { pt3dadd( -16.7777, -153.097, 35.9416, 0.29 ) }
    dend_40 { pt3dadd( -16.5486, -154.773, 35.5561, 0.29 ) }
    dend_40 { pt3dadd( -16.3225, -156.295, 35.1809, 0.29 ) }
    dend_40 { pt3dadd( -15.9726, -158.094, 34.7186, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_40 { pt3dadd( -15.5955, -159.63, 34.3181, 0.29 ) }
    dend_40 { pt3dadd( -9.79461, -169.548, 42.0612, 0.29 ) }
    dend_40 { pt3dadd( -4.53089, -177.741, 51.9165, 0.29 ) }
    dend_40 { pt3dadd( 3.3338, -186.282, 59.4777, 0.29 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 4/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -22.5761, -144.28, 24.5197, 0.74 ) }
    dend_35 { pt3dadd( -23.1625, -145.077, 24.166, 0.74 ) }
    dend_35 { pt3dadd( -23.6713, -145.897, 23.8608, 0.52 ) }
    dend_35 { pt3dadd( -24.0572, -146.592, 23.6392, 0.52 ) }
    dend_35 { pt3dadd( -24.6577, -147.859, 23.3105, 0.59 ) }
    dend_35 { pt3dadd( -24.8992, -148.503, 23.2116, 0.96 ) }
    dend_35 { pt3dadd( -25.0779, -149.199, 23.1425, 1.18 ) }
    dend_35 { pt3dadd( -25.1208, -149.79, 23.0652, 1.18 ) }
    dend_35 { pt3dadd( -25.0724, -150.347, 23.0019, 0.96 ) }
    dend_35 { pt3dadd( -24.8858, -151.161, 22.8702, 0.66 ) }
    dend_35 { pt3dadd( -24.4566, -152.315, 22.5076, 0.52 ) }
    dend_35 { pt3dadd( -23.9823, -153.346, 22.1159, 0.52 ) }
    dend_35 { pt3dadd( -23.3779, -154.435, 21.6044, 0.29 ) }
    dend_35 { pt3dadd( -23.1067, -154.843, 21.3663, 0.37 ) }
    dend_35 { pt3dadd( -22.3561, -155.787, 20.6442, 0.29 ) }
    dend_35 { pt3dadd( -21.5294, -156.636, 19.7021, 0.29 ) }
    dend_35 { pt3dadd( -21.3959, -165.914, 17.8306, 0.29 ) }
    // Section: dend_31, id: dend_31, parent: dend_17 (entry count 21/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -5.89807, -61.0489, -5.85052, 0.37 ) }
    dend_31 { pt3dadd( -8.52593, -62.2432, -4.98184, 0.37 ) }
    dend_31 { pt3dadd( -9.6598, -62.8771, -4.16756, 0.37 ) }
    dend_31 { pt3dadd( -10.464, -63.374, -3.44581, 0.37 ) }
    dend_31 { pt3dadd( -11.0067, -63.7207, -2.94434, 0.37 ) }
    dend_31 { pt3dadd( -11.6822, -64.1699, -2.28101, 0.59 ) }
    dend_31 { pt3dadd( -12.3347, -64.6175, -1.6307, 0.74 ) }
    dend_31 { pt3dadd( -12.8053, -64.9659, -1.01579, 0.52 ) }
    dend_31 { pt3dadd( -13.1596, -65.2342, -0.546615, 0.59 ) }
    dend_31 { pt3dadd( -13.4829, -65.5157, -0.158458, 0.74 ) }
    dend_31 { pt3dadd( -14.0634, -65.9992, 0.423057, 0.52 ) }
    dend_31 { pt3dadd( -14.4439, -66.2899, 0.734953, 0.52 ) }
    dend_31 { pt3dadd( -14.8131, -66.5389, 0.986309, 0.74 ) }
    dend_31 { pt3dadd( -15.2336, -66.802, 1.24812, 0.74 ) }
    dend_31 { pt3dadd( -15.6375, -67.0599, 1.48899, 0.52 ) }
    dend_31 { pt3dadd( -16.2255, -67.4296, 1.82929, 0.52 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 37/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -5.89807, -61.0489, -5.85052, 0.88 ) }
    dend_18 { pt3dadd( -6.20248, -62.4245, -5.99232, 0.88 ) }
    dend_18 { pt3dadd( -6.77844, -64.1581, -6.01763, 0.66 ) }
    dend_18 { pt3dadd( -7.36182, -65.3866, -5.74084, 0.74 ) }
    dend_18 { pt3dadd( -7.86124, -66.2058, -5.45512, 0.88 ) }
    dend_18 { pt3dadd( -8.73277, -67.4457, -4.97925, 0.88 ) }
    dend_18 { pt3dadd( -9.288, -68.1949, -4.69576, 1.03 ) }
    dend_18 { pt3dadd( -9.967, -69.0148, -4.31987, 1.03 ) }
    dend_18 { pt3dadd( -11.5124, -70.9267, -3.4157, 1.03 ) }
    dend_18 { pt3dadd( -12.391, -72.1281, -2.89923, 1.03 ) }
    dend_18 { pt3dadd( -13.1123, -73.3402, -2.47339, 0.88 ) }
    dend_18 { pt3dadd( -13.5152, -74.3786, -2.22809, 0.88 ) }
    dend_18 { pt3dadd( -13.6524, -75.3485, -2.0755, 0.88 ) }
    dend_18 { pt3dadd( -13.4459, -77.2308, -1.98367, 1.25 ) }
    dend_18 { pt3dadd( -13.2556, -77.9163, -1.98239, 1.55 ) }
    dend_18 { pt3dadd( -12.8742, -78.8844, -1.93232, 1.55 ) }
    dend_18 { pt3dadd( -12.2383, -80.2349, -1.72229, 1.55 ) }
    dend_18 { pt3dadd( -11.7862, -81.0821, -1.4806, 1.55 ) }
    dend_18 { pt3dadd( -10.9123, -82.5597, -0.843127, 1.03 ) }
    dend_18 { pt3dadd( -10.1998, -83.6264, -0.184092, 1.03 ) }
    dend_18 { pt3dadd( -9.5896, -84.4721, 0.445894, 0.81 ) }
    dend_18 { pt3dadd( -8.59399, -85.7369, 1.56557, 0.81 ) }
    dend_18 { pt3dadd( -7.881, -86.5714, 2.39188, 1.03 ) }
    dend_18 { pt3dadd( -7.17493, -87.3025, 3.15583, 1.03 ) }
    dend_18 { pt3dadd( -6.35393, -88.0625, 3.94981, 1.03 ) }
    dend_18 { pt3dadd( -5.66484, -88.6807, 4.50125, 0.88 ) }
    dend_18 { pt3dadd( -4.59639, -89.691, 5.2292, 0.88 ) }
    dend_18 { pt3dadd( -4.05593, -90.2294, 5.5292, 0.96 ) }
    dend_18 { pt3dadd( -3.43206, -90.9205, 5.83351, 0.96 ) }
    dend_18 { pt3dadd( -2.5846, -91.9678, 6.20775, 1.33 ) }
    dend_18 { pt3dadd( -2.13565, -92.5939, 6.37547, 1.62 ) }
    dend_18 { pt3dadd( -1.76395, -93.1605, 6.51156, 1.62 ) }
    // Section: dend_16, id: dend_16, parent: dend_1 (entry count 69/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 4.85278, -23.5033, -4.73297, 0.66 ) }
    dend_16 { pt3dadd( 3.66066, -27.1219, -2.57707, 0.66 ) }
    dend_16 { pt3dadd( 3.24339, -28.2908, -2.01121, 0.88 ) }
    dend_16 { pt3dadd( 2.49174, -30.5953, -1.0737, 1.03 ) }
    dend_16 { pt3dadd( 2.18604, -31.6928, -0.66513, 1.03 ) }
    dend_16 { pt3dadd( 1.96037, -32.6622, -0.308303, 1.03 ) }
    dend_16 { pt3dadd( 1.73541, -33.8636, 0.14868, 0.37 ) }
    dend_16 { pt3dadd( 1.5544, -35.1464, 0.512397, 0.37 ) }
    dend_16 { pt3dadd( 1.54858, -36.4426, 0.929176, 0.59 ) }
    dend_16 { pt3dadd( 1.85677, -37.5869, 1.41102, 0.81 ) }
    dend_16 { pt3dadd( 2.17297, -38.2559, 1.81798, 0.81 ) }
    dend_16 { pt3dadd( 2.54605, -38.8663, 2.32709, 0.52 ) }
    dend_16 { pt3dadd( 2.88882, -39.3733, 2.84026, 0.81 ) }
    dend_16 { pt3dadd( 3.37199, -40.1094, 3.64113, 1.25 ) }
    dend_16 { pt3dadd( 3.53611, -40.4678, 3.99091, 1.69 ) }
    dend_16 { pt3dadd( 3.66467, -41.0791, 4.45409, 1.69 ) }
    dend_16 { pt3dadd( 3.6111, -42.4887, 5.12698, 0.96 ) }
    dend_16 { pt3dadd( 3.45361, -43.3787, 5.36857, 0.66 ) }
    dend_16 { pt3dadd( 3.29285, -44.0647, 5.49236, 0.81 ) }
    dend_16 { pt3dadd( 2.93345, -45.4976, 5.71845, 0.44 ) }
    dend_16 { pt3dadd( 2.6906, -46.6431, 5.9409, 0.44 ) }
    dend_16 { pt3dadd( 2.55597, -47.5548, 6.16363, 0.44 ) }
    dend_16 { pt3dadd( 2.50574, -48.3941, 6.50523, 0.88 ) }
    dend_16 { pt3dadd( 2.53375, -49.5269, 7.27632, 1.25 ) }
    dend_16 { pt3dadd( 2.64466, -50.6155, 8.25722, 0.66 ) }
    dend_16 { pt3dadd( 2.79547, -51.4594, 9.13358, 0.52 ) }
    dend_16 { pt3dadd( 2.89957, -51.955, 9.6586, 0.52 ) }
    dend_16 { pt3dadd( 3.13633, -53.2265, 10.9451, 0.74 ) }
    dend_16 { pt3dadd( 3.32479, -54.3471, 11.963, 1.25 ) }
    dend_16 { pt3dadd( 3.41023, -54.8209, 12.3232, 1.25 ) }
    dend_16 { pt3dadd( 3.57721, -55.6264, 12.8217, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_16 { pt3dadd( 3.83741, -56.657, 13.3108, 0.44 ) }
    dend_16 { pt3dadd( 4.25015, -58.0113, 13.8006, 0.37 ) }
    dend_16 { pt3dadd( 4.55714, -58.8055, 14.004, 0.37 ) }
    dend_16 { pt3dadd( 4.91883, -59.6021, 14.1699, 0.96 ) }
    dend_16 { pt3dadd( 5.21126, -60.1956, 14.2904, 1.33 ) }
    dend_16 { pt3dadd( 6.11678, -61.8198, 14.6558, 0.29 ) }
    dend_16 { pt3dadd( 6.46229, -62.3495, 14.7955, 0.29 ) }
    dend_16 { pt3dadd( 6.82559, -62.8307, 14.9355, 0.29 ) }
    dend_16 { pt3dadd( 6.96056, -63.0095, 14.989, 0.44 ) }
    dend_16 { pt3dadd( 8.61354, -72.7004, 19.0781, 0.44 ) }
    dend_16 { pt3dadd( 11.9993, -82.0137, 22.9722, 0.44 ) }
    dend_16 { pt3dadd( 14.9279, -91.9405, 25.4717, 0.44 ) }
    dend_16 { pt3dadd( 18.0796, -101.597, 28.6615, 0.44 ) }
    dend_16 { pt3dadd( 20.4687, -111.326, 32.2684, 0.44 ) }
    dend_16 { pt3dadd( 22.9374, -121.317, 34.9986, 0.44 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 15/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 4.85278, -23.5033, -4.73297, 1.03 ) }
    dend_11 { pt3dadd( 4.83262, -24.812, -5.0437, 1.03 ) }
    dend_11 { pt3dadd( 4.93591, -26.1252, -5.2898, 1.03 ) }
    dend_11 { pt3dadd( 5.1056, -27.0842, -5.42269, 0.96 ) }
    dend_11 { pt3dadd( 5.33266, -27.9963, -5.51668, 0.96 ) }
    dend_11 { pt3dadd( 5.61513, -28.8838, -5.57783, 0.96 ) }
    dend_11 { pt3dadd( 5.83886, -29.4867, -5.57806, 1.18 ) }
    dend_11 { pt3dadd( 6.29538, -30.3212, -5.4221, 1.47 ) }
    dend_11 { pt3dadd( 6.75726, -30.9985, -5.17771, 2.21 ) }
    dend_11 { pt3dadd( 6.94812, -31.2673, -5.04772, 2.21 ) }
    dend_11 { pt3dadd( 7.22404, -31.708, -4.79953, 1.99 ) }
    dend_11 { pt3dadd( 7.65867, -32.5793, -4.28833, 1.33 ) }
    dend_11 { pt3dadd( 7.99612, -33.5446, -3.76061, 0.88 ) }
    dend_11 { pt3dadd( 8.15391, -34.3189, -3.38057, 0.74 ) }
    dend_11 { pt3dadd( 8.19537, -35.0442, -3.09753, 0.74 ) }
    dend_11 { pt3dadd( 8.15297, -35.9066, -2.84716, 1.33 ) }
    dend_11 { pt3dadd( 8.0916, -36.4266, -2.74557, 1.62 ) }
    dend_11 { pt3dadd( 8.00591, -36.991, -2.6858, 1.92 ) }
    dend_11 { pt3dadd( 7.92151, -37.5919, -2.67093, 1.69 ) }
    dend_11 { pt3dadd( 7.83798, -38.7337, -2.68987, 1.33 ) }
    dend_11 { pt3dadd( 7.85771, -39.8897, -2.73683, 1.03 ) }
    dend_11 { pt3dadd( 7.94904, -40.685, -2.78033, 0.88 ) }
    dend_11 { pt3dadd( 8.10909, -41.4212, -2.81599, 1.03 ) }
    dend_11 { pt3dadd( 8.40242, -42.3844, -2.85784, 1.03 ) }
    dend_11 { pt3dadd( 8.77717, -43.3499, -2.90376, 1.03 ) }
    dend_11 { pt3dadd( 9.14854, -44.1686, -2.96693, 1.33 ) }
    dend_11 { pt3dadd( 9.43573, -44.7807, -3.05326, 1.69 ) }
    dend_11 { pt3dadd( 9.7581, -45.5188, -3.21095, 1.47 ) }
    dend_11 { pt3dadd( 9.95044, -46.0312, -3.36396, 1.03 ) }
    dend_11 { pt3dadd( 10.1796, -46.8054, -3.65372, 0.96 ) }
    dend_11 { pt3dadd( 10.3408, -47.5054, -3.97089, 0.96 ) }
    dend_11 { pt3dadd( 10.4855, -48.3577, -4.39772, 1.4 ) }
    dend_11 { pt3dadd( 10.5983, -49.2603, -4.86044, 1.4 ) }
    dend_11 { pt3dadd( 10.6891, -50.0486, -5.26043, 1.55 ) }
    dend_11 { pt3dadd( 10.7512, -50.48, -5.45559, 1.77 ) }
    dend_11 { pt3dadd( 10.9032, -51.3155, -5.77066, 0.96 ) }
    dend_11 { pt3dadd( 11.0824, -52.0745, -5.97467, 0.66 ) }
    dend_11 { pt3dadd( 11.2995, -52.8, -6.05133, 0.66 ) }
    dend_11 { pt3dadd( 11.5824, -53.5112, -6.0065, 0.96 ) }
    dend_11 { pt3dadd( 11.9463, -54.2251, -5.8616, 1.11 ) }
    dend_11 { pt3dadd( 12.1441, -54.5402, -5.76786, 1.4 ) }
    dend_11 { pt3dadd( 12.3289, -54.7917, -5.67844, 1.4 ) }
    dend_11 { pt3dadd( 12.7183, -55.3146, -5.49219, 1.4 ) }
    dend_11 { pt3dadd( 13.1812, -55.9913, -5.29522, 0.66 ) }
    dend_11 { pt3dadd( 13.3899, -56.3486, -5.23744, 0.52 ) }
    dend_11 { pt3dadd( 13.6296, -56.8508, -5.21367, 0.52 ) }
    dend_11 { pt3dadd( 13.9336, -57.6668, -5.21051, 0.81 ) }
    dend_11 { pt3dadd( 14.183, -58.5769, -5.20303, 1.03 ) }
    dend_11 { pt3dadd( 14.295, -59.1746, -5.21181, 1.03 ) }
    dend_11 { pt3dadd( 14.3759, -59.978, -5.22558, 1.03 ) }
    dend_11 { pt3dadd( 14.4266, -60.772, -5.28833, 1.03 ) }
    dend_11 { pt3dadd( 14.4611, -61.5929, -5.39152, 0.88 ) }
    dend_11 { pt3dadd( 14.5226, -62.5893, -5.58562, 1.03 ) }
    dend_11 { pt3dadd( 14.6143, -63.4742, -5.80588, 0.52 ) }
    dend_11 { pt3dadd( 14.7519, -64.308, -6.06416, 0.52 ) }
    dend_11 { pt3dadd( 15.0237, -65.5144, -6.54583, 0.88 ) }
    dend_11 { pt3dadd( 15.1615, -66.0032, -6.78515, 1.11 ) }
    dend_11 { pt3dadd( 15.4032, -66.7725, -7.21867, 0.59 ) }
    dend_11 { pt3dadd( 15.5034, -67.0984, -7.40245, 0.59 ) }
    dend_11 { pt3dadd( 15.6765, -67.838, -7.72579, 0.52 ) }
    dend_11 { pt3dadd( 15.7562, -68.6358, -7.93648, 0.52 ) }
    dend_11 { pt3dadd( 15.6796, -69.2927, -7.95715, 1.11 ) }
    dend_11 { pt3dadd( 15.5175, -69.8499, -7.90837, 1.25 ) }
    dend_11 { pt3dadd( 15.1629, -70.6943, -7.75776, 1.18 ) }
    dend_11 { pt3dadd( 14.7686, -71.5208, -7.57132, 0.52 ) }
    dend_11 { pt3dadd( 14.4767, -72.0985, -7.40069, 0.52 ) }
    dend_11 { pt3dadd( 14.1154, -72.8926, -7.1636, 0.52 ) }
    dend_11 { pt3dadd( 14.005, -73.1913, -7.09479, 0.81 ) }
    dend_11 { pt3dadd( 13.8633, -73.7361, -7.02621, 0.74 ) }
    dend_11 { pt3dadd( 13.7394, -74.4316, -7.03186, 0.74 ) }
    dend_11 { pt3dadd( 13.6356, -75.1154, -7.10702, 1.03 ) }
    dend_11 { pt3dadd( 13.4887, -76.0106, -7.29129, 0.66 ) }
    dend_11 { pt3dadd( 13.3656, -76.5945, -7.45739, 0.52 ) }
    dend_11 { pt3dadd( 13.1658, -77.2595, -7.70545, 1.11 ) }
    dend_11 { pt3dadd( 12.965, -77.8054, -7.99016, 1.11 ) }
    dend_11 { pt3dadd( 12.6583, -78.568, -8.47746, 0.81 ) }
    dend_11 { pt3dadd( 12.3466, -79.3562, -9.05546, 0.66 ) }
    dend_11 { pt3dadd( 12.1425, -79.9075, -9.4762, 0.88 ) }
    dend_11 { pt3dadd( 11.9269, -80.6605, -10.0688, 0.66 ) }
    dend_11 { pt3dadd( 11.7394, -81.6508, -10.9249, 0.59 ) }
    dend_11 { pt3dadd( 11.6816, -82.2982, -11.525, 0.88 ) }
    dend_11 { pt3dadd( 11.675, -82.8642, -12.0707, 1.18 ) }
    dend_11 { pt3dadd( 11.6812, -83.2744, -12.4664, 0.96 ) }
    dend_11 { pt3dadd( 11.6974, -83.8174, -12.9886, 0.96 ) }
    dend_11 { pt3dadd( 11.7094, -84.814, -13.8811, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_11 { pt3dadd( 11.6958, -85.1447, -14.1495, 0.81 ) }
    dend_11 { pt3dadd( 11.6527, -85.795, -14.6339, 0.66 ) }
    dend_11 { pt3dadd( 11.5971, -86.2988, -14.9241, 0.66 ) }
    dend_11 { pt3dadd( 11.5032, -86.9332, -15.1666, 0.96 ) }
    dend_11 { pt3dadd( 11.3329, -87.7384, -15.2034, 0.88 ) }
    dend_11 { pt3dadd( 11.1666, -88.4597, -15.0765, 0.88 ) }
    dend_11 { pt3dadd( 11.0155, -89.0924, -14.9243, 0.37 ) }
    dend_11 { pt3dadd( 10.7544, -90.2549, -14.6012, 1.03 ) }
    dend_11 { pt3dadd( 10.6199, -90.8655, -14.4452, 1.03 ) }
    dend_11 { pt3dadd( 10.2866, -92.2093, -14.154, 0.44 ) }
    dend_11 { pt3dadd( 10.0644, -93.1751, -14.0477, 0.44 ) }
    dend_11 { pt3dadd( 9.98952, -93.7279, -14.0996, 0.74 ) }
    dend_11 { pt3dadd( 10.0149, -94.2873, -14.313, 0.74 ) }
    dend_11 { pt3dadd( 10.1731, -95.0509, -14.7759, 0.44 ) }
    dend_11 { pt3dadd( 10.3605, -95.6605, -15.1999, 0.66 ) }
    dend_11 { pt3dadd( 10.6991, -96.5365, -15.8578, 0.44 ) }
    dend_11 { pt3dadd( 11.2207, -97.7922, -16.7933, 0.88 ) }
    dend_11 { pt3dadd( 11.7955, -99.1766, -17.7597, 0.52 ) }
    dend_11 { pt3dadd( 12.0947, -99.8843, -18.2335, 0.74 ) }
    dend_11 { pt3dadd( 12.5047, -100.838, -18.8377, 1.33 ) }
    dend_11 { pt3dadd( 12.7229, -101.383, -19.1573, 1.33 ) }
    dend_11 { pt3dadd( 13.0823, -102.507, -19.7412, 0.74 ) }
    dend_11 { pt3dadd( 13.2407, -103.227, -20.0485, 0.66 ) }
    dend_11 { pt3dadd( 13.3605, -104.249, -20.4317, 0.66 ) }
    dend_11 { pt3dadd( 13.3796, -104.954, -20.7087, 0.81 ) }
    dend_11 { pt3dadd( 13.3274, -105.666, -21.0245, 0.59 ) }
    dend_11 { pt3dadd( 13.2387, -106.14, -21.2426, 1.18 ) }
    dend_11 { pt3dadd( 13.1746, -106.358, -21.3502, 1.18 ) }
    dend_11 { pt3dadd( 12.9039, -107.125, -21.7336, 0.44 ) }
    dend_11 { pt3dadd( 12.6413, -107.799, -22.0079, 0.44 ) }
    dend_11 { pt3dadd( 12.4336, -108.372, -22.1926, 1.03 ) }
    dend_11 { pt3dadd( 12.3187, -108.789, -22.2733, 1.4 ) }
    dend_11 { pt3dadd( 12.1539, -109.698, -22.2596, 0.52 ) }
    dend_11 { pt3dadd( 12.0825, -110.321, -22.1962, 0.52 ) }
    dend_11 { pt3dadd( 12.0655, -111.16, -21.9928, 0.74 ) }
    dend_11 { pt3dadd( 12.074, -111.47, -21.8679, 0.74 ) }
    dend_11 { pt3dadd( 12.0856, -112.103, -21.4971, 0.59 ) }
    dend_11 { pt3dadd( 12.0989, -112.835, -20.9264, 0.96 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 38/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 4.85278, -23.5033, -4.73297, 0.88 ) }
    dend_2 { pt3dadd( 9.98833, -23.4547, -8.16055, 0.88 ) }
    dend_2 { pt3dadd( 11.4512, -23.3917, -8.98677, 0.88 ) }
    dend_2 { pt3dadd( 12.9074, -23.3203, -9.66612, 1.03 ) }
    dend_2 { pt3dadd( 13.889, -23.27, -10.0424, 1.33 ) }
    dend_2 { pt3dadd( 14.7904, -23.2309, -10.3481, 1.62 ) }
    dend_2 { pt3dadd( 16.09, -23.1952, -10.7518, 1.84 ) }
    dend_2 { pt3dadd( 17.1953, -23.104, -10.9495, 1.47 ) }
    dend_2 { pt3dadd( 18.5186, -23.0067, -11.3631, 1.18 ) }
    dend_2 { pt3dadd( 19.5001, -22.9049, -12.0893, 0.81 ) }
    dend_2 { pt3dadd( 20.5372, -22.7587, -13.203, 0.81 ) }
    dend_2 { pt3dadd( 21.1906, -22.6813, -14.0136, 1.11 ) }
    dend_2 { pt3dadd( 22.5696, -22.6063, -15.911, 1.33 ) }
    dend_2 { pt3dadd( 24.015, -22.5919, -18.0067, 1.77 ) }
    dend_2 { pt3dadd( 27.3008, -22.7083, -22.8594, 1.47 ) }
    dend_2 { pt3dadd( 28.3594, -22.7828, -24.3756, 1.11 ) }
    dend_2 { pt3dadd( 29.4428, -22.8753, -25.82, 1.11 ) }
    dend_2 { pt3dadd( 30.9036, -23.0033, -27.5166, 0.81 ) }
    dend_2 { pt3dadd( 31.7942, -23.0914, -28.3391, 0.96 ) }
    dend_2 { pt3dadd( 33.2104, -23.1874, -29.2622, 0.88 ) }
    dend_2 { pt3dadd( 34.3758, -23.1013, -29.8251, 0.74 ) }
    dend_2 { pt3dadd( 35.2743, -22.8511, -30.3035, 0.59 ) }
    dend_2 { pt3dadd( 36.4408, -22.2821, -31.0721, 1.03 ) }
    dend_2 { pt3dadd( 37.3117, -21.7437, -31.6834, 1.55 ) }
    dend_2 { pt3dadd( 38.1137, -21.214, -32.259, 1.69 ) }
    dend_2 { pt3dadd( 40.5129, -19.6119, -34.0594, 1.69 ) }
    dend_2 { pt3dadd( 41.254, -19.1386, -34.6423, 1.69 ) }
    dend_2 { pt3dadd( 43.1107, -18.0495, -36.0883, 0.88 ) }
    dend_2 { pt3dadd( 44.162, -17.5281, -36.8512, 0.81 ) }
    dend_2 { pt3dadd( 45.4172, -17.0488, -37.6304, 1.11 ) }
    dend_2 { pt3dadd( 47.0487, -16.6298, -38.4718, 1.18 ) }
    dend_2 { pt3dadd( 48.5254, -16.4731, -39.0383, 0.59 ) }
    dend_2 { pt3dadd( 49.1833, -16.4941, -39.2611, 0.59 ) }
    dend_2 { pt3dadd( 50.7751, -16.8183, -39.665, 0.96 ) }
    dend_2 { pt3dadd( 51.9081, -17.2453, -39.9281, 1.18 ) }
    dend_2 { pt3dadd( 52.8662, -17.7615, -40.1004, 1.18 ) }
    dend_2 { pt3dadd( 53.8367, -18.3913, -40.1929, 1.4 ) }
    dend_2 { pt3dadd( 54.9492, -19.1782, -40.2468, 1.4 ) }
    dend_2 { pt3dadd( 55.9822, -19.8836, -40.2785, 1.11 ) }
    dend_2 { pt3dadd( 56.7138, -20.3142, -40.2792, 1.11 ) }
    dend_2 { pt3dadd( 57.6194, -20.6998, -40.2626, 1.03 ) }
    dend_2 { pt3dadd( 58.8098, -21.0302, -40.2169, 1.03 ) }
    dend_2 { pt3dadd( 59.8506, -21.1863, -40.1568, 1.03 ) }
    dend_2 { pt3dadd( 61.0533, -21.2485, -40.0669, 0.96 ) }
    dend_2 { pt3dadd( 62.7144, -21.202, -39.9366, 0.88 ) }
    dend_2 { pt3dadd( 64.5223, -21.0519, -39.7489, 0.88 ) }
    dend_2 { pt3dadd( 65.7212, -20.889, -39.598, 1.03 ) }
    dend_2 { pt3dadd( 66.664, -20.7312, -39.4911, 1.11 ) }
    dend_2 { pt3dadd( 67.44, -20.5968, -39.4346, 1.18 ) }
    dend_2 { pt3dadd( 68.1447, -20.5077, -39.4715, 1.18 ) }
    dend_2 { pt3dadd( 69.5684, -20.4749, -39.8395, 0.81 ) }
    dend_2 { pt3dadd( 70.5899, -20.5978, -40.3198, 0.74 ) }
    dend_2 { pt3dadd( 71.9259, -20.8927, -41.1153, 1.18 ) }
    dend_2 { pt3dadd( 72.945, -21.1725, -41.7941, 1.4 ) }
    dend_2 { pt3dadd( 75.0189, -21.7869, -43.3089, 1.18 ) }
    dend_2 { pt3dadd( 76.6157, -22.2449, -44.5542, 0.88 ) }
    dend_2 { pt3dadd( 77.8111, -22.537, -45.5657, 0.74 ) }
    dend_2 { pt3dadd( 79.0226, -22.7572, -46.5765, 0.74 ) }
    dend_2 { pt3dadd( 80.1298, -22.8438, -47.4306, 1.11 ) }
    dend_2 { pt3dadd( 81.3144, -22.8026, -48.2907, 1.4 ) }
    dend_2 { pt3dadd( 82.4946, -22.6894, -49.1018, 1.4 ) }
    dend_2 { pt3dadd( 84.1388, -22.5396, -50.2541, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_2 { pt3dadd( 85.1047, -22.4942, -50.9737, 0.74 ) }
    dend_2 { pt3dadd( 86.32, -22.5633, -51.9372, 0.66 ) }
    dend_2 { pt3dadd( 87.766, -22.8625, -53.1449, 0.81 ) }
    dend_2 { pt3dadd( 89.2186, -23.3963, -54.3059, 0.74 ) }
    dend_2 { pt3dadd( 90.4265, -23.9729, -55.2564, 1.25 ) }
    dend_2 { pt3dadd( 91.0951, -24.3232, -55.7501, 1.69 ) }
    dend_2 { pt3dadd( 91.9662, -24.7443, -56.3491, 1.69 ) }
    dend_2 { pt3dadd( 92.8712, -25.0616, -56.8519, 1.4 ) }
    dend_2 { pt3dadd( 94.2716, -25.2734, -57.4144, 0.88 ) }
    dend_2 { pt3dadd( 96.3093, -25.1718, -58.0228, 0.81 ) }
    dend_2 { pt3dadd( 97.2329, -25.0391, -58.2481, 0.81 ) }
    dend_2 { pt3dadd( 98.5152, -24.8388, -58.4903, 0.81 ) }
    dend_2 { pt3dadd( 100.154, -24.5934, -58.6904, 0.81 ) }
    dend_2 { pt3dadd( 101.169, -24.4814, -58.7481, 0.81 ) }
    dend_2 { pt3dadd( 102.594, -24.437, -58.7575, 0.81 ) }
    dend_2 { pt3dadd( 103.539, -24.5445, -58.6975, 0.96 ) }
    dend_2 { pt3dadd( 104.982, -24.9621, -58.6518, 0.96 ) }
    dend_2 { pt3dadd( 105.961, -25.4124, -58.7216, 1.18 ) }
    dend_2 { pt3dadd( 106.836, -25.9233, -58.9043, 1.47 ) }
    dend_2 { pt3dadd( 107.733, -26.4934, -59.163, 1.47 ) }
    dend_2 { pt3dadd( 109.044, -27.3331, -59.5971, 0.74 ) }
    dend_2 { pt3dadd( 110.575, -28.2463, -60.1383, 0.74 ) }
    dend_2 { pt3dadd( 112.46, -29.2336, -60.8482, 0.66 ) }
    dend_2 { pt3dadd( 114.229, -30.0453, -61.57, 0.74 ) }
    dend_2 { pt3dadd( 115.338, -30.4635, -62.0264, 0.81 ) }
    dend_2 { pt3dadd( 116.612, -30.8133, -62.5272, 0.81 ) }
    dend_2 { pt3dadd( 117.261, -30.9156, -62.7579, 1.11 ) }
    dend_2 { pt3dadd( 118.821, -30.9707, -63.2684, 1.25 ) }
    dend_2 { pt3dadd( 119.515, -30.9145, -63.5358, 1.62 ) }
    dend_2 { pt3dadd( 120.29, -30.7743, -63.9543, 1.62 ) }
    dend_2 { pt3dadd( 121.815, -30.427, -64.9454, 0.59 ) }
    dend_2 { pt3dadd( 122.771, -30.1965, -65.6402, 0.59 ) }
    dend_2 { pt3dadd( 124.209, -29.8676, -66.7215, 0.88 ) }
    dend_2 { pt3dadd( 126.14, -29.4713, -68.1859, 1.4 ) }
    dend_2 { pt3dadd( 128.084, -29.1467, -69.6078, 0.74 ) }
    dend_2 { pt3dadd( 129.228, -29.009, -70.4054, 0.59 ) }
    dend_2 { pt3dadd( 130.195, -28.9504, -71.0098, 0.81 ) }
    dend_2 { pt3dadd( 131.045, -28.9668, -71.4002, 0.81 ) }
    dend_2 { pt3dadd( 131.842, -29.0419, -71.588, 0.96 ) }
    dend_2 { pt3dadd( 132.651, -29.1287, -71.6428, 0.96 ) }
    dend_2 { pt3dadd( 133.613, -29.211, -71.6509, 0.59 ) }
    dend_2 { pt3dadd( 135.116, -29.2646, -71.6875, 0.59 ) }
    dend_2 { pt3dadd( 136.571, -29.2342, -71.7243, 0.66 ) }
    dend_2 { pt3dadd( 137.424, -29.1673, -71.8178, 1.03 ) }
    dend_2 { pt3dadd( 138.825, -29.0083, -72.0538, 1.03 ) }
    dend_2 { pt3dadd( 140.242, -28.7401, -72.6446, 0.59 ) }
    dend_2 { pt3dadd( 140.961, -28.5451, -73.0812, 0.59 ) }
    dend_2 { pt3dadd( 141.915, -28.2428, -73.7827, 0.59 ) }
    dend_2 { pt3dadd( 143.372, -27.8193, -74.9551, 1.11 ) }
    dend_2 { pt3dadd( 144.024, -27.6753, -75.4878, 1.33 ) }
    dend_2 { pt3dadd( 147.674, -27.087, -78.3399, 1.03 ) }
    dend_2 { pt3dadd( 148.329, -26.9995, -78.8066, 1.4 ) }
    dend_2 { pt3dadd( 149.619, -26.8447, -79.6175, 0.81 ) }
    dend_2 { pt3dadd( 150.914, -26.6956, -80.3029, 0.74 ) }
    dend_2 { pt3dadd( 152.543, -26.5111, -80.958, 0.59 ) }
    dend_2 { pt3dadd( 153.618, -26.3871, -81.2796, 0.59 ) }
    dend_2 { pt3dadd( 155.324, -26.1992, -81.5425, 0.59 ) }
    dend_2 { pt3dadd( 157.346, -25.8908, -81.8469, 0.88 ) }
    dend_2 { pt3dadd( 158.065, -25.7085, -81.9447, 1.25 ) }
    dend_2 { pt3dadd( 158.705, -25.4783, -82.023, 1.55 ) }
    dend_2 { pt3dadd( 159.656, -25.0694, -82.1513, 1.55 ) }
    dend_2 { pt3dadd( 160.429, -24.7242, -82.2761, 1.33 ) }
    dend_2 { pt3dadd( 161.385, -24.2948, -82.4377, 0.66 ) }
    dend_2 { pt3dadd( 162.606, -23.7709, -82.6401, 0.66 ) }
    dend_2 { pt3dadd( 163.427, -23.4534, -82.8508, 0.66 ) }
    dend_2 { pt3dadd( 164.941, -22.8914, -83.4135, 0.66 ) }
    dend_2 { pt3dadd( 165.629, -22.72, -83.9292, 0.66 ) }
    dend_2 { pt3dadd( 166.056, -22.6535, -84.3425, 0.96 ) }
    dend_2 { pt3dadd( 166.567, -22.6098, -84.8914, 0.96 ) }
    dend_2 { pt3dadd( 168.102, -22.5929, -86.5883, 0.74 ) }
    dend_2 { pt3dadd( 169.021, -22.6244, -87.5948, 1.62 ) }
    dend_2 { pt3dadd( 172.676, -22.8313, -91.4314, 0.66 ) }
    dend_2 { pt3dadd( 173.228, -22.8502, -91.9825, 0.66 ) }
    dend_2 { pt3dadd( 174.07, -22.857, -92.7381, 1.11 ) }
    dend_2 { pt3dadd( 175.162, -22.8481, -93.5955, 1.11 ) }
    dend_2 { pt3dadd( 176.262, -22.7971, -94.2745, 0.52 ) }
    dend_2 { pt3dadd( 177.337, -22.6788, -94.7549, 0.52 ) }
    dend_2 { pt3dadd( 178.69, -22.3817, -95.1562, 1.25 ) }
    dend_2 { pt3dadd( 179.735, -22.1062, -95.4728, 0.88 ) }
    dend_2 { pt3dadd( 181.728, -21.4622, -96.0772, 0.44 ) }
    dend_2 { pt3dadd( 182.866, -21.0219, -96.4024, 0.44 ) }
    dend_2 { pt3dadd( 184.553, -20.2836, -96.8535, 0.52 ) }
    dend_2 { pt3dadd( 185.668, -19.7481, -97.1343, 0.88 ) }
    dend_2 { pt3dadd( 186.221, -19.4694, -97.2611, 1.11 ) }
    dend_2 { pt3dadd( 186.699, -19.1978, -97.4256, 1.11 ) }
    dend_2 { pt3dadd( 187.091, -18.9419, -97.6229, 1.11 ) }
    dend_2 { pt3dadd( 188.41, -18.0116, -98.597, 0.52 ) }
    dend_2 { pt3dadd( 188.954, -17.635, -99.1607, 0.52 ) }
    dend_2 { pt3dadd( 189.72, -17.1307, -100.061, 0.81 ) }
    dend_2 { pt3dadd( 191.523, -16.0343, -102.238, 0.81 ) }
    dend_2 { pt3dadd( 192.374, -15.5446, -103.24, 1.11 ) }
    dend_2 { pt3dadd( 192.744, -15.347, -103.631, 1.92 ) }
    dend_2 { pt3dadd( 194.873, -14.3456, -105.484, 0.59 ) }
    dend_2 { pt3dadd( 195.14, -14.2412, -105.658, 0.59 ) }
    dend_2 { pt3dadd( 196.091, -13.9601, -106.017, 0.88 ) }
    dend_2 { pt3dadd( 197.292, -13.7104, -106.199, 0.44 ) }
    dend_2 { pt3dadd( 199.246, -13.3985, -106.386, 0.44 ) }
    dend_2 { pt3dadd( 200.782, -13.2045, -106.489, 0.74 ) }
    dend_2 { pt3dadd( 201.651, -13.1342, -106.576, 0.74 ) }
    dend_2 { pt3dadd( 202.967, -13.1123, -106.919, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_2 { pt3dadd( 203.771, -13.1623, -107.297, 0.52 ) }
    dend_2 { pt3dadd( 205.002, -13.3196, -108.106, 0.59 ) }
    dend_2 { pt3dadd( 205.475, -13.3819, -108.469, 0.59 ) }
    dend_2 { pt3dadd( 207.556, -13.5741, -110.172, 0.59 ) }
    dend_2 { pt3dadd( 208.93, -13.6152, -111.292, 0.81 ) }
    dend_2 { pt3dadd( 210.222, -13.557, -112.344, 1.4 ) }
    dend_2 { pt3dadd( 210.908, -13.4461, -112.854, 1.55 ) }
    dend_2 { pt3dadd( 212.477, -12.9317, -113.81, 0.44 ) }
    dend_2 { pt3dadd( 213.136, -12.5918, -114.098, 0.88 ) }
    dend_2 { pt3dadd( 213.933, -12.0742, -114.27, 0.88 ) }
    dend_2 { pt3dadd( 214.797, -11.5049, -114.434, 0.59 ) }
    dend_2 { pt3dadd( 216.135, -10.6824, -114.705, 0.59 ) }
    dend_2 { pt3dadd( 217.049, -10.2256, -115.012, 0.81 ) }
    dend_2 { pt3dadd( 218.102, -9.83053, -115.482, 0.81 ) }
    dend_2 { pt3dadd( 219.513, -9.40585, -116.273, 0.52 ) }
    dend_2 { pt3dadd( 221.134, -8.96962, -117.372, 0.74 ) }
    dend_2 { pt3dadd( 221.683, -8.81744, -117.913, 0.74 ) }
    dend_2 { pt3dadd( 222.922, -8.36328, -119.671, 0.37 ) }
    dend_2 { pt3dadd( 223.45, -8.08066, -120.647, 0.37 ) }
    dend_2 { pt3dadd( 224.158, -7.5439, -122.249, 0.37 ) }
    dend_2 { pt3dadd( 224.696, -6.97567, -123.677, 0.59 ) }
    dend_2 { pt3dadd( 226.13, -5.21229, -127.589, 0.88 ) }
    dend_2 { pt3dadd( 226.807, -4.36596, -129.366, 0.52 ) }
    dend_2 { pt3dadd( 227.067, -4.09249, -129.99, 0.52 ) }
    dend_2 { pt3dadd( 227.684, -3.62432, -131.348, 0.52 ) }
    dend_2 { pt3dadd( 228.221, -3.32356, -132.336, 0.81 ) }
    dend_2 { pt3dadd( 228.96, -3.00236, -133.459, 0.59 ) }
    dend_2 { pt3dadd( 229.624, -2.78076, -134.303, 0.59 ) }
    dend_2 { pt3dadd( 231.853, -2.2161, -137.0, 1.18 ) }
    dend_2 { pt3dadd( 234.503, -1.68014, -140.388, 0.74 ) }
    dend_2 { pt3dadd( 235.147, -1.57772, -141.286, 0.74 ) }
    dend_2 { pt3dadd( 235.74, -1.49691, -142.198, 0.88 ) }
    // Section: dend_87, id: dend_87, parent: dend_85 (entry count 32/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( -53.702, 134.376, -35.4118, 0.29 ) }
    dend_87 { pt3dadd( -54.9092, 134.231, -35.8329, 0.29 ) }
    dend_87 { pt3dadd( -55.8799, 134.263, -36.1971, 0.29 ) }
    dend_87 { pt3dadd( -56.3688, 134.416, -36.4667, 0.59 ) }
    dend_87 { pt3dadd( -56.9139, 134.727, -36.8248, 0.59 ) }
    dend_87 { pt3dadd( -57.3561, 135.047, -37.1221, 0.59 ) }
    dend_87 { pt3dadd( -57.8312, 135.435, -37.4283, 0.44 ) }
    dend_87 { pt3dadd( -58.1923, 135.886, -37.6871, 0.59 ) }
    dend_87 { pt3dadd( -58.8285, 136.8, -38.2562, 0.37 ) }
    dend_87 { pt3dadd( -59.1353, 137.24, -38.5628, 0.29 ) }
    dend_87 { pt3dadd( -59.4531, 137.641, -38.8656, 0.59 ) }
    dend_87 { pt3dadd( -59.8052, 138.047, -39.1841, 0.59 ) }
    dend_87 { pt3dadd( -60.5764, 138.901, -39.8649, 0.29 ) }
    dend_87 { pt3dadd( -61.2863, 139.723, -40.5266, 0.29 ) }
    dend_87 { pt3dadd( -61.6102, 140.12, -40.8661, 0.29 ) }
    dend_87 { pt3dadd( -62.2113, 140.888, -41.6291, 0.29 ) }
    dend_87 { pt3dadd( -62.5777, 141.372, -42.2039, 0.29 ) }
    dend_87 { pt3dadd( -62.9553, 141.881, -42.8752, 0.52 ) }
    dend_87 { pt3dadd( -63.2934, 142.354, -43.5179, 0.66 ) }
    dend_87 { pt3dadd( -63.7812, 143.105, -44.508, 0.44 ) }
    dend_87 { pt3dadd( -64.1527, 143.718, -45.3783, 0.59 ) }
    dend_87 { pt3dadd( -64.5861, 144.437, -46.5929, 0.96 ) }
    dend_87 { pt3dadd( -64.7624, 144.653, -47.0499, 0.52 ) }
    // Section: dend_86, id: dend_86, parent: dend_85 (entry count 55/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( -53.702, 134.376, -35.4118, 0.66 ) }
    dend_86 { pt3dadd( -52.5012, 134.472, -35.6257, 0.66 ) }
    dend_86 { pt3dadd( -51.5418, 134.549, -35.7965, 0.29 ) }
    dend_86 { pt3dadd( -50.8453, 134.605, -35.9205, 0.44 ) }
    dend_86 { pt3dadd( -49.9868, 134.674, -36.0733, 0.44 ) }
    // Section: dend_82, id: dend_82, parent: dend_80 (entry count 60/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( -67.4326, 139.284, -26.7443, 0.29 ) }
    dend_82 { pt3dadd( -67.8741, 139.766, -27.1799, 0.29 ) }
    dend_82 { pt3dadd( -68.4404, 140.322, -27.7336, 0.59 ) }
    dend_82 { pt3dadd( -68.8122, 140.689, -28.105, 0.44 ) }
    dend_82 { pt3dadd( -69.3477, 141.257, -28.6518, 0.88 ) }
    dend_82 { pt3dadd( -69.586, 141.546, -28.9168, 1.03 ) }
    dend_82 { pt3dadd( -70.1185, 142.283, -29.5541, 0.52 ) }
    dend_82 { pt3dadd( -70.2915, 142.552, -29.7852, 0.44 ) }
    dend_82 { pt3dadd( -70.6257, 143.134, -30.231, 0.66 ) }
    dend_82 { pt3dadd( -70.8756, 143.611, -30.5691, 0.88 ) }
    dend_82 { pt3dadd( -71.3442, 144.546, -31.1619, 0.59 ) }
    dend_82 { pt3dadd( -71.6536, 145.165, -31.5238, 0.74 ) }
    dend_82 { pt3dadd( -71.9674, 145.795, -31.8612, 0.74 ) }
    dend_82 { pt3dadd( -72.4104, 146.625, -32.2992, 0.37 ) }
    dend_82 { pt3dadd( -72.6184, 146.974, -32.4816, 0.37 ) }
    dend_82 { pt3dadd( -73.1156, 147.711, -32.8529, 0.66 ) }
    dend_82 { pt3dadd( -73.4673, 148.15, -33.0596, 0.66 ) }
    dend_82 { pt3dadd( -73.8418, 148.54, -33.2342, 0.52 ) }
    dend_82 { pt3dadd( -74.3902, 149.02, -33.4296, 0.88 ) }
    dend_82 { pt3dadd( -74.7681, 149.299, -33.5279, 0.88 ) }
    dend_82 { pt3dadd( -75.3279, 149.65, -33.6176, 0.52 ) }
    dend_82 { pt3dadd( -76.004, 150.023, -33.6723, 0.52 ) }
    dend_82 { pt3dadd( -76.8424, 150.474, -33.6997, 0.88 ) }
    dend_82 { pt3dadd( -77.3828, 150.776, -33.7013, 0.88 ) }
    dend_82 { pt3dadd( -78.0529, 151.164, -33.6841, 0.52 ) }
    dend_82 { pt3dadd( -78.625, 151.508, -33.6634, 0.44 ) }
    dend_82 { pt3dadd( -79.2755, 151.906, -33.6418, 0.37 ) }
    dend_82 { pt3dadd( -79.9107, 152.33, -33.6202, 0.37 ) }
    dend_82 { pt3dadd( -80.5419, 152.795, -33.6071, 0.29 ) }
    dend_82 { pt3dadd( -81.5672, 153.612, -33.6073, 0.29 ) }
    dend_82 { pt3dadd( -82.0458, 154.005, -33.6138, 0.29 ) }
    dend_82 { pt3dadd( -82.5976, 154.446, -33.6222, 1.11 ) }
    // Section: dend_81, id: dend_81, parent: dend_80 (entry count 92/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( -67.4326, 139.284, -26.7443, 0.29 ) }
    dend_81 { pt3dadd( -68.8367, 138.437, -24.5835, 0.29 ) }
    dend_81 { pt3dadd( -69.6007, 137.976, -23.4076, 0.29 ) }
    dend_81 { pt3dadd( -70.1421, 137.65, -22.5744, 0.22 ) }
    dend_81 { pt3dadd( -70.8328, 137.233, -21.5115, 0.22 ) }
    dend_81 { pt3dadd( -71.6013, 136.77, -20.3288, 0.22 ) }
    // Section: dend_75, id: dend_75, parent: dend_71 (entry count 98/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 146.939, 56.4954, 93.9653, 0.29 ) }
    dend_75 { pt3dadd( 147.749, 63.0483, 100.708, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_75 { pt3dadd( 149.134, 68.7509, 108.1, 0.29 ) }
    dend_75 { pt3dadd( 151.539, 74.1173, 115.481, 0.29 ) }
    dend_75 { pt3dadd( 153.075, 78.1754, 123.861, 0.29 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 3/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 146.939, 56.4954, 93.9653, 0.29 ) }
    dend_72 { pt3dadd( 156.877, 55.1663, 98.8359, 0.29 ) }
    dend_72 { pt3dadd( 166.554, 55.8686, 104.323, 0.29 ) }
    dend_72 { pt3dadd( 175.274, 58.3339, 110.813, 0.29 ) }
    // Section: dend_68, id: dend_68, parent: dend_58 (entry count 7/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 77.5472, 39.409, -7.81242, 0.37 ) }
    dend_68 { pt3dadd( 77.8795, 40.0748, -7.37542, 0.37 ) }
    dend_68 { pt3dadd( 78.3411, 41.0454, -6.66994, 0.37 ) }
    dend_68 { pt3dadd( 78.6756, 41.7486, -6.15887, 0.22 ) }
    dend_68 { pt3dadd( 79.3787, 43.2269, -5.08439, 0.22 ) }
    dend_68 { pt3dadd( 79.9147, 44.3536, -4.26545, 0.66 ) }
    dend_68 { pt3dadd( 80.5601, 45.7105, -3.27918, 1.11 ) }
    dend_68 { pt3dadd( 80.7112, 46.0389, -3.00653, 1.11 ) }
    dend_68 { pt3dadd( 84.8128, 54.9998, 1.79526, 1.11 ) }
    dend_68 { pt3dadd( 89.4352, 63.8969, 6.22829, 1.11 ) }
    dend_68 { pt3dadd( 94.8432, 72.0624, 11.1534, 1.11 ) }
    dend_68 { pt3dadd( 100.47, 79.4361, 16.9971, 1.11 ) }
    dend_68 { pt3dadd( 106.803, 87.5181, 20.8371, 1.11 ) }
    dend_68 { pt3dadd( 113.398, 95.3082, 24.8374, 1.11 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 21/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 77.5472, 39.409, -7.81242, 0.44 ) }
    dend_59 { pt3dadd( 78.547, 39.6073, -7.87409, 0.44 ) }
    dend_59 { pt3dadd( 79.6167, 39.767, -7.94346, 0.44 ) }
    dend_59 { pt3dadd( 80.7775, 39.8915, -7.94951, 0.74 ) }
    dend_59 { pt3dadd( 81.4882, 39.9502, -7.92994, 1.03 ) }
    dend_59 { pt3dadd( 82.1575, 39.9946, -7.8935, 1.03 ) }
    dend_59 { pt3dadd( 82.6832, 40.0292, -7.88177, 1.03 ) }
    dend_59 { pt3dadd( 83.5564, 40.102, -7.94192, 0.66 ) }
    dend_59 { pt3dadd( 84.739, 40.2693, -8.1366, 0.66 ) }
    dend_59 { pt3dadd( 85.1462, 40.3785, -8.25877, 0.81 ) }
    dend_59 { pt3dadd( 85.754, 40.633, -8.50144, 0.44 ) }
    dend_59 { pt3dadd( 86.9747, 41.3181, -9.0745, 0.44 ) }
    dend_59 { pt3dadd( 88.4161, 42.2951, -9.80148, 0.37 ) }
    dend_59 { pt3dadd( 88.9166, 42.681, -10.0819, 0.37 ) }
    dend_59 { pt3dadd( 89.6852, 43.3065, -10.5383, 0.37 ) }
    dend_59 { pt3dadd( 90.6151, 44.0773, -11.0538, 0.66 ) }
    dend_59 { pt3dadd( 91.1649, 44.5363, -11.3188, 0.66 ) }
    dend_59 { pt3dadd( 91.9586, 45.1593, -11.5816, 0.37 ) }
    dend_59 { pt3dadd( 92.4452, 45.4974, -11.684, 0.37 ) }
    dend_59 { pt3dadd( 93.0653, 45.9115, -11.8029, 0.59 ) }
    dend_59 { pt3dadd( 93.6136, 46.2887, -11.9239, 0.59 ) }
    dend_59 { pt3dadd( 94.1274, 46.6755, -12.1336, 0.44 ) }
    dend_59 { pt3dadd( 94.9819, 47.2745, -12.5672, 0.66 ) }
    dend_59 { pt3dadd( 95.1364, 47.3711, -12.6526, 0.96 ) }
    dend_59 { pt3dadd( 95.7285, 47.6674, -12.9719, 0.96 ) }
    dend_59 { pt3dadd( 96.5931, 47.9929, -13.4404, 1.11 ) }
    dend_59 { pt3dadd( 98.5978, 48.5634, -14.4544, 0.44 ) }
    dend_59 { pt3dadd( 99.7298, 48.8195, -14.9758, 0.44 ) }
    dend_59 { pt3dadd( 100.621, 48.9915, -15.3397, 0.37 ) }
    dend_59 { pt3dadd( 101.719, 49.2134, -15.7769, 0.37 ) }
    dend_59 { pt3dadd( 102.39, 49.3614, -16.0212, 0.29 ) }
    dend_59 { pt3dadd( 103.329, 49.6339, -16.322, 0.22 ) }
    dend_59 { pt3dadd( 103.965, 49.963, -16.5277, 0.59 ) }
    dend_59 { pt3dadd( 104.291, 50.2757, -16.6767, 0.59 ) }
    dend_59 { pt3dadd( 105.201, 51.3642, -17.2803, 0.29 ) }
    dend_59 { pt3dadd( 105.58, 51.8385, -17.5649, 0.37 ) }
    dend_59 { pt3dadd( 106.028, 52.3663, -17.9102, 0.52 ) }
    dend_59 { pt3dadd( 106.517, 52.8323, -18.2973, 0.74 ) }
    dend_59 { pt3dadd( 107.185, 53.3781, -18.9593, 0.96 ) }
    dend_59 { pt3dadd( 108.329, 54.276, -20.3616, 0.29 ) }
    dend_59 { pt3dadd( 108.751, 54.6384, -20.9923, 0.52 ) }
    dend_59 { pt3dadd( 108.929, 54.8226, -21.3209, 0.81 ) }
    dend_59 { pt3dadd( 109.48, 55.5442, -22.5432, 1.11 ) }
    dend_59 { pt3dadd( 110.418, 57.0759, -25.0165, 0.81 ) }
    dend_59 { pt3dadd( 110.801, 57.8699, -26.1908, 0.96 ) }
    dend_59 { pt3dadd( 111.186, 58.8636, -27.5026, 0.66 ) }
    dend_59 { pt3dadd( 111.475, 59.6603, -28.4722, 0.52 ) }
    dend_59 { pt3dadd( 111.794, 60.458, -29.328, 0.52 ) }
    dend_59 { pt3dadd( 111.956, 60.7799, -29.5943, 0.74 ) }
    dend_59 { pt3dadd( 112.466, 61.3516, -29.9293, 0.74 ) }
    dend_59 { pt3dadd( 112.822, 61.6196, -30.0758, 0.96 ) }
    dend_59 { pt3dadd( 113.386, 61.92, -30.2772, 0.96 ) }
    dend_59 { pt3dadd( 114.293, 62.3645, -30.6912, 0.74 ) }
    dend_59 { pt3dadd( 115.17, 62.8364, -31.182, 0.44 ) }
    dend_59 { pt3dadd( 116.099, 63.4924, -31.8851, 0.44 ) }
    dend_59 { pt3dadd( 116.438, 63.8079, -32.2113, 0.96 ) }
    dend_59 { pt3dadd( 117.011, 64.5462, -32.9659, 1.18 ) }
    dend_59 { pt3dadd( 117.747, 65.8306, -34.2545, 0.66 ) }
    dend_59 { pt3dadd( 117.989, 66.3925, -34.8203, 0.66 ) }
    dend_59 { pt3dadd( 118.379, 67.5522, -36.0153, 0.59 ) }
    dend_59 { pt3dadd( 118.523, 68.0115, -36.4581, 0.52 ) }
    dend_59 { pt3dadd( 118.953, 69.2636, -37.5869, 0.52 ) }
    dend_59 { pt3dadd( 119.081, 69.6292, -37.8693, 0.96 ) }
    dend_59 { pt3dadd( 119.375, 70.3823, -38.3745, 0.96 ) }
    dend_59 { pt3dadd( 119.961, 71.7981, -39.1963, 0.59 ) }
    dend_59 { pt3dadd( 120.492, 73.0491, -39.7746, 0.59 ) }
    dend_59 { pt3dadd( 120.836, 73.8629, -40.0992, 0.88 ) }
    dend_59 { pt3dadd( 121.356, 75.046, -40.4666, 0.74 ) }
    dend_59 { pt3dadd( 121.833, 75.9902, -40.7378, 0.74 ) }
    dend_59 { pt3dadd( 122.419, 76.9304, -40.9683, 0.88 ) }
    dend_59 { pt3dadd( 122.801, 77.3828, -41.0929, 0.88 ) }
    dend_59 { pt3dadd( 123.517, 78.02, -41.3868, 0.37 ) }
    dend_59 { pt3dadd( 124.269, 78.5695, -41.7386, 0.37 ) }
    dend_59 { pt3dadd( 125.451, 79.2826, -42.3355, 0.37 ) }
    dend_59 { pt3dadd( 126.271, 79.7471, -42.8039, 0.37 ) }
    dend_59 { pt3dadd( 127.218, 80.2721, -43.4057, 0.37 ) }
    dend_59 { pt3dadd( 127.789, 80.6085, -43.7734, 0.59 ) }
    dend_59 { pt3dadd( 128.5, 81.0547, -44.2178, 0.74 ) }
    dend_59 { pt3dadd( 128.976, 81.3883, -44.5195, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_59 { pt3dadd( 129.871, 82.1151, -45.114, 0.44 ) }
    dend_59 { pt3dadd( 130.35, 82.5048, -45.4192, 0.37 ) }
    dend_59 { pt3dadd( 131.785, 83.4943, -46.165, 0.37 ) }
    dend_59 { pt3dadd( 132.476, 83.8746, -46.4728, 0.74 ) }
    dend_59 { pt3dadd( 132.847, 84.0319, -46.6187, 0.74 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 5/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 98.8019, 71.8783, 12.9783, 0.29 ) }
    dend_57 { pt3dadd( 104.911, 78.2322, 16.2779, 0.29 ) }
    dend_57 { pt3dadd( 111.147, 85.1386, 17.6845, 0.29 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 8/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 98.8019, 71.8783, 12.9783, 0.29 ) }
    dend_56 { pt3dadd( 106.137, 80.3965, 17.0837, 0.29 ) }
    dend_56 { pt3dadd( 113.761, 88.025, 22.2685, 0.29 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 11/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -21.3959, -165.914, 17.8306, 0.29 ) }
    dend_37 { pt3dadd( -18.8762, -175.019, 15.5244, 0.29 ) }
    dend_37 { pt3dadd( -17.4375, -184.596, 14.6516, 0.29 ) }
    dend_37 { pt3dadd( -16.5787, -194.024, 12.4261, 0.29 ) }
    dend_37 { pt3dadd( -16.7755, -203.704, 11.5186, 0.29 ) }
    dend_37 { pt3dadd( -17.8183, -213.336, 10.6884, 0.29 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 17/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -21.3959, -165.914, 17.8306, 0.29 ) }
    dend_36 { pt3dadd( -22.4624, -171.184, 15.0229, 0.29 ) }
    // Section: dend_24, id: dend_24, parent: dend_18 (entry count 19/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -1.76395, -93.1605, 6.51156, 0.37 ) }
    dend_24 { pt3dadd( -3.27244, -94.6485, 5.20582, 0.37 ) }
    dend_24 { pt3dadd( -4.17457, -95.4299, 4.56675, 0.37 ) }
    dend_24 { pt3dadd( -5.05694, -96.1002, 4.01589, 0.44 ) }
    dend_24 { pt3dadd( -6.11211, -96.8218, 3.43457, 0.74 ) }
    dend_24 { pt3dadd( -7.16087, -97.4809, 2.9248, 0.59 ) }
    dend_24 { pt3dadd( -8.2489, -98.089, 2.47041, 0.59 ) }
    dend_24 { pt3dadd( -8.89477, -98.3245, 2.31346, 0.74 ) }
    dend_24 { pt3dadd( -9.95942, -98.5592, 2.15472, 0.88 ) }
    dend_24 { pt3dadd( -10.6251, -98.6368, 2.11604, 1.18 ) }
    dend_24 { pt3dadd( -11.2936, -98.6583, 2.12163, 0.59 ) }
    dend_24 { pt3dadd( -12.3079, -98.6366, 2.15958, 0.44 ) }
    dend_24 { pt3dadd( -13.3133, -98.5977, 2.19313, 0.52 ) }
    dend_24 { pt3dadd( -13.7801, -98.5962, 2.19507, 0.74 ) }
    dend_24 { pt3dadd( -14.5791, -98.6951, 2.19435, 0.74 ) }
    dend_24 { pt3dadd( -15.1585, -98.8712, 2.16057, 0.59 ) }
    dend_24 { pt3dadd( -15.7526, -99.1798, 2.09815, 0.59 ) }
    dend_24 { pt3dadd( -16.5304, -99.7743, 1.98985, 0.59 ) }
    dend_24 { pt3dadd( -17.3513, -100.608, 1.87122, 0.44 ) }
    dend_24 { pt3dadd( -18.2768, -101.727, 1.75278, 0.37 ) }
    dend_24 { pt3dadd( -18.805, -102.486, 1.69644, 1.03 ) }
    dend_24 { pt3dadd( -19.1547, -103.063, 1.65733, 1.03 ) }
    dend_24 { pt3dadd( -19.4323, -103.596, 1.62469, 0.96 ) }
    dend_24 { pt3dadd( -19.8994, -104.709, 1.57225, 0.66 ) }
    dend_24 { pt3dadd( -20.2516, -105.715, 1.52731, 0.66 ) }
    dend_24 { pt3dadd( -20.5962, -106.867, 1.45172, 0.88 ) }
    dend_24 { pt3dadd( -20.7776, -107.577, 1.39818, 1.03 ) }
    dend_24 { pt3dadd( -20.9923, -108.586, 1.299, 0.88 ) }
    dend_24 { pt3dadd( -21.2243, -109.885, 1.13793, 0.52 ) }
    dend_24 { pt3dadd( -21.3777, -110.901, 0.984781, 0.52 ) }
    dend_24 { pt3dadd( -21.4851, -111.672, 0.846171, 0.96 ) }
    dend_24 { pt3dadd( -21.5606, -112.175, 0.745793, 0.96 ) }
    dend_24 { pt3dadd( -21.8016, -113.405, 0.475115, 0.59 ) }
    dend_24 { pt3dadd( -22.0577, -114.38, 0.246663, 0.66 ) }
    dend_24 { pt3dadd( -22.3179, -115.103, 0.0664267, 0.81 ) }
    dend_24 { pt3dadd( -22.7006, -115.978, -0.17141, 0.81 ) }
    dend_24 { pt3dadd( -22.9541, -116.463, -0.315194, 0.81 ) }
    dend_24 { pt3dadd( -23.452, -117.341, -0.648388, 0.44 ) }
    dend_24 { pt3dadd( -23.717, -117.799, -0.856824, 0.81 ) }
    dend_24 { pt3dadd( -24.0676, -118.46, -1.20596, 0.81 ) }
    dend_24 { pt3dadd( -24.486, -119.408, -1.74489, 0.52 ) }
    dend_24 { pt3dadd( -24.7297, -120.182, -2.20586, 0.52 ) }
    dend_24 { pt3dadd( -25.0118, -121.607, -3.07028, 0.74 ) }
    dend_24 { pt3dadd( -25.0915, -122.307, -3.48914, 1.11 ) }
    dend_24 { pt3dadd( -25.1534, -122.955, -3.84961, 1.11 ) }
    dend_24 { pt3dadd( -25.2393, -123.78, -4.25637, 0.96 ) }
    dend_24 { pt3dadd( -25.3805, -124.706, -4.65018, 0.59 ) }
    dend_24 { pt3dadd( -25.6435, -125.846, -5.06039, 0.44 ) }
    dend_24 { pt3dadd( -26.1028, -127.1, -5.41579, 0.44 ) }
    dend_24 { pt3dadd( -26.5554, -128.035, -5.64721, 0.44 ) }
    dend_24 { pt3dadd( -27.0419, -128.907, -5.82581, 0.74 ) }
    dend_24 { pt3dadd( -27.4067, -129.547, -5.94174, 0.74 ) }
    dend_24 { pt3dadd( -27.7573, -130.168, -6.033, 0.74 ) }
    dend_24 { pt3dadd( -28.3661, -131.28, -6.16075, 0.66 ) }
    dend_24 { pt3dadd( -28.801, -132.111, -6.23473, 0.44 ) }
    dend_24 { pt3dadd( -29.3503, -133.186, -6.32134, 0.44 ) }
    dend_24 { pt3dadd( -30.188, -134.682, -6.38906, 0.44 ) }
    dend_24 { pt3dadd( -30.6474, -135.372, -6.37942, 0.88 ) }
    dend_24 { pt3dadd( -31.1682, -136.011, -6.31942, 1.18 ) }
    dend_24 { pt3dadd( -31.5647, -136.42, -6.23832, 1.18 ) }
    dend_24 { pt3dadd( -32.057, -136.861, -6.11432, 1.03 ) }
    dend_24 { pt3dadd( -33.4499, -137.928, -5.7383, 0.66 ) }
    dend_24 { pt3dadd( -34.7244, -138.772, -5.36714, 0.66 ) }
    dend_24 { pt3dadd( -35.805, -139.462, -5.04671, 1.25 ) }
    dend_24 { pt3dadd( -36.3786, -139.832, -4.87427, 1.55 ) }
    dend_24 { pt3dadd( -37.0721, -140.291, -4.66649, 1.03 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 85/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -1.76395, -93.1605, 6.51156, 0.74 ) }
    dend_19 { pt3dadd( -2.38078, -94.2121, 5.69671, 0.74 ) }
    dend_19 { pt3dadd( -3.10471, -95.4171, 4.74421, 0.74 ) }
    dend_19 { pt3dadd( -3.4868, -96.1433, 4.26139, 0.74 ) }
    dend_19 { pt3dadd( -3.85625, -96.9618, 3.78985, 0.81 ) }
    dend_19 { pt3dadd( -4.55089, -98.8535, 2.88553, 0.52 ) }
    dend_19 { pt3dadd( -4.98282, -100.37, 2.28142, 0.74 ) }
    dend_19 { pt3dadd( -5.1383, -101.182, 2.03142, 0.74 ) }
    dend_19 { pt3dadd( -5.0517, -103.016, 1.81907, 0.74 ) }
    dend_19 { pt3dadd( -4.75232, -103.94, 1.85556, 0.81 ) }
    dend_19 { pt3dadd( -4.11692, -105.075, 2.0529, 0.66 ) }
    dend_19 { pt3dadd( -3.71273, -105.641, 2.20454, 1.11 ) }
    dend_19 { pt3dadd( -3.28845, -106.193, 2.33924, 1.11 ) }
    dend_19 { pt3dadd( -2.75057, -106.891, 2.43561, 0.81 ) }
    dend_19 { pt3dadd( -2.08246, -107.831, 2.41231, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_19 { pt3dadd( -1.48975, -108.742, 2.32999, 0.96 ) }
    dend_19 { pt3dadd( -0.970917, -109.589, 2.22848, 0.88 ) }
    dend_19 { pt3dadd( -0.355751, -110.631, 2.11284, 0.96 ) }
    dend_19 { pt3dadd( 0.065708, -111.404, 2.01357, 1.11 ) }
    dend_19 { pt3dadd( 0.519796, -112.365, 1.84907, 1.11 ) }
    dend_19 { pt3dadd( 0.874951, -113.263, 1.65796, 0.74 ) }
    dend_19 { pt3dadd( 1.3045, -114.657, 1.32672, 0.66 ) }
    dend_19 { pt3dadd( 1.47987, -115.384, 1.14635, 0.66 ) }
    dend_19 { pt3dadd( 1.76034, -117.065, 0.748905, 0.66 ) }
    dend_19 { pt3dadd( 1.89568, -118.825, 0.354444, 0.59 ) }
    dend_19 { pt3dadd( 1.88099, -119.842, 0.126048, 0.96 ) }
    dend_19 { pt3dadd( 1.75969, -121.104, -0.160802, 1.18 ) }
    dend_19 { pt3dadd( 1.5982, -122.043, -0.3604, 1.03 ) }
    dend_19 { pt3dadd( 1.36632, -123.147, -0.57285, 0.88 ) }
    dend_19 { pt3dadd( 1.0699, -124.58, -0.794096, 0.74 ) }
    dend_19 { pt3dadd( 0.87015, -125.833, -0.874805, 0.59 ) }
    dend_19 { pt3dadd( 0.733608, -126.897, -0.869757, 0.59 ) }
    dend_19 { pt3dadd( 0.623453, -127.784, -0.791947, 1.4 ) }
    dend_19 { pt3dadd( 0.52168, -128.439, -0.679558, 1.4 ) }
    dend_19 { pt3dadd( 0.258096, -130.119, -0.243966, 0.88 ) }
    dend_19 { pt3dadd( -0.00855356, -132.103, 0.50439, 0.66 ) }
    dend_19 { pt3dadd( -0.120107, -132.937, 0.881917, 0.88 ) }
    dend_19 { pt3dadd( -0.269701, -133.998, 1.39754, 0.88 ) }
    dend_19 { pt3dadd( -0.531706, -135.649, 2.20996, 0.59 ) }
    dend_19 { pt3dadd( -0.741595, -136.701, 2.714, 0.81 ) }
    dend_19 { pt3dadd( -1.16944, -138.436, 3.48916, 0.81 ) }
    dend_19 { pt3dadd( -1.41127, -139.327, 3.80033, 1.11 ) }
    dend_19 { pt3dadd( -1.60217, -140.057, 4.00892, 1.11 ) }
    dend_19 { pt3dadd( -1.84886, -141.104, 4.20708, 0.52 ) }
    dend_19 { pt3dadd( -2.04146, -142.093, 4.32318, 0.74 ) }
    dend_19 { pt3dadd( -2.20003, -142.973, 4.37551, 1.03 ) }
    dend_19 { pt3dadd( -2.28894, -143.709, 4.36857, 1.25 ) }
    dend_19 { pt3dadd( -2.30601, -144.438, 4.4027, 1.33 ) }
    dend_19 { pt3dadd( -2.21718, -145.643, 4.61196, 1.03 ) }
    dend_19 { pt3dadd( -1.98565, -146.778, 4.93115, 0.74 ) }
    dend_19 { pt3dadd( -1.67561, -147.704, 5.26466, 0.44 ) }
    dend_19 { pt3dadd( -1.28424, -148.55, 5.62349, 0.29 ) }
    dend_19 { pt3dadd( -0.560487, -149.719, 6.20542, 0.29 ) }
    dend_19 { pt3dadd( 0.471356, -151.011, 6.96026, 0.29 ) }
    dend_19 { pt3dadd( 1.09241, -151.596, 7.36439, 0.29 ) }
    dend_19 { pt3dadd( 1.69159, -152.01, 7.68018, 0.88 ) }
    dend_19 { pt3dadd( 2.1967, -152.307, 7.91703, 0.88 ) }
    dend_19 { pt3dadd( 3.03822, -152.764, 8.27308, 0.52 ) }
    dend_19 { pt3dadd( 3.42634, -152.968, 8.38773, 0.52 ) }
    dend_19 { pt3dadd( 4.12878, -153.371, 8.57683, 0.52 ) }
    dend_19 { pt3dadd( 4.66256, -153.808, 8.77729, 0.52 ) }
    dend_19 { pt3dadd( 5.34981, -154.611, 9.02328, 0.52 ) }
    dend_19 { pt3dadd( 5.67008, -155.119, 9.1132, 0.88 ) }
    dend_19 { pt3dadd( 6.0082, -155.745, 9.15843, 0.88 ) }
    dend_19 { pt3dadd( 6.42559, -156.508, 9.13041, 1.11 ) }
    dend_19 { pt3dadd( 6.86879, -157.219, 9.07164, 0.66 ) }
    dend_19 { pt3dadd( 7.74862, -158.352, 8.90732, 0.66 ) }
    dend_19 { pt3dadd( 8.1846, -158.759, 8.83548, 0.66 ) }
    dend_19 { pt3dadd( 8.96492, -159.343, 8.75159, 0.66 ) }
    dend_19 { pt3dadd( 9.60197, -159.761, 8.71389, 0.52 ) }
    dend_19 { pt3dadd( 10.6867, -160.469, 8.63481, 0.66 ) }
    dend_19 { pt3dadd( 11.035, -160.702, 8.64478, 0.66 ) }
    dend_19 { pt3dadd( 11.796, -161.231, 8.80497, 0.44 ) }
    dend_19 { pt3dadd( 12.4253, -161.695, 9.04304, 0.44 ) }
    dend_19 { pt3dadd( 13.2952, -162.401, 9.51482, 0.52 ) }
    dend_19 { pt3dadd( 14.3254, -163.312, 10.2492, 0.66 ) }
    dend_19 { pt3dadd( 15.204, -164.145, 10.9617, 0.44 ) }
    dend_19 { pt3dadd( 16.144, -165.056, 11.7897, 0.81 ) }
    dend_19 { pt3dadd( 17.0214, -165.902, 12.536, 0.52 ) }
    dend_19 { pt3dadd( 17.6013, -166.457, 12.9859, 0.74 ) }
    dend_19 { pt3dadd( 18.3095, -167.129, 13.4574, 0.29 ) }
    dend_19 { pt3dadd( 18.6887, -167.494, 13.6311, 0.52 ) }
    dend_19 { pt3dadd( 19.2595, -168.058, 13.7007, 0.59 ) }
    dend_19 { pt3dadd( 20.3507, -169.181, 13.7093, 0.37 ) }
    dend_19 { pt3dadd( 21.1408, -169.999, 13.6293, 0.66 ) }
    dend_19 { pt3dadd( 21.5912, -170.46, 13.5581, 1.03 ) }
    dend_19 { pt3dadd( 22.3136, -171.192, 13.4139, 1.03 ) }
    dend_19 { pt3dadd( 23.1107, -172.005, 13.2957, 0.74 ) }
    dend_19 { pt3dadd( 24.3968, -173.313, 13.2409, 0.52 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 74/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 12.0989, -112.835, -20.9264, 0.44 ) }
    dend_13 { pt3dadd( 11.9199, -114.082, -20.9925, 0.44 ) }
    dend_13 { pt3dadd( 11.787, -114.953, -21.0415, 0.81 ) }
    dend_13 { pt3dadd( 11.6754, -115.62, -21.0842, 1.18 ) }
    dend_13 { pt3dadd( 11.5199, -116.511, -21.1487, 0.74 ) }
    dend_13 { pt3dadd( 11.3581, -117.437, -21.2213, 0.44 ) }
    dend_13 { pt3dadd( 11.2152, -118.252, -21.2893, 0.96 ) }
    dend_13 { pt3dadd( 11.0661, -119.094, -21.366, 0.96 ) }
    dend_13 { pt3dadd( 10.9219, -119.894, -21.4461, 1.18 ) }
    dend_13 { pt3dadd( 10.6663, -121.082, -21.5878, 0.74 ) }
    dend_13 { pt3dadd( 10.3818, -122.148, -21.7747, 0.66 ) }
    dend_13 { pt3dadd( 10.1026, -123.006, -21.9803, 0.66 ) }
    dend_13 { pt3dadd( 9.71894, -124.069, -22.3141, 0.66 ) }
    dend_13 { pt3dadd( 9.51964, -124.588, -22.513, 1.03 ) }
    dend_13 { pt3dadd( 9.2338, -125.303, -22.8311, 0.81 ) }
    dend_13 { pt3dadd( 8.83118, -126.434, -23.4237, 0.52 ) }
    dend_13 { pt3dadd( 8.64928, -127.119, -23.7668, 0.44 ) }
    dend_13 { pt3dadd( 8.51269, -127.997, -24.1273, 0.37 ) }
    dend_13 { pt3dadd( 8.4801, -128.508, -24.2789, 0.66 ) }
    dend_13 { pt3dadd( 8.45604, -129.079, -24.3885, 0.66 ) }
    dend_13 { pt3dadd( 8.43385, -130.584, -24.5984, 0.44 ) }
    dend_13 { pt3dadd( 8.38559, -132.102, -24.7431, 0.44 ) }
    dend_13 { pt3dadd( 8.28738, -133.312, -24.8457, 0.66 ) }
    dend_13 { pt3dadd( 8.1259, -134.373, -24.9411, 0.81 ) }
    dend_13 { pt3dadd( 7.86099, -135.515, -25.0953, 0.96 ) }
    dend_13 { pt3dadd( 7.43794, -136.7, -25.3268, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_13 { pt3dadd( 7.00031, -137.607, -25.5604, 0.81 ) }
    dend_13 { pt3dadd( 6.58201, -138.395, -25.8365, 0.88 ) }
    dend_13 { pt3dadd( 6.26693, -139.005, -26.0834, 0.66 ) }
    dend_13 { pt3dadd( 5.83614, -139.862, -26.4599, 0.29 ) }
    dend_13 { pt3dadd( 5.30377, -140.96, -26.9508, 0.29 ) }
    dend_13 { pt3dadd( 4.98933, -141.597, -27.224, 0.52 ) }
    dend_13 { pt3dadd( 4.50185, -142.584, -27.6591, 0.52 ) }
    dend_13 { pt3dadd( 4.09373, -143.394, -28.0163, 0.37 ) }
    dend_13 { pt3dadd( 3.70262, -144.122, -28.3401, 0.29 ) }
    dend_13 { pt3dadd( 3.30892, -144.754, -28.6217, 0.29 ) }
    dend_13 { pt3dadd( 3.136, -144.979, -28.7404, 0.88 ) }
    dend_13 { pt3dadd( 2.73036, -145.344, -29.0034, 1.11 ) }
    dend_13 { pt3dadd( 2.22167, -145.646, -29.3065, 0.44 ) }
    dend_13 { pt3dadd( 1.57188, -145.924, -29.6736, 0.37 ) }
    dend_13 { pt3dadd( 0.945818, -146.134, -30.0312, 0.59 ) }
    dend_13 { pt3dadd( 0.387991, -146.285, -30.3588, 0.74 ) }
    dend_13 { pt3dadd( -0.343801, -146.462, -30.7981, 0.44 ) }
    dend_13 { pt3dadd( -0.980664, -146.618, -31.1766, 0.37 ) }
    dend_13 { pt3dadd( -1.40523, -146.74, -31.4236, 0.88 ) }
    dend_13 { pt3dadd( -1.89808, -146.923, -31.6966, 1.11 ) }
    dend_13 { pt3dadd( -2.25745, -147.089, -31.8789, 1.11 ) }
    dend_13 { pt3dadd( -2.63263, -147.272, -32.0458, 1.11 ) }
    dend_13 { pt3dadd( -3.57043, -147.751, -32.4308, 0.29 ) }
    dend_13 { pt3dadd( -4.18958, -148.081, -32.683, 0.59 ) }
    dend_13 { pt3dadd( -4.60127, -148.308, -32.8476, 0.59 ) }
    dend_13 { pt3dadd( -5.6162, -148.92, -33.2404, 0.29 ) }
    dend_13 { pt3dadd( -6.23875, -149.341, -33.4698, 0.29 ) }
    dend_13 { pt3dadd( -6.72784, -149.717, -33.646, 0.52 ) }
    dend_13 { pt3dadd( -7.29973, -150.207, -33.8525, 0.52 ) }
    dend_13 { pt3dadd( -7.60233, -150.481, -33.9615, 0.81 ) }
    dend_13 { pt3dadd( -8.11505, -151.026, -34.152, 0.81 ) }
    dend_13 { pt3dadd( -8.62411, -151.73, -34.3526, 0.29 ) }
    dend_13 { pt3dadd( -9.21297, -152.688, -34.5869, 0.29 ) }
    dend_13 { pt3dadd( -9.53896, -153.25, -34.7093, 1.18 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 34/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 12.0989, -112.835, -20.9264, 0.22 ) }
    dend_12 { pt3dadd( 13.0619, -113.455, -20.6339, 0.22 ) }
    dend_12 { pt3dadd( 14.0773, -114.109, -20.3255, 0.22 ) }
    dend_12 { pt3dadd( 15.3032, -114.899, -19.9532, 0.22 ) }
    dend_12 { pt3dadd( 16.1471, -115.442, -19.6969, 0.22 ) }
    dend_12 { pt3dadd( 17.0425, -116.019, -19.425, 0.22 ) }
    dend_12 { pt3dadd( 17.9636, -116.612, -19.1452, 0.22 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 41/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 235.74, -1.49691, -142.198, 0.74 ) }
    dend_10 { pt3dadd( 238.898, -3.52798, -143.636, 0.74 ) }
    dend_10 { pt3dadd( 239.749, -4.19196, -143.892, 0.44 ) }
    dend_10 { pt3dadd( 240.374, -4.67175, -144.016, 0.74 ) }
    dend_10 { pt3dadd( 241.361, -5.3621, -144.138, 0.52 ) }
    dend_10 { pt3dadd( 242.7, -6.18369, -144.215, 0.52 ) }
    dend_10 { pt3dadd( 244.15, -6.95245, -144.285, 0.52 ) }
    dend_10 { pt3dadd( 245.231, -7.46368, -144.172, 0.52 ) }
    dend_10 { pt3dadd( 246.359, -7.89662, -144.065, 0.52 ) }
    dend_10 { pt3dadd( 247.799, -8.259, -144.023, 0.52 ) }
    dend_10 { pt3dadd( 249.009, -8.38186, -144.056, 0.74 ) }
    dend_10 { pt3dadd( 250.275, -8.34416, -144.162, 1.03 ) }
    dend_10 { pt3dadd( 250.745, -8.2923, -144.223, 1.4 ) }
    dend_10 { pt3dadd( 251.211, -8.22627, -144.302, 1.4 ) }
    dend_10 { pt3dadd( 253.084, -7.97534, -144.692, 0.44 ) }
    dend_10 { pt3dadd( 253.797, -7.90152, -144.779, 0.74 ) }
    dend_10 { pt3dadd( 254.856, -7.84014, -144.764, 0.74 ) }
    dend_10 { pt3dadd( 255.579, -7.8222, -144.635, 0.96 ) }
    dend_10 { pt3dadd( 256.257, -7.83475, -144.398, 0.96 ) }
    dend_10 { pt3dadd( 257.142, -7.91579, -143.962, 0.96 ) }
    dend_10 { pt3dadd( 259.218, -8.33019, -142.608, 0.66 ) }
    dend_10 { pt3dadd( 260.066, -8.59784, -141.96, 0.81 ) }
    dend_10 { pt3dadd( 260.561, -8.81601, -141.519, 0.81 ) }
    dend_10 { pt3dadd( 261.75, -9.43477, -140.377, 0.52 ) }
    dend_10 { pt3dadd( 262.637, -9.93495, -139.521, 0.52 ) }
    dend_10 { pt3dadd( 263.615, -10.5088, -138.643, 0.52 ) }
    dend_10 { pt3dadd( 264.585, -11.0564, -137.938, 0.52 ) }
    dend_10 { pt3dadd( 265.844, -11.7185, -137.141, 0.44 ) }
    dend_10 { pt3dadd( 266.545, -12.0352, -136.81, 0.96 ) }
    dend_10 { pt3dadd( 267.321, -12.3104, -136.66, 1.11 ) }
    dend_10 { pt3dadd( 268.448, -12.631, -136.714, 0.44 ) }
    dend_10 { pt3dadd( 269.461, -12.9249, -137.017, 0.37 ) }
    dend_10 { pt3dadd( 270.191, -13.1859, -137.406, 0.37 ) }
    dend_10 { pt3dadd( 271.363, -13.6786, -138.275, 0.66 ) }
    dend_10 { pt3dadd( 272.661, -14.2814, -139.436, 0.74 ) }
    dend_10 { pt3dadd( 273.211, -14.5411, -139.989, 0.81 ) }
    dend_10 { pt3dadd( 274.01, -14.9015, -140.873, 0.81 ) }
    dend_10 { pt3dadd( 275.043, -15.3223, -142.071, 0.66 ) }
    dend_10 { pt3dadd( 275.995, -15.6484, -143.118, 0.66 ) }
    dend_10 { pt3dadd( 276.904, -15.9204, -144.029, 0.29 ) }
    dend_10 { pt3dadd( 277.537, -16.0994, -144.607, 0.59 ) }
    dend_10 { pt3dadd( 278.219, -16.2735, -145.182, 0.74 ) }
    dend_10 { pt3dadd( 278.867, -16.4208, -145.718, 0.44 ) }
    dend_10 { pt3dadd( 279.72, -16.5961, -146.386, 0.37 ) }
    dend_10 { pt3dadd( 280.597, -16.7966, -147.053, 0.37 ) }
    dend_10 { pt3dadd( 281.454, -17.0253, -147.671, 0.59 ) }
    dend_10 { pt3dadd( 282.131, -17.2397, -148.146, 0.59 ) }
    dend_10 { pt3dadd( 283.861, -17.9126, -149.564, 0.29 ) }
    dend_10 { pt3dadd( 284.962, -18.4495, -150.6, 0.29 ) }
    dend_10 { pt3dadd( 285.52, -18.7778, -151.199, 0.29 ) }
    dend_10 { pt3dadd( 286.0, -19.0916, -151.731, 0.74 ) }
    dend_10 { pt3dadd( 286.474, -19.4299, -152.278, 0.74 ) }
    dend_10 { pt3dadd( 288.336, -21.0433, -154.549, 0.37 ) }
    dend_10 { pt3dadd( 288.876, -21.6473, -155.261, 0.52 ) }
    dend_10 { pt3dadd( 289.276, -22.1985, -155.895, 0.81 ) }
    dend_10 { pt3dadd( 289.696, -22.8137, -156.647, 0.37 ) }
    dend_10 { pt3dadd( 290.07, -23.3476, -157.383, 0.37 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 98/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 235.74, -1.49691, -142.198, 0.88 ) }
    dend_3 { pt3dadd( 236.464, -1.18381, -143.339, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_3 { pt3dadd( 236.769, -1.14989, -143.85, 1.25 ) }
    dend_3 { pt3dadd( 237.052, -1.17732, -144.377, 1.25 ) }
    dend_3 { pt3dadd( 237.42, -1.22798, -145.133, 0.59 ) }
    dend_3 { pt3dadd( 238.404, -1.36349, -147.155, 0.59 ) }
    dend_3 { pt3dadd( 239.393, -1.4996, -149.186, 0.96 ) }
    dend_3 { pt3dadd( 239.912, -1.64684, -150.284, 1.11 ) }
    dend_3 { pt3dadd( 240.809, -2.01091, -152.31, 1.25 ) }
    dend_3 { pt3dadd( 241.342, -2.30284, -153.607, 1.55 ) }
    // Section: dend_84, id: dend_84, parent: dend_82 (entry count 8/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( -82.5976, 154.446, -33.6222, 0.22 ) }
    dend_84 { pt3dadd( -82.2491, 153.291, -32.6128, 0.22 ) }
    dend_84 { pt3dadd( -82.032, 152.571, -31.984, 0.22 ) }
    dend_84 { pt3dadd( -81.5458, 150.958, -30.576, 0.22 ) }
    dend_84 { pt3dadd( -81.2492, 149.975, -29.7169, 0.22 ) }
    dend_84 { pt3dadd( -80.9943, 149.129, -28.9786, 0.22 ) }
    // Section: dend_83, id: dend_83, parent: dend_82 (entry count 14/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( -82.5976, 154.446, -33.6222, 0.22 ) }
    dend_83 { pt3dadd( -83.1862, 155.058, -33.2629, 0.22 ) }
    dend_83 { pt3dadd( -83.7028, 155.616, -32.9548, 0.22 ) }
    dend_83 { pt3dadd( -84.1942, 156.148, -32.6617, 0.22 ) }
    dend_83 { pt3dadd( -84.6643, 156.656, -32.3813, 0.22 ) }
    dend_83 { pt3dadd( -85.372, 157.422, -31.9592, 0.22 ) }
    dend_83 { pt3dadd( -85.733, 157.812, -31.7439, 0.37 ) }
    dend_83 { pt3dadd( -86.0792, 158.245, -31.518, 0.37 ) }
    // Section: dend_77, id: dend_77, parent: dend_75 (entry count 22/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 153.075, 78.1754, 123.861, 0.29 ) }
    dend_77 { pt3dadd( 154.522, 82.0789, 129.248, 0.29 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 24/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 153.075, 78.1754, 123.861, 0.29 ) }
    dend_76 { pt3dadd( 154.543, 84.717, 130.903, 0.29 ) }
    // Section: dend_74, id: dend_74, parent: dend_72 (entry count 26/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 175.274, 58.3339, 110.813, 0.29 ) }
    dend_74 { pt3dadd( 178.458, 59.9626, 102.302, 0.29 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 28/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 175.274, 58.3339, 110.813, 0.29 ) }
    dend_73 { pt3dadd( 166.799, 58.5576, 111.667, 0.29 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 30/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 132.847, 84.0319, -46.6187, 0.37 ) }
    dend_61 { pt3dadd( 132.225, 84.291, -47.0402, 0.37 ) }
    dend_61 { pt3dadd( 131.419, 84.5971, -47.8704, 0.66 ) }
    dend_61 { pt3dadd( 130.958, 84.7471, -48.6235, 0.29 ) }
    dend_61 { pt3dadd( 130.586, 84.8653, -49.3367, 0.29 ) }
    dend_61 { pt3dadd( 130.136, 85.0233, -50.2377, 0.29 ) }
    dend_61 { pt3dadd( 129.17, 85.4109, -52.1876, 0.29 ) }
    dend_61 { pt3dadd( 128.733, 85.5584, -53.1078, 0.81 ) }
    dend_61 { pt3dadd( 127.48, 85.9251, -55.9251, 0.44 ) }
    dend_61 { pt3dadd( 127.072, 86.0369, -56.9315, 0.96 ) }
    dend_61 { pt3dadd( 126.757, 86.1482, -57.8058, 1.18 ) }
    dend_61 { pt3dadd( 126.393, 86.3202, -58.9604, 0.88 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 42/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 132.847, 84.0319, -46.6187, 0.37 ) }
    dend_60 { pt3dadd( 134.671, 84.2675, -47.0858, 0.37 ) }
    dend_60 { pt3dadd( 136.851, 84.8233, -47.4714, 0.29 ) }
    dend_60 { pt3dadd( 137.668, 85.0856, -47.5767, 0.66 ) }
    dend_60 { pt3dadd( 138.481, 85.3782, -47.638, 0.66 ) }
    dend_60 { pt3dadd( 139.507, 85.8391, -47.6726, 0.37 ) }
    dend_60 { pt3dadd( 140.938, 86.5396, -47.7112, 0.37 ) }
    dend_60 { pt3dadd( 142.505, 87.4383, -47.6902, 0.81 ) }
    dend_60 { pt3dadd( 143.168, 87.8286, -47.6231, 1.11 ) }
    dend_60 { pt3dadd( 144.111, 88.3751, -47.4734, 1.33 ) }
    dend_60 { pt3dadd( 146.055, 89.5269, -47.0167, 0.44 ) }
    dend_60 { pt3dadd( 147.23, 90.2213, -46.6115, 0.52 ) }
    dend_60 { pt3dadd( 148.807, 91.1695, -45.8909, 1.03 ) }
    dend_60 { pt3dadd( 150.539, 92.2649, -44.9095, 0.52 ) }
    dend_60 { pt3dadd( 151.375, 92.7957, -44.3523, 0.66 ) }
    dend_60 { pt3dadd( 152.25, 93.3634, -43.6636, 0.66 ) }
    dend_60 { pt3dadd( 153.55, 94.2548, -42.4129, 0.44 ) }
    dend_60 { pt3dadd( 154.154, 94.7975, -41.7136, 0.29 ) }
    dend_60 { pt3dadd( 154.832, 95.5404, -40.8899, 0.44 ) }
    dend_60 { pt3dadd( 155.634, 96.4815, -40.0754, 0.66 ) }
    dend_60 { pt3dadd( 156.365, 97.3021, -39.4779, 0.37 ) }
    dend_60 { pt3dadd( 157.242, 98.2955, -38.8716, 0.37 ) }
    dend_60 { pt3dadd( 158.636, 99.9842, -37.9698, 0.29 ) }
    dend_60 { pt3dadd( 159.51, 101.08, -37.3827, 0.29 ) }
    dend_60 { pt3dadd( 160.838, 102.946, -36.346, 0.29 ) }
    dend_60 { pt3dadd( 161.65, 104.202, -35.5445, 0.29 ) }
    dend_60 { pt3dadd( 162.192, 105.147, -34.8244, 1.55 ) }
    dend_60 { pt3dadd( 162.552, 105.899, -34.1363, 1.18 ) }
    dend_60 { pt3dadd( 162.8, 106.622, -33.2186, 0.96 ) }
    dend_60 { pt3dadd( 162.902, 107.7, -31.4649, 0.52 ) }
    dend_60 { pt3dadd( 162.656, 108.848, -29.1456, 0.29 ) }
    dend_60 { pt3dadd( 162.304, 109.522, -27.5914, 0.29 ) }
    dend_60 { pt3dadd( 162.084, 109.834, -26.8357, 0.29 ) }
    dend_60 { pt3dadd( 161.438, 110.716, -24.8102, 0.22 ) }
    dend_60 { pt3dadd( 161.235, 111.01, -24.2135, 0.66 ) }
    dend_60 { pt3dadd( 160.99, 111.41, -23.4999, 0.66 ) }
    dend_60 { pt3dadd( 160.603, 112.255, -22.3098, 0.37 ) }
    dend_60 { pt3dadd( 160.424, 113.154, -21.2663, 0.29 ) }
    dend_60 { pt3dadd( 160.412, 114.125, -20.3828, 0.22 ) }
    dend_60 { pt3dadd( 160.526, 114.998, -19.6299, 0.22 ) }
    dend_60 { pt3dadd( 160.871, 116.281, -18.4371, 0.22 ) }
    dend_60 { pt3dadd( 161.106, 116.84, -17.8967, 0.29 ) }
    dend_60 { pt3dadd( 161.57, 117.639, -17.0764, 0.29 ) }
    dend_60 { pt3dadd( 162.367, 118.796, -15.8343, 0.29 ) }
    dend_60 { pt3dadd( 163.529, 120.288, -14.268, 0.29 ) }
    dend_60 { pt3dadd( 164.298, 121.2, -13.2916, 0.29 ) }
    dend_60 { pt3dadd( 164.981, 121.924, -12.5184, 0.29 ) }
    dend_60 { pt3dadd( 165.912, 122.851, -11.4963, 0.29 ) }
    dend_60 { pt3dadd( 167.416, 124.223, -9.95169, 0.29 ) }
    dend_60 { pt3dadd( 168.668, 125.276, -8.80349, 0.29 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 92/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -17.8183, -213.336, 10.6884, 0.29 ) }
    dend_39 { pt3dadd( -18.042, -224.198, 8.50604, 0.29 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 94/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -17.8183, -213.336, 10.6884, 0.29 ) }
    dend_38 { pt3dadd( -9.6468, -210.388, 16.1422, 0.29 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 96/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -37.0721, -140.291, -4.66649, 0.37 ) }
    dend_26 { pt3dadd( -37.6932, -141.645, -5.05365, 0.37 ) }
    dend_26 { pt3dadd( -37.9899, -142.291, -5.23862, 0.81 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 99/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -37.0721, -140.291, -4.66649, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_25 { pt3dadd( -40.0062, -139.831, -6.35502, 0.29 ) }
    dend_25 { pt3dadd( -40.8697, -139.697, -6.82407, 0.22 ) }
    dend_25 { pt3dadd( -42.0301, -139.598, -7.39692, 0.22 ) }
    dend_25 { pt3dadd( -42.7261, -139.594, -7.70151, 1.47 ) }
    dend_25 { pt3dadd( -43.2421, -139.591, -7.92735, 1.69 ) }
    dend_25 { pt3dadd( -43.7352, -139.589, -8.14313, 1.69 ) }
    dend_25 { pt3dadd( -45.123, -139.558, -8.43772, 0.96 ) }
    dend_25 { pt3dadd( -46.1188, -139.631, -8.72391, 0.29 ) }
    dend_25 { pt3dadd( -46.9718, -139.824, -9.03216, 0.29 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 9/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 24.3968, -173.313, 13.2409, 0.29 ) }
    dend_21 { pt3dadd( 24.7093, -174.281, 11.5358, 0.29 ) }
    dend_21 { pt3dadd( 24.9818, -175.125, 10.0487, 0.44 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 12/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 24.3968, -173.313, 13.2409, 0.29 ) }
    dend_20 { pt3dadd( 24.5342, -170.52, 11.6917, 0.29 ) }
    dend_20 { pt3dadd( 24.5758, -168.802, 9.89827, 0.29 ) }
    dend_20 { pt3dadd( 24.5327, -168.067, 8.3302, 0.29 ) }
    dend_20 { pt3dadd( 24.4908, -167.353, 6.80872, 0.52 ) }
    dend_20 { pt3dadd( 24.3724, -165.335, 2.50533, 0.44 ) }
    dend_20 { pt3dadd( 24.3327, -164.658, 1.06135, 0.29 ) }
    dend_20 { pt3dadd( 24.1357, -164.924, -1.36134, 0.29 ) }
    dend_20 { pt3dadd( 24.0474, -165.2, -2.23381, 0.29 ) }
    dend_20 { pt3dadd( 22.5097, -157.975, -14.9121, 0.29 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 22/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -9.53896, -153.25, -34.7093, 0.22 ) }
    dend_15 { pt3dadd( -9.66304, -154.169, -34.6824, 0.22 ) }
    dend_15 { pt3dadd( -9.80196, -155.23, -34.5902, 0.22 ) }
    dend_15 { pt3dadd( -9.94974, -156.611, -34.4545, 0.22 ) }
    dend_15 { pt3dadd( -10.057, -157.746, -34.3391, 0.22 ) }
    dend_15 { pt3dadd( -10.1668, -159.209, -34.1942, 0.22 ) }
    dend_15 { pt3dadd( -10.254, -160.369, -34.0791, 0.22 ) }
    dend_15 { pt3dadd( -10.3465, -161.723, -33.9574, 0.22 ) }
    dend_15 { pt3dadd( -10.3744, -162.582, -33.8769, 0.37 ) }
    dend_15 { pt3dadd( -10.3694, -162.879, -33.8398, 0.37 ) }
    dend_15 { pt3dadd( -10.3337, -163.714, -33.7091, 0.22 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 33/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -9.53896, -153.25, -34.7093, 1.55 ) }
    dend_14 { pt3dadd( -10.0398, -153.52, -35.2556, 1.55 ) }
    dend_14 { pt3dadd( -10.3293, -153.73, -35.591, 1.55 ) }
    dend_14 { pt3dadd( -10.9055, -154.168, -36.2569, 0.29 ) }
    dend_14 { pt3dadd( -11.7669, -154.81, -37.2086, 0.44 ) }
    dend_14 { pt3dadd( -11.969, -154.948, -37.4634, 0.44 ) }
    dend_14 { pt3dadd( -12.7635, -155.394, -38.5699, 0.29 ) }
    dend_14 { pt3dadd( -13.2386, -155.617, -39.2813, 0.29 ) }
    dend_14 { pt3dadd( -13.7096, -155.79, -39.9809, 0.29 ) }
    dend_14 { pt3dadd( -14.2412, -155.921, -40.7337, 0.29 ) }
    dend_14 { pt3dadd( -15.3442, -156.018, -42.1365, 0.29 ) }
    dend_14 { pt3dadd( -16.3412, -155.951, -43.319, 0.29 ) }
    dend_14 { pt3dadd( -16.9816, -155.798, -44.0283, 0.22 ) }
    dend_14 { pt3dadd( -17.6386, -155.58, -44.7097, 0.22 ) }
    dend_14 { pt3dadd( -18.1636, -155.386, -45.2216, 0.22 ) }
    dend_14 { pt3dadd( -18.7606, -155.155, -45.7511, 0.22 ) }
    dend_14 { pt3dadd( -19.5754, -154.875, -46.3222, 0.22 ) }
    dend_14 { pt3dadd( -20.1992, -154.626, -46.7218, 0.22 ) }
    dend_14 { pt3dadd( -20.6182, -154.405, -47.0073, 0.52 ) }
    dend_14 { pt3dadd( -20.974, -154.169, -47.2696, 0.52 ) }
    // Section: dend_9, id: dend_9, parent: dend_3 (entry count 53/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 241.342, -2.30284, -153.607, 0.81 ) }
    dend_9 { pt3dadd( 244.797, -2.25107, -155.216, 0.81 ) }
    dend_9 { pt3dadd( 247.415, -2.35415, -156.357, 0.88 ) }
    dend_9 { pt3dadd( 249.483, -2.5359, -157.31, 0.37 ) }
    dend_9 { pt3dadd( 250.081, -2.5882, -157.58, 0.37 ) }
    dend_9 { pt3dadd( 251.388, -2.70248, -158.17, 0.66 ) }
    dend_9 { pt3dadd( 252.24, -2.77687, -158.555, 0.74 ) }
    dend_9 { pt3dadd( 252.534, -2.79784, -158.731, 0.74 ) }
    dend_9 { pt3dadd( 254.148, -3.10301, -159.4, 0.37 ) }
    dend_9 { pt3dadd( 254.945, -3.32224, -159.742, 0.66 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 63/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 241.342, -2.30284, -153.607, 0.44 ) }
    dend_4 { pt3dadd( 242.615, -1.44076, -154.919, 0.44 ) }
    dend_4 { pt3dadd( 243.514, -0.831955, -155.846, 0.44 ) }
    dend_4 { pt3dadd( 244.011, -0.495544, -156.357, 0.44 ) }
    dend_4 { pt3dadd( 244.986, 0.165431, -157.363, 1.18 ) }
    // Section: dend_65, id: dend_65, parent: dend_61 (entry count 68/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 126.393, 86.3202, -58.9604, 0.96 ) }
    dend_65 { pt3dadd( 125.534, 86.5498, -61.5371, 0.96 ) }
    dend_65 { pt3dadd( 124.506, 86.7263, -64.1057, 0.59 ) }
    dend_65 { pt3dadd( 124.253, 86.773, -64.7189, 0.59 ) }
    dend_65 { pt3dadd( 124.026, 86.83, -65.3035, 0.37 ) }
    dend_65 { pt3dadd( 123.54, 87.01, -66.6605, 0.29 ) }
    dend_65 { pt3dadd( 123.237, 87.15, -67.535, 0.29 ) }
    dend_65 { pt3dadd( 123.028, 87.2975, -68.0912, 0.66 ) }
    dend_65 { pt3dadd( 122.687, 87.7231, -69.1116, 0.22 ) }
    dend_65 { pt3dadd( 122.522, 87.9826, -69.7381, 0.22 ) }
    dend_65 { pt3dadd( 122.322, 88.2973, -70.5449, 0.88 ) }
    dend_65 { pt3dadd( 122.19, 88.488, -71.0342, 0.88 ) }
    dend_65 { pt3dadd( 121.758, 88.984, -72.3634, 0.37 ) }
    dend_65 { pt3dadd( 121.522, 89.1608, -72.9896, 0.96 ) }
    dend_65 { pt3dadd( 121.265, 89.2815, -73.6197, 1.11 ) }
    dend_65 { pt3dadd( 120.787, 89.4537, -74.8347, 0.44 ) }
    dend_65 { pt3dadd( 120.519, 89.5502, -75.5829, 0.37 ) }
    dend_65 { pt3dadd( 120.327, 89.6326, -76.1775, 0.52 ) }
    dend_65 { pt3dadd( 119.556, 90.0241, -78.7173, 0.37 ) }
    dend_65 { pt3dadd( 119.26, 90.2496, -79.9259, 0.96 ) }
    dend_65 { pt3dadd( 119.064, 90.4712, -80.8608, 0.96 ) }
    dend_65 { pt3dadd( 118.884, 90.7155, -81.8102, 0.52 ) }
    dend_65 { pt3dadd( 118.763, 90.8758, -82.526, 1.33 ) }
    dend_65 { pt3dadd( 118.615, 91.0418, -83.396, 1.33 ) }
    dend_65 { pt3dadd( 117.915, 91.6798, -86.9615, 0.52 ) }
    dend_65 { pt3dadd( 117.83, 91.7475, -87.3631, 0.52 ) }
    dend_65 { pt3dadd( 117.635, 91.8774, -88.224, 0.52 ) }
    dend_65 { pt3dadd( 116.751, 92.3397, -91.8682, 0.44 ) }
    dend_65 { pt3dadd( 116.301, 92.5398, -93.5192, 0.59 ) }
    dend_65 { pt3dadd( 116.005, 92.681, -94.4911, 0.59 ) }
    dend_65 { pt3dadd( 115.668, 92.8591, -95.3909, 0.88 ) }
    dend_65 { pt3dadd( 115.54, 92.9416, -95.6917, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_65 { pt3dadd( 115.269, 93.1552, -96.1857, 1.47 ) }
    dend_65 { pt3dadd( 114.553, 93.8132, -97.062, 0.29 ) }
    dend_65 { pt3dadd( 113.876, 94.4832, -97.7954, 0.29 ) }
    dend_65 { pt3dadd( 113.598, 94.7619, -98.0779, 0.29 ) }
    dend_65 { pt3dadd( 113.11, 95.2595, -98.5355, 0.29 ) }
    dend_65 { pt3dadd( 112.802, 95.596, -98.8283, 0.29 ) }
    dend_65 { pt3dadd( 112.068, 96.4454, -99.522, 0.29 ) }
    dend_65 { pt3dadd( 111.778, 96.7742, -99.7957, 0.29 ) }
    dend_65 { pt3dadd( 111.378, 97.1507, -100.153, 0.96 ) }
    dend_65 { pt3dadd( 111.115, 97.4086, -100.413, 1.25 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 10/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 126.393, 86.3202, -58.9604, 0.15 ) }
    dend_62 { pt3dadd( 127.028, 87.9201, -58.7588, 0.15 ) }
    dend_62 { pt3dadd( 127.376, 88.7967, -58.6483, 0.15 ) }
    dend_62 { pt3dadd( 127.656, 89.5011, -58.5595, 0.81 ) }
    dend_62 { pt3dadd( 127.899, 90.1126, -58.4824, 1.03 ) }
    dend_62 { pt3dadd( 128.219, 90.9185, -58.3808, 1.03 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 16/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -37.9899, -142.291, -5.23862, 0.52 ) }
    dend_28 { pt3dadd( -38.1334, -142.79, -5.54612, 0.52 ) }
    dend_28 { pt3dadd( -38.3423, -143.597, -5.94811, 0.52 ) }
    dend_28 { pt3dadd( -38.6407, -144.619, -6.34556, 0.37 ) }
    dend_28 { pt3dadd( -38.7815, -145.089, -6.51969, 0.52 ) }
    dend_28 { pt3dadd( -38.9756, -145.721, -6.74449, 0.44 ) }
    dend_28 { pt3dadd( -39.2014, -146.421, -6.99894, 0.37 ) }
    dend_28 { pt3dadd( -39.4482, -147.13, -7.22792, 0.29 ) }
    dend_28 { pt3dadd( -39.7263, -147.876, -7.42172, 0.29 ) }
    dend_28 { pt3dadd( -40.0724, -148.848, -7.64104, 1.03 ) }
    dend_28 { pt3dadd( -40.1724, -149.12, -7.70507, 1.18 ) }
    dend_28 { pt3dadd( -40.4815, -149.895, -7.90942, 0.88 ) }
    dend_28 { pt3dadd( -40.7011, -150.451, -8.06866, 0.44 ) }
    dend_28 { pt3dadd( -40.9448, -151.176, -8.28765, 0.37 ) }
    dend_28 { pt3dadd( -41.0338, -151.605, -8.42046, 0.59 ) }
    dend_28 { pt3dadd( -41.0669, -152.01, -8.53705, 0.44 ) }
    dend_28 { pt3dadd( -41.0291, -152.839, -8.77087, 0.44 ) }
    dend_28 { pt3dadd( -40.9402, -153.431, -8.93045, 0.44 ) }
    dend_28 { pt3dadd( -40.7627, -154.339, -9.16591, 0.52 ) }
    dend_28 { pt3dadd( -40.6045, -155.183, -9.37653, 0.66 ) }
    dend_28 { pt3dadd( -40.5182, -155.878, -9.50416, 0.88 ) }
    dend_28 { pt3dadd( -40.5086, -156.359, -9.54574, 0.88 ) }
    dend_28 { pt3dadd( -40.6102, -157.084, -9.5119, 0.52 ) }
    dend_28 { pt3dadd( -40.8514, -157.701, -9.40543, 0.29 ) }
    dend_28 { pt3dadd( -41.3026, -158.425, -9.20261, 0.29 ) }
    dend_28 { pt3dadd( -41.9222, -159.242, -8.98303, 0.29 ) }
    dend_28 { pt3dadd( -42.3706, -159.779, -8.8797, 0.96 ) }
    dend_28 { pt3dadd( -42.6559, -160.14, -8.86095, 1.18 ) }
    dend_28 { pt3dadd( -42.9376, -160.543, -8.87159, 1.18 ) }
    dend_28 { pt3dadd( -43.3519, -161.31, -8.96618, 0.59 ) }
    dend_28 { pt3dadd( -43.653, -162.127, -9.08291, 0.52 ) }
    dend_28 { pt3dadd( -43.8672, -162.928, -9.19058, 0.52 ) }
    dend_28 { pt3dadd( -44.0932, -163.966, -9.34707, 0.66 ) }
    dend_28 { pt3dadd( -44.2198, -164.655, -9.44328, 0.66 ) }
    dend_28 { pt3dadd( -44.3255, -165.399, -9.52961, 0.81 ) }
    dend_28 { pt3dadd( -44.4143, -166.479, -9.57705, 0.81 ) }
    dend_28 { pt3dadd( -44.4434, -167.256, -9.47937, 0.81 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 53/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -37.9899, -142.291, -5.23862, 0.37 ) }
    dend_27 { pt3dadd( -38.619, -142.12, -4.77295, 0.37 ) }
    dend_27 { pt3dadd( -39.474, -141.941, -4.20068, 0.37 ) }
    dend_27 { pt3dadd( -39.8899, -141.858, -3.94813, 0.37 ) }
    dend_27 { pt3dadd( -40.8262, -141.661, -3.43207, 0.29 ) }
    dend_27 { pt3dadd( -41.3891, -141.529, -3.14641, 0.29 ) }
    dend_27 { pt3dadd( -42.0564, -141.372, -2.80773, 0.29 ) }
    dend_27 { pt3dadd( -42.7004, -141.238, -2.47548, 0.37 ) }
    dend_27 { pt3dadd( -43.0327, -141.189, -2.34357, 0.37 ) }
    dend_27 { pt3dadd( -43.3708, -141.153, -2.24605, 0.29 ) }
    dend_27 { pt3dadd( -43.753, -141.1, -2.2003, 0.22 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 64/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 24.9818, -175.125, 10.0487, 0.22 ) }
    dend_23 { pt3dadd( 24.4862, -175.76, 9.81849, 0.22 ) }
    dend_23 { pt3dadd( 23.7719, -176.675, 9.48682, 0.22 ) }
    dend_23 { pt3dadd( 23.366, -177.196, 9.29829, 0.29 ) }
    dend_23 { pt3dadd( 23.1447, -177.479, 9.19553, 0.29 ) }
    dend_23 { pt3dadd( 22.5713, -178.214, 8.92927, 0.22 ) }
    dend_23 { pt3dadd( 22.1967, -178.694, 8.75527, 0.22 ) }
    dend_23 { pt3dadd( 19.2489, -184.864, 6.66696, 0.22 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 72/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 24.9818, -175.125, 10.0487, 0.37 ) }
    dend_22 { pt3dadd( 24.6025, -176.509, 10.3523, 0.37 ) }
    dend_22 { pt3dadd( 24.2395, -177.742, 10.4096, 0.96 ) }
    dend_22 { pt3dadd( 23.775, -179.256, 10.25, 0.59 ) }
    dend_22 { pt3dadd( 23.4489, -180.395, 9.98644, 0.59 ) }
    dend_22 { pt3dadd( 23.1033, -181.604, 9.70707, 0.22 ) }
    dend_22 { pt3dadd( 22.774, -182.755, 9.44094, 0.22 ) }
    dend_22 { pt3dadd( 22.3782, -183.97, 8.98726, 0.22 ) }
    dend_22 { pt3dadd( 22.0627, -184.978, 8.42461, 0.22 ) }
    dend_22 { pt3dadd( 21.7267, -185.993, 7.64421, 0.22 ) }
    dend_22 { pt3dadd( 19.5031, -196.874, 7.07242, 0.22 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 83/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 244.986, 0.165431, -157.363, 0.37 ) }
    dend_6 { pt3dadd( 247.481, 1.62908, -163.567, 0.37 ) }
    dend_6 { pt3dadd( 247.901, 1.91111, -164.613, 0.66 ) }
    dend_6 { pt3dadd( 248.215, 2.17813, -165.42, 0.66 ) }
    dend_6 { pt3dadd( 248.362, 2.323, -165.803, 0.96 ) }
    dend_6 { pt3dadd( 248.748, 2.75626, -166.754, 1.11 ) }
    dend_6 { pt3dadd( 249.222, 3.32799, -167.828, 1.11 ) }
    dend_6 { pt3dadd( 249.953, 4.34717, -168.936, 0.81 ) }
    dend_6 { pt3dadd( 250.54, 5.20059, -169.668, 1.4 ) }
    dend_6 { pt3dadd( 250.738, 5.49536, -169.865, 1.4 ) }
    dend_6 { pt3dadd( 251.514, 6.63899, -170.408, 0.37 ) }
    dend_6 { pt3dadd( 252.071, 7.43533, -170.607, 0.37 ) }
    dend_6 { pt3dadd( 252.759, 8.35197, -170.643, 0.37 ) }
    dend_6 { pt3dadd( 253.309, 9.06208, -170.546, 0.66 ) }
    dend_6 { pt3dadd( 253.742, 9.64029, -170.415, 0.66 ) }
    dend_6 { pt3dadd( 254.271, 10.4993, -170.23, 0.29 ) }
    dend_6 { pt3dadd( 254.593, 11.1935, -170.085, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_6 { pt3dadd( 254.781, 11.719, -169.992, 0.52 ) }
    dend_6 { pt3dadd( 255.068, 12.6276, -169.883, 0.29 ) }
    dend_6 { pt3dadd( 255.375, 13.579, -169.811, 1.03 ) }
    dend_6 { pt3dadd( 255.882, 15.0138, -169.791, 0.66 ) }
    dend_6 { pt3dadd( 256.225, 15.9301, -169.811, 0.44 ) }
    dend_6 { pt3dadd( 256.354, 16.2565, -169.822, 0.66 ) }
    dend_6 { pt3dadd( 256.756, 17.267, -169.872, 0.37 ) }
    dend_6 { pt3dadd( 256.971, 17.7695, -169.884, 0.52 ) }
    dend_6 { pt3dadd( 257.417, 18.7175, -169.858, 0.37 ) }
    dend_6 { pt3dadd( 257.75, 19.3416, -169.778, 0.37 ) }
    dend_6 { pt3dadd( 258.111, 20.0018, -169.685, 0.37 ) }
    dend_6 { pt3dadd( 258.47, 20.7563, -169.577, 0.37 ) }
    dend_6 { pt3dadd( 258.77, 21.4933, -169.458, 0.96 ) }
    dend_6 { pt3dadd( 258.896, 21.8025, -169.404, 0.96 ) }
    dend_6 { pt3dadd( 259.432, 23.0208, -169.162, 0.29 ) }
    dend_6 { pt3dadd( 259.891, 24.0038, -168.975, 0.29 ) }
    dend_6 { pt3dadd( 260.338, 24.9135, -168.81, 0.29 ) }
    dend_6 { pt3dadd( 260.72, 25.6755, -168.681, 1.11 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 18/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 244.986, 0.165431, -157.363, 0.52 ) }
    dend_5 { pt3dadd( 244.264, 3.5159, -160.568, 0.52 ) }
    dend_5 { pt3dadd( 244.198, 3.79797, -160.816, 0.52 ) }
    dend_5 { pt3dadd( 243.853, 5.14317, -161.929, 0.37 ) }
    dend_5 { pt3dadd( 243.756, 5.51968, -162.24, 0.29 ) }
    dend_5 { pt3dadd( 243.464, 6.65869, -163.182, 0.29 ) }
    dend_5 { pt3dadd( 243.215, 7.62701, -163.983, 0.29 ) }
    dend_5 { pt3dadd( 242.933, 8.67356, -164.446, 0.29 ) }
    dend_5 { pt3dadd( 242.808, 9.1215, -164.657, 0.52 ) }
    // Section: dend_67, id: dend_67, parent: dend_65 (entry count 27/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 111.115, 97.4086, -100.413, 0.29 ) }
    dend_67 { pt3dadd( 110.324, 98.3344, -102.254, 0.29 ) }
    dend_67 { pt3dadd( 110.119, 98.4692, -102.85, 0.29 ) }
    dend_67 { pt3dadd( 109.859, 98.5769, -103.706, 0.29 ) }
    dend_67 { pt3dadd( 109.405, 98.7687, -105.255, 0.29 ) }
    dend_67 { pt3dadd( 109.227, 98.8622, -105.839, 0.44 ) }
    dend_67 { pt3dadd( 108.986, 98.9893, -106.631, 0.44 ) }
    dend_67 { pt3dadd( 108.25, 99.2396, -108.966, 0.29 ) }
    dend_67 { pt3dadd( 107.923, 99.3098, -110.096, 0.29 ) }
    dend_67 { pt3dadd( 107.755, 99.3317, -110.77, 0.29 ) }
    dend_67 { pt3dadd( 107.508, 99.3616, -111.802, 0.22 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 38/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 111.115, 97.4086, -100.413, 0.22 ) }
    dend_66 { pt3dadd( 110.411, 96.6483, -99.9139, 0.22 ) }
    dend_66 { pt3dadd( 109.819, 96.0875, -99.5054, 0.22 ) }
    dend_66 { pt3dadd( 109.07, 95.4632, -98.9783, 1.4 ) }
    dend_66 { pt3dadd( 108.229, 94.763, -98.3871, 0.22 ) }
    dend_66 { pt3dadd( 107.291, 93.9817, -97.7275, 1.84 ) }
    dend_66 { pt3dadd( 106.47, 93.2973, -97.1497, 0.22 ) }
    dend_66 { pt3dadd( 105.751, 92.7753, -96.5963, 0.22 ) }
    dend_66 { pt3dadd( 105.072, 92.3334, -96.0567, 0.22 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 47/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 128.219, 90.9185, -58.3808, 0.74 ) }
    dend_64 { pt3dadd( 128.128, 91.3639, -58.1246, 0.74 ) }
    dend_64 { pt3dadd( 127.956, 92.0628, -57.6962, 0.22 ) }
    dend_64 { pt3dadd( 127.816, 92.4777, -57.4362, 0.22 ) }
    dend_64 { pt3dadd( 127.482, 93.2771, -56.9106, 0.22 ) }
    dend_64 { pt3dadd( 127.17, 93.9619, -56.4003, 1.33 ) }
    dend_64 { pt3dadd( 127.022, 94.2916, -56.1278, 1.33 ) }
    dend_64 { pt3dadd( 126.715, 94.9279, -55.5179, 0.22 ) }
    dend_64 { pt3dadd( 126.482, 95.3533, -55.0514, 0.22 ) }
    dend_64 { pt3dadd( 126.32, 95.6091, -54.7467, 0.22 ) }
    dend_64 { pt3dadd( 125.931, 96.1604, -54.1004, 0.22 ) }
    dend_64 { pt3dadd( 125.667, 96.5595, -53.5836, 0.22 ) }
    dend_64 { pt3dadd( 125.536, 96.8321, -53.244, 0.37 ) }
    dend_64 { pt3dadd( 125.451, 97.128, -52.9007, 0.37 ) }
    dend_64 { pt3dadd( 125.42, 97.4809, -52.5099, 0.37 ) }
    dend_64 { pt3dadd( 125.425, 97.7683, -52.2293, 0.15 ) }
    dend_64 { pt3dadd( 125.417, 98.5987, -51.5166, 0.22 ) }
    dend_64 { pt3dadd( 125.396, 99.2984, -50.9572, 0.22 ) }
    dend_64 { pt3dadd( 125.371, 99.7853, -50.5566, 0.22 ) }
    dend_64 { pt3dadd( 125.266, 100.667, -49.8436, 0.22 ) }
    dend_64 { pt3dadd( 125.139, 101.268, -49.3378, 0.22 ) }
    dend_64 { pt3dadd( 124.929, 102.007, -48.6831, 0.22 ) }
    dend_64 { pt3dadd( 124.835, 102.272, -48.4425, 0.74 ) }
    dend_64 { pt3dadd( 124.39, 103.318, -47.4349, 0.29 ) }
    dend_64 { pt3dadd( 124.095, 103.936, -46.8373, 0.29 ) }
    dend_64 { pt3dadd( 123.797, 104.545, -46.2648, 0.29 ) }
    dend_64 { pt3dadd( 123.599, 104.979, -45.8217, 0.29 ) }
    dend_64 { pt3dadd( 123.417, 105.488, -45.2381, 0.52 ) }
    dend_64 { pt3dadd( 123.275, 105.939, -44.6814, 0.37 ) }
    dend_64 { pt3dadd( 123.121, 106.524, -43.9327, 0.29 ) }
    dend_64 { pt3dadd( 123.089, 106.666, -43.744, 0.37 ) }
    dend_64 { pt3dadd( 122.965, 107.218, -43.0069, 0.37 ) }
    dend_64 { pt3dadd( 122.779, 107.941, -42.0165, 0.37 ) }
    dend_64 { pt3dadd( 122.622, 108.484, -41.2367, 0.22 ) }
    dend_64 { pt3dadd( 122.545, 108.774, -40.7964, 0.22 ) }
    dend_64 { pt3dadd( 122.461, 109.083, -40.3197, 0.74 ) }
    dend_64 { pt3dadd( 122.405, 109.258, -40.0621, 0.88 ) }
    dend_64 { pt3dadd( 122.192, 109.844, -39.3134, 0.59 ) }
    dend_64 { pt3dadd( 121.869, 110.569, -38.5316, 0.81 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 86/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 128.219, 90.9185, -58.3808, 0.29 ) }
    dend_63 { pt3dadd( 129.021, 91.2985, -58.845, 0.29 ) }
    dend_63 { pt3dadd( 129.737, 91.5535, -59.4074, 0.29 ) }
    dend_63 { pt3dadd( 130.445, 91.7602, -60.0301, 1.03 ) }
    dend_63 { pt3dadd( 130.778, 91.8483, -60.3406, 1.03 ) }
    dend_63 { pt3dadd( 131.611, 92.022, -61.09, 0.44 ) }
    dend_63 { pt3dadd( 132.252, 92.1331, -61.6324, 0.29 ) }
    dend_63 { pt3dadd( 133.109, 92.2044, -62.3579, 0.96 ) }
    dend_63 { pt3dadd( 133.402, 92.213, -62.5935, 0.96 ) }
    dend_63 { pt3dadd( 134.273, 92.2374, -63.2219, 0.22 ) }
    dend_63 { pt3dadd( 134.948, 92.2816, -63.6594, 0.22 ) }
    dend_63 { pt3dadd( 135.659, 92.3653, -64.0304, 0.22 ) }
    dend_63 { pt3dadd( 136.437, 92.5037, -64.3848, 0.22 ) }
    dend_63 { pt3dadd( 137.34, 92.7283, -64.7517, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_63 { pt3dadd( 137.904, 92.9049, -64.9683, 0.52 ) }
    dend_63 { pt3dadd( 138.365, 93.102, -65.1271, 0.29 ) }
    dend_63 { pt3dadd( 138.939, 93.4453, -65.2966, 1.03 ) }
    dend_63 { pt3dadd( 139.312, 93.741, -65.3491, 1.03 ) }
    dend_63 { pt3dadd( 139.634, 94.093, -65.3356, 0.88 ) }
    dend_63 { pt3dadd( 139.951, 94.4891, -65.2683, 0.66 ) }
    dend_63 { pt3dadd( 140.339, 95.025, -65.133, 0.37 ) }
    dend_63 { pt3dadd( 140.722, 95.6152, -64.9339, 0.59 ) }
    dend_63 { pt3dadd( 141.159, 96.3664, -64.6285, 0.29 ) }
    dend_63 { pt3dadd( 141.537, 97.0301, -64.3074, 0.29 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 10/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -44.4434, -167.256, -9.47937, 0.74 ) }
    dend_30 { pt3dadd( -44.9514, -167.898, -9.47026, 0.74 ) }
    dend_30 { pt3dadd( -45.7913, -168.838, -9.51298, 0.66 ) }
    dend_30 { pt3dadd( -46.425, -169.449, -9.60554, 0.52 ) }
    dend_30 { pt3dadd( -47.2811, -170.185, -9.80859, 0.37 ) }
    dend_30 { pt3dadd( -47.7577, -170.589, -9.94313, 0.74 ) }
    dend_30 { pt3dadd( -48.1628, -170.932, -10.0438, 1.03 ) }
    dend_30 { pt3dadd( -48.7162, -171.383, -10.1849, 0.74 ) }
    dend_30 { pt3dadd( -49.5044, -172.037, -10.3869, 0.52 ) }
    dend_30 { pt3dadd( -50.3007, -172.775, -10.5646, 0.52 ) }
    dend_30 { pt3dadd( -50.8387, -173.38, -10.6602, 0.66 ) }
    dend_30 { pt3dadd( -51.6051, -174.454, -10.7447, 0.88 ) }
    dend_30 { pt3dadd( -51.8307, -174.843, -10.7563, 1.18 ) }
    dend_30 { pt3dadd( -52.1337, -175.477, -10.7493, 0.81 ) }
    dend_30 { pt3dadd( -52.4874, -176.388, -10.7123, 0.52 ) }
    dend_30 { pt3dadd( -52.7398, -177.168, -10.7005, 0.52 ) }
    dend_30 { pt3dadd( -53.0174, -178.103, -10.7365, 0.52 ) }
    dend_30 { pt3dadd( -53.1393, -178.555, -10.7863, 0.52 ) }
    dend_30 { pt3dadd( -53.384, -179.443, -10.9059, 0.52 ) }
    dend_30 { pt3dadd( -53.6402, -180.323, -11.0469, 0.52 ) }
    dend_30 { pt3dadd( -53.8588, -181.065, -11.1956, 1.03 ) }
    dend_30 { pt3dadd( -54.0274, -181.605, -11.319, 1.25 ) }
    dend_30 { pt3dadd( -54.2645, -182.275, -11.5129, 0.66 ) }
    dend_30 { pt3dadd( -54.5256, -182.928, -11.7528, 0.29 ) }
    dend_30 { pt3dadd( -54.8824, -183.568, -12.1319, 0.29 ) }
    dend_30 { pt3dadd( -55.0891, -183.478, -12.4218, 0.52 ) }
    dend_30 { pt3dadd( -55.5844, -182.884, -13.1776, 0.29 ) }
    dend_30 { pt3dadd( -55.9545, -182.327, -13.7745, 0.29 ) }
    dend_30 { pt3dadd( -56.3297, -181.64, -14.4086, 0.22 ) }
    dend_30 { pt3dadd( -56.3961, -181.493, -14.5296, 0.52 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 40/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -44.4434, -167.256, -9.47937, 0.22 ) }
    dend_29 { pt3dadd( -44.5561, -169.325, -9.99813, 0.22 ) }
    dend_29 { pt3dadd( -44.5915, -170.154, -10.2083, 0.22 ) }
    dend_29 { pt3dadd( -44.6373, -171.805, -10.5665, 0.22 ) }
    dend_29 { pt3dadd( -44.6839, -173.672, -10.9147, 0.22 ) }
    dend_29 { pt3dadd( -44.7217, -175.185, -11.197, 0.22 ) }
    dend_29 { pt3dadd( -44.7951, -178.121, -11.7448, 0.22 ) }
    dend_29 { pt3dadd( -44.8737, -179.375, -11.9743, 0.22 ) }
    dend_29 { pt3dadd( -44.9843, -181.854, -12.4384, 0.22 ) }
    dend_29 { pt3dadd( -44.9839, -183.241, -12.6777, 0.22 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 50/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 260.72, 25.6755, -168.681, 0.29 ) }
    dend_8 { pt3dadd( 261.737, 25.096, -168.759, 0.29 ) }
    dend_8 { pt3dadd( 262.321, 24.7626, -168.804, 0.29 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 53/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 260.72, 25.6755, -168.681, 0.37 ) }
    dend_7 { pt3dadd( 261.087, 26.5482, -168.495, 0.37 ) }
    dend_7 { pt3dadd( 261.52, 27.5759, -168.275, 0.37 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
    ModelViewParmSubset_2 = new SectionList()
    dend_78 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_41 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_78 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_50 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_41 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_32 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_88 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_69 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_54 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_52 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_51 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_46 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_45 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_43 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_42 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_34 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_33 OneSecGrp_SectionRef_22.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_17 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_71 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_70 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_55 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_48 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_40 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_18 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_16 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_11 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_2 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_68 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_59 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_37 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_24 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_19 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_13 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_10 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_60 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_65 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_0 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_1 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_49 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_44 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_53 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_31 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_58 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_47 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_12 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_57 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_79 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_56 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_26 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_85 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_27 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_86 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_25 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_80 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_15 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_35 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_36 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_81 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_14 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_87 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_61 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_28 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_62 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_21 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_82 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_83 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_84 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_29 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_23 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_63 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_30 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_22 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_64 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_20 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_72 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_75 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_38 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_39 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_73 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_74 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_77 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_76 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_66 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_67 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_3 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_4 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_9 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_5 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_6 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_8 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_7 OneSecGrp_SectionRef_92.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_81, dend_81, dend_81, dend_75, dend_75, dend_75, dend_75, dend_72, dend_72, dend_72, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_56, dend_56, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_84, dend_84, dend_84, dend_84, dend_84, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_39, dend_38, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_62, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_8, dend_8, dend_7, dend_7]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_78 all.append()
    dend_78 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_77 all.append()
    dend_76 all.append()
    dend_74 all.append()
    dend_73 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_78 nseg = 7
    dend_50 nseg = 7
    dend_41 nseg = 7
    dend_32 nseg = 5
    dend_88 nseg = 3
    dend_69 nseg = 5
    dend_54 nseg = 3
    dend_52 nseg = 3
    dend_51 nseg = 3
    dend_46 nseg = 3
    dend_45 nseg = 11
    dend_43 nseg = 3
    dend_42 nseg = 3
    dend_34 nseg = 3
    dend_33 nseg = 5
    dend_17 nseg = 3
    dend_71 nseg = 3
    dend_70 nseg = 3
    dend_55 nseg = 3
    dend_48 nseg = 3
    dend_40 nseg = 3
    dend_18 nseg = 3
    dend_16 nseg = 5
    dend_11 nseg = 5
    dend_2 nseg = 15
    dend_68 nseg = 3
    dend_59 nseg = 5
    dend_37 nseg = 3
    dend_24 nseg = 3
    dend_19 nseg = 5
    dend_13 nseg = 3
    dend_10 nseg = 3
    dend_60 nseg = 3
    dend_65 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L6_ChC_d1b33e54c2_0_0


