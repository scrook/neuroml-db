// Cell: bIR215_L6_BP_c202839326_0_0
/*
{
  "id" : "bIR215_L6_BP_c202839326_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 6.22701, 2.40803, 0.83", "-3.63339, 8.8396, 2.95882, 0.83", "-7.24458, 11.6386, 3.50343, 1.11", "-9.37377, 13.2878, 3.78674, 0.83", "-11.4424, 14.8761, 4.04057, 0.83", "-12.6671, 15.7818, 4.17966, 1.11", "-16.5025, 18.6121, 4.62546, 1.11", "-23.3624, 23.4575, 5.4135, 0.83", "-25.8338, 25.1366, 5.67373, 0.83", "-27.791, 26.4268, 5.83536, 0.83", "-29.6994, 27.7054, 5.97528, 0.83", "-31.2529, 28.7592, 6.05077, 0.55", "-32.4206, 29.4728, 6.12739, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.44701, -5.68197, 0.55", "4.24941, 6.08977, -6.1212, 0.55", "6.41345, 6.5579, -6.60447, 0.55", "7.66916, 6.67607, -7.24394, 0.83", "9.65657, 6.80183, -8.43179, 0.55", "10.6159, 6.86254, -9.00519, 1.38", "12.9747, 7.0118, -10.415, 0.55", "13.9794, 6.96125, -11.0877, 0.83", "19.1763, 6.03429, -14.8674, 0.55", "19.6791, 5.90964, -15.2832, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -8.24299, 2.42803, 1.11", "-0.678391, -9.98132, 3.05122, 1.11", "-0.715831, -13.2846, 4.23546, 1.11", "-0.731077, -14.63, 4.71775, 0.83", "-0.751336, -16.4173, 5.35851, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.59701, -1.26197, 1.11", "1.03787, 11.1889, -1.45528, 1.11", "1.25421, 14.3531, -1.43699, 1.11", "1.60969, 19.5152, -1.21784, 1.38", "1.6349, 19.8026, -1.20092, 1.38", "2.16366, 23.3522, -0.973995, 0.83", "2.89223, 27.1008, -0.546524, 0.83", "4.12083, 31.3215, 0.417757, 0.83", "4.80275, 32.9163, 0.964227, 0.83", "5.46286, 34.0665, 1.46388, 1.11", "7.36367, 36.8603, 2.73508, 0.55", "9.57097, 39.77, 4.25804, 0.83", "12.4167, 42.7472, 5.95406, 0.55", "13.8516, 43.9769, 6.70871, 0.83", "15.8694, 45.6401, 7.90628, 0.55", "18.3848, 47.7567, 9.54824, 0.55", "21.9261, 50.9484, 12.0861, 0.55", "25.8324, 54.6006, 14.8891, 0.55", "28.3313, 56.9711, 17.0228, 0.55", "31.4359, 59.9691, 20.0751, 0.55", "32.0863, 60.5694, 20.7726, 0.83", "33.8162, 62.1553, 22.7499, 0.55", "35.2588, 63.3891, 24.2939, 0.83", "38.6038, 66.7769, 27.9646, 0.55", "39.8323, 68.0146, 29.0134, 0.83", "40.9493, 68.9213, 29.6974, 0.55", "42.0384, 69.6988, 30.1999, 0.83", "44.4246, 71.1346, 31.0704, 0.83", "47.5568, 73.0932, 31.952, 0.83", "49.4621, 74.3929, 32.2922, 0.55", "50.9192, 75.5227, 32.5599, 0.55", "54.7322, 78.4406, 33.2057, 0.83", "57.1856, 80.3118, 33.5262, 0.55", "60.8936, 83.0502, 33.8648, 0.55", "64.273, 85.3391, 34.0414, 0.55", "67.2854, 87.2743, 34.1192, 0.55", "71.071, 89.535, 34.0467, 0.55", "73.3705, 90.631, 33.9272, 0.55", "74.9177, 91.2407, 33.659, 0.55", "76.9466, 91.6739, 33.1276, 0.55", "79.9373, 91.8203, 32.0815, 0.55", "81.7888, 91.6683, 31.3548, 0.55", "84.512, 91.3692, 30.4887, 0.55", "89.7509, 90.9672, 29.3153, 0.55", "93.896, 90.8441, 28.6926, 0.55", "98.3208, 90.9239, 28.2974, 0.55", "101.183, 91.0715, 28.2685, 0.55", "108.683, 92.1228, 28.6807, 0.55", "113.161, 93.0806, 29.2544, 0.55", "116.555, 94.0127, 29.9919, 0.55", "118.633, 94.9104, 30.5183, 0.55", "121.048, 96.2637, 31.118, 0.55", "125.111, 98.9513, 31.7854, 0.55", "126.031, 99.6002, 31.8144, 0.55", "128.651, 101.332, 31.7276, 0.55", "131.064, 103.186, 31.6397, 0.83", "132.38, 104.215, 31.5714, 0.55", "134.348, 105.99, 31.3929, 0.83", "144.979, 115.456, 33.1358, 0.83", "154.22, 126.393, 33.9583, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 11
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-32.4206, 29.4728, 6.12739, 0.55", "-33.5982, 30.2366, 5.43715, 0.55", "-34.8788, 31.0672, 4.68658, 0.55", "-36.4241, 32.0696, 3.78081, 0.55", "-37.7002, 32.8973, 3.0329, 0.83", "-38.7695, 33.5909, 2.40614, 0.55", "-40.7543, 34.8783, 1.24279, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-32.4206, 29.4728, 6.12739, 0.55", "-34.0166, 29.7578, 5.96213, 0.55", "-35.7114, 30.0102, 5.95599, 0.55", "-37.6323, 30.2939, 5.99602, 0.55", "-40.4095, 30.6779, 6.31036, 0.55", "-42.73, 30.9336, 6.74038, 0.55", "-45.1615, 31.1655, 7.29665, 0.55", "-47.5063, 31.2326, 8.09236, 0.55", "-49.52, 31.0944, 8.97819, 0.55", "-52.023, 30.7475, 10.358, 0.55", "-53.1079, 30.5175, 11.1139, 0.55", "-54.2788, 30.257, 11.9823, 0.55", "-56.3451, 29.6364, 13.4204, 0.55", "-57.4481, 29.3072, 14.0083, 0.55", "-58.6034, 28.9263, 14.6177, 0.55", "-59.9802, 28.4892, 15.2001, 0.55", "-61.4773, 28.0453, 15.7908, 0.55", "-63.6149, 27.4058, 16.5865, 0.55", "-66.476, 26.742, 17.3858, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "19.6791, 5.90964, -15.2832, 0.55", "24.7584, 7.30157, -16.3699, 0.55", "27.6897, 7.93195, -17.4118, 0.55", "30.5848, 8.42348, -18.483, 0.55", "32.564, 8.67987, -19.2146, 0.55", "35.4574, 8.98705, -20.2619, 0.55", "41.462, 9.50824, -22.6234, 0.55", "48.2761, 10.0576, -25.7589, 0.55", "51.5839, 10.1174, -27.5102, 0.55", "53.3565, 10.1061, -28.5651, 0.55", "55.3002, 10.1033, -29.8008, 0.55", "58.7701, 10.0012, -31.9928, 0.55", "60.0313, 9.88993, -32.8313, 0.55", "65.3703, 9.55412, -36.7938, 0.55", "69.1496, 9.37804, -39.8789, 0.55", "71.3251, 9.31932, -41.7148, 0.55", "73.4951, 9.24153, -43.5444, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "19.6791, 5.90964, -15.2832, 0.83", "21.4424, 6.82108, -15.2349, 0.83", "22.4495, 7.34662, -15.2514, 0.55", "23.9319, 8.16631, -15.3929, 0.83", "24.9299, 8.7454, -15.514, 0.55", "26.3092, 9.57682, -15.6573, 0.83", "27.9714, 10.6003, -15.7673, 0.55", "28.8039, 11.0525, -15.7968, 0.55", "30.7034, 11.8283, -15.7654, 0.83", "32.4168, 12.3059, -15.5444, 0.55", "33.3755, 12.5522, -15.3327, 0.83", "34.8189, 12.9345, -14.8642, 0.55", "36.8995, 13.4878, -13.9296, 0.55", "39.7806, 14.0953, -12.5057, 0.55", "42.524, 14.5567, -10.9753, 0.55", "44.6963, 14.8952, -9.7276, 0.55", "48.2792, 15.4672, -7.65041, 0.55", "50.907, 15.9517, -6.06579, 0.55", "52.504, 16.3657, -5.03686, 0.55", "55.4665, 17.4139, -3.08043, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.751336, -16.4173, 5.35851, 0.83", "-0.868849, -19.5219, 5.22313, 0.83", "-0.983339, -22.5468, 5.09124, 0.83", "-1.11117, -25.9239, 4.94397, 0.83", "-1.17792, -27.6875, 4.86707, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.751336, -16.4173, 5.35851, 0.55", "-0.111942, -18.1614, 6.56163, 0.55", "0.458452, -20.2968, 8.1307, 0.55", "0.778826, -23.0944, 10.3046, 0.55", "0.827257, -24.1818, 11.1801, 0.83", "0.69929, -26.9563, 13.736, 0.55", "0.515508, -28.3889, 15.0848, 0.55", "0.100323, -31.1748, 17.8274, 0.83", "-0.326284, -33.2433, 19.9977, 0.55", "-0.831055, -34.9492, 21.7633, 0.55", "-1.86097, -38.1799, 25.0494, 0.55", "-2.67958, -40.7548, 27.638, 0.55", "-3.29333, -42.8191, 29.7418, 0.55", "-3.82434, -45.0111, 31.9043, 0.28", "-3.96877, -45.9243, 32.7687, 0.55", "-4.19266, -47.6111, 34.2686, 0.28", "-4.18716, -50.2447, 36.1941, 0.55", "-6.28313, -59.0021, 43.1043, 0.55", "-8.59591, -67.0938, 50.7208, 0.55", "-10.3787, -73.7464, 59.7431, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-40.7543, 34.8783, 1.24279, 0.55", "-44.2031, 35.0301, 2.7492, 0.55", "-45.667, 34.9985, 3.54587, 0.83", "-47.3954, 34.8554, 4.68483, 0.55", "-48.7265, 34.7322, 5.6695, 0.83", "-52.2128, 34.5289, 8.23419, 0.55", "-53.5336, 34.4714, 9.21743, 0.28", "-55.7492, 34.3781, 11.034, 0.55", "-58.7209, 34.2709, 13.4604, 0.55", "-60.9702, 34.2013, 15.2059, 0.55", "-63.9681, 34.1182, 17.4478, 0.28", "-64.7405, 34.1124, 17.9426, 0.55", "-66.3349, 34.1248, 18.9115, 0.28", "-67.4105, 34.1712, 19.476, 0.55", "-69.5926, 34.2725, 20.4445, 0.28", "-70.8688, 34.2714, 20.9411, 0.55", "-73.1215, 34.1088, 21.8169, 0.28", "-74.6306, 33.996, 22.3528, 0.55", "-84.1186, 32.1397, 29.4925, 0.55", "-92.8825, 29.086, 37.1287, 0.55", "-101.325, 24.9182, 44.5977, 0.55", "-109.67, 19.4612, 51.3083, 0.55", "-116.811, 14.3146, 59.4909, 0.55", "-124.792, 9.66721, 67.1815, 0.55", "-132.956, 6.89375, 75.5542, 0.55", "-141.064, 3.20554, 83.6227, 0.55", "-148.984, 0.257173, 92.1678, 0.55", "-156.388, -2.91269, 101.088, 0.55", "-162.654, -7.47399, 110.274, 0.55", "-169.052, -10.9677, 119.829, 0.55", "-175.567, -15.5862, 128.811, 0.55", "-180.744, -20.7822, 138.331, 0.55", "-184.018, -25.3077, 148.973, 0.55", "-187.141, -31.8938, 158.529, 0.55", "-188.569, -38.7344, 168.307, 0.55", "-190.649, -45.1003, 178.286, 0.55", "-194.017, -50.618, 188.418, 0.55", "-199.825, -54.222, 198.303, 0.55", "-204.61, -59.1588, 208.161, 0.55", "-207.267, -62.2913, 219.456, 0.55", "-211.792, -64.4817, 230.373, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-40.7543, 34.8783, 1.24279, 0.55", "-41.6239, 35.8258, -0.292664, 0.55", "-42.1761, 36.8594, -1.90582, 0.55", "-42.6469, 38.0558, -3.55832, 0.55", "-42.9416, 38.8049, -4.5931, 0.55", "-43.4793, 40.1714, -6.48065, 0.83", "-43.8727, 41.1711, -7.8616, 0.55", "-44.2136, 42.5657, -9.85109, 0.83", "-44.2443, 43.4404, -10.9052, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-66.476, 26.742, 17.3858, 0.28", "-67.7148, 24.4342, 17.0631, 0.28", "-68.3113, 23.4383, 16.8433, 0.28", "-69.0888, 22.0293, 16.4801, 0.55", "-69.7295, 20.7915, 16.1701, 0.28", "-70.6736, 18.907, 15.7205, 0.55", "-73.2957, 13.3736, 14.4841, 0.28", "-74.1571, 11.4285, 13.8967, 0.55", "-75.4664, 8.42969, 12.8926, 0.28", "-76.2219, 6.63357, 12.2121, 0.55", "-76.7451, 5.39471, 11.714, 0.28", "-77.3408, 3.97329, 11.1535, 0.55", "-79.1378, -0.763701, 9.39221, 0.28", "-79.705, -2.19873, 8.81048, 0.55", "-80.7055, -4.40282, 7.70259, 0.28", "-81.5315, -5.82088, 6.87774, 0.28", "-82.271, -6.77152, 6.29623, 0.55", "-84.838, -9.44228, 4.74499, 0.28", "-86.0286, -10.5243, 4.1417, 0.55", "-88.946, -12.9961, 2.62266, 0.28", "-91.8638, -15.1891, 1.23186, 0.28", "-95.0379, -17.2892, -0.19317, 0.28", "-96.4898, -18.0834, -0.733803, 0.55", "-103.455, -26.7212, -4.42917, 0.55", "-111.115, -35.4265, -5.95885, 0.55", "-118.69, -43.7221, -9.21254, 0.55", "-126.507, -51.3207, -13.449, 0.55", "-134.471, -58.1065, -18.6755, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-66.476, 26.742, 17.3858, 0.55", "-67.3669, 26.6862, 17.4835, 0.55", "-69.8852, 26.4986, 18.0827, 0.55", "-70.8333, 26.3989, 18.3554, 0.55", "-73.0658, 26.0943, 19.0238, 0.55", "-76.495, 25.6771, 19.8911, 0.55", "-78.2747, 25.5177, 20.3162, 0.28", "-81.0454, 25.2155, 20.9177, 0.55", "-83.1031, 24.9567, 21.2869, 0.55", "-83.9723, 24.8416, 21.444, 0.28", "-89.1859, 24.149, 22.3796, 0.55", "-91.6239, 23.7293, 22.6581, 0.28", "-94.9094, 23.1703, 22.8418, 0.28", "-97.7377, 22.7463, 22.8401, 0.55", "-108.76, 22.4491, 25.3746, 0.55", "-119.436, 21.7376, 29.0525, 0.55", "-129.556, 19.7522, 33.7044, 0.55", "-139.33, 19.5569, 39.4002, 0.55", "-147.735, 18.749, 46.9311, 0.55", "-154.507, 18.3556, 55.9859, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "73.4951, 9.24153, -43.5444, 0.55", "78.3134, 10.7699, -47.4904, 0.55", "79.8346, 11.1876, -48.836, 0.55", "81.7378, 11.6462, -50.4988, 0.55", "85.1887, 12.4524, -53.7223, 0.55", "88.7876, 13.1447, -57.1806, 0.55", "90.5458, 13.3382, -58.8297, 0.83", "91.9904, 13.398, -60.3009, 0.55", "93.0686, 13.3534, -61.5149, 0.83", "95.6598, 12.8754, -64.6342, 0.55", "97.7906, 12.2754, -67.223, 0.55", "100.243, 11.5652, -70.0759, 0.55", "102.973, 10.8572, -73.308, 0.55", "104.804, 10.3384, -75.5239, 0.55", "106.868, 9.74799, -78.092, 0.55", "108.651, 9.30648, -80.4387, 0.55", "109.772, 9.13917, -82.0669, 0.55", "111.179, 8.87863, -85.3351, 0.55", "111.942, 8.65444, -87.3792, 0.55", "112.584, 8.24555, -90.0938, 0.55", "113.45, 7.42042, -94.6827, 0.55", "113.625, 7.19598, -95.718, 0.28", "115.895, 4.32517, -108.307, 0.28", "116.671, 3.50593, -112.003, 0.83", "119.746, 0.362181, -125.117, 0.83", "121.332, -1.34303, -131.213, 0.83", "122.101, -2.13567, -133.684, 0.55", "122.99, -2.92152, -136.093, 0.55", "125.484, -4.49897, -140.564, 0.55", "128.169, -5.93494, -144.496, 0.28", "128.994, -6.21929, -144.732, 0.55", "130.818, -6.72876, -144.592, 0.28", "131.949, -6.96606, -144.339, 0.55", "133.129, -7.2313, -143.974, 0.28", "134.548, -7.47954, -143.469, 0.55", "136.671, -7.73347, -142.939, 0.28", "138.373, -7.98899, -142.57, 0.55", "140.258, -8.14276, -142.311, 0.28", "142.819, -8.33861, -142.186, 0.55", "145.691, -8.48784, -142.219, 0.55", "148.215, -8.58555, -142.416, 0.28", "151.707, -8.68474, -142.882, 0.55", "157.742, -8.67536, -144.331, 0.55", "160.408, -8.52549, -145.293, 0.55", "161.554, -8.41053, -145.829, 0.83", "163.735, -8.17189, -147.052, 0.55", "165.248, -7.94233, -147.995, 0.83", "169.321, -7.21526, -150.578, 0.55", "171.805, -6.94342, -152.223, 0.28", "172.851, -6.89722, -152.798, 0.55", "175.714, -7.0454, -154.058, 0.28", "176.716, -7.19198, -154.434, 0.55", "178.781, -7.63132, -154.889, 0.28", "180.883, -8.29213, -154.989, 0.55", "185.132, -9.87182, -154.442, 0.28", "187.091, -10.6915, -153.98, 0.55", "190.004, -12.0825, -153.14, 0.28", "193.684, -13.8278, -151.945, 0.55", "196.347, -15.054, -151.037, 0.55", "200.963, -17.0332, -149.386, 0.28", "202.858, -17.7541, -148.864, 0.55", "206.124, -18.8018, -148.322, 0.28", "209.381, -19.5902, -148.006, 0.55", "211.168, -19.8139, -148.08, 0.28", "212.786, -19.7946, -148.271, 0.55", "217.353, -19.4582, -149.237, 0.28", "220.619, -18.9897, -149.976, 0.28", "223.461, -18.3735, -150.656, 0.55", "226.598, -17.6021, -151.566, 0.28", "227.39, -17.3585, -151.767, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "73.4951, 9.24153, -43.5444, 0.55", "74.1423, 6.81544, -45.5251, 0.55", "74.4949, 4.74313, -47.0449, 0.28", "74.8167, 2.82437, -48.2659, 0.55", "75.7178, -1.23733, -50.8969, 0.28", "75.767, -1.48851, -51.1002, 0.55", "76.0628, -2.79055, -52.2809, 0.28", "76.1997, -3.84603, -53.4404, 0.55", "76.2724, -4.93156, -54.7885, 0.28", "76.3226, -6.40322, -56.7033, 0.55", "76.4463, -10.108, -61.4328, 0.55", "76.5151, -13.4767, -65.8104, 0.55", "76.5399, -16.1689, -69.3131, 0.55", "76.5097, -18.8216, -72.7024, 0.55", "76.4996, -19.5109, -73.5452, 0.28", "76.5127, -20.2553, -74.3773, 0.55", "76.638, -21.2989, -75.4258, 0.28", "77.0714, -23.1918, -77.1214, 0.55", "78.2378, -26.8897, -79.7559, 0.55", "78.8845, -28.9004, -80.9854, 0.28", "79.418, -30.9335, -82.3265, 0.55", "79.9465, -33.7675, -84.3138, 0.28", "80.2189, -36.0479, -85.9719, 0.55", "80.4729, -39.4567, -88.4559, 0.28", "80.7634, -42.9972, -90.9117, 0.55", "81.1135, -48.1322, -94.5237, 0.28", "81.2372, -50.8683, -96.4576, 0.55", "81.3157, -53.6587, -98.5045, 0.28", "81.3567, -56.0971, -100.468, 0.28", "81.5177, -59.1153, -103.203, 0.55", "81.8751, -61.9223, -105.666, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "55.4665, 17.4139, -3.08043, 0.55", "58.3414, 16.8428, -2.37168, 0.55", "60.4334, 16.3387, -2.0571, 0.55", "65.0122, 15.1745, -1.61258, 0.55", "67.0702, 14.6023, -1.5998, 0.55", "69.3217, 14.0236, -1.70413, 0.55", "72.3523, 13.2949, -2.06466, 0.55", "75.5457, 12.4315, -2.75273, 0.55", "77.2223, 11.9507, -3.30915, 0.55", "80.6347, 10.9598, -4.91567, 0.55", "82.2079, 10.5153, -5.70694, 0.55", "85.8891, 9.39915, -7.657, 0.55", "88.3733, 8.54099, -8.95446, 0.55", "90.1997, 7.89986, -9.82343, 0.83", "93.1078, 6.76449, -11.1753, 0.55", "95.9424, 5.51158, -12.3817, 0.83", "98.3367, 4.33569, -13.3136, 0.55", "100.47, 3.3248, -14.0269, 0.55", "101.687, 2.80728, -14.3637, 0.83", "104.528, 1.61237, -14.9941, 0.28", "105.946, 1.08147, -15.2154, 0.28", "107.31, 0.475491, -15.5014, 0.28", "108.788, -0.138579, -15.8182, 0.28", "111.158, -1.07619, -16.3771, 0.28", "112.112, -1.44045, -16.5727, 0.55", "114.395, -2.28134, -16.809, 0.55", "118.5, -3.83044, -17.0187, 0.55", "119.632, -4.289, -17.0243, 0.55", "120.641, -4.73179, -16.9834, 0.83", "122.836, -5.61812, -16.711, 0.55", "124.744, -6.38386, -16.4425, 0.55", "126.548, -7.09918, -16.1801, 0.55", "127.943, -7.67963, -16.0176, 0.55", "130.141, -8.76429, -15.8704, 0.55", "132.71, -10.2867, -15.8437, 0.55", "136.659, -13.1377, -16.0921, 0.55", "138.795, -15.0501, -16.3714, 0.55", "140.614, -17.0565, -16.7102, 0.28", "141.144, -17.7886, -16.8444, 0.55", "142.276, -19.8135, -17.2053, 0.28", "143.201, -22.0588, -17.5693, 0.55", "144.005, -24.83, -17.8137, 0.55", "144.552, -26.6504, -17.8903, 0.28", "144.754, -27.2933, -17.8869, 0.55", "145.286, -28.8918, -17.8569, 0.28", "146.021, -30.9731, -17.769, 0.55", "147.977, -35.9972, -17.4349, 0.55", "149.005, -38.5306, -17.2149, 0.55", "149.962, -40.8527, -16.9931, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "55.4665, 17.4139, -3.08043, 0.55", "56.616, 17.4278, -2.18929, 0.55", "56.985, 17.4324, -1.92392, 0.55", "58.3577, 17.3884, -1.00051, 0.55", "59.8914, 17.3677, 0.0559129, 0.55", "61.8557, 17.3326, 1.46189, 0.55", "62.3983, 17.3239, 1.84665, 0.55", "63.3703, 17.2714, 2.5239, 0.55", "64.4379, 17.2417, 3.22812, 0.55", "65.6821, 17.2464, 3.99409, 0.55", "66.8553, 17.267, 4.72163, 0.55", "67.5011, 17.3099, 5.09362, 0.55", "68.2603, 17.3821, 5.5311, 0.55", "69.2011, 17.4997, 6.058, 0.83", "70.7454, 17.7017, 6.76063, 0.55", "71.7669, 17.7995, 7.17349, 0.83", "73.1831, 17.8748, 7.69231, 0.55", "73.6169, 17.8749, 7.84321, 0.55", "74.9603, 17.8113, 8.2772, 0.55", "77.3589, 17.5609, 8.94426, 0.55", "79.1112, 17.2835, 9.38332, 0.55", "80.4945, 16.9969, 9.75742, 0.55", "81.9002, 16.6265, 10.1803, 0.55", "82.1955, 16.5404, 10.27, 0.28", "82.7931, 16.3419, 10.4481, 0.83", "85.2446, 15.4896, 11.1907, 0.55", "86.9603, 14.8981, 11.6766, 0.55", "88.3696, 14.4457, 12.1148, 0.55", "89.2114, 14.1722, 12.3846, 0.83", "89.8745, 13.9665, 12.5991, 0.28", "90.4762, 13.7813, 12.788, 0.55", "95.21, 13.4358, 15.0568, 0.55", "100.198, 12.3572, 16.3365, 0.55", "105.192, 11.8914, 17.9219, 0.55", "109.596, 10.6335, 20.5102, 0.55", "113.644, 8.67894, 23.2425, 0.55", "118.059, 6.08497, 24.4516, 0.55", "122.378, 3.09538, 24.732, 0.55", "127.21, 1.01684, 24.8003, 0.55", "131.979, -1.16772, 25.2081, 0.55", "136.986, -2.77477, 25.345, 0.55", "141.978, -4.2126, 26.1773, 0.55", "146.591, -6.53071, 27.1843, 0.55", "151.379, -7.99296, 28.8013, 0.55", "155.99, -8.74304, 31.2194, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-1.17792, -27.6875, 4.86707, 1.38", "1.41536, -29.9604, 5.18474, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-1.17792, -27.6875, 4.86707, 0.55", "-2.15287, -29.2029, 4.49131, 0.55", "-3.21047, -31.1289, 4.08406, 0.55", "-4.05573, -32.4164, 3.77128, 0.55", "-4.71681, -33.4927, 3.38142, 0.55", "-6.09985, -35.7292, 2.36118, 0.55", "-7.06151, -37.2277, 1.60931, 0.55", "-7.89859, -38.5703, 0.899588, 0.55", "-10.0643, -41.8508, -0.926175, 0.55", "-12.6888, -45.6595, -3.097, 0.55", "-14.7075, -48.549, -4.82543, 0.55", "-15.9818, -50.4422, -5.95133, 0.55", "-17.4387, -52.7063, -7.23459, 0.55", "-19.2711, -55.9268, -8.82025, 0.55", "-20.3243, -58.1863, -9.70683, 0.55", "-21.6508, -61.4124, -10.6335, 0.55", "-22.696, -64.4151, -11.3045, 0.55", "-23.7059, -68.1345, -11.9386, 0.55", "-24.6136, -72.474, -12.4551, 0.55", "-25.0447, -75.7658, -12.6563, 0.55", "-25.1987, -77.3954, -12.6171, 0.55", "-25.4304, -81.2066, -12.2471, 0.55", "-25.6246, -84.7678, -11.791, 0.55", "-25.7524, -88.3411, -11.0171, 0.55", "-25.8881, -90.393, -10.4781, 0.55", "-26.3613, -96.7345, -8.58168, 0.55", "-26.4022, -97.2017, -8.43567, 0.55", "-26.6295, -100.059, -7.45622, 0.55", "-27.3012, -105.187, -5.68507, 0.55", "-27.4961, -106.903, -5.19034, 0.55", "-27.6865, -109.589, -4.86501, 0.55", "-27.6468, -110.585, -4.94398, 0.55", "-27.1347, -113.941, -5.73679, 0.55", "-26.5161, -116.105, -6.62734, 0.55", "-25.1742, -119.543, -8.65977, 0.55", "-23.2491, -123.734, -11.3833, 0.28", "-22.7039, -124.769, -12.1812, 0.55", "-21.819, -126.337, -13.5181, 0.28", "-21.6828, -126.573, -13.7322, 0.55", "-20.9877, -127.869, -14.8038, 0.28", "-20.8189, -128.311, -15.0846, 0.55", "-20.1607, -130.617, -16.1513, 0.28", "-19.9686, -131.404, -16.5167, 0.55", "-19.4888, -133.682, -17.4647, 0.28", "-19.3359, -134.399, -17.7594, 0.55", "-18.8422, -136.875, -18.7471, 0.28", "-18.6073, -138.013, -19.2045, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-10.3787, -73.7464, 59.7431, 0.55", "-12.6866, -78.598, 63.1622, 0.55", "-15.7598, -83.1348, 66.4069, 0.55", "-18.4411, -88.003, 69.516, 0.55", "-21.1673, -92.927, 72.4955, 0.55", "-22.9261, -98.2969, 75.4326, 0.55", "-24.8228, -103.458, 78.6451, 0.55", "-25.2872, -109.297, 81.1444, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-10.3787, -73.7464, 59.7431, 0.55", "-9.57558, -82.6938, 68.6651, 0.55", "-8.04778, -93.013, 75.8401, 0.55", "-8.53735, -103.556, 82.8341, 0.55", "-9.63039, -114.761, 88.6266, 0.55", "-10.2325, -125.883, 94.6459, 0.55", "-10.8231, -136.542, 101.453, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-44.2443, 43.4404, -10.9052, 0.83", "-43.4576, 45.7642, -11.8058, 0.83", "-41.7788, 51.2534, -13.7256, 0.55", "-41.1057, 53.5659, -14.4177, 0.83", "-40.4257, 55.9915, -15.0368, 0.55", "-39.8267, 58.3837, -15.4208, 0.55", "-39.5638, 59.5384, -15.4953, 0.28", "-39.488, 60.2425, -15.4108, 0.55", "-39.3365, 62.4213, -14.6819, 0.28", "-39.2659, 63.3362, -14.319, 0.55", "-39.1053, 66.4674, -12.9528, 0.28", "-39.0727, 68.9158, -11.8158, 0.55", "-39.2506, 72.6913, -9.99811, 0.28", "-39.5498, 75.9833, -8.38438, 0.28", "-39.8407, 77.8102, -7.48833, 0.55", "-40.3245, 79.9735, -6.47765, 0.28", "-40.6315, 80.9987, -6.00822, 0.55", "-41.4503, 83.4516, -5.06411, 0.28", "-42.0763, 85.1182, -4.56042, 0.28", "-42.708, 86.7738, -4.12653, 0.28", "-43.0072, 87.6506, -3.8877, 0.55", "-43.9991, 91.2345, -2.92656, 0.28", "-45.008, 95.513, -1.80668, 0.55", "-45.3334, 96.9934, -1.41705, 0.55", "-45.6938, 98.4649, -1.00606, 0.55", "-46.6037, 101.606, -0.242848, 0.55", "-47.3145, 103.681, 0.166916, 0.28", "-47.6679, 104.468, 0.278062, 0.55", "-48.7854, 106.577, 0.563602, 0.28", "-50.0332, 108.852, 0.750573, 0.55", "-52.0758, 112.161, 0.788759, 0.28", "-53.0553, 113.554, 0.708619, 0.28", "-54.5856, 115.554, 0.332078, 0.55", "-56.2704, 117.671, -0.205246, 0.28", "-56.5743, 118.008, -0.321427, 0.55", "-57.6635, 119.091, -0.781759, 0.28", "-61.4291, 122.561, -2.39052, 0.55", "-66.5587, 126.978, -5.0051, 0.28", "-67.4807, 127.753, -5.56947, 0.55", "-69.9877, 129.79, -7.20343, 0.28", "-71.0282, 130.642, -7.9254, 0.28", "-71.914, 131.374, -8.60848, 0.55", "-74.4008, 133.249, -10.9572, 0.28", "-76.1695, 134.327, -12.6185, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-44.2443, 43.4404, -10.9052, 0.55", "-44.3609, 44.8129, -10.9439, 0.55", "-44.4574, 45.616, -10.8947, 0.28", "-44.6535, 46.1798, -10.7318, 0.55", "-45.1038, 47.4744, -10.3577, 0.28", "-45.4202, 48.3837, -10.095, 0.55", "-46.0033, 50.0601, -9.61066, 0.28", "-46.4231, 50.9452, -9.2026, 0.55", "-48.1424, 52.9934, -7.5292, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-134.471, -58.1065, -18.6755, 0.55", "-138.894, -63.4927, -21.3778, 0.55", "-142.178, -69.3105, -24.7312, 0.55", "-144.988, -74.3422, -29.4918, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-134.471, -58.1065, -18.6755, 0.55", "-139.739, -65.1563, -20.5771, 0.55", "-144.004, -72.626, -23.2377, 0.55", "-147.896, -80.2735, -25.9645, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-154.507, 18.3556, 55.9859, 0.55", "-165.644, 17.345, 62.8512, 0.55", "-177.193, 18.327, 69.0031, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-154.507, 18.3556, 55.9859, 0.55", "-167.229, 16.612, 60.3697, 0.55", "-179.99, 17.1039, 64.9544, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "81.8751, -61.9223, -105.666, 0.28", "90.0166, -65.4017, -118.685, 0.28", "90.7949, -65.8322, -119.857, 0.55", "92.1089, -66.559, -121.837, 0.28", "93.2153, -67.171, -123.504, 0.28", "94.6798, -67.9812, -125.71, 0.55", "96.6107, -69.0493, -128.619, 0.55", "98.8094, -71.3567, -130.279, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "81.8751, -61.9223, -105.666, 0.55", "82.8223, -63.5242, -107.6, 0.55", "83.099, -64.2412, -108.461, 0.28", "83.4999, -65.4663, -109.966, 0.55", "84.3831, -68.1651, -113.283, 0.28", "84.9952, -70.0355, -115.582, 0.55", "86.0322, -73.2043, -119.477, 0.28", "87.175, -77.042, -124.583, 0.28", "87.614, -78.8014, -126.972, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "149.962, -40.8527, -16.9931, 0.28", "151.057, -42.6217, -16.3945, 0.28", "152.421, -44.9423, -15.4124, 0.28", "153.277, -46.4428, -14.7145, 0.55", "153.8, -47.2708, -14.2832, 0.28", "154.078, -47.716, -14.0468, 0.28", "155.456, -49.9173, -12.9147, 0.55", "155.772, -50.4025, -12.5957, 0.28", "156.499, -51.6701, -11.6721, 0.55", "157.119, -52.7752, -10.9187, 0.28", "157.67, -53.6772, -10.321, 0.55", "158.316, -54.7607, -9.67821, 0.55", "159.356, -56.4994, -8.88326, 0.55", "159.607, -56.9269, -8.70454, 0.55", "160.496, -58.5228, -8.05908, 0.28", "160.837, -59.1751, -7.81485, 0.55", "161.323, -60.011, -7.50223, 0.28", "162.01, -61.2017, -7.11437, 0.55", "163.174, -63.1034, -6.77628, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "149.962, -40.8527, -16.9931, 0.55", "148.049, -40.616, -17.1549, 0.55", "146.495, -40.4238, -17.2862, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "1.41536, -29.9604, 5.18474, 0.83", "1.56107, -30.2024, 5.23393, 0.83", "3.08477, -32.3057, 5.95287, 0.83", "4.48212, -34.1464, 6.4637, 0.55", "5.59691, -35.6149, 6.87124, 0.55", "7.96644, -38.7362, 7.73747, 0.83", "10.8405, -42.5222, 8.78815, 0.55", "12.3754, -44.4975, 9.40279, 0.83", "14.9703, -47.6117, 10.6354, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "1.41536, -29.9604, 5.18474, 0.55", "1.34206, -31.0653, 2.25894, 0.55", "1.26338, -32.2512, -0.881545, 0.55", "1.1705, -33.6512, -4.58892, 0.55", "1.05772, -35.3512, -9.09087, 0.55", "0.993715, -36.3159, -11.6456, 0.55", "0.980857, -36.5097, -12.1588, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-10.8231, -136.542, 101.453, 0.55", "-10.5027, -145.947, 108.224, 0.55", "-8.64241, -155.951, 113.779, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-10.8231, -136.542, 101.453, 0.55", "-11.177, -144.336, 105.995, 0.55", "-11.9571, -151.957, 110.772, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-48.1424, 52.9934, -7.5292, 0.28", "-49.9285, 54.0677, -6.01615, 0.28", "-50.623, 54.4519, -5.37305, 0.55", "-52.6264, 55.5531, -3.46797, 0.28", "-53.596, 56.1277, -2.61249, 0.55", "-56.2156, 57.7107, -0.384768, 0.28", "-58.8781, 59.3195, 1.87941, 0.55", "-63.2859, 61.7664, 5.59801, 0.28", "-64.2248, 62.2939, 6.39276, 0.55", "-66.2761, 63.5869, 8.11251, 0.28", "-67.0786, 64.1345, 8.80173, 0.55", "-75.5238, 67.4138, 13.7763, 0.55", "-84.0475, 72.4544, 16.7364, 0.55", "-91.9329, 77.3412, 21.2928, 0.55", "-98.5259, 83.4506, 26.3947, 0.55", "-105.933, 89.4075, 30.4532, 0.55", "-114.36, 93.5957, 34.727, 0.55", "-122.522, 96.5856, 40.3176, 0.55", "-130.114, 98.1652, 47.1508, 0.55", "-137.661, 100.401, 53.8495, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-48.1424, 52.9934, -7.5292, 0.55", "-51.7501, 51.7814, -6.67117, 0.55", "-53.6258, 51.092, -6.23636, 0.28", "-55.0216, 50.5789, -5.91279, 0.55", "-56.185, 50.1513, -5.64311, 0.28", "-56.9998, 49.8518, -5.45421, 0.55", "-59.2467, 49.0259, -4.93334, 0.28", "-60.7223, 48.3775, -4.78309, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-144.988, -74.3422, -29.4918, 0.55", "-148.216, -81.4832, -31.6117, 0.55", "-151.169, -88.9334, -32.9086, 0.55", "-153.701, -96.1312, -35.6812, 0.55", "-156.907, -103.413, -37.2916, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-144.988, -74.3422, -29.4918, 0.55", "-148.465, -78.4932, -34.8585, 0.55", "-151.562, -81.7236, -41.0306, 0.55", "-155.305, -85.7253, -46.3313, 0.55", "-160.518, -88.4695, -51.1696, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-147.896, -80.2735, -25.9645, 0.55", "-151.156, -85.3753, -30.5555, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-147.896, -80.2735, -25.9645, 0.55", "-152.151, -89.6544, -23.8656, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "98.8094, -71.3567, -130.279, 0.28", "100.43, -72.6162, -131.387, 0.28", "101.182, -73.2012, -131.902, 0.55", "102.617, -74.3169, -132.883, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "98.8094, -71.3567, -130.279, 0.55", "98.219, -72.356, -132.222, 0.55", "97.038, -74.3549, -136.109, 0.28", "96.6533, -75.006, -137.375, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "87.614, -78.8014, -126.972, 0.28", "88.4939, -81.505, -130.983, 0.28", "88.9296, -82.8437, -132.969, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "87.614, -78.8014, -126.972, 0.55", "84.9507, -79.1249, -126.582, 0.55", "77.5242, -80.027, -125.496, 0.28", "75.76, -80.2413, -125.237, 0.55", "70.934, -80.8275, -124.531, 0.28", "67.8231, -81.2054, -124.076, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "14.9703, -47.6117, 10.6354, 0.83", "15.0355, -47.8169, 10.6341, 0.83", "15.8744, -50.4998, 10.7043, 0.83", "16.281, -52.5419, 10.7539, 0.83", "16.4377, -54.5446, 10.8823, 0.83", "16.4502, -57.2342, 11.1571, 0.83", "16.329, -60.3508, 11.5131, 0.83", "16.0965, -63.8393, 12.0636, 0.83", "15.7784, -67.2368, 12.722, 0.83", "15.2344, -71.4373, 13.2927, 0.83", "14.9673, -73.3744, 13.4066, 0.83", "14.816, -74.8268, 13.4173, 0.83", "14.515, -77.6174, 13.3567, 0.83", "14.3719, -80.1017, 13.2294, 0.83", "14.6402, -85.3293, 12.6646, 0.83", "15.037, -88.1627, 12.0789, 0.83", "15.5168, -90.7627, 11.3849, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "14.9703, -47.6117, 10.6354, 0.55", "14.3532, -50.1405, 10.1694, 0.55", "13.8056, -51.9846, 9.92097, 0.55", "13.4108, -53.1646, 9.87026, 0.55", "12.7554, -55.0076, 9.97779, 0.55", "11.3934, -58.6544, 10.4242, 0.55", "10.1701, -61.429, 10.9803, 0.55", "9.05489, -63.6617, 11.6072, 0.55", "7.79608, -65.9293, 12.3298, 0.55", "6.68455, -67.8155, 12.994, 0.28", "5.63198, -69.3675, 13.6933, 0.55", "3.44507, -72.2139, 15.2244, 0.55", "1.92931, -73.9765, 16.2491, 0.55", "1.07772, -74.9648, 16.8098, 0.55", "0.0644465, -76.1352, 17.3938, 0.83", "-2.83436, -79.6009, 18.9386, 0.28", "-3.77556, -80.7466, 19.4275, 0.55", "-5.3906, -82.8053, 20.2964, 0.28", "-5.91381, -83.4414, 20.5987, 0.55", "-7.06544, -84.9247, 21.3332, 0.28", "-7.6814, -85.7653, 21.708, 0.55", "-9.39681, -88.4943, 22.2848, 0.55", "-14.2807, -95.7385, 27.0224, 0.55", "-19.0749, -102.622, 32.352, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "0.980857, -36.5097, -12.1588, 0.55", "0.224893, -37.7934, -15.7804, 0.55", "-0.0250799, -38.1094, -16.82, 0.55", "-0.693007, -38.9063, -19.3673, 0.55", "-2.26588, -40.5274, -24.7938, 0.28", "-2.52289, -40.7555, -25.5682, 0.55", "-3.64139, -41.7837, -28.7076, 0.55", "-5.35527, -43.2063, -32.7112, 0.55", "-6.03331, -43.7091, -34.2164, 0.28", "-6.67224, -44.0712, -35.4801, 0.28", "-7.90877, -44.6591, -37.4056, 0.55", "-9.38419, -45.2587, -39.8386, 0.28", "-10.7443, -45.6184, -42.1382, 0.55", "-11.83, -45.7539, -43.8929, 0.55", "-12.5703, -45.7459, -45.1385, 0.55", "-14.7107, -45.5604, -48.8968, 0.55", "-17.0297, -45.1163, -52.8022, 0.55", "-18.0172, -44.8498, -54.386, 0.28", "-18.9392, -44.6188, -55.9134, 0.55", "-20.8035, -44.3417, -58.9783, 0.28", "-21.4327, -44.2773, -59.9999, 0.83", "-22.6751, -44.1397, -61.7991, 0.28", "-23.6472, -44.147, -62.9397, 0.55", "-25.0708, -44.2267, -64.5593, 0.28", "-25.6518, -44.2494, -65.1824, 0.55", "-26.764, -44.3211, -66.2688, 0.55", "-28.5102, -44.2161, -67.8461, 0.55", "-29.7, -44.0632, -68.8098, 0.28", "-30.7191, -43.8024, -69.5119, 0.55", "-31.9357, -43.3311, -70.351, 0.28", "-32.1342, -43.2358, -70.4964, 0.55", "-33.8045, -42.3003, -72.1542, 0.28", "-34.9451, -41.5871, -73.4987, 0.55", "-36.3355, -40.5097, -75.5165, 0.83", "-37.3983, -39.58, -77.3405, 0.28", "-37.6527, -39.3414, -77.848, 0.55", "-39.5123, -37.5535, -81.8971, 0.28", "-39.8098, -37.2481, -82.6544, 0.55", "-40.6489, -36.2319, -84.9851, 0.28", "-40.8639, -35.9705, -85.5895, 0.55", "-41.454, -35.2913, -87.0743, 0.28", "-41.8976, -34.8028, -88.0827, 0.55", "-43.0188, -33.7211, -90.1023, 0.28", "-43.6973, -33.1537, -91.2638, 0.55", "-45.1911, -32.0867, -93.6336, 0.28", "-45.6377, -31.8057, -94.3291, 0.55", "-46.3493, -31.4469, -95.3838, 0.28", "-46.9731, -31.1468, -96.239, 0.55", "-48.3201, -30.5522, -97.9168, 0.28", "-48.7335, -30.3862, -98.4057, 0.55", "-51.9056, -29.0785, -101.871, 0.28", "-53.088, -28.522, -102.976, 0.55", "-55.287, -27.4108, -104.804, 0.28", "-56.2991, -26.8652, -105.597, 0.55", "-58.6886, -25.6378, -107.278, 0.28", "-59.5812, -25.232, -107.855, 0.55", "-62.8666, -24.0873, -109.76, 0.28", "-64.2254, -23.7956, -110.537, 0.55", "-66.1432, -23.7268, -111.612, 0.55", "-67.329, -23.7679, -112.243, 0.55", "-69.8285, -23.9257, -113.339, 0.28", "-72.3543, -24.1112, -114.265, 0.28", "-74.4853, -24.2592, -114.977, 0.55", "-77.228, -24.2149, -115.581, 0.28", "-78.6673, -24.0309, -115.716, 0.55", "-82.2498, -23.088, -115.753, 0.28", "-84.2486, -22.2842, -115.404, 0.55", "-85.6228, -21.5996, -114.957, 0.28", "-87.2421, -20.827, -114.167, 0.55", "-89.3172, -19.8045, -112.996, 0.28", "-90.1019, -19.4504, -112.559, 0.55", "-94.0723, -17.9225, -110.658, 0.28", "-95.4076, -17.4506, -110.028, 0.55", "-98.5886, -16.4284, -108.464, 0.28", "-100.315, -15.8903, -107.615, 0.55", "-101.736, -15.4501, -106.919, 0.55", "-103.426, -14.9353, -106.124, 0.28", "-104.287, -14.6772, -105.829, 0.55", "-107.153, -13.734, -104.989, 0.28", "-108.668, -13.0924, -104.526, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "0.980857, -36.5097, -12.1588, 0.55", "1.5845, -36.5204, -13.2471, 0.55", "2.19638, -36.3923, -14.3234, 0.55", "3.00368, -36.1159, -15.6222, 0.55", "3.68524, -35.7859, -16.6479, 0.55", "8.44803, -32.7238, -22.9775, 0.55", "9.47343, -31.844, -24.4179, 0.55", "10.9223, -30.3701, -26.5817, 0.55", "11.9295, -29.2691, -28.1206, 0.55", "12.9124, -28.0915, -29.5859, 0.28", "14.4687, -26.1151, -31.7305, 0.55", "16.8836, -23.0272, -34.7396, 0.28", "17.0646, -22.8348, -35.077, 0.55", "17.8292, -22.1744, -37.6725, 0.28", "18.0835, -21.9076, -39.5245, 0.55", "18.2083, -21.8007, -41.5657, 0.55", "18.4241, -21.8006, -45.2419, 0.55", "18.8781, -21.8451, -52.4556, 0.55", "19.2777, -21.904, -57.2945, 0.55", "19.4621, -21.9283, -58.9607, 0.55", "20.906, -21.9434, -69.878, 0.55", "21.4081, -21.8764, -72.8153, 0.55", "21.8104, -21.8097, -74.4414, 0.55", "23.0909, -21.6684, -78.1496, 0.55", "26.7777, -21.6596, -86.8732, 0.55", "27.8921, -21.731, -89.1827, 0.28", "28.6381, -21.8082, -90.4519, 0.55", "29.7982, -21.9964, -92.3143, 0.28", "30.3506, -22.1428, -93.0463, 0.55", "32.5693, -22.8238, -94.7918, 0.28", "34.6972, -23.9141, -95.0629, 0.55", "36.0147, -24.7326, -95.1481, 0.28", "37.2721, -25.677, -95.0928, 0.55", "38.4305, -26.7508, -94.957, 0.28", "38.953, -27.3204, -94.9122, 0.55", "40.2085, -28.8365, -94.7251, 0.28", "40.5435, -29.2977, -94.7534, 0.55", "42.4472, -31.9446, -95.0875, 0.28", "43.363, -33.1598, -95.4258, 0.55", "45.4186, -35.73, -96.4923, 0.28", "46.2184, -36.6656, -97.011, 0.55", "48.9809, -39.7038, -98.9435, 0.28", "49.6573, -40.441, -99.4518, 0.55", "51.7193, -42.7937, -101.162, 0.28", "52.166, -43.3541, -101.511, 0.55", "53.2899, -44.8485, -102.415, 0.28", "53.9487, -45.7132, -103.038, 0.55", "54.6274, -46.554, -103.732, 0.55", "55.9831, -48.2315, -105.1, 0.28", "56.9304, -49.2422, -106.094, 0.55", "59.8708, -51.623, -109.304, 0.28", "60.9902, -52.3535, -110.606, 0.55", "61.7679, -52.8005, -111.489, 0.28", "62.5599, -53.188, -112.37, 0.55", "65.0215, -54.2129, -115.039, 0.28", "66.9112, -55.0137, -117.006, 0.55", "70.2585, -56.6019, -120.101, 0.28", "71.3138, -57.0928, -121.07, 0.55", "73.3862, -57.9648, -122.752, 0.28", "74.0917, -58.2454, -123.257, 0.55", "75.2865, -58.6806, -123.875, 0.28", "76.3553, -59.0341, -124.335, 0.55", "79.2861, -59.8464, -125.303, 0.28", "82.6388, -60.6515, -126.361, 0.28", "84.3437, -60.986, -126.784, 0.28", "86.0401, -61.2763, -127.307, 0.55", "88.5013, -61.5946, -128.081, 0.28", "89.5974, -61.7203, -128.403, 0.83", "92.4141, -62.0727, -129.123, 0.28", "93.63, -62.2528, -129.499, 0.55", "98.9654, -63.2387, -131.389, 0.28", "101.603, -63.7665, -132.536, 0.28", "103.499, -64.1537, -133.49, 0.55", "104.582, -64.4055, -134.165, 0.55", "107.414, -65.1207, -136.179, 0.28", "110.054, -65.9129, -138.169, 0.55", "112.469, -66.7093, -139.981, 0.28", "114.63, -67.466, -141.734, 0.55", "116.416, -68.0693, -143.172, 0.28", "117.883, -68.4534, -144.271, 0.55", "121.434, -69.1708, -146.759, 0.28", "123.252, -69.5283, -147.947, 0.55", "126.009, -70.0684, -149.631, 0.28", "128.268, -70.4437, -150.959, 0.55", "133.52, -71.0934, -154.073, 0.28", "135.608, -71.2433, -155.482, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-8.64241, -155.951, 113.779, 0.55", "-7.70373, -163.86, 118.056, 0.55", "-5.16735, -172.117, 120.724, 0.55", "-3.57887, -180.238, 124.364, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-8.64241, -155.951, 113.779, 0.55", "-7.24302, -165.508, 121.567, 0.55", "-8.07859, -173.974, 130.598, 0.55", "-9.59882, -180.438, 141.079, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-11.9571, -151.957, 110.772, 0.55", "-11.5015, -159.261, 115.15, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-11.9571, -151.957, 110.772, 0.55", "-13.1351, -158.564, 114.947, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "15.5168, -90.7627, 11.3849, 0.83", "16.3579, -94.1569, 12.3939, 0.83", "17.0476, -97.0089, 13.4996, 0.83", "17.7331, -99.8442, 14.5988, 0.83", "18.3841, -102.536, 15.6426, 0.83", "19.3874, -106.685, 17.2511, 0.83", "20.3834, -110.804, 18.8481, 0.83", "21.0107, -113.516, 20.3317, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "15.5168, -90.7627, 11.3849, 0.55", "17.2276, -92.7077, 11.7143, 0.55", "18.5867, -94.238, 11.6854, 0.55", "19.5543, -95.3799, 11.5364, 0.55", "20.5008, -96.7488, 11.1513, 0.83", "21.4988, -98.3222, 10.5021, 0.55", "22.475, -99.8612, 9.86714, 0.83", "23.4608, -101.546, 9.00545, 0.55", "24.0445, -102.528, 8.41247, 0.83", "25.8353, -105.726, 6.22231, 0.55", "27.0564, -108.265, 4.31397, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-19.0749, -102.622, 32.352, 0.55", "-23.6246, -110.036, 34.737, 0.55", "-29.3826, -116.719, 36.6218, 0.55", "-35.9311, -122.639, 38.4726, 0.55", "-43.3005, -127.601, 40.0311, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-19.0749, -102.622, 32.352, 0.55", "-24.5188, -111.304, 36.8114, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "21.0107, -113.516, 20.3317, 0.55", "21.0955, -116.491, 21.1839, 0.55", "21.2244, -120.279, 22.412, 0.55", "21.3595, -123.854, 23.5566, 0.55", "21.457, -126.397, 24.3213, 0.55", "21.6356, -130.939, 25.5986, 0.55", "22.4931, -143.663, 29.0534, 0.55", "22.9829, -147.959, 30.1445, 0.55", "23.4336, -150.978, 30.7997, 0.55", "24.1461, -154.407, 31.3447, 0.55", "24.8113, -157.053, 31.5481, 0.55", "26.675, -163.193, 31.9343, 0.55", "27.9632, -167.879, 32.1182, 0.55", "28.8174, -170.949, 32.3652, 0.55", "30.7493, -178.935, 33.3191, 0.55", "31.8693, -184.323, 34.1315, 0.55", "33.0923, -191.285, 35.5157, 0.55", "34.1774, -199.202, 37.6417, 0.55", "34.885, -204.471, 39.4742, 0.55", "35.3106, -207.577, 40.6719, 0.55", "35.6658, -210.449, 41.7358, 0.55", "36.2727, -214.067, 42.9833, 0.55", "38.0275, -222.772, 45.4448, 0.55", "38.8776, -226.116, 46.3677, 0.55", "39.7684, -229.853, 47.3178, 0.55", "41.0874, -235.47, 48.6914, 0.55", "41.913, -239.821, 49.6536, 0.55", "42.5397, -243.987, 50.3734, 0.55", "42.9961, -247.986, 50.9498, 0.55", "43.3536, -251.902, 51.5161, 0.55", "43.6386, -254.685, 51.9075, 0.55", "44.2254, -259.225, 52.4399, 0.55", "45.1302, -264.666, 52.6994, 0.55", "45.7491, -267.287, 52.7087, 0.55", "46.4236, -269.575, 52.5916, 0.55", "48.0198, -273.847, 52.2876, 0.55", "49.0581, -276.555, 52.0151, 0.55", "50.2868, -279.894, 51.8074, 0.55", "50.986, -282.263, 51.7217, 0.55", "52.5598, -288.453, 51.6249, 0.55", "53.4345, -293.124, 51.7498, 0.55", "54.3172, -300.406, 52.3436, 0.55", "54.6878, -305.115, 53.144, 0.55", "54.9459, -310.073, 54.0886, 0.28", "54.9594, -312.077, 54.5026, 0.28", "54.6992, -316.971, 55.8419, 0.28", "54.2036, -321.517, 57.3347, 0.28", "53.5925, -327.479, 60.1304, 0.28", "55.707, -340.444, 64.8079, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "21.0107, -113.516, 20.3317, 0.55", "21.0682, -113.923, 21.7311, 0.55", "21.0387, -115.019, 24.6478, 0.55", "20.9443, -116.121, 27.1864, 0.28", "20.7839, -117.389, 29.9242, 0.55", "20.4967, -118.232, 31.6082, 0.28", "19.7719, -119.79, 34.5639, 0.55", "19.1917, -120.659, 35.8437, 0.28", "18.9092, -120.986, 36.3144, 0.28", "18.3963, -121.467, 37.1265, 0.55", "16.5764, -123.049, 40.2771, 0.28", "15.8431, -123.666, 41.6159, 0.55", "14.0466, -125.392, 45.6532, 0.28", "13.2047, -126.227, 47.8405, 0.28", "12.3109, -127.269, 50.5628, 0.55", "11.3209, -128.826, 54.6022, 0.28", "11.2406, -129.023, 55.1457, 0.55", "11.0116, -129.955, 57.8084, 0.28", "11.0157, -130.037, 58.0478, 0.55", "11.0401, -131.042, 60.176, 0.28", "11.0077, -131.604, 61.1972, 0.55", "10.587, -135.76, 69.5883, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-43.3005, -127.601, 40.0311, 0.55", "-50.8307, -132.899, 45.8824, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-43.3005, -127.601, 40.0311, 0.55", "-49.5184, -134.849, 41.4882, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L6_BP_c202839326_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 6.22701, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -3.63339, 8.8396, 2.95882, 0.83 ) }
    dend_43 { pt3dadd( -7.24458, 11.6386, 3.50343, 1.11 ) }
    dend_43 { pt3dadd( -9.37377, 13.2878, 3.78674, 0.83 ) }
    dend_43 { pt3dadd( -11.4424, 14.8761, 4.04057, 0.83 ) }
    dend_43 { pt3dadd( -12.6671, 15.7818, 4.17966, 1.11 ) }
    dend_43 { pt3dadd( -16.5025, 18.6121, 4.62546, 1.11 ) }
    dend_43 { pt3dadd( -23.3624, 23.4575, 5.4135, 0.83 ) }
    dend_43 { pt3dadd( -25.8338, 25.1366, 5.67373, 0.83 ) }
    dend_43 { pt3dadd( -27.791, 26.4268, 5.83536, 0.83 ) }
    dend_43 { pt3dadd( -29.6994, 27.7054, 5.97528, 0.83 ) }
    dend_43 { pt3dadd( -31.2529, 28.7592, 6.05077, 0.55 ) }
    dend_43 { pt3dadd( -32.4206, 29.4728, 6.12739, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.44701, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 4.24941, 6.08977, -6.1212, 0.55 ) }
    dend_28 { pt3dadd( 6.41345, 6.5579, -6.60447, 0.55 ) }
    dend_28 { pt3dadd( 7.66916, 6.67607, -7.24394, 0.83 ) }
    dend_28 { pt3dadd( 9.65657, 6.80183, -8.43179, 0.55 ) }
    dend_28 { pt3dadd( 10.6159, 6.86254, -9.00519, 1.38 ) }
    dend_28 { pt3dadd( 12.9747, 7.0118, -10.415, 0.55 ) }
    dend_28 { pt3dadd( 13.9794, 6.96125, -11.0877, 0.83 ) }
    dend_28 { pt3dadd( 19.1763, 6.03429, -14.8674, 0.55 ) }
    dend_28 { pt3dadd( 19.6791, 5.90964, -15.2832, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -8.24299, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.678391, -9.98132, 3.05122, 1.11 ) }
    dend_1 { pt3dadd( -0.715831, -13.2846, 4.23546, 1.11 ) }
    dend_1 { pt3dadd( -0.731077, -14.63, 4.71775, 0.83 ) }
    dend_1 { pt3dadd( -0.751336, -16.4173, 5.35851, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.59701, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 1.03787, 11.1889, -1.45528, 1.11 ) }
    dend_0 { pt3dadd( 1.25421, 14.3531, -1.43699, 1.11 ) }
    dend_0 { pt3dadd( 1.60969, 19.5152, -1.21784, 1.38 ) }
    dend_0 { pt3dadd( 1.6349, 19.8026, -1.20092, 1.38 ) }
    dend_0 { pt3dadd( 2.16366, 23.3522, -0.973995, 0.83 ) }
    dend_0 { pt3dadd( 2.89223, 27.1008, -0.546524, 0.83 ) }
    dend_0 { pt3dadd( 4.12083, 31.3215, 0.417757, 0.83 ) }
    dend_0 { pt3dadd( 4.80275, 32.9163, 0.964227, 0.83 ) }
    dend_0 { pt3dadd( 5.46286, 34.0665, 1.46388, 1.11 ) }
    dend_0 { pt3dadd( 7.36367, 36.8603, 2.73508, 0.55 ) }
    dend_0 { pt3dadd( 9.57097, 39.77, 4.25804, 0.83 ) }
    dend_0 { pt3dadd( 12.4167, 42.7472, 5.95406, 0.55 ) }
    dend_0 { pt3dadd( 13.8516, 43.9769, 6.70871, 0.83 ) }
    dend_0 { pt3dadd( 15.8694, 45.6401, 7.90628, 0.55 ) }
    dend_0 { pt3dadd( 18.3848, 47.7567, 9.54824, 0.55 ) }
    dend_0 { pt3dadd( 21.9261, 50.9484, 12.0861, 0.55 ) }
    dend_0 { pt3dadd( 25.8324, 54.6006, 14.8891, 0.55 ) }
    dend_0 { pt3dadd( 28.3313, 56.9711, 17.0228, 0.55 ) }
    dend_0 { pt3dadd( 31.4359, 59.9691, 20.0751, 0.55 ) }
    dend_0 { pt3dadd( 32.0863, 60.5694, 20.7726, 0.83 ) }
    dend_0 { pt3dadd( 33.8162, 62.1553, 22.7499, 0.55 ) }
    dend_0 { pt3dadd( 35.2588, 63.3891, 24.2939, 0.83 ) }
    dend_0 { pt3dadd( 38.6038, 66.7769, 27.9646, 0.55 ) }
    dend_0 { pt3dadd( 39.8323, 68.0146, 29.0134, 0.83 ) }
    dend_0 { pt3dadd( 40.9493, 68.9213, 29.6974, 0.55 ) }
    dend_0 { pt3dadd( 42.0384, 69.6988, 30.1999, 0.83 ) }
    dend_0 { pt3dadd( 44.4246, 71.1346, 31.0704, 0.83 ) }
    dend_0 { pt3dadd( 47.5568, 73.0932, 31.952, 0.83 ) }
    dend_0 { pt3dadd( 49.4621, 74.3929, 32.2922, 0.55 ) }
    dend_0 { pt3dadd( 50.9192, 75.5227, 32.5599, 0.55 ) }
    dend_0 { pt3dadd( 54.7322, 78.4406, 33.2057, 0.83 ) }
    dend_0 { pt3dadd( 57.1856, 80.3118, 33.5262, 0.55 ) }
    dend_0 { pt3dadd( 60.8936, 83.0502, 33.8648, 0.55 ) }
    dend_0 { pt3dadd( 64.273, 85.3391, 34.0414, 0.55 ) }
    dend_0 { pt3dadd( 67.2854, 87.2743, 34.1192, 0.55 ) }
    dend_0 { pt3dadd( 71.071, 89.535, 34.0467, 0.55 ) }
    dend_0 { pt3dadd( 73.3705, 90.631, 33.9272, 0.55 ) }
    dend_0 { pt3dadd( 74.9177, 91.2407, 33.659, 0.55 ) }
    dend_0 { pt3dadd( 76.9466, 91.6739, 33.1276, 0.55 ) }
    dend_0 { pt3dadd( 79.9373, 91.8203, 32.0815, 0.55 ) }
    dend_0 { pt3dadd( 81.7888, 91.6683, 31.3548, 0.55 ) }
    dend_0 { pt3dadd( 84.512, 91.3692, 30.4887, 0.55 ) }
    dend_0 { pt3dadd( 89.7509, 90.9672, 29.3153, 0.55 ) }
    dend_0 { pt3dadd( 93.896, 90.8441, 28.6926, 0.55 ) }
    dend_0 { pt3dadd( 98.3208, 90.9239, 28.2974, 0.55 ) }
    dend_0 { pt3dadd( 101.183, 91.0715, 28.2685, 0.55 ) }
    dend_0 { pt3dadd( 108.683, 92.1228, 28.6807, 0.55 ) }
    dend_0 { pt3dadd( 113.161, 93.0806, 29.2544, 0.55 ) }
    dend_0 { pt3dadd( 116.555, 94.0127, 29.9919, 0.55 ) }
    dend_0 { pt3dadd( 118.633, 94.9104, 30.5183, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 121.048, 96.2637, 31.118, 0.55 ) }
    dend_0 { pt3dadd( 125.111, 98.9513, 31.7854, 0.55 ) }
    dend_0 { pt3dadd( 126.031, 99.6002, 31.8144, 0.55 ) }
    dend_0 { pt3dadd( 128.651, 101.332, 31.7276, 0.55 ) }
    dend_0 { pt3dadd( 131.064, 103.186, 31.6397, 0.83 ) }
    dend_0 { pt3dadd( 132.38, 104.215, 31.5714, 0.55 ) }
    dend_0 { pt3dadd( 134.348, 105.99, 31.3929, 0.83 ) }
    dend_0 { pt3dadd( 144.979, 115.456, 33.1358, 0.83 ) }
    dend_0 { pt3dadd( 154.22, 126.393, 33.9583, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -32.4206, 29.4728, 6.12739, 0.55 ) }
    dend_55 { pt3dadd( -33.5982, 30.2366, 5.43715, 0.55 ) }
    dend_55 { pt3dadd( -34.8788, 31.0672, 4.68658, 0.55 ) }
    dend_55 { pt3dadd( -36.4241, 32.0696, 3.78081, 0.55 ) }
    dend_55 { pt3dadd( -37.7002, 32.8973, 3.0329, 0.83 ) }
    dend_55 { pt3dadd( -38.7695, 33.5909, 2.40614, 0.55 ) }
    dend_55 { pt3dadd( -40.7543, 34.8783, 1.24279, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -32.4206, 29.4728, 6.12739, 0.55 ) }
    dend_44 { pt3dadd( -34.0166, 29.7578, 5.96213, 0.55 ) }
    dend_44 { pt3dadd( -35.7114, 30.0102, 5.95599, 0.55 ) }
    dend_44 { pt3dadd( -37.6323, 30.2939, 5.99602, 0.55 ) }
    dend_44 { pt3dadd( -40.4095, 30.6779, 6.31036, 0.55 ) }
    dend_44 { pt3dadd( -42.73, 30.9336, 6.74038, 0.55 ) }
    dend_44 { pt3dadd( -45.1615, 31.1655, 7.29665, 0.55 ) }
    dend_44 { pt3dadd( -47.5063, 31.2326, 8.09236, 0.55 ) }
    dend_44 { pt3dadd( -49.52, 31.0944, 8.97819, 0.55 ) }
    dend_44 { pt3dadd( -52.023, 30.7475, 10.358, 0.55 ) }
    dend_44 { pt3dadd( -53.1079, 30.5175, 11.1139, 0.55 ) }
    dend_44 { pt3dadd( -54.2788, 30.257, 11.9823, 0.55 ) }
    dend_44 { pt3dadd( -56.3451, 29.6364, 13.4204, 0.55 ) }
    dend_44 { pt3dadd( -57.4481, 29.3072, 14.0083, 0.55 ) }
    dend_44 { pt3dadd( -58.6034, 28.9263, 14.6177, 0.55 ) }
    dend_44 { pt3dadd( -59.9802, 28.4892, 15.2001, 0.55 ) }
    dend_44 { pt3dadd( -61.4773, 28.0453, 15.7908, 0.55 ) }
    dend_44 { pt3dadd( -63.6149, 27.4058, 16.5865, 0.55 ) }
    dend_44 { pt3dadd( -66.476, 26.742, 17.3858, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 19.6791, 5.90964, -15.2832, 0.55 ) }
    dend_34 { pt3dadd( 24.7584, 7.30157, -16.3699, 0.55 ) }
    dend_34 { pt3dadd( 27.6897, 7.93195, -17.4118, 0.55 ) }
    dend_34 { pt3dadd( 30.5848, 8.42348, -18.483, 0.55 ) }
    dend_34 { pt3dadd( 32.564, 8.67987, -19.2146, 0.55 ) }
    dend_34 { pt3dadd( 35.4574, 8.98705, -20.2619, 0.55 ) }
    dend_34 { pt3dadd( 41.462, 9.50824, -22.6234, 0.55 ) }
    dend_34 { pt3dadd( 48.2761, 10.0576, -25.7589, 0.55 ) }
    dend_34 { pt3dadd( 51.5839, 10.1174, -27.5102, 0.55 ) }
    dend_34 { pt3dadd( 53.3565, 10.1061, -28.5651, 0.55 ) }
    dend_34 { pt3dadd( 55.3002, 10.1033, -29.8008, 0.55 ) }
    dend_34 { pt3dadd( 58.7701, 10.0012, -31.9928, 0.55 ) }
    dend_34 { pt3dadd( 60.0313, 9.88993, -32.8313, 0.55 ) }
    dend_34 { pt3dadd( 65.3703, 9.55412, -36.7938, 0.55 ) }
    dend_34 { pt3dadd( 69.1496, 9.37804, -39.8789, 0.55 ) }
    dend_34 { pt3dadd( 71.3251, 9.31932, -41.7148, 0.55 ) }
    dend_34 { pt3dadd( 73.4951, 9.24153, -43.5444, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 19.6791, 5.90964, -15.2832, 0.83 ) }
    dend_29 { pt3dadd( 21.4424, 6.82108, -15.2349, 0.83 ) }
    dend_29 { pt3dadd( 22.4495, 7.34662, -15.2514, 0.55 ) }
    dend_29 { pt3dadd( 23.9319, 8.16631, -15.3929, 0.83 ) }
    dend_29 { pt3dadd( 24.9299, 8.7454, -15.514, 0.55 ) }
    dend_29 { pt3dadd( 26.3092, 9.57682, -15.6573, 0.83 ) }
    dend_29 { pt3dadd( 27.9714, 10.6003, -15.7673, 0.55 ) }
    dend_29 { pt3dadd( 28.8039, 11.0525, -15.7968, 0.55 ) }
    dend_29 { pt3dadd( 30.7034, 11.8283, -15.7654, 0.83 ) }
    dend_29 { pt3dadd( 32.4168, 12.3059, -15.5444, 0.55 ) }
    dend_29 { pt3dadd( 33.3755, 12.5522, -15.3327, 0.83 ) }
    dend_29 { pt3dadd( 34.8189, 12.9345, -14.8642, 0.55 ) }
    dend_29 { pt3dadd( 36.8995, 13.4878, -13.9296, 0.55 ) }
    dend_29 { pt3dadd( 39.7806, 14.0953, -12.5057, 0.55 ) }
    dend_29 { pt3dadd( 42.524, 14.5567, -10.9753, 0.55 ) }
    dend_29 { pt3dadd( 44.6963, 14.8952, -9.7276, 0.55 ) }
    dend_29 { pt3dadd( 48.2792, 15.4672, -7.65041, 0.55 ) }
    dend_29 { pt3dadd( 50.907, 15.9517, -6.06579, 0.55 ) }
    dend_29 { pt3dadd( 52.504, 16.3657, -5.03686, 0.55 ) }
    dend_29 { pt3dadd( 55.4665, 17.4139, -3.08043, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.751336, -16.4173, 5.35851, 0.83 ) }
    dend_11 { pt3dadd( -0.868849, -19.5219, 5.22313, 0.83 ) }
    dend_11 { pt3dadd( -0.983339, -22.5468, 5.09124, 0.83 ) }
    dend_11 { pt3dadd( -1.11117, -25.9239, 4.94397, 0.83 ) }
    dend_11 { pt3dadd( -1.17792, -27.6875, 4.86707, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.751336, -16.4173, 5.35851, 0.55 ) }
    dend_2 { pt3dadd( -0.111942, -18.1614, 6.56163, 0.55 ) }
    dend_2 { pt3dadd( 0.458452, -20.2968, 8.1307, 0.55 ) }
    dend_2 { pt3dadd( 0.778826, -23.0944, 10.3046, 0.55 ) }
    dend_2 { pt3dadd( 0.827257, -24.1818, 11.1801, 0.83 ) }
    dend_2 { pt3dadd( 0.69929, -26.9563, 13.736, 0.55 ) }
    dend_2 { pt3dadd( 0.515508, -28.3889, 15.0848, 0.55 ) }
    dend_2 { pt3dadd( 0.100323, -31.1748, 17.8274, 0.83 ) }
    dend_2 { pt3dadd( -0.326284, -33.2433, 19.9977, 0.55 ) }
    dend_2 { pt3dadd( -0.831055, -34.9492, 21.7633, 0.55 ) }
    dend_2 { pt3dadd( -1.86097, -38.1799, 25.0494, 0.55 ) }
    dend_2 { pt3dadd( -2.67958, -40.7548, 27.638, 0.55 ) }
    dend_2 { pt3dadd( -3.29333, -42.8191, 29.7418, 0.55 ) }
    dend_2 { pt3dadd( -3.82434, -45.0111, 31.9043, 0.28 ) }
    dend_2 { pt3dadd( -3.96877, -45.9243, 32.7687, 0.55 ) }
    dend_2 { pt3dadd( -4.19266, -47.6111, 34.2686, 0.28 ) }
    dend_2 { pt3dadd( -4.18716, -50.2447, 36.1941, 0.55 ) }
    dend_2 { pt3dadd( -6.28313, -59.0021, 43.1043, 0.55 ) }
    dend_2 { pt3dadd( -8.59591, -67.0938, 50.7208, 0.55 ) }
    dend_2 { pt3dadd( -10.3787, -73.7464, 59.7431, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -40.7543, 34.8783, 1.24279, 0.55 ) }
    dend_61 { pt3dadd( -44.2031, 35.0301, 2.7492, 0.55 ) }
    dend_61 { pt3dadd( -45.667, 34.9985, 3.54587, 0.83 ) }
    dend_61 { pt3dadd( -47.3954, 34.8554, 4.68483, 0.55 ) }
    dend_61 { pt3dadd( -48.7265, 34.7322, 5.6695, 0.83 ) }
    dend_61 { pt3dadd( -52.2128, 34.5289, 8.23419, 0.55 ) }
    dend_61 { pt3dadd( -53.5336, 34.4714, 9.21743, 0.28 ) }
    dend_61 { pt3dadd( -55.7492, 34.3781, 11.034, 0.55 ) }
    dend_61 { pt3dadd( -58.7209, 34.2709, 13.4604, 0.55 ) }
    dend_61 { pt3dadd( -60.9702, 34.2013, 15.2059, 0.55 ) }
    dend_61 { pt3dadd( -63.9681, 34.1182, 17.4478, 0.28 ) }
    dend_61 { pt3dadd( -64.7405, 34.1124, 17.9426, 0.55 ) }
    dend_61 { pt3dadd( -66.3349, 34.1248, 18.9115, 0.28 ) }
    dend_61 { pt3dadd( -67.4105, 34.1712, 19.476, 0.55 ) }
    dend_61 { pt3dadd( -69.5926, 34.2725, 20.4445, 0.28 ) }
    dend_61 { pt3dadd( -70.8688, 34.2714, 20.9411, 0.55 ) }
    dend_61 { pt3dadd( -73.1215, 34.1088, 21.8169, 0.28 ) }
    dend_61 { pt3dadd( -74.6306, 33.996, 22.3528, 0.55 ) }
    dend_61 { pt3dadd( -84.1186, 32.1397, 29.4925, 0.55 ) }
    dend_61 { pt3dadd( -92.8825, 29.086, 37.1287, 0.55 ) }
    dend_61 { pt3dadd( -101.325, 24.9182, 44.5977, 0.55 ) }
    dend_61 { pt3dadd( -109.67, 19.4612, 51.3083, 0.55 ) }
    dend_61 { pt3dadd( -116.811, 14.3146, 59.4909, 0.55 ) }
    dend_61 { pt3dadd( -124.792, 9.66721, 67.1815, 0.55 ) }
    dend_61 { pt3dadd( -132.956, 6.89375, 75.5542, 0.55 ) }
    dend_61 { pt3dadd( -141.064, 3.20554, 83.6227, 0.55 ) }
    dend_61 { pt3dadd( -148.984, 0.257173, 92.1678, 0.55 ) }
    dend_61 { pt3dadd( -156.388, -2.91269, 101.088, 0.55 ) }
    dend_61 { pt3dadd( -162.654, -7.47399, 110.274, 0.55 ) }
    dend_61 { pt3dadd( -169.052, -10.9677, 119.829, 0.55 ) }
    dend_61 { pt3dadd( -175.567, -15.5862, 128.811, 0.55 ) }
    dend_61 { pt3dadd( -180.744, -20.7822, 138.331, 0.55 ) }
    dend_61 { pt3dadd( -184.018, -25.3077, 148.973, 0.55 ) }
    dend_61 { pt3dadd( -187.141, -31.8938, 158.529, 0.55 ) }
    dend_61 { pt3dadd( -188.569, -38.7344, 168.307, 0.55 ) }
    dend_61 { pt3dadd( -190.649, -45.1003, 178.286, 0.55 ) }
    dend_61 { pt3dadd( -194.017, -50.618, 188.418, 0.55 ) }
    dend_61 { pt3dadd( -199.825, -54.222, 198.303, 0.55 ) }
    dend_61 { pt3dadd( -204.61, -59.1588, 208.161, 0.55 ) }
    dend_61 { pt3dadd( -207.267, -62.2913, 219.456, 0.55 ) }
    dend_61 { pt3dadd( -211.792, -64.4817, 230.373, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -40.7543, 34.8783, 1.24279, 0.55 ) }
    dend_56 { pt3dadd( -41.6239, 35.8258, -0.292664, 0.55 ) }
    dend_56 { pt3dadd( -42.1761, 36.8594, -1.90582, 0.55 ) }
    dend_56 { pt3dadd( -42.6469, 38.0558, -3.55832, 0.55 ) }
    dend_56 { pt3dadd( -42.9416, 38.8049, -4.5931, 0.55 ) }
    dend_56 { pt3dadd( -43.4793, 40.1714, -6.48065, 0.83 ) }
    dend_56 { pt3dadd( -43.8727, 41.1711, -7.8616, 0.55 ) }
    dend_56 { pt3dadd( -44.2136, 42.5657, -9.85109, 0.83 ) }
    dend_56 { pt3dadd( -44.2443, 43.4404, -10.9052, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -66.476, 26.742, 17.3858, 0.28 ) }
    dend_48 { pt3dadd( -67.7148, 24.4342, 17.0631, 0.28 ) }
    dend_48 { pt3dadd( -68.3113, 23.4383, 16.8433, 0.28 ) }
    dend_48 { pt3dadd( -69.0888, 22.0293, 16.4801, 0.55 ) }
    dend_48 { pt3dadd( -69.7295, 20.7915, 16.1701, 0.28 ) }
    dend_48 { pt3dadd( -70.6736, 18.907, 15.7205, 0.55 ) }
    dend_48 { pt3dadd( -73.2957, 13.3736, 14.4841, 0.28 ) }
    dend_48 { pt3dadd( -74.1571, 11.4285, 13.8967, 0.55 ) }
    dend_48 { pt3dadd( -75.4664, 8.42969, 12.8926, 0.28 ) }
    dend_48 { pt3dadd( -76.2219, 6.63357, 12.2121, 0.55 ) }
    dend_48 { pt3dadd( -76.7451, 5.39471, 11.714, 0.28 ) }
    dend_48 { pt3dadd( -77.3408, 3.97329, 11.1535, 0.55 ) }
    dend_48 { pt3dadd( -79.1378, -0.763701, 9.39221, 0.28 ) }
    dend_48 { pt3dadd( -79.705, -2.19873, 8.81048, 0.55 ) }
    dend_48 { pt3dadd( -80.7055, -4.40282, 7.70259, 0.28 ) }
    dend_48 { pt3dadd( -81.5315, -5.82088, 6.87774, 0.28 ) }
    dend_48 { pt3dadd( -82.271, -6.77152, 6.29623, 0.55 ) }
    dend_48 { pt3dadd( -84.838, -9.44228, 4.74499, 0.28 ) }
    dend_48 { pt3dadd( -86.0286, -10.5243, 4.1417, 0.55 ) }
    dend_48 { pt3dadd( -88.946, -12.9961, 2.62266, 0.28 ) }
    dend_48 { pt3dadd( -91.8638, -15.1891, 1.23186, 0.28 ) }
    dend_48 { pt3dadd( -95.0379, -17.2892, -0.19317, 0.28 ) }
    dend_48 { pt3dadd( -96.4898, -18.0834, -0.733803, 0.55 ) }
    dend_48 { pt3dadd( -103.455, -26.7212, -4.42917, 0.55 ) }
    dend_48 { pt3dadd( -111.115, -35.4265, -5.95885, 0.55 ) }
    dend_48 { pt3dadd( -118.69, -43.7221, -9.21254, 0.55 ) }
    dend_48 { pt3dadd( -126.507, -51.3207, -13.449, 0.55 ) }
    dend_48 { pt3dadd( -134.471, -58.1065, -18.6755, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -66.476, 26.742, 17.3858, 0.55 ) }
    dend_45 { pt3dadd( -67.3669, 26.6862, 17.4835, 0.55 ) }
    dend_45 { pt3dadd( -69.8852, 26.4986, 18.0827, 0.55 ) }
    dend_45 { pt3dadd( -70.8333, 26.3989, 18.3554, 0.55 ) }
    dend_45 { pt3dadd( -73.0658, 26.0943, 19.0238, 0.55 ) }
    dend_45 { pt3dadd( -76.495, 25.6771, 19.8911, 0.55 ) }
    dend_45 { pt3dadd( -78.2747, 25.5177, 20.3162, 0.28 ) }
    dend_45 { pt3dadd( -81.0454, 25.2155, 20.9177, 0.55 ) }
    dend_45 { pt3dadd( -83.1031, 24.9567, 21.2869, 0.55 ) }
    dend_45 { pt3dadd( -83.9723, 24.8416, 21.444, 0.28 ) }
    dend_45 { pt3dadd( -89.1859, 24.149, 22.3796, 0.55 ) }
    dend_45 { pt3dadd( -91.6239, 23.7293, 22.6581, 0.28 ) }
    dend_45 { pt3dadd( -94.9094, 23.1703, 22.8418, 0.28 ) }
    dend_45 { pt3dadd( -97.7377, 22.7463, 22.8401, 0.55 ) }
    dend_45 { pt3dadd( -108.76, 22.4491, 25.3746, 0.55 ) }
    dend_45 { pt3dadd( -119.436, 21.7376, 29.0525, 0.55 ) }
    dend_45 { pt3dadd( -129.556, 19.7522, 33.7044, 0.55 ) }
    dend_45 { pt3dadd( -139.33, 19.5569, 39.4002, 0.55 ) }
    dend_45 { pt3dadd( -147.735, 18.749, 46.9311, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -154.507, 18.3556, 55.9859, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 73.4951, 9.24153, -43.5444, 0.55 ) }
    dend_42 { pt3dadd( 78.3134, 10.7699, -47.4904, 0.55 ) }
    dend_42 { pt3dadd( 79.8346, 11.1876, -48.836, 0.55 ) }
    dend_42 { pt3dadd( 81.7378, 11.6462, -50.4988, 0.55 ) }
    dend_42 { pt3dadd( 85.1887, 12.4524, -53.7223, 0.55 ) }
    dend_42 { pt3dadd( 88.7876, 13.1447, -57.1806, 0.55 ) }
    dend_42 { pt3dadd( 90.5458, 13.3382, -58.8297, 0.83 ) }
    dend_42 { pt3dadd( 91.9904, 13.398, -60.3009, 0.55 ) }
    dend_42 { pt3dadd( 93.0686, 13.3534, -61.5149, 0.83 ) }
    dend_42 { pt3dadd( 95.6598, 12.8754, -64.6342, 0.55 ) }
    dend_42 { pt3dadd( 97.7906, 12.2754, -67.223, 0.55 ) }
    dend_42 { pt3dadd( 100.243, 11.5652, -70.0759, 0.55 ) }
    dend_42 { pt3dadd( 102.973, 10.8572, -73.308, 0.55 ) }
    dend_42 { pt3dadd( 104.804, 10.3384, -75.5239, 0.55 ) }
    dend_42 { pt3dadd( 106.868, 9.74799, -78.092, 0.55 ) }
    dend_42 { pt3dadd( 108.651, 9.30648, -80.4387, 0.55 ) }
    dend_42 { pt3dadd( 109.772, 9.13917, -82.0669, 0.55 ) }
    dend_42 { pt3dadd( 111.179, 8.87863, -85.3351, 0.55 ) }
    dend_42 { pt3dadd( 111.942, 8.65444, -87.3792, 0.55 ) }
    dend_42 { pt3dadd( 112.584, 8.24555, -90.0938, 0.55 ) }
    dend_42 { pt3dadd( 113.45, 7.42042, -94.6827, 0.55 ) }
    dend_42 { pt3dadd( 113.625, 7.19598, -95.718, 0.28 ) }
    dend_42 { pt3dadd( 115.895, 4.32517, -108.307, 0.28 ) }
    dend_42 { pt3dadd( 116.671, 3.50593, -112.003, 0.83 ) }
    dend_42 { pt3dadd( 119.746, 0.362181, -125.117, 0.83 ) }
    dend_42 { pt3dadd( 121.332, -1.34303, -131.213, 0.83 ) }
    dend_42 { pt3dadd( 122.101, -2.13567, -133.684, 0.55 ) }
    dend_42 { pt3dadd( 122.99, -2.92152, -136.093, 0.55 ) }
    dend_42 { pt3dadd( 125.484, -4.49897, -140.564, 0.55 ) }
    dend_42 { pt3dadd( 128.169, -5.93494, -144.496, 0.28 ) }
    dend_42 { pt3dadd( 128.994, -6.21929, -144.732, 0.55 ) }
    dend_42 { pt3dadd( 130.818, -6.72876, -144.592, 0.28 ) }
    dend_42 { pt3dadd( 131.949, -6.96606, -144.339, 0.55 ) }
    dend_42 { pt3dadd( 133.129, -7.2313, -143.974, 0.28 ) }
    dend_42 { pt3dadd( 134.548, -7.47954, -143.469, 0.55 ) }
    dend_42 { pt3dadd( 136.671, -7.73347, -142.939, 0.28 ) }
    dend_42 { pt3dadd( 138.373, -7.98899, -142.57, 0.55 ) }
    dend_42 { pt3dadd( 140.258, -8.14276, -142.311, 0.28 ) }
    dend_42 { pt3dadd( 142.819, -8.33861, -142.186, 0.55 ) }
    dend_42 { pt3dadd( 145.691, -8.48784, -142.219, 0.55 ) }
    dend_42 { pt3dadd( 148.215, -8.58555, -142.416, 0.28 ) }
    dend_42 { pt3dadd( 151.707, -8.68474, -142.882, 0.55 ) }
    dend_42 { pt3dadd( 157.742, -8.67536, -144.331, 0.55 ) }
    dend_42 { pt3dadd( 160.408, -8.52549, -145.293, 0.55 ) }
    dend_42 { pt3dadd( 161.554, -8.41053, -145.829, 0.83 ) }
    dend_42 { pt3dadd( 163.735, -8.17189, -147.052, 0.55 ) }
    dend_42 { pt3dadd( 165.248, -7.94233, -147.995, 0.83 ) }
    dend_42 { pt3dadd( 169.321, -7.21526, -150.578, 0.55 ) }
    dend_42 { pt3dadd( 171.805, -6.94342, -152.223, 0.28 ) }
    dend_42 { pt3dadd( 172.851, -6.89722, -152.798, 0.55 ) }
    dend_42 { pt3dadd( 175.714, -7.0454, -154.058, 0.28 ) }
    dend_42 { pt3dadd( 176.716, -7.19198, -154.434, 0.55 ) }
    dend_42 { pt3dadd( 178.781, -7.63132, -154.889, 0.28 ) }
    dend_42 { pt3dadd( 180.883, -8.29213, -154.989, 0.55 ) }
    dend_42 { pt3dadd( 185.132, -9.87182, -154.442, 0.28 ) }
    dend_42 { pt3dadd( 187.091, -10.6915, -153.98, 0.55 ) }
    dend_42 { pt3dadd( 190.004, -12.0825, -153.14, 0.28 ) }
    dend_42 { pt3dadd( 193.684, -13.8278, -151.945, 0.55 ) }
    dend_42 { pt3dadd( 196.347, -15.054, -151.037, 0.55 ) }
    dend_42 { pt3dadd( 200.963, -17.0332, -149.386, 0.28 ) }
    dend_42 { pt3dadd( 202.858, -17.7541, -148.864, 0.55 ) }
    dend_42 { pt3dadd( 206.124, -18.8018, -148.322, 0.28 ) }
    dend_42 { pt3dadd( 209.381, -19.5902, -148.006, 0.55 ) }
    dend_42 { pt3dadd( 211.168, -19.8139, -148.08, 0.28 ) }
    dend_42 { pt3dadd( 212.786, -19.7946, -148.271, 0.55 ) }
    dend_42 { pt3dadd( 217.353, -19.4582, -149.237, 0.28 ) }
    dend_42 { pt3dadd( 220.619, -18.9897, -149.976, 0.28 ) }
    dend_42 { pt3dadd( 223.461, -18.3735, -150.656, 0.55 ) }
    dend_42 { pt3dadd( 226.598, -17.6021, -151.566, 0.28 ) }
    dend_42 { pt3dadd( 227.39, -17.3585, -151.767, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 73.4951, 9.24153, -43.5444, 0.55 ) }
    dend_35 { pt3dadd( 74.1423, 6.81544, -45.5251, 0.55 ) }
    dend_35 { pt3dadd( 74.4949, 4.74313, -47.0449, 0.28 ) }
    dend_35 { pt3dadd( 74.8167, 2.82437, -48.2659, 0.55 ) }
    dend_35 { pt3dadd( 75.7178, -1.23733, -50.8969, 0.28 ) }
    dend_35 { pt3dadd( 75.767, -1.48851, -51.1002, 0.55 ) }
    dend_35 { pt3dadd( 76.0628, -2.79055, -52.2809, 0.28 ) }
    dend_35 { pt3dadd( 76.1997, -3.84603, -53.4404, 0.55 ) }
    dend_35 { pt3dadd( 76.2724, -4.93156, -54.7885, 0.28 ) }
    dend_35 { pt3dadd( 76.3226, -6.40322, -56.7033, 0.55 ) }
    dend_35 { pt3dadd( 76.4463, -10.108, -61.4328, 0.55 ) }
    dend_35 { pt3dadd( 76.5151, -13.4767, -65.8104, 0.55 ) }
    dend_35 { pt3dadd( 76.5399, -16.1689, -69.3131, 0.55 ) }
    dend_35 { pt3dadd( 76.5097, -18.8216, -72.7024, 0.55 ) }
    dend_35 { pt3dadd( 76.4996, -19.5109, -73.5452, 0.28 ) }
    dend_35 { pt3dadd( 76.5127, -20.2553, -74.3773, 0.55 ) }
    dend_35 { pt3dadd( 76.638, -21.2989, -75.4258, 0.28 ) }
    dend_35 { pt3dadd( 77.0714, -23.1918, -77.1214, 0.55 ) }
    dend_35 { pt3dadd( 78.2378, -26.8897, -79.7559, 0.55 ) }
    dend_35 { pt3dadd( 78.8845, -28.9004, -80.9854, 0.28 ) }
    dend_35 { pt3dadd( 79.418, -30.9335, -82.3265, 0.55 ) }
    dend_35 { pt3dadd( 79.9465, -33.7675, -84.3138, 0.28 ) }
    dend_35 { pt3dadd( 80.2189, -36.0479, -85.9719, 0.55 ) }
    dend_35 { pt3dadd( 80.4729, -39.4567, -88.4559, 0.28 ) }
    dend_35 { pt3dadd( 80.7634, -42.9972, -90.9117, 0.55 ) }
    dend_35 { pt3dadd( 81.1135, -48.1322, -94.5237, 0.28 ) }
    dend_35 { pt3dadd( 81.2372, -50.8683, -96.4576, 0.55 ) }
    dend_35 { pt3dadd( 81.3157, -53.6587, -98.5045, 0.28 ) }
    dend_35 { pt3dadd( 81.3567, -56.0971, -100.468, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 81.5177, -59.1153, -103.203, 0.55 ) }
    dend_35 { pt3dadd( 81.8751, -61.9223, -105.666, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 55.4665, 17.4139, -3.08043, 0.55 ) }
    dend_31 { pt3dadd( 58.3414, 16.8428, -2.37168, 0.55 ) }
    dend_31 { pt3dadd( 60.4334, 16.3387, -2.0571, 0.55 ) }
    dend_31 { pt3dadd( 65.0122, 15.1745, -1.61258, 0.55 ) }
    dend_31 { pt3dadd( 67.0702, 14.6023, -1.5998, 0.55 ) }
    dend_31 { pt3dadd( 69.3217, 14.0236, -1.70413, 0.55 ) }
    dend_31 { pt3dadd( 72.3523, 13.2949, -2.06466, 0.55 ) }
    dend_31 { pt3dadd( 75.5457, 12.4315, -2.75273, 0.55 ) }
    dend_31 { pt3dadd( 77.2223, 11.9507, -3.30915, 0.55 ) }
    dend_31 { pt3dadd( 80.6347, 10.9598, -4.91567, 0.55 ) }
    dend_31 { pt3dadd( 82.2079, 10.5153, -5.70694, 0.55 ) }
    dend_31 { pt3dadd( 85.8891, 9.39915, -7.657, 0.55 ) }
    dend_31 { pt3dadd( 88.3733, 8.54099, -8.95446, 0.55 ) }
    dend_31 { pt3dadd( 90.1997, 7.89986, -9.82343, 0.83 ) }
    dend_31 { pt3dadd( 93.1078, 6.76449, -11.1753, 0.55 ) }
    dend_31 { pt3dadd( 95.9424, 5.51158, -12.3817, 0.83 ) }
    dend_31 { pt3dadd( 98.3367, 4.33569, -13.3136, 0.55 ) }
    dend_31 { pt3dadd( 100.47, 3.3248, -14.0269, 0.55 ) }
    dend_31 { pt3dadd( 101.687, 2.80728, -14.3637, 0.83 ) }
    dend_31 { pt3dadd( 104.528, 1.61237, -14.9941, 0.28 ) }
    dend_31 { pt3dadd( 105.946, 1.08147, -15.2154, 0.28 ) }
    dend_31 { pt3dadd( 107.31, 0.475491, -15.5014, 0.28 ) }
    dend_31 { pt3dadd( 108.788, -0.138579, -15.8182, 0.28 ) }
    dend_31 { pt3dadd( 111.158, -1.07619, -16.3771, 0.28 ) }
    dend_31 { pt3dadd( 112.112, -1.44045, -16.5727, 0.55 ) }
    dend_31 { pt3dadd( 114.395, -2.28134, -16.809, 0.55 ) }
    dend_31 { pt3dadd( 118.5, -3.83044, -17.0187, 0.55 ) }
    dend_31 { pt3dadd( 119.632, -4.289, -17.0243, 0.55 ) }
    dend_31 { pt3dadd( 120.641, -4.73179, -16.9834, 0.83 ) }
    dend_31 { pt3dadd( 122.836, -5.61812, -16.711, 0.55 ) }
    dend_31 { pt3dadd( 124.744, -6.38386, -16.4425, 0.55 ) }
    dend_31 { pt3dadd( 126.548, -7.09918, -16.1801, 0.55 ) }
    dend_31 { pt3dadd( 127.943, -7.67963, -16.0176, 0.55 ) }
    dend_31 { pt3dadd( 130.141, -8.76429, -15.8704, 0.55 ) }
    dend_31 { pt3dadd( 132.71, -10.2867, -15.8437, 0.55 ) }
    dend_31 { pt3dadd( 136.659, -13.1377, -16.0921, 0.55 ) }
    dend_31 { pt3dadd( 138.795, -15.0501, -16.3714, 0.55 ) }
    dend_31 { pt3dadd( 140.614, -17.0565, -16.7102, 0.28 ) }
    dend_31 { pt3dadd( 141.144, -17.7886, -16.8444, 0.55 ) }
    dend_31 { pt3dadd( 142.276, -19.8135, -17.2053, 0.28 ) }
    dend_31 { pt3dadd( 143.201, -22.0588, -17.5693, 0.55 ) }
    dend_31 { pt3dadd( 144.005, -24.83, -17.8137, 0.55 ) }
    dend_31 { pt3dadd( 144.552, -26.6504, -17.8903, 0.28 ) }
    dend_31 { pt3dadd( 144.754, -27.2933, -17.8869, 0.55 ) }
    dend_31 { pt3dadd( 145.286, -28.8918, -17.8569, 0.28 ) }
    dend_31 { pt3dadd( 146.021, -30.9731, -17.769, 0.55 ) }
    dend_31 { pt3dadd( 147.977, -35.9972, -17.4349, 0.55 ) }
    dend_31 { pt3dadd( 149.005, -38.5306, -17.2149, 0.55 ) }
    dend_31 { pt3dadd( 149.962, -40.8527, -16.9931, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 55.4665, 17.4139, -3.08043, 0.55 ) }
    dend_30 { pt3dadd( 56.616, 17.4278, -2.18929, 0.55 ) }
    dend_30 { pt3dadd( 56.985, 17.4324, -1.92392, 0.55 ) }
    dend_30 { pt3dadd( 58.3577, 17.3884, -1.00051, 0.55 ) }
    dend_30 { pt3dadd( 59.8914, 17.3677, 0.0559129, 0.55 ) }
    dend_30 { pt3dadd( 61.8557, 17.3326, 1.46189, 0.55 ) }
    dend_30 { pt3dadd( 62.3983, 17.3239, 1.84665, 0.55 ) }
    dend_30 { pt3dadd( 63.3703, 17.2714, 2.5239, 0.55 ) }
    dend_30 { pt3dadd( 64.4379, 17.2417, 3.22812, 0.55 ) }
    dend_30 { pt3dadd( 65.6821, 17.2464, 3.99409, 0.55 ) }
    dend_30 { pt3dadd( 66.8553, 17.267, 4.72163, 0.55 ) }
    dend_30 { pt3dadd( 67.5011, 17.3099, 5.09362, 0.55 ) }
    dend_30 { pt3dadd( 68.2603, 17.3821, 5.5311, 0.55 ) }
    dend_30 { pt3dadd( 69.2011, 17.4997, 6.058, 0.83 ) }
    dend_30 { pt3dadd( 70.7454, 17.7017, 6.76063, 0.55 ) }
    dend_30 { pt3dadd( 71.7669, 17.7995, 7.17349, 0.83 ) }
    dend_30 { pt3dadd( 73.1831, 17.8748, 7.69231, 0.55 ) }
    dend_30 { pt3dadd( 73.6169, 17.8749, 7.84321, 0.55 ) }
    dend_30 { pt3dadd( 74.9603, 17.8113, 8.2772, 0.55 ) }
    dend_30 { pt3dadd( 77.3589, 17.5609, 8.94426, 0.55 ) }
    dend_30 { pt3dadd( 79.1112, 17.2835, 9.38332, 0.55 ) }
    dend_30 { pt3dadd( 80.4945, 16.9969, 9.75742, 0.55 ) }
    dend_30 { pt3dadd( 81.9002, 16.6265, 10.1803, 0.55 ) }
    dend_30 { pt3dadd( 82.1955, 16.5404, 10.27, 0.28 ) }
    dend_30 { pt3dadd( 82.7931, 16.3419, 10.4481, 0.83 ) }
    dend_30 { pt3dadd( 85.2446, 15.4896, 11.1907, 0.55 ) }
    dend_30 { pt3dadd( 86.9603, 14.8981, 11.6766, 0.55 ) }
    dend_30 { pt3dadd( 88.3696, 14.4457, 12.1148, 0.55 ) }
    dend_30 { pt3dadd( 89.2114, 14.1722, 12.3846, 0.83 ) }
    dend_30 { pt3dadd( 89.8745, 13.9665, 12.5991, 0.28 ) }
    dend_30 { pt3dadd( 90.4762, 13.7813, 12.788, 0.55 ) }
    dend_30 { pt3dadd( 95.21, 13.4358, 15.0568, 0.55 ) }
    dend_30 { pt3dadd( 100.198, 12.3572, 16.3365, 0.55 ) }
    dend_30 { pt3dadd( 105.192, 11.8914, 17.9219, 0.55 ) }
    dend_30 { pt3dadd( 109.596, 10.6335, 20.5102, 0.55 ) }
    dend_30 { pt3dadd( 113.644, 8.67894, 23.2425, 0.55 ) }
    dend_30 { pt3dadd( 118.059, 6.08497, 24.4516, 0.55 ) }
    dend_30 { pt3dadd( 122.378, 3.09538, 24.732, 0.55 ) }
    dend_30 { pt3dadd( 127.21, 1.01684, 24.8003, 0.55 ) }
    dend_30 { pt3dadd( 131.979, -1.16772, 25.2081, 0.55 ) }
    dend_30 { pt3dadd( 136.986, -2.77477, 25.345, 0.55 ) }
    dend_30 { pt3dadd( 141.978, -4.2126, 26.1773, 0.55 ) }
    dend_30 { pt3dadd( 146.591, -6.53071, 27.1843, 0.55 ) }
    dend_30 { pt3dadd( 151.379, -7.99296, 28.8013, 0.55 ) }
    dend_30 { pt3dadd( 155.99, -8.74304, 31.2194, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -1.17792, -27.6875, 4.86707, 1.38 ) }
    dend_13 { pt3dadd( 1.41536, -29.9604, 5.18474, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -1.17792, -27.6875, 4.86707, 0.55 ) }
    dend_12 { pt3dadd( -2.15287, -29.2029, 4.49131, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -3.21047, -31.1289, 4.08406, 0.55 ) }
    dend_12 { pt3dadd( -4.05573, -32.4164, 3.77128, 0.55 ) }
    dend_12 { pt3dadd( -4.71681, -33.4927, 3.38142, 0.55 ) }
    dend_12 { pt3dadd( -6.09985, -35.7292, 2.36118, 0.55 ) }
    dend_12 { pt3dadd( -7.06151, -37.2277, 1.60931, 0.55 ) }
    dend_12 { pt3dadd( -7.89859, -38.5703, 0.899588, 0.55 ) }
    dend_12 { pt3dadd( -10.0643, -41.8508, -0.926175, 0.55 ) }
    dend_12 { pt3dadd( -12.6888, -45.6595, -3.097, 0.55 ) }
    dend_12 { pt3dadd( -14.7075, -48.549, -4.82543, 0.55 ) }
    dend_12 { pt3dadd( -15.9818, -50.4422, -5.95133, 0.55 ) }
    dend_12 { pt3dadd( -17.4387, -52.7063, -7.23459, 0.55 ) }
    dend_12 { pt3dadd( -19.2711, -55.9268, -8.82025, 0.55 ) }
    dend_12 { pt3dadd( -20.3243, -58.1863, -9.70683, 0.55 ) }
    dend_12 { pt3dadd( -21.6508, -61.4124, -10.6335, 0.55 ) }
    dend_12 { pt3dadd( -22.696, -64.4151, -11.3045, 0.55 ) }
    dend_12 { pt3dadd( -23.7059, -68.1345, -11.9386, 0.55 ) }
    dend_12 { pt3dadd( -24.6136, -72.474, -12.4551, 0.55 ) }
    dend_12 { pt3dadd( -25.0447, -75.7658, -12.6563, 0.55 ) }
    dend_12 { pt3dadd( -25.1987, -77.3954, -12.6171, 0.55 ) }
    dend_12 { pt3dadd( -25.4304, -81.2066, -12.2471, 0.55 ) }
    dend_12 { pt3dadd( -25.6246, -84.7678, -11.791, 0.55 ) }
    dend_12 { pt3dadd( -25.7524, -88.3411, -11.0171, 0.55 ) }
    dend_12 { pt3dadd( -25.8881, -90.393, -10.4781, 0.55 ) }
    dend_12 { pt3dadd( -26.3613, -96.7345, -8.58168, 0.55 ) }
    dend_12 { pt3dadd( -26.4022, -97.2017, -8.43567, 0.55 ) }
    dend_12 { pt3dadd( -26.6295, -100.059, -7.45622, 0.55 ) }
    dend_12 { pt3dadd( -27.3012, -105.187, -5.68507, 0.55 ) }
    dend_12 { pt3dadd( -27.4961, -106.903, -5.19034, 0.55 ) }
    dend_12 { pt3dadd( -27.6865, -109.589, -4.86501, 0.55 ) }
    dend_12 { pt3dadd( -27.6468, -110.585, -4.94398, 0.55 ) }
    dend_12 { pt3dadd( -27.1347, -113.941, -5.73679, 0.55 ) }
    dend_12 { pt3dadd( -26.5161, -116.105, -6.62734, 0.55 ) }
    dend_12 { pt3dadd( -25.1742, -119.543, -8.65977, 0.55 ) }
    dend_12 { pt3dadd( -23.2491, -123.734, -11.3833, 0.28 ) }
    dend_12 { pt3dadd( -22.7039, -124.769, -12.1812, 0.55 ) }
    dend_12 { pt3dadd( -21.819, -126.337, -13.5181, 0.28 ) }
    dend_12 { pt3dadd( -21.6828, -126.573, -13.7322, 0.55 ) }
    dend_12 { pt3dadd( -20.9877, -127.869, -14.8038, 0.28 ) }
    dend_12 { pt3dadd( -20.8189, -128.311, -15.0846, 0.55 ) }
    dend_12 { pt3dadd( -20.1607, -130.617, -16.1513, 0.28 ) }
    dend_12 { pt3dadd( -19.9686, -131.404, -16.5167, 0.55 ) }
    dend_12 { pt3dadd( -19.4888, -133.682, -17.4647, 0.28 ) }
    dend_12 { pt3dadd( -19.3359, -134.399, -17.7594, 0.55 ) }
    dend_12 { pt3dadd( -18.8422, -136.875, -18.7471, 0.28 ) }
    dend_12 { pt3dadd( -18.6073, -138.013, -19.2045, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -10.3787, -73.7464, 59.7431, 0.55 ) }
    dend_10 { pt3dadd( -12.6866, -78.598, 63.1622, 0.55 ) }
    dend_10 { pt3dadd( -15.7598, -83.1348, 66.4069, 0.55 ) }
    dend_10 { pt3dadd( -18.4411, -88.003, 69.516, 0.55 ) }
    dend_10 { pt3dadd( -21.1673, -92.927, 72.4955, 0.55 ) }
    dend_10 { pt3dadd( -22.9261, -98.2969, 75.4326, 0.55 ) }
    dend_10 { pt3dadd( -24.8228, -103.458, 78.6451, 0.55 ) }
    dend_10 { pt3dadd( -25.2872, -109.297, 81.1444, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -10.3787, -73.7464, 59.7431, 0.55 ) }
    dend_3 { pt3dadd( -9.57558, -82.6938, 68.6651, 0.55 ) }
    dend_3 { pt3dadd( -8.04778, -93.013, 75.8401, 0.55 ) }
    dend_3 { pt3dadd( -8.53735, -103.556, 82.8341, 0.55 ) }
    dend_3 { pt3dadd( -9.63039, -114.761, 88.6266, 0.55 ) }
    dend_3 { pt3dadd( -10.2325, -125.883, 94.6459, 0.55 ) }
    dend_3 { pt3dadd( -10.8231, -136.542, 101.453, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -44.2443, 43.4404, -10.9052, 0.83 ) }
    dend_60 { pt3dadd( -43.4576, 45.7642, -11.8058, 0.83 ) }
    dend_60 { pt3dadd( -41.7788, 51.2534, -13.7256, 0.55 ) }
    dend_60 { pt3dadd( -41.1057, 53.5659, -14.4177, 0.83 ) }
    dend_60 { pt3dadd( -40.4257, 55.9915, -15.0368, 0.55 ) }
    dend_60 { pt3dadd( -39.8267, 58.3837, -15.4208, 0.55 ) }
    dend_60 { pt3dadd( -39.5638, 59.5384, -15.4953, 0.28 ) }
    dend_60 { pt3dadd( -39.488, 60.2425, -15.4108, 0.55 ) }
    dend_60 { pt3dadd( -39.3365, 62.4213, -14.6819, 0.28 ) }
    dend_60 { pt3dadd( -39.2659, 63.3362, -14.319, 0.55 ) }
    dend_60 { pt3dadd( -39.1053, 66.4674, -12.9528, 0.28 ) }
    dend_60 { pt3dadd( -39.0727, 68.9158, -11.8158, 0.55 ) }
    dend_60 { pt3dadd( -39.2506, 72.6913, -9.99811, 0.28 ) }
    dend_60 { pt3dadd( -39.5498, 75.9833, -8.38438, 0.28 ) }
    dend_60 { pt3dadd( -39.8407, 77.8102, -7.48833, 0.55 ) }
    dend_60 { pt3dadd( -40.3245, 79.9735, -6.47765, 0.28 ) }
    dend_60 { pt3dadd( -40.6315, 80.9987, -6.00822, 0.55 ) }
    dend_60 { pt3dadd( -41.4503, 83.4516, -5.06411, 0.28 ) }
    dend_60 { pt3dadd( -42.0763, 85.1182, -4.56042, 0.28 ) }
    dend_60 { pt3dadd( -42.708, 86.7738, -4.12653, 0.28 ) }
    dend_60 { pt3dadd( -43.0072, 87.6506, -3.8877, 0.55 ) }
    dend_60 { pt3dadd( -43.9991, 91.2345, -2.92656, 0.28 ) }
    dend_60 { pt3dadd( -45.008, 95.513, -1.80668, 0.55 ) }
    dend_60 { pt3dadd( -45.3334, 96.9934, -1.41705, 0.55 ) }
    dend_60 { pt3dadd( -45.6938, 98.4649, -1.00606, 0.55 ) }
    dend_60 { pt3dadd( -46.6037, 101.606, -0.242848, 0.55 ) }
    dend_60 { pt3dadd( -47.3145, 103.681, 0.166916, 0.28 ) }
    dend_60 { pt3dadd( -47.6679, 104.468, 0.278062, 0.55 ) }
    dend_60 { pt3dadd( -48.7854, 106.577, 0.563602, 0.28 ) }
    dend_60 { pt3dadd( -50.0332, 108.852, 0.750573, 0.55 ) }
    dend_60 { pt3dadd( -52.0758, 112.161, 0.788759, 0.28 ) }
    dend_60 { pt3dadd( -53.0553, 113.554, 0.708619, 0.28 ) }
    dend_60 { pt3dadd( -54.5856, 115.554, 0.332078, 0.55 ) }
    dend_60 { pt3dadd( -56.2704, 117.671, -0.205246, 0.28 ) }
    dend_60 { pt3dadd( -56.5743, 118.008, -0.321427, 0.55 ) }
    dend_60 { pt3dadd( -57.6635, 119.091, -0.781759, 0.28 ) }
    dend_60 { pt3dadd( -61.4291, 122.561, -2.39052, 0.55 ) }
    dend_60 { pt3dadd( -66.5587, 126.978, -5.0051, 0.28 ) }
    dend_60 { pt3dadd( -67.4807, 127.753, -5.56947, 0.55 ) }
    dend_60 { pt3dadd( -69.9877, 129.79, -7.20343, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -71.0282, 130.642, -7.9254, 0.28 ) }
    dend_60 { pt3dadd( -71.914, 131.374, -8.60848, 0.55 ) }
    dend_60 { pt3dadd( -74.4008, 133.249, -10.9572, 0.28 ) }
    dend_60 { pt3dadd( -76.1695, 134.327, -12.6185, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -44.2443, 43.4404, -10.9052, 0.55 ) }
    dend_57 { pt3dadd( -44.3609, 44.8129, -10.9439, 0.55 ) }
    dend_57 { pt3dadd( -44.4574, 45.616, -10.8947, 0.28 ) }
    dend_57 { pt3dadd( -44.6535, 46.1798, -10.7318, 0.55 ) }
    dend_57 { pt3dadd( -45.1038, 47.4744, -10.3577, 0.28 ) }
    dend_57 { pt3dadd( -45.4202, 48.3837, -10.095, 0.55 ) }
    dend_57 { pt3dadd( -46.0033, 50.0601, -9.61066, 0.28 ) }
    dend_57 { pt3dadd( -46.4231, 50.9452, -9.2026, 0.55 ) }
    dend_57 { pt3dadd( -48.1424, 52.9934, -7.5292, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -134.471, -58.1065, -18.6755, 0.55 ) }
    dend_52 { pt3dadd( -138.894, -63.4927, -21.3778, 0.55 ) }
    dend_52 { pt3dadd( -142.178, -69.3105, -24.7312, 0.55 ) }
    dend_52 { pt3dadd( -144.988, -74.3422, -29.4918, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -134.471, -58.1065, -18.6755, 0.55 ) }
    dend_49 { pt3dadd( -139.739, -65.1563, -20.5771, 0.55 ) }
    dend_49 { pt3dadd( -144.004, -72.626, -23.2377, 0.55 ) }
    dend_49 { pt3dadd( -147.896, -80.2735, -25.9645, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -154.507, 18.3556, 55.9859, 0.55 ) }
    dend_47 { pt3dadd( -165.644, 17.345, 62.8512, 0.55 ) }
    dend_47 { pt3dadd( -177.193, 18.327, 69.0031, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -154.507, 18.3556, 55.9859, 0.55 ) }
    dend_46 { pt3dadd( -167.229, 16.612, 60.3697, 0.55 ) }
    dend_46 { pt3dadd( -179.99, 17.1039, 64.9544, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 81.8751, -61.9223, -105.666, 0.28 ) }
    dend_39 { pt3dadd( 90.0166, -65.4017, -118.685, 0.28 ) }
    dend_39 { pt3dadd( 90.7949, -65.8322, -119.857, 0.55 ) }
    dend_39 { pt3dadd( 92.1089, -66.559, -121.837, 0.28 ) }
    dend_39 { pt3dadd( 93.2153, -67.171, -123.504, 0.28 ) }
    dend_39 { pt3dadd( 94.6798, -67.9812, -125.71, 0.55 ) }
    dend_39 { pt3dadd( 96.6107, -69.0493, -128.619, 0.55 ) }
    dend_39 { pt3dadd( 98.8094, -71.3567, -130.279, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 81.8751, -61.9223, -105.666, 0.55 ) }
    dend_36 { pt3dadd( 82.8223, -63.5242, -107.6, 0.55 ) }
    dend_36 { pt3dadd( 83.099, -64.2412, -108.461, 0.28 ) }
    dend_36 { pt3dadd( 83.4999, -65.4663, -109.966, 0.55 ) }
    dend_36 { pt3dadd( 84.3831, -68.1651, -113.283, 0.28 ) }
    dend_36 { pt3dadd( 84.9952, -70.0355, -115.582, 0.55 ) }
    dend_36 { pt3dadd( 86.0322, -73.2043, -119.477, 0.28 ) }
    dend_36 { pt3dadd( 87.175, -77.042, -124.583, 0.28 ) }
    dend_36 { pt3dadd( 87.614, -78.8014, -126.972, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 149.962, -40.8527, -16.9931, 0.28 ) }
    dend_33 { pt3dadd( 151.057, -42.6217, -16.3945, 0.28 ) }
    dend_33 { pt3dadd( 152.421, -44.9423, -15.4124, 0.28 ) }
    dend_33 { pt3dadd( 153.277, -46.4428, -14.7145, 0.55 ) }
    dend_33 { pt3dadd( 153.8, -47.2708, -14.2832, 0.28 ) }
    dend_33 { pt3dadd( 154.078, -47.716, -14.0468, 0.28 ) }
    dend_33 { pt3dadd( 155.456, -49.9173, -12.9147, 0.55 ) }
    dend_33 { pt3dadd( 155.772, -50.4025, -12.5957, 0.28 ) }
    dend_33 { pt3dadd( 156.499, -51.6701, -11.6721, 0.55 ) }
    dend_33 { pt3dadd( 157.119, -52.7752, -10.9187, 0.28 ) }
    dend_33 { pt3dadd( 157.67, -53.6772, -10.321, 0.55 ) }
    dend_33 { pt3dadd( 158.316, -54.7607, -9.67821, 0.55 ) }
    dend_33 { pt3dadd( 159.356, -56.4994, -8.88326, 0.55 ) }
    dend_33 { pt3dadd( 159.607, -56.9269, -8.70454, 0.55 ) }
    dend_33 { pt3dadd( 160.496, -58.5228, -8.05908, 0.28 ) }
    dend_33 { pt3dadd( 160.837, -59.1751, -7.81485, 0.55 ) }
    dend_33 { pt3dadd( 161.323, -60.011, -7.50223, 0.28 ) }
    dend_33 { pt3dadd( 162.01, -61.2017, -7.11437, 0.55 ) }
    dend_33 { pt3dadd( 163.174, -63.1034, -6.77628, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 149.962, -40.8527, -16.9931, 0.55 ) }
    dend_32 { pt3dadd( 148.049, -40.616, -17.1549, 0.55 ) }
    dend_32 { pt3dadd( 146.495, -40.4238, -17.2862, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 1.41536, -29.9604, 5.18474, 0.83 ) }
    dend_17 { pt3dadd( 1.56107, -30.2024, 5.23393, 0.83 ) }
    dend_17 { pt3dadd( 3.08477, -32.3057, 5.95287, 0.83 ) }
    dend_17 { pt3dadd( 4.48212, -34.1464, 6.4637, 0.55 ) }
    dend_17 { pt3dadd( 5.59691, -35.6149, 6.87124, 0.55 ) }
    dend_17 { pt3dadd( 7.96644, -38.7362, 7.73747, 0.83 ) }
    dend_17 { pt3dadd( 10.8405, -42.5222, 8.78815, 0.55 ) }
    dend_17 { pt3dadd( 12.3754, -44.4975, 9.40279, 0.83 ) }
    dend_17 { pt3dadd( 14.9703, -47.6117, 10.6354, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 1.41536, -29.9604, 5.18474, 0.55 ) }
    dend_14 { pt3dadd( 1.34206, -31.0653, 2.25894, 0.55 ) }
    dend_14 { pt3dadd( 1.26338, -32.2512, -0.881545, 0.55 ) }
    dend_14 { pt3dadd( 1.1705, -33.6512, -4.58892, 0.55 ) }
    dend_14 { pt3dadd( 1.05772, -35.3512, -9.09087, 0.55 ) }
    dend_14 { pt3dadd( 0.993715, -36.3159, -11.6456, 0.55 ) }
    dend_14 { pt3dadd( 0.980857, -36.5097, -12.1588, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -10.8231, -136.542, 101.453, 0.55 ) }
    dend_7 { pt3dadd( -10.5027, -145.947, 108.224, 0.55 ) }
    dend_7 { pt3dadd( -8.64241, -155.951, 113.779, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -10.8231, -136.542, 101.453, 0.55 ) }
    dend_4 { pt3dadd( -11.177, -144.336, 105.995, 0.55 ) }
    dend_4 { pt3dadd( -11.9571, -151.957, 110.772, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -48.1424, 52.9934, -7.5292, 0.28 ) }
    dend_59 { pt3dadd( -49.9285, 54.0677, -6.01615, 0.28 ) }
    dend_59 { pt3dadd( -50.623, 54.4519, -5.37305, 0.55 ) }
    dend_59 { pt3dadd( -52.6264, 55.5531, -3.46797, 0.28 ) }
    dend_59 { pt3dadd( -53.596, 56.1277, -2.61249, 0.55 ) }
    dend_59 { pt3dadd( -56.2156, 57.7107, -0.384768, 0.28 ) }
    dend_59 { pt3dadd( -58.8781, 59.3195, 1.87941, 0.55 ) }
    dend_59 { pt3dadd( -63.2859, 61.7664, 5.59801, 0.28 ) }
    dend_59 { pt3dadd( -64.2248, 62.2939, 6.39276, 0.55 ) }
    dend_59 { pt3dadd( -66.2761, 63.5869, 8.11251, 0.28 ) }
    dend_59 { pt3dadd( -67.0786, 64.1345, 8.80173, 0.55 ) }
    dend_59 { pt3dadd( -75.5238, 67.4138, 13.7763, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -84.0475, 72.4544, 16.7364, 0.55 ) }
    dend_59 { pt3dadd( -91.9329, 77.3412, 21.2928, 0.55 ) }
    dend_59 { pt3dadd( -98.5259, 83.4506, 26.3947, 0.55 ) }
    dend_59 { pt3dadd( -105.933, 89.4075, 30.4532, 0.55 ) }
    dend_59 { pt3dadd( -114.36, 93.5957, 34.727, 0.55 ) }
    dend_59 { pt3dadd( -122.522, 96.5856, 40.3176, 0.55 ) }
    dend_59 { pt3dadd( -130.114, 98.1652, 47.1508, 0.55 ) }
    dend_59 { pt3dadd( -137.661, 100.401, 53.8495, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -48.1424, 52.9934, -7.5292, 0.55 ) }
    dend_58 { pt3dadd( -51.7501, 51.7814, -6.67117, 0.55 ) }
    dend_58 { pt3dadd( -53.6258, 51.092, -6.23636, 0.28 ) }
    dend_58 { pt3dadd( -55.0216, 50.5789, -5.91279, 0.55 ) }
    dend_58 { pt3dadd( -56.185, 50.1513, -5.64311, 0.28 ) }
    dend_58 { pt3dadd( -56.9998, 49.8518, -5.45421, 0.55 ) }
    dend_58 { pt3dadd( -59.2467, 49.0259, -4.93334, 0.28 ) }
    dend_58 { pt3dadd( -60.7223, 48.3775, -4.78309, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -144.988, -74.3422, -29.4918, 0.55 ) }
    dend_54 { pt3dadd( -148.216, -81.4832, -31.6117, 0.55 ) }
    dend_54 { pt3dadd( -151.169, -88.9334, -32.9086, 0.55 ) }
    dend_54 { pt3dadd( -153.701, -96.1312, -35.6812, 0.55 ) }
    dend_54 { pt3dadd( -156.907, -103.413, -37.2916, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -144.988, -74.3422, -29.4918, 0.55 ) }
    dend_53 { pt3dadd( -148.465, -78.4932, -34.8585, 0.55 ) }
    dend_53 { pt3dadd( -151.562, -81.7236, -41.0306, 0.55 ) }
    dend_53 { pt3dadd( -155.305, -85.7253, -46.3313, 0.55 ) }
    dend_53 { pt3dadd( -160.518, -88.4695, -51.1696, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -147.896, -80.2735, -25.9645, 0.55 ) }
    dend_51 { pt3dadd( -151.156, -85.3753, -30.5555, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -147.896, -80.2735, -25.9645, 0.55 ) }
    dend_50 { pt3dadd( -152.151, -89.6544, -23.8656, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 98.8094, -71.3567, -130.279, 0.28 ) }
    dend_41 { pt3dadd( 100.43, -72.6162, -131.387, 0.28 ) }
    dend_41 { pt3dadd( 101.182, -73.2012, -131.902, 0.55 ) }
    dend_41 { pt3dadd( 102.617, -74.3169, -132.883, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 98.8094, -71.3567, -130.279, 0.55 ) }
    dend_40 { pt3dadd( 98.219, -72.356, -132.222, 0.55 ) }
    dend_40 { pt3dadd( 97.038, -74.3549, -136.109, 0.28 ) }
    dend_40 { pt3dadd( 96.6533, -75.006, -137.375, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 87.614, -78.8014, -126.972, 0.28 ) }
    dend_38 { pt3dadd( 88.4939, -81.505, -130.983, 0.28 ) }
    dend_38 { pt3dadd( 88.9296, -82.8437, -132.969, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 87.614, -78.8014, -126.972, 0.55 ) }
    dend_37 { pt3dadd( 84.9507, -79.1249, -126.582, 0.55 ) }
    dend_37 { pt3dadd( 77.5242, -80.027, -125.496, 0.28 ) }
    dend_37 { pt3dadd( 75.76, -80.2413, -125.237, 0.55 ) }
    dend_37 { pt3dadd( 70.934, -80.8275, -124.531, 0.28 ) }
    dend_37 { pt3dadd( 67.8231, -81.2054, -124.076, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 14.9703, -47.6117, 10.6354, 0.83 ) }
    dend_23 { pt3dadd( 15.0355, -47.8169, 10.6341, 0.83 ) }
    dend_23 { pt3dadd( 15.8744, -50.4998, 10.7043, 0.83 ) }
    dend_23 { pt3dadd( 16.281, -52.5419, 10.7539, 0.83 ) }
    dend_23 { pt3dadd( 16.4377, -54.5446, 10.8823, 0.83 ) }
    dend_23 { pt3dadd( 16.4502, -57.2342, 11.1571, 0.83 ) }
    dend_23 { pt3dadd( 16.329, -60.3508, 11.5131, 0.83 ) }
    dend_23 { pt3dadd( 16.0965, -63.8393, 12.0636, 0.83 ) }
    dend_23 { pt3dadd( 15.7784, -67.2368, 12.722, 0.83 ) }
    dend_23 { pt3dadd( 15.2344, -71.4373, 13.2927, 0.83 ) }
    dend_23 { pt3dadd( 14.9673, -73.3744, 13.4066, 0.83 ) }
    dend_23 { pt3dadd( 14.816, -74.8268, 13.4173, 0.83 ) }
    dend_23 { pt3dadd( 14.515, -77.6174, 13.3567, 0.83 ) }
    dend_23 { pt3dadd( 14.3719, -80.1017, 13.2294, 0.83 ) }
    dend_23 { pt3dadd( 14.6402, -85.3293, 12.6646, 0.83 ) }
    dend_23 { pt3dadd( 15.037, -88.1627, 12.0789, 0.83 ) }
    dend_23 { pt3dadd( 15.5168, -90.7627, 11.3849, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 14.9703, -47.6117, 10.6354, 0.55 ) }
    dend_18 { pt3dadd( 14.3532, -50.1405, 10.1694, 0.55 ) }
    dend_18 { pt3dadd( 13.8056, -51.9846, 9.92097, 0.55 ) }
    dend_18 { pt3dadd( 13.4108, -53.1646, 9.87026, 0.55 ) }
    dend_18 { pt3dadd( 12.7554, -55.0076, 9.97779, 0.55 ) }
    dend_18 { pt3dadd( 11.3934, -58.6544, 10.4242, 0.55 ) }
    dend_18 { pt3dadd( 10.1701, -61.429, 10.9803, 0.55 ) }
    dend_18 { pt3dadd( 9.05489, -63.6617, 11.6072, 0.55 ) }
    dend_18 { pt3dadd( 7.79608, -65.9293, 12.3298, 0.55 ) }
    dend_18 { pt3dadd( 6.68455, -67.8155, 12.994, 0.28 ) }
    dend_18 { pt3dadd( 5.63198, -69.3675, 13.6933, 0.55 ) }
    dend_18 { pt3dadd( 3.44507, -72.2139, 15.2244, 0.55 ) }
    dend_18 { pt3dadd( 1.92931, -73.9765, 16.2491, 0.55 ) }
    dend_18 { pt3dadd( 1.07772, -74.9648, 16.8098, 0.55 ) }
    dend_18 { pt3dadd( 0.0644465, -76.1352, 17.3938, 0.83 ) }
    dend_18 { pt3dadd( -2.83436, -79.6009, 18.9386, 0.28 ) }
    dend_18 { pt3dadd( -3.77556, -80.7466, 19.4275, 0.55 ) }
    dend_18 { pt3dadd( -5.3906, -82.8053, 20.2964, 0.28 ) }
    dend_18 { pt3dadd( -5.91381, -83.4414, 20.5987, 0.55 ) }
    dend_18 { pt3dadd( -7.06544, -84.9247, 21.3332, 0.28 ) }
    dend_18 { pt3dadd( -7.6814, -85.7653, 21.708, 0.55 ) }
    dend_18 { pt3dadd( -9.39681, -88.4943, 22.2848, 0.55 ) }
    dend_18 { pt3dadd( -14.2807, -95.7385, 27.0224, 0.55 ) }
    dend_18 { pt3dadd( -19.0749, -102.622, 32.352, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 0.980857, -36.5097, -12.1588, 0.55 ) }
    dend_16 { pt3dadd( 0.224893, -37.7934, -15.7804, 0.55 ) }
    dend_16 { pt3dadd( -0.0250799, -38.1094, -16.82, 0.55 ) }
    dend_16 { pt3dadd( -0.693007, -38.9063, -19.3673, 0.55 ) }
    dend_16 { pt3dadd( -2.26588, -40.5274, -24.7938, 0.28 ) }
    dend_16 { pt3dadd( -2.52289, -40.7555, -25.5682, 0.55 ) }
    dend_16 { pt3dadd( -3.64139, -41.7837, -28.7076, 0.55 ) }
    dend_16 { pt3dadd( -5.35527, -43.2063, -32.7112, 0.55 ) }
    dend_16 { pt3dadd( -6.03331, -43.7091, -34.2164, 0.28 ) }
    dend_16 { pt3dadd( -6.67224, -44.0712, -35.4801, 0.28 ) }
    dend_16 { pt3dadd( -7.90877, -44.6591, -37.4056, 0.55 ) }
    dend_16 { pt3dadd( -9.38419, -45.2587, -39.8386, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -10.7443, -45.6184, -42.1382, 0.55 ) }
    dend_16 { pt3dadd( -11.83, -45.7539, -43.8929, 0.55 ) }
    dend_16 { pt3dadd( -12.5703, -45.7459, -45.1385, 0.55 ) }
    dend_16 { pt3dadd( -14.7107, -45.5604, -48.8968, 0.55 ) }
    dend_16 { pt3dadd( -17.0297, -45.1163, -52.8022, 0.55 ) }
    dend_16 { pt3dadd( -18.0172, -44.8498, -54.386, 0.28 ) }
    dend_16 { pt3dadd( -18.9392, -44.6188, -55.9134, 0.55 ) }
    dend_16 { pt3dadd( -20.8035, -44.3417, -58.9783, 0.28 ) }
    dend_16 { pt3dadd( -21.4327, -44.2773, -59.9999, 0.83 ) }
    dend_16 { pt3dadd( -22.6751, -44.1397, -61.7991, 0.28 ) }
    dend_16 { pt3dadd( -23.6472, -44.147, -62.9397, 0.55 ) }
    dend_16 { pt3dadd( -25.0708, -44.2267, -64.5593, 0.28 ) }
    dend_16 { pt3dadd( -25.6518, -44.2494, -65.1824, 0.55 ) }
    dend_16 { pt3dadd( -26.764, -44.3211, -66.2688, 0.55 ) }
    dend_16 { pt3dadd( -28.5102, -44.2161, -67.8461, 0.55 ) }
    dend_16 { pt3dadd( -29.7, -44.0632, -68.8098, 0.28 ) }
    dend_16 { pt3dadd( -30.7191, -43.8024, -69.5119, 0.55 ) }
    dend_16 { pt3dadd( -31.9357, -43.3311, -70.351, 0.28 ) }
    dend_16 { pt3dadd( -32.1342, -43.2358, -70.4964, 0.55 ) }
    dend_16 { pt3dadd( -33.8045, -42.3003, -72.1542, 0.28 ) }
    dend_16 { pt3dadd( -34.9451, -41.5871, -73.4987, 0.55 ) }
    dend_16 { pt3dadd( -36.3355, -40.5097, -75.5165, 0.83 ) }
    dend_16 { pt3dadd( -37.3983, -39.58, -77.3405, 0.28 ) }
    dend_16 { pt3dadd( -37.6527, -39.3414, -77.848, 0.55 ) }
    dend_16 { pt3dadd( -39.5123, -37.5535, -81.8971, 0.28 ) }
    dend_16 { pt3dadd( -39.8098, -37.2481, -82.6544, 0.55 ) }
    dend_16 { pt3dadd( -40.6489, -36.2319, -84.9851, 0.28 ) }
    dend_16 { pt3dadd( -40.8639, -35.9705, -85.5895, 0.55 ) }
    dend_16 { pt3dadd( -41.454, -35.2913, -87.0743, 0.28 ) }
    dend_16 { pt3dadd( -41.8976, -34.8028, -88.0827, 0.55 ) }
    dend_16 { pt3dadd( -43.0188, -33.7211, -90.1023, 0.28 ) }
    dend_16 { pt3dadd( -43.6973, -33.1537, -91.2638, 0.55 ) }
    dend_16 { pt3dadd( -45.1911, -32.0867, -93.6336, 0.28 ) }
    dend_16 { pt3dadd( -45.6377, -31.8057, -94.3291, 0.55 ) }
    dend_16 { pt3dadd( -46.3493, -31.4469, -95.3838, 0.28 ) }
    dend_16 { pt3dadd( -46.9731, -31.1468, -96.239, 0.55 ) }
    dend_16 { pt3dadd( -48.3201, -30.5522, -97.9168, 0.28 ) }
    dend_16 { pt3dadd( -48.7335, -30.3862, -98.4057, 0.55 ) }
    dend_16 { pt3dadd( -51.9056, -29.0785, -101.871, 0.28 ) }
    dend_16 { pt3dadd( -53.088, -28.522, -102.976, 0.55 ) }
    dend_16 { pt3dadd( -55.287, -27.4108, -104.804, 0.28 ) }
    dend_16 { pt3dadd( -56.2991, -26.8652, -105.597, 0.55 ) }
    dend_16 { pt3dadd( -58.6886, -25.6378, -107.278, 0.28 ) }
    dend_16 { pt3dadd( -59.5812, -25.232, -107.855, 0.55 ) }
    dend_16 { pt3dadd( -62.8666, -24.0873, -109.76, 0.28 ) }
    dend_16 { pt3dadd( -64.2254, -23.7956, -110.537, 0.55 ) }
    dend_16 { pt3dadd( -66.1432, -23.7268, -111.612, 0.55 ) }
    dend_16 { pt3dadd( -67.329, -23.7679, -112.243, 0.55 ) }
    dend_16 { pt3dadd( -69.8285, -23.9257, -113.339, 0.28 ) }
    dend_16 { pt3dadd( -72.3543, -24.1112, -114.265, 0.28 ) }
    dend_16 { pt3dadd( -74.4853, -24.2592, -114.977, 0.55 ) }
    dend_16 { pt3dadd( -77.228, -24.2149, -115.581, 0.28 ) }
    dend_16 { pt3dadd( -78.6673, -24.0309, -115.716, 0.55 ) }
    dend_16 { pt3dadd( -82.2498, -23.088, -115.753, 0.28 ) }
    dend_16 { pt3dadd( -84.2486, -22.2842, -115.404, 0.55 ) }
    dend_16 { pt3dadd( -85.6228, -21.5996, -114.957, 0.28 ) }
    dend_16 { pt3dadd( -87.2421, -20.827, -114.167, 0.55 ) }
    dend_16 { pt3dadd( -89.3172, -19.8045, -112.996, 0.28 ) }
    dend_16 { pt3dadd( -90.1019, -19.4504, -112.559, 0.55 ) }
    dend_16 { pt3dadd( -94.0723, -17.9225, -110.658, 0.28 ) }
    dend_16 { pt3dadd( -95.4076, -17.4506, -110.028, 0.55 ) }
    dend_16 { pt3dadd( -98.5886, -16.4284, -108.464, 0.28 ) }
    dend_16 { pt3dadd( -100.315, -15.8903, -107.615, 0.55 ) }
    dend_16 { pt3dadd( -101.736, -15.4501, -106.919, 0.55 ) }
    dend_16 { pt3dadd( -103.426, -14.9353, -106.124, 0.28 ) }
    dend_16 { pt3dadd( -104.287, -14.6772, -105.829, 0.55 ) }
    dend_16 { pt3dadd( -107.153, -13.734, -104.989, 0.28 ) }
    dend_16 { pt3dadd( -108.668, -13.0924, -104.526, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 0.980857, -36.5097, -12.1588, 0.55 ) }
    dend_15 { pt3dadd( 1.5845, -36.5204, -13.2471, 0.55 ) }
    dend_15 { pt3dadd( 2.19638, -36.3923, -14.3234, 0.55 ) }
    dend_15 { pt3dadd( 3.00368, -36.1159, -15.6222, 0.55 ) }
    dend_15 { pt3dadd( 3.68524, -35.7859, -16.6479, 0.55 ) }
    dend_15 { pt3dadd( 8.44803, -32.7238, -22.9775, 0.55 ) }
    dend_15 { pt3dadd( 9.47343, -31.844, -24.4179, 0.55 ) }
    dend_15 { pt3dadd( 10.9223, -30.3701, -26.5817, 0.55 ) }
    dend_15 { pt3dadd( 11.9295, -29.2691, -28.1206, 0.55 ) }
    dend_15 { pt3dadd( 12.9124, -28.0915, -29.5859, 0.28 ) }
    dend_15 { pt3dadd( 14.4687, -26.1151, -31.7305, 0.55 ) }
    dend_15 { pt3dadd( 16.8836, -23.0272, -34.7396, 0.28 ) }
    dend_15 { pt3dadd( 17.0646, -22.8348, -35.077, 0.55 ) }
    dend_15 { pt3dadd( 17.8292, -22.1744, -37.6725, 0.28 ) }
    dend_15 { pt3dadd( 18.0835, -21.9076, -39.5245, 0.55 ) }
    dend_15 { pt3dadd( 18.2083, -21.8007, -41.5657, 0.55 ) }
    dend_15 { pt3dadd( 18.4241, -21.8006, -45.2419, 0.55 ) }
    dend_15 { pt3dadd( 18.8781, -21.8451, -52.4556, 0.55 ) }
    dend_15 { pt3dadd( 19.2777, -21.904, -57.2945, 0.55 ) }
    dend_15 { pt3dadd( 19.4621, -21.9283, -58.9607, 0.55 ) }
    dend_15 { pt3dadd( 20.906, -21.9434, -69.878, 0.55 ) }
    dend_15 { pt3dadd( 21.4081, -21.8764, -72.8153, 0.55 ) }
    dend_15 { pt3dadd( 21.8104, -21.8097, -74.4414, 0.55 ) }
    dend_15 { pt3dadd( 23.0909, -21.6684, -78.1496, 0.55 ) }
    dend_15 { pt3dadd( 26.7777, -21.6596, -86.8732, 0.55 ) }
    dend_15 { pt3dadd( 27.8921, -21.731, -89.1827, 0.28 ) }
    dend_15 { pt3dadd( 28.6381, -21.8082, -90.4519, 0.55 ) }
    dend_15 { pt3dadd( 29.7982, -21.9964, -92.3143, 0.28 ) }
    dend_15 { pt3dadd( 30.3506, -22.1428, -93.0463, 0.55 ) }
    dend_15 { pt3dadd( 32.5693, -22.8238, -94.7918, 0.28 ) }
    dend_15 { pt3dadd( 34.6972, -23.9141, -95.0629, 0.55 ) }
    dend_15 { pt3dadd( 36.0147, -24.7326, -95.1481, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( 37.2721, -25.677, -95.0928, 0.55 ) }
    dend_15 { pt3dadd( 38.4305, -26.7508, -94.957, 0.28 ) }
    dend_15 { pt3dadd( 38.953, -27.3204, -94.9122, 0.55 ) }
    dend_15 { pt3dadd( 40.2085, -28.8365, -94.7251, 0.28 ) }
    dend_15 { pt3dadd( 40.5435, -29.2977, -94.7534, 0.55 ) }
    dend_15 { pt3dadd( 42.4472, -31.9446, -95.0875, 0.28 ) }
    dend_15 { pt3dadd( 43.363, -33.1598, -95.4258, 0.55 ) }
    dend_15 { pt3dadd( 45.4186, -35.73, -96.4923, 0.28 ) }
    dend_15 { pt3dadd( 46.2184, -36.6656, -97.011, 0.55 ) }
    dend_15 { pt3dadd( 48.9809, -39.7038, -98.9435, 0.28 ) }
    dend_15 { pt3dadd( 49.6573, -40.441, -99.4518, 0.55 ) }
    dend_15 { pt3dadd( 51.7193, -42.7937, -101.162, 0.28 ) }
    dend_15 { pt3dadd( 52.166, -43.3541, -101.511, 0.55 ) }
    dend_15 { pt3dadd( 53.2899, -44.8485, -102.415, 0.28 ) }
    dend_15 { pt3dadd( 53.9487, -45.7132, -103.038, 0.55 ) }
    dend_15 { pt3dadd( 54.6274, -46.554, -103.732, 0.55 ) }
    dend_15 { pt3dadd( 55.9831, -48.2315, -105.1, 0.28 ) }
    dend_15 { pt3dadd( 56.9304, -49.2422, -106.094, 0.55 ) }
    dend_15 { pt3dadd( 59.8708, -51.623, -109.304, 0.28 ) }
    dend_15 { pt3dadd( 60.9902, -52.3535, -110.606, 0.55 ) }
    dend_15 { pt3dadd( 61.7679, -52.8005, -111.489, 0.28 ) }
    dend_15 { pt3dadd( 62.5599, -53.188, -112.37, 0.55 ) }
    dend_15 { pt3dadd( 65.0215, -54.2129, -115.039, 0.28 ) }
    dend_15 { pt3dadd( 66.9112, -55.0137, -117.006, 0.55 ) }
    dend_15 { pt3dadd( 70.2585, -56.6019, -120.101, 0.28 ) }
    dend_15 { pt3dadd( 71.3138, -57.0928, -121.07, 0.55 ) }
    dend_15 { pt3dadd( 73.3862, -57.9648, -122.752, 0.28 ) }
    dend_15 { pt3dadd( 74.0917, -58.2454, -123.257, 0.55 ) }
    dend_15 { pt3dadd( 75.2865, -58.6806, -123.875, 0.28 ) }
    dend_15 { pt3dadd( 76.3553, -59.0341, -124.335, 0.55 ) }
    dend_15 { pt3dadd( 79.2861, -59.8464, -125.303, 0.28 ) }
    dend_15 { pt3dadd( 82.6388, -60.6515, -126.361, 0.28 ) }
    dend_15 { pt3dadd( 84.3437, -60.986, -126.784, 0.28 ) }
    dend_15 { pt3dadd( 86.0401, -61.2763, -127.307, 0.55 ) }
    dend_15 { pt3dadd( 88.5013, -61.5946, -128.081, 0.28 ) }
    dend_15 { pt3dadd( 89.5974, -61.7203, -128.403, 0.83 ) }
    dend_15 { pt3dadd( 92.4141, -62.0727, -129.123, 0.28 ) }
    dend_15 { pt3dadd( 93.63, -62.2528, -129.499, 0.55 ) }
    dend_15 { pt3dadd( 98.9654, -63.2387, -131.389, 0.28 ) }
    dend_15 { pt3dadd( 101.603, -63.7665, -132.536, 0.28 ) }
    dend_15 { pt3dadd( 103.499, -64.1537, -133.49, 0.55 ) }
    dend_15 { pt3dadd( 104.582, -64.4055, -134.165, 0.55 ) }
    dend_15 { pt3dadd( 107.414, -65.1207, -136.179, 0.28 ) }
    dend_15 { pt3dadd( 110.054, -65.9129, -138.169, 0.55 ) }
    dend_15 { pt3dadd( 112.469, -66.7093, -139.981, 0.28 ) }
    dend_15 { pt3dadd( 114.63, -67.466, -141.734, 0.55 ) }
    dend_15 { pt3dadd( 116.416, -68.0693, -143.172, 0.28 ) }
    dend_15 { pt3dadd( 117.883, -68.4534, -144.271, 0.55 ) }
    dend_15 { pt3dadd( 121.434, -69.1708, -146.759, 0.28 ) }
    dend_15 { pt3dadd( 123.252, -69.5283, -147.947, 0.55 ) }
    dend_15 { pt3dadd( 126.009, -70.0684, -149.631, 0.28 ) }
    dend_15 { pt3dadd( 128.268, -70.4437, -150.959, 0.55 ) }
    dend_15 { pt3dadd( 133.52, -71.0934, -154.073, 0.28 ) }
    dend_15 { pt3dadd( 135.608, -71.2433, -155.482, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -8.64241, -155.951, 113.779, 0.55 ) }
    dend_9 { pt3dadd( -7.70373, -163.86, 118.056, 0.55 ) }
    dend_9 { pt3dadd( -5.16735, -172.117, 120.724, 0.55 ) }
    dend_9 { pt3dadd( -3.57887, -180.238, 124.364, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -8.64241, -155.951, 113.779, 0.55 ) }
    dend_8 { pt3dadd( -7.24302, -165.508, 121.567, 0.55 ) }
    dend_8 { pt3dadd( -8.07859, -173.974, 130.598, 0.55 ) }
    dend_8 { pt3dadd( -9.59882, -180.438, 141.079, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -11.9571, -151.957, 110.772, 0.55 ) }
    dend_6 { pt3dadd( -11.5015, -159.261, 115.15, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -11.9571, -151.957, 110.772, 0.55 ) }
    dend_5 { pt3dadd( -13.1351, -158.564, 114.947, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 15.5168, -90.7627, 11.3849, 0.83 ) }
    dend_25 { pt3dadd( 16.3579, -94.1569, 12.3939, 0.83 ) }
    dend_25 { pt3dadd( 17.0476, -97.0089, 13.4996, 0.83 ) }
    dend_25 { pt3dadd( 17.7331, -99.8442, 14.5988, 0.83 ) }
    dend_25 { pt3dadd( 18.3841, -102.536, 15.6426, 0.83 ) }
    dend_25 { pt3dadd( 19.3874, -106.685, 17.2511, 0.83 ) }
    dend_25 { pt3dadd( 20.3834, -110.804, 18.8481, 0.83 ) }
    dend_25 { pt3dadd( 21.0107, -113.516, 20.3317, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 15.5168, -90.7627, 11.3849, 0.55 ) }
    dend_24 { pt3dadd( 17.2276, -92.7077, 11.7143, 0.55 ) }
    dend_24 { pt3dadd( 18.5867, -94.238, 11.6854, 0.55 ) }
    dend_24 { pt3dadd( 19.5543, -95.3799, 11.5364, 0.55 ) }
    dend_24 { pt3dadd( 20.5008, -96.7488, 11.1513, 0.83 ) }
    dend_24 { pt3dadd( 21.4988, -98.3222, 10.5021, 0.55 ) }
    dend_24 { pt3dadd( 22.475, -99.8612, 9.86714, 0.83 ) }
    dend_24 { pt3dadd( 23.4608, -101.546, 9.00545, 0.55 ) }
    dend_24 { pt3dadd( 24.0445, -102.528, 8.41247, 0.83 ) }
    dend_24 { pt3dadd( 25.8353, -105.726, 6.22231, 0.55 ) }
    dend_24 { pt3dadd( 27.0564, -108.265, 4.31397, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -19.0749, -102.622, 32.352, 0.55 ) }
    dend_20 { pt3dadd( -23.6246, -110.036, 34.737, 0.55 ) }
    dend_20 { pt3dadd( -29.3826, -116.719, 36.6218, 0.55 ) }
    dend_20 { pt3dadd( -35.9311, -122.639, 38.4726, 0.55 ) }
    dend_20 { pt3dadd( -43.3005, -127.601, 40.0311, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -19.0749, -102.622, 32.352, 0.55 ) }
    dend_19 { pt3dadd( -24.5188, -111.304, 36.8114, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 21.0107, -113.516, 20.3317, 0.55 ) }
    dend_27 { pt3dadd( 21.0955, -116.491, 21.1839, 0.55 ) }
    dend_27 { pt3dadd( 21.2244, -120.279, 22.412, 0.55 ) }
    dend_27 { pt3dadd( 21.3595, -123.854, 23.5566, 0.55 ) }
    dend_27 { pt3dadd( 21.457, -126.397, 24.3213, 0.55 ) }
    dend_27 { pt3dadd( 21.6356, -130.939, 25.5986, 0.55 ) }
    dend_27 { pt3dadd( 22.4931, -143.663, 29.0534, 0.55 ) }
    dend_27 { pt3dadd( 22.9829, -147.959, 30.1445, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 23.4336, -150.978, 30.7997, 0.55 ) }
    dend_27 { pt3dadd( 24.1461, -154.407, 31.3447, 0.55 ) }
    dend_27 { pt3dadd( 24.8113, -157.053, 31.5481, 0.55 ) }
    dend_27 { pt3dadd( 26.675, -163.193, 31.9343, 0.55 ) }
    dend_27 { pt3dadd( 27.9632, -167.879, 32.1182, 0.55 ) }
    dend_27 { pt3dadd( 28.8174, -170.949, 32.3652, 0.55 ) }
    dend_27 { pt3dadd( 30.7493, -178.935, 33.3191, 0.55 ) }
    dend_27 { pt3dadd( 31.8693, -184.323, 34.1315, 0.55 ) }
    dend_27 { pt3dadd( 33.0923, -191.285, 35.5157, 0.55 ) }
    dend_27 { pt3dadd( 34.1774, -199.202, 37.6417, 0.55 ) }
    dend_27 { pt3dadd( 34.885, -204.471, 39.4742, 0.55 ) }
    dend_27 { pt3dadd( 35.3106, -207.577, 40.6719, 0.55 ) }
    dend_27 { pt3dadd( 35.6658, -210.449, 41.7358, 0.55 ) }
    dend_27 { pt3dadd( 36.2727, -214.067, 42.9833, 0.55 ) }
    dend_27 { pt3dadd( 38.0275, -222.772, 45.4448, 0.55 ) }
    dend_27 { pt3dadd( 38.8776, -226.116, 46.3677, 0.55 ) }
    dend_27 { pt3dadd( 39.7684, -229.853, 47.3178, 0.55 ) }
    dend_27 { pt3dadd( 41.0874, -235.47, 48.6914, 0.55 ) }
    dend_27 { pt3dadd( 41.913, -239.821, 49.6536, 0.55 ) }
    dend_27 { pt3dadd( 42.5397, -243.987, 50.3734, 0.55 ) }
    dend_27 { pt3dadd( 42.9961, -247.986, 50.9498, 0.55 ) }
    dend_27 { pt3dadd( 43.3536, -251.902, 51.5161, 0.55 ) }
    dend_27 { pt3dadd( 43.6386, -254.685, 51.9075, 0.55 ) }
    dend_27 { pt3dadd( 44.2254, -259.225, 52.4399, 0.55 ) }
    dend_27 { pt3dadd( 45.1302, -264.666, 52.6994, 0.55 ) }
    dend_27 { pt3dadd( 45.7491, -267.287, 52.7087, 0.55 ) }
    dend_27 { pt3dadd( 46.4236, -269.575, 52.5916, 0.55 ) }
    dend_27 { pt3dadd( 48.0198, -273.847, 52.2876, 0.55 ) }
    dend_27 { pt3dadd( 49.0581, -276.555, 52.0151, 0.55 ) }
    dend_27 { pt3dadd( 50.2868, -279.894, 51.8074, 0.55 ) }
    dend_27 { pt3dadd( 50.986, -282.263, 51.7217, 0.55 ) }
    dend_27 { pt3dadd( 52.5598, -288.453, 51.6249, 0.55 ) }
    dend_27 { pt3dadd( 53.4345, -293.124, 51.7498, 0.55 ) }
    dend_27 { pt3dadd( 54.3172, -300.406, 52.3436, 0.55 ) }
    dend_27 { pt3dadd( 54.6878, -305.115, 53.144, 0.55 ) }
    dend_27 { pt3dadd( 54.9459, -310.073, 54.0886, 0.28 ) }
    dend_27 { pt3dadd( 54.9594, -312.077, 54.5026, 0.28 ) }
    dend_27 { pt3dadd( 54.6992, -316.971, 55.8419, 0.28 ) }
    dend_27 { pt3dadd( 54.2036, -321.517, 57.3347, 0.28 ) }
    dend_27 { pt3dadd( 53.5925, -327.479, 60.1304, 0.28 ) }
    dend_27 { pt3dadd( 55.707, -340.444, 64.8079, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 21.0107, -113.516, 20.3317, 0.55 ) }
    dend_26 { pt3dadd( 21.0682, -113.923, 21.7311, 0.55 ) }
    dend_26 { pt3dadd( 21.0387, -115.019, 24.6478, 0.55 ) }
    dend_26 { pt3dadd( 20.9443, -116.121, 27.1864, 0.28 ) }
    dend_26 { pt3dadd( 20.7839, -117.389, 29.9242, 0.55 ) }
    dend_26 { pt3dadd( 20.4967, -118.232, 31.6082, 0.28 ) }
    dend_26 { pt3dadd( 19.7719, -119.79, 34.5639, 0.55 ) }
    dend_26 { pt3dadd( 19.1917, -120.659, 35.8437, 0.28 ) }
    dend_26 { pt3dadd( 18.9092, -120.986, 36.3144, 0.28 ) }
    dend_26 { pt3dadd( 18.3963, -121.467, 37.1265, 0.55 ) }
    dend_26 { pt3dadd( 16.5764, -123.049, 40.2771, 0.28 ) }
    dend_26 { pt3dadd( 15.8431, -123.666, 41.6159, 0.55 ) }
    dend_26 { pt3dadd( 14.0466, -125.392, 45.6532, 0.28 ) }
    dend_26 { pt3dadd( 13.2047, -126.227, 47.8405, 0.28 ) }
    dend_26 { pt3dadd( 12.3109, -127.269, 50.5628, 0.55 ) }
    dend_26 { pt3dadd( 11.3209, -128.826, 54.6022, 0.28 ) }
    dend_26 { pt3dadd( 11.2406, -129.023, 55.1457, 0.55 ) }
    dend_26 { pt3dadd( 11.0116, -129.955, 57.8084, 0.28 ) }
    dend_26 { pt3dadd( 11.0157, -130.037, 58.0478, 0.55 ) }
    dend_26 { pt3dadd( 11.0401, -131.042, 60.176, 0.28 ) }
    dend_26 { pt3dadd( 11.0077, -131.604, 61.1972, 0.55 ) }
    dend_26 { pt3dadd( 10.587, -135.76, 69.5883, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -43.3005, -127.601, 40.0311, 0.55 ) }
    dend_22 { pt3dadd( -50.8307, -132.899, 45.8824, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -43.3005, -127.601, 40.0311, 0.55 ) }
    dend_21 { pt3dadd( -49.5184, -134.849, 41.4882, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 11
    dend_34 nseg = 3
    dend_29 nseg = 3
    dend_2 nseg = 5
    dend_61 nseg = 15
    dend_48 nseg = 5
    dend_45 nseg = 5
    dend_42 nseg = 11
    dend_35 nseg = 5
    dend_31 nseg = 7
    dend_30 nseg = 5
    dend_12 nseg = 7
    dend_10 nseg = 3
    dend_3 nseg = 3
    dend_60 nseg = 5
    dend_59 nseg = 7
    dend_23 nseg = 3
    dend_18 nseg = 3
    dend_16 nseg = 9
    dend_15 nseg = 11
    dend_27 nseg = 11
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L6_BP_c202839326_0_0


