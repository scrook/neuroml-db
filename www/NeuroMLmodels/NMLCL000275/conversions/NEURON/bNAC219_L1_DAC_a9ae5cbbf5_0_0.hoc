// Cell: bNAC219_L1_DAC_a9ae5cbbf5_0_0
/*
{
  "id" : "bNAC219_L1_DAC_a9ae5cbbf5_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-7.34832, 0.192624, 0.0, 4.27235", "-6.59755, 0.18583, 0.0, 7.67526", "-5.84678, 0.179036, 0.0, 8.97634", "-5.09602, 0.172242, 0.0, 10.1105", "-4.34525, 0.165448, 0.0, 10.8385", "-3.59448, 0.158653, 0.0, 11.4973", "-2.84371, 0.151859, 0.0, 12.1418", "-2.09294, 0.145065, 0.0, 12.4704", "-1.34217, 0.138271, 0.0, 12.6978", "-0.591402, 0.131477, 0.0, 12.8422", "0.159367, 0.124683, 0.0, 12.8527", "0.910135, 0.117889, 0.0, 12.8539", "1.6609, 0.111095, 0.0, 12.7853", "2.41167, 0.104301, 0.0, 12.4148", "3.16244, 0.0975065, 0.0, 11.8273", "3.91321, 0.0907124, 0.0, 11.1391", "4.66398, 0.0839183, 0.0, 10.2578", "5.41475, 0.0771242, 0.0, 9.36424", "6.16552, 0.07033, 0.0, 8.24972", "6.91629, 0.0635359, 0.0, 5.54548", "7.66705, 0.0567418, 0.0, 3.28369" ]
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "7.07651, -1.07088, -8.36, 1.69", "8.05479, -1.28508, -9.37223, 1.25", "9.36778, -1.57258, -10.7308, 1.25", "10.5226, -1.82545, -11.9257, 1.62", "11.0754, -1.94648, -12.4977, 1.62", "12.6336, -2.28767, -14.11, 2.35", "12.9884, -2.36534, -14.477, 2.64" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000009989550144
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-3.37349, -5.07813, -4.28, 1.54", "-4.16179, -6.04218, -5.18544, 1.54", "-5.06622, -7.14825, -6.22427, 1.69", "-5.79887, -8.04423, -7.06579, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000009989550144
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-6.21349, -2.01663, -2.25, 1.4", "-6.7943, -2.11658, -2.23382, 1.4", "-7.90534, -2.29712, -2.24294, 1.4", "-8.45133, -2.38138, -2.27351, 1.4", "-9.1585, -2.49372, -2.35612, 1.03", "-10.3894, -2.68927, -2.49991, 1.25", "-11.3863, -2.84763, -2.61636, 1.62", "-12.3786, -3.00279, -2.75328, 1.62", "-13.4118, -3.14968, -2.92898, 1.47", "-14.9232, -3.3552, -3.23735, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000009989550144
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-5.73349, 1.79562, 5.81, 1.32", "-6.27181, 1.86509, 6.42647, 0.88", "-7.1561, 1.97922, 7.43916, 1.54", "-8.42985, 2.1436, 8.89783, 1.4", "-9.70661, 2.30837, 10.36, 1.84", "-10.5408, 2.41602, 11.3152, 1.98" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000009989550144
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-3.38349, 5.04237, 5.24, 1.1", "-4.69255, 5.80563, 5.68175, 1.18", "-6.29851, 6.59397, 6.22289, 0.81", "-7.65437, 7.20778, 6.68172, 0.73", "-8.63458, 7.73699, 7.0009, 1.03", "-8.19557, 6.55931, 6.94803, 0.66", "-8.10838, 5.76741, 6.98829, 0.51", "-8.08676, 5.00504, 7.01371, 0.51", "-8.03317, 3.82533, 7.00864, 0.51", "-7.92936, 2.64308, 6.94943, 0.37", "-7.7258, 0.979782, 6.84122, 0.37", "-7.59152, 0.106847, 6.79149, 0.37", "-7.43989, -0.746123, 6.74834, 0.37", "-7.26859, -1.60026, 6.67542, 0.59", "-7.13805, -2.19417, 6.61538, 0.44", "-6.86882, -3.29301, 6.49474, 0.88", "-6.41109, -5.07412, 6.26247, 0.44", "-6.02851, -6.5838, 6.04423, 0.29", "-5.73503, -7.72855, 5.84086, 0.29", "-5.57334, -8.33126, 5.67047, 0.29", "-5.33896, -9.25074, 5.32665, 0.07", "-5.04349, -10.4137, 4.61254, 0.44", "-4.8689, -11.0183, 4.12113, 0.66", "-4.59429, -11.8281, 3.38058, 0.22", "-4.18308, -12.9001, 2.40045, 0.07", "-4.02047, -13.2776, 2.04907, 0.07", "-3.121, -15.1717, 0.19272, 1.18", "-2.60797, -16.1224, -0.773998, 1.18", "-2.26382, -16.7429, -1.44201, 0.22", "-2.0983, -17.0488, -1.7941, 0.59", "-1.66144, -17.8797, -2.82789, 0.15", "-1.23261, -18.7086, -4.00107, 0.15", "-0.962169, -19.2539, -4.85714, 0.15", "-0.622165, -19.8714, -5.98178, 0.15", "-0.173936, -20.5565, -7.39346, 0.37", "0.361608, -21.3214, -9.06101, 0.07", "0.854568, -21.9579, -10.529, 0.29", "1.33527, -22.5392, -11.8668, 0.07", "1.82396, -23.1123, -13.1823, 0.07", "2.24236, -23.5419, -14.1919, 0.07" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000009989550144,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-2.55349, 5.09112, 9.13, 1.84", "-2.64003, 5.38363, 9.44402, 1.84", "-2.93035, 6.36498, 10.4976, 2.06", "-3.18305, 7.21914, 11.4145, 2.42", "-3.56294, 8.50324, 12.7931, 1.84", "-3.74218, 9.1091, 13.4435, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000009989550144
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "7.66705, 0.0567418, 0.0, 0.580156", "22.6664, -0.0789957, 0.0, 0.580156", "37.6658, -0.214733, 0.0, 0.580156" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "12.9884, -2.36534, -14.477, 1.32", "12.0165, -1.02777, -16.0227, 1.32", "11.0385, 0.270802, -17.3872, 0.95", "10.5491, 0.917184, -17.9711, 0.95", "9.99243, 1.65017, -18.5201, 1.18", "8.73548, 3.32974, -19.5805, 0.73", "7.94816, 4.39156, -20.3014, 0.73", "7.17845, 5.42899, -20.9424, 0.88", "6.27089, 6.66331, -21.658, 1.18", "5.15188, 8.22447, -22.5299, 0.44", "4.37336, 9.35787, -23.1492, 1.25", "2.52974, 12.1157, -24.5002, 1.47", "1.91342, 13.0438, -24.9691, 1.47" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "12.9884, -2.36534, -14.477, 2.06", "14.479, -2.32566, -14.5695, 2.06", "15.743, -2.29201, -14.6479, 1.91", "16.6476, -2.26793, -14.704, 1.98" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-5.79887, -8.04423, -7.06579, 0.81", "-5.71899, -7.70931, -8.01533, 0.81", "-5.46332, -7.05489, -10.1165, 0.81", "-5.31049, -6.72786, -11.1467, 0.81", "-5.15278, -6.29457, -12.2802, 0.95", "-4.94086, -5.32246, -14.3706, 1.18", "-4.80474, -4.30776, -16.3218, 1.18", "-4.66809, -2.0539, -20.0067, 1.18", "-4.69331, -1.28513, -21.0896, 1.18", "-4.91429, 0.208752, -22.9906, 0.51", "-5.43732, 2.03026, -25.0483, 0.51", "-5.93989, 3.14338, -26.1963, 0.73", "-6.59791, 4.14776, -27.2595, 0.88", "-7.33795, 4.96045, -28.1909, 0.44", "-8.26762, 5.7294, -29.3601, 1.47", "-9.02221, 6.2088, -30.4143, 0.73", "-10.1964, 6.81447, -32.4642, 0.88", "-11.7008, 7.50245, -35.6544, 0.15", "-12.4162, 7.81362, -37.5393, 1.47", "-13.0842, 8.10059, -39.6293, 0.29", "-13.6571, 8.38027, -41.8592, 0.51", "-14.452, 8.87694, -45.9252, 0.73", "-14.8414, 9.23789, -48.5926, 1.76", "-15.148, 9.72389, -51.8375, 1.1", "-15.3004, 10.221, -54.6885, 1.1", "-15.3808, 10.6412, -56.9205, 1.1", "-15.4465, 11.1007, -59.1096, 1.1", "-15.4858, 11.5643, -60.932, 1.1", "-15.4376, 11.9501, -62.313, 0.81", "-15.2502, 12.5014, -63.9968, 0.81" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-5.79887, -8.04423, -7.06579, 2.06", "-6.11997, -8.93704, -7.93094, 2.06", "-6.56296, -10.1687, -9.1245, 2.06" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-14.9232, -3.3552, -3.23735, 1.47", "-16.1489, -3.87275, -2.28062, 1.47", "-17.5523, -4.36686, -1.35359, 1.62", "-19.0793, -4.90451, -0.344903, 0.88", "-19.9635, -5.21582, 0.239168, 0.88", "-20.5627, -5.42681, 0.635004, 0.88", "-21.1553, -5.63544, 1.02642, 0.88", "-22.0408, -5.80072, 1.5721, 1.62" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-14.9232, -3.3552, -3.23735, 0.81", "-14.9603, -2.66287, -3.83435, 0.81", "-15.0096, -1.63587, -4.88208, 0.44", "-15.0688, -0.654911, -5.99507, 0.59", "-15.1128, 0.073355, -6.82135, 0.73", "-15.1777, 1.14913, -8.04191, 1.18", "-15.2351, 2.09887, -9.11948, 1.18", "-15.266, 3.32557, -10.6665, 1.18", "-15.2878, 4.06707, -11.7668, 1.32" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-10.5408, 2.41602, 11.3152, 0.88", "-10.9225, 1.6398, 12.1685, 0.88", "-11.3749, 0.576258, 13.1887, 0.37", "-11.7376, -0.411102, 14.0208, 1.03", "-12.2464, -1.83832, 15.1537, 0.59", "-12.3399, -2.11997, 15.3689, 0.59", "-12.4795, -2.58363, 15.7349, 0.59", "-12.6271, -3.29783, 16.3318, 0.66", "-12.7301, -4.22773, 17.1541, 0.22", "-12.7611, -5.04471, 17.9042, 1.03", "-12.7546, -5.68881, 18.5164, 0.44", "-12.736, -6.61325, 19.4923, 0.73", "-12.7003, -7.55984, 20.6077, 1.32", "-12.6613, -8.7082, 22.1267, 0.88", "-12.6314, -9.66826, 23.4743, 0.51", "-12.5933, -10.3869, 24.5083, 0.51", "-12.5328, -11.3973, 26.0014, 0.59", "-12.4939, -12.0822, 27.0324, 0.59", "-12.4716, -13.0044, 28.4585, 0.73", "-12.4772, -13.123, 28.6518, 0.73", "-12.531, -13.4687, 29.2963, 0.73", "-12.6315, -13.8503, 30.0323, 0.73", "-12.8243, -14.3225, 30.9578, 0.73", "-12.9821, -14.6099, 31.5492, 1.25", "-13.3439, -15.1959, 33.0944, 0.95", "-13.8473, -15.8887, 35.0406, 1.03", "-13.9584, -16.0108, 35.409, 1.03", "-14.0731, -16.1158, 35.7626, 1.03", "-14.1679, -16.193, 36.0779, 1.03", "-14.8402, -16.71, 39.073, 0.81" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-10.5408, 2.41602, 11.3152, 1.03", "-12.0808, 3.17652, 11.6552, 1.03" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-3.74218, 9.1091, 13.4435, 1.03", "-3.34782, 9.59999, 14.4664, 1.03", "-2.89124, 10.2259, 15.7781, 1.25", "-2.52252, 10.9578, 17.1175, 1.25", "-2.18144, 11.8858, 18.6083, 0.59", "-1.9179, 12.7509, 19.8323, 0.88", "-1.64214, 13.7765, 21.1137, 1.54", "-1.58743, 14.1733, 21.5288, 2.06", "-1.50329, 15.5747, 22.7806, 0.73", "-1.50823, 16.2408, 23.2358, 0.88", "-1.59121, 17.1919, 23.6635, 0.81", "-1.70848, 18.028, 23.8824, 0.81", "-1.87962, 19.1935, 24.0105, 1.1" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-3.74218, 9.1091, 13.4435, 0.95", "-4.88037, 10.4794, 11.7601, 0.95", "-5.37847, 11.0142, 11.0842, 1.03", "-6.18543, 11.8376, 10.1012, 0.95", "-6.8456, 12.5459, 9.31364, 0.81", "-7.51607, 13.2934, 8.54114, 1.25", "-8.51721, 14.4712, 7.42454, 0.95", "-9.59682, 15.7411, 6.43704, 0.95", "-10.2605, 16.5488, 5.87053, 1.03", "-10.8877, 17.3691, 5.3902, 1.03", "-11.268, 17.9147, 5.09237, 1.03", "-11.7357, 18.6184, 4.73946, 0.81", "-12.072, 19.1016, 4.47517, 1.18", "-12.5507, 19.702, 4.07606, 0.95", "-13.105, 20.3415, 3.48906, 0.81", "-13.4817, 20.7804, 3.00711, 0.81", "-14.1145, 21.5626, 2.04304, 1.1", "-14.8063, 22.521, 0.892608, 1.32", "-15.5659, 23.5989, -0.453056, 1.54", "-16.3374, 24.7661, -1.93913, 1.18", "-16.9603, 25.8466, -3.31759, 0.66", "-17.2497, 26.4496, -4.05061, 0.66", "-17.6548, 27.5756, -5.33153, 0.44" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "37.6658, -0.214733, 0.0, 0.22", "52.6652, -0.350471, 0.0, 0.22", "67.6646, -0.486208, 0.0, 0.22" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "1.91342, 13.0438, -24.9691, 0.81", "1.63318, 13.2628, -25.5389, 0.81", "0.945801, 13.8924, -26.9586, 0.59", "0.61048, 14.2282, -27.6203, 0.88", "-1.05302, 15.9996, -30.6877, 0.44", "-1.31951, 16.2789, -31.1216, 0.29", "-1.6898, 16.6527, -31.6546, 0.29", "-2.04185, 17.0266, -32.1724, 0.29", "-2.38503, 17.3941, -32.6216, 0.29", "-3.28692, 18.2627, -33.4619, 1.32", "-3.97793, 18.854, -33.8503, 1.32", "-4.97453, 19.6564, -34.3385, 0.37", "-5.79749, 20.298, -34.6916, 0.07", "-6.78426, 21.0421, -35.0793, 1.1", "-8.33462, 22.1644, -35.6102, 0.07", "-9.18225, 22.7138, -35.8334, 1.4", "-9.692, 22.9895, -35.9479, 1.4", "-11.0183, 23.5539, -36.1666, 0.22", "-11.5809, 23.7308, -36.2375, 0.22", "-12.1757, 23.8182, -36.3053, 0.22", "-13.4165, 23.8406, -36.4202, 0.81", "-15.0618, 23.7794, -36.4857, 0.07", "-15.5958, 23.7461, -36.5171, 1.32", "-16.3941, 23.6719, -36.5885, 1.32", "-18.2655, 23.4643, -36.8189, 0.22", "-19.4944, 23.3084, -37.0008, 1.54", "-20.4641, 23.1699, -37.1952, 1.54", "-22.5291, 22.7463, -37.6995, 0.22", "-23.3708, 22.5194, -38.0156, 0.22", "-24.2183, 22.2107, -38.5137, 0.22", "-24.7184, 21.9834, -39.1667, 0.66", "-25.2389, 21.7281, -40.0322, 0.22", "-25.6934, 21.5115, -40.8247, 1.1", "-26.8192, 20.9748, -42.8482, 0.59", "-27.8066, 20.4886, -44.7852, 1.25", "-30.7664, 18.9203, -51.0464, 0.59", "-31.3507, 18.5864, -52.4155, 0.88", "-31.8387, 18.2766, -53.8203, 1.18", "-32.5612, 17.7883, -56.5078, 0.29", "-33.245, 17.2288, -60.3449, 0.51", "-33.3115, 17.1487, -61.0584, 0.51", "-33.2836, 16.9909, -62.981, 1.25", "-32.7869, 16.8256, -67.4449, 1.25", "-32.2711, 16.8449, -70.0317, 1.25", "-31.5609, 17.004, -72.3634, 0.37", "-31.3484, 17.0736, -72.9244, 0.37", "-30.9821, 17.22, -73.8167, 0.44", "-29.4969, 17.8763, -77.0234, 0.73", "-29.0669, 18.0602, -77.785, 1.18", "-27.6812, 18.5381, -79.9671, 0.44", "-26.9751, 18.7321, -81.0249, 0.44", "-26.3486, 18.8529, -81.932, 0.81", "-25.2349, 18.9416, -83.4051, 1.1", "-24.3262, 18.8472, -84.3222, 0.29", "-23.1622, 18.5072, -85.2279, 0.66", "-22.3074, 18.0509, -85.4412, 0.07", "-21.7205, 17.6857, -85.4877, 0.07", "-21.0776, 17.2335, -85.442, 0.44", "-20.2996, 16.6334, -85.2313, 0.07", "-18.6977, 15.382, -84.505, 0.22", "-17.1866, 14.2713, -83.459, 0.66" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "1.91342, 13.0438, -24.9691, 0.51", "1.91677, 14.3535, -24.6294, 0.51", "1.92249, 14.9878, -24.4866, 1.18", "1.93719, 16.1532, -24.1897, 0.51", "1.94112, 17.278, -23.9036, 1.18", "1.92988, 17.9735, -23.7165, 0.73", "1.90057, 18.5996, -23.5471, 0.73", "1.83626, 19.3757, -23.3544, 0.73", "1.70634, 20.3354, -23.1473, 0.73", "1.46739, 21.3458, -23.0121, 1.1", "1.16941, 22.3525, -22.9167, 0.44", "0.926937, 23.0261, -22.8642, 0.66", "0.722403, 23.5001, -22.8466, 0.22", "0.20528, 24.4772, -22.9088, 0.22", "-0.526759, 25.5664, -23.2286, 0.44" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "16.6476, -2.26793, -14.704, 1.03", "17.328, -1.60133, -16.6001, 1.03", "17.7535, -1.18445, -17.7858, 1.4" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "16.6476, -2.26793, -14.704, 0.59", "17.2068, -3.52342, -14.6703, 0.59", "17.415, -4.03588, -14.6455, 0.73", "17.8691, -5.15361, -14.5913, 0.73", "18.1836, -5.92785, -14.5539, 0.88", "18.3897, -6.4354, -14.5293, 0.88", "18.8359, -7.53363, -14.4761, 1.25", "19.3398, -8.99308, -14.3792, 0.29" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-6.56296, -10.1687, -9.1245, 0.51", "-7.74976, -10.6379, -10.0435, 0.51", "-9.09295, -11.1614, -11.064, 0.59", "-10.3694, -11.6737, -12.0497, 0.59", "-11.4468, -12.116, -12.8599, 1.18", "-13.0288, -12.7654, -14.0496, 0.73", "-14.1807, -13.2382, -14.9159, 1.03", "-15.7152, -13.8816, -16.0195, 1.1", "-17.1959, -14.5003, -17.0089, 1.62", "-17.8911, -14.8076, -17.4757, 1.62" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-6.56296, -10.1687, -9.1245, 0.59", "-8.16708, -11.0917, -9.44725, 0.59", "-9.20387, -11.7593, -9.56512, 0.37", "-9.77239, -12.2143, -9.56108, 0.22", "-10.9403, -13.1489, -9.55279, 0.81", "-11.8834, -13.9037, -9.5461, 0.29", "-13.2265, -14.9786, -9.53656, 1.47", "-14.1695, -15.7381, -9.41433, 1.69", "-15.6767, -17.1306, -9.10587, 1.18" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-22.0408, -5.80072, 1.5721, 0.95", "-22.0189, -6.24991, 2.66268, 0.95", "-21.9046, -6.95125, 4.31296, 0.95", "-21.6361, -7.95983, 6.69078, 1.03", "-21.4855, -8.52566, 8.02477, 0.73", "-21.2818, -9.29068, 9.82837, 1.47", "-21.0957, -9.99001, 11.4771, 1.18", "-20.9226, -10.4676, 12.6099, 0.73", "-20.6587, -11.037, 13.9082, 0.88" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-22.0408, -5.80072, 1.5721, 0.73", "-22.9621, -6.08685, 1.05344, 0.73", "-24.0362, -6.4775, 0.435293, 0.95", "-25.578, -7.08541, -0.427074, 0.37", "-27.1026, -7.70367, -1.2177, 1.32", "-28.3401, -8.20668, -1.83911, 0.59", "-29.4598, -8.6749, -2.35975, 0.37", "-30.195, -9.00054, -2.67736, 0.66", "-30.9941, -9.35225, -2.97087, 0.29", "-32.0339, -9.79906, -3.29438, 0.15", "-32.8212, -10.1173, -3.51135, 0.15", "-34.29, -10.6298, -3.95869, 1.91", "-35.902, -11.0873, -4.43946, 0.44", "-37.3212, -11.3813, -4.91538, 0.44", "-37.8728, -11.4618, -5.14469, 0.44", "-39.0638, -11.5764, -5.7729, 1.25", "-40.846, -11.677, -6.9143, 0.37", "-41.7377, -11.6849, -7.55881, 0.95", "-42.7026, -11.6579, -8.2779, 0.22", "-44.3273, -11.579, -9.53439, 1.25", "-46.2228, -11.4561, -11.018, 0.15", "-47.6213, -11.3478, -12.0877, 1.84", "-48.5901, -11.2663, -12.7533, 0.37", "-49.7639, -11.1605, -13.5182, 0.66", "-50.9697, -11.0398, -14.1971, 0.15", "-52.1101, -10.8833, -14.6874, 0.15", "-53.0015, -10.7255, -14.9776, 1.4", "-54.1771, -10.5062, -15.2848, 0.15", "-54.828, -10.3875, -15.4412, 0.15", "-55.6034, -10.2318, -15.5939, 0.15", "-56.5934, -9.99957, -15.7367, 0.81", "-57.9662, -9.62708, -15.9155, 0.15", "-58.8868, -9.35825, -16.0272, 0.15", "-59.5801, -9.14861, -16.1054, 1.76", "-60.6679, -8.81765, -16.2256, 0.15", "-61.377, -8.60399, -16.3106, 0.15", "-62.5161, -8.26071, -16.4438, 0.59", "-63.5718, -7.91639, -16.5672, 0.15", "-64.4226, -7.60594, -16.6938, 0.51", "-65.3234, -7.23353, -16.8753, 0.15", "-66.4393, -6.7365, -17.1461, 1.69", "-66.8079, -6.56391, -17.2642, 1.69", "-68.214, -5.88921, -17.8207, 0.15", "-69.151, -5.44298, -18.2696, 0.15", "-70.0454, -4.99139, -18.7378, 1.1", "-70.3367, -4.83468, -18.9074, 1.69", "-71.4854, -4.23589, -19.6964, 0.88", "-72.2366, -3.91345, -20.2614, 0.15", "-72.8741, -3.79865, -20.7789, 0.88" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-15.2878, 4.06707, -11.7668, 1.03", "-16.0521, 4.0887, -12.6906, 1.03", "-17.1736, 4.06438, -14.028, 0.81", "-18.0001, 3.99839, -15.0698, 1.1", "-19.0808, 3.77865, -16.5859, 0.37", "-20.1007, 3.47784, -18.0994, 1.25", "-20.5942, 3.31171, -18.8208, 1.25", "-21.3662, 3.0005, -19.9688, 0.44", "-22.4767, 2.50372, -21.5889, 1.4", "-24.2118, 1.72507, -24.3048, 0.59", "-25.0754, 1.36122, -25.7544, 0.44", "-25.618, 1.13026, -26.6968, 1.32", "-26.3322, 0.837775, -27.962, 1.32", "-27.3275, 0.501185, -29.6887, 0.59", "-28.6298, 0.105879, -31.9976, 0.59", "-29.7134, -0.224872, -33.9721, 1.1", "-30.2061, -0.407278, -34.9985, 0.22", "-31.1216, -0.825724, -37.1582, 1.4", "-32.0134, -1.31432, -39.4642, 0.37", "-33.213, -2.07184, -42.6867, 1.4", "-33.6999, -2.40334, -43.9951, 0.51", "-34.9379, -3.27168, -47.3631, 0.73", "-35.6209, -3.74658, -49.2988, 2.5", "-36.7681, -4.53613, -52.5903, 0.81", "-37.1383, -4.77866, -53.6082, 0.66", "-37.9657, -5.22079, -55.6477, 0.51", "-38.2272, -5.32881, -56.2559, 0.81", "-39.1351, -5.59665, -58.2142, 0.44", "-40.0308, -5.75318, -60.2627, 1.62", "-40.7606, -5.75652, -62.4978, 0.95", "-40.9144, -5.72809, -63.1562, 0.95", "-41.1586, -5.58037, -64.9196, 1.32", "-41.2238, -5.31697, -67.6445, 1.32", "-41.0215, -5.11216, -69.7074, 1.32", "-40.1486, -4.72514, -73.6961, 0.81", "-39.9114, -4.65943, -74.4163, 0.44", "-39.3955, -4.5744, -75.5809, 0.81", "-37.8349, -4.42521, -78.2776, 0.29", "-37.1266, -4.38324, -79.2472, 1.03", "-36.6814, -4.37742, -79.7659, 1.54", "-35.9071, -4.39696, -80.5358, 1.54", "-34.0136, -4.47124, -82.4265, 0.44", "-33.0697, -4.49648, -83.374, 1.18", "-31.8262, -4.48148, -84.5678, 1.47", "-30.9385, -4.44362, -85.4706, 0.44", "-29.7376, -4.36551, -86.9006, 1.03", "-28.1593, -4.19885, -89.1042, 0.44", "-27.2139, -4.02164, -90.6491, 1.69", "-26.8451, -3.91557, -91.3804, 1.91", "-26.1233, -3.65331, -92.9824, 1.47", "-24.7004, -2.96398, -96.6948, 1.47", "-24.0955, -2.57494, -98.6386, 1.47", "-23.7737, -2.31945, -99.8384, 1.32", "-23.3554, -1.95529, -101.68, 1.32" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-15.2878, 4.06707, -11.7668, 0.59", "-15.202, 5.17253, -11.725, 0.59", "-15.0922, 6.07015, -11.4728, 0.81", "-14.8943, 7.0672, -10.9954, 0.44", "-14.5605, 8.23002, -10.2439, 0.44", "-14.2465, 9.32421, -9.53674, 1.03", "-13.7384, 11.0949, -8.39245, 0.66", "-13.4259, 12.1175, -7.62409, 1.03", "-13.0671, 13.083, -6.6828, 0.37", "-12.6877, 13.9191, -5.65392, 0.88" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-12.0808, 3.17652, 11.6552, 0.73", "-13.4511, 3.40956, 12.1093, 0.73", "-14.4095, 3.62714, 12.4471, 1.03", "-15.4159, 3.90634, 12.8098, 0.88", "-16.9087, 4.4615, 13.2607, 2.06", "-18.6406, 5.24974, 13.7015, 0.81", "-19.3705, 5.63421, 13.8362, 1.03", "-20.0675, 6.11475, 13.9004, 1.03", "-20.4284, 6.43829, 13.8897, 1.32", "-21.7083, 7.95608, 13.5801, 0.73", "-22.0132, 8.46154, 13.3995, 0.73", "-22.3504, 9.35832, 12.9195, 0.44", "-22.5949, 10.5141, 12.1563, 0.29", "-22.6198, 11.0557, 11.7498, 0.29", "-22.5774, 11.9027, 11.0763, 0.44", "-22.3855, 12.6996, 10.3986, 0.59", "-21.7801, 14.1412, 9.06137, 0.29", "-21.5135, 14.5435, 8.6565, 0.29", "-21.2248, 14.8541, 8.29089, 1.18" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-12.0808, 3.17652, 11.6552, 0.29", "-11.8189, 3.43203, 10.9201, 0.29", "-11.5046, 3.76756, 9.86122, 0.29", "-11.119, 4.22809, 8.46526, 0.29", "-10.8055, 4.64255, 7.31637, 0.29", "-10.318, 5.33209, 5.5365, 0.29", "-9.30409, 6.7408, 2.0475, 0.29", "-8.96949, 7.16463, 0.892136, 0.29", "-8.80558, 7.33694, 0.353527, 0.29", "-8.53533, 7.50868, -0.413897, 0.29", "-8.12419, 7.62278, -1.44315, 0.29", "-7.66576, 7.58276, -2.59344, 0.29", "-7.17327, 7.27553, -3.94568, 0.29", "-6.77095, 6.82645, -5.28736, 0.29", "-6.31995, 6.04967, -7.23999, 0.29", "-6.0961, 5.5499, -8.36841, 0.29", "-5.88975, 4.88748, -9.72993, 0.29", "-5.77535, 4.17843, -11.1257, 0.29", "-5.76569, 3.37548, -12.7445, 0.29", "-5.85738, 2.73501, -14.0531, 0.29" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-1.87962, 19.1935, 24.0105, 0.88", "-2.19324, 19.9189, 22.8926, 0.88", "-2.39407, 20.7873, 21.747, 0.88", "-2.48513, 21.9014, 20.3835, 0.88", "-2.47587, 23.1753, 18.9724, 0.59", "-2.443, 23.5327, 18.6005, 0.95", "-2.28027, 24.5199, 17.6434, 0.73", "-2.05701, 25.3415, 16.9058, 0.95", "-1.75418, 26.1316, 16.2619, 0.59", "-1.52949, 26.7109, 15.7495, 0.88", "-1.30343, 27.4018, 15.0057, 0.88", "-1.15914, 28.0565, 14.1934, 0.44", "-1.05751, 29.0131, 12.8923, 0.81", "-1.01612, 29.8035, 11.7638, 1.18", "-0.970159, 31.2863, 9.53536, 0.44", "-0.956699, 32.1337, 8.10587, 0.44", "-0.966549, 32.5333, 7.33481, 0.44", "-0.993899, 32.9008, 6.50109, 0.44", "-1.03219, 33.2071, 5.73742, 0.44", "-1.07486, 33.3661, 5.28009, 0.66", "-1.16124, 33.6645, 4.39743, 0.66", "-1.32902, 34.0732, 3.48771, 0.66", "-1.45035, 34.2869, 3.1106, 0.66", "-1.85506, 34.9052, 2.20012, 1.18", "-2.37308, 35.7328, 1.04035, 1.18", "-2.54344, 36.0275, 0.660049, 1.18", "-3.05975, 37.0166, -0.566074, 1.32", "-3.34851, 37.5825, -1.39752, 1.32", "-3.75645, 38.2901, -2.67323, 0.88", "-4.24891, 39.1285, -4.35398, 0.88", "-4.3138, 39.2365, -4.59485, 0.88", "-4.72009, 39.8224, -6.11344, 0.88", "-5.41634, 40.6421, -8.80084, 0.66", "-5.79377, 41.0584, -10.4515, 0.44" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-1.87962, 19.1935, 24.0105, 0.44", "-2.53655, 20.361, 23.3161, 0.44", "-3.02132, 21.5315, 22.5873, 0.95", "-3.13544, 21.9709, 22.2674, 0.73", "-3.27884, 22.6928, 21.8493, 0.44", "-3.40148, 23.3101, 21.4917, 0.44", "-3.52696, 23.9417, 21.1259, 0.44", "-3.46496, 24.5727, 20.7068, 0.59", "-3.1297, 25.354, 20.1612, 0.59", "-1.83468, 27.3609, 18.4587, 0.37" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "17.7535, -1.18445, -17.7858, 0.73", "17.9206, -1.15817, -18.6615, 0.73", "18.5199, -1.02108, -21.7085, 0.73", "19.3082, -0.856109, -25.4194, 0.73", "19.7756, -0.822302, -27.6055, 0.73", "20.2707, -0.850048, -29.9519, 0.73", "20.783, -0.925617, -32.3463, 1.18", "21.396, -1.08996, -35.0789, 1.47", "21.9651, -1.34422, -37.3822, 1.47", "22.7406, -1.91604, -40.3402, 1.1", "23.6003, -2.7207, -43.2647, 0.66", "24.1025, -3.25175, -44.7655, 1.84", "24.641, -3.86283, -46.2007, 0.15", "25.059, -4.37874, -47.2509, 1.62", "26.7399, -6.56214, -51.3117, 0.07", "27.2732, -7.23228, -52.5234, 1.69", "28.2254, -8.46793, -54.8216, 0.07", "28.4342, -8.74777, -55.4018, 0.37", "28.8193, -9.25704, -56.6398, 0.07", "29.2135, -9.79135, -58.0376, 0.73", "29.7941, -10.775, -60.6809, 2.06", "30.2592, -11.8343, -63.6387, 0.22", "30.4478, -12.548, -65.6038, 0.51", "30.513, -13.3366, -67.7722, 1.25", "30.4683, -13.6666, -68.6664, 1.98", "29.8768, -15.0512, -72.3058, 0.07", "29.653, -15.3156, -72.9364, 0.07", "28.981, -15.8659, -74.087, 1.62", "27.899, -16.5805, -75.3707, 0.07", "26.7532, -17.2344, -76.3647, 0.07", "25.9524, -17.6252, -76.8944, 1.32", "24.3165, -18.3302, -77.7183, 0.15", "23.4756, -18.669, -78.1002, 0.66", "22.5744, -19.0216, -78.481, 0.07", "21.8461, -19.3102, -78.7606, 1.03", "20.7461, -19.7498, -79.1612, 0.07", "19.428, -20.273, -79.6662, 1.1", "17.5869, -20.9821, -80.3808, 0.07", "16.0759, -21.5504, -81.0417, 0.07", "15.5016, -21.7549, -81.3207, 0.81" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "17.7535, -1.18445, -17.7858, 0.37", "18.383, 0.104657, -17.6322, 0.37", "18.8361, 1.26908, -17.7151, 1.03", "19.1232, 2.36799, -17.9472, 0.37", "19.2733, 3.38304, -18.3192, 0.73", "19.317, 4.17721, -18.7038, 0.44", "19.3094, 5.34155, -19.3362, 1.32", "19.1351, 6.66743, -20.2156, 0.37", "18.8122, 7.9061, -21.178, 1.98", "18.2863, 9.33671, -22.4425, 0.59", "17.9102, 10.2048, -23.2803, 0.37", "17.8021, 10.4433, -23.5265, 0.07", "17.5408, 11.0192, -24.1395, 0.44", "17.1664, 11.9085, -25.0293, 0.37", "16.6791, 13.3523, -26.3611, 1.25", "16.299, 14.9427, -27.6655, 0.51", "16.1399, 15.9203, -28.3913, 0.07", "16.0565, 16.5947, -28.8464, 0.88", "15.9834, 17.2765, -29.2496, 0.15", "15.8687, 18.3176, -29.7357, 1.47", "15.6441, 20.0057, -30.3609, 0.51", "15.5256, 20.6274, -30.543, 1.32", "15.2562, 21.6245, -30.8292, 1.32", "14.9446, 22.4859, -31.1047, 0.07", "14.7371, 22.9197, -31.2765, 0.37", "14.3034, 23.6606, -31.6044, 0.07", "13.7823, 24.4598, -32.0209, 0.07", "13.3754, 25.111, -32.3941, 1.18", "13.0211, 25.706, -32.7241, 1.18", "12.3798, 26.8885, -33.3209, 0.07", "12.0644, 27.5511, -33.6158, 0.73", "11.4755, 28.9398, -34.0899, 0.22", "10.9473, 30.3892, -34.475, 2.2", "10.4343, 32.0689, -34.7744, 0.07", "10.2359, 32.9192, -34.8829, 0.07", "10.0572, 34.0914, -35.009, 0.07", "9.95771, 35.292, -35.1501, 0.95", "9.96655, 36.1717, -35.2695, 0.07", "10.0751, 37.074, -35.4589, 1.47", "10.2792, 38.1394, -35.8331, 1.47", "10.6122, 39.739, -36.6218, 0.07", "10.7299, 40.2843, -36.9657, 0.88", "10.9285, 41.1144, -37.5082, 0.15", "11.1168, 41.8264, -37.9259, 0.95", "11.6044, 43.4565, -38.7145, 0.29", "11.9375, 43.8904, -38.1538, 0.29", "12.2957, 44.2449, -37.3665, 0.29", "13.129, 44.9334, -35.3206, 0.29", "13.882, 45.4879, -33.3514, 1.32", "14.6667, 45.9891, -31.2109, 0.51", "14.9482, 46.1512, -30.4344, 1.25" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "19.3398, -8.99308, -14.3792, 0.15", "20.6896, -10.128, -13.722, 0.15", "21.2624, -10.6497, -13.2791, 1.32", "21.6779, -11.0687, -12.7924, 1.32", "22.5023, -12.0279, -11.3777, 0.37", "22.6908, -12.3003, -10.9141, 0.66", "22.9065, -12.657, -10.2706, 0.29", "23.3627, -13.5862, -8.46732, 1.69", "23.679, -14.4393, -6.79187, 1.69", "23.9478, -15.4082, -4.85351, 1.18", "24.2166, -16.535, -2.69342, 0.81", "24.4145, -17.2999, -1.29837, 0.37", "24.5196, -17.6846, -0.670416, 0.37", "24.8037, -18.5755, 0.502593, 1.62", "25.1325, -19.4269, 1.38846, 2.06", "25.9287, -19.7839, 0.0959817, 0.66", "26.5456, -20.1224, -0.85054, 0.37", "27.9406, -20.7761, -3.01574, 0.51", "28.7991, -21.12, -4.44657, 0.22", "29.8484, -21.4491, -6.34973, 1.1", "31.354, -21.7922, -9.37475, 0.37", "31.5873, -21.8165, -9.91609, 0.37", "32.0347, -21.8295, -11.116, 0.22" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "19.3398, -8.99308, -14.3792, 1.54", "18.3226, -10.1135, -12.8563, 1.54", "17.1419, -11.5903, -10.8596, 0.22", "16.5005, -12.4751, -9.70358, 1.76", "15.9456, -13.2699, -8.7036, 1.76", "15.0529, -14.5725, -7.08474, 0.29", "14.6, -15.2414, -6.29781, 0.51", "13.9351, -16.3154, -5.17129, 0.07", "13.7313, -16.6685, -4.84215, 0.66", "13.4692, -17.1267, -4.44096, 0.66", "12.6375, -18.5148, -3.32811, 0.15", "12.0928, -19.3455, -2.7253, 2.13", "10.9077, -21.0933, -1.61645, 0.07", "10.1773, -22.0965, -1.04162, 0.07", "9.71803, -22.6939, -0.692708, 1.76", "8.35933, -24.3752, 0.265201, 0.15", "7.56942, -25.2796, 0.741617, 0.15", "7.1754, -25.6971, 0.955846, 0.15", "6.78129, -26.0942, 1.12318, 0.51", "5.81652, -27.0128, 1.4949, 0.07", "5.21995, -27.5591, 1.72761, 1.54", "3.82409, -28.8228, 2.21086, 0.29", "2.92385, -29.7223, 2.63152, 0.44", "2.1533, -30.6116, 3.10997, 2.2", "1.05842, -32.113, 3.9613, 0.22", "0.690019, -32.7583, 4.41871, 0.51", "0.31581, -33.6487, 5.18293, 0.95", "-0.119805, -35.5755, 7.28861, 0.95", "-0.164883, -36.3192, 8.3371, 0.95", "-0.149163, -36.6525, 8.99598, 1.54", "0.0152631, -37.6964, 11.851, 0.44", "0.0736221, -37.8843, 12.5656, 1.18", "0.305049, -38.2974, 14.9326, 0.59", "0.612029, -38.5693, 17.5773, 1.18", "1.14692, -38.7594, 21.5242, 1.18", "1.50218, -38.7828, 23.6853, 1.03", "2.01601, -38.7079, 26.2248, 1.47", "2.57289, -38.5445, 28.581, 0.95", "3.19015, -38.2787, 30.8134, 0.44", "3.51575, -38.1244, 31.86, 1.1", "3.78353, -38.0042, 32.636, 0.15", "3.95228, -37.9378, 33.2037, 1.03", "4.31416, -37.8228, 34.9053, 1.03", "4.43712, -37.8313, 35.7549, 0.22", "4.62074, -37.9438, 37.977, 0.59", "4.65626, -37.9811, 38.6693, 0.81", "4.6629, -38.076, 40.0711, 0.22", "4.63668, -38.2195, 41.3013, 0.22", "4.6244, -38.484, 42.5489, 0.22", "4.6888, -38.6234, 43.0488, 0.66", "4.90352, -38.7494, 43.497, 0.66" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-17.8911, -14.8076, -17.4757, 0.15", "-16.5957, -15.9186, -17.5015, 0.15", "-15.0413, -17.1355, -17.5002, 0.15", "-14.5779, -17.4756, -17.495, 0.73", "-13.7892, -17.9963, -17.5108, 1.1", "-12.6342, -18.7084, -17.5531, 0.07", "-11.8076, -19.1752, -17.6355, 0.07", "-10.8574, -19.6178, -17.8721, 1.54", "-10.0956, -19.9114, -18.1786, 1.54", "-8.90527, -20.3219, -18.7392, 0.07", "-7.90711, -20.6309, -19.361, 1.1", "-6.62413, -21.0351, -20.3652, 0.07", "-5.32045, -21.4436, -21.6164, 0.07", "-4.51277, -21.6808, -22.5597, 1.25", "-4.08617, -21.7908, -23.1772, 1.54", "-2.86002, -22.115, -25.1707, 0.22", "-2.18588, -22.291, -26.3595, 1.03", "-1.56222, -22.4882, -27.4663, 1.47", "-0.99527, -22.7056, -28.4588, 1.91", "-0.25617, -23.0142, -29.8452, 1.91", "0.469338, -23.327, -31.2603, 0.07", "0.639759, -23.4062, -31.5242, 0.37", "1.17789, -23.667, -32.1844, 0.07", "1.55398, -23.9824, -32.3814, 0.44" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-17.8911, -14.8076, -17.4757, 0.59", "-18.6148, -14.6438, -17.7844, 0.59", "-19.2423, -14.5508, -17.9989, 0.59", "-20.1062, -14.481, -18.2877, 0.59", "-20.8608, -14.4357, -18.5708, 0.81", "-22.0531, -14.3874, -19.0095, 1.4", "-22.9469, -14.3886, -19.3337, 1.54", "-24.0082, -14.4664, -19.6713, 1.25", "-25.7624, -14.6896, -20.2264, 0.29", "-27.7801, -15.0418, -20.8655, 0.81", "-28.9067, -15.2876, -21.2298, 0.22", "-30.8497, -15.7687, -21.8884, 1.98", "-32.9733, -16.3382, -22.6081, 0.15", "-34.5563, -16.7842, -23.1505, 1.4", "-35.5266, -17.077, -23.4695, 2.13", "-36.3935, -17.3457, -23.7404, 2.13", "-37.9335, -17.7778, -24.2231, 0.29", "-38.5616, -17.9174, -24.4069, 0.51", "-39.5187, -18.0785, -24.6716, 0.51", "-40.4417, -18.2202, -24.8736, 1.03", "-41.4538, -18.357, -25.0681, 0.59", "-42.4673, -18.4723, -25.21, 1.32", "-43.2059, -18.5502, -25.2713, 2.13", "-44.8963, -18.6968, -25.3878, 0.07", "-46.1036, -18.7664, -25.4518, 0.81", "-47.1536, -18.7723, -25.552, 0.15", "-47.9834, -18.7455, -25.6559, 0.15", "-48.5014, -18.6974, -25.7293, 0.15", "-49.4321, -18.5547, -25.8515, 1.4", "-50.1964, -18.3925, -25.9399, 2.28", "-52.4363, -17.8626, -26.2408, 0.29", "-53.2867, -17.6517, -26.3945, 0.07", "-54.562, -17.336, -26.6651, 1.1", "-55.2751, -17.1352, -26.8125, 0.29", "-56.0358, -16.8932, -26.9958, 0.66", "-57.1575, -16.4925, -27.3028, 0.15", "-58.3156, -16.0007, -27.8757, 1.84", "-58.6926, -15.8023, -28.1864, 1.69", "-59.6813, -15.0738, -29.446, 0.15", "-60.385, -14.3422, -30.8105, 0.15", "-60.647, -13.9452, -31.6591, 1.4", "-61.3071, -12.5567, -34.875, 2.13", "-61.5824, -11.8059, -36.7233, 2.13", "-61.8354, -10.9257, -38.9632, 0.22", "-61.9863, -10.1097, -41.0378, 1.4", "-62.1662, -8.43963, -45.0714, 0.73", "-62.2018, -7.95005, -46.1942, 1.03", "-62.2616, -7.27253, -47.6622, 0.29", "-62.3092, -6.83606, -48.6489, 0.29", "-62.3678, -6.4639, -49.5267, 0.29", "-62.4557, -6.08674, -50.2631, 0.29", "-62.5, -5.78388, -50.6083, 0.95" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-15.6767, -17.1306, -9.10587, 0.51", "-15.166, -17.61, -8.31468, 0.51", "-14.566, -18.1592, -7.5682, 0.59", "-13.5379, -19.0235, -6.58912, 1.25", "-12.4024, -19.9452, -5.69018, 1.54", "-12.0848, -20.2009, -5.47069, 1.54", "-11.3091, -20.8326, -4.97821, 0.66", "-10.4699, -21.4916, -4.54372, 0.81", "-9.45606, -22.299, -4.11928, 0.37", "-8.68419, -22.9408, -3.8465, 0.95", "-7.77829, -23.7628, -3.51788, 1.84", "-6.44511, -25.0662, -2.98577, 0.51", "-5.97858, -25.5794, -2.77029, 0.07", "-5.21078, -26.5297, -2.37473, 1.1", "-4.73204, -27.2187, -2.10322, 0.37", "-4.13719, -28.2055, -1.75927, 1.18", "-3.59179, -29.3096, -1.43333, 2.5", "-2.97835, -30.9841, -1.05193, 0.37", "-2.74759, -31.8567, -0.891391, 0.88", "-2.58163, -32.7145, -0.783033, 0.07", "-2.39329, -33.8096, -0.708011, 1.47", "-2.23551, -34.8711, -0.692595, 1.98", "-2.008, -36.7312, -0.732925, 0.51", "-1.87208, -37.876, -0.829823, 0.07", "-1.6999, -39.3416, -0.973596, 1.76", "-1.49878, -40.8184, -1.14682, 0.07", "-1.3472, -41.7601, -1.27608, 0.73", "-1.15172, -42.6858, -1.42869, 0.07", "-0.825289, -43.8573, -1.67642, 1.4" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-15.6767, -17.1306, -9.10587, 0.51", "-16.5216, -18.3802, -8.47173, 0.51", "-17.2328, -19.4355, -7.9157, 0.66", "-17.7211, -20.165, -7.50866, 0.22", "-18.2761, -21.0179, -7.06251, 0.51", "-18.5873, -21.4916, -6.80273, 0.07", "-18.8609, -21.9054, -6.55074, 0.37", "-19.3762, -22.7404, -6.03065, 0.07", "-19.6349, -23.163, -5.76249, 0.81", "-20.2508, -24.1257, -5.12228, 0.07", "-20.9928, -25.2345, -4.35339, 0.15", "-21.7424, -26.3193, -3.58922, 0.15", "-22.4518, -27.338, -2.87803, 2.2", "-23.2722, -28.5196, -2.12757, 0.29", "-24.0098, -29.587, -1.51798, 0.15", "-24.9099, -30.9067, -0.850151, 1.54", "-25.5808, -31.9319, -0.456399, 0.22", "-25.9668, -32.5447, -0.281784, 0.88", "-26.9934, -34.2289, 0.0795738, 0.15", "-27.5478, -35.1659, 0.2032, 1.76", "-28.0375, -36.0285, 0.221138, 2.06", "-28.693, -37.2291, 0.148333, 0.37", "-28.9952, -37.8092, 0.0949651, 0.81", "-29.2921, -38.3671, 0.0203589, 0.07", "-29.8295, -39.3384, -0.153207, 0.81", "-30.1854, -39.904, -0.284757, 0.07", "-30.6063, -40.4852, -0.441594, 0.29", "-31.268, -41.2859, -0.670951, 0.07", "-31.9086, -41.9757, -0.880031, 1.54", "-32.2811, -42.3575, -1.00926, 1.62", "-33.4621, -43.5434, -1.41631, 0.29", "-34.0334, -44.147, -1.60889, 0.66", "-34.5967, -44.7825, -1.81253, 1.47", "-35.47, -45.839, -2.1497, 0.07", "-36.2504, -46.9221, -2.48272, 0.07", "-36.7252, -47.6943, -2.72181, 1.54", "-37.4159, -49.0673, -3.13756, 0.15", "-37.6868, -49.6838, -3.32851, 0.07", "-38.0374, -50.613, -3.6201, 0.95", "-38.3663, -51.7069, -3.95184, 0.29", "-38.5776, -52.5097, -4.18151, 1.69", "-38.6248, -52.711, -4.24799, 1.69" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-20.6587, -11.037, 13.9082, 0.59", "-20.5475, -10.9886, 14.42, 0.59", "-20.1658, -10.788, 16.0628, 0.59", "-19.687, -10.6224, 17.8709, 1.03", "-19.0327, -10.4776, 20.0069, 1.4", "-18.2287, -10.3329, 22.4442, 1.1", "-17.7791, -10.248, 23.7142, 1.25", "-17.6515, -10.2197, 24.054, 1.69", "-16.6183, -9.93783, 26.4359, 0.51", "-16.2115, -9.79786, 27.2336, 0.59", "-15.5571, -9.52191, 28.3348, 0.44", "-14.8749, -9.16583, 29.3749, 0.66", "-14.4022, -8.88826, 30.0991, 1.03", "-14.0541, -8.63282, 30.6426, 1.03", "-13.5475, -8.07112, 31.4333, 1.03", "-12.997, -7.34128, 32.3586, 0.37", "-12.6527, -6.86519, 32.8858, 0.95" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-20.6587, -11.037, 13.9082, 0.22", "-21.078, -11.409, 13.7215, 0.22", "-21.7486, -11.9307, 13.227, 0.81", "-22.5173, -12.5217, 12.6426, 0.37", "-23.2131, -13.093, 12.1897, 0.07", "-23.9492, -13.7305, 11.7596, 0.95", "-25.0399, -14.692, 11.1843, 0.07", "-26.4232, -15.8076, 10.6301, 0.07", "-27.2119, -16.3842, 10.4374, 0.59", "-28.3563, -17.1376, 10.3893, 0.07", "-28.7539, -17.3643, 10.4545, 0.07", "-29.2179, -17.5801, 10.5923, 0.95", "-30.5894, -18.0418, 11.1522, 0.07", "-31.3826, -18.2063, 11.4874, 0.07", "-32.2453, -18.2988, 11.6383, 0.88", "-32.9005, -18.3398, 11.4876, 0.07", "-33.3923, -18.3643, 11.3201, 0.59", "-34.3925, -18.4231, 10.8066, 0.07", "-34.8637, -18.4629, 10.4636, 1.25", "-36.4782, -18.6433, 9.00494, 0.07", "-37.806, -18.8222, 7.56003, 1.25" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-0.825289, -43.8573, -1.67642, 0.29", "-1.32076, -43.4062, -3.15917, 0.29", "-1.82122, -42.8015, -4.89291, 1.47", "-2.64809, -41.7185, -7.69083, 0.15", "-2.8231, -41.4909, -8.24887, 0.44", "-3.19292, -40.9998, -9.3644, 0.15", "-3.52859, -40.5392, -10.3531, 1.25", "-4.14667, -39.5512, -12.277, 0.22", "-4.35627, -39.1935, -12.8992, 0.37", "-4.76146, -38.4424, -14.0605, 0.07", "-5.09299, -37.8548, -15.0096, 0.44", "-5.65015, -37.0313, -16.349, 0.07" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-0.825289, -43.8573, -1.67642, 1.03", "-0.465352, -45.0488, -1.30089, 1.03", "-0.208754, -46.0013, -1.01397, 0.15", "0.0352181, -47.0298, -0.686515, 1.32", "0.268799, -48.223, -0.293721, 0.22", "0.40369, -49.068, 0.00815953, 0.22", "0.556708, -50.2345, 0.433213, 2.13", "0.697856, -52.3524, 1.22349, 0.15", "0.706506, -53.3305, 1.57352, 0.15", "0.643772, -54.6281, 1.99709, 1.25", "0.514789, -55.8287, 2.35246, 0.22", "0.397126, -56.5131, 2.54607, 0.29", "0.129338, -57.5598, 2.85908, 0.07", "-0.196588, -58.4747, 3.16178, 0.07", "-0.391071, -58.9512, 3.34223, 1.54", "-0.913999, -60.1242, 3.8506, 0.15", "-1.15255, -60.6403, 4.09346, 0.51", "-1.70138, -61.8338, 4.75893, 0.07", "-2.1383, -62.8008, 5.35229, 1.25", "-2.43451, -63.4601, 5.79041, 0.07", "-2.53672, -63.709, 5.9649, 0.07", "-2.77173, -64.3673, 6.47569, 1.18", "-3.08958, -65.4463, 7.34209, 0.15", "-3.28716, -66.1787, 8.01446, 0.73", "-3.49445, -66.8515, 8.71731, 0.07", "-3.86035, -67.7041, 9.77764, 1.25", "-4.384, -68.549, 11.0967, 0.22", "-4.77006, -69.0135, 11.9676, 1.18", "-5.70054, -69.9002, 13.8469, 0.07", "-6.13846, -70.2675, 14.6499, 0.37", "-7.16695, -71.0275, 16.256, 1.1", "-8.34637, -71.8138, 17.8018, 0.07", "-9.06966, -72.299, 18.5903, 1.18", "-10.0409, -72.9482, 19.5594, 0.07", "-10.6294, -73.3678, 20.0852, 1.1", "-11.9004, -74.3788, 21.2092, 0.07", "-12.4252, -74.8583, 21.6182, 1.18", "-13.3485, -75.8109, 22.1821, 0.07" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-12.6527, -6.86519, 32.8858, 0.07", "-13.4787, -6.53524, 32.8742, 0.07", "-13.9636, -6.38, 32.9546, 0.15", "-14.66, -6.22508, 33.2083, 0.37", "-15.6177, -6.10894, 33.7068, 0.07", "-16.465, -6.08189, 34.3684, 0.88", "-17.4171, -6.12087, 35.4473, 0.37", "-18.0984, -6.24995, 36.617, 0.66", "-18.5449, -6.48094, 37.9987, 0.73", "-18.6798, -6.69047, 38.94, 0.73", "-18.7102, -7.2044, 40.7813, 0.73", "-18.5997, -7.65199, 42.2426, 0.73", "-18.5371, -7.76427, 42.5818, 0.95", "-18.0922, -8.28811, 44.1326, 0.29", "-17.7672, -8.57008, 44.9657, 0.51", "-17.4671, -8.79502, 45.6017, 0.66" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-12.6527, -6.86519, 32.8858, 0.66", "-11.5498, -6.81476, 32.8877, 0.66", "-10.7873, -6.7799, 32.8891, 0.07", "-10.1872, -6.75246, 32.8902, 0.07", "-9.63212, -6.72708, 32.8912, 0.29" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_33", "dend_22", "dend_11", "dend_6", "dend_5", "dend_0", "dend_41", "dend_34", "dend_32", "dend_23", "dend_15", "dend_12", "dend_10", "dend_7", "dend_2", "dend_1", "dend_43", "dend_42", "dend_38", "dend_35", "dend_29", "dend_24", "dend_17", "dend_16", "dend_14", "dend_13", "dend_9", "dend_8", "dend_4", "dend_3", "dend_40", "dend_39", "dend_37", "dend_36", "dend_31", "dend_30", "dend_26", "dend_25", "dend_19", "dend_18", "dend_28", "dend_27", "dend_21", "dend_20" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_33", "dend_22", "dend_11", "dend_6", "dend_5", "dend_0", "dend_41", "dend_34", "dend_32", "dend_23", "dend_15", "dend_12", "dend_10", "dend_7", "dend_2", "dend_1", "dend_43", "dend_42", "dend_38", "dend_35", "dend_29", "dend_24", "dend_17", "dend_16", "dend_14", "dend_13", "dend_9", "dend_8", "dend_4", "dend_3", "dend_40", "dend_39", "dend_37", "dend_36", "dend_31", "dend_30", "dend_26", "dend_25", "dend_19", "dend_18", "dend_28", "dend_27", "dend_21", "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_22", "dend_22", "dend_22", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_34", "dend_34", "dend_34", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_23", "dend_23", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L1_DAC_a9ae5cbbf5_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_33, id: dend_33, parent: soma_0
create dend_33
public dend_33
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_6, id: dend_6, parent: soma_0
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_41, id: dend_41, parent: dend_33
create dend_41
public dend_41
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_32, id: dend_32, parent: dend_22
create dend_32
public dend_32
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_38, id: dend_38, parent: dend_34
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_29, id: dend_29, parent: dend_23
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_33, dend_22, dend_11, dend_6, dend_5, dend_0, dend_41, dend_34, dend_32, dend_23, dend_15, dend_12, dend_10, dend_7, dend_2, dend_1, dend_43, dend_42, dend_38, dend_35, dend_29, dend_24, dend_17, dend_16, dend_14, dend_13, dend_9, dend_8, dend_4, dend_3, dend_40, dend_39, dend_37, dend_36, dend_31, dend_30, dend_26, dend_25, dend_19, dend_18, dend_28, dend_27, dend_21, dend_20]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_33, dend_22, dend_11, dend_6, dend_5, dend_0, dend_41, dend_34, dend_32, dend_23, dend_15, dend_12, dend_10, dend_7, dend_2, dend_1, dend_43, dend_42, dend_38, dend_35, dend_29, dend_24, dend_17, dend_16, dend_14, dend_13, dend_9, dend_8, dend_4, dend_3, dend_40, dend_39, dend_37, dend_36, dend_31, dend_30, dend_26, dend_25, dend_19, dend_18, dend_28, dend_27, dend_21, dend_20]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_44
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_22, dend_22, dend_22, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_33(0), soma_0(0.45000009989550144)
    connect dend_22(0), soma_0(0.45000009989550144)
    connect dend_11(0), soma_0(0.45000009989550144)
    connect dend_6(0), soma_0(0.45000009989550144)
    connect dend_5(0), soma_0(0.45000009989550144)
    connect dend_0(0), soma_0(0.45000009989550144)
    connect axon_0(0), soma_0(1.0)
    connect dend_41(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_32(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_38(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_29(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -7.34832, 0.192624, 0.0, 4.27235 ) }
    soma_0 { pt3dadd( -6.59755, 0.18583, 0.0, 7.67526 ) }
    soma_0 { pt3dadd( -5.84678, 0.179036, 0.0, 8.97634 ) }
    soma_0 { pt3dadd( -5.09602, 0.172242, 0.0, 10.1105 ) }
    soma_0 { pt3dadd( -4.34525, 0.165448, 0.0, 10.8385 ) }
    soma_0 { pt3dadd( -3.59448, 0.158653, 0.0, 11.4973 ) }
    soma_0 { pt3dadd( -2.84371, 0.151859, 0.0, 12.1418 ) }
    soma_0 { pt3dadd( -2.09294, 0.145065, 0.0, 12.4704 ) }
    soma_0 { pt3dadd( -1.34217, 0.138271, 0.0, 12.6978 ) }
    soma_0 { pt3dadd( -0.591402, 0.131477, 0.0, 12.8422 ) }
    soma_0 { pt3dadd( 0.159367, 0.124683, 0.0, 12.8527 ) }
    soma_0 { pt3dadd( 0.910135, 0.117889, 0.0, 12.8539 ) }
    soma_0 { pt3dadd( 1.6609, 0.111095, 0.0, 12.7853 ) }
    soma_0 { pt3dadd( 2.41167, 0.104301, 0.0, 12.4148 ) }
    soma_0 { pt3dadd( 3.16244, 0.0975065, 0.0, 11.8273 ) }
    soma_0 { pt3dadd( 3.91321, 0.0907124, 0.0, 11.1391 ) }
    soma_0 { pt3dadd( 4.66398, 0.0839183, 0.0, 10.2578 ) }
    soma_0 { pt3dadd( 5.41475, 0.0771242, 0.0, 9.36424 ) }
    soma_0 { pt3dadd( 6.16552, 0.07033, 0.0, 8.24972 ) }
    soma_0 { pt3dadd( 6.91629, 0.0635359, 0.0, 5.54548 ) }
    soma_0 { pt3dadd( 7.66705, 0.0567418, 0.0, 3.28369 ) }
    // Section: dend_33, id: dend_33, parent: soma_0 (entry count 21/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 7.07651, -1.07088, -8.36, 1.69 ) }
    dend_33 { pt3dadd( 8.05479, -1.28508, -9.37223, 1.25 ) }
    dend_33 { pt3dadd( 9.36778, -1.57258, -10.7308, 1.25 ) }
    dend_33 { pt3dadd( 10.5226, -1.82545, -11.9257, 1.62 ) }
    dend_33 { pt3dadd( 11.0754, -1.94648, -12.4977, 1.62 ) }
    dend_33 { pt3dadd( 12.6336, -2.28767, -14.11, 2.35 ) }
    dend_33 { pt3dadd( 12.9884, -2.36534, -14.477, 2.64 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 28/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -3.37349, -5.07813, -4.28, 1.54 ) }
    dend_22 { pt3dadd( -4.16179, -6.04218, -5.18544, 1.54 ) }
    dend_22 { pt3dadd( -5.06622, -7.14825, -6.22427, 1.69 ) }
    dend_22 { pt3dadd( -5.79887, -8.04423, -7.06579, 1.84 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 32/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -6.21349, -2.01663, -2.25, 1.4 ) }
    dend_11 { pt3dadd( -6.7943, -2.11658, -2.23382, 1.4 ) }
    dend_11 { pt3dadd( -7.90534, -2.29712, -2.24294, 1.4 ) }
    dend_11 { pt3dadd( -8.45133, -2.38138, -2.27351, 1.4 ) }
    dend_11 { pt3dadd( -9.1585, -2.49372, -2.35612, 1.03 ) }
    dend_11 { pt3dadd( -10.3894, -2.68927, -2.49991, 1.25 ) }
    dend_11 { pt3dadd( -11.3863, -2.84763, -2.61636, 1.62 ) }
    dend_11 { pt3dadd( -12.3786, -3.00279, -2.75328, 1.62 ) }
    dend_11 { pt3dadd( -13.4118, -3.14968, -2.92898, 1.47 ) }
    dend_11 { pt3dadd( -14.9232, -3.3552, -3.23735, 2.06 ) }
    // Section: dend_6, id: dend_6, parent: soma_0 (entry count 42/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -5.73349, 1.79562, 5.81, 1.32 ) }
    dend_6 { pt3dadd( -6.27181, 1.86509, 6.42647, 0.88 ) }
    dend_6 { pt3dadd( -7.1561, 1.97922, 7.43916, 1.54 ) }
    dend_6 { pt3dadd( -8.42985, 2.1436, 8.89783, 1.4 ) }
    dend_6 { pt3dadd( -9.70661, 2.30837, 10.36, 1.84 ) }
    dend_6 { pt3dadd( -10.5408, 2.41602, 11.3152, 1.98 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 48/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -3.38349, 5.04237, 5.24, 1.1 ) }
    dend_5 { pt3dadd( -4.69255, 5.80563, 5.68175, 1.18 ) }
    dend_5 { pt3dadd( -6.29851, 6.59397, 6.22289, 0.81 ) }
    dend_5 { pt3dadd( -7.65437, 7.20778, 6.68172, 0.73 ) }
    dend_5 { pt3dadd( -8.63458, 7.73699, 7.0009, 1.03 ) }
    dend_5 { pt3dadd( -8.19557, 6.55931, 6.94803, 0.66 ) }
    dend_5 { pt3dadd( -8.10838, 5.76741, 6.98829, 0.51 ) }
    dend_5 { pt3dadd( -8.08676, 5.00504, 7.01371, 0.51 ) }
    dend_5 { pt3dadd( -8.03317, 3.82533, 7.00864, 0.51 ) }
    dend_5 { pt3dadd( -7.92936, 2.64308, 6.94943, 0.37 ) }
    dend_5 { pt3dadd( -7.7258, 0.979782, 6.84122, 0.37 ) }
    dend_5 { pt3dadd( -7.59152, 0.106847, 6.79149, 0.37 ) }
    dend_5 { pt3dadd( -7.43989, -0.746123, 6.74834, 0.37 ) }
    dend_5 { pt3dadd( -7.26859, -1.60026, 6.67542, 0.59 ) }
    dend_5 { pt3dadd( -7.13805, -2.19417, 6.61538, 0.44 ) }
    dend_5 { pt3dadd( -6.86882, -3.29301, 6.49474, 0.88 ) }
    dend_5 { pt3dadd( -6.41109, -5.07412, 6.26247, 0.44 ) }
    dend_5 { pt3dadd( -6.02851, -6.5838, 6.04423, 0.29 ) }
    dend_5 { pt3dadd( -5.73503, -7.72855, 5.84086, 0.29 ) }
    dend_5 { pt3dadd( -5.57334, -8.33126, 5.67047, 0.29 ) }
    dend_5 { pt3dadd( -5.33896, -9.25074, 5.32665, 0.07 ) }
    dend_5 { pt3dadd( -5.04349, -10.4137, 4.61254, 0.44 ) }
    dend_5 { pt3dadd( -4.8689, -11.0183, 4.12113, 0.66 ) }
    dend_5 { pt3dadd( -4.59429, -11.8281, 3.38058, 0.22 ) }
    dend_5 { pt3dadd( -4.18308, -12.9001, 2.40045, 0.07 ) }
    dend_5 { pt3dadd( -4.02047, -13.2776, 2.04907, 0.07 ) }
    dend_5 { pt3dadd( -3.121, -15.1717, 0.19272, 1.18 ) }
    dend_5 { pt3dadd( -2.60797, -16.1224, -0.773998, 1.18 ) }
    dend_5 { pt3dadd( -2.26382, -16.7429, -1.44201, 0.22 ) }
    dend_5 { pt3dadd( -2.0983, -17.0488, -1.7941, 0.59 ) }
    dend_5 { pt3dadd( -1.66144, -17.8797, -2.82789, 0.15 ) }
    dend_5 { pt3dadd( -1.23261, -18.7086, -4.00107, 0.15 ) }
    dend_5 { pt3dadd( -0.962169, -19.2539, -4.85714, 0.15 ) }
    dend_5 { pt3dadd( -0.622165, -19.8714, -5.98178, 0.15 ) }
    dend_5 { pt3dadd( -0.173936, -20.5565, -7.39346, 0.37 ) }
    dend_5 { pt3dadd( 0.361608, -21.3214, -9.06101, 0.07 ) }
    dend_5 { pt3dadd( 0.854568, -21.9579, -10.529, 0.29 ) }
    dend_5 { pt3dadd( 1.33527, -22.5392, -11.8668, 0.07 ) }
    dend_5 { pt3dadd( 1.82396, -23.1123, -13.1823, 0.07 ) }
    dend_5 { pt3dadd( 2.24236, -23.5419, -14.1919, 0.07 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 88/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -2.55349, 5.09112, 9.13, 1.84 ) }
    dend_0 { pt3dadd( -2.64003, 5.38363, 9.44402, 1.84 ) }
    dend_0 { pt3dadd( -2.93035, 6.36498, 10.4976, 2.06 ) }
    dend_0 { pt3dadd( -3.18305, 7.21914, 11.4145, 2.42 ) }
    dend_0 { pt3dadd( -3.56294, 8.50324, 12.7931, 1.84 ) }
    dend_0 { pt3dadd( -3.74218, 9.1091, 13.4435, 1.62 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 94/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 7.66705, 0.0567418, 0.0, 0.580156 ) }
    axon_0 { pt3dadd( 22.6664, -0.0789957, 0.0, 0.580156 ) }
    axon_0 { pt3dadd( 37.6658, -0.214733, 0.0, 0.580156 ) }
    // Section: dend_41, id: dend_41, parent: dend_33 (entry count 97/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 12.9884, -2.36534, -14.477, 1.32 ) }
    dend_41 { pt3dadd( 12.0165, -1.02777, -16.0227, 1.32 ) }
    dend_41 { pt3dadd( 11.0385, 0.270802, -17.3872, 0.95 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_41 { pt3dadd( 10.5491, 0.917184, -17.9711, 0.95 ) }
    dend_41 { pt3dadd( 9.99243, 1.65017, -18.5201, 1.18 ) }
    dend_41 { pt3dadd( 8.73548, 3.32974, -19.5805, 0.73 ) }
    dend_41 { pt3dadd( 7.94816, 4.39156, -20.3014, 0.73 ) }
    dend_41 { pt3dadd( 7.17845, 5.42899, -20.9424, 0.88 ) }
    dend_41 { pt3dadd( 6.27089, 6.66331, -21.658, 1.18 ) }
    dend_41 { pt3dadd( 5.15188, 8.22447, -22.5299, 0.44 ) }
    dend_41 { pt3dadd( 4.37336, 9.35787, -23.1492, 1.25 ) }
    dend_41 { pt3dadd( 2.52974, 12.1157, -24.5002, 1.47 ) }
    dend_41 { pt3dadd( 1.91342, 13.0438, -24.9691, 1.47 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 10/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 12.9884, -2.36534, -14.477, 2.06 ) }
    dend_34 { pt3dadd( 14.479, -2.32566, -14.5695, 2.06 ) }
    dend_34 { pt3dadd( 15.743, -2.29201, -14.6479, 1.91 ) }
    dend_34 { pt3dadd( 16.6476, -2.26793, -14.704, 1.98 ) }
    // Section: dend_32, id: dend_32, parent: dend_22 (entry count 14/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -5.79887, -8.04423, -7.06579, 0.81 ) }
    dend_32 { pt3dadd( -5.71899, -7.70931, -8.01533, 0.81 ) }
    dend_32 { pt3dadd( -5.46332, -7.05489, -10.1165, 0.81 ) }
    dend_32 { pt3dadd( -5.31049, -6.72786, -11.1467, 0.81 ) }
    dend_32 { pt3dadd( -5.15278, -6.29457, -12.2802, 0.95 ) }
    dend_32 { pt3dadd( -4.94086, -5.32246, -14.3706, 1.18 ) }
    dend_32 { pt3dadd( -4.80474, -4.30776, -16.3218, 1.18 ) }
    dend_32 { pt3dadd( -4.66809, -2.0539, -20.0067, 1.18 ) }
    dend_32 { pt3dadd( -4.69331, -1.28513, -21.0896, 1.18 ) }
    dend_32 { pt3dadd( -4.91429, 0.208752, -22.9906, 0.51 ) }
    dend_32 { pt3dadd( -5.43732, 2.03026, -25.0483, 0.51 ) }
    dend_32 { pt3dadd( -5.93989, 3.14338, -26.1963, 0.73 ) }
    dend_32 { pt3dadd( -6.59791, 4.14776, -27.2595, 0.88 ) }
    dend_32 { pt3dadd( -7.33795, 4.96045, -28.1909, 0.44 ) }
    dend_32 { pt3dadd( -8.26762, 5.7294, -29.3601, 1.47 ) }
    dend_32 { pt3dadd( -9.02221, 6.2088, -30.4143, 0.73 ) }
    dend_32 { pt3dadd( -10.1964, 6.81447, -32.4642, 0.88 ) }
    dend_32 { pt3dadd( -11.7008, 7.50245, -35.6544, 0.15 ) }
    dend_32 { pt3dadd( -12.4162, 7.81362, -37.5393, 1.47 ) }
    dend_32 { pt3dadd( -13.0842, 8.10059, -39.6293, 0.29 ) }
    dend_32 { pt3dadd( -13.6571, 8.38027, -41.8592, 0.51 ) }
    dend_32 { pt3dadd( -14.452, 8.87694, -45.9252, 0.73 ) }
    dend_32 { pt3dadd( -14.8414, 9.23789, -48.5926, 1.76 ) }
    dend_32 { pt3dadd( -15.148, 9.72389, -51.8375, 1.1 ) }
    dend_32 { pt3dadd( -15.3004, 10.221, -54.6885, 1.1 ) }
    dend_32 { pt3dadd( -15.3808, 10.6412, -56.9205, 1.1 ) }
    dend_32 { pt3dadd( -15.4465, 11.1007, -59.1096, 1.1 ) }
    dend_32 { pt3dadd( -15.4858, 11.5643, -60.932, 1.1 ) }
    dend_32 { pt3dadd( -15.4376, 11.9501, -62.313, 0.81 ) }
    dend_32 { pt3dadd( -15.2502, 12.5014, -63.9968, 0.81 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 44/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -5.79887, -8.04423, -7.06579, 2.06 ) }
    dend_23 { pt3dadd( -6.11997, -8.93704, -7.93094, 2.06 ) }
    dend_23 { pt3dadd( -6.56296, -10.1687, -9.1245, 2.06 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 47/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -14.9232, -3.3552, -3.23735, 1.47 ) }
    dend_15 { pt3dadd( -16.1489, -3.87275, -2.28062, 1.47 ) }
    dend_15 { pt3dadd( -17.5523, -4.36686, -1.35359, 1.62 ) }
    dend_15 { pt3dadd( -19.0793, -4.90451, -0.344903, 0.88 ) }
    dend_15 { pt3dadd( -19.9635, -5.21582, 0.239168, 0.88 ) }
    dend_15 { pt3dadd( -20.5627, -5.42681, 0.635004, 0.88 ) }
    dend_15 { pt3dadd( -21.1553, -5.63544, 1.02642, 0.88 ) }
    dend_15 { pt3dadd( -22.0408, -5.80072, 1.5721, 1.62 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 55/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -14.9232, -3.3552, -3.23735, 0.81 ) }
    dend_12 { pt3dadd( -14.9603, -2.66287, -3.83435, 0.81 ) }
    dend_12 { pt3dadd( -15.0096, -1.63587, -4.88208, 0.44 ) }
    dend_12 { pt3dadd( -15.0688, -0.654911, -5.99507, 0.59 ) }
    dend_12 { pt3dadd( -15.1128, 0.073355, -6.82135, 0.73 ) }
    dend_12 { pt3dadd( -15.1777, 1.14913, -8.04191, 1.18 ) }
    dend_12 { pt3dadd( -15.2351, 2.09887, -9.11948, 1.18 ) }
    dend_12 { pt3dadd( -15.266, 3.32557, -10.6665, 1.18 ) }
    dend_12 { pt3dadd( -15.2878, 4.06707, -11.7668, 1.32 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 64/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -10.5408, 2.41602, 11.3152, 0.88 ) }
    dend_10 { pt3dadd( -10.9225, 1.6398, 12.1685, 0.88 ) }
    dend_10 { pt3dadd( -11.3749, 0.576258, 13.1887, 0.37 ) }
    dend_10 { pt3dadd( -11.7376, -0.411102, 14.0208, 1.03 ) }
    dend_10 { pt3dadd( -12.2464, -1.83832, 15.1537, 0.59 ) }
    dend_10 { pt3dadd( -12.3399, -2.11997, 15.3689, 0.59 ) }
    dend_10 { pt3dadd( -12.4795, -2.58363, 15.7349, 0.59 ) }
    dend_10 { pt3dadd( -12.6271, -3.29783, 16.3318, 0.66 ) }
    dend_10 { pt3dadd( -12.7301, -4.22773, 17.1541, 0.22 ) }
    dend_10 { pt3dadd( -12.7611, -5.04471, 17.9042, 1.03 ) }
    dend_10 { pt3dadd( -12.7546, -5.68881, 18.5164, 0.44 ) }
    dend_10 { pt3dadd( -12.736, -6.61325, 19.4923, 0.73 ) }
    dend_10 { pt3dadd( -12.7003, -7.55984, 20.6077, 1.32 ) }
    dend_10 { pt3dadd( -12.6613, -8.7082, 22.1267, 0.88 ) }
    dend_10 { pt3dadd( -12.6314, -9.66826, 23.4743, 0.51 ) }
    dend_10 { pt3dadd( -12.5933, -10.3869, 24.5083, 0.51 ) }
    dend_10 { pt3dadd( -12.5328, -11.3973, 26.0014, 0.59 ) }
    dend_10 { pt3dadd( -12.4939, -12.0822, 27.0324, 0.59 ) }
    dend_10 { pt3dadd( -12.4716, -13.0044, 28.4585, 0.73 ) }
    dend_10 { pt3dadd( -12.4772, -13.123, 28.6518, 0.73 ) }
    dend_10 { pt3dadd( -12.531, -13.4687, 29.2963, 0.73 ) }
    dend_10 { pt3dadd( -12.6315, -13.8503, 30.0323, 0.73 ) }
    dend_10 { pt3dadd( -12.8243, -14.3225, 30.9578, 0.73 ) }
    dend_10 { pt3dadd( -12.9821, -14.6099, 31.5492, 1.25 ) }
    dend_10 { pt3dadd( -13.3439, -15.1959, 33.0944, 0.95 ) }
    dend_10 { pt3dadd( -13.8473, -15.8887, 35.0406, 1.03 ) }
    dend_10 { pt3dadd( -13.9584, -16.0108, 35.409, 1.03 ) }
    dend_10 { pt3dadd( -14.0731, -16.1158, 35.7626, 1.03 ) }
    dend_10 { pt3dadd( -14.1679, -16.193, 36.0779, 1.03 ) }
    dend_10 { pt3dadd( -14.8402, -16.71, 39.073, 0.81 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 94/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -10.5408, 2.41602, 11.3152, 1.03 ) }
    dend_7 { pt3dadd( -12.0808, 3.17652, 11.6552, 1.03 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 96/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -3.74218, 9.1091, 13.4435, 1.03 ) }
    dend_2 { pt3dadd( -3.34782, 9.59999, 14.4664, 1.03 ) }
    dend_2 { pt3dadd( -2.89124, 10.2259, 15.7781, 1.25 ) }
    dend_2 { pt3dadd( -2.52252, 10.9578, 17.1175, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_2 { pt3dadd( -2.18144, 11.8858, 18.6083, 0.59 ) }
    dend_2 { pt3dadd( -1.9179, 12.7509, 19.8323, 0.88 ) }
    dend_2 { pt3dadd( -1.64214, 13.7765, 21.1137, 1.54 ) }
    dend_2 { pt3dadd( -1.58743, 14.1733, 21.5288, 2.06 ) }
    dend_2 { pt3dadd( -1.50329, 15.5747, 22.7806, 0.73 ) }
    dend_2 { pt3dadd( -1.50823, 16.2408, 23.2358, 0.88 ) }
    dend_2 { pt3dadd( -1.59121, 17.1919, 23.6635, 0.81 ) }
    dend_2 { pt3dadd( -1.70848, 18.028, 23.8824, 0.81 ) }
    dend_2 { pt3dadd( -1.87962, 19.1935, 24.0105, 1.1 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 9/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -3.74218, 9.1091, 13.4435, 0.95 ) }
    dend_1 { pt3dadd( -4.88037, 10.4794, 11.7601, 0.95 ) }
    dend_1 { pt3dadd( -5.37847, 11.0142, 11.0842, 1.03 ) }
    dend_1 { pt3dadd( -6.18543, 11.8376, 10.1012, 0.95 ) }
    dend_1 { pt3dadd( -6.8456, 12.5459, 9.31364, 0.81 ) }
    dend_1 { pt3dadd( -7.51607, 13.2934, 8.54114, 1.25 ) }
    dend_1 { pt3dadd( -8.51721, 14.4712, 7.42454, 0.95 ) }
    dend_1 { pt3dadd( -9.59682, 15.7411, 6.43704, 0.95 ) }
    dend_1 { pt3dadd( -10.2605, 16.5488, 5.87053, 1.03 ) }
    dend_1 { pt3dadd( -10.8877, 17.3691, 5.3902, 1.03 ) }
    dend_1 { pt3dadd( -11.268, 17.9147, 5.09237, 1.03 ) }
    dend_1 { pt3dadd( -11.7357, 18.6184, 4.73946, 0.81 ) }
    dend_1 { pt3dadd( -12.072, 19.1016, 4.47517, 1.18 ) }
    dend_1 { pt3dadd( -12.5507, 19.702, 4.07606, 0.95 ) }
    dend_1 { pt3dadd( -13.105, 20.3415, 3.48906, 0.81 ) }
    dend_1 { pt3dadd( -13.4817, 20.7804, 3.00711, 0.81 ) }
    dend_1 { pt3dadd( -14.1145, 21.5626, 2.04304, 1.1 ) }
    dend_1 { pt3dadd( -14.8063, 22.521, 0.892608, 1.32 ) }
    dend_1 { pt3dadd( -15.5659, 23.5989, -0.453056, 1.54 ) }
    dend_1 { pt3dadd( -16.3374, 24.7661, -1.93913, 1.18 ) }
    dend_1 { pt3dadd( -16.9603, 25.8466, -3.31759, 0.66 ) }
    dend_1 { pt3dadd( -17.2497, 26.4496, -4.05061, 0.66 ) }
    dend_1 { pt3dadd( -17.6548, 27.5756, -5.33153, 0.44 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 32/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 37.6658, -0.214733, 0.0, 0.22 ) }
    axon_1 { pt3dadd( 52.6652, -0.350471, 0.0, 0.22 ) }
    axon_1 { pt3dadd( 67.6646, -0.486208, 0.0, 0.22 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 35/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 1.91342, 13.0438, -24.9691, 0.81 ) }
    dend_43 { pt3dadd( 1.63318, 13.2628, -25.5389, 0.81 ) }
    dend_43 { pt3dadd( 0.945801, 13.8924, -26.9586, 0.59 ) }
    dend_43 { pt3dadd( 0.61048, 14.2282, -27.6203, 0.88 ) }
    dend_43 { pt3dadd( -1.05302, 15.9996, -30.6877, 0.44 ) }
    dend_43 { pt3dadd( -1.31951, 16.2789, -31.1216, 0.29 ) }
    dend_43 { pt3dadd( -1.6898, 16.6527, -31.6546, 0.29 ) }
    dend_43 { pt3dadd( -2.04185, 17.0266, -32.1724, 0.29 ) }
    dend_43 { pt3dadd( -2.38503, 17.3941, -32.6216, 0.29 ) }
    dend_43 { pt3dadd( -3.28692, 18.2627, -33.4619, 1.32 ) }
    dend_43 { pt3dadd( -3.97793, 18.854, -33.8503, 1.32 ) }
    dend_43 { pt3dadd( -4.97453, 19.6564, -34.3385, 0.37 ) }
    dend_43 { pt3dadd( -5.79749, 20.298, -34.6916, 0.07 ) }
    dend_43 { pt3dadd( -6.78426, 21.0421, -35.0793, 1.1 ) }
    dend_43 { pt3dadd( -8.33462, 22.1644, -35.6102, 0.07 ) }
    dend_43 { pt3dadd( -9.18225, 22.7138, -35.8334, 1.4 ) }
    dend_43 { pt3dadd( -9.692, 22.9895, -35.9479, 1.4 ) }
    dend_43 { pt3dadd( -11.0183, 23.5539, -36.1666, 0.22 ) }
    dend_43 { pt3dadd( -11.5809, 23.7308, -36.2375, 0.22 ) }
    dend_43 { pt3dadd( -12.1757, 23.8182, -36.3053, 0.22 ) }
    dend_43 { pt3dadd( -13.4165, 23.8406, -36.4202, 0.81 ) }
    dend_43 { pt3dadd( -15.0618, 23.7794, -36.4857, 0.07 ) }
    dend_43 { pt3dadd( -15.5958, 23.7461, -36.5171, 1.32 ) }
    dend_43 { pt3dadd( -16.3941, 23.6719, -36.5885, 1.32 ) }
    dend_43 { pt3dadd( -18.2655, 23.4643, -36.8189, 0.22 ) }
    dend_43 { pt3dadd( -19.4944, 23.3084, -37.0008, 1.54 ) }
    dend_43 { pt3dadd( -20.4641, 23.1699, -37.1952, 1.54 ) }
    dend_43 { pt3dadd( -22.5291, 22.7463, -37.6995, 0.22 ) }
    dend_43 { pt3dadd( -23.3708, 22.5194, -38.0156, 0.22 ) }
    dend_43 { pt3dadd( -24.2183, 22.2107, -38.5137, 0.22 ) }
    dend_43 { pt3dadd( -24.7184, 21.9834, -39.1667, 0.66 ) }
    dend_43 { pt3dadd( -25.2389, 21.7281, -40.0322, 0.22 ) }
    dend_43 { pt3dadd( -25.6934, 21.5115, -40.8247, 1.1 ) }
    dend_43 { pt3dadd( -26.8192, 20.9748, -42.8482, 0.59 ) }
    dend_43 { pt3dadd( -27.8066, 20.4886, -44.7852, 1.25 ) }
    dend_43 { pt3dadd( -30.7664, 18.9203, -51.0464, 0.59 ) }
    dend_43 { pt3dadd( -31.3507, 18.5864, -52.4155, 0.88 ) }
    dend_43 { pt3dadd( -31.8387, 18.2766, -53.8203, 1.18 ) }
    dend_43 { pt3dadd( -32.5612, 17.7883, -56.5078, 0.29 ) }
    dend_43 { pt3dadd( -33.245, 17.2288, -60.3449, 0.51 ) }
    dend_43 { pt3dadd( -33.3115, 17.1487, -61.0584, 0.51 ) }
    dend_43 { pt3dadd( -33.2836, 16.9909, -62.981, 1.25 ) }
    dend_43 { pt3dadd( -32.7869, 16.8256, -67.4449, 1.25 ) }
    dend_43 { pt3dadd( -32.2711, 16.8449, -70.0317, 1.25 ) }
    dend_43 { pt3dadd( -31.5609, 17.004, -72.3634, 0.37 ) }
    dend_43 { pt3dadd( -31.3484, 17.0736, -72.9244, 0.37 ) }
    dend_43 { pt3dadd( -30.9821, 17.22, -73.8167, 0.44 ) }
    dend_43 { pt3dadd( -29.4969, 17.8763, -77.0234, 0.73 ) }
    dend_43 { pt3dadd( -29.0669, 18.0602, -77.785, 1.18 ) }
    dend_43 { pt3dadd( -27.6812, 18.5381, -79.9671, 0.44 ) }
    dend_43 { pt3dadd( -26.9751, 18.7321, -81.0249, 0.44 ) }
    dend_43 { pt3dadd( -26.3486, 18.8529, -81.932, 0.81 ) }
    dend_43 { pt3dadd( -25.2349, 18.9416, -83.4051, 1.1 ) }
    dend_43 { pt3dadd( -24.3262, 18.8472, -84.3222, 0.29 ) }
    dend_43 { pt3dadd( -23.1622, 18.5072, -85.2279, 0.66 ) }
    dend_43 { pt3dadd( -22.3074, 18.0509, -85.4412, 0.07 ) }
    dend_43 { pt3dadd( -21.7205, 17.6857, -85.4877, 0.07 ) }
    dend_43 { pt3dadd( -21.0776, 17.2335, -85.442, 0.44 ) }
    dend_43 { pt3dadd( -20.2996, 16.6334, -85.2313, 0.07 ) }
    dend_43 { pt3dadd( -18.6977, 15.382, -84.505, 0.22 ) }
    dend_43 { pt3dadd( -17.1866, 14.2713, -83.459, 0.66 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 96/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 1.91342, 13.0438, -24.9691, 0.51 ) }
    dend_42 { pt3dadd( 1.91677, 14.3535, -24.6294, 0.51 ) }
    dend_42 { pt3dadd( 1.92249, 14.9878, -24.4866, 1.18 ) }
    dend_42 { pt3dadd( 1.93719, 16.1532, -24.1897, 0.51 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_42 { pt3dadd( 1.94112, 17.278, -23.9036, 1.18 ) }
    dend_42 { pt3dadd( 1.92988, 17.9735, -23.7165, 0.73 ) }
    dend_42 { pt3dadd( 1.90057, 18.5996, -23.5471, 0.73 ) }
    dend_42 { pt3dadd( 1.83626, 19.3757, -23.3544, 0.73 ) }
    dend_42 { pt3dadd( 1.70634, 20.3354, -23.1473, 0.73 ) }
    dend_42 { pt3dadd( 1.46739, 21.3458, -23.0121, 1.1 ) }
    dend_42 { pt3dadd( 1.16941, 22.3525, -22.9167, 0.44 ) }
    dend_42 { pt3dadd( 0.926937, 23.0261, -22.8642, 0.66 ) }
    dend_42 { pt3dadd( 0.722403, 23.5001, -22.8466, 0.22 ) }
    dend_42 { pt3dadd( 0.20528, 24.4772, -22.9088, 0.22 ) }
    dend_42 { pt3dadd( -0.526759, 25.5664, -23.2286, 0.44 ) }
    // Section: dend_38, id: dend_38, parent: dend_34 (entry count 11/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 16.6476, -2.26793, -14.704, 1.03 ) }
    dend_38 { pt3dadd( 17.328, -1.60133, -16.6001, 1.03 ) }
    dend_38 { pt3dadd( 17.7535, -1.18445, -17.7858, 1.4 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 14/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 16.6476, -2.26793, -14.704, 0.59 ) }
    dend_35 { pt3dadd( 17.2068, -3.52342, -14.6703, 0.59 ) }
    dend_35 { pt3dadd( 17.415, -4.03588, -14.6455, 0.73 ) }
    dend_35 { pt3dadd( 17.8691, -5.15361, -14.5913, 0.73 ) }
    dend_35 { pt3dadd( 18.1836, -5.92785, -14.5539, 0.88 ) }
    dend_35 { pt3dadd( 18.3897, -6.4354, -14.5293, 0.88 ) }
    dend_35 { pt3dadd( 18.8359, -7.53363, -14.4761, 1.25 ) }
    dend_35 { pt3dadd( 19.3398, -8.99308, -14.3792, 0.29 ) }
    // Section: dend_29, id: dend_29, parent: dend_23 (entry count 22/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -6.56296, -10.1687, -9.1245, 0.51 ) }
    dend_29 { pt3dadd( -7.74976, -10.6379, -10.0435, 0.51 ) }
    dend_29 { pt3dadd( -9.09295, -11.1614, -11.064, 0.59 ) }
    dend_29 { pt3dadd( -10.3694, -11.6737, -12.0497, 0.59 ) }
    dend_29 { pt3dadd( -11.4468, -12.116, -12.8599, 1.18 ) }
    dend_29 { pt3dadd( -13.0288, -12.7654, -14.0496, 0.73 ) }
    dend_29 { pt3dadd( -14.1807, -13.2382, -14.9159, 1.03 ) }
    dend_29 { pt3dadd( -15.7152, -13.8816, -16.0195, 1.1 ) }
    dend_29 { pt3dadd( -17.1959, -14.5003, -17.0089, 1.62 ) }
    dend_29 { pt3dadd( -17.8911, -14.8076, -17.4757, 1.62 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 32/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -6.56296, -10.1687, -9.1245, 0.59 ) }
    dend_24 { pt3dadd( -8.16708, -11.0917, -9.44725, 0.59 ) }
    dend_24 { pt3dadd( -9.20387, -11.7593, -9.56512, 0.37 ) }
    dend_24 { pt3dadd( -9.77239, -12.2143, -9.56108, 0.22 ) }
    dend_24 { pt3dadd( -10.9403, -13.1489, -9.55279, 0.81 ) }
    dend_24 { pt3dadd( -11.8834, -13.9037, -9.5461, 0.29 ) }
    dend_24 { pt3dadd( -13.2265, -14.9786, -9.53656, 1.47 ) }
    dend_24 { pt3dadd( -14.1695, -15.7381, -9.41433, 1.69 ) }
    dend_24 { pt3dadd( -15.6767, -17.1306, -9.10587, 1.18 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 41/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -22.0408, -5.80072, 1.5721, 0.95 ) }
    dend_17 { pt3dadd( -22.0189, -6.24991, 2.66268, 0.95 ) }
    dend_17 { pt3dadd( -21.9046, -6.95125, 4.31296, 0.95 ) }
    dend_17 { pt3dadd( -21.6361, -7.95983, 6.69078, 1.03 ) }
    dend_17 { pt3dadd( -21.4855, -8.52566, 8.02477, 0.73 ) }
    dend_17 { pt3dadd( -21.2818, -9.29068, 9.82837, 1.47 ) }
    dend_17 { pt3dadd( -21.0957, -9.99001, 11.4771, 1.18 ) }
    dend_17 { pt3dadd( -20.9226, -10.4676, 12.6099, 0.73 ) }
    dend_17 { pt3dadd( -20.6587, -11.037, 13.9082, 0.88 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 50/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -22.0408, -5.80072, 1.5721, 0.73 ) }
    dend_16 { pt3dadd( -22.9621, -6.08685, 1.05344, 0.73 ) }
    dend_16 { pt3dadd( -24.0362, -6.4775, 0.435293, 0.95 ) }
    dend_16 { pt3dadd( -25.578, -7.08541, -0.427074, 0.37 ) }
    dend_16 { pt3dadd( -27.1026, -7.70367, -1.2177, 1.32 ) }
    dend_16 { pt3dadd( -28.3401, -8.20668, -1.83911, 0.59 ) }
    dend_16 { pt3dadd( -29.4598, -8.6749, -2.35975, 0.37 ) }
    dend_16 { pt3dadd( -30.195, -9.00054, -2.67736, 0.66 ) }
    dend_16 { pt3dadd( -30.9941, -9.35225, -2.97087, 0.29 ) }
    dend_16 { pt3dadd( -32.0339, -9.79906, -3.29438, 0.15 ) }
    dend_16 { pt3dadd( -32.8212, -10.1173, -3.51135, 0.15 ) }
    dend_16 { pt3dadd( -34.29, -10.6298, -3.95869, 1.91 ) }
    dend_16 { pt3dadd( -35.902, -11.0873, -4.43946, 0.44 ) }
    dend_16 { pt3dadd( -37.3212, -11.3813, -4.91538, 0.44 ) }
    dend_16 { pt3dadd( -37.8728, -11.4618, -5.14469, 0.44 ) }
    dend_16 { pt3dadd( -39.0638, -11.5764, -5.7729, 1.25 ) }
    dend_16 { pt3dadd( -40.846, -11.677, -6.9143, 0.37 ) }
    dend_16 { pt3dadd( -41.7377, -11.6849, -7.55881, 0.95 ) }
    dend_16 { pt3dadd( -42.7026, -11.6579, -8.2779, 0.22 ) }
    dend_16 { pt3dadd( -44.3273, -11.579, -9.53439, 1.25 ) }
    dend_16 { pt3dadd( -46.2228, -11.4561, -11.018, 0.15 ) }
    dend_16 { pt3dadd( -47.6213, -11.3478, -12.0877, 1.84 ) }
    dend_16 { pt3dadd( -48.5901, -11.2663, -12.7533, 0.37 ) }
    dend_16 { pt3dadd( -49.7639, -11.1605, -13.5182, 0.66 ) }
    dend_16 { pt3dadd( -50.9697, -11.0398, -14.1971, 0.15 ) }
    dend_16 { pt3dadd( -52.1101, -10.8833, -14.6874, 0.15 ) }
    dend_16 { pt3dadd( -53.0015, -10.7255, -14.9776, 1.4 ) }
    dend_16 { pt3dadd( -54.1771, -10.5062, -15.2848, 0.15 ) }
    dend_16 { pt3dadd( -54.828, -10.3875, -15.4412, 0.15 ) }
    dend_16 { pt3dadd( -55.6034, -10.2318, -15.5939, 0.15 ) }
    dend_16 { pt3dadd( -56.5934, -9.99957, -15.7367, 0.81 ) }
    dend_16 { pt3dadd( -57.9662, -9.62708, -15.9155, 0.15 ) }
    dend_16 { pt3dadd( -58.8868, -9.35825, -16.0272, 0.15 ) }
    dend_16 { pt3dadd( -59.5801, -9.14861, -16.1054, 1.76 ) }
    dend_16 { pt3dadd( -60.6679, -8.81765, -16.2256, 0.15 ) }
    dend_16 { pt3dadd( -61.377, -8.60399, -16.3106, 0.15 ) }
    dend_16 { pt3dadd( -62.5161, -8.26071, -16.4438, 0.59 ) }
    dend_16 { pt3dadd( -63.5718, -7.91639, -16.5672, 0.15 ) }
    dend_16 { pt3dadd( -64.4226, -7.60594, -16.6938, 0.51 ) }
    dend_16 { pt3dadd( -65.3234, -7.23353, -16.8753, 0.15 ) }
    dend_16 { pt3dadd( -66.4393, -6.7365, -17.1461, 1.69 ) }
    dend_16 { pt3dadd( -66.8079, -6.56391, -17.2642, 1.69 ) }
    dend_16 { pt3dadd( -68.214, -5.88921, -17.8207, 0.15 ) }
    dend_16 { pt3dadd( -69.151, -5.44298, -18.2696, 0.15 ) }
    dend_16 { pt3dadd( -70.0454, -4.99139, -18.7378, 1.1 ) }
    dend_16 { pt3dadd( -70.3367, -4.83468, -18.9074, 1.69 ) }
    dend_16 { pt3dadd( -71.4854, -4.23589, -19.6964, 0.88 ) }
    dend_16 { pt3dadd( -72.2366, -3.91345, -20.2614, 0.15 ) }
    dend_16 { pt3dadd( -72.8741, -3.79865, -20.7789, 0.88 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 99/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -15.2878, 4.06707, -11.7668, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_14 { pt3dadd( -16.0521, 4.0887, -12.6906, 1.03 ) }
    dend_14 { pt3dadd( -17.1736, 4.06438, -14.028, 0.81 ) }
    dend_14 { pt3dadd( -18.0001, 3.99839, -15.0698, 1.1 ) }
    dend_14 { pt3dadd( -19.0808, 3.77865, -16.5859, 0.37 ) }
    dend_14 { pt3dadd( -20.1007, 3.47784, -18.0994, 1.25 ) }
    dend_14 { pt3dadd( -20.5942, 3.31171, -18.8208, 1.25 ) }
    dend_14 { pt3dadd( -21.3662, 3.0005, -19.9688, 0.44 ) }
    dend_14 { pt3dadd( -22.4767, 2.50372, -21.5889, 1.4 ) }
    dend_14 { pt3dadd( -24.2118, 1.72507, -24.3048, 0.59 ) }
    dend_14 { pt3dadd( -25.0754, 1.36122, -25.7544, 0.44 ) }
    dend_14 { pt3dadd( -25.618, 1.13026, -26.6968, 1.32 ) }
    dend_14 { pt3dadd( -26.3322, 0.837775, -27.962, 1.32 ) }
    dend_14 { pt3dadd( -27.3275, 0.501185, -29.6887, 0.59 ) }
    dend_14 { pt3dadd( -28.6298, 0.105879, -31.9976, 0.59 ) }
    dend_14 { pt3dadd( -29.7134, -0.224872, -33.9721, 1.1 ) }
    dend_14 { pt3dadd( -30.2061, -0.407278, -34.9985, 0.22 ) }
    dend_14 { pt3dadd( -31.1216, -0.825724, -37.1582, 1.4 ) }
    dend_14 { pt3dadd( -32.0134, -1.31432, -39.4642, 0.37 ) }
    dend_14 { pt3dadd( -33.213, -2.07184, -42.6867, 1.4 ) }
    dend_14 { pt3dadd( -33.6999, -2.40334, -43.9951, 0.51 ) }
    dend_14 { pt3dadd( -34.9379, -3.27168, -47.3631, 0.73 ) }
    dend_14 { pt3dadd( -35.6209, -3.74658, -49.2988, 2.5 ) }
    dend_14 { pt3dadd( -36.7681, -4.53613, -52.5903, 0.81 ) }
    dend_14 { pt3dadd( -37.1383, -4.77866, -53.6082, 0.66 ) }
    dend_14 { pt3dadd( -37.9657, -5.22079, -55.6477, 0.51 ) }
    dend_14 { pt3dadd( -38.2272, -5.32881, -56.2559, 0.81 ) }
    dend_14 { pt3dadd( -39.1351, -5.59665, -58.2142, 0.44 ) }
    dend_14 { pt3dadd( -40.0308, -5.75318, -60.2627, 1.62 ) }
    dend_14 { pt3dadd( -40.7606, -5.75652, -62.4978, 0.95 ) }
    dend_14 { pt3dadd( -40.9144, -5.72809, -63.1562, 0.95 ) }
    dend_14 { pt3dadd( -41.1586, -5.58037, -64.9196, 1.32 ) }
    dend_14 { pt3dadd( -41.2238, -5.31697, -67.6445, 1.32 ) }
    dend_14 { pt3dadd( -41.0215, -5.11216, -69.7074, 1.32 ) }
    dend_14 { pt3dadd( -40.1486, -4.72514, -73.6961, 0.81 ) }
    dend_14 { pt3dadd( -39.9114, -4.65943, -74.4163, 0.44 ) }
    dend_14 { pt3dadd( -39.3955, -4.5744, -75.5809, 0.81 ) }
    dend_14 { pt3dadd( -37.8349, -4.42521, -78.2776, 0.29 ) }
    dend_14 { pt3dadd( -37.1266, -4.38324, -79.2472, 1.03 ) }
    dend_14 { pt3dadd( -36.6814, -4.37742, -79.7659, 1.54 ) }
    dend_14 { pt3dadd( -35.9071, -4.39696, -80.5358, 1.54 ) }
    dend_14 { pt3dadd( -34.0136, -4.47124, -82.4265, 0.44 ) }
    dend_14 { pt3dadd( -33.0697, -4.49648, -83.374, 1.18 ) }
    dend_14 { pt3dadd( -31.8262, -4.48148, -84.5678, 1.47 ) }
    dend_14 { pt3dadd( -30.9385, -4.44362, -85.4706, 0.44 ) }
    dend_14 { pt3dadd( -29.7376, -4.36551, -86.9006, 1.03 ) }
    dend_14 { pt3dadd( -28.1593, -4.19885, -89.1042, 0.44 ) }
    dend_14 { pt3dadd( -27.2139, -4.02164, -90.6491, 1.69 ) }
    dend_14 { pt3dadd( -26.8451, -3.91557, -91.3804, 1.91 ) }
    dend_14 { pt3dadd( -26.1233, -3.65331, -92.9824, 1.47 ) }
    dend_14 { pt3dadd( -24.7004, -2.96398, -96.6948, 1.47 ) }
    dend_14 { pt3dadd( -24.0955, -2.57494, -98.6386, 1.47 ) }
    dend_14 { pt3dadd( -23.7737, -2.31945, -99.8384, 1.32 ) }
    dend_14 { pt3dadd( -23.3554, -1.95529, -101.68, 1.32 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 53/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -15.2878, 4.06707, -11.7668, 0.59 ) }
    dend_13 { pt3dadd( -15.202, 5.17253, -11.725, 0.59 ) }
    dend_13 { pt3dadd( -15.0922, 6.07015, -11.4728, 0.81 ) }
    dend_13 { pt3dadd( -14.8943, 7.0672, -10.9954, 0.44 ) }
    dend_13 { pt3dadd( -14.5605, 8.23002, -10.2439, 0.44 ) }
    dend_13 { pt3dadd( -14.2465, 9.32421, -9.53674, 1.03 ) }
    dend_13 { pt3dadd( -13.7384, 11.0949, -8.39245, 0.66 ) }
    dend_13 { pt3dadd( -13.4259, 12.1175, -7.62409, 1.03 ) }
    dend_13 { pt3dadd( -13.0671, 13.083, -6.6828, 0.37 ) }
    dend_13 { pt3dadd( -12.6877, 13.9191, -5.65392, 0.88 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 63/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -12.0808, 3.17652, 11.6552, 0.73 ) }
    dend_9 { pt3dadd( -13.4511, 3.40956, 12.1093, 0.73 ) }
    dend_9 { pt3dadd( -14.4095, 3.62714, 12.4471, 1.03 ) }
    dend_9 { pt3dadd( -15.4159, 3.90634, 12.8098, 0.88 ) }
    dend_9 { pt3dadd( -16.9087, 4.4615, 13.2607, 2.06 ) }
    dend_9 { pt3dadd( -18.6406, 5.24974, 13.7015, 0.81 ) }
    dend_9 { pt3dadd( -19.3705, 5.63421, 13.8362, 1.03 ) }
    dend_9 { pt3dadd( -20.0675, 6.11475, 13.9004, 1.03 ) }
    dend_9 { pt3dadd( -20.4284, 6.43829, 13.8897, 1.32 ) }
    dend_9 { pt3dadd( -21.7083, 7.95608, 13.5801, 0.73 ) }
    dend_9 { pt3dadd( -22.0132, 8.46154, 13.3995, 0.73 ) }
    dend_9 { pt3dadd( -22.3504, 9.35832, 12.9195, 0.44 ) }
    dend_9 { pt3dadd( -22.5949, 10.5141, 12.1563, 0.29 ) }
    dend_9 { pt3dadd( -22.6198, 11.0557, 11.7498, 0.29 ) }
    dend_9 { pt3dadd( -22.5774, 11.9027, 11.0763, 0.44 ) }
    dend_9 { pt3dadd( -22.3855, 12.6996, 10.3986, 0.59 ) }
    dend_9 { pt3dadd( -21.7801, 14.1412, 9.06137, 0.29 ) }
    dend_9 { pt3dadd( -21.5135, 14.5435, 8.6565, 0.29 ) }
    dend_9 { pt3dadd( -21.2248, 14.8541, 8.29089, 1.18 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 82/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -12.0808, 3.17652, 11.6552, 0.29 ) }
    dend_8 { pt3dadd( -11.8189, 3.43203, 10.9201, 0.29 ) }
    dend_8 { pt3dadd( -11.5046, 3.76756, 9.86122, 0.29 ) }
    dend_8 { pt3dadd( -11.119, 4.22809, 8.46526, 0.29 ) }
    dend_8 { pt3dadd( -10.8055, 4.64255, 7.31637, 0.29 ) }
    dend_8 { pt3dadd( -10.318, 5.33209, 5.5365, 0.29 ) }
    dend_8 { pt3dadd( -9.30409, 6.7408, 2.0475, 0.29 ) }
    dend_8 { pt3dadd( -8.96949, 7.16463, 0.892136, 0.29 ) }
    dend_8 { pt3dadd( -8.80558, 7.33694, 0.353527, 0.29 ) }
    dend_8 { pt3dadd( -8.53533, 7.50868, -0.413897, 0.29 ) }
    dend_8 { pt3dadd( -8.12419, 7.62278, -1.44315, 0.29 ) }
    dend_8 { pt3dadd( -7.66576, 7.58276, -2.59344, 0.29 ) }
    dend_8 { pt3dadd( -7.17327, 7.27553, -3.94568, 0.29 ) }
    dend_8 { pt3dadd( -6.77095, 6.82645, -5.28736, 0.29 ) }
    dend_8 { pt3dadd( -6.31995, 6.04967, -7.23999, 0.29 ) }
    dend_8 { pt3dadd( -6.0961, 5.5499, -8.36841, 0.29 ) }
    dend_8 { pt3dadd( -5.88975, 4.88748, -9.72993, 0.29 ) }
    dend_8 { pt3dadd( -5.77535, 4.17843, -11.1257, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_8 { pt3dadd( -5.76569, 3.37548, -12.7445, 0.29 ) }
    dend_8 { pt3dadd( -5.85738, 2.73501, -14.0531, 0.29 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 2/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -1.87962, 19.1935, 24.0105, 0.88 ) }
    dend_4 { pt3dadd( -2.19324, 19.9189, 22.8926, 0.88 ) }
    dend_4 { pt3dadd( -2.39407, 20.7873, 21.747, 0.88 ) }
    dend_4 { pt3dadd( -2.48513, 21.9014, 20.3835, 0.88 ) }
    dend_4 { pt3dadd( -2.47587, 23.1753, 18.9724, 0.59 ) }
    dend_4 { pt3dadd( -2.443, 23.5327, 18.6005, 0.95 ) }
    dend_4 { pt3dadd( -2.28027, 24.5199, 17.6434, 0.73 ) }
    dend_4 { pt3dadd( -2.05701, 25.3415, 16.9058, 0.95 ) }
    dend_4 { pt3dadd( -1.75418, 26.1316, 16.2619, 0.59 ) }
    dend_4 { pt3dadd( -1.52949, 26.7109, 15.7495, 0.88 ) }
    dend_4 { pt3dadd( -1.30343, 27.4018, 15.0057, 0.88 ) }
    dend_4 { pt3dadd( -1.15914, 28.0565, 14.1934, 0.44 ) }
    dend_4 { pt3dadd( -1.05751, 29.0131, 12.8923, 0.81 ) }
    dend_4 { pt3dadd( -1.01612, 29.8035, 11.7638, 1.18 ) }
    dend_4 { pt3dadd( -0.970159, 31.2863, 9.53536, 0.44 ) }
    dend_4 { pt3dadd( -0.956699, 32.1337, 8.10587, 0.44 ) }
    dend_4 { pt3dadd( -0.966549, 32.5333, 7.33481, 0.44 ) }
    dend_4 { pt3dadd( -0.993899, 32.9008, 6.50109, 0.44 ) }
    dend_4 { pt3dadd( -1.03219, 33.2071, 5.73742, 0.44 ) }
    dend_4 { pt3dadd( -1.07486, 33.3661, 5.28009, 0.66 ) }
    dend_4 { pt3dadd( -1.16124, 33.6645, 4.39743, 0.66 ) }
    dend_4 { pt3dadd( -1.32902, 34.0732, 3.48771, 0.66 ) }
    dend_4 { pt3dadd( -1.45035, 34.2869, 3.1106, 0.66 ) }
    dend_4 { pt3dadd( -1.85506, 34.9052, 2.20012, 1.18 ) }
    dend_4 { pt3dadd( -2.37308, 35.7328, 1.04035, 1.18 ) }
    dend_4 { pt3dadd( -2.54344, 36.0275, 0.660049, 1.18 ) }
    dend_4 { pt3dadd( -3.05975, 37.0166, -0.566074, 1.32 ) }
    dend_4 { pt3dadd( -3.34851, 37.5825, -1.39752, 1.32 ) }
    dend_4 { pt3dadd( -3.75645, 38.2901, -2.67323, 0.88 ) }
    dend_4 { pt3dadd( -4.24891, 39.1285, -4.35398, 0.88 ) }
    dend_4 { pt3dadd( -4.3138, 39.2365, -4.59485, 0.88 ) }
    dend_4 { pt3dadd( -4.72009, 39.8224, -6.11344, 0.88 ) }
    dend_4 { pt3dadd( -5.41634, 40.6421, -8.80084, 0.66 ) }
    dend_4 { pt3dadd( -5.79377, 41.0584, -10.4515, 0.44 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 36/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -1.87962, 19.1935, 24.0105, 0.44 ) }
    dend_3 { pt3dadd( -2.53655, 20.361, 23.3161, 0.44 ) }
    dend_3 { pt3dadd( -3.02132, 21.5315, 22.5873, 0.95 ) }
    dend_3 { pt3dadd( -3.13544, 21.9709, 22.2674, 0.73 ) }
    dend_3 { pt3dadd( -3.27884, 22.6928, 21.8493, 0.44 ) }
    dend_3 { pt3dadd( -3.40148, 23.3101, 21.4917, 0.44 ) }
    dend_3 { pt3dadd( -3.52696, 23.9417, 21.1259, 0.44 ) }
    dend_3 { pt3dadd( -3.46496, 24.5727, 20.7068, 0.59 ) }
    dend_3 { pt3dadd( -3.1297, 25.354, 20.1612, 0.59 ) }
    dend_3 { pt3dadd( -1.83468, 27.3609, 18.4587, 0.37 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 46/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 17.7535, -1.18445, -17.7858, 0.73 ) }
    dend_40 { pt3dadd( 17.9206, -1.15817, -18.6615, 0.73 ) }
    dend_40 { pt3dadd( 18.5199, -1.02108, -21.7085, 0.73 ) }
    dend_40 { pt3dadd( 19.3082, -0.856109, -25.4194, 0.73 ) }
    dend_40 { pt3dadd( 19.7756, -0.822302, -27.6055, 0.73 ) }
    dend_40 { pt3dadd( 20.2707, -0.850048, -29.9519, 0.73 ) }
    dend_40 { pt3dadd( 20.783, -0.925617, -32.3463, 1.18 ) }
    dend_40 { pt3dadd( 21.396, -1.08996, -35.0789, 1.47 ) }
    dend_40 { pt3dadd( 21.9651, -1.34422, -37.3822, 1.47 ) }
    dend_40 { pt3dadd( 22.7406, -1.91604, -40.3402, 1.1 ) }
    dend_40 { pt3dadd( 23.6003, -2.7207, -43.2647, 0.66 ) }
    dend_40 { pt3dadd( 24.1025, -3.25175, -44.7655, 1.84 ) }
    dend_40 { pt3dadd( 24.641, -3.86283, -46.2007, 0.15 ) }
    dend_40 { pt3dadd( 25.059, -4.37874, -47.2509, 1.62 ) }
    dend_40 { pt3dadd( 26.7399, -6.56214, -51.3117, 0.07 ) }
    dend_40 { pt3dadd( 27.2732, -7.23228, -52.5234, 1.69 ) }
    dend_40 { pt3dadd( 28.2254, -8.46793, -54.8216, 0.07 ) }
    dend_40 { pt3dadd( 28.4342, -8.74777, -55.4018, 0.37 ) }
    dend_40 { pt3dadd( 28.8193, -9.25704, -56.6398, 0.07 ) }
    dend_40 { pt3dadd( 29.2135, -9.79135, -58.0376, 0.73 ) }
    dend_40 { pt3dadd( 29.7941, -10.775, -60.6809, 2.06 ) }
    dend_40 { pt3dadd( 30.2592, -11.8343, -63.6387, 0.22 ) }
    dend_40 { pt3dadd( 30.4478, -12.548, -65.6038, 0.51 ) }
    dend_40 { pt3dadd( 30.513, -13.3366, -67.7722, 1.25 ) }
    dend_40 { pt3dadd( 30.4683, -13.6666, -68.6664, 1.98 ) }
    dend_40 { pt3dadd( 29.8768, -15.0512, -72.3058, 0.07 ) }
    dend_40 { pt3dadd( 29.653, -15.3156, -72.9364, 0.07 ) }
    dend_40 { pt3dadd( 28.981, -15.8659, -74.087, 1.62 ) }
    dend_40 { pt3dadd( 27.899, -16.5805, -75.3707, 0.07 ) }
    dend_40 { pt3dadd( 26.7532, -17.2344, -76.3647, 0.07 ) }
    dend_40 { pt3dadd( 25.9524, -17.6252, -76.8944, 1.32 ) }
    dend_40 { pt3dadd( 24.3165, -18.3302, -77.7183, 0.15 ) }
    dend_40 { pt3dadd( 23.4756, -18.669, -78.1002, 0.66 ) }
    dend_40 { pt3dadd( 22.5744, -19.0216, -78.481, 0.07 ) }
    dend_40 { pt3dadd( 21.8461, -19.3102, -78.7606, 1.03 ) }
    dend_40 { pt3dadd( 20.7461, -19.7498, -79.1612, 0.07 ) }
    dend_40 { pt3dadd( 19.428, -20.273, -79.6662, 1.1 ) }
    dend_40 { pt3dadd( 17.5869, -20.9821, -80.3808, 0.07 ) }
    dend_40 { pt3dadd( 16.0759, -21.5504, -81.0417, 0.07 ) }
    dend_40 { pt3dadd( 15.5016, -21.7549, -81.3207, 0.81 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 86/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 17.7535, -1.18445, -17.7858, 0.37 ) }
    dend_39 { pt3dadd( 18.383, 0.104657, -17.6322, 0.37 ) }
    dend_39 { pt3dadd( 18.8361, 1.26908, -17.7151, 1.03 ) }
    dend_39 { pt3dadd( 19.1232, 2.36799, -17.9472, 0.37 ) }
    dend_39 { pt3dadd( 19.2733, 3.38304, -18.3192, 0.73 ) }
    dend_39 { pt3dadd( 19.317, 4.17721, -18.7038, 0.44 ) }
    dend_39 { pt3dadd( 19.3094, 5.34155, -19.3362, 1.32 ) }
    dend_39 { pt3dadd( 19.1351, 6.66743, -20.2156, 0.37 ) }
    dend_39 { pt3dadd( 18.8122, 7.9061, -21.178, 1.98 ) }
    dend_39 { pt3dadd( 18.2863, 9.33671, -22.4425, 0.59 ) }
    dend_39 { pt3dadd( 17.9102, 10.2048, -23.2803, 0.37 ) }
    dend_39 { pt3dadd( 17.8021, 10.4433, -23.5265, 0.07 ) }
    dend_39 { pt3dadd( 17.5408, 11.0192, -24.1395, 0.44 ) }
    dend_39 { pt3dadd( 17.1664, 11.9085, -25.0293, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_39 { pt3dadd( 16.6791, 13.3523, -26.3611, 1.25 ) }
    dend_39 { pt3dadd( 16.299, 14.9427, -27.6655, 0.51 ) }
    dend_39 { pt3dadd( 16.1399, 15.9203, -28.3913, 0.07 ) }
    dend_39 { pt3dadd( 16.0565, 16.5947, -28.8464, 0.88 ) }
    dend_39 { pt3dadd( 15.9834, 17.2765, -29.2496, 0.15 ) }
    dend_39 { pt3dadd( 15.8687, 18.3176, -29.7357, 1.47 ) }
    dend_39 { pt3dadd( 15.6441, 20.0057, -30.3609, 0.51 ) }
    dend_39 { pt3dadd( 15.5256, 20.6274, -30.543, 1.32 ) }
    dend_39 { pt3dadd( 15.2562, 21.6245, -30.8292, 1.32 ) }
    dend_39 { pt3dadd( 14.9446, 22.4859, -31.1047, 0.07 ) }
    dend_39 { pt3dadd( 14.7371, 22.9197, -31.2765, 0.37 ) }
    dend_39 { pt3dadd( 14.3034, 23.6606, -31.6044, 0.07 ) }
    dend_39 { pt3dadd( 13.7823, 24.4598, -32.0209, 0.07 ) }
    dend_39 { pt3dadd( 13.3754, 25.111, -32.3941, 1.18 ) }
    dend_39 { pt3dadd( 13.0211, 25.706, -32.7241, 1.18 ) }
    dend_39 { pt3dadd( 12.3798, 26.8885, -33.3209, 0.07 ) }
    dend_39 { pt3dadd( 12.0644, 27.5511, -33.6158, 0.73 ) }
    dend_39 { pt3dadd( 11.4755, 28.9398, -34.0899, 0.22 ) }
    dend_39 { pt3dadd( 10.9473, 30.3892, -34.475, 2.2 ) }
    dend_39 { pt3dadd( 10.4343, 32.0689, -34.7744, 0.07 ) }
    dend_39 { pt3dadd( 10.2359, 32.9192, -34.8829, 0.07 ) }
    dend_39 { pt3dadd( 10.0572, 34.0914, -35.009, 0.07 ) }
    dend_39 { pt3dadd( 9.95771, 35.292, -35.1501, 0.95 ) }
    dend_39 { pt3dadd( 9.96655, 36.1717, -35.2695, 0.07 ) }
    dend_39 { pt3dadd( 10.0751, 37.074, -35.4589, 1.47 ) }
    dend_39 { pt3dadd( 10.2792, 38.1394, -35.8331, 1.47 ) }
    dend_39 { pt3dadd( 10.6122, 39.739, -36.6218, 0.07 ) }
    dend_39 { pt3dadd( 10.7299, 40.2843, -36.9657, 0.88 ) }
    dend_39 { pt3dadd( 10.9285, 41.1144, -37.5082, 0.15 ) }
    dend_39 { pt3dadd( 11.1168, 41.8264, -37.9259, 0.95 ) }
    dend_39 { pt3dadd( 11.6044, 43.4565, -38.7145, 0.29 ) }
    dend_39 { pt3dadd( 11.9375, 43.8904, -38.1538, 0.29 ) }
    dend_39 { pt3dadd( 12.2957, 44.2449, -37.3665, 0.29 ) }
    dend_39 { pt3dadd( 13.129, 44.9334, -35.3206, 0.29 ) }
    dend_39 { pt3dadd( 13.882, 45.4879, -33.3514, 1.32 ) }
    dend_39 { pt3dadd( 14.6667, 45.9891, -31.2109, 0.51 ) }
    dend_39 { pt3dadd( 14.9482, 46.1512, -30.4344, 1.25 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 37/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 19.3398, -8.99308, -14.3792, 0.15 ) }
    dend_37 { pt3dadd( 20.6896, -10.128, -13.722, 0.15 ) }
    dend_37 { pt3dadd( 21.2624, -10.6497, -13.2791, 1.32 ) }
    dend_37 { pt3dadd( 21.6779, -11.0687, -12.7924, 1.32 ) }
    dend_37 { pt3dadd( 22.5023, -12.0279, -11.3777, 0.37 ) }
    dend_37 { pt3dadd( 22.6908, -12.3003, -10.9141, 0.66 ) }
    dend_37 { pt3dadd( 22.9065, -12.657, -10.2706, 0.29 ) }
    dend_37 { pt3dadd( 23.3627, -13.5862, -8.46732, 1.69 ) }
    dend_37 { pt3dadd( 23.679, -14.4393, -6.79187, 1.69 ) }
    dend_37 { pt3dadd( 23.9478, -15.4082, -4.85351, 1.18 ) }
    dend_37 { pt3dadd( 24.2166, -16.535, -2.69342, 0.81 ) }
    dend_37 { pt3dadd( 24.4145, -17.2999, -1.29837, 0.37 ) }
    dend_37 { pt3dadd( 24.5196, -17.6846, -0.670416, 0.37 ) }
    dend_37 { pt3dadd( 24.8037, -18.5755, 0.502593, 1.62 ) }
    dend_37 { pt3dadd( 25.1325, -19.4269, 1.38846, 2.06 ) }
    dend_37 { pt3dadd( 25.9287, -19.7839, 0.0959817, 0.66 ) }
    dend_37 { pt3dadd( 26.5456, -20.1224, -0.85054, 0.37 ) }
    dend_37 { pt3dadd( 27.9406, -20.7761, -3.01574, 0.51 ) }
    dend_37 { pt3dadd( 28.7991, -21.12, -4.44657, 0.22 ) }
    dend_37 { pt3dadd( 29.8484, -21.4491, -6.34973, 1.1 ) }
    dend_37 { pt3dadd( 31.354, -21.7922, -9.37475, 0.37 ) }
    dend_37 { pt3dadd( 31.5873, -21.8165, -9.91609, 0.37 ) }
    dend_37 { pt3dadd( 32.0347, -21.8295, -11.116, 0.22 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 60/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 19.3398, -8.99308, -14.3792, 1.54 ) }
    dend_36 { pt3dadd( 18.3226, -10.1135, -12.8563, 1.54 ) }
    dend_36 { pt3dadd( 17.1419, -11.5903, -10.8596, 0.22 ) }
    dend_36 { pt3dadd( 16.5005, -12.4751, -9.70358, 1.76 ) }
    dend_36 { pt3dadd( 15.9456, -13.2699, -8.7036, 1.76 ) }
    dend_36 { pt3dadd( 15.0529, -14.5725, -7.08474, 0.29 ) }
    dend_36 { pt3dadd( 14.6, -15.2414, -6.29781, 0.51 ) }
    dend_36 { pt3dadd( 13.9351, -16.3154, -5.17129, 0.07 ) }
    dend_36 { pt3dadd( 13.7313, -16.6685, -4.84215, 0.66 ) }
    dend_36 { pt3dadd( 13.4692, -17.1267, -4.44096, 0.66 ) }
    dend_36 { pt3dadd( 12.6375, -18.5148, -3.32811, 0.15 ) }
    dend_36 { pt3dadd( 12.0928, -19.3455, -2.7253, 2.13 ) }
    dend_36 { pt3dadd( 10.9077, -21.0933, -1.61645, 0.07 ) }
    dend_36 { pt3dadd( 10.1773, -22.0965, -1.04162, 0.07 ) }
    dend_36 { pt3dadd( 9.71803, -22.6939, -0.692708, 1.76 ) }
    dend_36 { pt3dadd( 8.35933, -24.3752, 0.265201, 0.15 ) }
    dend_36 { pt3dadd( 7.56942, -25.2796, 0.741617, 0.15 ) }
    dend_36 { pt3dadd( 7.1754, -25.6971, 0.955846, 0.15 ) }
    dend_36 { pt3dadd( 6.78129, -26.0942, 1.12318, 0.51 ) }
    dend_36 { pt3dadd( 5.81652, -27.0128, 1.4949, 0.07 ) }
    dend_36 { pt3dadd( 5.21995, -27.5591, 1.72761, 1.54 ) }
    dend_36 { pt3dadd( 3.82409, -28.8228, 2.21086, 0.29 ) }
    dend_36 { pt3dadd( 2.92385, -29.7223, 2.63152, 0.44 ) }
    dend_36 { pt3dadd( 2.1533, -30.6116, 3.10997, 2.2 ) }
    dend_36 { pt3dadd( 1.05842, -32.113, 3.9613, 0.22 ) }
    dend_36 { pt3dadd( 0.690019, -32.7583, 4.41871, 0.51 ) }
    dend_36 { pt3dadd( 0.31581, -33.6487, 5.18293, 0.95 ) }
    dend_36 { pt3dadd( -0.119805, -35.5755, 7.28861, 0.95 ) }
    dend_36 { pt3dadd( -0.164883, -36.3192, 8.3371, 0.95 ) }
    dend_36 { pt3dadd( -0.149163, -36.6525, 8.99598, 1.54 ) }
    dend_36 { pt3dadd( 0.0152631, -37.6964, 11.851, 0.44 ) }
    dend_36 { pt3dadd( 0.0736221, -37.8843, 12.5656, 1.18 ) }
    dend_36 { pt3dadd( 0.305049, -38.2974, 14.9326, 0.59 ) }
    dend_36 { pt3dadd( 0.612029, -38.5693, 17.5773, 1.18 ) }
    dend_36 { pt3dadd( 1.14692, -38.7594, 21.5242, 1.18 ) }
    dend_36 { pt3dadd( 1.50218, -38.7828, 23.6853, 1.03 ) }
    dend_36 { pt3dadd( 2.01601, -38.7079, 26.2248, 1.47 ) }
    dend_36 { pt3dadd( 2.57289, -38.5445, 28.581, 0.95 ) }
    dend_36 { pt3dadd( 3.19015, -38.2787, 30.8134, 0.44 ) }
    dend_36 { pt3dadd( 3.51575, -38.1244, 31.86, 1.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_36 { pt3dadd( 3.78353, -38.0042, 32.636, 0.15 ) }
    dend_36 { pt3dadd( 3.95228, -37.9378, 33.2037, 1.03 ) }
    dend_36 { pt3dadd( 4.31416, -37.8228, 34.9053, 1.03 ) }
    dend_36 { pt3dadd( 4.43712, -37.8313, 35.7549, 0.22 ) }
    dend_36 { pt3dadd( 4.62074, -37.9438, 37.977, 0.59 ) }
    dend_36 { pt3dadd( 4.65626, -37.9811, 38.6693, 0.81 ) }
    dend_36 { pt3dadd( 4.6629, -38.076, 40.0711, 0.22 ) }
    dend_36 { pt3dadd( 4.63668, -38.2195, 41.3013, 0.22 ) }
    dend_36 { pt3dadd( 4.6244, -38.484, 42.5489, 0.22 ) }
    dend_36 { pt3dadd( 4.6888, -38.6234, 43.0488, 0.66 ) }
    dend_36 { pt3dadd( 4.90352, -38.7494, 43.497, 0.66 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 11/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -17.8911, -14.8076, -17.4757, 0.15 ) }
    dend_31 { pt3dadd( -16.5957, -15.9186, -17.5015, 0.15 ) }
    dend_31 { pt3dadd( -15.0413, -17.1355, -17.5002, 0.15 ) }
    dend_31 { pt3dadd( -14.5779, -17.4756, -17.495, 0.73 ) }
    dend_31 { pt3dadd( -13.7892, -17.9963, -17.5108, 1.1 ) }
    dend_31 { pt3dadd( -12.6342, -18.7084, -17.5531, 0.07 ) }
    dend_31 { pt3dadd( -11.8076, -19.1752, -17.6355, 0.07 ) }
    dend_31 { pt3dadd( -10.8574, -19.6178, -17.8721, 1.54 ) }
    dend_31 { pt3dadd( -10.0956, -19.9114, -18.1786, 1.54 ) }
    dend_31 { pt3dadd( -8.90527, -20.3219, -18.7392, 0.07 ) }
    dend_31 { pt3dadd( -7.90711, -20.6309, -19.361, 1.1 ) }
    dend_31 { pt3dadd( -6.62413, -21.0351, -20.3652, 0.07 ) }
    dend_31 { pt3dadd( -5.32045, -21.4436, -21.6164, 0.07 ) }
    dend_31 { pt3dadd( -4.51277, -21.6808, -22.5597, 1.25 ) }
    dend_31 { pt3dadd( -4.08617, -21.7908, -23.1772, 1.54 ) }
    dend_31 { pt3dadd( -2.86002, -22.115, -25.1707, 0.22 ) }
    dend_31 { pt3dadd( -2.18588, -22.291, -26.3595, 1.03 ) }
    dend_31 { pt3dadd( -1.56222, -22.4882, -27.4663, 1.47 ) }
    dend_31 { pt3dadd( -0.99527, -22.7056, -28.4588, 1.91 ) }
    dend_31 { pt3dadd( -0.25617, -23.0142, -29.8452, 1.91 ) }
    dend_31 { pt3dadd( 0.469338, -23.327, -31.2603, 0.07 ) }
    dend_31 { pt3dadd( 0.639759, -23.4062, -31.5242, 0.37 ) }
    dend_31 { pt3dadd( 1.17789, -23.667, -32.1844, 0.07 ) }
    dend_31 { pt3dadd( 1.55398, -23.9824, -32.3814, 0.44 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 35/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -17.8911, -14.8076, -17.4757, 0.59 ) }
    dend_30 { pt3dadd( -18.6148, -14.6438, -17.7844, 0.59 ) }
    dend_30 { pt3dadd( -19.2423, -14.5508, -17.9989, 0.59 ) }
    dend_30 { pt3dadd( -20.1062, -14.481, -18.2877, 0.59 ) }
    dend_30 { pt3dadd( -20.8608, -14.4357, -18.5708, 0.81 ) }
    dend_30 { pt3dadd( -22.0531, -14.3874, -19.0095, 1.4 ) }
    dend_30 { pt3dadd( -22.9469, -14.3886, -19.3337, 1.54 ) }
    dend_30 { pt3dadd( -24.0082, -14.4664, -19.6713, 1.25 ) }
    dend_30 { pt3dadd( -25.7624, -14.6896, -20.2264, 0.29 ) }
    dend_30 { pt3dadd( -27.7801, -15.0418, -20.8655, 0.81 ) }
    dend_30 { pt3dadd( -28.9067, -15.2876, -21.2298, 0.22 ) }
    dend_30 { pt3dadd( -30.8497, -15.7687, -21.8884, 1.98 ) }
    dend_30 { pt3dadd( -32.9733, -16.3382, -22.6081, 0.15 ) }
    dend_30 { pt3dadd( -34.5563, -16.7842, -23.1505, 1.4 ) }
    dend_30 { pt3dadd( -35.5266, -17.077, -23.4695, 2.13 ) }
    dend_30 { pt3dadd( -36.3935, -17.3457, -23.7404, 2.13 ) }
    dend_30 { pt3dadd( -37.9335, -17.7778, -24.2231, 0.29 ) }
    dend_30 { pt3dadd( -38.5616, -17.9174, -24.4069, 0.51 ) }
    dend_30 { pt3dadd( -39.5187, -18.0785, -24.6716, 0.51 ) }
    dend_30 { pt3dadd( -40.4417, -18.2202, -24.8736, 1.03 ) }
    dend_30 { pt3dadd( -41.4538, -18.357, -25.0681, 0.59 ) }
    dend_30 { pt3dadd( -42.4673, -18.4723, -25.21, 1.32 ) }
    dend_30 { pt3dadd( -43.2059, -18.5502, -25.2713, 2.13 ) }
    dend_30 { pt3dadd( -44.8963, -18.6968, -25.3878, 0.07 ) }
    dend_30 { pt3dadd( -46.1036, -18.7664, -25.4518, 0.81 ) }
    dend_30 { pt3dadd( -47.1536, -18.7723, -25.552, 0.15 ) }
    dend_30 { pt3dadd( -47.9834, -18.7455, -25.6559, 0.15 ) }
    dend_30 { pt3dadd( -48.5014, -18.6974, -25.7293, 0.15 ) }
    dend_30 { pt3dadd( -49.4321, -18.5547, -25.8515, 1.4 ) }
    dend_30 { pt3dadd( -50.1964, -18.3925, -25.9399, 2.28 ) }
    dend_30 { pt3dadd( -52.4363, -17.8626, -26.2408, 0.29 ) }
    dend_30 { pt3dadd( -53.2867, -17.6517, -26.3945, 0.07 ) }
    dend_30 { pt3dadd( -54.562, -17.336, -26.6651, 1.1 ) }
    dend_30 { pt3dadd( -55.2751, -17.1352, -26.8125, 0.29 ) }
    dend_30 { pt3dadd( -56.0358, -16.8932, -26.9958, 0.66 ) }
    dend_30 { pt3dadd( -57.1575, -16.4925, -27.3028, 0.15 ) }
    dend_30 { pt3dadd( -58.3156, -16.0007, -27.8757, 1.84 ) }
    dend_30 { pt3dadd( -58.6926, -15.8023, -28.1864, 1.69 ) }
    dend_30 { pt3dadd( -59.6813, -15.0738, -29.446, 0.15 ) }
    dend_30 { pt3dadd( -60.385, -14.3422, -30.8105, 0.15 ) }
    dend_30 { pt3dadd( -60.647, -13.9452, -31.6591, 1.4 ) }
    dend_30 { pt3dadd( -61.3071, -12.5567, -34.875, 2.13 ) }
    dend_30 { pt3dadd( -61.5824, -11.8059, -36.7233, 2.13 ) }
    dend_30 { pt3dadd( -61.8354, -10.9257, -38.9632, 0.22 ) }
    dend_30 { pt3dadd( -61.9863, -10.1097, -41.0378, 1.4 ) }
    dend_30 { pt3dadd( -62.1662, -8.43963, -45.0714, 0.73 ) }
    dend_30 { pt3dadd( -62.2018, -7.95005, -46.1942, 1.03 ) }
    dend_30 { pt3dadd( -62.2616, -7.27253, -47.6622, 0.29 ) }
    dend_30 { pt3dadd( -62.3092, -6.83606, -48.6489, 0.29 ) }
    dend_30 { pt3dadd( -62.3678, -6.4639, -49.5267, 0.29 ) }
    dend_30 { pt3dadd( -62.4557, -6.08674, -50.2631, 0.29 ) }
    dend_30 { pt3dadd( -62.5, -5.78388, -50.6083, 0.95 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 87/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -15.6767, -17.1306, -9.10587, 0.51 ) }
    dend_26 { pt3dadd( -15.166, -17.61, -8.31468, 0.51 ) }
    dend_26 { pt3dadd( -14.566, -18.1592, -7.5682, 0.59 ) }
    dend_26 { pt3dadd( -13.5379, -19.0235, -6.58912, 1.25 ) }
    dend_26 { pt3dadd( -12.4024, -19.9452, -5.69018, 1.54 ) }
    dend_26 { pt3dadd( -12.0848, -20.2009, -5.47069, 1.54 ) }
    dend_26 { pt3dadd( -11.3091, -20.8326, -4.97821, 0.66 ) }
    dend_26 { pt3dadd( -10.4699, -21.4916, -4.54372, 0.81 ) }
    dend_26 { pt3dadd( -9.45606, -22.299, -4.11928, 0.37 ) }
    dend_26 { pt3dadd( -8.68419, -22.9408, -3.8465, 0.95 ) }
    dend_26 { pt3dadd( -7.77829, -23.7628, -3.51788, 1.84 ) }
    dend_26 { pt3dadd( -6.44511, -25.0662, -2.98577, 0.51 ) }
    dend_26 { pt3dadd( -5.97858, -25.5794, -2.77029, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_26 { pt3dadd( -5.21078, -26.5297, -2.37473, 1.1 ) }
    dend_26 { pt3dadd( -4.73204, -27.2187, -2.10322, 0.37 ) }
    dend_26 { pt3dadd( -4.13719, -28.2055, -1.75927, 1.18 ) }
    dend_26 { pt3dadd( -3.59179, -29.3096, -1.43333, 2.5 ) }
    dend_26 { pt3dadd( -2.97835, -30.9841, -1.05193, 0.37 ) }
    dend_26 { pt3dadd( -2.74759, -31.8567, -0.891391, 0.88 ) }
    dend_26 { pt3dadd( -2.58163, -32.7145, -0.783033, 0.07 ) }
    dend_26 { pt3dadd( -2.39329, -33.8096, -0.708011, 1.47 ) }
    dend_26 { pt3dadd( -2.23551, -34.8711, -0.692595, 1.98 ) }
    dend_26 { pt3dadd( -2.008, -36.7312, -0.732925, 0.51 ) }
    dend_26 { pt3dadd( -1.87208, -37.876, -0.829823, 0.07 ) }
    dend_26 { pt3dadd( -1.6999, -39.3416, -0.973596, 1.76 ) }
    dend_26 { pt3dadd( -1.49878, -40.8184, -1.14682, 0.07 ) }
    dend_26 { pt3dadd( -1.3472, -41.7601, -1.27608, 0.73 ) }
    dend_26 { pt3dadd( -1.15172, -42.6858, -1.42869, 0.07 ) }
    dend_26 { pt3dadd( -0.825289, -43.8573, -1.67642, 1.4 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 16/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -15.6767, -17.1306, -9.10587, 0.51 ) }
    dend_25 { pt3dadd( -16.5216, -18.3802, -8.47173, 0.51 ) }
    dend_25 { pt3dadd( -17.2328, -19.4355, -7.9157, 0.66 ) }
    dend_25 { pt3dadd( -17.7211, -20.165, -7.50866, 0.22 ) }
    dend_25 { pt3dadd( -18.2761, -21.0179, -7.06251, 0.51 ) }
    dend_25 { pt3dadd( -18.5873, -21.4916, -6.80273, 0.07 ) }
    dend_25 { pt3dadd( -18.8609, -21.9054, -6.55074, 0.37 ) }
    dend_25 { pt3dadd( -19.3762, -22.7404, -6.03065, 0.07 ) }
    dend_25 { pt3dadd( -19.6349, -23.163, -5.76249, 0.81 ) }
    dend_25 { pt3dadd( -20.2508, -24.1257, -5.12228, 0.07 ) }
    dend_25 { pt3dadd( -20.9928, -25.2345, -4.35339, 0.15 ) }
    dend_25 { pt3dadd( -21.7424, -26.3193, -3.58922, 0.15 ) }
    dend_25 { pt3dadd( -22.4518, -27.338, -2.87803, 2.2 ) }
    dend_25 { pt3dadd( -23.2722, -28.5196, -2.12757, 0.29 ) }
    dend_25 { pt3dadd( -24.0098, -29.587, -1.51798, 0.15 ) }
    dend_25 { pt3dadd( -24.9099, -30.9067, -0.850151, 1.54 ) }
    dend_25 { pt3dadd( -25.5808, -31.9319, -0.456399, 0.22 ) }
    dend_25 { pt3dadd( -25.9668, -32.5447, -0.281784, 0.88 ) }
    dend_25 { pt3dadd( -26.9934, -34.2289, 0.0795738, 0.15 ) }
    dend_25 { pt3dadd( -27.5478, -35.1659, 0.2032, 1.76 ) }
    dend_25 { pt3dadd( -28.0375, -36.0285, 0.221138, 2.06 ) }
    dend_25 { pt3dadd( -28.693, -37.2291, 0.148333, 0.37 ) }
    dend_25 { pt3dadd( -28.9952, -37.8092, 0.0949651, 0.81 ) }
    dend_25 { pt3dadd( -29.2921, -38.3671, 0.0203589, 0.07 ) }
    dend_25 { pt3dadd( -29.8295, -39.3384, -0.153207, 0.81 ) }
    dend_25 { pt3dadd( -30.1854, -39.904, -0.284757, 0.07 ) }
    dend_25 { pt3dadd( -30.6063, -40.4852, -0.441594, 0.29 ) }
    dend_25 { pt3dadd( -31.268, -41.2859, -0.670951, 0.07 ) }
    dend_25 { pt3dadd( -31.9086, -41.9757, -0.880031, 1.54 ) }
    dend_25 { pt3dadd( -32.2811, -42.3575, -1.00926, 1.62 ) }
    dend_25 { pt3dadd( -33.4621, -43.5434, -1.41631, 0.29 ) }
    dend_25 { pt3dadd( -34.0334, -44.147, -1.60889, 0.66 ) }
    dend_25 { pt3dadd( -34.5967, -44.7825, -1.81253, 1.47 ) }
    dend_25 { pt3dadd( -35.47, -45.839, -2.1497, 0.07 ) }
    dend_25 { pt3dadd( -36.2504, -46.9221, -2.48272, 0.07 ) }
    dend_25 { pt3dadd( -36.7252, -47.6943, -2.72181, 1.54 ) }
    dend_25 { pt3dadd( -37.4159, -49.0673, -3.13756, 0.15 ) }
    dend_25 { pt3dadd( -37.6868, -49.6838, -3.32851, 0.07 ) }
    dend_25 { pt3dadd( -38.0374, -50.613, -3.6201, 0.95 ) }
    dend_25 { pt3dadd( -38.3663, -51.7069, -3.95184, 0.29 ) }
    dend_25 { pt3dadd( -38.5776, -52.5097, -4.18151, 1.69 ) }
    dend_25 { pt3dadd( -38.6248, -52.711, -4.24799, 1.69 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 58/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -20.6587, -11.037, 13.9082, 0.59 ) }
    dend_19 { pt3dadd( -20.5475, -10.9886, 14.42, 0.59 ) }
    dend_19 { pt3dadd( -20.1658, -10.788, 16.0628, 0.59 ) }
    dend_19 { pt3dadd( -19.687, -10.6224, 17.8709, 1.03 ) }
    dend_19 { pt3dadd( -19.0327, -10.4776, 20.0069, 1.4 ) }
    dend_19 { pt3dadd( -18.2287, -10.3329, 22.4442, 1.1 ) }
    dend_19 { pt3dadd( -17.7791, -10.248, 23.7142, 1.25 ) }
    dend_19 { pt3dadd( -17.6515, -10.2197, 24.054, 1.69 ) }
    dend_19 { pt3dadd( -16.6183, -9.93783, 26.4359, 0.51 ) }
    dend_19 { pt3dadd( -16.2115, -9.79786, 27.2336, 0.59 ) }
    dend_19 { pt3dadd( -15.5571, -9.52191, 28.3348, 0.44 ) }
    dend_19 { pt3dadd( -14.8749, -9.16583, 29.3749, 0.66 ) }
    dend_19 { pt3dadd( -14.4022, -8.88826, 30.0991, 1.03 ) }
    dend_19 { pt3dadd( -14.0541, -8.63282, 30.6426, 1.03 ) }
    dend_19 { pt3dadd( -13.5475, -8.07112, 31.4333, 1.03 ) }
    dend_19 { pt3dadd( -12.997, -7.34128, 32.3586, 0.37 ) }
    dend_19 { pt3dadd( -12.6527, -6.86519, 32.8858, 0.95 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 75/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -20.6587, -11.037, 13.9082, 0.22 ) }
    dend_18 { pt3dadd( -21.078, -11.409, 13.7215, 0.22 ) }
    dend_18 { pt3dadd( -21.7486, -11.9307, 13.227, 0.81 ) }
    dend_18 { pt3dadd( -22.5173, -12.5217, 12.6426, 0.37 ) }
    dend_18 { pt3dadd( -23.2131, -13.093, 12.1897, 0.07 ) }
    dend_18 { pt3dadd( -23.9492, -13.7305, 11.7596, 0.95 ) }
    dend_18 { pt3dadd( -25.0399, -14.692, 11.1843, 0.07 ) }
    dend_18 { pt3dadd( -26.4232, -15.8076, 10.6301, 0.07 ) }
    dend_18 { pt3dadd( -27.2119, -16.3842, 10.4374, 0.59 ) }
    dend_18 { pt3dadd( -28.3563, -17.1376, 10.3893, 0.07 ) }
    dend_18 { pt3dadd( -28.7539, -17.3643, 10.4545, 0.07 ) }
    dend_18 { pt3dadd( -29.2179, -17.5801, 10.5923, 0.95 ) }
    dend_18 { pt3dadd( -30.5894, -18.0418, 11.1522, 0.07 ) }
    dend_18 { pt3dadd( -31.3826, -18.2063, 11.4874, 0.07 ) }
    dend_18 { pt3dadd( -32.2453, -18.2988, 11.6383, 0.88 ) }
    dend_18 { pt3dadd( -32.9005, -18.3398, 11.4876, 0.07 ) }
    dend_18 { pt3dadd( -33.3923, -18.3643, 11.3201, 0.59 ) }
    dend_18 { pt3dadd( -34.3925, -18.4231, 10.8066, 0.07 ) }
    dend_18 { pt3dadd( -34.8637, -18.4629, 10.4636, 1.25 ) }
    dend_18 { pt3dadd( -36.4782, -18.6433, 9.00494, 0.07 ) }
    dend_18 { pt3dadd( -37.806, -18.8222, 7.56003, 1.25 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 96/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -0.825289, -43.8573, -1.67642, 0.29 ) }
    dend_28 { pt3dadd( -1.32076, -43.4062, -3.15917, 0.29 ) }
    dend_28 { pt3dadd( -1.82122, -42.8015, -4.89291, 1.47 ) }
    dend_28 { pt3dadd( -2.64809, -41.7185, -7.69083, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_28 { pt3dadd( -2.8231, -41.4909, -8.24887, 0.44 ) }
    dend_28 { pt3dadd( -3.19292, -40.9998, -9.3644, 0.15 ) }
    dend_28 { pt3dadd( -3.52859, -40.5392, -10.3531, 1.25 ) }
    dend_28 { pt3dadd( -4.14667, -39.5512, -12.277, 0.22 ) }
    dend_28 { pt3dadd( -4.35627, -39.1935, -12.8992, 0.37 ) }
    dend_28 { pt3dadd( -4.76146, -38.4424, -14.0605, 0.07 ) }
    dend_28 { pt3dadd( -5.09299, -37.8548, -15.0096, 0.44 ) }
    dend_28 { pt3dadd( -5.65015, -37.0313, -16.349, 0.07 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 8/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -0.825289, -43.8573, -1.67642, 1.03 ) }
    dend_27 { pt3dadd( -0.465352, -45.0488, -1.30089, 1.03 ) }
    dend_27 { pt3dadd( -0.208754, -46.0013, -1.01397, 0.15 ) }
    dend_27 { pt3dadd( 0.0352181, -47.0298, -0.686515, 1.32 ) }
    dend_27 { pt3dadd( 0.268799, -48.223, -0.293721, 0.22 ) }
    dend_27 { pt3dadd( 0.40369, -49.068, 0.00815953, 0.22 ) }
    dend_27 { pt3dadd( 0.556708, -50.2345, 0.433213, 2.13 ) }
    dend_27 { pt3dadd( 0.697856, -52.3524, 1.22349, 0.15 ) }
    dend_27 { pt3dadd( 0.706506, -53.3305, 1.57352, 0.15 ) }
    dend_27 { pt3dadd( 0.643772, -54.6281, 1.99709, 1.25 ) }
    dend_27 { pt3dadd( 0.514789, -55.8287, 2.35246, 0.22 ) }
    dend_27 { pt3dadd( 0.397126, -56.5131, 2.54607, 0.29 ) }
    dend_27 { pt3dadd( 0.129338, -57.5598, 2.85908, 0.07 ) }
    dend_27 { pt3dadd( -0.196588, -58.4747, 3.16178, 0.07 ) }
    dend_27 { pt3dadd( -0.391071, -58.9512, 3.34223, 1.54 ) }
    dend_27 { pt3dadd( -0.913999, -60.1242, 3.8506, 0.15 ) }
    dend_27 { pt3dadd( -1.15255, -60.6403, 4.09346, 0.51 ) }
    dend_27 { pt3dadd( -1.70138, -61.8338, 4.75893, 0.07 ) }
    dend_27 { pt3dadd( -2.1383, -62.8008, 5.35229, 1.25 ) }
    dend_27 { pt3dadd( -2.43451, -63.4601, 5.79041, 0.07 ) }
    dend_27 { pt3dadd( -2.53672, -63.709, 5.9649, 0.07 ) }
    dend_27 { pt3dadd( -2.77173, -64.3673, 6.47569, 1.18 ) }
    dend_27 { pt3dadd( -3.08958, -65.4463, 7.34209, 0.15 ) }
    dend_27 { pt3dadd( -3.28716, -66.1787, 8.01446, 0.73 ) }
    dend_27 { pt3dadd( -3.49445, -66.8515, 8.71731, 0.07 ) }
    dend_27 { pt3dadd( -3.86035, -67.7041, 9.77764, 1.25 ) }
    dend_27 { pt3dadd( -4.384, -68.549, 11.0967, 0.22 ) }
    dend_27 { pt3dadd( -4.77006, -69.0135, 11.9676, 1.18 ) }
    dend_27 { pt3dadd( -5.70054, -69.9002, 13.8469, 0.07 ) }
    dend_27 { pt3dadd( -6.13846, -70.2675, 14.6499, 0.37 ) }
    dend_27 { pt3dadd( -7.16695, -71.0275, 16.256, 1.1 ) }
    dend_27 { pt3dadd( -8.34637, -71.8138, 17.8018, 0.07 ) }
    dend_27 { pt3dadd( -9.06966, -72.299, 18.5903, 1.18 ) }
    dend_27 { pt3dadd( -10.0409, -72.9482, 19.5594, 0.07 ) }
    dend_27 { pt3dadd( -10.6294, -73.3678, 20.0852, 1.1 ) }
    dend_27 { pt3dadd( -11.9004, -74.3788, 21.2092, 0.07 ) }
    dend_27 { pt3dadd( -12.4252, -74.8583, 21.6182, 1.18 ) }
    dend_27 { pt3dadd( -13.3485, -75.8109, 22.1821, 0.07 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 46/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -12.6527, -6.86519, 32.8858, 0.07 ) }
    dend_21 { pt3dadd( -13.4787, -6.53524, 32.8742, 0.07 ) }
    dend_21 { pt3dadd( -13.9636, -6.38, 32.9546, 0.15 ) }
    dend_21 { pt3dadd( -14.66, -6.22508, 33.2083, 0.37 ) }
    dend_21 { pt3dadd( -15.6177, -6.10894, 33.7068, 0.07 ) }
    dend_21 { pt3dadd( -16.465, -6.08189, 34.3684, 0.88 ) }
    dend_21 { pt3dadd( -17.4171, -6.12087, 35.4473, 0.37 ) }
    dend_21 { pt3dadd( -18.0984, -6.24995, 36.617, 0.66 ) }
    dend_21 { pt3dadd( -18.5449, -6.48094, 37.9987, 0.73 ) }
    dend_21 { pt3dadd( -18.6798, -6.69047, 38.94, 0.73 ) }
    dend_21 { pt3dadd( -18.7102, -7.2044, 40.7813, 0.73 ) }
    dend_21 { pt3dadd( -18.5997, -7.65199, 42.2426, 0.73 ) }
    dend_21 { pt3dadd( -18.5371, -7.76427, 42.5818, 0.95 ) }
    dend_21 { pt3dadd( -18.0922, -8.28811, 44.1326, 0.29 ) }
    dend_21 { pt3dadd( -17.7672, -8.57008, 44.9657, 0.51 ) }
    dend_21 { pt3dadd( -17.4671, -8.79502, 45.6017, 0.66 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 62/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -12.6527, -6.86519, 32.8858, 0.66 ) }
    dend_20 { pt3dadd( -11.5498, -6.81476, 32.8877, 0.66 ) }
    dend_20 { pt3dadd( -10.7873, -6.7799, 32.8891, 0.07 ) }
    dend_20 { pt3dadd( -10.1872, -6.75246, 32.8902, 0.07 ) }
    dend_20 { pt3dadd( -9.63212, -6.72708, 32.8912, 0.29 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_33, dend_22, dend_11, dend_6, dend_5, dend_0, dend_41, dend_34, dend_32, dend_23, dend_15, dend_12, dend_10, dend_7, dend_2, dend_1, dend_43, dend_42, dend_38, dend_35, dend_29, dend_24, dend_17, dend_16, dend_14, dend_13, dend_9, dend_8, dend_4, dend_3, dend_40, dend_39, dend_37, dend_36, dend_31, dend_30, dend_26, dend_25, dend_19, dend_18, dend_28, dend_27, dend_21, dend_20]}
    ModelViewParmSubset_2 = new SectionList()
    dend_33 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_33, dend_22, dend_11, dend_6, dend_5, dend_0, dend_41, dend_34, dend_32, dend_23, dend_15, dend_12, dend_10, dend_7, dend_2, dend_1, dend_43, dend_42, dend_38, dend_35, dend_29, dend_24, dend_17, dend_16, dend_14, dend_13, dend_9, dend_8, dend_4, dend_3, dend_40, dend_39, dend_37, dend_36, dend_31, dend_30, dend_26, dend_25, dend_19, dend_18, dend_28, dend_27, dend_21, dend_20]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_5 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_32 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_43 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_16 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_14 OneSecGrp_SectionRef_28.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_4 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_40 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_39 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_36 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_30 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_25 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_27 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_22 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_6 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_23 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_33 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_11 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_7 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_34 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_38 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_15 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_24 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_35 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_12 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_2 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_29 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_9 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_41 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_17 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_3 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_13 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_1 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_8 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_10 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_42 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_31 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_19 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_18 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_26 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_37 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_20 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_21 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_28 OneSecGrp_SectionRef_44.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_22, dend_22, dend_22, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    axon_1 all.append()
    axon_1 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_24 all.append()
    dend_24 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_5 nseg = 3
    dend_32 nseg = 3
    dend_43 nseg = 5
    dend_16 nseg = 3
    dend_14 nseg = 5
    dend_4 nseg = 3
    dend_40 nseg = 3
    dend_39 nseg = 3
    dend_36 nseg = 3
    dend_30 nseg = 3
    dend_25 nseg = 3
    dend_27 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L1_DAC_a9ae5cbbf5_0_0


