// Cell: cIR216_L5_NBC_650c18e6aa_0_0
/*
{
  "id" : "cIR216_L5_NBC_650c18e6aa_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.91165, -15.504, 0.0, 2.36095", "1.69225, -14.164, 0.0, 3.77272", "1.47285, -12.824, 0.0, 5.64735", "1.25345, -11.484, 0.0, 7.11092", "1.03406, -10.144, 0.0, 8.31603", "0.814659, -8.80403, 0.0, 9.51462", "0.595262, -7.46404, 0.0, 10.3186", "0.375865, -6.12406, 0.0, 10.9463", "0.156467, -4.78407, 0.0, 11.2263", "-0.0629298, -3.44408, 0.0, 11.5062", "-0.282327, -2.1041, 0.0, 11.5148", "-0.501724, -0.76411, 0.0, 11.4563", "-0.721122, 0.575877, 0.0, 12.0569", "-0.940519, 1.91586, 0.0, 12.3516", "-1.15992, 3.25585, 0.0, 11.8398", "-1.37931, 4.59584, 0.0, 10.9681", "-1.59871, 5.93582, 0.0, 9.93554", "-1.81811, 7.27581, 0.0, 8.23546", "-2.03751, 8.6158, 0.0, 6.93545", "-2.2569, 9.95578, 0.0, 5.0025", "-2.4763, 11.2958, 0.0, 3.14572" ]
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "2.49262, -15.8337, -20.89, 1.66", "3.34427, -22.0385, -22.4246, 1.66", "4.06138, -27.2632, -23.7167, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000037708019813
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-8.31738, 1.9893, -1.78, 2.49", "-10.1568, 2.55884, -1.60097, 2.49", "-15.0747, 4.08154, -1.12232, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000037708019813
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.21262, 10.9008, 2.62, 1.94", "7.20898, 15.4442, 3.15052, 1.94", "11.7087, 19.536, 3.62831, 1.66", "15.3395, 22.8377, 4.01384, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000037708019813
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-2.4763, 11.2958, 0.0, 0.55", "-4.89999, 26.0987, 0.0, 0.55", "-7.32368, 40.9016, 0.0, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "4.06138, -27.2632, -23.7167, 1.66", "4.80383, -29.4858, -16.0458, 1.66" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "4.06138, -27.2632, -23.7167, 0.83", "6.7025, -30.3558, -28.9076, 0.83", "7.58776, -31.3925, -30.6475, 0.83" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-15.0747, 4.08154, -1.12232, 1.66", "-17.3225, 4.85594, 0.820063, 1.66", "-20.5148, 5.95572, 3.57853, 1.38", "-22.9031, 6.77853, 5.64231, 1.38" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-15.0747, 4.08154, -1.12232, 0.83", "-23.527, 3.52009, -8.06432, 0.83", "-26.3496, 3.40063, -10.1177, 0.83", "-30.2398, 3.34354, -12.6026, 0.83", "-32.8136, 3.36773, -14.0485, 0.83", "-34.9545, 3.43276, -15.0912, 0.83", "-36.5952, 3.54122, -15.8087, 0.83", "-38.1871, 3.79383, -16.1047, 0.55", "-39.836, 4.16557, -16.3119, 0.83", "-41.5451, 4.7118, -16.4285, 0.55", "-43.2776, 5.29736, -16.6004, 0.83", "-46.2068, 6.32229, -16.939, 0.55", "-49.0976, 7.39084, -17.1731, 0.83", "-51.7268, 8.40512, -17.2902, 0.83", "-54.1564, 9.33928, -17.2931, 0.55", "-58.3564, 10.9297, -16.9357, 0.55", "-59.5139, 11.3516, -16.734, 0.55", "-62.3595, 12.2802, -15.9115, 0.83", "-64.1032, 12.8202, -15.3125, 0.55", "-66.7489, 13.492, -14.3689, 0.83", "-69.165, 14.0592, -13.5304, 0.55", "-71.8316, 14.6752, -12.7163, 1.11", "-77.0452, 15.8422, -11.9538, 0.55", "-79.8936, 16.4935, -11.9613, 0.55", "-82.3635, 17.0337, -12.2108, 0.55", "-85.6473, 17.7654, -13.17, 0.55", "-87.9031, 18.2744, -14.1533, 0.55", "-93.2211, 19.4813, -16.9549, 0.55", "-95.6519, 20.1085, -18.2901, 0.83", "-97.5288, 20.6496, -19.1906, 0.83", "-103.187, 22.5714, -21.3419, 0.28", "-105.149, 23.2851, -21.8374, 0.55", "-108.492, 24.6179, -22.3415, 0.55", "-112.203, 26.2203, -22.3768, 0.28", "-114.533, 27.3474, -22.2613, 0.55", "-116.543, 28.4279, -22.0194, 0.28", "-117.624, 29.0356, -21.8676, 0.83", "-119.893, 30.3553, -21.7239, 0.28", "-120.669, 30.7825, -21.7323, 0.83", "-124.079, 32.4937, -21.9808, 0.28", "-126.618, 33.5559, -22.334, 0.83", "-130.7, 34.973, -22.9743, 0.28", "-132.897, 35.6295, -23.3339, 0.55", "-138.106, 37.0512, -24.1889, 0.28", "-140.55, 37.574, -24.5309, 0.55", "-148.078, 38.8133, -25.3787, 0.28", "-151.882, 39.2701, -25.7249, 0.55", "-155.163, 39.5582, -25.935, 0.28", "-158.201, 39.7251, -26.1243, 0.55", "-168.832, 40.043, -26.5226, 0.28", "-171.037, 40.058, -26.5025, 0.83", "-174.765, 39.9905, -26.2887, 0.28", "-175.545, 39.9542, -26.1962, 0.55", "-178.033, 39.8598, -25.7915, 0.28", "-180.134, 39.812, -25.3881, 0.83", "-185.352, 40.0729, -24.2884, 0.28", "-188.091, 40.3573, -23.6739, 0.83", "-196.739, 41.9084, -22.0974, 0.28", "-203.102, 43.4405, -21.1256, 0.28", "-204.368, 43.8319, -20.9677, 0.83", "-209.089, 45.4992, -20.8086, 0.28", "-211.199, 46.3863, -20.8633, 0.83", "-217.301, 49.2423, -21.9987, 0.28", "-218.97, 50.0802, -22.6258, 0.55", "-220.292, 50.7209, -23.2343, 0.55", "-226.03, 53.2408, -26.1411, 0.28", "-228.18, 53.9988, -27.3919, 0.55", "-234.005, 55.6936, -30.9868, 0.28", "-236.927, 56.1918, -32.5634, 0.55", "-247.244, 57.8926, -34.5902, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "15.3395, 22.8377, 4.01384, 1.38", "19.4086, 25.9534, 4.15653, 1.38", "22.9699, 28.6804, 4.28141, 1.11", "26.157, 31.1208, 4.39318, 1.38" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "15.3395, 22.8377, 4.01384, 0.83", "23.1582, 26.5732, 10.1337, 0.83", "28.3338, 29.8984, 15.1588, 0.83", "30.4741, 31.6456, 17.6417, 0.83", "32.9088, 33.9953, 20.7634, 0.83", "35.4312, 36.7519, 24.2764, 0.83", "38.8764, 40.8664, 29.4392, 1.11", "40.3602, 43.3484, 32.4993, 0.83", "41.7049, 45.9029, 35.4849, 1.11", "42.5571, 47.593, 37.3878, 0.55", "43.3361, 49.1975, 39.2562, 0.83", "44.5564, 51.7151, 42.3341, 0.28", "45.3581, 53.2415, 44.4462, 0.55", "46.3289, 54.8087, 46.98, 0.28", "48.8855, 58.5211, 53.7583, 0.55", "49.9416, 59.9152, 56.5969, 0.83", "51.2924, 61.6809, 60.4662, 0.55", "52.1024, 62.8424, 63.1925, 0.83", "53.2297, 64.8588, 68.2521, 0.55", "54.2064, 66.8017, 73.416, 0.83", "54.8346, 68.388, 78.2484, 0.55", "55.225, 69.5425, 82.1052, 0.55", "55.625, 70.7833, 86.6822, 0.83", "56.1672, 72.3061, 92.9713, 0.55", "56.4131, 72.9394, 95.9303, 1.38", "57.6633, 75.1757, 107.45, 0.55", "58.1352, 75.7565, 110.562, 0.55", "58.8853, 76.2838, 113.648, 1.11", "60.9946, 77.1346, 119.469, 0.28", "61.6303, 77.2451, 120.806, 0.83", "63.2292, 77.2941, 123.757, 0.28", "64.3597, 77.1524, 125.39, 1.11", "65.742, 76.7569, 127.56, 0.28", "66.5786, 76.3459, 129.086, 0.83", "69.3767, 74.2862, 134.756, 0.28", "70.5707, 73.1343, 137.778, 0.28", "71.1722, 72.3291, 139.855, 1.11", "71.5291, 71.7338, 141.749, 1.11", "71.9131, 71.0549, 144.626, 0.28", "72.1174, 70.7893, 146.374, 0.83", "72.7128, 70.4349, 150.514, 0.28", "73.3072, 70.3851, 153.989, 0.83", "74.4754, 70.598, 160.207, 0.28", "75.2763, 70.8208, 163.706, 1.11", "76.5412, 71.2518, 168.436, 0.28", "77.4031, 71.6152, 171.395, 0.83", "80.0504, 72.7887, 179.192, 0.28", "80.3055, 72.9022, 179.872, 0.83", "82.2666, 73.6304, 184.414, 0.55", "84.0425, 74.2025, 188.326, 0.28", "85.852, 74.6897, 192.158, 1.38", "87.239, 74.9875, 195.063, 0.83", "90.9878, 75.4588, 202.243, 0.28", "92.9076, 75.669, 205.905, 1.11", "95.5924, 75.9052, 210.937, 0.28", "96.2976, 75.9579, 212.256, 1.11", "98.2584, 76.0581, 215.554, 0.28", "99.5358, 76.1961, 217.713, 1.11", "102.279, 76.8309, 222.518, 0.28", "102.761, 77.0376, 223.459, 0.55", "104.943, 78.3342, 227.66, 0.28", "107.236, 80.2527, 232.311, 0.83", "108.932, 82.0782, 235.782, 0.28", "110.147, 83.937, 238.857, 0.83", "111.488, 87.0108, 243.608, 0.28", "111.986, 88.3895, 245.667, 0.55", "112.994, 92.1964, 251.107, 0.28", "113.246, 93.7593, 253.335, 0.55", "113.862, 98.1622, 259.473, 0.28", "114.179, 100.707, 263.022, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-7.32368, 40.9016, 0.0, 0.55", "-9.74737, 55.7045, 0.0, 0.55", "-12.1711, 70.5074, 0.0, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "4.80383, -29.4858, -16.0458, 0.55", "4.77622, -29.5642, -16.0542, 0.55", "3.52556, -33.2913, -16.2523, 0.55", "2.18961, -37.6502, -16.1577, 0.55", "1.54013, -39.894, -16.0155, 0.55", "1.1274, -41.2135, -15.877, 0.55", "0.420481, -43.4656, -15.658, 0.55", "-0.870996, -47.4678, -15.0759, 0.55", "-1.98396, -51.3591, -14.6914, 0.55", "-2.32626, -52.7573, -14.6448, 0.28", "-3.3091, -57.469, -14.7542, 0.55", "-3.81716, -60.1917, -14.9507, 0.55", "-4.29712, -62.939, -15.3186, 0.55", "-5.47819, -70.8369, -17.0563, 0.28", "-5.6894, -72.4199, -17.5293, 0.55", "-5.8231, -73.4281, -17.8473, 0.55", "-6.03853, -75.1935, -18.4374, 0.28", "-6.10407, -75.537, -18.5294, 0.55", "-6.55252, -77.4737, -19.1366, 0.28", "-7.05302, -79.1595, -19.527, 0.55", "-7.89334, -82.1953, -20.2376, 0.28", "-8.55467, -84.8216, -20.7623, 0.55", "-9.10754, -87.4279, -21.1868, 0.28", "-9.90678, -91.6221, -21.6936, 0.83", "-10.4784, -95.0934, -22.0166, 0.55", "-10.749, -96.99, -22.1442, 0.83", "-11.0406, -99.0874, -22.1898, 0.28", "-11.4017, -101.659, -22.0762, 0.83", "-11.8209, -104.525, -21.7367, 0.28", "-12.0716, -105.897, -21.43, 0.83", "-12.7867, -109.329, -20.5963, 0.28", "-13.2948, -111.572, -20.0889, 0.83", "-13.9446, -114.285, -19.4529, 0.28", "-14.6909, -117.383, -18.6798, 0.83", "-16.2992, -123.896, -16.9145, 0.28", "-16.9877, -126.891, -16.014, 0.83", "-18.1665, -132.438, -14.2782, 0.28", "-18.7988, -135.506, -13.3767, 0.83", "-19.6705, -139.626, -12.1941, 0.28", "-20.0674, -141.764, -11.6343, 0.83", "-21.8269, -153.57, -8.84701, 0.28", "-22.1967, -156.703, -8.15431, 0.83", "-23.0109, -165.423, -6.31602, 0.28", "-23.2012, -167.842, -5.85243, 0.83", "-23.5177, -172.85, -5.01104, 0.28", "-23.6494, -176.08, -4.59242, 0.83", "-23.6815, -181.197, -4.32728, 0.28", "-23.6305, -182.346, -4.29642, 0.83" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "4.80383, -29.4858, -16.0458, 0.55", "4.95879, -35.0936, -19.3115, 0.55", "4.94447, -37.8052, -20.6971, 0.55", "4.91365, -39.0756, -21.239, 0.55", "4.734, -41.5831, -21.9916, 0.55", "4.45001, -43.7306, -22.3436, 0.55", "4.08328, -45.7733, -22.4016, 0.55", "3.71116, -47.0727, -22.0169, 0.28", "3.14488, -48.9096, -21.0814, 0.55", "2.24458, -51.6323, -19.3093, 0.55", "1.47369, -54.0185, -17.7085, 0.55", "0.911476, -55.7865, -16.4378, 0.28", "0.41673, -57.1688, -15.3634, 0.55", "-0.932693, -60.7697, -12.4866, 0.28", "-2.07609, -63.5755, -10.1911, 0.83", "-3.23988, -66.3253, -7.93403, 0.28", "-4.60839, -69.3613, -5.49448, 0.83", "-5.9302, -71.9893, -3.33036, 0.28", "-6.64532, -73.2562, -2.21665, 0.55", "-8.07105, -75.4959, -0.0395443, 0.28", "-8.9048, -76.6962, 1.31034, 0.83", "-9.43393, -77.3924, 2.22085, 0.83", "-11.669, -80.4768, 6.22003, 0.28", "-12.7573, -82.0124, 8.21646, 0.55", "-13.8776, -83.5636, 10.2558, 0.28", "-15.7878, -85.9822, 13.6229, 0.83", "-18.1837, -88.8194, 17.6552, 0.28", "-19.0094, -89.7902, 18.8893, 0.83", "-20.8998, -91.9652, 21.3599, 0.28", "-22.3822, -93.6953, 23.042, 0.83", "-27.897, -100.224, 28.6156, 0.28", "-28.8528, -101.367, 29.4656, 0.83", "-33.0448, -106.385, 32.8172, 0.28", "-34.3768, -107.953, 33.8123, 0.55", "-36.6258, -110.688, 35.3364, 0.28", "-37.3781, -111.676, 35.8151, 0.83", "-38.2608, -112.983, 36.3074, 0.28", "-38.6473, -113.573, 36.5849, 0.55", "-39.5674, -114.977, 37.467, 0.28", "-40.0186, -115.712, 37.9034, 0.83", "-42.1512, -119.412, 39.9656, 0.28", "-42.5496, -120.126, 40.3301, 0.83", "-44.0559, -122.805, 41.6173, 0.28", "-44.925, -124.344, 42.3052, 0.83", "-45.8482, -125.991, 42.9899, 0.28", "-46.7365, -127.5, 43.5871, 0.55", "-48.3808, -130.221, 44.5547, 0.28", "-49.3191, -131.822, 45.1404, 0.83", "-50.6818, -134.284, 45.9546, 0.28", "-51.1492, -135.21, 46.2333, 0.55", "-51.9227, -136.847, 46.7023, 0.28", "-52.456, -138.119, 47.0182, 0.55", "-54.196, -142.747, 48.1036, 0.28", "-54.8993, -144.852, 48.5795, 0.83", "-55.3156, -146.239, 48.8677, 0.28", "-55.5514, -147.119, 49.0342, 0.55", "-55.9945, -149.081, 49.3515, 0.28", "-56.4099, -151.19, 49.6141, 0.55" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "7.58776, -31.3925, -30.6475, 0.83", "8.21942, -32.95, -29.0031, 0.83", "8.55382, -33.7949, -27.808, 0.28", "8.8796, -34.7497, -26.3326, 0.55", "9.07607, -35.3087, -25.4398, 0.28", "9.64194, -36.8887, -22.6176, 0.83", "10.3053, -38.6734, -19.4195, 0.28", "11.1107, -40.5904, -15.049, 0.83", "11.7941, -42.06, -11.0514, 0.28", "12.191, -42.8955, -8.66624, 0.83", "13.3764, -45.4465, -1.09762, 0.28", "13.613, -45.9453, 0.451364, 0.55", "15.1359, -49.0093, 10.9355, 0.28", "16.0063, -50.4204, 16.5884, 1.11" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "7.58776, -31.3925, -30.6475, 0.83", "7.58526, -31.6531, -30.8133, 0.83", "7.61033, -33.6103, -32.3356, 0.83", "7.70004, -35.8741, -34.0549, 1.11", "7.85678, -38.8381, -36.2081, 0.83", "7.99066, -41.3699, -38.0474, 0.83", "8.50972, -51.1856, -45.1781, 0.55", "8.66654, -53.4682, -47.0041, 0.55", "8.84373, -55.3556, -48.7957, 0.55", "8.9537, -56.332, -49.9158, 0.55" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-22.9031, 6.77853, 5.64231, 1.11", "-28.7052, 10.4184, 5.47446, 1.11", "-31.4202, 12.1215, 5.39592, 1.11", "-33.7771, 13.6001, 5.32773, 0.83", "-36.3101, 15.1891, 5.25445, 0.83", "-38.4227, 16.5144, 5.19334, 1.11" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-22.9031, 6.77853, 5.64231, 0.83", "-27.0957, 8.75086, 6.36753, 0.83", "-28.6908, 9.50118, 6.64343, 0.83" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "26.157, 31.1208, 4.39318, 1.11", "30.3447, 34.9995, 3.27472, 1.11", "32.0607, 36.5889, 2.81639, 1.11", "33.3653, 37.7972, 2.46796, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "26.157, 31.1208, 4.39318, 1.11", "27.6277, 39.218, 3.73586, 1.11", "28.5497, 42.4367, 3.6822, 0.83", "29.1714, 44.1852, 3.75588, 0.83", "30.4564, 47.4365, 3.89603, 0.83", "31.8312, 50.5782, 4.05772, 0.83", "33.1169, 53.3192, 4.1993, 1.38", "35.3091, 57.5927, 4.68792, 1.38", "37.7387, 62.0651, 5.08432, 0.83", "39.2177, 64.7683, 5.28443, 0.83", "40.4617, 67.05, 5.46853, 1.11", "41.5684, 69.1594, 5.61399, 0.83", "42.2309, 70.6102, 5.74611, 0.83", "43.3486, 73.4034, 6.25229, 1.38", "44.3508, 76.0479, 6.79043, 0.83", "45.4716, 79.2082, 7.53211, 1.38", "47.8121, 86.3106, 9.29697, 1.11", "48.8104, 89.3727, 10.1382, 1.38", "50.7559, 95.0256, 11.8148, 1.38" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "8.9537, -56.332, -49.9158, 0.55", "7.32179, -57.9072, -50.0803, 0.55", "5.88971, -59.0798, -49.7915, 0.55", "5.1333, -59.6658, -49.6078, 0.55", "4.21364, -60.3956, -49.3987, 0.55", "1.93245, -62.3165, -48.7468, 0.55", "-1.37304, -65.0123, -47.8645, 0.55", "-5.11006, -68.261, -46.9634, 0.55", "-7.2082, -70.1468, -46.6756, 0.55", "-9.39575, -72.1719, -46.588, 0.55", "-13.1838, -75.6415, -46.5858, 0.55", "-16.5824, -78.8421, -46.7145, 0.55", "-19.3114, -81.6485, -46.9715, 0.55", "-22.7062, -85.2, -47.4619, 0.55", "-26.3493, -89.0294, -47.899, 0.55", "-28.1049, -90.8242, -48.0572, 0.55", "-31.0904, -93.7805, -48.2737, 0.55", "-35.9018, -98.4371, -48.3264, 0.55", "-39.6833, -101.895, -48.1454, 0.55", "-41.8875, -103.887, -47.9197, 0.55", "-44.0429, -105.78, -47.7245, 0.55", "-46.8102, -108.363, -47.7254, 0.83", "-48.47, -109.93, -47.8134, 0.55", "-50.8451, -112.343, -48.0651, 0.83", "-52.39, -113.978, -48.3565, 0.28", "-54.1842, -115.849, -48.8456, 0.83", "-60.4504, -122.339, -50.8592, 0.28", "-62.4076, -124.315, -51.5152, 0.55", "-64.7037, -126.567, -52.2828, 0.55", "-69.9848, -131.598, -53.823, 0.55", "-71.9179, -133.482, -54.4048, 0.55", "-75.1182, -136.641, -55.2835, 0.55", "-77.9575, -139.45, -55.9142, 1.38", "-80.1434, -141.674, -56.3719, 0.83", "-85.7825, -147.662, -57.5333, 0.28", "-89.7547, -152.225, -58.1996, 0.55", "-92.3042, -155.269, -58.5718, 0.83", "-93.7555, -157.073, -58.8139, 0.28", "-94.9613, -158.613, -59.0458, 0.55", "-96.8231, -161.005, -59.4641, 0.28", "-98.3115, -162.862, -59.8848, 0.55", "-105.372, -169.381, -59.1338, 0.55", "-112.5, -175.867, -59.1922, 0.55", "-118.675, -183.22, -58.8109, 0.55" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "8.9537, -56.332, -49.9158, 0.55", "9.82937, -58.5062, -51.3914, 0.55", "10.2018, -59.9725, -51.979, 0.55", "10.6069, -62.7861, -52.7235, 0.55", "10.9519, -65.1824, -53.3575, 0.55", "11.5928, -69.6341, -54.5354, 0.55", "11.8312, -71.2899, -54.9736, 0.55", "12.2966, -75.6837, -56.5615, 0.28", "12.5277, -77.6356, -57.2297, 0.55", "13.7941, -83.9958, -60.7304, 0.55", "14.837, -90.0157, -64.8735, 0.55" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-38.4227, 16.5144, 5.19334, 0.83", "-41.0679, 18.4538, 3.46665, 0.83", "-44.0896, 20.854, 1.62298, 0.55", "-46.722, 23.0379, 0.010249, 0.55", "-49.7095, 25.4951, -1.72297, 0.55", "-51.1967, 26.6372, -2.5417, 0.55", "-52.536, 27.6256, -3.33613, 0.55", "-54.6191, 29.0858, -4.53713, 0.55", "-56.7699, 30.5611, -5.75828, 0.55", "-58.5841, 31.6914, -6.6121, 0.55", "-60.6031, 32.8759, -7.56392, 0.83", "-64.0413, 35.0583, -9.26249, 0.83", "-65.6932, 36.1312, -10.0804, 0.55", "-68.0367, 37.6953, -11.1204, 0.83", "-71.2889, 40.0317, -12.4994, 0.55", "-73.1026, 41.5004, -13.3543, 0.55", "-76.1876, 44.2991, -15.0029, 0.55", "-77.0842, 45.1965, -15.5457, 0.55", "-78.896, 47.3013, -16.9247, 0.55", "-79.6302, 48.2624, -17.6003, 0.55", "-81.358, 50.8091, -19.4486, 0.83", "-82.8738, 53.2313, -21.0162, 0.55", "-84.2577, 55.9422, -22.577, 0.83", "-85.1524, 58.0356, -23.6372, 0.55", "-85.3124, 58.513, -23.8339, 0.83", "-85.7573, 60.0583, -24.3842, 0.55", "-86.0325, 61.0784, -24.7129, 0.83", "-86.9587, 64.2962, -25.7248, 0.55", "-87.8466, 67.1919, -26.6127, 0.55", "-89.4487, 72.1567, -28.2638, 0.55", "-90.4481, 75.0745, -29.2703, 0.55", "-91.929, 79.3311, -30.8244, 0.28", "-92.6094, 81.2462, -31.5469, 0.28", "-93.6336, 84.0907, -32.6905, 0.28", "-95.2437, 88.566, -34.4601, 0.28", "-96.3813, 91.6051, -35.6794, 0.28", "-97.885, 95.7192, -37.296, 0.28", "-98.8903, 98.6936, -38.5401, 0.28", "-99.6426, 101.173, -39.6713, 0.55", "-105.528, 108.046, -43.0429, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-38.4227, 16.5144, 5.19334, 0.28", "-41.2379, 17.2829, 8.0936, 0.28", "-45.7341, 18.4846, 12.5796, 0.28", "-48.4435, 19.2479, 15.2552, 0.28", "-51.1869, 20.0389, 17.9791, 0.55", "-54.2801, 20.9712, 21.0322, 0.55", "-55.9048, 21.4631, 22.5794, 0.28", "-56.6865, 21.7318, 23.2918, 0.55", "-58.7039, 22.5344, 24.758, 0.28", "-61.4355, 23.778, 26.3774, 0.55", "-62.1791, 24.1719, 26.7745, 0.55", "-63.653, 25.0414, 27.5335, 0.28", "-67.2895, 27.3816, 29.5342, 0.83", "-70.0838, 29.2727, 31.1543, 0.28", "-70.6688, 29.6964, 31.5168, 0.28", "-72.6396, 31.2979, 32.9495, 0.83", "-74.2965, 32.7423, 34.4044, 0.28", "-75.319, 33.6809, 35.5318, 0.55", "-76.7197, 34.94, 37.4334, 0.28", "-77.8472, 35.9376, 39.0856, 0.55", "-79.2563, 37.2289, 41.3286, 0.28", "-80.1262, 38.0573, 42.8445, 0.83", "-81.6514, 39.5299, 45.6811, 0.28", "-82.8394, 40.663, 48.0461, 0.55", "-83.2816, 41.0595, 48.9253, 0.55", "-84.7689, 42.2743, 51.6308, 0.28", "-85.7048, 42.9287, 53.079, 0.55", "-87.2443, 43.9383, 55.2986, 0.28", "-88.3854, 44.6504, 56.8053, 0.55", "-90.5035, 45.8413, 59.4313, 0.28", "-92.1603, 46.6392, 61.4473, 1.11", "-95.4595, 48.0924, 65.6036, 0.28", "-96.7381, 48.6259, 67.1872, 0.55", "-98.0504, 49.151, 68.8321, 0.28", "-99.2583, 49.6187, 70.4074, 0.55", "-101.287, 50.3558, 73.3633, 0.28", "-104.427, 51.4035, 78.4905, 0.83" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-28.6908, 9.50118, 6.64343, 0.55", "-28.7902, 11.4987, 10.9352, 0.55", "-28.9853, 13.0733, 14.0008, 0.55", "-29.5978, 15.4334, 18.4776, 0.55", "-30.6516, 18.1131, 23.2771, 0.55", "-31.7396, 20.1672, 26.7648, 0.83", "-32.8866, 22.1655, 29.9052, 0.55", "-34.6077, 24.7905, 33.8472, 0.83", "-36.7798, 27.9898, 38.1214, 0.55", "-38.9557, 31.1334, 41.501, 0.83", "-41.1422, 34.2048, 44.3446, 0.55", "-42.6419, 36.1795, 46.1808, 0.55", "-44.2336, 38.2341, 48.0181, 1.38", "-46.2717, 40.9846, 50.3895, 0.83", "-47.8998, 43.4758, 52.4565, 0.83", "-49.1742, 45.6202, 54.2699, 0.55", "-51.896, 50.3297, 58.4081, 0.83", "-53.7592, 53.295, 61.1799, 0.83", "-55.1627, 55.4169, 63.2195, 0.55", "-56.274, 57.1013, 64.9174, 0.55", "-56.4335, 57.3843, 65.2086, 0.55" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-28.6908, 9.50118, 6.64343, 0.55", "-30.0895, 10.0809, 8.49182, 0.55", "-30.9292, 10.3889, 10.0238, 0.83", "-31.5728, 10.6262, 11.5708, 0.83", "-32.6485, 11.1104, 14.4631, 0.55", "-33.1588, 11.3836, 15.9298, 0.83", "-33.4855, 11.5772, 16.869, 0.55", "-35.0279, 12.717, 22.02, 0.83", "-36.3057, 13.9071, 26.894, 0.55", "-36.643, 14.2833, 28.2997, 0.55", "-37.1345, 14.9141, 30.3693, 0.55", "-37.3535, 15.2445, 31.3011, 0.55", "-37.8304, 16.1714, 33.4473, 0.28", "-38.0381, 16.7857, 34.4419, 1.11", "-38.1383, 17.2978, 35.2308, 1.11", "-38.3264, 18.4282, 37.3602, 0.55", "-38.4695, 19.327, 39.2615, 0.55", "-38.6128, 20.1989, 41.269, 0.55", "-38.7939, 21.1509, 43.5717, 0.55", "-39.2651, 23.5793, 49.9425, 1.11", "-39.6942, 26.1449, 56.9432, 0.55", "-39.7688, 26.6642, 58.3871, 0.55", "-39.8912, 27.5094, 60.7632, 0.55", "-40.0095, 28.2566, 62.8626, 1.11", "-40.3358, 30.0908, 67.9258, 0.28", "-40.5847, 31.4378, 71.3788, 1.11", "-40.7523, 32.5853, 73.977, 0.28", "-40.787, 32.7932, 74.4284, 0.55", "-40.9942, 33.7808, 76.4955, 0.28", "-41.1774, 34.366, 77.6493, 1.11", "-41.8946, 35.8817, 80.3425, 0.28", "-42.1217, 36.3123, 81.1456, 0.83", "-42.802, 37.7457, 83.8928, 0.28", "-42.9156, 38.0308, 84.4504, 0.55", "-43.3475, 39.3335, 86.9877, 0.28", "-43.5754, 40.1558, 88.6418, 1.38", "-44.2772, 43.3352, 95.0628, 0.28", "-44.5496, 44.7794, 98.1005, 1.11", "-44.7224, 46.0226, 100.748, 0.28", "-44.7508, 46.3216, 101.405, 0.55", "-44.7904, 48.0637, 105.359, 0.28", "-44.7897, 48.5768, 106.535, 0.55", "-44.8741, 49.8356, 109.264, 0.28" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "33.3653, 37.7972, 2.46796, 0.55", "33.79, 38.727, 1.14253, 0.55", "35.279, 41.9868, -3.50454, 0.55", "36.3344, 44.2975, -6.79848, 0.55", "36.9188, 45.5769, -8.62241, 0.55", "38.2088, 48.4011, -12.6484, 0.83" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "33.3653, 37.7972, 2.46796, 0.83", "34.781, 38.692, 2.32527, 0.83", "39.2231, 41.4999, 1.87756, 0.83", "44.1774, 44.6315, 1.37822, 0.83", "46.2667, 45.9521, 1.16765, 0.83", "48.503, 47.3656, 0.942253, 0.83" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "50.7559, 95.0256, 11.8148, 1.11", "51.4038, 98.6203, 10.8067, 1.11", "52.0048, 101.873, 10.0963, 1.11", "52.3032, 103.711, 9.76304, 1.38", "52.8319, 106.657, 9.20262, 1.11", "53.5157, 110.466, 8.47789, 1.38", "53.9073, 112.648, 8.06284, 1.38", "54.5142, 116.529, 7.59521, 0.83", "55.0552, 119.938, 7.28042, 0.83", "55.6744, 123.723, 6.88602, 0.83" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "50.7559, 95.0256, 11.8148, 0.55", "52.4514, 95.2002, 12.8993, 0.55", "54.6929, 95.439, 14.1533, 0.28", "55.6961, 95.5598, 14.7499, 1.11", "57.1922, 95.9183, 15.4371, 0.55", "60.7855, 97.0742, 16.8727, 0.28", "62.0469, 97.5535, 17.3167, 0.55", "68.48, 100.626, 19.263, 0.28", "70.1634, 101.6, 19.5952, 0.55", "76.3867, 105.703, 19.8028, 0.28", "77.2712, 106.521, 19.375, 0.55", "77.8391, 107.205, 18.7496, 0.28", "78.1129, 107.631, 18.2885, 0.55", "79.1508, 109.788, 15.8236, 0.28", "79.5183, 110.579, 14.9196, 0.55", "82.0606, 115.894, 9.12114, 0.28", "82.5659, 116.969, 7.93271, 0.55", "83.2378, 118.447, 6.33377, 0.28", "83.9452, 120.027, 4.7131, 1.11", "85.947, 124.771, 0.560336, 0.28", "86.334, 125.725, -0.181331, 0.55", "92.4577, 130.21, -1.32299, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "14.837, -90.0157, -64.8735, 0.28", "17.2373, -99.3481, -69.1258, 0.28", "20.2962, -108.544, -73.2738, 0.28", "23.6802, -118.018, -76.3864, 0.28", "27.0426, -127.614, -79.1051, 0.28", "29.4095, -137.626, -81.2117, 0.28", "32.3705, -147.669, -82.0533, 0.28", "37.1516, -157.063, -82.0792, 0.28", "41.354, -166.661, -83.1288, 0.28", "45.4784, -176.044, -85.5752, 0.28" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "14.837, -90.0157, -64.8735, 1.11", "14.7391, -98.8789, -68.6167, 0.28", "15.7581, -108.077, -71.2099, 0.28", "18.6571, -117.045, -73.1901, 0.28" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-105.528, 108.046, -43.0429, 0.28", "-110.408, 114.379, -46.6704, 0.28", "-115.497, 119.766, -51.4408, 0.28", "-121.665, 125.027, -54.8766, 0.28" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-105.528, 108.046, -43.0429, 1.11", "-113.167, 118.685, -48.5583, 0.28", "-120.776, 129.228, -54.3043, 0.28", "-128.357, 139.819, -59.994, 0.28", "-134.951, 151.29, -65.0869, 0.28", "-144.398, 161.24, -68.8472, 0.28" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-104.427, 51.4035, 78.4905, 0.28", "-105.611, 53.831, 78.9, 0.28", "-106.51, 55.6455, 79.194, 0.83", "-108.257, 59.3213, 79.9109, 0.28", "-108.933, 60.7422, 80.195, 0.55", "-110.069, 63.1302, 80.6776, 0.28", "-111.089, 65.0746, 81.2593, 0.83", "-112.661, 67.7136, 82.3339, 0.28", "-113.865, 69.1783, 83.2014, 0.55", "-114.95, 70.1712, 84.0355, 0.28", "-115.514, 70.6298, 84.4691, 0.55", "-120.781, 74.2591, 88.5987, 0.28", "-121.774, 74.8263, 89.3725, 0.83", "-126.853, 77.1689, 93.4766, 0.28", "-127.802, 77.5231, 94.2146, 0.83" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-104.427, 51.4035, 78.4905, 0.28", "-105.537, 51.3709, 80.4994, 0.28", "-105.908, 51.3849, 81.1262, 0.55", "-106.447, 51.4489, 81.9967, 0.28", "-107.017, 51.697, 82.7678, 0.55", "-110.214, 53.4865, 86.6294, 0.28", "-111.257, 54.1084, 87.7767, 0.55", "-111.908, 54.5549, 88.4211, 0.28", "-112.392, 54.8992, 88.8683, 1.11", "-115.76, 57.338, 91.7723, 0.28", "-116.776, 58.0026, 92.595, 0.83", "-117.849, 58.6385, 93.4097, 0.28", "-118.421, 58.9414, 93.86, 0.55", "-119.843, 59.5865, 94.9883, 0.28", "-121.134, 60.0968, 96.058, 0.83", "-124.659, 61.2688, 99.0712, 0.28", "-125.479, 61.5366, 99.7741, 0.55", "-127.052, 62.0519, 101.145, 0.28", "-128.384, 62.4853, 102.308, 1.11", "-130.306, 63.1122, 103.957, 0.28", "-130.993, 63.3386, 104.54, 0.55", "-132.282, 63.7908, 105.666, 0.28", "-133.154, 64.0944, 106.483, 0.55" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-56.4335, 57.3843, 65.2086, 0.28", "-49.0434, 54.4796, 79.7611, 0.28", "-47.4572, 53.8977, 82.6336, 1.11", "-44.1302, 52.7387, 88.1574, 0.28", "-43.1604, 52.4223, 89.6593, 0.83", "-39.9729, 51.4085, 94.3779, 0.28", "-38.3189, 50.8825, 96.8264, 0.83", "-36.1146, 50.3112, 99.0881, 0.28", "-34.0916, 49.826, 100.845, 0.55", "-30.7724, 49.085, 103.021, 0.28", "-29.033, 48.6768, 104.378, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-56.4335, 57.3843, 65.2086, 1.11", "-57.2713, 58.6938, 66.3398, 1.11", "-58.8996, 60.7093, 68.6244, 0.55", "-60.7948, 63.0442, 71.5042, 1.11", "-62.5359, 65.1279, 74.4595, 0.83", "-63.9793, 66.8058, 77.0391, 0.55", "-65.2005, 68.1697, 79.2476, 1.11", "-68.1528, 71.2519, 84.7226, 0.55", "-68.9152, 72.032, 86.2303, 0.55", "-70.8433, 73.9641, 90.1784, 0.55", "-72.0224, 75.3024, 92.543, 1.11", "-72.8946, 76.4305, 94.2609, 0.55", "-73.4791, 77.3193, 95.4254, 0.83", "-74.4831, 79.0978, 97.3895, 0.55", "-75.1071, 80.179, 98.5196, 0.83", "-77.2434, 84.2374, 102.26, 1.38", "-78.1787, 86.1638, 103.983, 0.55", "-78.8836, 87.7049, 105.354, 0.28", "-80.0926, 90.282, 107.742, 1.11" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "38.2088, 48.4011, -12.6484, 0.83", "39.3043, 49.9903, -16.0707, 0.83", "41.7675, 52.9279, -22.1047, 0.55", "46.5143, 57.7699, -31.9679, 0.55", "47.209, 58.4984, -33.3531, 0.55", "49.3464, 60.5706, -37.198, 0.55", "50.8147, 61.9942, -39.8394, 0.55", "51.8622, 62.9515, -41.6754, 0.55", "53.818, 64.4024, -44.1667, 0.55", "58.7933, 67.4148, -48.4095, 0.55", "61.1341, 69.033, -50.68, 0.55", "68.0496, 74.8541, -60.1514, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "38.2088, 48.4011, -12.6484, 0.55", "37.8084, 51.2733, -13.7466, 0.55", "37.3896, 54.4519, -15.4003, 0.55", "37.1478, 56.5151, -16.5854, 0.55", "36.9434, 58.5179, -17.7788, 0.55", "36.6357, 61.5858, -19.6018, 0.55", "36.4979, 63.3033, -20.6071, 0.55", "36.4339, 66.5725, -22.7707, 0.83", "36.4139, 67.439, -23.3577, 0.28", "36.4248, 67.886, -23.7028, 0.55", "36.517, 68.857, -24.6812, 0.55", "36.6682, 69.6116, -25.7017, 0.55", "37.1124, 71.7111, -28.1261, 0.83", "35.9111, 78.5906, -34.0721, 0.83", "35.8255, 84.6981, -40.9531, 0.83", "37.4277, 91.8761, -46.4149, 0.83", "37.5691, 99.2753, -51.7983, 0.83", "39.3395, 107.473, -55.3609, 0.83" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "48.503, 47.3656, 0.942253, 0.83", "54.1957, 55.2876, 1.75618, 0.83", "56.4422, 58.0175, 1.50303, 0.83", "59.1728, 60.7682, 0.883471, 0.55", "61.734, 63.1072, 0.303945, 0.55", "64.0394, 65.1012, -0.118453, 0.83", "66.7478, 67.2577, -0.672117, 0.83", "69.4837, 69.1912, -1.64526, 0.28", "74.2246, 72.084, -3.6596, 0.28", "75.9504, 72.9871, -4.41646, 1.11", "78.4315, 74.0408, -5.78072, 0.55", "82.917, 75.6038, -8.69819, 0.83", "87.7052, 77.1998, -12.0406, 0.55", "92.3446, 78.6151, -15.6269, 0.83", "93.513, 78.9232, -16.6642, 0.83", "99.7807, 80.3856, -22.823, 0.28", "102.446, 80.8775, -25.7413, 0.83", "113.421, 86.6303, -31.0512, 0.83", "125.505, 91.4486, -34.6837, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "48.503, 47.3656, 0.942253, 0.83", "51.74, 50.4291, 1.81164, 0.83", "53.7336, 52.5779, 2.67505, 0.83", "55.3047, 54.3393, 3.46476, 0.83", "57.388, 56.84, 4.61646, 0.83", "59.8309, 59.8771, 6.1152, 1.11", "62.2547, 62.8824, 7.63824, 0.83", "65.1405, 66.5982, 9.65079, 1.11", "66.6514, 68.6017, 10.7896, 0.55", "68.7159, 71.3543, 12.5589, 0.83", "70.4802, 73.5457, 14.1818, 0.83", "72.6494, 76.0929, 16.3206, 1.11", "74.4339, 78.0478, 18.1333, 0.55", "75.708, 79.4173, 19.4678, 0.28", "79.5822, 83.4792, 23.7699, 1.38", "82.8586, 86.7066, 27.4822, 0.55", "84.0517, 87.8249, 28.8882, 0.83", "85.7265, 89.3934, 30.9643, 0.55", "88.0646, 91.5461, 33.902, 0.28", "89.8968, 93.1763, 36.2185, 1.38", "92.5265, 95.2972, 39.3607, 0.55", "94.4731, 96.7519, 41.7364, 1.38" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "55.6744, 123.723, 6.88602, 1.11", "55.6418, 124.173, 6.88575, 1.11", "55.6029, 125.736, 6.78094, 0.83", "55.7281, 127.585, 6.63429, 0.83", "56.107, 129.727, 6.48162, 1.11", "56.9078, 133.169, 6.265, 1.11", "57.2156, 134.389, 6.14711, 0.83", "57.7618, 136.507, 5.87291, 0.83", "58.3919, 138.721, 5.55106, 1.38", "59.0616, 140.891, 5.18991, 1.11", "59.6665, 142.703, 4.87019, 1.11", "60.5831, 145.159, 4.42864, 1.11", "62.0544, 149.358, 3.70836, 1.38", "62.4842, 150.939, 3.45441, 0.55", "62.6866, 151.951, 3.25197, 0.83", "62.751, 152.384, 3.15478, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "55.6744, 123.723, 6.88602, 0.55", "58.7196, 124.778, 1.83406, 0.55", "59.3384, 125.021, 0.793556, 0.55", "61.0695, 125.815, -1.83254, 0.83", "63.7353, 127.039, -5.87644, 0.55", "65.2454, 127.732, -8.16729, 0.83", "66.7964, 128.444, -10.5201, 0.28", "67.5434, 128.774, -11.9314, 0.55", "68.572, 129.275, -14.0391, 0.55", "72.2835, 130.927, -23.328, 0.55", "75.0838, 133.078, -32.8245, 0.55", "78.4559, 134.549, -42.2741, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "92.4577, 130.21, -1.32299, 0.28", "97.8541, 134.503, -2.69246, 0.28", "103.981, 137.39, -4.70883, 0.28", "109.932, 139.454, -7.94286, 0.28", "116.268, 141.727, -10.132, 0.28", "121.628, 144.991, -13.3517, 0.28", "125.671, 148.822, -17.6459, 0.28" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "92.4577, 130.21, -1.32299, 1.11", "101.802, 137.159, -2.79366, 0.28", "110.568, 144.786, -4.27786, 0.28" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "18.6571, -117.045, -73.1901, 0.28", "20.0636, -123.38, -75.2165, 0.28", "20.1615, -129.998, -76.7189, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "18.6571, -117.045, -73.1901, 0.28", "21.9192, -124.911, -76.5604, 0.28", "24.7453, -133.308, -78.7934, 0.28", "28.1034, -141.626, -80.5118, 0.28", "31.6736, -149.706, -82.8764, 0.28", "33.4772, -158.192, -85.7618, 0.28", "34.9808, -166.204, -89.9577, 0.28", "37.1255, -174.206, -93.875, 0.28", "40.3088, -181.465, -98.5212, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-80.0926, 90.282, 107.742, 0.55", "-81.3526, 91.5841, 109.664, 0.55", "-82.3038, 92.4798, 111.166, 0.55", "-83.4261, 93.5728, 113.075, 1.11", "-84.8473, 94.9081, 115.676, 0.55", "-85.455, 95.4004, 116.841, 0.28", "-86.6491, 96.3677, 119.253, 0.55", "-87.3917, 96.9321, 120.993, 0.28", "-87.7572, 97.1691, 121.86, 0.83", "-88.8831, 97.776, 124.438, 0.28", "-90.0596, 98.3831, 127.066, 0.28", "-90.6022, 98.6357, 128.261, 0.83", "-91.3781, 98.9775, 129.928, 0.28", "-93.0382, 99.7213, 133.467, 0.28", "-93.9708, 100.176, 135.4, 0.83", "-95.8913, 101.254, 139.334, 0.28", "-95.9831, 101.311, 139.525, 0.55", "-96.8483, 101.899, 141.318, 0.28", "-97.412, 102.382, 142.463, 0.83", "-97.881, 102.916, 143.382, 0.28", "-97.9648, 103.031, 143.538, 0.55", "-98.9472, 104.462, 145.193, 0.28", "-99.7932, 105.686, 146.583, 1.11", "-101.35, 107.853, 149.157, 0.28", "-101.946, 108.636, 150.135, 0.55", "-102.701, 109.578, 151.409, 0.83", "-103.63, 111.163, 153.298, 0.28", "-103.809, 111.627, 153.778, 0.55", "-104.159, 113.567, 155.609, 0.28", "-104.134, 114.516, 156.361, 0.28", "-103.931, 116.472, 157.846, 1.11", "-103.098, 120.934, 160.636, 0.28", "-102.873, 121.678, 160.975, 0.55", "-102.428, 122.888, 161.394, 0.28", "-102.219, 123.311, 161.471, 0.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-80.0926, 90.282, 107.742, 0.28", "-83.2136, 96.9493, 105.961, 0.28", "-84.7002, 99.6983, 105.332, 0.28", "-85.5534, 101.167, 105.043, 0.28", "-86.9934, 103.661, 104.322, 0.83", "-88.7464, 106.829, 103.32, 0.28", "-89.0516, 107.484, 103.061, 0.55", "-90.399, 110.596, 101.75, 0.28", "-91.1536, 112.453, 100.806, 0.55", "-92.7544, 117.01, 98.2076, 0.28", "-93.2088, 118.809, 97.051, 0.83", "-93.8348, 123.611, 93.6875, 0.28", "-93.8806, 124.514, 92.9924, 0.83" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "39.3395, 107.473, -55.3609, 0.28", "40.0786, 114.186, -61.2325, 0.28", "40.3897, 121.286, -66.6426, 0.28", "39.2463, 128.668, -71.4944, 0.28", "38.06, 136.608, -75.3028, 0.28", "35.7952, 143.973, -79.752, 0.28", "32.4337, 150.136, -85.2797, 0.28", "30.2517, 157.522, -89.7373, 0.28", "29.3275, 165.051, -94.3984, 0.28", "29.12, 172.442, -99.3812, 0.28", "27.3828, 179.107, -105.064, 0.28", "25.5536, 184.654, -111.87, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "39.3395, 107.473, -55.3609, 1.11", "40.1891, 114.829, -61.8133, 0.28", "41.8291, 123.499, -66.0262, 0.28", "44.3233, 131.424, -71.2494, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "125.505, 91.4486, -34.6837, 0.28", "134.163, 96.9476, -39.1047, 0.28", "143.914, 100.359, -43.4688, 0.28", "153.364, 104.309, -48.0137, 0.28", "162.362, 108.221, -53.4259, 0.28", "170.828, 114.063, -57.7549, 0.28", "178.181, 120.408, -63.2201, 0.28", "185.725, 126.594, -68.6161, 0.28", "192.217, 131.378, -76.3692, 0.28", "199.201, 136.417, -83.4999, 0.28", "206.382, 141.649, -90.2775, 0.28", "214.026, 146.975, -96.4469, 0.28" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "125.505, 91.4486, -34.6837, 1.11", "131.626, 94.6099, -37.1616, 0.28", "137.227, 98.331, -40.0141, 0.28", "142.289, 102.78, -42.7692, 0.28" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "94.4731, 96.7519, 41.7364, 1.11", "96.5724, 97.8516, 43.0584, 1.11", "98.2501, 98.8077, 44.0126, 0.55", "99.4688, 99.5613, 44.4809, 0.83", "101.119, 100.664, 45.0019, 0.28", "103.99, 102.693, 45.7592, 1.38", "107.46, 105.238, 46.564, 0.55", "110.112, 107.191, 47.206, 1.38", "114.013, 110.012, 48.0874, 0.28", "115.001, 110.681, 48.3291, 0.55", "117.442, 112.244, 48.989, 0.28", "119.607, 113.521, 49.6437, 0.83", "125.139, 116.535, 51.6899, 0.28", "127.26, 117.579, 52.6559, 1.11", "130.363, 118.986, 54.3295, 0.28", "132.848, 120.019, 55.7306, 0.83", "134.828, 120.78, 56.9304, 0.28", "136.013, 121.199, 57.6486, 0.55", "137.073, 121.547, 58.2624, 0.28", "138.216, 121.931, 58.9007, 0.83", "140.1, 122.567, 59.8776, 0.28", "141.163, 122.885, 60.4288, 0.83", "142.903, 123.363, 61.3257, 0.28", "144.373, 123.74, 62.0996, 0.55", "146.747, 124.315, 63.2789, 0.28", "147.999, 124.603, 63.901, 0.83", "150.371, 125.229, 64.9957, 0.28", "151.491, 125.549, 65.4377, 1.11", "155.06, 126.676, 66.7007, 0.28", "156.354, 127.103, 67.0803, 0.28", "159.143, 128.069, 67.7909, 0.83", "163.036, 129.57, 68.7434, 0.28", "165.425, 130.77, 69.6809, 0.83", "167.215, 131.892, 70.7628, 0.28", "167.974, 132.477, 71.4103, 0.83", "169.425, 133.77, 73.1126, 0.28", "170.001, 134.358, 74.0494, 0.83", "173.323, 138.159, 81.4331, 0.28", "173.898, 138.872, 83.0167, 0.55", "174.185, 139.218, 83.9197, 0.83", "174.823, 139.952, 86.2306, 0.28", "175.363, 140.544, 88.2945, 0.83", "176.232, 141.385, 91.6331, 0.28", "176.959, 141.891, 94.1956, 0.83", "178.326, 142.858, 99.3441, 0.28", "179.475, 143.702, 104.085, 0.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "94.4731, 96.7519, 41.7364, 0.28", "96.3128, 95.5858, 41.7053, 0.28", "97.0541, 95.1199, 41.7216, 0.55", "102.215, 91.9739, 42.1621, 0.28", "103.726, 91.0964, 42.3998, 1.11", "105.381, 90.172, 42.7443, 0.28", "105.934, 89.8709, 42.8875, 0.55", "107.405, 89.1313, 43.4304, 0.28", "109.34, 88.1802, 44.2533, 1.66", "111.371, 87.2286, 45.3331, 0.28", "111.902, 86.9971, 45.6036, 0.83", "113.368, 86.3756, 46.3673, 0.28", "114.174, 86.0268, 46.7595, 0.83", "118.59, 84.0312, 48.7494, 0.28", "120.155, 83.3154, 49.4487, 1.11", "123.153, 81.9549, 50.8284, 0.28", "124.094, 81.5291, 51.2906, 0.83", "126.28, 80.561, 52.4427, 0.28", "126.808, 80.339, 52.7456, 0.83", "128.561, 79.6332, 53.7945, 0.28", "129.635, 79.1967, 54.4244, 0.83", "131.029, 78.655, 55.2669, 0.28", "131.74, 78.4251, 55.6907, 0.83", "138.708, 76.5352, 59.9154, 0.28", "139.742, 76.2981, 60.5257, 0.55", "141.488, 75.9722, 61.5235, 0.28", "143.215, 75.6771, 62.48, 1.11", "147.357, 75.1197, 64.741, 0.28", "148.306, 75.0417, 65.2831, 0.83", "149.179, 75.1255, 65.8485, 0.28", "149.909, 75.2317, 66.3534, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "62.751, 152.384, 3.15478, 0.55", "62.9013, 153.045, 3.37568, 0.55", "63.4765, 155.298, 4.1167, 0.83", "64.0466, 157.506, 4.84663, 0.55", "64.5286, 160.021, 5.60419, 0.83", "64.799, 161.537, 5.99099, 0.55", "65.1885, 163.849, 6.53847, 0.83", "65.4167, 165.096, 6.82192, 0.55", "65.7682, 166.801, 7.17245, 1.11", "66.4195, 169.813, 7.30801, 1.11", "66.7998, 171.912, 7.04654, 0.55", "66.8938, 172.52, 6.89242, 0.83", "67.0587, 173.491, 6.47898, 0.55", "67.306, 175.124, 5.61809, 0.83", "68.0378, 180.383, 2.23526, 0.55", "68.3708, 182.974, 0.343677, 0.55", "68.4791, 184.256, -0.645616, 0.83", "68.6546, 187.311, -3.08943, 0.55", "68.6829, 188.576, -4.13077, 0.83", "68.6776, 190.071, -5.32989, 0.28", "68.6655, 190.366, -5.47075, 0.55", "68.6874, 191.049, -5.70048, 0.28", "68.7288, 191.716, -5.84079, 0.55", "68.8508, 193.047, -5.93481, 0.28", "69.017, 194.475, -6.02563, 0.83", "69.5363, 198.882, -6.2315, 0.28", "69.7073, 200.224, -6.29696, 0.83", "69.8696, 201.51, -6.36213, 0.28", "69.9684, 202.222, -6.39824, 0.55", "70.2914, 204.295, -6.47733, 0.28", "70.461, 205.21, -6.51514, 0.55", "71.3303, 209.592, -6.57337, 0.28", "71.4569, 210.262, -6.54546, 0.28", "71.8621, 212.598, -6.34755, 0.83", "72.2025, 214.775, -6.10314, 1.11", "72.4898, 216.691, -5.8231, 1.66", "72.8993, 220.013, -5.33839, 1.38", "73.0943, 222.044, -5.02765, 1.11", "73.2475, 223.982, -4.74606, 1.38", "73.5629, 229.916, -4.00344, 0.28", "73.5873, 230.892, -3.90251, 0.55", "73.6325, 233.008, -3.7549, 0.28", "73.6572, 233.9, -3.74328, 0.55", "73.7188, 236.867, -3.7858, 0.28", "73.7958, 239.834, -4.01651, 0.83", "73.8897, 243.829, -4.54436, 0.28", "73.9374, 246.086, -5.02303, 1.11", "73.9823, 248.319, -5.64304, 0.28", "73.9968, 249.5, -6.17311, 0.83", "74.0166, 251.924, -7.66864, 0.28", "74.0211, 252.382, -8.01172, 0.83", "74.0369, 254.924, -10.3469, 0.28", "74.0196, 255.595, -11.0205, 1.11", "73.9089, 259.589, -15.3867, 0.28", "73.8845, 260.503, -16.4701, 0.83", "73.2013, 268.165, -19.414, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "62.751, 152.384, 3.15478, 0.83", "64.3976, 155.593, 2.38339, 0.83", "66.034, 158.856, 1.10632, 0.83", "67.0753, 160.931, 0.293742, 0.55", "67.8567, 162.489, -0.31605, 0.55", "69.4045, 165.575, -1.52397, 0.55", "70.5615, 167.882, -2.42689, 0.83", "72.2607, 171.075, -4.41886, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "78.4559, 134.549, -42.2741, 0.28", "79.9548, 137.163, -52.2094, 0.28", "79.799, 141.485, -61.6152, 0.28", "78.231, 147.106, -70.1296, 0.28", "74.6149, 150.916, -79.069, 0.28", "68.4173, 154.079, -86.7749, 0.28", "62.9769, 156.57, -95.2692, 0.28", "57.3907, 159.999, -103.315, 0.28" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "78.4559, 134.549, -42.2741, 1.11", "85.4384, 135.842, -48.1927, 0.28", "93.1588, 137.613, -52.9536, 0.28", "101.445, 138.484, -56.9812, 0.28" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "110.568, 144.786, -4.27786, 0.28", "116.952, 150.197, -5.7915, 0.28", "123.82, 155.208, -6.33821, 0.28" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "110.568, 144.786, -4.27786, 0.28", "117.624, 150.508, -5.52687, 0.28", "124.963, 155.919, -6.59011, 0.28", "131.56, 161.901, -8.70958, 0.28", "138.189, 167.335, -11.9519, 0.28", "145.236, 172.789, -14.1222, 0.28", "151.482, 179.154, -16.1318, 0.28" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "72.2607, 171.075, -4.41886, 0.55", "74.4658, 173.948, -7.49051, 0.55", "75.6378, 175.323, -8.7502, 0.55", "79.7613, 179.574, -12.5947, 0.55", "82.0032, 181.619, -14.6785, 0.55", "84.3881, 183.634, -16.8231, 0.28", "87.618, 186.25, -19.5631, 0.28", "90.1093, 188.094, -21.4678, 0.83", "92.4863, 189.704, -23.0995, 0.83", "96.8229, 192.311, -25.5062, 0.28", "98.2269, 193.036, -26.4555, 0.55", "100.18, 194.014, -28.0298, 0.55", "101.667, 194.723, -29.3955, 0.55", "103.313, 195.533, -31.0333, 0.55", "105.617, 196.713, -33.3751, 0.55", "111.373, 199.654, -39.3424, 0.55", "112.725, 200.327, -40.8646, 0.55", "116.037, 201.906, -44.9123, 0.28", "117.935, 202.815, -47.3342, 0.83", "126.765, 207.395, -52.8017, 0.83" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "72.2607, 171.075, -4.41886, 0.28", "71.2899, 172.892, -5.28343, 0.28", "70.5929, 174.257, -5.99401, 0.55", "69.4085, 176.608, -7.219, 0.28", "68.2382, 179.083, -8.56371, 0.83", "67.3891, 181.034, -9.65122, 0.28", "66.7385, 182.672, -10.5887, 0.55", "66.3696, 183.677, -11.1991, 0.28", "66.251, 184.147, -11.5076, 0.83", "65.9147, 185.669, -12.6369, 0.28", "65.7941, 186.289, -13.0652, 0.55", "65.5634, 187.431, -13.8213, 0.28", "65.4507, 187.941, -14.142, 0.55", "64.6559, 191.166, -16.2373, 0.28", "64.1748, 192.967, -17.4222, 0.55", "63.5894, 194.816, -18.601, 0.28", "63.2089, 195.87, -19.2737, 0.55", "61.5666, 204.864, -25.4785, 0.55", "59.9369, 214.135, -31.2445, 0.55", "58.0661, 224.401, -34.7423, 0.55", "57.3842, 234.371, -39.3642, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "57.3907, 159.999, -103.315, 0.28", "54.5396, 163.401, -110.963, 0.28" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "57.3907, 159.999, -103.315, 0.28", "54.4855, 163.508, -112.176, 0.28", "53.3831, 168.733, -120.537, 0.28", "53.2839, 174.037, -128.916, 0.28", "51.6366, 179.942, -136.694, 0.28", "48.7592, 185.798, -144.151, 0.28" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "123.82, 155.208, -6.33821, 0.28", "127.994, 160.039, -12.0318, 0.28", "132.89, 165.187, -16.7745, 0.28" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "123.82, 155.208, -6.33821, 0.28", "134.118, 162.22, -4.08504, 0.28", "144.593, 168.333, -0.384679, 0.28", "155.971, 172.191, 3.83003, 0.28", "168.26, 173.328, 7.11402, 0.28" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_52", "dend_35", "dend_0", "dend_62", "dend_53", "dend_37", "dend_36", "dend_2", "dend_1", "dend_64", "dend_63", "dend_61", "dend_54", "dend_45", "dend_38", "dend_22", "dend_3", "dend_60", "dend_55", "dend_49", "dend_46", "dend_40", "dend_39", "dend_30", "dend_23", "dend_11", "dend_4", "dend_59", "dend_56", "dend_51", "dend_50", "dend_48", "dend_47", "dend_44", "dend_41", "dend_34", "dend_31", "dend_27", "dend_24", "dend_17", "dend_12", "dend_10", "dend_5", "dend_58", "dend_57", "dend_43", "dend_42", "dend_33", "dend_32", "dend_29", "dend_28", "dend_26", "dend_25", "dend_21", "dend_18", "dend_14", "dend_13", "dend_7", "dend_6", "dend_20", "dend_19", "dend_16", "dend_15", "dend_9", "dend_8" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_52", "dend_35", "dend_0", "dend_62", "dend_53", "dend_37", "dend_36", "dend_2", "dend_1", "dend_64", "dend_63", "dend_61", "dend_54", "dend_45", "dend_38", "dend_22", "dend_3", "dend_60", "dend_55", "dend_49", "dend_46", "dend_40", "dend_39", "dend_30", "dend_23", "dend_11", "dend_4", "dend_59", "dend_56", "dend_51", "dend_50", "dend_48", "dend_47", "dend_44", "dend_41", "dend_34", "dend_31", "dend_27", "dend_24", "dend_17", "dend_12", "dend_10", "dend_5", "dend_58", "dend_57", "dend_43", "dend_42", "dend_33", "dend_32", "dend_29", "dend_28", "dend_26", "dend_25", "dend_21", "dend_18", "dend_14", "dend_13", "dend_7", "dend_6", "dend_20", "dend_19", "dend_16", "dend_15", "dend_9", "dend_8" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_52", "dend_35", "dend_0", "axon_0", "dend_62", "dend_53", "dend_37", "dend_36", "dend_2", "dend_1", "axon_1", "dend_64", "dend_63", "dend_61", "dend_54", "dend_45", "dend_38", "dend_22", "dend_3", "dend_60", "dend_55", "dend_49", "dend_46", "dend_40", "dend_39", "dend_30", "dend_23", "dend_11", "dend_4", "dend_59", "dend_56", "dend_51", "dend_50", "dend_48", "dend_47", "dend_44", "dend_41", "dend_34", "dend_31", "dend_27", "dend_24", "dend_17", "dend_12", "dend_10", "dend_5", "dend_58", "dend_57", "dend_43", "dend_42", "dend_33", "dend_32", "dend_29", "dend_28", "dend_26", "dend_25", "dend_21", "dend_18", "dend_14", "dend_13", "dend_7", "dend_6", "dend_20", "dend_19", "dend_16", "dend_15", "dend_9", "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_52", "dend_52", "dend_35", "dend_35", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_62", "dend_53", "dend_53", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_38", "dend_38", "dend_22", "dend_22", "dend_22", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_56", "dend_56", "dend_56", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_5", "dend_5", "dend_58", "dend_58", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.43567E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cIR216_L5_NBC_650c18e6aa_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_52, id: dend_52, parent: soma_0
create dend_52
public dend_52
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_62, id: dend_62, parent: dend_52
create dend_62
public dend_62
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_61, id: dend_61, parent: dend_53
create dend_61
public dend_61
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_45, id: dend_45, parent: dend_37
create dend_45
public dend_45
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_22, id: dend_22, parent: dend_2
create dend_22
public dend_22
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_54
create dend_60
public dend_60
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_49, id: dend_49, parent: dend_45
create dend_49
public dend_49
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_30, id: dend_30, parent: dend_22
create dend_30
public dend_30
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_11, id: dend_11, parent: dend_3
create dend_11
public dend_11
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_55
create dend_59
public dend_59
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_44, id: dend_44, parent: dend_40
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_27, id: dend_27, parent: dend_23
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_17, id: dend_17, parent: dend_11
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_4
create dend_10
public dend_10
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_52, dend_35, dend_0, dend_62, dend_53, dend_37, dend_36, dend_2, dend_1, dend_64, dend_63, dend_61, dend_54, dend_45, dend_38, dend_22, dend_3, dend_60, dend_55, dend_49, dend_46, dend_40, dend_39, dend_30, dend_23, dend_11, dend_4, dend_59, dend_56, dend_51, dend_50, dend_48, dend_47, dend_44, dend_41, dend_34, dend_31, dend_27, dend_24, dend_17, dend_12, dend_10, dend_5, dend_58, dend_57, dend_43, dend_42, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25, dend_21, dend_18, dend_14, dend_13, dend_7, dend_6, dend_20, dend_19, dend_16, dend_15, dend_9, dend_8]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_52, dend_35, dend_0, dend_62, dend_53, dend_37, dend_36, dend_2, dend_1, dend_64, dend_63, dend_61, dend_54, dend_45, dend_38, dend_22, dend_3, dend_60, dend_55, dend_49, dend_46, dend_40, dend_39, dend_30, dend_23, dend_11, dend_4, dend_59, dend_56, dend_51, dend_50, dend_48, dend_47, dend_44, dend_41, dend_34, dend_31, dend_27, dend_24, dend_17, dend_12, dend_10, dend_5, dend_58, dend_57, dend_43, dend_42, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25, dend_21, dend_18, dend_14, dend_13, dend_7, dend_6, dend_20, dend_19, dend_16, dend_15, dend_9, dend_8]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_52, dend_35, dend_0, axon_0, dend_62, dend_53, dend_37, dend_36, dend_2, dend_1, axon_1, dend_64, dend_63, dend_61, dend_54, dend_45, dend_38, dend_22, dend_3, dend_60, dend_55, dend_49, dend_46, dend_40, dend_39, dend_30, dend_23, dend_11, dend_4, dend_59, dend_56, dend_51, dend_50, dend_48, dend_47, dend_44, dend_41, dend_34, dend_31, dend_27, dend_24, dend_17, dend_12, dend_10, dend_5, dend_58, dend_57, dend_43, dend_42, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25, dend_21, dend_18, dend_14, dend_13, dend_7, dend_6, dend_20, dend_19, dend_16, dend_15, dend_9, dend_8]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_65
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_52, dend_52, dend_35, dend_35, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_53, dend_53, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_45, dend_45, dend_45, dend_45, dend_45, dend_38, dend_38, dend_22, dend_22, dend_22, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_56, dend_56, dend_56, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_5, dend_5, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_52(0), soma_0(0.45000037708019813)
    connect dend_35(0), soma_0(0.45000037708019813)
    connect dend_0(0), soma_0(0.45000037708019813)
    connect axon_0(0), soma_0(1.0)
    connect dend_62(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_61(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_45(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_22(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_49(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_30(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_11(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_44(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_27(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_17(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.91165, -15.504, 0.0, 2.36095 ) }
    soma_0 { pt3dadd( 1.69225, -14.164, 0.0, 3.77272 ) }
    soma_0 { pt3dadd( 1.47285, -12.824, 0.0, 5.64735 ) }
    soma_0 { pt3dadd( 1.25345, -11.484, 0.0, 7.11092 ) }
    soma_0 { pt3dadd( 1.03406, -10.144, 0.0, 8.31603 ) }
    soma_0 { pt3dadd( 0.814659, -8.80403, 0.0, 9.51462 ) }
    soma_0 { pt3dadd( 0.595262, -7.46404, 0.0, 10.3186 ) }
    soma_0 { pt3dadd( 0.375865, -6.12406, 0.0, 10.9463 ) }
    soma_0 { pt3dadd( 0.156467, -4.78407, 0.0, 11.2263 ) }
    soma_0 { pt3dadd( -0.0629298, -3.44408, 0.0, 11.5062 ) }
    soma_0 { pt3dadd( -0.282327, -2.1041, 0.0, 11.5148 ) }
    soma_0 { pt3dadd( -0.501724, -0.76411, 0.0, 11.4563 ) }
    soma_0 { pt3dadd( -0.721122, 0.575877, 0.0, 12.0569 ) }
    soma_0 { pt3dadd( -0.940519, 1.91586, 0.0, 12.3516 ) }
    soma_0 { pt3dadd( -1.15992, 3.25585, 0.0, 11.8398 ) }
    soma_0 { pt3dadd( -1.37931, 4.59584, 0.0, 10.9681 ) }
    soma_0 { pt3dadd( -1.59871, 5.93582, 0.0, 9.93554 ) }
    soma_0 { pt3dadd( -1.81811, 7.27581, 0.0, 8.23546 ) }
    soma_0 { pt3dadd( -2.03751, 8.6158, 0.0, 6.93545 ) }
    soma_0 { pt3dadd( -2.2569, 9.95578, 0.0, 5.0025 ) }
    soma_0 { pt3dadd( -2.4763, 11.2958, 0.0, 3.14572 ) }
    // Section: dend_52, id: dend_52, parent: soma_0 (entry count 21/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 2.49262, -15.8337, -20.89, 1.66 ) }
    dend_52 { pt3dadd( 3.34427, -22.0385, -22.4246, 1.66 ) }
    dend_52 { pt3dadd( 4.06138, -27.2632, -23.7167, 1.66 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 24/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -8.31738, 1.9893, -1.78, 2.49 ) }
    dend_35 { pt3dadd( -10.1568, 2.55884, -1.60097, 2.49 ) }
    dend_35 { pt3dadd( -15.0747, 4.08154, -1.12232, 2.49 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 27/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.21262, 10.9008, 2.62, 1.94 ) }
    dend_0 { pt3dadd( 7.20898, 15.4442, 3.15052, 1.94 ) }
    dend_0 { pt3dadd( 11.7087, 19.536, 3.62831, 1.66 ) }
    dend_0 { pt3dadd( 15.3395, 22.8377, 4.01384, 1.94 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 31/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -2.4763, 11.2958, 0.0, 0.55 ) }
    axon_0 { pt3dadd( -4.89999, 26.0987, 0.0, 0.55 ) }
    axon_0 { pt3dadd( -7.32368, 40.9016, 0.0, 0.55 ) }
    // Section: dend_62, id: dend_62, parent: dend_52 (entry count 34/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 4.06138, -27.2632, -23.7167, 1.66 ) }
    dend_62 { pt3dadd( 4.80383, -29.4858, -16.0458, 1.66 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 36/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 4.06138, -27.2632, -23.7167, 0.83 ) }
    dend_53 { pt3dadd( 6.7025, -30.3558, -28.9076, 0.83 ) }
    dend_53 { pt3dadd( 7.58776, -31.3925, -30.6475, 0.83 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 39/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -15.0747, 4.08154, -1.12232, 1.66 ) }
    dend_37 { pt3dadd( -17.3225, 4.85594, 0.820063, 1.66 ) }
    dend_37 { pt3dadd( -20.5148, 5.95572, 3.57853, 1.38 ) }
    dend_37 { pt3dadd( -22.9031, 6.77853, 5.64231, 1.38 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 43/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -15.0747, 4.08154, -1.12232, 0.83 ) }
    dend_36 { pt3dadd( -23.527, 3.52009, -8.06432, 0.83 ) }
    dend_36 { pt3dadd( -26.3496, 3.40063, -10.1177, 0.83 ) }
    dend_36 { pt3dadd( -30.2398, 3.34354, -12.6026, 0.83 ) }
    dend_36 { pt3dadd( -32.8136, 3.36773, -14.0485, 0.83 ) }
    dend_36 { pt3dadd( -34.9545, 3.43276, -15.0912, 0.83 ) }
    dend_36 { pt3dadd( -36.5952, 3.54122, -15.8087, 0.83 ) }
    dend_36 { pt3dadd( -38.1871, 3.79383, -16.1047, 0.55 ) }
    dend_36 { pt3dadd( -39.836, 4.16557, -16.3119, 0.83 ) }
    dend_36 { pt3dadd( -41.5451, 4.7118, -16.4285, 0.55 ) }
    dend_36 { pt3dadd( -43.2776, 5.29736, -16.6004, 0.83 ) }
    dend_36 { pt3dadd( -46.2068, 6.32229, -16.939, 0.55 ) }
    dend_36 { pt3dadd( -49.0976, 7.39084, -17.1731, 0.83 ) }
    dend_36 { pt3dadd( -51.7268, 8.40512, -17.2902, 0.83 ) }
    dend_36 { pt3dadd( -54.1564, 9.33928, -17.2931, 0.55 ) }
    dend_36 { pt3dadd( -58.3564, 10.9297, -16.9357, 0.55 ) }
    dend_36 { pt3dadd( -59.5139, 11.3516, -16.734, 0.55 ) }
    dend_36 { pt3dadd( -62.3595, 12.2802, -15.9115, 0.83 ) }
    dend_36 { pt3dadd( -64.1032, 12.8202, -15.3125, 0.55 ) }
    dend_36 { pt3dadd( -66.7489, 13.492, -14.3689, 0.83 ) }
    dend_36 { pt3dadd( -69.165, 14.0592, -13.5304, 0.55 ) }
    dend_36 { pt3dadd( -71.8316, 14.6752, -12.7163, 1.11 ) }
    dend_36 { pt3dadd( -77.0452, 15.8422, -11.9538, 0.55 ) }
    dend_36 { pt3dadd( -79.8936, 16.4935, -11.9613, 0.55 ) }
    dend_36 { pt3dadd( -82.3635, 17.0337, -12.2108, 0.55 ) }
    dend_36 { pt3dadd( -85.6473, 17.7654, -13.17, 0.55 ) }
    dend_36 { pt3dadd( -87.9031, 18.2744, -14.1533, 0.55 ) }
    dend_36 { pt3dadd( -93.2211, 19.4813, -16.9549, 0.55 ) }
    dend_36 { pt3dadd( -95.6519, 20.1085, -18.2901, 0.83 ) }
    dend_36 { pt3dadd( -97.5288, 20.6496, -19.1906, 0.83 ) }
    dend_36 { pt3dadd( -103.187, 22.5714, -21.3419, 0.28 ) }
    dend_36 { pt3dadd( -105.149, 23.2851, -21.8374, 0.55 ) }
    dend_36 { pt3dadd( -108.492, 24.6179, -22.3415, 0.55 ) }
    dend_36 { pt3dadd( -112.203, 26.2203, -22.3768, 0.28 ) }
    dend_36 { pt3dadd( -114.533, 27.3474, -22.2613, 0.55 ) }
    dend_36 { pt3dadd( -116.543, 28.4279, -22.0194, 0.28 ) }
    dend_36 { pt3dadd( -117.624, 29.0356, -21.8676, 0.83 ) }
    dend_36 { pt3dadd( -119.893, 30.3553, -21.7239, 0.28 ) }
    dend_36 { pt3dadd( -120.669, 30.7825, -21.7323, 0.83 ) }
    dend_36 { pt3dadd( -124.079, 32.4937, -21.9808, 0.28 ) }
    dend_36 { pt3dadd( -126.618, 33.5559, -22.334, 0.83 ) }
    dend_36 { pt3dadd( -130.7, 34.973, -22.9743, 0.28 ) }
    dend_36 { pt3dadd( -132.897, 35.6295, -23.3339, 0.55 ) }
    dend_36 { pt3dadd( -138.106, 37.0512, -24.1889, 0.28 ) }
    dend_36 { pt3dadd( -140.55, 37.574, -24.5309, 0.55 ) }
    dend_36 { pt3dadd( -148.078, 38.8133, -25.3787, 0.28 ) }
    dend_36 { pt3dadd( -151.882, 39.2701, -25.7249, 0.55 ) }
    dend_36 { pt3dadd( -155.163, 39.5582, -25.935, 0.28 ) }
    dend_36 { pt3dadd( -158.201, 39.7251, -26.1243, 0.55 ) }
    dend_36 { pt3dadd( -168.832, 40.043, -26.5226, 0.28 ) }
    dend_36 { pt3dadd( -171.037, 40.058, -26.5025, 0.83 ) }
    dend_36 { pt3dadd( -174.765, 39.9905, -26.2887, 0.28 ) }
    dend_36 { pt3dadd( -175.545, 39.9542, -26.1962, 0.55 ) }
    dend_36 { pt3dadd( -178.033, 39.8598, -25.7915, 0.28 ) }
    dend_36 { pt3dadd( -180.134, 39.812, -25.3881, 0.83 ) }
    dend_36 { pt3dadd( -185.352, 40.0729, -24.2884, 0.28 ) }
    dend_36 { pt3dadd( -188.091, 40.3573, -23.6739, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_36 { pt3dadd( -196.739, 41.9084, -22.0974, 0.28 ) }
    dend_36 { pt3dadd( -203.102, 43.4405, -21.1256, 0.28 ) }
    dend_36 { pt3dadd( -204.368, 43.8319, -20.9677, 0.83 ) }
    dend_36 { pt3dadd( -209.089, 45.4992, -20.8086, 0.28 ) }
    dend_36 { pt3dadd( -211.199, 46.3863, -20.8633, 0.83 ) }
    dend_36 { pt3dadd( -217.301, 49.2423, -21.9987, 0.28 ) }
    dend_36 { pt3dadd( -218.97, 50.0802, -22.6258, 0.55 ) }
    dend_36 { pt3dadd( -220.292, 50.7209, -23.2343, 0.55 ) }
    dend_36 { pt3dadd( -226.03, 53.2408, -26.1411, 0.28 ) }
    dend_36 { pt3dadd( -228.18, 53.9988, -27.3919, 0.55 ) }
    dend_36 { pt3dadd( -234.005, 55.6936, -30.9868, 0.28 ) }
    dend_36 { pt3dadd( -236.927, 56.1918, -32.5634, 0.55 ) }
    dend_36 { pt3dadd( -247.244, 57.8926, -34.5902, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 13/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 15.3395, 22.8377, 4.01384, 1.38 ) }
    dend_2 { pt3dadd( 19.4086, 25.9534, 4.15653, 1.38 ) }
    dend_2 { pt3dadd( 22.9699, 28.6804, 4.28141, 1.11 ) }
    dend_2 { pt3dadd( 26.157, 31.1208, 4.39318, 1.38 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 17/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 15.3395, 22.8377, 4.01384, 0.83 ) }
    dend_1 { pt3dadd( 23.1582, 26.5732, 10.1337, 0.83 ) }
    dend_1 { pt3dadd( 28.3338, 29.8984, 15.1588, 0.83 ) }
    dend_1 { pt3dadd( 30.4741, 31.6456, 17.6417, 0.83 ) }
    dend_1 { pt3dadd( 32.9088, 33.9953, 20.7634, 0.83 ) }
    dend_1 { pt3dadd( 35.4312, 36.7519, 24.2764, 0.83 ) }
    dend_1 { pt3dadd( 38.8764, 40.8664, 29.4392, 1.11 ) }
    dend_1 { pt3dadd( 40.3602, 43.3484, 32.4993, 0.83 ) }
    dend_1 { pt3dadd( 41.7049, 45.9029, 35.4849, 1.11 ) }
    dend_1 { pt3dadd( 42.5571, 47.593, 37.3878, 0.55 ) }
    dend_1 { pt3dadd( 43.3361, 49.1975, 39.2562, 0.83 ) }
    dend_1 { pt3dadd( 44.5564, 51.7151, 42.3341, 0.28 ) }
    dend_1 { pt3dadd( 45.3581, 53.2415, 44.4462, 0.55 ) }
    dend_1 { pt3dadd( 46.3289, 54.8087, 46.98, 0.28 ) }
    dend_1 { pt3dadd( 48.8855, 58.5211, 53.7583, 0.55 ) }
    dend_1 { pt3dadd( 49.9416, 59.9152, 56.5969, 0.83 ) }
    dend_1 { pt3dadd( 51.2924, 61.6809, 60.4662, 0.55 ) }
    dend_1 { pt3dadd( 52.1024, 62.8424, 63.1925, 0.83 ) }
    dend_1 { pt3dadd( 53.2297, 64.8588, 68.2521, 0.55 ) }
    dend_1 { pt3dadd( 54.2064, 66.8017, 73.416, 0.83 ) }
    dend_1 { pt3dadd( 54.8346, 68.388, 78.2484, 0.55 ) }
    dend_1 { pt3dadd( 55.225, 69.5425, 82.1052, 0.55 ) }
    dend_1 { pt3dadd( 55.625, 70.7833, 86.6822, 0.83 ) }
    dend_1 { pt3dadd( 56.1672, 72.3061, 92.9713, 0.55 ) }
    dend_1 { pt3dadd( 56.4131, 72.9394, 95.9303, 1.38 ) }
    dend_1 { pt3dadd( 57.6633, 75.1757, 107.45, 0.55 ) }
    dend_1 { pt3dadd( 58.1352, 75.7565, 110.562, 0.55 ) }
    dend_1 { pt3dadd( 58.8853, 76.2838, 113.648, 1.11 ) }
    dend_1 { pt3dadd( 60.9946, 77.1346, 119.469, 0.28 ) }
    dend_1 { pt3dadd( 61.6303, 77.2451, 120.806, 0.83 ) }
    dend_1 { pt3dadd( 63.2292, 77.2941, 123.757, 0.28 ) }
    dend_1 { pt3dadd( 64.3597, 77.1524, 125.39, 1.11 ) }
    dend_1 { pt3dadd( 65.742, 76.7569, 127.56, 0.28 ) }
    dend_1 { pt3dadd( 66.5786, 76.3459, 129.086, 0.83 ) }
    dend_1 { pt3dadd( 69.3767, 74.2862, 134.756, 0.28 ) }
    dend_1 { pt3dadd( 70.5707, 73.1343, 137.778, 0.28 ) }
    dend_1 { pt3dadd( 71.1722, 72.3291, 139.855, 1.11 ) }
    dend_1 { pt3dadd( 71.5291, 71.7338, 141.749, 1.11 ) }
    dend_1 { pt3dadd( 71.9131, 71.0549, 144.626, 0.28 ) }
    dend_1 { pt3dadd( 72.1174, 70.7893, 146.374, 0.83 ) }
    dend_1 { pt3dadd( 72.7128, 70.4349, 150.514, 0.28 ) }
    dend_1 { pt3dadd( 73.3072, 70.3851, 153.989, 0.83 ) }
    dend_1 { pt3dadd( 74.4754, 70.598, 160.207, 0.28 ) }
    dend_1 { pt3dadd( 75.2763, 70.8208, 163.706, 1.11 ) }
    dend_1 { pt3dadd( 76.5412, 71.2518, 168.436, 0.28 ) }
    dend_1 { pt3dadd( 77.4031, 71.6152, 171.395, 0.83 ) }
    dend_1 { pt3dadd( 80.0504, 72.7887, 179.192, 0.28 ) }
    dend_1 { pt3dadd( 80.3055, 72.9022, 179.872, 0.83 ) }
    dend_1 { pt3dadd( 82.2666, 73.6304, 184.414, 0.55 ) }
    dend_1 { pt3dadd( 84.0425, 74.2025, 188.326, 0.28 ) }
    dend_1 { pt3dadd( 85.852, 74.6897, 192.158, 1.38 ) }
    dend_1 { pt3dadd( 87.239, 74.9875, 195.063, 0.83 ) }
    dend_1 { pt3dadd( 90.9878, 75.4588, 202.243, 0.28 ) }
    dend_1 { pt3dadd( 92.9076, 75.669, 205.905, 1.11 ) }
    dend_1 { pt3dadd( 95.5924, 75.9052, 210.937, 0.28 ) }
    dend_1 { pt3dadd( 96.2976, 75.9579, 212.256, 1.11 ) }
    dend_1 { pt3dadd( 98.2584, 76.0581, 215.554, 0.28 ) }
    dend_1 { pt3dadd( 99.5358, 76.1961, 217.713, 1.11 ) }
    dend_1 { pt3dadd( 102.279, 76.8309, 222.518, 0.28 ) }
    dend_1 { pt3dadd( 102.761, 77.0376, 223.459, 0.55 ) }
    dend_1 { pt3dadd( 104.943, 78.3342, 227.66, 0.28 ) }
    dend_1 { pt3dadd( 107.236, 80.2527, 232.311, 0.83 ) }
    dend_1 { pt3dadd( 108.932, 82.0782, 235.782, 0.28 ) }
    dend_1 { pt3dadd( 110.147, 83.937, 238.857, 0.83 ) }
    dend_1 { pt3dadd( 111.488, 87.0108, 243.608, 0.28 ) }
    dend_1 { pt3dadd( 111.986, 88.3895, 245.667, 0.55 ) }
    dend_1 { pt3dadd( 112.994, 92.1964, 251.107, 0.28 ) }
    dend_1 { pt3dadd( 113.246, 93.7593, 253.335, 0.55 ) }
    dend_1 { pt3dadd( 113.862, 98.1622, 259.473, 0.28 ) }
    dend_1 { pt3dadd( 114.179, 100.707, 263.022, 0.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 87/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -7.32368, 40.9016, 0.0, 0.55 ) }
    axon_1 { pt3dadd( -9.74737, 55.7045, 0.0, 0.55 ) }
    axon_1 { pt3dadd( -12.1711, 70.5074, 0.0, 0.55 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 90/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 4.80383, -29.4858, -16.0458, 0.55 ) }
    dend_64 { pt3dadd( 4.77622, -29.5642, -16.0542, 0.55 ) }
    dend_64 { pt3dadd( 3.52556, -33.2913, -16.2523, 0.55 ) }
    dend_64 { pt3dadd( 2.18961, -37.6502, -16.1577, 0.55 ) }
    dend_64 { pt3dadd( 1.54013, -39.894, -16.0155, 0.55 ) }
    dend_64 { pt3dadd( 1.1274, -41.2135, -15.877, 0.55 ) }
    dend_64 { pt3dadd( 0.420481, -43.4656, -15.658, 0.55 ) }
    dend_64 { pt3dadd( -0.870996, -47.4678, -15.0759, 0.55 ) }
    dend_64 { pt3dadd( -1.98396, -51.3591, -14.6914, 0.55 ) }
    dend_64 { pt3dadd( -2.32626, -52.7573, -14.6448, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_64 { pt3dadd( -3.3091, -57.469, -14.7542, 0.55 ) }
    dend_64 { pt3dadd( -3.81716, -60.1917, -14.9507, 0.55 ) }
    dend_64 { pt3dadd( -4.29712, -62.939, -15.3186, 0.55 ) }
    dend_64 { pt3dadd( -5.47819, -70.8369, -17.0563, 0.28 ) }
    dend_64 { pt3dadd( -5.6894, -72.4199, -17.5293, 0.55 ) }
    dend_64 { pt3dadd( -5.8231, -73.4281, -17.8473, 0.55 ) }
    dend_64 { pt3dadd( -6.03853, -75.1935, -18.4374, 0.28 ) }
    dend_64 { pt3dadd( -6.10407, -75.537, -18.5294, 0.55 ) }
    dend_64 { pt3dadd( -6.55252, -77.4737, -19.1366, 0.28 ) }
    dend_64 { pt3dadd( -7.05302, -79.1595, -19.527, 0.55 ) }
    dend_64 { pt3dadd( -7.89334, -82.1953, -20.2376, 0.28 ) }
    dend_64 { pt3dadd( -8.55467, -84.8216, -20.7623, 0.55 ) }
    dend_64 { pt3dadd( -9.10754, -87.4279, -21.1868, 0.28 ) }
    dend_64 { pt3dadd( -9.90678, -91.6221, -21.6936, 0.83 ) }
    dend_64 { pt3dadd( -10.4784, -95.0934, -22.0166, 0.55 ) }
    dend_64 { pt3dadd( -10.749, -96.99, -22.1442, 0.83 ) }
    dend_64 { pt3dadd( -11.0406, -99.0874, -22.1898, 0.28 ) }
    dend_64 { pt3dadd( -11.4017, -101.659, -22.0762, 0.83 ) }
    dend_64 { pt3dadd( -11.8209, -104.525, -21.7367, 0.28 ) }
    dend_64 { pt3dadd( -12.0716, -105.897, -21.43, 0.83 ) }
    dend_64 { pt3dadd( -12.7867, -109.329, -20.5963, 0.28 ) }
    dend_64 { pt3dadd( -13.2948, -111.572, -20.0889, 0.83 ) }
    dend_64 { pt3dadd( -13.9446, -114.285, -19.4529, 0.28 ) }
    dend_64 { pt3dadd( -14.6909, -117.383, -18.6798, 0.83 ) }
    dend_64 { pt3dadd( -16.2992, -123.896, -16.9145, 0.28 ) }
    dend_64 { pt3dadd( -16.9877, -126.891, -16.014, 0.83 ) }
    dend_64 { pt3dadd( -18.1665, -132.438, -14.2782, 0.28 ) }
    dend_64 { pt3dadd( -18.7988, -135.506, -13.3767, 0.83 ) }
    dend_64 { pt3dadd( -19.6705, -139.626, -12.1941, 0.28 ) }
    dend_64 { pt3dadd( -20.0674, -141.764, -11.6343, 0.83 ) }
    dend_64 { pt3dadd( -21.8269, -153.57, -8.84701, 0.28 ) }
    dend_64 { pt3dadd( -22.1967, -156.703, -8.15431, 0.83 ) }
    dend_64 { pt3dadd( -23.0109, -165.423, -6.31602, 0.28 ) }
    dend_64 { pt3dadd( -23.2012, -167.842, -5.85243, 0.83 ) }
    dend_64 { pt3dadd( -23.5177, -172.85, -5.01104, 0.28 ) }
    dend_64 { pt3dadd( -23.6494, -176.08, -4.59242, 0.83 ) }
    dend_64 { pt3dadd( -23.6815, -181.197, -4.32728, 0.28 ) }
    dend_64 { pt3dadd( -23.6305, -182.346, -4.29642, 0.83 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 38/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 4.80383, -29.4858, -16.0458, 0.55 ) }
    dend_63 { pt3dadd( 4.95879, -35.0936, -19.3115, 0.55 ) }
    dend_63 { pt3dadd( 4.94447, -37.8052, -20.6971, 0.55 ) }
    dend_63 { pt3dadd( 4.91365, -39.0756, -21.239, 0.55 ) }
    dend_63 { pt3dadd( 4.734, -41.5831, -21.9916, 0.55 ) }
    dend_63 { pt3dadd( 4.45001, -43.7306, -22.3436, 0.55 ) }
    dend_63 { pt3dadd( 4.08328, -45.7733, -22.4016, 0.55 ) }
    dend_63 { pt3dadd( 3.71116, -47.0727, -22.0169, 0.28 ) }
    dend_63 { pt3dadd( 3.14488, -48.9096, -21.0814, 0.55 ) }
    dend_63 { pt3dadd( 2.24458, -51.6323, -19.3093, 0.55 ) }
    dend_63 { pt3dadd( 1.47369, -54.0185, -17.7085, 0.55 ) }
    dend_63 { pt3dadd( 0.911476, -55.7865, -16.4378, 0.28 ) }
    dend_63 { pt3dadd( 0.41673, -57.1688, -15.3634, 0.55 ) }
    dend_63 { pt3dadd( -0.932693, -60.7697, -12.4866, 0.28 ) }
    dend_63 { pt3dadd( -2.07609, -63.5755, -10.1911, 0.83 ) }
    dend_63 { pt3dadd( -3.23988, -66.3253, -7.93403, 0.28 ) }
    dend_63 { pt3dadd( -4.60839, -69.3613, -5.49448, 0.83 ) }
    dend_63 { pt3dadd( -5.9302, -71.9893, -3.33036, 0.28 ) }
    dend_63 { pt3dadd( -6.64532, -73.2562, -2.21665, 0.55 ) }
    dend_63 { pt3dadd( -8.07105, -75.4959, -0.0395443, 0.28 ) }
    dend_63 { pt3dadd( -8.9048, -76.6962, 1.31034, 0.83 ) }
    dend_63 { pt3dadd( -9.43393, -77.3924, 2.22085, 0.83 ) }
    dend_63 { pt3dadd( -11.669, -80.4768, 6.22003, 0.28 ) }
    dend_63 { pt3dadd( -12.7573, -82.0124, 8.21646, 0.55 ) }
    dend_63 { pt3dadd( -13.8776, -83.5636, 10.2558, 0.28 ) }
    dend_63 { pt3dadd( -15.7878, -85.9822, 13.6229, 0.83 ) }
    dend_63 { pt3dadd( -18.1837, -88.8194, 17.6552, 0.28 ) }
    dend_63 { pt3dadd( -19.0094, -89.7902, 18.8893, 0.83 ) }
    dend_63 { pt3dadd( -20.8998, -91.9652, 21.3599, 0.28 ) }
    dend_63 { pt3dadd( -22.3822, -93.6953, 23.042, 0.83 ) }
    dend_63 { pt3dadd( -27.897, -100.224, 28.6156, 0.28 ) }
    dend_63 { pt3dadd( -28.8528, -101.367, 29.4656, 0.83 ) }
    dend_63 { pt3dadd( -33.0448, -106.385, 32.8172, 0.28 ) }
    dend_63 { pt3dadd( -34.3768, -107.953, 33.8123, 0.55 ) }
    dend_63 { pt3dadd( -36.6258, -110.688, 35.3364, 0.28 ) }
    dend_63 { pt3dadd( -37.3781, -111.676, 35.8151, 0.83 ) }
    dend_63 { pt3dadd( -38.2608, -112.983, 36.3074, 0.28 ) }
    dend_63 { pt3dadd( -38.6473, -113.573, 36.5849, 0.55 ) }
    dend_63 { pt3dadd( -39.5674, -114.977, 37.467, 0.28 ) }
    dend_63 { pt3dadd( -40.0186, -115.712, 37.9034, 0.83 ) }
    dend_63 { pt3dadd( -42.1512, -119.412, 39.9656, 0.28 ) }
    dend_63 { pt3dadd( -42.5496, -120.126, 40.3301, 0.83 ) }
    dend_63 { pt3dadd( -44.0559, -122.805, 41.6173, 0.28 ) }
    dend_63 { pt3dadd( -44.925, -124.344, 42.3052, 0.83 ) }
    dend_63 { pt3dadd( -45.8482, -125.991, 42.9899, 0.28 ) }
    dend_63 { pt3dadd( -46.7365, -127.5, 43.5871, 0.55 ) }
    dend_63 { pt3dadd( -48.3808, -130.221, 44.5547, 0.28 ) }
    dend_63 { pt3dadd( -49.3191, -131.822, 45.1404, 0.83 ) }
    dend_63 { pt3dadd( -50.6818, -134.284, 45.9546, 0.28 ) }
    dend_63 { pt3dadd( -51.1492, -135.21, 46.2333, 0.55 ) }
    dend_63 { pt3dadd( -51.9227, -136.847, 46.7023, 0.28 ) }
    dend_63 { pt3dadd( -52.456, -138.119, 47.0182, 0.55 ) }
    dend_63 { pt3dadd( -54.196, -142.747, 48.1036, 0.28 ) }
    dend_63 { pt3dadd( -54.8993, -144.852, 48.5795, 0.83 ) }
    dend_63 { pt3dadd( -55.3156, -146.239, 48.8677, 0.28 ) }
    dend_63 { pt3dadd( -55.5514, -147.119, 49.0342, 0.55 ) }
    dend_63 { pt3dadd( -55.9945, -149.081, 49.3515, 0.28 ) }
    dend_63 { pt3dadd( -56.4099, -151.19, 49.6141, 0.55 ) }
    // Section: dend_61, id: dend_61, parent: dend_53 (entry count 96/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 7.58776, -31.3925, -30.6475, 0.83 ) }
    dend_61 { pt3dadd( 8.21942, -32.95, -29.0031, 0.83 ) }
    dend_61 { pt3dadd( 8.55382, -33.7949, -27.808, 0.28 ) }
    dend_61 { pt3dadd( 8.8796, -34.7497, -26.3326, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_61 { pt3dadd( 9.07607, -35.3087, -25.4398, 0.28 ) }
    dend_61 { pt3dadd( 9.64194, -36.8887, -22.6176, 0.83 ) }
    dend_61 { pt3dadd( 10.3053, -38.6734, -19.4195, 0.28 ) }
    dend_61 { pt3dadd( 11.1107, -40.5904, -15.049, 0.83 ) }
    dend_61 { pt3dadd( 11.7941, -42.06, -11.0514, 0.28 ) }
    dend_61 { pt3dadd( 12.191, -42.8955, -8.66624, 0.83 ) }
    dend_61 { pt3dadd( 13.3764, -45.4465, -1.09762, 0.28 ) }
    dend_61 { pt3dadd( 13.613, -45.9453, 0.451364, 0.55 ) }
    dend_61 { pt3dadd( 15.1359, -49.0093, 10.9355, 0.28 ) }
    dend_61 { pt3dadd( 16.0063, -50.4204, 16.5884, 1.11 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 10/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 7.58776, -31.3925, -30.6475, 0.83 ) }
    dend_54 { pt3dadd( 7.58526, -31.6531, -30.8133, 0.83 ) }
    dend_54 { pt3dadd( 7.61033, -33.6103, -32.3356, 0.83 ) }
    dend_54 { pt3dadd( 7.70004, -35.8741, -34.0549, 1.11 ) }
    dend_54 { pt3dadd( 7.85678, -38.8381, -36.2081, 0.83 ) }
    dend_54 { pt3dadd( 7.99066, -41.3699, -38.0474, 0.83 ) }
    dend_54 { pt3dadd( 8.50972, -51.1856, -45.1781, 0.55 ) }
    dend_54 { pt3dadd( 8.66654, -53.4682, -47.0041, 0.55 ) }
    dend_54 { pt3dadd( 8.84373, -55.3556, -48.7957, 0.55 ) }
    dend_54 { pt3dadd( 8.9537, -56.332, -49.9158, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_37 (entry count 20/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -22.9031, 6.77853, 5.64231, 1.11 ) }
    dend_45 { pt3dadd( -28.7052, 10.4184, 5.47446, 1.11 ) }
    dend_45 { pt3dadd( -31.4202, 12.1215, 5.39592, 1.11 ) }
    dend_45 { pt3dadd( -33.7771, 13.6001, 5.32773, 0.83 ) }
    dend_45 { pt3dadd( -36.3101, 15.1891, 5.25445, 0.83 ) }
    dend_45 { pt3dadd( -38.4227, 16.5144, 5.19334, 1.11 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 26/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -22.9031, 6.77853, 5.64231, 0.83 ) }
    dend_38 { pt3dadd( -27.0957, 8.75086, 6.36753, 0.83 ) }
    dend_38 { pt3dadd( -28.6908, 9.50118, 6.64343, 0.83 ) }
    // Section: dend_22, id: dend_22, parent: dend_2 (entry count 29/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 26.157, 31.1208, 4.39318, 1.11 ) }
    dend_22 { pt3dadd( 30.3447, 34.9995, 3.27472, 1.11 ) }
    dend_22 { pt3dadd( 32.0607, 36.5889, 2.81639, 1.11 ) }
    dend_22 { pt3dadd( 33.3653, 37.7972, 2.46796, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 33/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 26.157, 31.1208, 4.39318, 1.11 ) }
    dend_3 { pt3dadd( 27.6277, 39.218, 3.73586, 1.11 ) }
    dend_3 { pt3dadd( 28.5497, 42.4367, 3.6822, 0.83 ) }
    dend_3 { pt3dadd( 29.1714, 44.1852, 3.75588, 0.83 ) }
    dend_3 { pt3dadd( 30.4564, 47.4365, 3.89603, 0.83 ) }
    dend_3 { pt3dadd( 31.8312, 50.5782, 4.05772, 0.83 ) }
    dend_3 { pt3dadd( 33.1169, 53.3192, 4.1993, 1.38 ) }
    dend_3 { pt3dadd( 35.3091, 57.5927, 4.68792, 1.38 ) }
    dend_3 { pt3dadd( 37.7387, 62.0651, 5.08432, 0.83 ) }
    dend_3 { pt3dadd( 39.2177, 64.7683, 5.28443, 0.83 ) }
    dend_3 { pt3dadd( 40.4617, 67.05, 5.46853, 1.11 ) }
    dend_3 { pt3dadd( 41.5684, 69.1594, 5.61399, 0.83 ) }
    dend_3 { pt3dadd( 42.2309, 70.6102, 5.74611, 0.83 ) }
    dend_3 { pt3dadd( 43.3486, 73.4034, 6.25229, 1.38 ) }
    dend_3 { pt3dadd( 44.3508, 76.0479, 6.79043, 0.83 ) }
    dend_3 { pt3dadd( 45.4716, 79.2082, 7.53211, 1.38 ) }
    dend_3 { pt3dadd( 47.8121, 86.3106, 9.29697, 1.11 ) }
    dend_3 { pt3dadd( 48.8104, 89.3727, 10.1382, 1.38 ) }
    dend_3 { pt3dadd( 50.7559, 95.0256, 11.8148, 1.38 ) }
    // Section: dend_60, id: dend_60, parent: dend_54 (entry count 52/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 8.9537, -56.332, -49.9158, 0.55 ) }
    dend_60 { pt3dadd( 7.32179, -57.9072, -50.0803, 0.55 ) }
    dend_60 { pt3dadd( 5.88971, -59.0798, -49.7915, 0.55 ) }
    dend_60 { pt3dadd( 5.1333, -59.6658, -49.6078, 0.55 ) }
    dend_60 { pt3dadd( 4.21364, -60.3956, -49.3987, 0.55 ) }
    dend_60 { pt3dadd( 1.93245, -62.3165, -48.7468, 0.55 ) }
    dend_60 { pt3dadd( -1.37304, -65.0123, -47.8645, 0.55 ) }
    dend_60 { pt3dadd( -5.11006, -68.261, -46.9634, 0.55 ) }
    dend_60 { pt3dadd( -7.2082, -70.1468, -46.6756, 0.55 ) }
    dend_60 { pt3dadd( -9.39575, -72.1719, -46.588, 0.55 ) }
    dend_60 { pt3dadd( -13.1838, -75.6415, -46.5858, 0.55 ) }
    dend_60 { pt3dadd( -16.5824, -78.8421, -46.7145, 0.55 ) }
    dend_60 { pt3dadd( -19.3114, -81.6485, -46.9715, 0.55 ) }
    dend_60 { pt3dadd( -22.7062, -85.2, -47.4619, 0.55 ) }
    dend_60 { pt3dadd( -26.3493, -89.0294, -47.899, 0.55 ) }
    dend_60 { pt3dadd( -28.1049, -90.8242, -48.0572, 0.55 ) }
    dend_60 { pt3dadd( -31.0904, -93.7805, -48.2737, 0.55 ) }
    dend_60 { pt3dadd( -35.9018, -98.4371, -48.3264, 0.55 ) }
    dend_60 { pt3dadd( -39.6833, -101.895, -48.1454, 0.55 ) }
    dend_60 { pt3dadd( -41.8875, -103.887, -47.9197, 0.55 ) }
    dend_60 { pt3dadd( -44.0429, -105.78, -47.7245, 0.55 ) }
    dend_60 { pt3dadd( -46.8102, -108.363, -47.7254, 0.83 ) }
    dend_60 { pt3dadd( -48.47, -109.93, -47.8134, 0.55 ) }
    dend_60 { pt3dadd( -50.8451, -112.343, -48.0651, 0.83 ) }
    dend_60 { pt3dadd( -52.39, -113.978, -48.3565, 0.28 ) }
    dend_60 { pt3dadd( -54.1842, -115.849, -48.8456, 0.83 ) }
    dend_60 { pt3dadd( -60.4504, -122.339, -50.8592, 0.28 ) }
    dend_60 { pt3dadd( -62.4076, -124.315, -51.5152, 0.55 ) }
    dend_60 { pt3dadd( -64.7037, -126.567, -52.2828, 0.55 ) }
    dend_60 { pt3dadd( -69.9848, -131.598, -53.823, 0.55 ) }
    dend_60 { pt3dadd( -71.9179, -133.482, -54.4048, 0.55 ) }
    dend_60 { pt3dadd( -75.1182, -136.641, -55.2835, 0.55 ) }
    dend_60 { pt3dadd( -77.9575, -139.45, -55.9142, 1.38 ) }
    dend_60 { pt3dadd( -80.1434, -141.674, -56.3719, 0.83 ) }
    dend_60 { pt3dadd( -85.7825, -147.662, -57.5333, 0.28 ) }
    dend_60 { pt3dadd( -89.7547, -152.225, -58.1996, 0.55 ) }
    dend_60 { pt3dadd( -92.3042, -155.269, -58.5718, 0.83 ) }
    dend_60 { pt3dadd( -93.7555, -157.073, -58.8139, 0.28 ) }
    dend_60 { pt3dadd( -94.9613, -158.613, -59.0458, 0.55 ) }
    dend_60 { pt3dadd( -96.8231, -161.005, -59.4641, 0.28 ) }
    dend_60 { pt3dadd( -98.3115, -162.862, -59.8848, 0.55 ) }
    dend_60 { pt3dadd( -105.372, -169.381, -59.1338, 0.55 ) }
    dend_60 { pt3dadd( -112.5, -175.867, -59.1922, 0.55 ) }
    dend_60 { pt3dadd( -118.675, -183.22, -58.8109, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 96/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 8.9537, -56.332, -49.9158, 0.55 ) }
    dend_55 { pt3dadd( 9.82937, -58.5062, -51.3914, 0.55 ) }
    dend_55 { pt3dadd( 10.2018, -59.9725, -51.979, 0.55 ) }
    dend_55 { pt3dadd( 10.6069, -62.7861, -52.7235, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_55 { pt3dadd( 10.9519, -65.1824, -53.3575, 0.55 ) }
    dend_55 { pt3dadd( 11.5928, -69.6341, -54.5354, 0.55 ) }
    dend_55 { pt3dadd( 11.8312, -71.2899, -54.9736, 0.55 ) }
    dend_55 { pt3dadd( 12.2966, -75.6837, -56.5615, 0.28 ) }
    dend_55 { pt3dadd( 12.5277, -77.6356, -57.2297, 0.55 ) }
    dend_55 { pt3dadd( 13.7941, -83.9958, -60.7304, 0.55 ) }
    dend_55 { pt3dadd( 14.837, -90.0157, -64.8735, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_45 (entry count 7/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -38.4227, 16.5144, 5.19334, 0.83 ) }
    dend_49 { pt3dadd( -41.0679, 18.4538, 3.46665, 0.83 ) }
    dend_49 { pt3dadd( -44.0896, 20.854, 1.62298, 0.55 ) }
    dend_49 { pt3dadd( -46.722, 23.0379, 0.010249, 0.55 ) }
    dend_49 { pt3dadd( -49.7095, 25.4951, -1.72297, 0.55 ) }
    dend_49 { pt3dadd( -51.1967, 26.6372, -2.5417, 0.55 ) }
    dend_49 { pt3dadd( -52.536, 27.6256, -3.33613, 0.55 ) }
    dend_49 { pt3dadd( -54.6191, 29.0858, -4.53713, 0.55 ) }
    dend_49 { pt3dadd( -56.7699, 30.5611, -5.75828, 0.55 ) }
    dend_49 { pt3dadd( -58.5841, 31.6914, -6.6121, 0.55 ) }
    dend_49 { pt3dadd( -60.6031, 32.8759, -7.56392, 0.83 ) }
    dend_49 { pt3dadd( -64.0413, 35.0583, -9.26249, 0.83 ) }
    dend_49 { pt3dadd( -65.6932, 36.1312, -10.0804, 0.55 ) }
    dend_49 { pt3dadd( -68.0367, 37.6953, -11.1204, 0.83 ) }
    dend_49 { pt3dadd( -71.2889, 40.0317, -12.4994, 0.55 ) }
    dend_49 { pt3dadd( -73.1026, 41.5004, -13.3543, 0.55 ) }
    dend_49 { pt3dadd( -76.1876, 44.2991, -15.0029, 0.55 ) }
    dend_49 { pt3dadd( -77.0842, 45.1965, -15.5457, 0.55 ) }
    dend_49 { pt3dadd( -78.896, 47.3013, -16.9247, 0.55 ) }
    dend_49 { pt3dadd( -79.6302, 48.2624, -17.6003, 0.55 ) }
    dend_49 { pt3dadd( -81.358, 50.8091, -19.4486, 0.83 ) }
    dend_49 { pt3dadd( -82.8738, 53.2313, -21.0162, 0.55 ) }
    dend_49 { pt3dadd( -84.2577, 55.9422, -22.577, 0.83 ) }
    dend_49 { pt3dadd( -85.1524, 58.0356, -23.6372, 0.55 ) }
    dend_49 { pt3dadd( -85.3124, 58.513, -23.8339, 0.83 ) }
    dend_49 { pt3dadd( -85.7573, 60.0583, -24.3842, 0.55 ) }
    dend_49 { pt3dadd( -86.0325, 61.0784, -24.7129, 0.83 ) }
    dend_49 { pt3dadd( -86.9587, 64.2962, -25.7248, 0.55 ) }
    dend_49 { pt3dadd( -87.8466, 67.1919, -26.6127, 0.55 ) }
    dend_49 { pt3dadd( -89.4487, 72.1567, -28.2638, 0.55 ) }
    dend_49 { pt3dadd( -90.4481, 75.0745, -29.2703, 0.55 ) }
    dend_49 { pt3dadd( -91.929, 79.3311, -30.8244, 0.28 ) }
    dend_49 { pt3dadd( -92.6094, 81.2462, -31.5469, 0.28 ) }
    dend_49 { pt3dadd( -93.6336, 84.0907, -32.6905, 0.28 ) }
    dend_49 { pt3dadd( -95.2437, 88.566, -34.4601, 0.28 ) }
    dend_49 { pt3dadd( -96.3813, 91.6051, -35.6794, 0.28 ) }
    dend_49 { pt3dadd( -97.885, 95.7192, -37.296, 0.28 ) }
    dend_49 { pt3dadd( -98.8903, 98.6936, -38.5401, 0.28 ) }
    dend_49 { pt3dadd( -99.6426, 101.173, -39.6713, 0.55 ) }
    dend_49 { pt3dadd( -105.528, 108.046, -43.0429, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 47/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -38.4227, 16.5144, 5.19334, 0.28 ) }
    dend_46 { pt3dadd( -41.2379, 17.2829, 8.0936, 0.28 ) }
    dend_46 { pt3dadd( -45.7341, 18.4846, 12.5796, 0.28 ) }
    dend_46 { pt3dadd( -48.4435, 19.2479, 15.2552, 0.28 ) }
    dend_46 { pt3dadd( -51.1869, 20.0389, 17.9791, 0.55 ) }
    dend_46 { pt3dadd( -54.2801, 20.9712, 21.0322, 0.55 ) }
    dend_46 { pt3dadd( -55.9048, 21.4631, 22.5794, 0.28 ) }
    dend_46 { pt3dadd( -56.6865, 21.7318, 23.2918, 0.55 ) }
    dend_46 { pt3dadd( -58.7039, 22.5344, 24.758, 0.28 ) }
    dend_46 { pt3dadd( -61.4355, 23.778, 26.3774, 0.55 ) }
    dend_46 { pt3dadd( -62.1791, 24.1719, 26.7745, 0.55 ) }
    dend_46 { pt3dadd( -63.653, 25.0414, 27.5335, 0.28 ) }
    dend_46 { pt3dadd( -67.2895, 27.3816, 29.5342, 0.83 ) }
    dend_46 { pt3dadd( -70.0838, 29.2727, 31.1543, 0.28 ) }
    dend_46 { pt3dadd( -70.6688, 29.6964, 31.5168, 0.28 ) }
    dend_46 { pt3dadd( -72.6396, 31.2979, 32.9495, 0.83 ) }
    dend_46 { pt3dadd( -74.2965, 32.7423, 34.4044, 0.28 ) }
    dend_46 { pt3dadd( -75.319, 33.6809, 35.5318, 0.55 ) }
    dend_46 { pt3dadd( -76.7197, 34.94, 37.4334, 0.28 ) }
    dend_46 { pt3dadd( -77.8472, 35.9376, 39.0856, 0.55 ) }
    dend_46 { pt3dadd( -79.2563, 37.2289, 41.3286, 0.28 ) }
    dend_46 { pt3dadd( -80.1262, 38.0573, 42.8445, 0.83 ) }
    dend_46 { pt3dadd( -81.6514, 39.5299, 45.6811, 0.28 ) }
    dend_46 { pt3dadd( -82.8394, 40.663, 48.0461, 0.55 ) }
    dend_46 { pt3dadd( -83.2816, 41.0595, 48.9253, 0.55 ) }
    dend_46 { pt3dadd( -84.7689, 42.2743, 51.6308, 0.28 ) }
    dend_46 { pt3dadd( -85.7048, 42.9287, 53.079, 0.55 ) }
    dend_46 { pt3dadd( -87.2443, 43.9383, 55.2986, 0.28 ) }
    dend_46 { pt3dadd( -88.3854, 44.6504, 56.8053, 0.55 ) }
    dend_46 { pt3dadd( -90.5035, 45.8413, 59.4313, 0.28 ) }
    dend_46 { pt3dadd( -92.1603, 46.6392, 61.4473, 1.11 ) }
    dend_46 { pt3dadd( -95.4595, 48.0924, 65.6036, 0.28 ) }
    dend_46 { pt3dadd( -96.7381, 48.6259, 67.1872, 0.55 ) }
    dend_46 { pt3dadd( -98.0504, 49.151, 68.8321, 0.28 ) }
    dend_46 { pt3dadd( -99.2583, 49.6187, 70.4074, 0.55 ) }
    dend_46 { pt3dadd( -101.287, 50.3558, 73.3633, 0.28 ) }
    dend_46 { pt3dadd( -104.427, 51.4035, 78.4905, 0.83 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 84/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -28.6908, 9.50118, 6.64343, 0.55 ) }
    dend_40 { pt3dadd( -28.7902, 11.4987, 10.9352, 0.55 ) }
    dend_40 { pt3dadd( -28.9853, 13.0733, 14.0008, 0.55 ) }
    dend_40 { pt3dadd( -29.5978, 15.4334, 18.4776, 0.55 ) }
    dend_40 { pt3dadd( -30.6516, 18.1131, 23.2771, 0.55 ) }
    dend_40 { pt3dadd( -31.7396, 20.1672, 26.7648, 0.83 ) }
    dend_40 { pt3dadd( -32.8866, 22.1655, 29.9052, 0.55 ) }
    dend_40 { pt3dadd( -34.6077, 24.7905, 33.8472, 0.83 ) }
    dend_40 { pt3dadd( -36.7798, 27.9898, 38.1214, 0.55 ) }
    dend_40 { pt3dadd( -38.9557, 31.1334, 41.501, 0.83 ) }
    dend_40 { pt3dadd( -41.1422, 34.2048, 44.3446, 0.55 ) }
    dend_40 { pt3dadd( -42.6419, 36.1795, 46.1808, 0.55 ) }
    dend_40 { pt3dadd( -44.2336, 38.2341, 48.0181, 1.38 ) }
    dend_40 { pt3dadd( -46.2717, 40.9846, 50.3895, 0.83 ) }
    dend_40 { pt3dadd( -47.8998, 43.4758, 52.4565, 0.83 ) }
    dend_40 { pt3dadd( -49.1742, 45.6202, 54.2699, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_40 { pt3dadd( -51.896, 50.3297, 58.4081, 0.83 ) }
    dend_40 { pt3dadd( -53.7592, 53.295, 61.1799, 0.83 ) }
    dend_40 { pt3dadd( -55.1627, 55.4169, 63.2195, 0.55 ) }
    dend_40 { pt3dadd( -56.274, 57.1013, 64.9174, 0.55 ) }
    dend_40 { pt3dadd( -56.4335, 57.3843, 65.2086, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 5/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -28.6908, 9.50118, 6.64343, 0.55 ) }
    dend_39 { pt3dadd( -30.0895, 10.0809, 8.49182, 0.55 ) }
    dend_39 { pt3dadd( -30.9292, 10.3889, 10.0238, 0.83 ) }
    dend_39 { pt3dadd( -31.5728, 10.6262, 11.5708, 0.83 ) }
    dend_39 { pt3dadd( -32.6485, 11.1104, 14.4631, 0.55 ) }
    dend_39 { pt3dadd( -33.1588, 11.3836, 15.9298, 0.83 ) }
    dend_39 { pt3dadd( -33.4855, 11.5772, 16.869, 0.55 ) }
    dend_39 { pt3dadd( -35.0279, 12.717, 22.02, 0.83 ) }
    dend_39 { pt3dadd( -36.3057, 13.9071, 26.894, 0.55 ) }
    dend_39 { pt3dadd( -36.643, 14.2833, 28.2997, 0.55 ) }
    dend_39 { pt3dadd( -37.1345, 14.9141, 30.3693, 0.55 ) }
    dend_39 { pt3dadd( -37.3535, 15.2445, 31.3011, 0.55 ) }
    dend_39 { pt3dadd( -37.8304, 16.1714, 33.4473, 0.28 ) }
    dend_39 { pt3dadd( -38.0381, 16.7857, 34.4419, 1.11 ) }
    dend_39 { pt3dadd( -38.1383, 17.2978, 35.2308, 1.11 ) }
    dend_39 { pt3dadd( -38.3264, 18.4282, 37.3602, 0.55 ) }
    dend_39 { pt3dadd( -38.4695, 19.327, 39.2615, 0.55 ) }
    dend_39 { pt3dadd( -38.6128, 20.1989, 41.269, 0.55 ) }
    dend_39 { pt3dadd( -38.7939, 21.1509, 43.5717, 0.55 ) }
    dend_39 { pt3dadd( -39.2651, 23.5793, 49.9425, 1.11 ) }
    dend_39 { pt3dadd( -39.6942, 26.1449, 56.9432, 0.55 ) }
    dend_39 { pt3dadd( -39.7688, 26.6642, 58.3871, 0.55 ) }
    dend_39 { pt3dadd( -39.8912, 27.5094, 60.7632, 0.55 ) }
    dend_39 { pt3dadd( -40.0095, 28.2566, 62.8626, 1.11 ) }
    dend_39 { pt3dadd( -40.3358, 30.0908, 67.9258, 0.28 ) }
    dend_39 { pt3dadd( -40.5847, 31.4378, 71.3788, 1.11 ) }
    dend_39 { pt3dadd( -40.7523, 32.5853, 73.977, 0.28 ) }
    dend_39 { pt3dadd( -40.787, 32.7932, 74.4284, 0.55 ) }
    dend_39 { pt3dadd( -40.9942, 33.7808, 76.4955, 0.28 ) }
    dend_39 { pt3dadd( -41.1774, 34.366, 77.6493, 1.11 ) }
    dend_39 { pt3dadd( -41.8946, 35.8817, 80.3425, 0.28 ) }
    dend_39 { pt3dadd( -42.1217, 36.3123, 81.1456, 0.83 ) }
    dend_39 { pt3dadd( -42.802, 37.7457, 83.8928, 0.28 ) }
    dend_39 { pt3dadd( -42.9156, 38.0308, 84.4504, 0.55 ) }
    dend_39 { pt3dadd( -43.3475, 39.3335, 86.9877, 0.28 ) }
    dend_39 { pt3dadd( -43.5754, 40.1558, 88.6418, 1.38 ) }
    dend_39 { pt3dadd( -44.2772, 43.3352, 95.0628, 0.28 ) }
    dend_39 { pt3dadd( -44.5496, 44.7794, 98.1005, 1.11 ) }
    dend_39 { pt3dadd( -44.7224, 46.0226, 100.748, 0.28 ) }
    dend_39 { pt3dadd( -44.7508, 46.3216, 101.405, 0.55 ) }
    dend_39 { pt3dadd( -44.7904, 48.0637, 105.359, 0.28 ) }
    dend_39 { pt3dadd( -44.7897, 48.5768, 106.535, 0.55 ) }
    dend_39 { pt3dadd( -44.8741, 49.8356, 109.264, 0.28 ) }
    // Section: dend_30, id: dend_30, parent: dend_22 (entry count 48/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 33.3653, 37.7972, 2.46796, 0.55 ) }
    dend_30 { pt3dadd( 33.79, 38.727, 1.14253, 0.55 ) }
    dend_30 { pt3dadd( 35.279, 41.9868, -3.50454, 0.55 ) }
    dend_30 { pt3dadd( 36.3344, 44.2975, -6.79848, 0.55 ) }
    dend_30 { pt3dadd( 36.9188, 45.5769, -8.62241, 0.55 ) }
    dend_30 { pt3dadd( 38.2088, 48.4011, -12.6484, 0.83 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 54/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 33.3653, 37.7972, 2.46796, 0.83 ) }
    dend_23 { pt3dadd( 34.781, 38.692, 2.32527, 0.83 ) }
    dend_23 { pt3dadd( 39.2231, 41.4999, 1.87756, 0.83 ) }
    dend_23 { pt3dadd( 44.1774, 44.6315, 1.37822, 0.83 ) }
    dend_23 { pt3dadd( 46.2667, 45.9521, 1.16765, 0.83 ) }
    dend_23 { pt3dadd( 48.503, 47.3656, 0.942253, 0.83 ) }
    // Section: dend_11, id: dend_11, parent: dend_3 (entry count 60/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 50.7559, 95.0256, 11.8148, 1.11 ) }
    dend_11 { pt3dadd( 51.4038, 98.6203, 10.8067, 1.11 ) }
    dend_11 { pt3dadd( 52.0048, 101.873, 10.0963, 1.11 ) }
    dend_11 { pt3dadd( 52.3032, 103.711, 9.76304, 1.38 ) }
    dend_11 { pt3dadd( 52.8319, 106.657, 9.20262, 1.11 ) }
    dend_11 { pt3dadd( 53.5157, 110.466, 8.47789, 1.38 ) }
    dend_11 { pt3dadd( 53.9073, 112.648, 8.06284, 1.38 ) }
    dend_11 { pt3dadd( 54.5142, 116.529, 7.59521, 0.83 ) }
    dend_11 { pt3dadd( 55.0552, 119.938, 7.28042, 0.83 ) }
    dend_11 { pt3dadd( 55.6744, 123.723, 6.88602, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 70/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 50.7559, 95.0256, 11.8148, 0.55 ) }
    dend_4 { pt3dadd( 52.4514, 95.2002, 12.8993, 0.55 ) }
    dend_4 { pt3dadd( 54.6929, 95.439, 14.1533, 0.28 ) }
    dend_4 { pt3dadd( 55.6961, 95.5598, 14.7499, 1.11 ) }
    dend_4 { pt3dadd( 57.1922, 95.9183, 15.4371, 0.55 ) }
    dend_4 { pt3dadd( 60.7855, 97.0742, 16.8727, 0.28 ) }
    dend_4 { pt3dadd( 62.0469, 97.5535, 17.3167, 0.55 ) }
    dend_4 { pt3dadd( 68.48, 100.626, 19.263, 0.28 ) }
    dend_4 { pt3dadd( 70.1634, 101.6, 19.5952, 0.55 ) }
    dend_4 { pt3dadd( 76.3867, 105.703, 19.8028, 0.28 ) }
    dend_4 { pt3dadd( 77.2712, 106.521, 19.375, 0.55 ) }
    dend_4 { pt3dadd( 77.8391, 107.205, 18.7496, 0.28 ) }
    dend_4 { pt3dadd( 78.1129, 107.631, 18.2885, 0.55 ) }
    dend_4 { pt3dadd( 79.1508, 109.788, 15.8236, 0.28 ) }
    dend_4 { pt3dadd( 79.5183, 110.579, 14.9196, 0.55 ) }
    dend_4 { pt3dadd( 82.0606, 115.894, 9.12114, 0.28 ) }
    dend_4 { pt3dadd( 82.5659, 116.969, 7.93271, 0.55 ) }
    dend_4 { pt3dadd( 83.2378, 118.447, 6.33377, 0.28 ) }
    dend_4 { pt3dadd( 83.9452, 120.027, 4.7131, 1.11 ) }
    dend_4 { pt3dadd( 85.947, 124.771, 0.560336, 0.28 ) }
    dend_4 { pt3dadd( 86.334, 125.725, -0.181331, 0.55 ) }
    dend_4 { pt3dadd( 92.4577, 130.21, -1.32299, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_55 (entry count 92/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 14.837, -90.0157, -64.8735, 0.28 ) }
    dend_59 { pt3dadd( 17.2373, -99.3481, -69.1258, 0.28 ) }
    dend_59 { pt3dadd( 20.2962, -108.544, -73.2738, 0.28 ) }
    dend_59 { pt3dadd( 23.6802, -118.018, -76.3864, 0.28 ) }
    dend_59 { pt3dadd( 27.0426, -127.614, -79.1051, 0.28 ) }
    dend_59 { pt3dadd( 29.4095, -137.626, -81.2117, 0.28 ) }
    dend_59 { pt3dadd( 32.3705, -147.669, -82.0533, 0.28 ) }
    dend_59 { pt3dadd( 37.1516, -157.063, -82.0792, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_59 { pt3dadd( 41.354, -166.661, -83.1288, 0.28 ) }
    dend_59 { pt3dadd( 45.4784, -176.044, -85.5752, 0.28 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 2/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 14.837, -90.0157, -64.8735, 1.11 ) }
    dend_56 { pt3dadd( 14.7391, -98.8789, -68.6167, 0.28 ) }
    dend_56 { pt3dadd( 15.7581, -108.077, -71.2099, 0.28 ) }
    dend_56 { pt3dadd( 18.6571, -117.045, -73.1901, 0.28 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 6/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -105.528, 108.046, -43.0429, 0.28 ) }
    dend_51 { pt3dadd( -110.408, 114.379, -46.6704, 0.28 ) }
    dend_51 { pt3dadd( -115.497, 119.766, -51.4408, 0.28 ) }
    dend_51 { pt3dadd( -121.665, 125.027, -54.8766, 0.28 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 10/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -105.528, 108.046, -43.0429, 1.11 ) }
    dend_50 { pt3dadd( -113.167, 118.685, -48.5583, 0.28 ) }
    dend_50 { pt3dadd( -120.776, 129.228, -54.3043, 0.28 ) }
    dend_50 { pt3dadd( -128.357, 139.819, -59.994, 0.28 ) }
    dend_50 { pt3dadd( -134.951, 151.29, -65.0869, 0.28 ) }
    dend_50 { pt3dadd( -144.398, 161.24, -68.8472, 0.28 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 16/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -104.427, 51.4035, 78.4905, 0.28 ) }
    dend_48 { pt3dadd( -105.611, 53.831, 78.9, 0.28 ) }
    dend_48 { pt3dadd( -106.51, 55.6455, 79.194, 0.83 ) }
    dend_48 { pt3dadd( -108.257, 59.3213, 79.9109, 0.28 ) }
    dend_48 { pt3dadd( -108.933, 60.7422, 80.195, 0.55 ) }
    dend_48 { pt3dadd( -110.069, 63.1302, 80.6776, 0.28 ) }
    dend_48 { pt3dadd( -111.089, 65.0746, 81.2593, 0.83 ) }
    dend_48 { pt3dadd( -112.661, 67.7136, 82.3339, 0.28 ) }
    dend_48 { pt3dadd( -113.865, 69.1783, 83.2014, 0.55 ) }
    dend_48 { pt3dadd( -114.95, 70.1712, 84.0355, 0.28 ) }
    dend_48 { pt3dadd( -115.514, 70.6298, 84.4691, 0.55 ) }
    dend_48 { pt3dadd( -120.781, 74.2591, 88.5987, 0.28 ) }
    dend_48 { pt3dadd( -121.774, 74.8263, 89.3725, 0.83 ) }
    dend_48 { pt3dadd( -126.853, 77.1689, 93.4766, 0.28 ) }
    dend_48 { pt3dadd( -127.802, 77.5231, 94.2146, 0.83 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 31/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -104.427, 51.4035, 78.4905, 0.28 ) }
    dend_47 { pt3dadd( -105.537, 51.3709, 80.4994, 0.28 ) }
    dend_47 { pt3dadd( -105.908, 51.3849, 81.1262, 0.55 ) }
    dend_47 { pt3dadd( -106.447, 51.4489, 81.9967, 0.28 ) }
    dend_47 { pt3dadd( -107.017, 51.697, 82.7678, 0.55 ) }
    dend_47 { pt3dadd( -110.214, 53.4865, 86.6294, 0.28 ) }
    dend_47 { pt3dadd( -111.257, 54.1084, 87.7767, 0.55 ) }
    dend_47 { pt3dadd( -111.908, 54.5549, 88.4211, 0.28 ) }
    dend_47 { pt3dadd( -112.392, 54.8992, 88.8683, 1.11 ) }
    dend_47 { pt3dadd( -115.76, 57.338, 91.7723, 0.28 ) }
    dend_47 { pt3dadd( -116.776, 58.0026, 92.595, 0.83 ) }
    dend_47 { pt3dadd( -117.849, 58.6385, 93.4097, 0.28 ) }
    dend_47 { pt3dadd( -118.421, 58.9414, 93.86, 0.55 ) }
    dend_47 { pt3dadd( -119.843, 59.5865, 94.9883, 0.28 ) }
    dend_47 { pt3dadd( -121.134, 60.0968, 96.058, 0.83 ) }
    dend_47 { pt3dadd( -124.659, 61.2688, 99.0712, 0.28 ) }
    dend_47 { pt3dadd( -125.479, 61.5366, 99.7741, 0.55 ) }
    dend_47 { pt3dadd( -127.052, 62.0519, 101.145, 0.28 ) }
    dend_47 { pt3dadd( -128.384, 62.4853, 102.308, 1.11 ) }
    dend_47 { pt3dadd( -130.306, 63.1122, 103.957, 0.28 ) }
    dend_47 { pt3dadd( -130.993, 63.3386, 104.54, 0.55 ) }
    dend_47 { pt3dadd( -132.282, 63.7908, 105.666, 0.28 ) }
    dend_47 { pt3dadd( -133.154, 64.0944, 106.483, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_40 (entry count 54/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -56.4335, 57.3843, 65.2086, 0.28 ) }
    dend_44 { pt3dadd( -49.0434, 54.4796, 79.7611, 0.28 ) }
    dend_44 { pt3dadd( -47.4572, 53.8977, 82.6336, 1.11 ) }
    dend_44 { pt3dadd( -44.1302, 52.7387, 88.1574, 0.28 ) }
    dend_44 { pt3dadd( -43.1604, 52.4223, 89.6593, 0.83 ) }
    dend_44 { pt3dadd( -39.9729, 51.4085, 94.3779, 0.28 ) }
    dend_44 { pt3dadd( -38.3189, 50.8825, 96.8264, 0.83 ) }
    dend_44 { pt3dadd( -36.1146, 50.3112, 99.0881, 0.28 ) }
    dend_44 { pt3dadd( -34.0916, 49.826, 100.845, 0.55 ) }
    dend_44 { pt3dadd( -30.7724, 49.085, 103.021, 0.28 ) }
    dend_44 { pt3dadd( -29.033, 48.6768, 104.378, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 65/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -56.4335, 57.3843, 65.2086, 1.11 ) }
    dend_41 { pt3dadd( -57.2713, 58.6938, 66.3398, 1.11 ) }
    dend_41 { pt3dadd( -58.8996, 60.7093, 68.6244, 0.55 ) }
    dend_41 { pt3dadd( -60.7948, 63.0442, 71.5042, 1.11 ) }
    dend_41 { pt3dadd( -62.5359, 65.1279, 74.4595, 0.83 ) }
    dend_41 { pt3dadd( -63.9793, 66.8058, 77.0391, 0.55 ) }
    dend_41 { pt3dadd( -65.2005, 68.1697, 79.2476, 1.11 ) }
    dend_41 { pt3dadd( -68.1528, 71.2519, 84.7226, 0.55 ) }
    dend_41 { pt3dadd( -68.9152, 72.032, 86.2303, 0.55 ) }
    dend_41 { pt3dadd( -70.8433, 73.9641, 90.1784, 0.55 ) }
    dend_41 { pt3dadd( -72.0224, 75.3024, 92.543, 1.11 ) }
    dend_41 { pt3dadd( -72.8946, 76.4305, 94.2609, 0.55 ) }
    dend_41 { pt3dadd( -73.4791, 77.3193, 95.4254, 0.83 ) }
    dend_41 { pt3dadd( -74.4831, 79.0978, 97.3895, 0.55 ) }
    dend_41 { pt3dadd( -75.1071, 80.179, 98.5196, 0.83 ) }
    dend_41 { pt3dadd( -77.2434, 84.2374, 102.26, 1.38 ) }
    dend_41 { pt3dadd( -78.1787, 86.1638, 103.983, 0.55 ) }
    dend_41 { pt3dadd( -78.8836, 87.7049, 105.354, 0.28 ) }
    dend_41 { pt3dadd( -80.0926, 90.282, 107.742, 1.11 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 84/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 38.2088, 48.4011, -12.6484, 0.83 ) }
    dend_34 { pt3dadd( 39.3043, 49.9903, -16.0707, 0.83 ) }
    dend_34 { pt3dadd( 41.7675, 52.9279, -22.1047, 0.55 ) }
    dend_34 { pt3dadd( 46.5143, 57.7699, -31.9679, 0.55 ) }
    dend_34 { pt3dadd( 47.209, 58.4984, -33.3531, 0.55 ) }
    dend_34 { pt3dadd( 49.3464, 60.5706, -37.198, 0.55 ) }
    dend_34 { pt3dadd( 50.8147, 61.9942, -39.8394, 0.55 ) }
    dend_34 { pt3dadd( 51.8622, 62.9515, -41.6754, 0.55 ) }
    dend_34 { pt3dadd( 53.818, 64.4024, -44.1667, 0.55 ) }
    dend_34 { pt3dadd( 58.7933, 67.4148, -48.4095, 0.55 ) }
    dend_34 { pt3dadd( 61.1341, 69.033, -50.68, 0.55 ) }
    dend_34 { pt3dadd( 68.0496, 74.8541, -60.1514, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 96/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 38.2088, 48.4011, -12.6484, 0.55 ) }
    dend_31 { pt3dadd( 37.8084, 51.2733, -13.7466, 0.55 ) }
    dend_31 { pt3dadd( 37.3896, 54.4519, -15.4003, 0.55 ) }
    dend_31 { pt3dadd( 37.1478, 56.5151, -16.5854, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_31 { pt3dadd( 36.9434, 58.5179, -17.7788, 0.55 ) }
    dend_31 { pt3dadd( 36.6357, 61.5858, -19.6018, 0.55 ) }
    dend_31 { pt3dadd( 36.4979, 63.3033, -20.6071, 0.55 ) }
    dend_31 { pt3dadd( 36.4339, 66.5725, -22.7707, 0.83 ) }
    dend_31 { pt3dadd( 36.4139, 67.439, -23.3577, 0.28 ) }
    dend_31 { pt3dadd( 36.4248, 67.886, -23.7028, 0.55 ) }
    dend_31 { pt3dadd( 36.517, 68.857, -24.6812, 0.55 ) }
    dend_31 { pt3dadd( 36.6682, 69.6116, -25.7017, 0.55 ) }
    dend_31 { pt3dadd( 37.1124, 71.7111, -28.1261, 0.83 ) }
    dend_31 { pt3dadd( 35.9111, 78.5906, -34.0721, 0.83 ) }
    dend_31 { pt3dadd( 35.8255, 84.6981, -40.9531, 0.83 ) }
    dend_31 { pt3dadd( 37.4277, 91.8761, -46.4149, 0.83 ) }
    dend_31 { pt3dadd( 37.5691, 99.2753, -51.7983, 0.83 ) }
    dend_31 { pt3dadd( 39.3395, 107.473, -55.3609, 0.83 ) }
    // Section: dend_27, id: dend_27, parent: dend_23 (entry count 14/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 48.503, 47.3656, 0.942253, 0.83 ) }
    dend_27 { pt3dadd( 54.1957, 55.2876, 1.75618, 0.83 ) }
    dend_27 { pt3dadd( 56.4422, 58.0175, 1.50303, 0.83 ) }
    dend_27 { pt3dadd( 59.1728, 60.7682, 0.883471, 0.55 ) }
    dend_27 { pt3dadd( 61.734, 63.1072, 0.303945, 0.55 ) }
    dend_27 { pt3dadd( 64.0394, 65.1012, -0.118453, 0.83 ) }
    dend_27 { pt3dadd( 66.7478, 67.2577, -0.672117, 0.83 ) }
    dend_27 { pt3dadd( 69.4837, 69.1912, -1.64526, 0.28 ) }
    dend_27 { pt3dadd( 74.2246, 72.084, -3.6596, 0.28 ) }
    dend_27 { pt3dadd( 75.9504, 72.9871, -4.41646, 1.11 ) }
    dend_27 { pt3dadd( 78.4315, 74.0408, -5.78072, 0.55 ) }
    dend_27 { pt3dadd( 82.917, 75.6038, -8.69819, 0.83 ) }
    dend_27 { pt3dadd( 87.7052, 77.1998, -12.0406, 0.55 ) }
    dend_27 { pt3dadd( 92.3446, 78.6151, -15.6269, 0.83 ) }
    dend_27 { pt3dadd( 93.513, 78.9232, -16.6642, 0.83 ) }
    dend_27 { pt3dadd( 99.7807, 80.3856, -22.823, 0.28 ) }
    dend_27 { pt3dadd( 102.446, 80.8775, -25.7413, 0.83 ) }
    dend_27 { pt3dadd( 113.421, 86.6303, -31.0512, 0.83 ) }
    dend_27 { pt3dadd( 125.505, 91.4486, -34.6837, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 33/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 48.503, 47.3656, 0.942253, 0.83 ) }
    dend_24 { pt3dadd( 51.74, 50.4291, 1.81164, 0.83 ) }
    dend_24 { pt3dadd( 53.7336, 52.5779, 2.67505, 0.83 ) }
    dend_24 { pt3dadd( 55.3047, 54.3393, 3.46476, 0.83 ) }
    dend_24 { pt3dadd( 57.388, 56.84, 4.61646, 0.83 ) }
    dend_24 { pt3dadd( 59.8309, 59.8771, 6.1152, 1.11 ) }
    dend_24 { pt3dadd( 62.2547, 62.8824, 7.63824, 0.83 ) }
    dend_24 { pt3dadd( 65.1405, 66.5982, 9.65079, 1.11 ) }
    dend_24 { pt3dadd( 66.6514, 68.6017, 10.7896, 0.55 ) }
    dend_24 { pt3dadd( 68.7159, 71.3543, 12.5589, 0.83 ) }
    dend_24 { pt3dadd( 70.4802, 73.5457, 14.1818, 0.83 ) }
    dend_24 { pt3dadd( 72.6494, 76.0929, 16.3206, 1.11 ) }
    dend_24 { pt3dadd( 74.4339, 78.0478, 18.1333, 0.55 ) }
    dend_24 { pt3dadd( 75.708, 79.4173, 19.4678, 0.28 ) }
    dend_24 { pt3dadd( 79.5822, 83.4792, 23.7699, 1.38 ) }
    dend_24 { pt3dadd( 82.8586, 86.7066, 27.4822, 0.55 ) }
    dend_24 { pt3dadd( 84.0517, 87.8249, 28.8882, 0.83 ) }
    dend_24 { pt3dadd( 85.7265, 89.3934, 30.9643, 0.55 ) }
    dend_24 { pt3dadd( 88.0646, 91.5461, 33.902, 0.28 ) }
    dend_24 { pt3dadd( 89.8968, 93.1763, 36.2185, 1.38 ) }
    dend_24 { pt3dadd( 92.5265, 95.2972, 39.3607, 0.55 ) }
    dend_24 { pt3dadd( 94.4731, 96.7519, 41.7364, 1.38 ) }
    // Section: dend_17, id: dend_17, parent: dend_11 (entry count 55/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 55.6744, 123.723, 6.88602, 1.11 ) }
    dend_17 { pt3dadd( 55.6418, 124.173, 6.88575, 1.11 ) }
    dend_17 { pt3dadd( 55.6029, 125.736, 6.78094, 0.83 ) }
    dend_17 { pt3dadd( 55.7281, 127.585, 6.63429, 0.83 ) }
    dend_17 { pt3dadd( 56.107, 129.727, 6.48162, 1.11 ) }
    dend_17 { pt3dadd( 56.9078, 133.169, 6.265, 1.11 ) }
    dend_17 { pt3dadd( 57.2156, 134.389, 6.14711, 0.83 ) }
    dend_17 { pt3dadd( 57.7618, 136.507, 5.87291, 0.83 ) }
    dend_17 { pt3dadd( 58.3919, 138.721, 5.55106, 1.38 ) }
    dend_17 { pt3dadd( 59.0616, 140.891, 5.18991, 1.11 ) }
    dend_17 { pt3dadd( 59.6665, 142.703, 4.87019, 1.11 ) }
    dend_17 { pt3dadd( 60.5831, 145.159, 4.42864, 1.11 ) }
    dend_17 { pt3dadd( 62.0544, 149.358, 3.70836, 1.38 ) }
    dend_17 { pt3dadd( 62.4842, 150.939, 3.45441, 0.55 ) }
    dend_17 { pt3dadd( 62.6866, 151.951, 3.25197, 0.83 ) }
    dend_17 { pt3dadd( 62.751, 152.384, 3.15478, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 71/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 55.6744, 123.723, 6.88602, 0.55 ) }
    dend_12 { pt3dadd( 58.7196, 124.778, 1.83406, 0.55 ) }
    dend_12 { pt3dadd( 59.3384, 125.021, 0.793556, 0.55 ) }
    dend_12 { pt3dadd( 61.0695, 125.815, -1.83254, 0.83 ) }
    dend_12 { pt3dadd( 63.7353, 127.039, -5.87644, 0.55 ) }
    dend_12 { pt3dadd( 65.2454, 127.732, -8.16729, 0.83 ) }
    dend_12 { pt3dadd( 66.7964, 128.444, -10.5201, 0.28 ) }
    dend_12 { pt3dadd( 67.5434, 128.774, -11.9314, 0.55 ) }
    dend_12 { pt3dadd( 68.572, 129.275, -14.0391, 0.55 ) }
    dend_12 { pt3dadd( 72.2835, 130.927, -23.328, 0.55 ) }
    dend_12 { pt3dadd( 75.0838, 133.078, -32.8245, 0.55 ) }
    dend_12 { pt3dadd( 78.4559, 134.549, -42.2741, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_4 (entry count 83/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 92.4577, 130.21, -1.32299, 0.28 ) }
    dend_10 { pt3dadd( 97.8541, 134.503, -2.69246, 0.28 ) }
    dend_10 { pt3dadd( 103.981, 137.39, -4.70883, 0.28 ) }
    dend_10 { pt3dadd( 109.932, 139.454, -7.94286, 0.28 ) }
    dend_10 { pt3dadd( 116.268, 141.727, -10.132, 0.28 ) }
    dend_10 { pt3dadd( 121.628, 144.991, -13.3517, 0.28 ) }
    dend_10 { pt3dadd( 125.671, 148.822, -17.6459, 0.28 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 90/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 92.4577, 130.21, -1.32299, 1.11 ) }
    dend_5 { pt3dadd( 101.802, 137.159, -2.79366, 0.28 ) }
    dend_5 { pt3dadd( 110.568, 144.786, -4.27786, 0.28 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 93/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 18.6571, -117.045, -73.1901, 0.28 ) }
    dend_58 { pt3dadd( 20.0636, -123.38, -75.2165, 0.28 ) }
    dend_58 { pt3dadd( 20.1615, -129.998, -76.7189, 0.28 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 96/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 18.6571, -117.045, -73.1901, 0.28 ) }
    dend_57 { pt3dadd( 21.9192, -124.911, -76.5604, 0.28 ) }
    dend_57 { pt3dadd( 24.7453, -133.308, -78.7934, 0.28 ) }
    dend_57 { pt3dadd( 28.1034, -141.626, -80.5118, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_57 { pt3dadd( 31.6736, -149.706, -82.8764, 0.28 ) }
    dend_57 { pt3dadd( 33.4772, -158.192, -85.7618, 0.28 ) }
    dend_57 { pt3dadd( 34.9808, -166.204, -89.9577, 0.28 ) }
    dend_57 { pt3dadd( 37.1255, -174.206, -93.875, 0.28 ) }
    dend_57 { pt3dadd( 40.3088, -181.465, -98.5212, 0.28 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 5/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -80.0926, 90.282, 107.742, 0.55 ) }
    dend_43 { pt3dadd( -81.3526, 91.5841, 109.664, 0.55 ) }
    dend_43 { pt3dadd( -82.3038, 92.4798, 111.166, 0.55 ) }
    dend_43 { pt3dadd( -83.4261, 93.5728, 113.075, 1.11 ) }
    dend_43 { pt3dadd( -84.8473, 94.9081, 115.676, 0.55 ) }
    dend_43 { pt3dadd( -85.455, 95.4004, 116.841, 0.28 ) }
    dend_43 { pt3dadd( -86.6491, 96.3677, 119.253, 0.55 ) }
    dend_43 { pt3dadd( -87.3917, 96.9321, 120.993, 0.28 ) }
    dend_43 { pt3dadd( -87.7572, 97.1691, 121.86, 0.83 ) }
    dend_43 { pt3dadd( -88.8831, 97.776, 124.438, 0.28 ) }
    dend_43 { pt3dadd( -90.0596, 98.3831, 127.066, 0.28 ) }
    dend_43 { pt3dadd( -90.6022, 98.6357, 128.261, 0.83 ) }
    dend_43 { pt3dadd( -91.3781, 98.9775, 129.928, 0.28 ) }
    dend_43 { pt3dadd( -93.0382, 99.7213, 133.467, 0.28 ) }
    dend_43 { pt3dadd( -93.9708, 100.176, 135.4, 0.83 ) }
    dend_43 { pt3dadd( -95.8913, 101.254, 139.334, 0.28 ) }
    dend_43 { pt3dadd( -95.9831, 101.311, 139.525, 0.55 ) }
    dend_43 { pt3dadd( -96.8483, 101.899, 141.318, 0.28 ) }
    dend_43 { pt3dadd( -97.412, 102.382, 142.463, 0.83 ) }
    dend_43 { pt3dadd( -97.881, 102.916, 143.382, 0.28 ) }
    dend_43 { pt3dadd( -97.9648, 103.031, 143.538, 0.55 ) }
    dend_43 { pt3dadd( -98.9472, 104.462, 145.193, 0.28 ) }
    dend_43 { pt3dadd( -99.7932, 105.686, 146.583, 1.11 ) }
    dend_43 { pt3dadd( -101.35, 107.853, 149.157, 0.28 ) }
    dend_43 { pt3dadd( -101.946, 108.636, 150.135, 0.55 ) }
    dend_43 { pt3dadd( -102.701, 109.578, 151.409, 0.83 ) }
    dend_43 { pt3dadd( -103.63, 111.163, 153.298, 0.28 ) }
    dend_43 { pt3dadd( -103.809, 111.627, 153.778, 0.55 ) }
    dend_43 { pt3dadd( -104.159, 113.567, 155.609, 0.28 ) }
    dend_43 { pt3dadd( -104.134, 114.516, 156.361, 0.28 ) }
    dend_43 { pt3dadd( -103.931, 116.472, 157.846, 1.11 ) }
    dend_43 { pt3dadd( -103.098, 120.934, 160.636, 0.28 ) }
    dend_43 { pt3dadd( -102.873, 121.678, 160.975, 0.55 ) }
    dend_43 { pt3dadd( -102.428, 122.888, 161.394, 0.28 ) }
    dend_43 { pt3dadd( -102.219, 123.311, 161.471, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 40/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -80.0926, 90.282, 107.742, 0.28 ) }
    dend_42 { pt3dadd( -83.2136, 96.9493, 105.961, 0.28 ) }
    dend_42 { pt3dadd( -84.7002, 99.6983, 105.332, 0.28 ) }
    dend_42 { pt3dadd( -85.5534, 101.167, 105.043, 0.28 ) }
    dend_42 { pt3dadd( -86.9934, 103.661, 104.322, 0.83 ) }
    dend_42 { pt3dadd( -88.7464, 106.829, 103.32, 0.28 ) }
    dend_42 { pt3dadd( -89.0516, 107.484, 103.061, 0.55 ) }
    dend_42 { pt3dadd( -90.399, 110.596, 101.75, 0.28 ) }
    dend_42 { pt3dadd( -91.1536, 112.453, 100.806, 0.55 ) }
    dend_42 { pt3dadd( -92.7544, 117.01, 98.2076, 0.28 ) }
    dend_42 { pt3dadd( -93.2088, 118.809, 97.051, 0.83 ) }
    dend_42 { pt3dadd( -93.8348, 123.611, 93.6875, 0.28 ) }
    dend_42 { pt3dadd( -93.8806, 124.514, 92.9924, 0.83 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 53/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 39.3395, 107.473, -55.3609, 0.28 ) }
    dend_33 { pt3dadd( 40.0786, 114.186, -61.2325, 0.28 ) }
    dend_33 { pt3dadd( 40.3897, 121.286, -66.6426, 0.28 ) }
    dend_33 { pt3dadd( 39.2463, 128.668, -71.4944, 0.28 ) }
    dend_33 { pt3dadd( 38.06, 136.608, -75.3028, 0.28 ) }
    dend_33 { pt3dadd( 35.7952, 143.973, -79.752, 0.28 ) }
    dend_33 { pt3dadd( 32.4337, 150.136, -85.2797, 0.28 ) }
    dend_33 { pt3dadd( 30.2517, 157.522, -89.7373, 0.28 ) }
    dend_33 { pt3dadd( 29.3275, 165.051, -94.3984, 0.28 ) }
    dend_33 { pt3dadd( 29.12, 172.442, -99.3812, 0.28 ) }
    dend_33 { pt3dadd( 27.3828, 179.107, -105.064, 0.28 ) }
    dend_33 { pt3dadd( 25.5536, 184.654, -111.87, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 65/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 39.3395, 107.473, -55.3609, 1.11 ) }
    dend_32 { pt3dadd( 40.1891, 114.829, -61.8133, 0.28 ) }
    dend_32 { pt3dadd( 41.8291, 123.499, -66.0262, 0.28 ) }
    dend_32 { pt3dadd( 44.3233, 131.424, -71.2494, 0.28 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 69/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 125.505, 91.4486, -34.6837, 0.28 ) }
    dend_29 { pt3dadd( 134.163, 96.9476, -39.1047, 0.28 ) }
    dend_29 { pt3dadd( 143.914, 100.359, -43.4688, 0.28 ) }
    dend_29 { pt3dadd( 153.364, 104.309, -48.0137, 0.28 ) }
    dend_29 { pt3dadd( 162.362, 108.221, -53.4259, 0.28 ) }
    dend_29 { pt3dadd( 170.828, 114.063, -57.7549, 0.28 ) }
    dend_29 { pt3dadd( 178.181, 120.408, -63.2201, 0.28 ) }
    dend_29 { pt3dadd( 185.725, 126.594, -68.6161, 0.28 ) }
    dend_29 { pt3dadd( 192.217, 131.378, -76.3692, 0.28 ) }
    dend_29 { pt3dadd( 199.201, 136.417, -83.4999, 0.28 ) }
    dend_29 { pt3dadd( 206.382, 141.649, -90.2775, 0.28 ) }
    dend_29 { pt3dadd( 214.026, 146.975, -96.4469, 0.28 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 81/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 125.505, 91.4486, -34.6837, 1.11 ) }
    dend_28 { pt3dadd( 131.626, 94.6099, -37.1616, 0.28 ) }
    dend_28 { pt3dadd( 137.227, 98.331, -40.0141, 0.28 ) }
    dend_28 { pt3dadd( 142.289, 102.78, -42.7692, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 85/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 94.4731, 96.7519, 41.7364, 1.11 ) }
    dend_26 { pt3dadd( 96.5724, 97.8516, 43.0584, 1.11 ) }
    dend_26 { pt3dadd( 98.2501, 98.8077, 44.0126, 0.55 ) }
    dend_26 { pt3dadd( 99.4688, 99.5613, 44.4809, 0.83 ) }
    dend_26 { pt3dadd( 101.119, 100.664, 45.0019, 0.28 ) }
    dend_26 { pt3dadd( 103.99, 102.693, 45.7592, 1.38 ) }
    dend_26 { pt3dadd( 107.46, 105.238, 46.564, 0.55 ) }
    dend_26 { pt3dadd( 110.112, 107.191, 47.206, 1.38 ) }
    dend_26 { pt3dadd( 114.013, 110.012, 48.0874, 0.28 ) }
    dend_26 { pt3dadd( 115.001, 110.681, 48.3291, 0.55 ) }
    dend_26 { pt3dadd( 117.442, 112.244, 48.989, 0.28 ) }
    dend_26 { pt3dadd( 119.607, 113.521, 49.6437, 0.83 ) }
    dend_26 { pt3dadd( 125.139, 116.535, 51.6899, 0.28 ) }
    dend_26 { pt3dadd( 127.26, 117.579, 52.6559, 1.11 ) }
    dend_26 { pt3dadd( 130.363, 118.986, 54.3295, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_26 { pt3dadd( 132.848, 120.019, 55.7306, 0.83 ) }
    dend_26 { pt3dadd( 134.828, 120.78, 56.9304, 0.28 ) }
    dend_26 { pt3dadd( 136.013, 121.199, 57.6486, 0.55 ) }
    dend_26 { pt3dadd( 137.073, 121.547, 58.2624, 0.28 ) }
    dend_26 { pt3dadd( 138.216, 121.931, 58.9007, 0.83 ) }
    dend_26 { pt3dadd( 140.1, 122.567, 59.8776, 0.28 ) }
    dend_26 { pt3dadd( 141.163, 122.885, 60.4288, 0.83 ) }
    dend_26 { pt3dadd( 142.903, 123.363, 61.3257, 0.28 ) }
    dend_26 { pt3dadd( 144.373, 123.74, 62.0996, 0.55 ) }
    dend_26 { pt3dadd( 146.747, 124.315, 63.2789, 0.28 ) }
    dend_26 { pt3dadd( 147.999, 124.603, 63.901, 0.83 ) }
    dend_26 { pt3dadd( 150.371, 125.229, 64.9957, 0.28 ) }
    dend_26 { pt3dadd( 151.491, 125.549, 65.4377, 1.11 ) }
    dend_26 { pt3dadd( 155.06, 126.676, 66.7007, 0.28 ) }
    dend_26 { pt3dadd( 156.354, 127.103, 67.0803, 0.28 ) }
    dend_26 { pt3dadd( 159.143, 128.069, 67.7909, 0.83 ) }
    dend_26 { pt3dadd( 163.036, 129.57, 68.7434, 0.28 ) }
    dend_26 { pt3dadd( 165.425, 130.77, 69.6809, 0.83 ) }
    dend_26 { pt3dadd( 167.215, 131.892, 70.7628, 0.28 ) }
    dend_26 { pt3dadd( 167.974, 132.477, 71.4103, 0.83 ) }
    dend_26 { pt3dadd( 169.425, 133.77, 73.1126, 0.28 ) }
    dend_26 { pt3dadd( 170.001, 134.358, 74.0494, 0.83 ) }
    dend_26 { pt3dadd( 173.323, 138.159, 81.4331, 0.28 ) }
    dend_26 { pt3dadd( 173.898, 138.872, 83.0167, 0.55 ) }
    dend_26 { pt3dadd( 174.185, 139.218, 83.9197, 0.83 ) }
    dend_26 { pt3dadd( 174.823, 139.952, 86.2306, 0.28 ) }
    dend_26 { pt3dadd( 175.363, 140.544, 88.2945, 0.83 ) }
    dend_26 { pt3dadd( 176.232, 141.385, 91.6331, 0.28 ) }
    dend_26 { pt3dadd( 176.959, 141.891, 94.1956, 0.83 ) }
    dend_26 { pt3dadd( 178.326, 142.858, 99.3441, 0.28 ) }
    dend_26 { pt3dadd( 179.475, 143.702, 104.085, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 31/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 94.4731, 96.7519, 41.7364, 0.28 ) }
    dend_25 { pt3dadd( 96.3128, 95.5858, 41.7053, 0.28 ) }
    dend_25 { pt3dadd( 97.0541, 95.1199, 41.7216, 0.55 ) }
    dend_25 { pt3dadd( 102.215, 91.9739, 42.1621, 0.28 ) }
    dend_25 { pt3dadd( 103.726, 91.0964, 42.3998, 1.11 ) }
    dend_25 { pt3dadd( 105.381, 90.172, 42.7443, 0.28 ) }
    dend_25 { pt3dadd( 105.934, 89.8709, 42.8875, 0.55 ) }
    dend_25 { pt3dadd( 107.405, 89.1313, 43.4304, 0.28 ) }
    dend_25 { pt3dadd( 109.34, 88.1802, 44.2533, 1.66 ) }
    dend_25 { pt3dadd( 111.371, 87.2286, 45.3331, 0.28 ) }
    dend_25 { pt3dadd( 111.902, 86.9971, 45.6036, 0.83 ) }
    dend_25 { pt3dadd( 113.368, 86.3756, 46.3673, 0.28 ) }
    dend_25 { pt3dadd( 114.174, 86.0268, 46.7595, 0.83 ) }
    dend_25 { pt3dadd( 118.59, 84.0312, 48.7494, 0.28 ) }
    dend_25 { pt3dadd( 120.155, 83.3154, 49.4487, 1.11 ) }
    dend_25 { pt3dadd( 123.153, 81.9549, 50.8284, 0.28 ) }
    dend_25 { pt3dadd( 124.094, 81.5291, 51.2906, 0.83 ) }
    dend_25 { pt3dadd( 126.28, 80.561, 52.4427, 0.28 ) }
    dend_25 { pt3dadd( 126.808, 80.339, 52.7456, 0.83 ) }
    dend_25 { pt3dadd( 128.561, 79.6332, 53.7945, 0.28 ) }
    dend_25 { pt3dadd( 129.635, 79.1967, 54.4244, 0.83 ) }
    dend_25 { pt3dadd( 131.029, 78.655, 55.2669, 0.28 ) }
    dend_25 { pt3dadd( 131.74, 78.4251, 55.6907, 0.83 ) }
    dend_25 { pt3dadd( 138.708, 76.5352, 59.9154, 0.28 ) }
    dend_25 { pt3dadd( 139.742, 76.2981, 60.5257, 0.55 ) }
    dend_25 { pt3dadd( 141.488, 75.9722, 61.5235, 0.28 ) }
    dend_25 { pt3dadd( 143.215, 75.6771, 62.48, 1.11 ) }
    dend_25 { pt3dadd( 147.357, 75.1197, 64.741, 0.28 ) }
    dend_25 { pt3dadd( 148.306, 75.0417, 65.2831, 0.83 ) }
    dend_25 { pt3dadd( 149.179, 75.1255, 65.8485, 0.28 ) }
    dend_25 { pt3dadd( 149.909, 75.2317, 66.3534, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 62/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 62.751, 152.384, 3.15478, 0.55 ) }
    dend_21 { pt3dadd( 62.9013, 153.045, 3.37568, 0.55 ) }
    dend_21 { pt3dadd( 63.4765, 155.298, 4.1167, 0.83 ) }
    dend_21 { pt3dadd( 64.0466, 157.506, 4.84663, 0.55 ) }
    dend_21 { pt3dadd( 64.5286, 160.021, 5.60419, 0.83 ) }
    dend_21 { pt3dadd( 64.799, 161.537, 5.99099, 0.55 ) }
    dend_21 { pt3dadd( 65.1885, 163.849, 6.53847, 0.83 ) }
    dend_21 { pt3dadd( 65.4167, 165.096, 6.82192, 0.55 ) }
    dend_21 { pt3dadd( 65.7682, 166.801, 7.17245, 1.11 ) }
    dend_21 { pt3dadd( 66.4195, 169.813, 7.30801, 1.11 ) }
    dend_21 { pt3dadd( 66.7998, 171.912, 7.04654, 0.55 ) }
    dend_21 { pt3dadd( 66.8938, 172.52, 6.89242, 0.83 ) }
    dend_21 { pt3dadd( 67.0587, 173.491, 6.47898, 0.55 ) }
    dend_21 { pt3dadd( 67.306, 175.124, 5.61809, 0.83 ) }
    dend_21 { pt3dadd( 68.0378, 180.383, 2.23526, 0.55 ) }
    dend_21 { pt3dadd( 68.3708, 182.974, 0.343677, 0.55 ) }
    dend_21 { pt3dadd( 68.4791, 184.256, -0.645616, 0.83 ) }
    dend_21 { pt3dadd( 68.6546, 187.311, -3.08943, 0.55 ) }
    dend_21 { pt3dadd( 68.6829, 188.576, -4.13077, 0.83 ) }
    dend_21 { pt3dadd( 68.6776, 190.071, -5.32989, 0.28 ) }
    dend_21 { pt3dadd( 68.6655, 190.366, -5.47075, 0.55 ) }
    dend_21 { pt3dadd( 68.6874, 191.049, -5.70048, 0.28 ) }
    dend_21 { pt3dadd( 68.7288, 191.716, -5.84079, 0.55 ) }
    dend_21 { pt3dadd( 68.8508, 193.047, -5.93481, 0.28 ) }
    dend_21 { pt3dadd( 69.017, 194.475, -6.02563, 0.83 ) }
    dend_21 { pt3dadd( 69.5363, 198.882, -6.2315, 0.28 ) }
    dend_21 { pt3dadd( 69.7073, 200.224, -6.29696, 0.83 ) }
    dend_21 { pt3dadd( 69.8696, 201.51, -6.36213, 0.28 ) }
    dend_21 { pt3dadd( 69.9684, 202.222, -6.39824, 0.55 ) }
    dend_21 { pt3dadd( 70.2914, 204.295, -6.47733, 0.28 ) }
    dend_21 { pt3dadd( 70.461, 205.21, -6.51514, 0.55 ) }
    dend_21 { pt3dadd( 71.3303, 209.592, -6.57337, 0.28 ) }
    dend_21 { pt3dadd( 71.4569, 210.262, -6.54546, 0.28 ) }
    dend_21 { pt3dadd( 71.8621, 212.598, -6.34755, 0.83 ) }
    dend_21 { pt3dadd( 72.2025, 214.775, -6.10314, 1.11 ) }
    dend_21 { pt3dadd( 72.4898, 216.691, -5.8231, 1.66 ) }
    dend_21 { pt3dadd( 72.8993, 220.013, -5.33839, 1.38 ) }
    dend_21 { pt3dadd( 73.0943, 222.044, -5.02765, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_21 { pt3dadd( 73.2475, 223.982, -4.74606, 1.38 ) }
    dend_21 { pt3dadd( 73.5629, 229.916, -4.00344, 0.28 ) }
    dend_21 { pt3dadd( 73.5873, 230.892, -3.90251, 0.55 ) }
    dend_21 { pt3dadd( 73.6325, 233.008, -3.7549, 0.28 ) }
    dend_21 { pt3dadd( 73.6572, 233.9, -3.74328, 0.55 ) }
    dend_21 { pt3dadd( 73.7188, 236.867, -3.7858, 0.28 ) }
    dend_21 { pt3dadd( 73.7958, 239.834, -4.01651, 0.83 ) }
    dend_21 { pt3dadd( 73.8897, 243.829, -4.54436, 0.28 ) }
    dend_21 { pt3dadd( 73.9374, 246.086, -5.02303, 1.11 ) }
    dend_21 { pt3dadd( 73.9823, 248.319, -5.64304, 0.28 ) }
    dend_21 { pt3dadd( 73.9968, 249.5, -6.17311, 0.83 ) }
    dend_21 { pt3dadd( 74.0166, 251.924, -7.66864, 0.28 ) }
    dend_21 { pt3dadd( 74.0211, 252.382, -8.01172, 0.83 ) }
    dend_21 { pt3dadd( 74.0369, 254.924, -10.3469, 0.28 ) }
    dend_21 { pt3dadd( 74.0196, 255.595, -11.0205, 1.11 ) }
    dend_21 { pt3dadd( 73.9089, 259.589, -15.3867, 0.28 ) }
    dend_21 { pt3dadd( 73.8845, 260.503, -16.4701, 0.83 ) }
    dend_21 { pt3dadd( 73.2013, 268.165, -19.414, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 18/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 62.751, 152.384, 3.15478, 0.83 ) }
    dend_18 { pt3dadd( 64.3976, 155.593, 2.38339, 0.83 ) }
    dend_18 { pt3dadd( 66.034, 158.856, 1.10632, 0.83 ) }
    dend_18 { pt3dadd( 67.0753, 160.931, 0.293742, 0.55 ) }
    dend_18 { pt3dadd( 67.8567, 162.489, -0.31605, 0.55 ) }
    dend_18 { pt3dadd( 69.4045, 165.575, -1.52397, 0.55 ) }
    dend_18 { pt3dadd( 70.5615, 167.882, -2.42689, 0.83 ) }
    dend_18 { pt3dadd( 72.2607, 171.075, -4.41886, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 26/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 78.4559, 134.549, -42.2741, 0.28 ) }
    dend_14 { pt3dadd( 79.9548, 137.163, -52.2094, 0.28 ) }
    dend_14 { pt3dadd( 79.799, 141.485, -61.6152, 0.28 ) }
    dend_14 { pt3dadd( 78.231, 147.106, -70.1296, 0.28 ) }
    dend_14 { pt3dadd( 74.6149, 150.916, -79.069, 0.28 ) }
    dend_14 { pt3dadd( 68.4173, 154.079, -86.7749, 0.28 ) }
    dend_14 { pt3dadd( 62.9769, 156.57, -95.2692, 0.28 ) }
    dend_14 { pt3dadd( 57.3907, 159.999, -103.315, 0.28 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 34/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 78.4559, 134.549, -42.2741, 1.11 ) }
    dend_13 { pt3dadd( 85.4384, 135.842, -48.1927, 0.28 ) }
    dend_13 { pt3dadd( 93.1588, 137.613, -52.9536, 0.28 ) }
    dend_13 { pt3dadd( 101.445, 138.484, -56.9812, 0.28 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 38/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 110.568, 144.786, -4.27786, 0.28 ) }
    dend_7 { pt3dadd( 116.952, 150.197, -5.7915, 0.28 ) }
    dend_7 { pt3dadd( 123.82, 155.208, -6.33821, 0.28 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 41/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 110.568, 144.786, -4.27786, 0.28 ) }
    dend_6 { pt3dadd( 117.624, 150.508, -5.52687, 0.28 ) }
    dend_6 { pt3dadd( 124.963, 155.919, -6.59011, 0.28 ) }
    dend_6 { pt3dadd( 131.56, 161.901, -8.70958, 0.28 ) }
    dend_6 { pt3dadd( 138.189, 167.335, -11.9519, 0.28 ) }
    dend_6 { pt3dadd( 145.236, 172.789, -14.1222, 0.28 ) }
    dend_6 { pt3dadd( 151.482, 179.154, -16.1318, 0.28 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 48/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 72.2607, 171.075, -4.41886, 0.55 ) }
    dend_20 { pt3dadd( 74.4658, 173.948, -7.49051, 0.55 ) }
    dend_20 { pt3dadd( 75.6378, 175.323, -8.7502, 0.55 ) }
    dend_20 { pt3dadd( 79.7613, 179.574, -12.5947, 0.55 ) }
    dend_20 { pt3dadd( 82.0032, 181.619, -14.6785, 0.55 ) }
    dend_20 { pt3dadd( 84.3881, 183.634, -16.8231, 0.28 ) }
    dend_20 { pt3dadd( 87.618, 186.25, -19.5631, 0.28 ) }
    dend_20 { pt3dadd( 90.1093, 188.094, -21.4678, 0.83 ) }
    dend_20 { pt3dadd( 92.4863, 189.704, -23.0995, 0.83 ) }
    dend_20 { pt3dadd( 96.8229, 192.311, -25.5062, 0.28 ) }
    dend_20 { pt3dadd( 98.2269, 193.036, -26.4555, 0.55 ) }
    dend_20 { pt3dadd( 100.18, 194.014, -28.0298, 0.55 ) }
    dend_20 { pt3dadd( 101.667, 194.723, -29.3955, 0.55 ) }
    dend_20 { pt3dadd( 103.313, 195.533, -31.0333, 0.55 ) }
    dend_20 { pt3dadd( 105.617, 196.713, -33.3751, 0.55 ) }
    dend_20 { pt3dadd( 111.373, 199.654, -39.3424, 0.55 ) }
    dend_20 { pt3dadd( 112.725, 200.327, -40.8646, 0.55 ) }
    dend_20 { pt3dadd( 116.037, 201.906, -44.9123, 0.28 ) }
    dend_20 { pt3dadd( 117.935, 202.815, -47.3342, 0.83 ) }
    dend_20 { pt3dadd( 126.765, 207.395, -52.8017, 0.83 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 68/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 72.2607, 171.075, -4.41886, 0.28 ) }
    dend_19 { pt3dadd( 71.2899, 172.892, -5.28343, 0.28 ) }
    dend_19 { pt3dadd( 70.5929, 174.257, -5.99401, 0.55 ) }
    dend_19 { pt3dadd( 69.4085, 176.608, -7.219, 0.28 ) }
    dend_19 { pt3dadd( 68.2382, 179.083, -8.56371, 0.83 ) }
    dend_19 { pt3dadd( 67.3891, 181.034, -9.65122, 0.28 ) }
    dend_19 { pt3dadd( 66.7385, 182.672, -10.5887, 0.55 ) }
    dend_19 { pt3dadd( 66.3696, 183.677, -11.1991, 0.28 ) }
    dend_19 { pt3dadd( 66.251, 184.147, -11.5076, 0.83 ) }
    dend_19 { pt3dadd( 65.9147, 185.669, -12.6369, 0.28 ) }
    dend_19 { pt3dadd( 65.7941, 186.289, -13.0652, 0.55 ) }
    dend_19 { pt3dadd( 65.5634, 187.431, -13.8213, 0.28 ) }
    dend_19 { pt3dadd( 65.4507, 187.941, -14.142, 0.55 ) }
    dend_19 { pt3dadd( 64.6559, 191.166, -16.2373, 0.28 ) }
    dend_19 { pt3dadd( 64.1748, 192.967, -17.4222, 0.55 ) }
    dend_19 { pt3dadd( 63.5894, 194.816, -18.601, 0.28 ) }
    dend_19 { pt3dadd( 63.2089, 195.87, -19.2737, 0.55 ) }
    dend_19 { pt3dadd( 61.5666, 204.864, -25.4785, 0.55 ) }
    dend_19 { pt3dadd( 59.9369, 214.135, -31.2445, 0.55 ) }
    dend_19 { pt3dadd( 58.0661, 224.401, -34.7423, 0.55 ) }
    dend_19 { pt3dadd( 57.3842, 234.371, -39.3642, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 89/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 57.3907, 159.999, -103.315, 0.28 ) }
    dend_16 { pt3dadd( 54.5396, 163.401, -110.963, 0.28 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 91/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 57.3907, 159.999, -103.315, 0.28 ) }
    dend_15 { pt3dadd( 54.4855, 163.508, -112.176, 0.28 ) }
    dend_15 { pt3dadd( 53.3831, 168.733, -120.537, 0.28 ) }
    dend_15 { pt3dadd( 53.2839, 174.037, -128.916, 0.28 ) }
    dend_15 { pt3dadd( 51.6366, 179.942, -136.694, 0.28 ) }
    dend_15 { pt3dadd( 48.7592, 185.798, -144.151, 0.28 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 97/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 123.82, 155.208, -6.33821, 0.28 ) }
    dend_9 { pt3dadd( 127.994, 160.039, -12.0318, 0.28 ) }
    dend_9 { pt3dadd( 132.89, 165.187, -16.7745, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 0/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 123.82, 155.208, -6.33821, 0.28 ) }
    dend_8 { pt3dadd( 134.118, 162.22, -4.08504, 0.28 ) }
    dend_8 { pt3dadd( 144.593, 168.333, -0.384679, 0.28 ) }
    dend_8 { pt3dadd( 155.971, 172.191, 3.83003, 0.28 ) }
    dend_8 { pt3dadd( 168.26, 173.328, 7.11402, 0.28 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_52, dend_35, dend_0, dend_62, dend_53, dend_37, dend_36, dend_2, dend_1, dend_64, dend_63, dend_61, dend_54, dend_45, dend_38, dend_22, dend_3, dend_60, dend_55, dend_49, dend_46, dend_40, dend_39, dend_30, dend_23, dend_11, dend_4, dend_59, dend_56, dend_51, dend_50, dend_48, dend_47, dend_44, dend_41, dend_34, dend_31, dend_27, dend_24, dend_17, dend_12, dend_10, dend_5, dend_58, dend_57, dend_43, dend_42, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25, dend_21, dend_18, dend_14, dend_13, dend_7, dend_6, dend_20, dend_19, dend_16, dend_15, dend_9, dend_8]}
    ModelViewParmSubset_2 = new SectionList()
    dend_52 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_52, dend_35, dend_0, dend_62, dend_53, dend_37, dend_36, dend_2, dend_1, dend_64, dend_63, dend_61, dend_54, dend_45, dend_38, dend_22, dend_3, dend_60, dend_55, dend_49, dend_46, dend_40, dend_39, dend_30, dend_23, dend_11, dend_4, dend_59, dend_56, dend_51, dend_50, dend_48, dend_47, dend_44, dend_41, dend_34, dend_31, dend_27, dend_24, dend_17, dend_12, dend_10, dend_5, dend_58, dend_57, dend_43, dend_42, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25, dend_21, dend_18, dend_14, dend_13, dend_7, dend_6, dend_20, dend_19, dend_16, dend_15, dend_9, dend_8]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_52, dend_35, dend_0, axon_0, dend_62, dend_53, dend_37, dend_36, dend_2, dend_1, axon_1, dend_64, dend_63, dend_61, dend_54, dend_45, dend_38, dend_22, dend_3, dend_60, dend_55, dend_49, dend_46, dend_40, dend_39, dend_30, dend_23, dend_11, dend_4, dend_59, dend_56, dend_51, dend_50, dend_48, dend_47, dend_44, dend_41, dend_34, dend_31, dend_27, dend_24, dend_17, dend_12, dend_10, dend_5, dend_58, dend_57, dend_43, dend_42, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25, dend_21, dend_18, dend_14, dend_13, dend_7, dend_6, dend_20, dend_19, dend_16, dend_15, dend_9, dend_8]}
    ModelViewParmSubset_5 = new SectionList()
    dend_52 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_15 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_36 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_64 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_63 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_61 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_3 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_60 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_49 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_46 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_40 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_39 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_4 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_59 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_50 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_48 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_47 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_44 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_41 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_34 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_31 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_27 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_24 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_12 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_10 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_57 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_43 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_42 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_33 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_29 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_26 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_25 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_21 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_14 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_6 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_20 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_19 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_15 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_8 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_35 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_52 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_37 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_62 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_53 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_38 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_2 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_22 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_54 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_23 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_30 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_55 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_56 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_11 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_58 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_17 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_32 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_28 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_18 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_51 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_5 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_7 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_13 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_9 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_16 OneSecGrp_SectionRef_65.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_52, dend_52, dend_35, dend_35, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_53, dend_53, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_45, dend_45, dend_45, dend_45, dend_45, dend_38, dend_38, dend_22, dend_22, dend_22, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_56, dend_56, dend_56, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_5, dend_5, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_62 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 7.43567E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_36 nseg = 13
    dend_1 nseg = 15
    dend_64 nseg = 7
    dend_63 nseg = 9
    dend_61 nseg = 3
    dend_3 nseg = 3
    dend_60 nseg = 9
    dend_49 nseg = 7
    dend_46 nseg = 5
    dend_40 nseg = 5
    dend_39 nseg = 5
    dend_4 nseg = 3
    dend_59 nseg = 5
    dend_50 nseg = 3
    dend_48 nseg = 3
    dend_47 nseg = 3
    dend_44 nseg = 3
    dend_41 nseg = 3
    dend_34 nseg = 3
    dend_31 nseg = 3
    dend_27 nseg = 5
    dend_24 nseg = 5
    dend_12 nseg = 3
    dend_10 nseg = 3
    dend_57 nseg = 3
    dend_43 nseg = 3
    dend_42 nseg = 3
    dend_33 nseg = 5
    dend_29 nseg = 7
    dend_26 nseg = 7
    dend_25 nseg = 3
    dend_21 nseg = 7
    dend_14 nseg = 3
    dend_6 nseg = 3
    dend_20 nseg = 5
    dend_19 nseg = 3
    dend_15 nseg = 3
    dend_8 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cIR216_L5_NBC_650c18e6aa_0_0


